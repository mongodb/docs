# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: 2013-12-16 22:38+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/tutorial/query-documents.txt:9
msgid "Query Documents"
msgstr ""

#: ../source/tutorial/query-documents.txt:26
msgid "Select All Documents in a Collection"
msgstr ""

#: ../source/tutorial/query-documents.txt:32
#: ../source/tutorial/query-documents.txt:109
msgid "This operation corresponds to the following SQL statement:"
msgstr ""

#: ../source/tutorial/query-documents.txt:100
msgid "Specify Equality Condition"
msgstr ""

#: ../source/tutorial/query-documents.txt:104
msgid ""
"The following example selects from the ``inventory`` collection all "
"documents where the ``status`` equals ``\"D\"``:"
msgstr ""

#: ../source/tutorial/query-documents.txt:127
msgid "Specify Conditions Using Query Operators"
msgstr ""

#: ../source/tutorial/query-documents.txt:131
msgid ""
"The following example retrieves all documents from the ``inventory`` "
"collection where ``status`` equals either ``\"A\"`` or ``\"D\"``:"
msgstr ""

#: ../source/tutorial/query-documents.txt:138
msgid ""
"Although you can express this query using the :query:`$or` operator, use "
"the :query:`$in` operator rather than the :query:`$or` operator when "
"performing equality checks on the same field."
msgstr ""

#: ../source/tutorial/query-documents.txt:142
#: ../source/tutorial/query-documents.txt:165
#: ../source/tutorial/query-documents.txt:188
#: ../source/tutorial/query-documents.txt:208
msgid "The operation corresponds to the following SQL statement:"
msgstr ""

#: ../source/tutorial/query-documents.txt:148
msgid ""
"Refer to the :doc:`/reference/operator/query` document for the complete "
"list of MongoDB query operators."
msgstr ""

#: ../source/tutorial/query-documents.txt:152
msgid "Specify ``AND`` Conditions"
msgstr ""

#: ../source/tutorial/query-documents.txt:154
msgid ""
"A compound query can specify conditions for more than one field in the "
"collection's documents. Implicitly, a logical ``AND`` conjunction "
"connects the clauses of a compound query so that the query selects the "
"documents in the collection that match all the conditions."
msgstr ""

#: ../source/tutorial/query-documents.txt:159
msgid ""
"The following example retrieves all documents in the ``inventory`` "
"collection where the ``status`` equals ``\"A\"`` **and** ``qty`` is less "
"than (:query:`$lt`) ``30``:"
msgstr ""

#: ../source/tutorial/query-documents.txt:171
msgid ""
"See :ref:`comparison operators <query-selectors-comparison>` for other "
"MongoDB comparison operators."
msgstr ""

#: ../source/tutorial/query-documents.txt:175
msgid "Specify ``OR`` Conditions"
msgstr ""

#: ../source/tutorial/query-documents.txt:177
msgid ""
"Using the :query:`$or` operator, you can specify a compound query that "
"joins each clause with a logical ``OR`` conjunction so that the query "
"selects the documents in the collection that match at least one "
"condition."
msgstr ""

#: ../source/tutorial/query-documents.txt:182
msgid ""
"The following example retrieves all documents in the collection where the"
" ``status`` equals ``\"A\"`` **or** ``qty`` is less than (:query:`$lt`) "
"``30``:"
msgstr ""

#: ../source/tutorial/query-documents.txt:195
msgid ""
"Queries which use :ref:`comparison operators <query-selectors-"
"comparison>` are subject to :ref:`type-bracketing`."
msgstr ""

#: ../source/tutorial/query-documents.txt:199
msgid "Specify ``AND`` as well as ``OR`` Conditions"
msgstr ""

#: ../source/tutorial/query-documents.txt:201
msgid ""
"In the following example, the compound query document selects all "
"documents in the collection where the ``status`` equals ``\"A\"`` **and**"
" *either* ``qty`` is less than (:query:`$lt`) ``30`` *or* ``item`` starts"
" with the character ``p``:"
msgstr ""

#: ../source/tutorial/query-documents.txt:216
msgid ""
"MongoDB supports regular expressions :query:`$regex` queries to perform "
"string pattern matches."
msgstr ""

#: ../source/tutorial/query-documents.txt:220
msgid "Additional Query Tutorials"
msgstr ""

#: ../source/tutorial/query-documents.txt:222
msgid "For additional query examples, see:"
msgstr ""

#: ../source/tutorial/query-documents.txt:224
msgid ":doc:`/tutorial/query-embedded-documents`"
msgstr ""

#: ../source/tutorial/query-documents.txt:226
msgid ":doc:`/tutorial/query-arrays`"
msgstr ""

#: ../source/tutorial/query-documents.txt:228
msgid ":doc:`/tutorial/query-array-of-documents`"
msgstr ""

#: ../source/tutorial/query-documents.txt:230
msgid ":doc:`/tutorial/project-fields-from-query-results`"
msgstr ""

#: ../source/tutorial/query-documents.txt:232
msgid ":doc:`/tutorial/query-for-null-fields`"
msgstr ""

#: ../source/tutorial/query-documents.txt:235
msgid "Behavior"
msgstr ""

#: ../source/tutorial/query-documents.txt:238
msgid "Cursor"
msgstr ""

#: ../source/tutorial/query-documents.txt:323
msgid "Read Isolation"
msgstr ""

#: ../source/tutorial/query-documents.txt:327
msgid ""
"For reads to :doc:`replica sets </replication>` and replica set "
":doc:`shards </sharding>`, read concern allows clients to choose a level "
"of isolation for their reads. For more information, see :doc:`/reference"
"/read-concern`."
msgstr ""

#~ msgid ""
#~ "In the following example, the query "
#~ "document specifies an equality match on"
#~ " the field ``food`` **and** a less"
#~ " than (:query:`$lt`) comparison match on"
#~ " the field ``price``:"
#~ msgstr ""

#~ msgid "Subdocuments"
#~ msgstr ""

#~ msgid ""
#~ "When the field holds an embedded "
#~ "document (i.e. subdocument), you can "
#~ "either specify the entire subdocument as"
#~ " the value of a field, or "
#~ "\"reach into\" the subdocument using "
#~ ":term:`dot notation`, to specify values "
#~ "for individual fields in the "
#~ "subdocument:"
#~ msgstr ""

#~ msgid "Exact Match on Subdocument"
#~ msgstr ""

#~ msgid ""
#~ "To specify an equality match on "
#~ "the whole subdocument, use the query "
#~ "document ``{ <field>: <value> }`` where"
#~ " ``<value>`` is the subdocument to "
#~ "match. Equality matches on a subdocument"
#~ " require that the subdocument field "
#~ "match *exactly* the specified ``<value>``, "
#~ "including the field order."
#~ msgstr ""

#~ msgid ""
#~ "In the following example, the query "
#~ "matches all documents where the value"
#~ " of the field ``producer`` is a "
#~ "subdocument that contains *only* the "
#~ "field ``company`` with the value "
#~ "``'ABC123'`` and the field ``address`` "
#~ "with the value ``'123 Street'``, in "
#~ "the exact order:"
#~ msgstr ""

#~ msgid "Equality Match on Fields within Subdocument"
#~ msgstr ""

#~ msgid ""
#~ "Equality matches for specific fields "
#~ "within subdocuments select the documents "
#~ "in the collection when the field "
#~ "in the subdocument contains a field "
#~ "that matches the specified value."
#~ msgstr ""

#~ msgid ""
#~ "In the following example, the query "
#~ "uses the :term:`dot notation` to match"
#~ " all documents where the value of "
#~ "the field ``producer`` is a subdocument"
#~ " that contains a field ``company`` "
#~ "with the value ``'ABC123'`` and may "
#~ "contain other fields:"
#~ msgstr ""

#~ msgid ""
#~ "When the field holds an array, you"
#~ " can query for an exact array "
#~ "match or for specific values in "
#~ "the array. If the array holds "
#~ "sub-documents, you can query for "
#~ "specific fields within the sub-documents"
#~ " using :term:`dot notation`:"
#~ msgstr ""

#~ msgid ""
#~ "In the following example, the query "
#~ "matches all documents where the value"
#~ " of the field ``tags`` is an "
#~ "array that holds exactly three elements,"
#~ " ``'fruit'``, ``'food'``, and ``'citrus'``, "
#~ "in this order:"
#~ msgstr ""

#~ msgid ""
#~ "In the following example, the query "
#~ "matches all documents where the value"
#~ " of the field ``tags`` is an "
#~ "array that contains ``'fruit'`` as one"
#~ " of its elements:"
#~ msgstr ""

#~ msgid ""
#~ "Equality matches can specify equality "
#~ "matches for an element at a "
#~ "particular index or position of the "
#~ "array."
#~ msgstr ""

#~ msgid ""
#~ "In the following example, the query "
#~ "uses the :term:`dot notation` to match"
#~ " all documents where the value of "
#~ "the ``tags`` field is an array "
#~ "whose first element equals ``'fruit'``:"
#~ msgstr ""

#~ msgid "Array of Subdocuments"
#~ msgstr ""

#~ msgid "Match a Field in the Subdocument Using the Array Index"
#~ msgstr ""

#~ msgid ""
#~ "If you know the array index of "
#~ "the subdocument, you can specify the "
#~ "document using the subdocument's position."
#~ msgstr ""

#~ msgid ""
#~ "The following example selects all "
#~ "documents where the ``memos`` contains "
#~ "an array whose first element (i.e. "
#~ "index is ``0``) is a subdocument "
#~ "with the field ``by`` with the "
#~ "value ``'shipping'``:"
#~ msgstr ""

#~ msgid ""
#~ "If you do not know the index "
#~ "position of the subdocument, concatenate "
#~ "the name of the field that "
#~ "contains the array, with a dot "
#~ "(``.``) and the name of the field"
#~ " in the subdocument."
#~ msgstr ""

#~ msgid ""
#~ "The following example selects all "
#~ "documents where the ``memos`` field "
#~ "contains an array that contains at "
#~ "least one subdocument with the field "
#~ "``by`` with the value ``'shipping'``:"
#~ msgstr ""

#~ msgid "Match Multiple Fields"
#~ msgstr ""

#~ msgid ""
#~ "To match by multiple fields in the"
#~ " subdocument, you can use either dot"
#~ " notation or the :query:`$elemMatch` "
#~ "operator:"
#~ msgstr ""

#~ msgid ""
#~ "The following example uses dot notation"
#~ " to query for documents where the "
#~ "value of the ``memos`` field is an"
#~ " array that has at least one "
#~ "subdocument that contains the field "
#~ "``memo`` equal to ``'on time'`` and "
#~ "the field ``by`` equal to "
#~ "``'shipping'``:"
#~ msgstr ""

#~ msgid ""
#~ "The following example uses :query:`$elemMatch`"
#~ " to query for documents where the "
#~ "value of the ``memos`` field is an"
#~ " array that has at least one "
#~ "subdocument that contains the field "
#~ "``memo`` equal to ``'on time'`` and "
#~ "the field ``by`` equal to "
#~ "``'shipping'``:"
#~ msgstr ""

# 7b5643608cbc44a093070c2632184b84
#~ msgid ""
#~ "In MongoDB, the :method:`db.collection.find()` "
#~ "method retrieves documents from a "
#~ "collection. [#findOne]_ The "
#~ ":method:`db.collection.find()` method returns a "
#~ ":doc:`cursor </core/cursors>` to the retrieved"
#~ " documents."
#~ msgstr ""

# ea04418694f04165bd7d13767118f1e1
#~ msgid ""
#~ "This tutorial provides examples of read"
#~ " operations using the "
#~ ":method:`db.collection.find()` method in the "
#~ ":program:`mongo` shell. In these examples, "
#~ "the retrieved documents contain all "
#~ "their fields. To restrict the fields "
#~ "to return in the retrieved documents,"
#~ " see :doc:`/tutorial/project-fields-from-"
#~ "query-results`."
#~ msgstr ""

# a593220477d54222b8b7526db31aa04a
#~ msgid ""
#~ "The :method:`db.collection.findOne()` method also"
#~ " performs a read operation to return"
#~ " a single document. Internally, the "
#~ ":method:`db.collection.findOne()` method is the "
#~ ":method:`db.collection.find()` method with a "
#~ "limit of 1."
#~ msgstr ""

# a795839ebbed4dd4a0b5fea89d1d3d19
#~ msgid ""
#~ "An empty query document (``{}``) selects"
#~ " all documents in the collection:"
#~ msgstr ""

# 6afc46f447404d17aab6b8d088bacdf9
#~ msgid ""
#~ "Not specifying a query document to "
#~ "the :method:`~db.collection.find()` is equivalent"
#~ " to specifying an empty query "
#~ "document. Therefore the following operation"
#~ " is equivalent to the previous "
#~ "operation:"
#~ msgstr ""

# fd09b8b3eacf4bc5b933edffe9b4f478
#~ msgid ""
#~ "To specify equality condition, use the"
#~ " query document ``{ <field>: <value> "
#~ "}`` to select all documents that "
#~ "contain the ``<field>`` with the "
#~ "specified ``<value>``."
#~ msgstr ""

# 2a621f7fe20f4efcb78d8bb1edad6eb1
#~ msgid ""
#~ "The following example retrieves from the"
#~ " ``inventory`` collection all documents "
#~ "where the ``type`` field has the "
#~ "value ``snacks``:"
#~ msgstr ""

# c0ae495557b441bea434ce7df4b72c90
#~ msgid ""
#~ "A query document can use the "
#~ ":ref:`query operators <query-selectors>` to"
#~ " specify conditions in a MongoDB "
#~ "query."
#~ msgstr ""

# e846488f455b4d448d93aef3b57fb844
#~ msgid ""
#~ "The following example selects all "
#~ "documents in the ``inventory`` collection "
#~ "where the value of the ``type`` "
#~ "field is either ``'food'`` or "
#~ "``'snacks'``:"
#~ msgstr ""

# 32652d48a436434f8528f26b873cc89a
#~ msgid ""
#~ "Refer to the :doc:`/reference/operator` "
#~ "document for the complete list of "
#~ "query operators."
#~ msgstr ""

# d47e1548891746cba6d53d5031b7f5bd
#~ msgid ""
#~ "This query selects all documents where"
#~ " the ``type`` field has the value "
#~ "``'food'`` **and** the value of the "
#~ "``price`` field is less than ``9.95``."
#~ " See :ref:`comparison operators <query-"
#~ "selectors-comparison>` for other comparison "
#~ "operators."
#~ msgstr ""

# ac1ecaea97d6471699bed6c44ac41090
#~ msgid ""
#~ "In the following example, the query "
#~ "document selects all documents in the"
#~ " collection where the field ``qty`` "
#~ "has a value greater than (:query:`$gt`)"
#~ " ``100`` **or** the value of the "
#~ "``price`` field is less than "
#~ "(:query:`$lt`) ``9.95``:"
#~ msgstr ""

# 5266b7be348b4ae58152329174c32d88
#~ msgid ""
#~ "With additional clauses, you can specify"
#~ " precise conditions for matching documents."
#~ msgstr ""

# 03751513f1d943bca7d611ef43516be6
#~ msgid ""
#~ "In the following example, the compound"
#~ " query document selects all documents "
#~ "in the collection where the value "
#~ "of the ``type`` field is ``'food'`` "
#~ "**and** *either* the ``qty`` has a "
#~ "value greater than (:query:`$gt`) ``100`` "
#~ "*or* the value of the ``price`` "
#~ "field is less than (:query:`$lt`) "
#~ "``9.95``:"
#~ msgstr ""

# d6433b5c462149409c5eb598b62519d8
#~ msgid "Arrays"
#~ msgstr ""

# 4acd13a4adf24b3893710b901f8c5d87
#~ msgid "Exact Match on an Array"
#~ msgstr ""

# 9cb67ec58ed3444eb259566febb7944c
#~ msgid ""
#~ "To specify equality match on an "
#~ "array, use the query document ``{ "
#~ "<field>: <value> }`` where ``<value>`` "
#~ "is the array to match. Equality "
#~ "matches on the array require that "
#~ "the array field match *exactly* the "
#~ "specified ``<value>``, including the element"
#~ " order."
#~ msgstr ""

# 651c397b35f048d9896c0cec9fb8ac3f
#~ msgid "Match an Array Element"
#~ msgstr ""

# b159952481764d5794ec263f86390788
#~ msgid ""
#~ "Equality matches can specify a single"
#~ " element in the array to match. "
#~ "These specifications match if the array"
#~ " contains at least *one* element with"
#~ " the specified value."
#~ msgstr ""

# 1f62d4d0d77d4102b3352dcae379885a
#~ msgid "Match a Specific Element of an Array"
#~ msgstr ""

# 90bea507bbc54696904c89a378b849c2
#~ msgid "Match a Field Without Specifying Array Index"
#~ msgstr ""

#~ msgid ""
#~ "In the following example, the query "
#~ "document specifies an equality match on"
#~ " the field ``type`` **and** a less"
#~ " than (:query:`$lt`) comparison match on"
#~ " the field ``price``:"
#~ msgstr ""

#~ msgid "Embedded Documents"
#~ msgstr ""

#~ msgid ""
#~ "When the field holds an embedded "
#~ "document, a query can either specify "
#~ "an exact match on the embedded "
#~ "document or specify a match by "
#~ "individual fields in the embedded "
#~ "document using the :term:`dot notation`."
#~ msgstr ""

#~ msgid "Exact Match on the Embedded Document"
#~ msgstr ""

#~ msgid ""
#~ "To specify an equality match on "
#~ "the whole embedded document, use the "
#~ "query document ``{ <field>: <value> }``"
#~ " where ``<value>`` is the document to"
#~ " match. Equality matches on an "
#~ "embedded document require an *exact* "
#~ "match of the specified ``<value>``, "
#~ "including the field order."
#~ msgstr ""

#~ msgid ""
#~ "In the following example, the query "
#~ "matches all documents where the value"
#~ " of the field ``producer`` is an "
#~ "embedded document that contains *only* "
#~ "the field ``company`` with the value "
#~ "``'ABC123'`` and the field ``address`` "
#~ "with the value ``'123 Street'``, in "
#~ "the exact order:"
#~ msgstr ""

#~ msgid "Equality Match on Fields within an Embedded Document"
#~ msgstr ""

#~ msgid ""
#~ "Use the :term:`dot notation` to match"
#~ " by specific fields in an embedded"
#~ " document. Equality matches for specific"
#~ " fields in an embedded document will"
#~ " select documents in the collection "
#~ "where the embedded document contains the"
#~ " specified fields with the specified "
#~ "values. The embedded document can "
#~ "contain additional fields."
#~ msgstr ""

#~ msgid ""
#~ "In the following example, the query "
#~ "uses the :term:`dot notation` to match"
#~ " all documents where the value of "
#~ "the field ``producer`` is an embedded"
#~ " document that contains a field "
#~ "``company`` with the value ``'ABC123'`` "
#~ "and may contain other fields:"
#~ msgstr ""

#~ msgid ""
#~ "When the field holds an array, you"
#~ " can query for an exact array "
#~ "match or for specific values in "
#~ "the array. If the array holds "
#~ "embedded documents, you can query for"
#~ " specific fields in the embedded "
#~ "documents using :term:`dot notation`."
#~ msgstr ""

#~ msgid ""
#~ "If you specify multiple conditions using"
#~ " the :query:`$elemMatch` operator, the "
#~ "array must contain at least one "
#~ "element that satisfies all the "
#~ "conditions. See :ref:`single-element-"
#~ "satisfies-criteria`."
#~ msgstr ""

#~ msgid ""
#~ "If you specify multiple conditions "
#~ "without using the :query:`$elemMatch` "
#~ "operator, then some combination of the"
#~ " array elements, not necessarily a "
#~ "single element, must satisfy all the "
#~ "conditions; i.e. different elements in "
#~ "the array can satisfy different parts"
#~ " of the conditions. See :ref"
#~ ":`combination-of-elements-satisfies-criteria`."
#~ msgstr ""

#~ msgid ""
#~ "Consider an ``inventory`` collection that "
#~ "contains the following documents:"
#~ msgstr ""

#~ msgid ""
#~ "The following example queries for all"
#~ " documents where the field ``ratings`` "
#~ "is an array that holds exactly "
#~ "three elements, ``5``, ``8``, and ``9``,"
#~ " in this order:"
#~ msgstr ""

#~ msgid "The operation returns the following document:"
#~ msgstr ""

#~ msgid ""
#~ "The following example queries for all"
#~ " documents where ``ratings`` is an "
#~ "array that contains ``5`` as one "
#~ "of its elements:"
#~ msgstr ""

#~ msgid "The operation returns the following documents:"
#~ msgstr ""

#~ msgid ""
#~ "Equality matches can specify equality "
#~ "matches for an element at a "
#~ "particular index or position of the "
#~ "array using the :term:`dot notation`."
#~ msgstr ""

#~ msgid ""
#~ "In the following example, the query "
#~ "uses the :term:`dot notation` to match"
#~ " all documents where the ``ratings`` "
#~ "array contains ``5`` as the first "
#~ "element:"
#~ msgstr ""

#~ msgid "Specify Multiple Criteria for Array Elements"
#~ msgstr ""

#~ msgid "Single Element Satisfies the Criteria"
#~ msgstr ""

#~ msgid ""
#~ "Use :query:`$elemMatch` operator to specify"
#~ " multiple criteria on the elements of"
#~ " an array such that at least "
#~ "one array element satisfies all the "
#~ "specified criteria."
#~ msgstr ""

#~ msgid ""
#~ "The following example queries for "
#~ "documents where the ``ratings`` array "
#~ "contains at least one element that "
#~ "is greater than (:query:`$gt`) ``5`` and"
#~ " less than (:query:`$lt`) ``9``:"
#~ msgstr ""

#~ msgid ""
#~ "The operation returns the following "
#~ "documents, whose ``ratings`` array contains"
#~ " the element ``8`` which meets the"
#~ " criteria:"
#~ msgstr ""

#~ msgid "Combination of Elements Satisfies the Criteria"
#~ msgstr ""

#~ msgid ""
#~ "The following example queries for "
#~ "documents where the ``ratings`` array "
#~ "contains elements that in some "
#~ "combination satisfy the query conditions; "
#~ "e.g., one element can satisfy the "
#~ "greater than ``5`` condition and another"
#~ " element can satisfy the less than"
#~ " ``9`` condition, or a single element"
#~ " can satisfy both:"
#~ msgstr ""

#~ msgid ""
#~ "The document with the ``\"ratings\" :"
#~ " [ 5, 9 ]`` matches the query"
#~ " since the element ``9`` is greater"
#~ " than ``5`` (the first condition) and"
#~ " the element ``5`` is less than "
#~ "``9`` (the second condition)."
#~ msgstr ""

#~ msgid "Array of Embedded Documents"
#~ msgstr ""

#~ msgid ""
#~ "Consider that the ``inventory`` collection "
#~ "includes the following documents:"
#~ msgstr ""

#~ msgid "Match a Field in the Embedded Document Using the Array Index"
#~ msgstr ""

#~ msgid ""
#~ "If you know the array index of "
#~ "the embedded document, you can specify"
#~ " the document using the subdocument's "
#~ "position using the :term:`dot notation`."
#~ msgstr ""

#~ msgid ""
#~ "The following example selects all "
#~ "documents where the ``memos`` contains "
#~ "an array whose first element (i.e. "
#~ "index is ``0``) is a document that"
#~ " contains the field ``by`` whose "
#~ "value is ``'shipping'``:"
#~ msgstr ""

#~ msgid ""
#~ "If you do not know the index "
#~ "position of the document in the "
#~ "array, concatenate the name of the "
#~ "field that contains the array, with "
#~ "a dot (``.``) and the name of "
#~ "the field in the subdocument."
#~ msgstr ""

#~ msgid ""
#~ "The following example selects all "
#~ "documents where the ``memos`` field "
#~ "contains an array that contains at "
#~ "least one embedded document that "
#~ "contains the field ``by`` with the "
#~ "value ``'shipping'``:"
#~ msgstr ""

#~ msgid "Specify Multiple Criteria for Array of Documents"
#~ msgstr ""

#~ msgid ""
#~ "Use :query:`$elemMatch` operator to specify"
#~ " multiple criteria on an array of "
#~ "embedded documents such that at least"
#~ " one embedded document satisfies all "
#~ "the specified criteria."
#~ msgstr ""

#~ msgid ""
#~ "The following example queries for "
#~ "documents where the ``memos`` array has"
#~ " at least one embedded document that"
#~ " contains both the field ``memo`` "
#~ "equal to ``'on time'`` and the "
#~ "field ``by`` equal to ``'shipping'``:"
#~ msgstr ""

#~ msgid ""
#~ "The following example queries for "
#~ "documents where the ``memos`` array "
#~ "contains elements that in some "
#~ "combination satisfy the query conditions; "
#~ "e.g. one element satisfies the field "
#~ "``memo`` equal to ``'on time'`` "
#~ "condition and another element satisfies "
#~ "the field ``by`` equal to ``'shipping'``"
#~ " condition, or a single element can"
#~ " satisfy both criteria:"
#~ msgstr ""

#~ msgid "The query returns the following documents:"
#~ msgstr ""

