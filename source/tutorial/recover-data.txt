==================
Recover Data Files
==================

.. default-domain:: mongodb

Overview
--------

Any deployment may suffer hardware failure, power failure, networking
failure, or some other interruption that may damage data files. MongoDB
provides a range of features, including :term:`replica sets <replica
set>` and :term:`journaling <journal>`, to make recovery from those events
quick and complete.

If you suspect that some of your data files might be invalid, it may
be possible to recover some of the data.

If your deployment *does* use :term:`replica sets <replica set>`, use
the procedures described in :doc:`/tutorial/resync-replica-set-member`
to resync the invalid data files from valid files on one of the other
members of the replica set.

If your deployment does *not* use replica sets, use the following
procedures to remove the invalid portions of your data files, and to
make the remaining portions usable.

The best way to avoid data loss and ensure the most
robust deployments is to follow the recommendations in
:doc:`maintain-valid-data-files`.

See also
:doc:`/core/backups` and
:doc:`/administration/backup` for more information on preventing data loss. Also see
:doc:`/core/replication`,
:doc:`/core/journaling`, and
:doc:`/tutorial/manage-journaling`.

Considerations
--------------

.. warning::

   This procedure removes the invalid parts of data files. *You can
   lose data as part of the recovery process.*

   Using this procedure on a capped collection truncates the
   collection to two documents. Do not use :program:`mongodump` with
   the :option:`--repair <mongodump>` to recover capped collections.

- Use a recovery path with enough space to hold the recovered data files.

- Do not remove the ``mongod.lock`` file from the data directory.

- Do not perform this procedure on files that are currently opened
  by a running :program:`mongod` instance. This procedure will not
  work on files that are already open.

Procedure
---------

This procedure assumes a ``/data/db`` directory that contains data
files for a ``users`` database, and a ``/data/recovery`` directory
for recovered files. Use the following sequence of operations with
the relevant directory and database names.

.. include:: /includes/steps/recover-data-files.rst

