title: Create a directory to store your |charts-short| configuration.
ref: create-charts-dir
level: 4
stepnum: 1
content: |
  Create a directory to store your |charts-short| configuration, then
  change to the new directory:

  .. code-block:: sh

     mkdir mongodb-charts
     cd mongodb-charts
---
title: Download the |charts| Docker Compose file.
ref: download-compose-file
level: 4
stepnum: 2
content: |
  Download the latest version of the |charts-short| Docker Compose
  file from the `MongoDB Download Center
  <https://www.mongodb.com/download-center/charts>`_ and manually move
  it to the new directory.
---
title: Enable Docker Swarm mode.
ref: enable-docker-swarm
level: 4
stepnum: 3
content: |
  Run the following command to enable Docker Swarm mode:

  .. code-block:: sh

     docker swarm init
---
title: Pull down the |charts-short| image.
ref: pull-charts-image
level: 4
stepnum: 4
content: |
  .. code-block:: sh

     docker pull quay.io/mongodb/charts:{+version+}

  .. include:: /includes/different-versions.rst

  This command may take a while as it downloads a large file to the
  host server.

---
title: Test your connection to the |charts-short| metadata database.
ref: test-mongodb-connection
level: 4
stepnum: 5
content: |

   |charts| requires a :manual:`Connection String URI
   </reference/connection-string>` to connect to a MongoDB deployment
   which will store the |charts-short| metadata. The MongoDB deployment
   must be reachable from the |charts-short| host. If the MongoDB
   deployment is running with :manual:`authentication enabled
   </tutorial/enable-authentication>`, you must provide the credentials
   in the connection string, and the MongoDB user must have the
   :authrole:`readWriteAnyDatabase` role. When connecting to a replica
   set, the :urioption:`replicaSet` URI option is required.

   .. admonition:: Running Metadata Database on localhost
      :class: important

      |charts-short| interprets ``localhost`` as the Docker container
      |charts-short| is running in. If the database is running on the
      same host as the |charts-short| Docker container but not in
      Docker, it will not be reachable via
      ``mongodb://localhost``. Instead, use one of the following URIs
      depending on your Docker version when creating the Docker secret
      in the command below:

      - For Docker versions 18.03 and later:

        - For Windows and macOS, use ``mongodb://host.docker.internal``.

        - For Linux, use the IP address of the ``docker0`` interface.
          Normally, this address is ``172.17.0.1``.

      - For Docker versions 17.06 up to but not including 18.03:

        - For Windows, use ``mongodb://docker.for.win.localhost``.

        - For macOS, use ``mongodb://docker.for.mac.localhost``.

        - For Linux, use the IP address of the ``docker0`` interface.
          Normally, this address is ``172.17.0.1``.

   Run the following command to test your connection string. Replace
   the placeholder connection string at the end of the command with
   your connection string URI:

   .. code-block:: sh

      docker run --rm quay.io/mongodb/charts:{+version+} charts-cli test-connection mongodb://<username>:<password>@myhost.com/

   .. include:: /includes/different-versions.rst

   If the |charts| successfully connects to the specified MongoDB
   deployment, |charts-short| displays the following message in the
   command line:

   .. code-block:: sh
      :copyable: false

      MongoDB connection URI successfully verified.

   Pay careful attention to the output of this command, as it
   may include warnings of potential issues which could impact
   the deployment process.

   If |charts| cannot connect using the specified connection URI,
   |charts-short| outlines possible troubleshooting actions to take
   to create a successful connection. For detailed troubleshooting
   information, refer to the :ref:`Troubleshooting
   <charts-install-troubleshooting>` section.
---
title: Create a Docker secret for the |charts-short| metadata database.
ref: create-docker-secret-mongodb
level: 4
stepnum: 6
content: |
   Once you have verified that |charts| can successfully connect to
   your MongoDB deployment, create a Docker secret to hold the
   :manual:`Connection String URI </reference/connection-string>`.

   Run the following command to create the Docker secret, substituting
   your connection string from the previous step:

   .. code-block:: sh

      echo "<Verified connection string URI from step 5>" | docker secret create charts-mongodb-uri -

   .. cssclass:: important
   .. admonition:: Windows Installation

      Windows users must execute this command in Windows PowerShell,
      not Command Prompt, to ensure the quotation marks surrounding
      the connection string are not included as a part of the secret.

   .. note::

      If you are using a different orchestrator to run |charts|, such
      as Kubernetes, you may need to provide the MongoDB URI using an
      environment variable instead of a Docker secret. If you
      configure the ``CHARTS_MONGODB_URI`` environment variable within
      the container, this variable directs |charts-short| to use this
      value for the connection instead of using the Docker secret. How
      you specify the environment variable depends on your chosen
      method for deploying the |charts-short| Docker container.

---
title: (*Optional*) Configure the Feedback and Support widget.
ref: feedback-support-widget
level: 4
stepnum: 7
content: |

  |charts| includes a widget on every page that allows users to
  request assistance or provide feedback to MongoDB. It also enables
  the transmission of usage statistics to MongoDB to help improve the
  product. These statistics include:

  - Operations performed
  - Chart types created
  - Errors that |charts| returns

  |charts-short| sends the logged-in user's email and name to the
  Intercom system to help provide support. No data is collected or
  transmitted from the user's databases.

  By default, the Feedback and Support widget is enabled.

  To disable the widget within MongoDB |charts| and prevent the
  transmission of usage statistics:

  a. Open ``charts-docker-compose.yml``.
  b. Set the following value:

     .. code-block:: yaml

        CHARTS_SUPPORT_WIDGET_AND_METRICS: "off"

  c. Restart |charts|.

  To re-enable the widget

  a. Open ``charts-docker-compose.yml``.
  b. Set the following value:

     .. code-block:: yaml

        CHARTS_SUPPORT_WIDGET_AND_METRICS: "on"

  c. Restart |charts|.

---
title: (*Optional*) Configure the |charts| web server to use HTTPS.
ref: configure-https-install
level: 4
stepnum: 8
content: |
  You can either run |charts| using the default HTTP protocol, or
  configure the |charts-short| web server to use the HTTPS protocol
  for additional security. For instructions on configuring HTTPS for
  |charts|, see :doc:`Configure MongoDB Charts Web Server to Use HTTPS
  </administration/configure-https-deployment>`.
---
title: Launch the |charts-short| container.
ref: launch-charts-container
level: 4
stepnum: 9
content: |
  Launch the |charts-short| container as a Docker Stack using the
  Compose file:

  .. code-block:: sh

     docker stack deploy -c charts-docker-compose-{+version+}.yml mongodb-charts

  .. include:: /includes/different-versions.rst

---
title: Verify the container is running.
ref: verify-container
level: 4
stepnum: 10
content: |
  Check that the container is running by executing:

  .. code-block:: sh

     docker service ls

  The |charts-short| container should appear with mode ``replicated``
  with ``1/1`` replicas:

  .. code-block:: sh
     :copyable: false

     ID             NAME                    MODE         REPLICAS   IMAGE                   PORTS
     j77uo3slyg4l   mongodb-charts_charts   replicated   1/1        mongodb-charts:latest   *:80->80/tcp
post: |
  .. note::

     The service's mode may not be ``replicated`` immediately. Docker
     does not display the status of certain deployment operations, so
     wait briefly then rerun ``docker service ls``.

     If the service is stuck at ``0/1`` replicas and it's mode is not
     ``replicated`` after an extended period of time, the service may
     not have deployed properly. For more information, see
     :ref:`Troubleshooting <charts-install-troubleshooting>`.
---
title: Create |charts-short| users.
ref: create-users
level: 4
stepnum: 11
content: |
  Once the container is running, execute the ``charts-cli add-user``
  script within the container once for each |charts-short| user account
  you want to create within |charts|. At mininum, you must use the script
  to create one user with the ``UserAdmin`` role in order to be able to
  log into |charts-short|. After creating this initial user, you
  can either use the |charts-short| user interface to
  :ref:`add users <add-users>` or continue using the
  ``charts-cli add-user`` script to add users with either the
  ``UserAdmin`` or ``User`` role.

  .. include:: /includes/add-user-script.rst

  For more information on roles and adding users, see
  :doc:`/user-management`.

---
title: Launch the |charts-short| web application.
ref: launch-charts-app
level: 4
stepnum: 12
content: |
  Access |charts| by opening a web browser and connecting to the
  name of the server running the container. Note that |charts-short|
  runs on HTTP port 80 and HTTPS port 443 (if
  :doc:`configured for HTTPS
  </administration/configure-https-deployment>`) unless you have
  modified the Docker Compose file to use different ports.
---
title: Back up your |charts-short| installation keys.
ref: backup-charts-keys
level: 4
stepnum: 13
content: |

  .. include:: /includes/backup-restore-intro.rst

  .. include:: /includes/backup-keys.rst

  For more information, see
  :doc:`/administration/backup-and-restore-keys`.
...
