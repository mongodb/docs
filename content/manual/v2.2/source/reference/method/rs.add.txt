========
rs.add()
========

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. method:: rs.add(hostspec, arbiterOnly)

   Specify one of the following forms:

   :param string,document host:

      Either a string or a document.  If a string, specifies a host
      (and optionally port-number) for a new host member for the
      replica set; MongoDB will add this host with the default
      configuration. If a document, specifies any attributes about a
      member of a replica set.

   :param boolean arbiterOnly:

      Optional. If ``true``, this host is an arbiter. If the second
      argument evaluates to ``true``, as is the case with some
      :term:`documents <document>`, then this instance will become an
      arbiter.

   Provides a simple method to add a member to an existing
   :term:`replica set`. You can specify new hosts in one of two ways:

   #. as a "hostname" with an optional port number to use the default
      configuration as in the :ref:`replica-set-add-member` example.

   #. as a configuration :term:`document`, as in the
      :ref:`replica-set-add-member-alternate-procedure` example.

   This function will disconnect the shell briefly and forces a
   reconnection as the replica set renegotiates which node
   will be :term:`primary`. As a result, the shell will display an
   error even if this command succeeds.

   :method:`rs.add()` provides a wrapper around some of the
   functionality of the ":dbcommand:`replSetReconfig`" :term:`database
   command` and the corresponding shell helper
   :method:`rs.reconfig()`. See the :doc:`/reference/replica-configuration`
   document for full documentation of all replica set configuration
   options.

   .. example::

      To add a :binary:`~bin.mongod` accessible on the default port
      ``27017`` running on the host ``mongodb3.example.net``, use the
      following :method:`rs.add()` invocation:

      .. code-block:: javascript

         rs.add('mongodb3.example.net:27017')

      If ``mongodb3.example.net`` is an arbiter, use the following form:

      .. code-block:: javascript

         rs.add('mongodb3.example.net:27017', true)

      To add ``mongodb3.example.net`` as a :ref:`secondary-only
      <replica-set-secondary-only-members>` member of set, use the
      following form of :method:`rs.add()`:

      .. code-block:: javascript

         rs.add( { "_id": 3, "host": "mongodbd3.example.net:27017", "priority": 0 } )

      Replace, ``3`` with the next unused ``_id`` value in the replica
      set. See :method:`rs.conf()` to see the existing ``_id`` values
      in the replica set configuration document.

      See the :doc:`/reference/replica-configuration` and
      :doc:`/administration/replica-sets` documents for more
      information.
