============================
View/Modify Project Settings
============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Required Access
---------------

To view project settings, the user must have :authrole:`Project Owner`
access for the project. To modify project settings, click
:guilabel:`Settings`, then :guilabel:`Project Settings`.

.. _atlas-modify-project-settings:

View/Modify Project Settings
----------------------------

Project settings apply to all the users in the project
[#user-settings]_. The :guilabel:`Project ID` displayed at the top of
the page is used by the Atlas API.

You can set the following:

.. list-table::
   :widths: 40 60
   :header-rows: 1

   * - Setting

     - Description

   * - :guilabel:`Project`

     - Sets your project's name.

       .. note:: 

          Only a user with ``Owner`` role for the project or the
          ``Organization Owner`` role for the project's organization
          can edit the project name.

   * - :guilabel:`Project Time Zone`

     - Sets your project's time zone. This does not affect the
       timezones set for individual user accounts. [#user-settings]_

   * - :guilabel:`Collect Database Specific Statistics`

     - Allows you to enable or disable the collection of database
       statistics in :doc:`cluster metrics </monitor-cluster-metrics>`.


   * - :guilabel:`Set Preferred Cluster Maintenance Start Time`

     - Allows you to set when |service| should start weekly maintenance
       on your cluster.

       If you toggle to :guilabel:`On`, click :icon:`pencil-alt` to set
       the :guilabel:`Maintenance Start Time`. |service| displays this 
       time in the time zone you set in your :guilabel:`Profile`.

       .. note::
          |service| performs maintenance the same way as the
          :manual:`manual maintenance procedure </tutorial/perform-maintence-on-replica-set-members/>`.
          This requires at least one
          :manual:`replica set election </core/replica-set-elections>`
          during the maintenance window per replica set.

   * - :guilabel:`Enable Public API`

     - Allows you to access your project and its clusters through the
       :doc:`Public API </reference/api-resources>`.

   * - :guilabel:`Public Key for SCP Restores`

     - If you use |service| :doc:`Backup </backup-cluster>`, this
       setting allows you to generate a public key for SCP backup
       restoration. If you restore a snapshot through SCP, |service|
       uses the key to transmit the snapshot.

   * - :guilabel:`PagerDuty Service Key`

     - Sets a default service key for alert notifications sent to a
       `PagerDuty <http://www.pagerduty.com/?utm_source=mongodb&utm_medium=docs&utm_campaign=partner>`_
       account. |service| enters the key by default when you add a
       PagerDuty notification to an :doc:`alert configuration
       </monitoring-alerts>`. If you add PagerDuty notifications and if
       the key used to send the notifications becomes invalid,
       |service| sends an email to the project owner and eventually
       removes the key.

       You can add PagerDuty notifications only for alerts that require
       user acknowledgement. Informational alerts, such as the alert
       that a user has joined a project, cannot use this notification
       method.

       Users can acknowledge PagerDuty alerts only from the PagerDuty
       dashboard.

   * - :guilabel:`Flowdock Settings`

     - Sets default values for alert notifications sent to Flowdock.
       |service| enters the values by default when you add a Flowdock
       notification to an
       :doc:`alert configuration </monitoring-alerts>`. If you add
       Flowdock notifications, and if credentials to send notifications
       become invalid, |service| sends an email to the project owner
       and eventually removes the credentials.

       Set the following:

       .. list-table::
          :widths: 20 80

          * - :guilabel:`Org Name`

            - The Flowdock organization name in lower-case letters.
              This is the name that appears after
              ``www.flowdock.com/app/`` in the URL string.

          * - :guilabel:`Flow Name`

            - The flow name in lower-case letters. The flow name
              appears after the organization name in the URL string:

              ``www.flowdock.com/app/<organization-name>/<flow-name>``

          * - :guilabel:`API Token`

            - Your Flowdock "personal API token" found on the
              `<https://www.flowdock.com/account/tokens>`_ page of your
              Flowdock account.

   * - :guilabel:`HipChat Settings`

     - Sets a default room and API token for alert notifications sent
       to a HipChat account. |service| enters the values by default
       when you add a HipChat notification to an :doc:`alert
       configuration </monitoring-alerts>`. If you add HipChat
       notifications and the token used to send notifications becomes
       invalid, |service| sends an email to the project owner and
       eventually removes the token.


   * - :guilabel:`Slack Settings`

     - Sets a default channel and token for alert notifications sent to
       a Slack account. You can use either an API token or a Bot token.
       To create an API token, see the `<https://api.slack.com/web>`_
       page in your Slack account. For information on Bot users in
       Slack, see `<https://api.slack.com/bot-users>`_.

       |service| enters these values by default when you add a Slack
       notification to an :doc:`alert configuration
       </monitoring-alerts>`. If add Slack notifications and the token
       used to send notifications becomes invalid, |service| sends an
       email to the project owner and eventually removes the token.

   * - :guilabel:`Webhook Settings`

     - Adds a :guilabel:`Webhook URL` endpoint to which |service| can
       send alert notifications for programmatic processing. |service|
       sends an alert notification as an HTTP POST request. The request
       body contains a JSON document that uses the same format as the
       Public API's ``Alerts`` resource.

       |service| adds a request header called ``X-MMS-Event`` to
       distinguish between various alert states. The possible values
       for this header are:

       .. list-table::
          :widths: 30 70

          * - ``alert.open``

            - The alert was just opened.

          * - ``alert.close``

            - The alert was resolved.

          * - ``alert.update``

            - A previously opened alert is still open.

          * - ``alert.acknowledge``

            - The alert was acknowledged.

          * - ``alert.cancel``

            - The alert became invalid and was canceled.

          * - ``alert.inform``

            - Represents an informational alert, which is a
              point-in-time event, such as "Primary Elected."

       If you specify a key in the :guilabel:`Webhook Secret` field,
       |service| adds the ``X-MMS-Signature`` request header, which
       contains the hex-encoded HMAC signature of the request body. The
       signature is created using the provided secret.

       To send alert notifications to a Webhook, select the Webhook
       notification option when creating or editing an :doc:`alert
       </monitoring-alerts>`. If you add a Webhook notification and the
       URL or optional key becomes invalid, |service| sends an email to
       the project owner and eventually removes the Webhook settings.

   * - :guilabel:`New Relic Settings`

     - Configures |service| to send metric data about your deployment
       to `New Relic <http://newrelic.com/>`_ for viewing through the
       New Relic MongoDB plugin. You can also use Insights for New
       Relic to run analytics on the collected data. |service| sends
       New Relic the same metric data as displayed in |service|
       :doc:`cluster metrics </monitor-cluster-metrics>`.

       Enter the following information from your New Relic account. If
       you do not have an existing New Relic account, you can sign up
       using `<http://newrelic.com/mongodb>`_.

       - Account ID
       - License Key
       - Insights API Insert Key
       - Insights API Query Key

       If any of the keys later become invalid, |service| sends an
       email to the project owner and eventually removes the invalid
       credentials.

.. [#user-settings]
   To modify your user settings, click on your user name in the
   upper-right hand corner and select :guilabel:`Account`.
