=======================================
Return Ranked Namespaces from a Cluster
=======================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Return a subset of namespaces from the specified cluster sorted 
by the highest total execution time in descending order within the 
specified time window.

.. include:: /includes/api/base-api-uri.rst

Resource
--------

.. code-block:: http

   GET /groups/{PROJECT-ID}/clusters/{hostClusterId}/{clusterView}/collStats/namespaces

Request Path Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :widths: 20 20 60
   :header-rows: 1
   :stub-columns: 1

   * - Parameter
     - Type
     - Description

   * - PROJECT-ID
     - string
     - *(Required.)* Unique 24-hexadecimal digit string that 
       identifies the project that contains the pinned namespaces.

   * - hostClusterId
     - string
     - *(Required.)* Unique identifier for the cluster that contains 
       the pinned namespaces.

   * - clusterView
     - string
     - *(Required.)* Name that identifies the cluster topology. Values 
       include:
       
       - ``PRIMARY``
       - ``SECONDARY``
       - ``INDIVIDUAL_PROCESS``  

Request Query Parameters
~~~~~~~~~~~~~~~~~~~~~~~~

All parameters are optional.

.. list-table::
   :widths: 15 10 65 10
   :header-rows: 1
   :stub-columns: 1

   * - Name
     - Type 
     - Description
     - Default

   * - pretty
     - boolean
     - Indicates whether the response body should be in a
       `prettyprint <https://en.wikipedia.org/wiki/Prettyprint?oldid=791126873>`_ format.
     - ``false``

   * - envelope
     - boolean
     - Indicates whether or not to wrap the response in an
       envelope.
     - ``false``

   * - period
     - string
     - |iso8601-duration| that specifies how far back in the past to
       retrieve measurements. If you specify this value, you can't 
       specify ``start`` and ``end``.

       For example, to request the last 36 hours, include this query
       parameter: ``period=P1DT12H``.
     - 

   * - start
     - string
     - |iso8601-time| for the beginning of the period for which to
       retrieve measurements. If you specify ``start`` you must also
       specify ``end`` and you can't specify ``period``.
     - 

   * - end
     - string
     - |iso8601-time| for the end of the period for which to retrieve
       measurements. If you specify ``end`` you must also specify
       ``start`` and you can't specify ``period``.
     - 

Request Body Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/api/no-body-parameters.rst

Response
--------

.. list-table::
   :widths: 20 10 70
   :header-rows: 1
   :stub-columns: 1

   * - Name
     - Type 
     - Description

   * - groupId
     - string
     - Unique 24-hexadecimal digit string that identifies the project 
       that contains the namespaces.

   * - identifierId
     - string
     - Unique identifier of the cluster to which the 
       measurements pertain.

   * - rankedNamespaces
     - string
     - List that contains each :term:`namespace` from the specified 
       cluster sorted by the highest total execution time in descending 
       order within the specified time window.

Example Request
---------------

.. code-block:: sh

   curl --user '{PUBLIC-KEY}:{PRIVATE-KEY}' --digest \
    --header 'Accept: application/json' \
    --include \
    --request GET 'https://{CLOUD-MANAGER-HOST}:{PORT}/api/public/v1.0/groups/{PROJECT-ID}/clusters/{hostClusterId}/{clusterView}/collStats/namespaces?pretty=true&period={period}'

Example Response
----------------

Response Header
~~~~~~~~~~~~~~~

.. include:: /includes/api/api-headers/200.rst

Response Body
~~~~~~~~~~~~~

.. code-block:: json
   :copyable: false

   {
     "groupId": "{PROJECT-ID}",
     "identifierId": "{hostClusterId}",
     "rankedNamespaces": [
       "smol.dbA",
       "sample_mflix.movies",
       "sample_supplies.sales",
       "sample_mflix.theaters",
       "sample_guides.planets",
       "smol.dbD",
       "sample_restaurants.restaurants",
       "sample_mflix.embedded_movies",
       "sample_training.companies",
       "smol.floof",
       "sample_mflix.sessions",
       "smol.dbC",
       "sample_mflix.comments",
       "sample_training.trips",
       "sample_analytics.accounts",
       "sample_training.grades",
       "sample_airbnb.listingsAndReviews",
       "smol.dbB",
       "sample_training.posts",
       "sample_weatherdata.data"
     ]
   }
