==================================================
Manage Users and Roles on Self-Managed Deployments
==================================================

.. default-domain:: mongodb

.. meta::
   :description: Manage MongoDB users and roles. Learn user and role management under MongoDB's authorization model. Create custom roles, modify existing users, and view user roles and privileges.
   :keywords: on-prem

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol


This tutorial provides examples for user and role management under 
MongoDB's authorization model for self-managed deployments. To create 
a new user, see :ref:`<create-users>`.

Prerequisites
-------------

If you have :ref:`enabled access control <enable-access-control>` 
for your deployment, you must authenticate as a user with the required 
privileges specified in each section. To perform the operations listed 
in this tutorial, user administrators require the 
:authrole:`userAdminAnyDatabase` role, or :authrole:`userAdmin` role 
in the specific databases. For details on adding a user administrator 
as the first user, see :ref:`<enable-access-control>` 
   

.. _create-user-defined-role:

Create a User-Defined Role
--------------------------

.. note::
   
   To create user-defined roles in {+atlas+}, see 
   :ref:`<add-mongodb-roles>` in the {+atlas+} documentation.

Roles grant users access to MongoDB resources. MongoDB provides a
number of :ref:`built-in roles <built-in-roles>` that
administrators can use to control access to a MongoDB system. However,
if these roles cannot describe the desired set of privileges, you can
create new roles in a particular database.

.. include:: /includes/fact-roles-privileges-scope.rst

To create a new role, use the :method:`db.createRole()` method,
specifying the privileges in the ``privileges`` array and the 
inherited roles in the ``roles`` array.

MongoDB uses the combination of the database name and the role 
name to uniquely define a role. Each role is scoped to the 
database in which you create the role, but MongoDB stores all 
role information in the :data:`admin.system.roles` collection in 
the ``admin`` database.

.. include:: /includes/self-managed-user-defined-roles.rst

.. _modify-existing-user-access:

Modify Access for an Existing User
----------------------------------

.. note::

   To modify an existing database user's roles in {+atlas+}, 
   see :ref:`<modify-mongodb-users>` in the {+atlas+} documentation.

.. _assign-role-to-user-prereq:

Prerequisites
~~~~~~~~~~~~~

- .. include:: /includes/access-grant-roles.rst

- .. include:: /includes/access-revoke-roles.rst

- .. include:: /includes/access-roles-info.rst

Procedure
~~~~~~~~~

.. include:: /includes/steps/change-user-privileges.rst

Modify the Password for an Existing User
----------------------------------------

.. note::

   To modify an existing {+atlas+} user's password, see 
   :ref:`<modify-mongodb-users>` in the {+atlas+} documentation.

.. _change-password-prereq:

Prerequisites
~~~~~~~~~~~~~

.. include:: /includes/access-change-password.rst

Procedure
~~~~~~~~~

.. include:: /includes/steps/change-user-password.rst

.. seealso::

   :ref:`<change-password-custom-data>`

View a User's Roles
-------------------

.. note::
   
   To view a user's roles in {+atlas+}, see 
   :ref:`<view-mongodb-users>` in the {+atlas+}
   documentation.

Prerequisites
~~~~~~~~~~~~~

.. include:: /includes/access-user-info.rst

Procedure
~~~~~~~~~~

.. include:: /includes/steps/verify-user-privileges.rst

View a Role's Privileges
------------------------

.. note::

   To view a role's privileges in {+atlas+}, see 
   :ref:`<view-mongodb-roles>` in the {+atlas+} documentation.

Prerequisites
~~~~~~~~~~~~~

.. include:: /includes/access-roles-info.rst

Procedure
~~~~~~~~~~

.. include:: /includes/steps/view-role-info.rst
