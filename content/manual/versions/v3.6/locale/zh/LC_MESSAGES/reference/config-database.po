#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/reference/config-database.txt:8
msgid "Config Database"
msgstr ""

#: ../source/reference/config-database.txt:18
msgid "The collections in the ``config`` database support:"
msgstr ""

#: ../source/reference/config-database.txt:20
msgid ":doc:`sharded cluster operations </sharding>`, and"
msgstr ""

#: ../source/reference/config-database.txt:22
msgid ""
"starting in MongoDB 3.6, :ref:`causally consistent sessions <sessions>` "
"for standalones, replica sets, and sharded clusters and retryable writes "
"for replica sets and sharded clusters."
msgstr ""

#: ../source/reference/config-database.txt:26
msgid ""
"The schema of the ``config`` database is *internal* and may change "
"between releases of MongoDB. The ``config`` database is not a dependable "
"API, and users should not write data to the ``config`` database in the "
"course of normal operation or maintenance."
msgstr ""

#: ../source/reference/config-database.txt:33
msgid "Collections to Support Sharded Cluster Operations"
msgstr ""

#: ../source/reference/config-database.txt:38
msgid ""
"To access the ``config`` database and view the list of collections that "
"support sharding operations, connect a :binary:`~bin.mongo` shell to a "
":binary:`~bin.mongos` instance in a sharded cluster and issue the "
"following:"
msgstr ""

#: ../source/reference/config-database.txt:48
msgid ""
"The config database is mainly for internal use, and during normal "
"operations you should never manually insert or store data in it. However,"
" if you need to verify the write availability of the config server for a "
"sharded cluster, you can insert a document into a test collection (after "
"making sure that no collection of that name already exists):"
msgstr ""

#: ../source/reference/config-database.txt:55
msgid ""
"Modification of the ``config`` database on a functioning system may lead "
"to instability or inconsistent data sets. If you must modify the "
"``config`` database, use :binary:`~bin.mongodump` to create a full backup"
" of the ``config`` database."
msgstr ""

#: ../source/reference/config-database.txt:64
msgid ""
"If the operation succeeds, the config server is available to process "
"writes."
msgstr ""

#: ../source/reference/config-database.txt:67
msgid ""
"Future releases of the server may include different collections in the "
"config database, so be careful when selecting a name for your test "
"collection."
msgstr ""

#: ../source/reference/config-database.txt:71
msgid ""
"MongoDB uses the following collections in the ``config`` database to "
"support sharding:"
msgstr ""

#: ../source/includes/admonition-config-db-is-internal.rst:1
msgid "Internal MongoDB Metadata"
msgstr ""

#: ../source/includes/admonition-config-db-is-internal.rst:3
msgid ""
"The :data:`config` database is internal: applications and administrators "
"should not modify or depend upon its content in the course of normal "
"operation."
msgstr ""

#: ../source/reference/config-database.txt:78
msgid ""
"The :data:`~config.changelog` collection stores a document for each "
"change to the metadata of a sharded collection."
msgstr ""

#: ../source/reference/config-database.txt:83
msgid ""
"The following example displays a single record of a chunk split from a "
":data:`~config.changelog` collection:"
msgstr ""

#: ../source/reference/config-database.txt:129
msgid ""
"Each document in the :data:`~config.changelog` collection contains the "
"following fields:"
msgstr ""

#: ../source/reference/config-database.txt:134
msgid "The value of ``changelog._id`` is: ``<hostname>-<timestamp>-<increment>``."
msgstr ""

#: ../source/reference/config-database.txt:139
msgid "The hostname of the server that holds this data."
msgstr ""

#: ../source/reference/config-database.txt:143
msgid ""
"A string that holds the address of the client, a :binary:`~bin.mongos` "
"instance that initiates this change."
msgstr ""

#: ../source/reference/config-database.txt:148
msgid "A :term:`ISODate` timestamp that reflects when the change occurred."
msgstr ""

#: ../source/reference/config-database.txt:153
msgid "Reflects the type of change recorded. Possible values are:"
msgstr ""

#: ../source/reference/config-database.txt:155
msgid "``dropCollection``"
msgstr ""

#: ../source/reference/config-database.txt:156
msgid "``dropCollection.start``"
msgstr ""

#: ../source/reference/config-database.txt:157
msgid "``dropDatabase``"
msgstr ""

#: ../source/reference/config-database.txt:158
msgid "``dropDatabase.start``"
msgstr ""

#: ../source/reference/config-database.txt:159
msgid "``moveChunk.start``"
msgstr ""

#: ../source/reference/config-database.txt:160
msgid "``moveChunk.commit``"
msgstr ""

#: ../source/reference/config-database.txt:161
msgid "``split``"
msgstr ""

#: ../source/reference/config-database.txt:162
msgid "``multi-split``"
msgstr ""

#: ../source/reference/config-database.txt:166
msgid "Namespace where the change occurred."
msgstr ""

#: ../source/reference/config-database.txt:170
msgid ""
"A :term:`document` that contains  additional details regarding the "
"change. The structure of the :data:`~config.changelog.details` document "
"depends on the type of change."
msgstr ""

#: ../source/reference/config-database.txt:178
msgid ""
"The :data:`~config.chunks` collection stores a document for each chunk in"
" the cluster.  Consider the following example of a document for a chunk "
"named ``records.pets-animal_\\\"cat\\\"``:"
msgstr ""

#: ../source/reference/config-database.txt:198
msgid ""
"These documents store the range of values for the shard key that describe"
" the chunk in the ``min`` and ``max`` fields. Additionally the ``shard`` "
"field identifies the shard in the cluster that \"owns\" the chunk."
msgstr ""

#: ../source/reference/config-database.txt:207
msgid ""
"The :data:`~config.collections` collection stores a document for each "
"sharded collection in the cluster. Given a collection named ``pets`` in "
"the ``records`` database, a document in the :data:`~config.collections` "
"collection would resemble the following:"
msgstr ""

#: ../source/reference/config-database.txt:229
msgid ""
"The :data:`~config.databases` collection stores a document for each "
"database in the cluster, and tracks if the database has sharding enabled."
" :data:`~config.databases` represents each database in a distinct "
"document. When a databases have sharding enabled, the ``primary`` field "
"holds the name of the :term:`primary shard`."
msgstr ""

#: ../source/reference/config-database.txt:244
msgid ""
"The :data:`~config.lockpings` collection keeps track of the active "
"components in the sharded cluster. Given a cluster with a "
":binary:`~bin.mongos` running on ``example.com:30000``, the document in "
"the :data:`~config.lockpings` collection would resemble:"
msgstr ""

#: ../source/reference/config-database.txt:257
msgid ""
"The :data:`~config.locks` collection stores the distributed locks. The "
"primary of the config server replica set takes a lock by inserting a "
"document into the ``locks`` collection."
msgstr ""

#: ../source/reference/config-database.txt:274
msgid ""
"As of version 3.4, the ``state`` field will always have a value ``2`` to "
"prevent any legacy :binary:`~bin.mongos` instances from performing the "
"balancing operation. The ``when`` field specifies the time when the "
"config server member became the primary."
msgstr ""

#: ../source/reference/config-database.txt:279
msgid ""
"In version 3.4, when the balancer is active, the balancer takes a lock, "
"as in the following 3.4 example:"
msgstr ""

#: ../source/reference/config-database.txt:294
msgid ""
"Starting in version 3.6, the balancer no longer takes a \"lock\". If you "
"have upgraded from 3.4 to 3.6, you may choose to delete any residual "
"``\"_id\" : \"balancer\"`` documents."
msgstr ""

#: ../source/reference/config-database.txt:302
msgid ""
"The :data:`~config.mongos` collection stores a document for each "
":binary:`~bin.mongos` instance affiliated with the cluster. "
":binary:`~bin.mongos` instances send pings to all members of the cluster "
"every 30 seconds so the cluster can verify that the :binary:`~bin.mongos`"
" is active. The ``ping`` field shows the time of the last ping, while the"
" ``up`` field reports the uptime of the :binary:`~bin.mongos` as of the "
"last ping. The cluster maintains this collection for reporting purposes."
msgstr ""

#: ../source/reference/config-database.txt:311
msgid ""
"The following document shows the status of the :binary:`~bin.mongos` "
"running on ``example.com:30000``."
msgstr ""

#: ../source/reference/config-database.txt:322
msgid ""
"The :data:`~config.settings` collection holds the following sharding "
"configuration settings:"
msgstr ""

#: ../source/reference/config-database.txt:325
msgid ""
"Chunk size. To change chunk size, see :doc:`/tutorial/modify-chunk-size-"
"in-sharded-cluster`. The specified ``chunksize`` value is in megabytes."
msgstr ""

#: ../source/reference/config-database.txt:329
msgid ""
"Balancer status. To change status, see :ref:`sharding-balancing-disable-"
"temporarily`."
msgstr ""

#: ../source/reference/config-database.txt:332
msgid ""
"Autosplit. To enable or disable the autosplit flag, use the corresponding"
" :method:`sh.enableAutoSplit()` method or :method:`sh.disableAutoSplit()`"
" method."
msgstr ""

#: ../source/reference/config-database.txt:336
msgid "The following is an example ``settings`` collection:"
msgstr ""

#: ../source/reference/config-database.txt:348
msgid ""
"The :data:`~config.shards` collection represents each shard in the "
"cluster in a separate document, as in the following:"
msgstr ""

#: ../source/reference/config-database.txt:355
msgid ""
"If the shard is a replica set, the ``host`` field displays the name of "
"the replica set, then a slash, then a comma-separated list of the "
"hostnames of each member of the replica set, as in the following example:"
msgstr ""

#: ../source/reference/config-database.txt:364
msgid ""
"If the shard has :ref:`zones <zone-sharding>` assigned, this document has"
" a ``tags`` field, that holds an array of the zones to which it is "
"assigned, as in the following example:"
msgstr ""

#: ../source/reference/config-database.txt:376
msgid ""
"The :data:`~config.tags` collection holds documents for each zone range "
"in the cluster. The documents in the :data:`~config.tags` collection "
"resemble the following:"
msgstr ""

#: ../source/reference/config-database.txt:394
msgid ""
"The :data:`~config.version` collection holds the current metadata version"
" number. This collection contains only one document:"
msgstr ""

#: ../source/reference/config-database.txt:397
msgid ""
"To access the :data:`~config.version` collection you must use the "
":method:`db.getCollection()` method. For example, to display the "
"collection's document:"
msgstr ""

#: ../source/reference/config-database.txt:407
msgid "Collections to Support Sessions"
msgstr ""

#: ../source/reference/config-database.txt:411
msgid ""
"Starting in MongoDB 3.6, the ``config`` database contains the *internal* "
"collections to support :ref:`causally consistent sessions <sessions>` for"
" standalones, replica sets, and sharded clusters and retryable writes for"
" replica sets and sharded clusters."
msgstr ""

#: ../source/reference/config-database.txt:418
msgid "Do not manually modify or drop these collections."
msgstr ""

#: ../source/reference/config-database.txt:420
msgid ""
"To access these collections for a :binary:`~bin.mongod` or "
":binary:`~bin.mongos` instance, connect :binary:`~bin.mongo` shell to the"
" instance."
msgstr ""

#: ../source/reference/config-database.txt:426
msgid ""
"The ``system.sessions`` collection stores session records that are "
"available to all members of the deployment."
msgstr ""

#: ../source/reference/config-database.txt:429
msgid ""
"When a user creates a session on a :binary:`~bin.mongod` or "
":binary:`~bin.mongos` instance, the record of the session initially "
"exists only in-memory on the instance. Periodically, the instance will "
"sync its cached sessions to the ``system.sessions`` collection; at which "
"time, they are visible to all members of the deployment."
msgstr ""

#: ../source/reference/config-database.txt:435
msgid ""
"To view records in the ``system.sessions`` collection, use "
":pipeline:`$listSessions`."
msgstr ""

#: ../source/reference/config-database.txt:440
msgid "Do not manually modify or drop the ``system.sessions`` collection."
msgstr ""

#: ../source/reference/config-database.txt:442
msgid ""
"In a sharded cluster, the ``system.sessions`` collection is sharded. When"
" adding a shard to the sharded cluster, if the shard to add already "
"contains its own ``system.sessions`` collection, MongoDB drops the new "
"shard's ``system.sessions`` collection during the add process."
msgstr ""

#: ../source/reference/config-database.txt:450
msgid ""
"The ``transactions`` collection stores records used to support "
":ref:`retryable writes <retryable-writes>` for replica sets and sharded "
"clusters."
msgstr ""

#: ../source/reference/config-database.txt:456
msgid "Do not manually modify or drop the ``transactions`` collection."
msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid "The value of the ``state`` field was ``1`` before MongoDB 2.0."
#~ msgstr ""

#~ msgid ""
#~ "The :data:`~config.locks` collection stores a"
#~ " distributed lock. This ensures that "
#~ "only one :program:`mongos` instance can "
#~ "perform administrative tasks on the "
#~ "cluster at once. The :program:`mongos` "
#~ "acting as :term:`balancer` takes a lock"
#~ " by inserting a document resembling "
#~ "the following into the ``locks`` "
#~ "collection."
#~ msgstr ""

#~ msgid ""
#~ "If a :program:`mongos` holds the "
#~ "balancer lock, the ``state`` field has"
#~ " a value of ``2``, which means "
#~ "that balancer is active. The ``when``"
#~ " field indicates when the balancer "
#~ "began the current operation."
#~ msgstr ""

#~ msgid ""
#~ "Chunk size. To change chunk size, "
#~ "see :doc:`/tutorial/modify-chunk-size-in-"
#~ "sharded-cluster`."
#~ msgstr ""

#~ msgid ""
#~ "If the shard has :ref:`tags <tag-"
#~ "aware-sharding>` assigned, this document "
#~ "has a ``tags`` field, that holds "
#~ "an array of the tags, as in "
#~ "the following example:"
#~ msgstr ""

#~ msgid ""
#~ "The :data:`~config.tags` collection holds "
#~ "documents for each tagged shard key "
#~ "range in the cluster. The documents "
#~ "in the :data:`~config.tags` collection "
#~ "resemble the following:"
#~ msgstr ""

#~ msgid ""
#~ "The config database is for internal "
#~ "use only, and during normal operations"
#~ " you should never manually insert or"
#~ " store data in it. However, if "
#~ "you need to verify the write "
#~ "availability of a config server, you "
#~ "can insert a document into a test"
#~ " collection (after making sure that "
#~ "no collection of that name already "
#~ "exists):"
#~ msgstr ""

# 35dcf4773dd448fe907a1a3d68ef04ef
#~ msgid "On this page"
#~ msgstr ""

# 67b12afab7f94492a6da7866482e1de7
#~ msgid ""
#~ "The ``config`` database supports "
#~ ":term:`sharded cluster` operation. See the "
#~ ":doc:`/sharding` section of this manual "
#~ "for full documentation of sharded "
#~ "clusters."
#~ msgstr ""

# 8214f37c54fd4ca285a82aa68f08ccba
#~ msgid ""
#~ "To access the ``config`` database, "
#~ "connect to a :program:`mongos` instance "
#~ "in a sharded cluster, and use the"
#~ " following helper:"
#~ msgstr ""

# 23ca205fbfce4fa9972f412e8be60056
#~ msgid "You can return a list of the collections, with the following helper:"
#~ msgstr ""

# f921f550c3f2411084c5f112d3499a75
#~ msgid ""
#~ "The config database is mainly for "
#~ "internal use, and during normal "
#~ "operations you should never manually "
#~ "insert or store data in it. "
#~ "However, if you need to verify the"
#~ " write availability of a config "
#~ "server, you can insert a document "
#~ "into a test collection (after making "
#~ "sure that no collection of that "
#~ "name already exists):"
#~ msgstr ""

# a25a32b9e21f4a2185ba4e17c109a8df
#~ msgid ""
#~ "Modification of the ``config`` database "
#~ "on a functioning system may lead "
#~ "to instability or inconsistent data "
#~ "sets. If you must modify the "
#~ "``config`` database, use :program:`mongodump` "
#~ "to create a full backup of the "
#~ "``config`` database."
#~ msgstr ""

# 5a719b6f42624d12b7f2415451416cb0
#~ msgid "Collections"
#~ msgstr ""

# c61b3c41c03c47199483954ba0b435e2
#~ msgid "Example"
#~ msgstr ""

# 30980497872c4be2850fec7a9ef22927
#~ msgid ""
#~ "A string that holds the address of"
#~ " the client, a :program:`mongos` instance"
#~ " that initiates this change."
#~ msgstr ""

# 07db3a9611ca448e819f5bfc50b1caf0
#~ msgid ""
#~ "The :data:`~config.lockpings` collection keeps "
#~ "track of the active components in "
#~ "the sharded cluster. Given a cluster "
#~ "with a :program:`mongos` running on "
#~ "``example.com:30000``, the document in the "
#~ ":data:`~config.lockpings` collection would resemble:"
#~ msgstr ""

# 3da189975ac74c06800b01d68afd0964
#~ msgid ""
#~ "The :data:`~config.locks` collection stores "
#~ "the distributed locks. The primary of"
#~ " the config server replica set takes"
#~ " a lock by inserting a document "
#~ "resembling the following into the "
#~ "``locks`` collection."
#~ msgstr ""

# a2f1c318da65483fae7d587bcfd73747
#~ msgid ""
#~ "As of version 3.4, the ``state`` "
#~ "field will always have a value "
#~ "``2`` to prevent any legacy "
#~ ":program:`mongos` instances from performing "
#~ "the balancing operation. The ``when`` "
#~ "field specifies the time when the "
#~ "config server member became the primary."
#~ msgstr ""

# 47cf0a191f2b42ba86a9e0f70e031a0b
#~ msgid ""
#~ "The :data:`~config.mongos` collection stores a"
#~ " document for each :program:`mongos` "
#~ "instance affiliated with the cluster. "
#~ ":program:`mongos` instances send pings to "
#~ "all members of the cluster every "
#~ "30 seconds so the cluster can "
#~ "verify that the :program:`mongos` is "
#~ "active. The ``ping`` field shows the "
#~ "time of the last ping, while the"
#~ " ``up`` field reports the uptime of"
#~ " the :program:`mongos` as of the last"
#~ " ping. The cluster maintains this "
#~ "collection for reporting purposes."
#~ msgstr ""

# 0a54384ecb8246c6be8da3dff97ac843
#~ msgid ""
#~ "The following document shows the status"
#~ " of the :program:`mongos` running on "
#~ "``example.com:30000``."
#~ msgstr ""

# be30f79cb61b4ad19ec7b41f26f29a1b
#~ msgid ""
#~ "The :data:`~config.shards` collection represents "
#~ "each shard in the cluster in a "
#~ "separate document. If the shard is "
#~ "a replica set, the ``host`` field "
#~ "displays the name of the replica "
#~ "set, then a slash, then the "
#~ "hostname, as in the following example:"
#~ msgstr ""

# 631cb353dda94154bb980278a60c0679
#~ msgid ""
#~ "If the shard has :ref:`zones <zone-"
#~ "sharding>` assigned, this document has a"
#~ " ``tags`` field, that holds an array"
#~ " of the assigned zones, as in "
#~ "the following example:"
#~ msgstr ""

# a31cd68f8f8c49a188e22b6430d31466
#~ msgid "internals"
#~ msgstr ""

# a31cd68f8f8c49a188e22b6430d31466
# 0f912520baa147f29fd26e7b1a3ad014
#~ msgid "config database"
#~ msgstr ""

# 0f912520baa147f29fd26e7b1a3ad014
#~ msgid "sharding"
#~ msgstr ""

