ref: go-clusters-view-cluster
level: 4
stepnum: 1
source:
  file: steps-connect-to-cluster-master.yaml
  ref: go-clusters-view
---
ref: connection-details-cluster
level: 4
stepnum: 2
source:
  file: steps-connect-to-cluster-master.yaml
  ref: connection-details
---
title: "Click :guilabel:`Connect your application`."
stepnum: 3
ref: driver-connect-with-app-button
level: 4
content: |
  The :guilabel:`Driver` dropdown opens. In it, you
  can select the driver type and version.
---
title: "Select ``Python`` and your version of the driver."
stepnum: 4
ref: driver-select
level: 4
content: |
  The :guilabel:`Connection String Only` dialog tab provides
  the connection string.
---
title: "Copy the provided connection string."
stepnum: 5
ref: driver-cso-example
level: 4

---
title: "Replace ``<password>`` with your password."
stepnum: 6
ref: driver-edit-string
level: 4
content: |
 .. include:: /includes/admonitions/notes/note-escape-special-chars-pwd.rst

---
title: "Import MongoClient from PyMongo."
stepnum: 7
ref: driver-import-client
level: 4
content: |
  To connect to a running MongoDB instance, PyMongo
  requires ``MongoClient``. In the Python shell running in your
  terminal, run the following
  command to import ``MongoClient``:

  .. code-block:: python

      from pymongo import MongoClient
---
title: "Connect to your cluster."
stepnum: 8
ref: driver-connect-with-pymongo
level: 4
content: |
  Create the command that specifies a client for connecting to
  your cluster.

  1. In your Python shell, paste your updated connection string from the
     text editor into this command:

     .. code-block:: python

        client = MongoClient('<your updated connection string>')

  #. Update the connection string with your database user password.
  #. Verify that you have enclosed the connection string in single quotes.
  #. Run the resulting command. It specifies a client that will
     connect to your cluster.
  #. Connect to your cluster using this client.

...
