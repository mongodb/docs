title: "Create the Automation Agent configuration file to be used on the servers."
stepnum: 1
ref: create-config-file
pre: |
  Create the following configuration file and enter values as shown below.
  The file uses your :term:`agent API key` (``agentApiKey``), group ``id``, and the |mms| URL.

  Save this file as ``automation-agent.config``. You will distribute this
  file to each of your provisioned servers.
action:
  language: none
  code: |
    # REQUIRED
    # Enter your Group ID - It can be found at /settings
    #
    mmsGroupId=<Project ID>
    
    # REQUIRED
    # Enter your API key - It can be found at /settings
    #
    mmsApiKey=<Agent API key>
    
    # Base url of the MMS web server.
    #
    mmsBaseUrl=<Base URL of |application|>
    
    # Path to log file
    #
    logFile=/var/log/mongodb-mms-automation/automation-agent.log
    
    # Path to backup automation configuration
    #
    mmsConfigBackup=/var/lib/mongodb-mms-automation/mms-cluster-config-backup.json
    
    # Lowest log level to log.  Can be (in order): DEBUG, ROUTINE, INFO, WARN, ERROR, DOOM
    #
    logLevel=INFO
    
    # Maximum number of rotated log files
    #
    maxLogFiles=10
    
    # Maximum size in bytes of a log file (before rotating)
    #
    maxLogFileSize=268435456
    
    # URL to proxy all HTTP requests through
    #
    #httpProxy=
---
title: Retrieve the command strings used to download and install the Automation Agent.
stepnum: 2
ref: retrieve-commands
content: |
   a. In the |mms| web interface, click :guilabel:`Deployment`, then the :guilabel:`Agents` tab.

   b. Click :guilabel:`Downloads & Settings`.

   c. In the :guilabel:`Automation` column, click the link for your operating system.
      system to display the install instructions.

   d. Copy and save the following strings from the instructions:

      - The ``curl`` string used to download the agent.

      - The ``rpm`` or ``dpkg`` string to install the agent. For operating systems that use ``tar`` to unpackage the agent, no install string is listed.

      - The ``nohup`` string used to run the agent.
---
title: "Download, configure, and run the Automation Agent on each server."
stepnum: 3
ref: download-install-agent
content: |
  Do the following on each of the provisioned servers. You can create a
  script to use as a turn-key operation for these steps:

  Use the ``curl`` string to download the Automation Agent.

  Use ``rpm``, ``dpkg``, or ``tar`` to install the agent. Make the agent controllable by the new user you added to the group in the previous procedure.

  Replace the *contents* of the config file with the file you created in the first step. The config file is one of the following, depending on the operating system: 

  - ``/etc/mongodb-mms/automation-agent.config``

  - ``<install_directory>/local.config``

  Check that the following directories exist and are accessible to the Automation Agent. If they do not, create them. The first two are created automatically on RHEL, CentOS, SUSE, Amazon Linux, and Ubuntu:

  - ``/var/lib/mongodb-mms-automation``

  - ``/var/log/mongodb-mms-automation``

  - ``/data``

  Use the ``nohup`` string to run the Automation Agent.
---
title: "Confirm the initial state of the automation configuration."
stepnum: 4
ref: confirm-initial-state
content: |
  When the Automation Agent first runs, it downloads the
  ``mms-cluster-config-backup.json`` file, which describes the desired
  state of the :ref:`automation configuration <automation-configuration-sample-entity>`.

  On one of the servers, navigate to ``/var/lib/mongodb-mms-automation/``
  and open ``mms-cluster-config-backup.json``. Confirm that the file's
  ``version`` field is set to ``1``. |mms| automatically increments
  this field as changes occur.
...
