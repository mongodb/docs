# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: 2013-12-16 22:44+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# fa694f97bd5b413095171bd5ced1abef
#: ../source/tutorial/force-member-to-be-primary.txt:3
msgid "Force a Member to Become Primary"
msgstr ""

# 4f35b069a1464d78a84458c78be87d2e
#: ../source/tutorial/force-member-to-be-primary.txt
msgid "On this page"
msgstr ""

# da2b4734f2a7438c94fb300bcdf4da36
#: ../source/tutorial/force-member-to-be-primary.txt:14
msgid "Overview"
msgstr ""

# 0567c5dc4fa344b2ab1a3e56cf2df8b9
#: ../source/tutorial/force-member-to-be-primary.txt:16
msgid ""
"You can force a :term:`replica set` member to become :term:`primary` by "
"giving it a higher :rsconf:`members[n].priority` value than any other "
"member in the set."
msgstr ""

# faa73dfd7af54c44abe802110f64e44e
#: ../source/tutorial/force-member-to-be-primary.txt:21
msgid ""
"Optionally, you also can force a member never to become primary by "
"setting its :rsconf:`members[n].priority` value to ``0``, which means the"
" member can never seek :ref:`election <replica-set-elections>` as "
"primary. For more information, see :ref:`replica-set-secondary-only-"
"members`."
msgstr ""

# 0dbfb4ec94cc4284ad06b6777528e55a
#: ../source/tutorial/force-member-to-be-primary.txt:27
msgid "For more information on priorities, see :rsconf:`members[n].priority`."
msgstr ""

# 0b988fce48eb4b0f80f76b374333c0ce
#: ../source/tutorial/force-member-to-be-primary.txt:31
msgid "Consideration"
msgstr ""

# 8233003f4df6442bb7c3211277e9997d
#: ../source/tutorial/force-member-to-be-primary.txt:33
msgid ""
"A majority of the configured members of a replica set *must* be available"
" for a set to reconfigure a set or elect a primary. See :doc:`/core"
"/replica-set-elections` for more information."
msgstr ""

# 6fef08ac9c984bc6be853b5629bdf2f0
#: ../source/tutorial/force-member-to-be-primary.txt:38
msgid "Procedures"
msgstr ""

# 93d43fff241341bc9125aadafc5e1fe9
#: ../source/tutorial/force-member-to-be-primary.txt:43
msgid "Force a Member to be Primary by Setting its Priority High"
msgstr ""

# ccb573dbb8124a97818fb7e5bc55de1b
#: ../source/tutorial/force-member-to-be-primary.txt:45
msgid ""
"This procedure assumes your current :term:`primary` is ``m1.example.net``"
" and that you'd like to instead make ``m3.example.net`` primary. The "
"procedure also assumes you have a three-member :term:`replica set` with "
"the configuration below. For more information on configurations, see "
":ref:`Replica Set Configuration Use <replica-set-reconfiguration-usage>`."
msgstr ""

# a28617f7a0544606bf8e20e3a9a4501f
#: ../source/tutorial/force-member-to-be-primary.txt:51
msgid "This procedure assumes this configuration:"
msgstr ""

# 5e78464bf3a54a3a8edb5c9ba2adb07e
#: ../source/tutorial/force-member-to-be-primary.txt:74
msgid ""
"In a :program:`mongo` shell connected to the primary, use the following "
"sequence of operations to make ``m3.example.net`` the primary:"
msgstr ""

# 9fe055fcd6ba4d7bbda39a2e99b71ebc
#: ../source/tutorial/force-member-to-be-primary.txt:85
msgid ""
"The last statement calls :method:`rs.reconfig()` with the modified "
"configuration document to configure ``m3.example.net`` to have a higher "
":rsconf:`members[n].priority` value than the other :program:`mongod` "
"instances."
msgstr ""

# f297aaf561dd4dd4a399428334255e82
#: ../source/tutorial/force-member-to-be-primary.txt:90
msgid "The following sequence of events occur:"
msgstr ""

# 95882a27a59948f7978d9f5830562515
#: ../source/tutorial/force-member-to-be-primary.txt:92
msgid ""
"``m3.example.net`` and ``m2.example.net`` sync with ``m1.example.net`` "
"(typically within 10 seconds)."
msgstr ""

# 7ff8933328eb4983a87f1178318daa5a
#: ../source/tutorial/force-member-to-be-primary.txt:95
msgid ""
"``m1.example.net`` sees that it no longer has highest priority and, in "
"most cases, steps down. ``m1.example.net`` *does not* step down if "
"``m3.example.net``'s sync is far behind. In that case, ``m1.example.net``"
" waits until ``m3.example.net`` is within 10 seconds of its optime and "
"then steps down. This minimizes the amount of time with no primary "
"following failover."
msgstr ""

# c6d5480baee746a5a847f8059fac5aef
#: ../source/tutorial/force-member-to-be-primary.txt:102
msgid ""
"The step down forces on election in which ``m3.example.net`` becomes "
"primary based on its :data:`priority "
"<replSetGetConfig.members[n].priority>` setting."
msgstr ""

# 1a82662337114a128c12d518fe599529
#: ../source/tutorial/force-member-to-be-primary.txt:106
msgid ""
"Optionally, if ``m3.example.net`` is more than 10 seconds behind "
"``m1.example.net``'s optime, and if you don't need to have a primary "
"designated within 10 seconds, you can force ``m1.example.net`` to step "
"down by running:"
msgstr ""

# 0da49c03aa144eda85667fb3e4b9ce6b
#: ../source/tutorial/force-member-to-be-primary.txt:115
msgid ""
"This prevents ``m1.example.net`` from being primary for 86,400 seconds "
"(24 hours), even if there is no other member that can become primary. "
"When ``m3.example.net`` catches up with ``m1.example.net`` it will become"
" primary."
msgstr ""

# 67ab21dafc8f4397b6af16c996945e83
#: ../source/tutorial/force-member-to-be-primary.txt:120
msgid ""
"If you later want to make ``m1.example.net`` primary again while it waits"
" for ``m3.example.net`` to catch up, issue the following command to make "
"``m1.example.net`` seek election again:"
msgstr ""

# 36afecef80df4e839608ae40bb7946cb
#: ../source/tutorial/force-member-to-be-primary.txt:129
msgid ""
"The :method:`rs.freeze()` provides a wrapper around the "
":dbcommand:`replSetFreeze` database command."
msgstr ""

# 84f077b041f04785b129a1025e6dcb0f
#: ../source/tutorial/force-member-to-be-primary.txt:135
msgid "Force a Member to be Primary Using Database Commands"
msgstr ""

# a1781d5f9b8f4c148952886f124506cb
#: ../source/tutorial/force-member-to-be-primary.txt:139
msgid "Consider a :term:`replica set` with the following members:"
msgstr ""

# ffd1493041ba473b96e96bd97852ffbd
#: ../source/tutorial/force-member-to-be-primary.txt:141
msgid "``mdb0.example.net`` - the  current :term:`primary`."
msgstr ""

# 5dbaed7ec14f47dfbf01b903322b18f8
#: ../source/tutorial/force-member-to-be-primary.txt:142
msgid "``mdb1.example.net`` - a :term:`secondary`."
msgstr ""

# b32f152739774e0f89785325113ebf04
#: ../source/tutorial/force-member-to-be-primary.txt:143
msgid "``mdb2.example.net`` - a secondary ."
msgstr ""

# db16d6f7b4844e3eb624927e2da820ab
#: ../source/tutorial/force-member-to-be-primary.txt:145
msgid "To force a member to become primary use the following procedure:"
msgstr ""

# 4f2df2a84bb34af8985ae3e66136a127
#: ../source/tutorial/force-member-to-be-primary.txt:147
msgid ""
"In a :program:`mongo` shell, run :method:`rs.status()` to ensure your "
"replica set is running as expected."
msgstr ""

# 625486bba63f48388c0bdaec9b1ccefa
#: ../source/tutorial/force-member-to-be-primary.txt:150
msgid ""
"In a :program:`mongo` shell connected to the :program:`mongod` instance "
"running on ``mdb2.example.net``, freeze ``mdb2.example.net`` so that it "
"does not attempt to become primary for 120 seconds."
msgstr ""

# 32357a32a6464726b001fb8837a050ef
#: ../source/tutorial/force-member-to-be-primary.txt:159
msgid ""
"In a :program:`mongo` shell connected the :program:`mongod` running on "
"``mdb0.example.net``, step down this instance that the :program:`mongod` "
"is not eligible to become primary for 120 seconds:"
msgstr ""

# b39c230b31344f0a8667da5e286613ef
#: ../source/tutorial/force-member-to-be-primary.txt:168
msgid "``mdb1.example.net`` becomes primary."
msgstr ""

# a1029fb2542e443e88a471e03e19e0e3
#: ../source/tutorial/force-member-to-be-primary.txt:170
msgid ""
"During the transition, there is a short window where the set does not "
"have a primary."
msgstr ""

# 6d53c07237484e76a6409ae1d17252a8
#: ../source/tutorial/force-member-to-be-primary.txt:173
msgid ""
"For more information, consider the :method:`rs.freeze()` and "
":method:`rs.stepDown()` methods that wrap the :dbcommand:`replSetFreeze` "
"and :dbcommand:`replSetStepDown` commands."
msgstr ""

# ef3bf6d344f84bc58cf94f4228c6469c
#~ msgid "Synopsis"
#~ msgstr ""

# ada33ff2ca4f4fb98b6ae3c7a1914fed
#~ msgid ""
#~ "You can force a :term:`replica set` "
#~ "member to become :term:`primary` by "
#~ "giving it a higher "
#~ ":data:`~local.system.replset.members[n].priority` value "
#~ "than any other member in the set."
#~ msgstr ""

# 85f750e4e70e4353833b76552fe2326d
#~ msgid ""
#~ "Optionally, you also can force a "
#~ "member never to become primary by "
#~ "setting its "
#~ ":data:`~local.system.replset.members[n].priority` value to"
#~ " ``0``, which means the member can"
#~ " never seek :ref:`election <replica-set-"
#~ "elections>` as primary. For more "
#~ "information, see :ref:`replica-set-"
#~ "secondary-only-members`."
#~ msgstr ""

# 751f262b036f430ea7abfd314e12f556
#~ msgid ""
#~ "For more information on priorities, see"
#~ " :data:`~local.system.replset.members[n].priority`."
#~ msgstr ""

# 40f593e7bb2e468785ee3ec6c18143d0
#~ msgid ""
#~ "In the :program:`mongo` shell, use the"
#~ " following sequence of operations to "
#~ "make ``m3.example.net`` the primary:"
#~ msgstr ""

# c2250601b32d4f3a99bbcab328064789
#~ msgid ""
#~ "This sets ``m3.example.net`` to have a"
#~ " higher :data:`local.system.replset.members[n].priority` "
#~ "value than the other :program:`mongod` "
#~ "instances."
#~ msgstr ""

# 3f78bde3056d42be8c492164b3894b1c
#~ msgid ""
#~ "The step down forces on election "
#~ "in which ``m3.example.net`` becomes primary"
#~ " based on its :data:`priority "
#~ "<local.system.replset.members[n].priority>` setting."
#~ msgstr ""

