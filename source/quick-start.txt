.. _mcli-quick-start:

===========
Quick Start
===========

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

{+mcli+} provides a command-line interface for managing your 
|service-fullname|, |cloud|, and |mms-full| projects and clusters. 
This tutorial demonstrates how to: 

- Download, install, and  configure {+mcli+}
- Create clusters in your |service|, |cloud-short|, or |mms| project
- Create whitelist and MongoDB user for your |service| cluster
- Retrieve details about the new cluster 

The reference pages for the CLIs mentioned in this tutorial are  
available in the :ref:`mcli-reference` section.

.. _quick-start-reqs:

Prerequisites 
-------------

This tutorial requires the following: 

- A `MongoDB account <https://docs.mongodb.com/guides/cloud/account>`_ 
- An :atlas:`Atlas <organizations-projects/>`, 
  :cloudmgr:`Cloud Manager <organizations-projects/>`, or 
  :opsmgr:`Ops Manager </organizations-projects/>` organization and project

.. _quick-start-install:

Download and  Install {+mcli+}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

There are two ways to install {+mcli+}. You can:

- Clone the {+mcli+} git repository
- Download the binary

See :ref:`mcli-install` for information on downloading and installing 
{+mcli+}. After installing {+mcli+}, run the following command to 
verify installation:

.. code-block:: sh

   mongocli help


.. _quick-start-config-access-keys:

Generate Programmatic Access Keys 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

{+mcli+} uses Programmatic Access Keys to access the |service|, |cloud-short|, 
or |mms| projects. Your |svc-api-key| must have the ``project owner`` 
role and it must be whitelisted for your IP address or |cidr| range. 
To learn more about generating the |svc-api-key|, see: 

- :atlas:`Atlas API Access <configure-api-access>`
- :cloudmgr:`Cloud Manager API Access <tutorial/configure-public-api-access>`
- :opsmgr:`Ops Manager API Acess </tutorial/configure-public-api-access>`

.. note:: 

   The following sections are organized by the MongoDB services. Select 
   the tab for your MongoDB service to proceed with this tutorial. 

.. tabs:: 

   .. tab:: Atlas 
      :tabid: atlas

      Configure the {+mcli+}
      ----------------------

      You can configure the {+mcli+} access to MongoDB |service| using the 
      ``mongocli config`` and ``mongocli config set`` commands. The commands 
      in the following steps create a custom profile named ``atlasProfile`` in 
      the ``~/.config/mongocli.toml`` file and sets your programmatic |api| access 
      keys and project ID in the profile. You can use this profile with 
      all the other commands in this tutorial.

      .. include:: /includes/steps/quick-start-atlas-config-mcli.rst

      .. _quick-start-atlas-create-cluster:

      Create a Cluster 
      ----------------

      You can create a cluster on |service| using the {+mcli+} :ref:`cluster 
      create <mcli-atlas-cluster-create-command>` command. 
      
      The following command creates a sample cluster with the following settings: 

      - Cluster name: ``getStarted``
      - Service provider: ``AWS`` 
      - Provider region: ``US_EAST-1`` 
      - Instance size: ``M10``
      - Disk size: ``2`` GB
      - MongoDB version: ``4.2`` 
      - Replica set members: ``3``

      .. example::

         .. code-block:: text 

            mongocli atlas cluster create getStarted --provider AWS --region US_EAST_1 --instanceSize M10 --diskSizeGB 2 --mdbVersion 4.2 --members 3 --profile atlasProfile

      .. _quick-start-whitelist:

      Whitelist Your IP Address
      -------------------------

      For each project, you can create a list of trusted IP addresses, referred 
      to as a whitelist, and connect to the clusters in the project from a 
      trusted IP address. Run the following command to add IP addresses to your 
      whitelist. 

      Replace the IP address with your connection IP address. 

      .. code-block:: sh 
         
         mongocli atlas whitelist create <your-IP-address> --type ipAddress --profile atlasProfile

      .. _quick-start-create-mdb-user:

      Create a MongoDB User 
      ---------------------

      You must create a MongoDB user for you |service| cluster with the 
      :ref:`dbuser create <mcli-atlas-dbuser-create-command>`. The MongoDB 
      user can access the database hosted in |service|. Run the following command 
      to add a MongoDB user. The command creates a MongoDB user with the following 
      attributes:

      - Username: ``myMongoDbUser`` 
      - Password: ``myMongoDbUserPwd``

        .. note:: 

           The tutorial uses the password ``myMongoDbUserPwd``. Replace this password 
           with a strong password.

      - Role: |service| admin

      .. code-block:: sh 
         
         mongocli atlas dbuser create --username myMongoDbUser --password myMongoDbUserPwd --role atlasAdmin@admin --profile atlasProfile

      .. _quick-start-atlas-retrieve-cluster:

      Retrieve Your Cluster 
      ---------------------

      You can check whether your cluster was successfully created by 
      retrieving your cluster details using the {+mcli+}. Run the following 
      command to retrieve the cluster. The command uses: 
	  
      - The specified profile to determine the ID of the project that contains 
        the cluster.
      - The programmatic |api| access keys in the profile for authentication.
	     
      .. code-block:: sh 

         mongocli atlas cluster describe getStarted --profile atlasProfile

      Your command output should look similar to the following:

      .. code-block:: json
         :copyable: false 

         {
	       "autoScaling": {
		     "diskGBEnabled": false
	       },
	       "backupEnabled": false,
	       "biConnector": {
		     "enabled": false,
		     "readPreference": "secondary"
	       },
	       "clusterType": "REPLICASET",
	       "diskSizeGB": 2,
	       "encryptionAtRestProvider": "NONE",
	       "id": "5e29cf4e7a3e5a3f46554bde",
	       "groupId": "<project-ID>",
	       "mongoDBVersion": "4.2.3",
	       "mongoDBMajorVersion": "4.2",
	       "mongoURI": "mongodb://getstarted-shard-00-00-7hgjn.mongodb.net:27017,getstarted-shard-00-01-7hgjn.mongodb.net:27017,getstarted-shard-00-02-7hgjn.mongodb.net:27017",
	       "name": "getStarted",
	       "numShards": 1,
	       "paused": false,
	       "providerBackupEnabled": false,
	       "providerSettings": {
		     "backingProviderName": "AWS",
		     "instanceSizeName": "M10",
		     "providerName": "TENANT",
		     "regionName": "US_EAST_1"
	       },
	       "replicationFactor": 3,
	       "replicationSpec": {
		      "US_EAST_1": {
			    "analyticsNodes": 0,
			    "electableNodes": 3,
			    "priority": 7,
			    "readOnlyNodes": 0
		      }
	       },
	       "replicationSpecs": [
		     {
			    "id": "5e29cf3cf10fab4e2677c9f9",
			    "numShards": 1,
			    "zoneName": "Zone 1",
			    "regionsConfig": {
				  "US_EAST_1": {
					"analyticsNodes": 0,
					"electableNodes": 3,
					"priority": 7,
					"readOnlyNodes": 0
				  }
			  }
		     }
	       ],
	       "srvAddress": "mongodb+srv://getstarted-7hgjn.mongodb.net",
	       "stateName": "IDLE"
         }

      Summary 
      -------

      Congratulations! You have successfully created a cluster in |service| 
      to host your data. You can view your cluster by logging in to the 
      |service| UI. You can also connect to your cluster using the ``mongoURI``. 
      For example, run the following command to connect using the ``mongoURI``. 
      Replace ``mongoURI`` with the value of ``mongoURI`` in your ``cluster 
      describe`` command output.

      .. code-block:: sh 

         mongo <mongoURI>

   .. tab:: Cloud Manager
      :tabid: cloud-manager 

      Configure the {+mcli+}
      ----------------------

      You can configure the {+mcli+} access to |cloud-short| using the 
      ``mongocli config`` and ``mongocli config set`` commands. The commands 
      in the following steps create a custom profile named ``cmProfile`` 
      in the ``~/.config/mongocli.toml`` file and sets your programmatic |api| 
      access keys and project ID in the profile. You can use this profile 
      to run all the other commands in this tutorial.

      .. include:: /includes/steps/quick-start-cm-config-mcli.rst

      Create a Cluster 
      ----------------

      You can create a cluster on |cloud-short| using the {+mcli+}.

      .. include:: /includes/quick-start-cm-om-create-cluster-intro.rst
      .. include:: /includes/steps/quick-start-cm-cluster-create.rst

      Retrieve the Cluster 
      --------------------

      You can check whether your cluster was created by retrieving your cluster 
      details using the {+mcli+}. Run the following command to retrieve the 
      cluster. The following command retrieves a detailed description of the cluster 
      named ``getStarted``. The command uses: 
	  
      - The specified profile to determine the ID of the project that contains 
        the cluster.
      - The programmatic |api| access keys in the profile to interact with the 
        |cloud-short| project.

      .. code-block:: sh 

         mongocli cloud-manager cluster describe getStarted --profile cmProfile

      Your command output should look similar to the following:

      .. code-block:: json
         :copyable: false 

         {
	        "mongoURI": "mongodb://host1:29010,host2:29020,host3:29030",
	        "name": "getStarted",
	        "processes": [
		      {
			     "buildIndexes": true,
			     "db_path": "/data/cluster/rs1",
			     "featureCompatibilityVersion": "4.2",
			     "hostname": "host1",
			     "log_path": "/data/cluster/rs1/mongodb.log",
			     "name": "getStartedCluster",
			     "port": 29010,
			     "priority": 1,
			     "process_type": "mongod",
			     "slave_delay": 0,
			     "version": "4.2.2",
			     "votes": 1,
			     "arbiter_only": false,
			     "disabled": false,
			     "hidden": false
		      },
		      {
			     "buildIndexes": true,
			     "db_path": "/data/cluster/rs2",
			     "featureCompatibilityVersion": "4.2",
			     "hostname": "host2",
			     "log_path": "/data/cluster/rs2/mongodb.log",
			     "name": "getStartedCluster",
			     "port": 29020,
			     "priority": 1,
			     "process_type": "mongod",
			     "slave_delay": 0,
			     "version": "4.2.2",
			     "votes": 1,
			     "arbiter_only": false,
			     "disabled": false,
			     "hidden": false
		      },
		      {
			     "buildIndexes": true,
			     "db_path": "/data/cluster/rs3",
			     "featureCompatibilityVersion": "4.2",
			     "hostname": "host3",
			     "log_path": "/data/cluster/rs3/mongodb.log",
			     "name": "getStartedCluster",
			     "port": 29030,
			     "priority": 1,
			     "process_type": "mongod",
			     "slave_delay": 0,
			     "version": "4.2.2",
			     "votes": 1,
			     "arbiter_only": false,
			     "disabled": false,
			     "hidden": false
		      }
	       ]
         }

      Summary 
      -------

      Congratulations! You have successfully created a cluster in |cloud-short| 
      to host your data. You can view your cluster by logging in to the 
      |cloud-short| UI. You can also connect to your cluster using the 
      ``mongoURI``. For example, run the following command to connect using the 
      ``mongoURI``. Replace ``mongoURI`` with the value of ``mongoURI`` in your 
      ``cluster describe`` command output.

      .. code-block:: sh 

         mongo <mongoURI>

   .. tab:: Ops Manager
      :tabid: ops-manager 

      Configure the {+mcli+}
      ----------------------

      You can configure the {+mcli+} access to |mms| using the 
      ``mongocli config`` and ``mongocli config set`` commands. The commands 
      in the following steps create a custom profile named ``omProfile`` 
      in the ``~/.config/mongocli.toml`` file and sets your programmatic |api| 
      access keys and project ID in the profile. You can use this profile 
      to run all the other commands in this tutorial.

      .. include:: /includes/steps/quick-start-om-config-mcli.rst

      .. _quick-start-om-create-cluster:

      Create a Cluster 
      ----------------

      You can create a cluster on |mms| using the {+mcli+}.

      .. include:: /includes/quick-start-cm-om-create-cluster-intro.rst
      .. include:: /includes/steps/quick-start-om-cluster-create.rst

      .. _quick-start-om-retrieve-cluster:

      Retrieve the Cluster 
      --------------------

      The following command retrieves a detailed description of the cluster 
      named ``getStarted``. The command uses the profile named ``omProfile``: 
	  
      - To determine the ID of the project that contains the cluster.
      - For the programmatic |api| access keys to access the |mms| project.

      .. code-block:: sh 

         mongocli ops-manager cluster describe getStarted --profile omProfile

      Your command output should look similar to the following:

      .. code-block:: json
         :copyable: false 

         {
	        "mongoURI": "mongodb://host1:29010,host2:29020,host3:29030",
	        "name": "getStarted",
	        "processes": [
		      {
			     "buildIndexes": true,
			     "db_path": "/data/cluster/rs1",
			     "featureCompatibilityVersion": "4.2",
		        "hostname": "host1",
			     "log_path": "/data/cluster/rs1/mongodb.log",
			     "name": "getStartedCluster",
			     "port": 29010,
			     "priority": 1,
			     "process_type": "mongod",
			     "slave_delay": 0,
			     "version": "4.2.2",
			     "votes": 1,
			     "arbiter_only": false,
			     "disabled": false,
			     "hidden": false
		      },
		      {
			     "buildIndexes": true,
			     "db_path": "/data/cluster/rs2",
			     "featureCompatibilityVersion": "4.2",
			     "hostname": "host2",
			     "log_path": "/data/cluster/rs2/mongodb.log",
			     "name": "getStartedCluster",
			     "port": 29020,
			     "priority": 1,
			     "process_type": "mongod",
			     "slave_delay": 0,
			     "version": "4.2.2",
			     "votes": 1,
			     "arbiter_only": false,
			     "disabled": false,
			     "hidden": false
		      },
		      {
			     "buildIndexes": true,
			     "db_path": "/data/cluster/rs3",
			     "featureCompatibilityVersion": "4.2",
			     "hostname": "host3",
			     "log_path": "/data/cluster/rs3/mongodb.log",
			     "name": "getStartedCluster",
			     "port": 29030,
			     "priority": 1,
			     "process_type": "mongod",
			     "slave_delay": 0,
			     "version": "4.2.2",
			     "votes": 1,
			     "arbiter_only": false,
			     "disabled": false,
			     "hidden": false
		      }
	        ]
         }

      Summary 
      -------

      Congratulations! You have successfully created a cluster in |mms| to 
      host your data. You can view your cluster by logging in to the |mms|
      UI. You can also connect to your cluster using the ``mongoURI``. For 
      example, run the following command to connect using the ``mongoURI``. 
      Replace ``mongoURI`` with the value of ``mongoURI`` in your ``cluster 
      describe`` command output.

      .. code-block:: sh 

         mongo <mongoURI>
