=====================================
MongoDB Enterprise Operator Changelog
=====================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: twocols

.. _ent-op-0.3:

MongoDB Enterprise Operator 0.3
-------------------------------

*Released 2018-08-07*

- The Operator no longer creates the CustomResourceDefinition objects.
  The user needs to create them manually. Download and apply
  `this new yaml file <https://github.com/mongodb/mongodb-enterprise-kubernetes/blob/master/crds.yaml>`__
  (``crd.yaml``) to create/configure these objects.

- ClusterRoles are no longer required. How the Operator watches
  resources has changed. Until the last release, the Operator would
  watch for any resource on any |k8s-ns|. With 0.3, the Operator
  watches for resources in the same namespace in which it was created.
  To support multiple namespaces, multiple Operators can be installed.
  This allows isolation of MongoDB deployments.

- Permissions changes were made to how PersistentVolumes are mounted.

- Added configuration to Operator to not create
  `SecurityContexts <https://kubernetes.io/docs/tasks/configure-pod-container/security-context/>`__
  for |k8s-pods|. This solves an issue with OpenShift which does not
  allow this setting when ``SecurityContextContraints`` are used.

  If you are using Helm, set ``managedSecurityContext`` to ``true``.
  This tells the Operator to not create ``SecurityContext`` for
  |k8s-pods|, satisfying the OpenShift requirement.

- The combination of ``projectName`` and ``orgId`` replaces
  ``projectId`` alone to configure the connection to |onprem|.
  The project is created if it doesn't exist.

.. _ent-op-0.2:

MongoDB Enterprise Operator 0.2
-------------------------------

*Released 2018-08-03*

- Calculates WiredTiger memory cache.

.. _ent-op-0.1:

MongoDB Enterprise Operator 0.1
-------------------------------

*Released 2018-06-27*

**Initial Release**

- Can deploy standalone instances, replica sets, sharded clusters
  using |k8s| configuration files.
