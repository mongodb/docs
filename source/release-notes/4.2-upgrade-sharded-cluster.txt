.. _4.2-upgrade-sharded-cluster:

================================
Upgrade a Sharded Cluster to 4.2
================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. include:: /includes/4.2-upgrade-replacements.rst
.. include:: /includes/upgrade-copy.rst

.. |downgrading| replace:: :doc:`downgrading </release-notes/4.2-downgrade-sharded-cluster>`

Read Concern Majority (3-Member Primary-Secondary-Arbiter Architecture)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 3.6, MongoDB enables support for
:readconcern:`"majority"` read concern by default.

You can disable read concern :readconcern:`"majority"` to prevent the
storage cache pressure from immobilizing a three-member replica set
with a primary-secondary-arbiter (PSA) architecture or a sharded
cluster with a three-member PSA shards.

.. note::

   .. include:: /includes/extracts/transactions-read-concern-majority.rst

   .. include:: /includes/fact-disable-majority-rc-rollbacks.rst

   .. include:: /includes/extracts/changestream-disable-rc-majority.rst

   When upgraded to 4.2 with read concern "majority" disabled, you can
   use change streams for your deployment.

For more information, see :ref:`disable-read-concern-majority`.

Change Stream Resume Tokens
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 4.2 uses the version 1 (i.e. ``v1``) change streams
:ref:`resume tokens <change-stream-resume-token>`, introduced in
version 4.0.7.

.. include:: /includes/extracts/changestream-resume-token-versions-4.2-greater.rst

.. note:: When upgrading from MongoDB 4.0.6 or earlier to MongoDB |newversion|


   During the upgrade process, the members of the sharded clusters will
   continue to produce ``v0`` tokens until the first
   :binary:`~bin.mongos` instance is upgraded. The upgrade
   :binary:`~bin.mongos` instances will begin producing ``v1`` change
   stream resume tokens. These cannot be used to resume a stream on a
   :binary:`~bin.mongos` which has not yet been upgraded.

Prerequisites
-------------

All Members Version
~~~~~~~~~~~~~~~~~~~

To upgrade a sharded cluster to |newversion|, **all** members of the
cluster must be at least version |oldversion|. The upgrade process
checks all components of the cluster and will produce warnings if any
component is running version earlier than |oldversion|.

MMAPv1 to WiredTiger Storage Engine
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 4.2 removes support for the deprecated MMAPv1 storage engine.

If your 4.0 deployment uses MMAPv1, you must change the 4.0 deployment
to :doc:`/core/wiredtiger` before upgrading to MongoDB 4.2. For details,
see :doc:`/tutorial/change-sharded-cluster-wiredtiger`.

Review Current Configuration
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

With MongoDB 4.2, the :binary:`mongod <bin.mongod>` and
:binary:`mongos <bin.mongos>` processes will not start with
:ref:`4.2-mmapv1-conf-options`. Previous versions of MongoDB running
WiredTiger ignored MMAPv1 configurations options if they were specified.
With MongoDB 4.2, you must remove these from your configuration.

Feature Compatibility Version
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The |oldversion| sharded cluster must have
``featureCompatibilityVersion`` set to ``4.0``. 

To ensure that all members of the sharded cluster have
``featureCompatibilityVersion`` set to ``4.0``, connect to each
shard replica set member and each config server replica set member
and check the ``featureCompatibilityVersion``:

.. tip::

   For a sharded cluster that has access control enabled, to run the
   following command against a shard replica set member, you must
   connect to the member as a :ref:`shard local user
   <shard-local-users>`.

.. code-block:: javascript

   db.adminCommand( { getParameter: 1, featureCompatibilityVersion: 1 } )

All members should return a result that includes
``"featureCompatibilityVersion" : { "version" : "4.0" }``.

To set or update ``featureCompatibilityVersion``, run the
following command on the :binary:`~bin.mongos`:

.. code-block:: javascript

   db.adminCommand( { setFeatureCompatibilityVersion: "4.0" } )

For more information, see
:dbcommand:`setFeatureCompatibilityVersion`.

Replica Set Member State
~~~~~~~~~~~~~~~~~~~~~~~~

For shards and config servers, ensure that no replica set member is in
:replstate:`ROLLBACK` or :replstate:`RECOVERING` state.

Back up the ``config`` Database
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

*Optional but Recommended.* As a precaution, take a backup of the
``config`` database *before* upgrading the sharded cluster.

Hashed Indexes on PowerPC
~~~~~~~~~~~~~~~~~~~~~~~~~

*For PowerPC Only*

For :doc:`hashed indexes </core/index-hashed>`, MongoDB 4.2 ensures
that the hashed value for the floating point value 2\ :sup:`63` on
PowerPC is consistent with other platforms. 

Although :doc:`hashed indexes </core/index-hashed>` on a field that may
contain floating point values greater than 2\ :sup:`63` is an
unsupported configuration, clients may still insert documents where the
indexed field has the value 2\ :sup:`63`.

- If the current MongoDB 4.0 sharded cluster on *PowerPC* has hashed
  shard key values for 2\ :sup:`63`, then, before upgrading:

  #. Make a backup of the docs; e.g. :binary:`~bin.mongoexport` with
     the ``--query`` to select the documents
     with 2\ :sup:`63` in the shard key field.

  #. Delete the documents with the 2\ :sup:`63` value.

  After you upgrade following the procedure below, you will import the
  deleted documents.

- If an existing MongoDB 4.0 collection on *PowerPC* has a hashed index
  entry for the value 2\ :sup:`63` that is not used as the shard key,
  you also have the option to drop the index before upgrading and then
  re-create it after the upgrade is complete.

To list all hashed indexes for your deployment and find documents whose
indexed field contains the value 2\ :sup:`63`
:ref:`Hashed Indexes and PowerPC check<hashed-index-power-pc-check>`.

Download |newversion| Binaries
------------------------------

Use Package Manager
~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-upgrade-with-package-mgr.rst

Download |newversion| Binaries Manually
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you have not installed MongoDB using a package manager, you can
manually download the MongoDB binaries from the `MongoDB Download
Center <https://www.mongodb.com/download-center?tck=docs_server>`_.

See |installationdoc| for more information.

Upgrade Process
---------------

.. include:: /includes/steps/4.2-upgrade-sharded-cluster.rst

Post Upgrade
------------

``TLS`` Options Replace Deprecated ``SSL`` Options
  .. include:: /includes/extracts/4.2-changes-options-tls-ssl-upgrade.rst

4.2-Compatible Drivers Retry Writes by Default
  .. include:: /includes/extracts/4.2-changes-drivers-retryWrites-default.rst

PowerPC and Hashed Index Value of  2\ :sup:`63`
   If on PowerPC, you had found hashed index field with the value 2\
   :sup:`63`,

   - If you deleted the documents, replace them from the export (done
     as part of the prerequisites).

   - If you dropped the hashed index before upgrading, recreate the
     index.

Additional Upgrade Procedures
-----------------------------

- To upgrade a standalone, see :ref:`4.2-upgrade-standalone`.
- To upgrade a replica set, see :ref:`4.2-upgrade-replica-set`.
