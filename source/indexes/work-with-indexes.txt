.. _cpp-work-with-indexes:

=================
Work with Indexes
=================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. facet::
   :name: genre
   :values: reference
 
.. meta::
   :keywords: query, optimization, efficiency

Overview
--------

In this guide, you can learn how to use **indexes** with the {+driver-short+}.
Indexes can improve the efficiency of queries and add additional functionality
to querying and storing documents.

Without indexes, MongoDB must scan every document in a collection to find the
documents that match each query. If an appropriate index exists for a query, 
MongoDB can use the index to limit the documents it must inspect and 
improve potential query performance. 

Operational Considerations
~~~~~~~~~~~~~~~~~~~~~~~~~~

To improve query performance, build indexes on fields that appear often in
your application's queries and operations that return sorted results. Each
index that you add consumes disk space and memory when active, so we recommend
that you track index memory and disk usage for capacity planning. In addition,
when a write operation updates an indexed field, MongoDB also updates any related
index.

Because MongoDB supports dynamic schemas, applications can query against fields
whose names are not known in advance or are arbitrary. MongoDB 4.2 introduced
:manual:`wildcard indexes </core/index-wildcard/>` to help support these
queries. Wildcard indexes are not designed to replace workload-based index
planning.

For more information about designing your data model and choosing indexes appropriate for your application, see the
:manual:`Data Modeling and Indexes </core/data-model-operations/#indexes>` guide
in the {+mdb-server+} manual.

Sample Data
~~~~~~~~~~~

The examples in this guide use the ``movies`` collection in the ``sample_mflix``
database from the :atlas:`Atlas sample datasets </sample-data>`. To access this collection
from your C++ application, instantiate a ``mongocxx::client`` that connects to an Atlas cluster
and assign the following values to your ``db`` and ``collection`` variables:

.. literalinclude:: /includes/indexes/indexes.cpp
    :start-after: start-db-coll
    :end-before: end-db-coll
    :language: cpp
    :dedent:

To learn how to create a free MongoDB Atlas cluster and load the sample datasets, see the
:atlas:`Get Started with Atlas </getting-started>` guide.

Create an Index
---------------

MongoDB supports several index types to help query your data.
The following pages describe different index types and provide sample
code to create each type of index:

- :ref:`cpp-single-field-index`
- :ref:`cpp-compound-index`

.. _cpp-indexes-remove:

Remove an Index
---------------

You can remove any unused index except the default unique index on the
``_id`` field.

The following sections provide examples that show how to remove one or more indexes from a collection.

Remove a Single Index
~~~~~~~~~~~~~~~~~~~~~

To remove a single index from a collection, call the ``drop_one()`` method and pass in 
the index name or an instance of the index you want to remove.  

The following example removes an index with the name ``"title_1"`` from the ``movies``
collection:

.. literalinclude:: /includes/indexes/indexes.cpp
   :language: cpp
   :start-after: start-remove-index
   :end-before: end-remove-index
   :dedent:

.. note::

   You cannot remove a single field from a compound text index. You must
   drop the entire index and create a new one to update the indexed
   fields.

Remove All Indexes
~~~~~~~~~~~~~~~~~~

Starting with MongoDB 4.2, you can drop all indexes by calling the
``drop_all()`` method on the index view in your collection:

.. literalinclude:: /includes/indexes/indexes.cpp
   :language: cpp
   :start-after: start-remove-all-indexes
   :end-before: end-remove-all-indexes
   :dedent:

For earlier versions of MongoDB, pass ``"*"`` as a parameter to your call to
``drop_one()`` on the index view in your collection:

.. literalinclude:: /includes/indexes/indexes.cpp
   :language: cpp
   :start-after: start-remove-all-wildcard
   :end-before: end-remove-all-wildcard
   :dedent:

Additional Information
----------------------

To learn more about indexes in MongoDB, see the :manual:`Indexes </indexes>`
guide in the {+mdb-server+} manual.

API Documentation
~~~~~~~~~~~~~~~~~

To learn more about the methods or types discussed in this
guide, see the following API documentation:

- `create_index() <{+api+}/classmongocxx_1_1v__noabi_1_1collection.html#a39cf05fd8da3a7993929c8bfd3de9b46>`__
- `drop_one() <{+api+}/classmongocxx_1_1v__noabi_1_1index__view.html#a1779a23bd9565cf295cc2479b6e5981a>`__
- `drop_all() <{+api+}/classmongocxx_1_1v__noabi_1_1index__view.html#a2fc4f2778ce800076368f026fd2649d8>`__
- `indexes() <{+api+}/classmongocxx_1_1v__noabi_1_1collection.html#aac9843f8a560d39b85ef24a651d66e3b>`__