.. _scala-stable-api:

===========
Stable API
===========

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: compatible, backwards, upgrade

Overview
--------

In this guide, you can learn how to specify **{+stable-api+}** compatibility when 
connecting to a MongoDB deployment.

The {+stable-api+} feature forces the server to run operations with behaviors compatible 
with the API version you specify. Using the {+stable-api+} ensures consistent responses 
from the server and provides long-term API stability for your application.

The following sections describe how you can enable and customize {+stable-api+} for
your MongoDB client. For more information about the {+stable-api+}, including a list of 
the commands it supports, see :manual:`Stable API </reference/stable-api/>` in the
{+mdb-server+} manual.

Enable the {+stable-api+}
-------------------------

To enable the {+stable-api+}, perform the following steps:

1. Construct a ``ServerApi`` object and specify a {+stable-api+} version. You must use
   a {+stable-api+} version defined in the ``ServerApiVersion`` enum.
#. Construct a ``MongoClientSettings`` object by using the ``MongoClientSettings.Builder`` class.
#. Instantiate a ``MongoClient`` by using the constructor and 
   pass your ``MongoClientSettings`` instance as a parameter.

The following code example shows how to specify {+stable-api+} version 1:

.. literalinclude:: /includes/connect/stable-api.scala
   :start-after: start-enable-stable-api
   :end-before: end-enable-stable-api
   :language: scala
   :copyable:
   :dedent:

Once you create a ``MongoClient`` instance with
a specified API version, all commands that you run with the client use the specified
version. If you must run commands using more than one version of the 
{+stable-api+}, create a new ``MongoClient``.

Configure the {+stable-api+}
----------------------------

The following table describes {+stable-api+} options that you can set by calling methods
from the ``ServerApi`` class. You can use these options to customize the behavior of the
{+stable-api+}.

.. list-table::
   :header-rows: 1
   :stub-columns: 1
   :widths: 25,75

   * - Option Name
     - Description

   * - strict
     - | **Optional**. When ``true``, if you call a command that isn't part of 
         the declared API version, the driver raises an exception.
       |
       | Default: **false**

   * -  deprecationErrors
     - | **Optional**. When ``true``, if you call a command that is deprecated in the 
         declared API version, the driver raises an exception.
       |
       | Default: **false**

The following code example shows how you can set the two options on an instance of ``ServerApi``
by chaining methods on the ``ServerApi.Builder``:

.. literalinclude:: /includes/connect/stable-api.scala
   :start-after: start-stable-api-options
   :end-before: end-stable-api-options
   :language: scala
   :copyable:
   :dedent:

Troubleshooting
---------------

Unrecognized field 'apiVersion' on server
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The {+driver-short+} raises this exception if you specify an API version and connect to a
MongoDB server that doesn't support the {+stable-api+}. Ensure you're connecting to a
deployment running {+mdb-server+} v6.0 or later.

Provided apiStrict:true, but the command count is not in API Version
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The {+driver-short+} raises this exception if your ``MongoClient`` runs an operation that
isn't in the {+stable-api+} version you specified. To avoid this error, use an alternative
operation supported by the specified {+stable-api+} version, or set the ``strict``
option to ``false`` when constructing your ``ServerApi`` object.

API Documentation
-----------------

For more information about using the {+stable-api+} with the {+driver-short+}, see the 
following API documentation: 

- `ServerApi <{+core-api+}/com/mongodb/ServerApi.html>`__
- `ServerApi.Builder <{+core-api+}/com/mongodb/ServerApi.Builder.html>`__
- `ServerApiVersion <{+core-api+}/com/mongodb/ServerApiVersion.html>`__
- `ServerAddress <{+api+}/org/mongodb/scala/ServerAddress$.html>`__
- `MongoClientSettings <{+api+}/org/mongodb/scala/MongoClientSettings$.html>`__
- `MongoClientSettings.Builder <{+core-api+}/com/mongodb/MongoClientSettings.Builder.html>`__
- `MongoClient <{+api+}/org/mongodb/scala/MongoClient$.html>`__
