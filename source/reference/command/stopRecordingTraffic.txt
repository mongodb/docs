=====================
stopRecordingTraffic
=====================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. dbcommand:: stopRecordingTraffic

   .. versionadded:: 4.2

   Stops the MongoDB traffic recorder and reports on errors that may
   have occurred during the recording. The recorder captures all
   incoming wire protocol traffic to a :binary:`~bin.mongod` or
   :binary:`~bin.mongos` instance (and the corresponding responses) and
   outputs to a specified file.

   .. warning::

      The recording file contains **unencrypted** user traffic
      information. If possible, limit the retention of this file and
      store it on an encrypted filesystem volume.

   The command has the following form:

   .. code-block:: javascript

      db.runCommand( { stopRecordingTraffic: 1 } )

Behavior
--------

When :dbcommand:`stopRecordingTraffic` stops the recorder, it also
reports on errors that may have occurred during the recording. For
example:

- If the recorder exceeded the maximum size for the output file.

- If the recorder exceeded the maximum size of the in-memory buffer for
  traffic records.

- If the recorder encountered an I/O error.

To specify the maximum output file size or the maximum in-memory
buffer size, see :dbcommand:`startRecordingTraffic`.

To view statistics on the traffic recorder, run
:method:`db.serverStatus()` while the recorder is running to see
:serverstatus:`trafficRecording` metrics.

Required Access
---------------

When running with access control, the user must have the
:authaction:`trafficRecord` privilege action on the cluster resource.
That is, the user must have a :ref:`role <roles>` that grants the
following :ref:`privilege <privileges>`:

.. code-block:: javascript

   { resource: { cluster: true }, actions: [ "trafficRecord" ] }

The built-in :authrole:`hostManager` role provides the required
privileges.


Example
-------

The following example stops recording all incoming and outgoing traffic
for the :binary:`~bin.mongod`/:binary:`~bin.mongos` where the command
is run:

.. code-block:: javascript

   db.runCommand( { stopRecordingTraffic: 1 } )

.. warning::

   The recording file contains **unencrypted** user traffic
   information. If possible, limit the retention of this file.
