===================
Backup Preparations
===================

.. default-domain:: mongodb

Overview
--------

Before backing up your cluster or replica set, decide how to back up the
data and what data to back up. This page describes items you must consider
before starting a backup. 

.. only:: cloud or onprem

   For an overview of how Backup works, see
   :ref:`mms-backup-functional-overview`.

.. _snapshot-frequency-and-retention:

Snapshot Frequency and Retention Policy
---------------------------------------

By default, |mms| takes a base snapshot of your data every 6 hours. If
desired, administrators can change the frequency of base snapshots to 8,
12, or 24 hours. |mms| creates snapshots automatically on a schedule. You
cannot take snapshots on demand.

|mms| retains snapshots for the time periods listed in the following
table. If you terminate a backup, |mms| immediately deletes the backup's
snapshots.

.. list-table::
   :widths: 30 30 40
   :header-rows: 1

   * - Snapshot
     - Default Retention Policy
     - Maximum Retention Setting
   * - Base snapshot.
     - 2 days
     - 5 days.
   * - Daily snapshot
     - 1 week
     - 1 year
   * - Weekly snapshot
     - 1 month
     - 1 year
   * - Monthly snapshot
     - 1 year
     - 3 years.

.. only:: cloud

   Changes to the snapshot schedule affect your :ref:`snapshot storage
   costs <backup-pricing>`.


You can change a backed-up deployment's schedule through its
:guilabel:`Edit Snapshot Schedule` menu option, available through the
:guilabel:`Backup` tab. Administrators can change snapshot frequency and
retention through the :doc:`snapshotSchedule resource in the API
</reference/api/snapshot-schedule>`. If you change the schedule to save
fewer snapshots, |mms| does **not** delete existing snapshots to conform
to the new schedule. To delete unneeded snapshots, see
:doc:`/tutorial/delete-backup-snapshots`.

.. _namespaces-filter:

Namespaces Filter
-----------------

The namespaces filter lets you specify which databases and collections to
back up. You create either a :guilabel:`Blacklist` of those to exclude or
a :guilabel:`Whitelist` of those to include. You make your selections when
starting a backup and can later edit them as needs change.

Use the blacklist to prevent backup of collections that contain
logging data, caches, or other ephemeral data. Excluding these kinds of
databases and collections will allow you to reduce backup time and costs.

Using a blacklist is often preferable to using a whitelist as a whitelist
requires you to intentionally opt in to every namespace you want backed
up.

.. _considerations-backup-storage-engine:

Storage Engine
--------------

When you enable backups for a cluster or replica set that runs on MongoDB
3.0 or higher, you can choose the storage engine for the backups. Your
choices are the MMAPv1 engine or WiredTiger engine. If you do not specify
a storage engine, |mms| uses MMAPv1 by default. For more information on
storage engines, see :manual:`Storage </core/storage>` in the MongoDB
manual.

You can choose a different storage engine for a backup than you do for the
original data. There is no requirement that the storage engine for a backup
match that of the data it replicates. If your original data uses MMAPv1,
you can choose WiredTiger for backing up, and vice versa.

You can change the storage engine for a cluster or replica set's backups
at any time, but doing so requires an :term:`initial sync` of the backup
on the new engine.

If you choose the WiredTiger engine to back up a collection that
already uses WiredTiger, the initial sync replicates all the
collection's WiredTiger options. For information on these options,
see the ``storage.wiredTiger.collectionConfig`` section of the
:manual:`Configuration File Options </reference/configuration-options>`
page in the MongoDB manual.

.. only:: onprem

   For collections created after initial sync, the Backup Daemon uses its
   own defaults for storing data. The Daemon will not replicate any
   WiredTiger options for a collection created after iniitial sync.

   .. important::
   
      The storage engine chosen for a backup is *independent* from the
      storage engine used by the Backup Database. 
      If the :ref:`Backup Database <mms-backup-blockstore-database>` uses the MMAPv1 storage engine, it
      can store backup snapshots for WiredTiger backup jobs in its
      blockstore.
      

Index collection options are never replicated.

Resyncing Production Deployments
--------------------------------

For production deployments, it is recommended that as a best practice you
periodically (annually) :doc:`resync </tutorial/resync-backup>` all
backed-up replica sets. When you resync, data is read from a secondary in
each replica set. During resync, no new snapshots are generated.

.. _checkpoint:

Checkpoints
-----------

For :term:`sharded clusters <sharded cluster>`, checkpoints provide
additional restore points between snapshots. With
checkpoints enabled, |mms| Backup creates restoration points at
configurable intervals of every 15, 30 or 60 minutes between
snapshots. To enable checkpoints, see :ref:`enable checkpoints
<enable-cluster-checkpoints>`.

To create a checkpoint, |mms| Backup stops the :term:`balancer`
and inserts a token into the :term:`oplog` of each
:term:`shard` and :term:`config server` in the cluster. These
checkpoint tokens are lightweight and do not have a consequential
impact on performance or disk use.

Backup does not require checkpoints, and they are disabled by default.

Restoring from a checkpoint requires |mms| Backup to apply the oplog of
each shard and config server to the last snapshot captured before the
checkpoint. Restoration from a checkpoint takes longer than
restoration from a snapshot.

.. _snapshot-while-balancer-enabled:

Snapshots when Agent Cannot Stop Balancer
-----------------------------------------

For :term:`sharded clusters <sharded cluster>`,
|mms| disables the :term:`balancer` before taking a
cluster snapshot. In certain situations, such as a long migration or no
running :program:`mongos`, |mms| tries to disable the balancer but cannot.
In such cases, |mms| will continue to take cluster snapshots but will flag
the snapshots with a warning that data may be incomplete and/or
inconsistent. Cluster snapshots taken during an active balancing
operation run the risk of data loss or orphaned data.

Snapshots when Agent Cannot Contact a ``mongod``
------------------------------------------------

For :term:`sharded clusters <sharded cluster>`,
if the Backup Agent cannot reach a :program:`mongod` instance, whether a
shard or config server, then the agent cannot insert a synchronization
:term:`oplog` token. If this happens, |mms| will not create the snapshot and
will display a warning message.
