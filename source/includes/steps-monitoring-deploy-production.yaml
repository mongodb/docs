title: Daemonize the Process
stepnum: 1
ref: daemonize-the-process
action:
  pre: |
    As a temporary measure, the following command will start the agent
    process detached from the current terminal session:
  language: sh
  code: |
    nohup python agent.py > /[LOG-DIRECTORY]/agent.log 2>&1 &
post: |
  Replace ``[LOG-DIRECTORY]`` with the path to your MongoDB logs.

  This command allows the agent survive the current terminal session and
  writes all messages to the ``agent.log`` file. You may include this
  command in your MongoDB control script or use your system's
  ``/etc/rc.local`` equivalent; however, avoid running the agent as
  root.
---
title: Create Control Scripts
stepnum: 2
ref: create-control-scripts
action:
  - pre: |
      If you need to create an initialization script to control the
      daemonized process, consider the resources listed in the Additional 
      Information section below.
  
      You may also examine the scripts in your system's ``/etc/init.d/`` or
      ``/etc/rc.d/`` directory. Ensure that the agent does not run with root
      privileges.
  
      Use the ``update-rc.d`` utility on Debian and Ubuntu and the
      ``chkconfig`` tool on Red Hat related systems to add these scripts to
      the initialization process. Be sure to test the control script
      configuration. It is essential that you be able to start, stop, and
      restart the agent following a system reboot.
  - pre: |
      These resources provide details about control scripts:
  - pre: |
      - `Ubuntu Boot Up How To <https://help.ubuntu.com/community/UbuntuBootupHowto>`_
  - pre: |
      - `Debian Linux Control/Init Scripts <http://wiki.debian.org/LSBInitScripts>`_
  - pre: |
      - `Arch Linux rc.d Scripts <https://wiki.archlinux.org/index.php/Writing_rc.d_scripts>`_
  - pre: |
      - Debian and Ubuntu Systems have an example control script located at ``/etc/init.d/skeleton`` that you can use as a template.
  - pre: |
      - Red Hat Enterprise Linux and related distributions (e.g. Fedora, CentOS, etc.) provide example control scripts in the``/usr/share/doc/initscripts-*/sysvinitfiles/`` directory.
---
title: Automate Agent Deployments
stepnum: 3
ref:  automate-agent-deployments
action:
  - pre: |
      The agent you downloaded from the |mms| site is automatically
      configured with the credentials for your account. You can download a
      configured copy of the Monitoring agent by from the
      :guilabel:`Monitoring Agent` section of the :guilabel:`Settings` page
      by selecting :guilabel:`Download Monitoring Agent (zip)` or
      :guilabel:`Download Monitoring Agent (tar.gz)`. The URL for the
      configured agent will resemble the following:
      language: none
    code: |
      https://mms.mongodb.com/settings/mmsAgent/<hash>/mms-monitoring-agent-<group-name>.zip
  - pre: |
      Alternately, you may automate Monitoring agent deployments using an
      unconfigured agent and the API from the :guilabel:`API Settings` section of the
      :guilabel:`Settings` page. The unconfigured agent is available at the following
      URLs:
    language: none
    code: |
      https://mms.mongodb.com/settings/mms-monitoring-agent.zip
      https://mms.mongodb.com/settings/mms-monitoring-agent.tar.gz
post: |
  Extract this archive and edit the ``settings.py`` file, replacing the
  strings "``@API_KEY@``" with the "API" defined for your account.

  You may embed this process in your existing deployment scripts to
  automatically install or redeploy new agents.
---
title: Configure any Proxies
stepnum: 4
ref: configure-any-proxies
action:
  pre: |
    You will need to export the "``https_proxy``"
    environment variable (or "``HTTPS_PROXY``" on Windows). To do so, issue the
    following command before running the Monitoring agent:
  language: sh
  code: |
    export https_proxy='http://proxyserver.example.net:port"
post: |
  Replace "``http://proxyserver.example.net``" with the name or IP
  address of the proxy server and "``port`` with the TCP port that the
  proxy service runs on. You may choose to export this variable inside
  of your control script.
...