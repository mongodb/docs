object:
  name: geoNear
  type: command
field:
  optional: false
  type: field
name: geoNear
type: string
position: 1
description: |
  :dbcommand:`geoNear` only. The collection to query.
---
object:
  name: geoNear
  type: command
field:
  optional: false
  type: field
name: near
type: 
  - GeoJSON point (:dbcommand:`geoNear` only)
  - :term:`legacy coordinate pairs <legacy coordinate pairs>`
position: 2
description: |
  The point for which to find the closest documents.
---
object:
  name: geoNear
  type: command
field:
  optional: false
  type: field
name: distanceField
type: string
position: 3
description: |
  :pipeline:`$geoNear` only. The output field that contains the
  calculated distance. To specify a field within a subdocument,
  use :term:`dot notation`.
---
object:
  name: geoNear
  type: command
field:
  optional: true
  type: field
name: limit
type: number
position: 4
description: |
  The maximum number of documents to return. The default value is ``100``.
  See also the ``num`` option.
---
object:
  name: geoNear
  type: command
field:
  optional: true
  type: field
name: num
type: number
position: 5
description: |
  The ``num`` option provides the same function as the ``limit`` option.
  Both define the maximum number of documents to return. If both options
  are included, the ``num`` value overrides the ``limit`` value.
---
object:
  name: geoNear
  type: command
field:
  optional: true
  type: field
name: maxDistance
type: number
position: 6
description: |
  A distance from the center point. Specify the distance in meters for
  :term:`GeoJSON` data (which is used only by :dbcommand:`geoNear`) and
  in radians for :term:`legacy coordinate pairs <legacy coordinate
  pairs>`. MongoDB limits the results to those documents that fall
  within the specified distance from the center point.
---
object:
  name: geoNear
  type: command
field:
  optional: true
  type: field
name: query
type: document
position: 7
description: |
  Limits the results to the documents that match the query. The query
  syntax is the usual MongoDB :ref:`read operation query
  <read-operations-query-argument>` syntax.
---
object:
  name: geoNear
  type: command
field:
  optional: true
  type: field
name: spherical
type: Boolean
position: 8
description: |
  If ``true``, MongoDB references points using a spherical surface. The
  default value is ``false``.
---
object:
  name: geoNear
  type: command
field:
  optional: true
  type: field
name: distanceMultiplier
type: number
position: 9
description: |
  The factor to multiply all distances returned by the query. For
  example, use the ``distanceMultiplier`` to convert radians, as
  returned by a spherical query, to kilometers by multiplying by the
  radius of the Earth.
---
object:
  name: geoNear
  type: command
field:
  optional: true
  type: field
name: includeLocs
type: 
  - Boolean (:dbcommand:`geoNear` only)
  - string (:pipeline:`$geoNear` only)
position: 10
description: |
  For the :dbcommand:`geoNear` command, if this is ``true``, the query
  returns the location of the matching documents in the results. The
  default is ``false``. For the :pipeline:`$geoNear` operator, this
  identifies the location used to calculate the distance. This option is
  useful when a location field contains multiple locations. To specify a
  field within a subdocument, use :term:`dot notation`.
---
object:
  name: geoNear
  type: command
field:
  optional: true
  type: field
name: uniqueDocs
type: Boolean
position: 11
description: |
  If this value is ``true``, the query returns a matching document once,
  even if more than one of the document's location fields match the
  query. If this value is ``false``, the query returns a document
  multiple times if the document has multiple matching location fields.
  See :operator:`$uniqueDocs` for more information.
...
