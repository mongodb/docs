ref: fts-search-nodes-cluster-tier
content: |
  You can deploy Search Nodes for dedicated (``M10`` or higher)
  {+clusters+} only. You can't add Search Nodes on free (``M0``) and
  shared (``M2`` and ``M5``) tier {+clusters+}. You can use the
  {+atlas-ui+} and the {+atlas-admin-api+} to provision Search Nodes for
  new and existing single-region {+clusters+} on |aws|, |gcp|, or |azure|. 

---
ref: fts-search-nodes-cloud-provider
content: |
  You can host the Search Nodes only on |aws| or |gcp|. You can't deploy 
  Search Nodes separately for |azure| {+clusters+} when you create or
  modify these {+clusters+}. You can't deploy Search Nodes separately
  for :ref:`serverless instances <create-new-serverless-instance>`,
  :ref:`multi-cloud clusters <create-cluster-multi-region>`, or
  :ref:`global clusters <global-clusters>`.

---
ref: fts-search-nodes-cloud-provider-regions
content: |
  |service| deploys the Search Nodes in the same |aws|, |gcp|, or |azure|
  region as your electable, read-only, and analytics nodes. 
  
  |service| supports deploying Search Nodes separately 
  for workload isolation in any |gcp| and |azure| region. However, you can't 
  deploy Search Nodes in certain |aws| regions. The
  following {+atlas-ui+} behavior applies:
  
  - If you select any of the following |aws| regions for your {+cluster+} 
    nodes first, |service| disables the :guilabel:`Search nodes for
    workload isolation` toggle.
  - If you enable :guilabel:`Search nodes for workload isolation`
    first, |service| disables the following in the dropdown for regions
    under :guilabel:`Electable nodes for high availability`.

  |service| doesn't support the following |aws| regions for search
  nodes.

  .. list-table:: 
     :header-rows: 1

     * - Region Name
       - AWS Region  

     * - Paris 
       - ``eu-west-3``

     * - Zurich 
       - ``eu-central-2`` 

     * - Milan 
       - ``eu-south-1``

     * - Spain 
       - ``eu-south-2``

     * - UAE 
       - ``me-central-1``

     * - Bahrain
       - ``me-south-1``

     * - Cape Town
       - ``af-south-1``

     * - Hong Kong
       - ``ap-east-1``

     * - Jakarta
       - ``ap-southeast-3``

     * - Melbourne 
       - ``ap-south-4``

     * - Hyderabad 
       - ``ap-south-2``

---
ref: fts-search-nodes-search-tier
content: |
  You can select a search tier for your Search Nodes in the
  :guilabel:`Search Tier` tab. 
  
  By default, |service| deploys Search Nodes on
  ``S20``. You can select a higher tier for faster queries and more
  complex aggregations, or a lower tier for smaller workloads. For some 
  tiers, you can also choose between low-CPU, which is recommended 
  for {+avs+}, and high-CPU, which is optimized for |fts|.
  
  For Search Nodes deployed on |aws|, |service| provides different search 
  tiers in different regions. If the search tier that you selected is not 
  available for your region, |service| automatically deploys the search 
  nodes in the next higher tier that is available in that region.
  To learn more, see :ref:`AWS Search Tiers <amazon-aws-search-tiers>`. 
  
  To learn more about search tiers for Search Nodes deployed on |gcp| 
  or |azure|, see:
  
  - :ref:`GCP Search Tiers <google-gcp-search-tiers>`
  - :ref:`Azure Search Tiers <microsoft-azure-search-tiers>`

---
ref: fts-migrate-delete-search-nodes
content: |
  If you delete all existing Search Nodes on your {+cluster+}, there will
  be a brief interruption in processing your search query results while
  |service| migrates from ``mongot`` processes running separately on
  dedicated Search Nodes to ``mongot`` processes running alongside
  ``mongod``. However, you won't experience any downtime while indexes
  are migrated and no stale data.

---
ref: fts-migrate-add-search-nodes
content: |
  When you add Search Nodes to a {+cluster+} that doesn't have any search
  nodes, the existing ``mongot`` processes running alongside ``mongod``
  tail writes to the database that happen after |fts| completed the
  initial sync and the ``mongot`` processes on the new dedicated search
  nodes perform an initial sync on the required collections. This
  results in dual reads during the migration process. 
  
...
