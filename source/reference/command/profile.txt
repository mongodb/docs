=======
profile
=======

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. dbcommand:: profile

   .. versionchanged:: 4.4.2

   For a :binary:`~bin.mongod` instance, the command enables, disables,
   or configures the :doc:`/tutorial/manage-the-database-profiler`. The
   profiler captures and records data on the performance of write
   operations, cursors, and database commands on a running
   :binary:`~bin.mongod` instance. If the profiler is disabled, the
   command configures how slow operations are logged to the diagnostic
   log.

   On :binary:`~bin.mongod`, if the :ref:`database profiler level
   <set-profiling-level-level>` is ``1`` or ``2`` (i.e. the
   :doc:`database profiler </tutorial/manage-the-database-profiler/>` is
   enabled), the :ref:`slowms <set-profiling-level-options-slowms>`,
   :ref:`sampleRate <set-profiling-level-options-sampleRate>`, and
   :ref:`filter <set-profiling-level-options-filter>` affect the
   behavior of both the profiler and the :option:`diagnostic log <mongod
   --logpath>`.

   If the :ref:`database profiler level <set-profiling-level-level>` is
   ``0`` (i.e. :doc:`database profiler
   </tutorial/manage-the-database-profiler/>` is disabled), the
   :ref:`slowms <set-profiling-level-options-slowms>`,
   :ref:`sampleRate <set-profiling-level-options-sampleRate>`, and
   :ref:`filter <set-profiling-level-options-filter>` affect
   only the diagnostic log.
   
   (*Starting in MongoDB 4.0*): For :binary:`~bin.mongos` instance, the
   command only configures how operations get written to the diagnostic
   log. You cannot enable the
   :doc:`/tutorial/manage-the-database-profiler` on a
   :binary:`~bin.mongos` instance because ``mongos`` does not have any
   collections that the profiler can write to.

   On :binary:`~bin.mongos`, you can set ``profile`` level to:

   - ``0`` to set the ``slowms``, ``sampleRate``, and ``filter`` for
     the diagnostic log;

   - ``-1`` to read the current settings.

   The profiler is off by default.

   .. include:: /includes/warning-profiler-performance.rst

   The :dbcommand:`profile` command has the following syntax:

   .. code-block:: javascript

      {
        profile: <level>,
        slowms: <threshold>,
        sampleRate: <rate>,
        filter: <filter expression>
      }

   .. _slowms-threshold-option:


   .. list-table::
      :header-rows: 1
      :widths: 20 20 80
   
      * - Field
   
        - Type
   
        - Description
   
      * - ``profile``
   
        - int
   
        - Configures the profiler level.
          The following profiler levels are available:
          
          .. include:: /includes/database-profiler-levels.rst
          
          Since profiling is not available on :binary:`~bin.mongos`, the
          :dbcommand:`profile` command cannot be used to set the profiling
          level to a value other than ``0`` on a :binary:`~bin.mongos` instance.
          
          
   
      * - ``slowms``
   
        - int
   
        - Optional. Default: 100
          
          .. include:: /includes/dbcommand-slowms-definition.rst
          
          .. note::
             This argument affects the same setting as the configuration option
             :setting:`~operationProfiling.slowOpThresholdMs`.
          
          
   
      * - ``sampleRate``
   
        - double
   
        - Optional. Default: 1.0
          
          | The fraction of *slow* operations that should be profiled or logged.
          | ``sampleRate`` accepts values between 0 and 1, inclusive.
          
          .. note::
          
             This argument affects the same setting as the configuration option
             :setting:`~operationProfiling.slowOpSampleRate` and does not
             affect the :ref:`slow oplog entry log messages on secondaries
             (available starting in MongoDB 4.2) <slow-oplog>`.
          
          .. versionadded:: 3.6

      * - ``filter``
        
        - object

        - Optional.

          A filter expression that controls which operations are
          profiled and logged.

          The ``filter`` expression takes the following form:
   
          .. code-block:: javascript
            
             { <field1>: <expression1>, ... }
            
          The ``<field>`` can be
          :ref:`any field in the profiler output <profiler>`. The
          ``<expression>`` is a
          :ref:`query condition expression <query-selectors>`.

          .. note::
          
             This argument affects the same setting as the configuration
             option :setting:`~operationProfiling.filter`. When
             ``filter`` is set, the ``slowms`` and ``sampleRate``
             options are not used for profiling and slow-query log
             lines.

          .. versionadded:: 4.4.2

The :method:`db.getProfilingStatus()` and
:method:`db.setProfilingLevel()` :doc:`shell methods
</reference/method>` provide wrappers around the :dbcommand:`profile`
command.

.. |binary| replace:: :binary:`~bin.mongod` or :binary:`~bin.mongos`

Behavior
--------

The :dbcommand:`profile` command obtains a write lock on the affected
database while enabling or disabling the profiler. This is typically a
short operation. The lock blocks other operations until the
:dbcommand:`profile` command has completed.

Starting in MongoDB 4.4.2, when connected to a sharded cluster through
:binary:`~bin.mongos`, you can run the :dbcommand:`profile` command
against any database. In previous versions of MongoDB, when connected
through :binary:`~bin.mongos`, you can only run the :dbcommand:`profile`
command against the ``admin`` database.

.. seealso::
   :ref:`Database Profiling <database-profiling>`.
