================
Restore Overview
================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

To restore a deployment from a backup, select a snapshot or point in
time from which you want to restore your database. |mms| provides you
with the files from which you can restore your database.

You can restore a single MongoDB database, a :term:`replica set`, or a
:term:`sharded cluster`. You may select to restore from:

- An existing :term:`snapshot`,
- A specific point in time by selecting:

  - A specific date and time,
  - A specific oplog timestamp, or
  - A specific :term:`sharded cluster` :term:`checkpoint`.

If you are restoring from a point in time, you must download
the MongoDB Backup Restore Utility to your target host. The :abbr:`MBRU
(MongoDB Backup Restore Utility)` requests and applies :term:`oplog`
entries between the latest complete snapshot and the point in time you
chose.

.. note::
   For sharded clusters,
   :ref:`enable checkpoints <enable-cluster-checkpoints>` before
   restoring to a point between snapshots.

You can restore your backup in one of the following ways:

- |mms| can
  :ref:`restore the files to another cluster <mms-automated-restore>`
  if you use |mms| automation.
- You can copy restored files
  :ref:`manually to the hosts you choose <mms-manual-restore>`.

- You can :doc:`restore from a queryable backup
  </tutorial/restore-single-database>`.

You may cancel a restore by going to the :guilabel:`Backup` >
:guilabel:`Restore History` tab and clicking on :guilabel:`Cancel`.

.. _mms-automated-restore:

Automated Restore
-----------------

If you choose to have |mms| automation restore your backup, the
{+aagent+} removes all existing data from the target hosts
and replaces that data with new backup data from your :term:`snapshot`.

.. _prerequisites-automatic-restore:

Prerequisites
~~~~~~~~~~~~~

To perform automated restores, you must have:

- An {+aagent+} installed on the source and all target
  hosts.

- A Monitoring Agent on the target deployment that can connect
  to all hosts in the target deployment.

- The :ref:`Backup Admin <backup-admin-role>` and
  :ref:`Automation Admin <automation-admin-role>` roles in |mms|.

- A target cluster whose ``featureCompatibilityVersion`` is greater than
  or equal to the source cluster's ``featureCompatibilityVersion``.

  .. example::

     Run the following command to retrieve the 
     ``featureCompatibilityVersion`` of a given host:
 
     .. class:: copyable-code
     .. code-block:: shell
 
        db.adminCommand( { getParameter: 1, featureCompatibilityVersion: 1 } )
 
     The ``featureCompatibilityVersion`` of each host in the target
     cluster must be greater than or equal to the 
     ``featureCompatibilityVersion`` of any host in the source cluster.

     See :manual:`setFeatureCompatibilityVersion 
     </reference/command/setFeatureCompatibilityVersion>` for complete 
     documentation on changing the ``featureCompatibilityVersion`` flag.

- The following compatibility matrix lists the supported source cluster 
  :abbr:`FCV (feature compatibility version)` of each MongoDB version. 
  The MongoDB version of each host in the target cluster *must* support 
  the :abbr:`FCV (feature compatibility version)` of the snapshot of the 
  source cluster.

  .. list-table::
      :header-rows: 1
      :stub-columns: 1
      :class: compatibility

      * - Source Cluster :abbr:`FCV (feature compatibility version)`
        - MongoDB 3.2
        - MongoDB 3.4
        - MongoDB 3.6

      * - ``3.2``
        - |checkmark|
        - |checkmark|
        - 

      * - ``3.4``
        - 
        - |checkmark|
        - |checkmark|

      * - ``3.6``
        -
        -
        - |checkmark|

.. |checkmark| unicode:: U+2713

Restore to Different Project
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-restore-different-group-requirements.rst

Potential Causes for Automated Restore Failure
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

An automated restore can fail when certain storage settings of the
backup's database and target database do not match:

- :setting:`storage.engine`
- :setting:`storage.directoryPerDB`
- :setting:`storage.mmapv1.nsSize`
- :setting:`storage.mmapv1.smallFiles`
- :setting:`storage.wiredTiger.collectionConfig.blockCompressor`
- :setting:`storage.wiredTiger.engineConfig.directoryForIndexes`

No method exists to check for mismatches before attempting a restore. If
a restore attempt fails, |mms| displays any mismatched settings. If you
still want to restore the backup's database, fix the settings in the
target database that do not match backup's database, then retry the
restoring the backup's database.

.. important::

   .. include:: /includes/fact-mmapv1-deprecated.rst


Restore Procedures
~~~~~~~~~~~~~~~~~~

To perform an automated restore, see the procedure for the deployment
you want to restore:

- :ref:`Replica Set <automatic-restore-replica-set>`
- :ref:`Sharded Cluster <automatic-restore-sharded-cluster>`

.. _mms-manual-restore:

Manual Restore
--------------

Prerequisites
~~~~~~~~~~~~~

To perform manual restores, you must have the
:ref:`Backup Admin <backup-admin-role>` role in |mms|.

.. _delivery-methods-file-formats:

Considerations
~~~~~~~~~~~~~~

Restore File Format
+++++++++++++++++++

.. only:: onprem

   |mms| provides each :term:`snapshot` as an uncompressed (``.tar``)
   or compressed (``.tar.gz``) archive containing a complete copy of the
   data directory.

   Choosing compressed :term:`snapshots <snapshot>` results in faster
   delivery, but requires sufficient space on the target host for both
   the compressed snapshot and its extracted database files.

.. only:: cloud

   |mms| provides each :term:`snapshot` as an uncompressed (``.tar``)
   archive containing a complete copy of the data directory.

- For a :term:`replica set`, |mms| provides one :term:`snapshot` that
  you copy to each replica set member.

- For a sharded cluster, |mms| provides one :term:`snapshot` for the
  :term:`config servers <config server>` and one :term:`snapshot` for
  each :term:`shard`.

.. cond:: onprem

   Restore Process Flows
   ~~~~~~~~~~~~~~~~~~~~~

   The following pages illustrate the process flows for manual restores
   using the different restore methods:

   .. include:: /includes/toc/backup-restore-flows.rst

Manual Restore Procedures
~~~~~~~~~~~~~~~~~~~~~~~~~

To perform a manual restore, see the procedure for the deployment
you want to restore:

- :doc:`Single Database/Collection using Queryable Backup</tutorial/restore-single-database>`
- :ref:`Replica Set <manual-restore-replica-set>`
- :ref:`Sharded Cluster <manual-restore-sharded-cluster>`

