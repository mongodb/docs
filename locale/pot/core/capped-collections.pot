# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/capped-collections.txt:3
# a92dce4003cf4f6488ed0bc430c0da9e
msgid "Capped Collections"
msgstr ""

#: ../source/core/capped-collections.txt:7
# ace47b2f7ae74b2a9a458aaeeeb663e9
msgid ":term:`Capped collections <capped collection>` are fixed-size collections that support high-throughput operations that insert and retrieve documents based on insertion order. Capped collections work in a way similar to circular buffers: once a collection fills its allocated space, it makes room for new documents by overwriting the oldest documents in the collection."
msgstr ""

#: ../source/core/capped-collections.txt:14
# 0843273d44ae41279671c75b0f4da534
msgid "See :method:`~db.createCollection()` or :dbcommand:`create` for more information on creating capped collections."
msgstr ""

#: ../source/core/capped-collections.txt:17
# f838c24a862843458c93b3153c668569
msgid "Capped collections have the following behaviors:"
msgstr ""

#: ../source/core/capped-collections.txt:19
# 01c6e6a9f0b04d2db96fe6fad17e0712
msgid "Capped collections guarantee preservation of the insertion order. As a result, queries do not need an index to return documents in insertion order. Without this indexing overhead, they can support higher insertion throughput."
msgstr ""

#: ../source/core/capped-collections.txt:24
# 9ba06a1c46c04d9cb06edc76a8374768
msgid "Capped collections guarantee that insertion order is identical to the order on disk (:term:`natural order`) and do so by prohibiting updates that increase document size. Capped collections only allow updates that fit the original document size, which ensures a document does not change its location on disk."
msgstr ""

#: ../source/core/capped-collections.txt:30
# 58cee741f83548c7bccda4ff4769eb6f
msgid "Capped collections automatically remove the oldest documents in the collection without requiring scripts or explicit remove operations."
msgstr ""

#: ../source/core/capped-collections.txt:33
# 22f532c66f4a44209084b18a34bf6cc0
msgid "For example, the :term:`oplog.rs <oplog>` collection that stores a log of the operations in a :term:`replica set` uses a capped collection. Consider the following potential use cases for capped collections:"
msgstr ""

#: ../source/core/capped-collections.txt:38
# 0fc63532d4fa49f2acf11030f4b97b76
msgid "Store log information generated by high-volume systems. Inserting documents in a capped collection without an index is close to the speed of writing log information directly to a file system. Furthermore, the built-in *first-in-first-out* property maintains the order of events, while managing storage use."
msgstr ""

#: ../source/core/capped-collections.txt:44
# 40d5e9e3409640d086cc1cdc3a1d4443
msgid "Cache small amounts of data in a capped collections. Since caches are read rather than write heavy, you would either need to ensure that this collection *always* remains in the working set (i.e. in RAM) *or* accept some write penalty for the required index or indexes."
msgstr ""

#: ../source/core/capped-collections.txt:53
# 4791f491152b4da0b484c116c64850df
msgid "Recommendations and Restrictions"
msgstr ""

#: ../source/core/capped-collections.txt:55
# 771daf86016b4d14bf15ba421d79658c
msgid "You can only make in-place updates of documents. If the update operation causes the document to grow beyond their original size, the update operation will fail."
msgstr ""

#: ../source/core/capped-collections.txt:59
# ee211eb82c744c0296fffb06d43af2fc
msgid "If you plan to update documents in a capped collection, create an index so that these update operations do not require a table scan."
msgstr ""

#: ../source/core/capped-collections.txt:62
# 556e2c68d2fd470897bd529b126e2091
msgid "If you update a document in a capped collection to a size smaller than its original size, and then a secondary resyncs from the primary, the secondary will replicate and allocate space based on the current smaller document size. If the primary then receives an update which increases the document back to its original size, the primary will accept the update but the secondary will fail with a ``failing update: objects in a capped ns cannot grow`` error message."
msgstr ""

#: ../source/core/capped-collections.txt:70
# 622b98d4f43d4e5ea0ec38b6b5a96573
msgid "To prevent this error, create your secondary from a snapshot of one of the other up-to-date members of the replica set. Follow :doc:`our tutorial on filesystem snapshots </tutorial/backup-with-filesystem-snapshots>` to seed your new secondary."
msgstr ""

#: ../source/core/capped-collections.txt:75
# 148079fb04414568b14615f268310e8f
msgid "Seeding the secondary with a filesystem snapshot is the only way to guarantee the primary and secondary binary files are compatible. MMS Backup snapshots are insufficient in this situation since you need more than the content of the secondary to match the primary."
msgstr ""

#: ../source/core/capped-collections.txt:80
# 58d2306c41e5448ba289e97975075761
msgid "You cannot delete documents from a capped collection.  To remove all documents from a collection, use the :method:`~db.collection.drop()` method to drop the collection."
msgstr ""

#: ../source/core/capped-collections.txt:84
# c5623e854ebf40388bf01cd7ac8463d7
msgid "You cannot shard a capped collection."
msgstr ""

#: ../source/core/capped-collections.txt:86
# f70ed0d621b74346b9d422b8494d718e
msgid "Capped collections created after 2.2 have an ``_id`` field and an index on the ``_id`` field by default. Capped collections created before 2.2 do not have an index on the ``_id`` field by default. If you are using capped collections with replication prior to 2.2, you should explicitly create an index on the ``_id`` field."
msgstr ""

#: ../source/core/capped-collections.txt:94
# c4fd2fa30bc94bc5b359b476d896186b
msgid "If you have a capped collection in a :term:`replica set` outside of the ``local`` database, before 2.2, you should create a unique index on ``_id``. Ensure uniqueness using the ``unique: true`` option to the :method:`~db.collection.createIndex()` method or by using an :term:`ObjectId` for the ``_id`` field. Alternately, you can use the ``autoIndexId`` option to :dbcommand:`create` when creating the capped collection, as in the :ref:`capped-collections-options` procedure."
msgstr ""

#: ../source/core/capped-collections.txt:103
# 3194975647454546b74d775b5853c090
msgid "Use natural ordering to retrieve the most recently inserted elements from the collection efficiently. This is (somewhat) analogous to tail on a log file."
msgstr ""

#: ../source/core/capped-collections.txt:107
# 89407d8234c34394a8b612f95f2e202c
msgid "The aggregation pipeline operator :pipeline:`$out` cannot write results to a capped collection."
msgstr ""

#: ../source/core/capped-collections.txt:111
# e43213b6c04a4028899907013c563121
msgid "Procedures"
msgstr ""

#: ../source/core/capped-collections.txt:114
# 82f516e1b46c404ebef5af49bb8b0f2f
msgid "Create a Capped Collection"
msgstr ""

#: ../source/core/capped-collections.txt:116
# bf75937482c54a8fb414c9b6b4a12711
msgid "You must create capped collections explicitly using the :method:`~db.createCollection()` method, which is a helper in the :program:`mongo` shell for the :dbcommand:`create` command. When creating a capped collection you must specify the maximum size of the collection in bytes, which MongoDB will pre-allocate for the collection. The size of the capped collection includes a small amount of space for internal overhead."
msgstr ""

#: ../source/core/capped-collections.txt:128
# 2e10dfc335cf419bb214e825e8463ec6
msgid "If the ``size`` field is less than or equal to 4096, then the collection will have a cap of 4096 bytes. Otherwise, MongoDB will raise the provided size to make it an integer multiple of 256."
msgstr ""

#: ../source/core/capped-collections.txt:132
# d6a12de9c8b046588e7a776f975af65d
msgid "Additionally, you may also specify a maximum number of documents for the collection using the ``max`` field as in the following document:"
msgstr ""

#: ../source/core/capped-collections.txt:139
# e4d227af65804885b3962c78f1b838c9
msgid "The ``size`` argument is *always* required, even when you specify ``max`` number of documents. MongoDB will remove older documents if a collection reaches the maximum size limit before it reaches the maximum document count."
msgstr ""

#: ../source/core/capped-collections.txt:0
# f575acec5a3e445d9f072c4e2dd7bd31
msgid "See"
msgstr ""

#: ../source/core/capped-collections.txt:149
# 7856a9fd1b7741bf917100769b1b1c1c
msgid "Query a Capped Collection"
msgstr ""

#: ../source/core/capped-collections.txt:151
# 2848e3bddc444394942014ba278c1e1f
msgid "If you perform a :method:`~db.collection.find()` on a capped collection with no ordering specified, MongoDB guarantees that the ordering of results is the same as the insertion order."
msgstr ""

#: ../source/core/capped-collections.txt:155
# 439004e33fe84e8483d255bda4db8c9c
msgid "To retrieve documents in reverse insertion order, issue :method:`~db.collection.find()` along with the :method:`~cursor.sort()` method with the :operator:`$natural` parameter set to ``-1``, as shown in the following example:"
msgstr ""

#: ../source/core/capped-collections.txt:165
# ecba2150c41a4952a380dfa6fdc138d4
msgid "Check if a Collection is Capped"
msgstr ""

#: ../source/core/capped-collections.txt:167
# ce23fee556a24520b29859c453dd8fbf
msgid "Use the :method:`~db.collection.isCapped()` method to determine if a collection is capped, as follows:"
msgstr ""

#: ../source/core/capped-collections.txt:175
# d38c8a216a4543fd893fd5a7be927226
msgid "Convert a Collection to Capped"
msgstr ""

#: ../source/core/capped-collections.txt:177
# b28660a3379f4710a45a354ee8f01afd
msgid "You can convert a non-capped collection to a capped collection with the :dbcommand:`convertToCapped` command:"
msgstr ""

#: ../source/core/capped-collections.txt:184
# a17168b1222a49c1bfbc878063760b1e
msgid "The ``size`` parameter specifies the size of the capped collection in bytes."
msgstr ""

#: ../source/includes/warning-blocking-global.rst:3
# 2bf9e074e56d42f3b9811c3c75662a8e
msgid "This command obtains a global write lock and will block other operations until it has completed."
msgstr ""

#: ../source/core/capped-collections.txt:189
# 34bf02e9c9054239b754b3dfce283343
msgid "Before 2.2, capped collections did not have an index on ``_id`` unless you specified ``autoIndexId`` to the :dbcommand:`create`, after 2.2 this became the default."
msgstr ""

#: ../source/core/capped-collections.txt:195
# f94f88d199024eceb2db0f3a61f5649a
msgid "Automatically Remove Data After a Specified Period of Time"
msgstr ""

#: ../source/core/capped-collections.txt:197
# a1d40232d8f547f0b25d28d9a05b07be
msgid "For additional flexibility when expiring data, consider MongoDB's :term:`TTL` indexes, as described in :doc:`/tutorial/expire-data`. These indexes allow you to expire and remove data from normal collections using a special type, based on the value of a date-typed field and a TTL value for the index."
msgstr ""

#: ../source/core/capped-collections.txt:203
# c04457ba713548a89e59d41c79953578
msgid ":doc:`TTL Collections </tutorial/expire-data>` are not compatible with capped collections."
msgstr ""

#: ../source/core/capped-collections.txt:207
# 9b3d11d161354feab0c773af31e2a0da
msgid "Tailable Cursor"
msgstr ""

#: ../source/core/capped-collections.txt:209
# 28442ea43d7443bfbe52e00282e2fb9e
msgid "You can use a :term:`tailable cursor` with capped collections. Similar to the Unix ``tail -f`` command, the tailable cursor \"tails\" the end of a capped collection. As new documents are inserted into the capped collection, you can use the tailable cursor to continue retrieving documents."
msgstr ""

#: ../source/core/capped-collections.txt:215
# 529eb8cb2734461c954aca6414e2cc04
msgid "See :doc:`/tutorial/create-tailable-cursor` for information on creating a tailable cursor."
msgstr ""

