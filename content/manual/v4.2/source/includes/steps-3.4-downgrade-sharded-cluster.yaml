title: "Download the latest 3.2 binaries."
level: 4
ref: 3.4-downgrade-binaries-sharded-cluster
content: |
  Using either a package manager or a manual download, get the latest
  release in the 3.2 series.  If using a package manager, add a new
  repository for the 3.2 binaries, then perform the actual downgrade
  process.

  .. include:: /includes/3.4-downgrade-path.rst
---
title: Disable the Balancer.
level: 4
ref: disable-balancer
content: |
  Turn off the balancer as described in
  :ref:`sharding-balancing-disable-temporarily`.
---
title: "Downgrade the ``mongos`` instances."
level: 4
ref: downgrade-mongos
content: |
   Downgrade the binaries and restart.
---
title: Downgrade each shard, one at a time.
level: 4
ref: 3.4-downgrade-shard
content: |

   Downgrade the shards one at a time. If the shards are replica sets, for each shard:

   1. Downgrade the :ref:`secondary <replica-set-secondary-members>`
      members of the replica set one at a time:

      a. Shut down the :binary:`~bin.mongod` instance and replace the |newversion|
         binary with the |oldversion| binary.

      #. Start the |oldversion| binary with the ``--shardsvr`` and
         ``--port`` command line options.
 
         .. code-block:: sh

            mongod --shardsvr --port <port> --dbpath <path> 

         Of if using a :doc:`configuration file
         </reference/configuration-options>`, update the file to
         include :setting:`sharding.clusterRole: shardsvr
         <sharding.clusterRole>` and :setting:`net.port` and start:

         .. code-block:: yaml

            sharding:
               clusterRole: shardsvr
            net:
               port: <port>
            storage:
               dbpath: <path>

         Include any other configuration as appropriate for your deployment.

      #. Wait for the member to recover to ``SECONDARY`` state before
         downgrading the next secondary member. To check the member's
         state, you can issue :method:`rs.status()` in the
         :binary:`~bin.mongo` shell.

         Repeat for each secondary member.

   #. Step down the replica set primary.

      Connect a :binary:`~bin.mongo` shell to the primary and use
      :method:`rs.stepDown()` to step down the primary and force an
      election of a new primary:

      .. code-block:: javascript

         rs.stepDown()

   #. When :method:`rs.status()`
      shows that the primary has stepped down and another member
      has assumed ``PRIMARY`` state, downgrade the stepped-down primary: 

      1. Shut down the stepped-down primary and replace the
         :binary:`~bin.mongod` binary with the |oldversion| binary.

      #. Start the |oldversion| binary with the ``--shardsvr`` and
         ``--port`` command line options.
 
         .. code-block:: sh

            mongod --shardsvr --port <port> --dbpath <path> 

         Or if using a :doc:`configuration file
         </reference/configuration-options>`, update the file to
         specify :setting:`sharding.clusterRole: shardsvr
         <sharding.clusterRole>` and :setting:`net.port` and start the
         |oldversion| binary:

         .. code-block:: yaml

            sharding:
               clusterRole: shardsvr
            net:
               port: <port>
            storage:
               dbpath: <path>

         Include any other configuration as appropriate for your deployment.
---
title: "Downgrade the config servers."
level: 4
ref: 3.4-downgrade-config-servers
content: |-
   If the config servers are replica sets:
      
   1. Downgrade the :ref:`secondary <replica-set-secondary-members>`
      members of the replica set one at a time:

      a. Shut down the secondary :binary:`~bin.mongod` instance and replace
         the |newversion| binary with the |oldversion| binary.

      #. Start the |oldversion| binary with both the ``--configsvr`` and
         ``--port`` options:

         .. code-block:: sh

            mongod --configsvr --port <port> --dbpath <path> 

         If using a :doc:`configuration file
         </reference/configuration-options>`, update the file to
         specify :setting:`sharding.clusterRole: configsvr
         <sharding.clusterRole>` and :setting:`net.port` and start the
         |newversion| binary:

         .. code-block:: yaml

            sharding:
               clusterRole: configsvr
            net:
               port: <port>
            storage:
               dbpath: <path>

         Include any other configuration as appropriate for your deployment.

      #. Wait for the member to recover to ``SECONDARY`` state before
         downgrading the next secondary member. To check the member's state,
         issue :method:`rs.status()` in the :binary:`~bin.mongo` shell.

         Repeat for each secondary member.

   #. Step down the replica set primary.

      a. Connect a :binary:`~bin.mongo` shell to the primary and use
         :method:`rs.stepDown()` to step down the primary and force an
         election of a new primary:

         .. code-block:: javascript

            rs.stepDown()

      #. When :method:`rs.status()` shows that the primary has stepped
         down and another member has assumed ``PRIMARY`` state, shut down
         the stepped-down primary and replace the :binary:`~bin.mongod` binary
         with the |oldversion| binary.

      #. Start the |oldversion| binary with both the ``--configsvr`` and
         ``--port`` options:

         .. code-block:: sh

            mongod --configsvr --port <port> --dbpath <path> 

         If using a :doc:`configuration file
         </reference/configuration-options>`, update the file to
         specify :setting:`sharding.clusterRole: configsvr
         <sharding.clusterRole>` and :setting:`net.port` and start the
         |newversion| binary:

         .. code-block:: yaml

            sharding:
               clusterRole: configsvr
            net:
               port: <port>
            storage:
               dbpath: <path>

         Include any other configuration as appropriate for your deployment.
---
title: "Re-enable the balancer."
level: 4
ref: reenable-balancer
content: |
  Once the downgrade of sharded cluster components is
  complete, :ref:`re-enable the balancer <sharding-balancing-enable>`.
...
