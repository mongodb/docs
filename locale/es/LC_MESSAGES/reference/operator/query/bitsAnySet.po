# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# 52db0acd5e8f411e9545e36249447fa0
#: ../source/reference/operator/query/bitsAnySet.txt:3
msgid "$bitsAnySet"
msgstr ""

# a501a7a2145f46bfa8a879b52f01f166
#: ../source/reference/operator/query/bitsAnySet.txt
msgid "On this page"
msgstr ""

# 6fdcf7ed69474b1791ce63f8655d0fe6
#: ../source/reference/operator/query/bitsAnySet.txt:17
msgid ""
":query:`$bitsAnySet` matches documents where *any* of the bit positions "
"given by the query are set (i.e. ``1``) in ``field``."
msgstr ""

# b267b1049eb443418dafcbc8186da0f2
#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:3
msgid "``{ <field>: { $bitsAnySet: <numeric bitmask> } }``"
msgstr ""

# 27ed12247a964d9c9ef91810a95b0069
#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:5
msgid ""
"``{ <field>: { $bitsAnySet: <`` :bsontype:`BinData <data_binary>` "
"``bitmask> } }``"
msgstr ""

# 5f14f15803b5408595a8a6be7381c150
#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:7
msgid "``{ <field>: { $bitsAnySet: [ <position1>, <position2>, ... ] } }``"
msgstr ""

# bcdc1a680a174b199f888f35e1168271
#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:9
msgid ""
"The ``field`` value must be either numerical or a :bsontype:`BinData "
"<data_binary>` instance. Otherwise, :query:`$bitsAnySet` will not match "
"the current document."
msgstr ""

# dc08e693fd514b3aba9fe916d0ae73aa
#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:16
msgid "Numeric Bitmask"
msgstr ""

# 8d155db84eff4847b9b2afdb2e8fe907
#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:14
msgid ""
"You can provide a numeric bitmask to be matched against the operand "
"field. It must be representable as a non-negative 32-bit signed integer. "
"Otherwise, :query:`$bitsAnySet` will return an error."
msgstr ""

# 5c56b4d9d481400dabae523fa03b64d6
# 67b5035256c341d9a9ff9d2d68bb30a6
#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:20
#: ../source/reference/operator/query/bitsAnySet.txt:78
msgid "BinData Bitmask"
msgstr ""

# 1f85db2461b544a0bb0ac9ed451df0c8
#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:19
msgid ""
"You can also use an arbitrarily large :bsontype:`BinData <data_binary>` "
"instance as a bitmask."
msgstr ""

# 8d68a5b886a64ce18f87268be6b3da31
#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:25
msgid "Position List"
msgstr ""

# d8cfa75ea1114c66a937d217521ae72c
#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:23
msgid ""
"If querying a list of bit positions, each ``<position>`` must be a non-"
"negative integer. Bit positions start at ``0`` from the least significant"
" bit. For example, the decimal number ``254`` would have the following "
"bit positions:"
msgstr ""

# b660d36303ca4903be1e258a6305f41a
#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:29
msgid "**Bit Value**"
msgstr ""

# 55cf0ec20ce44048b60a783c333acd7a
# 55cd6fcd13e64abeadaeac8d6149dd3b
# 26d12436ddc74b4cb0f9fdfaf8256856
# 4f54bcda592841d2bcc771a77c12022f
# 4a26f06f2bd6401a8e083ba240395674
# e8df311ca0e2471981c4c7873ce9ec8b
# 516d34db7d654105bc48783475d56235
# c8eeb0db8b6e4586b4083938c0c04b3b
#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:31
#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:33
#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:35
#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:37
#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:39
#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:41
#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:43
#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:61
msgid "1"
msgstr ""

# f10ddfda21f04b329b54d9f1d45d1a07
# db71e5429ff74782af04ef8f1319e92e
#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:45
#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:63
msgid "0"
msgstr ""

# 3c77c0d77af74ab58c610bb4e3e1c66a
#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:47
msgid "**Position**"
msgstr ""

# 4936d695adb545d397c2d7f40e6ea4d5
#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:49
msgid "7"
msgstr ""

# 802d9a087fb94f1b88c0986bbb326f89
#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:51
msgid "6"
msgstr ""

# 8c672cc32c4245e682d11e89fcfc4e3d
#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:53
msgid "5"
msgstr ""

# f713ef0c54194fb0856a9a4e18b3df01
#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:55
msgid "4"
msgstr ""

# 54b6feb46c3940c289b97387fe84ffd2
#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:57
msgid "3"
msgstr ""

# 57b439e84bad4efc9a9f1fae91536bcd
#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:59
msgid "2"
msgstr ""

# 7dac50c91c374cafada11d45d1e9b445
#: ../source/reference/operator/query/bitsAnySet.txt:23
msgid "Behavior"
msgstr ""

# 18747c48689843c592c33c25927b2dc2
#: ../source/reference/operator/query/bitsAnySet.txt:26
msgid "Floating Point Values"
msgstr ""

# 2a681291ce5e47d8b6fcfe2c45bab091
#: ../source/includes/extracts/fact-query-bitsanyset-floating-point.rst:1
msgid ""
":query:`$bitsAnySet` will not match numerical values that cannot be "
"represented as a signed 64-bit integer. This can be the case if a value "
"is either too large or small to fit in a signed 64-bit integer, or if it "
"has a fractional component."
msgstr ""

# ee8880b49cad408eba04f6834381bd40
#: ../source/reference/operator/query/bitsAnySet.txt:31
msgid "Sign Extension"
msgstr ""

# cdb923799b724c78ab5d547409e53a3e
#: ../source/includes/extracts/fact-query-bitsallset-sign-extension.rst:1
msgid ""
"Numbers are sign extended. For example, $bitsAllSet considers bit "
"position ``200`` to be set for the negative number ``-5``, but bit "
"position ``200`` to be clear for the positive number ``+5``."
msgstr ""

# e5bf5ac7aea140179018f140717637b1
#: ../source/includes/extracts/fact-query-bitsallset-sign-extension.rst:5
msgid ""
"In contrast, :bsontype:`BinData <data_binary>` instances are zero-"
"extended. For example, given the following document:"
msgstr ""

# 0dfb4b33fee44acc995065dba5921a47
#: ../source/includes/extracts/fact-query-bitsallset-sign-extension.rst:12
msgid "$bitsAllSet will consider all bits outside of ``x`` to be clear."
msgstr ""

# 13d177d32d9c4e06a05be0142e3e1a90
#: ../source/reference/operator/query/bitsAnySet.txt:36
msgid "Examples"
msgstr ""

# 6bea7b5f81d34cb8a27ef3fc82b63b6b
#: ../source/includes/extracts/fact-query-bitwise-example-collection.rst:1
msgid "The following examples will use a collection with the following documents:"
msgstr ""

# 10c1d8b199ac4f0697b0498398449418
#: ../source/reference/operator/query/bitsAnySet.txt:41
msgid "Bit Position Array"
msgstr ""

# c801cecbd48548fd9f08f1cc369cb4e2
#: ../source/reference/operator/query/bitsAnySet.txt:43
msgid ""
"The following query uses the :query:`$bitsAnySet` operator to test "
"whether field ``a`` has either bit position ``1`` or bit position ``5`` "
"set, where the least significant bit is position ``0``."
msgstr ""

# cbbca8fe32034d6197418ab2258b9de5
# f425331011e44c91b4356cbab13ae8bd
# 13ae1c88778c4e049d32febad86ce0f1
#: ../source/reference/operator/query/bitsAnySet.txt:51
#: ../source/reference/operator/query/bitsAnySet.txt:70
#: ../source/reference/operator/query/bitsAnySet.txt:88
msgid "The query matches the following documents:"
msgstr ""

# fdf35c90ca3e4e738aeb9695b03a6314
#: ../source/reference/operator/query/bitsAnySet.txt:60
msgid "Integer Bitmask"
msgstr ""

# b8801e48b1d34d6abb8bf3972ac4bce3
#: ../source/reference/operator/query/bitsAnySet.txt:62
msgid ""
"The following query uses the :query:`$bitsAnySet` operator to test "
"whether field ``a`` has any bits set at positions ``0``, ``1``, and ``5``"
" (the binary representation of the bitmask ``35`` is ``00100011``)."
msgstr ""

# fe72a68342614b80b0d9eb6556b3e7c7
#: ../source/reference/operator/query/bitsAnySet.txt:80
msgid ""
"The following query uses the :query:`$bitsAnySet` operator to test "
"whether field ``a`` has any bits set at positions `4`, and `5` (the "
"binary representation of ``BinData(0, \"MC==\")`` is ``00110000``)."
msgstr ""

