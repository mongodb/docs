===
FAQ
===

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Can I bring an existing MongoDB deployment into |service-fullname| for management?
----------------------------------------------------------------------------------

No. However, you can upload data from existing MongoDB deployment into
|service-fullname|.

- You can use the :doc:`Live Migrate </import/live-import>` feature
  in |service| to migrate from a source replica set to an |service|
  replica set cluster.

- You can use the :doc:`Live Migrate </import/live-import-sharded>`
  feature in |service| to migrate from a source sharded cluster to
  an |service| sharded cluster.

- You can use :binary:`~bin.mongomirror` to migrate data from an existing
  MongoDB replica set into |service-fullname|.

- You can use :binary:`mongodump <bin.mongodump>` and
  :binary:`mongorestore <bin.mongorestore>` to seed |service-fullname|
  clusters from an existing standalone, replica set, and sharded
  cluster.

For information, see :doc:`/import`.

You can also write scripts using official MongoDB supported drivers to
upload data.

Which versions of MongoDB does |service| use for the clusters?
--------------------------------------------------------------

.. include:: /includes/extracts/fact-mongodb-version.rst

.. _atlas-eol-upgrade:

What happens to |service| clusters using a MongoDB version nearing end of life?
-------------------------------------------------------------------------------

.. admonition:: Unsupported MongoDB Versions in |service|
   :class: note

   |service| no longer supports MongoDB {+latest-mongodb-eol+} and
   earlier.

MongoDB sends you an email notification at least six months before the
MongoDB version reaches end of life. A few months after you receive this
notification, |service|:

- Stops allowing you to deploy new clusters using the end of life
  version.

- Notifies you of the version cut-off date. After the cut-off date,
  |service| upgrades your clusters to the next MongoDB version unless you
  request and receive approval for an extension.

.. example::
   When MongoDB 3.4 reaches end of life, |service|
   upgrades each of your clusters running MongoDB 3.4 to
   MongoDB 3.6.

This upgrade happens within your maintenance window if you
:ref:`configured one in your project settings <atlas-modify-project-settings>`.

In most cases, this upgrade won't cause downtime or negatively affect
your applications. You should :doc:`upgrade your cluster </tutorial/major-version-change>` before the cut-off date to ensure that your
services and applications experience no downtime or other issues due to
incompatibilities with the new MongoDB version.

To learn about potential issues for the cluster when
upgrading MongoDB versions, see ``Compatibility Changes`` in the
:manual:`MongoDB Release Notes </release-notes>` for the next MongoDB
version.

.. seealso:: To review the end of life date for each MongoDB Server
   release, see ``MongoDB Server`` in the
   `MongoDB Support Policy <https://www.mongodb.com/support-policy>`__.


When does MongoDB upgrade the database version free and shared tier clusters use?
---------------------------------------------------------------------------------

|service| upgrades free and shared tier clusters
to the newest MongoDB version after several patch versions become
available for that version. To learn more about how MongoDB versions its
software, see :manual:`MongoDB Versioning </reference/versioning>`.

Can I migrate between regions?
------------------------------

Yes. You can change one or more regions for a given cluster within the
original cloud service provider for that cluster. Using a rolling-migration
strategy for moving nodes from the original region to a new region, MongoDB
|service| preserves cluster availability.

.. admonition:: AWS Only
   :class: important

   Amazon Web Services (AWS) Virtual Private Cloud (VPC) peering connections
   are region-specific. Clusters utilizing an existing :abbr:`VPC (Virtual
   Private Cloud)` peering connection to an :abbr:`AWS (Amazon Web
   Services)` :abbr:`VPC (Virtual Private Cloud)` in a given :abbr:`AWS
   (Amazon Web Services)` region lose access to that peering connection if
   moved to a different :abbr:`AWS (Amazon Web Services)` region. However,
   the moved cluster may use a peering connection already defined in the
   new region. See :doc:`/security-vpc-peering` for complete documentation.

If you need to migrate data between regions on different cloud service
providers, you can:

- :doc:`Perform live migration </import/live-import>`, or

- :doc:`Migrate using mongomirror </import/mongomirror>`, or

- :doc:`Seed the destination cluster using mongorestore </import/mongorestore>`, or

- :doc:`Restore a backup from the source cluster to the destination cluster </import/mongorestore>`.

.. seealso:: :ref:`import-strategies`

Does |service| support cross-region deployments?
------------------------------------------------

Yes. You can specify additional regions for high availability or local reads
when :doc:`creating </tutorial/create-new-cluster>` or :doc:`scaling </scale-cluster>`
a deployment.

|service| does *not* support cross-cloud service provider deployments.

.. _faq-cross-region:

How many cross-region network permissions does |service| support?
-----------------------------------------------------------------

.. include:: /includes/fact-cross-region-limits.rst

If you would exceed the cross-region permissions limit when creating a
cluster through the |service| API, the API returns the following error:

.. code-block:: json

   {"error":403,"detail":"Cannot have more than 40 cross-region network permissions.","reason":"Forbidden"}

.. _analytics-nodes-overview:

What are Analytics Nodes?
-------------------------

*Available on M10+ clusters.*

Analytics nodes are specialized read-only nodes used to isolate
queries which you do not want to affect your operational workload.
They are useful for handling analytic data such as reporting queries
executed by :abbr:`BI (Business Intelligence)` tools.

Analytics nodes and :ref:`read-only nodes <deploy-read-only-replicas>`
are configured with distinct
:ref:`replica set tags <replica-set-tags>` that allow you to direct
queries to desired node types and regions. For details on the
pre-defined replica set tags implemented by |service|, see
:ref:`Atlas Replica Set Tags <replica-set-tags>`.

You can have up to 50 total nodes on a multi-region cluster.
Within that :manual:`limit
</reference/limits/#Number-of-Members-of-a-Replica-Set>`
there is no maximum number of analytics nodes.

Analytics nodes cannot contribute to a cluster's availability because
they cannot participate in :term:`elections <election>`, or become the
:term:`primary` for their cluster.

What AWS Regions does |service| support?
----------------------------------------

|service| supports all AWS regions other than those in China and US GovCloud.
For more information, see :doc:`/reference/amazon-aws`.

.. _high-availability:

How does |service-fullname| deliver high availability?
------------------------------------------------------

|service| clusters use MongoDB's replication capability to deliver high
availability. All |service| clusters are either replica sets or sharded
clusters where each shard is a replica set. For complete documentation
on MongoDB replica sets and replication, see :manual:`Replication
</replication>`.

|service| uses a rolling upgrade strategy for executing maintenance
or infrastructure operations, such as applying security patches or
scaling up a |service| cluster. The rolling upgrade strategy ensures
that the cluster can process reads and writes for the majority of the
maintenance or infrastructure operation. During the rolling upgrade
procedure:

- |service| applies the changes to each secondary node in the cluster.
- |service| directs the primary node to step down to the secondary state
  and trigger an election of a new primary.
- Once the cluster has a new primary, |service| applies the changes to
  the former primary node.

Applications must hold write operations while the cluster elects a new
primary. The cluster can continue to process
:manual:`secondary read operations </core/read-preference>`
during this period. Elections on |service| clusters typically complete
within a few seconds. Factors such as network latency may extend the
time required for replica set elections to complete, which in turn
affects the amount of time your cluster may operate without a primary.
These factors are dependent on your particular cluster architecture.

.. include:: /includes/fact-retry-writes.rst

For ``M10+`` clusters, |service| provides a :doc:`Test Failover
</tutorial/test-failover>` feature for application developers to check
that their applications are designed to detect and react appropriately
to a replica set election. By designing applications that can seamlessly
handle a replica set election, developers no longer have to worry about
the underlying maintenance occurring on their clusters.

|service| maintenance operations include OS patches and maintenance
patches for the MongoDB database itself (e.g. v3.6.3 to v3.6.4).
Infrastructure operations include repair operations required to replace
faulty infrastructure, and scheduled infrastructure replacements
such as changing the cluster tier.

Please `contact MongoDB support
<https://cloud.mongodb.com/support?tck=docs_atlas>`_ if you would like help
architecting your application to use |service-fullname| with optimal
availability.

How can I pay for |service-fullname| without a credit card?
-----------------------------------------------------------

For alternative ways of purchasing |service|, please `contact MongoDB
Inc. <https://www.mongodb.com/contact?tck=docs_atlas>`_.

Can I specify my own VPC for my |service-fullname| project?
-----------------------------------------------------------

No. An |service| project, and its clusters, are associated with a
region-specific Virtual Private Cloud (VPC).

|service| creates a :abbr:`VPC (Virtual Private Cloud)` when you deploy the
first ``M10+`` dedicated paid cluster to a given provider and region. For
multi-region clusters, |service| creates one :abbr:`VPC (Virtual Private
Cloud)` per region if there is not already a :abbr:`VPC (Virtual Private
Cloud)` for that region.

*(AWS deployments only)* |service| also creates
a :abbr:`VPC (Virtual Private Cloud)` when you create a :doc:`VPC peering
connection </security-vpc-peering>` to an :abbr:`AWS (Amazon Web Services)`
:abbr:`VPC (Virtual Private Cloud)`. |service| creates the :abbr:`VPC (Virtual
Private Cloud)` in the same region as the peered :abbr:`VPC (Virtual Private
Cloud)`.

To use a different VPC (e.g. on the customer's own cloud infrastructure
accounts), you would need to use MongoDB Cloud Manager or
Ops Manager.

|service-fullname| or |mms-full|?
---------------------------------

|service| offers a managed and simplified experience. |service| users
have access to a curated selection of configuration and infrastructure
options. The available |service| configuration and infrastructure
options may not provide the flexibility that some users require. For
example, |service| requires TLS for cluster connectivity and does not
surface options for disabling TLS. |service| is best suited for users
who want fewer moving parts to manage, enabling developers and database
administrators to be more productive.

|mms-full| offers more control by exposing more configuration options
on the infrastructure of your choice. |mms| users have access to
advanced operations and a higher level of control, but must manage the
full lifecycle of their infrastructure. |mms| is best suited for users
who require a higher level of control over their MongoDB clusters.

Please
`contact MongoDB support <https://cloud.mongodb.com/support?tck=docs_atlas>`_
for guidance on which MongoDB service best suits the needs of your
organization.

.. _cm-create-atlas-project:

As an existing |mms-full| account holder, how do I create a new |service-fullname| project?
-------------------------------------------------------------------------------------------

In the :guilabel:`Context` drop down in |mms|, select :guilabel:`New Project`.

The :guilabel:`Create a New Project` screen provides you the choice to
create either an |service| project or a |mms| project. Select
:guilabel:`MongoDB Atlas` and continue with the creating the project.

.. _atlas-create-atlas-project:

As an existing |service| account holder, how do I create a new |service| project?
---------------------------------------------------------------------------------

In the :guilabel:`Context` drop down in |mms|, select :guilabel:`New Project`.

The :guilabel:`Create a New Project` screen provides you the choice to
create either an |service| project or a |mms| project. Select
:guilabel:`MongoDB Atlas` and continue with the creating the project.

Can I disable SSL/TLS on my deployment?
---------------------------------------

No.

.. _how-do-i-remove-my-company-project:

How do I remove my project?
---------------------------

You can remove a project if:

- You have the :authrole:`Project Owner` role for the project.

- The project has no outstanding invoices.

- The project has no active clusters.

To delete a project for an organization, you can delete from the
organization's :guilabel:`Projects` view or the project's
:guilabel:`Project Setting` view. For details, see :ref:`delete-project`.

.. _can-i-pause-or-stop-cluster:

Can I pause or stop my |service| clusters?
------------------------------------------

You can pause an ``M10+`` paid cluster for up to 7 days at a time.
|service| automatically resumes the cluster after 7 days. For complete
documentation, see :ref:`pause-cluster`.

.. _how-do-i-modify-my-alert-settings:

How do I modify alerts?
-----------------------

To modify existing alert settings:

1. Click :guilabel:`Alerts` in the :guilabel:`Project` section of the
   left navigation.

2. Click :guilabel:`Alert Settings`.

3. Click the ellipsis ``...`` next to the alert you want to modify
   (edit, clone, disable, delete).

Does |service-fullname| expose the oplog?
-----------------------------------------

Yes, for ``M10`` tiers or greater.

See :ref:`ref-atlas-oplog` for details on accessing your cluster's
oplog.

.. _can-i-deploy-more-than-24-shards:
.. _can-i-deploy-more-than-50-shards:

Can |service-fullname| deploy clusters with more than 50 shards?
----------------------------------------------------------------

While |service-fullname| out of the box allows selection of up to 50
shards, customers interested in more than 50 shards should inquire with
MongoDB. Contact `us <https://www.mongodb.com/contact?tck=docs_atlas>`_.

How does |service| encrypt my data?
-----------------------------------

|service| uses whole volume (disk) encryption for any data at rest,
including your cluster data and backups of that data.

|service| also requires TLS encryption for client data
and intra-cluster network communications.

If your organization requires more specific information regarding
|service| encryption, please contact |service| support. From the
|service| project or cluster view, click :guilabel:`Support` in the
left-hand navigation bar.

.. _can-i-pre-split-chunks:

Can I pre-split chunks in a |service| sharded cluster?
------------------------------------------------------

The :authrole:`Atlas admin` database user role has the necessary
privileges to pre-split chunks in an empty sharded collection.

See :manual:`Create Chunks in a Sharded Cluster
</tutorial/create-chunks-in-sharded-cluster>` for complete documentation
on sharded cluster chunk creation and management.

Is there a maximum number of collections allowed on a single |service| cluster?
-------------------------------------------------------------------------------

While there is no hard limit on the number of collections in a single cluster, the performance of a cluster may degrade if it serves larger numbers of collections and indexes. Larger collections have a greater impact on performance.

The recommended maximum number of collections and indexes by |service| cluster are as follows:

- :guilabel:`M10`: 5,000 collections and indexes

- :guilabel:`M20 / M30`: 10,000 collections and indexes

- :guilabel:`M40+`: 100,000 collections and indexes

Where can I view the system status of the MongoDB Cloud?
--------------------------------------------------------

Visit https://status.cloud.mongodb.com for the status of the
MongoDB Cloud, including |service| and |mms|.

You can also subscribe to an
`RSS feed <http://status.cloud.mongodb.com/rss>`_ of the MongoDB
Cloud Status page using your preferred RSS reader.

.. _faq-tls-1.0-deprecation:

What versions of TLS does |service| support?
--------------------------------------------

|service| deployments created after July 2018 support only Transport
Layer Security (TLS) protocol versions 1.1 and 1.2 by default.
|service| deployments created before July 2018 support TLS protocol
version 1.0, 1.1, and 1.2 by default. After August 2018, |service| will
support only TLS 1.1 and 1.2 by default for all |service| clusters.

Deprecating TLS 1.0 improves your security of
data-in-transit and aligns with industry best practices.
This is why MongoDB 4.0 requires TLS 1.1 or later when TLS
is enabled. As |service| requires TLS connections for all |service|
clusters, |service| clusters running MongoDB 4.0 always use
TLS 1.1 or later by default.

You can read more about timing and reasons for the change from the
`Payment Card Industry (PCI) <https://blog.pcisecuritystandards.org/migrating-from-ssl-and-early-tls>`_
as well as the
`National Institute of Standards and Technology (NIST) <https://www.nist.gov/news-events/news/2014/04/nist-revises-guide-use-transport-layer-security-tls-networks>`_.

If you have questions about TLS support or cannot update your
applications to support TLS 1.1 or later by late August 2018,
please contact |service| support.

To open a |service| support ticket, log into the your |service|
account. Click the :guilabel:`Support` link in the |service| UI
and fill in the requested details.

How do I know if my applications support TLS 1.1 or later?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

TLS 1.1 was defined in April 2006. Applications whose underlying
programming languages or security libraries predate TLS 1.1
may require updating to a more recent version to support TLS 1.1 or
later. You may also need to update the application host operating
system to support TLS 1.1 or later.

MongoDB and |service| do not provide services to audit external
applications for which versions of TLS support they support.
Third party services such as
`howsmyssl.com <https://www.howsmyssl.com/s/api.html>`_
may provide the appropriate tooling. MongoDB does not endorse the
aforementioned service, and its reference is intended only as
informational. Defer to your organization's procedures
in selecting the appropriate vendor or service for auditing
your applications to ensure TLS 1.0 is disabled.

What do I have to do to update my clusters for TLS 1.1 or later?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

|service| will automatically update your existing clusters to
only support TLS 1.1 or later in late August 2018. The only thing you
should consider doing is auditing your applications for support of
TLS 1.1 or later and updating any components of your technology stack
that do not support TLS 1.1 or later.

Can I force enable TLS 1.0?
~~~~~~~~~~~~~~~~~~~~~~~~~~~

|service| allows users to manually enable TLS 1.0 during
:ref:`cluster creation <create-cluster-more-configuration-options>` and
:ref:`cluster modification <scale-cluster-more-configuration-options>`.

Enabling TLS 1.0 for any |service| cluster carries significant risks.
Consider enabling TLS 1.0 only for as long as required to update your
application stack to support TLS 1.1 or later.

.. _faq-storage limit:

What happens when I reach my Atlas storage limit?
-------------------------------------------------

The result of reaching your |service| storage limit depends on the
|service| cluster you are using.

- For shared clusters (``M0``, ``M2``, ``M5``), the maximum storage is
  a hard limit and cannot be exceeded. You can add additional storage
  by upgrading to a dedicated cluster (``M10+``). For details on how
  |service| calculates storage limits for shared clusters, see
  :ref:`this section <faq-caluculate-shared-storage-limit>` of the FAQ.

- By default, ``M10+`` clusters :ref:`auto-expand storage
  <scale-cluster-storage>` based on disk usage thresholds. To modify
  this setting to a fixed storage limit, refer to the
  :ref:`Modify a Cluster <scale-cluster-storage>` page.

If you attempt to write to a shared cluster that does not have space
for the desired write operation, |service| displays an error message
similar to the following:

.. code-block:: javascript

   WriteResult({
     "writeError": {
       "code": 8000,
       "errmsg": "you are over your space quota, using 513 MB of 512 MB"
     }
   })

For more information on the differences between shared and dedicated
clusters, see :doc:`Atlas M0 (Free Tier), M2, and M5 Limitations
</reference/free-shared-limitations/>`.

.. tip::

   You can configure alerts which trigger once your allocated storage
   reaches a specified threshold. |service| calculates allocated
   storage using metrics returned by the :manual:`dbStats()
   <reference/command/dbStats>` command. For information on storage
   alerts, see :ref:`DB Storage alert conditions <db-storage-alerts>`.

.. _faq-caluculate-shared-storage-limit:

How does Atlas calculate storage limits for shared clusters (M0, M2, M5)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

|service| calculates the storage limit for shared clusters based on
data usage, as opposed to the ``storageSize`` metric used by
non-shared clusters (which includes compression). |service| determines
data usage by summing a cluster's ``dataSize`` and ``indexSize``.  You
can issue the :manual:`db.stats() </reference/method/db.stats/>`
method to view the values of these fields.

Why has |service| stopped monitoring my cluster?
------------------------------------------------

.. include:: /includes/fact-free-tier-monitoring-pause.rst

.. _faq-support:

How do I get support for my Atlas clusters?
-------------------------------------------

You can :doc:`request support </support>` through the |service| UI by
using the in-app chat or by opening a support case. Support for
development and performance of the database requires an upgraded
support plan. For more information on support plans, `contact MongoDB
Inc. <https://www.mongodb.com/contact?tck=docs_atlas>`_.

How do I delete my user account?
--------------------------------

To delete your |service| account, take the following action based on
your Support Plan:

.. list-table::
   :header-rows: 1
   :widths: 30 70

   * - Support Plan
     - Action

   * - Basic
     - In the lower right corner of the |service| UI, click the chat
       icon to speak with a MongoDB Support representative.

   * - Developer
     - In the lower right corner of the |service| UI, click the chat
       icon to speak with a MongoDB Support representative or
       :ref:`open a private support case <request-support>`.

   * - Premium
     - In the lower right corner of the |service| UI, click the chat
       icon to speak with a MongoDB Support representative or
       :ref:`open a private support case <request-support>`.

.. figure:: /images/ui-chat-icon.png
   :alt: A screenshot of the chat icon in the |service| UI.
   :figwidth: 600px

.. important::

   You cannot reuse the email address that is associated with the deleted
   account to create a new |service| account.

See :doc:`Request Support </support>` for more information.

.. _faq-deactivate-charts:

How do I delete the |charts| instance linked to my |service| project?
---------------------------------------------------------------------

.. include:: /includes/fact-delete-charts-warning.rst

If you are a :authrole:`Project Owner`, you can deactivate and delete a
|charts| instance linked to your |service| project from your
:ref:`Project Settings <project-settings>`.

.. include:: /includes/fact-recreate-charts-instance.rst

.. _faq-atlas-side-hostnames:

How do I get my Atlas-side hostnames so that I can open up my outbound firewall?
--------------------------------------------------------------------------------

If your firewall blocks outbound network connections, you must open
outbound access from your application environment to |service-fullname|.
To configure your application-side networks to accept |service| traffic
you can either use the:

- :ref:`clusters-get-all` endpoint to retrieve the ``mongoURIs`` of
  your clusters from the
  :ref:`response elements <clusters-get-all-response>`.

- :ref:`processes-get-all` endpoint to retrieve the ``hostnames`` of
  your clusters from the
  :ref:`response elements <processes-get-all-response>`.

You can parse these hostname values and pass the IP addresses
programmatically into your application-tier orchestration automation to
push firewall updates.

To find the public IP address for any node in your cluster, use the
``nslookup`` tool from the command line. The IP address is shown in
the ``Address`` portion of the output.

.. code-block:: none

   $ nslookup ds-shard-00-00-17jcm.mongodb-dev.net

   Address: 34.226.104.79

.. _faq-public-ip-changes:

Do |service| clusters' public IPs ever change?
----------------------------------------------

An |service| cluster's public IPs do not change when:

- The cluster is vertically scaled.
- The cluster is unpaused.
- The cluster's topology changes.
- The cluster is terminated then re-deployed with the same name
  within 36 hours.
- A maintenance event occurs.
- A healing event occurs.

An |service| cluster's public IP addresses must change when you:

- Change a replica set to a sharded cluster.
- Add shards to a sharded cluster.
- Change the region(s) into which a cluster is deployed.

To find the public IP address for any node in your cluster, use the
``nslookup`` tool from the command line. The IP address is shown in
the ``Address`` portion of the output.

.. code-block:: none

   $ nslookup ds-shard-00-00-17jcm.mongodb-dev.net

   Address: 34.226.104.79

Why did my Atlas payment fail?
------------------------------

Payments will fail if there is an issue with your
:guilabel:`Payment Method`. To learn how to verify your
:guilabel:`Payment Method` and retry your payment, see
:ref:`retry-failed-payment`.

.. include:: /includes/fact-sca-payment-failure.rst

How can I reduce my data transfer costs?
----------------------------------------

There are a number of ways to optimize data transference depending on
the configuration of your project. See :ref:`How to Reduce Data Transfer
Costs <reducing-data-transfer-costs>` on the Billing page for
a list of common options.

Without using Provisioned IOPS on MongoDB Atlas on AWS, what kind of IOPS should I expect?
------------------------------------------------------------------------------------------

|service| provides an estimate of how many 16K IOPS you can expect, calculated
as the lesser of 3 IOPS per provisioned GB, or the cluster node's maximum IOPS
capacity.

However, non-provisioned IOPS on AWS can burst above this estimate or
drop below it. As a result, customers who are interested in
consistent IOPS throughput should consider leveraging
:ref:`Provisioned IOPS <storage-iops-ui>`.

Which certificate authority signs MongoDB Atlas cluster TLS certificates?
-------------------------------------------------------------------------

The MongoDB |service| TLS certificate will change on February 25,
2020.

MongoDB |service| is moving to Let’s Encrypt as the new Certificate
Authority (CA) for TLS certificates for all |service| clusters.

All newly created ``M10+`` |service| clusters already utilize the new
certificates and can be used to test connectivity.

Please review the following scenarios to ensure that you will not
experience connectivity issues:

.. _tls-change-hard-code:

Hard-coded Certificate Authority
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you hard-coded the DigiCert root CA as the only trusted CA utilized
for your application’s connection to |service|, please ensure that you
add the Let’s Encrypt root CAs to your certificate store. Add both of
the following root CAs for Let’s Encrypt:

- ISRG Root X1: https://letsencrypt.org/certs/isrgrootx1.pem.txt

- (IdenTrust) DST Root CA X3: https://letsencrypt.org/certs/trustid-x3-root.pem.txt

Java Users
~~~~~~~~~~

Let’s Encrypt is not present in the default trust store for Java
version 7 prior to the 7u111 update, or Java version 8 prior to the
8u101 update. Instead, you must use a Java release after July 19, 2016.

Please ensure your Java client software is up-to-date. The latest Java
versions are strongly recommended for many improvements beyond these
new CA requirements for our TLS certificates.

If you have your own trust store, you will need to add the Let’s
Encrypt certificate to it. To learn more, see
:ref:`tls-change-hard-code`.

Everyone Else
~~~~~~~~~~~~~

You should not be impacted by this change if you use a recent
programming language and operating system version.

.. class:: hidden

   .. toctree::
      :titlesonly:

      /reference/faq/connection-changes
