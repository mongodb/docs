ref: fts-synonyms-tutorial-step1
level: 4
stepnum: 1
inherit:
  file: steps-fts-tutorial-run-query-java.yaml
  ref: verify-dependencies-java
---
ref: run-equivalent-query-java
level: 4
stepnum: 2
title: "Run a query that uses the ``equivalent`` mapping type."
content: |
  
  a. Create a file named ``SynonymsEquivalentQuery.java``.
  #. Copy and paste the following code into the file.

     The code example performs the following tasks:

     - Imports ``mongodb`` packages and dependencies.
     - Establishes a connection to your |service| cluster.
     - Searches for the word ``automobile`` in the ``title`` field. It 
       includes the following stages: 
       
       - :manual:`$limit </reference/operator/aggregation/limit>` stage 
         to limit the output to 10 results 
       - :manual:`$project </reference/operator/aggregation/project>` 
         stage to exclude all fields except ``title`` and add a field 
         named ``score``

     - Iterates over the cursor to print the documents that match the 
       query.

     .. literalinclude:: /includes/fts-tutorial/synonyms-equivalent-query.java
        :language: java
        :linenos:
        :emphasize-lines: 20

     .. note:: 

        To run the sample code in your Maven environment, add the 
        following above the import statements in your file.

        .. code-block:: 

           package com.mongodb.drivers;

  #. .. include:: /includes/fact-fts-driver-connection-string.rst

  #. Compile and run ``SynonymsEquivalentQuery.java`` file.

     .. code-block:: shell 

        javac SynonymsEquivalentQuery.java
        java SynonymsEquivalentQuery

  The Java program prints the following documents to your terminal:

  .. code-block:: json 
     :copyable: false 

     {"title": "Cars", "score": 4.197734832763672}
     {"title": "Planes, Trains & Automobiles", "score": 3.8511905670166016}
     {"title": "Car Wash", "score": 3.39473032951355}
     {"title": "Used Cars", "score": 3.39473032951355}
     {"title": "Blue Car", "score": 3.39473032951355}
     {"title": "Cars 2", "score": 3.39473032951355}
     {"title": "Stealing Cars", "score": 3.39473032951355}
     {"title": "Cop Car", "score": 3.39473032951355}
     {"title": "The Cars That Eat People", "score": 2.8496146202087402}
     {"title": "Khrustalyov, My Car!", "score": 2.8496146202087402}

  .. include:: /includes/extracts/fts-synonyums-tutorial-equivalent-query-output.rst

---
ref: run-explicit-query-java
level: 4
stepnum: 3
title: "Run a query that uses the ``explicit`` mapping type."
content: |

  a. Create a file named ``SynonymsExplicitQuery.java``.
  #. Copy and paste the following code into the file.

     The code example performs the following tasks:

     - Imports ``mongodb`` packages and dependencies.
     - Establishes a connection to your |service| cluster.
     - Searches for the word ``boat`` in the ``title`` field. It 
       includes the following stages: 
       
       - :manual:`$limit </reference/operator/aggregation/limit>` stage 
         to limit the output to 10 results 
       - :manual:`$project </reference/operator/aggregation/project>` 
         stage to exclude all fields except ``title`` and add a field 
         named ``score``

     - Iterates over the cursor to print the documents that match the 
       query.

     .. literalinclude:: /includes/fts-tutorial/synonyms-explicit-query.java
        :language: java
        :linenos:
        :emphasize-lines: 20

     .. note:: 

        To run the sample code in your Maven environment, add the 
        following above the import statements in your file.

        .. code-block:: 

           package com.mongodb.drivers;

  #. .. include:: /includes/fact-fts-driver-connection-string.rst

  #. Compile and run ``SynonymsExplicitQuery.java`` file.

     .. code-block:: shell 

        javac SynonymsExplicitQuery.java
        java SynonymsExplicitQuery

  The Java program prints the following documents to your terminal:

  .. code-block:: json 
     :copyable: false 

     {"title": "Vessel", "score": 5.373150825500488}
     {"title": "Boats", "score": 4.589139938354492}
     {"title": "And the Ship Sails On", "score": 4.3452959060668945}
     {"title": "Broken Vessels", "score": 4.3452959060668945}
     {"title": "Sailing to Paradise", "score": 4.3452959060668945}
     {"title": "Boat People", "score": 3.711261749267578}
     {"title": "Boat Trip", "score": 3.711261749267578}
     {"title": "Three Men in a Boat", "score": 3.1153182983398438}
     {"title": "The Glass Bottom Boat", "score": 3.1153182983398438}
     {"title": "Jack Goes Boating", "score": 3.1153182983398438}

  .. include:: /includes/extracts/fts-synonyums-tutorial-explicit-query-output.rst

...
