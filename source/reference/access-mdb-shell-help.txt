.. _mdb-shell-help:
.. _mongosh-help:

================
``mongosh`` Help
================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

This document provides an overview of the help available in
:binary:`mongosh`. 

.. tip::

   When accessing help in ``mongosh``, you can use the ``.help()`` and
   ``.help`` syntaxes interchangeably.

.. _mdb-shell-help-command-line:
.. _mongosh-help-command-line:

Command Line Help
-----------------

To see the options for running the :binary:`mongosh` executable and
connecting to a deployment, use the :option:`--help <mongosh --help>`
option from the command line:

.. code-block:: bash

   mongosh --help

``mongosh`` Shell Help
----------------------

To see the list of commands available in the :binary:`mongosh` console,
type ``help`` inside a running :binary:`mongosh` console:

.. code-block:: javascript

   help

.. _mdb-shell-help-db:
.. _mongo-shell-help-db:

Database Help
-------------

You can view database level information from inside the
:binary:`mongosh` console:

By default :binary:`mongosh` shows the current database in the prompt.
You can also see the current database by running the ``db`` command:

.. code-block:: javascript

   db

Show Available Databases
~~~~~~~~~~~~~~~~~~~~~~~~

To see the list of databases available to you on the server, use the
``show dbs`` command:

.. code-block:: javascript

   show dbs

``show databases`` is an alias for ``show dbs``.

.. tip::

   The list of databases will change depending on your access
   authorizations. For more information on access restrictions for
   viewing databases, see :dbcommand:`listDatabases`.

Show Database Methods
~~~~~~~~~~~~~~~~~~~~~

To see the list of :manual:`database methods
</reference/method/js-database/>` you can use on the ``db`` object, run
:method:`db.help()`:

.. code-block:: javascript

   db.help()

The output resembles the following abbreviated list:

.. code-block:: none
   :copyable: false

   Database Class:

     getMongo                      Returns the current database connection
     getName                       Returns the name of the DB
     getCollectionNames            Returns an array containing the names of all collections in the current database.
     getCollectionInfos            Returns an array of documents with collection information, i.e. collection name and options, for the current database.
     runCommand                    Runs an arbitrary command on the database.
     adminCommand                  Runs an arbitrary command against the admin database.
     ...

Show Help for a Specific Database Method
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To see help for a specific database method in ``mongosh``, type the
``db.<method name>``, followed by ``.help`` or ``.help()``. The
following example returns help for the :method:`db.adminCommand()`
method:

.. code-block:: javascript

   db.adminCommand.help()

The output resembles the following:

.. code-block:: javascript
   :copyable: false

     db.adminCommand({ serverStatus: 1 }):

     Runs an arbitrary command against the admin database.

     For more information on usage: https://www.mongodb.com/docs/manual/reference/method/db.adminCommand

Show Additional Usage Details for a Database Method
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To see additional usage details for a database method in ``mongosh``,
type the ``db.<method name>`` without the parenthesis (``()``). The
following example returns details about the
:method:`db.adminCommand()` method:

.. code-block:: javascript

   db.adminCommand

The output resembles the following:

.. code-block:: javascript
   :copyable: false

   [Function: adminCommand] AsyncFunction {
     apiVersions: [ 1, Infinity ],
     serverVersions: [ '3.4.0', '999.999.999' ],
     returnsPromise: true,
     topologies: [ 'ReplSet', 'Sharded', 'LoadBalanced', 'Standalone' ],
     returnType: { type: 'unknown', attributes: {} },
     deprecated: false,
     platforms: [ 0, 1, 2 ],
     isDirectShellCommand: false,
     acceptsRawInput: false,
     shellCommandCompleter: undefined,
     help: [Function (anonymous)] Help
   }

.. _mdb-shell-help-collection:
.. _mongosh-help-collection:

Collection Help
---------------

You can view collection level information from inside the
:binary:`~bin.mongosh` console.

These help methods accept a collection name, ``<collection>``, but you
can also use the generic term, "collection", or even a collection that
does not exist.

List Collections in the Current Database
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To see the list of collections in the current database, use the
``show collections`` command:

.. code-block:: javascript

   show collections

The ``show collections`` output indicates if a collection is a
:ref:`time series collection <manual-timeseries-collection>` or a
read-only :ref:`view <views-landing-page>`.

.. code-block:: javascript
   :copyable: false

   managementFeedback          [view]
   survey
   weather                     [time-series]
   system.buckets.weather
   system.views

In the preceding example:

- ``managementFeedback`` is a :ref:`view <views-landing-page>`
- ``weather`` is a time series
- ``survey`` is a collection
- ``system.buckets.weather`` is a system generated collection
  that supports the ``weather`` time series
- ``system.views`` is a system generated collection that supports
  views on other collections

Show Collection Methods
~~~~~~~~~~~~~~~~~~~~~~~

To see the list of methods available on collection objects use the
``db.<collection>.help()`` method:

.. code-block:: javascript

   db.collection.help()

``<collection>`` can be the name of an existing or non-existent
collection.

The output resembles the following abbreviated list:

.. code-block:: none
   :copyable: false

   Collection Class:

     aggregate          Calculates aggregate values for the data in a collection or a view.
     bulkWrite          Performs multiple write operations with controls for order of execution.
     count              Returns the count of documents that would match a find() query for the collection or view.
     countDocuments     Returns the count of documents that match the query for a collection or view.
     deleteMany         Removes all documents that match the filter from a collection.
     deleteOne          Removes a single document from a collection.
     ...

Show Help for a Specific Collection Method
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To see help for a specific collection method in ``mongosh``, use
``db.<collection>.<method name>``, followed by ``.help`` or
``.help()``.

The following example displays help for :method:`db.collection.insertOne()`:

.. code-block:: javascript

   db.collection.insertOne.help()

The output resembles the following:

.. code-block:: none
   :copyable: false

   db.collection.insertOne(document, options):

   Inserts a document into a collection.

   For more information on usage: https://www.mongodb.com/docs/manual/reference/method/db.collection.insertOne

Show Additional Details for a Collection Method
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To see additional details for a collection method type the method name,
``db.<collection>.<method>``, without the parenthesis (``()``). 

The following example returns details about the
:method:`~db.collection.insertOne()` method:

.. code-block:: javascript

   db.collection.insertOne

The output resembles the following:

.. code-block:: javascript
   :copyable: false

  [Function: insertOne] AsyncFunction {
    apiVersions: [ 1, Infinity ],
    serverVersions: [ '3.2.0', '999.999.999' ],
    returnsPromise: true,
    topologies: [ 'ReplSet', 'Sharded', 'LoadBalanced', 'Standalone' ],
    returnType: { type: 'unknown', attributes: {} },
    deprecated: false,
    platforms: [ 0, 1, 2 ],
    isDirectShellCommand: false,
    acceptsRawInput: false,
    shellCommandCompleter: undefined,
    help: [Function (anonymous)] Help
  }

.. _mongosh-help-cursor:

Cursor Help
-----------

To modify :ref:`read operations <read-operations-queries>` that use
:method:`~db.collection.find()`, use :ref:`cursor methods
<mongosh-cursor-methods>`.

To list the available modifier and cursor handling methods, use the
``db.collection.find().help()`` command:

.. code-block:: javascript

   db.collection.find().help()

This help call accepts a collection name, ``<collection>``, but you
can also use the generic term, "collection", or even a collection which
does not exist.

Some useful methods for handling cursors are:

- :method:`~cursor.hasNext()` checks if the cursor has more documents.

- :method:`~cursor.next()` returns the next document and moves the
  cursor position forward by one.

- :method:`forEach(\<function\>) <cursor.forEach()>`  applies the
  ``<function>`` to each document returned by the cursor.

For a list of available cursor methods, see :ref:`js-query-cursor-methods`.

.. _mongosh-help-bson-class:

BSON Class Help
---------------

``mongosh`` provides help methods for :term:`BSON <BSON>` classes. The
help methods provide a brief overview of the BSON class and a link with
more information.

To access help for BSON classes, run ``.help()`` on either the class
name or an instantiated instance of the class:

.. code-block:: none

   <BSON class>.help()
   // or
   <BSON class>().help()

For example, to view help for the ``ObjectId`` BSON class, run one of
the following commands:

.. code-block:: javascript

   ObjectId.help()

.. code-block:: javascript

   ObjectId().help()

``mongosh`` returns the same output for both ``.help()`` methods:

.. code-block:: javascript
   :copyable: false

   The ObjectId BSON Class:

   For more information on usage: https://mongodb.github.io/node-mongodb-native/3.6/api/ObjectID.html

``mongosh`` provides help methods for the following BSON classes:

- ``BinData``
- ``Code``
- ``DBRef``
- ``MinKey``
- ``MaxKey``
- ``NumberDecimal``
- ``NumberInt``
- ``NumberLong``
- ``ObjectId``
- ``Symbol`` *(Deprecated)*
- ``Timestamp``

Log Method Help
---------------

``mongosh`` provides help for :ref:`log message <mdb-shell-logs>`
methods. To see available log message methods, run the following
command:

.. code-block:: javascript

   log.help()

Command Helpers
---------------

``mongosh`` provides the following methods and commands to wrap
certain database commands and obtain information on your deployment:

.. list-table::
   :header-rows: 1
   :widths: 30 70

   * - Help Methods and Commands
     - Description

   * - ``db.help()``
     - Display help for database methods.

   * - ``db.<collection>.help()``
     - Display help on collection methods. The ``<collection>`` can be
       the name of an existing collection or a non-existing collection.

   * - ``help``
     - Display help.

   * - ``history()``
     - Display a list of previously executed commands. Available
       starting in |mdb-shell| 2.4.0.

   * - ``show collections``
     - Display a list of all collections for current database.

   * - ``show dbs``
     - Display a list of all databases on the server.

       ``show dbs`` is synonymous with ``show databases``.

   * - ``show log <name>``
     - Displays the last segment of log in memory for the specified
       logger name. If you do not specify a ``<name>``, the command
       defaults to ``global``.

       To show ``startupWarning`` logs, run:

       .. code-block:: sh

          show log startupWarnings

   * - ``show logs``
     - Display the accessible logger names. See :doc:`/logs`.

   * - ``show profile``
     - Display the five most recent operations that took 1 millisecond or
       more. See documentation on the
       :manual:`database profiler
       </tutorial/manage-the-database-profiler>` for more information.

   * - ``show roles``
     - Display a list of all roles, both user-defined and built-in, for
       the current database.

   * - ``show tables``
     - Display a list of collections in the current database. See ``show
       collections``.

   * - ``show users``
     - Display a list of users for current database.
