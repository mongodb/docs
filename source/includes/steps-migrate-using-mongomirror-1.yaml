title: "Set up database user in the source replica set."
level: 4
ref: mongomirror-user-source
content: |

   If the source replica set requires authentication, you must include
   user credentials when running |mongomirror|. You must
   specify a database user with, at a minimum, the following privileges:

   - Read all databases and collections (i.e. :authrole:`readAnyDatabase`
     on the ``admin`` database)
   - Read the oplog.
   - Run the :dbcommand:`getParameter` command.

   If no such user exists, create the user in your source MongoDB
   replica set. Different MongoDB server versions have different
   built-in roles. Select a built-in role based on your MongoDB
   server version and execute the appropriate commands in the
   :binary:`~bin.mongo` shell:

   .. include:: /includes/mongomirror-required-roles.rst

   Make note of the username and password for this user, as you must
   specify these credentials when running |mongomirror|.

---
title: "Set up a database user in the target |service| cluster."
level: 4
ref: mongomirror-user-target
content: |

   You must specify a database user with the
   :atlasrole:`Atlas admin` role to run |mongomirror|.
   See :ref:`add-mongodb-users` for documentation on creating a database
   user.

   If no such user exists, create the user:

   #. In the :guilabel:`Security` section of the left navigation, click
      :guilabel:`Database Access`. The :guilabel:`Database Users` tab
      displays.

   #. Click :icon-fa5:`plus` :guilabel:`Add New Database User`.

   #. Add an :guilabel:`Atlas admin` user.

   Make note of the username and password selected for the new
   user, as you must specify these credentials when running
   |mongomirror|.
---
title: "Update IP Access List."
level: 4
ref: connect-details
content: |

  If the host where you will run |mongomirror| is not in your cluster's
  :doc:`IP Access List </security/ip-access-list>`, update the list.
  You can specify either:

  - The public IP address of the server on which |mongomirror| will run, or

  - If set up for |vpc| peering, either the peer's |vpc| |cidr| block
    (or a subnet) or the peer |vpc|\'s Security Group.
---
title: "Open the connect dialog."
level: 4
ref: mongomirror-connect-dialog
content: |
   From the :guilabel:`Clusters` view, click :guilabel:`Connect` for
   the |service| cluster into which you want to migrate data.

---
title: "Copy the target cluster host information."
level: 4
ref: connect
content: |

   You can get your |service| cluster's hostname information from the
   |service| application connection assistance UI.

   .. note::

      You don't need to use a driver to migrate data with |mongomirror|.
      The application connection assistance user interface is a
      convenient way to copy your connection string to the clipboard.

   The connection string should look similar to the following example.
   This example has been broken into multiple lines for readability:

   .. code-block:: shell
      :copyable: false

      mongodb://<username>:<PASSWORD>@
        00.foo.mongodb.net:27017,
        01.foo.mongodb.net:27017,
        02.foo.mongodb.net:27017/test?
        ssl=true&replicaSet=myAtlasRS&authSource=admin

   Copy the value of ``replicaSet`` and append the host list as comma
   separated values, similar to the following:

   .. code-block:: shell
      :copyable: false

      myAtlasRS/00.foo.mongodb.net:27017,01.foo.mongodb.net:27017,02.foo.mongodb.net:27017

   Use this value for the :option:`--destination <--destination>` option
   in the next step.

---
title: "Start ``mongomirror``."
level: 4
ref: mongomirror-run
pre: |

   Start |mongomirror| with the following options:

   - :option:`--host <--host>` set to the host string of the source cluster.
   - :option:`--ssl <--ssl>` if the source cluster has TLS/SSL enabled.
   - :option:`--username <--username>` to the source cluster username created for this procedure.
   - :option:`--password <--password>` to the password for the source cluster username.
   - :option:`--authenticationDatabase <--authenticationDatabase>` to the database in the source
     cluster where the username specified to ``--username`` was created.
   - :option:`--destination <--destination>` to the |service| cluster host string.
   - :option:`--destinationUsername <--destinationUsername>` to the target |service| cluster username.
   - :option:`--destinationPassword <--destinationPassword>` to the password for the target |service| cluster username.

   Your final command should resemble the following example:

action:
   copyable: true
   language: sh
   code: |
      mongomirror --host "MySourceRS/host1.example.net:27017,host2.example.net:27017,host3.example.net:27017" \
         --ssl \
         --username "mySourceUser" \
         --password "mySourceP@$$word" \
         --authenticationDatabase "admin" \
         --destination "myAtlasRS/00.foo.mongodb.net:27017,01.foo.mongodb.net:27017,02.foo.mongodb.net:27017" \
         --destinationUsername "myAtlasAdminUser" \
         --destinationPassword "atlasPassword"
post: |
   See :ref:`mongomirror-options` for more |mongomirror|
   options.
...
