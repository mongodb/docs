=====
count
=====

.. default-domain:: mongodb

Definition
----------

.. dbcommand:: count

   Counts the number of documents in a collection. Returns a document
   that contains this count and as well as the command status.
   :dbcommand:`count` has the following form:

   .. code-block:: javascript

      { count: <collection>, query: <query>, limit: <limit>, skip: <skip> }

   :dbcommand:`count` has the following fields:

   .. include:: /reference/command/count-field.rst

.. note::

   MongoDB also provides the :method:`~cursor.count()` and
   :method:`db.collection.count()` wrapper methods in the
   :program:`mongo` shell.

Examples
--------

The following sections provide examples of the :dbcommand:`count`
command.

Count all Documents
~~~~~~~~~~~~~~~~~~~

The following operation counts the number of all documents in the
``orders`` collection:

.. code-block:: javascript

   db.runCommand( { count: 'orders' } )

In the result, the ``n``, which represents the count, is ``26``,
and the command status ``ok`` is ``1``:

.. code-block:: javascript

   { "n" : 26, "ok" : 1 }

Count Documents with Specified Field Values
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following operation returns a count of the documents in the
``orders`` collection where the value of the ``ord_dt`` field is
greater than ``Date('01/01/2012')``:

.. code-block:: javascript

   db.runCommand( { count:'orders',
                    query: { ord_dt: { $gt: new Date('01/01/2012') } }
                  } )

In the result, the ``n``, which represents the count, is ``13``
and the command status ``ok`` is ``1``:

.. code-block:: javascript

   { "n" : 13, "ok" : 1 }

Skip Matching Documents
~~~~~~~~~~~~~~~~~~~~~~~

The following operation returns a count of the documents in the
``orders`` collection where the value of the ``ord_dt`` field is
greater than ``Date('01/01/2012')`` and skip the first ``10`` matching
documents:

.. code-block:: javascript

   db.runCommand( { count:'orders',
                    query: { ord_dt: { $gt: new Date('01/01/2012') } },
                    skip: 10 }  )

In the result, the ``n``, which represents the count, is ``3`` and
the command status ``ok`` is ``1``:

.. code-block:: javascript

   { "n" : 3, "ok" : 1 }
