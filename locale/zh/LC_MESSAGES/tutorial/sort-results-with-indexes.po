#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Language: zh\n"
"X-Generator: Poedit 1.6.9\n"

#: ../source/tutorial/sort-results-with-indexes.txt:6
msgid "Use Indexes to Sort Query Results"
msgstr "使用索引来排序查询结果"

#: ../source/tutorial/sort-results-with-indexes.txt:16
msgid ""
"In MongoDB, sort operations can obtain the sort order by retrieving "
"documents based on the ordering in an index. If the query planner cannot "
"obtain the sort order from an index, it will sort the results in memory. "
"Sort operations that use an index often have better performance than those "
"that do not use an index. In addition, sort operations that do *not* use an "
"index will abort when they use 32 megabytes of memory."
msgstr ""
"在MongoDB中，排序操作可以通过从索引中按照索引顺序获取文档的方式来保证结果的有"
"序性。如果查询计划器(planner)无法从索引中得到排序顺序，那么它将需要在内存中排"
"序结果。相比于不使用索引的排序操作，使用索引会有更好的性能。此外，如果 *不使"
"用* 索引的排序操作使用了超过32M的内存，那么操作会终止。"

#: ../source/tutorial/sort-results-with-indexes.txt:26
msgid "Sort with a Single Field Index"
msgstr "使用单键索引排序"

#: ../source/tutorial/sort-results-with-indexes.txt:28
msgid ""
"If an ascending or a descending index is on a single field, the sort "
"operation on the field can be in either direction."
msgstr ""
"如果一个递增或递减索引是单键索引，那么在该键上的排序操作可以是任意方向。"

#: ../source/tutorial/sort-results-with-indexes.txt:31
msgid ""
"For example, create an ascending index on the field ``a`` for a collection "
"``records``:"
msgstr "例如，在集合 ``records`` 的 ``a`` 键上创建递增的索引:"

#: ../source/tutorial/sort-results-with-indexes.txt:38
msgid "This index can support an ascending sort on ``a``:"
msgstr "索引可以支持在 ``a`` 上的递增排序："

#: ../source/tutorial/sort-results-with-indexes.txt:44
msgid ""
"The index can also support the following descending sort on ``a`` by "
"traversing the index in reverse order:"
msgstr "索引也支持如下在 ``a`` 上的递减排序，通过以相反的顺序遍历索引的方式："

#: ../source/tutorial/sort-results-with-indexes.txt:54
msgid "Sort on Multiple Fields"
msgstr "在多个键上排序"

#: ../source/tutorial/sort-results-with-indexes.txt:56
msgid ""
"Create a :ref:`compound index <index-type-compound>` to support sorting on "
"multiple fields."
msgstr "创建 :ref:`复合索引 <index-type-compound>` 以支持在多个键上排序。"

#: ../source/tutorial/sort-results-with-indexes.txt:59
msgid ""
"You can specify a sort on all the keys of the index or on a subset; however, "
"the sort keys must be listed in the *same order* as they appear in the "
"index. For example, an index key pattern ``{ a: 1, b: 1 }`` can support a "
"sort on ``{ a: 1, b: 1 }`` but *not* on ``{ b: 1, a: 1 }``."
msgstr ""
"您可以指定在索引的所有键或者部分键上排序。但是，排序键的顺序必须和它们在索引"
"中的排列顺序 *一致* 。例如，索引 ``{ a: 1, b: 1 }`` 可以支持排序 ``{ a: 1, "
"b: 1 }`` 但不支持 ``{ b: 1, a: 1 }`` 排序。"

#: ../source/tutorial/sort-results-with-indexes.txt:65
msgid ""
"The sort must specify the *same sort direction* (i.e.ascending/descending) "
"for all its keys as the index key pattern or specify the *reverse sort "
"direction* for all its keys as the index key pattern. For example, an index "
"key pattern ``{ a: 1, b: 1 }`` can support a sort on ``{ a: 1, b: 1 }`` and "
"``{ a: -1, b: -1 }`` but *not* on ``{ a: -1, b: 1 }``."
msgstr ""
"此外，sort中指定的所有键的排序顺序(例如递增/递减）必须和索引中的对应键的排序"
"顺序 *完全相同*, 或者 *完全相反* 。例如，索引 ``{ a: 1, b: 1 }`` 可以支持排"
"序 ``{ a: 1, b: 1 }`` 和排序 ``{ a: -1, b: -1 }`` ，但 *不支持* 排序 ``{ a: "
"-1, b: 1 }`` 。"

#: ../source/tutorial/sort-results-with-indexes.txt:75
msgid "Sort and Index Prefix"
msgstr "排序与索引前缀"

#: ../source/tutorial/sort-results-with-indexes.txt:77
msgid ""
"If the sort keys correspond to the index keys or an index *prefix*, MongoDB "
"can use the index to sort the query results. A *prefix* of a compound index "
"is a subset that consists of one or more keys at the start of the index key "
"pattern."
msgstr ""
"如果排序的键符合索引的键或者 *前缀* ,那么MongoDB可以使用索引来排序查询结果。"
"复合索引的前缀是指被索引键的子集，由一个或多个排在最开始的键组成。"

#: ../source/tutorial/sort-results-with-indexes.txt:82
msgid "For example, create a compound index on the ``data`` collection:"
msgstr "例如，在集合 ``data`` 上创建一个复合索引："

#: ../source/tutorial/sort-results-with-indexes.txt:88
msgid "Then, the following are prefixes for that index:"
msgstr "那么，该索引的前缀如下："

#: ../source/tutorial/sort-results-with-indexes.txt:96
msgid ""
"The following query and sort operations use the index prefixes to sort the "
"results. These operations do not need to sort the result set in memory."
msgstr ""
"如下查询和排序操作可以使用索引前缀来排序查询结果。这些操作不需要在内存中对结"
"果集排序。"

#: ../source/tutorial/sort-results-with-indexes.txt:104
#: ../source/tutorial/sort-results-with-indexes.txt:162
msgid "Example"
msgstr "例子"

#: ../source/tutorial/sort-results-with-indexes.txt:106
#: ../source/tutorial/sort-results-with-indexes.txt:164
msgid "Index Prefix"
msgstr "索引前缀"

#: ../source/tutorial/sort-results-with-indexes.txt:108
msgid "``db.data.find().sort( { a: 1 } )``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:110
#: ../source/tutorial/sort-results-with-indexes.txt:114
msgid "``{ a: 1 }``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:112
msgid "``db.data.find().sort( { a: -1 } )``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:116
msgid "``db.data.find().sort( { a: 1, b: 1 } )``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:118
#: ../source/tutorial/sort-results-with-indexes.txt:122
#: ../source/tutorial/sort-results-with-indexes.txt:130
#: ../source/tutorial/sort-results-with-indexes.txt:176
msgid "``{ a: 1, b: 1 }``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:120
msgid "``db.data.find().sort( { a: -1, b: -1 } )``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:124
msgid "``db.data.find().sort( { a: 1, b: 1, c: 1 } )``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:126
#: ../source/tutorial/sort-results-with-indexes.txt:172
msgid "``{ a: 1, b: 1, c: 1 }``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:128
msgid "``db.data.find( { a: { $gt: 4 } } ).sort( { a: 1, b: 1 } )``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:132
msgid ""
"Consider the following example in which the prefix keys of the index appear "
"in both the query predicate and the sort:"
msgstr "假设有如下例子，索引的前缀键出现在查询条件和排序中："

#: ../source/tutorial/sort-results-with-indexes.txt:139
msgid ""
"In such cases, MongoDB can use the index to retrieve the documents in order "
"specified by the sort. As the example shows, the index prefix in the query "
"predicate can be different from the prefix in the sort."
msgstr ""
"在这种情况下，MongoDB可以使用索引按照sort指定的顺序来获取文档。如例子中所示，"
"在查询条件中的索引前缀可以和在sort中出现的前缀不一样。"

#: ../source/tutorial/sort-results-with-indexes.txt:144
msgid "Sort and Non-prefix Subset of an Index"
msgstr "用非前缀的索引键排序"

#: ../source/tutorial/sort-results-with-indexes.txt:146
msgid ""
"An index can support sort operations on a non-prefix subset of the index key "
"pattern. To do so, the query must include **equality** conditions on all the "
"prefix keys that precede the sort keys."
msgstr ""
"索引也支持使用非前缀的键来排序。在这种情况下，对于索引中排列在排序键的前面的"
"所有键，查询语句中必须包含针对它们的 **相等匹配** 的条件。"

#: ../source/tutorial/sort-results-with-indexes.txt:150
msgid "For example, the collection ``data`` has the following index:"
msgstr "例如，集合 ``data`` 有如下索引："

#: ../source/tutorial/sort-results-with-indexes.txt:156
msgid "The following operations can use the index to get the sort order:"
msgstr "如下操作可以使用索引来排序："

#: ../source/tutorial/sort-results-with-indexes.txt:166
msgid "``db.data.find( { a: 5 } ).sort( { b: 1, c: 1 } )``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:168
msgid "``{ a: 1 , b: 1, c: 1 }``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:170
msgid "``db.data.find( { b: 3, a: 4 } ).sort( { c: 1 } )``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:174
msgid "``db.data.find( { a: 5, b: { $lt: 3} } ).sort( { b: 1 } )``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:178
msgid ""
"As the last operation shows, only the index fields *preceding* the sort "
"subset must have the equality conditions in the query document; the other "
"index fields may specify other conditions."
msgstr ""
"如最后一个操作所示，只有索引中那些排列在排序键 *前面* 的键必须在查询语句中有"
"相等匹配条件;其他索引键则可以指定其他匹配条件。"

#: ../source/tutorial/sort-results-with-indexes.txt:182
msgid ""
"If the query does **not** specify an equality condition on an index prefix "
"that precedes or overlaps with the sort specification, the operation will "
"**not** efficiently use the index. For example, the following operations "
"specify a sort document of ``{ c: 1 }``, but the query documents do not "
"contain equality matches on the preceding index fields ``a`` and ``b``:"
msgstr ""
"如果查询语句 **没有** 对排列在排序键前面或者与之有所重叠的前缀键指定相等匹配"
"条件，那么操作将 **不会** 有效使用索引。例如，如下操作指定了排序 ``{ c: 1 }"
"`` ，但是查询语句并没有对前缀键 ``a`` 和 ``b`` 指定相等匹配:"

#: ../source/tutorial/sort-results-with-indexes.txt:194
msgid ""
"These operations **will not** efficiently use the index ``{ a: 1, b: 1, c: "
"1, d: 1 }`` and may not even use the index to retrieve the documents."
msgstr ""
"这些操作 **将不会** 高效地使用索引 ``{ a: 1, b: 1, c: 1, d: 1 }`` ，且可能甚"
"至不会使用该索引来获取文档。"

#: ../source/tutorial/sort-results-with-indexes.txt:0
msgid "On this page"
msgstr ""
