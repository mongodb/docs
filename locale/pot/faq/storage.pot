# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/faq/storage.txt:3
# 023b7b1d61e84c7c80c49bbba449d79b
msgid "FAQ: MongoDB Storage"
msgstr ""

#: ../source/faq/storage.txt:7
# 5ccb873e9d7241a1b9be30f5ff85d1eb
msgid "This document addresses common questions regarding MongoDB's storage system."
msgstr ""

#: ../source/faq/storage.txt:10
# a6a5fa2e348c421cb037f32b166b8c42
msgid "If you don't find the answer you're looking for, check the :doc:`complete list of FAQs </faq>` or post your question to the `MongoDB User Mailing List <https://groups.google.com/forum/?fromgroups#!forum/mongodb-user>`_."
msgstr ""

#: ../source/faq/storage.txt:15
# 106f73b6e930439c9c438fc53236870b
msgid "Storage Engine Fundamentals"
msgstr ""

#: ../source/faq/storage.txt:18
# d1e43b9c391441b688fc02af7ec72a4c
msgid "What is a storage engine?"
msgstr ""

#: ../source/faq/storage.txt:20
# 1750ba2948644d168a68eaca9c2f72d5
msgid "A storage engine is the part of a database that is responsible for managing how data is stored on disk. Many databases support multiple storage engines, where different engines perform better for specific workloads. For example, one storage engine might offer better performance for read-heavy workloads, and another might support a higher-throughput for write operations."
msgstr ""

#: ../source/faq/storage.txt:28
# 4f4f9351c53f4e8b843fb5e40e20ab54
msgid "What will be the default storage engine going forward?"
msgstr ""

#: ../source/faq/storage.txt:30
# 0abfacc0359a47349fb5275765ee713d
msgid "MMAPv1 is the default storage engine in 3.0. With multiple storage engines, you can decide which storage engine is best for your application."
msgstr ""

#: ../source/faq/storage.txt:35
# 04777e5c9cf94f67a1e9229980c89739
msgid "Can you mix storage engines in a replica set?"
msgstr ""

#: ../source/faq/storage.txt:37
# 24acefb18ec741eaa022ef93db8e8d96
msgid "Yes. You can have a replica set members that use different storage engines."
msgstr ""

#: ../source/faq/storage.txt:40
# f3c2f98566ff47e49a1ff45b2ea5c238
msgid "When designing these multi-storage engine deployments consider the following:"
msgstr ""

#: ../source/faq/storage.txt:43
# f30621ff7e4b4c7685cd0c7038fd48a3
msgid "the oplog on each member may need to be sized differently to account for differences in throughput between different storage engines."
msgstr ""

#: ../source/faq/storage.txt:46
# 11901caf9cfa44f1be30b9560524f7c8
msgid "recovery from backups may become more complex if your backup captures data files from MongoDB: you may need to maintain backups for each storage engine."
msgstr ""

#: ../source/faq/storage.txt:51
# 0fdb1032b2d447c4b10a3d8c1b8479d6
msgid "WiredTiger Storage Engine"
msgstr ""

#: ../source/faq/storage.txt:54
# 68831140387148109583a35f275cf8f0
msgid "Can I upgrade an existing deployment to a WiredTiger?"
msgstr ""

#: ../source/faq/storage.txt:56
# 5f30b1fcb4b04b6fb100add60f36b9e4
msgid "Yes. You can upgrade an existing deployment to WiredTiger while the deployment remains available by adding replica set members with the new storage engine and then removing members with the legacy storage engine. See the following sections of the :doc:`/release-notes/3.0-upgrade` for the complete procedure that you can use to upgrade an existing deployment:"
msgstr ""

#: ../source/faq/storage.txt:63
# ba46cc48a7b74d97becba90ba30bc57d
msgid ":ref:`3.0-upgrade-repl-set-wiredtiger`"
msgstr ""

#: ../source/faq/storage.txt:65
# 1e7568326fcc45118de480a382c6dee1
msgid ":ref:`3.0-upgrade-cluster-wiredtiger`"
msgstr ""

#: ../source/faq/storage.txt:68
# 3b9c1906552e459483a0a7fbb1cf4994
msgid "How much compression does WiredTiger provide?"
msgstr ""

#: ../source/faq/storage.txt:70
# c5b561a3d4394b118f9bdbbf301cd327
msgid "The ratio of compressed data to uncompressed data depends on your data and the compression library used. By default, collection data in WiredTiger use :term:`Snappy block compression <snappy>`; :term:`zlib` compression is also available. Index data use :term:`prefix compression` by default."
msgstr ""

#: ../source/faq/storage.txt:79
# a68de67761974ade913e857a03de25b7
msgid "To what size should I set the WiredTiger cache?"
msgstr ""

#: ../source/faq/storage.txt:81
# 98b4a1e35a2b4aada75472210d943da6
msgid "The size of the cache should be sufficient to hold the entire working set for the :program:`mongod`. If the cache does not have enough space to load additional data, WiredTiger evicts pages from the cache to free up space."
msgstr ""

#: ../source/faq/storage.txt:86
# 04178e79850b4edcb1ad503f42a22527
msgid "To see statistics on the cache and eviction, use the :dbcommand:`serverStatus` command. The :data:`~serverStatus.wiredTiger.cache` field holds the information on the cache and eviction:"
msgstr ""

#: ../source/faq/storage.txt:131
# fe73c833fb684879802bb636532231c2
msgid "To adjust the size of the WiredTiger cache, see :setting:`storage.wiredTiger.engineConfig.cacheSizeGB` and :option:`--wiredTigerCacheSizeGB`."
msgstr ""

#: ../source/faq/storage.txt:136
# d19b4ce8d0d7474d9ed56220f2b3d33a
msgid "MMAPv1 Storage Engine"
msgstr ""

#: ../source/faq/storage.txt:141
# 31075b1266af45a29eb670d2397b20f0
msgid "What are memory mapped files?"
msgstr ""

#: ../source/faq/storage.txt:143
# 66536e846a77434491b368344e5e915e
msgid "A memory-mapped file is a file with data that the operating system places in memory by way of the ``mmap()`` system call. ``mmap()`` thus *maps* the file to a region of virtual memory. Memory-mapped files are the critical piece of the MMAPv1 storage engine in MongoDB. By using memory mapped files, MongoDB can treat the contents of its data files as if they were in memory. This provides MongoDB with an extremely fast and simple method for accessing and manipulating data."
msgstr ""

#: ../source/faq/storage.txt:152
# 45dfb2a7cb4d4240b243a3d415e1f3d3
msgid "How do memory mapped files work?"
msgstr ""

#: ../source/faq/storage.txt:154
# 4700c4d14d5c45d79fbd8e3baf040dfa
msgid "MongoDB uses memory mapped files for managing and interacting with all data."
msgstr ""

#: ../source/faq/storage.txt:157
# 0ac77e1d4a884ea78a0eb1bacaf61b79
msgid "Memory mapping assigns files to a block of virtual memory with a direct byte-for-byte correlation. MongoDB memory maps data files to memory as it accesses documents. Unaccessed data is *not* mapped to memory."
msgstr ""

#: ../source/faq/storage.txt:161
# b88e20bce6d54902b078004f603892b8
msgid "Once mapped, the relationship between file and memory allows MongoDB to interact with the data in the file as if it were memory."
msgstr ""

#: ../source/faq/storage.txt:167
# 13a4eae450054d1fbc59d5284d30d9cf
msgid "Why are the files in my data directory larger than the data in my database?"
msgstr ""

#: ../source/faq/storage.txt:169
# 6c0d8fbf3d78402e9f749d475f7f6ce6
msgid "The data files in your data directory, which is the :file:`/data/db` directory in default configurations, might be larger than the data set inserted into the database. Consider the following possible causes:"
msgstr ""

#: ../source/faq/storage.txt:174
# 853de0067bc14a5fb15360ae3d04a565
msgid "Preallocated data files"
msgstr ""

#: ../source/faq/storage.txt:176
# 52d9f2ab85f643259abbf5670b0a029b
msgid "MongoDB preallocates its data files to avoid filesystem fragmentation, and because of this, the size of these files do not necessarily reflect the size of your data."
msgstr ""

#: ../source/faq/storage.txt:180
# 0303d1c6c8f04e21956cbf55c99e90bd
msgid "The :setting:`storage.mmapv1.smallFiles` option will reduce the size of these files, which may be useful if you have many small databases on disk."
msgstr ""

#: ../source/faq/storage.txt:185
# 100b7a97d059458ab9c1412cd910be60
msgid "The ``oplog``"
msgstr ""

#: ../source/faq/storage.txt:187
# 732e6450cafd4767bd7d8b63f07545dc
msgid "If this :program:`mongod` is a member of a replica set, the data directory includes the :term:`oplog.rs <oplog>` file, which is a preallocated :term:`capped collection` in the ``local`` database."
msgstr ""

#: ../source/faq/storage.txt:192
# 8e50e501fd70431dbe63fe3a76315d7c
msgid "The default allocation is approximately 5% of disk space on 64-bit installations. In most cases, you should not need to resize the oplog. See :ref:`Oplog Sizing <replica-set-oplog-sizing>` for more information."
msgstr ""

#: ../source/faq/storage.txt:197
# 8531f75f458a40d6b4e0cc881281d5c1
msgid "The ``journal``"
msgstr ""

#: ../source/faq/storage.txt:199
# 0a26b87d51454a088d6640041863e48f
msgid "The data directory contains the journal files, which store write operations on disk before MongoDB applies them to databases. See :doc:`/core/journaling`."
msgstr ""

#: ../source/faq/storage.txt:204
# 77d0f4fced8f4865b6b57477a4a20f06
msgid "Empty records"
msgstr ""

#: ../source/faq/storage.txt:206
# 416a584bfac043ff9121228b6d19b65d
msgid "MongoDB maintains lists of empty records in data files as it deletes documents and collections. MongoDB can reuse this space, but will not, by default, return this space to the operating system."
msgstr ""

#: ../source/faq/storage.txt:210
# 4182b7375c0e4c62ae30391967fd5734
msgid "To de-fragment allocated storage, use :dbcommand:`compact`. By de-fragmenting storage, MongoDB can more effectively use the allocated space. :dbcommand:`compact` requires up to 2 gigabytes of extra disk space to run. Do not use :dbcommand:`compact` if you are critically low on disk space."
msgstr ""

#: ../source/faq/storage.txt:215
# a4b6dea4b5f4401b86079dfdaa0dad09
msgid ":dbcommand:`compact` only removes fragmentation from MongoDB data files within a collection, and does not return any disk space to the operating system."
msgstr ""

#: ../source/faq/storage.txt:218
# d08eb2bb8bd446cfa7fc7842b40799d9
msgid "If you must reclaim disk space, you can use :dbcommand:`repairDatabase`. This command rebuilds the database, de-fragmenting the associated storage in the process. This may release space to the operating system. :dbcommand:`repairDatabase` requires up to 2 gigabytes of extra disk space to run. Do not use :dbcommand:`repairDatabase` if you are critically low on disk space."
msgstr ""

#: ../source/faq/storage.txt:226
# f32122b6f420493f9994f51101a414c7
msgid ":dbcommand:`repairDatabase` requires enough free disk space to hold both the old and new database files while the repair is running. Be aware that :dbcommand:`repairDatabase` will block all other operations and may take a long time to complete."
msgstr ""

#: ../source/faq/storage.txt:234
# 6bf3934cae8c478d853a3a87e43880c9
msgid "What is the working set?"
msgstr ""

#: ../source/faq/storage.txt:236
# 83d78ade073f4a81a38fa9cdf3bc8c66
msgid "Working set represents the total body of data that the application uses in the course of normal operation. Often this is a subset of the total data size, but the specific size of the working set depends on actual moment-to-moment use of the database."
msgstr ""

#: ../source/faq/storage.txt:241
# 9dddda6ddf2b480dbd520ce6fa6e9606
msgid "If you run a query that requires MongoDB to scan every document in a collection, the working set will expand to include every document. Depending on physical memory size, this may cause documents in the working set to \"page out,\" or to be removed from physical memory by the operating system. The next time MongoDB needs to access these documents, MongoDB may incur a hard page fault."
msgstr ""

#: ../source/faq/storage.txt:248
# d2b97193fd2c41e0b8454173c2010e3e
msgid "For best performance, the majority of your *active* set should fit in RAM."
msgstr ""

#: ../source/faq/storage.txt:254
# ceaec24ca62b4612be39fe73e56642d8
msgid "What are page faults?"
msgstr ""

#: ../source/includes/fact-page-fault.rst:1
# 74b51a0be9ac406e95c192c27a7da881
msgid "With the MMAPv1 storage engine, page faults can occur as MongoDB reads from or writes data to parts of its data files that are not currently located in physical memory. In contrast, operating system page faults happen when physical memory is exhausted and pages of physical memory are swapped to disk."
msgstr ""

#: ../source/faq/storage.txt:258
# 39f5ca3b331c41809d9726454d6a8d47
msgid "If there is free memory, then the operating system can find the page on disk and load it to memory directly. However, if there is no free memory, the operating system must:"
msgstr ""

#: ../source/faq/storage.txt:262
# b870f4ed8811407e9367f69d53f5677c
msgid "find a page in memory that is stale or no longer needed, and write the page to disk."
msgstr ""

#: ../source/faq/storage.txt:265
# a571622535d148e0a6d6cf660e041ab3
msgid "read the requested page from disk and load it into memory."
msgstr ""

#: ../source/faq/storage.txt:267
# 2a636a53ecf44269b06403718794cf40
msgid "This process, on an active system, can take a long time, particularly in comparison to reading a page that is already in memory."
msgstr ""

#: ../source/faq/storage.txt:271
#: ../source/faq/storage.txt:283
# 94593ec275b245d79602479195835ba9
# c980b4139cfb46acbdcdb5260a18a944
msgid "See :ref:`administration-monitoring-page-faults` for more information."
msgstr ""

#: ../source/faq/storage.txt:274
# d68470fccd51490c91a1b7b37bc78698
msgid "What is the difference between soft and hard page faults?"
msgstr ""

#: ../source/faq/storage.txt:276
# d7b454a8f1be491e87d581de5c171567
msgid ":term:`Page faults <page fault>` occur when MongoDB, with the MMAP storage engine, needs access to data that isn't currently in active memory. A \"hard\" page fault refers to situations when MongoDB must access a disk to access the data. A \"soft\" page fault, by contrast, merely moves memory pages from one list to another, such as from an operating system file cache."
msgstr ""

#: ../source/faq/storage.txt:286
# c75b21b5d8dd416f94f695cffe7ac46a
msgid "Data Storage Diagnostics"
msgstr ""

#: ../source/faq/storage.txt:289
# 1d8741f4266a481684696b12c88c4b76
msgid "How can I check the size of a collection?"
msgstr ""

#: ../source/faq/storage.txt:291
# 33120f98b21743d7bd432f1ea9a31894
msgid "To view the statistics for a collection, including the data size, use the :method:`db.collection.stats()` method from the :program:`mongo` shell. The following example issues :method:`db.collection.stats()` for the ``orders`` collection:"
msgstr ""

#: ../source/faq/storage.txt:300
# 872fbc692fcb4b8fa0d256f37cd4d382
msgid "MongoDB also provides the following methods to return specific sizes for the collection:"
msgstr ""

#: ../source/faq/storage.txt:303
# fd4017c4fce3491e8fd4e009467db4a9
msgid ":method:`db.collection.dataSize()` to return data size in bytes for the collection."
msgstr ""

#: ../source/faq/storage.txt:306
# 07eccb4116e943268eb97e3ee405120b
msgid ":method:`db.collection.storageSize()` to return allocation size in bytes, including unused space."
msgstr ""

#: ../source/faq/storage.txt:309
# ae797d7e2ca443949cea8dd4fc94cf65
msgid ":method:`db.collection.totalSize()` to return the data size plus the index size in bytes."
msgstr ""

#: ../source/faq/storage.txt:312
# 58f0ff48cac6404b8aa203da291b312d
msgid ":method:`db.collection.totalIndexSize()` to return the index size in bytes."
msgstr ""

#: ../source/faq/storage.txt:315
# 8da27aba809947af812a591a78e58561
msgid "The following script prints the statistics for each database:"
msgstr ""

#: ../source/faq/storage.txt:324
# 3b85695e414c4c46a80483a13f3f0aaa
msgid "The following script prints the statistics for each collection in each database:"
msgstr ""

#: ../source/faq/storage.txt:338
# 8fb7624c7ec44933ac1724c40a125d9a
msgid "How can I check the size of indexes for a collection?"
msgstr ""

#: ../source/faq/storage.txt:340
# 74348abb495d426582c7e4af78bd4030
msgid "To view the size of the data allocated for an index, use the :method:`db.collection.stats()` method and check the :data:`~collStats.indexSizes` field in the returned document."
msgstr ""

#: ../source/faq/storage.txt:347
# 1ca9fc6cf01040889fe26a5f75cbade6
msgid "How can I get information on the storage use of a database?"
msgstr ""

#: ../source/faq/storage.txt:349
# 7c186e31d357440b85719e68320d60c0
msgid "The :method:`db.stats()` method in the :program:`mongo` shell returns the current state of the \"active\" database. For the description of the returned fields, see :ref:`dbStats Output <dbstats-output>`."
msgstr ""

