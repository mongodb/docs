======================
Installation Checklist
======================

.. default-domain:: mongodb

Overview
--------

You must make the following decisions before you install |onprem|. During
the install procedures you will make choices based on your decisions here.

If you have not yet read the :doc:`/core/system-overview` page, please do
so for a description of the system's components.

The sequence for installing |onprem| is to:

- Plan your installation according to the questions on this page.

- Provision servers that meet the :doc:`Hardware and Software Requirements
  </core/requirements>`

- Set up the |application| Database and optional Backup Database.

- Install the |application| and optional Backup Daemon.

.. note::

   To install a simple evaluation deployment on a single server, see
   :doc:`/tutorial/install-simple-test-deployment`.

Topology Decisions
------------------

Do you require durability and/or high availability?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

|onprem| stores application metadata and snapshots in the |application|
Database and Backup Database respectively. To provide data durability, run
each database as a :term:`replica set` on multiple servers.

To provide high availability for write operations to the databases, set up
each replica set with at least three members that hold data so that if a
member is unreachable the replica set can still write data. MongoDB
requires acknowledgement from two members for a successful write
operation.

To make the |application| highly available, you must run at least two
instances of the application and use a load balancer. For more
information, see :doc:`/tutorial/configure-application-high-availability`.

The following tables describe the reasonings behind the different
combinations of durability and high availability.

Non-Durable, Test Install
`````````````````````````

This is a non-durable install that runs on one server. If you lose the
server, you must start over from scratch.

.. list-table::
   :widths: 15 85

   * - **Pros:**

     - Needs only needs one server.

   * - **Cons:**

     - If you lose the server, you lose everything: users and groups,
       metadata, backups, automation configurations, stored monitoring
       metrics, etc.

.. _durable_production_install:

Durable Production Install
``````````````````````````

This install runs on at least three servers and provides durability for
your metadata and snapshots. The replica sets for the |application|
Database and the Backup Database are each
made up of two data-bearing members and an arbiter. This installation does
not provide high availability.

.. list-table::
   :widths: 15 85

   * - **Pros:**

     - Can run on as few as three servers. |onprem| metadata and backups
       are durable from the perspective of the |application|.

   * - **Cons:**

     - No high availability, neither for the databases nor the application:

       1. If the |application| Database or the Backup Database loses a
          data-bearing member, the data is durable but you must restart
          the member to gain back full |onprem| functionality. For the
          Backup Database, |onprem| will not write new snapshots until the
          member is again running.

       2. Loss of the |application| requires you to manually start a new
          |application|. No |onprem| functionality is available while the
          application is down.

Durable Production Install with Highly Available Backup and Application Data
````````````````````````````````````````````````````````````````````````````

This install requires at least three servers. The replica sets for the
|application| Database and the Backup Database each comprise at least
three *data-bearing* members. This
requires more storage and memory than for the
:ref:`durable_production_install`.

.. list-table::
   :widths: 15 85

   * - **Pros:**

     - You can lose a member of the |application| Database or Backup
       Database and still maintain |onprem| availability. No |onprem|
       functionality is lost while the member is down.

   * - **Cons:**

     - Loss of the |application| requires you to manually start a new
       |application|. No |onprem| functionality is available while the
       application is down.

Highly Available Deployment
```````````````````````````

This runs multiple |onprem| Applications behind a load balancer and
requires infrastructure outside of what |onprem| offers. For details, see
:doc:`/tutorial/configure-application-high-availability`.

.. list-table::
   :widths: 15 85

   * - **Pros:**

     - |onprem| continues to be available even when any individual server is lost.

   * - **Cons:**

     - Requires a larger number of servers, and requires a load balancer
       capable of routing traffic to available application servers.

Will you deploy managed MongoDB instances on servers that have no internet access?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you use Automation and if the servers where you will deploy MongoDB do
not have internet access, then you must configure |onprem| to locally
store and share the binaries used to deploy MongoDB so that the Automation
agents can download them directly from |onprem|.

You must configure local mode and store the binaries before you create the
first managed MongoDB deployment from |onprem|. For more information, see
:doc:`/tutorial/configure-local-mode`.

Will you use a proxy for the |onprem| application's outbound network connections?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If |onprem| will use a proxy server to access external services, you must
configure the proxy settings in |onprem|'s ``conf-mms.properties``
configuration file. If you have already started |onprem|, you must restart
after configuring the proxy settings.

.. COMMENT: In the install procedure, add a step to see /tutorial/use-opsmanager-with-http-proxy

Security Decisions
------------------

Will you use authentication and/or SSL for the connections to the backing databases?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you will use authentication or SSL for connections to the |application|
Database and Backup Database, you must configure those options on each
database when :doc:`deploying the database
</tutorial/prepare-backing-mongodb-instances>` and then you must configure
|onprem| with the necessary certificate information for accessing the
databases. For details, see
:doc:`/tutorial/configure-ssl-connection-to-backing-mongodb`

Will you use LDAP for user authenticate to |onprem|?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you will use LDAP for user management, you must configure LDAP
authentication **before** you register any |onprem| user or group. If you
have already created |a-mms| user or group, you must start from scratch
with a fresh |onprem| install.

During the procedure to install |onprem| you are given the option to
configure LDAP before creating users or groups. For details on LDAP
authentication, see :doc:`/tutorial/configure-for-ldap-authentication`.

Will you use SSL (HTTPS) for connections to the |onprem| application?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you will use SSL for connections to |onprem| from agents, users, and
the API, then you must configure |onprem| to use SSL. The procedure to
install |onprem| includes the option to configure SSL access.

.. COMMENT This needs updates: /tutorial/configure-ssl-connection-to-web-interface

Backup Decisions
----------------

Will the servers that run your Backup Daemons have internet access?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If the servers that run your Backup Daemons have no internet access, you
must configure offline binary access for the Backup Daemon before running
the Daemon. The procedure to install the Backup Daemon includes the option
to configure offline binary access.

Are certain backups required to be in certain data centers?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you need to assign backups of particular MongoDB deployments to
particular data centers, then each data center requires its own
|application|, Backup Daemon, and Backup Agent. The separate |application|
instances must share a single dedicated |application| Database. The Backup
Agent in each data center must use the URL for its local |application|,
which you can configure through either different hostnames or
split-horizon DNS. For detailed requirements, see
:doc:`/tutorial/configure-backup-data-locality`.

.. COMMENT: In the install procedure, add a corresponding step
