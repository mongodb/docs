.. _scala-mongoclient:

====================
Create a MongoClient
====================

.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: connection string, URI, server, Atlas, settings, client

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

To connect to a MongoDB deployment, you need two things:

- A **connection URI**, also known as a *connection string*, which tells the {+driver-short+}
  which MongoDB deployment to connect to.
- A **MongoClient** object, which creates the connection to and allows you to perform operations 
  on the MongoDB deployment.

You can also use ``MongoClientSettings`` to customize the way the {+driver-short+} behaves
while connected to MongoDB.

This guide shows you how to create a connection string and use a ``MongoClient`` object
to connect to MongoDB.

.. _scala-connection-uri:

Connection URI
--------------

A standard connection string includes the following components:

.. list-table::
   :widths: 20 80
   :header-rows: 1

   * - Component
     - Description

   * - ``mongodb://``

     - Required. A prefix that identifies this as a string in the
       standard connection format.

   * - ``username:password``

     - Optional. Authentication credentials. If you include these, the client
       authenticates the user against the database specified in ``authSource``.
       To learn more about the ``authSource`` connection option, see the
       :ref:`scala-auth` guide.

   * - ``host[:port]``

     - Required. The host and optional port number where MongoDB is running. If you don't
       include the port number, the driver uses the default port, ``27017``.

   * - ``/defaultauthdb``
     
     - Optional. The authentication database to use if the
       connection string includes ``username:password@``
       authentication credentials but not the ``authSource`` option. If you don't include 
       this component, the client authenticates the user against the ``admin`` database.

   * - ``?<options>``

     - Optional. A query string that specifies connection-specific
       options as ``<name>=<value>`` pairs.
       
.. TODO: Add as the last sentence of ``?<options>`` - See :ref:`scala-connection-options`
  for a full description of these options.

For more information about creating a connection string, see
:manual:`Connection Strings </reference/connection-string>` in the
{+mdb-server+} manual.

Atlas Connection Example
------------------------

To connect to a MongoDB deployment on Atlas, you must first create a client. 

You can pass a connection URI as a string to the ``MongoClient.create()`` method 
to connect to a MongoDB instance:

.. literalinclude:: /includes/connect/ClientBasic.scala
   :start-after: start-create-a-client
   :end-before: end-create-a-client
   :language: scala
   :copyable:
   :dedent:

You can also create a client with your desired configurations by passing a 
``MongoClientSettings`` object to a ``MongoClient`` object.

To instantiate a ``MongoClientSettings`` object, call the ``builder()`` method,
then chain the ``applyConnectionString()`` method and pass in your connection 
string. You can also use the ``builder()`` method to specify any other client 
options. Once you have your desired configuration, call the ``build()`` method.

You can set the Stable API version client option to avoid breaking changes when 
you upgrade to a new server version. To learn more about the Stable API feature, 
see the :ref:`Stable API page <scala-stable-api>`. 

The following code shows how you can specify the connection string and the 
Stable API client option when connecting to a MongoDB deployment on Atlas 
and verify that the connection is successful:

.. literalinclude:: /includes/connect/ClientExample.scala
   :start-after: start-client-example
   :end-before: end-client-example
   :language: scala
   :copyable:
   :dedent:

API Documentation
-----------------

For more information about creating a ``MongoClient`` object with the 
{+driver-short+}, see the following API documentation: 

- `MongoClient <{+driver-api+}/MongoClient.html>`__

- `MongoClientSettings <{+driver-api+}/MongoClientSettings$.html>`__
