collection: "restaurants"
options:
  show_title: False
  show_collection: False
edition:
  - shell
  - python
  - node
  - cpp
ref: collection-base
---
source:
  file: examples-insert-base.yaml
  ref: _insert-a-document
ref: insert-a-document
edition: shell
operation:
  language: javascript
  code: |
      db.restaurants.insert(
         {
            "address" : {
               "street" : "2 Avenue",
               "zipcode" : "10075",
               "building" : "1480",
               "coord" : [ -73.9557413, 40.7720266 ],
            },
            "borough" : "Manhattan",
            "cuisine" : "Italian",
            "grades" : [
               {
                  "date" : ISODate("2014-10-01T00:00:00Z"),
                  "grade" : "A",
                  "score" : 11
               },
               {
                  "date" : ISODate("2014-01-16T00:00:00Z"),
                  "grade" : "B",
                  "score" : 17
               }
            ],
            "name" : "Vella",
            "restaurant_id" : "41704620"
         }
      )
post: |
  The method returns a :method:`WriteResult` object with the
  status of the operation.
results: |
   WriteResult({ "nInserted" : 1 })
replacement:
  insertMethod: :method:`~db.collection.insert()`
  clientName: the :program:`mongo` shell
---
source:
  file: examples-insert-base.yaml
  ref: _insert-a-document
ref: py-insert-a-document
edition: python
operation:
  language: python
  code: |
      from datetime import *;
      db.restaurants.insert(
         {
            "address" : {
               "street" : "2 Avenue",
               "zipcode" : "10075",
               "building" : "1480",
               "coord" : [ -73.9557413, 40.7720266 ],
            },
            "borough" : "Manhattan",
            "cuisine" : "Italian",
            "grades" : [
               {
                  "date" : datetime.strptime("2014-10-01", "%Y-%m-%d"),
                  "grade" : "A",
                  "score" : 11
               },
               {
                  "date" : datetime.strptime("2014-01-16", "%Y-%m-%d"),
                  "grade" : "B",
                  "score" : 17
               }
            ],
            "name" : "Vella",
            "restaurant_id" : "41704620"
         }
      )
post: |
  The operation returns the ``_id`` field value for the inserted
  document.
results: |
  ObjectId("54c1478ec2341ddf130f62b7")
replacement:
  insertMethod: :py:meth:`~pymongo.collection.Collection.insert()`
  clientName: :py:mod:`pymongo`
---
source:
  file: examples-insert-base.yaml
  ref: _insert-a-document
ref: node-insert-a-document
edition: node
operation:
  - pre: |
      Defines a function ``insertDocument``:
    language: javascript
    code: |
      var insertDocument = function(db, callback) {
         db.collection('restaurants').insertOne( {
            "address" : {
               "street" : "2 Avenue",
               "zipcode" : "10075",
               "building" : "1480",
               "coord" : [ -73.9557413, 40.7720266 ],
            },
            "borough" : "Manhattan",
            "cuisine" : "Italian",
            "grades" : [
               {
                  "date" : new Date("2014-10-01T00:00:00Z"),
                  "grade" : "A",
                  "score" : 11
               },
               {
                  "date" : new Date("2014-01-16T00:00:00Z"),
                  "grade" : "B",
                  "score" : 17
               }
            ],
            "name" : "Vella",
            "restaurant_id" : "41704620"
         }, function(err, result) {
          assert.equal(err, null);
          console.log("Inserted a document into the restaurants collection.");
          callback(result);
        });
      };
  - pre: |
      Call the ``insertDocument`` function.
    language: javascript
    code: | 
      MongoClient.connect(url, function(err, db) {
        assert.equal(null, err);
        insertDocument(db, function() {
            db.close();
        });
      });
  - pre: |
       A successful insert should print out the following line:
    language: sh
    code:
       Inserted a document into the restaurants collection.
replacement:
  insertMethod: |
    `insert <http://mongodb.github.io/node-mongodb-native/2.0/api/Collection.html#insert>`_
---
source:
  file: examples-insert-base.yaml
  ref: _insert-a-document
ref: cpp-insert-a-document
edition: cpp
operation:
  literalinclude: includes/example-cpp-insert-a-document.cpp
  language: cpp
replacement:
  insertMethod: "``insert_one``"
...
