.. _java-usage-bulkwrite:

=======================
Perform Bulk Operations
=======================

.. default-domain:: mongodb


The ``bulkWrite()`` method performs batch write operations against a
*single* collection. This method reduces the number of network round trips from
your application to your MongoDB instance which increases the performance of your
application. Since you only receive the success status after 
all the operations return, we recommend you use this if that meets the 
requirements of your use case.

You can specify one or more of the following write operations in
``bulkWrite()``:

- Insert a document
- Update a document
- Update multiple documents
- Delete a document
- Delete multiple documents
- Replace a document

The ``bulkWrite()`` method accepts the following parameters:

- A ``List`` of objects that implement ``WriteModel``: the classes that
  implement ``WriteModel`` correspond to the preceding write
  operations. For example, the ``InsertOneModel`` class wraps the
  ``insertOne()`` write method, which inserts a document. See the links
  to the API documentation at the end of this page for more information
  about each class.
  
- ``BulkWriteOptions``: *optional* object that specifies settings such as
  whether to ensure your MongoDB instance orders your write operations.

.. note::

   Retryable writes run on {+mdb-server+} versions 3.6 or later in bulk
   write operations unless they include one or more instances of 
   ``UpdateManyModel`` or ``DeleteManyModel``.

.. tip::

   By default, MongoDB executes operations in a bulk write in the
   specified order. During an ordered bulk write, if
   an error occurs during the processing of an operation, MongoDB returns
   without processing the remaining operations in the list.
  
   In contrast, when you set the ``ordered`` option to ``false``, MongoDB
   continues to process the remaining write operations in the list even in the
   event of an error. Unordered operations are usually faster since
   MongoDB can execute them in parallel, but only use an
   unordered bulk write if the order of your write operations is not
   important.

The ``bulkWrite()`` method returns a ``BulkWriteResult`` object that
contains information about the write operation results including the number
of documents inserted, modified, and deleted.

If one or more of your operations attempts to set a value that violates a
unique index on your collection, an exception is raised that should look
something like this: 

.. code-block:: sh
   :copyable: false

   The bulk write operation failed due to an error: Bulk write operation error on server <hostname>. Write errors: [BulkWriteError{index=0, code=11000, message='E11000 duplicate key error collection: ... }].

Similarly, if you attempt to perform a bulk write against a collection
that uses schema validation and one or more of your write operations
provide an unexpected format, you might encounter exceptions.

Example
-------

The following code sample performs an ordered bulk write operation on the
``movies`` collection in the ``sample_mflix`` database. The example call
to ``bulkWrite()`` includes examples of the ``InsertOneModel``,
``UpdateOneModel``, and ``DeleteOneModel``. 

.. include:: /includes/connect-guide-note.rst

.. literalinclude:: /includes/usage-examples/code-snippets/BulkWrite.java
   :language: java

The output of the preceding code resembles the following:

.. code-block:: none
   :copyable: false

   Result statistics:
   inserted: 3
   updated: 2
   deleted: 1

.. include:: /includes/legacy-redirect.rst

For additional information on the classes and methods mentioned on this
page, see the following resources:

- :manual:`Unique Index </core/index-unique>` Server Manual Entry
- :manual:`Schema Validation </core/schema-validation>` Server Manual Entry
- `bulkWrite() <{+api+}/apidocs/mongodb-driver-sync/com/mongodb/client/MongoCollection.html#bulkWrite(java.util.List,com.mongodb.client.model.BulkWriteOptions)>`__ API Documentation
- `BulkWriteOptions <{+api+}/apidocs/mongodb-driver-core/com/mongodb/client/model/BulkWriteOptions.html>`__ API Documentation
- `BulkWriteResult <{+api+}/apidocs/mongodb-driver-core/com/mongodb/bulk/BulkWriteResult.html>`__ API Documentation
- `InsertOneModel <{+api+}/apidocs/mongodb-driver-core/com/mongodb/client/model/InsertOneModel.html>`__ API Documentation
- `UpdateOneModel <{+api+}/apidocs/mongodb-driver-core/com/mongodb/client/model/UpdateOneModel.html>`__ API Documentation
- `UpdateManyModel <{+api+}/apidocs/mongodb-driver-core/com/mongodb/client/model/UpdateManyModel.html>`__ API Documentation
- `DeleteOneModel <{+api+}/apidocs/mongodb-driver-core/com/mongodb/client/model/DeleteOneModel.html>`__ API Documentation
- `DeleteManyModel <{+api+}/apidocs/mongodb-driver-core/com/mongodb/client/model/DeleteManyModel.html>`__ API Documentation
- `ReplaceOneModel <{+api+}/apidocs/mongodb-driver-core/com/mongodb/client/model/ReplaceOneModel.html>`__ API Documentation

