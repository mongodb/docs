title: Identify the user's roles.
stepnum: 1
ref: collect-roles
pre: |
  Use the :dbcommand:`usersInfo` command or :method:`db.getUser()` method to
  display user information. The :data:`~admin.system.users.roles` array
  specifies the user's roles.
action:
  - pre: |
      For example, to view roles for ``accountUser01`` on the
      ``accounts`` database, issue the following:
    code: |
      use accounts
      db.getUser("accountUser01")
    language: javascript
  - pre: |
      The :data:`~admin.system.users.roles` array displays all roles
      for ``accountUser01``:
    language: javascript
    code: |
      "roles" : [
         {
           "role" : "readWrite",
           "db" : "accounts"
         },
         {
           "role" : "siteRole01",
           "db" : "records"
          }
      ]
---
title: Identify the privileges granted by the roles.
ref: identify-privileges
stepnum: 2
pre: |
  For a given role, use the :dbcommand:`rolesInfo` command or
  :method:`db.getRole()` method, and include the ``showPrivileges`` parameter.
  The resulting role document displays both privileges granted directly and
  roles from which this role inherits privileges.
action:
  - pre: |
      For example, to view the privileges granted by ``siteRole01`` on the ``records`` database, use the
      following operation, which returns a document with a
      :data:`~admin.system.roles.privileges` array:
    language: javascript
    code: |
      use records
      db.getRole( "siteRole01", { showPrivileges: true } )
  - pre: |
      The returned document includes the :data:`~admin.system.roles.roles` and
      :data:`~admin.system.roles.privileges` arrays:
    language: javascript
    code: |
         "roles" : [
            {
                "role" : "read",
                "db" : "corporate"
            }
         ],
         "privileges" : [
            {
                "resource" : {
                    "db" : "records",
                    "collection" : ""
                },
                "actions" : [
                    "find",
                    "insert",
                    "update"
                ]
            }
         ]
post: |
  To view the privileges granted by the :authrole:`read` role, use
  :method:`db.getRole()` again with the appropriate parameters.
...
