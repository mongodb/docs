# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/query/where.txt:3
# 2fd1c32c97394d428769b18337079dd1
msgid "$where"
msgstr ""

#: ../source/reference/operator/query/where.txt:9
# 40203a4f947e43eb991e4eaaf067efd1
msgid "Use the :query:`$where` operator to pass either a string containing a JavaScript expression or a full JavaScript function to the query system. The :query:`$where` provides greater flexibility, but requires that the database processes the JavaScript expression or function for *each* document in the collection. Reference the document in the JavaScript expression or function using either ``this`` or ``obj`` ."
msgstr ""

#: ../source/reference/operator/query/where.txt:18
# c28b604a9ba043bfa024ac288c329314
msgid "Behavior"
msgstr ""

#: ../source/reference/operator/query/where.txt:21
# 56dda5ce98cb4647873dab92566cca6f
msgid "Restrictions"
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:1
# 1ef49ebb61de4094b56d2a1db52d3ce4
msgid "In MongoDB 2.4, :dbcommand:`map-reduce operations <mapReduce>`, the :dbcommand:`group` command, and :query:`$where` operator expressions **cannot** access certain global functions or properties, such as ``db``, that are available in the :program:`mongo` shell."
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:6
# e7b3d69ffd4e418481059ef31281ff8a
msgid "When upgrading to MongoDB 2.4, you will need to refactor your code if your :dbcommand:`map-reduce operations <mapReduce>`, :dbcommand:`group` commands, or :query:`$where` operator expressions include any global shell functions or properties that are no longer available, such as ``db``."
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:12
# 9b313ef0cb694394983c5d1a775be036
msgid "The following JavaScript functions and properties **are available** to :dbcommand:`map-reduce operations <mapReduce>`, the :dbcommand:`group` command, and :query:`$where` operator expressions in MongoDB 2.4:"
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:19
# f99806bb9b5742e19e83cf6531d28b21
msgid "Available Properties"
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:20
# 93b1f914cd184eb89e2a9354a3ab4a8a
msgid "Available Functions"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 6a1b9ce3cac54872a64e3be3033ec7e9
msgid "``args``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 9ad192adb7bc44a3a3e569b9fc40e1e2
msgid "``MaxKey``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 401d62411012446489e17d69f3dde411
msgid "``MinKey``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 2bdae385b5ac49a083bcc0db2b286241
msgid "``assert()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 2e3966ad0f50458bbdd2fdbe5ba2efa2
msgid "``BinData()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# d5f63326adb945e88d0974f255fa9e47
msgid "``DBPointer()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# f70363c987154732b899ca0e01c01568
msgid "``DBRef()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 3898fa762c1a4afd95d2b8e4d26cd072
msgid "``doassert()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 243fa3b7730f4bec80fa77f84a064480
msgid "``emit()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 6c43daaab3864a62bfc2610fff44cbba
msgid "``gc()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 2b7b9bf041364e7d9f81d45cc9b5949d
msgid "``HexData()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 9bfd00dc02af4cb2bf91cc81e608d68d
msgid "``hex_md5()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# d2303c3420e94c8685e683c983cc9a2a
msgid "``isNumber()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# a0bbdc72e119437fa8bb33d6d60ca1c3
msgid "``isObject()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 292d290e1e0b41058c8d95e4ca621777
msgid "``ISODate()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 5822a997bb624d30bb8924ba2341a513
msgid "``isString()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# b23228ae1d04482c8ce90b518cd0c845
msgid "``Map()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 60cb683e15654a9f95e4c89b181c1dad
msgid "``MD5()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 3a93152d9af740f7ae0e874578a91ee8
msgid "``NumberInt()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 3f12553b29064a0293ebe7cb1eeb9e18
msgid "``NumberLong()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# d86908aa3e42417bb813763fe054560a
msgid "``ObjectId()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# b761d060cb7f4f6a9529201fd4de5fe6
msgid "``print()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# f3c8578793c9420f8bbba18687727300
msgid "``printjson()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# f71a9c56833c4f8d9755749d7b3d9c33
msgid "``printjsononeline()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# b1b845b461074418971073e90741b43c
msgid "``sleep()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 2e5241d58317447788970f9deec9c7d7
msgid "``Timestamp()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# eaaf423fe26b4ace998388b473babf4c
msgid "``tojson()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 1edac456bf0a4599ba5c02673e5195e7
msgid "``tojsononeline()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# a884e01cf5634f51a01b2f186b36b913
msgid "``tojsonObject()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 7e12f58e051f41748e11d850d567fc6e
msgid "``UUID()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# a23afacbd7954a81a1cc190b02f837d7
msgid "``version()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:28
# 4e2c4f83906c4bfc9c6cabbe1687029c
msgid "``elemMatch``"
msgstr ""

#: ../source/reference/operator/query/where.txt:32
# 7675bc6bb89c4d3abd3d6018556c2aa5
msgid "Only apply the :query:`$where` query operator to top-level documents. The :query:`$where` query operator will not work inside a nested document, for instance, in an :query:`$elemMatch` query."
msgstr ""

#: ../source/reference/operator/query/where.txt:37
# d91785662f054e12a8d79b95ce1faa3f
msgid "Considerations"
msgstr ""

#: ../source/reference/operator/query/where.txt:39
# 0e3fc7e0caf84217b6b2af6701995f29
msgid "Do not use global variables."
msgstr ""

#: ../source/reference/operator/query/where.txt:41
# 5850d6166729442486e0b3848b05f811
msgid ":query:`$where` evaluates JavaScript and cannot take advantage of indexes. Therefore, query performance improves when you express your query using the standard MongoDB operators (e.g., :query:`$gt`, :query:`$in`)."
msgstr ""

#: ../source/reference/operator/query/where.txt:46
# 17577e03db8e4a0793b912130c0f8723
msgid "In general, you should use :query:`$where` only when you can't express your query using another operator. If you must use :query:`$where`, try to include at least one other standard query operator to filter the result set. Using :query:`$where` alone requires a table scan."
msgstr ""

#: ../source/reference/operator/query/where.txt:52
# 84e87e9014a14daebc0e44e5f9e976f7
msgid "Using normal non\\-:query:`$where` query statements provides the following performance advantages:"
msgstr ""

#: ../source/reference/operator/query/where.txt:55
# e243aacaa2f14f788ef7ecd6a9fdb9e7
msgid "MongoDB will evaluate non\\-:query:`$where` components of query before :query:`$where` statements. If the non\\-:query:`$where` statements match no documents, MongoDB will not perform any query evaluation using :query:`$where`."
msgstr ""

#: ../source/reference/operator/query/where.txt:60
# 8997177662304ff285c8561bbde68b6f
msgid "The non\\-:query:`$where` query statements may use an :term:`index`."
msgstr ""

#: ../source/reference/operator/query/where.txt:64
# 0aad512dbfb148359468a142db83d2dc
msgid "Examples"
msgstr ""

#: ../source/reference/operator/query/where.txt:66
# 1101dc71f4bc4746a83766aa10aa3556
msgid "Consider the following examples:"
msgstr ""

#: ../source/reference/operator/query/where.txt:76
# 519f3bcb6bc8431cb31f802c11cee888
msgid "Additionally, if the query consists only of the :query:`$where` operator, you can pass in just the JavaScript expression or JavaScript functions, as in the following examples:"
msgstr ""

#: ../source/reference/operator/query/where.txt:86
# 25e06c52f42641f985bff9c584bca1e5
msgid "You can include both the standard MongoDB operators and the :query:`$where` operator in your query, as in the following examples:"
msgstr ""

