.. _glossary:

========
Glossary
========

.. default-domain:: mongodb

.. glossary::
   :sorted: 

   alert
      Notification sent by |service| when your database operations or
      server usage reach thresholds that affect cluster
      performance. To learn what conditions you can set to trigger
      alerts, see :ref:`alert-conditions`.

      .. seealso::
      
         :ref:`respond-to-alerts`

   analytics node
      Specialized read-only node that can isolate queries which you do
      not want to affect your operational workload. Analytics nodes are
      useful for handling analytic data such as reporting queries
      executed by BI tools. You can host analytics nodes in dedicated
      geographic regions to optimize read performance and reduce
      latency.
      
   API
      Communication protocol facilitating interaction between the
      client and |service-fullname|. You can use the 
      {+atlas-admin-api+} to
      automate many of the tasks performed in the {+atlas-ui+}.
      
      .. seealso::
      
         - :ref:`atlas-api`
         - `{+atlas-admin-api+} Specification <https://mongodb.com/docs/atlas/reference/api-resources-spec>`__
      
   Approximate Nearest Neighbor (ANN) search 
      Computational technique used to quickly find points in a dataset
      that are close to a given query point. {+avs+} uses |ann| search
      to find vector embeddings in the data that are closest to the
      vector embeddings in the {+avs+} query without scanning every
      vector. 

   Atlas Search
      Fine-grained text indexing enabling advanced text search on your
      data without any additional required management. |fts| provides
      options for several kinds of :ref:`text analyzers
      <analyzers-ref>`, score-based results ranking, and a rich
      :ref:`query language <query-syntax-ref>`.
      
      .. seealso::
      
         :ref:`fts-top-ref`

   Atlas user
      Account used to access the |service| application. You can grant
      |service| users access to |service| organizations, projects, or
      both, with certain permissions defined by :ref:`user roles
      <user-roles>`. |service| users are different than
      :term:`database users <Database user>`. |service| users do not
      provide access to any MongoDB databases.
      
      .. seealso::
      
         :ref:`atlas_users`
      
   Atlas user role
      Set of permissions granted to an :term:`Atlas user`. You can grant
      permissions at the :term:`organization` or :term:`project` level.
      
      .. seealso::
      
         :ref:`user-roles`

   {+avs+}
      Feature in |service| that allows you to perform semantic search
      on vector embeddings by comparing query vectors with indexed
      vectors to find the closest match.

   auto-scaling      
      Configurable option to have your cluster automatically increase
      or decrease its cluster tier, storage capacity, or both in
      response to cluster usage.
      
      .. seealso::
      
         :ref:`cluster-autoscaling`
      
   backup      
      Copy of your data that encapsulates the state of your cluster at
      a given time. Backups provide a safety measure in the case of
      data loss events.
      
      |service| provides the following fully-managed methods for
      backups:
      
      - :term:`Cloud Backups <cloud backups>`
      - :term:`Legacy Backups <legacy backups>`
      
   cloud backups      
      Localized cluster :term:`backup` storage using the native
      :term:`snapshot` functionality of the cluster's cloud service
      provider.
      
      |service| supports {+Cloud-Backup+}s for clusters served on:
      
      - :ref:`Amazon Web Services (AWS) <amazon-aws>`
      - :ref:`Google Cloud Platform (GCP) <google-gcp>`
      - :ref:`Microsoft Azure <microsoft-azure>`
      
      .. seealso::
      
         :ref:`backup-cloud-provider`
      
   cluster
      Set of nodes comprising a MongoDB :term:`deployment`. In
      |service|, clusters can be :term:`replica sets <replica set>` or
      :term:`sharded deployments<sharded cluster>`.
      
   cluster class     
      *Configurable for M40+ clusters hosted on AWS.*
      
      Storage class of your cluster. Your selected class affects cluster
      storage performance and cluster costs. You can choose one of the
      following classes:
      
      - :guilabel:`Low CPU`
      - :guilabel:`General`
      - :guilabel:`Local NVMe SSD`
      
      .. seealso::
      
         - :ref:`create-cluster-storage`
         - :term:`NVMe storage`
      
   cluster tier
      Dictates the memory, storage, vCPUs, and |iops| specification for 
      each data-bearing server in the cluster. Cluster storage size and
      overall performance increase as the cluster tier increases.
      
      .. seealso::
      
         - :ref:`create-cluster-instance`
         - :ref:`sizing`

   cosine similarity 
      Metric that uses the angle between two vectors to determine the
      similarity between those vectors. Cosine similarity is sensitive
      to vector orientation. You can use cosine similarity function when
      indexing your vector embeddings for {+avs+}. If the vectors are
      normalized to unit length, use :term:`dotProduct similarity`
      function instead.  
      
   custom role
      Custom set of MongoDB :term:`privilege actions <action>` and MongoDB
      :term:`roles <role>` that you can save and assign to
      :term:`database users <Database user>`. Create custom roles when
      |service|'s :ref:`built-in roles
      <atlas-user-privileges>` don't describe your desired set of
      privileges.
      
      .. seealso::
      
         :ref:`mongodb-roles`

   Data Explorer
      Tool within |service| to view and interact with cluster data.
      You can also use the Data Explorer to manage indexes and run
      aggregation pipelines to process your data.
      
      .. seealso::
      
         :ref:`atlas-ui`
      
   Data Federation
      MongoDB's solution for querying data stored in low-cost S3 
      buckets, |service| clusters, and |http| endpoints using the
      MongoDB Query Language. Analytics applications can use {+adf+} to
      make use of archived data for their data processing needs.
      
      .. seealso::
      
         :ref:`Atlas Data Federation <atlas-data-federation>`

   data ingestion pipeline
      Workflow for organizing and transforming data by using |rag| and
      storing it in a vector database such as |service|.

   dead letter queue
      A dead letter queue is a collection within an |service| 
      database that stores documents that throw errors during 
      ingestion. 

   {+dedicated-cluster+}
      Cluster category containing clusters of tier ``M10`` and greater.

      .. list-table::
         :widths: 20 80
         :header-rows: 1
 
         * - Tier
           - Recommended environments

         * - ``M10`` and ``M20``
           - 

             - Development
             - Low-traffic production

         * - ``M30`` and greater
           - Production

   dense vectors 
      Numeric representation of data where most or all of the dimensions
      contain non-zero values. {+avs+} uses dense vectors, which are
      packed with more data, to capture more complex relationships. 

   deployment
      A group of MongoDB servers containing your data.
      |service|-managed {+database-deployments+} are {+clusters+}
      (:term:`replica sets <replica set>` or
      :term:`sharded clusters <sharded cluster>`).
      
   dimensions 
      Number of components or elements that make up the features or
      attributes of data in multi-dimensional space. {+avs+} supports up
      to ``4096`` dimensions at index-time and query-time.

   dotProduct similarity
      Measures similarity between two vectors in multi-dimensional
      space and returns a scalar value, which is positive when the
      vectors point in roughly the same direction, negative when the
      vectors point in opposite direction, and zero when the vectors
      have no similarity. {+avs+} supports using ``dotproduct``
      similarity function when searching for nearest neighbors. We
      recommend this similarity function instead of cosine similarity if
      the vectors are normalized to unit length. 

   electable node
      Node which is eligible to become the :term:`primary` member of
      your :term:`replica set`. |service| prioritizes nodes in the
      :term:`Highest Priority region` for primary eligibility during
      elections. To ensure reliable elections, the total number of
      electable nodes across an entire region must be 3, 5, or 7.
      
   embedding 
      Representation of data such as text, images, audio, video,
      and so on as an array of numbers, which can be interpreted as
      coordinates in multi-dimensional space. |service| supports storing
      embeddings in an |service| {+cluster+} and {+avs+} supports indexing
      and querying vector embeddings of up to ``4096`` dimensions. 

   encryption key
      Random string of bits generated specifically to encrypt and
      decrypt data.
      
      |service| :authrole:`Project Owners <Project Owner>` can
      configure an additional layer of encryption on their data in
      addition to the default :ref:`encryption at rest
      <security-kms-encryption>` that |service| provides. Project
      owners can use their |service|-compatible customer key management
      provider with the MongoDB :manual:`encrypted storage engine
      </core/security-encryption-at-rest>`.
      
      |service| supports the following customer key management providers
      when configuring Encryption at Rest:
      
      - :ref:`Amazon Web Services Key Management Service <security-aws-kms>`
      - :ref:`Azure Key Vault <security-azure-kms>`
      - :ref:`Google Cloud Platform Key Management Service <security-gcp-kms>`
      
      .. seealso::
      
         :ref:`security-kms-encryption`
      
   euclidean similarity 
      Formula to calculate the similarity by using the distance between
      two vectors in multi-dimensional space. Euclidean distance is
      sensitive to the magnitude of the vectors. {+avs+} supports using
      ``euclidean`` similarity function for indexing vectors and when
      searching for nearest neighbors. 

   Free Tier
      Free-to-use cluster tier that provides a small-scale development
      environment to host your data. {+Free-clusters+} never expire,
      and provide access to a :ref:`subset <atlas-free-tier>` of Atlas
      features and functionality. {+Free-clusters+} might also be
      referred to by their instance size, ``M0``.
      
      .. seealso::
      
         - :ref:`atlas-getting-started`
         - :ref:`atlas-free-tier`
      
   Global Cluster
      Clusters with defined geographic zones to support location-aware
      read and write operations for globally distributed application
      instances and clients. You can enable global sharding on clusters
      of tier ``M30`` and greater.
      
      .. seealso::
      
         - :ref:`global-clusters`
         - :ref:`create-new-global-write-cluster`
      
   global write zone
      Geographic zone representing a subset of your global cluster
      distribution. Each :term:`Global Cluster` supports up to 9
      distinct global write zones. Each zone consists of one
      :term:`Highest Priority region` and one or more
      :term:`electable <electable node>`,
      :term:`read-only <read-only node>`, or
      :term:`analytics <analytics node>` regions.

      The available geographic regions depend on the selected cloud
      service provider.
      
   group
      See :term:`project`.
      
   group ID
      See :term:`project ID`.
      
   |hnsw| graphs
      Algorithm for performing efficient nearest neighbor search in
      multi-dimensional space. {+avs+} performs |ann| search with
      |hnsw|.

   Highest Priority region
      Region in a :term:`multi-region cluster` which |service|
      prioritizes for :term:`primary` eligibility during elections.
      
      .. seealso::
      
         :ref:`create-cluster-multi-region`
      
   hybrid search 
      Method of combining different search methods, such as a full-text
      and a semantic search, to take advantage of their respective
      strengths. The results are combined by using a technique such as
      Reciprocal Rank Fusion (RRF).

   Impact
      Estimated performance improvement of an index that |pa| suggests.
      
      .. seealso::
      
         :ref:`pa-index-ranking`
      
   interface endpoint
      |aws| |vpc| endpoint with a private IP address
      that sends traffic to the |service| private endpoint service over |aws| PrivateLink.
      
      .. seealso::
      
         :ref:`private-endpoint-concepts`

   IP access list
      List of |ipaddr| addresses and |cidr| blocks with access to {+clusters+}
      within an |service| :term:`project`. For client connections over the
      public Internet, |service| allows connections to a {+cluster+} only
      from entries in the corresponding project's IP access list.
      The access list may have up to 200 entries.

      |service| also allows client connections over nonpublic networking,
      such :ref:`network peering connections <vpc-peering>` or private
      endpoints. These types of connections work irrespective of the
      IP access list. To learn more, see :ref:`vpc-peering` and
      :ref:`private-endpoint-concepts`.

   K-nearest neighbor search
      Given a set of points *P* with a defined similarity function *S*,
      for a query point *q*, finds the set of *k* points in *P* with the
      best values of *S*(*p*, *q*). {+avs+} |enn| search returns the
      exact top *k* points and |ann| search returns *k* points that are
      similar to *q*, but not necessarily the *k* most similar to *q*. 

   LDAP
      Cross-platform protocol used to authenticate users and authorize
      them to access data on a cluster. You can use |service| to manage
      user authentication and authorization from all MongoDB clients
      using your own |ldap| server over |tls|. A single |ldaps|
      configuration applies to all clusters in an |service| project.
      
      .. seealso::
      
         :ref:`ldaps-authentication-authorization`

   legacy backups     
      Incremental :term:`backups <backup>` of your cluster taken by
      |service| that ensure that your backups are typically just a few
      seconds behind the operational system. You can restore your
      cluster to a state from a selected point in time within the last
      24 hours.
      
      .. include:: /includes/admonitions/deprecated-continuous-backup.rst
      
      .. seealso::
      
         :ref:`legacy-backup`

   link-token
      String that contains the information necessary to connect from
      |com| to |service| during a live migration from a |com| deployment
      to a cluster in |service|.

      When you are ready to live migrate data from a |com| deployment,
      you generate a link-token in |service| and then enter it in your
      |com| organization's settings. You use the same link-token to
      migrate each deployment in your |com| organization sequentially,
      one at a time. You can generate multiple link-tokens in |service|.
      Use one unique link-token for each |com| organization.


   Live Migration
      Process to seamlessly move an existing source replica set or
      sharded cluster to |service|. During the live migration process,
      |service| keeps the target cluster in sync with the remote source
      until you cut your applications over to the |service| cluster.
      |service| offers two modes of live migration:

      - Push live migration, known in the |service| user interface as
        :guilabel:`Live Migration from Ops Manager or Cloud Manager`,
        where |service| **pushes** a deployment from |com| to |service|.
      - Pull live migration, known in the |service| user interface as
        :guilabel:`General Live Migration`, where |service| **pulls**
        a deployment from a cloud or on-premise deployment to |service|.
      
      .. seealso::
      
         :ref:`live-import-replica`
      
   maintenance window
      Day and time of the week when |service| should start weekly
      maintenance on your cluster. You can set your maintenance window
      in your :ref:`Project Settings <project-settings>`.
      
      .. include:: /includes/fact-urgent-maintenance.rst
      
   MongoDB Charts
      Visualization tool for your |service| data. You can launch MongoDB
      Charts from your |service| cluster and view your data with the
      Charts application to begin visualizing your data.
      
      .. seealso::
      
         `MongoDB Charts <https://www.mongodb.com/docs/charts/>`__
      
   Database user
      Credentials used to authenticate a client to access a MongoDB
      {+database-deployment+}. You can assign :ref:`privileges
      <atlas-user-privileges>` to a database user to determine that
      user's access level to a {+database-deployment+}. Database users
      are different from :term:`Atlas users <Atlas user>`. Database
      users have access to MongoDB deployments, not the |service|
      application.
      
      .. seealso::
      
         :ref:`mongodb-users`
      
   Database user privileges
      Set of :term:`privilege actions <action>` or :term:`roles <role>`
      granted to a database user. You can assign database user
      privileges at the {+database-deployment+}, database, and
      collection level.

      .. seealso::
      
         :ref:`atlas-user-privileges`
      
   multi-region cluster
      |service| :term:`cluster` spanning multiple geographic regions.
      Multi-region clusters can increase availability and improve
      performance by routing application queries to the most appropriate
      geographic regions.
      
      Multi-region clusters must contain
      :term:`electable nodes <electable node>`.

      Multi-region clusters may contain
      :term:`read-only nodes <read-only node>` and
      :term:`analytics nodes <analytics node>`.
      
   namespace
      Combination of the database name and the collection name in the 
      ``database.collection`` format.
   
   Namespace Insights
      |service| tool that monitors collection-level 
      :manual:`query latency </reference/operator/aggregation/collStats/#latencystats-document>`. You can view query latency metrics and 
      statistics for certain hosts and operation types. Manage pinned 
      namespaces and choose up to five namespaces to show in the 
      corresponding query latency charts.
      
      .. seealso::
      
         :ref:`namespace-insights`
   
   network peering connection
      Process by which two Internet networks connect and exchange
      traffic. You can directly peer your |vpc| with the |service|
      |vpc| created for your MongoDB clusters. Using network peering,
      your application servers can directly connect to |service| while
      remaining isolated from public networks.
      
      .. seealso::
      
         :ref:`vpc-peering`
      
   NVMe storage
      *Available for M40+ clusters hosted on AWS*
      
      For applications hosted on |aws| which require low-latency and
      high-throughput IO, you can use the NVMe :term:`cluster class`.
      The NVMe cluster class leverages a unique data protocol to
      greatly improve data access speeds.
      
      NVMe clusters use a :manual:`hidden secondary node
      </core/replica-set-hidden-member/>` consisting of a provisioned
      volume with high throughput and |iops| to facilitate backup.
      
      .. seealso::
      
         :ref:`create-cluster-storage`

   operational node
      Any :term:`electable node` or a :term:`read-only node` in your |service| {+cluster+}.

   organization
      Logical grouping of |service| :term:`projects <project>`. You can
      leverage an organization to manage billing, users, and security
      settings for the projects it contains.
      
      .. include:: /includes/list-organization-hierarchy.rst
      
      .. seealso::
      
         :ref:`organizations`
      
   organization ID
      Unique 24-digit hexadecimal string used to identify your
      |service| :term:`organization`. The :oas-atlas-op:`Return All 
      Organizations </returnAllOrganizations>` endpoint returns the ID 
      of all organizations that the authenticated user executing the 
      |api| call can access.

   Performance Advisor
      |service| tool that monitors slow queries executed on your
      cluster and suggests indexes to improve query performance. Each
      index that the Performance Advisor suggests include an
      :term:`Impact` score indicating the potential performance
      improvement that index would bring.
      
      .. seealso::
      
         :ref:`performance-advisor`

   primary
      In a :term:`replica set`, the primary is the member that receives
      all write operations. In
      :ref:`multi-region clusters <create-cluster-multi-region>`,
      |service| prioritizes nodes in the :term:`Highest Priority region` 
      for primary eligibility during elections.

   project
      Logical grouping of :term:`{+database-deployments+}
      <deployment>`. You can have multiple {+database-deployments+}
      within a single project and multiple projects within a single
      :term:`organization`.
      
      .. note::
      
         Project is synonymous with :term:`group`.

   project ID
      Unique 24-digit hexadecimal string used to identify your
      |service| :term:`project`. The :oas-atlas-op:`Get All Projects 
      </listProjects>` |api| endpoint returns the ID of all 
      projects that the authenticated user executing the API call can 
      access.
      
      .. note::
      
         Project ID is synonymous with group ID.
      
   quantization 
      Method of compressing the value of individual dimensions in a
      vector into a smaller range to reduce resource consumption and
      improve speed. {+avs+} supports indexing and querying quantized
      vectors. 

   Query Profiler
      |service| tool that diagnoses and monitors performance
      issues in your cluster. The Query Profiler can expose long-running
      queries and their performance statistics. You can filter the data
      returned by the Query Profiler to hone in on specific namespaces
      and operation types.
      
      .. seealso::
      
         :ref:`query-profiler`
      
   read-only node
      Replica set in a dedicated geographic region that supplements your
      :term:`electable node` regions. You can use read-only nodes to
      localize data where it is most frequently read to improve
      performance.
      
   Real-Time Performance Panel
      |service| monitoring service that displays current network
      traffic, database operations on your clusters, and hardware
      statistics about your host machines. Use the |rtpp| to visually
      evaluate query execution times, monitor network activity, and
      discover potential replication lag on secondary members of
      replica sets.
      
      .. seealso::
      
         :ref:`real-time-metrics-status-tab`

   recall 
      Measures the fraction of true nearest neighbors that were returned
      by an |ann| search. This measure reflects how close the algorithm
      approximates the results of |enn| search. The notation *Recall@k*
      refers to the measurement of how many of the true nearest
      neighbors were present in the top *k* results returned by {+avs+}. 

   replica set
      Group of MongoDB servers that maintain the same data set. Replica
      sets provide redundancy, high availability, and are the basis for
      all production deployments.
      
      .. seealso::
      
         :manual:`Replication </replication>`
      
   rolling restart
      Process that restarts all nodes in the cluster in sequence. To
      maintain cluster availability, |service| restarts one node at a
      time starting with a :term:`secondary <secondary>` node.
      |service| always maintains a primary node until the rolling
      restart completes.

   semantic search 
      Search for values that have a similar meaning to query. Semantic
      search captures the natural relationship between words or phrases
      even when there is no lexical overlap. Semantic search and vector
      search are often used interchangeably. {+avs+} supports semantic
      search on vector data stored in |service| {+clusters+}. 

   sharded cluster
      Set of nodes comprising a :term:`sharded <sharding>` MongoDB
      deployment. A sharded cluster consists of config servers, shards,
      and one or more |mongos| routing processes.
      
      .. seealso::
      
         :manual:`Sharded Cluster Components </core/sharded-cluster-components/>`
      
   shared cluster
      Cluster category containing ``M0`` (:term:`Free Tier`), ``M2``,
      and ``M5`` tier clusters. Shared clusters are generally used for
      development and small production workloads.
      
      .. seealso::
      
         :ref:`atlas-free-tier`
      
   similarity function 
      Measures the similarity between two vectors. {+avs+} supports
      ``euclidean``, ``cosine``, and ``dotProduct`` similarity functions.

   snapshot
      :term:`Backup <backup>` of your data captured at a specific
      interval and stored in a
      :ref:`backup data center <continuous-snapshot-storage-location>`.
      The :ref:`Snapshot Schedule <retention-policy>` determines the
      interval for taking snapshots and how long to store them.
      
      .. seealso::
      
         :doc:`/backup-restore-cluster`
      
   team
      Group of :term:`Atlas users <Atlas user>` in the same organization. You can use teams to grant access to
      the same group of Atlas users across multiple
      :term:`projects <project>`. All users in the team share the same
      project access.
      
      .. note::
      
         |service| users can belong to multiple teams.
      
      .. seealso::
      
         - :ref:`manage-teams`
         - :ref:`atlas_users`

   topology
      State of a deployment of MongoDB instances, which includes the following
      details:

      - Type of deployment (standalone, replica set, or sharded cluster)
      - Availability of servers
      - Role of each server (:term:`primary`, :term:`secondary`,
        config server, or :binary:`~bin.mongos`)

   vector database 
      System that stores vector embeddings and associated metadata, and
      enables nearest neighbor search on the stored vector embeddings.
      You can use |service| as your vector database and {+avs+} to
      perform vector search on the stored vector embeddings. You can use
      vector database to implement |rag|. 

   vector index 
      Data structure that efficiently processes nearest neighbor search
      queries. {+avs+} supports creating indexes of type ``vector`` to
      index fields for running :pipeline:`$vectorSearch` queries. 

   vector search
      Method of performing *k* nearest neighbor search over a set of
      vectors stored in a vector index. {+avs+} supports |ann| and |enn|
      search for *k* nearest neighbors. 
