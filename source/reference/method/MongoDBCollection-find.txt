===========================
MongoDB\\Collection::find()
===========================

.. meta::
   :description: Query documents with the MongoDB PHP Library, with various options like filters, projections, and sorting in PHP.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. phpmethod:: MongoDB\Collection::find()

   Finds documents matching the query.

   .. code-block:: php

      function find(
          array|object $filter = [],
          array $options = []
      ): MongoDB\Driver\Cursor

Parameters
----------

``$filter`` : array|object
  The filter criteria that specifies the documents to query.

``$options`` : array
  An array specifying the desired options.

  .. list-table::
     :header-rows: 1
     :widths: 20 20 80

     * - Name
       - Type
       - Description

     * - allowDiskUse
       - boolean
       - Enables writing to temporary files. When set to ``true``, queries can
         write data to the ``_tmp`` sub-directory in the ``dbPath`` directory.

     * - allowPartialResults
       - boolean
       - For queries against a sharded collection, returns partial results from
         the :program:`mongos` if some shards are unavailable instead of
         throwing an error.

     * - batchSize
       - integer
       - The maximum number of documents within each batch returned in a query result. By default, the ``find`` 
         command has an initial batch size of ``101`` documents and a maximum size of 16 mebibytes (MiB)
         for each subsequent batch. This option can enforce a smaller limit than 16 MiB, but not a larger
         one. If you set ``batchSize`` to a limit that results in batches larger than
         16 MiB, this option has no effect.

         A batchSize of ``0`` means that the cursor will be established, but no documents 
         will be returned in the first batch.

         Unlike the previous wire protocol version, a batchSize of ``1`` for the
         :dbcommand:`find` command does not close the cursor.

     * - codec
       - MongoDB\\Codec\\DocumentCodec
       - .. include:: /includes/extracts/collection-option-codec.rst

         .. versionadded:: 1.17

     * - collation
       - array|object
       - .. include:: /includes/extracts/collection-option-collation.rst

     * - comment
       - mixed
       - .. include:: /includes/extracts/common-option-comment.rst

         .. include:: /includes/extracts/common-option-comment-string-before-4.4.rst

     * - cursorType
       - integer
       - Indicates the type of cursor to use. ``cursorType`` supports the
         following values:

         - ``MongoDB\Operation\Find::NON_TAILABLE`` (*default*)
         - ``MongoDB\Operation\Find::TAILABLE``

     * - hint
       - string|array|object
       - .. include:: /includes/extracts/common-option-hint.rst

         .. versionadded:: 1.2

     * - let
       - array|object
       - .. include:: /includes/extracts/common-option-let.rst

         .. versionadded:: 1.13

     * - limit
       - integer
       - The maximum number of documents to return. If unspecified, then
         defaults to no limit. A limit of ``0`` is equivalent to setting no
         limit.

         A negative limit is similar to a positive limit but closes the cursor
         after returning a single batch of results. As such, with a negative
         limit, if the limited result set does not fit into a single batch, the
         number of documents received will be less than the specified limit. By
         passing a negative limit, the client indicates to the server that it
         will not ask for a subsequent batch by using getMore.

     * - max
       - array|object
       - The exclusive upper bound for a specific index.

         .. versionadded:: 1.2

     * - maxAwaitTimeMS
       - integer
       - Positive integer denoting the time limit in milliseconds for the server
         to block a getMore operation if no data is available. This option
         should only be used if cursorType is ``TAILABLE_AWAIT``.

         .. versionadded:: 1.2

     * - maxTimeMS
       - integer
       - .. include:: /includes/extracts/common-option-maxTimeMS.rst

     * - min
       - array|object
       - The inclusive lower bound for a specific index.

         .. versionadded:: 1.2

     * - noCursorTimeout
       - boolean
       - Prevents the server from timing out idle cursors after an inactivity
         period (10 minutes).

     * - projection
       - array|object
       - The :ref:`projection specification <projections>` to determine which
         fields to include in the returned documents. See
         :manual:`Project Fields to Return from Query </tutorial/project-fields-from-query-results>`
         and :manual:`Projection Operators </reference/operator/projection>` in
         the MongoDB manual.

     * - readConcern
       - :php:`MongoDB\Driver\ReadConcern <class.mongodb-driver-readconcern>`
       - .. include:: /includes/extracts/collection-option-readConcern.rst

         .. include:: /includes/extracts/common-option-readConcern-transaction.rst

     * - readPreference
       - :php:`MongoDB\Driver\ReadPreference <class.mongodb-driver-readpreference>`
       - .. include:: /includes/extracts/collection-option-readPreference.rst

     * - returnKey
       - boolean
       - If true, returns only the index keys in the resulting documents.

         .. versionadded:: 1.2

     * - session
       - :php:`MongoDB\Driver\Session <class.mongodb-driver-session>`
       - .. include:: /includes/extracts/common-option-session.rst

         .. versionadded:: 1.3

     * - showRecordId
       - boolean
       - Determines whether to return the record identifier for each document.
         If true, adds a field ``$recordId`` to the returned documents.

         .. versionadded:: 1.2

     * - skip
       - integer
       - Number of documents to skip. Defaults to ``0``.

     * - sort
       - array|object
       - The sort specification for the ordering of the results.

     * - typeMap
       - array
       - .. include:: /includes/extracts/collection-option-typeMap.rst

Return Values
-------------

A :php:`MongoDB\Driver\Cursor <class.mongodb-driver-cursor>` object.

Errors/Exceptions
-----------------

.. include:: /includes/extracts/error-unsupportedexception.rst
.. include:: /includes/extracts/error-invalidargumentexception.rst
.. include:: /includes/extracts/error-driver-runtimeexception.rst

Behavior
--------

.. include:: /includes/extracts/note-bson-comparison.rst

Examples
--------

The following example finds restaurants based on the ``cuisine`` and ``borough``
fields and uses a :manual:`projection
</tutorial/project-fields-from-query-results>` to limit the fields that are
returned. It also limits the results to 5 documents.

.. code-block:: php

   <?php

   $collection = (new MongoDB\Client)->test->restaurants;

   $cursor = $collection->find(
       [
           'cuisine' => 'Italian',
           'borough' => 'Manhattan',
       ],
       [
           'limit' => 5,
           'projection' => [
               'name' => 1,
               'borough' => 1,
               'cuisine' => 1,
           ],
       ]
   );

   foreach ($cursor as $restaurant) {
      var_dump($restaurant);
   };

The output would then resemble:

.. code-block:: none

   object(MongoDB\Model\BSONDocument)#10 (1) {
     ["storage":"ArrayObject":private]=>
     array(4) {
       ["_id"]=>
       object(MongoDB\BSON\ObjectId)#8 (1) {
         ["oid"]=>
         string(24) "576023c6b02fa9281da3f983"
       }
       ["borough"]=>
       string(9) "Manhattan"
       ["cuisine"]=>
       string(7) "Italian"
       ["name"]=>
       string(23) "Isle Of Capri Resturant"
     }
   }
   object(MongoDB\Model\BSONDocument)#13 (1) {
     ["storage":"ArrayObject":private]=>
     array(4) {
       ["_id"]=>
       object(MongoDB\BSON\ObjectId)#12 (1) {
         ["oid"]=>
         string(24) "576023c6b02fa9281da3f98d"
       }
       ["borough"]=>
       string(9) "Manhattan"
       ["cuisine"]=>
       string(7) "Italian"
       ["name"]=>
       string(18) "Marchis Restaurant"
     }
   }
   object(MongoDB\Model\BSONDocument)#8 (1) {
     ["storage":"ArrayObject":private]=>
     array(4) {
       ["_id"]=>
       object(MongoDB\BSON\ObjectId)#10 (1) {
         ["oid"]=>
         string(24) "576023c6b02fa9281da3f99b"
       }
       ["borough"]=>
       string(9) "Manhattan"
       ["cuisine"]=>
       string(7) "Italian"
       ["name"]=>
       string(19) "Forlinis Restaurant"
     }
   }
   object(MongoDB\Model\BSONDocument)#12 (1) {
     ["storage":"ArrayObject":private]=>
     array(4) {
       ["_id"]=>
       object(MongoDB\BSON\ObjectId)#13 (1) {
         ["oid"]=>
         string(24) "576023c6b02fa9281da3f9a8"
       }
       ["borough"]=>
       string(9) "Manhattan"
       ["cuisine"]=>
       string(7) "Italian"
       ["name"]=>
       string(22) "Angelo Of Mulberry St."
     }
   }
   object(MongoDB\Model\BSONDocument)#10 (1) {
     ["storage":"ArrayObject":private]=>
     array(4) {
       ["_id"]=>
       object(MongoDB\BSON\ObjectId)#8 (1) {
         ["oid"]=>
         string(24) "576023c6b02fa9281da3f9b4"
       }
       ["borough"]=>
       string(9) "Manhattan"
       ["cuisine"]=>
       string(7) "Italian"
       ["name"]=>
       string(16) "V & T Restaurant"
     }
   }

See Also
--------

- :phpmethod:`MongoDB\Collection::findOne()`
- :manual:`find </reference/command/find>` command reference in the MongoDB
  manual
