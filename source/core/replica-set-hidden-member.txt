.. index:: replica set members; hidden
.. _replica-set-hidden-configuration:
.. _replica-set-hidden-members:

==========================
Hidden Replica Set Members
==========================

.. default-domain:: mongodb

A hidden member maintains a copy of the :term:`primary's <primary>`
data set but is **invisible** to client applications. Hidden members
are good for workloads with different usage patterns from the other
members in the :term:`replica set`. Hidden members must always be
:ref:`priority 0 members <replica-set-secondary-only-members>` and
so **cannot become primary**. The :method:`db.isMaster()` method does not
display hidden members. Hidden members, however, **do vote** in
:ref:`elections <replica-set-elections>`.

In the following five-member replica set, all four secondary members
have copies of the primary's data set, but one of the secondary members
is hidden.

.. include:: /images/replica-set-hidden-member.rst

Behavior
--------

Read Operations
~~~~~~~~~~~~~~~

Clients will not distribute reads with the appropriate :doc:`read
preference </core/read-preference>` to hidden members. As a result, these
members receive no traffic other than basic replication. Use hidden
members for dedicated tasks such as reporting and
backups. :doc:`Delayed members </core/replica-set-delayed-member>`
should be hidden.

In a sharded cluster, :program:`mongos` do not interact with hidden
members.

Voting
~~~~~~

Hidden members *do* vote in replica set elections. If you stop a
hidden member, ensure that the set has an active majority or the
:term:`primary` will step down.

For the purposes of backups, you can avoid stopping a hidden member
with the :method:`db.fsyncLock()` and :method:`db.fsyncUnlock()`
operations to flush all writes and lock the :program:`mongod` instance
for the duration of the backup operation.

Further Reading
---------------

For more information about backing up MongoDB databases,
see :doc:`/core/backups`. To configure a hidden member, see
:doc:`/tutorial/configure-a-hidden-replica-set-member`.
