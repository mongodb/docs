:orphan:

=============================
Machine Configuration Options
=============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: twocols

.. include:: /includes/fact-groups-projects-synonyms.rst

The ``machineConfigOptions`` resource displays the cloud service providers you
have integrated with |mms| and provides endpoints to retrieve the available
configuration options for a provider.

For more information on |mms| integration with cloud service providers, see
:doc:`/tutorial/nav/add-servers`.

.. include:: /includes/api/base-api-uri.rst

Endpoints
---------

.. _get-endpoints-service-providers-machine-config-options:

Get Endpoints for Available Cloud Service Providers
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This returns the endpoints of the service providers for which you can retrieve
configuration options.

.. code-block:: http

   GET /groups/{PROJECT-ID}/machineConfigOptions

Get Machine Configurations Options for a Service Provider
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

``PROVIDER-NAME`` is a service provider. See
:ref:`get-endpoints-service-providers-machine-config-options`.

.. code-block:: http

   GET /groups/{PROJECT-ID}/machineConfigOptions/PROVIDER-NAME

Get Machine Configurations Options for a Service Provider and Region
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

``PROVIDER-NAME`` is a service provider. See
:ref:`get-endpoints-service-providers-machine-config-options`. ``REGION`` is a
region value for that service provider.

.. code-block:: http

   GET /groups/{PROJECT-ID}/machineConfigOptions/PROVIDER-NAME?region=REGION-NAME

Sample Entity
-------------

When you retrieve the configuration options for a service provider, the
returned entity will include **all available configuration options** for your
integration with that provider. For example, for AWS, the ``hvmInstanceTypes``
array contains an object for every available AWS instance type.

The following is an example entity for an AWS machine configuration.

.. code-block:: javascript

   {
     "availabilityZoneNames": [
       "AWS_US_EAST_1A",
       ...
     ],
     "availableRegionNames": [
       "AWS_US_EAST_1",
       ...
     ],
     "fileSystemTypeNames": [
       "XFS",
       ...
     ],
     "hvmInstanceTypes": [
       {
         "canEncryptVolumes": false,
         "canOptimizeVolumes": false,
         "ec2ClassicCompatible": false,
         "memoryGB": 2.0,
         "name": "AWS_T2_SMALL",
         "networkPerformance": "Low to Moderate",
         "numPhysicalDisks": 0,
         "physicalDiskSSD": false,
         "sizePerPhysicalDiskGB": 0,
         "vCPUs": 1
       },
       ...
     ],
     "machineImages": [
       {
         "imageId": "ami-60b6c60a",
         "osName": "AMAZON_LINUX",
         "osVersion": "2015.09.1",
         "virtualizationTypeName": "HVM"
       },
       ...
     ],
     "maxIOPS" : 20000,
     "maxRootVolSizeGB" : 2047,
     "minIOPS" : 100,
     "minRootVolSizeGB" : 8,
     "possibleVolumeNames": [
       "/dev/sdf",
       ...
     ],
     "pvInstanceTypes": [
       {
         "canEncryptVolumes": true,
         "canOptimizeVolumes": false,
         "ec2ClassicCompatible": true,
         "memoryGB": 3.75,
         "name": "AWS_M3_MEDIUM",
         "networkPerformance": "Moderate",
         "numPhysicalDisks": 1,
         "physicalDiskSSD": true,
         "sizePerPhysicalDiskGB": 4,
         "vCPUs": 1
       },
       ...
     ],
     "regionHasEC2Classic" : true,
     "securityGroups": [
       {
         "available": false,
         "name": "sales",
         "securityGroupId": "sg-abc2abc4"
       },
       ...
     ],
     "sshKeys": [
       {
         "id": "54c7a8bee4b0b5a9451be44e",
         "links" : [],
         "name": "myKey",
         "publicKey": "<ssh-key>"
       },
       ...
     ],
     "vpcs": [
       {
         "available": true,
         "cidrBlock": "10.0.0.0/16",
         "subnets": [
           {
             "availabilityZoneName": "AWS_US_EAST_1A",
             "available": true,
             "cidrBlock": "10.0.0.0/24",
             "subnetId": "subnet-ebd2d79f"
           }
         ],
         "vpcId": "vpc-035ebd66",
         "vpcName": ""
       },
       ...
     ],
     "links" : []
   }

Entity Fields
-------------

The following table describes the top-level fields returned when for an AWS
machine configuration. For fuller descriptions of the AWS options, please see
the `AWS Documentation <http://aws.amazon.com/documentation/>`_.

.. list-table::
   :widths: 10 10 80
   :header-rows: 1
   :stub-columns: 1

   * - Name
     - Type
     - Description

   * - availabilityZoneNames
     - string array
     - Lists AWS availability zones.

   * - availableRegionNames
     - string array
     - Lists regions within AWS availability zones.

   * - fileSystemTypeNames
     - string array
     - The file system used for storing files on disk.

   * - hvmInstanceTypes
     - object array
     - The available hardware virtual machines (HVM).

   * - machineImages
     - object array
     - The available Amazon machine images (AMI).

   * - maxIOPS
     - number
     - The maximum input/output operations per second.

   * - maxRootVolSizeGB
     - number
     - Defines the upper limit of the root volume size.

   * - minIOPS
     - number
     - The minimum input/output operations per second.

   * - minRootVolSizeGB
     - number
     - Defines the lower limit of the root volume size.

   * - possibleVolumeNames
     - string array
     - Available devices names for attached storage.

   * - pvInstanceTypes
     - object array
     - The available paravirtual (PV) instances.

   * - ``regionHasEC2Classic``
     - Boolean
     - Indicates whether the region supports the EC2-Classic platform.

   * - securityGroups
     - object array
     - The available AWS security groups, used for setting firewall rules.

   * - sshKeys
     - object array
     - The public keys available to provision new AWS instances.

   * - vpcs
     - object array
     - The available AWS virtual private clouds.

Links
-----

.. list-table::
   :header-rows: 1

   * - Relation
     - Description

   * - self
     - Me.

   * - ``http://mms.mongodb.com/group``
     - The project the machine configuration options belongs to.

   * - ``http://mms.mongodb.com/machineConfigOptions``
     - The cloud service provider.

Examples
--------

Get Endpoints for Available Cloud Service Providers
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Request
```````

.. code-block:: sh

   curl -u "username:apiKey" --digest -i "https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/machineConfigOptions"

Response
````````

Response Header
~~~~~~~~~~~~~~~

.. include:: /includes/api/api-headers/401.rst

.. include:: /includes/api/api-headers/200.rst

Response Body
~~~~~~~~~~~~~

.. code-block:: json

   {
     "links" : [
       ...,
       {
         "href" : "https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/machineConfigOptions/AWS",
         "rel" : "http://mms.mongodb.com/machineConfigOptions"
       }
     ]
   }

Get Machine Configurations Options for a Given Provider
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following retrieves the machine configuration options for Amazon Web Services.

Request
```````

.. code-block:: sh

   curl -u "username:apiKey" --digest -i "https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/machineConfigOptions/AWS"

Response
````````

Response Header
~~~~~~~~~~~~~~~

.. include:: /includes/api/api-headers/401.rst

.. include:: /includes/api/api-headers/200.rst

Response Body
~~~~~~~~~~~~~

.. code-block:: json

   {
     "availabilityZoneNames" : [
       "AWS_US_EAST_1A",
       "AWS_US_EAST_1B",
       ...
     ],
     "availableRegionNames" : [
       "AWS_US_EAST_1",
       "AWS_US_WEST_1",
       ...
     ],
     "fileSystemTypeNames" : [
       "XFS",
       "EXT4",
       "NTFS"
     ],
     "hvmInstanceTypes" : [
       {
         "canEncryptVolumes" : false,
         "canOptimizeVolumes" : false,
         "ec2ClassicCompatible" : false,
         "memoryGB" : 2.0,
         "name" : "AWS_T2_SMALL",
         "networkPerformance" : "Low to Moderate",
         "numPhysicalDisks" : 0,
         "physicalDiskSSD" : false,
         "sizePerPhysicalDiskGB" : 0,
         "vCPUs" : 1
       },
       ...
     ],
     "machineImages" : [
       {
         "imageId" : "ami-60a6b60c",
         "osName" : "AMAZON_LINUX",
         "osVersion" : "2015.09.1",
         "virtualizationTypeName" : "HVM"
       },
       ...
     ],
     "maxIOPS" : 20000,
     "maxRootVolSizeGB" : 2047,
     "minIOPS" : 100,
     "minRootVolSizeGB" : 8,
     "possibleVolumeNames" : [
       "/dev/sdf",
       "/dev/sdg",
       ...
     ],
     "pvInstanceTypes" : [
       {
         "canEncryptVolumes" : true,
         "canOptimizeVolumes" : false,
         "ec2ClassicCompatible" : true,
         "memoryGB" : 3.75,
         "name" : "AWS_M3_MEDIUM",
         "networkPerformance" : "Moderate",
         "numPhysicalDisks" : 1,
         "physicalDiskSSD" : true,
         "sizePerPhysicalDiskGB" : 4,
         "vCPUs" : 1
       },
       ...
     ],
     "regionHasEC2Classic" : true,
     "securityGroups" : [
       {
         "available" : true,
         "name" : "mms",
         "securityGroupId" : "sg-abc2abc4"
       },
       ...
     ],
     "sshKeys" : [
       {
         "id" : "54c7a8bee4b0b5a9451be44e",
         "links" : [],
         "name" : "myKey",
         "publicKey" : "<ssh-key>"
       },
       ...
     ],
     "vpcs" : [
       {
         "available" : false,
         "cidrBlock" : "10.93.0.0/16",
         "subnets" : [
           {
             "availabilityZoneName" : "AWS_US_EAST_1A",
             "available" : true,
             "cidrBlock" : "10.93.5.0/24",
             "subnetId" : "subnet-78953b03"
           }
         ],
         "vpcId" : "vpc-63abc123",
         "vpcName" : ""
       },
       ...
     ],
     "links" : []
   }

Get Machine Configurations Options for a Given Provider and Region
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following retrieves the machine configuration options for Amazon Web Services for the ``AWS_US_WEST_1`` region.

Request
```````

.. code-block:: sh

   curl -u "username:apiKey" --digest -i "https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/machineConfigOptions/AWS?region=AWS_US_WEST_1"

Response
````````

The following example shows only the top-level fields of the return document.

Response Header
~~~~~~~~~~~~~~~

.. include:: /includes/api/api-headers/401.rst

.. include:: /includes/api/api-headers/200.rst

Response Body
~~~~~~~~~~~~~

.. code-block:: json

   {
     "availabilityZoneNames" : [ "AWS_US_WEST_1A", "AWS_US_WEST_1C" ],
     "availableRegionNames" : [ "AWS_US_EAST_1", "AWS_US_WEST_1", ... ],
     "fileSystemTypeNames" : [ "XFS", "EXT4", "NTFS" ],
     "hvmInstanceTypes" : [ ... ],
     "machineImages" : [ ... ],
     "maxIOPS" : 20000,
     "maxRootVolSizeGB" : 2047,
     "minIOPS" : 100,
     "minRootVolSizeGB" : 8,
     "possibleVolumeNames" : [ "/dev/sdf", "/dev/sdg", ... ],
     "pvInstanceTypes" : [ ... ],
     "regionHasEC2Classic" : false,
     "securityGroups" : [ ... ],
     "sshKeys" : [ ... ],
     "vpcs" : [ ... ],
     "links" : []
  }
