.. _atlas-operator:

==============
Atlas Operator
==============

.. meta::
   :description: Manage Atlas resources within Kubernetes using Atlas Kubernetes Operator, which integrates data services and supports advanced features like X509 authentication.

What is |ak8so|?
----------------

|ak8so| is a new service that integrates |service| resources with your
|k8s| {+cluster+}. You can now deploy and manage the lifecycle of your 
cloud-native applications that need data services in a single control 
plane with secure enterprise platform integration.

What Can You Do?
----------------

You can use |ak8so| to manage resources in |service| without leaving
|k8s|. You deploy |ak8so| into |k8s| {+clusters+}. |ak8so| 
manages resources in |service| based on |k8s| custom resources. It 
ensures that the state of the projects, {+database-deployments+}, and 
database users in |service| matches the 
configurations in each custom resource that you create in your |k8s| 
{+cluster+}.

|ak8so| supports many advanced features within the 
custom resources, such as X509 authentication, private endpoints in 
Azure and AWS, and advanced multi-cloud and multi-region clusters.

.. _deletion-protection:

New Default: Deletion Protection in |ak8so| 2.0
-----------------------------------------------------------------

With |ak8so| 2.0, custom resources you delete in |k8s| are no longer deleted in 
|service|. Instead, |ak8so| simply stops managing those resources. 

For example, if you delete ``AtlasProject`` custom resource
in |k8s|, |ak8so| no longer automatically deletes the corresponding 
project from |service|, preventing accidental or unexpected deletions. 
This applies to all objects managed using custom resources. 

You can revert this behavior to the default used prior to |ak8so| 2.0 
for your entire deployment or for specific custom resources or 
subobjects. 

Use the following tables to determine 
the correct behavior for your deployment:

.. list-table::
   :widths: 50 50
   :header-rows: 1

   * - Deletion Protection
     - No Deletion Protection

   * - New default as of |ak8so| 2.0
     - Default prior to |ak8so| 2.0

   * - If you delete a custom resource or objects from a custom 
       resource,the corresponding objects remain in |service| but 
       |ak8so| no longer manages them. You can manage objects decoupled 
       from |ak8so| only from another interface, such as the 
       {+atlas-ui+}.
     - If you delete a custom resource or objects from a custom 
       resource, |ak8so| deletes the corresponding objects in 
       |service|, even objects deployed prior to using |ak8so|. Changes 
       to a custom resource overwrite changes in |service| made using 
       another interface, such as the {+atlas-ui+}.

Subobjects are objects that you define within another custom resource 
instead of their own dedicated custom resource, such as 
private endpoints, or IP access lists, and behave as follows:

.. list-table::
   :widths: 50 50
   :header-rows: 1

   * - Deletion Protection for Subobjects
     - No Deletion Protection for Subobjects

   * - New default as of |ak8so| 2.0
     - Default prior to |ak8so| 2.0

   * - If you delete a subobject from a custom resource, |ak8so| 
       deletes the corresponding subobject from |service| *only* if 
       that subobject existed in the custom resource during the last 
       reconciliation and matches exactly. 

       For example, if you delete a private endpoint from the
       ``AtlasProject`` custom resource, |ak8so| checks if it existed 
       in the custom resource during the last reconciliation and 
       matches exactly, meaning it wasn't created or changed by another 
       interface, such as the {+atlas-ui+}. If it doesn't match 
       exactly, |ak8so| does *not* reconcile the ``AtlasProject`` 
       custom resource. For this reason, we recommend against using the 
       {+atlas-ui+} to administer |ak8so| projects and deployments. 
       
       Alert subobjects are exceptions with their own sync controls.

     - If you delete a subobject from a custom resource, |ak8so| 
       deletes the corresponding subobject from |service| *and all 
       other subobjects of the same type*, even if they existed in 
       |service| prior to using |ak8so| or were created or changed by 
       another interface, such as the {+atlas-ui+}.

       For example, if you delete a private endpoint from the
       ``AtlasProject`` custom resource, |ak8so| overwrites |service| 
       with what you configured in the custom resource, including 
       overwriting any private endpoints you added using the 
       {+atlas-ui+}. For this reason, we recommend against using the 
       {+atlas-ui+} to administer |ak8so| projects and deployments.

       Alert subobjects are exceptions with their own sync controls.

.. _revert-deletion-protection:

Revert New Deletion Protection Default
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You can control the new deletion protection behavior using the 
``--object-deletion-protection`` flag or the 
``OBJECT_DELETION_PROTECTION`` environment 
variable in the |k8s| 
:github:`Deployment resource <mongodb/mongodb-atlas-kubernetes/blob/main/deploy/all-in-one.yaml#L4028>` that you applied when installing 
|ak8so|. 

This flag and environment variable all default to ``true``. 
Set to ``false`` to revert to the behavior prior to |ak8so| 2.1. 

You can also control which behavior to use for individual custom 
resources using the ``atlas-resource-policy`` annotations.
