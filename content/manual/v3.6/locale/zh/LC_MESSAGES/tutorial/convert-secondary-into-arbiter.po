#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/tutorial/convert-secondary-into-arbiter.txt:3
msgid "Convert a Secondary to an Arbiter"
msgstr ""

#: ../source/tutorial/convert-secondary-into-arbiter.txt:13
msgid ""
"If you have a :term:`secondary` in a :term:`replica set` that no longer "
"needs to hold data but that needs to remain in the set to ensure that the"
" set can :ref:`elect a primary <replica-set-elections>`, you may convert "
"the secondary to an :ref:`arbiter <replica-set-arbiters>` using either "
"procedure in this tutorial. Both procedures are operationally equivalent:"
msgstr ""

#: ../source/tutorial/convert-secondary-into-arbiter.txt:20
msgid ""
"You may operate the arbiter on the same port as the former secondary. In "
"this procedure, you must shut down the secondary and remove its data "
"before restarting and reconfiguring it as an arbiter."
msgstr ""

#: ../source/tutorial/convert-secondary-into-arbiter.txt:24
msgid ""
"For this procedure, see :ref:`replica-set-convert-secondary-to-arbiter-"
"same-port`."
msgstr ""

#: ../source/tutorial/convert-secondary-into-arbiter.txt:26
msgid ""
"Run the arbiter on a new port. In this procedure, you can reconfigure the"
" server as an arbiter before shutting down the instance running as a "
"secondary."
msgstr ""

#: ../source/tutorial/convert-secondary-into-arbiter.txt:30
msgid "For this procedure, see :ref:`replica-set-convert-secondary-to-arbiter`."
msgstr ""

#: ../source/includes/extracts/arbiters-and-pvs-with-reference.rst:2
msgid ""
"For the following MongoDB versions, ``pv1`` increases the likelihood of "
":writeconcern:`w:1 <\\<number\\>>` rollbacks compared to ``pv0`` for "
"replica sets with arbiters:"
msgstr ""

#: ../source/includes/extracts/arbiters-and-pvs-with-reference.rst:6
msgid "MongoDB 3.4.1"
msgstr ""

#: ../source/includes/extracts/arbiters-and-pvs-with-reference.rst:8
msgid "MongoDB 3.4.0"
msgstr ""

#: ../source/includes/extracts/arbiters-and-pvs-with-reference.rst:10
msgid "MongoDB 3.2.11 or earlier"
msgstr ""

#: ../source/includes/extracts/arbiters-and-pvs-with-reference.rst:12
msgid "See :doc:`/reference/replica-set-protocol-versions`."
msgstr ""

#: ../source/tutorial/convert-secondary-into-arbiter.txt:39
msgid "Convert Secondary to Arbiter and Reuse the Port Number"
msgstr ""

#: ../source/tutorial/convert-secondary-into-arbiter.txt:41
msgid ""
"If your application is connecting directly to the secondary, modify the "
"application so that MongoDB queries don't reach the secondary."
msgstr ""

#: ../source/tutorial/convert-secondary-into-arbiter.txt:45
#: ../source/tutorial/convert-secondary-into-arbiter.txt:157
msgid "Shut down the secondary."
msgstr ""

#: ../source/tutorial/convert-secondary-into-arbiter.txt:47
msgid ""
"Remove the :term:`secondary` from the :term:`replica set` by calling the "
":method:`rs.remove()` method. Perform this operation while connected to "
"the current :term:`primary` in the :binary:`~bin.mongo` shell:"
msgstr ""

#: ../source/tutorial/convert-secondary-into-arbiter.txt:55
msgid ""
"Verify that the replica set no longer includes the secondary by calling "
"the :method:`rs.conf()` method in the :binary:`~bin.mongo` shell:"
msgstr ""

#: ../source/tutorial/convert-secondary-into-arbiter.txt:62
#: ../source/tutorial/convert-secondary-into-arbiter.txt:173
msgid "Move the secondary's data directory to an archive folder. For example:"
msgstr ""

#: ../source/tutorial/convert-secondary-into-arbiter.txt:70
msgid ""
"Create a new, empty data directory to point to when restarting the "
":binary:`~bin.mongod` instance. You can reuse the previous name. For "
"example:"
msgstr ""

#: ../source/tutorial/convert-secondary-into-arbiter.txt:78
msgid ""
"Restart the :binary:`~bin.mongod` instance for the secondary, specifying "
"the port number, the empty data directory, and the replica set. You can "
"use the same port number you used before. Issue a command similar to the "
"following:"
msgstr ""

#: ../source/includes/warning-bind-ip-security-considerations.rst:3
msgid ""
"Before binding to a non-localhost (e.g. publicly accessible) IP address, "
"ensure you have secured your cluster from unauthorized access. For a "
"complete list of security recommendations, see :doc:`/administration"
"/security-checklist`. At minimum, consider :ref:`enabling authentication "
"<checklist-auth>` and :doc:`hardening network infrastructure </core"
"/security-network>`."
msgstr ""

#: ../source/tutorial/convert-secondary-into-arbiter.txt:89
msgid ""
"In the :binary:`~bin.mongo` shell convert the secondary to an arbiter "
"using the :method:`rs.addArb()` method:"
msgstr ""

#: ../source/tutorial/convert-secondary-into-arbiter.txt:96
msgid ""
"Verify the arbiter belongs to the replica set by calling the "
":method:`rs.conf()` method in the :binary:`~bin.mongo` shell."
msgstr ""

#: ../source/tutorial/convert-secondary-into-arbiter.txt:103
#: ../source/tutorial/convert-secondary-into-arbiter.txt:151
msgid "The arbiter member should include the following:"
msgstr ""

#: ../source/tutorial/convert-secondary-into-arbiter.txt:112
msgid "Convert Secondary to Arbiter Running on a New Port Number"
msgstr ""

#: ../source/tutorial/convert-secondary-into-arbiter.txt:114
msgid ""
"If your application is connecting directly to the secondary or has a "
"connection string referencing the secondary, modify the application so "
"that MongoDB queries don't reach the secondary."
msgstr ""

#: ../source/tutorial/convert-secondary-into-arbiter.txt:119
msgid ""
"Create a new, empty data directory to be used with the new port number. "
"For example:"
msgstr ""

#: ../source/tutorial/convert-secondary-into-arbiter.txt:126
msgid ""
"Start a new :binary:`~bin.mongod` instance on the new port number, "
"specifying the new data directory and the existing replica set. Issue a "
"command similar to the following:"
msgstr ""

#: ../source/tutorial/convert-secondary-into-arbiter.txt:136
msgid ""
"In the :binary:`~bin.mongo` shell connected to the current primary, "
"convert the new :binary:`~bin.mongod` instance to an arbiter using the "
":method:`rs.addArb()` method:"
msgstr ""

#: ../source/tutorial/convert-secondary-into-arbiter.txt:144
msgid ""
"Verify the arbiter has been added to the replica set by calling the "
":method:`rs.conf()` method in the :binary:`~bin.mongo` shell."
msgstr ""

#: ../source/tutorial/convert-secondary-into-arbiter.txt:159
msgid ""
"Remove the :term:`secondary` from the :term:`replica set` by calling the "
":method:`rs.remove()` method in the :binary:`~bin.mongo` shell:"
msgstr ""

#: ../source/tutorial/convert-secondary-into-arbiter.txt:166
msgid ""
"Verify that the replica set no longer includes the old secondary by "
"calling the :method:`rs.conf()` method in the :binary:`~bin.mongo` shell:"
msgstr ""

#~ msgid ""
#~ "Remove the :term:`secondary` from the "
#~ ":term:`replica set` by calling the "
#~ ":method:`rs.remove()` method. Perform this "
#~ "operation while connected to the current"
#~ " :term:`primary` in the :program:`mongo` "
#~ "shell:"
#~ msgstr ""

#~ msgid ""
#~ "Verify that the replica set no "
#~ "longer includes the secondary by calling"
#~ " the :method:`rs.conf()` method in the "
#~ ":program:`mongo` shell:"
#~ msgstr ""

#~ msgid "Optional"
#~ msgstr ""

#~ msgid ""
#~ "Create a new, empty data directory "
#~ "to point to when restarting the "
#~ ":program:`mongod` instance. You can reuse "
#~ "the previous name. For example:"
#~ msgstr ""

#~ msgid ""
#~ "Restart the :program:`mongod` instance for "
#~ "the secondary, specifying the port "
#~ "number, the empty data directory, and"
#~ " the replica set. You can use "
#~ "the same port number you used "
#~ "before. Issue a command similar to "
#~ "the following:"
#~ msgstr ""

#~ msgid ""
#~ "In the :program:`mongo` shell convert "
#~ "the secondary to an arbiter using "
#~ "the :method:`rs.addArb()` method:"
#~ msgstr ""

#~ msgid ""
#~ "Verify the arbiter belongs to the "
#~ "replica set by calling the "
#~ ":method:`rs.conf()` method in the "
#~ ":program:`mongo` shell."
#~ msgstr ""

#~ msgid ""
#~ "Start a new :program:`mongod` instance "
#~ "on the new port number, specifying "
#~ "the new data directory and the "
#~ "existing replica set. Issue a command"
#~ " similar to the following:"
#~ msgstr ""

#~ msgid ""
#~ "In the :program:`mongo` shell connected "
#~ "to the current primary, convert the "
#~ "new :program:`mongod` instance to an "
#~ "arbiter using the :method:`rs.addArb()` "
#~ "method:"
#~ msgstr ""

#~ msgid ""
#~ "Verify the arbiter has been added "
#~ "to the replica set by calling the"
#~ " :method:`rs.conf()` method in the "
#~ ":program:`mongo` shell."
#~ msgstr ""

#~ msgid ""
#~ "Remove the :term:`secondary` from the "
#~ ":term:`replica set` by calling the "
#~ ":method:`rs.remove()` method in the "
#~ ":program:`mongo` shell:"
#~ msgstr ""

#~ msgid ""
#~ "Verify that the replica set no "
#~ "longer includes the old secondary by "
#~ "calling the :method:`rs.conf()` method in "
#~ "the :program:`mongo` shell:"
#~ msgstr ""

#~ msgid "On this page"
#~ msgstr ""

