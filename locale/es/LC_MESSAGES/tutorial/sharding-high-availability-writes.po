# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# eaca39b67ed44a7e82006fcaf9afb5bf
#: ../source/tutorial/sharding-high-availability-writes.txt:3
msgid "Distributed Local Writes for Insert Only Workloads"
msgstr ""

# 28ad4ddb899948c5bbc5456241d39b98
#: ../source/tutorial/sharding-high-availability-writes.txt
msgid "On this page"
msgstr ""

# d509a6c565c1446eac646a5b98570fe4
#: ../source/tutorial/sharding-high-availability-writes.txt:13
msgid ""
"MongoDB Tag Aware Sharding allows administrators to control data "
"distribution in a sharded cluster by defining ranges of the :term:`shard "
"key` and tagging them to one or more shards."
msgstr ""

# 4e21df8f955649de8cc75727cf7b0e4e
#: ../source/tutorial/sharding-high-availability-writes.txt:17
msgid ""
"This tutorial uses :ref:`zone-sharding` along with a multi-datacenter "
"sharded cluster deployment and application-side logic to support "
"distributed local writes, as well as high write availability in the event"
" of a replica set election or datacenter failure."
msgstr ""

# 7eb8b25211b14eef82a73b8e5ff4c064
#: ../source/tutorial/sharding-high-availability-writes.txt:24
msgid ""
"The concepts discussed in this tutorial require a specific deployment "
"architecture, as well as application-level logic."
msgstr ""

# a43199bbb63140398d7af58724f2bfba
#: ../source/tutorial/sharding-high-availability-writes.txt:27
msgid ""
"These concepts require familiarity with MongoDB :term:`sharded clusters "
"<sharded cluster>`, :term:`replica sets <replica set>`, and the general "
"behavior of :ref:`zones <zone-sharding>`."
msgstr ""

# 23c6a6b14a7149cf84ca0b842fb39e77
#: ../source/tutorial/sharding-high-availability-writes.txt:31
msgid ""
"This tutorial assumes an insert-only or insert-intensive workload. The "
"concepts and strategies discussed in this tutorial are not well suited "
"for use cases that require fast reads or updates."
msgstr ""

# 79ed1403be594149a77b62838c05ed1f
#: ../source/tutorial/sharding-high-availability-writes.txt:36
msgid "Scenario"
msgstr ""

# 88f8df1a7e5e4a47b630252545083c67
#: ../source/tutorial/sharding-high-availability-writes.txt:38
msgid ""
"Consider an insert-intensive application, where reads are infrequent and "
"low priority compared to writes. The application writes documents to a "
"sharded collection, and requires near-constant uptime from the database "
"to support its SLAs or SLOs."
msgstr ""

# 9a2fcb75434545f1b6d09675cf267642
#: ../source/tutorial/sharding-high-availability-writes.txt:43
msgid ""
"The following represents a partial view of the format of documents the "
"application writes to the database:"
msgstr ""

# db594a286c3643f08e0b55f65dac8363
#: ../source/tutorial/sharding-high-availability-writes.txt:71
msgid "Shard Key"
msgstr ""

# 4cdbc74f320d4056a596ae93594c471c
#: ../source/tutorial/sharding-high-availability-writes.txt:73
msgid ""
"The collection uses the ``{ datacenter : 1, userid : 1 }`` compound index"
" as the :term:`shard key`."
msgstr ""

# 14c98e4f71dc426f8d695a8c584aa21f
#: ../source/tutorial/sharding-high-availability-writes.txt:78
msgid ""
"The ``datacenter`` field in each document allows for creating a tag range"
" on each distinct datacenter value. Without the ``datacenter`` field, it "
"would not be possible to associate a document with a specific datacenter."
msgstr ""

# 17a88068586e4da580131c607118f522
#: ../source/tutorial/sharding-high-availability-writes.txt:82
msgid ""
"The ``userid`` field provides a high :ref:`cardinality <shard-key-"
"cardinality>` and low :ref:`frequency <shard-key-frequency>` component to"
" the shard key relative to ``datacenter``."
msgstr ""

# de1a1274b3854c9fae98bae8598f7999
#: ../source/tutorial/sharding-high-availability-writes.txt:86
msgid ""
"See :ref:`Choosing a Shard Key <sharding-shard-key-requirements>` for "
"more general instructions on selecting a shard key."
msgstr ""

# 0f4553b8b7ec455cbfe99350654ac111
#: ../source/tutorial/sharding-high-availability-writes.txt:90
msgid "Architecture"
msgstr ""

# 33226e24eca84f419c9c983261cd79eb
#: ../source/tutorial/sharding-high-availability-writes.txt:92
msgid ""
"The deployment consists of two datacenters, ``alfa`` and ``bravo``. There"
" are two shards, ``shard0000`` and ``shard0001``. Each shard is a "
":term:`replica set` with three members. ``shard0000`` has two members on "
"``alfa`` and one :ref:`priority 0 member <replica-set-secondary-only-"
"members>` on ``bravo``. ``shard0001`` has two members on ``bravo`` and "
"one :ref:`priority 0 member <replica-set-secondary-only-members>` on "
"``alfa``."
msgstr ""

# e66b5ad997754e75a3bce103b8fd98d3
#: ../source/tutorial/sharding-high-availability-writes.txt:104
msgid "Tags"
msgstr ""

# abb2f13ddb8e4885891c511edb347ab7
#: ../source/tutorial/sharding-high-availability-writes.txt:106
msgid ""
"This application requires one tag per datacenter. Each shard has one tag "
"assigned to it based on the datacenter containing the majority of its "
"replica set members. There are two tag ranges, one for each datacenter."
msgstr ""

# 5be3092cffca43ad8af3ee15e785b068
#: ../source/tutorial/sharding-high-availability-writes.txt:117
msgid "``alfa`` Datacenter"
msgstr ""

# b6d6545c5cc54522b1b58208c5c88379
#: ../source/tutorial/sharding-high-availability-writes.txt:111
msgid "Tag shards with a majority of members on this datacenter as ``alfa``."
msgstr ""

# 3f25e19712bb44de8d21e0a1e5544fcb
# e386b9df56a74a5a8cde4436bd1bf562
#: ../source/tutorial/sharding-high-availability-writes.txt:113
#: ../source/tutorial/sharding-high-availability-writes.txt:122
msgid "Create a tag range with:"
msgstr ""

# aca9f5582f744eaeb2fc25b23d5bdd87
#: ../source/tutorial/sharding-high-availability-writes.txt:115
msgid "a lower bound of ``{ \"datacenter\" : \"alfa\", \"userid\" : MinKey }``,"
msgstr ""

# 344426eead6c4431ba627a8237c1ca0a
#: ../source/tutorial/sharding-high-availability-writes.txt:116
msgid ""
"an upper bound of ``{ \"datacenter\" : \"alfa\", \"userid\" : MaxKey }``,"
" and"
msgstr ""

# 480f20f23e08455e85fec2cd7ea19650
#: ../source/tutorial/sharding-high-availability-writes.txt:117
msgid "the tag ``alfa``"
msgstr ""

# c64e02661cbf48bd80bb59e87a4e8f1c
#: ../source/tutorial/sharding-high-availability-writes.txt:126
msgid "``bravo`` Datacenter"
msgstr ""

# 93b90aed9a5b4789ae5ea0787587b2bf
#: ../source/tutorial/sharding-high-availability-writes.txt:120
msgid "Tag shards with a majority of members on this datacenter as ``bravo``."
msgstr ""

# 6458dde94214453b86b57c9d610c7689
#: ../source/tutorial/sharding-high-availability-writes.txt:124
msgid "a lower bound of ``{ \"datacenter\" : \"bravo\", \"userid\" : MinKey }``,"
msgstr ""

# 24940ea1eeb345239588f49fc2bebb8d
#: ../source/tutorial/sharding-high-availability-writes.txt:125
msgid ""
"an upper bound of ``{ \"datacenter\" : \"bravo\", \"userid\" : MaxKey "
"}``, and"
msgstr ""

# e0477785221c46ad869d2b469e9fd30b
#: ../source/tutorial/sharding-high-availability-writes.txt:126
msgid "the tag ``bravo``"
msgstr ""

# 3aa4212108d1487793aa46fcb5163f21
#: ../source/tutorial/sharding-high-availability-writes.txt:130
msgid ""
"The :bsontype:`MinKey` and :bsontype:`MaxKey` values are reserved special"
" values for comparisons"
msgstr ""

# bdb3423bf2374c3f84cf2925006d3307
#: ../source/tutorial/sharding-high-availability-writes.txt:133
msgid ""
"Based on the configured tags and tag ranges, :program:`mongos` routes "
"documents with ``datacenter : alfa`` to the ``alfa`` datacenter, and "
"documents with ``datacenter : bravo`` to the ``bravo`` datacenter."
msgstr ""

# f74e40e491b24b57ad8bee77ce7c9100
#: ../source/tutorial/sharding-high-availability-writes.txt:139
msgid "Write Operations"
msgstr ""

# 875b6fddb2f14c0b8ec10d797519bee3
#: ../source/tutorial/sharding-high-availability-writes.txt:141
msgid ""
"If an inserted or updated document matches a configured tag range, it can"
" only be written to a shard with the related tag."
msgstr ""

# d8a51c7ca026457d850da390a18bdb99
#: ../source/tutorial/sharding-high-availability-writes.txt:144
msgid ""
"MongoDB can write documents that do not match a configured tag range to "
"any shard in the cluster."
msgstr ""

# 860b61dd7f34440482d37f61ec4ac57c
#: ../source/tutorial/sharding-high-availability-writes.txt:149
msgid ""
"The behavior described above requires the cluster to be in a steady state"
" with no chunks violating a configured tag range. See the following "
"section on the :ref:`balancer <sharding-high-availability-writes-"
"balancing>` for more information."
msgstr ""

# 0d2c1a32ed1f4b189941860959747879
#: ../source/tutorial/sharding-high-availability-writes.txt:157
msgid "Balancer"
msgstr ""

# 11243d95d9344d2390bfd27fae65ee23
#: ../source/tutorial/sharding-high-availability-writes.txt:159
msgid ""
"The :ref:`balancer <sharding-balancing>` :ref:`migrates <sharding-chunk-"
"migration>` the tagged chunks to the appropriate shard. Until the "
"migration, shards may contain chunks that violate configured tag ranges "
"and tags. Once balancing completes, shards should only contain chunks "
"whose ranges do not violate its assigned tags and tag ranges."
msgstr ""

# 99b4fdfe1fe34826a985a36a9a4ac3a3
#: ../source/tutorial/sharding-high-availability-writes.txt:165
msgid ""
"Adding or removing tags or tag ranges can result in chunk migrations. "
"Depending on the size of your data set and the number of chunks a tag "
"range affects, these migrations may impact cluster performance. Consider "
"running your :ref:`balancer <sharding-balancing>` during specific "
"scheduled windows. See :ref:`sharding-schedule-balancing-window` for a "
"tutorial on how to set a scheduling window."
msgstr ""

# df5bf6abf2954186b1347c80bcb1fcc1
#: ../source/tutorial/sharding-high-availability-writes.txt:176
msgid "Application Behavior"
msgstr ""

# ede46368284c4c5981ce9a57f5fff19f
#: ../source/tutorial/sharding-high-availability-writes.txt:178
msgid ""
"By default, the application writes to the nearest datacenter. If the "
"local datacenter is down, or if writes to that datacenter are not "
"acknowledged within a set time period, the application switches to the "
"other available datacenter by changing the value of the ``datacenter`` "
"field before attempting to write the document to the database."
msgstr ""

# b320a133383248b89d687de8ea3ec60f
#: ../source/tutorial/sharding-high-availability-writes.txt:184
msgid ""
"The application supports write timeouts. The application uses :ref"
":`write-concern` to set a :ref:`timeout <wc-wtimeout>` for each write "
"operation."
msgstr ""

# 82dab13ffb5f419ca7a488efaba0d25b
#: ../source/tutorial/sharding-high-availability-writes.txt:188
msgid ""
"If the application encounters a write or timeout error, it modifies the "
"``datacenter`` field in each document and performs the write. This routes"
" the document to the other datacenter. If both datacenters are down, then"
" writes cannot succeed. See :ref:`sharding-high-availability-write-"
"failure`."
msgstr ""

# 240d7bee3cb649f7b6cf0271c2e1d4c3
#: ../source/tutorial/sharding-high-availability-writes.txt:193
msgid ""
"The application periodically checks connectivity to any data centers "
"marked as \"down\". If connectivity is restored, the application can "
"continue performing normal write operations."
msgstr ""

# 9c71646d41574ac481f6b91642b963ce
#: ../source/tutorial/sharding-high-availability-writes.txt:197
msgid ""
"Given the switching logic, as well as any load balancers or similar "
"mechanisms in place to handle client traffic between datacenters, the "
"application cannot predict which of the two datacenters a given document "
"was written to. To ensure that no documents are missed as a part of read "
"operations, the application *must* perform :ref:`broadcast queries "
"<sharding-mongos-broadcast>` by *not* including the ``datacenter`` field "
"as a part of any query."
msgstr ""

# 3fb7c5b2c2c443bd921d224a8f05b997
#: ../source/tutorial/sharding-high-availability-writes.txt:205
msgid ""
"The application performs reads using a :ref:`read preference <read-"
"preference>` of :readmode:`nearest` to reduce latency."
msgstr ""

# f25e557b8db3446db0e30a70341f2081
#: ../source/tutorial/sharding-high-availability-writes.txt:208
msgid ""
"It is possible for a write operation to succeed despite a reported "
"timeout error. The application responds to the error by attempting to re-"
"write the document to the other datacenter - this can result in a "
"document being duplicated across both datacenters. The application "
"resolves duplicates as a part of the :ref:`read <sharding-high-"
"availability-writes-read-resolution>` logic."
msgstr ""

# 0850da5316e7450885d9c115323cc45a
#: ../source/tutorial/sharding-high-availability-writes.txt:216
msgid "Switching Logic"
msgstr ""

# 63ea56eb0e0d45138fe90516d27b8314
#: ../source/tutorial/sharding-high-availability-writes.txt:218
msgid ""
"The application has logic to switch datacenters if one or more writes "
"fail, or if writes are not :ref:`acknowledged <write-concern>` within a "
"set time period. The application modifies the ``datacenter`` field based "
"on the target datacenter's :ref:`tag <sharding-high-availability-tags>` "
"to direct the document towards that datacenter."
msgstr ""

# 309ee6b9130c466796249a493f1331b8
#: ../source/tutorial/sharding-high-availability-writes.txt:224
msgid ""
"For example, an application attempting to write to the ``alfa`` "
"datacenter might follow this general procedure:"
msgstr ""

# f85550ce9aab446a84dd33a0cb74b25e
#: ../source/tutorial/sharding-high-availability-writes.txt:227
msgid "Attempt to write document, specifying ``datacenter : alfa``."
msgstr ""

# 0ec7960ef156443581cbdde3cd99d32e
#: ../source/tutorial/sharding-high-availability-writes.txt:228
msgid "On write timeout or error, log ``alfa`` as momentarily down."
msgstr ""

# 951dc890a12a462ea0c5196ef6584ff4
#: ../source/tutorial/sharding-high-availability-writes.txt:229
msgid "Attempt to write same document, modifying ``datacenter : bravo``."
msgstr ""

# 610a5919c5b0467d8c1f0d3d26d644e0
#: ../source/tutorial/sharding-high-availability-writes.txt:230
msgid "On write timeout or error, log ``bravo`` as momentarily down."
msgstr ""

# c923c80ca93d4ab18b4aae20f2492e69
#: ../source/tutorial/sharding-high-availability-writes.txt:231
msgid "If both ``alfa`` and ``bravo`` are down, log and report errors."
msgstr ""

# 40a3502d3ecd42eaad673c8cbb685a58
#: ../source/tutorial/sharding-high-availability-writes.txt:233
msgid "See :ref:`sharding-high-availability-write-failure`."
msgstr ""

# 5ddae6f2dba947f2a99730c3e6fc9601
#: ../source/tutorial/sharding-high-availability-writes.txt:236
msgid "Procedure"
msgstr ""

# 6200b9ce1f0c4bc189b69b409580e584
#: ../source/tutorial/sharding-high-availability-writes.txt:241
msgid "Configure Shard Tags"
msgstr ""

# b832669618434f96a0b1a9c2da8bee45
#: ../source/tutorial/sharding-high-availability-writes.txt:243
msgid ""
"You must be connected to a :program:`mongos` associated with the target "
":term:`sharded cluster` in order to proceed. You cannot create tags by "
"connecting directly to a :term:`shard` replica set member."
msgstr ""

# 7c951ccdea3a464cb1cb70b4d98099ae
#: ../source/tutorial/sharding-high-availability-writes.txt:252
msgid "Resolve Write Failure"
msgstr ""

# 1709ecc77ed34bcdbacb886e3af0ff4c
#: ../source/tutorial/sharding-high-availability-writes.txt:254
msgid ""
"When the application's default datacenter is down or inaccessible, the "
"application changes the ``datacenter`` field to the other datacenter."
msgstr ""

# db89bc103b544e8bb8a2c046034a9ba0
#: ../source/tutorial/sharding-high-availability-writes.txt:258
msgid ""
"For example, the application attempts to write the following document to "
"the ``alfa`` datacenter by default:"
msgstr ""

# c8db73beb96a4e37b3a01382ed7cda9b
#: ../source/tutorial/sharding-high-availability-writes.txt:271
msgid ""
"If the application receives an error on attempted write, or if the write "
"acknowledgement takes too long, the application logs the datacenter as "
"unavailable and alters the ``datacenter`` field to point to the ``bravo``"
" datacenter."
msgstr ""

# bdeba737ea684185b20adbd577264902
#: ../source/tutorial/sharding-high-availability-writes.txt:286
msgid ""
"The application periodically checks the ``alfa`` datacenter for "
"connectivity. If the datacenter is reachable again, the application can "
"resume normal writes."
msgstr ""

# f28b325dd82b4ac2bac4f00f62bafd21
#: ../source/tutorial/sharding-high-availability-writes.txt:292
msgid ""
"It is possible that the original write to ``datacenter : alfa`` "
"succeeded, especially if the error was related to a :ref:`timeout <wc-"
"wtimeout>`. If so, the document with ``message_id : 329620`` may now be "
"duplicated across both datacenters. Applications must resolve duplicates "
"as a part of :ref:`read operations <sharding-high-availability-writes-"
"read-resolution>`."
msgstr ""

# 0ca42c4e8a144e9bb9fb9ff4a71eef5c
#: ../source/tutorial/sharding-high-availability-writes.txt:302
msgid "Resolve Duplicate Documents on Reads"
msgstr ""

# 7a96690f0c894636ac73ebe4364d9ccf
#: ../source/tutorial/sharding-high-availability-writes.txt:304
msgid ""
"The application's switching logic allows for potential document "
"duplication. When performing reads, the application resolves any "
"duplicate documents on the application layer."
msgstr ""

# 86eb4362c7ad4d3ab4e2caa79fa5d52f
#: ../source/tutorial/sharding-high-availability-writes.txt:308
msgid ""
"The following query searches for documents where the ``userid`` is "
"``123``. Note that while ``userid`` is part of the shard key, the query "
"does not include the ``datacenter`` field, and therefore does not perform"
" a :ref:`targeted read operation <sharding-mongos-targeted>`."
msgstr ""

# d5d9cea4e5f74dcfb3dda90fb612d5c2
#: ../source/tutorial/sharding-high-availability-writes.txt:317
msgid ""
"The results show that the document with ``message_id`` of ``329620`` has "
"been inserted into MongoDB twice, probably as a result of a delayed write"
" acknowledgement."
msgstr ""

# e3ecca3f07ae4a5d9dce46fd24fca331
#: ../source/tutorial/sharding-high-availability-writes.txt:338
msgid ""
"The application can either ignore the duplicates, taking one of the two "
"documents, or it can attempt to trim the duplicates until only a single "
"document remains."
msgstr ""

# c1e8247f87f842dfbe938bce29bc8b84
#: ../source/tutorial/sharding-high-availability-writes.txt:342
msgid ""
"One method for trimming duplicates is to use the "
":method:`ObjectId.getTimestamp()` method to extract the timestamp from "
"the ``_id`` field. The application can then keep either the first "
"document inserted, or the last document inserted. This assumes the "
"``_id`` field uses the MongoDB :method:`ObjectId`."
msgstr ""

# 032107266acd446aac3883854fe10be7
#: ../source/tutorial/sharding-high-availability-writes.txt:348
msgid ""
"For example, using :method:`~ObjectId.getTimestamp()` on the document "
"with ``ObjectId(\"56f08c447fe58b2e96f595fa\")`` returns:"
msgstr ""

# 520d4b2aef714036a5767ac21368d871
#: ../source/tutorial/sharding-high-availability-writes.txt:355
msgid ""
"Using :method:`~ObjectId.getTimestamp()` on the document with "
"``ObjectId(\"56f08c457fe58b2e96f595fb\")`` returns:"
msgstr ""

