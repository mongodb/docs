=============================
Release Notes for MongoDB 4.0
=============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: twocols
   
Minor Releases
--------------

.. _4.0.24-release-notes:

4.0.24 - Apr 20, 2021
~~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-54710` Large number of $or clauses can create profiling
  entry exceeding max BSON size, causing the query to fail when it
  should not
- :issue:`SERVER-54136` Make the authenticate command respect
  enforceUserClusterSeparation
- :issue:`SERVER-53566` Investigate and reproduce "opCtx != nullptr &&
  _opCtx == nullptr" invariant
- :issue:`SERVER-45836` Provide more LDAP details (like server IP) at
  default log level
- :issue:`SERVER-35649` Nodes removed due to isSelf failure should
  re-attempt to find themselves
- :issue:`WT-7028` Sweep thread shouldn't lock during checkpoint
  gathering handles

- `All JIRA issues closed in 4.0.24
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%274.0.24%27>`_

- :ref:`4.0.24-changelog`

.. _4.0.23-release-notes:

4.0.23 - Feb 22, 2021
~~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-40361` Reduce memory footprint of plan cache entries
- :issue:`SERVER-46740` establishCursors() must always drain the
  AsyncRequestsSender::_baton
- :issue:`SERVER-46876` During the eviction pressure, we should quit the
  compact operation instead of crashing the process
- :issue:`SERVER-50305` ARS::next() does not respect OperationContext
  deadline
- :issue:`SERVER-52879` Periodic operation latency spikes every 5
  minutes due to closing idle cached WT sessions

- `All JIRA issues closed in 4.0.23
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%274.0.23%27>`_

- :ref:`4.0.23-changelog`

.. _4.0.22-release-notes:

4.0.22 - Jan 4, 2021
~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-48523` Unconditionally check the first entry in the
  oplog when attempting to resume a change stream
- :issue:`SERVER-50365` Stuck with long-running transactions that can't
  be timed out
- :issue:`SERVER-51303` Lookup stage followed by $match on type uses
  wrong field in matching condition
- :issue:`SERVER-52654` new signing keys not generated by the
  monitoring-keys-for-HMAC thread
- :issue:`SERVER-52955` KeysCollectionClientDirect should check if
  majority read concern is supported by storage engine

- `All JIRA issues closed in 4.0.22
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%274.0.22%27>`_

- :ref:`4.0.22-changelog`

.. _4.0.21-release-notes:

4.0.21 - Nov 10, 2020
~~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-26726` Check number of arguments for createIndex() and
  throw error if more than two arguments
- :issue:`SERVER-40317` $facet execution has no limit on how much memory
  it can consume
- :issue:`SERVER-43233` Add ability to request only specific
  attribute(s) for the LDAP groups
- :issue:`SERVER-45803` mongodecrypt needs a ServiceContext
- :issue:`SERVER-45938` Allow matching O/OU/DC in client x509 cert if
  clusterMode:keyFile
- :issue:`SERVER-49990` Alias setSlaveOk() and getSlaveOk() shell
  helpers
- :issue:`SERVER-50291` Add query knob to enumerate $or children in a
  different order
- :issue:`SERVER-50463` Make PooledLDAPConnection::refresh take
  self-ownership
- :issue:`SERVER-50915` [v4.0] fsyncLock must not take a stable
  checkpoint when majority read concern is off
- :issue:`SERVER-51120` Find queries with SORT_MERGE incorrectly sort
  the results when the collation is specified

- `All JIRA issues closed in 4.0.21
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%274.0.21%27>`_

- :ref:`4.0.21-changelog`

.. _4.0.20-release-notes:

4.0.20 - Aug 21, 2020
~~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-44051` getShardDistribution() does not report
  "Collection XYZ is not sharded" on dropped but previously sharded
  collections
- :issue:`SERVER-45610` Some reads work while system is RECOVERING
- :issue:`SERVER-46758` setFCV can be interrupted before an FCV change
  is majority committed and rollback the FCV without running the setFCV
  server logicbumping collection's major version during split
- :issue:`SERVER-47799` AsyncRequestsSender should update replica set
  monitor in between retries for InterruptedAtShutdown
- :issue:`SERVER-49233` Introduce a flag to toggle the logic for
  bumping collection's major version during split

- `All JIRA issues closed in 4.0.20
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%274.0.20%27>`_

- :ref:`4.0.20-changelog`

.. _4.0.19-release-notes:

4.0.19 - Jun 15, 2020
~~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-42525` Single-node replica sets shouldn't wait for
  electable caught up secondaries during shutdown
- :issue:`SERVER-42862` Prevent shard refreshes in mergeChunks command
  from joining earlier refreshes
- :issue:`SERVER-46487` The mongos routing for scatter/gather ops can
  have unbounded latency
- :issue:`SERVER-46758` setFCV can be interrupted before an FCV change
  is majority committed and rollback the FCV without running the setFCV
  server logic
- :issue:`SERVER-47233` WriteOp can be left in pending state, leading
  to erroneous NoProgressMade write error from mongos

- `All JIRA issues closed in 4.0.19
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%274.0.19%27>`_

- :ref:`4.0.19-changelog`



.. _4.0.18-release-notes:

4.0.18 - Apr 15, 2020
~~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-44892`: getShardDistribution should use $collStats agg stage instead of collStats command
- :issue:`SERVER-45119`: CollectionShardingState::getCurrentShardVersionIfKnown returns collection version instead of shard version
- `All JIRA issues closed in 4.0.18
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%274.0.18%27>`_

- :ref:`4.0.18-changelog`


.. _4.0.17-release-notes:

4.0.17 - Mar 25, 2020
~~~~~~~~~~~~~~~~~~~~~

Issues fixed:


- :issue:`SERVER-46466`: Race with findAndModify retryable write and session migration
- :issue:`SERVER-46365`: getMore command before rs.initiate() can trip invariant
- :issue:`SERVER-46238`: Race between commitTransaction and transaction expiration leads to invariant
- :issue:`SERVER-44598`: Shards do not treat the IGNORED version as "intended sharded"
- :issue:`SERVER-35050`: Don't abort collection clone due to negative document count
- :issue:`WT-5395`:  Fix a bug in the read lock implementation when there is a lot of contention

- `All JIRA issues closed in 4.0.17
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%274.0.17%27>`_

- :ref:`4.0.17-changelog`



.. _4.0.16-release-notes:

4.0.16 - Feb 5, 2020
~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-38794`: CollectionOptions can be lost in createCollection if a write conflict exception is thrown

- :issue:`SERVER-45831`: [4.0] Performance regression processing large aggregation commands

- `All JIRA issues closed in 4.0.16
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%274.0.16%27>`_

- :ref:`4.0.16-changelog`

.. _4.0.15-release-notes:

4.0.15 - Jan 27, 2020
~~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-42565`: Aggregations and find commands sort missing fields differently
- :issue:`SERVER-44341`: Do not choose only first shard of all shards associated with a zone when pre-splitting during shard collection
- :issue:`SERVER-40435`: A clearJumboFlag command to clear the jumbo flag
- :issue:`SERVER-45309`: Ensure bind credentials live longer than LDAP operations
- :issue:`SERVER-44733`: Change stream should throw ChangeStreamFatalError if a single shard cannot be targeted for updateLookup
- :issue:`SERVER-45396`: fix the "me" field in isMaster responses when using splithorizon
- :issue:`WT-5042`: Reduce configuration parsing overhead from checkpoints


- `All JIRA issues closed in 4.0.15
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%274.0.15%27>`_

- :ref:`4.0.15-changelog`

.. note::

   Fixed issues include those that resolve the following Common
   Vulnerabilities and Exposure (CVE):

   - CVE-2020-7921 (See :issue:`SERVER-45472`)


.. _4.0.14-release-notes:

4.0.14 - Dec 18, 2019
~~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-31083`:  Allow passing primary shard to "enableSharding" command for a new 

- :issue:`SERVER-44174`:  $push and $addToSet should restrict memory usage

- :issue:`SERVER-44050`:  Arrays along 'hashed' index key path are not correctly rejected

- :issue:`SERVER-43632`:  Possible memory leak in 4.0

- `All JIRA issues closed in 4.0.14
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%274.0.14%27>`_

- :ref:`4.0.14-changelog`

.. _4.0.13-release-notes:

4.0.13 - Oct 19, 2019
~~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-37690`: countDocuments throws an error when matching 0 document

- :issue:`SERVER-41939`: Connect to fastest LDAP server first

- :issue:`WT-4869`: Stop adding cache pressure when eviction is falling behind

- :issue:`WT-4882`: Improve checkpoint performance when there are large metadata pages

- :issue:`WT-4898`: Don't allow the eviction server to reconcile if it's busy
 
- `All JIRA issues closed in 4.0.13
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%274.0.13%27>`_

- :ref:`4.0.13-changelog`

.. _4.0.12-release-notes:

4.0.12 - Aug 12, 2019
~~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-41829`: findAndModify ignores filter expressions that are not objects.

- :issue:`SERVER-42603`: Recent service file change may cause cyclic dependencies.

- `All JIRA issues closed in 4.0.12
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%274.0.12%27>`_

- :ref:`4.0.12-changelog`


.. _4.0.11-release-notes:

4.0.11 - Jul 26, 2019
~~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-39756`: Sharding a very large collection can result in
  a long stall of writes against this collection

- :issue:`SERVER-40134`: Distinct command against a view can return
  incorrect results when the distinct path is multikey

- :issue:`SERVER-40535`: Possibility to get a non-existent key if using
  ReadConcern level:local when reading signing keys in ReplicaSet

- :issue:`SERVER-41361`:  Do not read at lastApplied while already holding the PBWM lock on secondaries
- :issue:`SERVER-41869`:  Reverse mutex acquisition order in CatalogCache::_scheduleCollectionRefresh
- :issue:`SERVER-42055`:  Only acquire a collection IX lock to write the lastVote document

- :issue:`SERVER-42232`: Adding a new shard renders all preceding
  resume tokens invalid

- `All JIRA issues closed in 4.0.11
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%274.0.11%27>`_

- :ref:`4.0.11-changelog`

.. note::

   Fixed issues include those that resolve the following Common
   Vulnerabilities and Exposures (CVEs):

   - CVE-2019-2389 (See :issue:`SERVER-40563`)
   - CVE-2019-2390 (See :issue:`SERVER-42233`)

.. _4.0.10-release-notes:

4.0.10 - May 31, 2019
~~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-37765`: Remove Support for Ubuntu 14.04

- :issue:`SERVER-30356`: Improve error report for validate command

- :issue:`SERVER-38867`: Refine handling of system.* collections in listCollections/show collections

- :issue:`SERVER-39672`: Default to :readconcern:`"local"` read concern if unspecified for multi-document transactions

- :issue:`WT-4769`: Don't discard active history for empty pages

- `All JIRA issues closed in 4.0.10
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%274.0.10%27>`_

- :ref:`4.0.10-changelog`

.. _4.0.9-release-notes:

4.0.9 - Apr 16, 2019
~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-38949`: Incorrect index bounds for {$ne: ["String"]} query
- :issue:`SERVER-38984`: Attach IDs to users
- :issue:`SERVER-39178`: Negotiate SCRAM mechanism in MongoURI::connect()
- :issue:`SERVER-40333`: Only clone collection options once for each shard on shard collection

- `All JIRA issues closed in 4.0.9
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%274.0.9%27>`_

- :ref:`4.0.9-changelog`

.. note::

   Fixed issues include those that resolve the following Common
   Vulnerabilities and Exposures (CVEs):

   - CVE-2019-2386 (See :issue:`SERVER-38984`)

.. _4.0.8-release-notes:

4.0.8 - Mar 29, 2019
~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-40355`:  rs.config that contains an ``_id`` greater than the number of nodes will crash
- :issue:`SERVER-38994`:  Step down on SIGTERM.  See :ref:`kill-sigterm`.
- :issue:`SERVER-37722`:  Quiet mode does not suppress connection end events
- :issue:`SERVER-37389`:  Give different messages for different connection failure reasons

- `All JIRA issues closed in 4.0.8
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%274.0.8%27>`_

- :ref:`4.0.8-changelog`


.. _4.0.7-release-notes:

4.0.7 - Mar 25, 2019
~~~~~~~~~~~~~~~~~~~~

Issues fixed:


- :issue:`SERVER-13779`:  Allow $not to be applied to $regex (currently only /regex/ syntax is allowed)
- :issue:`SERVER-35740`:  Report high-water-mark resume token with each (possibly empty) change stream batch
- :issue:`TOOLS-2158`:  mongodump failing on Windows with "error opening system CA store: Access is denied."
- `All JIRA issues closed in 4.0.7
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%274.0.7%27>`_

- :ref:`4.0.7-changelog`

.. _4.0.6-release-notes:

4.0.6 - Feb 7, 2019
~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-37778`: Platform Support: Add Community & Enterprise Ubuntu 18.04 (zSeries)
- :issue:`SERVER-37777`: Platform Support: Add Community SLES12 (zSeries)
- :issue:`SERVER-37775`: Platform Support: Add Community RHEL7 (zSeries)
- :issue:`SERVER-39180`: Wrong initial chunk owner shard can be selected when sharding non-empty collection with pre-created zones
- :issue:`SERVER-32146`: Log slow oplog entry application
- :issue:`SERVER-38293`:  Make listDatabases understand collection privileges
- :issue:`SERVER-38887`:  Mongo.getDBs() does not correctly inspect privileges

- `All JIRA issues closed in 4.0.6
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%274.0.6%27>`_

- :ref:`4.0.6-changelog`


.. _4.0.5-release-notes:

4.0.5 - Dec 20, 2018
~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-36437`: The dbstats command should lock the database in MODE_IS instead of MODE_S

- :issue:`SERVER-37182`: Different values when referencing whole object vs. a field of that object after $arrayToObject

- :issue:`SERVER-37200`: $match stage following $listSessions not working against mongos

- :issue:`SERVER-37557`: Add startup warning about enableMajorityReadConcern and usage of arbiters

- `All JIRA issues closed in 4.0.5
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%274.0.5%27>`_

- :ref:`4.0.5-changelog`

.. _4.0.4-release-notes:

4.0.4 - Nov 8, 2018
~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-26854`: LockStats for sub-operations should not include time for previous sub ops
- :issue:`SERVER-35323`: sessionId matching ignores userId part of the lsid
- :issue:`SERVER-37058`: Update with numeric field names inside an array can cause validation to fail
- :issue:`SERVER-37132`: Negation of $in with regex can incorrectly plan from the cache, leading to missing query results
- :issue:`TOOLS-2069`: mongoreplay does not support SCRAM-SHA-256
- :issue:`TOOLS-2131`: mongorestore hang in replaying oplog with --archive and --oplogReplay option
 
- `All JIRA issues closed in 4.0.4
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%274.0.4%27>`_

- :ref:`4.0.4-changelog`

.. _4.0.3-release-notes:

4.0.3 - Oct 9, 2018
~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-19815`: Make repair more robust with the WiredTiger storage engine

- :issue:`SERVER-35989`: :method:`db.collection.countDocuments()` and :method:`db.collection.estimatedDocumentCount()` helpers

- :issue:`SERVER-36982`: Reintroduce ``enableMajorityReadConcern:false`` server parameter

- `All JIRA issues closed in 4.0.3
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%274.0.3%27>`_

- :ref:`4.0.3-changelog`


.. _4.0.2-release-notes:

4.0.2 - Aug 29, 2018
~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-35720`: Allow zones to be created on non-existent collection

- :issue:`SERVER-35441`: drop/dropDatabase does not cleanup config.tags

- :issue:`SERVER-36102`: Create initial chunks on appropriate shards for zoned sharding

- :issue:`SERVER-36070`: Aggregation with $out results in error when Auditing is enabled

- :issue:`SERVER-34846`: Covered index with collated field returns incorrect result when collation not involved in match or sort

- :issue:`SERVER-34664`: Commands that are unsupported in a transaction should error

- `All JIRA issues closed in 4.0.2
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%274.0.2%27>`_

- :ref:`4.0.2-changelog`


.. _4.0.1-release-notes:

4.0.1 - Aug 6, 2018
~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-33000`: Platform Support: add Ubuntu 18.04.

- :issue:`SERVER-34933`: PCRE verb support.

- :issue:`SERVER-35101`: Handle bindIp argument that contains whitespaces.

- :issue:`SERVER-36027`: Enterprise build does not recognize the ``--redactClientLogData`` flag.

- `All JIRA issues closed in 4.0.1
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%274.0.1%27>`_

- :ref:`4.0.1-changelog`

.. _4.0-txn:

Multi-Document Transactions
---------------------------

Starting in version 4.0, MongoDB provides the ability to perform
:doc:`multi-document transactions </core/transactions>` against replica
sets. With multi-document transactions, until a transaction commits, no
write operations in the transaction are visible outside the
transaction. That is, the multi-document transactions are atomic.

.. include:: /includes/extracts/transactions-usage.rst

Feature Compatibility
~~~~~~~~~~~~~~~~~~~~~

The ``featureCompatibilityVersion`` of all members of the replica set
must be ``4.0`` or greater. To check the
``featureCompatibilityVersion`` for a member, connect to the member and
run the following command:

.. code-block:: javascript

   db.adminCommand( { getParameter: 1, featureCompatibilityVersion: 1 } )

For more information on the ``featureCompatibilityVersion`` flag, see
:dbcommand:`setFeatureCompatibilityVersion`.

``mongo`` Shell Methods
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1

   * - Method
     - Description

   * - :method:`Session.startTransaction()`

     - Starts a multi-statement transaction.

   * - :method:`Session.commitTransaction()`

     - Commits the transaction.

   * - :method:`Session.abortTransaction()`

     - Aborts the transaction.

MongoDB Drivers
~~~~~~~~~~~~~~~

Clients require MongoDB drivers :ref:`updated for MongoDB 4.0
<4.0-drivers>` to use transactions.

Read Concern ``snapshot``
~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 4.0 introduces a new read concern level
:readconcern:`"snapshot"` for :doc:`multi-document transaction
</core/transactions>`.

For a :doc:`multi-document transaction </core/transactions>`, MongoDB
may sometimes substitute a stronger read concern for
:readconcern:`"local"` and :readconcern:`"majority"` read concern.

For a list of all operations that accept read concerns, see
:ref:`read-concern-operations`.

Read Preference
~~~~~~~~~~~~~~~

.. include:: /includes/extracts/transactions-read-pref.rst

Commands
~~~~~~~~

- :dbcommand:`abortTransaction`
     Use the corresponding driver method or :binary:`~bin.mongo` shell
     helper :method:`Session.abortTransaction()` instead.

- :dbcommand:`commitTransaction`
     Use the corresponding driver method or :binary:`~bin.mongo` shell
     helper :method:`Session.commitTransaction()` instead.

Locks
~~~~~

By default, :doc:`multi-document transactions </core/transactions>`
wait ``5`` milliseconds to acquire locks required by the operations in
the transaction. If the transaction cannot acquire its required locks
with the ``5`` milliseconds, the transaction aborts.

You can use the :parameter:`maxTransactionLockRequestTimeoutMillis`
parameter to adjust how long transactions wait to acquire locks.

Transactions release all locks upon abort or commit.

``$currentOp``
~~~~~~~~~~~~~~

The aggregation pipeline stage :pipeline:`$currentOp` (and the
:dbcommand:`currentOp` command and :binary:`~bin.mongo` shell helper
:method:`db.currentOp()` method) return information on inactive sessions
which are holding locks as part of a transaction.

Parameters
~~~~~~~~~~

- :parameter:`transactionLifetimeLimitSeconds` to specify the lifetime
  for a :doc:`multi-document transaction </core/transactions>` after
  which the transaction is considered expired and will be aborted when
  the periodic cleanup process next runs.

- :parameter:`maxTransactionLockRequestTimeoutMillis` to specify how
  long :doc:`multi-document transactions </core/transactions>` should
  wait to aquire locks required by the operations in the transaction.

Aggregation
-----------

.. _4.0-agg-type-conversion:

New  Type Conversion Operators
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 4.0 adds the following new aggregation operators for type
conversion:

.. list-table::
   :header-rows: 1
   :widths: 20 80

   * - Operator
     - Description

   * - :expression:`$convert`
     - Convert value to specified type.

   * - :expression:`$toBool`
     - Convert value to boolean.

   * - :expression:`$toDate`
     - Convert value to Date.

   * - :expression:`$toDecimal`
     - Convert value to Decimal128.

   * - :expression:`$toDouble`
     - Convert value to Double.

   * - :expression:`$toInt`
     - Convert value to integer.

   * - :expression:`$toLong`
     - Convert value to long.

   * - :expression:`$toObjectId`
     - Convert value to ObjectId.

   * - :expression:`$toString`
     - Convert value to string.

New String Operators
~~~~~~~~~~~~~~~~~~~~

MongoDB 4.0 adds the following new aggregation string operators:

.. list-table::
   :header-rows: 1
   :widths: 20 80

   * - Operator
     - Description

   * - :expression:`$ltrim`

     - Removes whitespace or the specified characters from the
       beginning of a string.

   * - :expression:`$rtrim`

     - Removes whitespace or the specified characters from the end of a
       string.

   * - :expression:`$trim`

     - Removes whitespace or the specified characters from the
       beginning and end of a string.

Additional Improvements
~~~~~~~~~~~~~~~~~~~~~~~

.. _4.0-bucket:

``$bucket``
```````````

The :pipeline:`$bucket` stage no longer requires ``boundaries``
document arguments to be wrapped in :expression:`$literal`.

.. _4.0-dateToString:

``$dateToString``
`````````````````

The :expression:`$dateToString` aggregation operator has the following
option changes:

.. note::

   Requires ``featureCompatibilityVersion`` (fcv) set to ``"4.0"`` or greater.

- A new option ``onNull`` specifies the value to return if the ``date``
  is null or missing.

- The option ``format`` is now optional.

``$dateFromParts``
``````````````````

If the value specified for fields other than ``year``, ``isoYear``, and
``timezone`` is outside the valid range, :expression:`$dateFromParts`
carries or subtracts the difference from other date parts to calculate
the date. For more information, see :ref:`dateFromParts-values`.

.. _4.0-dateFromString:

``$dateFromString``
```````````````````

The :expression:`$dateFromString` aggregation operator takes an
optional ``format`` field.


``$currentOp``
~~~~~~~~~~~~~~

The aggregation pipeline stage :pipeline:`$currentOp` supports the
following new options:

- ``idleSessions`` option to return information on inactive sessions
  which are holding locks as part of a transaction.

- ``localOps`` option to report operations that are running locally on
  the current :binary:`~bin.mongos` instance, rather than reporting
  operations that are running on the shards.

.. _4.0-drivers:

MongoDB Drivers
---------------

The following drivers are feature compatible with MongoDB 4.0:

.. include:: /includes/list-4.0-drivers.rst

Security
--------

.. _4.0-scram-sha-256:

Add Support for ``SCRAM-SHA-256``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. note::

   To use :ref:`SCRAM-SHA-256 <authentication-scram-sha-256>`, the
   ``featureCompatibilityVersion`` must be set to ``4.0``. For more
   information on featureCompatibilityVersion, see :ref:`view-fcv` and
   :dbcommand:`setFeatureCompatibilityVersion`.

MongoDB adds support for :ref:`authentication-scram` authentication
mechanism :ref:`SCRAM-SHA-256 <scram-mechanisms>`, which uses the SHA-256
hash function. To modify the iteration count for ``SCRAM-SHA-256``,
MongoDB adds a new parameter :parameter:`scramSHA256IterationCount`.

New Option for Create and Update User Operations
````````````````````````````````````````````````

When creating or updating a SCRAM user, you can indicate the specific
SCRAM mechanism or mechanisms to use for the user credentials.
Specifically, MongoDB 4.0 adds the ``mechanisms`` option to the
following commands and :binary:`~bin.mongo` shell helpers:

.. list-table::
   :header-rows: 1

   * - Command
     - Method
   * - :dbcommand:`createUser`
     - :method:`db.createUser()`

   * - :dbcommand:`updateUser`
     - :method:`db.updateUser()`

When using ``SCRAM-SHA-256``, MongoDB (i.e. the server) requires
undigested password. Starting in MongoDB 4.0, the default value of
``digestPassword`` is ``true`` for :dbcommand:`createUser`, and the
default value of ``passwordDigestor`` is ``"server"``. In earlier
MongoDB versions, ``digestPassword`` is ``false`` and ``client``
respectively.

New Option for ``isMaster`` Command
```````````````````````````````````

Starting in MongoDB 4.0, the :dbcommand:`isMaster` command accepts an
optional field ``saslSupportedMechs: <db.user>`` to return an
additional field :data:`isMaster.saslSupportedMechs` in its result.

:data:`isMaster.saslSupportedMechs` is an array of SASL mechanisms used
to create the specified user's credentials.

.. _4.0-mongodb-cr:

Remove Support for ``MONGODB-CR``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in version 4.0, MongoDB removes support for the deprecated
MongoDB Challenge-Response (``MONGODB-CR``) authentication mechanism.

Since version 3.0, MongoDB has not supported the creation of
``MONGODB-CR`` users unless the deployment had been upgraded from a 2.6
or earlier deployment that already had ``MONGODB-CR`` users and had not
upgraded the authentication schema.

If your deployment has user credentials stored in ``MONGODB-CR``
schema, you must upgrade to :ref:`Salted Challenge Response
Authentication Mechanism (SCRAM) <authentication-scram>` **before** you
upgrade to version 4.0. For information on upgrading to ``SCRAM``, see
:doc:`/release-notes/3.0-scram`.

``usersInfo`` Enhancement
~~~~~~~~~~~~~~~~~~~~~~~~~

The :dbcommand:`usersInfo` command can return information across all databases
by specifying:

.. code-block:: javascript

   { usersInfo: { forAllDBs: true } }

The :dbcommand:`usersInfo` and the :binary:`~bin.mongo` shell helpers
:method:`db.getUser()` and :method:`db.getUsers()` method accept a new
optional ``filter`` document. The filter document specifies
:pipeline:`$match` stage conditions to return information only for
users that match the conditions.

The :dbcommand:`usersInfo` command and the :binary:`~bin.mongo` shell helpers
:method:`db.getUser()` and :method:`db.getUsers()` method return the
``mechanisms`` field for the user.


.. _4.0-tls:

TLS/SSL
~~~~~~~

.. include:: /includes/fact-tls-libraries.rst

Associated with this change, the parameter
:parameter:`opensslCipherConfig` is supported for Linux/BSD and no
longer supported in Windows and macOS.


TLS 1.2 Support
```````````````

MongoDB 4.0 binaries for macOS support TLS 1.2.

.. _4.0-disable-tls:

Disable TLS 1.0
```````````````

MongoDB binaries (:binary:`~bin.mongod`, :binary:`~bin.mongos`, and
:binary:`~bin.mongo`) disables support for TLS 1.0 encryption on
systems where TLS 1.1+ is available.

If you need to support TLS 1.0:

- For :binary:`~bin.mongod` instances, you can specify ``none`` to
  :setting:`net.ssl.disabledProtocols` or
  :option:`--sslDisabledProtocols none <mongod --sslDisabledProtocols>`.

- For :binary:`~bin.mongos` instances, you can specify ``none`` to
  :setting:`net.ssl.disabledProtocols` or
  :option:`--sslDisabledProtocols none <mongos --sslDisabledProtocols>`.

- For the :binary:`~bin.mongo` shell, you can specify
  :option:`--sslDisabledProtocols none <mongo --sslDisabledProtocols>`.

  The :option:`--sslDisabledProtocols <mongo --sslDisabledProtocols>`
  option is available for the :binary:`~bin.mongo` shell in:

  - MongoDB version 4.0+
  - MongoDB version 3.6.5+
  - MongoDB version 3.4.15+

On macOS, to connect :binary:`~bin.mongo` shell version 3.6.4 or
earlier to a MongoDB 4.0+ deployment requires explicit enabling of TLS
1.0.

AES-GCM
~~~~~~~

.. include:: /includes/fact-aes.rst

.. seealso::

   :ref:`4.0-ssl-systemstore`


New Privilege Actions
~~~~~~~~~~~~~~~~~~~~~~

To support :ref:`free Cloud monitoring <4.0-free-monitoring>`, MongoDB
adds the following privilege actions available for the ``cluster``
resource:

- :authaction:`checkFreeMonitoringStatus`

- :authaction:`setFreeMonitoring`

MongoDB modifies the :authrole:`clusterMonitor` role to include these
privileges.

x.509 Authentication Certificate Restrictions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/extracts/ssl-facts-x509-invalid-certificate.rst

If you are using invalid certificates to perform x.509 authentication,
update your certificates to valid certificates. For example, you may
sign your existing certificates with a trusted CA, or if using a custom
CA, specify that CA using :setting:`net.ssl.CAFile`.

.. _4.0-ssl-systemstore:

Enable System Store for TLS/SSL on Windows and macOS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The :option:`--sslCertificateSelector <mongod --sslCertificateSelector>`
option (:setting:`~net.ssl.certificateSelector` setting) allows
:binary:`~bin.mongod`, :binary:`~bin.mongo` shell and
:binary:`~bin.mongos` to use system SSL certificate stores for Windows
and macOS.

The :option:`--sslClusterCertificateSelector <mongod
--sslClusterCertificateSelector>` option
(:setting:`~net.ssl.clusterCertificateSelector` setting) allows
:binary:`~bin.mongod` and
:binary:`~bin.mongos` to use system TLS/SSL certificate stores for Windows
and macOS for internal TLS/SSL communication within a cluster.

The option :option:`--kmipClientCertificateSelector <mongod
--kmipClientCertificateSelector>`
(:setting:`security.kmip.clientCertificateSelector`) allows
:binary:`~bin.mongod` to use system TLS/SSL certificate stores for
Windows and macOS when using TLS/SSL connection to the KMIP server.

.. _4.0-deprecate-mmapv1:

Deprecate MMAPv1
----------------

Starting in version 4.0, MongoDB deprecates the MMAPv1 storage Engine
and will remove MMAPv1 in a future release.

To change your MMAPv1 storage engine deployment to
:doc:`/core/wiredtiger`, see:

- :doc:`/tutorial/change-standalone-wiredtiger`

- :doc:`/tutorial/change-replica-set-wiredtiger`

- :doc:`/tutorial/change-sharded-cluster-wiredtiger`

Replica Set
-----------

.. _4.0-remove-pv0:

Remove ``pv0`` for Replica Sets
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 4.0 removes the deprecated replica set protocol version 0
``pv0``.

Before upgrading to MongoDB 4.0, you must upgrade to :rsconf:`pv1
<protocolVersion>`.

To upgrade to ``pv1``, connect a :binary:`~bin.mongo` shell to the
replica set primary and perform the following sequence of operations:

.. code-block:: bash

   cfg = rs.conf();
   cfg.protocolVersion=1;
   rs.reconfig(cfg);

You can use :rsconf:`~settings.catchUpTimeoutMillis` to prioritize
between faster failovers and preservation of :writeconcern:`w:1
<\<number\>>` writes.

For more information on ``pv1``, see
:doc:`/reference/replica-set-protocol-versions`.

.. _4.0-remove-master-slave:

Remove Master-Slave Replication
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 4.0 removes support for the deprecated master-slave
replication. Before you can upgrade to MongoDB 4.0, if your deployment
uses master-slave replication, you must upgrade to a replica set.

To convert from master-slave replication to a replica set, see
:v4.0:`Convert a Master-Slave Deployment to a Replica Set
</core/master-slave>`.

Journaling and Replica Sets
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/wiredtiger-node-nojournal.rst

``rollbackTimeLimitSecs`` Parameter Available
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 4.0, a new :parameter:`rollbackTimeLimitSecs`
parameter allows for the setting of the time limit in seconds between
the common point and the last oplog write entry for the member
indicated for rollback. The default rollback time limit is 1 day.

Wait for Background Index Builds
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in version 4.0, MongoDB waits for any in-progress
:ref:`background index builds <index-creation-background>` to finish
before starting a :doc:`rollback </core/replica-set-rollbacks>`.

Rollback Files
~~~~~~~~~~~~~~

MongoDB adds the parameter :parameter:`createRollbackDataFiles` that
determines whether during a rollback, MongoDB creates rollback files
that contains documents affected during the rollback.

``replSetGetStatus`` Output Changes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The :dbcommand:`replSetGetStatus` returns the following new fields:

- :data:`~replSetGetStatus.syncSourceHost`

- :data:`~replSetGetStatus.syncSourceId`

- :data:`~replSetGetStatus.lastStableCheckpointTimestamp`

- :data:`~replSetGetStatus.members[n].syncSourceHost`

- :data:`~replSetGetStatus.members[n].syncSourceId`

The following fields returned from :dbcommand:`replSetGetStatus` are
deprecated:

- :data:`replSetGetStatus.syncingTo`

- :data:`replSetGetStatus.members[n].syncingTo`

Oplog Size
~~~~~~~~~~

.. include:: /includes/fact-oplog-size.rst

Change Streams
--------------

Database and Deployment Change Streams
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB adds the ability to:

- Open a :ref:`change stream cursor <changeStreams>` for a single
  database (excluding ``admin``, ``local``, and ``config`` database) to
  watch for changes to all its non-``system`` collections.

- Open a :ref:`change stream cursor <changeStreams>` for a deployment
  to watch for changes to all non-``system`` collections across all
  databases except for ``admin``, ``local``, and ``config``.

.. note::

   Requires ``featureCompatibilityVersion`` (fcv) set to ``"4.0"`` or greater.

Start Time Option
~~~~~~~~~~~~~~~~~

MongoDB adds the ability to specify a start time
(``startAtOperationTime`` option) for a change stream.

Change Event Document Changes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The :doc:`change event documents </reference/change-events>` include
the new fields:

- the ``clusterTime`` which corresponds to timestamp from the oplog
  entry for the event.

- the ``txnNumber`` and the ``lsid`` if the operation is part of a
  :doc:`multi-document transaction </core/transactions>`.

.. _4.0-resume-token:

Resume Token Data Type Change
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 4.0 introduces new hex-encoded string :doc:`change streams
</changeStreams>` resume tokens:

.. include:: /includes/extracts/changestream-resume-token-versions-4.0.rst

.. include:: /includes/extracts/changestream-resume-token-hex-change.rst

.. include:: /includes/extracts/changestream-resume-token-downgrade.rst

.. _4.0-change-stream-methods:

``mongo`` Shell Methods
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1

   * - Method
     - Description

   * - :method:`db.watch()`

     - Opens a :ref:`change stream cursor <changeStreams>` for a single database
       (excluding ``admin``, ``local``, and ``config`` database) to
       watch for changes to all its non-``system`` collections.

       For the corresponding MongoDB driver method, refer to your
       driver documentation.

   * - :method:`Mongo.watch()`

     - Opens a :ref:`change stream cursor <changeStreams>` for a
       deployment to watch for changes to all non-``system``
       collections across all databases except for ``admin``,
       ``local``, and ``config``.

       For the corresponding MongoDB driver method, refer to your
       driver documentation.

       .. versionadded:: 4.0

.. _4.0-free-monitoring:

Free Monitoring
---------------

MongoDB 4.0 (Community Edition) offers :doc:`free Cloud monitoring
</administration/free-monitoring>` for standalone or replica sets.

Enable/Disable
~~~~~~~~~~~~~~

By default, you can enable/disable free monitoring during runtime
using:

.. list-table::
   :header-rows: 1
   :widths: 60 30

   * - ``mongo`` Shell Methods
     - Command

   * - | :method:`db.enableFreeMonitoring()`
       | :method:`db.disableFreeMonitoring()`

     - :dbcommand:`setFreeMonitoring`

You can also enable or disable free monitoring at startup using either:

- the configuration file setting :setting:`cloud.monitoring.free.state`
  or

- the command-line option :option:`--enableFreeMonitoring <mongod --enableFreeMonitoring>`

View Status
~~~~~~~~~~~

To view the state of your free monitoring, MongoDB provides the
following command and shell helper:

.. list-table::
   :header-rows: 1
   :widths: 60 30

   * - ``mongo`` Shell Methods
     - Command

   * - :method:`db.getFreeMonitoringStatus()`

     - :dbcommand:`getFreeMonitoringStatus`

The :dbcommand:`serverStatus` and the helper
:method:`db.serverStatus()` also includes free monitoring statistics
in the :serverstatus:`freeMonitoring` field.

Access Control
~~~~~~~~~~~~~~

To support free Cloud monitoring, MongoDB adds the following privilege
actions available for the ``cluster`` resource:

- :authaction:`checkFreeMonitoringStatus`

- :authaction:`setFreeMonitoring`

The built-in role :authrole:`clusterMonitor` includes the new privilege
actions.

Sharded Clusters
----------------

.. include:: /includes/extracts/mongos-operations-wc.rst

``.msi`` Installer on Windows
-----------------------------

Starting in MongoDB 4.0, you can configure and start MongoDB as a
service during the install.

Platform Support
----------------

- MongoDB 4.0 (Community & Enterprise) adds support for:

  - :doc:`Amazon Linux 2 </tutorial/install-mongodb-on-amazon>`

  - :doc:`Debian 9 "Stretch" </tutorial/install-mongodb-on-debian>`

  - :doc:`Ubuntu 18.04 </tutorial/install-mongodb-on-ubuntu>`

- MongoDB 4.0 (Community) adds support for:

  - s390x RHEL 6.x

- MongoDB 4.0 does not support SLES 11.

  - Support for SLES 11 has also been removed in MongoDB 3.2.20+,
    3.4.15+, and 3.6.4+.

- MongoDB 4.0 does not support Ubuntu 12.04.

  - Support for Ubuntu 12.04 has also been removed in MongoDB 3.2.20+,
    3.4.15+, and 3.6.4+.

  - Support for Ubuntu 12.04 has also been removed in MongoDB 3.2.20+,
    3.4.15+, and 3.6.4+.

- In future releases, MongoDB will end support for the following
  platforms:

  - Windows 7/2008R2

  - Windows 8/2012

  - Windows 8.1/2012R2

  - Ubuntu 14.04

Refer to :ref:`prod-notes-supported-platforms` for the full platform
support matrix.

MongoDB Tools
-------------

The :binary:`~bin.mongoreplay` ``play`` command supports a new
``MONGOREPLAY_HOST`` environment variable that specifies the MongoDB
connection string when running ``mongoreplay play``. The new environment
variable can be usedinstead of the command-line ``--host`` option.
 
For example, to play back a recording to a :binary:`~bin.mongod`
instance running with authentication at ``mongodb1.example.net:27017``,
you can specify the connection string in:

-  The ``MONGOREPLAY_HOST`` environment variable:

   .. code-block:: bash

      export MONGOREPLAY_HOST="mongodb://myUserName:s0meD1fficultPassw0rd@mongodb1.example.net:27017/?authSource=admin"
      mongoreplay play -p /some/path/to/my/recording.bson

-  The ``--host`` command-line option:

   .. code-block:: bash

      mongoreplay play -p /some/path/to/my/recording.bson --host "mongodb://myUserName:s0meD1fficultPassw0rd@mongodb1.example.net:27017/?authSource=admin"

If ``--host`` command-line option is specified, the ``--host`` value
overrides the environment variable.


General Improvements
--------------------

Commands
~~~~~~~~

- The command :dbcommand:`listCollections` takes Intent Shared lock on
  the database. In previous versions, the command takes Shared lock on
  the database.

- The command :dbcommand:`listCollections` and its :binary:`~bin.mongo`
  shell helper :method:`db.getCollectionInfos()` accepts the following
  option:

  - ``nameOnly`` to return only the collection names and types (which
    does not require collection locks).

  - ``authorizedCollections`` to allow users without the required
    privilege to run :dbcommand:`listCollections` can run the command,
    with ``nameOnly: true, authorizedCollections: true``, to return the
    the collection(s) to which the user has privileges.

- The command :dbcommand:`serverStatus` and its :binary:`~bin.mongo`
  shell helper :method:`db.serverStatus()` includes
  :serverstatus:`shardingStatistics` in its output. The
  :serverstatus:`shardingStatistics` includes data on metadata refresh
  on sharded clusters.

- The :binary:`~bin.mongo` shell helper :method:`db.collection.drop()`
  accepts the write concern option.

- For cursors created inside a session, you cannot call
  :dbcommand:`getMore` outside the session. Similarly, for cursors
  created outside of a session, you cannot call :dbcommand:`getMore`
  inside a session.

- The command :dbcommand:`dbHash` includes the following fields in its
  output:

  - ``capped`` field that lists the capped collections

  - ``uuids`` field that contains the collections and their
    corresponding UUIDs.

- The command :dbcommand:`killOp` now supports termination of queries that are
  running on a :binary:`~bin.mongos`. When run on the ``mongos``, :dbcommand:`killOp`
  can kill queries that are running in more than one shard.

Geospatial Query Improvements
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- The geospatial query operators :query:`$near` and
  :query:`$nearSphere` now supports querying on sharded collections.

- As of MongoDB 4.0, the :pipeline:`$geoNear` aggregation operator and
  ``geoNear`` command support using the ``minDistance`` option
  with :doc:`2d </core/2d>` indexes. Similarly, :query:`$near` and
  :query:`$nearSphere` support the ``$minDistance`` option for :doc:`2d
  </core/2d>` indexes. Previously, ``minDistance`` and ``$minDistance``
  were only available for :doc:`2dsphere </core/2dsphere>` indexes.

- MongoDB 4.0 adds a ``key`` option for the :pipeline:`$geoNear`
  aggregation operator and ``geoNear`` command that enables
  users to specify which geospatial index to use when querying a
  collection with multiple geospatial indexes. Previously, to use the
  :pipeline:`$geoNear` aggregation operator or ``geoNear``
  command, the collection could only have one geospatial index.

Network Layer Improvements
~~~~~~~~~~~~~~~~~~~~~~~~~~

- For the parameter :parameter:`taskExecutorPoolSize`, change default
  value to ``1``.

- Add new parameter :v4.0:`AsyncRequestsSenderUseBaton </reference/parameters/#param.AsyncRequestsSenderUseBaton>` to enable
  performance optimization on Linux for scatter/gather operations on
  :binary:`~bin.mongos` when using a single :parameter:`Task Executor
  connection pool <taskExecutorPoolSize>`.

- Added the following parameters to manage connection pools:

  - :parameter:`connPoolMaxInUseConnsPerHost`

  - :parameter:`connPoolMaxShardedInUseConnsPerHost`

  - :parameter:`globalConnPoolIdleTimeoutMinutes`

  - :parameter:`shardedConnPoolIdleTimeoutMinutes`

Configuration Options
~~~~~~~~~~~~~~~~~~~~~

- :binary:`~bin.mongos` supports:

  - Command line options: :option:`slowms <mongos --slowms>` and
    :option:`--slowOpSampleRate <mongos --slowOpSampleRate>`

  - Configuration file options:
    :setting:`operationProfiling.slowOpThresholdMs` and
    :setting:`operationProfiling.slowOpSampleRate`

Miscellaneous
~~~~~~~~~~~~~

- .. include:: /includes/fact-jit-disabled.rst

- Upgrades MozJS to ESR 45.9.0.

- Adds :data:`RECOVERY` component to log messages.


- MongoDB 4.0 adds support for using the :urioption:`appName` connection
  string option for setting a custom app name when connecting from the
  :binary:`~bin.mongo` shell. Previously, only MongoDB drivers supported
  using the :urioption:`appName` to set a custom value and the
  :binary:`~bin.mongo` shell used the default ``MongoDB Shell`` value as the
  app name.

- Adds a :binary:`~bin.mongo` shell method
  :method:`convertShardKeyToHashed` to return the hashed value for a
  document.

- Resolves ``localhost`` IP address as configured instead of assuming
  ``127.0.0.1``.

- When using the :ref:`connections-dns-seedlist` to connect to the
  :binary:`~bin.mongo` shell with authentication, the
  :binary:`~bin.mongo` shell will now prompt the user to
  provide their password when starting up.

Changes Affecting Compatibility
-------------------------------

Some changes can affect compatibility and may require user actions. For
a detailed list of compatibility changes, see
:doc:`/release-notes/4.0-compatibility`.

.. _4.0-upgrade:

Upgrade Procedures
------------------

.. important:: Feature Compatibility Version

   To upgrade, the 3.6 instances must have
   ``featureCompatibilityVersion`` set to ``3.6``. To check the version:

   .. code-block:: javascript

      db.adminCommand( { getParameter: 1, featureCompatibilityVersion: 1 } )

   For specific details on verifying and setting the
   ``featureCompatibilityVersion`` as well as information on other
   prerequisites/considerations for upgrades, refer to the individual
   upgrade instructions:

   - :doc:`/release-notes/4.0-upgrade-standalone`

   - :doc:`/release-notes/4.0-upgrade-replica-set`

   - :doc:`/release-notes/4.0-upgrade-sharded-cluster`

If you need guidance on upgrading to 4.0, `MongoDB offers major version
upgrade services
<https://www.mongodb.com/products/consulting?tck=docs_server>`_
to help ensure a smooth transition without interruption to your MongoDB application.

Download
--------

To download MongoDB 4.0, go to the `MongoDB Download Center
<https://www.mongodb.com/download-center/community?tck=docs_server>`_

.. seealso::

   `All Third Party License Notices <https://github.com/mongodb/mongo/blob/v4.0/distsrc/THIRD-PARTY-NOTICES>`_.

.. _4.0.3-known-issues:

Known Issues in 4.0.3
---------------------

- :issue:`WT-4018`:
     .. include:: /includes/extracts/4.0-errata-wt-4018.rst

- :issue:`SERVER-35431`:
     .. include:: /includes/extracts/4.0-errata-server-35431.rst

.. _4.0.2-known-issues:

Known Issues in 4.0.2
---------------------

- :issue:`WT-4018`:
     .. include:: /includes/extracts/4.0-errata-wt-4018.rst

- :issue:`SERVER-35431`:
     .. include:: /includes/extracts/4.0-errata-server-35431.rst

- :issue:`SERVER-35657`:
     .. include:: /includes/extracts/4.0-errata-server-35657.rst

.. _4.0.1-known-issues:

Known Issues in 4.0.1
---------------------

- :issue:`WT-4018`:
     .. include:: /includes/extracts/4.0-errata-wt-4018.rst

- :issue:`SERVER-35431`:
     .. include:: /includes/extracts/4.0-errata-server-35431.rst

- :issue:`SERVER-35657`:
     .. include:: /includes/extracts/4.0-errata-server-35657.rst

.. _4.0-known-issues:

Known Issues in 4.0.0
---------------------

- :issue:`TOOLS-1952`:
    .. include:: /includes/extracts/4.0-errata-tools-1952.rst

- :issue:`TOOLS-2058`:
     .. include:: /includes/extracts/4.0-errata-tools-2058.rst

- :issue:`WT-4018`:
     .. include:: /includes/extracts/4.0-errata-wt-4018.rst

- :issue:`SERVER-35431`:
     .. include:: /includes/extracts/4.0-errata-server-35431.rst

- :issue:`SERVER-35657`:
     .. include:: /includes/extracts/4.0-errata-server-35657.rst

- :issue:`SERVER-35758`:
     .. include:: /includes/extracts/4.0-errata-server-35758.rst

Report an Issue
---------------

To report an issue, see
https://github.com/mongodb/mongo/wiki/Submit-Bug-Reports for
instructions on how to file a JIRA ticket for the MongoDB server or one
of the related projects.

.. toctree::

   /release-notes/4.0-compatibility
   /release-notes/4.0-upgrade-standalone
   /release-notes/4.0-upgrade-replica-set
   /release-notes/4.0-upgrade-sharded-cluster
   /release-notes/4.0-downgrade-standalone
   /release-notes/4.0-downgrade-replica-set
   /release-notes/4.0-downgrade-sharded-cluster
   /release-notes/4.0-changelog
