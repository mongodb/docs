title: Insert a document into a collection.
stepnum: 1
pre: |
  Insert a document into a collection ``orders``. The operation will
  create the collection if the collection does not currently exist.
ref: ""
action:
  language: javascript
  code: |
     db.orders.insert(
         {
           cust_id: "abc123",
           ord_date: new Date("Apr 1, 2014"),
           status: "A",
           items: [
             { sku: "xxx", qty: 25, price: 1 },
             { sku: "yyy", qty: 25, price: 1 }
           ],
           shipping: {
              location: "Warehouse1",
              mode: "airfreight"
           }
         }
     )
post: |
  The operation returns a :method:`WriteResult` object with the status
  of the operation.
---
title: Review the returned object.
stepnum: 2
ref: ""
pre: |
  The insert operation returns a :method:`WriteResult` object which
  contains the status of the operation. A successful insert of the
  document returns the following object:
action:
  language: javascript
  code: |
     WriteResult({ "nInserted" : 1 })
post: |
  The :data:`~WriteResult.nInserted` field specifies the number of
  documents inserted. If the operation encounters an error, the
  :method:`WriteResult` object will contain the error information.
---
title: Verify the insert operation.
ref: ""
stepnum: 3
pre: |
  If the insert operation is successful, verify the insertion by
  querying the collection.
action:
  language: javascript
  code: |
     db.orders.find().pretty()
post: |
  The document you inserted should return.
---
title: Review the inserted document.
ref: ""
action:
   language: javascript
   code: |
      {
         "_id" : ObjectId("5373bd1cc9f811cde82d54cf"),
         "cust_id" : "abc123",
         "ord_date" : ISODate("2014-04-01T04:00:00Z"),
         "status" : "A",
         "items" : [
            {
               "sku" : "xxx",
               "qty" : 25,
               "price" : 1
            },
            {
               "sku" : "yyy",
               "qty" : 25,
               "price" : 1
            }
         ],
         "shipping" : {
            "location" : "Warehouse1",
            "mode" : "airfreight"
         }
      }
post: |
  The returned document shows that MongoDB added an ``_id`` field to
  the document. If a client inserts a document that does not contain
  the ``_id`` field, MongoDB adds the field with the value set to a
  generated :manual:`ObjectId </reference/object-id>`. The 
  :manual:`ObjectId </reference/object-id>` values in your documents
  will differ from the ones shown.

  Although the :program:`mongo` shell displays the ``Date`` object
  using the shell wrapper ``ISODate()``, the object remains of type
  ``Date``. See :manual:`Data Types in mongo Shell </core/shell-types>`
  for more information
  on data types in the :program:`mongo` shell.
...
