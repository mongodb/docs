stepnum: 1
source:
  file: steps-embed-dashboard-unauthenticated.yaml
  ref: select-dashboard
---
stepnum: 2
source:
  file: steps-embed-dashboard-unauthenticated.yaml 
  ref: embed-dashboard
---
stepnum: 3
source:
  file: steps-embed-dashboard-unauthenticated.yaml
  ref: enable-data-source-dashboard
---
stepnum: 4
title: Select the :guilabel:`Authenticated` tab in the dialog window.
ref: select-authenticated-dashboard
level: 4
---
stepnum: 5
title: Toggle :guilabel:`Enable authenticated access` to
  :guilabel:`On`.
ref: toggle-authenticated-on-dashboard
level: 4
---
stepnum: 6
title: Add authentication providers.
ref: add-auth-providers
content: |

  If you have already set up authentication providers, skip this step. 
  If you haven't yet set up authentication providers, you can do 
  so now.

  To learn more, see :ref:`configure-auth-providers`.
  
  a. Click :guilabel:`Add`.

  #. Specify a name for the authentication integration.

  #. Select a provider and specify the provider settings.

  #. Click :guilabel:`Save`.

  #. Click :guilabel:`Back to Embed Dashboard`.
---
stepnum: 7
title: (*Optional*) Specify a filter function to inject per user.
ref: injected-function-dashboard
content: |
   You can specify a function to inject a MongoDB filter document for
   each user who views the dashboard. This is useful for rendering 
   user-specific dashboards.

   .. include:: /includes/example-user-filter-function.rst

   .. seealso::

      To learn more about injecting filters per user, see 
      :ref:`inject-filter-per-user`.
---
stepnum: 8
source:
  file: steps-embed-dashboard-anon-auth.yaml
  ref: authenticated-filterable-fields-dashboard
---
stepnum: 9
title: Copy and save the base URL.
ref: copy-save-base-url-dashboard
---
stepnum: 10
title: Copy and save the dashboard ID.
ref: copy-save-dashboard-id
...
