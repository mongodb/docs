ref: firewall-configuration
edition:
  - cloud
content: |
  Overview
  --------

  |mms| requires access on the ports and IP addresses described here.

  Required Outbound Access
  ------------------------

  The agents connect to |mms| on port ``443``. Whether you provision your
  servers on a cloud service provider or on your own network, configure your network
  infrastructure to allow outbound connections on port ``443``.

  If you wish to restrict outbound access on port ``443`` to specific IP
  addresses, you must keep open the following addresses and domains.

  IP Addresses for GET and POST
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  You must keep open the following addresses on port ``443`` so that the
  agents can ``GET`` AND ``POST`` to the ``api-agents.mongodb.com`` and
  ``api-backup.mongodb.com`` servers:

  - ``54.173.82.137``

  - ``54.175.147.155``
  
  - ``52.21.89.200``

  Domain for Download of MongoDB Binaries
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  The Automation Agents require outbound access on port ``443`` to the
  following domains, depending on your MongoDB edition, for downloading
  MongoDB binaries:

  - For the MongoDB community edition, the Automation Agents require
    outbound access on port ``443`` to download binaries from the
    ``fastdl.mongodb.org`` domain, provided by Amazon CloudFront. The IP
    ranges for CloudFront change frequently. See `the current list of IP
    ranges for CloudFront
    <http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/LocationsOfEdgeServers.html>`_.

  - If you use Automation with `MongoDB Enterprise
    <http://www.mongodb.com/products/mongodb-enterprise>`_, the
    Automation Agents require outbound access on port ``443`` to the
    ``downloads.mongodb.com`` domain in order to download the Enterprise
    binaries.

  - If you use automation with a custom build of MongoDB, the custom
    build must be available at a URL accessible to the Automation Agent.
    It could, for example, be served by a web server running inside an
    isolated network environment. The custom build's ``Git Version``
    field must be set to the output of the following command, issued on
    the target binary.

    .. code-block:: javascript

       mongod --version

  Required Inbound Access
  -----------------------

  Auto-Provisioning
  ~~~~~~~~~~~~~~~~~

  If you use |mms| :doc:`provisioning </tutorial/nav/provision-cloud-servers>`,
  you must grant SSH access to the following ranges at minimum:

  - ``4.71.186.128/25``

  - ``4.35.16.128/25``

  .. important::

     MongoDB reserves the right to change these IP addresses at any time
     without user notice.

  For additional information, see :doc:`/tutorial/nav/provision-cloud-servers`.

  Backup SCP Restores
  ~~~~~~~~~~~~~~~~~~~

  If you use SCP as the :ref:`delivery method <delivery-methods-file-formats>` when
  restoring a snapshot, you must grant SSH access to the following ranges at minimum:

  - ``4.71.186.128/25``

  - ``4.35.16.128/25``

  .. important::

     MongoDB reserves the right to change these IP addresses at any time
     without user notice.

  Required Ports on Your Network
  ------------------------------

  All MongoDB processes in a deployment must be accessible to all |mms|
  agents managing processes in that deployment.
  Therefore, all MongoDB ports must be open to every server that hosts an
  Automation, Monitoring or Backup Agent. For example, if you are running
  MongoDB processes on ``27000``, ``27017`` and ``27020``, then those
  three ports must be open from all servers that are hosting an
  Agent.
---
ref: firewall-configuration
edition: onprem
content: |

  .. important:: 
     To run |mms| without an Internet connection, see
     :doc:`/tutorial/configure-local-mode/` to ensure you have all of
     the necessary binaries to run |mms| without an Internet 
     connection.

  Ports Required to Use |mms|
  ```````````````````````````

  * Both |mms| users and |mms| agents must be able to connect to |mms|
    application over HTTP(S). See :doc:`/tutorial/manage-ports/` to set a
    non-default port for |mms|.
  * |mms| must be able to connect to the backing MongoDB databases
    running ``mongod``.
  * For each |mms| group, |mms| agents must be able to connect to all
    client MongoDB processes (``mongod`` or ``mongos``).
  * The |mms| application must also be able to send email to |mms| users.

  To use |mms|, open the following ports to the specified servers. 

  .. list-table::
     :header-rows: 1
     :widths: 15,10,10,15,35,15

     * - Service
       - Default Port
       - Transport
       - Direction
       - Purpose
       - Uses SSL?
       
     * - HTTP
       - 8080
       - TCP
       - Inbound
       - Web connection to |mms| from users and |mms| agents.
       - No

     * - HTTPS
       - 8443
       - TCP
       - Inbound
       - Web connection to |mms| from users and |mms| agents.
       - Yes

     * - HTTP(S)
       - 8090
       - TCP
       - Inbound
       - Provides a health-check endpoint for monitoring |mms|
         through a monitoring service like Zabbix or Nagios. This is
         disabled by default. 

         To enable it, see :ref:`enable-debug-endpoints`. When enabled,
         you can access the endpoint at:
         
         .. code-block:: http

            http://<opsmanagerhost>:8090/health

         The API endpoint provides the ability to check connections
         from the HTTP Service to the 
         :ref:`Ops Manager Application Database <mms-application-database>` 
         and the :ref:`Backup Snapshot Storage <mms-backup-blockstore-database>`.

         A successful response returns the following:

         .. code-block:: json

           {
             "mms_db": "OK",
             "backup_db": "OK"
           }
       - Optional

     * - MongoDB
       - 27010 - 27300
       - TCP
       - Both
       - Connect to MongoDB application, backup and client databases.
       - Optional

     * - :abbr:`SMTP (Simple Mail Transport Protocol)`
       - 25
       - TCP
       - Outbound
       - Send emails from |mms|.
       - No

     * - :abbr:`SMTP (Simple Mail Transport Protocol Secure)`
       - 465
       - TCP
       - Outbound
       - Send emails from |mms|.
       - Yes

  Ports Needed to Administer |mms| Hosts
  ``````````````````````````````````````

  Most |mms| administration can be performed through the user interface.
  Some procedures require access to the operating system. To permit your
  administrators to access your |mms| and MongoDB servers, open the
  following ports to those servers.

  .. list-table::
     :header-rows: 1
     :widths: 15,10,10,15,35,15

     * - Service
       - Default Port
       - Transport
       - Direction
       - Purpose
       - Uses SSL?
       
     * - :abbr:`ssh (Secure Shell)`
       - 22
       - TCP
       - Inbound
       - Linux System administration.
       - Yes
       
     * - :abbr:`RDP (Remote Desktop Connection)`
       - 3389
       - TCP
       - Inbound
       - Windows System administration.
       - No

  Ports Needed to Integrate |mms| with SNMP
  `````````````````````````````````````````

  To send and receive Simple Network Management Protocol (SNMP) messages to and from your MongoDB deployments
  must open the following ports between |mms| and your SNMP Manager.

  .. list-table::
     :header-rows: 1
     :widths: 15,10,10,15,35,15

     * - Service
       - Default Port
       - Transport
       - Direction
       - Purpose
       - Uses SSL?
       
     * - :abbr:`SNMP (Simple Network Management Protocol)`
       - 162
       - UDP
       - Outbound
       - Send Traps to SNMP Manager.
       - No

     * - :abbr:`SNMP (Simple Network Management Protocol)`
       - 11611
       - UDP
       - Inbound
       - Receive requests from SNMP Manager.
       - No

  See :ref:`snmp-heartbeat-configure` to set SNMP to use non-standard
  ports.

  Ports Needed to Authenticate with |mms|
  ```````````````````````````````````````

  MongoDB Enterprise users :doc:`can use Lightweight Directory Access Protocol
  (LDAP) </tutorial/configure-for-ldap-authentication/>` to authenticate |mms|
  users. To authenticate using LDAP, open the following ports on |mms| and
  your LDAP server.

  .. list-table::
     :header-rows: 1
     :widths: 15,10,10,15,35,15

     * - Service
       - Default Port
       - Transport
       - Direction
       - Purpose
       - Uses SSL?
       
     * - :abbr:`LDAP (Lightweight Directory Access Protocol)`
       - 389
       - UDP
       - Both
       - Authenticate and/or authorize |mms| users against LDAP server.
       - No

     * - :abbr:`LDAPS (Lightweight Directory Access Protocol Secure)`
       - 636
       - UDP
       - Both
       - Authenticate and/or authorize |mms| users against LDAP server.
       - Yes

  See :ref:`ldap-settings` to configure LDAP URI strings including ports.

  Ports Needed to Authenticate with MongoDB
  `````````````````````````````````````````

  MongoDB Enterprise users can use Kerberos or LDAP to authenticate
  MongoDB users. To authenticate using LDAP or Kerberos, open the
  following ports between the MongoDB client databases, |mms| and the
  Kerberos or LDAP server(s).

  .. list-table::
     :header-rows: 1
     :widths: 15,10,10,15,35,15

     * - Service
       - Default Port
       - Transport
       - Direction
       - Purpose
       - Uses SSL?
       
     * - Kerberos
       - 88
       - TCP / UDP
       - Outbound
       - Request authentication for MongoDB users against Kerberos
         server.
       - No

     * - Kerberos
       - 88
       - UDP
       - Inbound
       - Receive authentication for MongoDB users against Kerberos
         server.
       - No

     * - LDAP
       - 389
       - UDP
       - Both
       - Authenticate and/or authorize MongoDB users against LDAP
         server.
       - No

     * - LDAPS
       - 636
       - UDP
       - Both
       - Authenticate and/or authorize MongoDB users against LDAP
         server.
       - Yes

  See :ref:`configuration-kerberos-settings` to configure Kerberos
  for authentication to the |mms| application database.

  Ports Needed to Manage Encryption Keys for MongoDB using WiredTiger Storage
  ```````````````````````````````````````````````````````````````````````````

  MongoDB databases stored using WiredTiger can be encrypted on disk. The
  encryption method requires another server to manage the encryption keys. To
  manage encryption keys using Key Management Interoperability Protocol
  (KMIP), open the following port between the MongoDB client databases and the
  :abbr:`KMIP (Key Management Interoperability Protocol)` server(s).

  .. list-table::
     :header-rows: 1
     :widths: 15,10,10,15,35,15

     * - Service
       - Default Port
       - Transport
       - Direction
       - Purpose
       - Uses SSL?
       
     * - :abbr:`KMIP (Key Management Interoperability Protocol)`
       - 5696
       - TCP
       - Both
       - Send messages between MongoDB databases and 
         :abbr:`KMIP (Key Management Interoperability Protocol)` server.
       - No

...
