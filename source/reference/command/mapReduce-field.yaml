#content from this page is included in /reference/method/mapReduce-args-field.yaml
object:
  name: mapReduce
  type: command
field:
  optional: false
  type: field
name: mapReduce
type: collection
position: 0
description: |
  The name of the collection on which you want to perform map-reduce.
---
object:
  name: mapReduce
  type: command
field:
  optional: false
  type: field
name: map
type: Javascript function
position: 1
description: |
  A JavaScript function that associates or "maps" a ``value`` with a
  ``key`` and emits the ``key`` and value ``pair``. 
  
  See :ref:`mapReduce-map-cmd` for more information.
---
object:
  name: mapReduce
  type: command
field:
  optional: false
  type: field
name: reduce
type: JavaScript function
position: 2
description: |
  A JavaScript function that "reduces" to a single object all the
  ``values`` associated with a particular ``key``.

  See :ref:`mapReduce-reduce-cmd` for more information.
---
object:
  name: mapReduce
  type: command
field:
  optional: false
  type: field
name: out
type: string
position: 3
description: |
  Specifies the location of the result of the map-reduce operation.
  You can output to a collection, output to a collection with an
  action, or output inline. You may output to a collection when
  performing map reduce operations on the primary members of the set;
  on :term:`secondary` members you may only use the ``inline`` output.

  See :ref:`mapReduce-out-cmd` for more information.
---
object:
  name: mapReduce
  type: command
field:
  optional: true
  type: field
name: query
type: document
position: 4
description: |
  Specifies the selection criteria using :doc:`query operators
  </reference/operator>` for determining the documents input to the
  ``map`` function.
---
object:
  name: mapReduce
  type: command
field:
  optional: true
  type: field
name: sort
type: Boolean
position: 5
description: |
  Sorts the *input* documents. This option is useful for
  optimization. For example, specify the sort key to be the same as
  the emit key so that there are fewer reduce operations. The sort key
  must be in an existing index for this collection.
---
object:
  name: mapReduce
  type: command
field:
  optional: true
  type: field
name: limit
type: number
position: 6
description: |
  Specifies a maximum number of documents to return from the 
  collection.
---
object:
  name: mapReduce
  type: command
field:
  optional: true
  type: field
name: finalize
type: Javascript function
position: 7
description: |
  Follows the ``reduce`` method and modifies the output.
  
  See :ref:`mapReduce-finalize-cmd` for more information.
---
object:
  name: mapReduce
  type: command
field:
  optional: true
  type: field
name: scope
type: document
position: 8
description: |
  Specifies global variables that are accessible in the ``map``,
  ``reduce`` and ``finalize`` functions.
---
object:
  name: mapReduce
  type: command
field:
  optional: true
  type: field
name: jsMode
type: Boolean
position: 9
description: |
  Optional. Specifies whether to convert intermediate data into BSON
  format between the execution of the ``map`` and ``reduce``
  functions. Defaults to false.

  If ``false``:

   - Internally, MongoDB converts the JavaScript objects emitted
     by the ``map``
     function to BSON objects. These BSON
     objects are then converted back to JavaScript objects when
     calling the ``reduce`` function.

   - The map-reduce operation places the intermediate BSON objects
     in temporary, on-disk storage. This allows the map-reduce
     operation to execute over arbitrarily large data sets.

   If ``true``:

   - Internally, the JavaScript objects emitted during ``map``
     function remain as JavaScript objects. There is no need to
     convert the objects for the ``reduce`` function, which
     can result in faster execution.

   - You can only use ``jsMode`` for result sets with fewer than
     500,000 distinct ``key`` arguments to the mapper's ``emit()``
     function.

   The ``jsMode`` defaults to false.
---
object:
  name: mapReduce
  type: command
field:
  optional: true
  type: field
name: verbose
type: Boolean
position: 10
description: |
  Specifies whether to include the ``timing`` information in the
  result information. The ``verbose`` defaults to ``true`` to include
  the ``timing`` information.
...