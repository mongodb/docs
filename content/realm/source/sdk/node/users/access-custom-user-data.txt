.. meta::
   :robots: noindex, nosnippet

.. _node-access-custom-user-data:

=====================================
Access Custom User Data - Node.js SDK
=====================================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

You can store arbitrary custom data about your
users with Atlas App Services. For example,
you might store a user's preferred language, date of birth, or local
timezone. Before writing and reading this data, you must enable custom user data
in the backend. To learn more, see :ref:`Enable Custom User Data <custom-user-data>`.

Before You Begin
----------------

To use custom user data, you must first enable custom user data
in App Services:

#. :ref:`Create an App <create-a-realm-app>`.
#. :ref:`Enable custom user data <enable-custom-user-data-procedure>`.
#. :ref:`Create a user <node-create-and-delete-users>` to apply custom data to.

Read Custom User Data
---------------------

You retrieve custom user data in the :js-sdk:`customData <classes/User.html#customData>`
property of the ``User`` object:

.. literalinclude:: /examples/generated/node/custom-user-data.snippet.read-custom-user-data.js
  :language: javascript

App Services **does not immediately update** the value of the
``User.customData`` when underlying data changes. Instead, App Services
fetches the most recent version of custom user data whenever a user
refreshes their :ref:`access token <user-sessions>` or when you explicitly
call :js-sdk:`refreshCustomData() <classes/User.html#refreshCustomData>`,
which ensures your app has the latest custom user data.

.. literalinclude:: /examples/generated/node/custom-user-data.snippet.refresh-custom-user-data.js
  :language: javascript

.. note::

   The ``customData`` field of the user object is read-only from a Node application.

Write to Custom User Data with a MongoClient
--------------------------------------------

Using standard CRUD operations through the :ref:`MongoDB Atlas service
<data-sources>` and a :ref:`mongoClient <node-mongodb-data-access>`, you can access
a user's custom data. The following example updates a user's custom data to alter
the user's ``favoriteColor`` to pink.

.. literalinclude:: /examples/generated/node/custom-user-data.snippet.write-custom-user-data.js
  :language: javascript

.. include:: /includes/write-access-to-custom-data-note.rst
