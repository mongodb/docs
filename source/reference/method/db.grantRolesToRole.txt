=====================
db.grantRolesToRole()
=====================

.. default-domain:: mongodb

Definition
----------

.. method:: db.grantRolesToRole ( rolename, roles, writeConcern )

   Grants roles to a :ref:`user-defined role <user-defined-roles>`.

   The :method:`grantRolesToRole` method uses the following syntax:

   .. code-block:: javascript

      db.grantRolesToRole( "<rolename>", [ <roles> ], { <writeConcern> } )

   The :method:`grantRolesToRole` method takes the following arguments:

   .. include:: /reference/method/db.grantRolesToRole-param.rst

   .. |local-cmd-name| replace:: :method:`db.grantRolesToRole()`
   .. include:: /includes/fact-roles-array-contents.rst

   The :method:`db.grantRolesToRole()` method wraps the
   :dbcommand:`grantRolesToRole` command.

Behavior
--------

.. include:: /includes/fact-roles-inheritance.rst

Required Access
---------------

.. include:: /includes/access-grant-roles.rst

Example
-------

.. TODO Update this example

The following :method:`grantRolesToRole()` operation updates the
``productsReaderWriter`` role in the ``products`` database to :ref:`inherit
<inheritance>` the :ref:`privileges <privileges>` of ``productsReader`` role:

.. code-block:: javascript

   use products
   db.grantRolesToRole(
       "productsReaderWriter",
       [ "productsReader" ],
       { w: "majority" , wtimeout: 5000 }
   )
