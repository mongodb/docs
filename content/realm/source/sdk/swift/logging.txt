.. meta::
   :robots: noindex, nosnippet

.. _swift-logging:
.. _swift-set-custom-logger:

===================
Logging - Swift SDK
===================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

You can set or change your app's log level when developing or debugging 
your application. You might want to change the log level to log different 
amounts of data depending on your development needs.

.. seealso::

   This page shows how to set a Realm logger, which was added
   in Realm Swift SDK v10.39.0. This supersedes setting the Sync client 
   log level in earlier versions of the Realm Swift SDK. For information 
   on how to set the Sync client log level in an earlier version, refer to
   :ref:`swift-sync-log-level`.

.. _swift-set-realm-log-level-log-level:

Set or Change the Realm Log Level
---------------------------------

You can set the level of detail reported by the Realm Swift SDK. Set the
log level for the default logger with ``Logger.shared.level``:

.. literalinclude:: /examples/generated/code/start/Logging.snippet.set-log-level.swift
   :language: swift

The :objc-sdk:`RLMLogLevel <Enums/RLMLogLevel.html>` enum represents the 
different levels of logging you can configure.

You can change the log level to increase or decrease verbosity at different 
points in your code. This behavior differs from the deprecated 
:ref:`sync client log level <swift-sync-log-level>`, which had to be set
before opening a synced realm and could not be changed.

.. literalinclude:: /examples/generated/code/start/Logging.snippet.change-log-level.swift
   :language: swift

Set the Logger Before Initializing an App Client
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

When you initialize an :ref:`App client <ios-init-appclient>`, the Swift SDK
caches the configuration for the App. Changing to the App configuration
after initialization does not have any effect. This includes setting a 
logger. Initializing an App reads the current shared logger and stores that. 

However, changing the log level for an existing logger does work at any time.

.. _swift-turn-off-logging:

Turn Off Logging
----------------

The default log threshold level for the Realm Swift SDK is ``.info``. This 
displays some information in the console. You can disable logging entirely
by setting the log level to ``.off``:

.. literalinclude:: /examples/generated/code/start/Logging.snippet.turn-logging-off.swift
   :language: swift

.. _swift-customize-logging-function:

Customize the Logging Function
------------------------------

Initialize an instance of a :swift-sdk:`Logger <Typealiases.html#/s:10RealmSwift6Loggera>` 
and define the function to use for logging.

.. literalinclude:: /examples/generated/code/start/Logging.snippet.define-custom-logger.swift
   :language: swift

.. include:: /includes/tip-sync-log-levels.rst

You can set a logger as the default logger for your app with ``Logger.shared``. 
After you set the default logger, you can change the log level during the app 
lifecycle as needed.

.. literalinclude:: /examples/generated/code/start/Logging.snippet.set-default-logger.swift
   :language: swift
