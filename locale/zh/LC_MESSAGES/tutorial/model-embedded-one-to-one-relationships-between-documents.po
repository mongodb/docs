#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/model-embedded-one-to-one-relationships-between-documents.txt:5
msgid "Model One-to-One Relationships with Embedded Documents"
msgstr "一对一关系建模：内嵌文档模型"

#: ../source/tutorial/model-embedded-one-to-one-relationships-between-documents.txt:16
msgid "Overview"
msgstr "概述"

#: ../source/tutorial/model-embedded-one-to-one-relationships-between-documents.txt:18
msgid ""
"Data in MongoDB has a *flexible schema*. :term:`Collections <collection>` do"
" not enforce :term:`document` structure. Decisions that affect how you model"
" data can affect application performance and database capacity. See "
":doc:`/core/data-models` for a full high level overview of data modeling in "
"MongoDB."
msgstr ""
"MongoDB的数据具有 *灵活的模式* 。 :term:`集合 <collection>` 本身没有"
"对文档结构的规则性校验。 但是你建模时所作的决定会影响到应用程序的性能和数据库的处理能力。" 
"参见 :doc:`/core/data-models` 以更多的了解一些关于MongoDB数据建模全面介绍。"

#: ../source/tutorial/model-embedded-one-to-one-relationships-between-documents.txt:24
msgid ""
"This document describes a data model that uses :ref:`embedded <data-"
"modeling-embedding>` documents to describe relationships between connected "
"data."
msgstr ""
"这篇文章讲述了如何使用 :ref:`内嵌 <data-modeling-embedding>` 文档模型来描述数据的关联性。"

#: ../source/tutorial/model-embedded-one-to-one-relationships-between-documents.txt:29
msgid "Pattern"
msgstr "范式"

#: ../source/tutorial/model-embedded-one-to-one-relationships-between-documents.txt:31
msgid ""
"Consider the following example that maps patron and address relationships. "
"The example illustrates the advantage of embedding over referencing if you "
"need to view one data entity in context of the other. In this one-to-one "
"relationship between ``patron`` and ``address`` data, the ``address`` "
"belongs to the ``patron``."
msgstr ""
"让我们来看一个针对于顾客和地址关系建模的一个例子。"
"通过这个例子中我们可以明白在需要同时看到两个数据的场景下，使用内嵌会比使用引用更有优越性。"
"在这个顾客和地址的一对一的关系中，``address`` 是属于 ``patron``的。"

#: ../source/tutorial/model-embedded-one-to-one-relationships-between-documents.txt:37
msgid ""
"In the normalized data model, the ``address`` document contains a reference "
"to the ``patron`` document."
msgstr ""
"在一个规范化的数据模型中， ``address`` 文档包含一个对父文档 ``patron`` 的引用。"

#: ../source/tutorial/model-embedded-one-to-one-relationships-between-documents.txt:55
msgid ""
"If the ``address`` data is frequently retrieved with the ``name`` "
"information, then with referencing, your application needs to issue multiple"
" queries to resolve the reference. The better data model would be to embed "
"the ``address`` data in the ``patron`` data, as in the following document:"
msgstr ""
"假如 ``address`` 信息会经常和 ``name`` 字段一起被查询出来并显示， 那么应用程序必须发出"
"额外的请求去解析并读取父文档。在这里更好的选择是把 ``address`` 数据直接内嵌到 ``patron`` "
"文档里面，如下所示:"

#: ../source/tutorial/model-embedded-one-to-one-relationships-between-documents.txt:74
msgid ""
"With the embedded data model, your application can retrieve the complete "
"patron information with one query."
msgstr ""


#: ../source/tutorial/model-embedded-one-to-one-relationships-between-documents.txt:0
msgid "On this page"
msgstr ""

