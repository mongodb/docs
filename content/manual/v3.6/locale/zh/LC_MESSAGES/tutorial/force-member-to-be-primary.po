#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/tutorial/force-member-to-be-primary.txt:3
msgid "Force a Member to Become Primary"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:14
msgid "Overview"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:16
msgid ""
"You can force a :term:`replica set` member to become :term:`primary` by "
"giving it a higher :rsconf:`members[n].priority` value than any other "
"member in the set."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:21
msgid ""
"Optionally, you also can force a member never to become primary by "
"setting its :rsconf:`members[n].priority` value to ``0``, which means the"
" member can never seek :ref:`election <replica-set-elections>` as "
"primary. For more information, see :ref:`replica-set-secondary-only-"
"members`."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:27
msgid "For more information on priorities, see :rsconf:`members[n].priority`."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:31
msgid "Consideration"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:33
msgid ""
"A majority of the configured members of a replica set *must* be available"
" for a set to reconfigure a set or elect a primary. See :doc:`/core"
"/replica-set-elections` for more information."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:38
msgid "Procedures"
msgstr ""

#: ../source/includes/extracts/rs-stepdown-election-handoff.rst:4
msgid ""
"If the parameter :parameter:`enableElectionHandoff` is true (default), "
"when a primary steps down from :method:`rs.stepDown()` (or the "
":dbcommand:`replSetStepDown` command without the ``force: true``), the "
"stepped-down primary nominates an eligible secondary to call an election "
"immediately. Otherwise, secondaries can wait up to "
":rsconf:`settings.electionTimeoutMillis` before calling an election. The "
"stepped down primary does not wait for the effects of the handoff. For "
"more information, see :parameter:`enableElectionHandoff`."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:47
msgid "Force a Member to be Primary by Setting its Priority High"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:49
msgid ""
"This procedure assumes your current :term:`primary` is ``m1.example.net``"
" and that you'd like to instead make ``m3.example.net`` primary. The "
"procedure also assumes you have a three-member :term:`replica set` with "
"the configuration below. For more information on configurations, see "
":ref:`Replica Set Configuration Use <replica-set-reconfiguration-usage>`."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:55
msgid "This procedure assumes this configuration:"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:78
msgid ""
"In a :binary:`~bin.mongo` shell connected to the primary, use the "
"following sequence of operations to make ``m3.example.net`` the primary:"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:89
msgid ""
"The last statement calls :method:`rs.reconfig()` with the modified "
"configuration document to configure ``m3.example.net`` to have a higher "
":rsconf:`members[n].priority` value than the other :binary:`~bin.mongod` "
"instances."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:94
msgid "The following sequence of events occur:"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:96
msgid ""
"``m3.example.net`` and ``m2.example.net`` sync with ``m1.example.net`` "
"(typically within 10 seconds)."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:99
msgid ""
"``m1.example.net`` sees that it no longer has highest priority and, in "
"most cases, steps down. ``m1.example.net`` *does not* step down if "
"``m3.example.net``'s sync is far behind. In that case, ``m1.example.net``"
" waits until ``m3.example.net`` is within 10 seconds of its optime and "
"then steps down. This minimizes the amount of time with no primary "
"following failover."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:106
msgid ""
"The step down forces on election in which ``m3.example.net`` becomes "
"primary based on its :data:`priority "
"<replSetGetConfig.members[n].priority>` setting."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:110
msgid ""
"Optionally, if ``m3.example.net`` is more than 10 seconds behind "
"``m1.example.net``'s optime, and if you don't need to have a primary "
"designated within 10 seconds, you can force ``m1.example.net`` to step "
"down by running:"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:119
msgid ""
"This prevents ``m1.example.net`` from being primary for 86,400 seconds "
"(24 hours), even if there is no other member that can become primary. "
"When ``m3.example.net`` catches up with ``m1.example.net`` it will become"
" primary."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:124
msgid ""
"If you later want to make ``m1.example.net`` primary again while it waits"
" for ``m3.example.net`` to catch up, issue the following command to make "
"``m1.example.net`` seek election again:"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:133
msgid ""
"The :method:`rs.freeze()` provides a wrapper around the "
":dbcommand:`replSetFreeze` database command."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:139
msgid "Force a Member to be Primary Using Database Commands"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:141
msgid "Consider a :term:`replica set` with the following members:"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:143
msgid "``mdb0.example.net`` - the  current :term:`primary`."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:144
msgid "``mdb1.example.net`` - a :term:`secondary`."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:145
msgid "``mdb2.example.net`` - a secondary ."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:147
msgid "To force a member to become primary use the following procedure:"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:149
msgid ""
"In a :binary:`~bin.mongo` shell, run :method:`rs.status()` to ensure your"
" replica set is running as expected."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:152
msgid ""
"In a :binary:`~bin.mongo` shell connected to the :binary:`~bin.mongod` "
"instance running on ``mdb2.example.net``, freeze ``mdb2.example.net`` so "
"that it does not attempt to become primary for 120 seconds."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:161
msgid ""
"In a :binary:`~bin.mongo` shell connected the :binary:`~bin.mongod` "
"running on ``mdb0.example.net``, step down this instance that the "
":binary:`~bin.mongod` is not eligible to become primary for 120 seconds:"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:170
msgid "``mdb1.example.net`` becomes primary."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:172
msgid ""
"During the transition, there is a short window where the set does not "
"have a primary."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:175
msgid ""
"For more information, consider the :method:`rs.freeze()` and "
":method:`rs.stepDown()` methods that wrap the :dbcommand:`replSetFreeze` "
"and :dbcommand:`replSetStepDown` commands."
msgstr ""

#~ msgid ""
#~ "You can force a :term:`replica set` "
#~ "member to become :term:`primary` by "
#~ "giving it a higher "
#~ ":data:`~replSetGetConfig.members[n].priority` value than"
#~ " any other member in the set."
#~ msgstr ""

#~ msgid ""
#~ "Optionally, you also can force a "
#~ "member never to become primary by "
#~ "setting its :data:`~replSetGetConfig.members[n].priority`"
#~ " value to ``0``, which means the "
#~ "member can never seek :ref:`election "
#~ "<replica-set-elections>` as primary. For"
#~ " more information, see :ref:`replica-"
#~ "set-secondary-only-members`."
#~ msgstr ""

#~ msgid ""
#~ "For more information on priorities, see"
#~ " :data:`~replSetGetConfig.members[n].priority`."
#~ msgstr ""

#~ msgid ""
#~ "The last statement calls "
#~ ":method:`rs.reconfig()` with the modified "
#~ "configuration document to configure "
#~ "``m3.example.net`` to have a higher "
#~ ":data:`replSetGetConfig.members[n].priority` value than"
#~ " the other :program:`mongod` instances."
#~ msgstr ""

#~ msgid ""
#~ "In a :program:`mongo` shell connected to"
#~ " the primary, use the following "
#~ "sequence of operations to make "
#~ "``m3.example.net`` the primary:"
#~ msgstr ""

#~ msgid ""
#~ "In a :program:`mongo` shell, run "
#~ ":method:`rs.status()` to ensure your replica"
#~ " set is running as expected."
#~ msgstr ""

#~ msgid ""
#~ "In a :program:`mongo` shell connected to"
#~ " the :program:`mongod` instance running on"
#~ " ``mdb2.example.net``, freeze ``mdb2.example.net`` "
#~ "so that it does not attempt to "
#~ "become primary for 120 seconds."
#~ msgstr ""

#~ msgid ""
#~ "In a :program:`mongo` shell connected "
#~ "the :program:`mongod` running on "
#~ "``mdb0.example.net``, step down this instance"
#~ " that the :program:`mongod` is not "
#~ "eligible to become primary for 120 "
#~ "seconds:"
#~ msgstr ""

#~ msgid "On this page"
#~ msgstr ""

#~ msgid ""
#~ "The last statement calls "
#~ ":method:`rs.reconfig()` with the modified "
#~ "configuration document to configure "
#~ "``m3.example.net`` to have a higher "
#~ ":rsconf:`members[n].priority` value than the "
#~ "other :program:`mongod` instances."
#~ msgstr ""

