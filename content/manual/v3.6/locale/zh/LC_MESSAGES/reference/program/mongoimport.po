#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/reference/program/mongoimport.txt:5
msgid "``mongoimport``"
msgstr ""

#: ../source/includes/admonition-mac-osx-sierra-restriction.rst:1
msgid "Mac OSX Sierra and Go 1.6 Incompatibility"
msgstr ""

#: ../source/includes/admonition-mac-osx-sierra-restriction.rst:3
msgid ""
"Users running on Mac OSX Sierra require the 3.2.10 or newer version of  "
"|tool-binary|."
msgstr ""

#: ../source/reference/program/mongoimport.txt:19
msgid "Synopsis"
msgstr ""

#: ../source/reference/program/mongoimport.txt:21
msgid ""
"The :binary:`~bin.mongoimport` tool imports content from an "
":doc:`Extended JSON </reference/mongodb-extended-json>`, CSV, or TSV "
"export created by :binary:`~bin.mongoexport`, or potentially, another "
"third-party export tool."
msgstr ""

#: ../source/reference/program/mongoimport.txt:26
msgid ""
"See the :doc:`mongoexport` document for more information regarding "
":binary:`~bin.mongoexport`, which provides the inverse \"exporting\" "
"capability."
msgstr ""

#: ../source/includes/extracts/require-cmd-line-mongoimport.rst:1
msgid ""
"Run :binary:`~bin.mongoimport` from the system command line, not the "
":binary:`~bin.mongo` shell."
msgstr ""

#: ../source/reference/program/mongoimport.txt:33
msgid "Considerations"
msgstr ""

#: ../source/includes/fact-type-fidelity-loss.rst:4
msgid ""
"Avoid using :binary:`~bin.mongoimport` and :binary:`~bin.mongoexport` for"
" full instance production backups. They do not reliably preserve all rich"
" :term:`BSON` data types, because :term:`JSON` can only represent a "
"subset of the types supported by BSON. Use :binary:`~bin.mongodump` and "
":binary:`~bin.mongorestore` as described in :doc:`/core/backups` for this"
" kind of functionality."
msgstr ""

#: ../source/reference/program/mongoimport.txt:37
msgid ""
":binary:`~bin.mongoexport` and :binary:`~bin.mongoimport` use the "
":doc:`strict mode representation </reference/mongodb-extended-json>` for "
"certain types."
msgstr ""

#: ../source/reference/program/mongoimport.txt:41
msgid ""
":binary:`~bin.mongoimport` only supports data files that are UTF-8 "
"encoded. Using other encodings will produce errors."
msgstr ""

#: ../source/reference/program/mongoimport.txt:45
msgid "Required Access"
msgstr ""

#: ../source/reference/program/mongoimport.txt:47
msgid ""
"In order to connect to a :binary:`~bin.mongod` that enforces "
"authorization with the :option:`--auth <mongod --auth>` option, you must "
"use the :option:`--username <mongoexport --username>` and "
":option:`--password <mongoexport --password>` options. The connecting "
"user must possess, at a minimum, the :authrole:`readWrite` role on the "
"database into which they are importing data."
msgstr ""

#: ../source/reference/program/mongoimport.txt:55
msgid "Options"
msgstr ""

#: ../source/includes/extracts/fact-3.0-tools-drop-dbpath-support-mongoimport.rst:5
msgid ""
":binary:`~bin.mongoimport` removed the ``--dbpath`` as well as related "
"``--directoryperdb`` and ``--journal`` options. To use "
":binary:`~bin.mongoimport`, you must run :binary:`~bin.mongoimport` "
"against a running :binary:`~bin.mongod` or :binary:`~bin.mongos` instance"
" as appropriate."
msgstr ""

#: ../source/includes/option/option-mongoimport-help.rst:3
msgid "Returns information on the options and use of :program:`mongoimport`."
msgstr ""

#: ../source/includes/option/option-mongoimport-verbose.rst:3
msgid ""
"Increases the amount of internal reporting returned on standard output or"
" in log files. Increase the verbosity with the ``-v`` form by including "
"the option multiple times, (e.g. ``-vvvvv``.)"
msgstr ""

#: ../source/includes/option/option-mongoimport-quiet.rst:3
msgid ""
"Runs :program:`mongoimport` in a quiet mode that attempts to limit the "
"amount of output."
msgstr ""

#: ../source/includes/option/option-mongoimport-quiet.rst:6
msgid "This option suppresses:"
msgstr ""

#: ../source/includes/option/option-mongoimport-quiet.rst:8
msgid "output from :term:`database commands <database command>`"
msgstr ""

#: ../source/includes/option/option-mongoimport-quiet.rst:10
msgid "replication activity"
msgstr ""

#: ../source/includes/option/option-mongoimport-quiet.rst:12
msgid "connection accepted events"
msgstr ""

#: ../source/includes/option/option-mongoimport-quiet.rst:14
msgid "connection closed events"
msgstr ""

#: ../source/includes/option/option-mongoimport-version.rst:3
msgid "Returns the :program:`mongoimport` release number."
msgstr ""

#: ../source/includes/option/option-mongoimport-uri.rst:5
msgid ""
"Specify a resolvable :doc:`URI </reference/connection-string/>` "
"connection string for the :binary:`~bin.mongod` to which to connect."
msgstr ""

#: ../source/includes/option/option-mongoimport-uri.rst:9
msgid ""
"The following is the standard :doc:`URI </reference/connection-string/>` "
"connection scheme:"
msgstr ""

#: ../source/includes/option/option-mongoimport-uri.rst:16
msgid ""
"For detailed explanations of the components of this string, refer to the "
":doc:`Connection String URI Format </reference/connection-string/>` "
"documentation."
msgstr ""

#: ../source/includes/option/option-mongoimport-uri.rst:23
msgid ""
"The following :binary:`~bin.mongoimport` options are incompatible with "
"the ``--uri`` option. Instead, specify these options as part of your "
"``--uri`` connection string when applicable:"
msgstr ""

#: ../source/includes/option/option-mongoimport-uri.rst:27
msgid "``--host``"
msgstr ""

#: ../source/includes/option/option-mongoimport-uri.rst:28
msgid "``--port``"
msgstr ""

#: ../source/includes/option/option-mongoimport-uri.rst:29
msgid "``--db``"
msgstr ""

#: ../source/includes/option/option-mongoimport-uri.rst:30
msgid "``--username``"
msgstr ""

#: ../source/includes/option/option-mongoimport-uri.rst:31
msgid ""
"``--password`` (when specifying the password as part of the :doc:`URI "
"</reference/connection-string/>` connection string)"
msgstr ""

#: ../source/includes/option/option-mongoimport-uri.rst:33
msgid "``--authenticationDatabase``"
msgstr ""

#: ../source/includes/option/option-mongoimport-uri.rst:34
msgid "``--authenticationMechanism``"
msgstr ""

#: ../source/includes/option/option-mongoimport-host.rst:3
msgid "*Default*: localhost:27017"
msgstr ""

#: ../source/includes/option/option-mongoimport-host.rst:5
msgid ""
"Specifies a resolvable hostname for the :binary:`~bin.mongod` to which to"
" connect. By default, the :program:`mongoimport` attempts to connect to a"
" MongoDB instance running on the localhost on port number ``27017``."
msgstr ""

#: ../source/includes/option/option-mongoimport-host.rst:9
msgid ""
"To connect to a replica set, specify the "
":setting:`~replication.replSetName` and a seed list of set members, as in"
" the following:"
msgstr ""

#: ../source/includes/option/option-mongoimport-host.rst:17
msgid ""
"When specifying the replica set list format, :program:`mongoimport` "
"always connects to the :term:`primary <Primary>`."
msgstr ""

#: ../source/includes/option/option-mongoimport-host.rst:20
msgid ""
"You can also connect to any single member of the replica set by "
"specifying the host and port of only that member:"
msgstr ""

#: ../source/includes/option/option-mongoimport-host.rst:27
msgid ""
"If you use IPv6 and use the ``<address>:<port>`` format, you must enclose"
" the portion of an address and port combination in brackets (e.g. "
"``[<address>]``)."
msgstr ""

#: ../source/includes/option/option-mongoimport-port.rst:3
msgid "*Default*: 27017"
msgstr ""

#: ../source/includes/option/option-mongoimport-port.rst:5
msgid ""
"Specifies the TCP port on which the MongoDB instance listens for client "
"connections."
msgstr ""

#: ../source/includes/option/option-mongoimport-ipv6.rst:3
msgid "*Removed in version 3.0.*"
msgstr ""

#: ../source/includes/option/option-mongoimport-ipv6.rst:5
msgid ""
"Enables IPv6 support and allows :program:`mongoimport` to connect to the "
"MongoDB instance using an IPv6 network. Prior to MongoDB 3.0, you had to "
"specify :option:`--ipv6` to use IPv6. In MongoDB 3.0 and later, IPv6 is "
"always enabled."
msgstr ""

#: ../source/includes/option/option-mongoimport-ssl.rst:5
msgid ""
"Enables connection to a :binary:`~bin.mongod` or :binary:`~bin.mongos` "
"that has TLS/SSL support enabled."
msgstr ""

#: ../source/includes/extracts/ssl-facts-see-more.rst:1
msgid ""
"For more information about TLS/SSL and MongoDB, see :doc:`/tutorial"
"/configure-ssl` and :doc:`/tutorial/configure-ssl-clients` ."
msgstr ""

#: ../source/includes/option/option-mongoimport-sslCAFile.rst:5
msgid ""
"Specifies the :file:`.pem` file that contains the root certificate chain "
"from the Certificate Authority. Specify the file name of the :file:`.pem`"
" file using relative or absolute paths."
msgstr ""

#: ../source/includes/extracts/ssl-facts-ca-file.rst:2
msgid ""
"Starting in version 3.4, if ``--sslCAFile`` or ``ssl.CAFile`` is not "
"specified and you are not using x.509 authentication, the system-wide CA "
"certificate store will be used when connecting to an TLS/SSL-enabled "
"server."
msgstr ""

#: ../source/includes/extracts/ssl-facts-x509-ca-file.rst:2
msgid ""
"If using x.509 authentication, ``--sslCAFile`` or ``ssl.CAFile`` must be "
"specified."
msgstr ""

#: ../source/includes/option/option-mongoimport-sslCAFile.rst:13
msgid ""
"**Version 3.2 and earlier:** For TLS/SSL connections (``--ssl``) to "
":binary:`~bin.mongod` and :binary:`~bin.mongos`, if the "
":program:`mongoimport` runs without the :option:`--sslCAFile`, "
":program:`mongoimport` will not attempt to validate the server "
"certificates. This creates a vulnerability to expired "
":binary:`~bin.mongod` and :binary:`~bin.mongos` certificates as well as "
"to foreign processes posing as valid :binary:`~bin.mongod` or "
":binary:`~bin.mongos` instances. Ensure that you *always* specify the CA "
"file to validate the server certificates in cases where intrusion is a "
"possibility."
msgstr ""

#: ../source/includes/option/option-mongoimport-sslPEMKeyFile.rst:5
msgid ""
"Specifies the :file:`.pem` file that contains both the TLS/SSL "
"certificate and key. Specify the file name of the :file:`.pem` file using"
" relative or absolute paths."
msgstr ""

#: ../source/includes/option/option-mongoimport-sslPEMKeyFile.rst:9
msgid ""
"This option is required when using the :option:`--ssl` option to connect "
"to a :binary:`~bin.mongod` or :binary:`~bin.mongos` that has "
":setting:`~net.ssl.CAFile` enabled *without* "
":setting:`~net.ssl.allowConnectionsWithoutCertificates`."
msgstr ""

#: ../source/includes/option/option-mongoimport-sslPEMKeyPassword.rst:5
msgid ""
"Specifies the password to de-crypt the certificate-key file (i.e. "
":option:`--sslPEMKeyFile`). Use the :option:`--sslPEMKeyPassword` option "
"only if the certificate-key file is encrypted. In all cases, the "
":program:`mongoimport` will redact the password from all logging and "
"reporting output."
msgstr ""

#: ../source/includes/option/option-mongoimport-sslPEMKeyPassword.rst:10
msgid ""
"If the private key in the PEM file is encrypted and you do not specify "
"the :option:`--sslPEMKeyPassword` option, the :program:`mongoimport` will"
" prompt for a passphrase. See :ref:`ssl-certificate-password`."
msgstr ""

#: ../source/includes/option/option-mongoimport-sslCRLFile.rst:5
msgid ""
"Specifies the :file:`.pem` file that contains the Certificate Revocation "
"List. Specify the file name of the :file:`.pem` file using relative or "
"absolute paths."
msgstr ""

#: ../source/includes/option/option-mongoimport-sslAllowInvalidCertificates.rst:5
msgid ""
"Bypasses the validation checks for server certificates and allows the use"
" of invalid certificates. When using the "
":setting:`~net.ssl.allowInvalidCertificates` setting, MongoDB logs as a "
"warning the use of the invalid certificate."
msgstr ""

#: ../source/includes/extracts/ssl-facts-x509-invalid-certificate.rst:2
msgid ""
"Starting in MongoDB 3.6.6, if you specify "
"``--sslAllowInvalidCertificates`` or ``ssl.allowInvalidCertificates: "
"true`` when using x.509 authentication, an invalid certificate is only "
"sufficient to establish a TLS/SSL connection but is *insufficient* for "
"authentication."
msgstr ""

#: ../source/includes/extracts/ssl-facts-invalid-cert-warning-clients.rst:4
msgid ""
"For TLS/SSL connections to :binary:`~bin.mongod` and "
":binary:`~bin.mongos`, avoid using ``--sslAllowInvalidCertificates`` if "
"possible and only use ``--sslAllowInvalidCertificates`` on systems where "
"intrusion is not possible."
msgstr ""

#: ../source/includes/extracts/ssl-facts-invalid-cert-warning-clients.rst:10
msgid ""
"If the :binary:`~bin.mongo` shell (and other :ref:`mongodb-tools-support-"
"ssl`) runs with the ``--sslAllowInvalidCertificates`` option, the "
":binary:`~bin.mongo` shell (and other :ref:`mongodb-tools-support-ssl`) "
"will not attempt to validate the server certificates. This creates a "
"vulnerability to expired :binary:`~bin.mongod` and :binary:`~bin.mongos` "
"certificates as well as to foreign processes posing as valid "
":binary:`~bin.mongod` or :binary:`~bin.mongos` instances."
msgstr ""

#: ../source/includes/option/option-mongoimport-sslAllowInvalidHostnames.rst:5
msgid ""
"Disables the validation of the hostnames in TLS/SSL certificates. Allows "
":program:`mongoimport` to connect to MongoDB instances even if the "
"hostname in their certificates do not match the specified hostname."
msgstr ""

#: ../source/includes/option/option-mongoimport-sslFIPSMode.rst:5
msgid ""
"Directs the :program:`mongoimport` to use the FIPS mode of the installed "
"OpenSSL library. Your system must have a FIPS compliant OpenSSL library "
"to use the :option:`--sslFIPSMode` option."
msgstr ""

#: ../source/includes/note-fips-is-enterprise-only.rst:1
msgid ""
"FIPS-compatible TLS/SSL is available only in `MongoDB Enterprise "
"<http://www.mongodb.com/products/mongodb-enterprise?jmp=docs>`_. See "
":doc:`/tutorial/configure-fips` for more information."
msgstr ""

#: ../source/includes/option/option-mongoimport-username.rst:3
msgid ""
"Specifies a username with which to authenticate to a MongoDB database "
"that uses authentication. Use in conjunction with the ``--password`` and "
"``--authenticationDatabase`` options."
msgstr ""

#: ../source/includes/option/option-mongoimport-password.rst:3
msgid ""
"Specifies a password with which to authenticate to a MongoDB database "
"that uses authentication. Use in conjunction with the ``--username`` and "
"``--authenticationDatabase`` options."
msgstr ""

#: ../source/includes/option/option-mongoimport-password.rst:9
msgid ""
"If you do not specify an argument for :option:`--password`, "
":program:`mongoimport` returns an error."
msgstr ""

#: ../source/includes/option/option-mongoimport-password.rst:14
msgid ""
"If you wish :program:`mongoimport` to prompt the user for the password, "
"pass the :option:`--username` option without :option:`--password` or "
"specify an empty string as the :option:`--password` value, as in "
"``--password \"\"`` ."
msgstr ""

#: ../source/includes/option/option-mongoimport-authenticationDatabase.rst:3
msgid ""
"Specifies the database in which the user is created. See :ref:`user-"
"authentication-database`."
msgstr ""

#: ../source/includes/option/option-mongoimport-authenticationMechanism.rst:3
msgid "*Default*: SCRAM-SHA-1"
msgstr ""

#: ../source/includes/option/option-mongoimport-authenticationMechanism.rst:5
msgid ""
"Added support for the ``PLAIN`` and ``MONGODB-X509`` authentication "
"mechanisms."
msgstr ""

#: ../source/includes/option/option-mongoimport-authenticationMechanism.rst:9
msgid ""
"Added support for the ``SCRAM-SHA-1`` authentication mechanism. Changed "
"default mechanism to ``SCRAM-SHA-1``."
msgstr ""

#: ../source/includes/option/option-mongoimport-authenticationMechanism.rst:14
msgid ""
"Specifies the authentication mechanism the :program:`mongoimport` "
"instance uses to authenticate to the :binary:`~bin.mongod` or "
":binary:`~bin.mongos`."
msgstr ""

#: ../source/includes/option/option-mongoimport-authenticationMechanism.rst:21
#: ../source/includes/option/option-mongoimport-mode.rst:20
#: ../source/includes/option/option-mongoimport-parseGrace.rst:17
msgid "Value"
msgstr ""

#: ../source/includes/option/option-mongoimport-authenticationMechanism.rst:23
#: ../source/includes/option/option-mongoimport-mode.rst:21
#: ../source/includes/option/option-mongoimport-parseGrace.rst:18
msgid "Description"
msgstr ""

#: ../source/includes/option/option-mongoimport-authenticationMechanism.rst:25
msgid ":ref:`SCRAM-SHA-1 <authentication-scram-sha-1>`"
msgstr ""

#: ../source/includes/option/option-mongoimport-authenticationMechanism.rst:27
msgid ""
"`RFC 5802 <https://tools.ietf.org/html/rfc5802>`_ standard Salted "
"Challenge Response Authentication Mechanism using the SHA1 hash function."
msgstr ""

#: ../source/includes/option/option-mongoimport-authenticationMechanism.rst:31
msgid ":ref:`MONGODB-CR <authentication-mongodb-cr>`"
msgstr ""

#: ../source/includes/option/option-mongoimport-authenticationMechanism.rst:33
msgid "MongoDB challenge/response authentication. (*Deprecated in MongoDB 3.6*)"
msgstr ""

#: ../source/includes/option/option-mongoimport-authenticationMechanism.rst:35
msgid ":ref:`MONGODB-X509 <security-auth-x509>`"
msgstr ""

#: ../source/includes/option/option-mongoimport-authenticationMechanism.rst:37
msgid "MongoDB TLS/SSL certificate authentication."
msgstr ""

#: ../source/includes/option/option-mongoimport-authenticationMechanism.rst:39
msgid ":ref:`GSSAPI <security-auth-kerberos>` (Kerberos)"
msgstr ""

#: ../source/includes/option/option-mongoimport-authenticationMechanism.rst:41
msgid ""
"External authentication using Kerberos. This mechanism is available only "
"in `MongoDB Enterprise <http://www.mongodb.com/products/mongodb-"
"enterprise?jmp=docs>`_."
msgstr ""

#: ../source/includes/option/option-mongoimport-authenticationMechanism.rst:45
msgid ":ref:`PLAIN <security-auth-ldap>` (LDAP SASL)"
msgstr ""

#: ../source/includes/option/option-mongoimport-authenticationMechanism.rst:47
msgid ""
"External authentication using LDAP. You can also use ``PLAIN`` for "
"authenticating in-database users. ``PLAIN`` transmits passwords in plain "
"text. This mechanism is available only in `MongoDB Enterprise "
"<http://www.mongodb.com/products/mongodb-enterprise?jmp=docs>`_."
msgstr ""

#: ../source/includes/option/option-mongoimport-gssapiServiceName.rst:5
msgid ""
"Specify the name of the service using :doc:`GSSAPI/Kerberos "
"</core/kerberos>`. Only required if the service does not use the default "
"name of ``mongodb``."
msgstr ""

#: ../source/includes/option/option-mongoimport-gssapiHostName.rst:9
#: ../source/includes/option/option-mongoimport-gssapiServiceName.rst:9
msgid "This option is available only in MongoDB Enterprise."
msgstr ""

#: ../source/includes/option/option-mongoimport-gssapiHostName.rst:5
msgid ""
"Specify the hostname of a service using :doc:`GSSAPI/Kerberos "
"</core/kerberos>`. *Only* required if the hostname of a machine does not "
"match the hostname resolved by DNS."
msgstr ""

#: ../source/includes/option/option-mongoimport-db.rst:3
msgid ""
"Specifies the name of the database on which to run the "
":program:`mongoimport`."
msgstr ""

#: ../source/includes/option/option-mongoimport-collection.rst:3
msgid "Specifies the collection to import."
msgstr ""

#: ../source/includes/option/option-mongoimport-collection.rst:5
msgid ""
"If you do not specify :option:`--collection`, :binary:`~bin.mongoimport` "
"takes the collection name from the input filename. MongoDB omits the "
"extension of the file from the collection name, if the input file has an "
"extension."
msgstr ""

#: ../source/includes/option/option-mongoimport-fields.rst:3
msgid ""
"Specify a comma separated list of field names when importing :term:`csv` "
"or :term:`tsv` files that do not have field names in the first (i.e. "
"header) line of the file."
msgstr ""

#: ../source/includes/option/option-mongoimport-fields.rst:8
msgid ""
"If you attempt to include :option:`--fields` when importing JSON data, "
":program:`mongoimport` will return an error. :option:`--fields` is only "
"for :term:`csv` or :term:`tsv` imports."
msgstr ""

#: ../source/includes/option/option-mongoimport-fieldFile.rst:3
msgid ""
"As an alternative to :option:`--fields`, the :option:`--fieldFile` option"
" allows you to specify a file that holds a list of field names if your "
":term:`csv` or :term:`tsv` file does not include field names in the first"
" line of the file (i.e. header). Place one field per line."
msgstr ""

#: ../source/includes/option/option-mongoimport-fieldFile.rst:8
msgid ""
"If you attempt to include :option:`--fieldFile` when importing JSON data,"
" :program:`mongoimport` will return an error. :option:`--fieldFile` is "
"only for :term:`csv` or :term:`tsv` imports."
msgstr ""

#: ../source/includes/option/option-mongoimport-ignoreBlanks.rst:3
msgid ""
"Ignores empty fields in :term:`csv` and :term:`tsv` exports. If not "
"specified, :binary:`~bin.mongoimport` creates fields without values in "
"imported documents."
msgstr ""

#: ../source/includes/option/option-mongoimport-ignoreBlanks.rst:8
msgid ""
"If you attempt to include :option:`--ignoreBlanks` when importing JSON "
"data, :program:`mongoimport` will return an error. "
":option:`--ignoreBlanks` is only for :term:`csv` or :term:`tsv` imports."
msgstr ""

#: ../source/includes/option/option-mongoimport-type.rst:3
msgid ""
"Specifies the file type to import. The default format is :term:`JSON`, "
"but it's possible to import :term:`csv` and :term:`tsv` files."
msgstr ""

#: ../source/includes/option/option-mongoimport-type.rst:6
msgid ""
"The ``csv`` parser accepts that data that complies with RFC :rfc:`4180`. "
"As a result, backslashes are *not* a valid escape character. If you use "
"double-quotes to enclose fields in the CSV data, you must escape internal"
" double-quote marks by prepending another double-quote."
msgstr ""

#: ../source/includes/option/option-mongoimport-file.rst:3
msgid ""
"Specifies the location and name of a file containing the data to import. "
"If you do not specify a file, :binary:`~bin.mongoimport` reads data from "
"standard input (e.g. \"stdin\")."
msgstr ""

#: ../source/includes/option/option-mongoimport-drop.rst:3
msgid ""
"Modifies the import process so that the target instance drops the "
"collection before importing the data from the input."
msgstr ""

#: ../source/includes/option/option-mongoimport-headerline.rst:3
msgid ""
"If using :option:`--type csv <mongoimport --type>` or :option:`--type tsv"
" <mongoimport --type>`, uses the first line as field names. Otherwise, "
":binary:`~bin.mongoimport` will import the first line as a distinct "
"document."
msgstr ""

#: ../source/includes/option/option-mongoimport-headerline.rst:9
msgid ""
"If you attempt to include :option:`--headerline` when importing JSON "
"data, :program:`mongoimport` will return an error. :option:`--headerline`"
" is only for :term:`csv` or :term:`tsv` imports."
msgstr ""

#: ../source/includes/option/option-mongoimport-mode.rst:3
msgid "*Default*: insert"
msgstr ""

#: ../source/includes/option/option-mongoimport-mode.rst:7
msgid ""
"Specifies how the import process should handle existing documents in the "
"database that match documents in the import file."
msgstr ""

#: ../source/includes/option/option-mongoimport-mode.rst:10
msgid ""
"By default, :program:`mongoimport` uses the ``_id`` field to match "
"documents in the collection with documents in the import file. To specify"
" the fields against which to match existing documents for the ``upsert`` "
"and ``merge`` modes, use :option:`--upsertFields`."
msgstr ""

#: ../source/includes/option/option-mongoimport-mode.rst:23
msgid "``insert``"
msgstr ""

#: ../source/includes/option/option-mongoimport-mode.rst:25
msgid ""
"Insert the documents in the import file. :program:`mongoimport` will log "
"an error if you attempt to import a document that contains a duplicate "
"value for a field with a :ref:`unique index <index-type-unique>`, such as"
" ``_id``."
msgstr ""

#: ../source/includes/option/option-mongoimport-mode.rst:30
msgid "``upsert``"
msgstr ""

#: ../source/includes/option/option-mongoimport-mode.rst:32
msgid ""
"Replace existing documents in the database with matching documents from "
"the import file. :program:`mongoimport` will insert all other documents. "
":ref:`ex-mongoimport-upsert` describes how to use :option:`--mode` "
"``upsert``."
msgstr ""

#: ../source/includes/option/option-mongoimport-mode.rst:38
msgid "``merge``"
msgstr ""

#: ../source/includes/option/option-mongoimport-mode.rst:40
msgid ""
"Merge existing documents that match a document in the import file with "
"the new document. :program:`mongoimport` will insert all other documents."
" :ref:`ex-mongoimport-merge` describes how to use :option:`--mode` "
"``merge``."
msgstr ""

#: ../source/includes/option/option-mongoimport-upsertFields.rst:3
msgid ""
"Specifies a list of fields for the query portion of the :term:`upsert`. "
"Use this option if the ``_id`` fields in the existing documents don't "
"match the field in the document, but another field or field combination "
"can uniquely identify documents as a basis for performing upsert "
"operations."
msgstr ""

#: ../source/includes/option/option-mongoimport-upsertFields.rst:10
msgid ""
"Modifies the import process to update existing objects in the database if"
" they match based on the specified fields, while inserting all other "
"objects. You do not need to use :option:`--mode upsert <--mode>` with "
":option:`--upsertFields`."
msgstr ""

#: ../source/includes/option/option-mongoimport-upsertFields.rst:16
msgid ""
"If you do not specify a field, :option:`--upsertFields` will upsert on "
"the basis of the ``_id`` field."
msgstr ""

#: ../source/includes/option/option-mongoimport-upsertFields.rst:19
msgid ""
"To ensure adequate performance, indexes should exist for this field or "
"fields."
msgstr ""

#: ../source/includes/option/option-mongoimport-stopOnError.rst:3
msgid ""
"Forces :program:`mongoimport` to halt the insert operation at the first "
"error rather than continuing the operation despite errors."
msgstr ""

#: ../source/includes/option/option-mongoimport-jsonArray.rst:3
msgid ""
"Accepts the import of data expressed with multiple MongoDB documents "
"within a single :term:`JSON` array. Limited to imports of 16 MB or "
"smaller."
msgstr ""

#: ../source/includes/option/option-mongoimport-jsonArray.rst:7
msgid ""
"Use :option:`--jsonArray` in conjunction with :option:`mongoexport "
"--jsonArray`."
msgstr ""

#: ../source/includes/option/option-mongoimport-maintainInsertionOrder.rst:3
msgid "*Default*: False"
msgstr ""

#: ../source/includes/option/option-mongoimport-maintainInsertionOrder.rst:5
msgid ""
"If specified, :program:`mongoimport` inserts the documents in the order "
"of their appearance in the input source, otherwise :program:`mongoimport`"
" may perform the insertions in an arbitrary order."
msgstr ""

#: ../source/includes/option/option-mongoimport-numInsertionWorkers.rst:3
msgid "*Default*: 1"
msgstr ""

#: ../source/includes/option/option-mongoimport-numInsertionWorkers.rst:7
msgid "Specifies the number of insertion workers to run concurrently."
msgstr ""

#: ../source/includes/option/option-mongoimport-numInsertionWorkers.rst:10
msgid ""
"For large imports, increasing the number of insertion workers may "
"increase the speed of the import."
msgstr ""

#: ../source/includes/option/option-mongoimport-writeConcern.rst:3
msgid "*Default*: majority"
msgstr ""

#: ../source/includes/option/option-mongoimport-writeConcern.rst:5
msgid ""
"Specifies the :term:`write concern` for each write operation that "
":program:`mongoimport` writes to the target database."
msgstr ""

#: ../source/includes/option/option-mongoimport-writeConcern.rst:8
msgid "Specify the write concern as a document with :ref:`w options <wc-w>`."
msgstr ""

#: ../source/includes/option/option-mongoimport-bypassDocumentValidation.rst:3
msgid ""
"Enables :program:`mongoimport` to bypass :doc:`document validation </core"
"/schema-validation>` during the operation. This lets you insert documents"
" that do not meet the validation requirements."
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:6
msgid ""
"Instructs :program:`mongoimport` that the field list specified in "
":option:`--fields`, :option:`--fieldFile`, or :option:`--headerline` "
"specifies the types of each field."
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:10
msgid ""
"Field names must be in the form of ``<colName>.<type>(<arg>)``. You must "
"backslash-escape the following characters if you wish to include them in "
"an argument: ``(``, ``)``, and ``\\``."
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:18
msgid "``type``"
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:19
msgid "Supported Arguments"
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:20
msgid "Example Header Field"
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:22
msgid "``auto()``"
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:23
#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:33
#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:59
#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:63
#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:67
#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:71
msgid "None."
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:24
msgid "``misc.auto()``"
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:26
msgid "``binary(<arg>)``"
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:27
msgid "``base32`` (`RFC4648`_ encoding schema)"
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:28
msgid "``base64`` (`RFC4648`_ encoding schema)"
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:29
msgid "``hex``"
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:30
msgid "``user thumbnail.binary(base64)``"
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:32
msgid "``boolean()``"
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:34
msgid "``verified.boolean()``"
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:36
msgid "``date(<arg>)``"
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:37
msgid "Alias for ``date_go(<arg>)``. `Go Language time.Parse format`_."
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:38
msgid "``created.date(2006-01-02 15:04:05)``"
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:40
msgid "``date_go(<arg>)``"
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:41
msgid "`Go Language time.Parse format`_"
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:42
msgid "``created.date_go(2006-01-02 15:04:05)``"
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:44
msgid "``date_ms(<arg>)``"
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:45
msgid ""
"`Microsoft SQL Server FORMAT format <https://msdn.microsoft.com/en-"
"us/library/hh213505.aspx>`_"
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:47
msgid "``created.date_ms(yyyy-MM-dd H:mm:ss)``"
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:49
msgid "``date_oracle(<arg>)``"
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:50
msgid ""
"`Oracle Database TO_DATE format "
"<https://docs.oracle.com/cd/B19306_01/server.102/b14200/functions183.htm>`_."
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:52
msgid "``created.date_oracle(YYYY-MM-DD HH24:MI:SS)``"
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:54
msgid "``decimal()``"
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:55
msgid "None"
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:56
msgid "``price.decimal()``"
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:58
msgid "``double()``"
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:60
msgid "``revenue.double()``"
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:62
msgid "``int32()``"
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:64
msgid "``followerCount.int32()``"
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:66
msgid "``int64()``"
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:68
msgid "``bigNumber.int64()``"
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:70
msgid "``string()``"
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:72
msgid "``zipcode.string()``"
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:77
msgid "See :ref:`example-csv-import-types` for sample usage."
msgstr ""

#: ../source/includes/option/option-mongoimport-columnsHaveTypes.rst:79
msgid ""
"If you attempt to include :option:`--columnsHaveTypes` when importing "
"JSON data, :program:`mongoimport` will return an error. "
":option:`--columnsHaveTypes` is only for :term:`csv` or :term:`tsv` "
"imports."
msgstr ""

#: ../source/includes/option/option-mongoimport-parseGrace.rst:3
msgid "*Default*: stop"
msgstr ""

#: ../source/includes/option/option-mongoimport-parseGrace.rst:8
msgid ""
"Specifies how :program:`mongoimport` handles type coercion failures when "
"importing CSV or TSV files with :option:`--columnsHaveTypes`."
msgstr ""

#: ../source/includes/option/option-mongoimport-parseGrace.rst:11
msgid ":option:`--parseGrace` has no effect when importing JSON documents."
msgstr ""

#: ../source/includes/option/option-mongoimport-parseGrace.rst:20
msgid "``autoCast``"
msgstr ""

#: ../source/includes/option/option-mongoimport-parseGrace.rst:21
msgid ""
"Assigns a type based on the value of the field. For example, if a field "
"is defined as a ``double`` and the value for that field was ``\"foo\"``, "
":program:`mongoimport` would make that field value a string type."
msgstr ""

#: ../source/includes/option/option-mongoimport-parseGrace.rst:26
msgid "``skipField``"
msgstr ""

#: ../source/includes/option/option-mongoimport-parseGrace.rst:27
msgid ""
"For the row being imported, :program:`mongoimport` does not include the "
"field whose type does not match the expected type."
msgstr ""

#: ../source/includes/option/option-mongoimport-parseGrace.rst:30
msgid "``skipRow``"
msgstr ""

#: ../source/includes/option/option-mongoimport-parseGrace.rst:31
msgid ""
":program:`mongoimport` does not import rows containing a value whose type"
" does not match the expected type."
msgstr ""

#: ../source/includes/option/option-mongoimport-parseGrace.rst:34
msgid "``stop``"
msgstr ""

#: ../source/includes/option/option-mongoimport-parseGrace.rst:35
msgid ":program:`mongoimport` returns an error that ends the import."
msgstr ""

#: ../source/reference/program/mongoimport.txt:146
msgid "Use"
msgstr ""

#: ../source/reference/program/mongoimport.txt:149
msgid "Simple Import"
msgstr ""

#: ../source/reference/program/mongoimport.txt:151
msgid ""
":binary:`~bin.mongoimport` restores a database from a backup taken with "
":binary:`~bin.mongoexport`. Most of the arguments to "
":binary:`~bin.mongoexport` also exist for :binary:`~bin.mongoimport`."
msgstr ""

#: ../source/reference/program/mongoimport.txt:155
msgid ""
"In the following example, :binary:`~bin.mongoimport` imports the "
":term:`JSON` data from the ``contacts.json`` file into the collection "
"``contacts`` in the ``users`` database."
msgstr ""

#: ../source/reference/program/mongoimport.txt:166
msgid "Replace Matching Documents during Import"
msgstr ""

#: ../source/reference/program/mongoimport.txt:168
msgid ""
"In MongoDB 3.4, :option:`--mode upsert <mongoimport --mode>` replaces the"
" deprecated ``--upsert`` option."
msgstr ""

#: ../source/reference/program/mongoimport.txt:172
msgid ""
"With :option:`--mode <mongoimport --mode>` ``upsert``, "
":binary:`~bin.mongoimport` replaces existing documents in the database "
"that match a document in the import file with the document from the "
"import file. Documents that do not match an existing document in the "
"database are inserted as usual. By default :binary:`~bin.mongoimport` "
"matches documents based on the ``_id`` field. Use :option:`--upsertFields"
" <mongoimport --upsertFields>` to specify the fields to match against."
msgstr ""

#: ../source/reference/program/mongoimport.txt:180
msgid ""
"Consider the following document in the ``people`` collection in the "
"``example`` database:"
msgstr ""

#: ../source/reference/program/mongoimport.txt:192
#: ../source/reference/program/mongoimport.txt:249
msgid ""
"The following document exists in a ``people-20160927.json`` JSON file. "
"The ``_id`` field of the JSON object matches the ``_id`` field of the "
"document in the ``people`` collection."
msgstr ""

#: ../source/reference/program/mongoimport.txt:204
msgid ""
"To import the ``people-20160927.json`` file and replace documents in the "
"database that match the documents in the import file, specify "
":option:`--mode` ``upsert``, as in the following:"
msgstr ""

#: ../source/reference/program/mongoimport.txt:212
msgid ""
"The document in the ``people`` collection would then contain only the "
"fields from the imported document, as in the following:"
msgstr ""

#: ../source/reference/program/mongoimport.txt:226
msgid "Merge Matching Documents during Import"
msgstr ""

#: ../source/reference/program/mongoimport.txt:230
msgid ""
"With :option:`--mode <mongoimport --mode>` ``merge``, "
":binary:`~bin.mongoimport` enables you to merge fields from a new record "
"with an existing document in the database. Documents that do not match an"
" existing document in the database are inserted as usual. By default "
":binary:`~bin.mongoimport` matches documents based on the ``_id`` field. "
"Use :option:`--upsertFields <mongoimport --upsertFields>` to specify the "
"fields to match against."
msgstr ""

#: ../source/reference/program/mongoimport.txt:237
msgid ""
"The ``people`` collection in the ``example`` database contains the "
"following document:"
msgstr ""

#: ../source/reference/program/mongoimport.txt:262
msgid ""
"To import the ``people-20160927.json`` file and merge documents from the "
"import file with matching documents in the database, specify "
":option:`--mode <mongoimport --mode>` ``merge``, as in the following:"
msgstr ""

#: ../source/reference/program/mongoimport.txt:270
msgid ""
"The import operation combines the fields from the JSON file with the "
"original document in the database, matching the documents based on the "
"``_id`` field. During the import process, :binary:`~bin.mongoimport` adds"
" the new ``username`` and ``likes`` fields to the document and updates "
"the ``email`` field with the value from the imported document, as in the "
"following:"
msgstr ""

#: ../source/reference/program/mongoimport.txt:293
msgid "Import ``JSON`` to Remote Host Running with Authentication"
msgstr ""

#: ../source/reference/program/mongoimport.txt:295
msgid ""
"In the following example, :binary:`~bin.mongoimport` imports data from "
"the file ``/opt/backups/mdb1-examplenet.json`` into the ``contacts`` "
"collection within the database ``marketing`` on a remote MongoDB database"
" with authentication enabled."
msgstr ""

#: ../source/reference/program/mongoimport.txt:300
msgid ""
":binary:`~bin.mongoimport` connects to the :binary:`~bin.mongod` instance"
" running on the host ``mongodb1.example.net`` over port ``37017``. It "
"authenticates with the username ``user`` and the password ``pass``."
msgstr ""

#: ../source/reference/program/mongoimport.txt:309
msgid "``CSV`` Import"
msgstr ""

#: ../source/reference/program/mongoimport.txt:312
msgid "General CSV Import"
msgstr ""

#: ../source/reference/program/mongoimport.txt:314
msgid ""
"In the following example, :binary:`~bin.mongoimport` imports the "
":term:`csv` formatted data in the ``/opt/backups/contacts.csv`` file into"
" the collection ``contacts`` in the ``users`` database on the MongoDB "
"instance running on the localhost port numbered ``27017``."
msgstr ""

#: ../source/reference/program/mongoimport.txt:320
msgid ""
"Specifying :option:`--headerline <mongoimport --headerline>` instructs "
":binary:`~bin.mongoimport` to determine the name of the fields using the "
"first line in the CSV file."
msgstr ""

#: ../source/reference/program/mongoimport.txt:328
msgid ""
":binary:`~bin.mongoimport` uses the input file name, without the "
"extension, as the collection name if ``-c`` or ``--collection`` is "
"unspecified. The following example is therefore equivalent:"
msgstr ""

#: ../source/reference/program/mongoimport.txt:339
msgid "Import CSV with Specified Field Types"
msgstr ""

#: ../source/reference/program/mongoimport.txt:343
msgid ""
"MongoDB 3.4 added support for specifying field types. Specify field names"
" and types in the form ``<colName>.<type>(<arg>)`` using "
":option:`--fields <mongoimport --fields>`, :option:`--fieldFile "
"<mongoimport --fieldFile>`, or :option:`--headerline <mongoimport "
"--headerline>`."
msgstr ""

#: ../source/reference/program/mongoimport.txt:347
msgid "Consider the following CSV data:"
msgstr ""

#: ../source/reference/program/mongoimport.txt:354
msgid ""
"The :option:`--fields <mongoimport --fields>` option specifies which "
"field type :binary:`~bin.mongoimport` will use when importing the data "
"into MongoDB."
msgstr ""

#: ../source/reference/program/mongoimport.txt:363
msgid "Ignore Blank Fields"
msgstr ""

#: ../source/reference/program/mongoimport.txt:365
msgid ""
"Use the :option:`--ignoreBlanks <mongoimport --ignoreBlanks>` option to "
"ignore blank fields. For :term:`CSV` and :term:`TSV` imports, this option"
" provides the desired functionality in most cases because it avoids "
"inserting fields with null values into your collection."
msgstr ""

#: ../source/reference/program/mongoimport.txt:370
msgid ""
"The following example imports the data from ``data.csv``, skipping any "
"blank fields:"
msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid "Specifies the database that holds the user's credentials."
#~ msgstr ""

#~ msgid ""
#~ "See :ref:`human-intelligible-exports` for "
#~ "more in-depth usage overview, and "
#~ "the :doc:`mongoexport` document for more "
#~ "information regarding :program:`mongoexport`, which"
#~ " provides the inverse \"exporting\" "
#~ "capability."
#~ msgstr ""

#~ msgid ""
#~ "Runs the :program:`mongoimport` in a "
#~ "quiet mode that attempts to limit "
#~ "the amount of output."
#~ msgstr ""

#~ msgid ""
#~ "Modifies the import process to update"
#~ " existing objects in the database if"
#~ " they match an imported object, while"
#~ " inserting all other objects."
#~ msgstr ""

#~ msgid ""
#~ "If you do not specify a field "
#~ "or fields using the :option:`--upsertFields`"
#~ " :program:`mongoimport` will upsert on the"
#~ " basis of the ``_id`` field."
#~ msgstr ""

#~ msgid ""
#~ "Depending on your MongoDB configuration, "
#~ ":option:`--upsert` may impact your "
#~ ":program:`mongod`'s performance."
#~ msgstr ""

#~ msgid ""
#~ ":option:`--upsertFields` now implies "
#~ ":option:`--upsert`. As such, you may "
#~ "prefer to use :option:`--upsertFields` instead"
#~ " of :option:`--upsert`."
#~ msgstr ""

#~ msgid ""
#~ "Modifies the import process to update"
#~ " existing objects in the database if"
#~ " they match based on the specified"
#~ " fields, while inserting all other "
#~ "objects. You do not need to use"
#~ " :option:`--upsert` with :option:`--upsertFields`."
#~ msgstr ""

#~ msgid "Simple Usage"
#~ msgstr ""

#~ msgid ""
#~ "In the following example, "
#~ ":program:`mongoimport` imports the data in "
#~ "the :term:`JSON` data from the "
#~ "``contacts.json`` file into the collection "
#~ "``contacts`` in the ``users`` database."
#~ msgstr ""

# 9d13ba9e054a4f14b6e44f6f4f3a5bf2
#~ msgid "On this page"
#~ msgstr ""

# ee3463f7142848f08a7614fc7e4f97b5
#~ msgid ""
#~ "The :program:`mongoimport` tool imports "
#~ "content from an :doc:`Extended JSON "
#~ "</reference/mongodb-extended-json>`, CSV, or"
#~ " TSV export created by "
#~ ":program:`mongoexport`, or potentially, another "
#~ "third-party export tool."
#~ msgstr ""

# 546030e2d2d248838a4005e014d74354
#~ msgid ""
#~ "See the :doc:`mongoexport` document for "
#~ "more information regarding :program:`mongoexport`,"
#~ " which provides the inverse \"exporting\""
#~ " capability."
#~ msgstr ""

# d80aab7470834a00b120bcf07cf3817c
#~ msgid ""
#~ "Avoid using :program:`mongoimport` and "
#~ ":program:`mongoexport` for full instance "
#~ "production backups. They do not reliably"
#~ " preserve all rich :term:`BSON` data "
#~ "types, because :term:`JSON` can only "
#~ "represent a subset of the types "
#~ "supported by BSON. Use :program:`mongodump`"
#~ " and :program:`mongorestore` as described "
#~ "in :doc:`/core/backups` for this kind of"
#~ " functionality."
#~ msgstr ""

# fa9e540102414fe599e31f5e3f7bdadb
#~ msgid ""
#~ "To preserve type information, "
#~ ":program:`mongoexport` and :program:`mongoimport` "
#~ "uses the :doc:`strict mode representation "
#~ "</reference/mongodb-extended-json>` for "
#~ "certain types."
#~ msgstr ""

# b6063de2a8394bbf8ae010aa3471fc1a
#~ msgid ""
#~ "For example, the following insert "
#~ "operation in the :program:`mongo` shell "
#~ "uses the :doc:`shell mode representation "
#~ "</reference/mongodb-extended-json>` for the"
#~ " BSON types :bsontype:`data_date` and "
#~ ":bsontype:`data_numberlong`:"
#~ msgstr ""

# c97de6da06454b33b2e27e35337bba08
#~ msgid ""
#~ "The argument to :bsontype:`data_numberlong` "
#~ "must be quoted to avoid potential "
#~ "loss of accuracy."
#~ msgstr ""

# eaf964580a6b43148c12974b3f5eed47
#~ msgid "Use :program:`mongoexport` to export the data:"
#~ msgstr ""

# 7a46a40aa84f4efabeb7d5579f25c361
#~ msgid ""
#~ "The exported data is in :doc:`strict "
#~ "mode representation </reference/mongodb-extended-"
#~ "json>` to preserve type information:"
#~ msgstr ""

# 31c4410478dd4f32928aa989d5deb857
#~ msgid ""
#~ "See :doc:`/reference/mongodb-extended-json` "
#~ "for a complete list of these types"
#~ " and the representations used."
#~ msgstr ""

# 155b33a6761b4c01afd33c2d2e1d3c9a
#~ msgid ""
#~ "In order to connect to a "
#~ ":program:`mongod` that enforces authorization "
#~ "with the :option:`--auth <mongod --auth>` "
#~ "option, you must use the "
#~ ":option:`--username <mongoexport --username>` and"
#~ " :option:`--password <mongoexport --password>` "
#~ "options. The connecting user must "
#~ "possess, at a minimum, the "
#~ ":authrole:`readWrite` role on the database "
#~ "into which they are importing data."
#~ msgstr ""

# 6512d122a5b7453c9afe7ebb874d7175
#~ msgid ""
#~ ":program:`mongoimport` removed the ``--dbpath`` "
#~ "as well as related ``--directoryperdb`` "
#~ "and ``--journal`` options. You must use"
#~ " :program:`mongoimport` while connected to "
#~ "a :program:`mongod` instance."
#~ msgstr ""

# ec92cde501c449739bbff7d994bb012d
#~ msgid ""
#~ "Specifies a resolvable hostname for the"
#~ " :program:`mongod` to which to connect. "
#~ "By default, the :program:`mongoimport` "
#~ "attempts to connect to a MongoDB "
#~ "instance running on the localhost on "
#~ "port number ``27017``."
#~ msgstr ""

# 335dfa49b2ed4b71b5c5e54aeffc929f
#~ msgid ""
#~ "You can always connect directly to "
#~ "a single MongoDB instance by specifying"
#~ " the host and port number directly."
#~ msgstr ""

# 683a55984bd94ff68cffb1bcd2046dea
#~ msgid ""
#~ "Enables connection to a :program:`mongod` "
#~ "or :program:`mongos` that has TLS/SSL "
#~ "support enabled."
#~ msgstr ""

# 9b1a54ee8e32443cb98ad00fa8858cfc
# 7732a704aeee4bdba65bb42f47360ee0
# 9f02f35d4d2e4143bbc14cf0b9a51e7f
# 1aecdca21acc42b49b6b6f68344fb7d6
# 87aea7ec74a0402b94f3722b09f10d6d
# b4a30713a0064f05b19d7e14ccdd162d
# d216bed38d7c4531b5363581c21722a9
#~ msgid ""
#~ "Most MongoDB distributions now include "
#~ "support for TLS/SSL. See :doc:`/tutorial"
#~ "/configure-ssl` and :doc:`/tutorial/configure-"
#~ "ssl-clients` for more information about "
#~ "TLS/SSL and MongoDB."
#~ msgstr ""

# 135dac93beb84a55b9e39b0bc28219bc
#~ msgid ""
#~ "For SSL connections (``--ssl``) to "
#~ ":program:`mongod` and :program:`mongos`, if "
#~ "the :program:`mongoimport` runs without the"
#~ " :option:`--sslCAFile`, :program:`mongoimport` will "
#~ "not attempt to validate the server "
#~ "certificates. This creates a vulnerability "
#~ "to expired :program:`mongod` and "
#~ ":program:`mongos` certificates as well as "
#~ "to foreign processes posing as valid "
#~ ":program:`mongod` or :program:`mongos` instances."
#~ " Ensure that you *always* specify the"
#~ " CA file to validate the server "
#~ "certificates in cases where intrusion is"
#~ " a possibility."
#~ msgstr ""

# e48ed8907b7b4affba940d0eb6d0be3a
#~ msgid ""
#~ "This option is required when using "
#~ "the :option:`--ssl` option to connect to"
#~ " a :program:`mongod` or :program:`mongos` "
#~ "that has :setting:`~net.ssl.CAFile` enabled "
#~ "*without* "
#~ ":setting:`~net.ssl.allowConnectionsWithoutCertificates`."
#~ msgstr ""

# 1b39f12fc1cb4696ad98a5d98898a912
#~ msgid ""
#~ "Disables the validation of the hostnames"
#~ " in TLS/SSL certificates. Allows "
#~ ":program:`mongoimport` to connect to MongoDB"
#~ " instances if the hostname their "
#~ "certificates do not match the specified"
#~ " hostname."
#~ msgstr ""

# 4ec39b903dc84acdb17f535373811f20
#~ msgid ""
#~ "FIPS-compatible SSL is available only"
#~ " in `MongoDB Enterprise "
#~ "<http://www.mongodb.com/products/mongodb-enterprise?jmp=docs>`_."
#~ " See :doc:`/tutorial/configure-fips` for "
#~ "more information."
#~ msgstr ""

# 67b646325d874ba29aa07bb74e8966f7
#~ msgid ""
#~ "Specifies the authentication mechanism the "
#~ ":program:`mongoimport` instance uses to "
#~ "authenticate to the :program:`mongod` or "
#~ ":program:`mongos`."
#~ msgstr ""

# 6b0c322edf4248cb9cb6593fa5f7aa6b
#~ msgid "MongoDB challenge/response authentication."
#~ msgstr ""

# 80179e1715f84280bab3335647fa6ef6
#~ msgid ""
#~ "If you do not specify "
#~ ":option:`--collection`, :program:`mongoimport` takes "
#~ "the collection name from the input "
#~ "filename. MongoDB omits the extension of"
#~ " the file from the collection name,"
#~ " if the input file has an "
#~ "extension."
#~ msgstr ""

# a7ac3bf9f7564ba6bedf10964706a614
#~ msgid ""
#~ "Ignores empty fields in :term:`csv` and"
#~ " :term:`tsv` exports. If not specified, "
#~ ":program:`mongoimport` creates fields without "
#~ "values in imported documents."
#~ msgstr ""

# ea4fbe4e3e7a4556bcd97efa79d8993e
#~ msgid ""
#~ "Specifies the location and name of "
#~ "a file containing the data to "
#~ "import. If you do not specify a"
#~ " file, :program:`mongoimport` reads data "
#~ "from standard input (e.g. \"stdin\")."
#~ msgstr ""

# 73f87c1f1e124d17af910c5ac68a01ca
#~ msgid ""
#~ "If using :option:`--type csv <mongoimport "
#~ "--type>` or :option:`--type tsv <mongoimport"
#~ " --type>`, uses the first line as "
#~ "field names. Otherwise, :program:`mongoimport` "
#~ "will import the first line as a"
#~ " distinct document."
#~ msgstr ""

# 4288ccdb2d474b4794c3ee4bad8ff6ca
#~ msgid ""
#~ "Enables :program:`mongoimport` to bypass "
#~ ":doc:`document validation </core/document-"
#~ "validation>` during the operation. This "
#~ "lets you insert documents that do "
#~ "not meet the validation requirements."
#~ msgstr ""

# fcfda7ede74e4a70a14580e63e18808b
#~ msgid "``bool()``"
#~ msgstr ""

# 3949853bad0e4b6d942c833365826b53
#~ msgid "``verified.bool()``"
#~ msgstr ""

# 4e2fc3faca1b4039811a123808d06ca5
#~ msgid ""
#~ ":program:`mongoimport` restores a database "
#~ "from a backup taken with "
#~ ":program:`mongoexport`. Most of the arguments"
#~ " to :program:`mongoexport` also exist for"
#~ " :program:`mongoimport`."
#~ msgstr ""

# 362ac74082214e08937ff3b2e4b2b2d5
#~ msgid ""
#~ "In the following example, "
#~ ":program:`mongoimport` imports the :term:`JSON` "
#~ "data from the ``contacts.json`` file "
#~ "into the collection ``contacts`` in the"
#~ " ``users`` database."
#~ msgstr ""

# 3d289abbea75485e8b535f9b940491b0
#~ msgid ""
#~ "In MongoDB 3.4, :option:`--mode upsert "
#~ "<--mode>` replaces the deprecated ``--upsert``"
#~ " option."
#~ msgstr ""

# 4c550b0cfb1c4709bf0811e23df20041
#~ msgid ""
#~ "With :option:`--mode` ``upsert``, "
#~ ":program:`mongoimport` replaces existing documents"
#~ " in the database that match a "
#~ "document in the import file with "
#~ "the document from the import file. "
#~ "Documents that do not match an "
#~ "existing document in the database are"
#~ " inserted as usual. By default "
#~ ":program:`mongoimport` matches documents based "
#~ "on the ``_id`` field. Use "
#~ ":option:`--upsertFields` to specify the fields"
#~ " to match against."
#~ msgstr ""

# cbe3db82330a46a285b469c3874abdf4
#~ msgid ""
#~ "With :option:`--mode` ``merge``, "
#~ ":program:`mongoimport` enables you to merge"
#~ " fields from a new record with "
#~ "an existing document in the database."
#~ " Documents that do not match an "
#~ "existing document in the database are"
#~ " inserted as usual. By default "
#~ ":program:`mongoimport` matches documents based "
#~ "on the ``_id`` field. Use "
#~ ":option:`--upsertFields` to specify the fields"
#~ " to match against."
#~ msgstr ""

# 0a6208a6b3ba487a853e23fbe2a474fe
#~ msgid ""
#~ "To import the ``people-20160927.json`` file"
#~ " and merge documents from the import"
#~ " file with matching documents in the"
#~ " database, specify :option:`--mode` ``merge``,"
#~ " as in the following:"
#~ msgstr ""

# bd996056eb174f7f844cf7e66bfade57
#~ msgid ""
#~ "The import operation combines the fields"
#~ " from the JSON file with the "
#~ "original document in the database, "
#~ "matching the documents based on the "
#~ "``_id`` field. During the import "
#~ "process, :program:`mongoimport` adds the new"
#~ " ``username`` and ``likes`` fields to "
#~ "the document and updates the ``email``"
#~ " field with the value from the "
#~ "imported document, as in the following:"
#~ msgstr ""

# 23b0b6f35a3840ddb51305ef7b954ed2
#~ msgid ""
#~ "In the following example, "
#~ ":program:`mongoimport` imports data from the"
#~ " file ``/opt/backups/mdb1-examplenet.json`` into "
#~ "the ``contacts`` collection within the "
#~ "database ``marketing`` on a remote "
#~ "MongoDB database with authentication enabled."
#~ msgstr ""

# f7502c24f0b449cd837f0d1d7cbb6e48
#~ msgid ""
#~ ":program:`mongoimport` connects to the "
#~ ":program:`mongod` instance running on the "
#~ "host ``mongodb1.example.net`` over port "
#~ "``37017``. It authenticates with the "
#~ "username ``user`` and the password "
#~ "``pass``."
#~ msgstr ""

# caec31faa3ed45e78499455725c5ca45
#~ msgid ""
#~ "In the following example, "
#~ ":program:`mongoimport` imports the :term:`csv` "
#~ "formatted data in the "
#~ "``/opt/backups/contacts.csv`` file into the "
#~ "collection ``contacts`` in the ``users`` "
#~ "database on the MongoDB instance running"
#~ " on the localhost port numbered "
#~ "``27017``."
#~ msgstr ""

# 2b4e10e09582454ab2d2ca813264fb21
#~ msgid ""
#~ "Specifying :option:`--headerline <mongoimport "
#~ "--headerline>` instructs :program:`mongoimport` to"
#~ " determine the name of the fields "
#~ "using the first line in the CSV"
#~ " file."
#~ msgstr ""

# fca1b193e49048b5a8daa92133081927
#~ msgid ""
#~ ":program:`mongoimport` uses the input file "
#~ "name, without the extension, as the "
#~ "collection name if ``-c`` or "
#~ "``--collection`` is unspecified. The following"
#~ " example is therefore equivalent:"
#~ msgstr ""

# e932356fde8544fcb664040e76ef934a
#~ msgid ""
#~ "Use the \":option:`--ignoreBlanks <mongoimport "
#~ "--ignoreBlanks>`\" option to ignore blank "
#~ "fields. For :term:`CSV` and :term:`TSV` "
#~ "imports, this option provides the "
#~ "desired functionality in most cases "
#~ "because it avoids inserting fields with"
#~ " null values into your collection."
#~ msgstr ""

