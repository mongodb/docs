.. _oidc-authentication-workforce:

================================================================
Set up {+wif+} with OIDC
================================================================

.. default-domain:: mongodb

.. meta::
   :keywords: connect
   :description: Set up Workforce Identity Federation with OIDC to manage access to MongoDB deployments using an external Identity Provider for authentication and authorization.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

In MongoDB 7.0 and later, {+wif+} lets you use an 
external |idp-full| (IdP), such as your corporate |idp|, to authenticate 
and authorize a given workforce, such as employees, partners, 
and contractors. 

With {+wif+}, you can:

- Manage your workforce access to MongoDB deployments through your
  existing |idp|.
- Enforce security policies such as password complexity, credential
  rotation, and |mfa| within your |idp|.
- Grant access for a :ref:`group of users or a single user <add-db-user>`.

After you configure your external |idp| and add it to your 
{+wif+} one time, you can enable Workforce |idp-full| for multiple 
|service| organizations. After you enable {+wif+} 
in a given organization, you can use it in all projects in that organization 
for database access.

{+wif+} is supported by |service| dedicated {+clusters+}
(M10 and above) running MongoDB version 7.0.11 and above. You need to use 
MongoDB Shell or Compass to access |service| with {+wif+}.

To learn more about implementing {+wif+} access, see
:ref:`workload-supported-connections`.

Required Access
---------------

To manage {+wif+} configuration, you must have
:authrole:`Organization Owner` access to |service|.

Procedures
----------

To access |service| {+clusters+} with {+wif+}, complete the following steps:

1. Configure a Workforce Identity Provider (one-time setup).
   
   a. :ref:`Configure your external identity provider <configure-idp-oidc>`.

   b. :ref:`Configure Workforce Identity Provider in Atlas and 
      enable it for your {+service+} organization(s) <configure-oidc>`.

2. Grant external identities (user principals) or groups access 
   to MongoDB clusters.

3. Authenticate to your |service| {+clusters+} with MongoDB Shell or Compass.

.. _configure-idp-oidc:

Configure An External Identity Provider Application
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To configure {+wif+} with |oidc|, register your |oidc| 
application with an |idp| that supports |oidc| standard, such
as :ref:`Microsoft Entra ID <configure-azure-idp-oidc>`, Okta, or
Ping Identity.

.. note::

   {+wif+} supports only JWT for authentication. It doesn't 
   support opaque access tokens.

You can configure your |oidc| application for the following grant types:

- Authorization Code Flow with {+pkce+}
- Device Authorization Flow

MongoDB recommends that you use Authorization Code Flow with {+pkce+} for increased
security. Use Device Authorization Flow only if your users need
to access the database from machines with no browser.  

The |oidc| application registration steps can vary based on your
|idp|. Ensure that you complete the following items during
your registration process:

.. procedure::
   :style: normal

   .. step:: Register a new application for |service|.

      Select :guilabel:`public client/native application` as the client type.

   .. step:: Set the :guilabel:`Redirect URL` value to ``http://localhost:27097/redirect``.

   .. step:: (Conditional) Add or enable a :guilabel:`groups` claim if you authenticate with groups.

      For groups, this step ensures that your access tokens contain the group 
      membership information of the user authenticating. MongoDB uses the 
      values sent in a groups claim for authorization.

   .. step:: (Optional) Allow refresh tokens if you want MongoDB clients to
             refresh the tokens for a better user experience.

   .. step:: (Optional) Configure the access token lifetime (``exp`` claim) to align with
             your database connection session time.

.. _apply-oidc-idp:

After you register your application, save the ``issuer``, 
``clientId``, and ``audience`` values to use in the next stage of the
:ref:`Atlas Workforce IdP configuration <apply-oidc-idp>`.

.. _configure-azure-idp-oidc:

To register your |oidc| application with |azure-ad|:

.. procedure::
   :style: normal

   .. step:: Register an application.

      1. Navigate to :guilabel:`App registrations`.

         a. In your `Azure portal <https://portal.azure.com/>`__ account, search and click :guilabel:`Microsoft Entra ID`.

         #. In the :guilabel:`Manage` section of the left navigation, click :guilabel:`App registrations`.
               
      2. Click :guilabel:`New registration`.

      3. Apply the following values.

         .. list-table::
            :header-rows: 1
            :widths: 20 40

            * - Field
              - Value

            * - :guilabel:`Name`
              - :guilabel:`Atlas Database - Workforce`

            * - :guilabel:`Supported Account Types`
              - :guilabel:`Accounts in this organizational directory only (single tenant)`

            * - :guilabel:`Redirect URI`
              - | - :guilabel:`Public client/native (mobile & desktop)`
                | - ``http://localhost:27097/redirect``

      4. Click :guilabel:`Register`.

      To learn more about registering an application, see `Azure Documentation <https://learn.microsoft.com/en-us/azure/active-directory/develop/quickstart-register-app#register-an-application>`__.

   .. step:: Add a group claim.

      1. Navigate to :guilabel:`Token Configuration`.

         In the :guilabel:`Manage` section of the left navigation,
         click :guilabel:`Token Configuration`.

      2. Click :guilabel:`Add groups claim`.

      3. In the :guilabel:`Edit groups claim` modal, select :guilabel:`Security groups`.

         What groups you select depend on the type of groups you configured
         in your Azure environment. You may need to select a different
         type of group to send the appropriate group information.

      4. In the :guilabel:`Customize token properties by type` section, only select :guilabel:`Group ID`.

      5. Click :guilabel:`Add`.

      To learn more about adding a group claim, see :azure:`Azure Documentation </active-directory/hybrid/connect/how-to-connect-fed-group-claims>`.

   .. step:: Add a user identifier claim to the access token.

      1. Click :guilabel:`Add optional claim`.

      2. In the :guilabel:`Add optional claim` modal, select :guilabel:`Access`.
               
      3. Select a claim that carries a user identifier that you can
         refer to in MongoDB access logs such as an email.

         You can use the :abbr:`UPN (UserPrincipalName)` claim to identify users with their email address.
               
      4. Click :guilabel:`Add`.
               
      5. In the :guilabel:`Microsoft Graph Permissions` note, check the box, and click :guilabel:`Add`.

      To learn more, see :azure:`Azure Documentation </active-directory/develop/optional-claims>`.

   .. step:: Update the manifest.

      1. In the :guilabel:`Manage` section of the left navigation, click :guilabel:`Manifest`.

      2. Update the :guilabel:`requestedAccessTokenVersion` from ``null`` to ``2``.

         The number ``2`` represents Version 2 of Microsoft's access
         tokens. Other applications can use this as a signed
         attestation of the Active Directory-managed user's identity.
         Version 2 ensures that the token is a JSON Web Token that
         MongoDB understands.
               
      3. Click :guilabel:`Save`.

      To learn more about adding an optional claim, see :azure:`Azure Documentation </active-directory/develop/reference-app-manifest>`.

   .. step:: Remember metadata.

      1. In the left navigation, click :guilabel:`Overview`.
               
         Copy the :guilabel:`Application (client) ID` value.
       
      2. In the top navigation, click :guilabel:`Endpoints`.
                  
         Copy the :guilabel:`OpenID Connect metadata document` value 
         without the ``/.well-known/openid-configuration`` part.

         You can also get this value by copying the value for 
         ``issuer`` in the :guilabel:`OpenID Connect metadata document` |url|.

      The following table shows what these |azure-ad| UI values map to in our |service| Configuration Properties:
            
      .. list-table::
         :header-rows: 1
         :widths: 50 50
         :stub-columns: 1

         * - Microsoft Entra ID UI 
           - |service| Configuration Property

         * - :guilabel:`Application (client) ID` 
           - | :guilabel:`Client ID`
             | :guilabel:`Audience`

         * - :guilabel:`OpenID Connect metadata document (without /.well-known/openid-configuration)`
           - :guilabel:`Issuer URI`. 

.. _configure-oidc:

Configure {+wif+} Authentication
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. note:: Prerequisite

   This procedure requires you to have :authrole:`Organization Owner`
   access and assumes you already have an |oidc| application
   created in your |idp|. To learn
   how to configure an |idp|, see :ref:`configure-idp-oidc`.

You can configure {+wif+} with |oidc| for database access in |service|
from the :guilabel:`Federation Management Console`.

To configure a Workforce |idp-full| in |service|:

.. procedure::
   :style: normal

   .. step:: Go to the Federation Management Console.

      a. Navigate to Organization settings.

      #. Click on :guilabel:`Open Federation Management App`.

   .. step:: Configure identify providers.

      a. Click :guilabel:`Identity Providers` in the left sidebar.
      
      #. Do one of the following steps:
      
         - If you do not have any Identity Providers configured yet, click
           :guilabel:`Set Up Identity Provider`.
         - Otherwise, on the :guilabel:`Identity Providers` screen, click
           :guilabel:`Configure Identity Provider(s)`.

      #. Select :guilabel:`Workforce Identity Federation` and click :guilabel:`Continue`.

      #. Select :guilabel:`OIDC for Data Access`.

   .. step:: Enter the following Workforce Identity Provider Protocol Settings.

      .. list-table::
         :header-rows: 1
         :widths: 30 20 50
         :stub-columns: 1

         * - Setting
           - Necessity
           - Value

         * - :guilabel:`Configuration Name`
           - Required
           - Human-readable label that identifies this configuration. This label
             is visible to your |service| users.

         * - :guilabel:`Configuration Description`
           - Optional
           - Human-readable label that describes this configuration.

         * - :guilabel:`Issuer URI`
           - Required
           - Issuer value provided by your registered |idp| application.
             Using this URI, MongoDB finds an OpenID Provider Configuration
             Document, which should be available in the
             ``/.wellknown/open-id-configuration`` endpoint. 

         * - :guilabel:`Client ID`
           - Required
           - Unique identifier for your registered application. Enter
             the ``clientId`` value from the app you registered
             with external |idp-full|.

         * - Audience
           - Required
           - Entity that your external identity provider intends the token for. Enter
             the ``audience`` value from the app you registered
             with external |idp-full|. Generally, this value is the same as the 
             :guilabel:`Client ID`.
      
         * - :guilabel:`Requested Scopes`
           - Optional
           - Tokens that give users permission to request data
             from the authorization endpoint. If you plan to support refresh tokens, 
             this field must include the value ``offline_access``. 

             If your identity provider is |azure-ad|, |service| requires
             this setting. Add default scope, which is
             ``<application client id>/.default``.

             For each additional scope you
             want to add, click :guilabel:`Add more scopes`.

         * - Authorization Type
           - Required
           - Select :guilabel:`Group Membership` to grant authorization based on |idp| 
             user group membership, or select :guilabel:`User ID` to grant an individual 
             user authorization.

         * - :guilabel:`Customize Groups Claim`
           - Required
           - Identifier of the claim that includes the principal's |idp|
             user group membership information. Accept the default value
             unless your |idp| uses a different claim, or you need a custom 
             claim. This field is only required if you select 
             :guilabel:`Group Membership`.
         
             *Default*: ``groups``

         * - :guilabel:`Customize User Claim`
           - Required
           - Identifier of the claim that includes the user principal
             identity. Accept the default value unless your |idp| uses a
             different claim.
          
             *Default*: ``sub``

   .. step:: Click :guilabel:`Save and Finish`.
   .. step:: Associate at least one domain to your Workforce |idp|.

      a. In your Workforce Identity Provider card, click :guilabel:`Associate Domains`.
      
      #. In the :guilabel:`Associate Domains with Identity Provider` modal,
         select one or more domains.
      
      #. Click :guilabel:`Submit`.

   .. step:: Enable your Workforce |idp-full| in an organization.

      a. Click :guilabel:`Connect Organizations`.

      #. For the organization you want to connect to Workforce Identity Provider,
         click :guilabel:`Configure Access`.

      #. Click :guilabel:`Connect Identity Provider`.
      
         .. note::

            If you have another |idp| configured, this button says
            :guilabel:`Connect Identity Provider(s)`.

   .. step:: Select :guilabel:`Workforce Identity Federation for Data Access`.
   
      In the :guilabel:`Connect Identity Provider(s)` modal, select  a
      Workforce Identity Provider where the :guilabel:`Purpose` is 
      :guilabel:`Workforce Identity Federation`.

   .. step:: Click :guilabel:`Connect`.

      When you connect your Workforce |idp-full| to an organization, |service|
      enables your Workforce |idp-full| for all the projects within that organization.

.. _add-db-user:

Add a Database User using Workforce Authentication
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/steps-create-oidc-user.rst

.. _workload-supported-connections:

Connect a Client to MongoDB with {+wif+}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following lists the ways you can connect a client to MongoDB
with {+wif+} authentication:

- :ref:`Compass <atlas-connect-via-compass>` v1.38+
- :ref:`MongoDB Shell <connect-mongo-shell>` v2.1.4+


Manage an Existing {+wif+} Configuration
---------------------------------------------------------------------

Revoke JWKS
~~~~~~~~~~~

.. note::

   Use the following procedure only if you manage your own signing keys.  
   
   Don't use this feature to rotate your signing keys. When you rotate 
   your Workforce |idp-full| signing keys, MongoDB fetches the JWKS automatically
   when the existing access tokens expire.

If your private key is compromised, you can immediately revoke your JSON
Web Key Sets (JWKS) cached in MongoDB nodes:

.. procedure::
   :style: normal

   .. step:: Update your signing keys in your Workforce identity provider.

   .. include:: /includes/steps-open-fed-auth-console.rst

   .. step:: Click :guilabel:`Identity Providers` in the left sidebar.

   .. step:: Scroll to the Workforce Identity Provider card.

   .. step:: Click the :guilabel:`Revoke` button.

      After you click :guilabel:`Revoke`, MongoDB fetches the new keys
      through your JWKS endpoint. You must restart your clients (such as
      {+mongosh+} or :compass:`Compass </>`) after you revoke JWKS. 

Delete a Workforce Identity Provider Configuration
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To delete your Workforce Identity Provider configuration:

.. procedure::
   :style: normal

   .. include:: /includes/steps-open-fed-auth-console.rst

   .. step:: Disconnect each organization you connected to your Workforce |idp-full|.

      1. Click :guilabel:`Organizations` in the left sidebar.

      2. Click the organization that has {+wif+} enabled.

      3. Click :guilabel:`Disconnect` under the :guilabel:`Manage` dropdown on the {+wif+} card.

      4. In the :guilabel:`Disconnect identity provider?` modal, click
         :guilabel:`Disconnect`.

         When you disconnect an |idp|, users who authenticate using the
         |idp| lose access to {+wif+} in the |service| projects
         listed in the :guilabel:`Project` table.

   .. step:: Click :guilabel:`Identity Providers` in the left sidebar.

   .. step:: In the Workforce Identity Provider card, click :guilabel:`Delete`.

   .. step:: In the :guilabel:`Delete Identity Provider?` modal, click
      :guilabel:`Delete`.
