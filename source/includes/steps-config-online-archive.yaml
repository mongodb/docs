level: 4
ref: oa-config-step1
stepnum: 1
inherit: 
  file: steps-source-project-nav.yaml
  ref: project-nav-clusters-page
--- 
level: 4
ref: oa-config-step2
stepnum: 2
inherit: 
  file: steps-online-archive-nav.yaml
  ref: oa-tab
---
level: 4
stepnum: 3
title: "Click the :guilabel:`Configure Online Archive` button the first 
       time and the :guilabel:`Add Archive` button subsequently to start 
       configuring online archive for your collection."   
ref: oa-config-button
---
level: 4
stepnum: 4
title: "Review the :guilabel:`Online Archive Overview` and click 
       :guilabel:`Next` to proceed."   
ref: oa-config-overview
---
level: 4
stepnum: 5
title: "Create an :guilabel:`Archiving Rule` by providing the following 
       information."   
ref: oa-config-archiving-rule
content: |

  a. Specify the collection namespace, which includes the database name, 
     the dot (``.``) separator, and the collection name (that is, 
     ``<database>.<collection>``), in the :guilabel:`Namespace` field. 

     You can't modify the :manual:`namespace 
     </reference/limits/#faq-dev-namespace>` once the online archive is 
     created. 

  #. Specify an already indexed date field from the documents in the 
     collection in the :guilabel:`Date field to archive on` field.

     To specify a nested field, use the :manual:`dot notation 
     </core/document/#embedded-documents>`. You can't modify the date 
     field once the online archive is created.

  #. Specify the number of days in the :guilabel:`Age limit` field. 

  Data is archived after the specified number of days after the specified date. 
---
level: 4
stepnum: 6
title: "Click :guilabel:`Next` to specify the most commonly queried 
       fields."   
ref: oa-config-query
---
level: 4
stepnum: 7
title: "(Optional) Enter up to two most commonly queried fields from the 
       collection in the :guilabel:`Most commonly queried field` and 
       :guilabel:`Second most commonly queried field` fields respectively."   
ref: oa-config-additional-fields  
content: |
  To specify nested fields, use the :manual:`dot notation 
  </core/document/#embedded-documents>`.

  The specified fields are used to partition your archived data. Partitions 
  are similar to folders. You can move the date field to the first position 
  of the partition if you frequently query by the specified date field. 

  For example, suppose you are configuring the online archive for the 
  ``movies`` collection in the ``sample_mflix`` database. If your archived 
  field is the ``released`` date field, which you moved to the first 
  position, your first queried field is ``title``, and your second queried 
  field is ``plot``, your partition will look similar to the following: 

  .. code-block:: sh 
     :copyable: false 

     /released/title/plot

  .. include:: /includes/fact-online-archive-partition-field-length.rst

  - Choose fields that do not contain polymorphic data. |service| determines   
    the data type of a partition field by sampling 10 documents from the 
    collection. |service| will not archive a document if the specified field 
    value in a document does not match values in other documents in the same 
    collection. 
  - Choose query fields that do no have a large number of values unless you 
    always use those fields in your queries. Query fields, such as ``_id``, 
    with possibly large number of values can cause operations such as ``count`` 
    to touch all documents resulting in high latency.
  - Choose fields that you query frequently and order them from the most 
    frequently queried in the first position to the least queried field in the 
    last position. For example, if you frequently query on the date field, then 
    move the date field to the first position. But if you frequently query on 
    another field, then that field should be in the first position. 

  .. note:: 

     Data partitions based on the date field from the document are truncated 
     to the day even if there are timestamps with seconds in the date field 
     value. 
  
  While partitions improve query performance, queries that don't contain 
  these fields require a full collection scan of all archived documents, which 
  will take longer and increase your costs. To learn more about how partitions 
  improve your query performance in Data Lake, see `Data Structure in S3 
  <https://docs.mongodb.com/datalake/admin/optimize-query-performance#data-structure-in-s3>`__.
---
level: 4
stepnum: 8
title: "Click :guilabel:`Next` to verify and confirm the online archive 
       settings."   
ref: oa-config-review
---
level: 4
stepnum: 9
title: "Copy and run the displayed query in your :binary:`~bin.mongo` 
       shell to see the documents that match the criteria in the rule you 
       defined in step 5." 
ref: oa-config-verify-query
content: |
  You can run :manual:`explain </reference/method/cursor.explain/>` on the 
  query to check whether it uses an index. Proceed to the next step to create 
  the index if the fields are not indexed. If the fields are already indexed, 
  skip to step 11.
---
level: 4
stepnum: 10
title: "(Optional) Copy and run the displayed query in your :binary:`~bin.mongo` 
       shell to create the required index. This ensures that your data is 
       indexed for optimal performance."   
ref: oa-config-create-index
---
level: 4
stepnum: 11
title: "Verify and confirm your archiving rule."   
ref: oa-config-confirm-rule
content: | 
  
  a. Click :guilabel:`Begin Archiving` in the :guilabel:`Confirm an online 
     archive` tab.
  
  b. Click :guilabel:`Confirm` in the :guilabel:`Begin Archiving` window.

  .. note:: 

     Once your document is queued for archiving, you can no longer edit the 
     document. You must use :binary:`~bin.mongodump` or :binary:`mongoexport 
     <bin.mongoexport>` to move archived data back into the live |service| 
     cluster delete the archive to remove the data from the archive.
...
