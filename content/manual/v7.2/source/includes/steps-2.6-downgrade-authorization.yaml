title:
  text: Connect and authenticate to MongoDB instance.
  character: "`"
stepnum: 1
ref: connect-and-authenticate
content: |
   Connect and authenticate to the :binary:`~bin.mongod` instance for a
   single deployment or a :binary:`~bin.mongos` for a sharded cluster with
   the appropriate privileges. See :ref:`downgrade-auth-model-prerequisite`
   for details.
---
title:
  text: Create backup of 2.6 ``admin.system.users`` collection.
  character: "`"
stepnum: 2
ref: create-backup-of-new-users
pre: |
  Copy all documents in the :data:`admin.system.users` collection to
  the ``admin.system.new_users`` collection:
action:
  language: javascript
  code: |
    db.getSiblingDB("admin").system.users.find().forEach( function(userDoc) {
        status = db.getSiblingDB("admin").system.new_users.save( userDoc );
        if (status.hasWriteError()) {
            print(status.writeError);
        }
      }
    );
---
title:
  text: Update the version document for the ``authSchema``.
  character: "`"
stepnum: 3
ref: update-version-schema-initial
action:
  language: javascript
  code: |
    db.getSiblingDB("admin").system.version.update(
       { _id: "authSchema" },
       { $set: { currentVersion: 2 } }
    );
post: |
  The method returns a :method:`WriteResult` object with the status
  of the operation.
  Upon successful update, the :method:`WriteResult` object should
  have ``"nModified"`` equal to ``1``.
---
title:
  text: "Remove existing documents from the ``admin.system.users`` collection."
  character: "`"
stepnum: 4
ref: remove-existing-documents
action:
  language: javascript
  code: |
    db.getSiblingDB("admin").system.users.remove( {} )
post: |
  The method returns a :method:`WriteResult` object with the number of
  documents removed in the ``"nRemoved"`` field.
---
title:
  text: Copy documents from the ``admin.system.backup_users`` collection.
  character: "`"
stepnum: 5
ref: copy-backup-users
pre: |
  Copy all documents from the ``admin.system.backup_users``, created during the
  2.6 upgrade, to ``admin.system.users``.
action:
  language: javascript
  code: |
   db.getSiblingDB("admin").system.backup_users.find().forEach(
      function (userDoc) {
         status = db.getSiblingDB("admin").system.users.insert( userDoc );
         if (status.hasWriteError()) {
             print(status.writeError);
         }
      }
   );
---
title:
  text: Update the version document for the ``authSchema``.
  character: "`"
stepnum: 6
ref: update-version-schema-final
action:
  language: javascript
  code: |
    db.getSiblingDB("admin").system.version.update(
       { _id: "authSchema" },
       { $set: { currentVersion: 1 } }
    )
...
