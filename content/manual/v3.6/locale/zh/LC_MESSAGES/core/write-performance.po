#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/core/write-performance.txt:3
msgid "Write Operation Performance"
msgstr ""

#: ../source/core/write-performance.txt:14
msgid "Indexes"
msgstr ""

#: ../source/core/write-performance.txt:16
msgid ""
"Each index on a collection adds some amount of overhead to the "
"performance of write operations."
msgstr ""

#: ../source/core/write-performance.txt:19
msgid ""
"For each :dbcommand:`insert` or :dbcommand:`delete` write operation on a "
"collection, MongoDB either inserts or removes the corresponding document "
"keys from each index in the target collection. An :dbcommand:`update` "
"operation may result in updates to a subset of indexes on the collection,"
" depending on the keys affected by the update."
msgstr ""

#: ../source/core/write-performance.txt:27
msgid ""
"MongoDB only updates a :ref:`sparse <index-type-sparse>` or :ref:`partial"
" <index-type-partial>` index if the documents involved in a write "
"operation are included in the index."
msgstr ""

#: ../source/core/write-performance.txt:31
msgid ""
"On :binary:`~bin.mongod` instances that use the :ref:`MMAPv1 <storage-"
"mmapv1>` storage engine, update operations may cause a document to grow "
"beyond its allocated space. When a document outgrows its allocated space,"
" MMAPv1 moves the document to a new location on disk, and must update "
"each index on the collection to point to the new document location. These"
" move operations can be expensive but occur infrequently."
msgstr ""

#: ../source/core/write-performance.txt:40
msgid ""
"In general, the performance gains that indexes provide for *read "
"operations* are worth the insertion penalty. However, in order to "
"optimize write performance when possible, be careful when creating new "
"indexes and evaluate the existing indexes to ensure that your queries "
"actually use these indexes."
msgstr ""

#: ../source/core/write-performance.txt:46
msgid ""
"For indexes and queries, see :doc:`/core/query-optimization`. For more "
"information on indexes, see :doc:`/indexes` and "
":doc:`/applications/indexes`."
msgstr ""

#: ../source/core/write-performance.txt:53
msgid "Document Growth and the MMAPv1 Storage Engine"
msgstr ""

#: ../source/core/write-performance.txt:55
msgid ""
"Some update operations can increase the size of the document; for "
"instance, if an update adds a new field to the document."
msgstr ""

#: ../source/core/write-performance.txt:58
msgid ""
"For the MMAPv1 storage engine, if an update operation causes a document "
"to exceed the currently allocated :term:`record size`, MongoDB relocates "
"the document on disk with enough contiguous space to hold the document. "
"Updates that require relocations take longer than updates that do not, "
"particularly if the collection has indexes. If a collection has indexes, "
"MongoDB must update all index entries. Thus, for a collection with many "
"indexes, the move will impact the write throughput."
msgstr ""

#: ../source/core/write-performance.txt:69
msgid ""
"By default, MongoDB uses :ref:`power-of-2-allocation` to add "
":ref:`padding automatically <record-allocation-strategies>` for the "
"MMAPv1 storage engine. The :ref:`power-of-2-allocation` ensures that "
"MongoDB allocates document space in sizes that are powers of 2, which "
"helps ensure that MongoDB can efficiently reuse free space created by "
"document deletion or relocation as well as reduce the occurrences of "
"reallocations in many cases."
msgstr ""

#: ../source/core/write-performance.txt:77
msgid ""
"Although :ref:`power-of-2-allocation` minimizes the occurrence of re-"
"allocation, it does not eliminate document re-allocation."
msgstr ""

#: ../source/core/write-performance.txt:81
msgid "See :doc:`/core/mmapv1` for more information."
msgstr ""

#: ../source/core/write-performance.txt:84
msgid "Storage Performance"
msgstr ""

#: ../source/core/write-performance.txt:87
msgid "Hardware"
msgstr ""

#: ../source/core/write-performance.txt:89
msgid ""
"The capability of the storage system creates some important physical "
"limits for the performance of MongoDB's write operations. Many unique "
"factors related to the storage system of the drive affect write "
"performance, including random access patterns, disk caches, disk "
"readahead and RAID configurations."
msgstr ""

#: ../source/core/write-performance.txt:95
msgid ""
"Solid state drives (SSDs) can outperform spinning hard disks (HDDs) by "
"100 times or more for random workloads."
msgstr ""

#: ../source/core/write-performance.txt:102
msgid "Journaling"
msgstr ""

#: ../source/core/write-performance.txt:104
msgid ""
"To provide durability in the event of a crash, MongoDB uses *write ahead "
"logging* to an on-disk :term:`journal`. MongoDB writes the in-memory "
"changes first to the on-disk journal files. If MongoDB should terminate "
"or encounter an error before committing the changes to the data files, "
"MongoDB can use the journal files to apply the write operation to the "
"data files."
msgstr ""

#: ../source/core/write-performance.txt:111
msgid ""
"While the durability assurance provided by the journal typically outweigh"
" the performance costs of the additional write operations, consider the "
"following interactions between the journal and performance:"
msgstr ""

#: ../source/core/write-performance.txt:116
msgid ""
"If the journal and the data file reside on the same block device, the "
"data files and the journal may have to contend for a finite number of "
"available I/O resources. Moving the journal to a separate device may "
"increase the capacity for write operations."
msgstr ""

#: ../source/core/write-performance.txt:121
msgid ""
"If applications specify :doc:`write concerns </reference/write-concern>` "
"that include the :writeconcern:`j option <j>`, :binary:`~bin.mongod` will"
" decrease the duration between journal writes, which can increase the "
"overall write load."
msgstr ""

#: ../source/core/write-performance.txt:126
msgid ""
"The duration between journal writes is configurable using the "
":setting:`~storage.journal.commitIntervalMs` run-time option. Decreasing "
"the period between journal commits will increase the number of write "
"operations, which can limit MongoDB's capacity for write operations. "
"Increasing the amount of time between journal commits may decrease the "
"total number of write operation, but also increases the chance that the "
"journal will not record a write operation in the event of a failure."
msgstr ""

#: ../source/core/write-performance.txt:135
msgid "For additional information on journaling, see :doc:`/core/journaling`."
msgstr ""

#: ../source/includes/extracts/additional-resources-performance-eval.rst:4
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-performance-eval.rst:6
msgid ""
"`MongoDB Performance Evaluation and Tuning Consulting Package "
"<https://www.mongodb.com/products/consulting?jmp=docs#performance_evaluation>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-performance-eval.rst:7
msgid ""
"`MongoDB Atlas: For a simple way to run, monitor, and maintain cloud-"
"hosted MongoDB deployments "
"<https://www.mongodb.com/cloud/atlas?jmp=docs>`_"
msgstr ""

#~ msgid "See :doc:`/core/storage` for more information."
#~ msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid ""
#~ "After every insert, update, or delete"
#~ " operation, MongoDB must update *every* "
#~ "index associated with the collection in"
#~ " addition to the data itself. "
#~ "Therefore, every index on a collection"
#~ " adds some amount of overhead for "
#~ "the performance of write operations. "
#~ "[#exceptions]_"
#~ msgstr ""

#~ msgid ""
#~ "For inserts and updates to un-"
#~ "indexed fields, the overhead for "
#~ ":ref:`sparse indexes <index-type-sparse>` "
#~ "is less than for non-sparse "
#~ "indexes. Also for non-sparse indexes,"
#~ " updates that do not change the "
#~ "record size have less indexing overhead."
#~ msgstr ""

# b629f924565f42f7b22380635221bdd3
#~ msgid "On this page"
#~ msgstr ""

# 5559d4b66c8948af9d7f8d9727325ce8
#~ msgid ""
#~ "On :program:`mongod` instances that use "
#~ "the :ref:`MMAPv1 <storage-mmapv1>` storage "
#~ "engine, update operations may cause a"
#~ " document to grow beyond its "
#~ "allocated space. When a document "
#~ "outgrows its allocated space, MMAPv1 "
#~ "moves the document to a new "
#~ "location on disk, and must update "
#~ "each index on the collection to "
#~ "point to the new document location. "
#~ "These move operations can be expensive"
#~ " but occur infrequently."
#~ msgstr ""

# 5f255d9417294175b33e3c4f9846c2a7
#~ msgid "See"
#~ msgstr ""

# 71a478a7028e448087612162770f4147
#~ msgid ""
#~ "If applications specify :doc:`write concerns"
#~ " </reference/write-concern>` that include "
#~ "the :writeconcern:`j option <j>`, "
#~ ":program:`mongod` will decrease the duration"
#~ " between journal writes, which can "
#~ "increase the overall write load."
#~ msgstr ""

