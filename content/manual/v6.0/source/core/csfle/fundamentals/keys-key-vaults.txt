.. _csfle-reference-keys-key-vaults:

===================
Keys and Key Vaults
===================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

In this guide, you can learn details about the following components of
{+csfle+} ({+csfle-abbrev+}):

- {+dek-long+}s ({+dek-abbr+})s
- {+cmk-long+}s ({+cmk-abbr+})s
- {+key-vault-long+}s
- {+kms-long+} ({+kms-abbr+})

To view step by step guides demonstrating how to use the preceding
components to set up a {+csfle-abbrev+} enabled client, see the following resources:

- :ref:`<csfle-quick-start>`
- :ref:`<csfle-tutorial-automatic-encryption>`

.. _csfle-key-architecture:

Keys
----

.. include:: /includes/queryable-encryption/qe-csfle-about-dek-cmk-keys.rst

.. include:: /includes/queryable-encryption/qe-csfle-warning-remote-kms.rst

To view diagrams detailing how your {+dek-abbr+}, {+cmk-abbr+}, and 
{+key-vault-long+} interact
in all supported {+kms-abbr+} provider architectures, see
:ref:`csfle-reference-kms-providers`.

.. _csfle-reference-key-vault:
.. _field-level-encryption-keyvault:

{+key-vault-long-title+}s
---------------------

.. include:: /includes/queryable-encryption/qe-csfle-about-key-vault-collections.rst

{+key-vault-long-title+} Name
~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-csfle-qe-keyvault-name.rst

Permissions
~~~~~~~~~~~

.. include:: /includes/queryable-encryption/qe-csfle-key-vault-permissions.rst

To learn how to grant your application access to your {+cmk-abbr+}, see the
:ref:`<csfle-tutorial-automatic-encryption>` tutorial.

Key Vault Cluster
~~~~~~~~~~~~~~~~~

.. include:: /includes/queryable-encryption/qe-csfle-key-vault-cluster.rst

To specify the cluster that hosts your {+key-vault-long+}, use the
``keyVaultClient`` field of your client's ``MongoClient`` object.
To learn more about the {+csfle-abbrev+}-specific configuration options in your
client's ``MongoClient`` object, see :ref:`<csfle-reference-mongo-client>`.

Update a {+key-vault-long-title+}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To add a {+dek-abbr+} to your {+key-vault-long+}, use the ``createKey`` method of a
``ClientEncryption`` object.

To delete or update a {+dek-abbr+}, use standard
:manual:`CRUD </crud>` operations. You store a {+dek-abbr-no-hover+}
in MongoDB as a document, and you can apply any document operation to a
{+dek-abbr-no-hover+}.

To view a tutorial that shows how to create a {+dek-abbr+}, see
the :ref:`Quick Start <csfle-local-create-dek>`.

.. tip:: mongosh Specific Features

   :binary:`~bin.mongosh` provides the following additional
   methods for working with your {+key-vault-long+}:   
  
   - :method:`getKeyVault()`
   - :method:`KeyVault.getKey()`
   - :method:`KeyVault.getKeys()`
   - :method:`KeyVault.getKeyByAltName()`
   - :method:`KeyVault.createKey()`
   - :method:`KeyVault.addKeyAlternateName()`
   - :method:`KeyVault.removeKeyAlternateName()`
