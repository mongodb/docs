.. _c-atlas-search-index:

======================
MongoDB Search Indexes
======================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: index, query, optimization, efficiency

Overview
--------

In this guide, you can learn how to programmatically manage your {+search+}
and {+vector-search+} indexes by using the {+driver-short+}.

The {+search+} feature enables you to perform full-text searches on
collections hosted on MongoDB Atlas. To learn more about {+search+},
see the :atlas:`{+search+} Overview </atlas-search/atlas-search-overview/>`
in the Atlas documentation.

{+vector-search+} enables you to perform semantic searches on vector
embeddings stored in MongoDB Atlas. To learn more about {+vector-search+},
see the :atlas:`{+vector-search+} Overview </atlas-vector-search/vector-search-overview/>`
in the Atlas documentation.

The following sections provide code examples that demonstrate how to create, list, update,
and delete {+search+} and {+vector-search+} indexes.

.. _c-atlas-search-index-create:

Create a Search Index
---------------------

To create a {+search+} or {+vector-search+} index, pass the ``createSearchIndexes``
command to the ``mongoc_collection_command_simple()`` function. You can use this command
to create one or multiple indexes.

The following code example shows how to create a {+search+} index:

.. literalinclude:: /includes/indexes/indexes.c
   :language: c
   :start-after: start-create-search-index
   :end-before: end-create-search-index
   :dedent:

The following code example shows how to create a {+vector-search+} index:

.. literalinclude:: /includes/indexes/indexes.c
   :language: c
   :start-after: start-create-vector-search-index
   :end-before: end-create-vector-search-index
   :dedent:

The following code example shows how to create both search indexes in
one call to the ``mongoc_collection_command_simple()`` function:

.. literalinclude:: /includes/indexes/indexes.c
   :language: c
   :start-after: start-create-search-indexes
   :end-before: end-create-search-indexes
   :dedent:

To learn more about the syntax used to define each search index, see the
following guides in the Atlas documentation:

- :atlas:`Review {+search+} Index Syntax </atlas-search/index-definitions>`
- :atlas:`How to Index Fields for {+vector-search+} </atlas-vector-search/vector-search-type/>`

.. _c-atlas-search-index-list:

List Search Indexes
-------------------

You can pass the ``$listSearchIndexes`` aggregation stage to the
``mongoc_collection_aggregate()`` function to return all {+search+}
and {+vector-search+} indexes in a collection.

The following code example shows how to print a list of the search indexes in
a collection:

.. literalinclude:: /includes/indexes/indexes.c
   :language: c
   :start-after: start-list-search-indexes
   :end-before: end-list-search-indexes
   :dedent:

.. _c-atlas-search-index-update:

Update a Search Index
---------------------

You can pass the ``updateSearchIndex`` command to the  ``mongoc_collection_command_simple()``
function to update a {+search+} or {+vector-search+} index.

The following code shows how to update the {+search+} index
created in the :ref:`c-atlas-search-index-create` section of this guide
to use dynamic mappings:

.. literalinclude:: /includes/indexes/indexes.c
   :language: c
   :start-after: start-update-search-index
   :end-before: end-update-search-index
   :dedent:

The following code shows how to update the {+vector-search+}
index created in the :ref:`c-atlas-search-index-create` section of this guide
to use the ``cosine`` similarity function:

.. literalinclude:: /includes/indexes/indexes.c
   :language: c
   :start-after: start-update-vector-search-index
   :end-before: end-update-vector-search-index
   :dedent:

.. _c-atlas-search-index-drop:

Delete a Search Index
---------------------

You can pass the ``dropSearchIndexes`` command to the  ``mongoc_collection_command_simple()``
function to delete a {+search+} or {+vector-search+} index.

The following code shows how to delete a search index from a collection:

.. literalinclude:: /includes/indexes/indexes.c
   :language: c
   :start-after: start-drop-search-index
   :end-before: end-drop-search-index
   :dedent:

Additional Information
----------------------

To learn more about {+search+}, see :atlas:`{+search+} Indexes </atlas-search/atlas-search-overview/>`
in the Atlas documentation.

To learn more about {+vector-search+}, see :atlas:`How to Index Fields for {+vector-search+}
</atlas-vector-search/vector-search-type/>` in the Atlas documentation.

API Documentation
~~~~~~~~~~~~~~~~~

To learn more about any of the functions discussed in this guide, see the following API
documentation:

- `mongoc_collection_command_simple() <{+api-libmongoc+}/mongoc_collection_command_simple.html>`_
- `mongoc_collection_aggregate() <{+api-libmongoc+}/mongoc_collection_aggregate.html>`_