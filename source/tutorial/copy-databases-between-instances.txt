================================
Copy Databases Between Instances
================================

.. default-domain:: mongodb

Overview
--------

The :dbcommand:`copydb` :term:`database command` has an equivalent
:method:`db.copyDatabase()` helper in the :program:`mongo`
shell. Likewise, the :dbcommand:`clone` :term:`database command`
has an equivalent :method:`db.cloneDatabase()` helper.

MongoDB provides the :dbcommand:`copydb` and :dbcommand:`clone`
:term:`database commands <database command>` to support migrations of
entire logical databases between :program:`mongod` instances. With
these commands you can copy data between instances with a simple
interface without the need for an intermediate stage. The
:method:`db.cloneDatabase()` and :method:`db.copyDatabase()` provide
helpers for these operations in the :program:`mongo` shell.
These migration helpers run the commands on the
**destination** server and *pull* data from the **source** server..

Data migrations that require an intermediate stage or that involve
more than one database instance are beyond the scope of this
tutorial. :dbcommand:`copydb` and :dbcommand:`clone` are more ideal
for use cases that resemble the following use cases:

- data migrations,

- data warehousing, and

- seeding test environments.

Also consider the :doc:`/core/backups` and
:doc:`/core/import-export` documentation for more related
information.

Considerations
--------------

- You must run :dbcommand:`copydb` or :dbcommand:`clone` on the
  destination server.

- You cannot use :dbcommand:`copydb` or :dbcommand:`clone` with
  databases that have a sharded collection in a :term:`sharded cluster`,
  or any database via a :program:`mongos`.

- You *can* use :dbcommand:`copydb` or :dbcommand:`clone` with
  databases that do not have sharded collections in a :term:`cluster`
  when you're connected directly to the :program:`mongod` instance.

- You can run :dbcommand:`copydb` or :dbcommand:`clone` commands on a
  :term:`secondary` member of a replica set, with properly configured
  :term:`read preference`.

- Each destination :program:`mongod` instance must have enough
  free disk space on the destination server for the database you are
  copying. Use the :method:`db.stats()` operation to check the size of
  the database on the source :program:`mongod` instance. For more
  information, see :method:`db.stats()`.

- :dbcommand:`copydb` and :dbcommand:`clone` do not produce
  point-in-time snapshots of the source database. Write traffic to
  the source or destination database during the copy process will
  result divergent data sets.

Processes
---------

Copy and Rename a Database
~~~~~~~~~~~~~~~~~~~~~~~~~~

To copy a database from one MongoDB instance to another and rename
the database in the process, use the :dbcommand:`copydb` command, or
the :method:`db.copyDatabase()` helper in the :program:`mongo` shell.

Use the following procedure to copy the database named ``test`` on
server ``db0.example.net`` to the server named ``db1.example.net`` and
rename it to ``records`` in the process:

- Verify that the database, ``test`` exists on the source
  :program:`mongod` instance running on the ``db0.example.net`` host.

- Connect to the destination server, running on the
  ``db1.example.net`` host, using the :program:`mongo` shell.

- Model your operation on the following command:

  .. code-block:: javascript

     db.copyDatabase( "test", "records", "db0.example.net" )

Rename a Database
~~~~~~~~~~~~~~~~~

You can also use :dbcommand:`copydb` or the
:method:`db.copyDatabase()` helper to:

- rename a database within a single MongoDB instance or

- create a duplicate database for testing purposes.

Use the following procedure to rename the ``test`` database
``records`` on a single :program:`mongod` instance:

- Connect to the :program:`mongod` using the :program:`mongo` shell.

- Model your operation on the following command:

  .. code-block:: javascript

     db.copyDatabase( "test", "records" )

Copy a Database with Authentication
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To copy a database from a source MongoDB instance that has
authentication enabled, you can specify authentication credentials to
the :dbcommand:`copydb` command or the :method:`db.copyDatabase()`
helper in the :program:`mongo` shell.

In the following operation, you will copy the ``test`` database from
the :program:`mongod` running on ``db0.example.net`` to the
``records`` database on the local instance (e.g. ``db1.example.net``.)
Because the :program:`mongod` instance running on ``db0.example.net``
requires authentication for all connections, you will need to pass
:method:`db.copyDatabase()` authentication credentials, as in the
following procedure:

- Connect to the destination :program:`mongod` instance running on the
  ``db1.example.net`` host using the :program:`mongo` shell.

- Issue the following command:

  .. code-block:: javascript

     db.copyDatabase( "test", "records", "db0.example.net", "<username>", "<password>")

Replace ``<username>`` and ``<password>`` with your authentication
credentials.

Clone a Database
~~~~~~~~~~~~~~~~

The :dbcommand:`clone` command copies a database between
:program:`mongod` instances like :dbcommand:`copydb`; however,
:dbcommand:`clone` preserves the database name from the source
instance on the destination :program:`mongod`.

For many operations, :dbcommand:`clone` is functionally equivalent to
:dbcommand:`copydb`, but it has a more simple syntax and a more narrow
use. The :program:`mongo` shell provides the
:method:`db.cloneDatabase()` helper as a wrapper around
:dbcommand:`clone`.

You can use the following procedure to clone a database from the
:program:`mongod` instance running on ``db0.example.net`` to the
:program:`mongod` running on ``db1.example.net``:

- Connect to the destination :program:`mongod` instance running on the
  ``db1.example.net`` host using the :program:`mongo` shell.

- Issue the following command to specify the name of the database you
  want to copy:

  .. code-block:: javascript

     use records

- Use the following operation to initiate the :dbcommand:`clone`
  operation:

  .. code-block:: javascript

     db.cloneDatabase( "db0.example.net" )

