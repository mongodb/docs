# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: 2014-04-08 19:32+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# 52548c7891d04b658c0fdaa0386b19f5
#: ../source/core/replica-set-rollbacks.txt:10
msgid "Rollbacks During Replica Set Failover"
msgstr ""

# 7a787ebc6d2c4df78391f113bf208f32
#: ../source/core/replica-set-rollbacks.txt
msgid "On this page"
msgstr ""

# da4e10dd28a847a98c35318e2bda097c
#: ../source/core/replica-set-rollbacks.txt:20
msgid ""
"A rollback reverts write operations on a former :term:`primary` when the "
"member rejoins its :term:`replica set` after a :term:`failover`. A "
"rollback is necessary only if the primary had accepted write operations "
"that the :term:`secondaries <secondary>` had **not** successfully "
"replicated before the primary stepped down. When the primary rejoins the "
"set as a secondary, it reverts, or \"rolls back,\" its write operations "
"to maintain database consistency with the other members."
msgstr ""

# 56575ddadc034dc2b15999cd2e1d0bfa
#: ../source/core/replica-set-rollbacks.txt:29
msgid ""
"MongoDB attempts to avoid rollbacks, which should be rare. When a "
"rollback does occur, it is often the result of a network partition. "
"Secondaries that can not keep up with the throughput of operations on the"
" former primary, increase the size and impact of the rollback."
msgstr ""

# 9b9212958e984670adb3622003ca6ef0
#: ../source/core/replica-set-rollbacks.txt:35
msgid ""
"A rollback does *not* occur if the write operations replicate to another "
"member of the replica set before the primary steps down *and* if that "
"member remains available and accessible to a majority of the replica set."
msgstr ""

# e8565d22b4da400ca4e1ad91dcc66d33
#: ../source/core/replica-set-rollbacks.txt:41
msgid "Collect Rollback Data"
msgstr ""

# add6103f5c3940dcaa2fdccbd007b24b
#: ../source/core/replica-set-rollbacks.txt:43
msgid ""
"When a rollback does occur, MongoDB writes the rollback data to "
":term:`BSON` files in the ``rollback/`` folder under the database's "
":setting:`~storage.dbPath` directory. The names of rollback files have "
"the following form:"
msgstr ""

# f3e2142e2a5242f6aa8353054dc03d37
#: ../source/core/replica-set-rollbacks.txt:52
msgid "For example:"
msgstr ""

# e3c5e6894f5a42b0b25fc6f05815e936
#: ../source/core/replica-set-rollbacks.txt:58
msgid ""
"To read the contents of the rollback files, use :doc:`bsondump "
"</reference/program/bsondump>`. Based on the content and the knowledge of"
" their applications, administrators can decide the next course of action "
"to take."
msgstr ""

# 9efa0899665840a594f13d71fe9a935d
#: ../source/core/replica-set-rollbacks.txt:64
msgid "Avoid Replica Set Rollbacks"
msgstr ""

# e4e1bfe992c948a7b9ca209a9e8e1263
#: ../source/core/replica-set-rollbacks.txt:66
msgid ""
"For replica sets, the default :doc:`write concern {w: 1} </reference"
"/write-concern>` only provides acknowledgement of write operations on the"
" primary. With the default write concern, data may be rolled back if the "
"primary steps down before the write operations have replicated to any of "
"the secondaries."
msgstr ""

# 288fbfa035df4e76bcfcc87401eccb1a
#: ../source/core/replica-set-rollbacks.txt:72
msgid ""
"To prevent rollbacks of data that have been acknowledged to the client, "
"run all voting members with journaling enabled and use :ref:`w: majority "
"write concern <wc-w>` to guarantee that the write operations propagate to"
" a majority of the replica set nodes before returning with "
"acknowledgement to the issuing client."
msgstr ""

# 86583588981b4cac8847f5fa901d92e7
#: ../source/includes/extracts/no-journaling-rollback.rst:1
msgid ""
"With :rsconf:`writeConcernMajorityJournalDefault` set to ``false``, "
"MongoDB will not wait for :writeconcern:`w: \"majority\" <\"majority\">` "
"writes to be durable before acknowledging the writes. As such, "
":writeconcern:`\"majority\"` write operations could possibly roll back in"
" the event of a loss of a replica set member."
msgstr ""

# 1ac6573e13af4ed7886c627155a31e5c
#: ../source/includes/list-visibility-of-data.rst:1
msgid ""
"Regardless of :doc:`write concern </reference/write-concern>`, other "
"clients using :readconcern:`\"local\"` (i.e. the default) readConcern can"
" see the result of a write operation before the write operation is "
"acknowledged to the issuing client."
msgstr ""

# 5c6c35e06ab243bb9655dfa60e6f0aed
#: ../source/includes/list-visibility-of-data.rst:6
msgid ""
"Clients using :readconcern:`\"local\"` (i.e. the default) readConcern can"
" read data which may be subsequently :doc:`rolled back </core/replica-"
"set-rollbacks>`."
msgstr ""

# c58c7b0d1ed946f097f289fa7d6b2fcf
#: ../source/core/replica-set-rollbacks.txt:85
msgid "Rollback Limitations"
msgstr ""

# 932cf42f4b8440a7afdf4b8007df343c
#: ../source/core/replica-set-rollbacks.txt:87
msgid ""
"A :program:`mongod` instance will not rollback more than 300 megabytes of"
" data. If your system must rollback more than 300 megabytes, you must "
"manually intervene to recover the data. If this is the case, the "
"following line will appear in your :program:`mongod` log:"
msgstr ""

# ca0d7c7cefdf4769ac0ea4d79fa8a7a3
#: ../source/core/replica-set-rollbacks.txt:97
msgid ""
"In this situation, save the data directly or force the member to perform "
"an initial sync. To force initial sync, sync from a \"current\" member of"
" the set by deleting the content of the :setting:`~storage.dbPath` "
"directory for the member that requires a larger rollback."
msgstr ""

# c86452e91cae400f827c127940bd2c1f
#: ../source/core/replica-set-rollbacks.txt:102
msgid ""
":doc:`/core/replica-set-high-availability` and :doc:`/core/replica-set-"
"elections`."
msgstr ""

# 2618808ac2d641af8de78e10cb92a1cf
#: ../source/core/replica-set-rollbacks.txt:1
msgid "rollbacks"
msgstr ""

# 2618808ac2d641af8de78e10cb92a1cf
#: ../source/core/replica-set-rollbacks.txt:1
msgid "replica set"
msgstr ""

# 2618808ac2d641af8de78e10cb92a1cf
#: ../source/core/replica-set-rollbacks.txt:1
msgid "consistency"
msgstr ""

# a3cd2f220a19413398e0ea37e52ad819
#~ msgid ""
#~ "When a rollback does occur, "
#~ "administrators must decide whether to "
#~ "apply or ignore the rollback data. "
#~ "MongoDB writes the rollback data to "
#~ ":term:`BSON` files in the ``rollback/`` "
#~ "folder under the database's "
#~ ":setting:`~storage.dbPath` directory.  The names "
#~ "of rollback files have the following "
#~ "form:"
#~ msgstr ""

# 9e1a70123dc747579bbfa76b403529f2
#~ msgid ""
#~ "Administrators must apply rollback data "
#~ "manually after the member completes the"
#~ " rollback and returns to secondary "
#~ "status. Use :doc:`bsondump "
#~ "</reference/program/bsondump>` to read the "
#~ "contents of the rollback files. Then "
#~ "use :program:`mongorestore` to apply the "
#~ "changes to the new primary."
#~ msgstr ""

# e52a1a47368545b186a74b00b2d496ec
#~ msgid ""
#~ "To prevent rollbacks, use :ref:`replica "
#~ "acknowledged write concern <write-concern-"
#~ "replica-acknowledged>` to guarantee that "
#~ "the write operations propagate to the"
#~ " members of a replica set."
#~ msgstr ""

