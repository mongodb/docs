ref: api-alert-configuration-elements
content: |

   .. note:: 

      Alert configurations vary. An alert configuration may only
      include a subset of these elements.

   .. list-table::
      :widths: 10 10 80
      :header-rows: 1

      * - Name
        - Type
        - Description

      * - ``id``
        - string
        - Unique identifier.

      * - ``groupId``
        - string
        - Unique identifier of the project that owns this alert
          configuration.

      * - ``eventTypeName``
        - string
        - Type of event that will trigger an alert.

          Accepted values are:

          .. include:: /includes/possibleValues-api-eventTypeName.rst

      * - ``created``
        - string
        - |iso8601-time| when this alert configuration was created.

      * - ``updated``
        - string
        - |iso8601-time| when this alert configuration was last updated.

      * - ``enabled``
        - boolean
        - If set to ``true``, the alert configuration is enabled.

          If ``enabled`` is not specified in a ``POST`` command, it
          defaults to ``false``.

      * - ``matchers``
        - object array
        - Rules to apply when matching an object against this alert
          configuration. Only entities that match *all* these rules
          are checked for an alert condition.

          You can filter using the ``matchers`` array only when the
          ``eventTypeName`` specifies an event for a host, replica
          set, or sharded cluster.

      * - ``matchers.fieldName``
        - string
        - Name of the field in the target object to match on.

          - Host alerts support these fields:

            - ``TYPE_NAME``
            - ``HOSTNAME``
            - ``PORT``
            - ``HOSTNAME_AND_PORT``
            - ``REPLICA_SET_NAME``

          - Replica set alerts support these fields:

            - ``REPLICA_SET_NAME``
            - ``SHARD_NAME``
            - ``CLUSTER_NAME``

          - Sharded cluster alerts support these fields:

            - ``CLUSTER_NAME``
            - ``SHARD_NAME``

          All other types of alerts do not support matchers.

      * - ``matchers.operator``
        - string
        - The operator to test the field's value. Accepted values are:

          - ``EQUALS``
          - ``NOT_EQUALS``
          - ``CONTAINS``
          - ``NOT_CONTAINS``
          - ``STARTS_WITH``
          - ``ENDS_WITH``
          - ``REGEX``

      * - ``matchers.value``
        - string
        - Value to test with the specified operator.

          If ``"matchers.fieldName" : "TYPE_NAME"``, you can match on
          the following values:

          - ``PRIMARY``
          - ``SECONDARY``
          - ``STANDALONE``
          - ``CONFIG``
          - ``MONGOS``

      * - ``metricThreshold``
        - object
        - The threshold that causes an alert to be triggered.
          Populated if ``"eventTypeName" :
          "OUTSIDE_METRIC_THRESHOLD"``.

      * - ``metricThreshold.metricName``
        - string
        - Name of the metric against which |service| checks the
          configured ``metricThreshold.threshold``.

          See :ref:`measurement-types` for the available metrics.

      * - ``metricThreshold.operator``
        - string
        - Operator to apply when checking the current metric value
          against the threshold value. Accepted values are:

          - ``GREATER_THAN``
          - ``LESS_THAN``

      * - ``metricThreshold.threshold``
        - integer
        - Threshold value outside of which an alert will be triggered.

      * - ``metricThreshold.units``
        - string
        - The units for the threshold value. Depends on the type of
          metric. 

          .. example::

             A metric that measures memory consumption would have a
             byte measurement, while a metric that measures time would
             have a time unit.

          Accepted values are:

          .. include:: /includes/possibleValues-api-units.rst

      * - ``metricThreshold.mode``
        - string
        - ``AVERAGE``. |service| computes the current metric value as
          an average.

      * - ``notifications``
        - object array
        - Notifications to send when an alert condition is detected.

      * - ``notifications.typeName``
        - string
        - Type of alert notification. Accepted values are:

          - ``DATADOG``
          - ``EMAIL``
          - ``FLOWDOCK``
          - ``GROUP`` (Project)
          - ``HIP_CHAT``
          - ``OPS_GENIE``
          - ``ORG``
          - ``PAGER_DUTY``
          - ``SLACK``
          - ``SMS``
          - ``TEAM``
          - ``USER``
          - ``VICTOR_OPS``
          - ``WEBHOOK``

      * - ``notifications.intervalMin``
        - integer
        - Number of minutes to wait between successive
          notifications for unacknowledged alerts that are not
          resolved.

      * - ``notifications.delayMin``
        - integer
        - Number of minutes to wait after an alert condition is
          detected before sending out the first notification.

      * - ``notifications.emailEnabled``
        - boolean
        - Flag indicating if email notifications should be sent.
          Populated for ``ORG``, ``GROUP``, and ``USER`` notifications
          types.

      * - ``notifications.smsEnabled``
        - boolean
        - Flag indicating if text message notifications should be sent.
          Populated for ``ORG``, ``GROUP``, and ``USER`` notifications
          types.

      * - ``notifications.username``
        - string
        - Name of the |service| user to which to send notifications.
          Only a user in the project that owns the alert configuration
          is allowed here. Populated for the ``USER`` notifications
          type.

      * - ``notifications.teamId``
        - string
        - Unique identifier of a team.

      * - ``notifications.emailAddress``
        - string
        - Email address to which alert notifications should be sent.
          Populated for the ``EMAIL`` notifications type.

      * - ``notifications.mobileNumber``
        - string
        - Mobile number to which alert notifications should be sent.
          Populated for the ``SMS`` notifications type.

      * - ``notifications.notificationToken``
        - string
        - HipChat API token. 
          Populated for the ``HIP_CHAT`` notifications types.
          If the token later becomes invalid, |service| sends an email
          to the project owner and eventually removes the token.

      * - ``notifications.roomName``
        - string
        - HipChat room name.
          Populated for the ``HIP_CHAT`` notifications type.

      * - ``notifications.channelName``
        - string
        - Slack channel name.
          Populated for the ``SLACK`` notifications type.

      * - ``notifications.apiToken``
        - string
        - Slack API token or Bot token. 
          Populated for the ``SLACK`` notifications type.
          If the token later becomes invalid, |service| sends an email
          to the project owner and eventually removes the token.

      * - ``notifications.orgName``
        - string
        - Flowdock organization name in lower-case letters. This is the
          name that appears after ``www.flowdock.com/app/`` in the URL
          string. Populated for the ``FLOWDOCK`` notifications type.

      * - ``notifications.flowName``
        - string
        - Flowdock flow name in lower-case letters.
          The flow name appears after the
          organization name in the URL string:

          ``www.flowdock.com/app/<organization-name>/<flow-name>``.

          Populated for the ``FLOWDOCK`` notifications type.

      * - ``notifications.flowdockApiToken``
        - string
        - The Flowdock personal API token. Populated for the
          ``FLOWDOCK`` notifications type. If the token later becomes
          invalid, |service| sends an email to the project owner and
          eventually removes the token.

      * - ``notifications.serviceKey``
        - string
        - PagerDuty service key. Populated for the ``PAGER_DUTY``
          notifications type. If the key later becomes invalid,
          |service| sends an email to the project owner and eventually
          removes the key.

      * - ``notifications.victorOpsApiKey``
        - string
        - VictorOps API key.
          Populated for the ``VICTOR_OPS`` notifications type.
          If the key later becomes invalid, |service| sends an email
          to the project owner and eventually removes the key.

      * - ``notifications.victorOpsRoutingKey``
        - string
        - VictorOps routing key.
          Populated for the ``VICTOR_OPS`` notifications type.
          If the key later becomes invalid, |service| sends an email
          to the project owner and eventually removes the key.

      * - ``notifications.opsGenieApiKey``
        - string
        - OpsGenie API Key. Populated for the ``OPS_GENIE``
          notifications type. If the key later becomes invalid,
          |service| sends an email to the project owner and eventually
          removes the token.

---
ref: api-alert-configuration-create
content: |

   .. note:: 
      Alert configurations vary. An alert configuration may only
      include a subset of these elements.
      
   .. list-table::
      :widths: 10 10 80
      :header-rows: 1

      * - Name
        - Type
        - Description

      * - ``eventTypeName``
        - string
        - Required. The type of event that will trigger an alert.

          .. include:: /includes/possibleValues-api-eventTypeName.rst

          If this is set to ``OUTSIDE_METRIC_THRESHOLD``, the
          ``metricThreshold`` field must also be set.
                
      * - ``enabled``
        - boolean
        - If omitted, the configuration is disabled.

      * - ``matchers``
        - object array
        - Rules to apply when matching an object against this alert
          configuration. Only entities that match *all* these rules
          are checked for an alert condition.

          You can filter using the ``matchers`` array only when the
          ``eventTypeName`` specifies an event for a host, replica
          set, or sharded cluster.

      * - ``matchers.fieldName``
        - string
        - Name of the field in the target object to match on.

          - Host alerts support these fields:

            - ``TYPE_NAME``
            - ``HOSTNAME``
            - ``PORT``
            - ``HOSTNAME_AND_PORT``
            - ``REPLICA_SET_NAME``

          - Replica set alerts support these fields:

            - ``REPLICA_SET_NAME``
            - ``SHARD_NAME``
            - ``CLUSTER_NAME``

          - Sharded cluster alerts support these fields:

            - ``CLUSTER_NAME``
            - ``SHARD_NAME``

          All other types of alerts do not support matchers.

      * - ``matchers.operator``
        - string
        - The operator to test the field's value. Accepted values are:

          - ``EQUALS``
          - ``NOT_EQUALS``
          - ``CONTAINS``
          - ``NOT_CONTAINS``
          - ``STARTS_WITH``
          - ``ENDS_WITH``
          - ``REGEX``
 
      * - ``matchers.value``
        - string
        - Value to test with the specified operator.

          If ``matchers.fieldName`` is set to ``TYPE_NAME``, you can 
          match on the following values:

          - ``PRIMARY``
          - ``SECONDARY``
          - ``STANDALONE``
          - ``CONFIG``
          - ``MONGOS``

      * - ``metricThreshold``
        - object
        - The threshold that causes an alert to be triggered.
          Populated if ``"eventTypeName" :
          "OUTSIDE_METRIC_THRESHOLD"``.

      * - ``metricThreshold.metricName``
        - string
        - Name of the metric to check.

          See :ref:`measurement-types` for the available metrics.

      * - ``metricThreshold.operator``
        - string
        - Operator to apply when checking the current metric value
          against the threshold value. Accepted values are:

          - ``GREATER_THAN``
          - ``LESS_THAN``

      * - ``metricThreshold.threshold``
        - integer
        - Threshold value outside of which an alert will be triggered.

      * - ``metricThreshold.units``
        - string
        - The units for the threshold value. Depends on the type of
          metric. 

          .. example::

             A metric that measures memory consumption would have a
             byte measurement, while a metric that measures time would
             have a time unit.

          Accepted values are:

          .. include:: /includes/possibleValues-api-units.rst

      * - ``metricThreshold.mode``
        - string
        - This must be set to ``AVERAGE``. |service| computes the
          current metric value as an average.

      * - ``notifications``
        - object array
        - Required. Notifications to send when an alert condition is
          detected.

      * - ``notifications.typeName``
        - string
        - Type of alert notification. Accepted values are:

          - ``DATADOG``
          - ``EMAIL``
          - ``FLOWDOCK``
          - ``GROUP`` (Project)
          - ``HIP_CHAT``
          - ``OPS_GENIE``
          - ``ORG``
          - ``PAGER_DUTY``
          - ``SLACK``
          - ``SMS``
          - ``TEAM``
          - ``USER``
          - ``VICTOR_OPS``
          - ``WEBHOOK``

      * - ``notifications.intervalMin``
        - integer
        - Number of minutes to wait between successive
          notifications for unacknowledged alerts that are not
          resolved. The minimum value is ``5``.

      * - ``notifications.delayMin``
        - integer
        - Number of minutes to wait after an alert condition is
          detected before sending out the first notification.

      * - ``notifications.emailEnabled``
        - boolean
        - Flag indicating if email notifications should be sent.
          Populated for ``ORG``, ``GROUP``, and ``USER`` notifications
          types.

      * - ``notifications.smsEnabled``
        - boolean
        - Flag indicating if text message notifications should be sent.
          Populated for ``ORG``, ``GROUP``, and ``USER`` notifications
          types.

      * - ``notifications.username``
        - string
        - Name of the |service| user to which to send notifications.
          Only a user in the project that owns the alert configuration
          is allowed here. Populated for the ``USER`` notifications
          type.
          
      * - ``notifications.teamId``
        - string
        - Unique identifier of a team.

      * - ``notifications.emailAddress``
        - string
        - Email address to which alert notifications should be sent.
          Populated for the ``EMAIL`` notifications type.

      * - ``notifications.mobileNumber``
        - string
        - Mobile number to which alert notifications should be sent.
          Populated for the ``SMS`` notifications type.

      * - ``notifications.notificationToken``
        - string
        - HipChat API token. 
          Populated for the ``HIP_CHAT`` notifications types.
          If the token later becomes invalid, |service| sends an email
          to the project owner and eventually removes the token.

      * - ``notifications.roomName``
        - string
        - HipChat room name.
          Populated for the ``HIP_CHAT`` notifications type.

      * - ``notifications.channelName``
        - string
        - Slack channel name.
          Populated for the ``SLACK`` notifications type.

      * - ``notifications.apiToken``
        - string
        - Slack API token or Bot token. 
          Populated for the ``SLACK`` notifications type.
          If the token later becomes invalid, |service| sends an email
          to the project owner and eventually removes the token.

      * - ``notifications.orgName``
        - string
        - Flowdock organization name in lower-case letters. This is the
          name that appears after ``www.flowdock.com/app/`` in the URL
          string. Populated for the ``FLOWDOCK`` notifications type.

      * - ``notifications.flowName``
        - string
        - Flowdock flow name in lower-case letters.
          The flow name appears after the
          organization name in the URL string:

          ``www.flowdock.com/app/<organization-name>/<flow-name>``.

          Populated for the ``FLOWDOCK`` notifications type.

      * - ``notifications.flowdockApiToken``
        - string
        - The Flowdock personal API token. Populated for the
          ``FLOWDOCK`` notifications type. If the token later becomes
          invalid, |service| sends an email to the project owner and
          eventually removes the token.

      * - ``notifications.serviceKey``
        - string
        - PagerDuty service key. Populated for the ``PAGER_DUTY``
          notifications type. If the key later becomes invalid,
          |service| sends an email to the project owner and eventually
          removes the key.

      * - ``notifications.victorOpsApiKey``
        - string
        - VictorOps API key.
          Populated for the ``VICTOR_OPS`` notifications type.
          If the key later becomes invalid, |service| sends an email
          to the project owner and eventually removes the key.

      * - ``notifications.victorOpsRoutingKey``
        - string
        - VictorOps routing key.
          Populated for the ``VICTOR_OPS`` notifications type.
          If the key later becomes invalid, |service| sends an email
          to the project owner and eventually removes the key.

      * - ``notifications.opsGenieApiKey``
        - string
        - OpsGenie API Key. Populated for the ``OPS_GENIE``
          notifications type. If the key later becomes invalid,
          |service| sends an email to the project owner and eventually
          removes the token.

...
