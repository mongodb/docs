# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: 2014-04-08 19:13+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# f683888cf0254b498e1efac6a4e55fd4
#: ../source/reference/method/db.collection.group.txt:3
msgid "db.collection.group()"
msgstr ""

# a308ab5eb3d64138862c8c686c87c312
#: ../source/reference/method/db.collection.group.txt
msgid "On this page"
msgstr ""

# e923dc02b657402da643be8a458381fe
#: ../source/reference/method/db.collection.group.txt:14
msgid "Definition"
msgstr ""

# 9613bb2500084019b49868a4c3b2fad3
#: ../source/includes/extracts/group-deprecation-method.rst:4
msgid ""
"Mongodb 3.4 deprecates the :method:`db.collection.group()` method. Use "
":method:`db.collection.aggregate()` with the :pipeline:`$group` stage or "
":method:`db.collection.mapReduce()` instead."
msgstr ""

# 5c46cb4c2c0445f5b932a5be202163cc
#: ../source/includes/extracts/admonition-group-method-alternative.rst:2
msgid ""
"Because :method:`db.collection.group()` uses JavaScript, it is subject to"
" a number of performance limitations. For most cases the "
":pipeline:`$group` operator in the :doc:`aggregation pipeline </core"
"/aggregation-pipeline>` provides a suitable alternative with fewer "
"restrictions."
msgstr ""

# f2654f259d1449f29f77b1730fc9ea97
#: ../source/reference/method/db.collection.group.txt:25
msgid ""
"Groups documents in a collection by the specified keys and performs "
"simple aggregation functions such as computing counts and sums. The "
"method is analogous to a ``SELECT <...> GROUP BY`` statement in SQL. The "
":method:`~db.collection.group()` method returns an array."
msgstr ""

# f668c13f02f84a13a8c6259ff0da2aa2
#: ../source/reference/method/db.collection.group.txt:31
msgid ""
"The :method:`db.collection.group()` accepts a single :term:`document` "
"that contains the following:"
msgstr ""

# b38a48d519084afe9de6ac3ae1ff0740
#: ../source/reference/method/db.collection.group.txt:38
msgid ""
"The :method:`db.collection.group()` method is a shell wrapper for the "
":dbcommand:`group` command. However, the :method:`db.collection.group()` "
"method takes the ``keyf`` field and the ``reduce`` field whereas the "
":dbcommand:`group` command takes the ``$keyf`` field and the ``$reduce`` "
"field."
msgstr ""

# b5284db7432d455aa71c26f6f7bda46d
#: ../source/reference/method/db.collection.group.txt:45
msgid "Behavior"
msgstr ""

# c8a714fe50054c02b9f1dccec3656d6e
#: ../source/reference/method/db.collection.group.txt:48
msgid "Limits and Restrictions"
msgstr ""

# bb030ef47076445cbe2840197315935e
#: ../source/reference/method/db.collection.group.txt:50
msgid ""
"The :method:`db.collection.group()` method does not work with "
":term:`sharded clusters <sharded cluster>`. Use the :term:`aggregation "
"framework` or :term:`map-reduce` in :term:`sharded environments "
"<sharding>`."
msgstr ""

# 819f5c2db5934d2ebe7ffc713f626371
#: ../source/reference/method/db.collection.group.txt:55
msgid ""
"The result set must fit within the :ref:`maximum BSON document size "
"<limit-bson-document-size>`."
msgstr ""

# 7b2c4cb3a2ea46bbb328699aee211a1a
#: ../source/reference/method/db.collection.group.txt:58
msgid ""
"In version 2.2, the returned array can contain at most 20,000 elements; "
"i.e. at most 20,000 unique groupings. For group by operations that "
"results in more than 20,000 unique groupings, use :dbcommand:`mapReduce`."
" Previous versions had a limit of 10,000 elements."
msgstr ""

# 941ef789f1c04fd4a66ea1d407409f2c
#: ../source/reference/method/db.collection.group.txt:64
msgid ""
"Prior to 2.4, the :method:`db.collection.group()` method took the "
":program:`mongod` instance's JavaScript lock, which blocked all other "
"JavaScript execution."
msgstr ""

# 62cb7e44eb3b4bf88aebd84524e46422
#: ../source/reference/method/db.collection.group.txt:69
msgid "``mongo`` Shell JavaScript Functions/Properties"
msgstr ""

# 74ebf60c2b394f58a0f5ccd2f780337e
#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:1
msgid ""
"In MongoDB 2.4, :dbcommand:`map-reduce operations <mapReduce>`, the "
":dbcommand:`group` command, and :query:`$where` operator expressions "
"**cannot** access certain global functions or properties, such as ``db``,"
" that are available in the :program:`mongo` shell."
msgstr ""

# cb3e14a6046841a596019a6c25d35c47
#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:6
msgid ""
"When upgrading to MongoDB 2.4, you will need to refactor your code if "
"your :dbcommand:`map-reduce operations <mapReduce>`, :dbcommand:`group` "
"commands, or :query:`$where` operator expressions include any global "
"shell functions or properties that are no longer available, such as "
"``db``."
msgstr ""

# f84ed8a46b0e4ed5942a35b6e5e99211
#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:12
msgid ""
"The following JavaScript functions and properties **are available** to "
":dbcommand:`map-reduce operations <mapReduce>`, the :dbcommand:`group` "
"command, and :query:`$where` operator expressions in MongoDB 2.4:"
msgstr ""

# 84f4a1a263b24164b0577ff827f39200
#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:19
msgid "Available Properties"
msgstr ""

# a65e71e24415450dacdd4f9583d86083
#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:20
msgid "Available Functions"
msgstr ""

# 1bb311379245488bafad7c7db2eaa765
#: ../source/reference/method/db.collection.group.txt
msgid "``args``"
msgstr ""

# 48711c5cbfa246b78fa8f61ced4e156e
#: ../source/reference/method/db.collection.group.txt
msgid "``MaxKey``"
msgstr ""

# f9ac37b5a2a34db9a4e38619012a4b76
#: ../source/reference/method/db.collection.group.txt
msgid "``MinKey``"
msgstr ""

# 1007a18370b94ba9b462e1c1b6b9670b
#: ../source/reference/method/db.collection.group.txt
msgid "``assert()``"
msgstr ""

# 097079ec1a2b463c9dca96b7763511cf
#: ../source/reference/method/db.collection.group.txt
msgid "``BinData()``"
msgstr ""

# dface24c62cc413a942d2669f8996f52
#: ../source/reference/method/db.collection.group.txt
msgid "``DBPointer()``"
msgstr ""

# 40d560d554d243eabbcf2877bc1adbf4
#: ../source/reference/method/db.collection.group.txt
msgid "``DBRef()``"
msgstr ""

# 529e48e6f94f4fe0aa81fb7f82c4fab2
#: ../source/reference/method/db.collection.group.txt
msgid "``doassert()``"
msgstr ""

# a9c283ef96674b99b33bf60ea577b6df
#: ../source/reference/method/db.collection.group.txt
msgid "``emit()``"
msgstr ""

# f6771d3b4b844be2b4e16eca27613504
#: ../source/reference/method/db.collection.group.txt
msgid "``gc()``"
msgstr ""

# 866aa928669449c6850b9ec84d3c32c7
#: ../source/reference/method/db.collection.group.txt
msgid "``HexData()``"
msgstr ""

# e1382060ebf9428db338bbedfeb99c8a
#: ../source/reference/method/db.collection.group.txt
msgid "``hex_md5()``"
msgstr ""

# efb2fa270d0c4f6fb4ba6e815221656d
#: ../source/reference/method/db.collection.group.txt
msgid "``isNumber()``"
msgstr ""

# 047517cdd8d647b691f33b3b45a2276d
#: ../source/reference/method/db.collection.group.txt
msgid "``isObject()``"
msgstr ""

# 771315cd7915434d8592e7faf120827f
#: ../source/reference/method/db.collection.group.txt
msgid "``ISODate()``"
msgstr ""

# ea937ba675bf4b769411286f61a2f404
#: ../source/reference/method/db.collection.group.txt
msgid "``isString()``"
msgstr ""

# 151b4a5f3691439db782456c17d17af8
#: ../source/reference/method/db.collection.group.txt
msgid "``Map()``"
msgstr ""

# d1cb6e016be942e7bf9e7312931a533c
#: ../source/reference/method/db.collection.group.txt
msgid "``MD5()``"
msgstr ""

# 18641fabd95e4b9b8f1645a107fcae07
#: ../source/reference/method/db.collection.group.txt
msgid "``NumberInt()``"
msgstr ""

# 1b85ee39383846beafe12b121b502d3f
#: ../source/reference/method/db.collection.group.txt
msgid "``NumberLong()``"
msgstr ""

# 9e2b0edc0c334539a276c8b9c4fa0bd8
#: ../source/reference/method/db.collection.group.txt
msgid "``ObjectId()``"
msgstr ""

# f3bfa9194f6c4dde861f9da363ab8a2a
#: ../source/reference/method/db.collection.group.txt
msgid "``print()``"
msgstr ""

# bc571f04745d4a31874610f3b60e9ad7
#: ../source/reference/method/db.collection.group.txt
msgid "``printjson()``"
msgstr ""

# b4912554802e446d86963f79c9418623
#: ../source/reference/method/db.collection.group.txt
msgid "``printjsononeline()``"
msgstr ""

# fac53c235fe7429d9ca523586daf7cd4
#: ../source/reference/method/db.collection.group.txt
msgid "``sleep()``"
msgstr ""

# 4acc320f78a840fead1c4359d5915103
#: ../source/reference/method/db.collection.group.txt
msgid "``Timestamp()``"
msgstr ""

# e912c2e222064a64bc66df31a881f8b0
#: ../source/reference/method/db.collection.group.txt
msgid "``tojson()``"
msgstr ""

# d3307ef8c1e840f1ae1f6f70705105ef
#: ../source/reference/method/db.collection.group.txt
msgid "``tojsononeline()``"
msgstr ""

# 3956b224f34e45a18a1d3444f99a4f09
#: ../source/reference/method/db.collection.group.txt
msgid "``tojsonObject()``"
msgstr ""

# d6ba8ed5ea3d41f8b10b54e7868c9f62
#: ../source/reference/method/db.collection.group.txt
msgid "``UUID()``"
msgstr ""

# ec4b80e0b7494bfc8fdc241bf535457f
#: ../source/reference/method/db.collection.group.txt
msgid "``version()``"
msgstr ""

# b95912d94fee4d4582f8355efc2c28b3
#: ../source/reference/method/db.collection.group.txt:76
msgid "Examples"
msgstr ""

# f34eb50614a546abbac866573d77a559
#: ../source/reference/method/db.collection.group.txt:78
msgid ""
"The following examples assume an ``orders`` collection with documents of "
"the following prototype:"
msgstr ""

# e419c286749247f2a58425343ea220c6
#: ../source/reference/method/db.collection.group.txt:94
msgid "Group by Two Fields"
msgstr ""

# 044f0667d6e849a086c9526ee984bae2
#: ../source/reference/method/db.collection.group.txt:96
msgid ""
"The following example groups by the ``ord_dt`` and ``item.sku`` fields "
"those documents that have ``ord_dt`` greater than ``01/01/2011``:"
msgstr ""

# 4cd35b9759ec4459bf9d51dffbdd26c8
#: ../source/reference/method/db.collection.group.txt:111
msgid "The result is an array of documents that contain the group by fields:"
msgstr ""

# 8738090e92b047d28e055733e2a6ff31
# 6c52ca816ecb428f917005c057b746f1
#: ../source/reference/method/db.collection.group.txt:129
#: ../source/reference/method/db.collection.group.txt:176
msgid "The method call is analogous to the SQL statement:"
msgstr ""

# 75e25778a92e4383a32db8a96ab65f7d
#: ../source/reference/method/db.collection.group.txt:139
msgid "Calculate the Sum"
msgstr ""

# 8f478ee0d177402a9a1b86e58a41b4ba
#: ../source/reference/method/db.collection.group.txt:141
msgid ""
"The following example groups by the ``ord_dt`` and ``item.sku`` fields, "
"those documents that have ``ord_dt`` greater than ``01/01/2011`` and "
"calculates the sum of the ``qty`` field for each grouping:"
msgstr ""

# dece0a7b39c94f1bbc0c633ed542f669
# 33f4c30375524d1e81fe25d73bb2d65a
#: ../source/reference/method/db.collection.group.txt:159
#: ../source/reference/method/db.collection.group.txt:219
msgid ""
"The result is an array of documents that contain the group by fields and "
"the calculated aggregation field:"
msgstr ""

# 99815a02e76f4753a73c0db0a9c573b5
#: ../source/reference/method/db.collection.group.txt:187
msgid "Calculate Sum, Count, and Average"
msgstr ""

# b8d25df21a4d4d048636e349f8f1014f
#: ../source/reference/method/db.collection.group.txt:189
msgid ""
"The following example groups by the calculated ``day_of_week`` field, "
"those documents that have ``ord_dt`` greater than ``01/01/2011`` and "
"calculates the sum, count, and average of the ``qty`` field for each "
"grouping:"
msgstr ""

# 2ea2bc2e1811431c8a669c83ef7cef4b
#: ../source/reference/method/db.collection.group.txt:230
msgid ":doc:`/aggregation`"
msgstr ""

#~ msgid ""
#~ "Groups documents in a collection by "
#~ "the specified keys and performs simple"
#~ " aggregation functions such as computing"
#~ " counts and sums. The method is "
#~ "analogous to a ``SELECT <...> GROUP "
#~ "BY`` statement in SQL. The "
#~ ":method:`group() <db.collection.group()>` method "
#~ "returns an array."
#~ msgstr ""

# 4d25ec2b114a401b80f7a7c7b60deba5
#~ msgid ":doc:`/core/aggregation`"
#~ msgstr ""

#~ msgid "Recommended Alternatives"
#~ msgstr ""

