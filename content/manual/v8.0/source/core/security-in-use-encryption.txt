.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: client-side field level encryption, queryable encryption, in-use encryption, envelope encryption

.. _security-in-use-encryption:
.. _security-data-encryption:

=================
In-Use Encryption
=================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. include:: /includes/in-use-encryption-intro.rst

Choosing an In-Use Encryption Approach
--------------------------------------
You can use both {+qe+} and {+csfle+} in the same deployment, but they are 
incompatible with each other in the same collection. For a comparison
of the two, including compatibility with MongoDB versions and points to 
consider when choosing one or the other, see :ref:`Choosing an In-Use 
Encryption Approach <about-qe-csfle>`.

Encryption Keys and Key Vaults
------------------------------
Both {+qe+} and {+csfle+} use an :term:`envelope encryption` approach to
encrypt data, where an encrypted field in a document uses a unique 
:term:`Data Encryption Key`, and those keys are encrypted using a 
:term:`Customer Master Key`.

For details, see :ref:`<qe-reference-keys-key-vaults>`.

{+qe+}
-------------------------------------
To learn how {+qe+} and its components work and how to implement it in
your application, see :ref:`<qe-manual-feature-qe>`.

{+csfle+}
--------------------------------------
To learn how {+csfle+} and its components work and how to implement it
in your application, see :ref:`<manual-csfle-feature>`.

.. toctree::
   :titlesonly:

   Comparing Approaches </core/queryable-encryption/about-qe-csfle>
   Compatibility </core/queryable-encryption/reference/compatibility>
   Keys and Key Vaults </core/queryable-encryption/fundamentals/keys-key-vaults>
   Queryable Encryption </core/queryable-encryption>
   Client-Side Field Level Encryption </core/csfle>
