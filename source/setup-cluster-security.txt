===========================
Security Features and Setup
===========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Network and Firewall Requirements
---------------------------------

.. include:: /includes/fact-open-network-ports.rst

Preconfigured Security Features
-------------------------------

The following security features are part of the |service| product:

.. _security-tls:

|tls-ssl|
~~~~~~~~~

|service| uses |tls-ssl| to encrypt the connections to your databases.

.. _security-vpc:

Virtual Private Cloud
~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/extracts/fact-vpc-per-project-no-link.rst

Required Security Features
--------------------------

You *must* configure the following security features:

.. _security-whitelist:

Whitelist
~~~~~~~~~

|service| only allows client connections to the cluster from entries in
the project's whitelist. To connect, you must add an entry to the
whitelist. To set up the whitelist for the project, see
:doc:`security-whitelist`.

For |service| clusters deployed on :ref:`google-gcp` or
:ref:`microsoft-azure`, add the |ipaddr| addresses of your |gcp| or
:abbr:`Azure (Microsoft Azure)` services to |service| project |ipaddr|
whitelist to grant those services access to the cluster.

User Authentication/Authorization
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

|service| requires clients to authenticate to access the clusters, i.e.
the MongoDB databases. You must create MongoDB users to access the
database. To set up MongoDB users to your clusters, see
:doc:`security-add-mongodb-users`.

To access clusters in a project, users must belong to that project.
Users can belong to multiple projects. See
:doc:`/tutorial/manage-users`.

Optional Security Features
--------------------------

You *may* configure the following security features:

Custom MongoDB Roles
~~~~~~~~~~~~~~~~~~~~

|service| supports creating :ref:`custom MongoDB roles <mongodb-roles>`
in cases where the built-in |service|
:ref:`database user privileges <atlas-user-privileges>` cannot
describe your desired set of privileges.

|vpc| Peering
~~~~~~~~~~~~~

|service| supports |vpc| peering with other |aws|, |azure|, or |gcp|
|vpc|\s. To use |vpc| Peering, see :doc:`security-vpc-peering`.

Private Endpoints
~~~~~~~~~~~~~~~~~

|service| supports private endpoints on |aws| using 
the {+aws-pl+} feature. To use private endpoints, see 
:doc:`security-private-endpoint`.

Two Factor Authentication
~~~~~~~~~~~~~~~~~~~~~~~~~

|service| supports Two Factor Authentication (2FA) to help users 
control access to their |service| accounts. To use
:abbr:`2FA (Two Factor Authentication)`, see
:doc:`security-two-factor-authentication`.

User Authentication/Authorization with |ldap|
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

|service| supports performing user authentication and authorization
with |ldap|. To use |ldap|, see
:doc:`Set up User Authentication and Authorization with LDAP </security-ldaps>`.

Encryption at Rest using your Key Management
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

|service| supports using |aws| |kms|, Azure Key Vault, and |gcp| to
encrypt storage engines and cloud provider backups. To use encryption
at rest, see :doc:`security-kms-encryption`.

Database Auditing
~~~~~~~~~~~~~~~~~

|service| supports auditing all system event actions. To use database
auditing, see :doc:`Set up Database Auditing </database-auditing>`.

Restrict MongoDB Support Access to |service| Backend Infrastructure
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Organization owners can restrict MongoDB Production Support Employees
from accessing |service| backend infrastructure for any |service|
cluster in their organization. Organization owners may grant a 24 hour
bypass to the access restriction at the |service| cluster level.

.. include:: /includes/fact-restrict-support-access.rst

To enable this option, see :doc:`security-restrict-support-access`.

Access Tracking
~~~~~~~~~~~~~~~

|service| surfaces authentication logs directly in the UI so that you can easily review successful and unsuccesful authentication attempts made against your clusters. To view your database access history, see :doc:`access-tracking`.

.. class:: hidden

   .. toctree::
      :titlesonly:

      /access-tracking
      /security-whitelist
      /security-add-mongodb-users
      /security-add-mongodb-roles
      /security-vpc-peering
      /security-private-endpoint
      Set up Two Factor Authentication </security-two-factor-authentication>
      /security-ldaps
      /security-kms-encryption
      /database-auditing
      /security-self-managed-x509
      /security-restrict-support-access

.. |arrow| unicode:: U+27A4
