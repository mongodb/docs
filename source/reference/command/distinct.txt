========
distinct
========

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. dbcommand:: distinct

   Finds the distinct values for a specified field across a single
   collection. :dbcommand:`distinct` returns a document that contains
   an array of the distinct values. The return document also contains
   an embedded document with query statistics and the query plan.

   The command takes the following form:

   .. code-block:: javascript

      { distinct: "<collection>", key: "<field>", query: <query> }

   The command contains the following fields:

   .. include:: /includes/apiargs/dbcommand-distinct-field.rst

   MongoDB also provides the shell wrapper method
   :method:`db.collection.distinct()` for the :dbcommand:`distinct`
   command. Additionally, many MongoDB :term:`drivers <driver>` also
   provide a wrapper method. Refer to the specific driver documentation.

Behavior
--------

.. _distinct-command-array-behavior:

Array Fields
~~~~~~~~~~~~

.. include:: /includes/extracts/fact-distinct-command-array-field.rst

For an example, see :ref:`distinct-command-array`.

Index Use
~~~~~~~~~

.. include:: /includes/extracts/fact-distinct-command-index-use.rst

Examples
--------

The examples use the ``inventory`` collection that contains the
following documents:

.. code-block:: javascript

   { "_id": 1, "dept": "A", "item": { "sku": "111", "color": "red" }, "sizes": [ "S", "M" ] }
   { "_id": 2, "dept": "A", "item": { "sku": "111", "color": "blue" }, "sizes": [ "M", "L" ] }
   { "_id": 3, "dept": "B", "item": { "sku": "222", "color": "blue" }, "sizes": "S" }
   { "_id": 4, "dept": "A", "item": { "sku": "333", "color": "black" }, "sizes": [ "S" ] }

Return Distinct Values for a Field
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following example returns the distinct values for the field
``dept`` from all documents in the ``inventory`` collection:

.. code-block:: javascript

   db.runCommand ( { distinct: "inventory", key: "dept" } )

The command returns a document with a field named ``values`` that
contains the distinct ``dept`` values:

.. code-block:: javascript

   {
      "values" : [ "A", "B" ],
      "stats" : { ... },
      "ok" : 1
   }

Return Distinct Values for an Embedded Field
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following example returns the distinct values for the field
``sku``, embedded in the ``item`` field, from all documents in the
``inventory`` collection:

.. code-block:: javascript

   db.runCommand ( { distinct: "inventory", key: "item.sku" } )

The command returns a document with a field named ``values`` that
contains the distinct ``sku`` values:

.. code-block:: javascript

   {
     "values" : [ "111", "222", "333" ],
     "stats" : { ... },
     "ok" : 1
   }

.. seealso:: :ref:`document-dot-notation` for information on accessing fields
   within embedded documents

.. _distinct-command-array:

Return Distinct Values for an Array Field
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following example returns the distinct values for the field
``sizes`` from all documents in the ``inventory`` collection:

.. code-block:: javascript

   db.runCommand ( { distinct: "inventory", key: "sizes" } )

The command returns a document with a field named ``values`` that
contains the distinct ``sizes`` values:

.. code-block:: javascript

   {
     "values" : [ "M", "S", "L" ],
     "stats" : { ... },
     "ok" : 1
   }

For information on :dbcommand:`distinct` and array fields, see the
:ref:`Behavior <distinct-command-array-behavior>` section.

Specify Query with ``distinct``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following example returns the distinct values for the field
``sku``, embedded in the ``item`` field, from the documents whose
``dept`` is equal to ``"A"``:

.. code-block:: javascript

   db.runCommand ( { distinct: "inventory", key: "item.sku", query: { dept: "A"} } )

The command returns a document with a field named ``values`` that
contains the distinct ``sku`` values:

.. code-block:: javascript

   {
     "values" : [ "111", "333" ],
     "stats" : { ... },
     "ok" : 1
   }

Override Default ``readConcern``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following operation on a replica set specifies a
:doc:`/reference/read-concern` of :readconcern:`"majority"` to read the
most recent copy of the data confirmed as having been written to a
majority of the nodes.

.. note::

   - .. include:: /includes/fact-enable-majority-readConcern.rst

   - .. include:: /includes/fact-readConcern-most-recent-data-in-node.rst

.. code-block:: javascript

   db.runCommand(
      {
        distinct: "restaurants",
        key: "rating",
        query: { cuisine: "italian" },
        readConcern: { level: "majority" }
      }
   )
