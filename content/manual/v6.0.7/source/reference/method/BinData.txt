.. _server-binData-method:

=========
BinData()
=========

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

Creates a binary data object.

``BinData`` has the following syntax:

.. method:: BinData(<sub_type>,<buffer>)

   .. list-table::
      :header-rows: 1
      :widths: 20 20 60

      * - Parameter

        - Type

        - Description

      * - ``sub_type``

        - string

        - The binary type.

          .. list-table::
            :header-rows: 1
            :widths: 40 60

            * - Subtype
              - Description

            * - 0

              - Generic binary subtype

            * - 1

              - Function

            * - 2

              - Byte Array

            * - 3

              - OLD UUID

            * - 4

              - UUID

            * - 5

              - MD5

            * - 128

              - User defined

      * - ``buffer``

        - string

        - The buffer object containing binary data, must be a base 64 encoded string value.

   :returns: A binary data object.

Examples
--------

Insert a ``BinData()`` Object
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Use the ``BinData()`` constructor to create the ``bdata`` variable.

.. code-block:: javascript

   var bdata = BinData(0, "gf1UcxdHTJ2HQ/EGQrO7mQ==")

Insert the object into the ``testbin`` collection.

.. code-block:: javascript

   db.testbin.insertOne( { _id : 1, bin_data: bdata } )

Query the ``testbin`` collection for the inserted document.

.. code-block:: javascript

   db.testbin.find()

You can see the binary ``buffer`` stored in the collection.


.. code-block:: javascript
   :copyable: false

   {
     _id: 1,
     bin_data: Binary(Buffer.from("81fd547317474c9d8743f10642b3bb99", "hex"), 0) 
   }

Get the Length of ``BinData()`` Object
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Use the ``BinData()`` constructor to create the ``bdata`` variable.

.. code-block:: javascript

   var bdata = BinData(0, "gf1UcxdHTJ2HQ/EGQrO7mQ==")

Use ``.length()`` to return the bit length of the object.

.. code-block:: javascript

   bdata.length()

The returned value is:


.. code-block:: javascript
   :copyable: false

   16