.. _rust-find-usage:

=======================
Find Multiple Documents
=======================

.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: read, code example

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

You can query for multiple documents in a collection by calling the
`find() <{+api+}/struct.Collection.html#method.find>`__ method on a
``Collection`` instance.

Pass a query filter to the ``find()`` method to return documents in the collection
that match the filter. If you do not include a filter, MongoDB returns all the
documents in the collection.

.. tip::

   To learn more about retrieving documents,
   see the :ref:`rust-retrieve-guide` guide, and to learn more about
   creating query filters, see the :ref:`rust-query-guide` guide.

The ``find()`` method returns a `Cursor <{+api+}/struct.Cursor.html>`__
type, which you can iterate through to retrieve individual documents. To
learn more about using cursors, see the :ref:`rust-cursor-guide` guide.

Example
-------

This example retrieves documents that match a query filter from the ``restaurants``
collection in the ``sample_restaurants`` database. The ``find()`` method returns
all documents in which the value of the ``cuisine`` field is ``"French"``.

You can model each retrieved document as a BSON data type or a custom data type. To specify
which data type represents the collection's data, replace the ``<T>`` type parameter on the
highlighted line with one of the following values:

- ``<Document>``: Retrieves and prints collection documents as BSON documents
- ``<Restaurant>``: Retrieves and prints collection documents as instances of the ``Restaurant``
  struct, defined at the top of the code

Select the :guilabel:`Asynchronous` or :guilabel:`Synchronous` tab to
see the corresponding code for each runtime:

.. tabs::

   .. tab:: Asynchronous
      :tabid: find-one-async

      .. literalinclude:: /includes/usage-examples/code-snippets/find-async.rs
         :language: rust
         :emphasize-lines: 21
         :dedent:

   .. tab:: Synchronous
      :tabid: find-one-sync

      .. literalinclude:: /includes/usage-examples/code-snippets/find-sync.rs
         :language: rust
         :emphasize-lines: 18
         :dedent:

Output 
~~~~~~

Select the :guilabel:`BSON Document Results` or :guilabel:`Restaurant Struct Results` tab to
see the corresponding code output based on your collection's type parameter:

.. tabs::

   .. tab:: BSON Document Results
      :tabid: find-one-async

      .. code-block:: none
         :copyable: false

         ...
         Some(
            Document({
               "_id": ObjectId(
                     "...",
               ),
               ...
               "name": String(
                     "Cafe Un Deux Trois",
               ),
               ...
            }),
         ),
         Some(
            Document({
               "_id": ObjectId(
                     "...",
               ),
               ...
               "name": String(
                     "Calliope",
               ),
               ...
            }),
         )
         ...

   .. tab:: Restaurant Struct Results
      :tabid: find-one-sync

      .. code-block:: none
         :copyable: false

         ...
         Restaurant {
            name: "Cafe Un Deux Trois",
            cuisine: "French",
         }
         Restaurant {
            name: "Calliope",
            cuisine: "French",
         }
         ...