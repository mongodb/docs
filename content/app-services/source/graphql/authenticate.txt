.. meta::
   :robots: nosnippet

.. _graphql-authentication:

=============================
Authenticate GraphQL Requests
=============================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

The GraphQL API requires that incoming requests include authentication
information for the user making the request. This lets the API enforce
rules and validate document schemas for each operation.

Requests must include authentication data in specific request headers.
App Services uses the following process to authenticate a given request:

1. Check for an ``Authorization`` header. If it's present, the request
   must use :ref:`Bearer Authentication <graphql-bearer-authentication>`
   with a valid user access token. If the token is invalid, the request
   fails.

2. If the ``Authorization`` header is not present, check for
   :ref:`Credential Headers <graphql-credential-headers>`. The headers
   must contain valid Email/Password, API Key, or Custom JWT credentials
   for an App user.

.. note::
   
   You must :ref:`enable an authentication provider
   <authentication-providers>` before users can authenticate with
   it.

.. _graphql-bearer-authentication:

Bearer Authentication
---------------------

The GraphQL API supports Bearer Authentication, which lets you
authenticate a request by including a valid user access token in the
``Authorization`` header. To learn how to get and manage an access
token, see :ref:`Manage User Sessions <manage-user-sessions>`.

The Authorization header uses the following format:

.. code-block:: text
   
   Authorization: Bearer <AccessToken>

For example, the following request uses Bearer Authentication:

.. code-block:: shell
   :emphasize-lines: 2

   curl -X POST 'https://services.cloud.mongodb.com/api/client/v2.0/app/<AppID>/graphql' \
      --header 'Authorization: Bearer <AccessToken>' \
      --header 'Content-Type: application/json' \
      --data-raw '{
        "query": "query AllMovies {\n  movies {\n    title\n    year\n  }\n}"
      }'

.. include:: /includes/bearer-auth-performance.rst

.. include:: /includes/dont-use-api-key-in-browsers.rst

.. include:: /includes/bearer-auth-is-useful.rst

.. _graphql-credential-headers:

Credential Headers
------------------

You can authenticate a GraphQL request by including the user's login
credentials in the request headers. The exact headers to include depend
on the authentication provider.

Credential headers are useful for:

- requests sent from a server-side application

- requests sent from a command-line tool

- manual or test requests sent from a GraphQL client like Postman

.. important::
   
   You cannot use credential headers to authenticate requests sent from
   a web browser due to :wikipedia:`Cross-Origin Resource Sharing
   <Cross-origin_resource_sharing>` restrictions. Instead, to
   authenticate GraphQL requests from a browser, use :ref:`Bearer
   Authentication <graphql-bearer-authentication>`.

Email/Password
~~~~~~~~~~~~~~

To authenticate a GraphQL request as an :ref:`email/password
<email-password-authentication>` user, include the user's credentials in
the request's ``email`` and ``password`` headers.

.. code-block:: shell
   :emphasize-lines: 2-3

   curl -X POST 'https://services.cloud.mongodb.com/api/client/v2.0/app/<AppID>/graphql' \
      --header 'email: <EmailAddress>' \
      --header 'password: <Password>' \
      --header 'Content-Type: application/json' \
      --data-raw '{
        "query": "query AllMovies {\n  movies {\n    title\n    year\n  }\n}"
      }'

API Key
~~~~~~~

To authenticate a GraphQL request with an :ref:`API Key
<api-key-authentication>`, include the API key in the request's
``apiKey`` header.

.. code-block:: shell
   :emphasize-lines: 2

   curl -X POST 'https://services.cloud.mongodb.com/api/client/v2.0/app/<AppID>/graphql' \
      --header 'apiKey: <APIKey>' \
      --header 'Content-Type: application/json' \
      --data-raw '{
        "query": "query AllMovies {\n  movies {\n    title\n    year\n  }\n}"
      }'

.. include:: /includes/dont-use-api-key-in-browsers.rst

Custom JWT
~~~~~~~~~~

To authenticate a GraphQL request as a :ref:`Custom JWT
<custom-jwt-authentication>` user, include the JWT string in the
request's ``jwtTokenString`` header.

.. code-block:: shell
   :emphasize-lines: 2

   curl -X POST 'https://services.cloud.mongodb.com/api/client/v2.0/app/<AppID>/graphql' \
      --header 'jwtTokenString: <JWT>' \
      --header 'Content-Type: application/json' \
      --data-raw '{
        "query": "query AllMovies {\n  movies {\n    title\n    year\n  }\n}"
      }'
