# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: 2013-12-16 23:47+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# b757961e09a841f297048ef99f56cb5a
#: ../source/core/index-creation.txt:7
msgid "Index Build"
msgstr ""

# 03a996bdfa12435ea3f5323a7ace5d2b
#: ../source/core/index-creation.txt
msgid "On this page"
msgstr ""

# 1028c648f9b64f3e9dca6dcfe2db95e9
#: ../source/core/index-creation.txt:17
msgid ""
"By default, creating an index blocks all other operations on a database. "
"When building an index on a collection, the database that holds the "
"collection is unavailable for read or write operations until the index "
"build completes. Any operation that requires a read or write lock on all "
"databases (e.g. :command:`listDatabases`) will wait for the foreground "
"index build to complete."
msgstr ""

# 7a6ffe7546194dfbb574324a50d0c859
#: ../source/core/index-creation.txt:28
msgid "Background Construction"
msgstr ""

# 00907ea861b94272927c3b3cc2fd1f3d
#: ../source/core/index-creation.txt:30
msgid ""
"For potentially long running index building operations, consider the "
"``background`` operation so that the MongoDB database remains available "
"during the index building operation. For example, to create an index in "
"the background of the ``zipcode`` field of the ``people`` collection, "
"issue the following:"
msgstr ""

# aa0de52220944c6da759eb6db5a0d2ec
#: ../source/core/index-creation.txt:40
msgid "By default, ``background`` is ``false`` for building MongoDB indexes."
msgstr ""

# e87e92b3a1ad4056898787f91128e2fb
#: ../source/core/index-creation.txt:42
msgid ""
"You can combine the background option with other options, as in the "
"following:"
msgstr ""

# 71dccc8eed66467a85b464746a869089
#: ../source/core/index-creation.txt:50
msgid "Behavior"
msgstr ""

# ffa40ee2b5eb4f1c802d42490c43cfd6
#: ../source/core/index-creation.txt:52
msgid ""
"As of MongoDB version 2.4, a :program:`mongod` instance can build more "
"than one index in the background concurrently."
msgstr ""

# 6a248bef11614cc087daf437bf1bc6c8
#: ../source/core/index-creation.txt:55
msgid ""
"Before 2.4, a :program:`mongod` instance could only build one background "
"index per database at a time."
msgstr ""

# a26f80f8a88546ac8aac106f237ba4e0
#: ../source/core/index-creation.txt:59
msgid ""
"Background indexing operations run in the background so that other "
"database operations can run while creating the index. However, the "
":program:`mongo` shell session or connection where you are creating the "
"index *will* block until the index build is complete. To continue issuing"
" commands to the database, open another connection or :program:`mongo` "
"instance."
msgstr ""

# 30a4141f4c4f413d8a7225e55f1db616
#: ../source/core/index-creation.txt:66
msgid ""
"Queries will not use partially-built indexes: the index will only be "
"usable once the index build is complete."
msgstr ""

# 3e2484c8c9ce44bbbfe32b1f1743ea8b
#: ../source/core/index-creation.txt:71
msgid ""
"If MongoDB is building an index in the background, you cannot perform "
"other administrative operations involving that collection, including "
"running :dbcommand:`repairDatabase`, dropping the collection (i.e. "
":method:`db.collection.drop()`), and running :dbcommand:`compact`. These "
"operations will return an error during background index builds."
msgstr ""

# 529df74b2e93404b80572fcf68842b57
#: ../source/core/index-creation.txt:80
msgid "Performance"
msgstr ""

# abf9fcfd092e4daea791a3203e61293e
#: ../source/core/index-creation.txt:82
msgid ""
"The background index operation uses an incremental approach that is "
"slower than the normal \"foreground\" index builds. If the index is "
"larger than the available RAM, then the incremental process can take "
"*much* longer than the foreground build."
msgstr ""

# e5a61a8d229c446ab25fa45a33ac805b
#: ../source/core/index-creation.txt:87
msgid ""
"If your application includes :method:`~db.collection.createIndex()` "
"operations, and an index *doesn't* exist for other operational concerns, "
"building the index can have a severe impact on the performance of the "
"database."
msgstr ""

# 242c62836f5c4934be5742e597c7aa18
#: ../source/core/index-creation.txt:93
msgid ""
"To avoid performance issues, make sure that your application checks for "
"the indexes at start up using the :method:`~db.collection.getIndexes()` "
"method or the :api:`equivalent method for your driver <>` and terminates "
"if the proper indexes do not exist. Always build indexes in production "
"instances using separate application code, during designated maintenance "
"windows."
msgstr ""

# 4574e095dc474628a98fe0c9760f97ea
#: ../source/core/index-creation.txt:101
msgid "Interrupted Index Builds"
msgstr ""

# ba0305db28cf444a98a7e7934487253a
#: ../source/core/index-creation.txt:103
msgid ""
"If a background index build is in progress when the :program:`mongod` "
"process terminates, when the instance restarts the index build will "
"restart as foreground index build. If the index build encounters any "
"errors, such as a duplicate key error, the :program:`mongod` will exit "
"with an error."
msgstr ""

# f5fcda66ad694f21abfc039f4645e4ad
#: ../source/core/index-creation.txt:109
msgid ""
"To start the :program:`mongod` after a failed index build, use the "
":setting:`storage.indexBuildRetry` or :option:`--noIndexBuildRetry "
"<mongod --noIndexBuildRetry>` to skip the index build on start up."
msgstr ""

# e8034fe3ab87495a94b43c44ba9efca4
#: ../source/core/index-creation.txt:116
msgid "Building Indexes on Secondaries"
msgstr ""

# ba451e76615b4bb6bb7183fe20ac0025
#: ../source/core/index-creation.txt:118
msgid ""
"Secondary members can now build indexes in the background. Previously all"
" index builds on secondaries were in the foreground."
msgstr ""

# 46817c416bf14e5786b36e5509fd5e56
#: ../source/core/index-creation.txt:123
msgid ""
"Background index operations on a :term:`replica set` :term:`secondaries "
"<secondary>` begin after the :term:`primary` completes building the "
"index. If MongoDB builds an index in the background on the primary, the "
"secondaries will then build that index in the background."
msgstr ""

# ffc781d2c9dd472f8438e7f1348800a0
#: ../source/core/index-creation.txt:129
msgid ""
"To build large indexes on secondaries the best approach is to restart one"
" secondary at a time in :term:`standalone` mode and build the index. "
"After building the index, restart as a member of the replica set, allow "
"it to catch up with the other members of the set, and then build the "
"index on the next secondary. When all the secondaries have the new index,"
" step down the primary, restart it as a standalone, and build the index "
"on the former primary."
msgstr ""

# 1fa2323831ae43d5b3d15bef95fcb6a5
#: ../source/core/index-creation.txt:137
msgid ""
"The amount of time required to build the index on a secondary must be "
"within the window of the :term:`oplog`, so that the secondary can catch "
"up with the primary."
msgstr ""

# 98d0243e671145cca59016e07d3b8e94
#: ../source/core/index-creation.txt:141
msgid ""
"Indexes on secondary members in \"recovering\" mode are always built in "
"the foreground to allow them to catch up as soon as possible."
msgstr ""

# 8222f6ed9a1e4b5db12631596da1118a
#: ../source/core/index-creation.txt:144
msgid ""
"See :ref:`index-building-replica-sets` for a complete procedure for "
"building indexes on secondaries."
msgstr ""

# 42e003831e034670abebe9a415c363ad
#: ../source/core/index-creation.txt:151
msgid "Index Names"
msgstr ""

# c0c3f6bcb63f4955bf0ff2cb7b86920c
#: ../source/core/index-creation.txt:153
msgid ""
"The default name for an index is the concatenation of the indexed keys "
"and each key's direction in the index, 1 or -1."
msgstr ""

# 8c2bc1dfd9df44009e0db8b77fc144a7
# f74882515ff849ffa5c8bd2dc215728d
#: ../source/core/index-creation.txt
msgid "Example"
msgstr ""

# bc9f8cba26a2437d82836f57b22a6e04
#: ../source/core/index-creation.txt:163
msgid "The resulting index is named: ``item_1_quantity_-1``."
msgstr ""

# be55426695a84fc5b5979c8d601807f9
#: ../source/core/index-creation.txt:165
msgid ""
"Optionally, you can specify a name for an index instead of using the "
"default name."
msgstr ""

# d55955035b7146a5a718e270236870b4
#: ../source/core/index-creation.txt:175
msgid "The resulting index has the name ``inventory``."
msgstr ""

# 167a6c3623ad4a6091d6eb46d65e8540
#: ../source/core/index-creation.txt:177
msgid ""
"To view the name of an index, use the :method:`getIndexes() "
"<db.collection.getIndexes()>` method."
msgstr ""

# 5607632d192e4e96be2a81088b20aeef
#: ../source/core/index-creation.txt:181
msgid "View Index Build Operations"
msgstr ""

# 89fca6d377de466a8b830e3414772c91
#: ../source/core/index-creation.txt:183
msgid ""
"To see the status of an index build operation, you can use the "
":method:`db.currentOp()` method in the :program:`mongo` shell. To filter "
"the current operations for index creation operations, see :ref"
":`currentOp-index-creation` for an example."
msgstr ""

# 1dfcc8d298bc41f5a6b4dfbe3da36cbb
#: ../source/core/index-creation.txt:188
msgid ""
"The :data:`~currentOp.msg` field will include the percent of the build "
"that is complete."
msgstr ""

# 92e7a6431f9048f4b1b159f1299e244c
#: ../source/core/index-creation.txt:192
msgid "Terminate Index Build Operation"
msgstr ""

# 0a42e2335397472d8fadf9d733de92ae
#: ../source/core/index-creation.txt:194
msgid ""
"To terminate an ongoing index build, use the :method:`db.killOp()` method"
" in the :program:`mongo` shell. For index builds, the effects of "
":method:`db.killOp()` may not be immediate and may occur well after much "
"of the index build operation has completed."
msgstr ""

# c75f9eedc6ab43f1831c95aecd290a0d
#: ../source/core/index-creation.txt:199
msgid ""
"You cannot terminate a *replicated* index build on secondary members of a"
" replica set. To minimize the impact of building an index on replica "
"sets, see :doc:`/tutorial/build-indexes-on-replica-sets`."
msgstr ""

# 7d610ae08d6b49b8b46cbe4e25d1534b
#: ../source/core/index-creation.txt:205
msgid ""
"Before MongoDB 2.4, you could *only* terminate *background* index builds."
" After 2.4, you can terminate both *background* index builds and "
"foreground index builds."
msgstr ""

# 40ef23a92bbd45578c1d791a6b933ee0
#: ../source/core/index-creation.txt:210
msgid ":method:`db.currentOp()`, :method:`db.killOp()`"
msgstr ""

# f75eea00a97e4110bb89fa9f6e51c0ba
# 7556962265fa4b32a27644ae0c366bb0
# 2697c9d6b62a4bd78eeee8f776e30ac4
#: ../source/core/index-creation.txt:1 ../source/core/index-creation.txt:24
#: ../source/core/index-creation.txt:147
msgid "index"
msgstr ""

# f75eea00a97e4110bb89fa9f6e51c0ba
#: ../source/core/index-creation.txt:1
msgid "options"
msgstr ""

# 7556962265fa4b32a27644ae0c366bb0
#: ../source/core/index-creation.txt:24
msgid "background creation"
msgstr ""

# 2697c9d6b62a4bd78eeee8f776e30ac4
#: ../source/core/index-creation.txt:147
msgid "name"
msgstr ""

# d0a05af1e3604076945d69283fb1af05
#~ msgid "Index Creation"
#~ msgstr ""

# bd3dbea8a0134529a2caab78c9d79d63
#~ msgid ""
#~ "MongoDB provides several options that "
#~ "*only* affect the creation of the "
#~ "index. Specify these options in a "
#~ "document as the second argument to "
#~ "the :method:`db.collection.ensureIndex()` method. "
#~ "This section describes the uses of "
#~ "these creation options and their "
#~ "behavior."
#~ msgstr ""

# b4b716993faa4c48a488599823bf3eec
#~ msgid "Related"
#~ msgstr ""

# 7d2b9e21da1c4c9aa44707ee43a555a2
#~ msgid ""
#~ "Some options that you can specify "
#~ "to :method:`~db.collection.ensureIndex()` options "
#~ "control the :doc:`properties of the "
#~ "index </core/index-properties>`, which are "
#~ "*not* index creation options. For "
#~ "example, the :doc:`unique </core/index-"
#~ "unique>` option affects the behavior of"
#~ " the index after creation."
#~ msgstr ""

# bdcb778af3264ec3a2f08de70cd3e72b
#~ msgid ""
#~ "For a detailed description of MongoDB's"
#~ " index types, see :doc:`/core/index-types`"
#~ " and :doc:`/core/index-properties` for "
#~ "related documentation."
#~ msgstr ""

# 9475ab584fe3458b8f85d176cba823fd
#~ msgid ""
#~ "Before 2.2, a single :program:`mongod` "
#~ "instance could only build one index "
#~ "at a time."
#~ msgstr ""

# 758706f86e9742f3ac613ddb0d20bb49
#~ msgid ""
#~ "If your application includes "
#~ ":method:`ensureIndex() <db.collection.ensureIndex()>` "
#~ "operations, and an index *doesn't* exist"
#~ " for other operational concerns, building"
#~ " the index can have a severe "
#~ "impact on the performance of the "
#~ "database."
#~ msgstr ""

# 5b19e7f956324d9a9a7768f366345d2c
#~ msgid "Drop Duplicates"
#~ msgstr ""

# 439e1f0b69724fafa9f9fb9cdcd71180
#~ msgid ""
#~ "MongoDB cannot create a :ref:`unique "
#~ "index <index-type-unique>` on a "
#~ "field that has duplicate values. To "
#~ "force the creation of a unique "
#~ "index, you can specify the ``dropDups``"
#~ " option, which will only index the"
#~ " first occurrence of a value for "
#~ "the key, and delete all subsequent "
#~ "values."
#~ msgstr ""

# 023e9e97a0d24e12ad6118712af2aef6
#~ msgid ""
#~ "As in all unique indexes, if a "
#~ "document does not have the indexed "
#~ "field, MongoDB will include it in "
#~ "the index with a \"null\" value."
#~ msgstr ""

# 3b19d16f99ee419b81eb156d8f1a50d5
#~ msgid ""
#~ "If subsequent fields *do not* have "
#~ "the indexed field, and you have "
#~ "set ``{dropDups: true}``, MongoDB will "
#~ "remove these documents from the "
#~ "collection when creating the index. If"
#~ " you combine ``dropDups`` with the "
#~ ":ref:`sparse <index-type-sparse>` option, "
#~ "this index will only include documents"
#~ " in the index that have the "
#~ "value, and the documents without the "
#~ "field will remain in the database."
#~ msgstr ""

# 2d2cb9a3a0ae4053a54152b0e5496ece
#~ msgid ""
#~ "To create a unique index that "
#~ "drops duplicates on the ``username`` "
#~ "field of the ``accounts`` collection, "
#~ "use a command in the following "
#~ "form:"
#~ msgstr ""

# 586b58b1437a4597ae39516b7129054b
#~ msgid ""
#~ "Specifying ``{ dropDups: true }`` will"
#~ " delete data from your database. Use"
#~ " with extreme caution."
#~ msgstr ""

# ea6951029d9e49cd91f8b597f751b5f0
#~ msgid "By default, ``dropDups`` is ``false``."
#~ msgstr ""

# dc72351b38274089a9c1fc833c57662a
#~ msgid "duplicates"
#~ msgstr ""

# 6a93c443c8384597a01188fda3188103
#~ msgid "drop duplicates"
#~ msgstr ""

