.. _release-notes-5.0:

=============================
Release Notes for MongoDB 5.0
=============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: twocols

.. note::

   MongoDB 5.0 Released July 13, 2021

Patch Releases
--------------

.. warning:: Past Release Limitations

   .. include:: /includes/release-notes/critical-warning-text.rst

   .. list-table::
      :header-rows: 1

      * - Issue
        - Affected Versions

      * - :issue:`WT-7984`
        - 5.0.0 - 5.0.2

      * - :issue:`WT-7995`
        - 5.0.0 - 5.0.2

      * - :issue:`WT-10461` 
        - 5.0.0 - 5.0.14 (ARM64 or POWER system architectures)

      * - :issue:`WT-10551` 
        - 5.0.2 - 5.0.17 (Incremental backups on Ops Manager or Cloud
          Manager clusters)

      * - :issue:`SERVER-58936`
        - 5.0.0 - 5.0.1

      * - :issue:`SERVER-60176`
        - 5.0.0 - 5.0.21

      * - :issue:`SERVER-68511`
        - 5.0.0 - 5.0.10

      * - :issue:`SERVER-77506`
        - 5.0.0 - 5.0.23

      * - :issue:`SERVER-80203`
        - 5.0.6 - 5.0.21 (Time Series collections sharded by metaField embedded 
          objects) 

      * - :issue:`SERVER-82353`
        - 5.0.0 - 5.0.24

      * - :issue:`SERVER-86622`
        - 5.0.0 - 5.0.25 

.. _5.0.30-release-notes:

5.0.30 - Oct 24, 2024
~~~~~~~~~~~~~~~~~~~~~

.. |cve-version-list| replace:: MongoDB 5.0 prior to 5.0.30

.. include:: /includes/security/cve-null-bytes.rst

- :issue:`SERVER-96419` Improper neutralization of null bytes may lead 
  to buffer over-reads in MongoDB Server
- `All JIRA issues closed in 5.0.30
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%205.0.30>`_
- :ref:`5.0.30-changelog`

.. _5.0.29-release-notes:

5.0.29 - Sep 30, 2024
~~~~~~~~~~~~~~~~~~~~~

.. |cve-version-list| replace:: MongoDB 5.0 prior to 5.0.28

.. include:: /includes/security/cve-122-info.rst

- :issue:`SERVER-96254` CSFLE and Queryable Encryption self-lookup may 
  fail to encrypt values in subpipelines

- :issue:`SERVER-59831` WTUniqueIndex::_insert expects
  secondaries to pass in dupsAllowed=true

- :issue:`SERVER-76777` Deadlock between index build external
  abort and self abort

- :issue:`SERVER-88750` Add "bypassEmptyTsReplacement" param to
  insert, update, findAndModify, and bulkWrite

- :issue:`SERVER-91223` $log gives incorrect calculation with Decimal128

- :issue:`WT-8771` Checkpoint cleanup to dirty obsolete page
  with overflow items

- `All JIRA issues closed in 5.0.29
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%205.0.29>`_

- :ref:`5.0.29-changelog`


.. _5.0.28-release-notes:

5.0.28 - Jul 15, 2024
~~~~~~~~~~~~~~~~~~~~~

- :issue:`SERVER-63198` Prevent shutdown command from hanging

- :issue:`SERVER-90747` Handle $elemMatch with empty path in plan enumerator 
  correctly

- :issue:`SERVER-91362` Performance: Do not copy JS "scope" object if a cached 
  JsExecution exists

- :issue:`SERVER-91562` [5.0] IndexDescriptor::compareIndexOptions treats no 
  unique/sparse as not identical to unique:false/sparse:false

- :issue:`WT-10807` Skip in-memory deleted pages as part of the tree walk

- `All JIRA issues closed in 5.0.28
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%205.0.28>`_
- :ref:`5.0.28-changelog`

.. _5.0.27-release-notes:

5.0.27 - Jun 04, 2024
~~~~~~~~~~~~~~~~~~~~~

- :issue:`SERVER-78556` Return default of internalInsertMaxBatchSize to 64

- :issue:`SERVER-79637` Incorrect query results in $lookup with TS foreign 
  collection using a correlated predicate

- :issue:`SERVER-80363` server default writeConcern is not honored when wtimeout 
  is set

- :issue:`SERVER-86474` $_internalApplyOplogUpdate with $set: { foo: Timestamp(0, 0) } 
  is not replicated correctly

- :issue:`SERVER-86648` Resumable index build sorter files are not fsynced on shutdown

- `All JIRA issues closed in 5.0.27
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%205.0.27>`_
- :ref:`5.0.27-changelog`

.. _5.0.26-release-notes:

5.0.26 - Mar 26, 2024
~~~~~~~~~~~~~~~~~~~~~

- :issue:`SERVER-68128` Exceptions thrown while generating command response lead 
  to network error

- :issue:`SERVER-72703` Downgrade $out's db lock to MODE_IX

- :issue:`SERVER-83602` $or -> $in MatchExpression rewrite should not generate 
  $or directly nested in another $or

- :issue:`SERVER-86717` Resharding should validate user provided zone range 
  doesn't include $-prefixed fields.

- :issue:`WT-11062` Safe free the ref addr to allow concurrent access

- `All JIRA issues closed in 5.0.26
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%205.0.26>`_
- :ref:`5.0.26-changelog`

.. _5.0.25-release-notes:

5.0.25 - Feb 28, 2024
~~~~~~~~~~~~~~~~~~~~~

.. |cve-version-list| replace:: MongoDB 5.0 prior to 5.0.25

.. include:: /includes/security/cve-2024-1351-info.rst

- :issue:`SERVER-64444` listIndexes fails on invalid pre-5.0 index spec 
  after upgrade
- :issue:`SERVER-82353` Multi-document transactions can miss documents 
  when movePrimary runs concurrently
- :issue:`SERVER-83564` Make sure the process field is indexed in 
  config.locks
- :issue:`SERVER-85419` Balancer pollutes logs in case no suitable 
  recipient is found during draining
- :issue:`WT-10017` Remove the unstable historical versions at the 
  end of rollback to stable

- `All JIRA issues closed in 5.0.25
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%205.0.25>`_
- :ref:`5.0.25-changelog`

.. _5.0.24-release-notes:

5.0.24 - Jan 18, 2024
~~~~~~~~~~~~~~~~~~~~~

- :issue:`SERVER-50792` Return more useful errors when a shard key index can't 
  be found for shardCollection/refineCollectionShardKey
- :issue:`SERVER-77506` Sharded multi-document transactions can mismatch data 
  and ShardVersion
- :issue:`SERVER-81878` startupRecoveryForRestore may not play nicely with 
  collection drop applied during startup recovery
- :issue:`SERVER-83091` $or query can trigger an infinite loop during plan 
  enumeration
- :issue:`WT-7929` Investigate a solution to avoid FTDC stalls during checkpoint
- `All JIRA issues closed in 5.0.24 
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%205.0.24>`_
- :ref:`5.0.24-changelog`

.. _5.0.23-release-notes:

5.0.23 - Nov 27, 2023
~~~~~~~~~~~~~~~~~~~~~

- :issue:`SERVER-78108` POS interface should expose its shutdown state
- :issue:`SERVER-78115` Shard primaries must commit a majority write before 
  using new routing information from the config server
- :issue:`SERVER-83150` Document::shred() does not copy document metadata
- :issue:`WT-11564` Fix RTS to read the newest transaction value only when it 
  exists in the checkpoint
- :issue:`WT-11602` Hide expected eviction failures from the application and 
  don't rollback in case of errors
- `All JIRA issues closed in 5.0.23 
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%205.0.23>`_
- :ref:`5.0.23-changelog`

.. _5.0.22-release-notes:

5.0.22 - Oct 26, 2023
~~~~~~~~~~~~~~~~~~~~~

- :issue:`SERVER-68548` MongoDB Shell version 4.4.15 logging asio message despite 
  --quiet flag
- :issue:`SERVER-80021` Make $convert round-trip correctly between double and string
- :issue:`SERVER-80703` Avoid traversing routing table in MigrationDestinationManager
- :issue:`SERVER-81106`  Recipient shard doesn't wait for the collection version 
  to be locally persisted before starting the cloning phase
- :issue:`WT-11064` Skip globally visible tombstones as part of update obsolete check
- `All JIRA issues closed in 5.0.22 
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%205.0.22>`_
- :ref:`5.0.22-changelog`

.. _5.0.21-release-notes:

5.0.21 - Sep 12, 2023
~~~~~~~~~~~~~~~~~~~~~

- :issue:`SERVER-60466` Support drivers gossiping signed $clusterTimes to 
  replica set --shardsvrs before addShard is run
- :issue:`SERVER-71627` Refreshed cached collection route info will severely 
  block all client request when a cluster with 1 million chunks
- :issue:`SERVER-78813` Commit point propagation fails indefinitely with exhaust 
  cursors with null lastCommitted optime
- :issue:`WT-10759` Do not retry to force evict history store pages during 
  reconciliation
- :issue:`WT-11051` Fix newest start durable timestamp comparison in aggregate 
  timestamp validation
- `All JIRA issues closed in 5.0.21 
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%205.0.21>`_
- :ref:`5.0.21-changelog`

.. _5.0.20-release-notes:

5.0.20 - Aug 14, 2023
~~~~~~~~~~~~~~~~~~~~~

- :issue:`SERVER-74954` Incorrect result when contained $or rewrites $elemMatch
  extra condition
- :issue:`SERVER-78813` Commit point propagation fails indefinitely with
  exhaust cursors with null lastCommitted optime
- :issue:`SERVER-79136` Incorrect query result of $match + $group on metaField
  over time-series
- :issue:`WT-10449` Do not save update chain when there are no updates to be
  written to the history store
- :issue:`WT-11031` Fix RTS to skip tables with no time window information in
  the checkpoint
- `All JIRA issues closed in 5.0.20
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%205.0.20>`_
- :ref:`5.0.20-changelog`


.. _5.0.19-release-notes:

5.0.19 - Jul 13, 2023
~~~~~~~~~~~~~~~~~~~~~

- :issue:`SERVER-71985` Automatically retry time series insert on DuplicateKey 
  error
- :issue:`SERVER-74551` WriteConflictException unnecessarily logged as warning
  during findAndModify after upgrade to mongo 5.0
- :issue:`SERVER-77018` Deadlock between dbStats and 2 index builds
- :issue:`SERVER-78126` For specific kinds of input, mongo::Value() always
  hashes to the same result on big-endian platforms
- :issue:`WT-10253` Run session dhandle sweep and session cursor sweep more
  often
- `All JIRA issues closed in 5.0.19
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%205.0.19>`_
- :ref:`5.0.19-changelog`

.. _5.0.18-release-notes:

5.0.18 - May 18, 2023
~~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-48196` Upgrade the timelib to the latest to update the built-in timezone files to the latest
- :issue:`SERVER-54150` Recovery from a stable checkpoint should fassert on oplog application failures
- :issue:`SERVER-57056` Syslog severity set incorrectly for INFO messages
- :issue:`SERVER-72686` Add support for $collStats agg stage on timeseries collection
- :issue:`WT-10551` Incremental backup may omit modified blocks
- `All JIRA issues closed in 5.0.18
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%205.0.18>`_
- :ref:`5.0.18-changelog`


.. _5.0.17-release-notes:

5.0.17 - Apr 27, 2023
~~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-73229` Logical sessions cache refresh ignores write errors 
  from updating session document, leading to cursors being killed early
- :issue:`SERVER-74647` Resharding state machine creation should be retried 
  after interruption
- :issue:`SERVER-75261` "listCollections" command fails with 
  BSONObjectTooLarge error
- :issue:`SERVER-75431` Get rid or fix best effort check for primary db 
  on rename path in sharded clusters
- :issue:`SERVER-76098` Allow queries with $search and non-simple collations
- `All JIRA issues closed in 5.0.17
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%205.0.17>`_
- :ref:`5.0.17-changelog`


.. _5.0.16-release-notes:

5.0.16 - Apr 10, 2023
~~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-61909` Hang inserting or deleting document with large
  number of index entries
- :issue:`SERVER-73822` Time-series $group rewrite ignores certain
  accumulators
- :issue:`SERVER-74345` mongodb-org-server 4.4.19, 5.0.15, 6.0.5 not
  starting after upgrading from older version (Debian, RPM Packages)
- :issue:`SERVER-74501` Fix MigrationBatchFetcher/Inserter completion
  reliance to not spawn an extra cleanup thread
- :issue:`SERVER-75205` Deadlock between stepdown and restoring locks
  after yielding when all read tickets exhausted

- `All JIRA issues closed in 5.0.16
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%205.0.16>`_

- :ref:`5.0.16-changelog`

.. _5.0.15-release-notes:

5.0.15 - Feb 27, 2023
~~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-54900` Blocking networking calls can delay sync-source resolution indefinitely
- :issue:`SERVER-72416` The find and findAndModify projection code does not honor the collection level collation
- :issue:`SERVER-71759` dataSize command doesn't yield
- :issue:`SERVER-72222` MapReduce with single reduce optimization fails when merging results in sharded cluster
- :issue:`WT-9268` Delay deletion of the history store record to reconciliation

- `All JIRA issues closed in 5.0.15
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%205.0.15>`_

- :ref:`5.0.15-changelog`

.. _5.0.14-release-notes:

5.0.14 - Nov 21, 2022
~~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-68477` Improve NaN-handling for expireAfterSeconds TTL
  index parameter
- :issue:`SERVER-66289` $out incorrectly throws BSONObj size error on
  v5.0.8
- :issue:`SERVER-61185` Use prefix_search for unique index lookup
- :issue:`SERVER-68115` Bug fix for "elemMatchRootLength > 0" invariant
  trigger
- :issue:`SERVER-68139` Resharding command fails if the projection sort
  is bigger than 100MB

- `All JIRA issues closed in 5.0.14
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%205.0.14>`_

- :ref:`5.0.14-changelog`

.. _5.0.13-release-notes:

5.0.13 - Sep 29, 2022
~~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-69611` Set the -ffp-contract=off compiler option by
  default
- :issue:`SERVER-69220` refineCollectionShardKey permits toggling
  current shard key fields between range-based and hashed, leading to
  data inconsistency
- :issue:`SERVER-67650` Resharding recipient can return
  remainingOperationTimeEstimatedSecs=0 when the oplog applier hasn't
  caught up with the oplog fetcher
- :issue:`SERVER-68094` Resharding with custom generated _id fails with
  projection error
- :issue:`WT-9870` Fix updating pinned timestamp whenever oldest
  timestamp is updated during recovery

- `All JIRA issues closed in 5.0.13
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%205.0.13>`_

- :ref:`5.0.13-changelog`

.. _5.0.12-release-notes:

5.0.12 - Sep 05, 2022
~~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-68925` Reintroduce check table logging settings at
  startup (revert :issue:`SERVER-43664`)
- :issue:`SERVER-63852` getThreadName() should not crash
- :issue:`SERVER-60958` Avoid server hang in chunk migration when
  step-down event occurs
- :issue:`SERVER-65382` AutoSplitVector should not use clientReadable to
  reorder shard key fields
- :issue:`SERVER-63843` Don't allow recursive doLog in synchronous
  signal handlers

- `All JIRA issues closed in 5.0.12
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%205.0.12>`_

- :ref:`5.0.12-changelog`

.. _5.0.11-release-notes:

5.0.11 - Aug 19, 2022
~~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-68511` MovePrimary update of ``config.databases`` entry
  must use dotted fields notation
- :issue:`SERVER-61321` Improve handling of large/NaN values for text
  index version
- :issue:`SERVER-60607` Improve handling of large/NaN values for geo
  index version
- :issue:`SERVER-68628` Retrying a failed resharding operation after a
  primary failover can lead to server crash or lost writes
- :issue:`SERVER-68522` Prevent 5.0 binary from starting in fCV 4.4 with
  misconfigured TTL index
- :issue:`WT-9500` Fix RTS to use cell time window instead of key/value
  timestamps of HS update

- `All JIRA issues closed in 5.0.11
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%205.0.11>`_

- :ref:`5.0.11-changelog`

.. _5.0.10-release-notes:

5.0.10 - Jul 29, 2022
~~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-66418` Bad projection created during dependency
  analysis due to string order assumption
- :issue:`SERVER-65821` Deadlock during setFCV when there are prepared
  transactions that have not persisted commit/abort decision
- :issue:`SERVER-65131` Disable opportunistic read targeting (except for
  hedged reads)
- :issue:`SERVER-63971` Change server parameter to default to
  read-your-writes behavior after 2PC transaction
- :issue:`SERVER-66433` Backport deadline waiting for overlapping range
  deletion to finish to pre-v5.1 versions

- `All JIRA issues closed in 5.0.10
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%205.0.10>`_

- :ref:`5.0.10-changelog`

.. _5.0.9-release-notes:

5.0.9 - May 31, 2022
~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-65636`  Remove limits on number of LDAP connections 
  per host
- :issue:`SERVER-65137` Detect namespace changes when refreshing 
  Collection after yielding
- :issue:`SERVER-64822`  Sharding an empty collection releases the 
  critical section too early
- :issue:`SERVER-62175`  Mongos fails to attach RetryableWrite Error 
  Label For Command Interrupted In _parseCommand
- :issue:`WT-9096` Fix search near returning wrong key/value sometimes 
  when key doesn't exist

- `All JIRA issues closed in 5.0.9
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%205.0.9>`_

- :ref:`5.0.9-changelog`

.. _5.0.8-release-notes:

5.0.8 - Apr 25, 2022
~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-63531` commitQuorum incorrectly includes 
  buildIndexes:false nodes and error message incorrectly says that only 
  voting nodes are eligible
- :issue:`SERVER-63387` 1 StreamingCursor should return backup blocks in
  the order they were retrieved from the WiredTiger backup cursor
- :issue:`SERVER-62229` Fix invariant when applying index build entries 
  while recoverFromOplogAsStandalone=true
- :issue:`SERVER-61879` Refreshes to recover migrations must never join 
  ongoing refreshes
- :issue:`WT-8924` Don't check against on disk time window if there is 
  an insert list when checking for conflicts in row-store

- `All JIRA issues closed in 5.0.8
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%205.0.8>`_

- :ref:`5.0.8-changelog`

.. _5.0.7-release-notes:

5.0.7 - Apr 11, 2022
~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-64517` RecoverableCriticalSection is not properly 
  recovered on startup
- :issue:`SERVER-64403` Find queries with SORT_MERGE collation-encode 
  the missing sort attribute
- :issue:`SERVER-63742` Default topology time in shard can lead to 
  infinite refresh in shard registry
- :issue:`SERVER-60412` Host memory limit check does not honor cgroups 
  v2
- :issue:`WT-7922` Handle missing WiredTiger version file

- `All JIRA issues closed in 5.0.7
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%205.0.7>`_

- :ref:`5.0.7-changelog`

.. _5.0.6-release-notes:

5.0.6 - Jan 31, 2022
~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`WT-8395` Inconsistent data after upgrade from 4.4.3 and 4.4.4 to 4.4.8+ and 5.0.2+
- :issue:`SERVER-62245` MigrationRecovery must not assume that only one migration needs to be recovered
- :issue:`SERVER-61427` Unique index builds can cause a loss of availability during commit due to checking many false duplicates
- :issue:`SERVER-61194` Prevent time-series bucket OID reuse with coarse granularity
- :issue:`SERVER-60310` OCSP response validation should not consider statuses of irrelevant certificates

- `All JIRA issues closed in 5.0.6
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%205.0.6>`_

- :ref:`5.0.6-changelog`

.. _5.0.5-release-notes:

5.0.5 - Dec 6, 2021
~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-61483` Resharding coordinator fails to recover abort 
  decision on step-up, attempts to commit operation as success, leading 
  to data inconsistency
- :issue:`SERVER-59858` Add observability for tasks scheduled on the 
  reactor thread
- :issue:`SERVER-51329` Unexpected non-retryable error when shutting 
  down a mongos server
- :issue:`WT-8163` Consider more eviction scenarios to give up 
  checkpoint-cleanup
- :issue:`WT-7912` Fix prefix search near optimisation to handle 
  scenarios where the key range is split across pages.

- `All JIRA issues closed in 5.0.5
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%205.0.5>`_

- :ref:`5.0.5-changelog`

.. _5.0.4-release-notes:

5.0.4 - Nov 15, 2021
~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-60326` Windows Server fails to start when X509 
  certificate has empty subject name
- :issue:`SERVER-59876` Large delays in returning from libcrypto.so
  while establishing egress connections
- :issue:`SERVER-59456` Start the LDAPReaper threadpool
- :issue:`SERVER-59226` Deadlock when stepping down with a profile 
  session marked as uninterruptible
- :issue:`SERVER-59074` Do not acquire storage tickets just to set/wait
  on oplog visibility

- `All JIRA issues closed in 5.0.4
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%205.0.4>`_

- :ref:`5.0.4-changelog`

.. _5.0.3-release-notes:

5.0.3 - Sep 21, 2021
~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-57667`: Improve processing speed for resharding's
  collection cloning pipeline
- :issue:`SERVER-57630`: Enable SSL_OP_NO_RENEGOTIATION on Ubuntu 18.04
  when running against OpenSSL 1.1.1
- :issue:`WT-8005`: Fix a prepare commit bug that could leave the
  history store entry unresolved
- :issue:`WT-7995`: Fix the global visibility that it cannot go beyond
  checkpoint visibility
- :issue:`WT-7984`: Fix a bug that could cause a checkpoint to omit a
  page of data

- `All JIRA issues closed in 5.0.3
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%275.0.3%27>`_

- :ref:`5.0.3-changelog`

.. _5.0.2-release-notes:

5.0.2 - Aug 4, 2021
~~~~~~~~~~~~~~~~~~~

Issues fixed:


- :issue:`SERVER-58936`: Unique index constraints may not be enforced
- :issue:`SERVER-57756`: Race between concurrent stepdowns and applying
  transaction oplog entry
- :issue:`SERVER-54729`: MongoDB Enterprise Debian/Ubuntu packages
  should depend on libsasl2-modules and libsasl2-modules-gssapi-mit
- :issue:`SERVER-47372`: config.cache collections can remain even after
  collection has been dropped
- :issue:`WT-6729`: Quiesce eviction prior running rollback to stable's
  active transaction check

- `All JIRA issues closed in 5.0.2
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%275.0.2%27>`_

- :ref:`5.0.2-changelog`

.. _5.0.1-release-notes:

5.0.1 - Jul 22, 2021
~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-58489`: Collection creation stuck in an infinite
  writeConflictRetry loop when having a duplicate name as a view
- :issue:`SERVER-58171`: Changing time-series granularity does not
  update view definition

- `All JIRA issues closed in 5.0.1
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%275.0.1%27>`_

- :ref:`5.0.1-changelog`

.. _5.0.0-release-notes:
 
5.0.0 - Jul 13, 2021
~~~~~~~~~~~~~~~~~~~~

The rest of this page provides the 5.0.0 release notes:

Time Series Collections
-----------------------

MongoDB 5.0 introduces :ref:`time series collections
<manual-timeseries-collection>` which efficiently store sequences of
measurements over a period of time. Compared to normal collections,
storing time series data in time series collections improves query
efficiency and reduces disk usage for your data and indexes.

.. _5.0-rel-notes-agg:

Aggregation
-----------

.. _5.0-rel-notes-new-agg-operators:

New Aggregation Operators
~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 5.0 introduces the following aggregation operators:

.. list-table::
   :header-rows: 1
   :widths: 20 80

   * - Operator
     - Description

   * - :group:`$count`
     - :group:`$count (aggregation accumulator) <$count>`
       provides a count of all documents when used in the existing
       pipeline :pipeline:`$group (aggregation) <$group>` stage and the
       new MongoDB 5.0 :pipeline:`$setWindowFields` stage.

       The :group:`$count (aggregation accumulator) <$count>` is
       distinct from the :pipeline:`$count (aggregation) <$count>`
       pipeline stage.

   * - :expression:`$dateAdd`
     - Increments a :method:`Date()` object by a
       specified number of time units.

   * - :expression:`$dateDiff`
     - Returns the difference between two dates.

   * - :expression:`$dateSubtract`
     - Decrements a :method:`Date()` object by a
       specified number of time units.

   * - :expression:`$dateTrunc`
     - Truncates a date.

   * - :expression:`$getField`
     - Returns the value of a specified field from a document. 
       You can use :expression:`$getField` to retrieve the value of 
       fields with names that contain periods (``.``) or start 
       with dollar signs (``$``).

   * - :expression:`$rand`
     - The :expression:`$rand` method generates a random float value
       between 0 and 1 each time it is called. The new
       :expression:`$sampleRate` operator is based on ``$rand``.

   * - :expression:`$sampleRate`
     - Adds the :expression:`$sampleRate` method to probabilistically
       select documents from a pipeline at a given rate.

   * - :expression:`$setField`
     - Adds, updates, or removes a specified field in a document. 
       You can use :expression:`$setField` to add, update,
       or remove fields with names that contain periods (``.``) or 
       start with dollar signs (``$``).

   * - :expression:`$unsetField`
     - Removes a specified field in a document. An alias for
       :expression:`$setField` to remove fields with names that contain
       periods (``.``) or that start with dollar signs (``$``).

Window Operators
~~~~~~~~~~~~~~~~

MongoDB 5.0 introduces the :pipeline:`$setWindowFields` pipeline stage,
allowing you to perform operations on a specified span of documents in a
collection, known as a *window*. The operation returns the results based
on the chosen :ref:`window operator <setWindowFields-window-operators>`.

.. include:: /includes/setWindowFields-introduction-examples.rst

General Aggregation Improvements
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

``$expr`` Operator: Comparison Operators Use Indexes
````````````````````````````````````````````````````

Starting in MongoDB 5.0, the :expression:`$eq`, :expression:`$lt`,
:expression:`$lte`, :expression:`$gt`, and :expression:`$gte` operators
placed in an :query:`$expr` operator can use indexes to improve performance.

``$ifNull`` Expression Accepts Multiple Input Expressions
`````````````````````````````````````````````````````````

Starting in MongoDB 5.0, you can specify multiple input expressions for
the :expression:`$ifNull` expression before returning a replacement
expression.

``let`` Option for Aggregation
``````````````````````````````

Starting in MongoDB 5.0, the :dbcommand:`aggregate` command and
:method:`db.collection.aggregate()` helper method have a ``let`` option
to specify a list of variables that can be used elsewhere in the
aggregation pipeline. This allows you to improve command readability by
separating the variables from the query text.

``$lookup`` Stage: Concise Correlated Subqueries
````````````````````````````````````````````````

Starting in MongoDB 5.0, an aggregation pipeline :pipeline:`$lookup`
stage supports :ref:`concise correlated subqueries
<lookup-syntax-concise-correlated-subquery>` that improve joins between
collections.

``$lookup`` Stage: Uncorrelated Subqueries
``````````````````````````````````````````

.. include:: /includes/uncorrelated-subquery.rst

See :ref:`lookup-uncorrelated-subquery`.

``$sort`` Stage: Performance Improvements
`````````````````````````````````````````

Starting in MongoDB 5.0, the :term:`query optimizer` pushes down the results of 
a :pipeline:`$project` stage into the :pipeline:`$sort` stage. As a result, 
``$sort`` operations can require less RAM when used with the ``project`` stage 
and avoid ``Sort exceeded memory limit`` errors. 

.. _5.0-rel-notes-auditing:

Auditing
--------

Runtime Audit Filter Configuration
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 5.0 adds the ability to :ref:`configure auditing filters
<configure-audit-filters-at-runtime>` at runtime.

.. list-table::
   :header-rows: 1
   :widths: 20 80

   * - Operator
     - Description

   * - :parameter:`auditConfigPollingFrequencySecs`
     - Defines the polling interval for checking audit configuration

   * - :dbcommand:`getAuditConfig`
     - Retrieves audit configurations from :binary:`~bin.mongod` and
       :binary:`~bin.mongos`.

   * - :dbcommand:`setAuditConfig`
     - Sets new audit configurations for :binary:`~bin.mongod` and
       :binary:`~bin.mongos` instances at runtime.

General Auditing Updates
~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0:

- :ref:`System event auditing <audit-message-format>` has:

  - An additional :ref:`uuid <audit-message-uuid>` field and other
    :ref:`audit message <audit-message-format>` enhancements.

  - New audit message types: :ref:`clientMetadata
    <audit-message-clientMetadata>`, :ref:`directAuthMutation
    <audit-message-directAuthMutation>`, :ref:`logout
    <audit-message-logout>`, and :ref:`startup <audit-message-startup>`.

  - Additional information and logging scenarios for these existing
    audit message types: :ref:`authCheck <audit-message-authCheck>`,
    :ref:`authenticate <audit-message-authenticate>`,
    :ref:`createCollection <audit-message-createCollection>`,
    :ref:`createIndex <audit-message-createIndex>`, and
    :ref:`dropCollection <audit-message-dropCollection>`.

- DDL operations auditing on :term:`secondaries <secondary>` has
  changes. See :ref:`auditing-audit-events-and-filter`.

.. _5.0-rel-notes-capped-collections:

Capped Collections
------------------

Capped Collection Deletes Are Replicated to Secondaries
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0, the :ref:`implicit delete operations
<capped_collections_remove_documents>` for :ref:`replica set
<replication>` :term:`capped collections <capped collection>` are
processed by the primary and replicated to the :ref:`secondary members
<replica-set-secondary-members-ref>`.

Explicit Deletes Allowed on Capped Collections
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0.7, you can delete documents from :ref:`capped
collections <manual-capped-collection>` using :ref:`delete methods
<delete-additional-methods>`.

.. _5.0-rel-notes-change-streams:

Change Streams
--------------

Change Events Output
~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0, :ref:`change-events`
contain the field ``updateDescription.truncatedArrays`` to record array
truncations.

.. _5.0-rel-notes-indexes:

Indexes
-------

Partial Indexes Behavior Change
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-5.0-multiple-partial-index.rst

Unique Sparse Index Behavior Change
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0, :ref:`unique sparse <sparse-unique-index>` 
and :ref:`unique non-sparse <unique-index>` indexes with the same 
:ref:`key pattern<key_patterns>` can exist on a single collection.

See :ref:`unique sparse index creation <sparse-and-non-sparse_example>`

Cannot Drop ``Ready`` Indexes During In-Progress Index Builds
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-5.0-dropindexes-inprog.rst

Foreground Validation May Fix Multikey Metadata Inconsistencies
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

When run on a MongoDB deployment, 
:method:`db.collection.validate()` attempts to fix
:ref:`multikey metadata inconsistencies <validate-standalone-inconsistencies>`
of standalone deployments. 

Removal of ``geoHaystack`` Index and the ``geoSearch`` Command
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-5.0-geohaystack-removed.rst

New Error Messages
~~~~~~~~~~~~~~~~~~

The :method:`db.collection.createIndex()` and :method:`db.collection.createIndexes()`
operations have new error messages when options are specified incorrectly.

Interrupted Index Builds
~~~~~~~~~~~~~~~~~~~~~~~~

If a node in a replica set is cleanly shutdown or rolls back during an
index build, the index build progress is now
:ref:`saved to disk<index-operations-build-failure>`. When the server
restarts, index creation resumes from the saved position.

``reIndex`` Behavior Change
~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0, the :dbcommand:`reIndex` command and the
:method:`db.collection.reIndex()` shell method may only be run on
:term:`standalone` instances.

.. _5.0-rel-notes-removed-commands:

Removed Commands
----------------

Starting in MongoDB 5.0, these database commands and
``mongo`` shell helper methods are removed:

.. list-table::
   :header-rows: 1

   * - Removed Command
     - Alternative

   * - :method:`db.collection.ensureIndex()`
     - :method:`db.collection.createIndex()`

   * - :method:`db.resetError()`
     - Not available

   * - :dbcommand:`resetError`
     - Not available

   * - :dbcommand:`shardConnPoolStats`
     - :dbcommand:`connPoolStats`

   * - :dbcommand:`unsetSharding`
     - Not available

   * - :dbcommand:`geoSearch`
     - :pipeline:`$geoNear` or one of the supported
       :ref:`geospatial query operators <geospatial-query-selectors>`

.. _5.0-rel-notes-repl-sets:

Replica Sets
------------

Non-transactional Reads on ``config.transactions``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-5.0-non-transactional-config-reads.rst

``hello`` Command
~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0, the
:dbcommand:`hello` command and the :method:`db.hello()` method were
introduced as replacements for the ``isMaster`` command
and the ``db.isMaster()`` method. The new topology metric
:serverstatus:`connections.exhaustHello` tracks this in
:serverstatus:`connections`.

Quiesce Period
~~~~~~~~~~~~~~

Starting in MongoDB 5.0, :binary:`~bin.mongod` and :binary:`~bin.mongos`
enter a :ref:`quiesce period <shutdown-cmd-quiesce-period>` to allow any
ongoing database operations to complete before shutting down.

Limit Removed for ``members[n]._id`` Values
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0, the :rsconf:`members[n]._id` field may be any
integer value greater than or equal to ``0``. Previously, this value was
limited to an integer between ``0`` and ``255`` inclusive.

``enableMajorityReadConcern`` Is Not Configurable
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-eMRC-always-true-in-5.0.rst

.. include:: /includes/fact-psa-performance-issues.rst

Enhanced Thread Pool Timeout Control
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0, you can use the new
:parameter:`replWriterMinThreadCount` server parameter to 
allow idle threads above this minimum to be closed.
When :parameter:`replWriterMinThreadCount` is
configured with a value less than :parameter:`replWriterThreadCount`,
idle threads above :parameter:`replWriterMinThreadCount` are timed out.

Reconfiguring PSA Replica Sets
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

When reconfiguring primary-secondary-arbiter (PSA) replica sets or
changing to a PSA architecture, it is now in some cases required to
perform the reconfiguration in a two-step change. MongoDB 5.0 introduces
the :method:`rs.reconfigForPSASet()` method which performs both steps.
If you cannot use the helper method, follow the procedure in
:ref:`modify-psa-replica-set-safely`.

Limit Sync Source Re-evaluations
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

:parameter:`maxNumSyncSourceChangesPerHour` determines how many sync
source changes can happen per hour before the node temporarily stops
re-evaluating a sync source. This parameter will not prevent a node
from starting to sync from another node if it doesn't have a sync
source.

``enableOverrideClusterChainingSetting`` Server Parameter
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0.2, you can set the new
:parameter:`enableOverrideClusterChainingSetting` server parameter to
``true`` to allow :term:`secondary` members to replicate data from other
secondary members even if :rsconf:`settings.chainingAllowed` is
``false``.

.. _5.0-rel-notes-security:

Security
--------

Support for Online Certificate Rotation
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0, you may now rotate the following TLS
certificates on demand without first needing to stop your running
:binary:`~bin.mongod` or :binary:`~bin.mongos` instance:

- :setting:`TLS Certificates <net.tls.certificateKeyFile>`
- :setting:`CRL (Certificate Revocation List) files <net.tls.CRLFile>`
  (on Linux and Windows platforms)
- :setting:`CA (Certificate Authority) files <net.tls.CAFile>`

To rotate these certificates, replace the certificate files on your
filesystem with updated versions, then use the
:dbcommand:`rotateCertificates` command or the
:method:`db.rotateCertificates()` shell method to trigger certificate
rotation.

Rotating certificates in this manner does not require downtime, and does
not drop any active remote connections.

See :ref:`certificate-rotation` for full details.

Support for Configuring TLS 1.3 Cipher Suites
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 5.0 introduces the :parameter:`opensslCipherSuiteConfig`
parameter to enable configuration of the supported cipher suites OpenSSL
should permit when using TLS 1.3 encryption.

TLS Connection X509 Certificate Startup Warning
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-5.0-x509-certificate-client-warning.rst

.. _5.0-rel-notes-sharded-clusters:

ApplyOps Privilege Action
~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 5.0 introduces the :authaction:`applyOps` 
privilege action which is inherited by :authrole:`dbAdminAnyDatabase`.

The :authaction:`applyOps` action permits users to run the 
:dbcommand:`applyOps` database command.

Sharded Clusters
----------------

Resharding
~~~~~~~~~~

The ideal shard key allows MongoDB to distribute documents evenly
throughout the cluster while facilitating common query patterns. A
suboptimal shard key can lead to performance or scaling issues due to
uneven data distribution. Starting in MongoDB 5.0, you can use the
:dbcommand:`reshardCollection` command to :ref:`change the shard key
<change-a-shard-key>` for a collection to change the distribution of
your data across your cluster.

``currentOp`` Reports Ongoing Resharding Operations
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0, the :pipeline:`$currentOp` aggregation stage
(and the :dbcommand:`currentOp` command and :method:`db.currentOp()`
shell method) include additional information about the status of ongoing
resharding operations for the resharding coordinator and the
donor and recipient shards.

``db.currentOp`` Method Now Uses Aggregation Stage in ``mongosh``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0, the :pipeline:`$currentOp` aggregation 
stage is used when running the helper method :method:`db.currentOp()` 
with :binary:`~bin.mongosh`.

``mongos`` / ``mongod`` Connection Pool
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0,
MongoDB adds the parameter option ``"automatic"`` as the new default for
the :parameter:`ShardingTaskExecutorPoolReplicaSetMatching`. When set
for a :binary:`~bin.mongos`, the instance follows the behavior specified
for the ``"matchPrimaryNode"`` option. When set for a
:binary:`~bin.mongod`, the instance follows the behavior specified for
the ``"disabled"`` option.

``renameCollection`` Compatible with Sharded Collections
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0, you can use the :dbcommand:`renameCollection`
command to change the name of a sharded collection.

.. include:: /includes/rename-collection-in-shard.rst

``movePrimary`` Error Message For Writes During Operation
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0, when using the :dbcommand:`movePrimary` command
to remove a shard from a :ref:`sharded cluster <sharded-cluster>`, 
writes to the original shard will generate an error message.

Split and Merge Chunk Changelogs Show Owning Shard
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0, documents in the :data:`config.changelog`
collection for
:manual:`split </tutorial/split-chunks-in-sharded-cluster/>` and
:manual:`merge </tutorial/merge-chunks-in-sharded-cluster/>` operations
contain an ``owningShard`` field. The ``owningShard`` field shows the
``shardId`` of the shard that owns the chunks that were split or
merged.

The ``owningShard`` field helps identify shards where split or merge
operations frequently occur.

``maxCatchUpPercentageBeforeBlockingWrites`` Server Parameter
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0, you can set the
:parameter:`maxCatchUpPercentageBeforeBlockingWrites` to specify the
maximum allowed percentage of data not yet migrated
during a :dbcommand:`moveChunk` operation when compared to the
total size (in MBs) of the chunk being transferred.

This parameter can affect the behavior of:

- :dbcommand:`moveChunk` commands that are run manually.

- Load balancer functionality, which automatically runs multiple
  :dbcommand:`moveChunk` commands to evenly distribute chunks across
  shards. See :ref:`sharding-balancing`.

.. _5.0-rel-notes-shell:

Shell Changes
-------------

New MongoDB Shell: ``mongosh``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The ``mongo`` shell has been deprecated in MongoDB v5.0. The
replacement shell is :binary:`~bin.mongosh`. The legacy ``mongo`` shell
will be removed in a future release.

Shell packaging also changes in MongoDB v5.0. Refer to the
:mongosh:`installation instructions </install>` for further details.

Shell Support for GCP and Azure KMS Providers
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0, the Google Cloud Platform KMS and Azure Key Vault 
are supported in both :binary:`~bin.mongosh` and the legacy ``mongo`` shell as
:ref:`Key Management Service (KMS) <qe-fundamentals-kms-providers>`
providers for :ref:`manual-csfle-feature`.

Using a KMS, you can centrally and securely store Customer Master Keys
(CMKs), which are used to encrypt and decrypt data encryption keys as
part of the :ref:`client-side field level encryption workflow
<csfle-encryption-components>`.

In addition, a configured KMS allows for the use of
:ref:`field-level-encryption-automatic-decryption` of data fields when
used with MongoDB Enterprise.

To learn more, see :mongosh:`Configure a KMS provider using mongosh
</field-level-encryption/>`.

.. _5.0-snapshot-reads:

Snapshots
---------

Extended Support for Read Concern ``"snapshot"``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0, read concern :readconcern:`"snapshot"` is
supported for some read operations outside of multi-document
transactions on primaries and secondaries. See
:ref:`tutorial-long-running-queries`.

``minSnapshotHistoryWindowInSeconds`` Server Parameter
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0, you can use the
:parameter:`minSnapshotHistoryWindowInSeconds` parameter to control how
long WiredTiger keeps the snapshot history.

.. _5.0-rel-notes-transactions:

Transactions
------------

``coordinateCommitReturnImmediatelyAfterPersistingDecision`` Parameter
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/return-commit-decision-parameter.rst


Naming Changes
--------------

Starting in February 2022, the "Versioned API" terminology was 
changed to "Stable API". All concepts and features remain the same 
with this naming change.

.. _5.0-rel-notes-general:

General Changes
---------------

Execution Plan Statistics for Query with ``$lookup`` Pipeline Stage
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 5.0 adds :ref:`execution plan statistics
<explain-results-lookup>` for queries that use a :pipeline:`$lookup`
pipeline stage.

Improved Handling of (``$``) and (``.``) in Field Names
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 5.0 adds :ref:`improved support
<crud-concepts-dot-dollar-considerations>` for field names that are
(``$``) prefixed or that contain (``.``) characters. The validation
rules for storing data have been updated to make it easier to work with
data sources that use these characters.    

Cluster Wide Default Write Concern
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/5.0-cluster-wide-write-concern.rst

Implicit Default Write Concern
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/5.0-default-wc.rst

The :writeconcern:`{ w: "majority" } <"majority">` default
:ref:`write concern <write-concern>` provides a stronger
durability guarantee in the event of an election, or if replica set
members become unavailable.

``mongosShutdownTimeoutMillisForSignaledShutdown`` Parameter
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0, the new parameter
:parameter:`mongosShutdownTimeoutMillisForSignaledShutdown` specifies
the time in milliseconds to wait for any ongoing database operations to
complete before initiating a shutdown of :binary:`~bin.mongos`.

Configurable ``zstd`` Compression Level
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 5.0 introduces the
:setting:`~storage.wiredTiger.engineConfig.zstdCompressionLevel`
configuration file option which allows for configurable compression
levels when
:setting:`~storage.wiredTiger.collectionConfig.blockCompressor` is set
to ``zstd``.

Lock-Free Read Operations
~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/lock-free-commands.rst

Schema Validation Failures Explained
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 5.0 adds detailed explanations when a document fails
:ref:`schema validation <schema-validation-overview>`.

Repair Option in ``validate`` Command
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0, the :dbcommand:`validate` command and
:method:`db.collection.validate()` helper method have a new :ref:`repair
<cmd-validate-repair>` option for repairing a collection that has
inconsistencies.

The :dbcommand:`validate` command and :method:`db.collection.validate()`
helper method also return a new :data:`~validate.repaired` boolean value
that is ``true`` if the collection was repaired.

``validate`` Command Reports Document Schema Violations
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0, :dbcommand:`validate` and
:method:`db.collection.validate()` validates documents 
in a collection. The commands report if any  
:ref:`schema validation rules <schema-validation-document>` are 
violated.

Repair Option in ``mongod``
~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0, the :option:`--repair <mongod --repair>` option
for :binary:`~bin.mongod` validates the collections to find any
inconsistencies and fixes them if possible, which avoids rebuilding the
indexes. See the :option:`--repair <mongod --repair>` option for usage
and limitations.

``corruptRecords`` Field in Validation Output
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0, the :dbcommand:`validate` command and
:method:`db.collection.validate()` helper method return a new
:data:`~validate.corruptRecords` field that contains an array of
``RecordId`` values for corrupt documents.

``maxValidateMemoryUsageMB`` Server Parameter
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0, the :dbcommand:`setParameter`
command has a new :parameter:`maxValidateMemoryUsageMB` parameter, which
sets the maximum memory usage for the :dbcommand:`validate` command.

``findChunksOnConfigTimeoutMS`` Server Parameter
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0, you can use the
:parameter:`findChunksOnConfigTimeoutMS` parameter to change the timeout
for find operations on :data:`~config.chunks`.

Database Profiler ``filter`` Option
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0, you can set a ``filter`` option for the
:ref:`database profiler <database-profiler>` to determine which
operations are profiled and logged. You can use the ``filter``
expression in place of the ``slowms`` and ``sampleRate`` profiler
options.

See:

- :ref:`database-profiler`
- :method:`db.setProfilingLevel()`
- :dbcommand:`profile`

Log Changes to Database Profiler Settings
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/log-changes-to-database-profiler.rst

Independent Log Rotation for Server and Audit Logs
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0, when :ref:`auditing <auditing>` is
enabled, you may now rotate the server and audit logs
independently using the :dbcommand:`logRotate` command.
Previously, :dbcommand:`logRotate` would rotate the two logs together.

``remote`` Field in Slow Operation Logs
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0, :ref:`slow operation
<database-profiling-specify-slowms-threshold>` log messages include a
``remote`` field specifying client IP address.

``remoteOpWaitMillis`` Log Field
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0, you can use the :ref:`remoteOpWaitMillis
<log-messages-remoteOpWaitMillis>` log field to obtain the wait time for
results from :term:`shards <shard>`.

``resolvedViews`` Log Field for Slow Queries on Views
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0, :ref:`log messages for slow queries
<log-message-slow-ops>` on :ref:`views <log-message-view-example>`
include a ``resolvedViews`` field that contains the view details.

Define Variables Using the ``let`` Option
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0, the following commands have a ``let`` option to
define a list of variables. This allows you to improve command
readability by separating the variables from the query text.

- :dbcommand:`find` command

- :dbcommand:`findAndModify` command and corresponding
  :method:`db.collection.findAndModify()` shell helper

- :dbcommand:`update` command and corresponding
  :method:`db.collection.update()` shell helper

- :dbcommand:`delete` command

- :method:`db.collection.remove()` shell helper

The :dbcommand:`update` command also has a ``c`` field to define a list
of variables.

Support for Username to LDAP DN Mapping by Default
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0, the :setting:`~security.ldap.userToDNMapping`
configuration file option and the :option:`--ldapUserToDNMapping
<mongod --ldapUserToDNMapping>` command line option for
:binary:`~bin.mongod` / :binary:`~bin.mongos` and :program:`mongoldap`
now map the authenticated username as the LDAP DN by default if an
empty mapping document (i.e. an empty string or empty array) is
specified to the option. Previously, providing an empty mapping document
would cause mapping to fail.

Additional ``dbStats`` Free Space Statistics
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0, the :dbcommand:`dbStats` command outputs these
additional statistics:

- Free space allocated to collections (:data:`~dbStats.freeStorageSize`)

- Free space allocated to indexes
  (:data:`~dbStats.indexFreeStorageSize`)

- Total free space allocated to collections and indexes
  (:data:`~dbStats.totalFreeStorageSize`)

``serverStatus`` Output Change
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

:dbcommand:`serverStatus` includes the following new fields in its
output:

Aggregation Metrics
  - :serverstatus:`metrics.commands.update.pipeline` 
  - :serverstatus:`metrics.commands.update.arrayFilters` 
  - :serverstatus:`metrics.commands.findAndModify.pipeline` 
  - :serverstatus:`metrics.commands.findAndModify.arrayFilters` 
  - :serverstatus:`metrics.dotsAndDollarsFields`
  - :serverstatus:`metrics.operatorCounters`

API Version Metrics
  - :serverstatus:`metrics.apiVersions`

Replication Metrics
  - :serverstatus:`metrics.repl.reconfig.numAutoReconfigsForRemovalOfNewlyAddedFields`

Read Concern Counters
  - :serverstatus:`readConcernCounters`, which reports on the
    :ref:`read concern level <read-concern-levels>` specified by query
    operations (:serverstatus:`readConcernCounters` replaces
    :serverstatus:`opReadConcernCounters`)
  - :serverstatus:`readConcernCounters` now has the following new
    fields:

    - ``readConcernCounters.nonTransactionOps.noneInfo``
    - ``readConcernCounters.transactionOps.noneInfo``

Write Concern Counters
  - :serverstatus:`opWriteConcernCounters` now has the following new
    fields:

    - ``opWriteConcernCounters.insert.noneInfo``
    - ``opWriteConcernCounters.update.noneInfo``
    - ``opWriteConcernCounters.delete.noneInfo``

Number of Threaded Connections
  - :serverstatus:`connections.threaded`, which reports the number of
    incoming connections from clients that are assigned to threads that
    service client requests

Resharding Statistics
  - :serverstatus:`shardingStatistics.resharding`, which reports
    statistics about resharding operations

Service Executor Metrics
  - :serverstatus:`network.serviceExecutors`, which reports on the
    service executors that run operations for client requests

Cursor Metrics
  - :serverstatus:`metrics.cursor.moreThanOneBatch`, which reports the
    total number of cursors that have returned more than one batch
    (additional batches are retrieved using the :dbcommand:`getMore`
    command)

  - :serverstatus:`metrics.cursor.totalOpened`, which reports the total
    number of cursors that have been opened

Security Counter
  - :serverstatus:`security.authentication.saslSupportedMechsReceived`,
    which reports the number of times a :dbcommand:`hello` request
    includes a valid :data:`hello.saslSupportedMechs` field.

Repl
  - :serverstatus:`repl` now includes a
    :serverstatus:`~repl.primaryOnlyServices` document that
    contains additional information about services that only run on 
    replica set primaries.


Plan Cache Debug Info Size Limit
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0, the
:ref:`plan cache <query-plans-query-optimization>` will save full ``plan cache``
entries only if the cumulative size of the ``plan caches`` for all
collections is lower than 0.5 GB. When the cumulative size of the
``plan caches`` for all collections exceeds this threshold, additional
``plan cache`` entries are stored without certain debug information.

The estimated size in bytes of a ``plan cache`` entry is available in
the output of :pipeline:`$planCacheStats`.

Closure of Inactive Cursors Opened Within a Session
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.0, cursors created within a 
:ref:`client session <read-isolation-consistency-recency>` close 
when the corresponding :ref:`server session <server-sessions>` 
ends with the :dbcommand:`killSessions` command, if the session times 
out, or if the client has exhausted the cursor. 
See :ref:`read-operations-cursors`.

New ``validateDBMetadata`` Command
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 5.0 adds the :dbcommand:`validateDBMetadata` command. The 
:dbcommand:`validateDBMetadata` command checks that the stored metadata 
of a database or a collection is valid within a particular API version.

.. _5.0-rel-notes-performance: 

Performance Considerations
--------------------------

Implicit Default Write Concern
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 5.0 changes the default :ref:`write concern <write-concern>` to 
:writeconcern:`{ w: "majority" } <"majority">`. The new default write concern 
might impact performance since MongoDB acknowledges writes only after a 
:ref:`calculated majority <calculating-majority-count>` of replica set
members have executed and persisted the write to disk. 

If your application relies on performance-sensitive writes, you can 
override the default write concern at the cost of data durability guarantees. 
To override this setting, you can: 

- Set the write concern at the individual operation level for 
  performance-critical writes. For more information, see your 
  :driver:`driver documentation </>`.

- Use the :dbcommand:`setDefaultRWConcern` command to explicitly set the default 
  write concern. 

.. include:: /includes/w-1-rollback-warning.rst

``local`` Default Read Concern
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-5.0-read-concern-latency.rst

Snapshot History Retention
~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 5.0 increases the default value of 
:parameter:`minSnapshotHistoryWindowInSeconds` to ``300``, which might 
negatively impact performance.  If you aren't using read concern 
:readconcern:`"snapshot"`, you can reduce the value of the 
``minSnapshotHistoryWindowInSeconds`` parameter to ``5`` on all 
:binary:`~bin.mongod` instances. For more information, see 
:ref:`storage-snapshot-history`.

.. note:: 

   If you are running a sharded cluster, do not change 
   ``minSnapshotHistoryWindowInSeconds`` on :ref:`config servers 
   <sharding-config-server>`.

.. _5.0-rel-notes-platforms:

Platform Support
----------------

.. _5.0-rel-notes-minimum-microarchitecture:

Minimum Microarchitecture
~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 5.0 introduces the following minimum microarchitecture
requirements:

.. list-table::
   :header-rows: 1
   :widths: 15 85

   * - CPU
     - Minimum Supported Microarchitecture

   * - Intel ``x86_64``
     - MongoDB 5.0 requires one of:

       - Intel *Sandy Bridge* or later Core processor, or
       - Intel *Tiger Lake* or later Celeron or Pentium processor.

   * - AMD ``x86_64``
     - MongoDB 5.0 requires AMD *Bulldozer* or later.

   * - ARM ``arm64``
     - MongoDB 5.0 requires *ARMv8.2-A* or later.

MongoDB v5.0 is not supported on ``x86_64`` or ``arm64`` platforms that
do not meet these minimum microarchitecture requirements.

See :ref:`x86_64 Platform Support
<prod-notes-supported-platforms-x86_64>` for more information.

Removed Platforms
~~~~~~~~~~~~~~~~~

MongoDB 5.0 removes support for the following platforms:

- **macOS 10.13**

- **SLES 12** on the :ref:`s390x <prod-notes-supported-platforms-s390x>`
  architecture

- **Ubuntu 18.04** on the
  :ref:`PPC64LE <prod-notes-supported-platforms-PPC64LE>` and
  :ref:`s390x <prod-notes-supported-platforms-s390x>` architectures

See :ref:`prod-notes-supported-platforms` for the full list of platforms
and architectures supported in MongoDB 5.0.

Changes Affecting Compatibility
-------------------------------

Some changes can affect compatibility and may require user actions. For
a detailed list of compatibility changes, see
:doc:`/release-notes/5.0-compatibility`.

.. _5.0-upgrade:

Upgrade Procedures
------------------

.. important:: Feature Compatibility Version

   To upgrade to MongoDB 5.0 from a 4.4 deployment, the 4.4 deployment
   must have ``featureCompatibilityVersion`` set to ``4.4``. To check
   the version:

   .. code-block:: javascript

      db.adminCommand( { getParameter: 1, featureCompatibilityVersion: 1 } )

To upgrade to MongoDB 5.0, refer to the upgrade instructions specific to
your MongoDB deployment:

- :doc:`/release-notes/5.0-upgrade-standalone`

- :doc:`/release-notes/5.0-upgrade-replica-set`

- :doc:`/release-notes/5.0-upgrade-sharded-cluster`

If you need guidance on upgrading to 5.0, `MongoDB professional services
<https://www.mongodb.com/products/consulting?tck=docs_server>`_ offer
major version upgrade support to help ensure a smooth transition
without interruption to your MongoDB application.

.. _5.0-downgrade-considerations:

Downgrade Consideration
-----------------------

.. include:: /includes/5.0-upgrade-replacements.rst

.. |downgrading| replace:: downgrading

.. include:: includes/downgrade/single-version-support.rst

.. _5.0-download:

Download
--------

To download MongoDB 5.0, go to the `MongoDB Download Center
<https://www.mongodb.com/try/download?tck=docs_server>`_.

.. seealso::

   - `All Third Party License Notices <https://github.com/mongodb/mongo/blob/v4.4/distsrc/THIRD-PARTY-NOTICES>`_.

.. _5.0-known-issues:
.. _5.0-known-issue-granularity:
.. _5.0-known-issue-backup-resharding:

Known Issues
------------

.. list-table::
   :header-rows: 1
   :widths: 15 70 20
   
   * - In Version
     - Issues
     - Status

   * - 5.0.0

     - :issue:`SERVER-58171`: A Time Series collection's ``granularity``
       parameter cannot be modified after the collection is created.

     - Fixed in 5.0.1

   * - 5.0.0

     - :issue:`SERVER-58392`: An ongoing resharding operation may
       prevent a backup or restore operation from succeeding.

     - Fixed in 5.0.3

Report an Issue
---------------

.. include:: /includes/report-an-issue.rst

.. toctree::
   :titlesonly:
   :hidden:

   Compatibility Changes </release-notes/5.0-compatibility>
   Upgrade 4.4 to 5.0 </release-notes/5.0-upgrade>
   Downgrade 5.0 to 4.4 </release-notes/5.0-downgrade>
   Changelog </release-notes/5.0-changelog>
