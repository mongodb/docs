====================================
Perform Quorum Reads on Replica Sets
====================================

.. default-domain:: mongodb

.. versionadded:: 3.2

Overview
--------

When reading from the primary of a replica set, it is possible to read
data that is stale or not durable, depending on the read concern used
[#edge-cases-2-primaries]_. With a read concern level of
:readconcern:`"local"`, a client can read data before it is
:term:`durable`; that is, before they have propagated to enough replica
set members to avoid a rollback. A read concern level of
:readconcern:`"majority"` guarantees durable reads but may return stale
data that has been overwritten by another write operation.

This tutorial outlines a procedure that uses
:method:`db.collection.findAndModify()` to read data that is not stale
and cannot be rolled back. To do so, the procedure uses the
:method:`~db.collection.findAndModify()` method with a :ref:`write
concern <write-concern>` to modify a dummy field in a document.
Specifically, the procedure requires that:

- :method:`db.collection.findAndModify()` use an **exact** match query,
  and a :doc:`unique index </core/index-unique>` **must exist** to
  satisfy the query.

- :method:`~db.collection.findAndModify()` must actually modify a
  document; i.e. result in a change to the document.

- :method:`~db.collection.findAndModify()` must use the write concern
  :writeconcern:`{ w: "majority" } <"majority">`.

.. important::

   The "quorum read" procedure has a substantial cost over simply using
   a read concern of :readconcern:`"majority"` because it incurs write
   latency rather than read latency. This technique should only be used
   if staleness is absolutely intolerable.

Prerequisites
-------------

This tutorial reads from a collection named ``products``. Initialize
the collection using the following operation.

.. code-block:: javascript

   db.products.insert( [
      {
        _id: 1,
        sku: "xyz123",
        description: "hats",
        available: [ { quantity: 25, size: "S" }, { quantity: 50, size: "M" } ],
        _dummy_field: 0
      },
      {
        _id: 2,
        sku: "abc123",
        description: "socks",
        available: [ { quantity: 10, size: "L" } ],
        _dummy_field: 0
      },
      {
        _id: 3,
        sku: "ijk123",
        description: "t-shirts",
        available: [ { quantity: 30, size: "M" }, { quantity: 5, size: "L" } ],
        _dummy_field: 0
      }
   ] )

The documents in this collection contain a dummy field named
``_dummy_field`` that will be incremented by the
:method:`db.collection.findAndModify()` in the tutorial. If the field
does not exist, the :method:`db.collection.findAndModify()` operation
will add the field to the document. The purpose of the field is to
ensure that the :method:`db.collection.findAndModify()` results in a
modification to the document.

Procedure
---------

.. include:: /includes/steps/findAndModify-quorum-reads.rst

.. [#edge-cases-2-primaries]

   .. include:: /includes/footnote-two-primaries-edge-cases.rst
