=================
setFreeMonitoring
=================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. dbcommand:: setFreeMonitoring

   .. versionadded:: 4.0

      Available for MongoDB Community Edition.

   Enables or disables :doc:`free Cloud monitoring
   </administration/free-monitoring>` for standalones and replica sets.

   The command is run against the ``admin`` database and has the form:

   .. code-block:: javascript

      db.adminCommand( { setFreeMonitoring: 1, action: "<enable|disable>" } )

   .. important::

      To run :dbcommand:`setFreeMonitoring`, you must have specified
      :option:`--enableFreeMonitoring <mongod --enableFreeMonitoring>`
      command-line option or :setting:`cloud.monitoring.free.state`
      configuration file set to ``runtime``.

      Otherwise, you can only enable or disable at startup. See
      :option:`--enableFreeMonitoring <mongod --enableFreeMonitoring>`
      command-line option or :setting:`cloud.monitoring.free.state` for
      details.

   Once enabled, the free monitoring state remains enabled until
   explicitly disabled. That is, you do not need to re-enable each time
   you start the server.

   The :binary:`~bin.mongo` shell provides the following helper methods
   for :dbcommand:`setFreeMonitoring`:

   - :method:`db.enableFreeMonitoring()`

   - :method:`db.disableFreeMonitoring()`
   
   You can use :method:`db.getFreeMonitoringStatus()` to check your
   free monitoring status.

Access Control
--------------

When running with access control, the user must have the
:authaction:`setFreeMonitoring` privilege actions on the :ref:`cluster
<resource-document>`. That is, a user must have a :ref:`role <roles>`
that grants the following :ref:`privilege <privileges>`:

.. code-block:: javascript

   { resource: { cluster : true }, actions: [ "setFreeMonitoring" ] }

The built-in role :authrole:`clusterMonitor` role provides this
privilege.

