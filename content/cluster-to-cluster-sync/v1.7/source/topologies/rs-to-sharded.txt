.. _c2c-rs-to-sharded:

=======================================
Sync a Replica Set to a Sharded Cluster
=======================================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: twocols

This page outlines the procedure to synchronize data from a replica set to a 
sharded cluster using :program:`mongosync`. 

.. note::

   ``mongosync`` doesn't support syncing from a sharded cluster to a replica 
   set.


Before You Begin
----------------

- :ref:`Define <c2c-quickstart-define-clusters>` your source replica set and 
  destination sharded cluster.

- :ref:`Define <c2c-quickstart-define-users>` an administrative user that has 
  permissions in both clusters.

- :ref:`Download and install <c2c-quickstart-download>` ``mongosync``.

To learn more, see the :ref:`mongosync setup <c2c-quickstart-setup>` 
instructions.

Steps 
-----

.. procedure::
   :style: normal

   .. step:: Connect the replica set and sharded cluster

      ``mongosync`` must create an initial connection between the source 
      replica set and the destination sharded cluster before you can start to 
      sync data. 

      To connect ``cluster0`` to ``cluster1`` with ``mongosync``, enter the
      following command:

      .. include:: /includes/example-connection-string-general.rst

      Follow the :ref:`connection instructions <c2c-conn-top-level>` 
      for your cluster architecture to format your connection strings and 
      connect to the :binary:`mongos` instance in your cluster. 

   .. step:: Start synchronization

       Call the :ref:`start <c2c-api-start>` endpoint to initiate data 
       synchronization. 
       
       To sync from a replica set to a sharded cluster, set the 
       ``sharding`` option for the ``start`` command to shard collections on 
       the destination cluster. For more information, see 
       :ref:`Sharding Parameters <c2c-api-start-sharding>`.

       Use the ``sharding.shardingEntries`` parameter to specify the collections 
       to shard. Collections that you do not list in this array replicate as 
       unsharded. For more information, see 
       :ref:`Shard Replica Sets <c2c-shard-replica-sets>` and 
       :ref:`sharding-shard-key-selection`.

       The following example starts a sync from a replica set to a sharded
       cluster: 

       Request
       ~~~~~~~

       .. literalinclude:: /includes/api/requests/start-rs-shard.sh

       Response
       ~~~~~~~~

       .. literalinclude:: /includes/api/responses/success.json
          :language: json
          :copyable: false

Next Steps
----------

You can finalize a migration and transfer your application workload from the 
source to the destination cluster using the ``mongosync`` cutover process.

Limitations
-----------

- You cannot use the :ref:`reverse <c2c-api-reverse>` endpoint between a 
  replica set and a sharded cluster. 

.. include:: /includes/limitations-rs-to-sharded.rst

- If the source replica set has :ref:`arbiters <c2c-faq-arbiters>`, the source 
  replica set must have more than 2 non-arbiter nodes and you must sync from a 
  non-arbiter node. 

For more details, see :ref:`c2c-limitations`.

Learn More
----------

- :ref:`c2c-quickstart`
- :ref:`Sync Sharded Clusters <c2c-sharded-clusters>`
- :ref:`About mongosync <about-mongosync>`
- :ref:`mongosync <c2c-mongosync>`
- :ref:`mongosync States <c2c-states>`

