.. _scala-bson:

===================
BSON Implementation
===================

.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: documents, storage, codec

.. toctree::

   Documents </bson/documents/>
   Case Class Codecs </bson/macros/>
   Extended JSON </bson/extended-json/>

The BSON library comprehensively supports `BSON
<https://bsonspec.org/>`__, the data storage and network transfer format
that MongoDB uses for documents. BSON, short 
for Binary `JSON <https://www.json.org/json-en.html>`__, is a
binary-encoded serialization of JSON-like documents.

For everyday usage there are type aliases and companion objects
available from the ``org.mongodb.scala.bson`` package. To learn more,
see the `API documentation
<{+api+}/org/mongodb/scala/bson/index.html>`__ for the Scala BSON
implementation.

The following sections describe aspects of the driver's BSON
implementation:

- :ref:`scala-documents`: describes the driver’s support for BSON document
  representations
- :ref:`scala-macros`: describes the case classes you can use to
  represent documents in a collection
- :ref:`scala-ejson`: describes the driver’s support for MongoDB Extended
  JSON

For advanced usage you might need to use ``org.bson`` directly. See the
Java Sync driver documentation to learn about the following topics:

- :driver:`Readers and Writers </java/sync/current/fundamentals/data-formats/codecs/#codec>`: describes
  the driver’s support for stream-based reading and writing of BSON documents
- :driver:`Codec and CodecRegistry </java/sync/current/fundamentals/data-formats/codecs/>`: describes
  the driver’s Codec API, an abstraction for producing and consuming BSON document representations
  using the stream-based readers and writers
