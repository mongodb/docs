==========================
Configuration File Options
==========================

Synopsis
--------

The behavior and setting of a :option:`mongod` or :option:`mongos`
instance is controlled either directly from :doc:`mongod's command
line arguments </reference/mongod>` or using a configuration
file. (See :doc:`mongos' command line arguments </reference/mongos>`.)
While both methods are functionally equivalent and all settings are
similar, The configuration file method is preferable, and if you
installed from a package and starting MongoDB using your system's
:term:`control script`, you're already using a configuration file.

To start :option:`mongod` or :option:`mongos` using a config file, use
one of the following forms: ::

     mongod --config /etc/mongodb.conf
     mongod -f /etc/mongodb.conf
     mongos --config /srv/mongodb/mongos.conf
     mongos -f /srv/mongodb/mongos.conf

Declare All settings in this file using the following form: ::

     <setting> = <value>

.. versionadded:: 2.0
   *Before* version 2.0, boolean (i.e. "``true|false``") or "flag"
   parameters, register as true, if they appear in the configuration
   file, regardless of their value.

Settings
--------

.. program:: conf

.. option:: verbose, v, vv, vvv, vvvv, vvvvv

   *Default:* false

   Increases the amount of internal reporting returned on standard
   output or in the log file generated by :mongodb:setting:`logpath`.

.. option:: quiet

   *Default:* false

   Runs the :option:`mongod` instance in a quiet mode that attempts to limit
   the amount of output.

.. option:: port

   *Default:* 27017

   Specifies a TCP port for the :option:`mongod` to listen for client
   connections. On UNIX-like systems root access is required for ports
   with numbers lower than 1000.

.. option:: bind_ip

   *Default:* 127.0.0.1

   Set this option to configure the :option:`mongod` process to bind to and
   listen for connections from applications. You may attach :option:`mongod`
   to any interface; however, if you attach :option:`mongod` to a publicly
   accessible interface ensure that proper authentication or firewall
   restrictions have been implemented to protect the integrity of
   your database.

   You may set this value multiple times to bind :option:`mongod` to
   multiple IP addresses.

.. option:: maxCons

   *Default:* depends on system settings.

   Specifies a value to set the maximum number of simultaneous
   connections that :option:`mongod` will accept. This setting will have no
   effect if it is higher than your operating system's configured
   maximum connection tracking threshold.

TODO factcheck maxcons

.. option:: objcheck

   *Default:* false

   Set to ``true`` to force :option:`mongod` to validate all requests from
   clients upon receipt.

.. option:: logpath

   *Default:* None. (i.e. ``/dev/stdout``)

   Specify a path for the log file that will hold all diagnostic
   logging information.

   Unless specified, :option:`mongod` will output all log information to the
   standard output. Unless :mongodb:setting:`logapend` is set to
   ``true``, the logfile will be overwritten when the process
   restarts.

.. option:: logapend

   *Default:* false

   Set to ``true`` to ensure that new entries will be added to the end
   of the logfile rather than overwriting the content of the log when
   the process restarts.

.. option:: pidfilepath

   *Default:* None.

   Specify a file location to hold the ":term:`PID`" or process ID of the
   :option:`mongod` process. Useful for tracking the :option:`mongod` process in
   combination with the :mongodb:setting:`fork` setting.

   If this option is not set, no PID file is created.

.. option:: keyFile

   *Default:* None.

   Specify the path to a key file to store authentication
   information. This option is only useful for the connection between
   replica set members. See the ":doc:`/core/replication`" documentation
   for more information.

.. option:: nounixsocket

   *Default:* false

   Set to ``true`` to disable listening on the UNIX socket, which is
   enabled unless this option is set to ``true``.

.. option:: unixSocketPrefix

   *Default:* ``/tmp``

   Specifies a path for the UNIX socket. Unless specified the socket
   is created in the ``/tmp`` path.

.. option:: fork

   *Default:* false

   Set to ``true`` to enable a :term:`daemon` mode for :option:`mongod`
   which forces the process to the background.

.. option:: auth

   *Default:* false

   Set to ``true`` to enable database authentication for users
   connecting from remote hosts. Users are configured via the
   :doc:`mongo shell </reference/mongo>`. If no users exist, the
   localhost interface will continue to have access to the database
   until a user has been created.

.. option:: cpu

   *Default:* false

   Set to ``true`` to force :option:`mongod` to periodically report CPU
   utilization and the amount of time that the processor waits for I/O
   operations to complete (i.e. I/O wait.) This data is written to
   standard output or the logfile if using the :mongodb:setting:`logpath` option.

TODO add interval for cpu option

.. option:: dbpath

   *Default:* ``/data/db/``

   Set this value to designate a directory for the :option:`mongod` instance
   to store its data. Typically locations such as: "``/srv/mognodb``",
   "``/var/lib/mongodb``" or "``/opt/mongodb``" are used for this
   purpose.

   Unless specified, the ``/data/db`` directory will be used on
   Unix-like systems.

.. option:: diaglog

   *Default:* 0

   Set this value the diagnostic logging level for the :option:`mongod`
   instance. Possible values, and their impact are as follows.

   =========  ===================================
   **Value**  **Setting**
   ---------  -----------------------------------
      0       off. No logging.
      1       Log write operations.
      2       Log read operations.
      3       Log both read and write operations.
      7       Log write and some read operations.
   =========  ===================================

.. option:: directoryperdb

   *Default:* false

   Set to ``true`` to modify the storage pattern of the data directory
   so that each database is stored in a distinct folder.

   Unless specified, all databases will be included in the directory
   specified by :mongodb:setting:`dbpath`.

.. option:: journal

   *Default:* (on 64-bit systems) true

   *Default:* (on 32-bit systems) false

   Set to true to enable operation journaling to ensure write
   durability and data consistency.

   Set to false to prevent the overhead of journaling in situations
   where durability is not required.

.. option:: journalCommitInterval

   *Default:* 100

   This value is stored in milliseconds. This option accepts values
   between 2 and 300 milliseconds.

   Set this value to specify the maximum amount of time for
   :option:`mongod` to allow between journal operations. The default
   value is 100 milliseconds. Lower values increase the durability of
   the journal, at the possible expense of disk performance.

.. option:: ipv6

   *Default:* false

   Set to ``true`` to IPv6 support to allow clients to connect to
   :option:`mongod` using IPv6 networks. IPv6 support is disabled by
   default in :option:`mongod` and all utilities.

.. option:: jsonnp

   *Default:* false

   Set to ``true`` to permit :term:`JSONP` access via an HTTP
   interface. Consider the security implications of allowing this
   activity before setting this option.

.. option:: noauth

   *Default:* true

   Disable authentication. Currently the default. Exists for future
   compatibility and clarity.

   For consistency use the :mongodb:setting:`auth` option.

.. option:: nohttpinterface

   *Default:* false

   Set to ``true`` to disable the HTTP interface.

.. option:: nojournal

   *Default:* (on 64-bit systems) false

   *Default:* (on 32-bit systems) true

   Set "``nojournal = true``" to disable durability journaling, which
   is enabled by default in 64-bit versions after v2.0.

.. option:: noprealloc

   *Default:* false

   Set "``noprealloc = true``" to disable the preallocation of data
   files. This will shorten the start up time in some cases, but can
   cause significant performance penalties during normal operations.

.. option:: noscripting

   *Default:* false

   Set "``noscripting = true``" to disable the scripting engine.

.. option:: notablescan

   *Default:* false

   Set "``notablescan = true``" to forbid operations that require a
   table scan.

.. option:: nssize

   *Default:* 16

   This value is specified in megabytes.

   Specify a value to control the default size for all newly created
   namespace files (i.e ``.ns``). This option has no impact on the
   size of existing namespace files.

   The default value is 16 megabytes, this provides for effectively
   12,000 possible namespace. The maximum size is 2 gigabytes.

.. option:: profile

   *Default:* 0

   Modify this value to changes the level of database profiling, which
   inserts information about operation performance into output of
   :option:`mongod` or the log file. The following levels are available:

   =========  ==================================
   **Level**  **Setting**
   ---------  ----------------------------------
      0       Off. No profiling.
      1       On. Only includes slow operations.
      2       On. Includes all operations.
   =========  ==================================

   Profiling is disabled by default. Database profiling can impact
   database performance, because all database operations need to be
   logged to disk. Enable this option only after careful consideration.

.. option:: quota

   *Default:* false

   Set to ``true`` to enable a maximum limit for the number data files
   each database can have. The default quota is 8 data files, when
   ``quota`` is true. Adjust the quota size with the with the
   :mongodb:setting:`quotaFiles` setting.

.. option:: quotaFiles

   *Default:* 8

   Modify limit on the number of data files per database. This option
   requires the :mongodb:setting:`quota` setting.

.. option:: rest

   *Default:* false

   Set to ``true`` to enable a simple :term:`REST` interface.

.. option:: repair

   *Default:* false

   Set to ``true`` to run a repair routine on all databases following
   start up. You may wish to avoid enabling this setting for default
   operation may not be desirable. Consider using ":option:`mongod
   --repair`" for this functionality.

.. option:: repairpath

   *Default:* :mongodb:setting:`dbpath`

   Specify the path to the directory containing MongoDB data files, to
   use in conjunction with the :mongodb:setting:`repair` setting or
   :option:`mongod --repair` operation. Defaults to the value
   specified by :mongodb:setting:`dbpath`.

.. option:: slowms

   *Default:*

   Sets the threshold for a query to be defined as "slow" for the
   database profiling functionality accessible by way of the
   ":mongodb:setting:`profile`" setting. Values are specified in
   milliseconds.

TODO determine default value for slowms and range of acceptable values

.. option:: smallfiles

   *Default:* false

   Set to ``true`` to modify MongoDB to use a smaller default data
   file size.

TODO how big does small file specify

.. option:: syncdelay

   *Default:* 60

   This setting contrils the maximum number of seconds between disk
   syncs. While data is being written do disk all the time, this
   setting controls the maximum guaranteed length of time between a
   successful write operation and when that data will be flushed to
   disk.

   If set to "``0``", all operations will be flushed to disk, which
   may have a significant performance impact. If
   :mongodb:setting:`journal` is ``true``, all writes will be durable,
   by way of the journal within the time specified by
   :mongodb:setting:`journalCommitInterval`.

.. option:: sysinfo

   *Default:* false

   When set to ``true``, ``mognod`` returns diagnostic system
   information to the log (or standard output if
   :mongodb:setting:`logpath` is not set) and then exits.

   Typically, this setting will be used by way of :option:`mongod
   --sysinfo`.

.. option:: upgrade

   *Default:* false

   When set to ``true`` this option upgrades the on-disk data format
   of the files specified by the :mongodb:setting:`dbpath` to the latest
   version, if needed.

   This option only affects the operation of :option:`mongod` if the
   data files are in an old format.

   When specified for a :option:`mongos` instance, this option updates
   the meta data format used by the :term:`configdb`.

Replica Set Options
```````````````````

.. option:: fastsync

   *Default:* false

   In the context of :term:`replica set` replication, set this option
   to ``true`` if this replica has been seeded with a snapshot of the
   :term:`dbpath` of another member of the set. Otherwise the
   :option:`mongod` will attempt to perform a full sync.

.. option:: oplogSize

   Specifies a maximum size in megabytes for the replication operation
   log (e.g. :term:`oplog`.) By default this is determined in relation
   to the maximum amount of space available, typically 5%.

Master/Slave Replication
````````````````````````

.. option:: master

   *Default:* false

   Set to ``true`` to configure the current node to act as
   :term:`master` node in a replication configuration.

.. option:: slave

   *Default:* false

   Set to ``true`` to configure the current node to act as
   :term:`slave` node in a replication configuration.

.. option:: source

   *Default:* <>

   *Form:* <host>:<port>

   Used with the :mongodb:setting:`slave` setting to specify the
   :term:`master` node from which this :term:`slave` node will
   replicate

.. option:: only

   *Default:* false

   Used with the :mongodb:setting:`slave` option, the ``only`` setting
   specifies only a single :term:`database` to replicate.

.. option:: slavedelay

   *Default:* 0

   Used with the :mongodb:setting:`slave` setting, the ``slavedelay`` setting
   configures a "delay" in seconds, for this slave to wait to apply
   operations from the :term:`master` node.

.. option:: autoresync

   *Default:* false

   Used with the :mongodb:setting:`slave` setting, set ``autoresync`` to
   ``true`` to force the :term:`slave` to automatically resync if the
   local data becomes too stale. This setting may be problematic if
   the :option:`--oplogSize` :term:`oplog` is too small (controlled by
   the :option:`--oplogSize` option.) If the :term:`oplog` not large
   enough to store the difference in changes between the master's
   current state and the state of the slave, this node will forcibly
   resync itself unnecessarily.

TODO determine threshold for autoresync

Replica Set Options
```````````````````

.. option:: replSet

   *Default:* <none>

   *Form:* <setname>

   *Form:* <setname>/<seed-host1>,<host2>:<port>

   Use this setting to configure replication with replica
   sets. Specify a :term:`setname` as an argument to this set. All
   hosts must have the same set name. You can add one or more "seed"
   hosts to one or more host in the set to initiate the cluster. Use
   the following form: ::

        replSet = <setname>/<host1>,<host2>:<port>

   When you add or reconfigure the replica set on one host, these
   changes propagate throughout the cluster.

Sharding Cluster Options
````````````````````````

.. option:: configsvr

   *Default:* false

   Set this value to ``true`` to configure this :option:`mongod`
   instance to operate as the :term:`config database` of a shard
   cluster. The default port with this option is ``27019` and the data
   is stored in the ``/configdb`` sub-directory of the
   :mongodb:setting:`dbpath` directory.

.. option:: shardsvr

   *Default:* false

   Set this value to ``true`` to configure this :option:`mongod`
   instance as a node in a shard cluster. The default port for these
   nodes is ``27018``.

.. option:: noMoveParanoia

   *Default:* false

   Disables a "paranoid mode" for data writes for the
   :command:`moveChunk`.

.. option:: configdb

   *Default:* None.

   *Format:* <config1>,<config2><:port>,<config3>

   Set this option to specify a configuration database
   (i.e. :term:`configdb`) for the :term:`shard cluster`. You may
   specify either 1 configuration server or 3 configuration servers,
   in a comma separated list.

   This setting only affects :option:`mongos` processes.

.. option:: test

   *Default:* false

   Only runs unit tests and does not start a :option:`mongos` instance.

   This setting only affects :option:`mongos` processes and is for
   internal testing use only.

.. option:: chunkSize

   *Default:* 64

   The value of this option determines the size of each :term:`chunk`
   of data distributed around the :term:`shard cluster`. The default
   value is 64 megabytes, which is accepted as the ideal size for
   chunks for most deployments: larger chunk size can lead to uneven
   data distribution, smaller chunk size often leads to inefficient
   movement of chunks between nodes. However, in some circumstances
   it may be neccessary to set a different chunk size.

   This setting only affects :option:`mongos` processes.
