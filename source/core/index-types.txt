.. index:: index types
.. _index-types:

===========
Index Types
===========

.. default-domain:: mongodb

MongoDB provides a number of different index types. You can create
indexes on any field or embedded field within a document or
sub-document. You can create :doc:`single field indexes
</core/index-single>` or :doc:`compound indexes
</core/index-compound>`. MongoDB also supports indexes of arrays,
called :ref:`multi-key indexes <index-type-multi-key>`, as well as
:doc:`indexes on geospatial data </applications/geospatial-indexes>`.
For a list of the supported index types, see :ref:`index-type-list`.

In general, you should create indexes that support your common and
user-facing queries. Having these indexes will ensure that MongoDB
scans the smallest possible number of documents.

In the :program:`mongo` shell, you can create an index by calling the
:method:`ensureIndex() <db.collection.ensureIndex()>` method. For
more detailed instructions about building indexes, see the
:doc:`Indexing Tutorials </administration/indexes>` page.

Behavior of Indexes
-------------------

All indexes in MongoDB are :term:`B-tree` indexes, which can
efficiently support equality matches and range queries. The index
stores items internally in order sorted by the value of the index
field. The ordering of index entries supports efficient range-based
operations and allows MongoDB to return sorted results using the order
of documents in the index.

Ordering of Indexes
~~~~~~~~~~~~~~~~~~~

MongoDB indexes may be ascending, (i.e. ``1``) or descending
(i.e. ``-1``) in their ordering. Nevertheless, MongoDB may also
traverse the index in either directions. As a result, for
single-field indexes, ascending and descending indexes are
interchangeable. This is not the case for compound indexes: in
compound indexes, the direction of the sort order can have a
greater impact on the results.

See :ref:`index-ascending-and-descending` for more information on the
impact of index order on results in compound indexes.

Index Intersection
~~~~~~~~~~~~~~~~~~

MongoDB can use the intersection of indexes to fulfill queries with
compound conditions. See :doc:`/core/index-intersection` for details.

Limits
~~~~~~

Certain restrictions apply to indexes, such as the length of the index
keys or the number of indexes per collection. See :ref:`Index
Limitations <index-limitations>` for details.

.. _index-type-list:

Index Type Documentation
------------------------

.. include:: /includes/toc/dfn-list-indexes-concepts-types.rst

.. include:: /includes/toc/indexes-concepts-types.rst
