# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/db.collection.mapReduce.txt:3
msgid "db.collection.mapReduce()"
msgstr ""

#: ../source/reference/method/db.collection.mapReduce.txt:15
msgid "The :method:`db.collection.mapReduce()` method provides a wrapper around the :dbcommand:`mapReduce` command."
msgstr ""

#: ../source/includes/extracts/views-unsupported-mapReduce.rst:1
msgid ":doc:`Views </core/views>` do not support map-reduce operations."
msgstr ""

#: ../source/reference/method/db.collection.mapReduce.txt:22
msgid ":method:`db.collection.mapReduce()` has the following syntax:"
msgstr ""

#: ../source/reference/method/db.collection.mapReduce.txt:42
msgid ":method:`db.collection.mapReduce()` takes the following parameters:"
msgstr ""

#: ../source/includes/apiargs/command-db.collection.mapReduce-field.rst:7
msgid "Parameter"
msgstr ""

#: ../source/includes/apiargs/command-db.collection.mapReduce-field.rst:9
#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:9
msgid "Type"
msgstr ""

#: ../source/includes/apiargs/command-db.collection.mapReduce-field.rst:11
#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:11
msgid "Description"
msgstr ""

#: ../source/includes/apiargs/command-db.collection.mapReduce-field.rst:13
msgid "``map``"
msgstr ""

#: ../source/includes/apiargs/command-db.collection.mapReduce-field.rst:15
#: ../source/includes/apiargs/command-db.collection.mapReduce-field.rst:26
#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:59
msgid "function"
msgstr ""

#: ../source/includes/apiargs/command-db.collection.mapReduce-field.rst:17
#: ../source/includes/apiargs/command-db.collection.mapReduce-field.rst:61
msgid "A JavaScript function that associates or \"maps\" a ``value`` with a ``key`` and emits the ``key`` and value ``pair``."
msgstr ""

#: ../source/includes/apiargs/command-db.collection.mapReduce-field.rst:20
#: ../source/includes/apiargs/command-db.collection.mapReduce-field.rst:64
msgid "See :ref:`mapReduce-map-mtd` for more information."
msgstr ""

#: ../source/includes/apiargs/command-db.collection.mapReduce-field.rst:24
#: ../source/includes/parameters-map-reduce.rst:49
msgid "``reduce``"
msgstr ""

#: ../source/includes/apiargs/command-db.collection.mapReduce-field.rst:28
#: ../source/includes/apiargs/command-db.collection.mapReduce-field.rst:70
msgid "A JavaScript function that \"reduces\" to a single object all the ``values`` associated with a particular ``key``."
msgstr ""

#: ../source/includes/apiargs/command-db.collection.mapReduce-field.rst:31
#: ../source/includes/apiargs/command-db.collection.mapReduce-field.rst:73
msgid "See :ref:`mapReduce-reduce-mtd` for more information."
msgstr ""

#: ../source/includes/apiargs/command-db.collection.mapReduce-field.rst:35
msgid "``options``"
msgstr ""

#: ../source/includes/apiargs/command-db.collection.mapReduce-field.rst:37
#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:29
#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:39
#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:69
#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:125
msgid "document"
msgstr ""

#: ../source/includes/apiargs/command-db.collection.mapReduce-field.rst:39
#: ../source/includes/apiargs/command-db.collection.mapReduce-field.rst:79
msgid "A document that specifies additional parameters to :method:`db.collection.mapReduce()`."
msgstr ""

#: ../source/includes/apiargs/command-db.collection.mapReduce-field.rst:44
msgid "``bypassDocumentValidation``"
msgstr ""

#: ../source/includes/apiargs/command-db.collection.mapReduce-field.rst:46
#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:78
#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:113
msgid "boolean"
msgstr ""

#: ../source/includes/apiargs/command-db.collection.mapReduce-field.rst:48
#: ../source/includes/apiargs/command-db.collection.mapReduce-field.rst:86
msgid "Optional. Enables :dbcommand:`mapReduce` to bypass document validation during the operation. This lets you insert documents that do not meet the validation requirements."
msgstr ""

#: ../source/includes/apiargs/command-db.collection.mapReduce-field.rst:0
msgid "param function map"
msgstr ""

#: ../source/includes/apiargs/command-db.collection.mapReduce-field.rst:0
msgid "param function reduce"
msgstr ""

#: ../source/includes/apiargs/command-db.collection.mapReduce-field.rst:0
msgid "param document options"
msgstr ""

#: ../source/includes/apiargs/command-db.collection.mapReduce-field.rst:0
msgid "param boolean bypassDocumentValidation"
msgstr ""

#: ../source/reference/method/db.collection.mapReduce.txt:46
msgid "The following table describes additional arguments that :method:`db.collection.mapReduce()` can accept."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:7
msgid "Field"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:13
msgid "``out``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:15
msgid "string or document"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:17
#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:138
msgid "Specifies the location of the result of the map-reduce operation. You can output to a collection, output to a collection with an action, or output inline. You may output to a collection when performing map-reduce operations on the primary members of the set; on :term:`secondary` members you may only use the ``inline`` output."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:23
#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:144
msgid "See :ref:`mapReduce-out-mtd` for more information."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:27
msgid "``query``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:31
#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:150
msgid "Specifies the selection criteria using :doc:`query operators </reference/operator>` for determining the documents input to the ``map`` function."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:37
msgid "``sort``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:41
#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:158
msgid "Sorts the *input* documents. This option is useful for optimization. For example, specify the sort key to be the same as the emit key so that there are fewer reduce operations. The sort key must be in an existing index for this collection."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:48
msgid "``limit``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:50
msgid "number"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:52
#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:167
msgid "Specifies a maximum number of documents for the input into the ``map`` function."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:57
msgid "``finalize``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:61
#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:174
msgid "Optional. Follows the ``reduce`` method and modifies the output."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:63
#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:176
msgid "See :ref:`mapReduce-finalize-mtd` for more information."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:67
msgid "``scope``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:71
#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:182
msgid "Specifies global variables that are accessible in the ``map``, ``reduce`` and ``finalize`` functions."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:76
msgid "``jsMode``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:80
#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:189
msgid "Specifies whether to convert intermediate data into BSON format between the execution of the ``map`` and ``reduce`` functions."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:84
#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:119
#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:193
#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:226
msgid "Defaults to ``false``."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:86
#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:195
msgid "If ``false``:"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:88
#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:197
msgid "Internally, MongoDB converts the JavaScript objects emitted by the ``map`` function to BSON objects. These BSON objects are then converted back to JavaScript objects when calling the ``reduce`` function."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:94
#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:203
msgid "The map-reduce operation places the intermediate BSON objects in temporary, on-disk storage. This allows the map-reduce operation to execute over arbitrarily large data sets."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:98
#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:207
msgid "If ``true``:"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:100
#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:209
msgid "Internally, the JavaScript objects emitted during ``map`` function remain as JavaScript objects. There is no need to convert the objects for the ``reduce`` function, which can result in faster execution."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:105
#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:214
msgid "You can only use ``jsMode`` for result sets with fewer than 500,000 distinct ``key`` arguments to the mapper's ``emit()`` function."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:111
msgid "``verbose``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:115
#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:222
msgid "Specifies whether to include the ``timing`` information in the result information. Set ``verbose`` to ``true`` to include the ``timing`` information."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:123
msgid "``collation``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:127
#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:232
msgid "Optional."
msgstr ""

#: ../source/includes/extracts/collation-option.rst:1
#: ../source/includes/extracts/collation-option.rst:1
msgid "Specifies the :ref:`collation <collation>`  to use for the operation."
msgstr ""

#: ../source/includes/extracts/collation-description.rst:1
#: ../source/includes/extracts/collation-description.rst:1
msgid ":doc:`Collation </reference/collation>` allows users to specify language-specific rules for string comparison, such as rules for lettercase and accent marks."
msgstr ""

#: ../source/includes/extracts/collation-option-specification.rst:2
#: ../source/includes/extracts/collation-option-specification.rst:2
msgid "The collation option has the following syntax:"
msgstr ""

#: ../source/includes/extracts/collation-option-specification.rst:17
#: ../source/includes/extracts/collation-option-specification.rst:17
msgid "When specifying collation, the ``locale`` field is mandatory; all other collation fields are optional. For descriptions of the fields, see :ref:`collation-document-fields`."
msgstr ""

#: ../source/includes/extracts/collation-option.rst:7
#: ../source/includes/extracts/collation-option.rst:7
msgid "If the collation is unspecified but the collection has a default collation (see :method:`db.createCollection()`), the operation uses the collation specified for the collection."
msgstr ""

#: ../source/includes/extracts/collation-unspecified.rst:1
#: ../source/includes/extracts/collation-unspecified.rst:1
msgid "If no collation is specified for the collection or for the operations, MongoDB uses the simple binary comparison used in prior versions for string comparisons."
msgstr ""

#: ../source/includes/extracts/collation-single-per-operation.rst:2
#: ../source/includes/extracts/collation-single-per-operation.rst:2
msgid "You cannot specify multiple collations for an operation. For example, you cannot specify different collations per field, or if performing a find with a sort, you cannot use one collation for the find and another for the sort."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:0
msgid "field string or document out"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:0
msgid "field document query"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:0
msgid "field document sort"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:0
msgid "field number limit"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:0
msgid "field function finalize"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:0
msgid "field document scope"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:0
msgid "field boolean jsMode"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:0
msgid "field boolean verbose"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.mapReduce-args-field.rst:0
msgid "field document collation"
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:1
msgid ":dbcommand:`map-reduce operations <mapReduce>`, the :dbcommand:`group` command, and :query:`$where` operator expressions **cannot** access certain global functions or properties, such as ``db``, that are available in the :binary:`~bin.mongo` shell."
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:6
msgid "The following JavaScript functions and properties **are available** to :dbcommand:`map-reduce operations <mapReduce>`, the :dbcommand:`group` command, and :query:`$where` operator expressions:"
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:13
msgid "Available Properties"
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:14
msgid "Available Functions"
msgstr ""

#: ../../../internal padding after build/v3.6/source/includes/fact-group-map-reduce-where-limitations-in-24.rst:0
msgid "``args``"
msgstr ""

#: ../../../internal padding after build/v3.6/source/includes/fact-group-map-reduce-where-limitations-in-24.rst:0
msgid "``MaxKey``"
msgstr ""

#: ../../../internal padding after build/v3.6/source/includes/fact-group-map-reduce-where-limitations-in-24.rst:0
msgid "``MinKey``"
msgstr ""

#: ../../../internal padding after build/v3.6/source/includes/fact-group-map-reduce-where-limitations-in-24.rst:0
msgid "``assert()``"
msgstr ""

#: ../../../internal padding after build/v3.6/source/includes/fact-group-map-reduce-where-limitations-in-24.rst:0
msgid "``BinData()``"
msgstr ""

#: ../../../internal padding after build/v3.6/source/includes/fact-group-map-reduce-where-limitations-in-24.rst:0
msgid "``DBPointer()``"
msgstr ""

#: ../../../internal padding after build/v3.6/source/includes/fact-group-map-reduce-where-limitations-in-24.rst:0
msgid "``DBRef()``"
msgstr ""

#: ../../../internal padding after build/v3.6/source/includes/fact-group-map-reduce-where-limitations-in-24.rst:0
msgid "``doassert()``"
msgstr ""

#: ../../../internal padding after build/v3.6/source/includes/fact-group-map-reduce-where-limitations-in-24.rst:0
msgid "``emit()``"
msgstr ""

#: ../../../internal padding after build/v3.6/source/includes/fact-group-map-reduce-where-limitations-in-24.rst:0
msgid "``gc()``"
msgstr ""

#: ../../../internal padding after build/v3.6/source/includes/fact-group-map-reduce-where-limitations-in-24.rst:0
msgid "``HexData()``"
msgstr ""

#: ../../../internal padding after build/v3.6/source/includes/fact-group-map-reduce-where-limitations-in-24.rst:0
msgid "``hex_md5()``"
msgstr ""

#: ../../../internal padding after build/v3.6/source/includes/fact-group-map-reduce-where-limitations-in-24.rst:0
msgid "``isNumber()``"
msgstr ""

#: ../../../internal padding after build/v3.6/source/includes/fact-group-map-reduce-where-limitations-in-24.rst:0
msgid "``isObject()``"
msgstr ""

#: ../../../internal padding after build/v3.6/source/includes/fact-group-map-reduce-where-limitations-in-24.rst:0
msgid "``ISODate()``"
msgstr ""

#: ../../../internal padding after build/v3.6/source/includes/fact-group-map-reduce-where-limitations-in-24.rst:0
msgid "``isString()``"
msgstr ""

#: ../../../internal padding after build/v3.6/source/includes/fact-group-map-reduce-where-limitations-in-24.rst:0
msgid "``Map()``"
msgstr ""

#: ../../../internal padding after build/v3.6/source/includes/fact-group-map-reduce-where-limitations-in-24.rst:0
msgid "``MD5()``"
msgstr ""

#: ../../../internal padding after build/v3.6/source/includes/fact-group-map-reduce-where-limitations-in-24.rst:0
msgid "``NumberInt()``"
msgstr ""

#: ../../../internal padding after build/v3.6/source/includes/fact-group-map-reduce-where-limitations-in-24.rst:0
msgid "``NumberLong()``"
msgstr ""

#: ../../../internal padding after build/v3.6/source/includes/fact-group-map-reduce-where-limitations-in-24.rst:0
msgid "``ObjectId()``"
msgstr ""

#: ../../../internal padding after build/v3.6/source/includes/fact-group-map-reduce-where-limitations-in-24.rst:0
msgid "``print()``"
msgstr ""

#: ../../../internal padding after build/v3.6/source/includes/fact-group-map-reduce-where-limitations-in-24.rst:0
msgid "``printjson()``"
msgstr ""

#: ../../../internal padding after build/v3.6/source/includes/fact-group-map-reduce-where-limitations-in-24.rst:0
msgid "``printjsononeline()``"
msgstr ""

#: ../../../internal padding after build/v3.6/source/includes/fact-group-map-reduce-where-limitations-in-24.rst:0
msgid "``sleep()``"
msgstr ""

#: ../../../internal padding after build/v3.6/source/includes/fact-group-map-reduce-where-limitations-in-24.rst:0
msgid "``Timestamp()``"
msgstr ""

#: ../../../internal padding after build/v3.6/source/includes/fact-group-map-reduce-where-limitations-in-24.rst:0
msgid "``tojson()``"
msgstr ""

#: ../../../internal padding after build/v3.6/source/includes/fact-group-map-reduce-where-limitations-in-24.rst:0
msgid "``tojsononeline()``"
msgstr ""

#: ../../../internal padding after build/v3.6/source/includes/fact-group-map-reduce-where-limitations-in-24.rst:0
msgid "``tojsonObject()``"
msgstr ""

#: ../../../internal padding after build/v3.6/source/includes/fact-group-map-reduce-where-limitations-in-24.rst:0
msgid "``UUID()``"
msgstr ""

#: ../../../internal padding after build/v3.6/source/includes/fact-group-map-reduce-where-limitations-in-24.rst:0
msgid "``version()``"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:4
msgid "Requirements for the ``map`` Function"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:6
msgid "The ``map`` function is responsible for transforming each input document into zero or more documents. It can access the variables defined in the ``scope`` parameter, and has the following prototype:"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:17
msgid "The ``map`` function has the following requirements:"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:19
msgid "In the ``map`` function, reference the current document as ``this`` within the function."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:22
msgid "The ``map`` function should *not* access the database for any reason."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:24
msgid "The ``map`` function should be pure, or have *no* impact outside of the function (i.e. side effects.)"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:27
msgid "A single emit can only hold half of MongoDB's :ref:`maximum BSON document size <limit-bson-document-size>`."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:30
msgid "The ``map`` function may optionally call ``emit(key,value)`` any number of times to create an output document associating ``key`` with ``value``."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:33
msgid "The following ``map`` function will call ``emit(key,value)`` either 0 or 1 times depending on the value of the input document's ``status`` field:"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:44
msgid "The following ``map`` function may call ``emit(key,value)`` multiple times depending on the number of elements in the input document's ``items`` field:"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:4
msgid "Requirements for the ``reduce`` Function"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:6
msgid "The ``reduce`` function has the following prototype:"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:15
msgid "The ``reduce`` function exhibits the following behaviors:"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:17
msgid "The ``reduce`` function should *not* access the database, even to perform read operations."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:20
msgid "The ``reduce`` function should *not* affect the outside system."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:23
msgid "MongoDB will **not** call the ``reduce`` function for a key that has only a single value. The ``values`` argument is an array whose elements are the ``value`` objects that are \"mapped\" to the ``key``."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:28
msgid "MongoDB can invoke the ``reduce`` function more than once for the same key. In this case, the previous output from the ``reduce`` function for that key will become one of the input values to the next ``reduce`` function invocation for that key."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:33
msgid "The ``reduce`` function can access the variables defined in the ``scope`` parameter."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:36
msgid "The inputs to ``reduce`` must not be larger than half of MongoDB's :ref:`maximum BSON document size <limit-bson-document-size>`. This requirement may be violated when large documents are returned and then joined together in subsequent ``reduce`` steps."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:41
msgid "Because it is possible to invoke the ``reduce`` function more than once for the same key, the following properties need to be true:"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:45
msgid "the *type* of the return object must be **identical** to the type of the ``value`` emitted by the ``map`` function."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:49
msgid "the ``reduce`` function must be *associative*. The following statement must be true:"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:56
msgid "the ``reduce`` function must be *idempotent*. Ensure that the following statement is true:"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:63
msgid "the ``reduce`` function should be *commutative*: that is, the order of the elements in the ``valuesArray`` should not affect the output of the ``reduce`` function, so that the following statement is true:"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:4
msgid "``out`` Options"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:6
msgid "You can specify the following options for the ``out`` parameter:"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:9
msgid "Output to a Collection"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:11
msgid "This option outputs to a new collection, and is not available on secondary members of replica sets."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:19
msgid "Output to a Collection with an Action"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:21
msgid "This option is only available when passing a collection that already exists to ``out``. It is not available on secondary members of replica sets."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:32
msgid "When you output to a collection with an action, the ``out`` has the following parameters:"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:35
msgid "``<action>``: Specify one of the following actions:"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:37
msgid "``replace``"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:39
msgid "Replace the contents of the ``<collectionName>`` if the collection with the ``<collectionName>`` exists."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:42
msgid "``merge``"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:44
msgid "Merge the new result with the existing result if the output collection already exists. If an existing document has the same key as the new result, *overwrite* that existing document."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:51
msgid "Merge the new result with the existing result if the output collection already exists. If an existing document has the same key as the new result, apply the ``reduce`` function to both the new and the existing documents and overwrite the existing document with the result."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:57
msgid "``db``:"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:59
msgid "Optional. The name of the database that you want the map-reduce operation to write its output. By default this will be the same database as the input collection."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:63
msgid "``sharded``:"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:65
msgid "Optional. If ``true`` *and* you have enabled sharding on output database, the map-reduce operation will shard the output collection using the ``_id`` field as the shard key."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:69
msgid "If ``true`` and ``collectionName`` is an existing unsharded collection, map-reduce fails."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:72
msgid "``nonAtomic``:"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:74
msgid "Optional. Specify output operation as non-atomic. This applies **only** to the ``merge`` and ``reduce`` output modes, which may take minutes to execute."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:78
msgid "By default ``nonAtomic`` is ``false``, and the map-reduce operation locks the database during post-processing."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:81
msgid "If ``nonAtomic`` is ``true``, the post-processing step prevents MongoDB from locking the database: during this time, other clients will be able to read intermediate states of the output collection."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:86
msgid "Output Inline"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:88
msgid "Perform the map-reduce operation in memory and return the result. This option is the only available option for ``out`` on secondary members of replica sets."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:96
msgid "The result must fit within the :ref:`maximum size of a BSON document <limit-bson-document-size>`."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:4
msgid "Requirements for the ``finalize`` Function"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:6
msgid "The ``finalize`` function has the following prototype:"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:15
msgid "The ``finalize`` function receives as its arguments a ``key`` value and the ``reducedValue`` from the ``reduce`` function. Be aware that:"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:19
msgid "The ``finalize`` function should *not* access the database for any reason."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:22
msgid "The ``finalize`` function should be pure, or have *no* impact outside of the function (i.e. side effects.)"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:25
msgid "The ``finalize`` function can access the variables defined in the ``scope`` parameter."
msgstr ""

#: ../source/includes/examples-map-reduce.rst:2
msgid "Map-Reduce Examples"
msgstr ""

#: ../source/includes/examples-map-reduce.rst:7
msgid "Consider the following map-reduce operations on a collection ``orders`` that contains documents of the following prototype:"
msgstr ""

#: ../source/includes/examples-map-reduce.rst:25
msgid "Return the Total Price Per Customer"
msgstr ""

#: ../source/includes/examples-map-reduce.rst:29
msgid "Perform the map-reduce operation on the ``orders`` collection to group by the ``cust_id``, and calculate the sum of the ``price`` for each ``cust_id``:"
msgstr ""

#: ../source/includes/examples-map-reduce.rst:35
#: ../source/includes/examples-map-reduce.rst:97
msgid "Define the map function to process each input document:"
msgstr ""

#: ../source/includes/examples-map-reduce.rst:37
#: ../source/includes/examples-map-reduce.rst:99
msgid "In the function, ``this`` refers to the document that the map-reduce operation is processing."
msgstr ""

#: ../source/includes/examples-map-reduce.rst:40
msgid "The function maps the ``price`` to the ``cust_id`` for each document and emits the ``cust_id`` and ``price`` pair."
msgstr ""

#: ../source/includes/examples-map-reduce.rst:51
msgid "Define the corresponding reduce function with two arguments ``keyCustId`` and ``valuesPrices``:"
msgstr ""

#: ../source/includes/examples-map-reduce.rst:54
msgid "The ``valuesPrices`` is an array whose elements are the ``price`` values emitted by the map function and grouped by ``keyCustId``."
msgstr ""

#: ../source/includes/examples-map-reduce.rst:57
msgid "The function reduces the ``valuesPrice`` array to the sum of its elements."
msgstr ""

#: ../source/includes/examples-map-reduce.rst:66
msgid "Perform the map-reduce on all documents in the ``orders`` collection using the ``mapFunction1`` map function and the ``reduceFunction1`` reduce function."
msgstr ""

#: ../source/includes/examples-map-reduce.rst:78
msgid "This operation outputs the results to a collection named ``map_reduce_example``. If the ``map_reduce_example`` collection already exists, the operation will replace the contents with the results of this map-reduce operation:"
msgstr ""

#: ../source/includes/examples-map-reduce.rst:86
msgid "Calculate Order and Total Quantity with Average Quantity Per Item"
msgstr ""

#: ../source/includes/examples-map-reduce.rst:90
msgid "In this example, you will perform a map-reduce operation on the ``orders`` collection for all documents that have an ``ord_date`` value greater than ``01/01/2012``. The operation groups by the ``item.sku`` field, and calculates the number of orders and the total quantity ordered for each ``sku``. The operation concludes by calculating the average quantity per order for each ``sku`` value:"
msgstr ""

#: ../source/includes/examples-map-reduce.rst:102
msgid "For each item, the function associates the ``sku`` with a new object ``value`` that contains the ``count`` of ``1`` and the item ``qty`` for the order and emits the ``sku`` and ``value`` pair."
msgstr ""

#: ../source/includes/examples-map-reduce.rst:119
msgid "Define the corresponding reduce function with two arguments ``keySKU`` and ``countObjVals``:"
msgstr ""

#: ../source/includes/examples-map-reduce.rst:122
msgid "``countObjVals`` is an array whose elements are the objects mapped to the grouped ``keySKU`` values passed by map function to the reducer function."
msgstr ""

#: ../source/includes/examples-map-reduce.rst:126
msgid "The function reduces the ``countObjVals`` array to a single object ``reducedValue`` that contains the ``count`` and the ``qty`` fields."
msgstr ""

#: ../source/includes/examples-map-reduce.rst:130
msgid "In ``reducedVal``, the ``count`` field contains the sum of the ``count`` fields from the individual array elements, and the ``qty`` field contains the sum of the ``qty`` fields from the individual array elements."
msgstr ""

#: ../source/includes/examples-map-reduce.rst:148
msgid "Define a finalize function with two arguments ``key`` and ``reducedVal``. The function modifies the ``reducedVal`` object to add a computed field named ``avg`` and returns the modified object:"
msgstr ""

#: ../source/includes/examples-map-reduce.rst:163
msgid "Perform the map-reduce operation on the ``orders`` collection using the ``mapFunction2``, ``reduceFunction2``, and ``finalizeFunction2`` functions."
msgstr ""

#: ../source/includes/examples-map-reduce.rst:180
msgid "This operation uses the ``query`` field to select only those documents with ``ord_date`` greater than ``new Date(01/01/2012)``. Then it output the results to a collection ``map_reduce_example``. If the ``map_reduce_example`` collection already exists, the operation will merge the existing contents with the results of this map-reduce operation."
msgstr ""

#: ../source/reference/method/db.collection.mapReduce.txt:82
msgid "Output"
msgstr ""

#: ../source/reference/method/db.collection.mapReduce.txt:84
msgid "The output of the :method:`db.collection.mapReduce()` method is identical to that of the :dbcommand:`mapReduce` command. See the :ref:`Output <mapReduce-output>` section of the :dbcommand:`mapReduce` command for information on the :method:`db.collection.mapReduce()` output."
msgstr ""

#: ../source/reference/method/db.collection.mapReduce.txt:91
msgid "Additional Information"
msgstr ""

#: ../source/reference/method/db.collection.mapReduce.txt:93
msgid ":doc:`/tutorial/troubleshoot-map-function`"
msgstr ""

#: ../source/reference/method/db.collection.mapReduce.txt:95
msgid ":doc:`/tutorial/troubleshoot-reduce-function`"
msgstr ""

#: ../source/reference/method/db.collection.mapReduce.txt:97
msgid ":dbcommand:`mapReduce` command"
msgstr ""

#: ../source/reference/method/db.collection.mapReduce.txt:99
msgid ":doc:`/aggregation`"
msgstr ""

#: ../source/reference/method/db.collection.mapReduce.txt:101
msgid ":doc:`Map-Reduce </core/map-reduce>`"
msgstr ""

#: ../source/reference/method/db.collection.mapReduce.txt:103
msgid ":doc:`/tutorial/perform-incremental-map-reduce`"
msgstr ""

