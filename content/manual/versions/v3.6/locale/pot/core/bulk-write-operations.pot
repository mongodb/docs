# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/bulk-write-operations.txt:3
msgid "Bulk Write Operations"
msgstr ""

#: ../source/core/bulk-write-operations.txt:14
msgid "Overview"
msgstr ""

#: ../source/core/bulk-write-operations.txt:16
msgid "MongoDB provides clients the ability to perform write operations in bulk. Bulk write operations affect a *single* collection. MongoDB allows applications to determine the acceptable level of acknowledgement required for bulk write operations."
msgstr ""

#: ../source/core/bulk-write-operations.txt:23
msgid "The :method:`db.collection.bulkWrite()` method provides the ability to perform bulk insert, update, and remove operations. MongoDB also supports bulk insert through the :method:`db.collection.insertMany()`."
msgstr ""

#: ../source/core/bulk-write-operations.txt:29
msgid "Ordered vs Unordered Operations"
msgstr ""

#: ../source/core/bulk-write-operations.txt:31
msgid "Bulk write operations can be either *ordered* or *unordered*."
msgstr ""

#: ../source/core/bulk-write-operations.txt:33
msgid "With an ordered list of operations, MongoDB executes the operations serially. If an error occurs during the processing of one of the write operations, MongoDB will return without processing any remaining write operations in the list. See :ref:`ordered Bulk Write<bulkwrite-example-bulk-write-operation>`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:39
msgid "With an unordered list of operations, MongoDB can execute the operations in parallel, but this behavior is not guaranteed. If an error occurs during the processing of one of the write operations, MongoDB will continue to process remaining write operations in the list. See :ref:`bulkwrite-example-unordered-bulk-write`."
msgstr ""

#: ../source/core/bulk-write-operations.txt:46
msgid "Executing an ordered list of operations on a sharded collection will generally be slower than executing an unordered list since with an ordered list, each operation must wait for the previous operation to finish."
msgstr ""

#: ../source/core/bulk-write-operations.txt:51
msgid "By default, :method:`~db.collection.bulkWrite()` performs ``ordered`` operations. To specify ``unordered`` write operations, set ``ordered : false`` in the options document."
msgstr ""

#: ../source/core/bulk-write-operations.txt:55
msgid "See :ref:`bulkwrite-write-operations-executionofoperations`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:58
msgid "bulkWrite() Methods"
msgstr ""

#: ../source/core/bulk-write-operations.txt:60
msgid ":method:`~db.collection.bulkWrite()` supports the following write operations:"
msgstr ""

#: ../source/core/bulk-write-operations.txt:62
msgid ":ref:`bulkwrite-write-operations-insertOne`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:63
msgid ":ref:`updateOne <bulkwrite-write-operations-updateOneMany>`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:64
msgid ":ref:`updateMany <bulkwrite-write-operations-updateOneMany>`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:65
msgid ":ref:`bulkwrite-write-operations-replaceOne`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:66
msgid ":ref:`deleteOne <bulkwrite-write-operations-deleteOneMany>`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:67
msgid ":ref:`deleteMany <bulkwrite-write-operations-deleteOneMany>`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:69
msgid "Each write operation is passed to :method:`~db.collection.bulkWrite()` as a document in an array."
msgstr ""

#: ../source/core/bulk-write-operations.txt:72
msgid "For example, the following performs multiple write operations:"
msgstr ""

#: ../source/core/bulk-write-operations.txt:74
msgid "The ``characters`` collection contains the following documents:"
msgstr ""

#: ../source/core/bulk-write-operations.txt:82
msgid "The following :method:`~db.collection.bulkWrite()` performs multiple operations on the collection:"
msgstr ""

#: ../source/core/bulk-write-operations.txt:128
msgid "The operation returns the following:"
msgstr ""

#: ../source/core/bulk-write-operations.txt:147
msgid "For more examples, see :ref:`bulkWrite() Examples <bulkwrite-example-bulk-write-operation>`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:151
msgid "Strategies for Bulk Inserts to a Sharded Collection"
msgstr ""

#: ../source/core/bulk-write-operations.txt:153
msgid "Large bulk insert operations, including initial data inserts or routine data import, can affect :term:`sharded cluster` performance. For bulk inserts, consider the following strategies:"
msgstr ""

#: ../source/core/bulk-write-operations.txt:158
msgid "Pre-Split the Collection"
msgstr ""

#: ../source/core/bulk-write-operations.txt:160
msgid "If the sharded collection is empty, then the collection has only one initial :term:`chunk`, which resides on a single shard. MongoDB must then take time to receive data, create splits, and distribute the split chunks to the available shards. To avoid this performance cost, you can pre-split the collection, as described in :doc:`/tutorial/split-chunks-in-sharded-cluster`."
msgstr ""

#: ../source/core/bulk-write-operations.txt:168
msgid "Unordered Writes to ``mongos``"
msgstr ""

#: ../source/core/bulk-write-operations.txt:170
msgid "To improve write performance to sharded clusters, use :method:`~db.collection.bulkWrite()` with the optional parameter ``ordered`` set to ``false``. :binary:`~bin.mongos` can attempt to send the writes to multiple shards simultaneously. For *empty* collections, first pre-split the collection as described in :doc:`/tutorial/split-chunks-in-sharded-cluster`."
msgstr ""

#: ../source/core/bulk-write-operations.txt:178
msgid "Avoid Monotonic Throttling"
msgstr ""

#: ../source/core/bulk-write-operations.txt:180
msgid "If your shard key increases monotonically during an insert, then all inserted data goes to the last chunk in the collection, which will always end up on a single shard. Therefore, the insert capacity of the cluster will never exceed the insert capacity of that single shard."
msgstr ""

#: ../source/core/bulk-write-operations.txt:185
msgid "If your insert volume is larger than what a single shard can process, and if you cannot avoid a monotonically increasing shard key, then consider the following modifications to your application:"
msgstr ""

#: ../source/core/bulk-write-operations.txt:189
msgid "Reverse the binary bits of the shard key. This preserves the information and avoids correlating insertion order with increasing sequence of values."
msgstr ""

#: ../source/core/bulk-write-operations.txt:193
msgid "Swap the first and last 16-bit words to \"shuffle\" the inserts."
msgstr ""

#: ../source/core/bulk-write-operations.txt:215
msgid ":ref:`sharding-shard-key` for information on choosing a sharded key. Also see :ref:`Shard Key Internals <sharding-internals-shard-keys>` (in particular, :ref:`sharding-internals-operations-and-reliability`)."
msgstr ""

