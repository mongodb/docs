.. meta::
   :robots: noindex, nosnippet


.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol



Class RealmDictionary
^^^^^^^^^^^^^^^^^^^^^

.. _io_realm_RealmDictionary:



io.realm
========


 | `java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ 
 | 		:ref:`io.realm.RealmMap <io_realm_RealmMap>` 
 | 					io.realm.RealmDictionary


Specialization of :ref:`RealmMap <io_realm_RealmMap>` s whose keys are strings.

Similarly to :ref:`RealmList <io_realm_RealmList>` s, a RealmDictionary can operate in managed and unmanaged modes. In managed mode a RealmDictionary persists all its contents inside a Realm whereas in unmanaged mode it functions like a `HashMap <https://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html>`__ .



Managed RealmDictionaries can only be created by Realm and will automatically update its content whenever the underlying Realm is updated. Managed RealmDictionaries can only be accessed using the getter that points to a RealmDictionary field of a :ref:`RealmObject <io_realm_RealmObject>` .



Unmanaged RealmDictionaries can be created by the user and can contain both managed and unmanaged RealmObjects. This is useful when dealing with JSON deserializers like GSON or other frameworks that inject values into a class. Unmanaged RealmDictionaries can be added to a Realm using the :ref:`Realm.copyToRealm(Iterable, ImportFlag...) <io_realm_Realm_copyToRealm_Iterable__ImportFlag____>`  method.






Constructors
============

.. list-table::
   :header-rows: 1
   
   * - Constructor and Description
   
   * - | :ref:`RealmDictionary <io_realm_RealmDictionary>` ()
       | 
       
       
       Instantiates a RealmDictionary in unmanaged mode.
       
       
       
   
   * - | :ref:`RealmDictionary <io_realm_RealmDictionary>` (
       |  `java.util.Map\<java.lang.String, V> <https://docs.oracle.com/javase/7/docs/api/java/util/Map.html>`__  map
       | )
       
       
       Instantiates a RealmDictionary in unmanaged mode with an initial dictionary.
       
       
       
   
   


Inherited Methods
=================



- Methods inherited from class `java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ : ``getClass`` , ``hashCode`` , ``equals`` , ``clone`` , ``toString`` , ``notify`` , ``notifyAll`` , ``wait`` , ``wait`` , ``wait`` , ``finalize`` 
- Methods inherited from class :ref:`io.realm.RealmMap <io_realm_RealmMap>` : ``isManaged`` , ``isValid`` , ``isFrozen`` , ``size`` , ``isEmpty`` , ``containsKey`` , ``containsValue`` , ``get`` , ``put`` , ``remove`` , ``putAll`` , ``clear`` , ``keySet`` , ``values`` , ``entrySet`` , ``freeze`` , ``addChangeListener`` , ``addChangeListener`` , ``removeChangeListener`` , ``removeChangeListener`` , ``removeAllChangeListeners`` 




Constructor Detail
==================

.. _RealmDictionary:

.. _RealmDictionary__:

.. _io_realm_RealmDictionary:

.. _io_realm_RealmDictionary__:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmDictionary <io_realm_RealmDictionary>` ()
       | 
       
       
       
   
   * - Instantiates a RealmDictionary in unmanaged mode.
       
       
       
       
       
       
       
   
   


.. _RealmDictionary:

.. _RealmDictionary__:

.. _io_realm_RealmDictionary:

.. _io_realm_RealmDictionary__:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmDictionary <io_realm_RealmDictionary>` (
       |  `java.util.Map\<java.lang.String, V> <https://docs.oracle.com/javase/7/docs/api/java/util/Map.html>`__  map
       | )
       
       
       
   
   * - Instantiates a RealmDictionary in unmanaged mode with an initial dictionary.
       
       
       
       
       **Parameters**
       
       - ``map`` - initial dictionary
          
          
          
       
       
       
       
       
   
   



