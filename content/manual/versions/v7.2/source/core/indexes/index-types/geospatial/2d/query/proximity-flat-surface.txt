.. _2d-index-proximity-query:

==================================================
Query for Locations Near a Point on a Flat Surface
==================================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

You can query for location data that appears near a specified point on a
flat surface.

To query for location data near a specified point, use the
:query:`$near` operator:

.. code-block:: javascript

   db.<collection>.find( {
      <location field> : {
         $near : [ <longitude>, <latitude> ],
         $maxDistance : <distance in meters>
      }
   } )

About this Task
---------------

- When specifying coordinate pairs in the ``$near`` operator, list the
  **longitude** first, and then **latitude**.

  - Valid longitude values are between ``-180`` and ``180``, both
    inclusive.

  - Valid latitude values are between ``-90`` and ``90``, both
    inclusive.

- Specify distance in the ``$maxDistance`` field in **meters**.

Before you Begin
----------------

#. .. include:: /includes/indexes/2d-sample-docs.rst

#. .. include:: /includes/indexes/near-requires-geospatial-index.rst
   
   Create a 2d index on the ``address`` field:

   .. code-block:: javascript

      db.contacts.createIndex( { address: "2d" } )

Procedure
---------

Use ``$near`` to query the collection. The following ``$near`` query
returns documents that have an ``address`` field within 50 meters of the
coordinate pair ``[ -73.92, 40.78 ]``:

.. code-block:: javascript

   db.contacts.find( {
      address: {
         $near: [ -73.92, 40.78 ],
         $maxDistance : 50
      }
   } )

Output:

.. code-block:: javascript
   :copyable: false

   [
      {
        _id: ObjectId("640a3dd9c639b6f094b00e89"),
        name: 'Georgine Lestaw',
        phone: '714-555-0107',
        address: [ -74, 44.74 ]
      }
   ]

Results are sorted by distance from the queried point, from nearest to
farthest.

Learn More
----------

- :query:`$near`

- :pipeline:`$geoNear`

- :ref:`geospatial-restrictions`

- To perform proximity queries on a spherical surface, see
  :ref:`2dsphere-query-geojson-proximity`.
