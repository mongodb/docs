.. _mongooplog:

==============
``mongooplog``
==============

.. default-domain:: mongodb
.. |tool-binary| replace:: mongooplog

.. versionadded:: 2.2

Synopsis
--------

:program:`mongooplog` is a simple tool that polls operations from
the :term:`replication` :term:`oplog` of a remote server, and applies
them to the local server. This capability supports certain classes of
real-time migrations that require that the source server remain online
and in operation throughout the migration process.

Typically this command will take the following form:

.. code-block:: sh

   mongooplog  --from mongodb0.example.net --host mongodb1.example.net

This command copies oplog entries from the :program:`mongod` instance
running on the host ``mongodb0.example.net`` and duplicates
operations to the host ``mongodb1.example.net``. If you do not need
to keep the :option:`--from <mongooplog --from>` host running during
the migration, consider using :program:`mongodump` and
:program:`mongorestore` or another :doc:`backup
</core/backups>` operation, which may be better suited to
your operation.

.. note::

   If the :program:`mongod` instance specified by the :option:`--from <mongooplog --from>`
   argument is running with :setting:`authentication <auth>`, then
   :program:`mongooplog` will not be able to copy oplog entries.

.. seealso:: :program:`mongodump`, :program:`mongorestore`,
   :doc:`/core/backups`, :doc:`/core/replica-set-oplog`.

Options
-------

.. binary:: mongooplog

.. program:: mongooplog

.. include:: /includes/options-mongooplog.rst

Usage
~~~~~

Consider the following prototype :program:`mongooplog` command:

.. code-block:: sh

   mongooplog  --from mongodb0.example.net --host mongodb1.example.net

Here, entries from the :term:`oplog` of the :program:`mongod` running
on port ``27017``. This only pull entries from the last 24 hours.

Use the :option:`--seconds <mongooplog --seconds>` argument to capture
a greater or smaller amount of time. Consider the following example:

.. code-block:: sh

   mongooplog  --from mongodb0.example.net --seconds 172800

In this operation, :program:`mongooplog` captures 2 full days of
operations. To migrate 12 hours of :term:`oplog` entries, use the
following form:

.. code-block:: sh

   mongooplog  --from mongodb0.example.net --seconds 43200

For the previous two examples, :program:`mongooplog` migrates entries
to the :program:`mongod` process running on the localhost interface
connected to the ``27017`` port. :program:`mongooplog` can also
operate directly on MongoDB's data files if no :program:`mongod` is
running on the *target* host. Consider the following example:

.. code-block:: sh

   mongooplog  --from mongodb0.example.net --dbpath /srv/mongodb --journal

Here, :program:`mongooplog` imports :term:`oplog` operations from the
:program:`mongod` host connected to port ``27017``. This migrates
operations to the MongoDB data files stored in the ``/srv/mongodb``
directory. Additionally :program:`mongooplog` will use the durability
:term:`journal` to ensure that the data files remain valid.
