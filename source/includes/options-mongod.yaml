# This file borrows content from: /includes/options-shared.yaml which uses
#   {{program}} to refer to the tool.
#
# This file lends content to:
#   /includes/options-mongos.yaml
#   /includes/options-conf.yaml
#
program: mongod
name: help
inherit:
  name: help
  program: _shared
  file: options-shared.yaml
---
program: mongod
name: version
inherit:
  name: version
  program: _shared
  file: options-shared.yaml
---
program: mongod
name: config
aliases: -f
args: <filename>
directive: option
description: |
  Specifies a configuration file for runtime configuration options. The
  configuration file is the preferred method for runtime configuration of
  {{program}}. The options are equivalent to the command-line
  configuration options. See :doc:`/reference/configuration-options` for
  more information.

  Ensure the configuration file uses ASCII encoding. The {{program}}
  instance does not support configuration files with non-ASCII encoding,
  including UTF-8.
optional: true
---
program: mongod
name: verbose
inherit:
  name: verbose
  program: _shared
  file: options-shared.yaml
---
program: mongod
name: quiet
inherit:
  name: quiet
  program: _shared
  file: options-shared.yaml
---
program: mongod
name: port
inherit:
  name: port
  program: _shared
  file: options-shared.yaml
---
program: mongod
name: bind_ip
args: <ip address>
default: All interfaces
directive: option
description: |
  Specifies the IP address that {{program}} binds to in order to listen
  for connections from applications. You may attach {{program}} to any
  interface. When attaching {{program}} to a publicly accessible
  interface, ensure that you have implemented proper authentication and
  firewall restrictions to protect the integrity of your database.
optional: true
---
program: mongod
name: maxConns
args: <number>
directive: option
description: |
  The maximum number of simultaneous connections that {{program}} will
  accept. This setting has no effect if it is higher than your operating
  system's configured maximum connection tracking threshold.

  .. versionchanged:: 2.6
     MongoDB removed the upward limit on the :setting:`~net.maxIncomingConnections` setting.
optional: true
---
program: mongod
name: objcheck
args: null
directive: option
description: |
  Forces the {{program}} to validate all requests from clients upon
  receipt to ensure that clients never insert invalid documents into the
  database. For objects with a high degree of sub-document nesting, the
  {{role}} option can have a small impact on performance. You can set
  :option:`--noobjcheck` to disable object checking at runtime.

  .. versionchanged:: 2.4
     MongoDB enables the {{role}} option by default in order to prevent
     any client from inserting malformed or invalid BSON into a MongoDB
     database.
optional: true
---
program: mongod
name: noobjcheck
args: null
directive: option
description: |
  .. versionadded:: 2.4

  Disables the default document validation that MongoDB performs on all
  incoming BSON documents.
optional: true
---
program: mongod
name: logpath
args: <path>
directive: option
description: |
  Sends all diagnostic logging information to a log file instead of to
  standard output or to the host's :term:`syslog` system. MongoDB creates
  the log file at the path you specify.

  By default, MongoDB overwrites the log file when the process restarts.
  To instead append to the log file, set the :option:`--logappend` option.
# todo:: Is the above still true about overwriting?
optional: true
---
program: mongod
name: logappend
args: null
directive: option
description: |
  Appends new entries to the end of the log file rather than overwriting
  the content of the log when the {{program}} instance restarts.
optional: true
---
program: mongod
name: timeStampFormat
args: <string>
default: iso8601-local
directive: option
description: |
  The time format for timestamps in log messages. Specify one of the
  following values:

  .. list-table::
     :header-rows: 1
     :widths: 20 40

     * - Value

       - Description

     * - ``ctime``

       - Displays timestamps as ``Wed Dec 31
         18:17:54.811``.

     * - ``iso8601-utc``

       - Displays timestamps in Coordinated Universal Time (UTC) in the
         ISO-8601 format. For example, for New York at the start of the
         Epoch: ``1970-01-01T00:00:00.000Z``

     * - ``iso8601-local``

       - Displays timestamps in local time in the ISO-8601
         format. For example, for New York at the start of the Epoch:
         ``1969-12-31T19:00:00.000+0500``
optional: true
---
program: mongod
name: syslog
args: null
directive: option
description: |
  Sends all logging output to the host's :term:`syslog` system rather
  than to standard output or to a log file. , as with :option:`--logpath`.

  The {{role}} option is not supported on Windows.
optional: true
---
program: mongod
name: syslogFacility
args: <string>
default: user
directive: option
description: |
  Specifies the facility level used when logging messages to syslog.
  The value you specify must be supported by your
  operating system's implementation of syslog. To use this option, you
  must enable the :option:`--syslog` option.
optional: true
---
program: mongod
name: pidfilepath
args: <path>
directive: option
description: |
  Specifies a file location to hold the process ID of the {{program}}
  process. This is useful for tracking the {{program}} process in
  combination with the :option:`--fork` option. Without a specified
  {{role}} option, the process creates no PID file.
optional: true
---
program: mongod
name: keyFile
args: <file>
directive: option
description: |
  Specifies the path to a key file to store authentication
  information. This option is used for interprocess authentication among
  the :program:`mongos` and :program:`mongod` instances of a
  :term:`sharded cluster` or :term:`replica set`.
optional: true
---
program: mongod
name: nounixsocket
args: null
directive: option
description: |
  Disables listening on the UNIX domain socket. The {{program}} process
  always listens on the UNIX socket unless one of the following is true:

  - {{role}} is set

  - :setting:`bind_ip` is not set

  - :setting:`bind_ip` does not specify ``127.0.0.1``

  .. |mongodb-package| replace:: {{program}}

  .. include:: /includes/note-deb-and-rpm-default-to-localhost.rst
optional: true
---
program: mongod
name: unixSocketPrefix
args: <path>
default: /tmp
directive: option
description: |
  The path for the UNIX socket. If this option has no value, the
  {{program}} process creates a socket with ``/tmp`` as a prefix. MongoDB
  creates and listens on a UNIX socket unless one of the following is true:

  - :option:`--nounixsocket` is set

  - :setting:`bind_ip` is not set

  -:setting:`bind_ip` does not specify ``127.0.0.1``
optional: true
---
program: mongod
name: fork
args: null
directive: option
description: |
  Enables a :term:`daemon` mode that runs the {{program}} process in the
  background. By default {{program}} does not run as a daemon:
  typically you will run {{program}} as a daemon, either by using
  {{role}} or by using a controlling process that handles the
  daemonization process (e.g. as with ``upstart`` and ``systemd``).
optional: true
---
program: mongod
name: auth
# The description for this option (auth) applies specifically to the command
# line. The equivalent option in the config file (security.authentication)
# takes string values, which this option does not do.
args: null
directive: option
description: |
  Requires database authentication for users connecting from remote
  hosts.

  Configure users via the :doc:`mongo shell
  </reference/program/mongo>`. If no users exist, the localhost interface
  will continue to have access to the database until the you create
  the first user.

  See :doc:`Security and Authentication </core/security>`
  for more information.
optional: true
---
program: mongod
name: cpu
# beginning in 2.6, cpu is command-line only
args: null
directive: option
description: |
  Forces the {{program}} process to report the percentage of CPU time in
  write lock. The process generates output every four seconds and writes
  the data to standard output or, if you are using the :setting:`systemLog.path`
  option, to the log file.
optional: true
---
program: mongod
name: dbpath
args: <path>
default: |
  ``/data/db`` on Linux and OS X, ``\data\db`` on Windows
directive: option
description: |
  The directory where the {{program}} instance stores its data. If you
  installed MongoDB using a package management system, check the
  ``/etc/mongodb.conf`` file provided by your packages to see which
  directory is specified.
optional: true
---
program: mongod
name: diaglog
args: <value>
default: 0
directive: option
description: |
  .. deprecated:: 2.6

  {{role}} is for internal use and not intended for most users.

  Creates a very verbose :term:`diagnostic log` for troubleshooting and
  recording various errors. MongoDB writes these log files in the
  :setting:`~storage.dbPath` directory in a series of files that begin with the
  string ``diaglog`` and end with the initiation time of the logging as a
  hex string.

  The specified value configures the level of verbosity:

  .. list-table::
     :header-rows: 1
     :widths: 20 40

     * - Value

       - Setting

     * - 0

       - Off. No logging.

     * - 1

       - Log write operations.

     * - 2

       - Log read operations.

     * - 3

       - Log both read and write operations.

     * - 7

       - Log write and some read operations.

  You can use the :program:`mongosniff` tool to replay this output for
  investigation. Given a typical diaglog file located at
  ``/data/db/diaglog.4f76a58c``, you might use a command in the following
  form to read these files:

  .. code-block:: sh

     mongosniff --source DIAGLOG /data/db/diaglog.4f76a58c

   .. warning::

      Setting the diagnostic level to ``0`` will cause :program:`mongod`
      to stop writing data to the :term:`diagnostic log` file. However,
      the :program:`mongod` instance will continue to keep the file open,
      even if it is no longer writing data to the file. If you want to
      rename, move, or delete the diagnostic log you must cleanly shut
      down the :program:`mongod` instance before doing so.
optional: true
---
program: mongod
name: directoryperdb
args: null
directive: option
description: |
  Stores each database's files in its own folder in the :term:`data
  directory`. When applied to an existing system, the
  :setting:`directoryperdb` option alters the storage pattern of the data
  directory.

  Use this option in conjunction with your file system and device
  configuration so that MongoDB will store data on a number of distinct
  disk devices to increase write throughput or disk capacity.

  .. warning::

     To enable this option for an **existing** system, migrate the
     database-specific data files to the new directory structure before
     enabling :setting:`directoryperdb`. Database-specific data files
     begin with the name of an existing database and end with either
     "``ns``" or a number. For example, the following data directory
     includes files for the ``local`` and ``test`` databases:

     .. code-block:: none

        journal
        mongod.lock
        local.0
        local.1
        local.ns
        test.0
        test.1
        test.ns

     After migration, the data directory would have the following structure:

     .. code-block:: none

        journal
        mongod.lock
        local/local.0
        local/local.1
        local/local.ns
        test/test.0
        test/test.1
        test/test.ns
optional: true
---
program: mongod
name: journal
inherit:
  name: journal
  program: _shared
  file: options-shared.yaml
---
program: mongod
name: journalOptions
args: <arguments>
directive: option
description: |
  Provides functionality for testing. Not for general use, and will affect data
  file integrity in the case of abnormal system shutdown.
optional: true
---
program: mongod
name: journalCommitInterval
args: <value>
default: 100 or 30
directive: option
description: |
  The maximum amount of time the {{program}} process allows between
  journal operations. Values can range from 2 to 300 milliseconds. Lower
  values increase the durability of the journal, at the expense of disk
  performance.

  The default journal commit interval is 100 milliseconds if a single
  block device (e.g. physical volume, RAID device, or LVM volume) contains
  both the journal and the data files.

  If the journal is on a different block device than the data files the
  default journal commit interval is 30 milliseconds.

  To force :program:`mongod` to commit to the journal more frequently, you
  can specify ``j:true``. When a write operation with ``j:true`` is
  pending, :program:`mongod` will reduce :setting:`~storage.journal.commitIntervalMs`
  to a third of the set value.
optional: true
---
program: mongod
name: ipv6
inherit:
  name: ipv6
  program: _shared
  file: options-shared.yaml
---
program: mongod
name: jsonp
args: null
directive: option
description: |
  Permits :term:`JSONP` access via an HTTP interface. Enabling the
  interface can increase network exposure. The {{role}} option enables the
  HTTP interface, even if the :setting:`HTTP interface <net.http.enabled>`
  option is disabled.
optional: true
---
program: mongod
name: noauth
args: null
directive: option
description: |
  Disables authentication. Currently the default. Exists for future
  compatibility and clarity.
optional: true
---
program: mongod
name: nohttpinterface
args: null
directive: option
description: |
  .. deprecated:: 2.6
     MongoDB disables the HTTP interface by default.

  Disables the HTTP interface.

  Do not use in conjunction with :option:`--rest` or :option:`--jsonp`.

  .. include:: /includes/note-kerberos-unsupported-in-http-console.rst
optional: true
---
program: mongod
name: httpinterface
args: null
directive: option
description: |
  .. versionadded:: 2.6

  Enables the HTTP interface. Enabling the interface can increase
  network exposure.

  Leave the HTTP interface *disabled* for production deployments. If you
  *do* enable this interface, you should only allow trusted clients to
  access this port. See :ref:`security-firewalls`.

  .. include:: /includes/note-kerberos-unsupported-in-http-console.rst
optional: true
---
program: mongod
name: clusterAuthMode
args: <option>
default: keyFile
directive: option
description: |
  .. versionadded:: 2.6

  The authentication mode used for cluster authentication. If you use
  :ref:`internal x.509 authentication <x509-internal-authentication>`,
  specify so here. This option can have one of the following values:

  .. list-table::
     :header-rows: 1
     :widths: 20 40

     * - Value

       - Description

     * - ``keyFile``

       - Use a keyfile for authentication.
         Accept only keyfiles.

     * - ``sendKeyFile``

       - For rolling upgrade purposes. Send a keyfile for
         authentication but can accept both keyfiles and x.509
         certificates.

     * - ``sendX509``

       - For rolling upgrade purposes. Send the x.509 certificate for
         authentication but can accept both keyfiles and x.509
         certificates.

     * - ``x509``

       - Recommended. Send the x.509 certificate for authentication and
         accept only x.509 certificates.

  The default distribution of MongoDB does not contain support for SSL.
  For more information on MongoDB and SSL, see :doc:`/tutorial/configure-ssl`.
optional: true
---
program: mongod
name: nojournal
args: null
directive: option
description: |
  Disables the durability journaling. The {{program}} instance
  enables journaling by default in 64-bit versions after v2.0.
optional: true
---
program: mongod
name: noprealloc
args: null
directive: option
description: |
  Disables the preallocation of data files. This shortens the
  start up time in some cases and can cause significant performance
  penalties during normal operations.
optional: true
---
program: mongod
name: noscripting
args: null
directive: option
description: |
  Disables the scripting engine.
optional: true
---
program: mongod
name: notablescan
args: null
directive: option
description: |
  Forbids operations that require a table scan.
optional: true
---
program: mongod
name: nssize
args: <value>
default: 16
directive: option
description: |
  Specifies the default size for namespace files, which are files that end
  in ``.ns``. Each collection and index counts as a namespace.

  Use this setting to control size for newly created namespace files. This
  option has no impact on existing files. The maximum size for a namespace
  file is 2047 megabytes. The default value of 16 megabytes provides for
  approximately 24,000 namespaces.
optional: true
---
program: mongod
name: profile
args: <level>
default: 0
directive: option
description: |
  Changes the level of database profiling, which inserts information about
  operation performance into standard output or a log file. Specify one
  of the following levels:

  .. list-table::
     :header-rows: 1
     :widths: 20 40

     * - Level

       - Setting

     * - ``0``

       - Off. No profiling.

     * - ``1``

       - On. Only includes slow operations.

     * - ``2``

       - On. Includes all operations.

  Database profiling can impact database
  performance. Enable this option only after careful consideration.
optional: true
---
program: mongod
name: quota
args: null
directive: option
description: |
  Enables a maximum limit for the number data files each database can
  have. When running with the {{role}} option, MongoDB has a maximum of 8
  data files per database. Adjust the quota with
  {{quota_files}}.
optional: true
replacement:
  quota_files: :option:`--quotaFiles`
---
program: mongod
name: quotaFiles
args: <number>
default: 8
directive: option
description: |
  Modifies the limit on the number of data files per database. {{role}}
  option requires that you set {{quota_flag}}.
optional: true
replacement:
  quota_flag: :option:`--quota`
---
program: mongod
name: rest
args: null
directive: option
description: |
  Enables the simple :term:`REST` API. Enabling the :term:`REST` API
  enables the HTTP interface, even if the :setting:`HTTP interface
  <net.http.enabled>` option is disabled, and as a result can increase
  network exposure.
optional: true
---
program: mongod
name: repair
args: null
directive: option
description: |
  Runs a repair routine on all databases. This is equivalent
  to shutting down and running the :dbcommand:`repairDatabase` database
  command on all databases.

  .. include:: /includes/warning-repair.rst

  .. include:: /includes/note-repair.rst

  .. versionchanged:: 2.1.2

  If you run the repair option *and* have data in a journal file, the
  {{program}} instance refuses to start. In these cases you should start
  the {{program}} without the {{role}} option, which allows the
  {{program}} to recover data from the journal. This completes more
  quickly and is more likely to produce valid data files. To continue the
  repair operation despite the journal files, shut down the {{program}}
  cleanly and restart with the {{role}} option.

  The {{role}} option copies data from the source data files into new data
  files in the :setting:`repairpath` and then replaces the original data
  files with the repaired data files. If :setting:`repairpath` is on the
  same device as :setting:`~storage.dbPath`, you may interrupt a {{program}}
  running the {{role}} option without affecting the integrity of the data set.
optional: true
---
program: mongod
name: repairpath
args: <path>
default: |
  A ``_tmp`` directory within the path specified by the :setting:`~storage.dbPath` option.
directive: option
description: |
  Specifies the root directory containing MongoDB data files to use
  for the :option:`--repair` operation.
optional: true
---
program: mongod
name: setParameter
args: <options>
directive: option
description: |
  Specifies one of the MongoDB parameters described in
  :doc:`/reference/parameters`. You can specify multiple ``setParameter``
  fields.
optional: true
---
program: mongod
name: slowms
args: <value>
default: 100
directive: option
description: |
  The threshold in milliseconds at which the database profiler considers a
  query slow. MongoDB records all slow queries to the log, even when the
  database profiler is off. When the profiler is on, it writes to the
  ``system.profile`` collection. See the :dbcommand:`profile` command for
  more information on the database profiler.
optional: true
---
program: mongod
name: smallfiles
args: null
directive: option
description: |
  Sets MongoDB to use a smaller default file size. The {{role}} option
  reduces the initial size for data files and limits the maximum size to
  512 megabytes. {{role}} also reduces the size of each :term:`journal`
  file from 1 gigabyte to 128 megabytes. Use {{role}} if you have a large
  number of databases that each holds a small quantity of data.

  The {{role}} option can lead the {{program}} instance to create a large
  number of files, which can affect performance for larger databases.
optional: true
---
program: mongod
name: shutdown
args: null
directive: option
description: |
  Used in :term:`control scripts <control script>`, the {{role}} option
  cleanly and safely terminates the {{program}} process. When invoking
  {{program}} with this option you must set the :option:`--dbpath` option
  either directly or by way of the :doc:`configuration file
  </reference/configuration-options>` and the :option:`--config` option.

  The {{role}} option is available only on Linux systems.
optional: true
---
program: mongod
name: syncdelay
args: <value>
default: 60
directive: option
description: |
  Controls how much time can pass before MongoDB flushes data to the data
  files via an :term:`fsync` operation. **Do not set this value on
  production systems.** In almost every situation, you should use the
  default setting.

  .. warning::

     If you set {{role}} to ``0``, MongoDB will not sync the
     memory mapped files to disk.

  The {{program}} process writes data very quickly to the journal and
  lazily to the data files. :setting:`~storage.syncPeriodSecs` has no effect on the
  :setting:`journal <storage.journal.enabled>` files or :doc:`journaling </core/journaling>`.

  The :dbcommand:`serverStatus` command reports the background flush
  thread's status via the :data:`~serverStatus.backgroundFlushing` field.
optional: true
---
program: mongod
name: sysinfo
# beginning in 2.6, sysinfo is command-line only
args: null
directive: option
description: |
  Returns diagnostic system information and then exits. The
  information provides the page size, the number of physical pages,
  and the number of available physical pages.
optional: true
---
program: mongod
name: upgrade
args: null
directive: option
description: |
  Upgrades the on-disk data format of the files specified by the
  :option:`--dbpath` to the latest version, if needed.

  This option only affects the operation of the {{program}} if the data
  files are in an old format.

  In most cases you should not set this value, so you can exercise the
  most control over your upgrade process. See the MongoDB `release notes
  <http://www.mongodb.org/downloads>`_ (on the download page) for more
  information about the upgrade process.
optional: true
---
program: mongod
name: traceExceptions
args: null
directive: option
description: |
  For internal diagnostic use only.

  .. see SERVER-6667a
optional: true
---
program: mongod
name: noIndexBuildRetry
# The description for this option applies specifically to the command
# line. The equivalent option in the configuration file has a different
# description because it uses "opposite" wording. The command-line option
# is false by default, while the config-file option is true by default.
args: null
directive: option
description: |
  Stops the {{program}} from rebuilding incomplete indexes on the next
  start up. This applies in cases where the {{program}} restarts after it
  has shut down or stopped in the middle of an index build. In such cases,
  the {{program}} always removes any incomplete indexes, and then also, by
  default, attemps to rebuild them. To stop the {{program}} from
  rebuilding incomplete indexes on start up, include this option on the
  command-line.
optional: true
---
program: mongod
name: replSet
args: <setname>
directive: option
description: |
  Configures replication. Specify a replica set name as an argument to
  this set. All hosts in the replica set must have the same set name.

  .. include:: /includes/fact-unique-replica-set-names.rst
optional: true
---
program: mongod
name: oplogSize
args: <value>
directive: option
description: |
  Specifies a maximum size in megabytes for the replication operation log
  (i.e., the :term:`oplog`). The {{program}} process creates an
  :term:`oplog` based on the maximum amount of space available. For 64-bit
  systems, the oplog is typically 5% of available disk space. Once the
  {{program}} has created the oplog for the first time, changing the
  {{role}} option will not affect the size of the oplog.
optional: true
---
program: mongod
name: fastsync
args: null
directive: option
description: |
  In the context of :term:`replica set` replication, set this option
  if you have seeded this member with a snapshot of the
  :term:`dbpath` of another member of the set. Otherwise the
  {{program}} will attempt to perform an initial sync,
  as though the member were a new member.

  .. warning::
     If the data is not perfectly synchronized *and*
     the {{program}} starts with :setting:`fastsync`, then the
     secondary or slave will be permanently out of sync with the
     primary, which may cause significant consistency problems.
optional: true
---
program: mongod
name: replIndexPrefetch
args: null
default: all
directive: option
description: |
  .. versionadded:: 2.2

  Determines which indexes :term:`secondary` members of a :term:`replica
  set` load into memory before applying operations from the oplog. By
  default secondaries load all indexes related to an operation into memory
  before applying operations from the oplog. This option can have one of
  the following values:

  .. list-table::
     :header-rows: 1
     :widths: 20 40

     * - Value

       - Description

     * - ``none``

       - Secondaries do not load indexes into memory.

     * - ``all``

       - Secondaries load all indexes related to an operation.

     * - ``_id_only``

       - Secondaries load no additional indexes into memory beyond the
         already existing ``_id`` index.
optional: true
---
program: mongod
name: master
args: null
directive: option
description: |
  Configures the {{program}} to run as a replication :term:`master`.
optional: true
---
program: mongod
name: slave
args: null
directive: option
description: |
  Configures the {{program}} to run as a replication :term:`slave`.
optional: true
---
program: mongod
name: source
args: <host><:port>
directive: option
description: |
  For use with the :option:`--slave` option, the ``--source`` option
  designates the server that this instance will replicate.
optional: true
---
program: mongod
name: only
args: <arg>
directive: option
description: |
  For use with the :option:`--slave` option, the ``--only`` option
  specifies only a single :term:`database` to replicate.
optional: true
---
program: mongod
name: slavedelay
args: <value>
directive: option
description: |
  For use with the :option:`--slave` option, the {{role}}
  option configures a "delay" in seconds, for this slave to wait to
  apply operations from the :term:`master` node.
optional: true
---
program: mongod
name: autoresync
args: null
directive: option
description: |
  For use with the :option:`--slave` option. When set,
  the {{role}} option allows this slave to automatically
  resync if it is more than 10 seconds behind the master. This
  setting may be problematic if the :option:`--oplogSize` specifies
  a too small oplog.

  If the :term:`oplog` is not large enough to store the difference in
  changes between the master's current state and the state of the
  slave, this instance will forcibly resync itself
  unnecessarily. When you set the :setting:`autoresync` option to
  ``false``, the slave will not attempt an automatic resync more than
  once in a ten minute period.
optional: true
---
program: mongod
name: configsvr
args: null
directive: option
description: |
  Declares that this {{program}} instance serves as the
  :term:`config database` of a sharded cluster. When running with
  this option, clients will not be able to write data to any database
  other than ``config`` and ``admin``. The default port for a
  {{program}} with this option is ``27019`` and the default
  :option:`--dbpath` directory is ``/data/configdb``, unless
  specified.

  .. versionchanged:: 2.2
     The {{role}} option also sets :option:`--smallfiles`.

  .. versionchanged:: 2.4
     The {{role}} option creates a local :term:`oplog`.

  Do not use the {{role}} option with :option:`--replSet` or
  :option:`--shardsvr`. Config servers cannot be a shard
  server or part of a :term:`replica set`.
optional: true
---
program: mongod
name: shardsvr
args: null
directive: option
description: |
  Configures this {{program}} instance as a shard in a
  partitioned cluster. The default port for these instances is
  ``27018``.  The only effect of {{role}} is to change
  the port number.
optional: true
---
program: mongod
name: moveParanoia
args: null
directive: option
description: |
  .. versionadded:: 2.4

  During chunk migrations, the {{role}} option forces the
  :program:`mongod` instances to save to the ``moveChunk`` directory of
  the :setting:`storage.dbPath` all the documents migrated from this
  shard. MongoDB does not delete data stored in ``moveChunk``.

  Prior to 2.4, {{role}} was the default behavior of MongoDB.
optional: true
---
program: mongod
name: sslOnNormalPorts
args: null
directive: option
description: |
  .. deprecated:: 2.6

  Enables SSL for {{program}}.
  
  With {{role}}, a {{program}} requires SSL encryption for all
  connections on the default MongoDB port, or the port specified by
  :option:`--port`. By default, :option:`--sslOnNormalPorts` is
  disabled.
 
  The default distribution of MongoDB does not contain support for SSL.
  For more information on MongoDB and SSL, see :doc:`/tutorial/configure-ssl`.
optional: true
---
program: mongod
name: sslMode
args: <mode>
directive: option
description: |
   .. versionadded:: 2.6

   Enables SSL or mixed SSL on a port. The argument to the {{role}} option
   can be one of the following:

   .. list-table::
      :header-rows: 1
      :widths: 20 40

      * - Value

        - Description

      * - ``disabled``

        - The server does not use SSL.

      * - ``allowSSL``

        - Connections between servers do not use SSL. For incoming
          connections, the server accepts both SSL and non-SSL.

      * - ``preferSSL``

        - Connections between servers use SSL. For incoming
          connections, the server accepts both SSL and non-SSL.

      * - ``requireSSL``

        - The server uses and accepts only SSL encrypted connections.

   The default distribution of MongoDB does not contain support for SSL.
   For more information on MongoDB and SSL, see :doc:`/tutorial/configure-ssl`.
optional: true
---
program: mongod
name: sslPEMKeyFile
args: <filename>
directive: option
description: |
  .. versionadded:: 2.2

  Specifies the :file:`.pem` file that contains both the SSL certificate
  and key. Specify the file name of the :file:`.pem` file using relative
  or absolute paths.

  When SSL is enabled, you must specify {{role}}.

  The default distribution of MongoDB does not contain support for SSL.
  For more information on MongoDB and SSL, see :doc:`/tutorial/configure-ssl`.
optional: true
---
program: mongod
name: sslPEMKeyPassword
args: <value>
directive: option
description: |
  .. versionadded:: 2.2

  Specifies the password to de-crypt the certificate-key file (i.e.
  ``--sslPEMKeyFile``). Use the {{role}} option only if the
  certificate-key file is encrypted. In all cases, the {{program}} will
  redact the password from all logging and reporting output.

  .. versionchanged:: 2.6
     If the private key in the PEM file is encrypted and you do not
     specify the {{role}} option, the {{program}} will prompt for a
     passphrase. See :ref:`ssl-certificate-password`.

  The default distribution of MongoDB does not contain support for SSL.
  For more information on MongoDB and SSL, see :doc:`/tutorial/configure-ssl`.
optional: true
---
program: mongod
name: sslClusterFile
args: <filename>
directive: option
description: |
  .. versionadded:: 2.6

  Specifies the :file:`.pem` file that contains the x.509 certificate-key
  file for :ref:`membership authentication <x509-internal-authentication>`
  for the cluster or replica set.

  If this option is not used to specify the .pem file for internal cluster
  authentication, the cluster uses the .pem file specified in the
  :option:`--sslPEMKeyFile` option.

  The default distribution of MongoDB does not contain support for SSL.
  For more information on MongoDB and SSL, see :doc:`/tutorial/configure-ssl`.
optional: true
---
program: mongod
name: sslClusterPassword
args: <value>
directive: option
description: |
  .. versionadded:: 2.6

  Specifies the password to de-crypt the x.509 certificate-key file
  specified with ``--sslClusterFile``. Use the {{role}} option only
  if the certificate-key file is encrypted. In all cases, the {{program}}
  will redact the password from all logging and reporting output.

  If the x.509 key file is encrypted and you do not specify the
  {{role}} option, the {{program}} will prompt for a passphrase. See
  :ref:`ssl-certificate-password`.

  The default distribution of MongoDB does not contain support for SSL.
  For more information on MongoDB and SSL, see :doc:`/tutorial/configure-ssl`.
optional: true
---
program: mongod
name: sslCAFile
args: <filename>
directive: option
description: |
  .. versionadded:: 2.4

  Specifies the :file:`.pem` file that contains the root certificate chain
  from the Certificate Authority. Specify the file name of the
  :file:`.pem` file using relative or absolute paths.

  The default distribution of MongoDB does not contain support for SSL.
  For more information on MongoDB and SSL, see :doc:`/tutorial/configure-ssl`.
optional: true
---
program: mongod
name: sslCRLFile
args: <filename>
directive: option
description: |
  .. versionadded:: 2.4

  Specifies the :file:`.pem` file that contains the Certificate Revocation
  List. Specify the file name of the :file:`.pem` file using relative or
  absolute paths.

  The default distribution of MongoDB does not contain support for SSL.
  For more information on MongoDB and SSL, see :doc:`/tutorial/configure-ssl`.
optional: true
---
program: mongod
name: sslAllowInvalidCertificates
args: null
directive: option
description: |
  .. versionadded:: 2.6

  Bypasses the validation checks for SSL certificates on other servers
  in the cluster and allows the use of invalid certificates. When using
  the :setting:`~net.ssl.allowInvalidCertificates` setting, MongoDB
  logs as a warning the use of the invalid certificate.

  The default distribution of MongoDB does not contain support for SSL.
  For more information on MongoDB and SSL, see :doc:`/tutorial/configure-ssl`.
optional: true
---
program: mongod
name: sslWeakCertificateValidation
args: null
directive: option
description: |
  .. versionadded:: 2.4

  Disables the requirement for SSL certificate validation that
  ``--sslCAFile`` enables. With the {{role}} option, the {{program}}
  will accept connections when the client does not present a certificate
  when establishing the connection.

  If the client presents a certificate and the {{program}} has {{role}}
  enabled, the {{program}} will validate the certificate using the root
  certificate chain specified by ``--sslCAFile`` and reject clients
  with invalid certificates.

  Use the {{role}} option if you have a mixed deployment that includes
  clients that do not or cannot present certificates to the {{program}}.

  The default distribution of MongoDB does not contain support for SSL.
  For more information on MongoDB and SSL, see :doc:`/tutorial/configure-ssl`.
optional: true
---
program: mongod
name: sslFIPSMode
args: null
directive: option
description: |
  .. versionadded:: 2.4

  Directs the {{program}} to use the FIPS mode of the installed OpenSSL
  library. Your system must have a FIPS compliant OpenSSL library to use
  the {{role}} option.

  The default distribution of MongoDB does not contain support for SSL.
  For more information on MongoDB and SSL, see :doc:`/tutorial/configure-ssl`.
optional: true
---
program: mongod
name: auditDestination
args: null
directive: option
description: |
  .. versionadded:: 2.6
  
  Enables auditing. The {{role}} option can have one of the following values:

  .. list-table::
     :header-rows: 1
     :widths: 15 50

     * - Value

       - Description

     * - ``syslog``

       - Output the audit events to syslog in JSON format. Not available on
         Windows. Audit messages have a syslog severity level of ``info``
         and a facility level of ``user``.

         The syslog message limit can result in the truncation of
         audit messages. The auditing system will neither detect the
         truncation nor error upon its occurrence.

     * - ``console``

       - Output the audit events to ``stdout`` in JSON format.

     * - ``file``

       - Output the audit events to the file specified in
         :option:`--auditPath` in the format specified in
         :option:`--auditFormat`.

  .. include:: /includes/note-audit-in-enterprise-only.rst
optional: true
---
program: mongod
name: auditFormat
args: null
directive: option
description: |
  .. versionadded:: 2.6

  Specifies the format of the output file if :option:`--auditDestination`
  is ``file``. The {{role}} option can have one of the following values:

  .. list-table::
     :header-rows: 1
     :widths: 15 50

     * - Value

       - Description

     * - ``JSON``

       - Output the audit events in JSON format to the file specified
         in :option:`--auditPath`.

     * - ``BSON``

       - Output the audit events in BSON binary format to the file
         specified in :option:`--auditPath`.

  Printing audit events to a file in JSON format degrades server
  performance more than printing to a file in BSON format.

  .. include:: /includes/note-audit-in-enterprise-only.rst
optional: true
---
program: mongod
name: auditPath
args: null
directive: option
description: |
  .. versionadded:: 2.6

  Specifies the output file for auditing if :option:`--auditDestination`
  has value of ``file``. The {{role}} option can take either a full path
  name or a relative path name.

  .. include:: /includes/note-audit-in-enterprise-only.rst
optional: true
---
program: mongod
name: auditFilter
args: null
directive: option
description: |
  .. versionadded:: 2.6

  Specifies the filter to limit the :ref:`types of operations
  <audit-action-details-results>` the audit system records. The option
  takes a document of the form:

  .. code-block:: javascript

     { atype: <expression> }

  For authentication operations, the option can also take a document of
  the form:

  .. code-block:: javascript

    { atype: <expression>, "param.db": <database> }
  .. include:: /includes/note-audit-in-enterprise-only.rst
optional: true
---
program: mongod
name: snmp-subagent
args: null
directive: option
description: |
  Runs SNMP as a subagent. For more information, see
  :doc:`/tutorial/monitor-with-snmp`.
optional: true
---
program: mongod
name: snmp-master
args: null
directive: option
description: |
  Runs SNMP as a master. For more information, see
  :doc:`/tutorial/monitor-with-snmp`.
optional: true
...
