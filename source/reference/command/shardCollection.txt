===============
shardCollection
===============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. dbcommand:: shardCollection

   :doc:`Shards </sharding>` a collection to distribute its documents
   across shards. You must run :dbcommand:`enableSharding` on a
   database before running the :dbcommand:`shardCollection` command.
   The :dbcommand:`shardCollection` command must be run against the
   ``admin`` database.

   .. |command| replace:: :dbcommand:`shardCollection`

   .. include:: /includes/fact-dbcommand.rst

   :dbcommand:`shardCollection` has the following form:

   .. code-block:: javascript

      {
         shardCollection: "<database>.<collection>",
         key: <shardkey>,
         unique: <boolean>,
         numInitialChunks: <integer>,
         collation: { locale: "simple" }
      }

   :dbcommand:`shardCollection` has the following fields:

   .. include:: /includes/apiargs/dbcommand-shardCollection-field.rst

Considerations
--------------

Use
~~~

You can only shard a collection once.

Do **not** run more than one :dbcommand:`shardCollection` command on
the same collection at the same time.

.. include:: /includes/fact-cannot-unshard-collection.rst

Shard Keys
~~~~~~~~~~

Choosing the best shard key to effectively distribute load among your
shards requires some planning. Review :ref:`sharding-shard-key`
regarding choosing a shard key and restrictions.

Hashed Shard Keys
~~~~~~~~~~~~~~~~~

:ref:`Hashed shard keys <sharding-hashed-sharding>` use a
hashed index of a single field as the shard key.

Use the form ``{field: "hashed"}`` to specify a hashed shard key.
Hashed shard keys may not be compound indexes.

.. include:: /includes/note-hashed-shard-key-during-chunk-migration.rst

.. seealso:: :doc:`/core/hashed-sharding`

Uniqueness
~~~~~~~~~~

If specifying ``unique: true``:

.. include:: /includes/extracts/shard-collection-unique-restriction-command.rst

See also :ref:`Sharded Collection and Unique Indexes
<sharding-shard-key-unique>`

.. include:: /includes/fact-shardCollection-collation.rst

Example
-------

The following operation enables sharding for the ``people`` collection
in the ``records`` database and uses the ``zipcode`` field as the
:ref:`shard key <shard-key>`:

.. code-block:: javascript

   use admin
   db.runCommand( { shardCollection: "records.people", key: { zipcode: 1 } } )

.. seealso::  :doc:`/sharding`
