.. _cursors:

=======
Cursors
=======

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

A :term:`cursor` is a pointer to the results of a :ref:`query<read-operations-queries>`. 
Cursors allow you to iterate over database results one batch at a time.

Use Cases
---------

When you execute ``find()`` and ``aggregate()`` methods using :binary:`~bin.mongosh` 
or a :driver:`driver </>`, they return a cursor containing a batch of results. 
You can access the resulting documents by manually iterating the cursor or 
using the :method:`~cursor.toArray()` method. For more information, see 
:ref:`<read-operations-cursors>`.

If you are accessing a :ref:`capped collection <manual-capped-collection>`, 
you can use a tailable cursor that retrieves new documents as they are inserted 
into the collection. For more information, see 
:ref:`<tailable-cursors-landing-page>`.

.. _cursor-behaviors:

Behavior
--------

Cursors created within a :ref:`client session <read-isolation-consistency-recency>` 
are closed in the following scenarios:

- The client exhausts the cursor.
- A user manually closes the cursor.
- A user manually terminates the session.
- The :ref:`session <server-sessions>` times out.

The :parameter:`cursorTimeoutMillis` parameter specifies the timeout for idle
cursors and has a default value of 10 minutes. MongoDB times out idle cursors
created outside of sessions after this threshold. MongoDB extends the cursor
timeout each time the cursor returns a new batch. To manually close a cursor,
use :dbcommand:`killCursors`.

The server session timeout is specified by the :parameter:`localLogicalSessionTimeoutMinutes` 
parameter and has a default value of 30 minutes. To extend a session beyond 30 minutes, 
use :dbcommand:`refreshSessions`. To manually terminate a session, use 
:dbcommand:`killSessions`.

If a cursor is opened outside of a session, MongoDB drivers and :binary:`~bin.mongosh` 
create an implicit session and associate it with the operation. 

.. _cursor-isolation:
.. _cursor-concurrent-updates:

Concurrent Updates While Using a Cursor
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-concurrent-updates-cursor.rst

Get Started
-----------

- :ref:`<read-operations-cursors>`
- :ref:`<tailable-cursors-landing-page>`
- :driver:`MongoDB Drivers </>`

.. _cursor-id:

Details
-------

When you run a :dbcommand:`find` or :dbcommand:`aggregate` operation,
the database executes a query until it finds enough documents 
to fill a :ref:`batch <cursor-batches>`. When a batch is filled, the query
pauses. The paused query on the server is referred to as a *cursor* 
and the ID associated with the paused query is a *cursor ID*.

The database returns the resulting batch and cursor ID to the client. MongoDB 
drivers and ``mongosh`` store this data in a client-side cursor instance.
If there are more matching documents when you reach the end of a batch, the 
client-side cursor automatically retrieves the next batch from the server using 
:dbcommand:`getMore`. To see how many results remain in the current batch, use 
:method:`cursor.objsLeftInBatch()`. To check if there are any results remaining
in the current batch or on the server, use :method:`cursor.hasNext()`.

.. _cursor-batches:

Cursor Batches
~~~~~~~~~~~~~~

Cursors return results in batches. The amount of data in a batch must be smaller 
than the :ref:`maximum BSON document size <limit-bson-document-size>` (16 MiB). To 
specify the maximum number of documents allowed in a batch, see :method:`cursor.batchSize()`. 
By default, the batch size for ``find()`` and ``aggregate()`` operations is ``101``.
Subsequent :dbcommand:`getMore` operations issued against the resulting cursor 
have no default batch size, so they are limited only by the 16 mebibyte 
message size.

Sorting
~~~~~~~

For queries that include a sort operation *without* an index, the
server must load all the documents in memory to perform the sort
before returning any results.

Cursor Information
~~~~~~~~~~~~~~~~~~

The :method:`db.serverStatus()` method returns a document that includes
a ``metrics`` field. The ``metrics`` field contains a ``metrics.cursor`` 
field with detailed cursor information. To learn more, see :serverstatus:`metrics.cursor`.

Learn More
----------

- :driver:`MongoDB Drivers </>`
- :ref:`<doc-cursor-methods>`


.. toctree::
   :titlesonly:
   
   Iterate a Cursor </tutorial/iterate-a-cursor/>
   Tailable Cursors </core/tailable-cursors>
