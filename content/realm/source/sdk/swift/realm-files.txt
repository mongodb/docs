.. meta::
   :robots: noindex, nosnippet

.. _ios-realms:

=================================
Work with Realm Files - Swift SDK
=================================

.. toctree::
   :titlesonly:

   Configure & Open a Realm </sdk/swift/realm-files/configure-and-open-a-realm>
   Delete a Realm </sdk/swift/realm-files/delete-a-realm>
   Bundle a Realm </sdk/swift/realm-files/bundle-a-realm>
   Reduce Realm File Size </sdk/swift/realm-files/compacting>
   Encrypt a Realm </sdk/swift/realm-files/encrypt-a-realm>
   Build for tvOS </sdk/swift/realm-files/tvos>

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

A **realm** is the core data structure used to organize data in
Realm. A realm is a collection of the objects that you use 
in your application, called Realm objects, as well as additional metadata 
that describe the objects. To learn how to define a Realm object, see
:ref:`Define an Object Model <ios-define-a-realm-object-schema>`.

.. _ios-realm-file:

Realm Files
-----------

Realm stores a binary encoded version of every object and type in a
realm in a single ``.realm`` file. The file is located at :ref:`a specific 
path <ios-default-and-file-url-realm>` that you can define when you open the 
realm. You can open, view, and edit the contents of these files with 
:ref:`Realm Studio <realm-studio>`.

.. _ios-in-memory-realm:

In-Memory Realms
~~~~~~~~~~~~~~~~

You can also open a realm entirely in memory, which does not create a ``.realm``
file or its associated auxiliary files. Instead the SDK stores objects in memory
while the realm is open and discards them immediately when all instances are
closed.

.. see:: Open an In-Memory Realm

   To open an in-memory realm, refer to :ref:`ios-open-an-in-memory-realm`.

.. _ios-default-realm:

Default Realm
~~~~~~~~~~~~~

Calling :swift-sdk:`Realm()<Structs/Realm.html>` or 
:objc-sdk:`RLMRealm<Classes/RLMRealm.html>` opens the default realm. 
This method returns a realm object that maps to a file named 
``default.realm``. You can find this file:

- iOS: in the Documents folder of your app
- macOS: in the Application Support folder of your app

.. see:: Open a Default Realm

   To open a default realm, refer to :ref:`ios-default-and-file-url-realm`.

Auxiliary Realm Files
~~~~~~~~~~~~~~~~~~~~~

Realm creates additional files for each realm:

- **realm files**, suffixed with "realm", e.g. :file:`default.realm`:
  contain object data.
- **lock files**, suffixed with "lock", e.g. :file:`default.realm.lock`:
  keep track of which versions of data in a realm are
  actively in use. This prevents realm from reclaiming storage space
  that is still used by a client application. 
- **note files**, suffixed with "note", e.g. :file:`default.realm.note`:
  enable inter-thread and inter-process notifications.
- **management files**, suffixed with "management", e.g. :file:`default.realm.management`:
  internal state management.

Deleting these files has important implications.
For more information about deleting ``.realm`` or auxiliary files, see: 
:ref:`Delete a Realm <swift-delete-a-realm>`

Find a Realm File Path
----------------------

The realm file is located at a specific path that you can optionally define 
when you open the realm.

.. include:: /includes/find-realm-file-swift.rst

.. see:: Open a Realm at a Path

   To open a realm at a specific path, refer to :ref:`ios-default-and-file-url-realm`.
