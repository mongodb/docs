=====================
db.grantRolesToRole()
=====================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. method:: db.grantRolesToRole(rolename, roles, writeConcern)

   Grants roles to a :ref:`user-defined role <user-defined-roles>`.

   The :method:`db.grantRolesToRole()` method uses the following syntax:

   .. code-block:: javascript

      db.grantRolesToRole( "<rolename>", [ <roles> ], { <writeConcern> } )

   The :method:`db.grantRolesToRole()` method takes the following
   arguments:


   .. list-table::
      :header-rows: 1
      :widths: 20 20 80
   
      * - Parameter
   
        - Type
   
        - Description
   
      * - ``rolename``
   
        - string
   
        - The name of the role to which to grant sub roles.
          
          
   
      * - ``roles``
   
        - array
   
        - An array of roles from which to inherit.
          
          
   
      * - ``writeConcern``
   
        - document
   
        - Optional. The level of :doc:`write concern </reference/write-concern>` for the
          modification. The ``writeConcern`` document takes the same
          fields as the :dbcommand:`getLastError` command.
          
          
   


   .. |local-cmd-name| replace:: :method:`db.grantRolesToRole()`
   .. include:: /includes/fact-roles-array-contents.rst

   The :method:`db.grantRolesToRole()` method wraps the
   :dbcommand:`grantRolesToRole` command.

Behavior
--------

Replica set
~~~~~~~~~~~

.. |command| replace:: :method:`db.grantRolesToRole()`

.. include:: /includes/fact-management-methods-write-concern.rst

Scope
~~~~~

A role can inherit privileges from other roles in its database. A role
created on the ``admin`` database can inherit privileges from roles in
any database.

Required Access
---------------

.. include:: /includes/access-grant-roles.rst

Example
-------

.. TODO Update this example

The following :method:`db.grantRolesToRole()` operation updates the
``productsReaderWriter`` role in the ``products`` database to :ref:`inherit
<inheritance>` the :ref:`privileges <privileges>` of ``productsReader`` role:

.. code-block:: javascript

   use products
   db.grantRolesToRole(
       "productsReaderWriter",
       [ "productsReader" ],
       { w: "majority" , wtimeout: 5000 }
   )
