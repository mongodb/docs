.. _atlas-cli-deploy-local:

===============================
Create a Local Atlas Deployment
===============================

.. default-domain:: mongodb

.. facet::
   :name: genre
   :values: tutorial

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

This tutorial shows you how to use the ``atlas deployments`` command to 
create a local |service| deployment. In this tutorial, we will deploy a 
single-node replica set on your local computer. You can then manage 
your deployment, and use |fts| and {+avs+}.

You should use local deployments for testing and development only.

.. include:: /includes/fact-atlas-deployments-preview.rst

Supported OS for Local Atlas Deployments
----------------------------------------

.. list-table::
   :header-rows: 1

   * - Operating System
     - Operating System Version
     - Architecture
     - Minimum CPU Cores
     - Minimum Free RAM (GB)
   
   * - MacOS
     - 13.2 and later
     - x86-64, ARM
     - 2
     - 2
   
   * - Red Hat Enterprise Linux / CentOS 
     - 8, 9
     - x86-64, ARM
     - 2
     - 2

.. note::

   Windows and Ubuntu are not fully supported for local |service| 
   deployments during the Public Preview stage.

.. _atlas-cli-deploy-local-reqs:

Complete the Prerequisites
--------------------------

.. include:: /includes/fact-deploy-tutorial-prereqs.rst

.. _atlas-cli-deploy-local-setup:

Create a Local Atlas Deployment
-------------------------------

Use the ``atlas deployments`` command to create a local |service|
deployment.

.. important::

   If your local machine runs MacOS Sequoia 15.2 with the Apple Silicon M4 chip, follow the procedure for 
   :ref:`creating a local Atlas deployment with Docker <atlas-cli-deploy-docker>` 
   instead of this procedure to avoid the error: ``container configuration failed``.  

You can run this command in the following ways: 
      
- **Interactive Mode (Default)**: the command prompts you for the 
  deployment settings and provides default values.
- **Interactive Mode (Custom)**: the command prompts you for the 
  deployment settings and lets you provide custom values. 
- **Non-Interactive Mode**: you run the command with the specified 
  options. The command does not prompt you to provide further values. 
  To learn all of the actions that ``atlas deployments`` supports, see
  :ref:`atlas-deployments`.

Click one of the following tabs to see the command for your preferred 
mode.

.. tabs::

   .. tab:: Interactive (Default)
      :tabid: interactive-default

      .. procedure::
         :style: normal

         .. step:: Run the ``atlas deployments`` command in interactive mode.

            .. code-block:: sh
            
               atlas deployments setup

         .. step:: Specify what to deploy.

            **Example:**

            Specify ``local - Local Database`` and press :kbd:`Enter`..

            .. io-code-block::

               .. input::
                  :language: sh
            
                  ? What would you like to deploy?  [Use arrows to move, type to filter, ? for more help]
                  > local - Local Database
                    atlas - Atlas Database

               .. output::
                  :language: sh

                  [Default Settings]
                  Deployment Name   local50
                  MongoDB Version   7.0
                  Port              27017

         .. step:: Specify how to set up your local Atlas database.

            **Example:**

            Specify ``default - With default settings`` and press 
            :kbd:`Enter`..

            .. io-code-block::
                
               .. input::
                  :language: sh
            
                  ? How do you want to setup your local MongoDB database?  [Use arrows to move, type to filter]
                  > default - With default settings
                    custom - With custom settings
                    cancel - Cancel set up

               .. output::
                  :language: sh

                  Creating your deployment local50 [this might take several minutes]
                  1/4: Downloading and completing configuration...
                  2/4: Starting your local environment...
                  3/4: Downloading MongoDB binaries to your local environment...
                  4/4: Creating your deployment local50...
                  Deployment created!
                  Connection string: mongodb://localhost:27017/?directConnection=true
                  
   .. tab:: Interactive (Custom)
      :tabid: interactive-custom

      .. procedure::
         :style: normal

         .. step:: Run the ``atlas deployments`` command in interactive mode.

            .. code-block:: sh
         
               atlas deployments setup

         .. step:: Specify what to deploy.

            Specify ``local - Local Database`` and press :kbd:`Enter`..

            **Example:**

            .. io-code-block::

               .. input::
                  :language: sh
            
                  ? What would you like to deploy?  [Use arrows to move, type to filter, ? for more help]
                  > local - Local Database
                    atlas - Atlas Database

               .. output::
                  :language: sh

                  [Default Settings]
                  Deployment Name   local50
                  MongoDB Version   7.0
                  Port              27017

         .. step:: Specify how to set up your local Atlas database.

            **Example:**

            Specify ``custom - With custom settings`` and press 
            :kbd:`Enter`..

            .. code-block:: sh
                
               ? How do you want to setup your local MongoDB database?  [Use arrows to move, type to filter]
                 default - With default settings
               > custom - With custom settings
                 cancel - Cancel set up
        
         .. step:: Specify a deployment name.

            **Example:**

            Specify ``myLocalRs`` and press :kbd:`Enter`..

            .. code-block:: sh
            
               ? Deployment Name [This can't be changed later] (local3612) myLocalRs

         .. step:: Specify a MongoDB Version.

            **Example:**

            Specify ``7.0`` and press :kbd:`Enter`..

            .. code-block:: sh
            
               ? MongoDB Version  [Use arrows to move, type to filter]
               > 7.0
                 6.0
                  
         .. step:: Specify a port.

            **Example:**

            Specify ``37018`` and press :kbd:`Enter`..

            .. io-code-block::
                
               .. input::
                  :language: sh
            
                  ? Specify a port (49469) 37018

               .. output::
                  :language: sh

                  Creating your deployment myLocalRs
                  1/2: Starting your local environment...
                  2/2: Creating your deployment myLocalRs...
                  Deployment created!
                  Connection string: mongodb://localhost:37018/?directConnection=true

   .. tab:: Non-Interactive
      :tabid: noninteractive
      
      .. procedure::
         :style: normal

         .. step:: Run the ``atlas deployments`` command with the options.

            **Example:**

            .. io-code-block::
               :copyable: true
         
               .. input::
                  :language: sh
            
                  atlas deployments setup myLocalRs1 --type local --force

               .. output::
                  :language: sh

                  [Default Settings]
                  Deployment Name      myLocalRs1
                  MongoDB Version   7.0
                  Port              49684

                  Creating your deployment myLocalRs1
                  1/2: Starting your local environment...
                  2/2: Creating your deployment myLocalRs1...
                  Deployment created!
                  Connection string: mongodb://localhost:49684/?directConnection=true

                  connection skipped

.. _atlas-cli-deploy-local-manage:

Manage a Local Atlas Deployment
-------------------------------

Use the ``atlas deployments`` command to manage a local |service| 
deployment. You can use the following commands for both local and 
cloud |service| deployments. You can use ``--type local`` or 
``--type atlas`` to run the command for local or cloud 
atlas deployments respectively.

.. procedure::
   :style: normal

   .. step:: List the available deployments.

      **Example:**

      .. io-code-block::
         :copyable: true
         
         .. input::
            :language: sh
            
            atlas deployments list

         .. output::
            :language: sh

            NAME        TYPE    MDB VER   STATE
            local50     LOCAL   7.0.1     IDLE
            local62     LOCAL   7.0.1     IDLE
            myLocalRs   LOCAL   7.0.1     IDLE
            myLocalRs1  LOCAL   7.0.1     IDLE

   .. step:: Download and load the sample data.

      a. Run the following command to download the sample data:

         .. code-block:: sh
            
            curl  https://atlas-education.s3.amazonaws.com/sampledata.archive -o sampledata.archive

      #. Copy and paste the following command into your terminal and 
         replace ``{port-number}`` with the port for your 
         deployment:

         .. code-block:: sh

            mongorestore --archive=sampledata.archive --port={port-number}

   .. step:: Connect to a deployment.

      a. Run the following command to connect to a deployment:

         .. code-block:: sh

            atlas deployments connect
      
      #. Specify the deployment to connect to and press :kbd:`Enter`..

      #. Specify how you want to connect to the deployment and press 
         :kbd:`Enter`..

   .. step:: Pause a deployment.

      a. Run the following command to pause a deployment:

         .. code-block:: sh

            atlas deployments pause

      #. Specify the deployment to pause and press :kbd:`Enter`..

   .. step:: Start a deployment

      a. Run the following command to start a deployment:

         .. code-block:: sh

            atlas deployments start
      
      #. Specify the deployment to start and press :kbd:`Enter`..

   .. step:: Return the logs for the deployment.

      a. Run the following command to return the logs for a deployment:

         .. code-block:: sh

            atlas deployments logs
      
      #. Specify the deployment to return logs for and press :kbd:`Enter`..

   .. step:: Delete a deployment.

      a. Run the following command to delete a deployment:

         .. code-block:: sh

            atlas deployments delete

      #. Specify the deployment to delete and press :kbd:`Enter`.. 
   
      #. Specify ``y`` and press :kbd:`Enter`. to confirm.

.. _atlas-cli-deploy-local-fts:

Use Atlas Search with a Local Atlas Deployment
----------------------------------------------

Use the ``atlas deployments search indexes create`` command to 
create an |fts| search index. You can then run |fts| queries. To 
learn more, see :atlas:`Atlas Search </atlas-search>`.

You can run this command with local and cloud |service| 
deployments. For detailed steps, see 
:ref:`atlas-cli-fts-index-query`.

.. _atlas-cli-deploy-local-avs:

Use {+avs+} with a Local Atlas Deployment
-----------------------------------------------------

Use the ``atlas deployments search indexes create`` command to work 
with {+avs+}. To learn more, see 
:atlas:`How to Index Vector Embeddings for Vector Search
</atlas-search/field-types/knn-vector>`.

You can run this command with local and cloud |service| 
deployments. For detailed steps, see :ref:`atlas-cli-deploy-avs`.

.. include:: /includes/fact-avs-mdb-version.rst

Supported Actions
-----------------

To learn all of the actions that ``atlas deployments`` supports, see
:ref:`atlas-deployments`.

Troubleshoot Errors
-------------------

To learn more about troubleshooting local |service| deployment 
issues, see :ref:`local-deploy-errors`.
