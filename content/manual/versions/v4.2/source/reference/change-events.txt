.. index:: changeStreams notification

.. _change-events:

.. _change-stream-output:

=============
Change Events
=============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Change streams watch collections, databases, or deployments for changes.

When a change occurs on a watched resource, the change stream returns a
change event notification document, with information on the operation and
the changes it made.


.. _change-event-operation-types:

Operation Types
---------------

.. list-table::
   :header-rows: 1

   * - Event
     - Description

   * - :data:`delete`
     - Occurs when a document is removed from the collection. 


   * - :data:`drop`
     - Occurs when a collection is dropped from a database. 

       .. versionadded:: 4.0.1


   * - :data:`dropDatabase`
     - Occurs when a database is dropped. 

       .. versionadded:: 4.0.1


   * - :data:`insert`
     - Occurs when an operation adds documents to a collection.


   * - :data:`invalidate`
     - Occurs when an operation renders the change stream
       invalid.


   * - :data:`rename`
     - Occurs when a collection is renamed.

       .. versionadded:: 4.0.1


   * - :data:`replace`
     - Occurs when an update operation removes a document from 
       a collection and replaces it with a new document.


   * - :data:`update`
     - Occurs when an operation updates a document in a collection.

.. toctree::
   :hidden:

   delete </reference/change-events/delete>
   drop </reference/change-events/drop>
   dropDatabase </reference/change-events/dropDatabase>
   insert </reference/change-events/insert>
   invalidate </reference/change-events/invalidate>
   rename </reference/change-events/rename>
   replace </reference/change-events/replace>
   update </reference/change-events/update>

.. _change-stream-event-id:

Resume Token
------------

Each change event includes an ``_id`` field, which contain a document.  This
document can serve as the :ref:`resume token <change-stream-resume>` when
starting a change stream.

