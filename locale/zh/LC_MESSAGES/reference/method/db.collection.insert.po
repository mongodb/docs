#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/db.collection.insert.txt:3
msgid "db.collection.insert()"
msgstr "db.collection.insert()"

#: ../source/reference/method/db.collection.insert.txt:14
msgid "Definition"
msgstr "说明 "

#: ../source/reference/method/db.collection.insert.txt:18
msgid "Inserts a document or documents into a collection."
msgstr "向集合中插入一条文档记录"

#: ../source/reference/method/db.collection.insert.txt:20
msgid "The :method:`~db.collection.insert()` method has the following syntax:"
msgstr " :method:`~db.collection.insert()` 方法的语法如下："

#: ../source/reference/method/db.collection.insert.txt:37
msgid ""
"The :method:`~db.collection.insert()` returns an object that contains the "
"status of the operation."
msgstr ""
" :method:`~db.collection.insert()` 方法返回一个包含本次操作状态的对象。"

#: ../source/reference/method/db.collection.insert.txt:41
msgid ""
"- A :ref:`writeresults-insert` object for single inserts.  - A :ref:"
"`bulkwriteresults-insert` object for bulk inserts."
msgstr ""
"单条插入时返回 :ref:`writeresults-insert` 对象。批量插入时返回 :ref:"
"`bulkwriteresults-insert` 对象。"

#: ../source/reference/method/db.collection.insert.txt:42
msgid "A :ref:`writeresults-insert` object for single inserts."
msgstr "音条插入时返回 :ref:`writeresults-insert` 对象。"

#: ../source/reference/method/db.collection.insert.txt:44
msgid "A :ref:`bulkwriteresults-insert` object for bulk inserts."
msgstr "批量插入时返回 :ref:`bulkwriteresults-insert` 对象。"

#: ../source/reference/method/db.collection.insert.txt:47
msgid "Behaviors"
msgstr "行为"


#: ../source/reference/method/db.collection.insert.txt:62

msgid "Create Collection"
msgstr "创建集合"

#: ../source/reference/method/db.collection.insert.txt:64
msgid ""
"If the collection does not exist, then the :method:`~db.collection.insert()` "
"method will create the collection."
msgstr "如果集合不存在， :method:`~db.collection.insert()` 方法会创建集合。"

#: ../source/reference/method/db.collection.insert.txt:68
msgid "``_id`` Field"
msgstr "``_id`` 字段"


#: ../source/reference/method/db.collection.insert.txt:77

msgid ""
"If the document contains an ``_id`` field, the ``_id`` value must be unique "
"within the collection to avoid duplicate key error."
msgstr ""
"如果文档记录中指定 ``_id`` 字段，为避免发生主键重复异常， ``_id`` 字段的值必"
"须保证在集合中唯一。"

#: ../source/reference/method/db.collection.insert.txt:81
msgid "Examples"
msgstr "例如"

#: ../source/reference/method/db.collection.insert.txt:83
msgid ""
"The following examples insert documents into the ``products`` collection. If "
"the collection does not exist, the :method:`~db.collection.insert()` method "
"creates the collection."
msgstr ""
"下面这个例子会在 ``products`` 集合中插入文档记录。如果集合不存在， :method:"
"`~db.collection.insert()` 方法会创建集合。"

#: ../source/reference/method/db.collection.insert.txt:88
msgid "Insert a Document without Specifying an ``_id`` Field"
msgstr "插入一个未指定 ``_id`` 字段的文档记录。"

#: ../source/reference/method/db.collection.insert.txt:90
msgid ""
"In the following example, the document passed to the :method:`~db.collection."
"insert()` method does not contain the ``_id`` field:"
msgstr ""
"在下面这个例子中，传给 :method:`~db.collection.insert()` 方法的文档记录中，不"
"包含 ``_id`` 字段："



#: ../source/includes/fact-object-id-may-differ.rst:1
msgid ""
"The ``ObjectId`` values are specific to the machine and time when the "
"operation is run. As such, your values may differ from those in the example."
msgstr ""
"执行操作时 ``ObjectId`` 对象的取值由当前主机和时间决定，所以测试时插入的值会"
"和上面的例子中不同。"

#: ../source/reference/method/db.collection.insert.txt:109
msgid "Insert a Document Specifying an ``_id`` Field"
msgstr "插入一个包含 ``_id`` 字段的文档记录"

#: ../source/reference/method/db.collection.insert.txt:111
msgid ""
"In the following example, the document passed to the :method:`~db.collection."
"insert()` method includes the ``_id`` field. The value of ``_id`` must be "
"unique within the collection to avoid duplicate key error."
msgstr ""
"在下面的例子中，传给 :method:`~db.collection.insert()` 方法的文档记录中包含 "
"``_id`` 字段。为避免发生主键重复异常， ``_id`` 字段的值必须保证在集合中唯一。"

#: ../source/reference/method/db.collection.insert.txt:120
msgid ""
"The operation inserts the following document in the ``products`` collection:"
msgstr "在 ``products`` 集合中插入下列文档记录："

#: ../source/reference/method/db.collection.insert.txt:128
msgid "Insert Multiple Documents"
msgstr "批量插入"

#: ../source/reference/method/db.collection.insert.txt:130
msgid ""
"The following example performs a bulk insert of three documents by passing "
"an array of documents to the :method:`~db.collection.insert()` method. By "
"default, MongoDB performs an *ordered* insert. With *ordered* inserts, if an"
" error occurs during an insert of one of the documents, MongoDB returns on "
"error without processing the remaining documents in the array."
msgstr ""
"下面的例子演示了批量插入， 给 :method:`~db.collection.insert()` 方法传入一个"
"由三个文档记录组成一个数组。"

#: ../source/reference/method/db.collection.insert.txt:137
msgid ""
"The documents in the array do not need to have the same fields. For "
"instance, the first document in the array has an ``_id`` field and a "
"``type`` field. Because the second and third documents do not contain an "
"``_id`` field, :program:`mongod` will create the ``_id`` field for the "
"second and third documents during the insert:"
msgstr ""
"数组中的文档记录不需要包含相同的字段。例如，第一个文档记录中包含 ``_id`` 和 "
"``type`` 字段。由于第二第三两个文档记录中没有 ``_id`` 字段， :program:"
"`mongod` 会在插入时给它们添加 ``_id`` 字段。"

#: ../source/reference/method/db.collection.insert.txt:153
msgid "The operation inserted the following three documents:"
msgstr "本次操作插入如下3个文档记录："

#: ../source/reference/method/db.collection.insert.txt:162
msgid "Perform an Unordered Insert"
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:164
msgid ""
"The following example performs an *unordered* insert of three documents. "
"With *unordered* inserts, if an error occurs during an insert of one of the "
"documents, MongoDB continues to insert the remaining documents in the array."
msgstr ""
"下面例子执行一个有序（ *ordered* ）插入，插入4个文档记录。 *unordered* 无序的"
"插入会在遇到异常时继续执行，有序插入不同，碰到异常时它会直接返回，不会继续插"
"入数组中其余的文档记录。"

#: ../source/reference/method/db.collection.insert.txt:181
msgid "Override Default Write Concern"
msgstr "变量默认的写确认级别"

#: ../source/reference/method/db.collection.insert.txt:183
msgid ""
"The following operation to a replica set specifies a :doc:`write concern "
"</reference/write-concern>` of ``\"w: majority\"`` with a ``wtimeout`` of "
"5000 milliseconds such that the method returns after the write propagates to"
" a majority of the voting replica set members or the method times out after "
"5 seconds."
msgstr ""


#: ../source/reference/method/db.collection.insert.txt:201

msgid "WriteResult"
msgstr "写入结果"

#: ../source/reference/method/db.collection.insert.txt:205
msgid ""
"When passed a single document, :method:`~db.collection.insert()` returns a "
"``WriteResult`` object."
msgstr ""
"传入单条文档记录时， :method:`~db.collection.insert()` 方法返回 :ref:"
"`writeresults-insert` 对象。"

#: ../source/reference/method/db.collection.insert.txt:209
msgid "Successful Results"
msgstr "成功时的返回结果"

#: ../source/reference/method/db.collection.insert.txt:211
msgid ""
"The :method:`~db.collection.insert()` returns a :method:`WriteResult` object "
"that contains the status of the operation. Upon success, the :method:"
"`WriteResult` object contains information on the number of documents "
"inserted:"
msgstr ""
" :method:`~db.collection.insert()` 方法返回一个 :method:`WriteResult` 对象，"
"里面包含本次操作的状态。成功时， :method:`WriteResult` 对象中包含插入成功的文"
"档记录数信息。"

#: ../source/reference/method/db.collection.insert.txt:221
msgid "Write Concern Errors"
msgstr "写确认异常"

#: ../source/reference/method/db.collection.insert.txt:223
msgid ""
"If the :method:`~db.collection.insert()` method encounters write concern "
"errors, the results include the :data:`WriteResult.writeConcernError` field:"
msgstr ""
"如果 :method:`~db.collection.insert()` 方法遇到一个写确认异常，返回结果中会包"
"含 :data:`WriteResult.writeConcernError` 字段："

#: ../source/reference/method/db.collection.insert.txt:238
msgid "Errors Unrelated to Write Concern"
msgstr "与写确认无关的异常"

#: ../source/reference/method/db.collection.insert.txt:240
msgid ""
"If the :method:`~db.collection.insert()` method encounters a non-write "
"concern error, the results include the :data:`WriteResult.writeError` field:"
msgstr ""
"当 :method:`~db.collection.insert()` 方法遇到一个与写确认无关的异常时，返回结"
"果中会包含 :data:`WriteResult.writeError` 字段："

#: ../source/reference/method/db.collection.insert.txt:257
msgid "BulkWriteResult"
msgstr "批量插入结果"

#: ../source/reference/method/db.collection.insert.txt:261
msgid ""
"When passed an array of documents, :method:`~db.collection.insert()` returns "
"a :method:`BulkWriteResult()` object. See :method:`BulkWriteResult()` for "
"details."
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:0
msgid "On this page"
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:52
msgid "Write Concern"
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:56
msgid ""
"The :method:`~db.collection.insert()` method uses the :dbcommand:`insert` "
"command, which uses the default :doc:`write concern </reference/write-"
"concern>`. To specify a different write concern, include the write concern "
"in the options parameter."
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:70
msgid ""
"If the document does not specify an :term:`_id` field, then MongoDB will add"
" the ``_id`` field and assign a unique :method:`ObjectId` for the document "
"before inserting. Most drivers create an ObjectId and insert the ``_id`` "
"field, but the :program:`mongod` will create and populate the ``_id`` if the"
" driver or application does not."
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:98
msgid ""
"During the insert, :program:`mongod` will create the ``_id`` field and "
"assign it a unique :method:`ObjectId` value, as verified by the inserted "
"document:"
msgstr ""

#: ../source/includes/fact-majority-write-concern-change.rst:1
msgid ""
"In previous versions, ``majority`` referred to the majority of all members "
"of the replica set instead of the majority of the voting members."
msgstr ""

#~ msgid "Safe Writes"
#~ msgstr ""

#~ msgid ""
#~ "The :method:`~db.collection.insert()` method uses the :dbcommand:`insert` "
#~ "command, which uses the default write concern. To specify a different write "
#~ "concern, include the write concern in the options parameter."
#~ msgstr ""

#~ msgid ""
#~ "If the document does not specify an :term:`_id` field, then MongoDB will add"
#~ " the ``_id`` field and assign a unique :doc:`/reference/object-id` for the "
#~ "document before inserting. Most drivers create an ObjectId and insert the "
#~ "``_id`` field, but the :program:`mongod` will create and populate the "
#~ "``_id`` if the driver or application does not."
#~ msgstr ""

#~ msgid ""
#~ "During the insert, :program:`mongod` will create the ``_id`` field and "
#~ "assign it a unique :doc:`/reference/object-id` value, as verified by the "
#~ "inserted document:"
#~ msgstr ""

#~ msgid ""
#~ "In previous versions, ``majority`` referred to the majority of all members "
#~ "of the replica set."
#~ msgstr ""
