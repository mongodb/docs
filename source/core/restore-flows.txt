=============
Restore Flows
=============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Introduction
------------

When you request a restore, the :term:`Backup Daemon` prepares the
:term:`snapshot` you receive. If you choose to restore manually, you either
download the files from |mms| or the Backup Daemon securely copies the files
to your destination server.

This page describes the flows for manual restores of scheduled snapshots and
custom snapshots according to delivery option.

Restore a Backup using ``HTTP`` 
-------------------------------

.. _restore-http-snapshot:

Restoring a Completed Snapshot using ``HTTP``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /images/http-pull-snapshot-restore.rst

When you restore a snapshot using ``HTTP``, the Backup Daemon creates and
displays a download link in |mms| to the appropriate snapshot in snapshot
storage.

When you click the download link, |mms| streams the snapshot archive to the
destination system.

.. note::
   This restore method requires *no* space on the server hosting the Backup
   Daemon: the file passes directly from the snapshot storage to the
   destination server.

.. _restore-http-point:

Restoring a Specific Point in Time using ``HTTP``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /images/http-pull-point-in-time-restore.rst

*The* ``HTTP`` *point-in-time restore follows the same flow as the* 
``HTTP`` *snapshot restore with added steps to apply the* :term:`oplog` *.*

When you restore to a point in time using ``HTTP``, the Backup Daemon:

#. Retrieves the snapshot that immediately precedes the desired point in time.

#. Writes this snapshot to a temporary directory in the ``HEAD`` directory on
   server that hosts the Backup Daemon.

#. Retrieves oplog entries from the :term:`oplog store <Oplog Store Database>`.

#. Applies the oplog entries which creates a custom snapshot from that point 
   in time.

#. Writes the new custom snapshot back to the snapshot storage.
 
#. Creates and displays a download link in |mms| to the appropriate snapshot in snapshot storage.

When you click the download link, |mms| streams the snapshot archive to the
destination system.

.. note::
   Restoring to a point in time requires sufficient space in the ``HEAD``
   directory on the server hosting the Backup Daemon for the snapshot files
   and oplog.

Restore an Archived Backup Using Secure Copy
--------------------------------------------

.. _restore-scp-archive-snapshot:

Restoring an Archived Snapshot using Secure Copy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /images/scp-snapshot-archive.rst

When you restore a snapshot using ``SCP``, the Backup Daemon:

#. Retrieves the snapshot from the snapshot storage and writes it to its disk.

#. Copies the archive securely to the target directory on a destination
   server of your choosing. The format of the snapshot depends on where and 
   how it was stored:

   * If the snapshot was stored on a :term:`blockstore <Backup Blockstore Database>`, 
     the Backup Daemon combines the database files into a snapshot
     archive then compresses that archive (``tar.gz``).

   * If the snapshot was stored on a file system store, the Backup Daemon
     returns a compressed snapshot archive (``tar.gz``) if the snapshot was
     compressed when the backup was taken or as an uncompressed snapshot 
     archive (``tar``) if it was not.

.. note::
   This restore method requires that you have sufficient space in the ``HEAD``
   directory on the server hosting the Backup Daemon for the archive.

.. _restore-scp-archive-point:

Restoring an Archived Snapshot from a Specific Point in Time using Secure Copy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /images/scp-point-in-time-archive.rst

*The* ``SCP`` *point-in-time restore follows the same flow as the* 
``SCP`` *snapshot restore with added steps to apply the* :term:`oplog` *.*

When you restore from a point in time using ``SCP``, the Backup Daemon:

#. Retrieves the snapshot that immediately precedes the point in time.

#. Writes this snapshot to a temporary directory in the ``HEAD`` directory on
   server that hosts the Backup Daemon.

#. Retrieves all oplog entries since the last snapshot from the 
   :term:`oplog store <Oplog Store Database>`.

#. Applies the oplog entries which creates a custom snapshot from that point
   in time.

#. Combines the snapshot into an uncompressed archive (``tar``) or a
   compressed archive (``tar.gz``) if the snapshot was compressed when it was
   backed up.

#. Copies the archive securely to the target directory on a destination 
   server of your choosing.

.. note::
   Restoring to a point in time requires that you have sufficient space for the
   uncompressed snapshot files, oplog and snapshot archive in the ``HEAD``
   directory on the server hosting the Backup Daemon.

.. _scp-individual-files:

Restore the Individual Database Files using Secure Copy
-------------------------------------------------------

.. _restore-scp-files-snapshot:

Restoring the Unarchived Database Files of a Snapshot using Secure Copy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /images/scp-snapshot-individual-files.rst

When you restore the individual database files contained in a snapshot using
``SCP``, the Backup Daemon:

#. Retrieves the snapshot files from the snapshot storage. 

#. Copies the individual files securely to the target directory on a 
   destination server of your choosing.

.. note::
   This restore method requires *no* space on the server hosting the Backup
   Daemon: the file passes directly from the snapshot storage to the
   destination server. 

   The destination server requires sufficient space for the uncompressed
   files.

.. _restore-scp-files-point:

Restoring the Unarchived Database Files from a Specific Point in Time using Secure Copy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /images/scp-point-in-time-individual-files.rst

*The* ``SCP`` *point-in-time restore follows the same flow as the* 
``SCP`` *snapshot restore with added steps to apply the* :term:`oplog` *.*

When you restore individual files to a specific point in time using ``SCP``,
the Backup Daemon:

#. Retrieves the snapshot that immediately precedes the point in time.

#. Writes this snapshot to a temporary directory in the ``HEAD`` directory on
   server that hosts the Backup Daemon.

#. Retrieves all oplog entries since the last snapshot from the 
   :term:`oplog store <Oplog Store Database>`.

#. Applies the oplog entries to the temporary snapshot. This creates a custom
   snapshot up to requested point in time.

#. Copies the individual files securely to the target directory on a
   destination server of your choosing.

   The destination server requires sufficient space for the uncompressed
   files.

.. note::
   Restoring to a point in time requires that you have sufficient space on the
   server hosting the Backup Daemon for the individual snapshot files and
   oplog.

   The destination server requires sufficient space for the uncompressed
   data files. 