ref: fts-sort-by-numbers-tutorial-cs
level: 4
stepnum: 1
title: "Set up and initialize the .NET/C# project for the query."
content: |
  a. Create a new directory called ``sort-by-numbers-example`` and
     initialize your project with the ``dotnet new`` command.

     .. code-block:: bash

        mkdir sort-by-numbers-example
        cd sort-by-numbers-example
        dotnet new console

  #. Add the .NET/C# Driver to your project as a dependency.

     .. code-block:: bash

        dotnet add package MongoDB.Driver

---
ref: create-sort-numbers-query-cs
level: 4
stepnum: 2
title: "Create the query in the ``Program.cs`` file."
content: |
  a. Replace the contents of the ``Program.cs`` file with the
     following code.
     
     The code example performs the following tasks:

     - Imports ``mongodb`` packages and dependencies.
     - Establishes a connection to your |service| cluster.
     - .. include:: /includes/fts/extracts/fts-sort-by-numbers-constant-desc.rst 

       .. include:: /includes/fts/extracts/fts-sort-by-numbers-stage.rst

     - Iterates over the cursor to print the documents that match the 
       query.

     .. literalinclude:: /includes/fts/sort/numbers-query.cs
        :language: csharp
        :linenos:
        :dedent:
        :emphasize-lines: 9

  #. .. include:: /includes/fts/facts/fact-fts-driver-connection-string.rst

---
ref: run-sort-numbers-query-cs
level: 4
stepnum: 3
title: "Compile and run the ``Program.cs`` file."
content: |

  .. io-code-block::
     :copyable: true

     .. input::
        :language: bash

        dotnet run Program.cs

     .. output::
        :language: json
        :visible: true
          
        { "title" : "12 Years a Slave", "awards" : { "wins" : 267 } }
        { "title" : "Gravity", "awards" : { "wins" : 231 } }
        { "title" : "Gravity", "awards" : { "wins" : 231 } }
        { "title" : "Birdman: Or (The Unexpected Virtue of Ignorance)", "awards" : { "wins" : 210 } }
        { "title" : "Boyhood", "awards" : { "wins" : 185 } }

...
