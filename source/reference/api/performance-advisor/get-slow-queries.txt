===================
Get Slow Query Logs
===================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Retrieves log lines for slow queries as determined by the
:doc:`Performance Advisor </tutorial/performance-advisor>`.

.. note::

   Performance Advisor users must have the necessary :ref:`access
   privileges <performance-advisor-permissions>` to view performance
   data. Users who do not have the necessary permissions will not be
   able to view any log data in the ``slowQueryLogs`` API endpoint
   responses. 

.. include:: /includes/api/base-api-uri.rst

Resource
--------

.. code-block:: http

   GET /groups/{GROUP-ID}/hosts/{HOST-ID}/performanceAdvisor/slowQueryLogs

Request Path Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :widths: 20 20 60
   :header-rows: 1
   :stub-columns: 1

   * - Parameter
     - Type
     - Description

   * - GROUP-ID
     - string
     - *(Required.)* Unique identifier of the group that owns this MongoDB process.

   * - HOST-ID
     - string
     - *(Required.)* Unique identifier of the host for the MongoDB process.

Request Query Parameters
~~~~~~~~~~~~~~~~~~~~~~~~
All parameters are optional.

.. list-table::
   :widths: 10 10 70 10
   :stub-columns: 1

   * - pretty
     - boolean
     - Indicates whether the response body should be in a 
       `prettyprint <https://en.wikipedia.org/wiki/Prettyprint?oldid=791126873>`_ format.
     - ``false``

   * - envelope
     - boolean
     - Indicates whether or not to wrap the response in an 
       envelope.
     - ``false``

   * - since
     - long
     - Point in time from which to retrieve slow query logs,
       stated in `milliseconds since epoch
       <https://currentmillis.com/>`_.
     - previous 24 hours 

   * - duration
     - long
     - Length of time in milliseconds during which to find
       slow query logs among the managed namespaces in the cluster.
     - up to the present time

   * - namespaces
     - string
     - Namespaces from which to retrieve suggested slow query logs.
       A namespace consists of the database and collection resource
       separated by a ``.``, such as ``<database>.<collection>``.

       To specify multiple namespaces, pass the parameter multiple times
       using an ampersand (``&``) as a delimiter, once for each
       namespace.

       .. example::

          ?namespaces=data.stocks&namespaces=data.zips&pretty=true
     - all

   * - nLogs
     - long
     - Maximum number of log lines to return.
     - ``20000``

Request Body Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/api/no-body-parameters.rst

Response
--------

.. list-table::
   :widths: 15 15 70
   :header-rows: 1
   :stub-columns: 1

   * - Name
     - Type
     - Description

   * - slowQueries
     - array of documents
     - A list of documents with information about slow queries as
       detected by the Performance Advisor.

   * - slowQueries[n].line
     - string
     - The raw log line pertaining to the slow query.

   * - slowQueries[n].namespace
     - string
     - The namespace in which the slow query ran.

Example Request
---------------

.. cssclass:: copyable-code
.. code-block:: sh

   curl --user '{PUBLIC-KEY}:{PRIVATE-KEY}' --digest \ 
    --header 'Accept: application/json' \ 
    --include \ 
    --request GET 'https://{OPSMANAGER-HOST}:{PORT}/api/public/v1.0/groups/{GROUP-ID}/hosts/{HOST-ID}/performanceAdvisor/slowQueryLogs?pretty=true' 

Example Response
----------------

Response Header
~~~~~~~~~~~~~~~

.. include:: /includes/api/api-headers/401.rst

.. include:: /includes/api/api-headers/200.rst

Response Body
~~~~~~~~~~~~~

.. code-block:: json
   :copyable: false

   {
     "slowQueries" : [ {
       "line" : "2018-08-16T22:53:43.447+0000 I COMMAND  [conn10614] command myDb.users appName: \"MongoDB Shell\" command: find { find: \"users\", filter: { emails: \"tocde@fijoow.to\" }, lsid: { id: UUID(\"832b4b0e-085a-480e-b470-16a0994dc7cb\") }, $clusterTime: { clusterTime: Timestamp(1534460016, 1)...",
      "namespace" : "myDb.users"
     }, {
       "line" : "2018-08-16T22:54:32.705+0000 I COMMAND  [conn10614] command myDb.users appName: \"MongoDB Shell\" command: find { find: \"users\", filter: { emails: \"la@sa.kp\" }, lsid: { id: UUID(\"832b4b0e-085a-480e-b470-16a0994dc7cb\") }, $clusterTime: { clusterTime: Timestamp(1534460056, 1), ...",
       "namespace" : "myDb.users"
     } ]
   }
