.. _2d-index-create:
.. _create-2d-index:

=================
Create a 2d Index
=================

.. default-domain:: mongodb

.. facet::
   :name: genre
   :values: tutorial

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

2d indexes support queries on location data in a :ref:`flat, Euclidean
plane <geospatial-geometry>`.

To create a 2d index, use the :method:`db.collection.createIndex()`
method. The index type is ``"2d"``:

.. include:: /includes/indexes/code-examples/create-2d-index.rst

About this Task
---------------

- The values in the ``<location field>`` must be :ref:`legacy coordinate
  pairs <geospatial-legacy>`.

- When specifying legacy coordinate pairs, list the **longitude** first,
  and then **latitude**.

  - Valid longitude values are between ``-180`` and ``180``, both
    inclusive.

  - Valid latitude values are between ``-90`` and ``90``, both
    inclusive.

Before You Begin
----------------

.. include:: /includes/indexes/2d-sample-docs.rst

Procedure
---------

Create a 2d index on the ``address`` field:

.. code-block:: javascript

   db.contacts.createIndex( { address : "2d" } )

Next Steps
----------

After you create a 2d index, you can use your 2d index to support
calculations on location data. To see examples of queries that use 2d
indexes, see:

-  :ref:`2d-index-proximity-query`

Learn More
----------

- :ref:`2d-index-define-location-precision`

- :ref:`2d-index-define-location-range`

- :ref:`geospatial-restrictions`

- To create an index that supports calculations on spherical surfaces,
  see :ref:`2dsphere-index`.

.. toctree::
   :titlesonly:
   :hidden:

   Location Precision </core/indexes/index-types/geospatial/2d/create/define-location-precision>
   Location Range </core/indexes/index-types/geospatial/2d/create/define-location-range>
