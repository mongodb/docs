# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: 2014-04-08 19:32+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-manual/language/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# 088e39ceaf3143d4b2da500a3a102b10
#: ../source/core/bulk-inserts.txt:5
msgid "Bulk Inserts in MongoDB"
msgstr ""

# e438b156888943e29f68963f92585431
#: ../source/core/bulk-inserts.txt:9
msgid ""
"In some situations you may need to insert or ingest a large amount of data "
"into a MongoDB database. These *bulk inserts* have some special "
"considerations that are different from other write operations."
msgstr ""

# d2be83b4fe67444a99e73d89269f6705
#: ../source/core/bulk-inserts.txt:17
msgid "Use the ``insert()`` Method"
msgstr ""

# c97a3d49ba06402dae21c09b49d5c01d
#: ../source/core/bulk-inserts.txt:19
msgid ""
"The :method:`insert() <db.collection.insert()>` method, when passed an array"
" of documents, performs a bulk insert, and inserts each document atomically."
" Bulk inserts can significantly increase performance by amortizing "
":ref:`write concern <write-operations-write-concern>` costs."
msgstr ""

# 662ad32ff1054e72961276c92d8df19e
#: ../source/core/bulk-inserts.txt:24
msgid ""
":method:`insert() <db.collection.insert()>` in the :program:`mongo` shell "
"gained support for bulk inserts in version 2.2."
msgstr ""

# 61da9d42eb014e47a606b4559a8417d8
#: ../source/core/bulk-inserts.txt:28
msgid ""
"In the :doc:`drivers </applications/drivers>`, you can configure write "
"concern for batches rather than on a per-document level."
msgstr ""

# 6cb52a209743497da55b6da2948cdf01
#: ../source/core/bulk-inserts.txt:31
msgid ""
"Drivers have a ``ContinueOnError`` option in their insert operation, so that"
" the bulk operation will continue to insert remaining documents in a batch "
"even if an insert fails."
msgstr ""

# 563c0e72daf84ceb9308947c571a3b83
#: ../source/core/bulk-inserts.txt:37
msgid ""
"If multiple errors occur during a bulk insert, clients only receive the last"
" error generated."
msgstr ""

# 033c559aeb5c42c8a2ba4f85bd46d73a
#: ../source/core/bulk-inserts.txt:42
msgid ""
":doc:`Driver documentation </applications/drivers>` for details on "
"performing bulk inserts in your application. Also see :doc:`/core/import-"
"export`."
msgstr ""

# 69c11b2c862d4417b96d2e678a23483c
#: ../source/core/bulk-inserts.txt:47
msgid "Bulk Inserts on Sharded Clusters"
msgstr ""

# 241b4e78f8dd4d43afacfb73d76baeb7
#: ../source/core/bulk-inserts.txt:49
msgid ""
"While ``ContinueOnError`` is optional on unsharded clusters, all bulk "
"operations to a :term:`sharded collection <sharded cluster>` run with "
"``ContinueOnError``, which cannot be disabled."
msgstr ""

# 76fd6a9a552c4ee4b6752a4269ff6bc5
#: ../source/core/bulk-inserts.txt:53
msgid ""
"Large bulk insert operations, including initial data inserts or routine data"
" import, can affect :term:`sharded cluster` performance. For bulk inserts, "
"consider the following strategies:"
msgstr ""

# ca3939d94510403bb6a9c02302d4a102
#: ../source/core/bulk-inserts.txt:58
msgid "Pre-Split the Collection"
msgstr ""

# 333db512899b44d3a685cde563c56838
#: ../source/core/bulk-inserts.txt:60
msgid ""
"If the sharded collection is empty, then the collection has only one initial"
" :term:`chunk`, which resides on a single shard. MongoDB must then take time"
" to receive data, create splits, and distribute the split chunks to the "
"available shards. To avoid this performance cost, you can pre-split the "
"collection, as described in :doc:`/tutorial/split-chunks-in-sharded-"
"cluster`."
msgstr ""

# 094dd220d3ba437d8f479c533a86e085
#: ../source/core/bulk-inserts.txt:68
msgid "Insert to Multiple ``mongos``"
msgstr ""

# f55ed762d0274492ad09015a7a34bc78
#: ../source/core/bulk-inserts.txt:70
msgid ""
"To parallelize import processes, send insert operations to more than one "
":program:`mongos` instance. Pre-split empty collections first as described "
"in :doc:`/tutorial/split-chunks-in-sharded-cluster`."
msgstr ""

# 0779a37bceea4b99b4a54c962ed463c5
#: ../source/core/bulk-inserts.txt:75
msgid "Avoid Monotonic Throttling"
msgstr ""

# 555cad03efa549d9a950bdcd40fa0ac5
#: ../source/core/bulk-inserts.txt:77
msgid ""
"If your shard key increases monotonically during an insert, then all "
"inserted data goes to the last chunk in the collection, which will always "
"end up on a single shard. Therefore, the insert capacity of the cluster will"
" never exceed the insert capacity of that single shard."
msgstr ""

# 40b70f1981d7404e9d44164b98fcb975
#: ../source/core/bulk-inserts.txt:82
msgid ""
"If your insert volume is larger than what a single shard can process, and if"
" you cannot avoid a monotonically increasing shard key, then consider the "
"following modifications to your application:"
msgstr ""

# fd374b0cb85f4f4c9dc984c1769a7ede
#: ../source/core/bulk-inserts.txt:86
msgid ""
"Reverse the binary bits of the shard key. This preserves the information and"
" avoids correlating insertion order with increasing sequence of values."
msgstr ""

# 3e2275daf53f4446867c8ec4a84d610a
#: ../source/core/bulk-inserts.txt:90
msgid "Swap the first and last 16-bit words to \"shuffle\" the inserts."
msgstr ""

# 9ff0491c2f8b4aea92080e7bb589c140
#: ../source/core/bulk-inserts.txt:0
msgid "Example"
msgstr ""

# fedb397606ec48538f670a56484d77a2
#: ../source/core/bulk-inserts.txt:112
msgid ""
":ref:`sharding-shard-key` for information on choosing a sharded key. Also "
"see :ref:`Shard Key Internals <sharding-internals-shard-keys>` (in "
"particular, :ref:`sharding-internals-operations-and-reliability`)."
msgstr ""
