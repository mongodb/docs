.. include:: /includes/java-sync-links.rst
.. include:: /includes/java-async-links.rst

.. _read-operations-projection:
.. _projection:
.. _projections:

===================================
Project Fields to Return from Query
===================================

.. facet::
   :name: programming_language
   :values: shell, csharp, go, java, python, php, ruby, scala, javascript/typescript, kotlin

.. meta:: 
   :keywords: motor, java sync, java async, reactive streams, code example, node.js, compass, kotlin coroutine
   :description: Limit the data that MongoDB queries return using projection documents to specify or restrict fields.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1

You can use projection to select which document fields to return from a
query by using the following methods:

.. |atlas-ref| replace:: :ref:`project-fields-atlas-ui`
.. include:: /includes/fact-methods.rst

By default, queries in MongoDB return all fields in matching documents.
To limit the amount of data that MongoDB sends to applications, you can
include a :term:`projection` document to specify or restrict fields to
return.

.. composable-tutorial::
   :options: interface, language
   :defaults: driver, nodejs

   .. selected-content:: 
      :selections: shell, None

      .. include:: /includes/crud/shell-project-fields.rst

   .. selected-content:: 
      :selections: driver, python

      .. include:: /includes/crud/python-project-fields.rst

   .. selected-content:: 
      :selections: driver, java-sync

      .. include:: /includes/crud/java-sync-project-fields.rst

   .. selected-content:: 
      :selections: driver, java-async

      .. include:: /includes/crud/java-async-project-fields.rst

   .. selected-content:: 
      :selections: driver, kotlin-coroutine

      .. include:: /includes/crud/kotlin-coroutine-project-fields.rst

   .. selected-content:: 
      :selections: driver, nodejs

      .. include:: /includes/crud/nodejs-project-fields.rst

   .. selected-content:: 
      :selections: driver, php

      .. include:: /includes/crud/php-project-fields.rst

   .. selected-content:: 
      :selections: driver, ruby

      .. include:: /includes/crud/ruby-project-fields.rst

   .. selected-content:: 
      :selections: driver, scala

      .. include:: /includes/crud/scala-project-fields.rst

   .. selected-content:: 
      :selections: driver, csharp

      .. include:: /includes/crud/csharp-project-fields.rst

   .. selected-content:: 
      :selections: driver, c

      .. include:: /includes/crud/c-project-fields.rst
      
   .. selected-content:: 
      :selections: driver, go

      .. include:: /includes/crud/go-project-fields.rst

   .. selected-content:: 
      :selections: driver, motor

      .. include:: /includes/crud/motor-project-fields.rst

   .. selected-content:: 
      :selections: compass, None

      .. include:: /includes/crud/compass-project-fields.rst

   .. selected-content:: 
      :selections: atlas-ui, None

      .. _project-fields-atlas-ui:

      Project Fields to Return from a Query with {+atlas+}
      -------------------------------------------------------------------

      The example in this section uses the :atlas:`sample movies dataset 
      </sample-data/sample-mflix/>`. To learn how to load the sample dataset 
      into your {+atlas+} deployment, see :atlas:`Load Sample Data 
      </sample-data/#std-label-load-sample-data>`.

      To project fields to return from a query in {+atlas+}, follow these
      steps:

      .. procedure:: 
         :style: normal

         .. include:: /includes/atlas-nav/steps-db-deployments-page.rst

         .. step:: Navigate to the collection

            .. include:: /includes/steps-nav-atlas-sample-movies.rst

         .. step:: Specify the Filter field
            
            a. Click :guilabel:`More Options` on the right side of the
               :guilabel:`Filter` field.
            #. Specify the query filter.

               .. include:: /includes/steps-specify-query-filter.rst

               .. code-block:: javascript

                  { year: 1924 }

         .. step:: Specify the fields to project

            Specify the field(s) to return in the query results.

            Copy the following project document into the :guilabel:`Project`
            bar:

            .. code-block:: javascript

               { title: 1, plot: 1 }

         .. step:: Click Apply

            This query filter returns the following fields for all documents
            in the ``sample_mflix.movies`` collection where the ``year``
            field matches ``1924``:

            - ``_id``
            - ``title``
            - ``plot``

            {+atlas+} returns the ``_id`` field by default. To omit the
            ``_id`` field, copy the following project document
            into the :guilabel:`Project` bar and click :guilabel:`Apply`:

            .. code-block:: javascript

               { title: 1, plot: 1, _id: 0 }

Additional Considerations
-------------------------

- .. |$project| replace:: :pipeline:`$project` aggregation

  .. include:: /includes/aggregation/fact-project-stage-placement.rst

- MongoDB enforces additional restrictions with regards to projections. 
  See :limit:`Projection Restrictions` for details.

.. seealso::

   - :ref:`find-projection`

   - :doc:`/tutorial/query-documents`
