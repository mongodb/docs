#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"


#: ../source/core/index-hashed.txt:61

msgid ""
"You may not create compound indexes that have ``hashed`` index fields or "
"specify a unique constraint on a ``hashed`` index; however, you can create "
"both a ``hashed`` index and an ascending/descending (i.e. non-hashed) index "
"on the same field: MongoDB will use the scalar index for range queries."
msgstr ""
"您可能无法创建一个带有 ``哈希`` 索引键的复合索引或者对 ``哈希`` 索引施加唯一"
"性的限制。但是，您可以在同一个键上同时创建一个 ``哈希`` 索引和一个递增/递减"
"(例如，非哈希)的索引，这样MongoDB对于范围查询就会自动使用非哈希的索引。"

#: ../source/includes/warning-hashed-index-floating-point.rst:3
msgid ""
"MongoDB ``hashed`` indexes truncate floating point numbers to 64-bit "
"integers before hashing. For example, a ``hashed`` index would store the "
"same value for a field that held a value of ``2.3``, ``2.2``, and ``2.9``. "
"To prevent collisions, do not use a ``hashed`` index for floating point "
"numbers that cannot be reliably converted to 64-bit integers (and then back "
"to floating point). MongoDB ``hashed`` indexes do not support floating point "
"values larger than 2\\ :sup:`53`."
msgstr ""
"MongoDB的 ``哈希`` 索引会在哈希前将浮点数字截断为64位整数。例如，如果一个键上"
"存储的值是 ``2.3``, ``2.2``, 或者 ``2.9`` ，哈希索引存储的哈希值会是一样的。"
"为了避免冲突，请不要对浮点数字使用 ``哈希`` 索引，如果这个这个数组无法可靠的"
"转换到64位整数(然后再转换回浮点数字)。MongoDB ``哈希`` 索引不支持大于 2\\ :"
"sup:`53` 的浮点数字。"

#: ../source/core/index-hashed.txt:1
msgid "index"
msgstr ""

#: ../source/core/index-hashed.txt:1
msgid "hashed"
msgstr ""

#: ../source/core/index-hashed.txt:7
msgid "Hashed Indexes"
msgstr ""

#: ../source/core/index-hashed.txt:0
msgid "On this page"
msgstr ""

#: ../source/core/index-hashed.txt:19
msgid ""

"Hashed indexes maintain entries with hashes of the values of the indexed "
"field."
msgstr ""


#: ../source/core/index-hashed.txt:22
msgid ""

"Hashed indexes support :doc:`sharding </core/sharding-introduction>` using "
"hashed shard keys. :ref:`Hashed based sharding <sharding-hashed-sharding>` "
"uses a hashed index of a field as the shard key to partition data across "
"your sharded cluster."
msgstr ""

#: ../source/core/index-hashed.txt:27
msgid ""
"Using a hashed shard key to shard a collection results in a more random "
"distribution of data. See :doc:`/tutorial/shard-collection-with-a-hashed-"
"shard-key` for more details."
msgstr ""

#: ../source/core/index-hashed.txt:33
msgid "Hashing Function"
msgstr ""

#: ../source/core/index-hashed.txt:35
msgid ""
"Hashed indexes uses a hashing function to compute the hash of the value of "
"the index field. The hashing function collapses embedded documents and "
"computes the hash for the entire value but does not support multi-key (i.e. "
"arrays) indexes."
msgstr ""

#: ../source/includes/tip-applications-do-not-need-to-compute-hashes.rst:0
msgid "Tip"
msgstr ""

#: ../source/includes/tip-applications-do-not-need-to-compute-hashes.rst:3
msgid ""
"MongoDB automatically computes the hashes when resolving queries using "
"hashed indexes.  Applications do **not** need to compute hashes."
msgstr ""

#: ../source/core/index-hashed.txt:43
msgid "Create a Hashed Index"
msgstr ""

#: ../source/core/index-hashed.txt:45
msgid ""
"To create a :ref:`hashed index <index-type-hashed>`, specify ``hashed`` as "
"the value of the index key, as in the following example:"
msgstr ""

#: ../source/core/index-hashed.txt:55
msgid "Considerations"
msgstr ""

#: ../source/core/index-hashed.txt:57
msgid ""
"MongoDB supports ``hashed`` indexes of any single field. The hashing "
"function collapses embedded documents and computes the hash for the entire "
"value, but does not support multi-key (i.e. arrays) indexes."
msgstr ""

#~ msgid "Hashed Index"
#~ msgstr ""

#~ msgid ""
#~ "Hashed indexes maintain entries with hashes of the values of the indexed "
#~ "field. The hashing function collapses embedded documents and computes the "
#~ "hash for the entire value but does not support multi-key (i.e. arrays) "
#~ "indexes."
#~ msgstr ""

#~ msgid ""
#~ "Hashed indexes support :doc:`sharding </core/sharding-introduction>` a "
#~ "collection using a :ref:`hashed shard key <sharding-hashed-sharding>`. Using"
#~ " a hashed shard key to shard a collection ensures a more even distribution "
#~ "of data. See :doc:`/tutorial/shard-collection-with-a-hashed-shard-key` for "
#~ "more details."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB can use the ``hashed`` index to support equality queries, but "
#~ "``hashed`` indexes do not support range queries."
#~ msgstr ""

#~ msgid ""
#~ "Create a ``hashed`` index using an operation that resembles the following:"
#~ msgstr ""

#~ msgid ""
#~ "This operation creates a hashed index for the ``active`` collection on the "
#~ "``a`` field."
#~ msgstr ""

