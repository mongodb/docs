=====================
$bitXor (aggregation)
=====================

.. default-domain:: mongodb

.. contents:: On this page
  :local:
  :backlinks: none
  :depth: 1
  :class: singlecol

Definition
----------

.. versionadded:: 6.3

.. expression:: $bitXor

    Returns the result of a bitwise ``xor`` (exclusive or) operation on an 
    array of ``int`` and ``long`` values. 

Syntax 
------

The ``$bitXor`` operator has the following syntax: 

.. code-block:: javascript

      { $bitXor: [ <expression1>, <expression2>, ... ] }

Behavior
--------

.. include:: /includes/fact-bitwise-integer-long-results.rst

.. include:: /includes/fact-mongosh-integer-long-constructors.rst

.. include:: /includes/fact-bitwise-type-error.rst

If the argument is an empty array, the operation returns ``NumberInt(0)``.

If any of the arguments in the array equate to ``null``, the operation returns 
``null``. 

Example
--------

The example on this page uses the ``switches`` collection: 

.. code-block:: javascript 

    db.switches.insertMany( [
        { _id: 0, a: NumberInt(0), b: NumberInt(127) },
        { _id: 1, a: NumberInt(2), b: NumberInt(3) },
        { _id: 2, a: NumberInt(3), b: NumberInt(5) }
    ] )

The following aggregation uses the ``$bitXor`` operator in the 
:pipeline:`$project` stage:

.. code-block:: javascript 

    db.switches.aggregate( [
      { 
        $project: { 
          result: { 
            $bitXor: ["$a", "$b"]
          }
        }
      }
    ])

The operation returns the following results:

.. code-block:: javascript 
  :copyable: false

    [
      { _id: 0, result: 127 },
      { _id: 1, result: 1 },
      { _id: 2, result: 6 }
    ]

Learn More 
----------

- :ref:`aggregation-pipeline-operators`

- :ref:`update-bit`
