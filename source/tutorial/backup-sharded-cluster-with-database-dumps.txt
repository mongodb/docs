============================================
Backup a Sharded Cluster with Database Dumps
============================================

.. default-domain:: mongodb

Overview
--------

This document describes a procedure for taking a backup of all
components of a sharded cluster. This procedure
uses :program:`mongodump` to create dumps of the :program:`mongod`
instance. An alternate procedure uses file system snapshots to capture
the backup data, and may be more efficient in some situations if your
system configuration allows file system backups. See
:doc:`/administration/backup-sharded-clusters` for more
information.

See :doc:`/core/backups` and
:doc:`/administration/backup-sharded-clusters` for complete
information on backups in MongoDB and backups of sharded clusters
in particular.

Prerequisites
-------------

.. include:: /includes/note-shard-cluster-backup.rst

.. include:: /includes/access-mongodump-collections.rst

.. include:: /includes/access-mongodump-users.rst

Procedure
---------

In this procedure, you will stop the cluster balancer and take a backup
up of the :term:`config database`, and then take backups of each
shard in the cluster using :program:`mongodump` to capture the backup
data. If you need an exact moment-in-time snapshot of the system, you will
need to stop all application writes before taking the filesystem
snapshots; otherwise the snapshot will only approximate a moment of
time.

For approximate point-in-time snapshots, taking the backup from a
secondary member of the replica set that provides each shard can improve
the quality of the backup while minimizing impact on the cluster.

Because this procedure locks replica sets and, therefore, stops all writes
to the replica sets, there is no need to use an :term:`oplog` containing
any operations made during the :program:`mongodump` operation. Locked
replica sets catch up with the state of the primary when the procedure is
done.

.. include:: /includes/steps/backup-sharded-clusters-dumps.rst

