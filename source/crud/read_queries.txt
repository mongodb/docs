:template: guide

===================================
Read Data from MongoDB With Queries
===================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

In the first :doc:`/server/read` guide, you retrieved a
document from the ``inventory`` collection. In this guide, you
will:

- use the ``insertMany`` command to insert more documents into the collection
- query the documents

.. time:: 30

What You'll Need
----------------

.. include:: /includes/prereqs_read_CRUD.rst

Check Your Environment
----------------------

.. include:: /includes/check_for_drivers_install.rst

Procedure
---------

.. tabs-selector:: drivers

Import Data and Query It
~~~~~~~~~~~~~~~~~~~~~~~~

In the first part of this guide, you will insert more documents and
retrieve some of these documents from MongoDB using a simple query.

.. procedure::
   :style: normal

   .. include:: /includes/read_server_query.rst

Query Data Using Embedded Documents as Criteria
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Now that you have an understanding of how to retrieve data using
query documents, you will now query against embedded documents.

.. procedure::
   :style: normal

   .. step:: Retrieve specific documents in a collection based on the contents of an embedded document.

      If you wish to select documents that match all of the fields in an
      embedded JSON object, specify an exact match of the embedded document,
      including all of the fields and values in that embedded document in the
      order in which they appear in the collection.

      For example, the following query selects all documents where the
      ``size`` field equals the document ``{ "h" : 14, "w" : 21, "uom" : "cm"}``:
    
      .. include:: /includes/driver-example-query-15.rst

   .. step:: Iterate over the results.
    
      .. include:: /includes/iterate_all_noshellcursor.rst

   .. step:: Check your results.
    
      If you have loaded data into your test database, you will see one or
      more JSON documents returned. Note that the record matches the selection
      criteria exactly.

      .. include:: /includes/results_read3.rst

Query Data Using Embedded Documents With Dot Notation
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Now you will explore how to query embedded documents using ``dot notation``.

.. procedure::
   :style: normal

   .. step:: Retrieve specific documents in a collection with dot notation.
  
      If you wish to select documents that exactly match just one of the
      fields in an embedded JSON object, use  :ref:`dot notation <document-dot-notation>`.
      (``"field.nestedField"``).
  
      When querying using :ref:`dot notation <document-dot-notation>`., the field and nested field names must be inside quotation marks.

      The following example selects all documents where the field ``uom``
      nested in the ``size`` field equals ``"in"``:

      .. include:: /includes/driver-example-query-17.rst

   .. step:: Iterate over the results.

      .. include:: /includes/iterate_all.rst

   .. step:: Check your results.
  
      If you have loaded data into your test database, you will see one or
      more JSON documents returned. Note that the result record has a ``uom`` of ``in``.

      .. include:: /includes/results_read4.rst
  
      .. include:: /includes/drivers_close_connection.rst

Summary
-------

If you have successfully completed this guide, you have retrieved data from MongoDB
using specific criteria as expressed in MongoDB's query syntax. You have also used
the embedded document query syntax to retrieve documents based on embedded fields.

What's Next
-----------

In the next guide, you'll learn how to read data from MongoDB using operators and compound queries.

- :doc:`Read Data using Operators and Compound Queries </server/read_operators>`

See Also
--------

- :doc:`/server/insert`
- :doc:`/server/read`
- :doc:`/server/read_operators`
- :doc:`/server/update`
- :doc:`/server/delete`

.. guide-next::
