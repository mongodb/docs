.. _laravel-insert-one-usage:

=================
Insert a Document
=================

.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: insert one, add one, code example

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

You can insert a document into a collection by calling the ``create()`` method on
an Eloquent model or query builder.

To insert a document, pass the data you need to insert as a document containing
the fields and values to the ``create()`` method.

.. tip::

   You can also use the ``save()`` or ``insert()`` methods to insert a
   document into a collection. To learn more about insert operations,
   see the :ref:`laravel-fundamentals-insert-documents` section of the
   Write Operations guide.

Example
-------

Select from the following :guilabel:`Eloquent` and :guilabel:`Query
Builder` tabs to view usage examples for the same operation that use
each corresponding query syntax:

.. tabs::

   .. tab:: Eloquent
      :tabid: eloquent-model-count

      This example performs the following actions:
      
      - Uses the ``Movie`` Eloquent model to represent the ``movies``
        collection in the ``sample_mflix`` database 
      - Inserts a document into the ``movies`` collection
      - Prints the newly inserted document
      
      The example calls the ``create()`` method to insert a document
      that contains the following fields and values:

      - ``title`` value of ``"Marriage Story"``
      - ``year`` value of ``2019``
      - ``runtime`` value of ``136``
      
      .. io-code-block::
         :copyable: true
      
         .. input:: ../includes/usage-examples/InsertOneTest.php
            :start-after: begin-eloquent-insert-one
            :end-before: end-eloquent-insert-one
            :language: php
            :dedent:
      
         .. output::
            :language: console
            :visible: false
      
            {
                "title": "Marriage Story",
                "year": 2019,
                "runtime": 136,
                "updated_at": "...",
                "created_at": "...",
                "_id": "..."
            }

   .. tab:: Query Builder
      :tabid: query-builder-count

      This example performs the following actions:
      
      - Accesses the ``movies`` collection by calling the ``table()``
        method from the ``DB`` facade
      - Inserts a document into the ``movies`` collection
      - Prints whether the insert operation succeeds

      The example calls the ``insert()`` method to insert a document
      that contains the following fields and values:

      - ``title`` value of ``"Marriage Story"``
      - ``year`` value of ``2019``
      - ``runtime`` value of ``136``
      
      .. io-code-block::
      
         .. input:: ../includes/usage-examples/InsertOneTest.php
            :start-after: begin-qb-insert-one
            :end-before: end-qb-insert-one
            :language: php
            :dedent:
      
         .. output::
            :language: console
            :visible: false

            Insert operation success: yes

.. include:: /includes/usage-examples/fact-edit-laravel-app.rst
