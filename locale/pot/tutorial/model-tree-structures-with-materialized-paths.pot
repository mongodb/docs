# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/model-tree-structures-with-materialized-paths.txt:3
# e50a82ceab3c4ca28e2cb0e5c68f5eaf
msgid "Model Tree Structures with Materialized Paths"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-materialized-paths.txt:8
# d68ccd9e19a34922a654ba7773d124d0
msgid "Overview"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-materialized-paths.txt:10
# c0269382ece64e9da88b84f05b3d34cb
msgid "Data in MongoDB has a *flexible schema*. :term:`Collections <collection>` do not enforce :term:`document` structure. Decisions that affect how you model data can affect application performance and database capacity. See :doc:`/core/data-models` for a full high level overview of data modeling in MongoDB."
msgstr ""

#: ../source/tutorial/model-tree-structures-with-materialized-paths.txt:16
# ea4ec94712434ddd840b51feeb290222
msgid "This document describes a data model that describes a tree-like structure in MongoDB documents by storing full relationship paths between documents."
msgstr ""

#: ../source/tutorial/model-tree-structures-with-materialized-paths.txt:21
# 127d608f0bef467a9e75f5d39e3d1ee7
msgid "Pattern"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-materialized-paths.txt:25
# aa5fee450ca54bcfbd89625de30f4796
msgid "The *Materialized Paths* pattern stores each tree node in a document; in addition to the tree node, document stores as a string the id(s) of the node's ancestors or path. Although the *Materialized Paths* pattern requires additional steps of working with strings and regular expressions, the pattern also provides more flexibility in working with the path, such as finding nodes by partial paths."
msgstr ""

#: ../source/tutorial/model-tree-structures-with-materialized-paths.txt:33
# c16ae902191042b594a497b61fd4e314
msgid "Consider the following hierarchy of categories:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-materialized-paths.txt:37
# 8d281d0961b74972868bb960d938d923
msgid "The following example models the tree using *Materialized Paths*, storing the path in the field ``path``; the path string uses the comma ``,`` as a delimiter:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-materialized-paths.txt:50
# 75cdb3e868ca4ed8b182619856f7e45e
msgid "You can query to retrieve the whole tree, sorting by the field ``path``:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-materialized-paths.txt:57
# 01cd5f2130ed42f58f7a8753ed520b3d
msgid "You can use regular expressions on the ``path`` field to find the descendants of ``Programming``:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-materialized-paths.txt:64
# c0caedf239374cd2ba70e357e755cdd3
msgid "You can also retrieve the descendants of ``Books`` where the ``Books`` is also at the topmost level of the hierarchy:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-materialized-paths.txt:71
# 705750ead22f45b1a1e7752a94f40661
msgid "To create an index on the field ``path`` use the following invocation:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-materialized-paths.txt:78
# d6c7800361034ae9bd9eb624165f0518
msgid "This index may improve performance depending on the query:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-materialized-paths.txt:80
# 77c8462d671f478d8b255de988d66683
msgid "For queries of the ``Books`` sub-tree (e.g. ``/^,Books,/``) an index on the ``path`` field improves the query performance significantly."
msgstr ""

#: ../source/tutorial/model-tree-structures-with-materialized-paths.txt:84
# f176de1ef9ae4b8b83f5f78de21514ff
msgid "For queries of the ``Programming`` sub-tree (e.g. ``/,Programming,/``), or similar queries of sub-trees, where the node might be in the middle of the indexed string, the query must inspect the entire index."
msgstr ""

#: ../source/tutorial/model-tree-structures-with-materialized-paths.txt:89
# 99a1e37706744472bce1693f8bf34c9a
msgid "For these queries an index *may* provide some performance improvement *if* the index is significantly smaller than the entire collection."
msgstr ""

