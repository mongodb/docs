.. _release-notes-6.0:

=============================
Release Notes for MongoDB 6.0
=============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: twocols

This page describes changes and new features introduced in MongoDB 6.0.

MongoDB 6.0 is a |lts| Release, which means that it is supported for
both MongoDB Atlas and on-premises deployments. MongoDB 6.0 includes
changes introduced in MongoDB Rapid Releases 5.1, 5.2, and 5.3. This
page describes changes introduced in those Rapid Releases and MongoDB
6.0.

To learn more about the differences between |lts| and Rapid releases,
see :ref:`release-version-numbers`.

.. warning:: Past Release Limitations

   .. include:: /includes/release-notes/critical-warning-text.rst

   .. list-table::
      :header-rows: 1

      * - Issue
        - Affected Versions

      * - :issue:`SERVER-68511`
        - 6.0.0

      * - :issue:`SERVER-77506`
        - 6.0.0 - 6.0.12

      * - :issue:`SERVER-80203`
        - 6.0.0 - 6.0.11 (Time Series collections sharded by metaField embedded 
          objects) 

      * - :issue:`SERVER-82353`
        - 6.0.0 - 6.0.13

      * - :issue:`WT-10461` 
        - 6.0.0 - 6.0.4 (ARM64 or POWER system architectures)

      * - :issue:`WT-10551` 
        - 6.0.0 - 6.0.5 (Incremental backups on Ops Manager or Cloud
          Manager clusters)

Patch Releases
--------------

.. _6.0.16-release-notes:

6.0.16 - Jun 28, 2024
~~~~~~~~~~~~~~~~~~~~~

- :issue:`SERVER-79637` Incorrect query results in ``$lookup`` with TS
  foreign collection using a correlated predicate

- :issue:`SERVER-86474` $_internalApplyOplogUpdate with ``$set: { foo:
  Timestamp(0, 0) }`` is not replicated correctly

- :issue:`SERVER-89625` Handle directoryPerDb and
  wiredTigerDirectoryForIndexes correctly when reporting namespaces and
  UUIDs during a backup

- :issue:`WT-10807` Skip in-memory deleted pages as part of the tree
  walk

- :issue:`WT-12609` Improve checkpoint cleanup and page eviction logic


- `All Jira issues closed in 6.0.16
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%276.0.16%27>`__
- :ref:`6.0.16-changelog`

.. _6.0.15-release-notes:

6.0.15 - Apr 18, 2024
~~~~~~~~~~~~~~~~~~~~~

- :issue:`SERVER-72703` Downgrade $out's db lock to MODE_IX

- :issue:`SERVER-78556` Return default of internalInsertMaxBatchSize to 64

- :issue:`SERVER-80363` server default writeConcern is not honored when wtimeout 
  is set

- :issue:`SERVER-83602` $or -> $in MatchExpression rewrite should not generate 
  $or directly nested in another $or

- :issue:`WT-11062` Safe free the ref addr to allow concurrent access

- `All Jira issues closed in 6.0.15
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%276.0.15%27>`__
- :ref:`6.0.15-changelog`

.. _6.0.14-release-notes:

6.0.14 - Feb 28, 2024
~~~~~~~~~~~~~~~~~~~~~

.. |cve-version-list| replace:: MongoDB 6.0 prior to 6.0.14

.. include:: /includes/security/cve-2024-1351-info.rst

- :issue:`SERVER-82353` Multi-document transactions can miss documents 
  when movePrimary runs concurrently
- :issue:`SERVER-83119` Secondary replica crashes on clustered 
  collection if notablescan is enabled
- :issue:`SERVER-83145` Shared buffer fragment incorrectly tracks 
  memory usage in freeUnused()
- :issue:`SERVER-83564` Make sure the process field is indexed in 
  config.locks
- :issue:`WT-12077` Incorrect hardware checksum calculation on zSeries 
  for buffers on stack
- `All Jira issues closed in 6.0.14
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%276.0.14%27>`__
- :ref:`6.0.14-changelog`

.. _6.0.13-release-notes:

6.0.13 - Jan 18, 2024
~~~~~~~~~~~~~~~~~~~~~

- :issue:`SERVER-33494` WT SizeStorer never deletes old entries
- :issue:`SERVER-50792` Return more useful errors when a shard key index
  can't be found for shardCollection/refineCollectionShardKey
- :issue:`SERVER-70155` Add duration of how long an oplog slot is kept
  open to mongod "Slow query" log lines
- :issue:`SERVER-77506` Sharded multi-document transactions can mismatch
  data and ShardVersion
- :issue:`SERVER-83091` $or query can trigger an infinite loop during
  plan enumeration
- `All Jira issues closed in 6.0.13
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%276.0.13%27>`__
- :ref:`6.0.13-changelog`

.. _6.0.12-release-notes:

6.0.12 - Nov 27, 2023
~~~~~~~~~~~~~~~~~~~~~

- :issue:`SERVER-69244` $merge fails when session default read concern
  has been set to "majority" 
- :issue:`SERVER-81295` Cannot resume V2 changeStream pipelines with V1
  resume tokens 
- :issue:`SERVER-81966` Avoid modification of previous ChunkMap
  instances during refresh 
- :issue:`WT-7929` Investigate a solution to avoid FTDC stalls during
  checkpoint 
- :issue:`WT-11564` Fix RTS to read the newest transaction value only
  when it exists in the checkpoint 
- `All Jira issues closed in 6.0.12 <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%276.0.12%27>`__
- :ref:`6.0.12-changelog`

.. _6.0.11-release-notes:

6.0.11 - Oct 11, 2023
~~~~~~~~~~~~~~~~~~~~~

- :issue:`SERVER-58534` Collect fCV in FTDC
- :issue:`SERVER-69244` $merge fails when session default read concern has been 
  set to "majority"
- :issue:`SERVER-71520` Dump all thread stacks on RSTL acquisition timeout
- :issue:`SERVER-79498` Backport $vectorSearch to 6.0
- :issue:`SERVER-80021` Make $convert round-trip correctly between double and string
- `All Jira issues closed in 6.0.11 <https://jira.mongodb.org/browse/SERVER-81762?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D6.0.11>`__
- :ref:`6.0.11-changelog`


.. _6.0.10-release-notes:

6.0.10 - Sep 14, 2023
~~~~~~~~~~~~~~~~~~~~~

- :issue:`SERVER-71627` Refreshed cached collection route info severely 
  blocks all client request when a cluster contains 1 million chunks
- :issue:`SERVER-73394` Remove misleading operationsBlockedByRefresh metrics
- :issue:`SERVER-77183` $project followed by $group sometimes gives incorrect 
  results
- :issue:`SERVER-79771` Make resharding operations resilient to 
  networkInterfaceExceededTimeLimit
  `All Jira issues closed in 6.0.10 
  <https://jira.mongodb.org/browse/SERVER-80810?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D6.0.10>`__
- :ref:`6.0.10-changelog`  


.. _6.0.9-release-notes:

6.0.9 - Aug 14, 2023
~~~~~~~~~~~~~~~~~~~~

- :issue:`SERVER-60466` Support drivers gossiping signed $clusterTimes to 
  replica set --shardsvrs before addShard runs
- :issue:`SERVER-74954` Incorrect result when contained $or rewrites 
  $elemMatch extra condition
- :issue:`SERVER-79136` Incorrect query result of $match + $group on metaField 
  over time-series
- :issue:`WT-10759` Do not retry to force evict history store pages during 
  reconciliation
- :issue:`WT-11064` Skip globally visible tombstones as part of update obsolete
  check
- `All Jira issues closed in 6.0.9
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%276.0.9%27>`__
- :ref:`6.0.9-changelog`



.. _6.0.8-release-notes:


6.0.8 - Jul 13, 2023
~~~~~~~~~~~~~~~~~~~~

- :issue:`SERVER-61127` Multi-writes may exhaust the number of retry attempts 
  in the presence of ongoing chunk migrations
- :issue:`SERVER-77005` Leave LDAP users logged-in during LDAP downtime
- :issue:`SERVER-78126` For specific kinds of input, mongo::Value() always hashes to the same result on big-endian platforms
- `All Jira issues closed in 6.0.8
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%276.0.8%27>`__
- :ref:`6.0.8-changelog`


.. _6.0.7-release-notes:

6.0.7 - Jun 28, 2023
~~~~~~~~~~~~~~~~~~~~

- :issue:`SERVER-71985` Automatically retry time series insert on DuplicateKey
  error
- :issue:`SERVER-73007` CURL_OPT_SEEKFUNCTION not set for multi-pass
  authentication
- :issue:`SERVER-74551` WriteConflictException unnecessarily logged as warning
  during findAndModify after upgrade to mongo 5.0
- :issue:`SERVER-77018` Deadlock between dbStats and 2 index builds
- :issue:`WT-10449` Do not save update chain when there are no updates
  to be written to the history store
- :issue:`WT-11031` Fix RTS to skip tables with no time window information
  in the checkpoint
- `All Jira issues closed in 6.0.7
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%276.0.7%27>`__
- :ref:`6.0.7-changelog`


.. _6.0.6-release-notes:

6.0.6 - May 12, 2023
~~~~~~~~~~~~~~~~~~~~

- :issue:`SERVER-51835` Mongos readPreferenceTags are not working as expected
- :issue:`SERVER-67105` $in queries do not use clustered index
- :issue:`SERVER-72774` A node in quiesce mode can win election
- :issue:`SERVER-74930` $avg is returning the sum instead of the average in aggregate $group
- :issue:`SERVER-75205` Deadlock between stepdown and restoring locks after yielding when all read tickets exhausted
- `All Jira issues closed in 6.0.6
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%276.0.6%27>`__
- :ref:`6.0.6-changelog`

.. _6.0.5-release-notes:

6.0.5 - Mar 13, 2023
~~~~~~~~~~~~~~~~~~~~

Issues Fixed:

- :issue:`SERVER-61909` Hang inserting or deleting document with large
  number of index entries
- :issue:`SERVER-66469` Filtering timeseries with date-field does not
  include results from before 1970
- :issue:`SERVER-68122` Investigate replicating the collection
  WiredTiger config string during initial sync
- :issue:`SERVER-70395` Slot-Based Engine too aggressively uses disk for
  $group and is slow
- :issue:`SERVER-73232` Change the default log-verbosity for
  ``_killOperations``

- `All JIRA issues closed in 6.0.5
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%276.0.5%27>`_

- :ref:`6.0.5-changelog`

.. _6.0.4-release-notes:

6.0.4 - Jan 26, 2023
~~~~~~~~~~~~~~~~~~~~

Issues Fixed:

- :issue:`SERVER-72416` The find and findAndModify projection code
  does not honor the collection level collation
- :issue:`SERVER-71759` :dbcommand:`dataSize` command doesn't yield
- :issue:`SERVER-70237` Chunks merge commit must not create a BSON
  object too large
- :issue:`SERVER-72222` :dbcommand:`mapReduce` with single reduce 
  optimization fails when merging results in sharded cluster
- :issue:`WT-9268` Delay deletion of the history store record 
  to reconciliation

- `All JIRA issues closed in 6.0.4
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%276.0.4%27>`_

- :ref:`6.0.4-changelog`

.. _6.0.3-release-notes:

6.0.3 - Nov 21, 2022
~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-66289` $out incorrectly throws BSONObj size error on
  v5.0.8
- :issue:`SERVER-68139` Resharding command fails if the projection sort
  is bigger than 100MB
- :issue:`SERVER-68371` Enabling CSFLE in your MongoClient causes Atlas
  Search to fail
- :issue:`SERVER-68115` Bug fix for "elemMatchRootLength > 0" invariant
  trigger
- :issue:`SERVER-68394` Ensure we do not yield strong locks upon startup
  recovery when _id index is missing

- `All JIRA issues closed in 6.0.3
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%276.0.3%27>`_

- :ref:`6.0.3-changelog`

.. _6.0.2-release-notes:

6.0.2 - Sep 28, 2022
~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-68925` Reintroduce check table logging settings at
  startup (revert :issue:`SERVER-43664`)
- :issue:`SERVER-68628` Retrying a failed resharding operation after a
  primary failover can lead to server crash or lost writes
- :issue:`SERVER-63852` getThreadName() should not crash
- :issue:`SERVER-65317` mongod removes connection from connection pool
  after running simple $search query
- :issue:`SERVER-63843` Don't allow recursive doLog in synchronous
  signal handlers
- :issue:`WT-9870` Fix updating pinned timestamp whenever oldest timestamp is 
  updated during recovery

- `All JIRA issues closed in 6.0.2
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%276.0.2%27>`_

- :ref:`6.0.2-changelog`

.. _6.0.1-release-notes:

6.0.1 - Aug 19, 2022
~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-68511` MovePrimary update of ``config.databases`` entry
  must use dotted fields notation
- :issue:`SERVER-68062` Multi-stage aggregations that use $geoNear may
  violate constraints
- :issue:`SERVER-66072` $match sampling and $group aggregation strange
  behavior
- :issue:`SERVER-68130` AutoSplitVector could generate response bigger
  than BSONObjMaxUserSize
- :issue:`SERVER-68209` Remove uassert that prevents
  ``config.image_collection`` entry from being invalidated

- `All JIRA issues closed in 6.0.1
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%276.0.1%27>`_

- :ref:`6.0.1-changelog`

.. _6.0.0-release-notes:

6.0.0 - Jul 19, 2022
~~~~~~~~~~~~~~~~~~~~

The rest of this page describes changes and new features introduced in
MongoDB 6.0.

Aggregation
-----------

.. _6.0-rel-notes-new-agg-stages:

New Aggregation Stages
~~~~~~~~~~~~~~~~~~~~~~

MongoDB 6.0 introduces the following aggregation stages:

.. list-table::
   :header-rows: 1
   :widths: 20 80

   * - Stage
     - Description

   * - :pipeline:`$densify`
     - Creates new documents in a sequence of documents where values in
       a specified field are missing.

   * - :pipeline:`$documents`
     - Returns literal documents from input expressions.

   * - :pipeline:`$fill`
     - .. include:: /includes/fact-fill-description.rst

   * - :pipeline:`$shardedDataDistribution`
     - .. versionadded:: 6.0.3

          Provides size and data distribution information on sharded 
          collections. 
       

.. _6.0-rel-notes-new-agg-operators:

New Aggregation Operators
~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 6.0 introduces the following aggregation operators:

.. list-table::
   :header-rows: 1
   :widths: 20 80

   * - Operator
     - Description

   * - :group:`$bottom`
     - Returns the bottom element within a group according to the specified 
       sort order.

   * - :group:`$bottomN`
     - Returns an aggregation of the bottom ``n`` elements within a group,
       according to the specified sort order.

   * - :group:`$firstN`
     - Returns an aggregation of the first ``n`` elements within a group.
       Distinct from the :expression:`$firstN` array operator.

   * - :expression:`$firstN (array operator) <$firstN>`
     - Returns a specified number of elements from the beginning of an 
       array.
       Distinct from the :group:`$firstN` accumulator.
  
   * - :group:`$lastN`
     - Returns an aggregation of the last ``n`` elements within a group.
       Distinct from the :expression:`$lastN` array operator.

   * - :expression:`$lastN (array operator) <$lastN>`
     - Returns a specified number of elements from the end of an 
       array.
       Distinct from the :group:`$lastN` accumulator.

   * - :group:`$linearFill`
     - .. include:: /includes/fact-linear-fill-description.rst

   * - :group:`$locf`
     - .. include:: /includes/fact-locf-description.rst
  
   * - :group:`$maxN`
     - Returns an aggregation of the ``n`` maximum valued elements 
       within a group.
       Distinct from the :expression:`$maxN` array operator.

   * - :expression:`$maxN (array operator) <$maxN>`
     - Returns the ``n`` largest values in an array.
       Distinct from the :group:`$maxN` accumulator.

   * - :group:`$minN`
     - Returns an aggregation of the ``n`` minimum valued elements 
       within a group.
       Distinct from the :expression:`$minN` array operator.

   * - :expression:`$minN (array operator) <$minN>`
     - Returns the ``n`` smallest values in an array.
       Distinct from the :group:`$minN` accumulator.

   * - :expression:`$sortArray`
     - Sorts an array based on its elements.

   * - :group:`$top`
     - Returns the top element within a group according to the specified 
       sort order.
       Distinct from the command :dbcommand:`top`.

   * - :group:`$topN`
     - Returns an aggregation of the top ``n`` elements within a group,
       according to the specified sort order.

   * - :expression:`$tsIncrement`
     - .. include:: /includes/tsIncrement-introduction.rst
   
   * - :expression:`$tsSecond`
     - .. include:: /includes/tsSecond-introduction.rst

``$lookup`` and ``$graphLookup`` with Sharded Collections
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/5.1-fact-sharded-lookup-graphlookup.rst

.. include:: /includes/graphLookup-sharded-coll-transaction-note.rst

.. _6.0-rel-notes-change-streams:

Change Streams
--------------

Optimized Change Streams
~~~~~~~~~~~~~~~~~~~~~~~~

.. |change-streams| replace:: :ref:`change streams <changeStreams>`

.. include:: /includes/change-streams-optimization.rst


``wallTime`` Change Stream Output Field
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 6.0, the :ref:`change stream output
<change-stream-output>` has a new ``wallTime`` field that contains the
server date and time of the database operation.

Change Streams with Document Pre- and Post-Images
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 6.0, you can use :ref:`change streams
<change-stream-output>` to output the version of a document before and
after changes (the document pre- and post-images). For examples, see
:ref:`db.collection.watch-change-streams-pre-and-post-images-example`.

Change Stream Expanded Events
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 6.0, change streams can show additional
change events for DDL operations, like creating indexes and dropping
collections.

For more information, see :ref:`Expanded Events
<change-streams-expanded-events>`.

Filters
~~~~~~~

.. include:: /includes/change-stream/new-filter-behavior.rst

Cluster Administration
----------------------

Cluster Server Parameters
~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 6.0, you can use :ref:`<cluster-parameters>` to modify 
and retrieve configuration options for all nodes in a replica set or sharded 
cluster. You can use :dbcommand:`setClusterParameter` to modify cluster-wide 
options and :dbcommand:`getClusterParameter` to retrieve the value of a cluster 
parameter.

Connection Pool Parameters
~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 6.0, you can use
:parameter:`ShardingTaskExecutorPoolMinSizeForConfigServers` and
:parameter:`ShardingTaskExecutorPoolMaxSizeForConfigServers` to set the
minimum and maximum sharding TaskExecutor connection pool size for
:ref:`configuration servers <sharding-config-server>`.

``changeStreamOptions`` Cluster Parameter
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 6.0, you can use :parameter:`changeStreamOptions` to control 
the retention policy of change stream pre- and post-images.

``internalSessionsReapThreshold`` Parameter
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 6.0, you can use the new
:parameter:`internalSessionsReapThreshold` parameter to set the session
limit for internal session metadata deletion.

Multiple Arbiters Unsupported
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/support-multiple-arbiters.rst

Clustered Collections
---------------------

Starting in MongoDB 5.3, you can create clustered collections.

.. include:: /includes/clustered-collections-introduction.rst

To learn about the benefits compared to a normal collection, see
:ref:`clustered-collections`.

Indexes
-------

Starting in MongoDB 5.1, you can use the :dbcommand:`collMod` database
command to add the ``expireAfterSeconds`` option to an existing
single-field non-TTL index.

Starting in MongoDB 6.0, you can use the ``prepareUnique`` and
``unique`` options for the :dbcommand:`collMod` command to convert an
existing standard index to a unique index.

Partial Indexes
~~~~~~~~~~~~~~~

Starting in MongoDB 6.0, you can use the operators :query:`$in` and :query:`$or` 
to create :ref:`partial indexes <index-type-partial>`. The ``partialFilterExpression`` 
maximum depth is also expanded from 2 to 4. You can now use the operators :query:`$and`
and :query:`$or` at non-top-levels.

Installation
------------

SELinux Policies
~~~~~~~~~~~~~~~~

Starting in MongoDB 5.1, there is a new SE Linux Policy for:

- MongoDB Enterprise Server
- MongoDB Community Edition Server

running on Red Hat Linux. The SELinux policy is for use with default
installations using ``rpm`` installer packages.

Replica Sets
------------

Multiple Arbiters Unsupported
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/support-multiple-arbiters.rst

``initialSyncMethod`` Parameter                                            
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                            

Starting in MongoDB 5.2, the :parameter:`initialSyncMethod` determines  
whether :ref:`initial sync <replica-set-initial-sync>` is a                
:ref:`logical initial sync <replica-set-initial-sync-logical>` or a        
:ref:`file copy based initial sync                                         
<replica-set-initial-sync-file-copy-based>`.

:parameter:`initialSyncMethod` is only available in MongoDB Enterprise  
Server.

Specify Secondary Oplog Batch Delay
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 6.0, you can use the
:parameter:`oplogBatchDelayMillis` server parameter to specify a delay
for writes of oplog batches on secondaries. Adding a short oplog batch
delay can reduce :abbr:`IOPS (Input/Output Operations Per Second)` on
secondaries, but adds latency for writes with write concern
:writeconcern:`"majority"`.

For more information, see :parameter:`oplogBatchDelayMillis`.

Security
--------

Audit Log Encryption
~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 6.0 Enterprise, you can encrypt the MongoDB audit
log.

To configure the audit log, see
:ref:`security-encryption-at-rest-audit-log`.

Sharding
--------

.. _release-notes-6.0-balancing-policy-changes:

Balancing Policy Changes
~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 6.0.3, data in sharded clusters is distributed based on data 
size rather than number of chunks. Be aware of the following significant changes 
in sharded cluster data distribution behavior:

- The balancer distributes ranges of data rather than chunks. The balancing 
  policy looks for evenness of data distribution rather than chunk distribution.

- Chunks are not subject to auto-splitting. Instead, chunks are split only when
  moved across shards. 

- A chunk is now referred to as a :term:`range`. 

- ``moveRange`` has replaced ``moveChunk``. 

Default Chunk Size Increased from 64 MB to 128 MB 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.2, the 
:ref:`default chunk size <sharding-chunk-size>` is 128 megabytes. In 
earlier versions of MongoDB, the default chunk size is 64 megabytes.

``enableSharding`` No Longer Required
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 6.0, the :dbcommand:`enableSharding` command is
no longer required to shard a collection.

Monitor Defragmentation Status
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/sharding/balancer-status-defrag-release-notes.rst

.. _6.0-rel-notes-sbe:

Slot-Based Query Execution Engine
---------------------------------

Starting in MongoDB 5.1, MongoDB uses a new query execution engine for
eligible queries, called the slot-based query execution engine. If the
slot-based query execution engine is used, new fields are included in
the query explain plan output.

- The new query execution engine is used if possible.

- If the new query execution engine is used, new fields are included in
  the :ref:`query explain plan output <explain-results-5.1-later>`.

|sbe-title| Can Execute ``$group`` and ``$lookup`` Stages
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in version 6.0, MongoDB uses the |sbe| to execute eligible 
:pipeline:`$group` and :pipeline:`$lookup` stages when certain 
conditions are met.

For more information, see :ref:`sbe-pipeline-optimizations`.

Set |sbe-title| Plan Cache Size
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You can set the size of the :ref:`plan cache
<read-operations-query-optimization>` for the new query engine with the
:parameter:`planCacheSize` parameter.

.. include:: /includes/fact-sbe-plan-cache-motivation.rst

Stable API
----------

The following sections describe additions to the :ref:`Stable API
<stable-api>` introduced in MongoDB 6.0.

To see the full list of database commands available in the Stable API,
see :ref:`stable-api-changelog`.

Database Commands
~~~~~~~~~~~~~~~~~

Starting in MongoDB 6.0, the following database commands are supported
in the :ref:`Stable API <stable-api>`:

.. list-table::
   :header-rows: 1
   :stub-columns: 1
   :widths: 10 20 10

   * - Command
     - Description
     - Stable API Version
   * - :dbcommand:`count`
     - Counts the number of documents in a collection or a view. (Also
       available in the Stable API for 5.0-series deployments starting
       in MongoDB 5.0.9.)
     - V1

Aggregation Stages and Operators
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 6.0, the following aggregation stages and operators
are supported in the :ref:`Stable API <stable-api>`:

.. list-table::
   :header-rows: 1
   :stub-columns: 1
   :widths: 10 20 10

   * - Stage or Operator
     - Description
     - Stable API Version

   * - :group:`$bottom`
     - Returns the bottom element within a group, according to the specified
       sort order.
     - V1

   * - :group:`$bottomN`
     - Returns an aggregation of the bottom ``n`` elements within a group,
       according to the specified sort order.
     - V1
   
   * - :expression:`$dateAdd`
     - Increments a :method:`Date()` object by a
       specified number of time units.
     - V1

   * - :expression:`$dateDiff`
     - Returns the difference between two dates. 
     - V1

   * - :expression:`$dateSubtract`
     - Decrements a :method:`Date()` object by a
       specified number of time units.
     - V1

   * - :expression:`$dateTrunc`
     - Truncates a date.
     - V1

   * - :pipeline:`$densify`
     - .. include:: /includes/fact-densify-description.rst
     - V1

   * - :group:`$firstN` (aggregation accumulator)
     - Returns an aggregation of the first ``n`` elements within a group.
     - V1

   * - :expression:`$firstN` (array operator)
     - Returns a specified number of elements from the beginning of an
       array. 
     - V1

   * - :expression:`$getField`
     - Returns the value of a specified field from a document.
     - V1

   * - :group:`$lastN` (aggregation accumulator)
     - Returns an aggregation of the last ``n`` elements within a group.
     - V1

   * - :expression:`$lastN` (array operator)
     - Returns a specified number of elements from the end of an
       array.
     - V1

   * - :group:`$locf`
     - .. include:: /includes/fact-locf-description.rst
     - V1  

   * - :group:`$maxN` (aggregation accumulator)
     - Returns an aggregation of the maximum value ``n`` elements within
       a group.
     - V1

   * - :expression:`$maxN` (array operator)
     - Returns the ``n`` largest values in an array.
     - V1

   * - :group:`$minN` (aggregation accumulator)
     - Returns an aggregation of the minimum value ``n`` elements within
       a group.
     - V1

   * - :expression:`$minN` (array operator)
     - Returns the ``n`` smallest values in an array.
     - V1

   * - :expression:`$setField`
     - Adds, updates, or removes a specified field in a document.
     - V1

   * - :pipeline:`$setWindowFields`
     - Performs operations on a specified span of documents in a
       collection, known as a *window*, and returns the results based on
       the chosen :ref:`window operator
       <setWindowFields-window-operators>`.
     - V1

   * - :expression:`$sortArray`
     - Sorts an array based on its elements.
     - V1

   * - :group:`$top`
     - Returns the top element within a group according to the specified
       sort order.
     - V1

   * - :group:`$topN`
     - Returns an aggregation of the top ``n`` elements within a group,
       according to the specified sort order.
     - V1

   * - :expression:`$tsIncrement`
     - .. include:: /includes/tsIncrement-introduction.rst
     - V1

   * - :expression:`$tsSecond`
     - .. include:: /includes/tsSecond-introduction.rst
     - V1

Window Operators
````````````````

Starting in MongoDB 6.0, the following window operators are supported in
the :ref:`Stable API <stable-api>`:

.. list-table::
   :header-rows: 1
   :stub-columns: 1
   :widths: 10 20 10

   * - Window Operator
     - Description
     - Stable API Version

   * - :group:`$addToSet`
     - Returns an array of all unique values that results from
       applying an :ref:`expression <aggregation-expressions>` to
       each document.
     - V1

   * - :group:`$avg`
     - Returns the average for the specified :ref:`expression
       <aggregation-expressions>`. Ignores non-numeric values.
     - V1

   * - :group:`$count`
     - Returns the number of documents in the group or window.
     - V1

   * - :group:`$covariancePop`
     - Returns the population covariance of two numeric
       :ref:`expressions <aggregation-expressions>`.
     - V1

   * - :group:`$covarianceSamp`
     - Returns the sample covariance of two numeric
       :ref:`expressions <aggregation-expressions>`.
     - V1

   * - :group:`$denseRank`
     - Returns the document position (known as the rank) relative to
       other documents in the :pipeline:`$setWindowFields` stage
       :ref:`partition <setWindowFields-partitionBy>`. There are no
       gaps in the ranks. Ties receive the same rank.
     - V1

   * - :group:`$derivative`
     - Returns the average rate of change within the specified
       :ref:`window <setWindowFields-window>`.
     - V1

   * - :group:`$documentNumber`
     - Returns the position of a document (known as the document
       number) in the :pipeline:`$setWindowFields` stage
       :ref:`partition <setWindowFields-partitionBy>`. Ties result in
       different adjacent document numbers.
     - V1

   * - :group:`$expMovingAvg`
     - Returns the exponential moving average for the numeric
       :ref:`expression <aggregation-expressions>`.
     - V1

   * - :group:`$first`
     - Returns the value that results from applying an
       :ref:`expression <aggregation-expressions>` to the first
       document in a group or :ref:`window <setWindowFields-window>`.
     - V1

   * - :group:`$integral`
     - Returns the approximation of the area under a curve.
     - V1

   * - :group:`$last`
     - Returns the value that results from applying an
       :ref:`expression <aggregation-expressions>` to the last
       document in a group or :ref:`window <setWindowFields-window>`.
     - V1

   * - :group:`$locf`
     - .. include:: /includes/fact-locf-description.rst
     - V1

   * - :group:`$max`
     - Returns the maximum value that results from applying an
       :ref:`expression <aggregation-expressions>` to each document.
     - V1

   * - :group:`$min`
     - Returns the minimum value that results from applying an
       :ref:`expression <aggregation-expressions>` to each document.
     - V1

   * - :group:`$push`
     - Returns an array of values that result from applying an
       :ref:`expression <aggregation-expressions>` to each document.
     - V1

   * - :group:`$rank`
     - Returns the document position (known as the rank) relative to
       other documents in the :pipeline:`$setWindowFields` stage
       :ref:`partition <setWindowFields-partitionBy>`.
     - V1

   * - :group:`$shift`
     - Returns the value from an :ref:`expression
       <aggregation-expressions>` applied to a document in a
       specified position relative to the current document in the
       :pipeline:`$setWindowFields` stage :ref:`partition
       <setWindowFields-partitionBy>`.
     - V1

   * - :group:`$stdDevPop`
     - Returns the population standard deviation that results from
       applying a numeric :ref:`expression <aggregation-expressions>`
       to each document.
     - V1

   * - :group:`$stdDevSamp`
     - Returns the sample standard deviation that results from
       applying a numeric :ref:`expression <aggregation-expressions>`
       to each document.
     - V1

   * - :group:`$sum`
     - Returns the sum that results from applying a numeric
       :ref:`expression <aggregation-expressions>` to each document.
     - V1

Time Series Collections
-----------------------

The following sections describe improvements and new features for
:ref:`time series collections <manual-timeseries-collection>`.

Sharded Time Series Collections
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/5.1/5.1-release-notes-sharded-time-series.rst

Sharded Time Series Granularity
```````````````````````````````

Starting in MongoDB 6.0, you can :ref:`modify the granularity
<timeseries-granularity>` of sharded time series collections.

Updates and Deletes
~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.1, time series collections support 
:ref:`update and delete operations
<timeseries-limitations-updates-deletes>` with limitations.

Time Series Column Compression
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/timeseries-compression-overview.rst

Starting in MongoDB 6.0, arrays are also compressed as part of the
:doc:`time series column compression
</core/timeseries/timeseries-compression>`.

Support for ``$geoNear``
~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.3, you can use the :pipeline:`$geoNear` pipeline
operator on any field in a :ref:`time series collection
<manual-timeseries-collection>`.

Additional Secondary Index Types
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You can add additional :term:`secondary index <secondary index>` types
to time series collections, including :ref:`2dsphere <2dsphere-index>`
and :ref:`2d <2d-index>` indexes.

For all additional indexes and other improvements, see
:ref:`timeseries-add-secondary-index-mongodb-6.0`.

Sort Operations Use Secondary Indexes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Sort operations on time series collections can use indexes to improve
performance. For more information and an example, see
:ref:`timeseries-secondary-index-sort-performance`.

.. _6.0-rel-notes-general:

General Improvements
--------------------

OpenSSL3 FIPS Support
~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-openssl3-fips-support.rst

Capped Collections Improvements
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 6.0, you can change a 
:ref:`capped collection's <manual-capped-collection>` maximum size, either in 
bytes or in number of documents, using the :dbcommand:`collMod` command. See
:ref:`Resize a Capped Collection <resize-capped-collection>` for more details.

``numOrphanDocs`` Field Added to collStats Command
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 6.0, the :ref:`collStats output <collStats-output>` 
includes the :data:`collStats.numOrphanDocs` field that shows the number of 
:term:`orphaned documents <orphaned document>` in the collection. 

Exclude Embedded Fields in ``serverStatus`` Output
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 6.0 (and 5.0.9), you can exclude embedded fields 
from the :dbcommand:`serverStatus` output.

Connections
~~~~~~~~~~~

Starting in MongoDB 6.0, the :method:`Mongo() <db.getMongo()>`
connection object has the following new methods:

- :method:`Mongo.getWriteConcern()` returns the :term:`write concern`
- :method:`Mongo.setWriteConcern()` sets the :term:`write concern`

Support for Diagnostic Backtrace Generation in ``arm64``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 6.0 (and 5.0.10), :ref:`diagnostic backtrace
generation <sigusr2-diagnostic-backtrace>` in ``arm64`` is supported.

Configure Refresh Interval for Cached LDAP User Information
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.2, you can use the following new server parameters
to configure the refresh interval for cached LDAP user information:

- :parameter:`ldapUserCacheRefreshInterval`
- :parameter:`ldapUserCacheStalenessInterval`
- :parameter:`ldapShouldRefreshUserCacheEntries`

.. include:: /includes/LDAP-interval.rst

Support for ``$group`` Stage in Explain Results 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 5.2, the :ref:`explain-results` support the 
:pipeline:`$group` stage (``GROUP``), which separates documents into
groups according to a group key, in the 
:data:`~explain.queryPlanner.winningPlan.stage` field. 

Changes Affecting Compatibility
-------------------------------

Some changes can affect compatibility and may require user actions. For
a detailed list of compatibility changes, see
:ref:`6.0-compatibility`.

.. _6.0-upgrade:

Upgrade Procedures
------------------

.. important:: Feature Compatibility Version

   To upgrade to MongoDB 6.0 from a 5.0 deployment, the 5.0 deployment
   must have ``featureCompatibilityVersion`` set to ``5.0``. To check
   the version:

   .. code-block:: javascript

      db.adminCommand( { getParameter: 1, featureCompatibilityVersion: 1 } )

To upgrade to MongoDB 6.0, refer to the upgrade instructions specific to
your MongoDB deployment:

- :ref:`<6.0-upgrade-standalone>`

- :ref:`<6.0-upgrade-replica-set>`

- :ref:`<6.0-upgrade-sharded-cluster>`

If you need guidance on upgrading to 6.0, MongoDB professional services
offer major version upgrade support to help ensure a smooth transition
without interruption to your MongoDB application. To learn more, see
:products:`MongoDB Consulting </consulting?tck=docs_server>`.

Downgrade Consideration
-----------------------

.. include:: /includes/6.0-upgrade-replacements.rst

.. |downgrading| replace:: downgrading

.. include:: includes/downgrade/single-version-support.rst

.. _6.0-download:

Download
--------

To download MongoDB 6.0, go to the `MongoDB Download Center
<https://www.mongodb.com/try/download?tck=docs_server>`__.

.. _6.0-known-issues:

Known Issues
------------

This section describes known issues in MongoDB 6.0 and their resolution
status.

.. list-table::
   :header-rows: 1
   :widths: 20 40 40
   
   * - In Version
     - Issue
     - Status

   * - 6.0.0

     - :issue:`SERVER-68062`: Multi-stage aggregations that use
       $geoNear may violate constraints.

     - Resolved in 6.0.1. 

Report an Issue
---------------

.. include:: /includes/report-an-issue.rst

.. toctree::
   :titlesonly:
   :hidden:

   /release-notes/6.0-compatibility
   /release-notes/6.0-downgrade
   /release-notes/6.0-upgrade
   /release-notes/6.0-changelog
