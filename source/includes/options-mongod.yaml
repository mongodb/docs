# This file borrows content from: /includes/options-shared.yaml which uses
#   {{program}} to refer to the tool.
#
# This file lends content to:
#   /includes/options-mongos.yaml
#   /includes/options-conf.yaml
#

program: mongod
name: help
aliases: -h
inherit:
  name: help
  program: _shared
  file: options-shared.yaml
---
program: mongod
name: version
inherit:
  name: version
  program: _shared
  file: options-shared.yaml
---
program: mongod
name: config
aliases: -f
args: <filename>
directive: option
description: |
  Specifies a configuration file for runtime configuration options. The
  configuration file is the preferred method for runtime configuration of
  {{program}}. The options are equivalent to the command-line
  configuration options. See :doc:`/reference/configuration-options` for
  more information.

  Ensure the configuration file uses ASCII encoding. The {{program}}
  instance does not support configuration files with non-ASCII encoding,
  including UTF-8.
optional: true
---
program: mongod
name: verbose
inherit:
  name: verbose
  program: _shared
  file: options-shared.yaml
---
program: mongod
name: quiet
inherit:
  name: quiet
  program: _shared
  file: options-shared.yaml
---
program: mongod
name: port
inherit:
  name: port
  program: _shared
  file: options-shared.yaml
---
program: mongod
name: bind_ip
args: <ip address>
default: |
  localhost
directive: option
description: |

  .. note::

     Starting in MongoDB 3.6, {{program}} bind to localhost
     (``127.0.0.1``) by default. See :ref:`3.6-bind-to-localhost`.

  The IP addresses and/or full Unix domain socket paths on which
  {{program}} should listen for client connections. You may attach
  {{program}} to any interface. To bind to multiple addresses, enter a
  list of comma-separated values.

  .. example:: ``localhost,/tmp/mongod.sock``

  .. include:: /includes/warning-bind-ip-security-considerations.rst

optional: true
post: |
  To bind to all IPv4 addresses, enter ``0.0.0.0``.

  To bind to all IPv4 and IPv6 addresses, enter ``0.0.0.0,::``
  or alternatively, use the :setting:`net.bindIpAll` setting.

  .. note::

     ``--bind_ip`` and ``--bind_ip_all`` are mutually exclusive. That
     is, you can specify one or the other, but not both.

---
program: mongod
name: bind_ip_all
default: false
args: <boolean>
directive: option
description: |

   .. versionadded:: 3.6

   If true, the {{program}} instance binds to all ip addresses. When
   attaching {{program}} to a publicly accessible interface, ensure
   that you have implemented proper authentication and firewall
   restrictions to protect the integrity of your database.

   .. include:: /includes/warning-bind-ip-security-considerations.rst

post: |

  Alternatively, you can set the ``--bind_ip`` option to
  ``0.0.0.0,::`` to bind to all IP addresses.

  .. note::

     ``--bind_ip`` and ``--bind_ip_all`` are mutually exclusive. That
     is, you can specify one or the other, but not both.

---
program: mongod
name: listenBacklog
default: Target system ``SOMAXCONN`` constant
args: <number>
directive: option
description: |
   .. versionadded:: 3.6

   The maximum number of connections that can exist in the listen
   queue.

   .. warning ::

      Consult your local system's documentation to understand the
      limitations and configuration requirements before using this
      parameter.

   .. important::

      To prevent undefined behavior, specify a value for this
      parameter between ``1`` and the local system ``SOMAXCONN``
      constant.

   The default value for the ``listenBacklog`` parameter is set at
   compile time to the target system ``SOMAXCONN`` constant.
   ``SOMAXCONN`` is the maximum valid value that is documented for
   the *backlog* parameter to the *listen* system call.

   Some systems may interpret ``SOMAXCONN`` symbolically, and others
   numerically. The actual *listen backlog* applied in practice may
   differ from any numeric interpretation of the ``SOMAXCONN`` constant
   or argument to ``--listenBacklog``, and may also be constrained by
   system settings like ``net.core.somaxconn`` on Linux.

   Passing a value for the ``listenBacklog`` parameter that exceeds the
   ``SOMAXCONN`` constant for the local system is, by the letter of the
   standards, undefined behavior. Higher values may be silently integer
   truncated, may be ignored, may cause unexpected resource
   consumption, or have other adverse consequences.

   On systems with workloads that exhibit connection spikes, for which
   it is empirically known that the local system can honor higher
   values for the *backlog* parameter than the ``SOMAXCONN`` constant,
   setting the ``listenBacklog`` parameter to a higher value may reduce
   operation latency as observed by the client by reducing the number
   of connections which are forced into a backoff state.
   
optional: true
---
program: mongod
name: maxConns
args: <number>
directive: option
description: |
  The maximum number of simultaneous connections that {{program}} will
  accept. This setting has no effect if it is higher than your operating
  system's configured maximum connection tracking threshold.

  Do not assign too low of a value to this option, or you will
  encounter errors during normal application operation.
post: |
  .. include:: /includes/note-max-conns-max.rst
optional: true
---
program: mongod
name: objcheck
args: null
directive: option
description: |
  Forces the {{program}} to validate all requests from clients upon
  receipt to ensure that clients never insert invalid documents into the
  database. For objects with a high degree of sub-document nesting, the
  {{role}} option can have a small impact on performance. You can set
  :option:`--noobjcheck` to disable object checking at runtime.

  .. versionchanged:: 2.4
     MongoDB enables the {{role}} option by default in order to prevent
     any client from inserting malformed or invalid BSON into a MongoDB
     database.
optional: true
---
program: mongod
name: noobjcheck
args: null
directive: option
description: |
  .. versionadded:: 2.4

  Disables the default document validation that MongoDB performs on all
  incoming BSON documents.
optional: true
---
program: mongod
name: logpath
args: <path>
directive: option
description: |
  Sends all diagnostic logging information to a log file instead of to
  standard output or to the host's :term:`syslog` system. MongoDB creates
  the log file at the path you specify.

  By default, MongoDB will move any existing log file rather than overwrite
  it. To instead append to the log file, set the :option:`--logappend` option.
optional: true
---
program: mongod
name: logappend
args: null
directive: option
description: |
  {{intro}} new entries to the end of the existing log file when the {{program}}
  instance restarts. Without this option, :program:`mongod` will back up the
  existing log and create a new file.
optional: true
replacement:
  intro: "Appends"
---
program: mongod
name: logRotate
args: <string>
directive: option
default: "rename"
description: |

  .. versionadded:: 3.0.0

  {{intro}} behavior for the :dbcommand:`logRotate` command.
  Specify either ``rename`` or ``reopen``:

  - ``rename`` renames the log file.

  - ``reopen`` closes and reopens the log file following the typical
    Linux/Unix log rotate behavior. Use ``reopen`` when using the
    Linux/Unix logrotate utility to avoid log loss.

    If you specify ``reopen``, you must also {{logappend}}.
replacement:
   intro: "Determines the"
   logappend: "use :option:`--logappend`"
---
program: mongod
name: timeStampFormat
args: <string>
default: iso8601-local
directive: option
description: |
  The time format for timestamps in log messages. Specify one of the
  following values:

  .. list-table::
     :header-rows: 1
     :widths: 20 40

     * - Value

       - Description

     * - ``ctime``

       - Displays timestamps as ``Wed Dec 31
         18:17:54.811``.

     * - ``iso8601-utc``

       - Displays timestamps in Coordinated Universal Time (UTC) in the
         ISO-8601 format. For example, for New York at the start of the
         Epoch: ``1970-01-01T00:00:00.000Z``

     * - ``iso8601-local``

       - Displays timestamps in local time in the ISO-8601
         format. For example, for New York at the start of the Epoch:
         ``1969-12-31T19:00:00.000-0500``
optional: true
---
program: mongod
name: syslog
args: null
directive: option
description: |
  Sends all logging output to the host's :term:`syslog` system rather
  than to standard output or to a log file. , as with :option:`--logpath`.

  The {{role}} option is not supported on Windows.
optional: true
---
program: mongod
name: syslogFacility
args: <string>
default: user
directive: option
description: |
  {{verb}} facility level used when logging messages to syslog.
  The value you specify must be supported by your
  operating system's implementation of syslog. To use this option, you
  must enable the :option:`--syslog` option.
optional: true
replacement:
  verb: "Specifies the"
---
program: mongod
name: pidfilepath
args: <path>
directive: option
description: |
  {{intro}} file location to hold the process ID of the {{program}}
  process where {{program}} will write its PID. This is useful for
  tracking the {{program}} process in combination with the
  :option:`--fork` option. Without a specified {{role}} option, the
  process creates no PID file.
optional: true
replacement:
  intro: "Specifies a"
---
program: mongod
name: keyFile
args: <file>
directive: option
description: |
  {{intro}} path to a key file that stores the shared secret
  that MongoDB instances use to authenticate to each other in a
  :term:`sharded cluster` or :term:`replica set`. {{role}} implies
  {{auth_option}}. See :ref:`inter-process-auth` for more
  information.
replacement:
  auth_option: ":option:`--auth`"
  intro: "Specifies the"
optional: true
---
program: mongod
name: nounixsocket
args: null
directive: option
description: |
  {{intro}} listening on the UNIX domain socket. {{role}} applies only
  to Unix-based systems.
post: |
  The {{program}} process
  always listens on the UNIX socket unless one of the following is true:

  - {{role}} is set

  - :setting:`net.bindIp` is not set

  - :setting:`net.bindIp` does not specify ``127.0.0.1``

  .. |mongodb-package| replace:: {{program}}

  .. include:: /includes/note-deb-and-rpm-default-to-localhost.rst
optional: true
replacement:
  intro: "Disables"
---
program: mongod
name: unixSocketPrefix
args: <path>
default: /tmp
directive: option
description: |
  The path for the UNIX socket. {{role}} applies only
  to Unix-based systems.

  If this option has no value, the
  {{program}} process creates a socket with ``/tmp`` as a prefix. MongoDB
  creates and listens on a UNIX socket unless one of the following is true:

  - :setting:`net.unixDomainSocket.enabled` is ``false``

  - :option:`--nounixsocket` is set

  - :setting:`net.bindIp` is not set

  - :setting:`net.bindIp` does not specify ``127.0.0.1``
optional: true
---
program: mongod
name: filePermissions
args: <path>
default: "``0700``"
directive: option
description: |
  Sets the permission for the UNIX domain socket file.

  {{role}} applies only to Unix-based systems.
optional: true
---
program: mongod
name: fork
args: null
directive: option
description: |
  {{verb}} a :term:`daemon` mode that runs the {{program}} process in the
  background. By default {{program}} does not run as a daemon:
  typically you will run {{program}} as a daemon, either by using
  {{role}} or by using a controlling process that handles the
  daemonization process (e.g. as with ``upstart`` and ``systemd``).
optional: true
replacement:
  verb: "Enables"
---
program: mongod
name: auth
# The description for this option (auth) applies specifically to the command
# line. The equivalent option in the config file (security.authorization)
# takes string values, which this option does not do.
args: null
directive: option
description: |
  Enables authorization to control user's access to database resources
  and operations. When authorization is enabled, MongoDB requires all
  clients to authenticate themselves first in order to determine the
  access for the client.

  Configure users via the :doc:`mongo shell
  </reference/program/mongo>`. If no users exist, the localhost interface
  will continue to have access to the database until you create
  the first user.

  See :doc:`Security </security>`
  for more information.
optional: true
---
program: mongod
name: cpu
# beginning in 2.6, cpu is command-line only
args: null
directive: option
description: |
  Forces the {{program}} process to report the percentage of CPU time in
  write lock, every four seconds.
optional: true
---
program: mongod
name: dbpath
args: <path>
default: |
  ``/data/db`` on Linux and OS X, ``\data\db`` on Windows
directive: option
description: |
  The directory where the {{program}} instance stores its data.

  If you
  installed MongoDB using a package management system, check the
  ``/etc/mongod.conf`` file provided by your packages to see the
  directory is specified.
post: |
  .. versionchanged:: 3.0
     The files in {{role}} must correspond to the storage engine
     specified in {{storage_engine}}. If the data files do not
     correspond to {{storage_engine}}, {{program}} will refuse to
     start.
optional: true
replacement:
  storage_engine: :option:`--storageEngine`
---
program: mongod
name: directoryperdb
args: null
directive: option
description: |
  {{intro}} a separate directory to store data for each database. The
  directories are under the {{dbpath}} directory, and each subdirectory
  name corresponds to the database name.

  .. versionchanged:: 3.0

     To change the {{role}} option for existing deployments, you must
     restart the :program:`mongod` instances with the new {{role}}
     value **and** a new data directory ({{newdbpath}}), and then
     repopulate the data.

     - For standalone instances, you can use :program:`mongodump` on
       the existing instance, stop the instance, restart with the new
       {{role}} value **and** a new data directory, and use
       :program:`mongorestore` to populate the new data directory.

     - For replica sets, you can update in a rolling manner by stopping
       a secondary member, restart with the new {{role}} value **and**
       a new data directory, and use :ref:`initial sync
       <replica-set-initial-sync>` to populate the new data directory.
       To update all members, start with the secondary members first.
       Then step down the primary, and update the stepped-down member.

post: |
  .. include:: /includes/not-available-for-inmemory-storage-engine.rst

optional: true
replacement:
  intro: "Uses"
  dbpath: :option:`--dbpath`
  newdbpath: :option:`--dbpath \<new path\> <--dbpath>`
---
program: mongod
name: journal
inherit:
  name: journal
  program: _shared
  file: options-shared.yaml
post: |

  .. include:: /includes/not-available-for-inmemory-storage-engine.rst

  .. include:: /includes/extracts/no-journaling-writeConcernMajorityJournalDefault-false.rst

---
program: mongod
name: journalOptions
args: <arguments>
directive: option
description: |
  Provides functionality for testing. Not for general use, and will affect data
  file integrity in the case of abnormal system shutdown.
post: |
  .. include:: /includes/not-available-for-inmemory-storage-engine.rst

optional: true
---
program: mongod
name: journalCommitInterval
args: <value>
default: 100 or 30
directive: option
description: |

  {{versiondirective}}

  The maximum amount of time in milliseconds that
  the {{program}} process allows between
  journal operations. Values can range from 1 to 500 milliseconds. Lower
  values increase the durability of the journal, at the expense of disk
  performance.  The default journal commit interval is 100 milliseconds.

  On MMAPv1, if the journal is on a different block device (e.g. physical
  volume, RAID device, or LVM volume) than the data files, the default journal
  commit interval is 30 milliseconds. Additionally, on MMAPv1, when a write
  operation with ``j:true`` is pending, {{program}} will reduce
  :setting:`~storage.journal.commitIntervalMs` to a third of the set value.

  On WiredTiger, the default journal commit interval is 100 milliseconds. Additionally,
  a write with ``j:true`` will cause an immediate sync of the journal.

post: |
  .. include:: /includes/not-available-for-inmemory-storage-engine.rst

replacement:
   versiondirective: ".. versionchanged:: 3.2"
optional: true
---
program: mongod
name: ipv6
args: null
directive: option
description: |

   Enables IPv6 support. {{program}} disables IPv6 support by default.

optional: true
---
program: mongod
name: noauth
args: null
directive: option
description: |
  Disables authentication. Currently the default. Exists for future
  compatibility and clarity.
optional: true
---
program: mongod
name: clusterAuthMode
args: <option>
default: keyFile
directive: option
description: |
  .. versionadded:: 2.6

  The authentication mode used for cluster authentication. If you use
  :ref:`internal x.509 authentication <x509-internal-authentication>`,
  specify so here. This option can have one of the following values:

  .. list-table::
     :header-rows: 1
     :widths: 20 40

     * - Value

       - Description

     * - ``keyFile``

       - Use a keyfile for authentication.
         Accept only keyfiles.

     * - ``sendKeyFile``

       - For rolling upgrade purposes. Send a keyfile for
         authentication but can accept both keyfiles and x.509
         certificates.

     * - ``sendX509``

       - For rolling upgrade purposes. Send the x.509 certificate for
         authentication but can accept both keyfiles and x.509
         certificates.

     * - ``x509``

       - Recommended. Send the x.509 certificate for authentication and
         accept only x.509 certificates.

  .. include:: /includes/fact-ssl-supported.rst
optional: true
---
program: mongod
name: nojournal
args: null
directive: option
description: |
  Disables the durability journaling. The {{program}} instance
  enables journaling by default in 64-bit versions after v2.0.
post: |
  .. include:: /includes/not-available-for-inmemory-storage-engine.rst
optional: true
---
program: mongod
name: noprealloc
args: null
directive: option
description: |

  .. deprecated:: 2.6

     By default, MongoDB does not preallocate data files. The option
     exists for compatibility and clarity.

  Disables the preallocation of data files.
---
program: mongod
name: noscripting
args: null
directive: option
description: |
  Disables the scripting engine.
optional: true
---
program: mongod
name: notablescan
args: null
directive: option
description: |
  Forbids operations that require a collection scan. See :parameter:`notablescan` for additional information.
optional: true
---
program: mongod
name: nssize
args: <value>
default: 16
directive: option
description: |
  {{verb}} default size for namespace files, which are files that end
  in ``.ns``. Each collection and index counts as a namespace.

  Use this setting to control size for newly created namespace files. This
  option has no impact on existing files. The maximum size for a namespace
  file is 2047 megabytes. The default value of 16 megabytes provides for
  approximately 24,000 namespaces.
optional: true
replacement:
  verb: "Specifies the"
---
program: mongod
name: profile
args: <level>
default: 0
directive: option
description: |
  Changes the level of database profiling, which inserts information about
  operation performance into the ``system.profile`` collection. Specify one
  of the following levels:

  .. list-table::
     :header-rows: 1
     :widths: 20 40

     * - Level

       - Setting

     * - 0

       - Off. No profiling.

     * - 1

       - On. Only includes slow operations.

     * - 2

       - On. Includes all operations.

  Database profiling can impact database
  performance. Enable this option only after careful consideration.
optional: true
---
program: mongod
name: profilingmode
args: <level>
default: "off"
directive: option
description: |
  {{intro}} level of database profiling, which inserts information about
  operation performance into the ``system.profile`` collection. Specify one
  of the following levels:

  .. list-table::
     :header-rows: 1
     :widths: 20 40

     * - Level

       - Setting

     * - ``off``

       - Off. No profiling.

     * - ``slowOp``

       - On. Only includes slow operations.

     * - ``all``

       - On. Includes all operations.

  Database profiling can impact database
  performance. Enable this option only after careful consideration.
optional: true
replacement:
  intro: "Changes the"
---
program: mongod
name: quota
args: null
directive: option
description: |
  {{verb}} a maximum limit for the number data files each database can
  have. When running with the {{role}} option, MongoDB has a maximum of 8
  data files per database. Adjust the quota with
  {{quota_files}}.
optional: true
replacement:
  quota_files: :option:`--quotaFiles`
  verb: "Enables"
---
program: mongod
name: quotaFiles
args: <number>
default: 8
directive: option
description: |
  {{verb}} limit on the number of data files per database. {{role}}
  option requires that you set {{quota_flag}}.
optional: true
replacement:
  quota_flag: :option:`--quota`
  verb: "Modifies the"
---
program: mongod
name: repair
args: null
directive: option
description: |
  Runs a repair routine on all databases. This is equivalent
  to shutting down and running the :dbcommand:`repairDatabase` database
  command on all databases.

  .. include:: /includes/warning-repair.rst

  .. include:: /includes/note-repair.rst

  .. versionchanged:: 2.1.2

  If you run the repair option *and* have data in a journal file, the
  {{program}} instance refuses to start. In these cases you should start
  the {{program}} without the {{role}} option, which allows the
  {{program}} to recover data from the journal. This completes more
  quickly and is more likely to produce valid data files. To continue the
  repair operation despite the journal files, shut down the {{program}}
  cleanly and restart with the {{role}} option.

  The {{role}} option copies data from the source data files into new data
  files in the :setting:`~storage.repairPath` and then replaces the original data
  files with the repaired data files.
optional: true
---
program: mongod
name: repairpath
args: <path>
default: |
  A ``_tmp_repairDatabase_<num>`` directory under the :setting:`~storage.dbPath`.
directive: option
description: |
  {{intro}} working directory that MongoDB will use during the
  :option:`--repair` operation. When :option:`--repair` completes, the
  {{role}} directory is empty, and
  :setting:`~storage.dbPath` contains the repaired files.
post: |
  The {{role}} must be within the :setting:`~storage.dbPath`. You can
  specify a symlink to {{role}} to use a path on a different file
  system.

  Only available for :program:`mongod` instance using the MMAPv1 storage engine.

  .. SEE: SERVER-4266
optional: true
replacement:
  intro: "Specifies a"
  dbpath: "option:`--dbpath`"
---
program: mongod
name: setParameter
args: <options>
directive: option
description: |
  Specifies one of the MongoDB parameters described in
  :doc:`/reference/parameters`. You can specify multiple ``setParameter``
  fields.
optional: true
---
program: mongod
name: slowms
args: <integer>
default: 100
directive: option
description: |
  The threshold in milliseconds at which the database profiler considers a
  query slow. MongoDB records all slow queries to the log, even when the
  database profiler is off. When the profiler is on, it writes to the
  ``system.profile`` collection. See the :dbcommand:`profile` command for
  more information on the database profiler.
optional: true
---
program: mongod
name: smallfiles
args: null
directive: option
description: |
  {{intro}} a smaller default file size. The {{role}} option
  reduces the initial size for data files and limits the maximum size to
  512 megabytes. {{role}} also reduces the size of each :term:`journal`
  file from 1 gigabyte to 128 megabytes. Use {{role}} if you have a large
  number of databases that each holds a small quantity of data.

  The {{role}} option can lead the {{program}} instance to create a large
  number of files, which can affect performance for larger databases.
optional: true
replacement:
  intro: "Sets MongoDB to use"
---
program: mongod
name: shutdown
args: null
directive: option
description: |
  The {{role}} option cleanly and safely terminates the {{program}}
  process. When invoking {{program}} with this option you must set the
  :option:`--dbpath` option either directly or by way of the
  :doc:`configuration file </reference/configuration-options>` and the
  :option:`--config` option.

  The {{role}} option is available only on Linux systems.
optional: true
---
program: mongod
name: syncdelay
args: <value>
default: 60
directive: option
description: |
  {{intro}} can pass before MongoDB flushes data to the data
  files via an :term:`fsync` operation.

  **Do not set this value on
  production systems.** In almost every situation, you should use the
  default setting.

  .. warning::

     If you set {{role}} to ``0``, MongoDB will not sync the
     memory mapped files to disk.

  The {{program}} process writes data very quickly to the journal and
  lazily to the data files. {{role}} has no effect on the
  :setting:`journal <storage.journal.enabled>` files or :doc:`journaling </core/journaling>`.

  The :dbcommand:`serverStatus` command reports the background flush
  thread's status via the :serverstatus:`backgroundFlushing` field.
post: |
  .. include:: /includes/not-available-for-inmemory-storage-engine.rst

optional: true
replacement:
  intro: "Controls how much time"
---
program: mongod
name: sysinfo
# beginning in 2.6, sysinfo is command-line only
args: null
directive: option
description: |
  Returns diagnostic system information and then exits. The
  information provides the page size, the number of physical pages,
  and the number of available physical pages.
optional: true
---
program: mongod
name: upgrade
args: null
directive: option
description: |
  Upgrades the on-disk data format of the files specified by the
  :option:`--dbpath` to the latest version, if needed.

  This option only affects the operation of the {{program}} if the data
  files are in an old format.

  In most cases you should not set this value, so you can exercise the
  most control over your upgrade process. See the MongoDB `release notes
  <http://www.mongodb.org/downloads>`_ (on the download page) for more
  information about the upgrade process.
optional: true
---
program: mongod
name: traceExceptions
args: null
directive: option
description: |
  For internal diagnostic use only.

  .. see SERVER-6667a
optional: true
---
program: mongod
name: noIndexBuildRetry
# The description for this option applies specifically to the command
# line. The equivalent option in the configuration file has a different
# description because it uses "opposite" wording. The command-line option
# is false by default, while the config-file option is true by default.
args: null
directive: option
description: |
  Stops the {{program}} from rebuilding incomplete indexes on the next
  start up. This applies in cases where the {{program}} restarts after it
  has shut down or stopped in the middle of an index build. In such cases,
  the {{program}} always removes any incomplete indexes, and then also, by
  default, attempts to rebuild them. To stop the {{program}} from
  rebuilding incomplete indexes on start up, include this option on the
  command-line.
post: |
  .. include:: /includes/not-available-for-inmemory-storage-engine.rst

optional: true
---
program: mongod
name: replSet
args: <setname>
directive: option
description: |
  Configures replication. Specify a replica set name as an argument to
  this set. All hosts in the replica set must have the same set name.

  .. include:: /includes/fact-unique-replica-set-names.rst
optional: true
---
program: mongod
name: oplogSize
args: <value>
directive: option
description: |
  {{intro}} maximum size in megabytes for the replication operation log
  (i.e., the :term:`oplog`). The {{program}} process creates an
  :term:`oplog` based on the maximum amount of space available. For 64-bit
  systems, the oplog is typically 5% of available disk space. Once the
  {{program}} has created the oplog for the first time, changing the
  {{role}} option will not affect the size of the oplog.

  See :ref:`replica-set-oplog-sizing` for more information.
optional: true
replacement:
  intro: "Specifies a"
---
program: mongod
name: fastsync
args: null
directive: option
description: |
  In the context of :term:`replica set` replication, set this option
  if you have seeded this member with an up-to-date copy of the entire
  :setting:`~storage.dbPath` of another member of the set. Otherwise the
  {{program}} will attempt to perform an initial sync,
  as though the member were a new member.

  .. warning::
     If the data is not perfectly synchronized *and*
     the {{program}} starts with :option:`fastsync <mongod --fastsync>`, then the
     secondary or slave will be permanently out of sync with the
     primary, which may cause significant consistency problems.
optional: true
---
program: mongod
name: replIndexPrefetch
args: null
default: all
directive: option
description: |
  .. |feature| replace:: {{role}}
  .. include:: /includes/fact-feature-is-mmapv1-only.rst

  {{intro}} :term:`secondary` members of a :term:`replica
  set` load into memory before applying operations from the oplog. By
  default secondaries load all indexes related to an operation into memory
  before applying operations from the oplog.

  Set this {{directive}} to one of the following:

  .. list-table::
     :header-rows: 1
     :widths: 20 40

     * - Value

       - Description

     * - ``none``

       - Secondaries do not load indexes into memory.

     * - ``all``

       - Secondaries load all indexes related to an operation.

     * - ``_id_only``

       - Secondaries load no additional indexes into memory beyond the
         already existing ``_id`` index.
optional: true
replacement:
  intro: "Determines which indexes"
  directive: option
---
program: mongod
name: master
args: null
directive: option
description: |
  Configures the {{program}} to run as a replication :term:`master`.
optional: true
---
program: mongod
name: slave
args: null
directive: option
description: |
  Configures the {{program}} to run as a replication :term:`slave`.
optional: true
---
program: mongod
name: source
args: <host><:port>
directive: option
description: |
  For use with the :option:`--slave` option, the ``--source`` option
  designates the server that this instance will replicate.
optional: true
---
program: mongod
name: only
args: <arg>
directive: option
description: |
  For use with the :option:`--slave` option, the ``--only`` option
  specifies only a single :term:`database` to replicate.
optional: true
---
program: mongod
name: slavedelay
args: <value>
directive: option
description: |
  For use with the :option:`--slave` option, the {{role}}
  option configures a "delay" in seconds, for this slave to wait to
  apply operations from the :term:`master` node.
optional: true
---
program: mongod
name: autoresync
args: null
directive: option
description: |
  For use with the :option:`--slave` option. When set,
  the {{role}} option allows this slave to automatically
  resync if it is more than 10 seconds behind the master. This
  setting may be problematic if the :option:`--oplogSize` specifies
  a too small oplog.

  If the :term:`oplog` is not large enough to store the difference in
  changes between the master's current state and the state of the slave,
  this instance will forcibly resync itself unnecessarily. If you don't
  specify {{role}}, the slave will not attempt an automatic resync more
  than once in a ten minute period.
optional: true
---
program: mongod
name: configsvr
args: null
directive: option
description: |

  *Required if starting a config server.*

  Declares that this {{program}} instance serves as the :ref:`config
  server <sharded-cluster-config-server>` of a sharded cluster. When
  running with this option, clients (i.e. other cluster components)
  cannot write data to any database other than ``config``
  and ``admin``. The default port for a {{program}} with this option is
  ``27019`` and the default :option:`--dbpath` directory is
  ``/data/configdb``, unless specified.

  .. important::

     Starting in 3.4, you must deploy config servers as a replica set.
     The use of the deprecated mirrored :program:`mongod` instances as
     config servers (SCCC) is no longer supported. To convert your
     config servers from SCCC to CSRS, see
     :doc:`/tutorial/upgrade-config-servers-to-replica-set`.

     The replica set config servers (CSRS) must run the
     :doc:`WiredTiger storage engine </core/wiredtiger>`.

  The {{role}} option creates a local :term:`oplog`.

  Do not use the {{role}} option with :option:`--shardsvr`. Config
  servers cannot be a shard server.
optional: false
---
program: mongod
name: shardsvr
args: null
directive: option
description: |
  *Required if starting a shard server.*

  Configures this {{program}} instance as a shard in a
  sharded cluster. The default port for these instances is
  ``27018``.
optional: false
---
program: mongod
name: sslOnNormalPorts
args: null
directive: option
description: |
  .. deprecated:: 2.6 Use {{alternative}} instead.

  {{verb}} TLS/SSL for {{program}}.

  With {{role}}, a {{program}} requires TLS/SSL encryption for all
  connections on the default MongoDB port, or the port specified by
  :option:`--port`. By default, {{role}} is
  disabled.

  .. include:: /includes/fact-ssl-supported.rst
optional: true
replacement:
  verb: "Enables"
  alternative: ":option:`--sslMode requireSSL <--sslMode>`"
---
program: mongod
name: sslMode
args: <mode>
directive: option
description: |
  .. versionadded:: 2.6

  {{verb}} TLS/SSL or mixed TLS/SSL used for all network connections. The
  argument to the {{role}} {{directive}} can be one of the following:

  .. list-table::
     :header-rows: 1
     :widths: 20 40

     * - Value

       - Description

     * - ``disabled``

       - The server does not use TLS/SSL.

     * - ``allowSSL``

       - Connections between servers do not use TLS/SSL. For incoming
         connections, the server accepts both TLS/SSL and non-TLS/non-SSL.

     * - ``preferSSL``

       - Connections between servers use TLS/SSL. For incoming
         connections, the server accepts both TLS/SSL and non-TLS/non-SSL.

     * - ``requireSSL``

       - The server uses and accepts only TLS/SSL encrypted connections.

  .. include:: /includes/fact-ssl-supported.rst

optional: true
replacement:
  verb: "Enables"
  directive: "option"
---
program: mongod
name: sslPEMKeyFile
args: <filename>
directive: option
description: |
  {{intro}} :file:`.pem` file that contains both the TLS/SSL certificate
  and key. Specify the file name of the :file:`.pem` file using relative
  or absolute paths.

  You must specify {{role}} when TLS/SSL is enabled.

  .. include:: /includes/fact-ssl-supported.rst
optional: true
replacement:
  intro: "Specifies the"
---
program: mongod
name: sslPEMKeyPassword
args: <value>
directive: option
description: |
  {{intro}} password to de-crypt the certificate-key file (i.e.
  {{pemKeyOption}}). Use the {{role}} option only if the
  certificate-key file is encrypted. In all cases, the {{program}} will
  redact the password from all logging and reporting output.

  .. versionchanged:: 2.6
     If the private key in the PEM file is encrypted and you do not
     specify the {{role}} option, the {{program}} will prompt for a
     passphrase. See :ref:`ssl-certificate-password`.

  .. include:: /includes/fact-ssl-supported.rst
optional: true
replacement:
  intro: "Specifies the"
  pemKeyOption: ":option:`--sslPEMKeyFile`"
---
program: mongod
name: sslClusterFile
args: <filename>
directive: option
description: |
  .. versionadded:: 2.6

  {{intro}} :file:`.pem` file that contains the x.509 certificate-key
  file for :ref:`membership authentication <x509-internal-authentication>`
  for the cluster or replica set.

  If {{role}} does not specify the ``.pem`` file for internal cluster
  authentication, the cluster uses the ``.pem`` file specified in the
  {{pemKeyOption}} {{directive}}.

  .. include:: /includes/fact-ssl-supported.rst
optional: true
replacement:
  pemKeyOption: ":option:`--sslPEMKeyFile`"
  intro: "Specifies the"
  directive: "option"
---
program: mongod
name: sslClusterPassword
args: <value>
directive: option
description: |
  .. versionadded:: 2.6

  {{intro}} password to de-crypt the x.509 certificate-key file
  specified with ``--sslClusterFile``. Use the {{role}} option only
  if the certificate-key file is encrypted. In all cases, the {{program}}
  will redact the password from all logging and reporting output.

  If the x.509 key file is encrypted and you do not specify the
  {{role}} option, the {{program}} will prompt for a passphrase. See
  :ref:`ssl-certificate-password`.

  .. include:: /includes/fact-ssl-supported.rst
optional: true
replacement:
  intro: "Specifies the"
---
program: mongod
name: sslCAFile
args: <filename>
directive: option
description: |
  .. versionadded:: 2.4

  {{intro}} :file:`.pem` file that contains the root certificate chain
  from the Certificate Authority. Specify the file name of the
  :file:`.pem` file using relative or absolute paths.

  .. include:: /includes/fact-ssl-supported.rst

  .. include:: /includes/warning-x509-requires-sslCAfile.rst
optional: true
replacement:
  intro: "Specifies the"
---
program: mongod
name: sslCRLFile
args: <filename>
directive: option
description: |
  .. versionadded:: 2.4

  {{intro}} the :file:`.pem` file that contains the Certificate Revocation
  List. Specify the file name of the :file:`.pem` file using relative or
  absolute paths.

  .. include:: /includes/fact-ssl-supported.rst
optional: true
replacement:
  intro: "Specifies the"
---
program: mongod
name: sslAllowInvalidCertificates
args: null
directive: option
description: |
  .. versionadded:: 2.6

  {{verb}} the validation checks for TLS/SSL certificates on other servers
  in the cluster and allows the use of invalid certificates.

  When using
  the {{role}} setting, MongoDB
  logs a warning regarding the use of the invalid certificate.

  .. include:: /includes/fact-ssl-supported.rst
optional: true
replacement:
  verb: "Bypasses"
---
program: mongod
name: sslAllowConnectionsWithoutCertificates
args: null
directive: option
pre: |
  .. versionadded:: 2.4

  .. versionchanged:: 3.0.0
     {{old_name}} became {{role}}. For
     compatibility, MongoDB processes continue to accept
     {{old_name}}, but all users should
     update their configuration files.
description: |
  {{verb}} the requirement for TLS/SSL certificate validation that
  {{sslCA_option}} enables. With the {{role}} option, the {{program}}
  will accept connections when the client does not present a certificate
  when establishing the connection.

  If the client presents a certificate and the {{program}} has {{role}}
  enabled, the {{program}} will validate the certificate using the root
  certificate chain specified by {{sslCA_option}} and reject clients
  with invalid certificates.

  Use the {{role}} option if you have a mixed deployment that includes
  clients that do not or cannot present certificates to the {{program}}.

  .. include:: /includes/fact-ssl-supported.rst
replacement:
  verb: "Disables"
  old_name: "``--sslWeakCertificateValidation``"
  sslCA_option: "``--sslCAFile``"
optional: true
---
program: mongod
name: sslAllowInvalidHostnames
args: null
directive: option
description: |
  .. versionadded:: 3.0

  Disables the validation of the hostnames in TLS/SSL certificates, when
  connecting to other {{program}} instances for inter-process
  authentication. This allows {{program}} to connect to other
  {{program}} instances if the hostnames in their certificates do not
  match their configured hostname.

  .. include:: /includes/fact-ssl-supported.rst
optional: true
---
program: mongod
name: sslDisabledProtocols
args: <protocol(s)>
directive: option
description: |
  .. versionadded:: 3.0.7

  Prevents a MongoDB server running with SSL from accepting incoming
  connections that use a specific protocol or protocols. {{role}}
  recognizes the following protocols: ``TLS1_0``, ``TLS1_1``, and
  ``TLS1_2``. Specifying an unrecognized protocol will prevent the
  server from starting.

  To specify multiple protocols, use a comma separated list of
  protocols.

  Members of replica sets and sharded clusters must speak at least one
  protocol in common.

  .. seealso:: :ref:`ssl-disallow-protocols`

optional: true
---
program: mongod
name: sslFIPSMode
args: null
directive: option
description: |
  .. versionadded:: 2.4

  {{intro}} the FIPS mode of the installed OpenSSL
  library{{setting_continuation}}. Your system must have a FIPS
  compliant OpenSSL library to use the {{role}} option.

  .. include:: /includes/note-fips-is-enterprise-only.rst
optional: true
replacement:
  intro: "Directs the {{program}} to use"
  setting_continuation: ""
---
program: mongod
name: auditDestination
args: null
directive: option
replacement:
  intro: "Enables"
pre: |
  .. versionadded:: 2.6

  Enables :doc:`auditing </core/auditing>` and specifies where
  {{program}} sends all audit events.
description: |
  {{role}} can have one of the following values:

  .. list-table::
     :header-rows: 1
     :widths: 15 50

     * - Value

       - Description

     * - ``syslog``

       - Output the audit events to syslog in JSON format. Not available on
         Windows. Audit messages have a syslog severity level of ``info``
         and a facility level of ``user``.

         The syslog message limit can result in the truncation of
         audit messages. The auditing system will neither detect the
         truncation nor error upon its occurrence.

     * - ``console``

       - Output the audit events to ``stdout`` in JSON format.

     * - ``file``

       - Output the audit events to the file specified in
         :option:`--auditPath` in the format specified in
         :option:`--auditFormat`.

  .. include:: /includes/note-audit-in-enterprise-only.rst
optional: true
---
program: mongod
name: auditFormat
args: null
directive: option
description: |
  .. versionadded:: 2.6

  {{intro}} format of the output file for :doc:`auditing
  </core/auditing>` if {{destination}} is ``file``. The
  {{role}} option can have one of the following values:

  .. list-table::
     :header-rows: 1
     :widths: 15 50

     * - Value

       - Description

     * - ``JSON``

       - Output the audit events in JSON format to the file specified
         in :option:`--auditPath`.

     * - ``BSON``

       - Output the audit events in BSON binary format to the file
         specified in :option:`--auditPath`.

  Printing audit events to a file in JSON format degrades server
  performance more than printing to a file in BSON format.

  .. include:: /includes/note-audit-in-enterprise-only.rst
optional: true
replacement:
  intro: "Specifies the"
  destination: ":option:`--auditDestination`"
---
program: mongod
name: auditPath
args: null
directive: option
description: |
  .. versionadded:: 2.6

  {{intro}} output file for :doc:`auditing </core/auditing>` if
  {{destination}} has value of ``file``. The {{role}}
  option can take either a full path name or a relative path name.

  .. include:: /includes/note-audit-in-enterprise-only.rst
optional: true
replacement:
  intro: "Specifies the"
  destination: ":option:`--auditDestination`"
---
program: mongod
name: auditFilter
args: null
directive: option
description: |
  .. versionadded:: 2.6

  {{intro}} filter to limit the :ref:`types of operations
  <audit-action-details-results>` the :doc:`audit system
  </core/auditing>` records. The option takes a string representation
  of a query document of the form:

  .. code-block:: javascript

     { <field1>: <expression1>, ... }

  The ``<field>`` can be :doc:`any field in the audit message
  </reference/audit-message>`, including fields returned in the
  :ref:`param <audit-action-details-results>` document. The
  ``<expression>`` is a :ref:`query condition expression
  <query-selectors>`.

  .. include:: /includes/fact-audit-filter-single-quotes.rst

  .. include:: /includes/fact-audit-filter-yaml-configuration.rst

  .. include:: /includes/note-audit-in-enterprise-only.rst

optional: true
replacement:
  intro: "Specifies the"
---
program: mongod
name: snmp-subagent
args: null
directive: option
description: |
  {{intro}} as a subagent. For more information, see
  :doc:`/tutorial/monitor-with-snmp`.
optional: true
replacement:
  intro: "Runs SNMP"
---
program: mongod
name: snmp-master
args: null
directive: option
description: |
  {{intro}} as a master. For more information, see
  :doc:`/tutorial/monitor-with-snmp`.
optional: true
replacement:
  intro: "Runs SNMP"
---
program: mongod
name: wiredTigerEngineConfigString
args: "<option>=<setting>"
directive: option
description: |
  .. versionadded:: 3.0.0

  Specifies the WiredTiger storage engine configuration at start up
  time. See the :wtdocs:`WiredTiger storage engine options </group__wt.html>`.
optional: true
---
program: mongod
name: wiredTigerCollectionConfigString
args: "<option>=<setting>"
directive: option
description: |
  .. versionadded:: 3.0.0

  {{intro}} WiredTiger settings for all new collections.
  See the :wtdocs:`WiredTiger collection-level options
  </struct_w_t___s_e_s_s_i_o_n.html>`.
optional: true
replacement:
  intro: "Changes"
---
program: mongod
name: wiredTigerIndexConfigString
args: "<option>=<setting>"
directive: option
description: |
  .. versionadded:: 3.0.0

  {{intro}} WiredTiger settings for all new indexes.
  See the :wtdocs:`WiredTiger collection-level options
  </struct_w_t___s_e_s_s_i_o_n.html>`.
optional: true
replacement:
  intro: "Changes"
---
program: mongod
name: wiredTigerDirectoryForIndexes
directive: option
args: null
description: |
  .. versionadded:: 3.0.0

  {{intro}}, {{program}} stores indexes and collections in separate
  subdirectories under the data (i.e. {{dbpath}}) directory.
  Specifically, {{program}} stores the indexes in a subdirectory named
  ``index`` and the collection data in a subdirectory named
  ``collection``.

  By using a symbolic link, you can specify a different location for
  the indexes. Specifically, when :program:`mongod` instance is **not**
  running, move the ``index`` subdirectory to the destination and
  create a symbolic link named ``index`` under the data directory to
  the new destination.

optional: true
replacement:
  intro: "When you start {{program}} with {{role}}"
  dbpath: ":option:`--dbpath``"
---
program: mongod
name: storageEngine
args: string
directive: option
description: |
  .. versionadded:: 3.0

  .. versionchanged:: 3.2

     Starting in MongoDB 3.2, ``wiredTiger`` is the default.

  {{intro}} storage engine for the {{program}} database. Available
  values include:

  .. list-table::
     :header-rows: 1
     :widths: 20 80

     * - Value
       - Description

     * - ``mmapv1``
       - To specify the :doc:`/core/mmapv1`.

     * - ``wiredTiger``
       - To specify the :doc:`/core/wiredtiger`.

     * - ``inMemory``

       - To specify the :doc:`/core/inmemory`.

         .. versionadded:: 3.2
            Available in MongoDB Enterprise only.

post: |
  If you attempt to start a {{program}} with a
  {{dbpath}} that contains data files produced by a
  storage engine other than the one specified by {{role}}, {{program}}
  will refuse to start.
optional: true
default: "``wiredTiger``"
replacement:
  intro: "Specifies the"
  dbpath: ":option:`--dbpath`"
---
program: mongod
name: wiredTigerCacheSizeGB
directive: option
optional: true
args: "float"
description: |

   {{intro}} maximum size of the internal cache that WiredTiger will
   use for all data.

   .. versionchanged:: 3.4

      Values can range from 256MB to 10TB and can be a float. In
      addition, the default value has also changed.

   .. include:: /includes/extracts/wt-cache-default-setting.rst

   Avoid increasing the WiredTiger internal cache size above its
   default value.

   With WiredTiger, MongoDB utilizes both the WiredTiger internal cache
   and the filesystem cache.

   .. include:: /includes/extracts/wt-filesystem-cache.rst

post: |
  .. include:: /includes/extracts/wt-cache-additional-constraints-mongod-cmdline-option.rst
replacement:
  intro: "Defines the"
---
program: mongod
name: wiredTigerJournalCompressor
directive: option
optional: true
default: "snappy"
args: "<compressor>"
description: |

  .. versionadded:: 3.0.0

  {{intro}} type of compression to use to compress WiredTiger
  journal data.

  Available compressors are:

  - ``none``

  - :term:`snappy`

  - :term:`zlib`
replacement:
  intro: "Specifies the"
---
program: mongod
name: wiredTigerCollectionBlockCompressor
directive: option
optional: true
default: "snappy"
args: "<compressor>"
description: |

  .. versionadded:: 3.0.0

  {{intro}} default type of compression to use to compress collection
  data. You can override this on a per-collection basis when creating
  collections.

  Available compressors are:

  - ``none``

  - :term:`snappy`

  - :term:`zlib`

  {{role}} affects all collections created. If you change
  the value of {{role}} on an existing MongoDB deployment, all new
  collections will use the specified compressor. Existing collections
  will continue to use the compressor specified when they were
  created, or the default compressor at that time.
replacement:
  intro: "Specifies the"
---
program: mongod
name: wiredTigerIndexPrefixCompression
directive: option
optional: true
args: "<boolean>"
default: "true"
description: |

  .. versionadded:: 3.0.0

  Enables or disables :term:`prefix compression` for index data.

  Specify ``true`` for {{role}} to enable :term:`prefix compression` for
  index data, or ``false`` to disable prefix compression for index data.

  The {{role}} setting affects all indexes created. If you change
  the value of {{role}} on an existing MongoDB deployment, all new
  indexes will use prefix compression. Existing indexes
  are not affected.
---
program: mongod
name: basisTechRootDirectory
directive: option
optional: true
args: "<path>"
description: |

  .. versionadded:: 3.2

  Specify the root directory of the Basis Technology Rosette
  Linguistics Platform installation to support additional languages for
  text search operations.

  .. include:: /includes/fact-enterprise-only-admonition.rst
---
program: mongod
name: enableEncryption
directive: option
optional: true
args: <boolean>
default:  false
description: |

   .. versionadded:: 3.2

   Enables encryption for the WiredTiger storage engine. You must set
   to ``true`` to pass in encryption keys and configurations.

   .. include:: /includes/fact-enterprise-only-admonition.rst
---
program: mongod
name: encryptionCipherMode
directive: option
optional: true
args: <string>
default: "AES256-CBC"
description: |

   .. versionadded:: 3.2

   The cipher mode to use for encryption at rest:

   .. list-table::
      :header-rows: 1
      :widths: 35 65

      * - Mode
        - Description

      * - ``AES256-CBC``
        - 256-bit Advanced Encryption Standard in Cipher Block Chaining
          Mode

      * - ``AES256-GCM``

        - 256-bit Advanced Encryption Standard in Galois/Counter Mode

   .. include:: /includes/fact-enterprise-only-admonition.rst
---
program: mongod
name: encryptionKeyFile
directive: option
optional: true
args: <string>
description: |

   .. versionadded:: 3.2

   The path to the local keyfile when managing keys via process *other
   than* KMIP. Only set when managing keys via process other than KMIP.
   If data is already encrypted using KMIP, MongoDB will throw an error.

   Requires :setting:`enableEncryption` to be ``true``.

   .. include:: /includes/fact-enterprise-only-admonition.rst
---
program: mongod
name: kmipKeyIdentifier
directive: option
optional: true
args: <string>
description: |

   .. versionadded:: 3.2

   Unique KMIP identifier for an existing key within the KMIP server.
   Include to use the key associated with the identifier as the system
   key. You can only use the setting the first time you enable
   encryption for the :program:`mongod` instance. Requires
   :setting:`enableEncryption` to be true.

   If unspecified, MongoDB will request that the KMIP server create a
   new key to utilize as the system key.

   If the KMIP server cannot locate a key with the specified identifier
   or the data is already encrypted with a key, MongoDB will throw an
   error

   .. include:: /includes/fact-enterprise-only-admonition.rst
---
program: mongod
name: kmipRotateMasterKey
directive: option
optional: true
args: <boolean>
default:  false
description: |

   .. versionadded:: 3.2

   If true, rotate the master key and re-encrypt the internal
   keystore.

   .. include:: /includes/fact-enterprise-only-admonition.rst

   .. seealso:: :ref:`kmip-master-key-rotation`
---
program: mongod
name: kmipServerName
directive: option
optional: true
args:  <string>
description: |

   .. versionadded:: 3.2

   Hostname or IP address of key management solution running a KMIP
   server. Requires :setting:`enableEncryption` to be true.

   .. include:: /includes/fact-enterprise-only-admonition.rst
---
program: mongod
name: kmipPort
directive: option
optional: true
args: <number>
default:  5696
description: |

   .. versionadded:: 3.2

   Port number the KMIP server is listening on. Requires that a
   :setting:`kmipServerName` be provided. Requires
   :setting:`enableEncryption` to be true.

   .. include:: /includes/fact-enterprise-only-admonition.rst

---
program: mongod
name: kmipClientCertificateFile
directive: option
optional: true
args:  <string>
description: |

   .. versionadded:: 3.2

   String containing the path to the client certificate used for
   authenticating MongoDB to the KMIP server. Requires that a
   :setting:`kmipServerName` be provided.

   .. include:: /includes/fact-enterprise-only-admonition.rst

---
program: mongod
name: kmipClientCertificatePassword
directive: option
optional: true
args:  <string>
description: |

   .. versionadded:: 3.2

   The password (if one exists) for the client certificate passed into
   :setting:`kmipClientCertificateFile`. Is used for
   authenticating MongoDB to the KMIP server. Requires that a
   :setting:`kmipClientCertificateFile` be provided.

   .. include:: /includes/fact-enterprise-only-admonition.rst

---
program: mongod
name: kmipServerCAFile
directive: option
optional: true
args:  <string>
description: |

   .. versionadded:: 3.2

   Path to CA File. Used for validating secure client connection to
   KMIP server.
---
program: mongod
name: enableMajorityReadConcern
directive: option
optional: true
args: null
description: |

   .. versionadded:: 3.2

   Enables :term:`read concern` level of ``"majority"``. By default,
   ``"majority"`` level is not enabled.
---
program: mongod
name: configsvrMode
optional: true
args: <string>
description: |
   **Available in MongoDB 3.2 version only**

   If set to ``sccc``, indicates that the config servers are deployed
   as three mirrored :program:`mongod` instances, even if one or more
   config servers is also a member of a replica set. ``configsvrMode``
   only accepts the value ``sccc``.

   If unset, config servers running as replica sets expect to use the
   "config server replica set" protocol for writing to config servers,
   rather than the "mirrored mongod" write protocol.

directive: option
---
program: mongod
name: inMemorySizeGB
optional: true
args: <float>
default: |
   50% of physical RAM less 1 GB
directive: option
description: |
   .. versionchanged:: 3.4

      Values can range from 256MB to 10TB and can be a float.

   Maximum amount of memory to allocate for :doc:`in-memory storage
   engine </core/inmemory>` data, including indexes, oplog if the
   :program:`mongod` is part of replica set, replica set or sharded
   cluster metadata, etc.

   .. include:: /includes/fact-inmemory-storage-engine-default-ram.rst

   .. include:: /includes/fact-enterprise-only-admonition.rst
---
program: mongod
name: moveParanoia
args: null
directive: option
description: |
  If specified, during chunk migration, a shard saves,
  to the ``moveChunk`` directory of the {{dbpath}}, all documents
  migrated from that shard.

  MongoDB does not automatically delete the data saved in the
  ``moveChunk`` directory.

optional: true
replacement:
   dbpath: "``--dbpath``"
---
program: mongod
name: noMoveParanoia
args: null
directive: option
description: |
  .. versionchanged:: 3.2
     Starting in 3.2, MongoDB uses {{defaultParanoia}} as the default.

  During chunk migration, a shard does not save documents migrated from
  the shard.

optional: true
replacement:
   dbpath: "``--dbpath``"
   defaultParanoia: "``--noMoveParanoia``"
---
program: mongod
name: transitionToAuth
args: null
directive: option
description: |
  .. versionadded:: 3.4

     Allows the {{program}} to accept and create authenticated and
     non-authenticated connections to and from other :program:`mongod`
     and :program:`mongos` instances in the deployment. Used for
     performing rolling transition of replica sets or sharded clusters
     from a no-auth configuration to :ref:`internal authentication
     <inter-process-auth>`. Requires specifying a :ref:`internal
     authentication <inter-process-auth>` mechanism such as
     :option:`--keyfile`.

  For example, if using :ref:`keyfiles <internal-auth-keyfile>` for
  :ref:`internal authentication <inter-process-auth>`, the {{program}} creates
  an authenticated connection with any :program:`mongod` or :program:`mongos`
  in the deployment using a matching keyfile. If the security mechanisms do
  not match, the {{program}} utilizes a non-authenticated connection instead.

  A {{program}} running with {{role}} does not enforce :ref:`user access
  controls <authorization>`. Users may connect to your deployment without any
  access control checks and perform read, write, and administrative operations.

  .. note::

     A {{program}} running with :ref:`internal authentication
     <inter-process-auth>` and *without* {{role}} requires clients to connect
     using :ref:`user access controls <authorization>`. Update clients to
     connect to the {{program}} using the appropriate :ref:`user <users>`
     prior to restarting {{program}} without {{role}}.

optional: true
---
program: mongod
name: redactClientLogData
args: null
directive: option
description: |
  .. versionadded:: 3.4 Available in MongoDB Enterprise only.

  A {{program}} running with {{role}} redacts any message accompanying a given
  log event before logging. This prevents the {{program}} from writing
  potentially sensitive data stored on the database to the diagnostic log.
  Metadata such as error or operation codes, line numbers, and source file
  names are still visible in the logs.

  Use {{role}} in conjunction with :doc:`encryption
  </core/security-encryption>` to assist compliance with regulatory
  requirements.

  For example, a MongoDB deployment might store Personally Identifiable
  Information (PII) in one or more collections. The {{program}} logs events
  such as those related to CRUD operations, sharding metadata, etc. It is
  possible that the {{program}} may expose PII as a part of these logging
  operations. A {{program}} running with {{role}} removes any message
  accompanying these events before being output to the log, effectively
  removing the PII.

  Diagnostics on a {{program}} running with {{role}} may be more difficult
  due to the lack of data related to a log event. See the
  :ref:`process logging <monitoring-log-redaction>` manual page for an
  example of the effect of {{role}} on log output.

  You can enable or disable log redaction on a running {{program}}
  using the :dbcommand:`setParameter` database command.

  .. code-block:: javascript

     db.adminCommand(
       { setParameter: 1, redactClientLogData : true | false }
     )
---
program: mongod
name: ldapServers
args: "<host1>:<port>,<host2>:<port>,...,<hostN>:<port>"
directive: option
optional: true
description: |
  .. versionadded:: 3.4 Available in MongoDB Enterprise only.

  The LDAP server against which the {{program}} executes LDAP operations
  against to authenticate users or determine what actions a user is authorized
  to perform on a given database. If the LDAP server specified has any
  replicated instances, you may specify the host and port of each replicated
  server in a comma-delimited list.

  If your LDAP infrastrucure partitions the LDAP directory over multiple LDAP
  servers, specify *one* LDAP server any of its replicated instances to
  {{role}}. MongoDB supports following LDAP referrals as defined in `RFC 4511
  4.1.10 <https://www.rfc-editor.org/rfc/rfc4511.txt>`_. Do not use {{role}}
  for listing every LDAP server in your infrastucture.

  This setting can be configured on a running {{program}} using
  :dbcommand:`setParameter`.

  If unset, {{program}} cannot use :doc:`LDAP authentication or authorization
  </core/security-ldap>`.
---
program: mongod
name: ldapQueryUser
args: <string>
directive: option
optional: true
description: |
  .. versionadded:: 3.4 Available in MongoDB Enterprise only.

  The identity with which {{program}} binds as, when connecting to or
  performing queries on an LDAP server.

  Only required if any of the following are true:

  - Using :ref:`LDAP authorization <security-ldap-external>`.
  - Using an LDAP query for {{transform}}.
  - The LDAP server disallows anonymous binds

  You must use {{role}} with {{queryPassword}}.

  If unset, {{program}} will not attempt to bind to the LDAP server.

  This setting can be configured on a running {{program}} using
  :dbcommand:`setParameter`.

  .. note::

     Windows MongoDB deployments can use {{bindWithOSDefaults}}
     instead of {{role}} and {{queryPassword}}. You cannot specify
     both {{role}} and {{bindWithOSDefaults}} at the same time.
replacement:
  queryPassword: ":option:`--ldapQueryPassword`"
  bindWithOSDefaults: ":option:`--ldapBindWithOSDefaults`"
  transform: ":option:`username transformation <--ldapUserToDNMapping>`"
---
program: mongod
name: ldapQueryPassword
args: <string>
directive: option
optional: true
description: |
  .. versionadded:: 3.4 Available in MongoDB Enterprise only.

    The password used to bind to an LDAP server when using
    {{queryUser}}. You must use {{role}} with
    {{queryUser}}.

  If unset, {{program}} will not attempt to bind to the LDAP server.

  This setting can be configured on a running {{program}} using
  :dbcommand:`setParameter`.

  .. note::

     Windows MongoDB deployments can use :option:`--ldapBindWithOSDefaults`
     instead of {{role}} and :option:`--ldapQueryPassword`. You cannot specify
     both {{role}} and :option:`--ldapBindWithOSDefaults` at the same time.
replacement:
  queryUser: ":option:`--ldapQueryUser`"
---
program: mongod
name: ldapBindWithOSDefaults
args: <bool>
directive: option
optional: true
default: false
description: |
  .. versionadded:: 3.4

     Available in MongoDB Enterprise for the Windows platform only.

  Allows {{program}} to authenticate, or bind, using your Windows login
  credentials when connecting to the LDAP server.

  Only required if:

  - Using :ref:`LDAP authorization <security-ldap-external>`.
  - Using an LDAP query for :option:`username transformation
    <--ldapUserToDNMapping>`.
  - The LDAP server disallows anonymous binds

  Use {{role}} to replace :option:`--ldapQueryUser` and
  :option:`--ldapQueryPassword`.
replacement:
  queryUser: ":option:`--ldapQueryUser`"
  queryPassword: ":option:`--ldapQueryPassword`"
---
program: mongod
name: ldapBindMethod
args: <string>
directive: option
optional: true
default: simple
description: |
  .. versionadded:: 3.4 Available in MongoDB Enterprise only.

  The method {{program}} uses to authenticate to an LDAP server.
  Use with {{queryUser}} and {{queryPassword}} to
  connect to the LDAP server.

  {{role}} supports the following values:

  * ``simple`` - {{program}} uses simple authentication.

  * ``sasl`` - {{program}} uses SASL protocol for authentication

  If you specify ``sasl``, you can configure the available SASL mechanisms
  using {{bindSASLMech}}. {{program}} defaults to
  using ``DIGEST-MD5`` mechanism.
replacement:
  queryUser: ":option:`--ldapQueryUser`"
  queryPassword: ":option:`--ldapQueryPassword`"
  bindSASLMech: ":option:`--ldapBindSASLMechanisms`"
---
program: mongod
name: ldapBindSASLMechanisms
args: <string>
directive: option
optional: true
default: DIGEST-MD5
description: |
  .. versionadded:: 3.4 Available in MongoDB Enterprise only.

  A comma-separated list of SASL mechanisms {{program}} can
  use when authenticating to the LDAP server. The {{program}} and the
  LDAP server must agree on at least one mechanism.

  Set {{bindMethod}} to ``sasl`` to use this option.

  .. note::

     A complete list of SASL mechanisms is out of scope for this
     documentation. See the IANA list of `SASL mechanisms
     <http://www.iana.org/assignments/sasl-mechanisms/sasl-mechanisms.xhtml>`_,
     as well as the documentation for your LDAP service.
replacement:
  bindMethod: ":option:`--ldapBindMethod`"
---
program: mongod
name: ldapTransportSecurity
args: <string>
directive: option
optional: true
default: tls
description: |
  .. versionadded:: 3.4 Available in MongoDB Enterprise only.

  By default, {{program}} creates a TLS/SSL secured connection to the LDAP
  server.

  For Linux deployments, you must configure the appropriate TLS Options in
  ``/etc/openldap/ldap.conf`` file. Your operating system's package manager
  creates this file as part of the MongoDB Enterprise installation, via the
  ``libldap`` dependency. See the documentation for ``TLS Options`` in the
  `ldap.conf OpenLDAP documentation
  <http://www.openldap.org/software/man.cgi?query=ldap.conf&manpath=OpenLDAP+2.4-Release>`_
  for more complete instructions.

  For Windows deployment, you must add the LDAP server CA certificates to the
  Windows certificate management tool. The exact name and functionality of the
  tool may vary depending on operating system version. Please see the
  documentation for your version of Windows for more information on
  certificate management.

  Set {{role}} to ``none`` to disable TLS/SSL between {{program}} and the LDAP
  server.

  .. warning::

     Setting {{role}} to ``none`` transmits plaintext information and possibly
     credentials between {{program}} and the LDAP server.

---
program: mongod
name: ldapTimeoutMS
args: <long>
directive: option
optional: true
default: 10000
description: |
  .. versionadded:: 3.4 Available in MongoDB Enterprise only.

  The amount of time in milliseconds {{program}} should wait for an LDAP server
  to respond to a request.

  Increasing the value of {{role}} may prevent connection failure between the
  MongoDB server and the LDAP server, if the source of the failure is a
  connection timeout. Decreasing the value of {{role}} reduces the time
  MongoDB waits for a response from the LDAP server.

  This setting can be configured on a running {{program}} using
  :dbcommand:`setParameter`.

---
program: mongod
name: ldapUserToDNMapping
args: <string>
directive: option
optional: true
description: |
  .. versionadded:: 3.4 Available in MongoDB Enterprise only.

  Maps the username provided to {{program}} for authentication to a LDAP
  Distinguished Name (DN). You may need to use {{role}} to transform a
  username into an LDAP DN in the following scenarios:

  - Performing LDAP authentication with simple LDAP binding, where users
    authenticate to MongoDB with usernames that are not full LDAP DNs.

  - Using an :option:`LDAP authorization query template
    <--ldapAuthzQueryTemplate>` that requires a DN.

  - Transforming the usernames of clients authenticating to Mongo DB using
    different authentication mechanisms (e.g. x.509, kerberos) to a full LDAP
    DN for authorization.

  {{role}} expects a quote-enclosed JSON-string representing an ordered array
  of documents. Each document contains a regular expression ``match`` and
  either a ``substitution`` or ``ldapQuery`` template used for transforming the
  incoming username.

  Each document in the array has the following form:

  .. code-block:: javascript

     {
       match: "<regex>"
       substitution: "<LDAP DN>" | ldapQuery: "<LDAP Query>"
     }

  .. list-table::
     :header-rows: 1
     :widths: 10 70 20

     * - Field
       - Description
       - Example

     * - ``match``
       - An ECMAScript-formatted regular expression (regex) to match against a
         provided username. Each parenthesis-enclosed section represents a
         regex capture group used by ``substitution`` or ``ldapQuery``.
       - ``"(.+)ENGINEERING"``
         ``"(.+)DBA"``

     * - ``substitution``

       - An LDAP distinguished name (DN) formatting template that converts the
         authentication name matched by the ``match`` regex into a LDAP DN.
         Each curly bracket-enclosed numeric value is replaced by the
         corresponding `regex capture group
         <http://www.regular-expressions.info/refcapture.html>`_ extracted
         from the authentication username via the ``match`` regex.

       - ``"cn={0},ou=engineering,
         dc=example,dc=com"``

     * - ``ldapQuery``

       - A LDAP query formatting template that inserts the authentication
         name matched by the ``match`` regex into an LDAP query URI encoded
         respecting RFC4515 and RFC4516. Each curly bracket-enclosed numeric
         value is replaced by the corresponding `regex capture group
         <http://www.regular-expressions.info/refcapture.html>`_ extracted
         from the authentication username via the ``match`` expression.
         {{program}} executes the query against the LDAP server to retrieve
         the LDAP DN for the authenticated user. {{program}} requires
         exactly one returned result for the transformation to be
         successful, or {{program}} skips this transformation.

       - ``"ou=engineering,dc=example,
         dc=com??one?(user={0})"``

  For each document in the array, you must use either ``substitution`` or
  ``ldapQuery``. You *cannot* specify both in the same document.

  When performing authentication or authorization, {{program}} steps through
  each document in the array in the given order, checking the authentication
  username against the ``match`` filter.  If a match is found,
  {{program}} applies the transformation and uses the output for
  authenticating the user. {{program}} does not check the remaining documents
  in the array.

  If the given document does not match the provided authentication name, or
  the transformation described by the document fails, {{program}} continues
  through the list of documents to find additional matches. If no matches are
  found in any document, {{program}} returns an error.

  .. example::

    The following shows two transformation documents. The first
    document matches against any string ending in ``@ENGINEERING``, placing
    anything preceeding the suffix into a regex capture group. The
    second document matches against any string ending in ``@DBA``, placing
    anything preceeding the suffix into a regex capture group.

    .. important::  You must pass the array to {{role}} as a string.

    .. code-block:: text

       "[
          {
             match: "(.+)@ENGINEERING.EXAMPLE.COM",
             substitution: "cn={0},ou=engineering,dc=example,dc=com"
          },
          {
             match: "(.+)@DBA.EXAMPLE.COM",
             ldapQuery: "ou=dba,dc=example,dc=com??one?(user={0})"

          }

       ]"

    A user with username ``alice@ENGINEERING.EXAMPLE.COM`` matches the first
    document. The regex capture group ``{0}`` corresponds to the string
    ``alice``. The resulting output is the DN
    ``"cn=alice,ou=engineering,dc=example,dc=com"``.

    A user with username ``bob@DBA.EXAMPLE.COM`` matches the second document.
    The regex capture group ``{0}`` corresponds to the string ``bob``.  The
    resulting output is the LDAP query
    ``"ou=dba,dc=example,dc=com??one?(user=bob)"``. {{program}} executes this
    query against the LDAP server, returning the result
    ``"cn=bob,ou=dba,dc=example,dc=com"``.

  If {{role}} is unset, {{program}} applies no transformations to the username
  when attempting to authenticate or authorize a user against the LDAP server.

  This setting can be configured on a running {{program}} using the
  :dbcommand:`setParameter` database command.

  .. note::

     An explanation of `RFC4515 <https://tools.ietf.org/search/rfc4515>`_,
     `RFC4516 <https://tools.ietf.org/html/rfc4516>`_ or LDAP queries is out
     of scope for the MongoDB Documentation. Please review the RFC directly or
     use your preferred LDAP resource.

---
program: mongod
name: ldapAuthzQueryTemplate
args: <string>
directive: option
optional: true
description: |
  .. versionadded:: 3.4 Available in MongoDB Enterprise only.

  A relative LDAP query URL formatted conforming to `RFC4515
  <https://tools.ietf.org/search/rfc4515>`_ and `RFC4516
  <https://tools.ietf.org/html/rfc4516>`_ that {{program}} executes to obtain
  the LDAP groups to which the authenticated user belongs to. The query is
  relative to the host or hosts specified in :option:`--ldapServer`.

  Use the ``{USER}`` placeholder in the URL to substitute the authenticated
  username, or the transformed username if a {{mapping}} is specified.

  When constructing the query URL, ensure that the order of LDAP parameters
  respects RFC4516:

  .. code-block:: shell

    [ dn  [ ? [attributes] [ ? [scope] [ ? [filter] [ ? [Extensions] ] ] ] ] ]

  If your query includes an attribute, {{program}} assumes that the query
  retrieves a the DNs which this entity is member of.

  If your query does not include an attribute, {{program}} assumes
  the query retrieves all entities which the user is member of.

  For each LDAP DN returned by the query, {{program}} assigns the authorized
  user a corresponding role on the ``admin`` database. If a role on the on the
  ``admin`` database exactly matches the DN, {{program}} grants the user the
  roles and privileges assigned to that role. See the
  :method:`db.createRole()` method for more information on creating roles.

  .. example::

    This LDAP query returns any groups listed in the LDAP user object's
    ``memberOf`` attribute.

    .. code-block:: shell

       "{USER}?memberOf?base"

    Your LDAP configuration may not include the ``memberOf`` attribute as part
    of the user schema, may possess a different attribute for reporting group
    membership, or may not track group membership through attributes.
    Configure your query with respect to your own unique LDAP configuration.

  If unset, {{program}} cannot authorize users using LDAP.

  This setting can be configured on a running {{program}} using the
  :dbcommand:`setParameter` database command.

  .. note::

     An explanation of `RFC4515 <https://tools.ietf.org/search/rfc4515>`_,
     `RFC4516 <https://tools.ietf.org/html/rfc4516>`_ or LDAP queries is out
     of scope for the MongoDB Documentation. Please review the RFC directly or
     use your preferred LDAP resource.
replacement:
  mapping: ":option:`username mapping <--ldapUserToDNMapping>`"
---
program: mongod
name: timeZoneInfo
directive: option
args: <path>
description: |
  .. include:: /includes/fact-timeZoneInfo.rst
optional: true
---
program: mongod
name: networkMessageCompressors
args: <string>
directive: option
description: |

   .. versionadded:: 3.4

   .. versionchanged:: 3.6

      Add support for :term:`zlib` compressor.

   Enables network compression for communication between this
   {{program}} instance and:

   - other members of the replica set, if the instance is part of a
     replica set

   - other members of the sharded cluster, if the instance is part of a
     sharded cluster

   - a :program:`mongo` shell.

   .. include:: /includes/fact-networkMessageCompressors.rst


optional: true
...
