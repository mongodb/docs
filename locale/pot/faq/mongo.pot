# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/faq/mongo.txt:3
# e235b2804f3740f3af4a64a2e527c1a0
msgid "FAQ: The ``mongo`` Shell"
msgstr ""

#: ../source/faq/mongo.txt:10
# 841b8e8114fa4316bf4b854f15a8ff58
msgid "How can I enter multi-line operations in the ``mongo`` shell?"
msgstr ""

#: ../source/faq/mongo.txt:12
# 56bcc49774684df8a68d2211c518c71b
msgid "If you end a line with an open parenthesis (``'('``), an open brace (``'{'``), or an open bracket (``'['``), then the subsequent lines start with ellipsis (``\"...\"``) until you enter the corresponding closing parenthesis (``')'``), the closing brace (``'}'``) or the closing bracket (``']'``). The :program:`mongo` shell waits for the closing parenthesis, closing brace, or the closing bracket before evaluating the code, as in the following example:"
msgstr ""

#: ../source/faq/mongo.txt:27
# a436deb82a1d4c3fb2348b1dfe15e823
msgid "You can exit the line continuation mode if you enter two blank lines, as in the following example:"
msgstr ""

#: ../source/faq/mongo.txt:40
# b84a00beddfa4876a1c559c259e27c11
msgid "How can I access different databases temporarily?"
msgstr ""

#: ../source/faq/mongo.txt:42
# 22939eafb33d441fa3164bf868db3368
msgid "You can use :method:`db.getSiblingDB()` method to access another database without switching databases, as in the following example which first switches to the ``test`` database and then accesses the ``sampleDB`` database from the ``test`` database:"
msgstr ""

#: ../source/faq/mongo.txt:56
# cbd7ef126e334b569bb014ccda0ec901
msgid "Does the ``mongo`` shell support tab completion and other keyboard shortcuts?"
msgstr ""

#: ../source/faq/mongo.txt:58
# c27b4a80a4204a2696a66f92dde5aec5
msgid "The :program:`mongo` shell supports keyboard shortcuts. For example,"
msgstr ""

#: ../source/faq/mongo.txt:60
# c4b6ef3e8b8c45a9b6d43becf9a18fd1
msgid "Use the up/down arrow keys to scroll through command history. See :ref:`.dbshell <mongo-dbshell-file>` documentation for more information on the ``.dbshell`` file."
msgstr ""

#: ../source/faq/mongo.txt:64
# d226d3cd122e44acb90f5a028e7bda64
msgid "Use ``<Tab>`` to autocomplete or to list the completion possibilities, as in the following example which uses ``<Tab>`` to complete the method name starting with the letter ``'c'``:"
msgstr ""

#: ../source/faq/mongo.txt:72
# 69b06bda4d9a49ed955bc870150ed722
msgid "Because there are many collection methods starting with the letter ``'c'``, the ``<Tab>`` will list the various methods that start with ``'c'``."
msgstr ""

#: ../source/faq/mongo.txt:76
# bf17fe1442c9446bb9f4e73e292e90f3
msgid "For a full list of the shortcuts, see :ref:`Shell Keyboard Shortcuts <mongo-keyboard-shortcuts>`"
msgstr ""

#: ../source/faq/mongo.txt:79
# 9f8263e031c44d50b3bea35a1ae9759c
msgid "How can I customize the ``mongo`` shell prompt?"
msgstr ""

#: ../source/faq/mongo.txt:83
# 1b13ecb0f1d54726b35b069f5694a0fd
msgid "You can change the :program:`mongo` shell prompt by setting the ``prompt`` variable. This makes it possible to display additional information in the prompt."
msgstr ""

#: ../source/faq/mongo.txt:87
# 896116ef444341c9aeccd882d8328044
msgid "Set ``prompt`` to any string or arbitrary JavaScript code that returns a string, consider the following examples:"
msgstr ""

#: ../source/faq/mongo.txt:90
# 98c1e2d6c839461c868668177e171aea
msgid "Set the shell prompt to display the hostname and the database issued:"
msgstr ""

#: ../source/faq/mongo.txt:97
#: ../source/faq/mongo.txt:111
# 53edcfa377074b1490cd866c5eb5cd54
# a47b0716e0c442e2a0a01a5305b647ae
msgid "The :program:`mongo` shell prompt should now reflect the new prompt:"
msgstr ""

#: ../source/faq/mongo.txt:103
# ca1cf0c0290e4bb8957779d6876e4fd2
msgid "Set the shell prompt to display the database statistics:"
msgstr ""

#: ../source/faq/mongo.txt:117
# d78b9cf88ea045a6b8e7bce7a6b7fbd2
msgid "You can add the logic for the prompt in the :ref:`.mongorc.js <mongo-mongorc-file>` file to set the prompt each time you start up the :program:`mongo` shell."
msgstr ""

#: ../source/faq/mongo.txt:122
# 48fa191029cb4735bcfc5d4ae650040a
msgid "Can I edit long shell operations with an external text editor?"
msgstr ""

#: ../source/faq/mongo.txt:126
# 5597c27c7c5b4dc5852c887bda1948db
msgid "You can use your own editor in the :program:`mongo` shell by setting the :envvar:`EDITOR` environment variable before starting the :program:`mongo` shell. Once in the :program:`mongo` shell, you can edit with the specified editor by typing ``edit <variable>`` or ``edit <function>``, as in the following example:"
msgstr ""

#: ../source/faq/mongo.txt:132
# 4bd7697477f442a3883b657aa3390cf1
msgid "Set the :envvar:`EDITOR` variable from the command line prompt:"
msgstr ""

#: ../source/faq/mongo.txt:138
# 99ffed1b551449a8a79ed8b7c859dbde
msgid "Start the :program:`mongo` shell:"
msgstr ""

#: ../source/faq/mongo.txt:144
# f0b64a6b16a5411181e2568ea973efa2
msgid "Define a function ``myFunction``:"
msgstr ""

#: ../source/faq/mongo.txt:150
# 22aaa7313e8847ee89caaf577630f752
msgid "Edit the function using your editor:"
msgstr ""

#: ../source/faq/mongo.txt:156
# d11fd9b536e64743bd15f466406f498d
msgid "The command should open the ``vim`` edit session. Remember to save your changes."
msgstr ""

#: ../source/faq/mongo.txt:159
# bc38c61fd83e45b6b09f75a250b99f88
msgid "Type ``myFunction`` to see the function definition:"
msgstr ""

#: ../source/faq/mongo.txt:165
# e2ceeb9300054ceead96244dfb2b2241
msgid "The result should be the changes from your saved edit:"
msgstr ""

