.. _live-import-sharded:

==========================================
Live Migrate Your Sharded Cluster to Atlas
==========================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

|service| can perform a live migration of a source sharded cluster to
an |service| sharded cluster, keeping the cluster in sync with the
remote source until you cut your applications over to the |service|
cluster. Once you reach the cutover step in the following procedure,
you should stop writes to the source cluster by stopping your
application instances, pointing them to the |service| cluster, and
restarting them.


Restrictions
------------

- You cannot target a :doc:`Global Cluster </global-clusters>` as the
  destination for Live Migration.

- Live Migration does not support :ref:`VPC peering <vpc-peering>` or
  :ref:`private endpoints <private-endpoint>` for either the source or
  destination cluster.

For a procedure on live migrating a replica set, see
:doc:`/import/live-import`.

To begin, click on the ellipsis :guilabel:`...` button and choose
:guilabel:`Migrate Data to this Cluster` from the dropdown menu.

.. note::

   On the Cluster list, the ellipsis :guilabel:`...` button appears
   beneath the cluster name, as shown below. When you view a cluster's
   details, the ellipsis :guilabel:`...` appears on the right-hand side
   of the screen, next to the :guilabel:`Connect` and
   :guilabel:`Configuration` buttons.

.. include:: /images/live-import-sharded.rst

Prerequisites
-------------

.. include:: /includes/note-source-cluster-readiness.rst

.. _live-import-sharded-upgrade-path:

Migration Path
~~~~~~~~~~~~~~

|service| live migration supports the following migration paths:

.. include:: /includes/list-tables/mongomirror-upgrade-path-sharded.rst

.. _live-import-sharded-ip-access-list:

.. include:: /includes/import/network-access.rst

.. _live-import-sharded-migration-validation:

Pre-Migration Validation
~~~~~~~~~~~~~~~~~~~~~~~~

|service| performs a number of validation checks on the source
and destination cluster before starting the Live Migration procedure.

- The source cluster must be a sharded cluster.

  If the source is replica set cluster, use
  :doc:`Live Migration </import/live-import>` to
  migrate the cluster to a |service| replica set first, then
  :doc:`scale your cluster </scale-cluster>` to a sharded cluster.

  If the source is a standalone,
  :manual:`convert the standalone to a replica set first </tutorial/convert-standalone-to-replica-set>`
  before using :doc:`Live Migration </import/live-import>`. Then
  :doc:`scale your cluster </scale-cluster>` to a sharded cluster.

- The source cluster must use CSRS (Config Server Replica Sets).
  See :ref:`replset-config-servers`

- |service| must have connectivity to the hostname and port of each node
  in the source cluster.

- |service| must be able to stop and start the
  :ref:`sharding-balancing` on the source cluster.

- The source cluster has the same feature compatibility version
  *and* major MongoDB version as the destination cluster. The major
  MongoDB verison is the first two digits of the full version,
  e.g. **3.6**.x, **4.0**.x, or **4.2**.x.

  To check the feature compatibility version of a host in the
  source cluster, run the following command from
  the :binary:`~bin.mongo` shell:

  .. code-block:: javascript

     db.runCommand( { getParameter : 1, "featureCompatibilityVersion" : 1 } )

  Use the :manual:`setFeatureCompatibilityVersion </reference/command/setFeatureCompatibilityVersion>`
  database command to set the ``featureCompatibilityVersion`` flag
  as needed.

- The destination |service| cluster must be a sharded cluster with the
  same number of :term:`shards <shard>` as the source sharded cluster.

  .. _live-import-sharded-security:

Source Cluster Security
~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/source-cluster-security.rst

.. include:: /includes/fact-failIndexKeyTooLong-import.rst

Considerations
--------------

Source Cluster Balancer
~~~~~~~~~~~~~~~~~~~~~~~

|service| Live Migration stops the :manual:`sharded cluster balancer
</core/sharding-balancer-administration/>` on the source cluster at the
start of the procedure, and starts the balancer at the end of the
procedure.

If you cancel Live Migration, |service| restarts the balancer on the
source cluster.

.. note::

   Under some circumstances |service| cannot restart the balancer on the
   source cluster at the end of a Live Migration process. If the balancer
   fails to restart, the Live Migration still succeeds but a warning banner
   indicates that the source cluster balancer must be
   :manual:`restarted manually </tutorial/manage-sharded-cluster-balancer/>`.

Destination Cluster Configuration
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

When configuring the destination |service| cluster, consider the
following:

.. include:: /includes/fact-live-migration-destination-cluster.rst

- You cannot target a :doc:`Global Cluster </global-clusters>` as the
  destination for Live Migration.

  .. important::

     You cannot modify the destination |service| cluster once you
     start the live migration procedure. If you need to scale up
     the destination cluster, first
     :ref:`cancel <live-import-sharded-cancel>` the live
     migration procedure, then scale up the cluster and restart
     the live migration procedure.

Database Users and Roles
~~~~~~~~~~~~~~~~~~~~~~~~

|service| does not migrate any user or role data to the destination
cluster.

If the source cluster enforced authentication, you must re-create the
credentials used by your applications on the destination |service|
cluster. |service| uses
:ref:`SCRAM <authentication-scram>` for user
authentication. See :doc:`/security-add-mongodb-users` for a tutorial
on creating database users in |service|.

.. _live-import-sharded-cancel:

Canceling Live Migration
~~~~~~~~~~~~~~~~~~~~~~~~

You can cancel the process at any time by clicking :guilabel:`Cancel`.
|service| displays the
:guilabel:`Sharded Cluster Live Import in Progress`
message for the destination cluster until the cluster is ready for
normal access.

If you cancel the live migration procedure before completion,
|service| does not remove any data migrated up to that point.
If you restart the live migration procedure using the same
|service| cluster as the destination, |service| wipes all data
from the cluster.

Testing the Destination Cluster
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You may wish to migrate data to your destination cluster, then
stop the migration process and test your destination cluster
while leaving the source cluster running and serving data to your
applications.

To test your destination cluster with production data, follow
the :ref:`migration procedure <live-migrate-sharded-procedure>`
as far as step 2. When you're ready to perform the complete
migration process, skip step 2 and proceed to step 3.

Avoid Namespace Changes
~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-mongomirror-namespace-changes.rst

Destination Cluster Network Access
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

During Live Migration, the :binary:`~bin.mongos` processes on the
destination cluster are shut down and cluster connectivity via the
``mongos`` servers is suspended. The ``mongos`` processes restart
automatically once migration is complete.

Rolling Restarts
~~~~~~~~~~~~~~~~

.. include:: /includes/live-import-rolling-restarts.rst

Migrate Your Sharded Cluster
----------------------------

.. note:: Staging and Production Migrations

   Consider performing a partial live migration procedure first to
   create a staging environment before repeating the procedure to create
   your production environment. The procedure documented below provides
   a callout for the appropriate time to cancel the procedure and create
   a staging environment.

   Use the staging environment to test
   application behavior and performance using the latest
   :driver:`driver version </driver-compatibility-reference>` that
   supports the MongoDB version of the destination |service| cluster.
   Then, repeat the live migration proceedure in full to transition
   your applications from your source cluster to the |service|
   destination cluster.

.. important::

   Avoid making changes to the source cluster configuration while the
   Live Migration procedure runs, such as removing replica set members
   or modifying :binary:`mongod <bin.mongod>` runtime settings
   like ``featureCompatibilityVersion``.

.. include:: /includes/pre-migration-checklist.rst

.. _live-migrate-sharded-procedure:

Procedure
~~~~~~~~~

.. include:: /includes/steps/atlas-live-import-sharded.rst

.. _live-migration-sharded-support:

.. include:: /includes/live-migration-support.rst
