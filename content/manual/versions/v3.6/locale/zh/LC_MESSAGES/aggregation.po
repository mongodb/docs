#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/aggregation.txt:3
msgid "Aggregation"
msgstr ""

#: ../source/aggregation.txt:13
msgid ""
"Aggregation operations process data records and return computed results. "
"Aggregation operations group values from multiple documents together, and"
" can perform a variety of operations on the grouped data to return a "
"single result. MongoDB provides three ways to perform aggregation: the "
":ref:`aggregation pipeline <aggregation-framework>`, the :ref:`map-reduce"
" function <aggregation-map-reduce>`, and :ref:`single purpose aggregation"
" methods <single-purpose-agg-operations>`."
msgstr ""

#: ../source/aggregation.txt:25
msgid "Aggregation Pipeline"
msgstr ""

#: ../source/aggregation.txt:27
msgid ""
"MongoDB's :doc:`aggregation framework </core/aggregation-pipeline>` is "
"modeled on the concept of data processing pipelines. Documents enter a "
"multi-stage pipeline that transforms the documents into an aggregated "
"result."
msgstr ""

#: ../source/aggregation.txt:32
msgid ""
"The most basic pipeline stages provide *filters* that operate like "
"queries and *document transformations* that modify the form of the output"
" document."
msgstr ""

#: ../source/aggregation.txt:36
msgid ""
"Other pipeline operations provide tools for grouping and sorting "
"documents by specific field or fields as well as tools for aggregating "
"the contents of arrays, including arrays of documents. In addition, "
"pipeline stages can use :ref:`operators <aggregation-expression-"
"operators>` for tasks such as calculating the average or concatenating a "
"string."
msgstr ""

#: ../source/aggregation.txt:43
msgid ""
"The pipeline provides efficient data aggregation using native operations "
"within MongoDB, and is the preferred method for data aggregation in "
"MongoDB."
msgstr ""

#: ../source/aggregation.txt:47
msgid ""
"The aggregation pipeline can operate on a :doc:`sharded collection "
"</sharding>`."
msgstr ""

#: ../source/aggregation.txt:50
msgid ""
"The aggregation pipeline can use indexes to improve its performance "
"during some of its stages. In addition, the aggregation pipeline has an "
"internal optimization phase. See :ref:`aggregation-pipeline-operators-"
"and-performance` and :doc:`/core/aggregation-pipeline-optimization` for "
"details."
msgstr ""

#: ../source/aggregation.txt:61
msgid "Map-Reduce"
msgstr ""

#: ../source/aggregation.txt:63
msgid ""
"MongoDB also provides :doc:`map-reduce </core/map-reduce>` operations to "
"perform aggregation. In general, map-reduce operations have two phases: a"
" *map* stage that processes each document and *emits* one or more objects"
" for each input document, and *reduce* phase that combines the output of "
"the map operation. Optionally, map-reduce can have a *finalize* stage to "
"make final modifications to the result. Like other aggregation "
"operations, map-reduce can specify a query condition to select the input "
"documents as well as sort and limit the results."
msgstr ""

#: ../source/aggregation.txt:72
msgid ""
"Map-reduce uses custom JavaScript functions to perform the map and reduce"
" operations, as well as the optional *finalize* operation. While the "
"custom JavaScript provide great flexibility compared to the aggregation "
"pipeline, in general, map-reduce is less efficient and more complex than "
"the aggregation pipeline."
msgstr ""

#: ../source/aggregation.txt:78
msgid ""
"Map-reduce can operate on a :doc:`sharded collection </sharding>`. Map-"
"reduce operations can also output to a sharded collection. See "
":doc:`/core/aggregation-pipeline-sharded-collections` and :doc:`/core"
"/map-reduce-sharded-collections` for details."
msgstr ""

#: ../source/aggregation.txt:84
msgid ""
"Starting in MongoDB 2.4, certain :binary:`~bin.mongo` shell functions and"
" properties are inaccessible in map-reduce operations. MongoDB 2.4 also "
"provides support for multiple JavaScript operations to run at the same "
"time. Before MongoDB 2.4, JavaScript code executed in a single thread, "
"raising concurrency issues for map-reduce."
msgstr ""

#: ../source/aggregation.txt:96
msgid "Single Purpose Aggregation Operations"
msgstr ""

#: ../source/aggregation.txt:98
msgid ""
"MongoDB also provides :method:`db.collection.count()` and "
":method:`db.collection.distinct()`."
msgstr ""

#: ../source/aggregation.txt:101
msgid ""
"All of these operations aggregate documents from a single collection. "
"While these operations provide simple access to common aggregation "
"processes, they lack the flexibility and capabilities of the aggregation "
"pipeline and map-reduce."
msgstr ""

#: ../source/aggregation.txt:109
msgid "Additional Features and Behaviors"
msgstr ""

#: ../source/aggregation.txt:111
msgid ""
"For a feature comparison of the aggregation pipeline, map-reduce, and the"
" special group functionality, see :doc:`/reference/aggregation-commands-"
"comparison`."
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:4
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:6
msgid ""
"`MongoDB Analytics: Learn Aggregation by Example: Exploratory Analytics "
"and Visualization Using Flight Data <http://www.mongodb.com/presentations"
"/mongodb-analytics-learn-aggregation-example-exploratory-analytics-and-"
"visualization?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:7
msgid ""
"`MongoDB for Time Series Data: Analyzing Time Series Data Using the "
"Aggregation Framework and Hadoop <http://www.mongodb.com/presentations"
"/mongodb-time-series-data-part-2-analyzing-time-series-data-using-"
"aggregation-framework?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:8
msgid ""
"`The Aggregation Framework <https://www.mongodb.com/presentations"
"/aggregation-framework-0?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:9
msgid ""
"`Webinar: Exploring the Aggregation Framework "
"<https://www.mongodb.com/webinar/exploring-the-aggregation-"
"framework?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:10
msgid ""
"`Quick Reference Cards <https://www.mongodb.com/lp/misc/quick-reference-"
"cards?jmp=docs>`_"
msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid ":doc:`/core/aggregation-introduction`"
#~ msgstr ""

#~ msgid "A high-level introduction to aggregation."
#~ msgstr ""

#~ msgid ":doc:`/core/aggregation`"
#~ msgstr ""

#~ msgid ":doc:`/core/aggregation-pipeline`"
#~ msgstr ""

#~ msgid ":doc:`/core/map-reduce`"
#~ msgstr ""

#~ msgid ":doc:`/core/single-purpose-aggregation`"
#~ msgstr ""

#~ msgid ":doc:`/core/aggregation-mechanics`"
#~ msgstr ""

#~ msgid ":doc:`/applications/aggregation`"
#~ msgstr ""

#~ msgid "Examples and tutorials for data aggregation operations in MongoDB."
#~ msgstr ""

#~ msgid ":doc:`/reference/aggregation`"
#~ msgstr ""

#~ msgid ""
#~ "The aggregation pipeline can operate on"
#~ " a :doc:`sharded collection </core/sharding-"
#~ "introduction>`."
#~ msgstr ""

#~ msgid ""
#~ "Map-reduce can operate on a "
#~ ":doc:`sharded collection </core/sharding-"
#~ "introduction>`. Map reduce operations can "
#~ "also output to a sharded collection. "
#~ "See :doc:`/core/aggregation-pipeline-sharded-"
#~ "collections` and :doc:`/core/map-reduce-"
#~ "sharded-collections` for details."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB also provides "
#~ ":method:`db.collection.count()`, "
#~ ":method:`db.collection.group()`, "
#~ ":method:`db.collection.distinct()`. special purpose "
#~ "database commands."
#~ msgstr ""

# 7a9d16b51fa34deeb2b4092cf8c41445
#~ msgid "On this page"
#~ msgstr ""

# 6a6cfed3600847abbccc5c78bf55c6f3
#~ msgid ""
#~ "Aggregations operations process data records"
#~ " and return computed results. Aggregation"
#~ " operations group values from multiple "
#~ "documents together, and can perform a"
#~ " variety of operations on the grouped"
#~ " data to return a single result. "
#~ "MongoDB provides three ways to perform"
#~ " aggregation: the :ref:`aggregation pipeline "
#~ "<aggregation-framework>`, the :ref:`map-reduce"
#~ " function <aggregation-map-reduce>`, and"
#~ " :ref:`single purpose aggregation methods "
#~ "<single-purpose-agg-operations>`."
#~ msgstr ""

# 9dd84af3809a401e93fdde4dad7c353c
#~ msgid ""
#~ "Map-reduce can operate on a "
#~ ":doc:`sharded collection </sharding>`. Map "
#~ "reduce operations can also output to "
#~ "a sharded collection. See :doc:`/core"
#~ "/aggregation-pipeline-sharded-collections` and"
#~ " :doc:`/core/map-reduce-sharded-collections` "
#~ "for details."
#~ msgstr ""

# 708d6168a9e1449eb2e32a9a506b00f9
#~ msgid ""
#~ "Starting in MongoDB 2.4, certain "
#~ ":program:`mongo` shell functions and "
#~ "properties are inaccessible in map-"
#~ "reduce operations. MongoDB 2.4 also "
#~ "provides support for multiple JavaScript "
#~ "operations to run at the same "
#~ "time. Before MongoDB 2.4, JavaScript "
#~ "code executed in a single thread, "
#~ "raising concurrency issues for map-"
#~ "reduce."
#~ msgstr ""

