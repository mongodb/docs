=======================
Time Series Collections
=======================



.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Overview
--------

In this guide, you can learn about **time series collections** in
MongoDB, and how to interact with them in the MongoDB Java driver.

Time series collections efficiently store sequences of measurements over
a period of time. Time series data consists of any data collected over
time, metadata that describes the measurement, and the time of the
measurement.

.. list-table::
   :widths: 33, 33, 33
   :header-rows: 1
   :stub-columns: 1

   * - Example
     - Measurement
     - Metadata

   * - Sales Data
     - Revenue
     - Company

   * - Infection Rates
     - Amount of People Infected
     - Location

Create a Time Series Collection
-------------------------------

To create a time series collection, pass the following parameters to the
`createCollection() <{+api+}/apidocs/mongodb-driver-sync/com/mongodb/client/MongoDatabase.html#createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions)>`__
method:

- The name of the new collection to create
- The `TimeSeriesOptions <{+api+}/apidocs/mongodb-driver-core/com/mongodb/client/model/TimeSeriesOptions.html>`__  for creating the collection in a `CreateCollectionOptions <{+api+}/apidocs/mongodb-driver-core/com/mongodb/client/model/CreateCollectionOptions.html>`__ object

.. literalinclude:: /includes/fundamentals/code-snippets/TimeSeries.java
   :start-after: begin time series
   :end-before: end time series
   :emphasize-lines: 5
   :language: java
   :dedent:

.. important::

   Versions prior to MongoDB 5.0 cannot create a time series collection.

To check if you successfully created the collection, send the
``"listCollections"`` command to the `runCommand() <{+api+}/apidocs/mongodb-driver-sync/com/mongodb/client/MongoDatabase.html#runCommand(org.bson.conversions.Bson)>`__ method.

.. literalinclude:: /includes/fundamentals/code-snippets/TimeSeries.java
   :start-after: begin check collection type
   :end-before: end check collection type
   :emphasize-lines: 1
   :language: java
   :dedent:

Your output should look similar to the following:

.. code-block:: json
   :emphasize-lines: 7, 10

   {
    "id": <some number>,
    "ns": "<db name>.$cmd.listCollections",
    "firstBatch": [
     {
       "name": "<time series collection name>",
       "type": "timeseries",
       "options": {
        "expireAfterSeconds": <some number>,
         "timeseries": { ... }
        },
        ...
      },
      ...
    ]
   }

Query a Time Series Collection
------------------------------

To query in a time series collection, use the same conventions as you
would for :doc:`retrieving </crud/read-operations/retrieve>`
and :ref:`aggregating data <java-aggregation>`.

.. note:: Window Functions

   MongoDB version 5.0 introduces window functions into the aggregation
   pipeline. You can use window functions to perform operations on a
   contiguous span of time series data. For more information, see our
   :ref:`Aggregates Builders guide <builders-aggregates-setWindowFields>`.
