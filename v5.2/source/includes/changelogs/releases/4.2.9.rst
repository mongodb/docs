.. _4.2.9-changelog:

4.2.9 Changelog
---------------

Security
~~~~~~~~

:issue:`SERVER-47733` SymmetricEncryptorWindows shouldn't pad when update is called

Sharding
~~~~~~~~

- :issue:`SERVER-40441` Arbiter nodes log error messages when try to create  session collection or check if it exists
- :issue:`SERVER-46194` Applying transfer mods in a migration does not handle write conflicts
- :issue:`SERVER-48096` PeriodicShardedIndexConsistencyChecker thread on jstests can cause unintended shard refreshes
- :issue:`SERVER-48229` Shutdown PeriodicShardedIndexConsistencyChecker after ReplicationCoordinator so no thread will try to pause the job after it has stopped
- :issue:`SERVER-48491` Add requires_document_locking tag to sessions_collection_reaping.js
- :issue:`SERVER-48674` Check if replication is enabled before checking if the node is an arbiter in LogicalSessionCacheImpl
- :issue:`SERVER-48926` Fix remaining sharding tests that incorrectly set votes to 0 on shard secondaries
- :issue:`SERVER-49233` Introduce a flag to toggle the logic for bumping collection's major version during split
- :issue:`SERVER-49311` PeriodicShardedIndexConsistencyChecker might cause failures on stale_mongos_and_restarted_shards_agree_on_shard_version.js

Replication
~~~~~~~~~~~

- :issue:`SERVER-44779` Invariant internal operations that hit a prepareConflict must be marked killable
- :issue:`SERVER-45610` Some reads work while system is RECOVERING
- :issue:`SERVER-47849` Add more logging to shutdownTask
- :issue:`SERVER-48525` Forbid dropping config.transactions when there are prepared transactions
- :issue:`SERVER-48527` Aborting in-progress transactions on step-up should clear session state before returning
- :issue:`SERVER-48576` Fix the election race in change_stream_stepdown.js
- :issue:`SERVER-48611` speculative_majority_find.js should call awaitLastOpCommitted before running majority read that is expected to succeed
- :issue:`SERVER-48712` Race in write_concern_after_stepdown.js
- :issue:`SERVER-48778` Make reconstruct_prepared_transactions_initial_sync.js robust to election failures.
- :issue:`SERVER-48967` Prevent replicated writes on empty namespaces on secondaries
- :issue:`SERVER-48979` Race between config propagation and election in change_stream_stepdown.js
- :issue:`SERVER-49471` Retry on WT_ROLLBACK when applying prepareTransaction oplog entry
- :issue:`SERVER-50039` Timing error in dbadmin.js test

Query
~~~~~

- :issue:`SERVER-35921` Index scan uses incorrect bounds for MinKey and MaxKey
- :issue:`SERVER-44273` Failure to parse certain time zone specifications on windows platforms.
- :issue:`SERVER-45233` Indexed inequalities to arrays return incorrect results
- :issue:`SERVER-47223` geoNear/$geoNear does not apply index hints
- :issue:`SERVER-48614` Plan cache key computation for wildcard indexes with partialIndexFilter is incorrect, leading to incorrect query results
- :issue:`SERVER-48950` Enhance explain for $search to expose stats from mongot
- :issue:`SERVER-48993` explodeForSort can produce incorrect query plan
- :issue:`SERVER-49527` recoverFromOplogAsStandalone does not relax index constraints

Catalog
~~~~~~~

:issue:`SERVER-47714` Secondary asserts on system.profile collection with WiredTigerRecordStore::insertRecord 95: Operation not supported

Storage
~~~~~~~

- :issue:`SERVER-44529` Re-acquiring locks after a yield and step down results in wrong parameters on recoveryUnit
- :issue:`SERVER-48274` Remove readOnly mode for queryable restores of encrypted sharded clusters
- :issue:`SERVER-48453` Lazily initialize a record store's auto incrementing counter on deletes
- :issue:`SERVER-48695` setAppliedThrough must set orderedCommit=false on the recovery unit

Operations
~~~~~~~~~~

- :issue:`SERVER-44051` getShardDistribution() does not report "Collection XYZ is not sharded" on dropped but previously sharded collections
- :issue:`SERVER-48244` Shell should not hard-code the allowed explain levels and let the server reject it instead

Build and Packaging
~~~~~~~~~~~~~~~~~~~

- :issue:`SERVER-42042` Warn or fail early on dynamic builds with toolchain compiler and tcmalloc
- :issue:`SERVER-46445` MongoDB MSI installer showing irrelevant error message while installing in server configuration window
- :issue:`SERVER-48329` Adjust naming of action_type.h on either master or all stable branches
- :issue:`SERVER-48640` Update RHEL 6.2 AMI for package tests

Internals
~~~~~~~~~

- :issue:`SERVER-33229` Overload startParallelShell in auto_retry_on_network_error.js to connect after loading the auto_retry_on_network_error.js override
- :issue:`SERVER-41070` Add blockConnection mode to failCommand
- :issue:`SERVER-43490` Validate if we can perform TODO listed in SERVER-38686
- :issue:`SERVER-46721` Step up may cause reads at PIT with holes after yielding
- :issue:`SERVER-46854` Disable periodic index consistency checker on config servers in jstests/sharding/lookup_mongod_unaware.js
- :issue:`SERVER-47195` Allow failCommand failpoint to trigger only on a specific MongoClient
- :issue:`SERVER-47883` Newly-elected primaries do not wait for single-phase background index builds to complete before accepting writes
- :issue:`SERVER-47930` Ubuntu 20.04 - ldap_authz_authn.js fails to load test certificate
- :issue:`SERVER-48032` Update references of community mailing-lists to MongoDB Developer Community Forums
- :issue:`SERVER-48058` Make sure abort_transactions_on_step_up waits for optime to be applied
- :issue:`SERVER-48067` Reduce memory consumption for unique index builds with large numbers of non-unique keys
- :issue:`SERVER-48107` Retry replSetStepDown in rollback_test.js 
- :issue:`SERVER-48514` Separate testing 'called' and 'successful' fields for serverStatus election metrics
- :issue:`SERVER-48532` [4.2] IndexBuildInterceptor::areAllWritesApplied may return false despite all records being visibly applied
- :issue:`SERVER-48568` Use 'nodeOptions' in change_streams_multi_version_transaction.js
- :issue:`SERVER-48569` Add ConflictingOperationInProgress as acceptable error code to stepDown in validateCollectionsCallback
- :issue:`SERVER-48657` Use evergreen module to control signal processing in perf projects
- :issue:`SERVER-48891` nullptr dereference on ViewCatalog in reIndex when Database does not exist 
- :issue:`SERVER-48907` Allow users to patch test changes to linkbench/linkbench2 using evergreen set-module
- :issue:`SERVER-49007` Roundtrip registration id in metrics response in mock_http_server.py
- :issue:`SERVER-49071` Make ldap_fastest_host_selection.js tolerate missing LDAP servers in statistics
- :issue:`SERVER-49097` sys-perf builds differ from release builds
- :issue:`SERVER-49142` Validate correct field name in RoleName::parseFromBSON()
- :issue:`SERVER-49335` publish_packages should use barque API key
- :issue:`SERVER-49404` Enforce additional checks in $arrayToObject
- :issue:`SERVER-49690` Retry "CappedPositionLost" when searching for old oplog entries
- :issue:`SERVER-49704` txn_being_applied_to_secondary_cannot_be_killed.js should not allow elections
- :issue:`SERVER-50173` [v4.4] Remove explode_for_sort_collation.js from backports list of test suite sharding_multiversion
- :issue:`WT-6261` Turn off incremental backup rename testing
- :issue:`WT-6319` Fix for corrupted encrypted item: padded size less than actual size
- :issue:`WT-6480` Fix a bug where files without block modification information were repeatedly copied at each incremental backup
- :issue:`WT-6495` Refactor test_backup16.py

