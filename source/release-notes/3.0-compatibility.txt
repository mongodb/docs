====================================
Compatibility Changes in MongoDB 3.0
====================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: twocols

The following 3.0 changes can affect the compatibility with older
versions of MongoDB. See :doc:`/release-notes/3.0` for the full list of
the 3.0 changes.

.. _3.0-compatibility-storage-engine:

Storage Engine
--------------

.. _3.0-compatibility-configuration-file:

Configuration File Options Changes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

With the introduction of additional storage engines in 3.0, some
:doc:`configuration file options </reference/configuration-options>`
have changed:

.. list-table::
   :header-rows: 1

   * - Previous Setting
     - New Setting

   * - ``storage.journal.commitIntervalMs``
     -  :v3.0:`storage.mmapv1.journal.commitIntervalMs </reference/configuration-options/#storage.mmapv1.journal.commitIntervalMs>`

   * - ``storage.journal.debugFlags``
     - :v3.0:`storage.mmapv1.journal.debugFlags </reference/configuration-options/#storage.mmapv1.journal.debugFlags>`

   * - ``storage.nsSize``
     - :v3.0:`storage.mmapv1.nsSize <reference/configuration-options/#storage.mmapv1.nsSize>`

   * - ``storage.preallocDataFiles``
     - :v3.0:`storage.mmapv1.preallocDataFiles <reference/configuration-options/#storage.mmapv1.preallocDataFiles>`

   * - ``storage.quota.enforced``
     - :v3.0:`storage.mmapv1.quota.enforced <reference/configuration-options/#storage.mmapv1.quota.enforced>`

   * - ``storage.quota.maxFilesPerDB``
     - :v3.0:`storage.mmapv1.quota.maxFilesPerDB <reference/configuration-options/#storage.mmapv1.quota.maxFilesPerDB>`

   * - ``storage.smallFiles``
     - :v3.0:`storage.mmapv1.smallFiles <reference/configuration-options/#storage.mmapv1.smallFiles>`

3.0 :binary:`~bin.mongod` instances are backward compatible with existing
configuration files, but will issue warnings when if you attempt to
use the old settings.

.. _3.0-compatibility-data-file:

Data Files Must Correspond to Configured Storage Engine
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The files in the :setting:`~storage.dbPath` directory must correspond
to the configured storage engine (i.e. ``--storageEngine``).
:binary:`~bin.mongod` will not start if :setting:`~storage.dbPath` contains
data files created by a storage engine other than the one specified by
``--storageEngine``.

.. seealso::
   Change Storage Engine to WiredTiger sections in
   :doc:`/release-notes/3.0-upgrade`

.. _3.0-compatibility-drivers-wired-tiger:

WiredTiger and Driver Version Compatibility
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

For MongoDB 3.0 deployments that use the WiredTiger storage engine, the
following operations return no output when issued in previous versions
of the :binary:`~bin.mongo` shell or drivers:

- :method:`db.getCollectionNames()`
- :method:`db.collection.getIndexes()`
- ``show collections``
- ``show tables``

Use the 3.0 :binary:`~bin.mongo` shell or the :ref:`3.0 compatible version
<compatibility-driver-versions>` of the official drivers when
connecting to 3.0 :binary:`~bin.mongod` instances that use WiredTiger. The
2.6.8 :binary:`~bin.mongo` shell is also compatible with 3.0
:binary:`~bin.mongod` instances that use WiredTiger.

``db.fsyncLock()`` is not Compatible with WiredTiger
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

With WiredTiger the :method:`db.fsyncLock()` and
:method:`db.fsyncUnlock()` operations *cannot* guarantee that the data
files do not change. As a result, do not use these methods to ensure
consistency for the purposes of creating backups.

.. _3.0-compatibility-touch:

Support for ``touch`` Command
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If a storage engine does not support the ``touch``, then the
``touch`` command will return an error.

- The MMAPv1 storage engine supports ``touch``.

- The WiredTiger storage engine *does not* support
  ``touch``.

.. _3.0-compatiblity-record-alloc:

Dynamic Record Allocation
~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 3.0 no longer supports dynamic record allocation and deprecates
:v3.0:`paddingFactor <reference/glossary/#term-padding-factor>`.

MongoDB 3.0 deprecates the ``newCollectionsUsePowerOf2Sizes``
parameter such that you can no longer use the parameter to disable the
power of 2 sizes allocation for a collection. Instead, use the
:v3.0:`collMod </reference/command/collMod>` with the ``noPadding``
flag or the :v3.0:`db.createCollection()
</reference/method/db.createCollection>` method with the ``noPadding``
option. Only set ``noPadding`` for collections with workloads that
consist only of inserts or in-place updates (such as incrementing
counters).

.. warning::

   Only set ``noPadding`` to ``true`` for collections whose
   workloads have *no* update operations that cause documents to grow,
   such as for collections with workloads that are insert-only. For
   more information, see :v3.0:`No Padding Allocation Strategy
   </core/mmapv1/#exact-fit-allocation>`.

For more information, see :ref:`3.0-mmapv1-padding`.

.. _3.0-compatibility-rs:

Replication Changes
-------------------

.. _3.0-oplog-format-change:

Replica Set Oplog Format Change
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 3.0 is not compatible with oplog entries generated by versions
of MongoDB before 2.2.1. If you upgrade from one of these versions,
you must wait for new oplog entries to overwrite *all* old oplog
entries generated by one of these versions before upgrading to 3.0.0
or earlier.

Secondaries may abort if they replay a pre-2.6 oplog with an index
build operation that would fail on a 2.6 or later primary.

.. _3.0-compatibility-repl-set-config:

Replica Set Configuration Validation
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 3.0 provides a stricter validation of :doc:`replica set
configuration settings </reference/replica-configuration>` and replica
sets  invalid replica set configurations.

Stricter validations include:

- Arbiters can only have ``1`` vote. Previously, arbiters could also
  have a value of ``0`` for
  :rsconf:`members[n].votes`. If an arbiter has any
  value other than ``1`` for
  :rsconf:`members[n].votes`, you must fix the
  setting.

- Non-arbiter members can **only** have value of ``0`` or ``1`` for
  :rsconf:`members[n].votes`. If a non-arbiter
  member has any other value for
  :rsconf:`members[n].votes`, you must fix the
  setting.

- :rsconf:`_id` in the
  :doc:`/reference/replica-configuration` must specify the same name as
  that specified by ``--replSet`` or
  :setting:`replication.replSetName`. Otherwise, you must fix the
  setting.

- Disallows ``0`` for
  :rsconf:`settings.getLastErrorDefaults` value. If
  :rsconf:`settings.getLastErrorDefaults` value is
  ``0``, you must fix the setting.

- :rsconf:`settings` can only contain the recognized
  settings. Previously, MongoDB ignored unrecognized settings. If
  :rsconf:`settings` contains unrecognized settings,
  you must remove the unrecognized settings.

To fix the settings before upgrading to MongoDB 3.0, connect to the
primary and :method:`reconfigure <rs.reconfig()>` your replica set to
valid configuration settings.

If you have already upgraded to MongoDB 3.0, you must :doc:`downgrade
to MongoDB 2.6 </release-notes/3.0-downgrade>` first and then fix the
settings. Once you have :method:`reconfigured <rs.reconfig()>` the
replica set, you can re-upgrade to MongoDB 3.0.

Change of ``w: majority`` Semantics
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

A write concern with a :ref:`w: majority <wc-w>` value is satisfied
when a majority of the *voting* members replicates a write
operation. In previous versions, *majority* referred a majority of all
voting and non-voting members of the set.

Remove ``local.slaves`` Collection
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 3.0 removes the ``local.slaves`` collection that tracked the
secondaries' replication progress. To track the replication progress,
use the :method:`rs.status()` method.

Replica Set State Change
~~~~~~~~~~~~~~~~~~~~~~~~

The ``FATAL`` replica set state does not exist as of 3.0.0.

HTTP Interface
~~~~~~~~~~~~~~

The HTTP Interface (i.e. ``net.http.enabled``) no longer
reports replication data.

.. _3.0-compatibility-tools:

MongoDB Tools Changes
---------------------

.. _tools-remove-dbpath-support:

Require a Running MongoDB Instance
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The 3.0 versions of MongoDB tools, :binary:`~bin.mongodump`,
:binary:`~bin.mongorestore`, :binary:`~bin.mongoexport`,
:binary:`~bin.mongoimport`, :binary:`~bin.mongofiles`, and
``mongooplog``, must connect to running MongoDB instances and
these tools *cannot* directly modify the data files with ``--dbpath``
as in previous versions. Ensure that you start your :binary:`~bin.mongod`
instance(s) before using these tools.

Removed Options
~~~~~~~~~~~~~~~

- Removed ``--dbpath``, ``--journal``, and ``--filter`` options for
  :binary:`~bin.mongodump`, :binary:`~bin.mongorestore`, :binary:`~bin.mongoimport`,
  :binary:`~bin.mongoexport`, and :binary:`~bin.bsondump`.

- Removed ``--locks`` option for :binary:`~bin.mongotop`.

- Removed ``--noobjcheck`` option for :binary:`~bin.bsondump` and
  :binary:`~bin.mongorestore`.

- Removed ``--csv`` option for :binary:`~bin.mongoexport`. Use the new
  ``--type`` option to specify the export format type (``csv`` or
  ``json``).

.. seealso:: :ref:`3.0-tools-enhancements`

.. _3.0-compatibility-sharded-cluster:

Sharded Cluster Setting
-----------------------

Remove ``releaseConnectionsAfterResponse`` Parameter
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB now always releases connections after response.
``releaseConnectionsAfterResponse`` parameter is no longer available.

.. _3.0-compatibility-security-changes:

Security Changes
----------------

.. _legacy-auth-model-removed:

MongoDB 2.4 User Model Removed
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 3.0 completely removes support for the deprecated 2.4 user
model. MongoDB 3.0 will exit with an error message if there is user
data with the 2.4 schema, i.e. if ``authSchema`` version is less than
``3``.

To verify the version of your existing 2.6 schema, query the
``system.version`` collection in the ``admin`` database:

.. note:: You must have privileges to query the collection.

.. code-block:: javascript

   use admin
   db.system.version.find( { _id: "authSchema" })

If you are currently using ``auth`` and you have schema version 2 or 3,
the query returns the ``currentVersion`` of the existing ``authSchema``.

If you do not currently have any users *or* you are using
``authSchema`` version 1, the query will not return any result.

If your ``authSchema`` version is less
than ``3`` or the query does not return any results, see :doc:`/release-notes/2.6-upgrade-authorization` to
upgrade the ``authSchema`` version before upgrading to MongoDB 3.0.

After upgrading MongoDB to 3.0 from 2.6, to use the new ``SCRAM-SHA-1``
challenge-response mechanism if you have existing user data, you will
need to upgrade the authentication schema a second time. This upgrades
the ``MONGODB-CR`` user model to ``SCRAM-SHA-1`` user model. See
:doc:`/release-notes/3.0-scram` for details.

.. _3.0-compatibility-localhost:

Localhost Exception Changed
~~~~~~~~~~~~~~~~~~~~~~~~~~~

In 3.0, the localhost exception changed so that these connections *only*
have access to create the first user on the ``admin``
database. In previous versions, connections that gained access using
the localhost exception had unrestricted access to the MongoDB
instance.

See :ref:`localhost-exception` for more information.

``db.addUser()`` Removed
~~~~~~~~~~~~~~~~~~~~~~~~

3.0 removes the legacy ``db.addUser()`` method. Use
:method:`db.createUser()` and :method:`db.updateUser()` instead.

TLS/SSL Configuration Option Changes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 3.0 introduced new :setting:`net.ssl.allowConnectionsWithoutCertificates`
configuration file setting and ``--sslAllowConnectionsWithoutCertificates``
command line option for :binary:`~bin.mongod` and :binary:`~bin.mongos`. These
options replace previous ``net.ssl.weakCertificateValidation`` and
``--sslWeakCertificateValidation`` options, which became
aliases. Update your configuration to ensure future compatibility.

.. _3.0-compatibility-certificate-validation:

TLS/SSL Certificates Validation
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

By default, when running in SSL mode, MongoDB instances will *only*
start if its certificate (i.e. :setting:`net.ssl.PEMKeyFile`) is valid.
You can disable this behavior with the
:setting:`net.ssl.allowInvalidCertificates` setting or the
``--sslAllowInvalidCertificates`` command line option.

To start the :binary:`~bin.mongo` shell with ``--ssl``, you must explicitly
specify either the ``--sslCAFile`` or ``--sslAllowInvalidCertificates``
option at startup. See :doc:`/tutorial/configure-ssl-clients` for more
information.

.. _3.0-compatibility-certificate-hostname-validation:

TLS/SSL Certificate Hostname Validation
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

By default, MongoDB validates the hostnames of hosts attempting to connect
using certificates against the hostnames listed in those certificates. In
certain deployment situations this behavior may be undesirable. It is now
possible to disable such hostname validation without disabling validation of
the rest of the certificate information with the
:setting:`net.ssl.allowInvalidHostnames` setting or the
``--sslAllowInvalidHostnames`` command line option.

SSLv3 Ciphers Disabled
~~~~~~~~~~~~~~~~~~~~~~

In light of `vulnerabilities in legacy SSL ciphers
<https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3566>`_,
these ciphers have been explicitly disabled in MongoDB. No
configuration changes are necessary.

``mongo`` Shell Version Compatibility
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Versions of the :binary:`~bin.mongo` shell before 3.0 are *not*
compatible with 3.0 deployments of MongoDB that enforce access
control. If you have a 3.0 MongoDB deployment that requires
access control, you must use 3.0 versions of the :binary:`~bin.mongo`
shell.

HTTP Status Interface and REST API Compatibility
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Neither the HTTP status interface nor the REST API support the
:ref:`SCRAM-SHA-1 <authentication-scram-sha-1>` challenge-response
user authentication mechanism introduced in version 3.0.

.. _3.0-compatibility-indexes:

Indexes
-------

Remove ``dropDups`` Option
~~~~~~~~~~~~~~~~~~~~~~~~~~

``dropDups`` option is no longer available for
:method:`~db.collection.createIndex()`,
:method:`~db.collection.ensureIndex()`, and :dbcommand:`createIndexes`.

Changes to Restart Behavior during Background Indexing
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

For 3.0 :binary:`~bin.mongod` instances, if a background index build is in
progress when the :binary:`~bin.mongod` process terminates, when the
instance restarts the index build will restart as foreground index
build. If the index build encounters any errors, such as a duplicate
key error, the :binary:`~bin.mongod` will exit with an error.

To start the :binary:`~bin.mongod` after a failed index build, use the
``storage.indexBuildRetry`` or ``--noIndexBuildRetry`` to skip the
index build on start up.

.. _3.0-geo-near-compatibility:

``2d`` Indexes and Geospatial Near Queries
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

For :query:`$near` queries that use a :doc:`2d </core/2d>` index:

- MongoDB no longer uses a default limit of 100 documents.

- Specifying a :method:`~cursor.batchSize()` is no longer analogous to
  specifying a :method:`~cursor.limit()`.

For :query:`$nearSphere` queries that use a :doc:`2d </core/2d>` index,
MongoDB no longer uses a default limit of 100 documents.

.. _compatibility-driver-versions:

Driver Compatibility Changes
----------------------------

Each officially supported driver has release a version that includes
support for all new features introduced in MongoDB 3.0. Upgrading to
one of these version is strongly recommended as part of the upgrade
process.

A driver upgrade is **necessary** in certain scenarios due to
changes in functionality:

- Use of the ``SCRAM-SHA-1`` authentication method
- Use of functionality that calls :dbcommand:`listIndexes` or
  :dbcommand:`listCollections`

The minimum 3.0-compatible driver versions are:

.. |driver-compatibility-heading| replace:: Minimum 3.0-Compatible Version

.. include:: /includes/list-table-3.0-driver-compatibility.rst

General Compatibility Changes
-----------------------------

``findAndModify`` Return Document
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In MongoDB 3.0, when performing an update with
:dbcommand:`findAndModify` that also specifies ``upsert: true`` *and*
either the ``new`` option is not set or ``new: false``,
:dbcommand:`findAndModify` returns ``null`` in the ``value`` field if
the ``query`` does not match any document, regardless of the ``sort``
specification.

In previous versions, :dbcommand:`findAndModify` returns an empty
document ``{}`` in the ``value`` field if a ``sort`` is specified for
the update, and ``upsert: true``, and the ``new`` option is not set or
``new: false``.

``upsert:true`` with a Dotted ``_id`` Query
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-upsert-id.rst

Deprecate Access to ``system.indexes`` and ``system.namespaces``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 3.0 deprecates *direct* access to ``system.indexes`` and
``system.namespaces`` collections. Use the :dbcommand:`createIndexes`
and :dbcommand:`listIndexes` commands instead. See also
:ref:`3.0-compatibility-drivers-wired-tiger`.

Collection Name Validation
~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 3.0 more consistently enforces the :limit:`collection naming
restrictions <Restriction on Collection Names>`. Ensure your application
does not create or depend on invalid collection names.

.. _3.0-compatibility-platform-support:

Platform Support
~~~~~~~~~~~~~~~~

Commercial support is no longer provided for MongoDB on 32-bit
platforms (Linux and Windows). Linux RPM and DEB packages are also no
longer available. However, binary archives are still available.

Linux Package Repositories
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/extracts/fact-3.0-linux-package-repo-relnotes.rst

Removed/Deprecated Commands
~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following commands and methods are no longer available in MongoDB 3.0:

- ``closeAllDatabases``

- ``getoptime``

- ``text``

- ``indexStats``, ``db.collection.getIndexStats()``, and ``db.collection.indexStats()``

The following commands and methods are deprecated in MongoDB 3.0:

- :dbcommand:`diagLogging`

- ``eval``, :method:`db.eval()`

- :method:`db.collection.copyTo()`

In addition, you cannot use the now deprecated ``eval``
command or the :method:`db.eval()` method to invoke
:dbcommand:`mapReduce` or :method:`db.collection.mapReduce()`.

.. _3.0-date-timestamp:

Date and Timestamp Comparison Order
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 3.0 no longer treats the :ref:`Timestamp
<document-bson-type-timestamp>` and the :ref:`Date
<document-bson-type-date>` data types as equivalent for comparison
purposes. Instead, the :ref:`Timestamp <document-bson-type-timestamp>`
data type has a higher comparison/sort order (i.e. is "greater") than
the :ref:`Date <document-bson-type-date>` data type. If your
application relies on the equivalent comparison/sort order of Date and
Timestamp objects, modify your application accordingly before upgrading.

Server Status Output Change
~~~~~~~~~~~~~~~~~~~~~~~~~~~

The :dbcommand:`serverStatus` command and the
:method:`db.serverStatus()` method no longer return ``workingSet``,
``indexCounters``, and ``recordStats`` sections in the output.

Unix Socket Permissions Change
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Unix domain socket file permission now defaults to ``0700``. To change
the permission, MongoDB provides the
:setting:`net.unixDomainSocket.filePermissions` setting as well as the
``--filePermission`` option.

``cloneCollection``
~~~~~~~~~~~~~~~~~~~

The :v3.0:`cloneCollection </reference/command/cloneCollection>` command
and the :v3.0:`db.cloneCollection() </reference/method/db.cloneCollection>`
method will now return an error if the collection already exists, instead of
inserting into it.
