.. _sharding-ranged:

===============
Ranged Sharding
===============

.. default-domain:: mongodb

Ranged-based sharding involves dividing data into contiguous ranges determined
by the shard key values. In this model, documents with "close" shard key
values are likely to be in the same :term:`chunk` or :term:`shard`. This
allows for efficient queries where reads target documents within a contiguous
range. However, both read and write performance may decrease with poor shard
key selection. See :ref:`sharding-ranged-shard-key`.

.. include:: /images/sharding-range-based.rst

Range-based sharding is the default sharding methodology if no other options
such as those required for :doc:`/core/hashed-sharding` or
:doc:`/core/tag-aware-sharding` are configured.

.. _sharding-ranged-shard-key:

Shard Key Selection
-------------------

Ranged sharding is most efficient when the shard key displays the following
traits:

* Large :ref:`shard-key-range`
* Low :ref:`shard-key-frequency`
* Non-:ref:`shard-key-monotonic`


The following image illustrates a sharded cluster using the field ``X`` as the
shard key. If the values for ``X`` show have a large range, low frequency, and
change at a non-monotonic rate, the distribution of inserts may look similar
to the following:

.. include:: /images/sharded-cluster-ranged-distribution-good.rst

Shard a Collection
------------------

Use the :method:`sh.shardCollection()` method, specifying the full namespace
of the collection and the target :term:`index` or :term:`compound index`
to use as the :term:`shard key`.

.. code-block:: javascript

   sh.shardCollection( "database.collection", { <shard key> } )

.. class:: hidden

   .. toctree::
      :titlesonly:

      /tutorial/deploy-sharded-cluster-ranged-sharding

