collection: "inventory"
options:
  show_title: False
  show_collection: False
---
ref: 1
pre: |
  Pass an array of documents to the :method:`~db.collection.insert()` to
  perform a bulk insert.
operation:
  language: javascript
  code: |
    db.inventory.insert( [
      {
        item: "DEF",
        category: "gloves",
        details: { model: "14Q3", color: "red" },
        stock: [ { size: "M", qty: 50 } ]
      },
      {
        item: "IJK",
        category: "hat",
        details: { model: "14Q2", color: "blue" },
        stock: [ { size: "S", qty: 5 }, { size: "M", qty: 5 }, { size: "L", qty: 1 } ]
      }, 
      {
        item: "LMN",
        category: "hat",
        details: { model: "14Q2", color: "brown" },
        stock: [ { size: "S", qty: 5 }, { size: "L", qty: 1 } ]
      },
      {
        item: "PQR",
        category: "gloves", 
        details: { model: "14Q3", color: "black" },
        stock: [ { size: "S", qty: 5 }, { size: "L", qty: 1 } ]
      }
    ] )
post: |
   The method returns a :method:`BulkWriteResult` object with the
   status of the operation. A successful insert of the four documents
   returns the following object:
results: |
      BulkWriteResult({
         "writeErrors" : [ ],
         "writeConcernErrors" : [ ],
         "nInserted" : 4,
         "nUpserted" : 0,
         "nMatched" : 0,
         "nModified" : 0,
         "nRemoved" : 0,
         "upserted" : [ ]
      })
final: |
  You can also verify the insert operation by :doc:`querying </query>`
  the collection. Each inserted document will have an ``_id`` field
  set to a generated :manual:`ObjectId </reference/object-id>`. If a
  document passed to the :method:`~db.collection.insert()` method does
  not contain the :term:`_id` field, the :program:`mongo` shell
  automatically adds the field to the document. 
...
