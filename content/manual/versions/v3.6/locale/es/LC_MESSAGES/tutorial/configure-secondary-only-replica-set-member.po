# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: 2013-12-16 22:44+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/tutorial/configure-secondary-only-replica-set-member.txt:3
msgid "Prevent Secondary from Becoming Primary"
msgstr ""

#: ../source/tutorial/configure-secondary-only-replica-set-member.txt:14
msgid "Overview"
msgstr ""

#: ../source/tutorial/configure-secondary-only-replica-set-member.txt:16
msgid ""
"In a replica set, by default all :term:`secondary` members are eligible "
"to become primary through the election process. You can use the "
":data:`priority <replSetGetConfig.members[n].priority>` to affect the "
"outcome of these elections by making some members more likely to become "
"primary and other members less likely or unable to become primary."
msgstr ""

#: ../source/tutorial/configure-secondary-only-replica-set-member.txt:22
msgid ""
"Secondaries that cannot become primary are also unable to trigger "
"elections. In all other respects these secondaries are identical to other"
" secondaries."
msgstr ""

#: ../source/tutorial/configure-secondary-only-replica-set-member.txt:26
msgid ""
"To prevent a :term:`secondary` member from ever becoming a "
":term:`primary` in a :term:`failover`, assign the secondary a priority of"
" ``0``, as described here. For a detailed description of secondary-only "
"members and their purposes, see :doc:`/core/replica-set-"
"priority-0-member`."
msgstr ""

#: ../source/tutorial/configure-secondary-only-replica-set-member.txt:32
msgid "Considerations"
msgstr ""

#: ../source/includes/fact-rs-conf-array-index.rst:1
msgid ""
"When updating the replica configuration object, access the replica set "
"members in the :rsconf:`members` array with the **array index**. The "
"array index begins with ``0``. Do **not** confuse this index value with "
"the value of the :rsconf:`members[n]._id` field in each document in the "
":rsconf:`members` array."
msgstr ""

#: ../source/tutorial/configure-secondary-only-replica-set-member.txt:38
msgid ""
"MongoDB does not permit the current :term:`primary` to have a priority of"
" ``0``. To prevent the current primary from again becoming a primary, you"
" must first step down the current primary using :method:`rs.stepDown()`."
msgstr ""

#: ../source/tutorial/configure-secondary-only-replica-set-member.txt:44
msgid "Procedure"
msgstr ""

#: ../source/tutorial/configure-secondary-only-replica-set-member.txt:46
msgid "This tutorial uses a sample replica set with 5 members."
msgstr ""

#: ../source/includes/warning-rs-reconfig.rst:3
msgid ""
"The :method:`rs.reconfig()` shell method can force the current primary to"
" step down, which causes an :ref:`election <replica-set-elections>`. When"
" the primary steps down, the :binary:`~bin.mongod` closes all client "
"connections. While this typically takes 10-20 seconds, try to make these "
"changes during scheduled maintenance periods."
msgstr ""

#: ../source/includes/warning-mixed-version-rs-config.rst:1
msgid ""
"Avoid reconfiguring replica sets that contain members of different "
"MongoDB versions as validation rules may differ across MongoDB versions."
msgstr ""

#: ../source/includes/steps/configure-secondary-only-rs-member.rst:8
msgid "Retrieve the current replica set configuration."
msgstr ""

#: ../source/includes/steps/configure-secondary-only-rs-member.rst:10
#: ../source/includes/steps/configure-secondary-only-rs-member.rst:37
msgid ""
"The :method:`rs.conf()` method returns a :doc:`replica set configuration "
"document </reference/replica-configuration>` that contains the current "
"configuration for a replica set."
msgstr ""

#: ../source/includes/steps/configure-secondary-only-rs-member.rst:14
#: ../source/includes/steps/configure-secondary-only-rs-member.rst:41
msgid ""
"In a :binary:`~bin.mongo` shell connected to a primary, run the "
":method:`rs.conf()` method and assign the result to a variable:"
msgstr ""

#: ../source/includes/steps/configure-secondary-only-rs-member.rst:22
#: ../source/includes/steps/configure-secondary-only-rs-member.rst:49
msgid ""
"The returned document contains a :rsconf:`members` field which contains "
"an array of member configuration documents, one document for each member "
"of the replica set."
msgstr ""

#: ../source/includes/steps/configure-secondary-only-rs-member.rst:35
msgid "Step 1: Retrieve the current replica set configuration."
msgstr ""

#: ../source/includes/steps/configure-secondary-only-rs-member.rst:62
msgid "Assign priority value of ``0``."
msgstr ""

#: ../source/includes/steps/configure-secondary-only-rs-member.rst:64
#: ../source/includes/steps/configure-secondary-only-rs-member.rst:93
msgid ""
"To prevent a secondary member from becoming a primary, update the "
"secondary member's :rsconf:`members[n].priority` to ``0``."
msgstr ""

#: ../source/includes/steps/configure-secondary-only-rs-member.rst:68
#: ../source/includes/steps/configure-secondary-only-rs-member.rst:97
msgid ""
"To assign a priority value to a member of the replica set, access the "
"member configuration document using the array index. In this tutorial, "
"the secondary member to change corresponds to the configuration document "
"found at position ``2`` of the :rsconf:`members` array."
msgstr ""

#: ../source/includes/steps/configure-secondary-only-rs-member.rst:80
#: ../source/includes/steps/configure-secondary-only-rs-member.rst:109
msgid ""
"The configuration change does not take effect until you reconfigure the "
"replica set."
msgstr ""

#: ../source/includes/steps/configure-secondary-only-rs-member.rst:91
msgid "Step 2: Assign priority value of ``0``."
msgstr ""

#: ../source/includes/steps/configure-secondary-only-rs-member.rst:120
msgid "Reconfigure the replica set."
msgstr ""

#: ../source/includes/steps/configure-secondary-only-rs-member.rst:122
#: ../source/includes/steps/configure-secondary-only-rs-member.rst:141
msgid ""
"Use :method:`rs.reconfig()` method to reconfigure the replica set with "
"the updated replica set configuration document."
msgstr ""

#: ../source/includes/steps/configure-secondary-only-rs-member.rst:125
#: ../source/includes/steps/configure-secondary-only-rs-member.rst:144
msgid "Pass the ``cfg`` variable to the :method:`rs.reconfig()` method:"
msgstr ""

#: ../source/includes/steps/configure-secondary-only-rs-member.rst:139
msgid "Step 3: Reconfigure the replica set."
msgstr ""

#: ../source/tutorial/configure-secondary-only-replica-set-member.txt:53
msgid "Related Documents"
msgstr ""

#: ../source/tutorial/configure-secondary-only-replica-set-member.txt:55
msgid ":rsconf:`members[n].priority`"
msgstr ""

#: ../source/tutorial/configure-secondary-only-replica-set-member.txt:57
msgid ":doc:`/tutorial/adjust-replica-set-member-priority`"
msgstr ""

#: ../source/tutorial/configure-secondary-only-replica-set-member.txt:59
msgid ":ref:`Replica Set Reconfiguration <replica-set-reconfiguration-usage>`"
msgstr ""

#: ../source/tutorial/configure-secondary-only-replica-set-member.txt:61
msgid ":doc:`/core/replica-set-elections`"
msgstr ""

#~ msgid ""
#~ "To prevent a :term:`secondary` member "
#~ "from ever becoming a :term:`primary` in"
#~ " a :term:`failover`, assign the secondary"
#~ " a priority of ``0``, as described"
#~ " here. You can set this "
#~ "\"secondary-only mode\" for any member "
#~ "of the :term:`replica set`, except the"
#~ " current primary. For a detailed "
#~ "description of secondary-only members "
#~ "and their purposes, see :doc:`/core"
#~ "/replica-set-priority-0-member`."
#~ msgstr ""

#~ msgid ""
#~ "To configure a member as secondary-"
#~ "only, set its "
#~ ":data:`~local.system.replset.members[n].priority` value to"
#~ " ``0`` in the "
#~ ":data:`~local.system.replset.members` document in "
#~ "its replica set configuration. Any "
#~ "member with a "
#~ ":data:`~local.system.replset.members[n].priority` equal to"
#~ " ``0`` will never seek :ref:`election "
#~ "<replica-set-elections>` and cannot "
#~ "become primary in any situation."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB does not permit the current "
#~ ":term:`primary` to have a priority of"
#~ " ``0``. To prevent the current "
#~ "primary from again becoming a primary,"
#~ " you must first step down the "
#~ "current primary using :method:`rs.stepDown()`, "
#~ "and then you must :ref:`reconfigure the"
#~ " replica set <replica-set-"
#~ "reconfiguration-usage>` with :method:`rs.conf()` "
#~ "and :method:`rs.reconfig()`."
#~ msgstr ""

#~ msgid "Example"
#~ msgstr ""

#~ msgid ""
#~ "As an example of modifying member "
#~ "priorities, assume a four-member replica"
#~ " set. Use the following sequence of"
#~ " operations to modify member priorities "
#~ "in the :program:`mongo` shell connected "
#~ "to the primary. Identify each member "
#~ "by its array index in the "
#~ ":data:`~local.system.replset.members` array:"
#~ msgstr ""

#~ msgid ""
#~ "The sequence of operations reconfigures "
#~ "the set with the following priority "
#~ "settings:"
#~ msgstr ""

#~ msgid ""
#~ "Member at ``0`` has a priority of"
#~ " ``2`` so that it becomes primary "
#~ "under most circumstances."
#~ msgstr ""

#~ msgid ""
#~ "Member at ``1`` has a priority of"
#~ " ``1``, which is the default value."
#~ " Member ``1`` becomes primary if no"
#~ " member with a *higher* priority is"
#~ " eligible."
#~ msgstr ""

#~ msgid ""
#~ "Member at ``2`` has a priority of"
#~ " ``0.5``, which makes it less likely"
#~ " to become primary than other members"
#~ " but doesn't prohibit the possibility."
#~ msgstr ""

#~ msgid ""
#~ "Member at ``3`` has a priority of"
#~ " ``0``. Member at ``3`` **cannot** "
#~ "become the :term:`primary` member under "
#~ "any circumstances."
#~ msgstr ""

# e809d3e47e404149a10eca36a7d0e38a
#~ msgid ""
#~ "When updating the replica configuration "
#~ "object, access the replica set members"
#~ " in the :data:`~local.system.replset.members` "
#~ "array with the **array index**. The "
#~ "array index begins with ``0``. Do "
#~ "**not** confuse this index value with"
#~ " the value of the "
#~ ":data:`~local.system.replset.members[n]._id` field in "
#~ "each document in the "
#~ ":data:`~local.system.replset.members` array."
#~ msgstr ""

# 11d451a493b54f1ea61e06e6959449df
#~ msgid ""
#~ "The :method:`rs.reconfig()` shell method can"
#~ " force the current primary to step"
#~ " down, which causes an :ref:`election "
#~ "<replica-set-elections>`. When the "
#~ "primary steps down, the :program:`mongod` "
#~ "closes all client connections. While "
#~ "this typically takes 10-20 seconds, try"
#~ " to make these changes during "
#~ "scheduled maintenance periods."
#~ msgstr ""

# 7487da37840b4fef9870743404a459d2
#~ msgid ""
#~ "To successfully reconfigure a replica "
#~ "set, a majority of the members "
#~ "must be accessible. If your replica "
#~ "set has an even number of members,"
#~ " add an :doc:`arbiter </tutorial/add-"
#~ "replica-set-arbiter>` to ensure that "
#~ "members can quickly obtain a majority"
#~ " of votes in an election for "
#~ "primary."
#~ msgstr ""

# 1ce9e2074520422fbdbc3c20a95df2eb
#~ msgid ":data:`~local.system.replset.members[n].priority`"
#~ msgstr ""

#~ msgid ""
#~ "In a replica set, by default all"
#~ " :term:`secondary` members are eligible to"
#~ " become primary through the election "
#~ "process. You can use the :data:`priority"
#~ " <local.system.replset.members[n].priority>` to affect"
#~ " the outcome of these elections by"
#~ " making some members more likely to"
#~ " become primary and other members "
#~ "less likely or unable to become "
#~ "primary."
#~ msgstr ""

#~ msgid ""
#~ "In a :program:`mongo` shell connected to"
#~ " a primary, run the :method:`rs.conf()` "
#~ "method and assign the result to a"
#~ " variable:"
#~ msgstr ""

#~ msgid ""
#~ "The returned document contains a "
#~ ":data:`~local.system.replset.members` field which "
#~ "contains an array of member "
#~ "configuration documents, one document for "
#~ "each member of the replica set."
#~ msgstr ""

#~ msgid ""
#~ "To prevent a secondary member from "
#~ "becoming a primary, update the secondary"
#~ " member's :data:`~local.system.replset.members[n].priority`"
#~ " to ``0``."
#~ msgstr ""

#~ msgid ""
#~ "To assign a priority value to a"
#~ " member of the replica set, access"
#~ " the member configuration document using"
#~ " the array index. In this tutorial,"
#~ " the secondary member to change "
#~ "corresponds to the configuration document "
#~ "found at position ``2`` of the "
#~ ":data:`~local.system.replset.members` array."
#~ msgstr ""

