==================
replSetResizeOplog
==================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. dbcommand:: replSetResizeOplog

   .. versionadded:: 3.6

   Use the :dbcommand:`replSetResizeOplog` administrative command to 
   change the size of a replica set member's oplog. 
   :dbcommand:`replSetResizeOplog` enables you to resize the oplog 
   dynamically without restarting the :binary:`~bin.mongod` process. 

   You must run this command against the ``admin`` database.

   The command has the following form:

   .. code-block:: javascript

      { replSetResizeOplog: <boolean>, size: <num MB> }

   .. note::

      :dbcommand:`replSetResizeOplog` takes the size parameter
      in megabytes, while the oplog size is stored in bytes. The size
      parameter must also be over 990 megabytes.

Behavior
--------

You can only use :dbcommand:`replSetResizeOplog` on 
:binary:`~bin.mongod` instances running with the 
:ref:`Wired Tiger storage engine <storage-wiredtiger>`.

Changing the oplog size of a given replica set member with
:dbcommand:`replSetResizeOplog` does not change the oplog size of any
other member in the replica set. You must run
:dbcommand:`replSetResizeOplog` on each replica set member in your
cluster to change the oplog size for all members.

Example
--------

Use the :dbcommand:`stats` command to display the current oplog size,
``maxSize``. For example:

.. code-block:: javascript

   use local
   db.oplog.rs.stats().maxSize

The above command will return the oplog size of this member:

.. code-block:: javascript

   "maxSize": NumberLong("9790804377")

``maxSize`` is currently 9790804377 bytes, or 9337 megabytes.

The following command changes the oplog size of this member to
17179869184 bytes, or 16384 megabytes.

To change the size, run the :dbcommand:`replSetResizeOplog`, passing
the desired size in megabytes as a parameter.

.. code-block:: javascript

   db.adminCommand({replSetResizeOplog:1, size: 16384})

To verify the new oplog size, rerun the :dbcommand:`stats` command:

.. code-block:: javascript

   use local
   db.oplog.rs.stats().maxSize

The above command returns:

.. code-block:: javascript

   "maxSize": NumberLong("17179869184")

.. warning::

   Reducing the size of the oplog in a node removes data from it. This
   may cause replica members syncing with that node to become stale.
   To resync those members, see :doc:`/tutorial/resync-replica-set-member`.
