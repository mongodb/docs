=====================================
Add Monitored Processes to Automation
=====================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Overview
--------

|mms| Automation lets you deploy, reconfigure and upgrade your MongoDB
databases directly from the |mms| console.

If |mms| is already monitoring your MongoDB processes, you can add them
to Automation.

Automation relies on the Automation Agent, which you install on each
server that hosts a process to be added to automated management. The
Automation Agents regularly poll |mms| to determine goal configuration
and deploy changes as needed.

Considerations
--------------

Automation supports most but not all available MongoDB options. See
:doc:`/reference/cluster-configuration-process-options` for supported
MongoDB deployment options.

When adding a MongoDB deployment requiring authentication, you have the
option of importing that process's users and roles. During import,
|mms| prompts you to resolve any conflicts that may occur between the
imported users and roles and the managed users and roles.

.. seealso::

   :ref:`automation-updated-security-settings` for how adding
   automation may affect the security settings of a MongoDB process
   or |mms| group.

Prerequisites
-------------

|mms| is Monitoring the Processes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

|mms| must be currently monitoring the MongoDB processes, and the
Monitoring Agent must be running. The processes must appear on the
|mms| :guilabel:`Deployment` page.

.. seealso::
   :doc:`/tutorial/add-existing-mongodb-processes` to enable |mms| to
   automate and monitor your MongoDB processes if |mms| does not
   currently do so.

The Automation Agent must be:

- Installed only on 64-bit architectures.

- Granted permission to stop the MongoDB processes. The Automation
  Agent restarts the processes using the agent's own set of MongoDB
  binaries. If you had installed MongoDB with a package manager, use
  the same package manager to install the Automation Agent. This gives
  the agent the same owner as MongoDB.

- Granted ``Read`` and ``Write`` permissions on the MongoDB data
  directories and log directories.

MongoDB Process User and Group IDs Must Match the Automation Agent
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The user ID (UID) and group ID (GID) of the MongoDB process to be
automated must match that of the Automation Agent. If the MongoDB
processes to be automated are not running as the same user and group,
the Agent cannot manage those processes.

.. example::
   If your Automation Agent runs as the ``mongod`` user in the
   ``mongod`` group, the MongoDB process must also run as the
   ``mongod`` user in the ``mongod`` group.

.. note::
   On Microsoft Windows systems, the Automation Agent, and therefore the ``mongod`` or ``mongos`` services it manages, run as Windows services as the ``SYSTEM`` user. The existing MongoDB process should run as either ``SYSTEM`` or ``Administrator`` to add it to automation. 

.. include:: /includes/prerequisites-automation-agent-servers.rst

Procedure
---------

Add Monitored Processes to Automation
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/steps/add-monitored-deployment-to-automation.rst


Import Process and Users Examples
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. example:: 

   **Import MongoDB Process and Users when Ensure Consistent Set set to YES**

   A MongoDB process is being imported into the |mms|-managed
   deployment. 

   * This imported process has three users: ``productsUser``,
     ``reportsUser`` and ``testUser``.

   * The current |mms|-managed deployments also have three users:
     ``managedDev``, ``managedTester`` and ``managedSales``.

   * All |mms|-managed users are set to :guilabel:`Sync`.

   * :guilabel:`Ensure Consistent Set` is ``YES``.

   * Authentication for the MongoDB deployment is enabled.

   After the import:

   * Authentication for the MongoDB deployment is enabled.
   
   * The three imported users are set to :guilabel:`Sync` and are
     visible in |mms|.

   * A user for the Automation Agent now exists.
   
   * Seven |mms|-managed users (including the Automation Agent) are
     in the imported MongoDB proce

.. example:: 

   **Import MongoDB Process and Users when Ensure Consistent Set set
   to NO and authentication is disabled**

   A MongoDB process is being imported into the |mms|-managed
   deployment. 

   * This imported process has three users: ``productsUser``,
     ``reportsUser`` and ``testUser``.

   * The current |mms|-managed deployments also have three users:
     ``managedDev``, ``managedTester`` and ``managedSales``.

   * All |mms|-managed users are set to :guilabel:`Sync`.

   * :guilabel:`Ensure Consistent Set` is ``NO``.

   * Authentication for the MongoDB deployment is disabled.

   After the import:

   * Authentication for the MongoDB deployment is enabled.

   * A user for the Automation Agent now exists.

   * The three imported MongoDB users are visible in |mms|.

   * The three original |mms|-managed users are set to
     :guilabel:`Sync` and are visible in |mms|.

   * Seven |mms|-managed users (including the Automation Agent) are
     in the imported MongoDB process.

.. example:: 

   **Add Users to a MongoDB Process after that Process Was Imported**

   A MongoDB process has been imported into the |mms|-managed
   deployment. After the import, users were added to the MongoDB
   deployment directly. You clicked :guilabel:`Refresh` to see if
   these users are viewable.

   * This imported process has three users: ``productsUser``,
     ``reportsUser`` and ``testUser``.

   * The current |mms|-managed deployments also have three users:
     ``managedDev``, ``managedTester`` and ``managedSales``.

   * All |mms|-managed users are set to :guilabel:`Sync`.

   * :guilabel:`Ensure Consistent Set` is ``NO``.

   * Authentication was not enabled.

   * A user for the Automation Agent was already created.

   After the **refresh**: 

   * The three imported users are not set to :guilabel:`Sync`, but are
     visible in |mms|.

   * The three original |mms|-managed users are set to
     :guilabel:`Sync` and are visible in |mms|.

   * Seven |mms|-managed users (including the Automation Agent) are
     in the imported MongoDB process.
