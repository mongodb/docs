---
stepnum: 1
level: 4
source:
  file: steps-helm-master.yaml
  ref: install-helm-charts

---
stepnum: 2
level: 4
title: "Install the |k8s-op-full|"
ref: install-kubectl-quickstart
content: |

  To :github:`install the Kubernetes Operator with Helm
  </mongodb/helm-charts/tree/main/charts/enterprise-operator#installing-enterprise-operator>`, see the 
  instructions in the repository.

  **Example**

  The following command installs the |k8s-op-full| in the ``mongodb`` 
  namespace with the optional ``--create-namespace`` option. By 
  default, |k8s-op-short| uses the ``default`` namespace. 

  .. code-block:: sh

     helm install enterprise-operator mongodb/enterprise-operator --namespace mongodb --create-namespace

---
stepnum: 3
level: 4
ref: configure-kubectl-quickstart
title: "Configure ``kubectl`` to default to your namespace."
content: |

  If you haven't already, run the following command to execute all 
  ``kubectl`` commands in the namespace you created:

  .. code-block:: sh

     kubectl config set-context $(kubectl config current-context) --namespace=mongodb

---
stepnum: 4
title: "Configure the Kubernetes Operator"
ref: configure-kubernetes-operator-quickstart
content: |

  a. :cloudmgr:`Go to the Kubernetes Setup Page in the Cloud Manager UI 
     </tutorial/nav/k8s-config-for-mdb-resource/#navigate-to-the-kubernetes-setup-page-in-the-mms-ui>`.

  #. Click :guilabel:`Create New API Keys` or 
     :guilabel:`Use Existing API Keys`.

  #. Complete the form. To learn more, see 
     :cloudmgr:`Programmatic Access to Cloud Manager 
     </tutorial/manage-programmatic-api-keys/>`.

  #. Click :guilabel:`Generate Key and YAML`.
  
---
stepnum: 5
level: 4
title: "Copy and save the ConfigMap."
ref: copy-k8s-configmap-quickstart
content: |

  Copy and save the generated ``config-map.yaml`` file.

  **Example:**

  .. code-block:: yaml

     apiVersion: v1
     kind: ConfigMap
     metadata:
       name: my-project
       namespace: mongodb
     data:
       baseUrl: https://cloud.mongodb.com

       projectName: my-project # this is an optional parameter
       orgId: 5ecd252f8c1a75033c74106c # this is a required parameter
  
  To learn more, see the :doc:`parameter descriptions 
  </tutorial/create-project-using-configmap>`.

---
stepnum: 6
level: 4
title: "Copy and save the Secret."
ref: copy-k8s-secret-quickstart
content: |

  Copy and save the generated ``secret.yaml`` file.

  **Example:**

  .. code-block:: yaml

     apiVersion: v1
     kind: Secret
     metadata:
       name: organization-secret
       namespace: mongodb
     stringData:
       user: <public_key>
       publicAPIKey: <private_key>
  
  For security purposes, |cloud| displays this file only once.

---
stepnum: 7
level: 4
title: "Apply the ConfigMap and Secret."
ref: apply-configmap-secret
content: |

  Run the following command:

  .. code-block:: sh

     kubectl apply -f secret.yaml -f config-map.yaml

---
stepnum: 8
level: 4
title: "Deploy the :manual:`MongoDB replica set </reference/glossary/#std-term-replica-set>` resource."
ref: deploy-replica-set-quickstart
content: |

  a. Copy and save the following |yaml| file:

     .. code-block:: yaml

        apiVersion: mongodb.com/v1
        kind: MongoDB
        metadata:
          name: demo-mongodb-cluster-1
          namespace: mongodb
        spec:
          members: 3
          version: 4.4.5-ent
          type: ReplicaSet
          security:
            authentication:
              enabled: true
              modes: ["SCRAM"]
          cloudManager:
            configMapRef:
              name: my-project
          credentials: organization-secret
          persistent: true
          podSpec:
            podTemplate:
              spec:
               containers:
                - name: mongodb-enterprise-database
                  resources:
                    limits:
                      cpu: 2
                      memory: 1.5G
                    requests:
                      cpu: 1
                      memory: 1G 
                    persistence:
                      single:
                        storage: 10Gi

  #. Run the following command:

     .. code-block:: sh

        kubectl apply -f <replica-set-conf>.yaml

---
stepnum: 9
level: 4
title: "Create a secret with your database user password"
ref: create-k8s-user-secret-quickstart
content: |

  You can choose to use a cleartext password or a Base64-encoded 
  password. Plaintext passwords use ``stringData.password`` and 
  Base64-encoded passwords use ``data.password``.

  .. note::

     Provide your values for the following parameters. To learn more, 
     see the :doc:`parameter descriptions 
     </tutorial/manage-database-users-scram>`.

  For a cleartext password, create and save the following |yaml| file:

  .. code-block:: yaml

     apiVersion: v1
     kind: Secret
     metadata:
       name: mms-user-1-password
       # corresponds to user.spec.passwordSecretKeyRef.name
     type: Opaque
     stringData:
       password: <my-plain-text-password>
       # corresponds to user.spec.passwordSecretKeyRef.key
  
  For a Base64-encoded password, create and save the following YAML 
  file:

  .. code-block:: yaml

     apiVersion: v1
     kind: Secret
     metadata:
       name: mms-user-1-password
       # corresponds to user.spec.passwordSecretKeyRef.name
     type: Opaque
     data:
       password: <base-64-encoded-password>
       # corresponds to user.spec.passwordSecretKeyRef.key

---
stepnum: 10
level: 4
title: "Create a database user."
ref: add-k8s-user-configmap-quickstart
content: |

  a. Copy and save the following :ref:`mongodbuser-specification` file:

     .. code-block:: yaml

        apiVersion: mongodb.com/v1
        kind: MongoDBUser
        metadata:
          name: mms-scram-user-1
        spec:
          passwordSecretKeyRef:
            name: mms-user-1-password
            # Match to metadata.name of the User Secret
            key: password
          username: "mms-scram-user-1"
          db: "admin" #
          mongodbResourceRef:
            name: "demo-mongodb-cluster-1"
            # Match to MongoDB resource using authentication
          roles:
          - db: "admin"
            name: "clusterAdmin"
          - db: "admin"
            name: "userAdminAnyDatabase"
          - db: "admin"
            name: "readWrite"

  #. Run the following command:

     .. code-block:: sh

        kubectl apply -f <database-user-conf>.yaml

---
stepnum: 11
level: 4
ref: view-k8s-user-quickstart
optional: true
source:
  file: steps-add-database-user-scram.yaml
  ref: view-k8s-user

---
stepnum: 12
level: 4
title: "Connect to the :manual:`MongoDB replica set </reference/glossary/#std-term-replica-set>`."
ref: connect-k8s-rs-quickstart
content: |

  Perform the following steps in the |cloud-link| application:

  a. Click :guilabel:`Deployment` in the left navigation.

  #. Click :icon-mms:`ellipsis` for the deployment to which you want
     to connect.
  
  #. Click :guilabel:`Connect to this instance`.

  #. Run the connection command in a terminal to connect to the
     deployment.
