.. _5.0-downgrade-sharded-cluster:

======================================================
Downgrade |newversion| Sharded Cluster to |oldversion|
======================================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. include:: /includes/5.0-upgrade-replacements.rst

Before you attempt any downgrade, familiarize yourself with the content
of this document.

Downgrade Path
--------------

.. include:: /includes/downgrade-path.rst

.. include:: /includes/downgrade/single-version-support.rst

.. |downgrading| replace:: downgrading


Create Backup
-------------

*Optional but Recommended.*  Create a backup of your database.


Prerequisites
-------------

To downgrade from |newversion| to |oldversion|, you must remove
incompatible features that are persisted and/or update incompatible
configuration settings. These include:

1. Cluster Default Read and Write Concerns
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 5.0 changed the default value for cluster-wide read and write
concerns, and downgrading to MongoDB 4.4 might change those defaults
back. Consider manually configuring your cluster's default read and
write concern before downgrading:

- To manually configure a default value for a cluster's read or write
  concern, use the :dbcommand:`setDefaultRWConcern` command.

- If your cluster includes an :doc:`arbiter
  </core/replica-set-arbiter>`, and you had previously disabled
  ``"Majority"`` read concern to prevent cache pressure in certain
  situations, you may want to configure
  :option:`--enableMajorityReadConcern false
  <mongod --enableMajorityReadConcern>` or
  :setting:`replication.enableMajorityReadConcern: false
  <replication.enableMajorityReadConcern>` once you downgrade.

2. Document Fields with ``.`` or ``$`` Characters
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 5.0 adds support for including the ``.`` or ``$`` characters in
document field names. You must delete any documents containing field
names that include the ``.`` or ``$`` characters before downgrading
to MongoDB 4.4.

3. Slim-format Timezone Data Files
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 5.0 enables support for slim-format timezone data files. If
using slim-format timezone data files in your deployment, as provided
to MongoDB with the :option:`--timeZoneInfo <mongod --timeZoneInfo>`
command line option or :setting:`processManagement.timeZoneInfo`
configuration file setting, you must downgrade to MongoDB 4.4.7 or
later, or else revert your timezone data files to use the previous
non-slim-format data files.

4. Resharding
~~~~~~~~~~~~~

Ensure that any :ref:`resharding operations <sharding-resharding>` have
successfully completed before attempting any downgrade procedure. If a
recent resharding operation has failed due to a primary failover, you
must first run the :dbcommand:`cleanupReshardCollection` command before
downgrading the ``featureCompatibilityVersion`` of your sharded cluster.

If a resharding operation is still running while you downgrade the
``featureCompatibilityVersion`` of your sharded cluster, the resharding
operation will abort.

.. |target| replace:: :binary:`~bin.mongos` instance

.. _5.0-downgrade-feature-compatibility-sharded-cluster:

5. Downgrade Feature Compatibility Version (FCV)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

First, verify the following:

- Ensure that no initial sync is in progress. Running
  :dbcommand:`setFeatureCompatibilityVersion` command while an
  initial sync is in progress will cause the initial sync to restart.

- Ensure that no nodes have a ``newlyAdded`` field in their
  :doc:`replica set configuration </reference/replica-configuration>`.
  Run the following command on each node in your sharded cluster to
  verify this:

  .. code-block:: javascript

     use local
     db.system.replset.find( { "members.newlyAdded" : { $exists : true } } );
  
  The ``newlyAdded`` field only appears in a node's replica set
  configuration document during and shortly after an initial sync.

- Ensure that no replica set member is in :replstate:`ROLLBACK` or
  :replstate:`RECOVERING` state.

Next, to downgrade the ``featureCompatibilityVersion`` of your sharded
cluster:

#. Connect a ``mongo`` shell to the |target|.

#. .. include:: /includes/5.0-downgrade-fcv.rst

   .. note:: 

      - While :dbcommand:`setFeatureCompatibilityVersion` is running on
        the sharded cluster, chunk migrations, splits, and merges can
        fail with ``ConflictingOperationInProgress``.

      - If :dbcommand:`setFeatureCompatibilityVersion` fails with a
        ``ManualInterventionRequired`` error, and the cluster has
        recently undergone a resharding operation that had failed due to
        an election, you must run the ``cleanupReshardCollection``
        command before attempting
        :dbcommand:`setFeatureCompatibilityVersion` again.

#. To ensure that all members of the sharded cluster reflect the
   updated ``featureCompatibilityVersion``, connect to each shard replica
   set member and each config server replica set member and check the
   ``featureCompatibilityVersion``:

   .. tip::

      For a sharded cluster that has access control enabled, to run the
      following command against a shard replica set member, you must
      connect to the member as a :ref:`shard local user
      <shard-local-users>`.

   .. code-block:: javascript

      db.adminCommand( { getParameter: 1, featureCompatibilityVersion: 1 } )

   All members should return a result that includes:

   .. code-block:: javascript

      "featureCompatibilityVersion" : { "version" : "4.4" }

   If any member returns a ``featureCompatibilityVersion`` of |newfcv|,
   wait for the member to reflect version |oldfcv| before proceeding.

.. note::

  .. include:: /includes/arbiter-fcv.rst

  .. include:: /includes/arbiter-fcv-version.rst

For more information on the returned ``featureCompatibilityVersion``
value, see :ref:`view-fcv`.

6. Remove FCV |newversion| Persisted Features
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following steps are necessary only if FCV has ever been set to
|newfcv|.

Remove all persisted |newversion| |features| that are incompatible with
|oldversion|. These include:

Time-series Collections
  Remove all :ref:`time series collections
  <manual-timeseries-collection>`.

Runtime Audit Filter Management
  - Disable Runtime Audit Filter Management by setting  
    ``auditLog.runtimeConfiguration`` to ``false`` in the node's
    configuration file.

  - Update the audit filters for this :binary:`~bin.mongod` or
    :binary:`~bin.mongos` instance in the local configuration file.

7. Remove |newversion| Features
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Remove all persisted features that use |newversion| features. These
include but are not limited to:

- If any view definitions include 5.0 operators, such as
  :expression:`$dateAdd` or :expression:`$sampleRate`, they must be
  removed. See :ref:`5.0-rel-notes-new-agg-operators` for the full list.

.. |binary| replace:: any :binary:`mongod` / :binary:`mongos` instance

Procedure
---------

Downgrade a Sharded Cluster
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. warning::

   Before proceeding with the downgrade procedure, ensure that all
   members, including delayed replica set members in the sharded
   cluster, reflect the prerequisite changes.  That is, check the
   ``featureCompatibilityVersion`` and the removal of incompatible
   features for each node before downgrading.

.. include:: /includes/steps/5.0-downgrade-sharded-cluster.rst
