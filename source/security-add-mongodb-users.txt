.. _mongodb-users:

========================
Configure Database Users
========================

.. default-domain:: mongodb

.. meta::
   :keywords: x509

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Create database users to provide clients access to the {+database-deployments+} in your
project. A database user's access is determined by the roles assigned
to the user. When you create a database user, any of the :ref:`built-in roles <atlas-user-privileges>` 
add the user to all {+database-deployments+} in your |service| project. You can remove the 
default :ref:`built-in role <atlas-user-privileges>` and set :ref:`specific privileges <atlas-specific-privileges>`
and :ref:`custom roles <mongodb-roles>` to add the user to specific {+database-deployments+}.

Database users are separate from |service| users. Database users have
access to MongoDB databases, while |service| users have access to the
|service| application itself. |service| supports creating temporary
database users that automatically expire within a user-configurable
7-day period.

.. include:: /includes/fact-user-auditing.rst

The available |service| :ref:`built-in roles <atlas-user-privileges>`
and :ref:`specific privileges <atlas-specific-privileges>` support a
subset of MongoDB commands. See :ref:`paid-tier-command-limitations`
for more information.

.. include:: /includes/fact-database-user-limits.rst

.. important::

   |service| rolls back any user modifications not made through the UI
   or :oas-atlas-tag:`{+atlas-admin-api+} </Database-Users>`. You must 
   use the {+atlas-ui+} or {+atlas-admin-api+} to add, modify, or 
   delete database users on |service| {+database-deployments+}.

Database User Authentication
----------------------------

|service| offers the following forms of authentication for database users:

.. tabs::

   tabs:
   - id: scram
     name: Password Authentication
     content: |
       :ref:`SCRAM <authentication-scram>` is MongoDB's
       default authentication method. SCRAM requires a password for
       each user.

       The :ref:`authentication database <user-authentication-database>` for
       SCRAM-authenticated users is the ``admin`` database.

       .. note::

          By default, Atlas supports SCRAM-SHA-256 authentication. 
          If you have any database users created before the release of 
          MongoDB 4.0, delete and recreate them to generate 
          SCRAM-SHA-256 credentials for them.

   - id: x509
     name: X.509 Certificates
     content: |
       :manual:`X.509 Certificates </core/security-x.509/>`
       allow passwordless authentication by using a trusted certificate.
  
       The :ref:`authentication database <user-authentication-database>` for
       X.509-authenticated users is the ``$external`` database.

       If you :ref:`enable LDAP authorization 
       <ldaps-authentication-authorization>`, you can't connect to your
       {+database-deployments+} with users that authenticate with an
       |service|-managed X.509 certificate. To enable |ldap| and
       connecting to your {+database-deployments+} with X.509 users, see
       :ref:`self-managed-x509`.
  
   - id: aws-iam
     name: AWS IAM Authentication
     content: |
 
       You can create a database user which uses an `AWS IAM
       <https://docs.aws.amazon.com/IAM/latest/UserGuide/introduction.html>`__
       user :abbr:`ARN (Amazon Resource Name)` for authentication.
  
       The :ref:`authentication database <user-authentication-database>` for
       AWS IAM-authenticated users is the ``$external`` database.
  
       AWS IAM authentication is available only on {+database-deployments+} which use MongoDB
       version 4.4 and higher.

   - id: ldap
     name: LDAP Authentication
     content: |

        You can create a database user that uses :ref:`LDAP <ldaps-authentication-authorization>`
        for authentication.

        The :ref:`authentication database <user-authentication-database>` for
        |ldap|-authenticated users is the ``$external`` database.

        If you :ref:`enable LDAP authorization <ldaps-authentication-authorization>`, you 
        can't connect to your {+database-deployments+} with users that authenticate with an
        |service|-managed X.509 certificate. To enable |ldap| and
        connecting to your {+database-deployments+} with X.509 users, see
        :ref:`self-managed-x509`.

.. _add-mongodb-users:

Add Database Users
------------------

A project can have users with different authentication methods.

You cannot change a user's authentication method after creating that
user. To use an alternative authentication method, you must create a
new user.

.. tabs::

   .. tab:: {+atlas-cli+}
      :tabid: atlascli

      The {+atlas-cli+} uses the following commands to create new database users and X.509 certificates. The options you specify determine the authentication method.

      .. include:: /includes/extracts/atlas-dbusers-create-and-certs-create.rst

   .. tab:: {+atlas-admin-api+}
      :tabid: api

      You can add database users through the {+atlas-admin-api+}. The 
      options you specify determine the authentication method. To learn 
      more, see :oas-atlas-op:`Create One Database User 
      </createDatabaseUser>`.

   .. tab:: {+atlas-ui+}
      :tabid: ui

      Select an authentication mechanism and follow the steps to create
      a new database user using the {+atlas-ui+}.

      .. include:: /includes/create-db-user-ui.rst

.. _view-mongodb-users:

View Database Users and Certificates
------------------------------------

.. tabs::

   .. tab:: {+atlas-cli+}
      :tabid: atlascli

      View Database Users
      ~~~~~~~~~~~~~~~~~~~

      .. include:: /includes/extracts/atlas-dbusers-describe-and-list.rst

      View X.509 Certificates for a Database User
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      .. include:: /includes/extracts/atlas-dbusers-certs-list.rst

   .. tab:: {+atlas-admin-api+}
      :tabid: api

      To view |service| database users using the 
      {+atlas-admin-api+}, see :oas-atlas-op:`Get All
      </listDatabaseUsers`. 

   .. tab:: {+atlas-ui+}
      :tabid: ui

      To view |service| database users and X.509 certificates in the 
      {+atlas-ui+}:
      
      #. In the :guilabel:`Security` section in the left navigation,
         click :guilabel:`Database Access`. The :guilabel:`Database Users` tab displays.

      #. Click :icon-fa4:`pencil`
         :guilabel:`Edit` for the user to view their privileges,authentication details, and X.509 certificates.

.. _modify-mongodb-users:

Modify Database Users
---------------------

.. tabs::

   .. tab:: {+atlas-cli+}
      :tabid: atlascli

      .. include:: /includes/extracts/atlas-dbusers-update.rst

   .. tab:: {+atlas-admin-api+}
      :tabid: api

      You can update database users through the {+atlas-admin-api+}. To 
      learn more, see :oas-atlas-op:`Update One 
      </updateDatabaseUser>`.

   .. tab:: {+atlas-ui+}
      :tabid: ui

      .. include:: /includes/modify-db-user-ui.rst

.. _delete-mongodb-users:

Delete Database Users
---------------------

.. tabs::

   .. tab:: {+atlas-cli+}
      :tabid: atlascli

      .. include:: /includes/extracts/atlas-dbusers-delete.rst

   .. tab:: {+atlas-admin-api+}
      :tabid: api

      You can delete database users through the {+atlas-admin-api+}. To 
      learn more, see :oas-atlas-op:`Delete One 
      </deleteDatabaseUser>`.

   .. tab:: {+atlas-ui+}
      :tabid: ui

      To delete existing users for an |service| project using the 
      {+atlas-ui+}:

      #. In the :guilabel:`Security` section in the left navigation,   
         click :guilabel:`Database Access`. The 
         :guilabel:`Database Users` tab displays.

      #. Click :icon-fa4:`trash-o` :guilabel:`Delete` next to the user
         you want to delete.

      #. Click :guilabel:`Delete` again to confirm.


.. _atlas-user-privileges:

Built-in Roles
--------------

The following table describes the |service| built-in roles and the
:manual:`MongoDB Roles </core/security-built-in-roles>` or
:manual:`privilege actions </reference/privilege-actions>` they
represent.

.. note:: Protected MongoDB Database Namespaces

   The following databases are read-only for *all* users, including
   those with the :atlasrole:`atlasAdmin` or :authrole:`clusterMonitor` 
   role.

   - ``local``
   - ``config``

   We discourage writing to the ``admin`` database. |service| manages multiple 
   collections in the ``admin`` database, and these collections are read-only for 
   all users.
   
   :atlasrole:`atlasAdmin` has the :authaction:`update` privilege on 
   the ``config.settings`` collection to manage the balancer.

.. list-table::
   :header-rows: 1

   * - |service| Built-in Role
     - MongoDB Role
     - Inherited Roles or Privilege Actions

   * - .. atlasrole:: Atlas admin
     - .. atlasrole:: atlasAdmin
     -
       - :authrole:`readWriteAnyDatabase`
       - :authrole:`readAnyDatabase`
       - :authrole:`dbAdminAnyDatabase`
       - :authrole:`clusterMonitor`
       - :authaction:`cleanupOrphaned`
       - :authaction:`enableSharding`
       - :authaction:`flushRouterConfig`
       - :authaction:`moveChunk`
       - :authaction:`viewUser`

   * - .. atlasrole:: Read and write to any database
     - .. atlasrole:: readWriteAnyDatabase
     -
       - :authrole:`readWriteAnyDatabase`

   * - .. atlasrole:: Only read any database
     - .. atlasrole:: readAnyDatabase
     -
       - :authrole:`readAnyDatabase`

To learn more about common commands that |service| doesn't support
with the current |service| user privileges, see
:ref:`paid-tier-command-limitations`

.. _atlas-specific-privileges:

Specific Privileges
-------------------

.. include:: /includes/fact-read-read-write-actions.rst

.. toctree::
  :titlesonly:
  :hidden:
