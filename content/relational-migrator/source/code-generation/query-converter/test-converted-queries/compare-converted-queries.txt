.. _rm-compare-converted-queries:

=========================
Compare Converted Queries
=========================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

You can use the :guilabel:`Test Queries` pane to compare source 
and destination queries, views, and stored procedure results 
in {+rel-mig+}. The :guilabel:`Test Queries` can 
help you verify the accuracy of converted code and
show the source and destination data after you run a migration job.

About this Task
---------------

The :guilabel:`Test Queries` pane is split into three separate 
user interfaces: ``Console``, ``Results``, and ``Messages``. 
Click the pill buttons next to :guilabel:`Test Queries` to 
change the user interface. The following table summarizes 
each user interface:

.. list-table::
   :header-rows: 1
   :widths: 20 80

   * - User Interface 
     - Description
   * - Console
     - This is the default user interface of the 
       :guilabel:`Test Queries` pane. You can click 
       the :guilabel:`Run Source Query` button to 
       run all converted queries. You can also specify 
       parameters for stored procedures in the 
       :guilabel:`Source Script` text field.
   * - Results
     - This user interface is used to view the query results 
       from the source and destination queries. You must run 
       a source or destination query to view the ``Results``
       user interface.
   * - Messages
     - This user interface is used to show messages from each 
       database connection. You can see error messages, 
       execution stats, and any print statements.

Before you Begin
----------------

- You must sign in to your Atlas account in {+rel-mig+}. 
  For details, see :ref:`rm-atlas-log-in`.

- For details on how to turn on Query Converter, see 
  :ref:`rm-enable-query-converter`.

- To use the :guilabel:`Test Queries` pane, Relational
  Migrator must have access to the Query Runner. For details
  on how to setup Query Runner, see :ref:`rm-install-query-runner`.

Steps
-----

.. procedure::
   :style: normal

   .. step:: Select a query on the :guilabel:`Query Converter` pane

      a. From the :guilabel:`Code Generation` tab, click the 
         :guilabel:`Query Converter` pane.

         .. note::

           If you are not already logged into your Atlas account or have
           an expired session, you must login to proceed.

      #. On the left-hand :guilabel:`Queries` pane, select a query, view,
         or stored procedure.

      #. If your query has not been converted, select a 
         :guilabel:`Target Language` and click :guilabel:`Convert`
         :icon-lg:`Sparkle`.

   .. step:: Open the :guilabel:`Test Queries` pane

      a. From the :guilabel:`Code Generation` tab, click the 
         :guilabel:`Query Converter` pane.

      #. On the bottom-right of the screen, click the :icon-lg:`ChevronUp` 
         button.

   .. step:: *(Optional)* Specify parameters

      If you're converting a stored procedure with parameters, specify the 
      stored procedure's parameters in the :guilabel:`Source Script` text field.

      For example, for the following PostGreSQL stored procedure:

      .. code-block:: sql
         :copyable: false

         CREATE OR REPLACE PROCEDURE PUBLIC.CANCEL_CUSTOMER_ORDERS(IN CUST_ID INTEGER)
         LANGUAGE PLPQSQL

         AS $PROCEDURE$
         BEGIN 
            UPDATE ORDERS SET STATUS = 'CANCELLED' WHERE CUSTOMER_ID = CUST_ID;
         END;$PROCEDURE$

      Specify the ``CUST_ID`` in the :guilabel:`Source Script` text field
      by replacing ``<value>`` with the customer ID:

      .. code-block:: sql
         :copyable: false
         :emphasize-lines: 7

         DO 
         $$
            DECLARE
               CUST_ID INTEGER;
            BEGIN
               --TODO: Set parameter values here
               CUST_ID := <value>

               CALL public.cancel_customer_orders(cust_id);
            END;
         $$  

   .. step:: Run the source query

      a. On the :guilabel:`Test Queries`
         pane, click the :guilabel:`Run Source Query` 
         button.

      #. Enter the connection details to your source database.

      #. On the :guilabel:`Connection Details` form, click :guilabel:`Run`.

         The data from the source database populates in the
         :guilabel:`Results` user interface. You can click 
         the :guilabel:`Messages` pill to see execution 
         statistics such as ``Execution Time``, ``Row Count``, 
         error messages, and print statements.
      
   .. step:: Run the converted query

      a. On the :guilabel:`Test Queries`
         pane, click :guilabel:`Run Converted Query` 
         button.

      #. Enter the connection details to your database.

      #. On the :guilabel:`Connection Details` form, click :guilabel:`Run`.
         

         The data from the destination database populates 
         on the right-side of the :guilabel:`Results` user 
         interface.

      #. You can use the :guilabel:`Results` pane to compare the 
         source and destination data and types.

         .. note::

            You can click the :icon-lg:`Menu` and 
            :icon-lg:`Apps` buttons to switch between 
            the document and row view for the data. 

   .. step:: *(Optional)* Edit the converted query

            If the destination query needs to be changed, you can make 
            code changes in the :guilabel:`Converted MongoDB Query`
            pane and run the updated query.
            
            a. On the :guilabel:`Converted MongoDB Query` pane, 
               click the :icon-lg:`Edit` button.
            
            #. Edit the code and click :guilabel:`Save`.
            
            #. Click :guilabel:`Run Converted Query`.

Learn More
----------

- :ref:`rm-convert-queries`
- :ref:`rm-convert-views`
- :ref:`rm-convert-stored-procedures`
