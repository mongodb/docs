.. _run-geo-search-tutorial:

===========================================
How to Run an |fts| Compound Geo JSON Query
===========================================

.. default-domain:: mongodb

.. meta::
   :keywords: create an atlas search index, run a compound atlas search query, index GeoJSON objects, index GeoJSON object type, index geographic shape, run GeoJSON query, run compound GeoJSON query, search by coordinates, run GeoJSON polygon query, code example
   :description: Create an atlas search index and run a GeoJSON query.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

This tutorial describes how to create an index on the 
``listingsAndReviews`` collection in the ``sample_airbnb`` database
and run a query that returns documents with the
``name``, ``address``, and ``property_type``
for each property within the specified polygon defined using ``coordinates``.

This tutorial takes you through the following steps: 

1. Set up an |fts| index on the ``address`` field in the 
   ``sample_airbnb.listingsAndReviews`` collection.
#. Run a query that returns 10 documents with the
   ``name``, ``address``, and ``property_type``
   of each property within the specified 
   geographic ``coordinates``.
   |fts| results reflect a preference for properties of type ``condominium``, 
   and each document in the result is assigned a relevance ``score``, 
   returned in order from highest to lowest.

Before you begin, ensure that your |service| cluster meets the 
requirements described in the :ref:`fts-tutorials-prereqs`.

.. include:: /includes/atlas-roles/create-search-index.rst

Create the |fts| Index  
----------------------

In this section, you will create an |fts| index on the ``address`` field 
in the ``sample_airbnb.listingsAndReviews`` collection.

.. include:: /includes/steps/fts-tutorial-index-geo-query.rst

Run a Combined Geo, Number, and Text Fields Query 
-------------------------------------------------

----------

.. |arrow| unicode:: U+27A4

|arrow| Use the **Select your language** drop-down menu on this page to 
set the language of the examples in this section.

----------

.. tabs-selector:: drivers

In this section, you will run a query that returns 10 documents with the
``name``, ``address``, and ``property_type``
for each property within the specified 
geographic ``coordinates``.   
A field specifying each documents ``score`` is also returned, 
and results are ordered with a preference for
properties of type ``condominium``.

.. tabs-drivers::

   .. tab::
      :tabid: atlas-ui 

      .. include:: /includes/steps/fts-tutorial-run-geo-query-atlas-ui.rst

   .. tab::
      :tabid: shell

      .. include:: /includes/steps/fts-tutorial-run-geo-query.rst

   .. tab::
      :tabid: compass

      .. include:: /includes/steps/fts-tutorial-run-geo-query-compass.rst

   .. tab::
      :tabid: csharp

      .. include:: /includes/steps/fts-tutorial-run-geo-query-csharp.rst  

   .. tab::
      :tabid: go

      .. include:: /includes/steps/fts-tutorial-run-geo-query-go.rst

   .. tab::
      :tabid: java-sync

      .. include:: /includes/steps/fts-tutorial-run-geo-query-java.rst

   .. tab::
      :tabid: kotlin-coroutine

      .. include:: /includes/steps/fts-tutorial-run-geo-query-kotlin.rst

   .. tab::
      :tabid: nodejs

      .. include:: /includes/steps/fts-tutorial-run-geo-query-node.rst

   .. tab::
      :tabid: python

      .. include:: /includes/steps/fts-tutorial-run-geo-query-python.rst
