.. _atlas-getting-started:

==================================
Getting Started with MongoDB Atlas
==================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Overview
--------

|service-fullname| provides an easy way to host and manage your data in
the cloud. This tutorial guides you through creating an |service|
cluster and populating that cluster with data.

Create an |service| Account
---------------------------

*Estimated completion time: 5 minutes*

You will need to register an |service| account to log into
|service| and create your cluster.

.. include:: /includes/steps/getting-started-atlas-account.rst

.. admonition:: |mms-full| Users
   :class: note

   If you are an existing |mms-full| user, you can use your |mms|
   credentials to log in to |service|_. You can then create a new
   |service| project from |mms|. 
   
   Once you have created your |service| project, you can move on to the
   next section.

Deploy a Free Tier Cluster
--------------------------

*Estimated completion time: 10 minutes*

|service| Free Tier clusters provide a small-scale development
environment to host your data. Free Tier clusters never expire, and
provide access to a :ref:`subset <atlas-free-tier>` of Atlas features
and functionality.

Paid clusters provide full access to |service| features, configuration
options, and operational capabilities. For more information on Paid
clusters, including deployment instructions, see
:doc:`/create-new-cluster`.

.. note::

   You can deploy only one Free Tier cluster per |service|
   project.

.. include:: /includes/steps/getting-started-create-cluster.rst

.. _gswa-whitelist:

Whitelist Your Connection IP Address
------------------------------------

*Estimated completion time: 2 minutes*

An :abbr:`IP address (Internet Protocal address)` is a unique numeric
identifier for a device connecting to a network. Within |service|, you
can create a list of trusted IP addresses that can connect to your
cluster and access your data. |service| only allows connections to a
cluster from addresses listed in the IP whitelist.

To add your IP address to the whitelist:

.. include:: /includes/steps/getting-started-whitelist.rst

.. seealso::

   For information on configuring additional whitelist entries in
   your project, see :doc:`/security-whitelist/`.

.. _gswa-user:

Create a MongoDB User for Your Cluster
--------------------------------------

*Estimated completion time: 2 minutes*

You must create a MongoDB user to access your deployment. For security
purposes, |service| requires clients to authenticate as MongoDB users
to access clusters.

MongoDB users are separate from |service| users:

- MongoDB users can access databases hosted in |service|.

- |service| users can log into |service| but do not have access to
  MongoDB databases.

To add a MongoDB user to your cluster:

.. include:: /includes/steps/getting-started-add-mongodb-users.rst

.. seealso::

   For information on configuring additional MongoDB users on your
   cluster, see :doc:`/security-add-mongodb-users/`.

Insert Data into Your Cluster
-----------------------------

The following steps in this tutorial show you how to insert and
interact with data on your cluster. Select the appropriate tab based
on how you would like to interact with your cluster data:

.. tabs::

   tabs:
     - id: atlas-gui
       name: Atlas GUI
       content: |

         *Estimated completion time: 5 minutes*

         |service| provides a :abbr:`GUI (Graphical user interface)`
         to interact with data in your cluster, called the
         :guilabel:`Data Explorer`. You can use the
         :guilabel:`Data Explorer` to import
         :ref:`sample data <sample-data>` provided by |service| into
         your cluster.

         To import sample data into your cluster using the
         :guilabel:`Data Explorer`:
         
         .. include:: /includes/steps/getting-started-explorer-import.rst

         .. seealso::

            For more information on Data Explorer in |service|, see
            :doc:`/data-explorer`.

         View and Edit Your Cluster Data
         -------------------------------

         *Estimated completion time: 2 minutes*

         Now that you have imported some data into your cluster, you
         can try viewing and modifying it.

         .. include:: /includes/steps/getting-started-explorer-edit.rst

         Summary
         -------

         Congratulations! You have just set up an |service| cluster to
         host your data, populated that cluster with sample data, and
         learned how to interact with that data using the |service|
         :guilabel:`Data Explorer`.

         Moving Forward
         ~~~~~~~~~~~~~~

         If you continue to grow your cluster, consider
         :doc:`scaling your cluster </scale-cluster/>` to support more
         users and operations.

     - id: shell
       name: Mongo Shell
       content: |

         Tools Required
         --------------

         To complete this tutorial you must have:

         - A terminal

         - The Mongo shell

         Download and Install the Mongo Shell
         ------------------------------------

         *Estimated completion time: 5 minutes*

         The :manual:`Mongo shell </mongo>` is an interactive
         command line interface to MongoDB. You can use the Mongo shell
         to insert and interact with data on your |service| cluster.

         |service| provides an easy way to download and install the
         Mongo shell. To download and install the Mongo shell:

         .. include:: /includes/steps/getting-started-shell-install.rst

         Connect to Your Cluster Using the Mongo Shell
         ---------------------------------------------

         *Estimated completion time: 3 minutes* 

         Now that you have installed the Mongo shell, you can use the
         shell to connect to your |service| cluster.

         .. include:: /includes/steps/getting-started-shell-connect.rst

         Insert Data Into Your Cluster Using the Mongo Shell
         ---------------------------------------------------

         *Estimated completion time: 1 minute* 

         Now that you have successfully connected to your |service|
         cluster using the Mongo shell, let's insert a document into
         your cluster.

         .. include:: /includes/steps/getting-started-shell-insert.rst

         View Data Using the Mongo Shell
         -------------------------------

         *Estimated completion time: 1 minute* 

         Now we can try reading the data we just inserted into our
         cluster.

         The following command searches our ``people`` collection for
         documents which have a ``name.last`` value of ``Turing``:

         .. code-block:: none

            db.people.find({ "name.last": "Turing" })

         When you run this command, you should see the following
         output:

         .. code-block:: none
            :copyable: false

            {
              "_id" : ObjectId("5c9bca3c5345268c98ac7abc"),
              "name" : {
                "first" : "Alan",
                "last" : "Turing"
              },
              "birth" : ISODate("1912-06-23T04:00:00Z"),
              "death" : ISODate("1954-06-07T04:00:00Z"),
              "contribs" : [
                "Turing machine",
                "Turing test",
                "Turingery"
              ],
              "views" : NumberLong(1250000)
            }

         .. note::

            You may see a different value for
            :manual:`ObjectId </reference/bson-types/#objectid>`,
            because it is a randomly generated value.

         .. seealso::

            For more information on querying data in MongoDB, see
            :manual:`Query Documents </tutorial/query-documents/>`.

         Summary
         -------
         
         Congratulations! You've just set up an |service| cluster to
         host your data, and used the Mongo shell to write and read
         data to and from your cluster.

         Moving Forward
         ~~~~~~~~~~~~~~

         If you continue to grow your cluster, consider
         :doc:`scaling your cluster </scale-cluster/>` to support more
         users and operations.
