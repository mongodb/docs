.. _ruby-single-field-index:

====================
Single Field Indexes
====================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. facet::
   :name: genre
   :values: reference
 
.. meta::
   :keywords: index, query, optimization, efficiency

Overview
--------

**Single field indexes** are indexes with a reference to a single field of a
document in a collection. These indexes improve single field query and
sort performance. They also support :manual:`TTL Indexes </core/index-ttl>`
that automatically remove documents from a collection after a certain
amount of time or at a specified clock time.

When creating a single field index, you must specify the following
details:

- The field on which to create the index
- The sort order for the indexed values as either ascending or
  descending

.. note::

   The default ``_id_`` index is an example of a single field index.
   This index is automatically created on the ``_id`` field when a new
   collection is created.

Sample Data
~~~~~~~~~~~

The examples in this guide use the ``movies`` collection in the
``sample_mflix`` database from the :atlas:`Atlas sample datasets
</sample-data>`. To access this collection from your {+language+} 
application, create a ``Mongo::Client`` object that connects to
an Atlas cluster and assign the following values to your ``database`` 
and ``collection``
variables: 

.. literalinclude:: /includes/indexes/single-field.rb
   :start-after: start-sample-data
   :end-before: end-sample-data
   :language: ruby
   :copyable:

To learn how to create a free MongoDB Atlas cluster and
load the sample datasets, see the :atlas:`Get Started with Atlas
</getting-started>` guide.

Create a Single Field Index
---------------------------

Use the ``create_one`` method to create a single
field index. The following example creates an index in ascending order on the
``title`` field:

.. literalinclude:: /includes/indexes/single-field.rb
   :start-after: start-index-single
   :end-before: end-index-single
   :language: ruby
   :copyable:

Verify Index Creation
---------------------

You can verify that the index was created by listing the indexes in the 
collection. You should see an index for ``title`` in the list, as shown 
in the following output:

.. io-code-block::
   :copyable: true

   .. input:: /includes/indexes/single-field.rb
      :start-after: start-check-single-index
      :end-before: end-check-single-index
      :language: ruby
      :dedent:
   
   .. output::
      :visible: true

      {"v": 2, "key": {"title": 1}, "name": "title_1"}

Example Query
-------------

The following is an example of a query that is covered by the index
created on the ``title`` field:

.. io-code-block::
   :copyable: true

   .. input:: /includes/indexes/single-field.rb
      :start-after: start-index-single-query
      :end-before: end-index-single-query
      :language: ruby
      :dedent:
   
   .. output::
      :visible: false

      {"_id":...,"plot":"A musical comedy duo...",
      "genres":["Musical"],...,"title":"Sweethearts",...}

Additional Information
----------------------

To view runnable examples that demonstrate how to manage indexes, see
:ref:`ruby-indexes`.

To learn more about single field indexes, see :manual:`Single Field
Indexes </core/index-single>` in the {+mdb-server+} manual.

API Documentation
~~~~~~~~~~~~~~~~~

To learn more about any of the methods discussed in this guide, see the
following API documentation:

- :ruby-api:`indexes <Collection.html#indexes-instance_method>`
- :ruby-api:`create_one <Index/View.html#create_one-instance_method>`
- :ruby-api:`find <Collection.html#find-instance_method>` 
