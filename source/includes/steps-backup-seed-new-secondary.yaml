title: Suspend Automation for the replica set.
stepnum: 1
ref: suspend
content: |

  Suspend :term:`automation` using the procedure described in 
  :ref:`Suspend Automation <suspend-automation-for-a-process>`.

  .. important::

     If you do not suspend Automation first, |mms| restarts the
     member after you shut it down.

---
title: Remove the secondary member to be replaced from your replica set.
stepnum: 2
ref: remove-broken-secondary
content: |

  Connect to the primary of your replica set and run the 
  :manual:`rs.remove() </reference/method/rs.remove>` 
  command in the ``mongo`` shell to remove the secondary to be
  replaced from the replica set.

  .. code-block:: javascript

     rs.remove("<secondaryHost>:<secondaryPort>")

---
title: "Start a new standalone instance."
stepnum: 3
ref: bring-up-new-node
pre: |

  a. Connect to the server that hosts the new secondary.

  b. Create the ``data`` directory if it does not exist.

     .. list-table::
        :widths: 20 80
        :header-rows: 1

        * - Platform

          - Command

        * - Linux / Mac OS X

          - .. code-block:: sh
     
               mkdir -m 755 /data
       
        * - Windows

          - .. code-block:: bat
     
               md c:\data

  c. Move the snapshot to the ``data`` directory.

     .. list-table::
        :widths: 20 80
        :header-rows: 1

        * - Platform

          - Command

        * - Linux / Mac OS X

          - .. code-block:: sh

               mv <snapshot>.tar.gz /data
       
        * - Windows

          - .. code-block:: bat
     
               move <snapshot>.tar.gz c:\data

  d. Extract the snapshot.

     .. list-table::
        :widths: 20 80
        :header-rows: 1

        * - Platform

          - Command

        * - Linux / Mac OS X

          - .. code-block:: sh

               tar zxvf <snapshot>.tar.gz
       
        * - Windows

          - Install a package to extract the ``tar`` file then extract
            the file.

  e. Start a temporary :term:`standalone` as the ``mongod`` user.

     ``<alternatePort>`` is a different port than the usual port on
     which your secondary runs.

     .. list-table::
        :widths: 20 80
        :header-rows: 1

        * - Platform

          - Command

        * - Linux / Mac OS X

          - .. code-block:: sh

               sudo -u mongod mongod --port <alternatePort> 
               --dbpath /data/<snapshot>
       
        * - Windows

          - .. code-block:: bat
     
               mongod.exe --port <alternatePort> --dbpath c:\data\<snapshot>

---
title: "Run the ``seedSecondary`` script to re-create oplog collection and seed it with the correct timestamp."
stepnum: 4
source: 
  file: steps-restore-primary.yaml
  ref: seed
pre: | 

---
title: "Shut down the new secondary running as a standalone on the alternate port."
stepnum: 5
ref: shut-down-new-secondary
content: |

  a. Connect to the new secondary with the ``mongo`` shell:

     .. list-table::
        :widths: 20 80
        :header-rows: 1

        * - Platform

          - Command

        * - Linux / Mac OS X

          - .. code-block:: sh

               mongo --port <alternatePort>
       
        * - Windows

          - .. code-block:: bat
     
               mongod.exe --port <alternatePort>
         
  b. Connect to the ``admin`` database to shut down the new secondary.
     
     .. code-block:: javascript

        use admin
        db.runCommand({ shutdown: 1 })

---
title: "Start up the new secondary as part of the replica set."
stepnum: 6
ref: start-new-secondary
content: |

   .. list-table::
      :widths: 20 80
      :header-rows: 1

      * - Platform

        - Command

      * - Linux / Mac OS X

        - .. code-block:: sh

             mongod --port <secondaryPort> --dbpath /data  
             --replSet <replicaSetName>
     
      * - Windows

        - .. code-block:: bat
   
             mongod.exe --port <secondaryPort> --dbpath /data  
             --replSet <replicaSetName>

---
title: "Add the new secondary to the replica set on the primary host."
stepnum: 7
ref: add-new-secondary
content: |
  
  a. Connect to the primary using the ``mongo`` shell. 

     .. list-table::
        :widths: 20 80
        :header-rows: 1

        * - Platform

          - Command

        * - Linux / Mac OS X

          - .. code-block:: sh

               mongo --host <primaryHost> --port <primaryPort> 
       
        * - Windows

          - .. code-block:: bat
     
               mongo.exe --host <primaryHost> --port <primaryPort>

  b. Run the :manual:`rs.add() </reference/method/rs.add>` command to
     add the new secondary to the replica set.

     .. code-block:: javascript

        rs.add("<secondaryHost>:<secondaryPort>")

  .. important::
     If you added the new secondary successfully, a message that
     appears to be an error (``code 103``) is returned. 

     .. code-block:: javascript

        demo:PRIMARY> rs.add("<secondaryHost>:<secondaryPort>")
        {
          "ok" : 0,
          "errmsg" : "Found two member configurations with same host field,
          members.1.host == members.3.host == <secondaryHost>:<secondaryPort>",
          "code" : 103
        }

     If you see this message, you can ignore it.

     If you want to verify that the new secondary is functioning, 
     use :manual:`rs.status() </reference/method/rs.status>`.

     .. code-block:: javascript

        rs.status()

---
title: Resume Automation for the replica set.
stepnum: 8
ref: resume
content: |
  Use the procedure to :ref:`Resume Automation <resume-automation-for-a-process>`.
...
