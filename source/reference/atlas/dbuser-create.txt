.. _mcli-atlas-db-user-create:

========================
mcli atlas dbuser create
========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

The ``dbuser create`` command creates a MongoDB database user 
to access the specified |service| cluster. You can also 
create a MongoDB database user through the |service| :atlas:`UI 
<tutorial/create-mongodb-user-for-cluster/>` or 
:atlas:`API <reference/api/database-users-create-a-user/>`.

.. _dbuser-create-syntax:

Syntax
------

.. code-block:: text

   mcli atlas dbuser create     
        --password <password-of-user>
        [ -p|--profile <profile-name> ]
        [ --projectId <project-ID> ]
        --role <name-of-role>
        --username <name-of-user>

.. include:: /includes/fact-command-line-help.rst

.. _dbuser-create-options:

Options
-------

.. list-table::
   :header-rows: 1
   :widths: 20 10 60 10

   * - Option 
     - Type
     - Description
     - Required?

   * - ``--password``
     - string
     - The password for authenticating the user to MongoDB. 
     - yes

   * - ``-p``, ``--profile``
     - string
     - The name of the profile where the public and private 
       keys for the project are saved. If omitted, uses the 
       ``default`` profile. To learn more about creating a 
       profile, see :ref:`configure-mcli`.
     - no

   * - ``--projectId``
     - string
     - The unique identifier of the project that contains the 
       cluster to update. If omitted, uses the project ID in 
       the profile or :ref:`environment variable <mcli-env-var>`.
     - no

   * - ``--role``
     - string or array of strings
     - The comma-separated list of user's roles and the databases 
       or collections on which the roles apply. A role allows the 
       user to perform particular actions on the specified database 
       or collection. To learn more about the list of 
       default roles, see :atlas:`MongoDB Database User Privileges 
       <security-add-mongodb-users/index.html#mongodb-database-user-privileges>`.
     - yes

   * - ``--username``
     - string
     - The username for authenticating the user to MongoDB.
     - yes

.. _dbuser-create-command-output:

Output 
------
The command prints the following fields in JSON format to the terminal 
if the command succeeds. If the command prints an error, see 
:ref:`Troubleshooting <troubleshooting>` for recommended solutions.

.. list-table::
   :header-rows: 1
   :widths: 30 70

   * - Field
     - Description

   * - ``databaseName``
     - The user's :manual:`authentication database 
       </core/security-users/#authentication-database>`. In 
       |service| deployments of MongoDB, the authentication database 
       is always the ``admin`` database.

   * - ``groupId``
     - The unique identifier of the |service| project to which the user 
       belongs. 

       .. note::

          Groups and projects are synonymous terms. Your {GROUP-ID} 
          is the same as your project ID.

   * - ``ldapAuthType``
     - The method by which the specified ``username`` is 
       authenticated. Valid values are:
       
       .. list-table::
          :stub-columns: 1
          :widths: 20 80

          * - ``NONE``
            - |service| authenticates this user through
              :manual:`SCRAM-SHA </core/security-scram>`, not |ldap|.
          * - ``USER``
            - |ldap| server authenticates this user through the user's
              |ldap| user.
          * - ``GROUP``
            - |ldap| server authenticates this user using their
              |ldap| user and authorizes this user using their |ldap|
              group. To learn more about |ldap| security, see
              :atlas:`Set up User Authentication and Authorization with 
              LDAP<security-ldaps>`.
       
       The default value is ``NONE``.

   * - ``roles``
     - The user's roles and the databases or collections on which the 
       roles apply.

   * - ``username``
     - The username for authentication.

.. _dbuser-create-examples:

Examples 
--------

The examples below use the ``mcli atlas dbuser create`` command to 
create a MongoDB database user to access the |service| cluster. When the 
command is run, it prints the :ref:`Output Fields 
<dbuser-create-command-output>` to the terminal.
 
.. _dbuser-create-eg-1:

Example 1 
~~~~~~~~~~

The following command creates a user with the following attributes:

- Username: ``user1`` 
- Password: ``passW0rd`` 
- Role: ``atlasAdmin`` 

The command uses the profile named ``egAtlasProfile`` for accessing 
|service| to create the user.

.. code-block:: sh
   :copyable: false

   ~ mcli atlas dbuser create --username user1 --password passW0rd 
   --role atlasAdmin@admin --projectId 5e2211c17a3e5a48f5497de3 --profile 
   egAtlasProfile   

The previous command prints the following fields
to the terminal. To learn more about these fields, see 
:ref:`Output <dbuser-create-command-output>`.

.. code-block:: json
   :copyable: false

   {
	    "roles": [{
			   "roleName": "atlasAdmin",
			   "databaseName": "admin"
	  	}],
	    "groupId": "5e2211c17a3e5a48f5497de3",
	    "username": "user1",
	    "databaseName": "admin",
	    "ldapAuthType": "NONE"
    }

.. _dbuser-create-eg-2:

Example 2
~~~~~~~~~

The following commands show two ways to create a user with 
``readWriteAnyDatabase`` and ``clusterMonitor`` privileges. The 
command uses the ``default`` profile to access the specified 
project. 

The followibg command shows the ``--role`` option with 
two privileges separated by a comma. 

.. code-block:: sh
   :copyable: false

   mcli atlas dbuser create --username egUser --password passW0rd --role readWriteAnyDatabase@admin,clusterMonitor@admin --projectId 5e2211c17a3e5a48f5497de3

The following command specifies the ``--role`` option twice, 
once for each privilege.

.. code-block:: sh
   :copyable: false

   mcli atlas dbuser create --username egUser --password passW0rd --role readWriteAnyDatabase@admin --role clusterMonitor@admin --projectId 5e2211c17a3e5a48f5497de3

The commands print the following fields to the terminal. 
To learn more about these fields, see :ref:`Output 
<dbuser-create-command-output>`. 

.. code-block:: json
   :copyable: false

   {
	     "roles": [{
			     "roleName": "readWriteAnyDatabase",
			     "databaseName": "admin"
		    },
		    {
		     	 "roleName": "clusterMonitor",
			     "databaseName": "admin"
		    }],
	      "groupId": "5e2211c17a3e5a48f5497de3",
	      "username": "egUser",
	      "databaseName": "admin",
	      "ldapAuthType": "NONE"
    }
