title: "Start the migration process."
ref: live-import-begin-migration
level: 4
content: |


  a. Start the migration process one of the following ways:

     - In the left-side panel of your organization's page, click
       :guilabel:`Live Migration` and choose
       :guilabel:`Select Cluster for General Live Migration`, or

     - Navigate to the destination |service| {+cluster+} and click the ellipsis
       :guilabel:`...` button. On the {+cluster+} list, the ellipsis
       :guilabel:`...` button appears beneath the {+cluster+} name. When
       you view {+cluster+} details, the ellipsis :guilabel:`...` appears
       on the right-hand side of the screen, next to the :guilabel:`Connect`
       and :guilabel:`Configuration` buttons.

  #. Click :guilabel:`Migrate Data to this Cluster`.

  #. |service| displays a walk-through screen with instructions on
     how to proceed with the live migration. The process
     syncs the data from your source cluster to the new destination
     cluster. After you complete the walk-through, you can point your
     application to the new cluster.

     Collect the following details for your source cluster to
     facilitate the migration:

     - The hostname and port of the source cluster's
       :manual:`primary member </core/replica-set-primary/>`

     - The username and password used to connect to the source
       cluster

     - If the source {+cluster+} uses ``TLS/SSL`` and is not using a
       public Certificate Authority (CA), you will need the
       source {+cluster+} :abbr:`CA (Certificate Authority)` file.

     Prepare the information as stated in the walk-through screen,
     then click :guilabel:`I'm Ready To Migrate`.

  #. |service| displays a walk-through screen that collects information
     required to connect to the source cluster.

     - |service| displays the IP address of the MongoDB live migration
       server responsible for your live migration at the top of the
       walk-through screen. Configure your source {+cluster+} firewall
       to grant access to the displayed IP address.

     - Enter the hostname and port of the primary member of the source {+cluster+} 
       into the provided text box. For example, enter
       ``mongoPrimary.example.net:27017``.

     - If the source {+cluster+}  enforces authentication, enter a username and
       password into the provided text boxes.

       See :ref:`live-import-security` for guidance on the
       user permissions required by |service| live migration.

     - If the source replica set uses ``TLS/SSL`` and is not using a public
       Certificate Authority (CA), toggle the switch
       :guilabel:`Is encryption in transit enabled?` and copy the contents
       of the source {+cluster+} CA file into the provided text box.

     - If you wish to drop all collections on the destination replica set
       before beginning the migration process, toggle the switch
       marked :guilabel:`Clear any existing data on your destination
       cluster?` to :guilabel:`Yes`.

  #. Click :guilabel:`Validate` to confirm that |service| can connect to the
     source replica set.

     If validation fails, check that:

     - You have :ref:`added <live-import-ip-access-list>` |service|
       to the IP access list on your source replica set.

     - The provided user credentials, if any, exist on the source {+cluster+}
       and have the required permissions.

     - The :guilabel:`Is encryption in transit enabled?` toggle is enabled
       only if the source {+cluster+} requires it.

     - The CA file provided, if any, is valid and correct.

  #. Click :guilabel:`Start Migration` to start the migration process.

     Once the migration process begins, |service| UI displays the
     :guilabel:`Migrating Data` walk-through screen for
     the destination |service| {+cluster+}.

     The walk-through screen updates as the destination {+cluster+} proceeds
     through the migration process. The migration process includes:

     - Copying collections from the source to the destination {+cluster+}.
     - Creating indexes on the destination {+cluster+}.
     - Tailing of oplog entries from the source {+cluster+}.

     A lag time value displays during the final oplog tailing phase
     that represents the current lag between the source and destination {+clusters+}.
     This lag time may fluctuate depending on the rate of oplog generation
     on the source {+cluster+}, but should decrease over time as the live
     migration process copies the oplog entries to the destination {+cluster+}.

     When the lag timer and the :guilabel:`Prepare to Cutover` button turn
     green, proceed to the next step.

---
title: "Perform the cutover."
ref: live-import-prepare-cutover
level: 4
content: |

   When |service| detects that the source and destination {+clusters+} are
   nearly in sync, it starts an extendable 120 hour (5 day) timer to begin
   the cutover stage of the live migration procedure. If the 120 hour
   period passes, |service| stops synchronizing with the source {+cluster+}.
   You can extend the time remaining by 24 hours by clicking
   :guilabel:`Extend time` below the :guilabel:`<time> left to cut over`
   timer.

   a. Once you are prepared to cut your applications over to the destination
      |service| {+cluster+}, click :guilabel:`Prepare to Cutover`.
      
   b. |service| displays a walk-through screen with instructions on how to
      proceed with the cutover. These steps are also outlined below:
   
      1. Stop your application. This ensures that no more  writes occur on
         the source {+cluster+}.
      
      2. Wait for the optime gap to reach zero. When the counter reaches
         zero, the source and destination {+clusters+} are in sync.

      3. Restart your application using the new connection string
         provided in step 3 of the live migration cutover UI.

   #. Once you have completed the cutover stage of the procedure and
      confirm that your application is working with the |service| {+cluster+},
      click :guilabel:`Cut Over` to complete the migration procedure.
      This allows |service| to:

      - Remove the MongoDB Application Server subnets from the destination
        {+cluster+} IP access list.
      - Remove the database user that live migration used to import data
        to the destination {+cluster+}.
      - Mark the migration process as complete.

...
