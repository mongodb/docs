==========================
Detect Invalid Data Files
==========================

.. default-domain:: mongodb

.. contents::
   :backlinks: none
   :local:

Overview
--------

Any deployment may suffer hardware failure, power failure, networking
failure, or some other interruption that may damage data files. MongoDB
provides a range of features, including :term:`replica sets <replica
set>` and :term:`journaling`, to make recovery from those events
quick and complete.

If you are *not* running a replica set, it may not be possible to
recover all the data stored in damaged data files. But even in this
case it is possible to remove the damaged portions of your data files,
and make them able to support application queries.

If you are *not* running a replica set, and suspect that some of your
data files might be invalid, use the procedures described here and
in :doc:`/tutorial/recover-data` to help recover some of your data.

The best way to avoid data loss and ensure the most
robust deployments is to follow the recommendations in
:doc:`maintain-valid-data-files`.

See also
:doc:`/core/backups` and
:doc:`/administration/backup` for more information on preventing data loss. Also see
:doc:`/core/replication`,
:doc:`/core/journaling`, and
:doc:`/tutorial/manage-journaling`.

Considerations
--------------

Data recovery on a single unjournaled :program:`mongod` instance
is more difficult than data recovery on a journaled replica set,
and may recover less data.

Procedure
---------

Select the procedure that matches the :program:`mongod` configuration
that used the data files you want to recover:

With no Journal Enabled
~~~~~~~~~~~~~~~~~~~~~~~

When a :program:`mongod` instance does not run with journaling enabled
and shuts down uncleanly, you must assume the data files are in an
invalid state.

To confirm that a :program:`mongod` instance shut down uncleanly, look for the
following indicators:

- a ``mongod.lock`` non-zero-length file in the data directory.

- the following line in the :program:`mongod` log output:

  .. code-block:: none

     Unclean shutdown detected.

With a Journal Enabled
~~~~~~~~~~~~~~~~~~~~~~

When a :program:`mongod` instance runs with journaling enabled
and shuts down uncleanly, or if you suspect invalid data
files, test the integrity of any single collection with the
:method:`db.collection.validate()` method.

Test the integrity of the ``people`` collection using the following
command from the :program:`mongo` shell:

.. code-block:: javascript

   db.test.validate(true)

A portion of the output shows that the ``test`` collection is valid:

.. code-block:: javascript

   {
   ...

     "valid" : true,
     "errors" : [ ],
     "ok" : 1
   }

If the collection is invalid, the output of
:method:`db.collection.validate()` shows that as well:

.. code-block:: javascript

   {
   ...
      "valid" : false,
      "errors" : [
         "invalid bson object detected (see logs for more info)",
         "exception during validate"
      ],
      "advice" : "ns corrupt, requires repair",
      "ok" : 1
   }

