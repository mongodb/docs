name: :expression:`$abs`
description: Returns the absolute value of a number.
file: /reference/operator/aggregation/abs
---
name: :expression:`$add`
file: /reference/operator/aggregation/add
description: |
  Adds numbers to return the sum, or adds numbers and a date to return
  a new date. If adding numbers and a date, treats the numbers as
  milliseconds. Accepts any number of argument expressions, but at
  most, one expression can resolve to a date.
---
name: :group:`$addToSet`
file: /reference/operator/aggregation/addToSet
description: |
  Returns an array of *unique* expression values for each group. Order of the
  array elements is undefined.

  Available in :pipeline:`$group` stage only.
---
name: :expression:`$allElementsTrue`
file: /reference/operator/aggregation/allElementsTrue
description: |
   Returns ``true`` if *no* element of a set evaluates to ``false``,
   otherwise, returns ``false``. Accepts a single argument expression.
---
name: :expression:`$and`
file: /reference/operator/aggregation/and
description: |
  Returns ``true`` only when *all* its expressions evaluate to
  ``true``. Accepts any number of argument expressions.
---
name: :expression:`$anyElementTrue`
file: /reference/operator/aggregation/anyElementTrue
description: |
   Returns ``true`` if *any* elements of a set evaluate to ``true``;
   otherwise, returns ``false``. Accepts a single argument expression.
---
name: :expression:`$arrayElemAt`
file: /reference/operator/aggregation/arrayElemAt
description: |
  Returns the element at the specified array index.
---
name: :expression:`$arrayToObject`
file: /reference/operator/aggregation/arrayToObject
description: |
  Converts an array of key value pairs to a document.
---
name: :group:`$avg`
file: /reference/operator/aggregation/avg
description: |
  Returns an average of numerical values. Ignores non-numeric values.

  .. versionchanged:: 3.2
     Available in both :pipeline:`$group` and :pipeline:`$project`
     stages.
---
name: :expression:`$ceil`
description: |
   Returns the smallest integer greater than or equal to the specified number.
file: /reference/operator/aggregation/ceil
---
name: :expression:`$cmp`
file: /reference/operator/aggregation/cmp
description: |
  Returns: ``0`` if the two values are
  equivalent, ``1`` if the first value is greater than the
  second, and ``-1`` if the first value is less than the
  second.
---
name: :expression:`$concat`
file: /reference/operator/aggregation/concat
description: |
  Concatenates any number of strings.
---
name: :expression:`$concatArrays`
file: /reference/operator/aggregation/concatArrays
description: |
  Concatenates arrays to return the concatenated array.
---
name: :expression:`$cond`
file: /reference/operator/aggregation/cond
description: |
  A ternary operator that evaluates one expression, and depending on
  the result, returns the value of one of the other two expressions.
  Accepts either three expressions in an ordered list or three named
  parameters.
---
name: :expression:`$convert`
file: /reference/operator/aggregation/convert
description: |
  Converts a value to a specified type.
---
name: :expression:`$dateFromParts`
file: /reference/operator/aggregation/dateFromParts
description: |
  Constructs a BSON Date object given the date's constituent
  parts.
---
name: :expression:`$dateToParts`
file: /reference/operator/aggregation/dateToParts
description: |
  Returns a document containing the constituent parts of a date.
---
name: :expression:`$dateFromString`
file: /reference/operator/aggregation/dateFromString
description: |
  Returns a date/time as a date object.
---
name: :expression:`$dateToString`
file: /reference/operator/aggregation/dateToString
description: |
  Returns the date as a formatted string.
---
name: :expression:`$dayOfMonth`
file: /reference/operator/aggregation/dayOfMonth
description: |
  Returns the day of the month for a date as a number between 1 and 31.
---
name: :expression:`$dayOfWeek`
file: /reference/operator/aggregation/dayOfWeek
description: |
  Returns the day of the week for a date as a number between 1 (Sunday)
  and 7 (Saturday).
---
name: :expression:`$dayOfYear`
file: /reference/operator/aggregation/dayOfYear
description: |
  Returns the day of the year for a date as a number between 1 and 366
  (leap year).
---
name: :expression:`$divide`
file: /reference/operator/aggregation/divide
description: |
  Returns the result of dividing the first number by the second. Accepts
  two argument expressions.
---
name: :expression:`$eq`
file: /reference/operator/aggregation/eq
description: |
  Returns ``true`` if the values are
  equivalent.
---
name: :expression:`$exp`
description: Raises *e* to the specified exponent.
file: /reference/operator/aggregation/exp
---
name: :expression:`$filter`
file: /reference/operator/aggregation/filter
description: |
  Selects a subset of the array to return an array with only the elements
  that match the filter condition.
---
name: :group:`$first`
file: /reference/operator/aggregation/first
description: |
  Returns a value from the first document for each group. Order is
  only defined if the documents are in a defined order.

  Available in :pipeline:`$group` stage only.
---
name: :expression:`$floor`
description: |
   Returns the largest integer less than or equal to the specified number.
file: /reference/operator/aggregation/floor
---
name: :expression:`$gt`
file: /reference/operator/aggregation/gt
description: |
  Returns ``true`` if the first value is
  greater than the second.
---
name: :expression:`$gte`
file: /reference/operator/aggregation/gte
description: |
  Returns ``true`` if the first value is
  greater than or equal to the second.
---
name: :expression:`$hour`
file: /reference/operator/aggregation/hour
description: |
  Returns the hour for a date as a number between 0 and 23.
---
name: :expression:`$ifNull`
file: /reference/operator/aggregation/ifNull
description: |
  Returns either the non-null result of the first expression or the
  result of the second expression if the first expression results in a
  null result. Null result encompasses instances of undefined values or
  missing fields. Accepts two expressions as arguments. The result of
  the second expression can be null.
---
name: :expression:`$in`
file: /reference/operator/aggregation/in
description: |
    Returns a boolean indicating whether a specified value is in an array.
---
name: :expression:`$indexOfArray`
file: /reference/operator/aggregation/indexOfArray
description: |
   Searches an array for an occurence of a specified value and returns
   the array index of the first occurence. If the substring is not found,
   returns ``-1``.
---
name: :expression:`$indexOfBytes`
file: /reference/operator/aggregation/indexOfBytes
description: |
  Searches a string for an occurence of a substring and returns the
  UTF-8 byte index of the first occurence. If the substring is not
  found, returns ``-1``.
---
name: :expression:`$indexOfCP`
file: /reference/operator/aggregation/indexOfCP
description: |
   Searches a string for an occurence of a substring and returns the
   UTF-8 code point index of the first occurence. If the
   substring is not found, returns ``-1``.
---
name: :expression:`$isArray`
file: /reference/operator/aggregation/isArray
description: |
  Determines if the operand is an array. Returns a boolean.
---
name: :expression:`$isoDayOfWeek`
file: /reference/operator/aggregation/isoDayOfWeek
description: |
  Returns the weekday number in ISO 8601 format, ranging from
  ``1`` (for Monday) to ``7`` (for Sunday).
---
name: :expression:`$isoWeek`
file: /reference/operator/aggregation/isoWeek
description: |
  Returns the week number in ISO 8601 format, ranging
  from ``1`` to ``53``. Week
  numbers start at ``1`` with the week (Monday through Sunday)
  that contains the year's first Thursday.
---
name: :expression:`$isoWeekYear`
file: /reference/operator/aggregation/isoWeekYear
description: |
  Returns the year number in ISO 8601 format. The year starts
  with the Monday of week 1 (ISO 8601) and ends with the Sunday of the
  last week (ISO 8601).
---
name: :group:`$last`
file: /reference/operator/aggregation/last
description: |
  Returns a value from the last document for each group. Order is
  only defined if the documents are in a defined order.

  Available in :pipeline:`$group` stage only.
---
name: :expression:`$let`
file: /reference/operator/aggregation/let
description: |
   Defines variables for use within the scope of a subexpression and
   returns the result of the subexpression. Accepts named parameters.

   Accepts any number of argument expressions.
---
name: :expression:`$literal`
file: /reference/operator/aggregation/literal
description: |
  Return a value without parsing. Use for values that the aggregation
  pipeline may interpret as an expression. For example, use a
  :expression:`$literal` expression to a string that starts with a
  ``$`` to avoid parsing as a field path.
---
name: :expression:`$ln`
description: Calculates the natural log of a number.
file: /reference/operator/aggregation/ln
---
name: :expression:`$log`
description: Calculates the log of a number in the specified base.
file: /reference/operator/aggregation/log
---
name: :expression:`$log10`
description: Calculates the log base 10 of a number.
file: /reference/operator/aggregation/log10
---
name: :expression:`$lt`
file: /reference/operator/aggregation/lt
description: |
  Returns ``true`` if the first value is less
  than the second.
---
name: :expression:`$lte`
file: /reference/operator/aggregation/lte
description: |
  Returns ``true`` if the first value is less
  than or equal to the second.
---
name: :expression:`$map`
file: /reference/operator/aggregation/map
description: |
    Applies a subexpression to each element of an array and returns the
    array of resulting values in order. Accepts named parameters.
---
name: :group:`$max`
file: /reference/operator/aggregation/max
description: |
  Returns the highest expression value for each group.

  .. versionchanged:: 3.2
     Available in both :pipeline:`$group` and :pipeline:`$project`
     stages.
---
name: :expression:`$mergeObjects`
file: /reference/operator/aggregation/mergeObjects
description: |
   Combines multiple documents into a single document.
---
name: :expression:`$meta`
file: /reference/operator/aggregation/meta
description: |
  Access text search metadata.
---
name: :group:`$min`
file: /reference/operator/aggregation/min
description: |
  Returns the lowest expression value for each group.

  .. versionchanged:: 3.2
     Available in both :pipeline:`$group` and :pipeline:`$project`
     stages.
---
name: :expression:`$millisecond`
file: /reference/operator/aggregation/millisecond
description: |
  Returns the milliseconds of a date as a number between 0
  and 999.
---
name: :expression:`$minute`
file: /reference/operator/aggregation/minute
description: |
  Returns the minute for a date as a number between 0 and 59.
---
name: :expression:`$mod`
file: /reference/operator/aggregation/mod
description: |
  Returns the remainder of the first number divided by the second.
  Accepts two argument expressions.
---
name: :expression:`$month`
file: /reference/operator/aggregation/month
description: |
  Returns the month for a date as a number between 1
  (January) and 12 (December).
---
name: :expression:`$multiply`
file: /reference/operator/aggregation/multiply
description: |
  Multiplies numbers to return the product. Accepts any number of
  argument expressions.
---
name: :expression:`$ne`
file: /reference/operator/aggregation/ne
description: |
  Returns ``true`` if the values are *not*
  equivalent.
---
name: :expression:`$not`
file: /reference/operator/aggregation/not
description: |
  Returns the boolean value that is the opposite of its argument
  expression. Accepts a single argument expression.
---
name: :expression:`$objectToArray`
file: /reference/operator/aggregation/objectToArray
description: |
   Converts a document to an array of documents representing key-value pairs.
---
name: :expression:`$or`
file: /reference/operator/aggregation/or
description: |
  Returns ``true`` when *any* of its expressions evaluates to ``true``.
  Accepts any number of argument expressions.
---
name: :expression:`$pow`
description: Raises a number to the specified exponent.
file: /reference/operator/aggregation/pow
---
name: :group:`$push`
file: /reference/operator/aggregation/push
description: |
  Returns an array of expression values for each group.

  Available in :pipeline:`$group` stage only.
---
name: :expression:`$range`
description: |
   Outputs an array containing a sequence of integers according to
   user-defined inputs.
file: /reference/operator/aggregation/range
---
name: :expression:`$reduce`
file: /reference/operator/aggregation/reduce
description: |
    Applies an expression to each element in an array and combines them
    into a single value.
---
name: :expression:`$reverseArray`
file: /reference/operator/aggregation/reverseArray
description: |
  Returns an array with the elements in reverse order.
---
name: :expression:`$second`
file: /reference/operator/aggregation/second
description: |
  Returns the seconds for a date as a number between 0 and 60
  (leap seconds).
---
name: :expression:`$setDifference`
file: /reference/operator/aggregation/setDifference
description: |
   Returns a set with elements that appear in the first set but not in
   the second set; i.e. performs a
   `relative complement <http://en.wikipedia.org/wiki/Complement_(set_theory)>`_
   of the second set relative to the first. Accepts exactly two
   argument expressions.
---
name: :expression:`$setEquals`
file: /reference/operator/aggregation/setEquals
description: |
   Returns ``true`` if the input sets have the same distinct elements.
   Accepts two or more argument expressions.
---
name: :expression:`$setIntersection`
file: /reference/operator/aggregation/setIntersection
description: |
   Returns a set with elements that appear in *all* of the input sets.
   Accepts any number of argument expressions.
---
name: :expression:`$setIsSubset`
file: /reference/operator/aggregation/setIsSubset
description: |
   Returns ``true`` if all elements of the first set appear in the
   second set, including when the first set equals the second set; i.e.
   not a `strict subset <http://en.wikipedia.org/wiki/Subset>`_.
   Accepts exactly two argument expressions.
---
name: :expression:`$setUnion`
file: /reference/operator/aggregation/setUnion
description: |
   Returns a set with elements that appear in *any* of the input sets.
---
name: :expression:`$size`
file: /reference/operator/aggregation/size
description: |
  Returns the number of elements in the array. Accepts a single
  expression as argument.
---
name: :expression:`$slice`
description: |
  Returns a subset of an array.
file: /reference/operator/aggregation/slice
---
name: :expression:`$split`
file: /reference/operator/aggregation/split
description: |
  Splits a string into substrings based on a delimiter. Returns an
  array of substrings. If the delimiter is not found within the string,
  returns an array containing the original string.
---
name: :expression:`$sqrt`
description: |
   Calculates the square root.
file: /reference/operator/aggregation/sqrt
---
name: :group:`$stdDevPop`
file: /reference/operator/aggregation/stdDevPop
description: |
  Returns the population standard deviation of the input values.

  .. versionchanged:: 3.2
     Available in both :pipeline:`$group` and :pipeline:`$project`
     stages.
---
name: :group:`$stdDevSamp`
file: /reference/operator/aggregation/stdDevSamp
description: |
  Returns the sample standard deviation of the input values.

  .. versionchanged:: 3.2
     Available in both :pipeline:`$group` and :pipeline:`$project`
     stages.
---
name: :expression:`$strcasecmp`
file: /reference/operator/aggregation/strcasecmp
description: |
  Performs case-insensitive string comparison and returns: ``0`` if two
  strings are equivalent, ``1`` if the first string is greater than the
  second, and ``-1`` if the first string is less than the second.
---
name: :expression:`$strLenBytes`
file: /reference/operator/aggregation/strLenBytes
description: |
  Returns the number of UTF-8 encoded bytes in a string.
---
name: :expression:`$strLenCP`
file: /reference/operator/aggregation/strLenCP
description: |
  Returns the number of UTF-8 `code points
  <http://www.unicode.org/glossary/#code_point>`_ in a string.
---
name: :expression:`$substr`
file: /reference/operator/aggregation/substr
description: |
  Deprecated. Use :expression:`$substrBytes` or :expression:`$substrCP`.
---
name: :expression:`$substrBytes`
file: /reference/operator/aggregation/substrBytes
description: |
  Returns the substring of a string. Starts with the
  character at the specified UTF-8 byte index (zero-based) in the string
  and continues for the specified number of bytes.
---
name: :expression:`$substrCP`
file: /reference/operator/aggregation/substrCP
description: |
  Returns the substring of a string. Starts with the
  character at the specified UTF-8 `code point (CP) 
  <http://www.unicode.org/glossary/#code_point>`_ index (zero-based)
  in the string and continues for the number of code points specified.
---
name: :expression:`$subtract`
file: /reference/operator/aggregation/subtract
description: |
  Returns the result of subtracting the second value from the first. If
  the two values are numbers, return the difference. If the two values
  are dates, return the difference in milliseconds. If the two values
  are a date and a number in milliseconds, return the resulting date.
  Accepts two argument expressions. If the two values are a date and a
  number, specify the date argument first as it is not meaningful to
  subtract a date from a number.
---
name: :group:`$sum`
file: /reference/operator/aggregation/sum
description: |
  Returns a sum of numerical values. Ignores non-numeric values.

  .. versionchanged:: 3.2
     Available in both :pipeline:`$group` and :pipeline:`$project`
     stages.
---
name: :expression:`$switch`
file: /reference/operator/aggregation/switch
description: |
   Evaluates a series of case expressions. When it finds an expression
   which evaluates to ``true``, ``$switch`` executes a specified
   expression and breaks out of the control flow.

---
name: :expression:`$toBool`
file: /reference/operator/aggregation/toBool
description: |
  Converts value to a boolean.
---
name: :expression:`$toDate`
file: /reference/operator/aggregation/toDate
description: |
  Converts value to a Date.
---
name: :expression:`$toDecimal`
file: /reference/operator/aggregation/toDecimal
description: |
  Converts value to a Decimal128.
---
name: :expression:`$toDouble`
file: /reference/operator/aggregation/toDouble
description: |
  Converts value to a double.
---
name: :expression:`$toInt`
file: /reference/operator/aggregation/toInt
description: |
  Converts value to an integer.
---
name: :expression:`$toLong`
file: /reference/operator/aggregation/toLong
description: |
  Converts value to a long.
---
name: :expression:`$toObjectId`
file: /reference/operator/aggregation/toObjectId
description: |
  Converts value to an ObjectId.
---
name: :expression:`$toString`
file: /reference/operator/aggregation/toString
description: |
  Converts value to a string.
---
name: :expression:`$toLower`
file: /reference/operator/aggregation/toLower
description: |
  Converts a string to lowercase. Accepts a single argument expression.
---
name: :expression:`$toUpper`
file: /reference/operator/aggregation/toUpper
description: |
  Converts a string to uppercase. Accepts a single argument expression.
---
name: :expression:`$trunc`
description: Truncates a number to its integer.
file: /reference/operator/aggregation/trunc
---
name: :expression:`$type`
file: /reference/operator/aggregation/type
description: |
  Return the BSON data type of the field.
---
name: :expression:`$week`
file: /reference/operator/aggregation/week
description: |
  Returns the week number for a date as a number between 0 (the partial
  week that precedes the first Sunday of the year) and 53 (leap year).
---
name: :expression:`$year`
file: /reference/operator/aggregation/year
description: |
  Returns the year for a date as a number (e.g. 2014).
---
name: :expression:`$zip`
description: |
  Merge two arrays together.
file: /reference/operator/aggregation/zip
...


