# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/create-an-auto-incrementing-field.txt:3
# 5ab826108ad744c289ca81b5edf4b711
msgid "Create an Auto-Incrementing Sequence Field"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:8
# 83c626c6b84848c3940e88467d465057
msgid "Synopsis"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:10
# 62db34db32254d959d748a40c8967ad6
msgid "MongoDB reserves the ``_id`` field in the top level of all documents as a primary key. ``_id`` must be unique, and always has an index with a :ref:`unique constraint <index-type-unique>`. However, except for the unique constraint you can use any value for the ``_id`` field in your collections. This tutorial describes two methods for creating an incrementing sequence number for the ``_id`` field using the following:"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:18
# 229ab950c92c472e9eeca0d3d55267a1
msgid ":ref:`auto-increment-counters-collection`"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:20
# 2b0caddf5a4b4369acd6188034e31f62
msgid ":ref:`auto-increment-optimistic-loop`"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:23
# 661e191d12854962a5da6835b54b42d3
msgid "Considerations"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:25
# a396460a04984e229ec03cd64610de6b
msgid "Generally in MongoDB, you would not use an auto-increment pattern for the ``_id`` field, or any field, because it does not scale for databases with large numbers of documents. Typically the default value :term:`ObjectId <objectid>` is more ideal for the ``_id``."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:31
# 31848ca337234f6592fef81a4837575e
msgid "Procedures"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:36
# 76666764885e4505b4056f978d13a498
msgid "Use Counters Collection"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:39
# 5df7f302594d4210b21d25e042cca828
msgid "Counter Collection Implementation"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:40
# fd912c82456643009d2380a23ad5515b
msgid "Use a separate ``counters`` collection to track the *last* number sequence used. The ``_id`` field contains the sequence name and the ``seq`` field contains the last value of the sequence."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:44
# c098895786304a5baa5de58886f6716d
msgid "Insert into the ``counters`` collection, the initial value for the ``userid``:"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:55
# 88b3916d245e4b1fa8b7985d8a007a9e
msgid "Create a ``getNextSequence`` function that accepts a ``name`` of the sequence. The function uses the :method:`~db.collection.findAndModify()` method to atomically increment the ``seq`` value and return this new value:"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:74
# 62cfb150bc3047309e83af8b11ab0211
msgid "Use this ``getNextSequence()`` function during :method:`~db.collection.insert()`."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:93
#: ../source/tutorial/create-an-auto-incrementing-field.txt:250
# b45df9a26ae542f58fb6548aa2573ac6
# d7d1233027044c369dd4afec6dfa26ef
msgid "You can verify the results with :method:`~db.collection.find()`:"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:99
#: ../source/tutorial/create-an-auto-incrementing-field.txt:256
# 25728f68612a4e4495a441c6f56d3bee
# 0be7daf0b1c64464a571ab0e16d7790b
msgid "The ``_id`` fields contain incrementing sequence values:"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:113
# ea0cd4b51b4b4ae68a2d175ae43b6c05
msgid "``findAndModify`` Behavior"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:115
# 29b3385ff7674a58afb0c20a5a86a823
msgid "When :method:`~db.collection.findAndModify()` includes the ``upsert: true`` option **and** the query field(s) is not uniquely indexed, the method could insert a document multiple times in certain circumstances. For instance, if multiple clients each invoke the method with the same query condition and these methods complete the find phase before any of methods perform the modify phase, these methods could insert the same document."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:123
# c2fc6a3a79554a66a910010cbf045610
msgid "In the ``counters`` collection example, the query field is the ``_id`` field, which always has a unique index. Consider that the :method:`~db.collection.findAndModify()` includes the ``upsert: true`` option, as in the following modified example:"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:144
# 4d3d4267883141ebad13897035e37f6c
msgid "If multiple clients were to invoke the ``getNextSequence()`` method with the same ``name`` parameter, then the methods would observe one of the following behaviors:"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:148
# 9d1f64662c1e48fbab902d2e8b25aeb7
msgid "Exactly one :method:`~db.collection.findAndModify()` would successfully insert a new document."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:151
# 77dd6dcac2424fb484b9b612582f6b44
msgid "Zero or more :method:`~db.collection.findAndModify()` methods would update the newly inserted document."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:154
# 007b1a6bbe8a4d5ca9a4b332f385de36
msgid "Zero or more :method:`~db.collection.findAndModify()` methods would fail when they attempted to insert a duplicate."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:157
# 927e1541f37b423eb1bbfd9878692e54
msgid "If the method fails due to a unique index constraint violation, retry the method. Absent a delete of the document, the retry should not fail."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:164
# 4af184f37d7d411d97463a65b5cbcff1
msgid "Optimistic Loop"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:166
# e4c906206b674f65afa1115346f76f4d
msgid "In this pattern, an *Optimistic Loop* calculates the incremented ``_id`` value and attempts to insert a document with the calculated ``_id`` value. If the insert is successful, the loop ends. Otherwise, the loop will iterate through possible ``_id`` values until the insert is successful."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:172
# c1ed5bfe92af42b08bc702748ab68ac2
msgid "Create a function named ``insertDocument`` that performs the \"insert if not present\" loop. The function wraps the :method:`~db.collection.insert()` method and takes a ``doc`` and a ``targetCollection`` arguments."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:177
# 404b182adb224b84a9d41d6c6bba4498
msgid "The :method:`db.collection.insert()` method now returns a :ref:`writeresults-insert` object that contains the status of the operation. Previous versions required an extra :method:`db.getLastErrorObj()` method call."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:208
# 02411c5c16394945bece36e1be8cbb21
msgid "The ``while (1)`` loop performs the following actions:"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:210
# 9f3556a4a963443e97fdc66637b850d0
msgid "Queries the ``targetCollection`` for the document with the maximum ``_id`` value."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:213
# b3185f6164e14b769bf2096184d8e437
msgid "Determines the next sequence value for ``_id`` by:"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:215
# 63fe4e44d1064bd5a2fdbf34c94b0a7a
msgid "adding ``1`` to the returned ``_id`` value if the returned cursor points to a document."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:218
# 9c831b99a2af419a8be84ad65814645d
msgid "otherwise: it sets the next sequence value to ``1`` if the returned cursor points to no document."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:221
# 312c34c0bf3d4de29f00a211e3999089
msgid "For the ``doc`` to insert, set its ``_id`` field to the calculated sequence value ``seq``."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:224
# a02d6beca8f14500af487a4b70294ca5
msgid "Insert the ``doc`` into the ``targetCollection``."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:226
# 9ead8344d97444618da42335b92abe3d
msgid "If the insert operation errors with duplicate key, repeat the loop.  Otherwise, if the insert operation encounters some other error or if the operation succeeds, break out of the loop."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:230
# a90da8142bd0421b8c2c22d671c2f73d
msgid "Use the ``insertDocument()`` function to perform an insert:"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:269
# 58d11d79d8d44512bb2560d0844970b7
msgid "The ``while`` loop may iterate many times in collections with larger insert volumes."
msgstr ""

