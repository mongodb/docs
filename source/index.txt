:template: product-landing
:hidefeedback: header
:noprevnext:

================
What is MongoDB?
================

.. introduction::

   MongoDB is a document database designed for ease of application
   development and scaling.

   Run MongoDB with `MongoDB Atlas
   <https://www.mongodb.com/cloud?tck=docs_server>`__ fully managed in
   the cloud.

   .. button:: Get started with MongoDB Atlas
      :uri: https://www.mongodb.com/cloud?tck=docs_server

   .. include:: /includes/rapid-release.rst

.. image:: /images/hero.png
   :alt: Homepage hero image

.. kicker:: What You Can Do

Work with your data in MongoDB
------------------------------

.. tabs::

   .. tab:: Store and query your data
      :tabid: store

      .. procedure::

         .. step:: Model your data

            Design your data schema to support frequent access patterns.
            You can update or enforce your schema at any point.

            :doc:`To learn more, see Data Modeling Introduction </core/data-modeling-introduction>`

         .. step:: Connect to MongoDB

            Import data from CSV or JSON files into your MongoDB
            database.

            `To learn more, see MongoDB Shell (mongosh) <https://docs.mongodb.com/mongodb-shell/>`__

         .. step:: Insert, query, update, or delete documents

            Use the MongoDB Query API to perform CRUD operations on your
            data - with or without transactions.

            :ref:`To learn more, see MongoDB CRUD Operations <crud>`

      .. code-block:: javascript

         ➜ mongosh --port 27017
         Current Mongosh Log ID:  123a4bc5d67891011ef1213g
         Connecting to:    mongodb://127.0.0.1:27017/

         For mongosh info see: https://docs.mongodb.com/mongodb-shell/

         test> db.messages.insertMany([
                  {
                     message: "Hello World!",
                     author: "MongoDB",
                     comments: [],
                     _id: 1
                  }
               ])
         { acknowledged: true, insertedIds: { '0': 1 } }

         test> db.messages.findOne({ _id: 1 })
         { _id: 1, message: 'Hello World!', author: 'MongoDB', comments: [] }

   .. tab:: Transform data with Aggregations
      :tabid: transform

      .. procedure::

         .. step:: Import your data

            Import data from a CSV or JSON file with mongoimport.

            `To learn more, see mongoimport <https://docs.mongodb.com/database-tools/mongoimport/>`__

         .. step:: Aggregate your data

            Use aggregation pipelines to process your data in multiple stages and return the computed results.

            :doc:`To learn more, see Aggregation </aggregation>`

      .. code-block:: javascript

         test> db.orders.insertMany([
            { "item" : "almonds", "price" : 12, "quantity" : 2 },
            { "item" : "pecans", "price" : 20, "quantity" : 1 },
         ])

         test> db.inventory.insertMany([
            { "sku" : "almonds", "description": "product 1", "instock" : 120 },
            { "sku" : "cashews", "description": "product 3", "instock" : 60 },
            { "sku" : "pecans", "description": "product 4", "instock" : 70 }
         ])

         test> db.orders.aggregate([
            { $match: { price: { $lt: 15 } } },
            { $lookup: {
                  from: "inventory",
                  localField: "item",
                  foreignField: "sku",
                  as: "inventory_docs"
            } },
            { $sort: { price: 1 } },
         ])

   .. tab:: Secure access to your data
      :tabid: create

      .. procedure::

         .. step:: Authenticate a client

            Verify the identity of a user, replica set member, or
            sharded cluster member with authentication.

            :ref:`To learn more, see Authentication <authentication>`

         .. step:: Control access to your database

            Enable Role-Based Access Controls to manage user privileges
            on your entire database cluster or individual collections.

            :ref:`To learn more, see Role-Based Access Controls <authorization>`

         .. step:: Encrypt your most sensitive data

            Client-side field level encryption protects data while it is
            in-use by the database. Fields are encrypted before they
            leave your application, protecting them over the network, in
            memory and at rest.

            :doc:`To learn more, see Client-Side Field Level Encryption </core/security-client-side-encryption>`

      .. image:: /images/security.png
         :alt: MongoDB Security

   .. tab:: Deploy and scale your database
      :tabid: deploy

      .. procedure::

         .. step:: Deploy a replica set

            Provide redundancy and resilience for your database by deploying a replica set.

            :ref:`To learn more, see Replication <replication>`

         .. step:: Scale out your database

            Use sharding to horizontally scale your database or to ensure location-based separation of data.

            :ref:`To learn more, see Sharding <sharding-introduction>`

      .. image:: /images/scaling.png
         :alt: MongoDB Deploy and Scale

.. kicker:: Related Products & Resources

Go Further with MongoDB
-----------------------

Explore libraries and tools for MongoDB.

.. card-group::
   :columns: 3
   :style: compact

   .. card::
      :cta: Learn about Drivers
      :url: https://docs.mongodb.com/drivers/
      :icon: /images/icons/drivers.svg
      :icon-alt: MongoDB Atlas icon

      Use MongoDB in your application’s language

   .. card::
      :cta: View Compass Docs
      :url: https://docs.mongodb.com/compass/current/
      :icon: /images/icons/compass.svg
      :icon-alt: MongoDB University icon

      Visually explore your data with MongoDB Compass

   .. card::
      :cta: View Ops Manager
      :url: https://docs.opsmanager.mongodb.com/current/
      :icon: /images/icons/opsmanager.svg
      :icon-alt: MongoDB Server icon

      Manage and monitor your deployments

.. toctree::
   :titlesonly:

   Introduction </introduction>
   Installation </installation>
   MongoDB Shell (mongosh) <https://docs.mongodb.com/mongodb-shell/>
   /crud
   /aggregation
   /data-modeling
   /core/transactions
   /indexes
   /security
   /changeStreams
   /replication
   /sharding
   /administration
   /storage
   /faq
   /reference
   /release-notes
   /support
