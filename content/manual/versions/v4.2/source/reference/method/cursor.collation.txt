.. _method-cursor-collation:

==================
cursor.collation()
==================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. method:: cursor.collation(<collation document>)


   .. include:: /includes/fact-mongo-shell-method.rst


   .. versionadded:: 3.4

   Specifies the :ref:`collation <collation>` for the cursor returned
   by the :method:`db.collection.find()`. To use, append to the
   :method:`db.collection.find()`.

   The :method:`cursor.collation()` accepts the following collation
   document:

   .. include:: /includes/extracts/collation-document.rst


   .. list-table::
      :header-rows: 1
      :widths: 20 20 80
   
      * - Field
   
        - Type
   
        - Description
   
      * - ``locale``
   
        - string
   
        - The ICU locale. See :ref:`collation-languages-locales` for a
          list of supported locales.
          
          To specify simple binary comparison, specify ``locale`` value of
          ``"simple"``.
          
          
   
      * - ``strength``
   
        - integer
   
        - Optional. The level of comparison to perform.
          Corresponds to `ICU Comparison Levels
          <http://userguide.icu-project.org/collation/concepts#TOC-Comparison-Levels>`_.
          Possible values are:
          
          .. list-table::
             :header-rows: 1
             :widths: 10 90
          
             * - Value
               - Description
          
             * - 1
          
               - Primary level of comparison. Collation performs
                 comparisons of the base characters only, ignoring other
                 differences such as diacritics and case.
          
             * - 2
          
               - Secondary level of comparison. Collation performs comparisons
                 up to secondary differences, such as diacritics.
                 That is, collation performs comparisons of base characters
                 (primary differences) and diacritics (secondary differences).
                 Differences between base characters takes precedence over
                 secondary differences.
          
             * - 3
          
               - Tertiary level of comparison. Collation performs comparisons
                 up to tertiary differences, such as case and letter variants.
                 That is, collation performs comparisons of base characters
                 (primary differences), diacritics (secondary differences), and
                 case and variants (tertiary differences). Differences between
                 base characters takes precedence over secondary differences,
                 which takes precedence over tertiary differences.
          
                 This is the default level.
          
             * - 4
          
               - Quaternary Level. Limited for specific use case to
                 consider punctuation when levels 1-3 ignore punctuation
                 or for processing Japanese text.
          
             * - 5
          
               - Identical Level. Limited for specific use case of tie
                 breaker.
          
          See `ICU Collation: Comparison Levels
          <http://userguide.icu-project.org/collation/concepts#TOC-Comparison-Levels>`_
          for details.
          
          
   
      * - ``caseLevel``
   
        - boolean
   
        - Optional. Flag that determines whether to include case comparison at
          ``strength`` level ``1`` or ``2``.
          
          If ``true``, include case comparison; i.e.
          
          - When used with ``strength:1``, collation compares base characters
            and case.
          
          - When used with ``strength:2``, collation compares base characters,
            diacritics (and possible other secondary differences) and case.
          
          If ``false``, do not include case comparison at level ``1`` or
          ``2``. The default is ``false``.
          
          For more information, see `ICU Collation: Case Level
          <http://userguide.icu-project.org/collation/concepts#TOC-CaseLevel>`_.
          
          
   
      * - ``caseFirst``
   
        - string
   
        - Optional. A field that determines sort order of case differences during
          tertiary level comparisons.
          
          Possible values are: 
              
          .. list-table::
             :header-rows: 1
             :widths: 10 90
          
             * - Value
               - Description
             * - "upper"
               - Uppercase sorts before lowercase.
          
             * - "lower"
               - Lowercase sorts before uppercase.
          
             * - "off"
          
               - Default value. Similar to ``"lower"`` with slight
                 differences. See
                 `<http://userguide.icu-project.org/collation/customization>`_
                 for details of differences.
          
          
   
      * - ``numericOrdering``
   
        - boolean
   
        - Optional. Flag that determines whether to compare numeric strings as numbers
          or as strings.
          
          If ``true``, compare as numbers; i.e. ``"10"`` is greater than
          ``"2"``.
          
          If ``false``, compare as strings; i.e. ``"10"`` is less than ``"2"``.
          
          Default is ``false``.
          
          
   
      * - ``alternate``
   
        - string
   
        - Optional. Field that determines whether collation should consider whitespace
          and punctuation as base characters for purposes of comparison.
          
          Possible values are:
          
          .. list-table::
             :header-rows: 1
             :widths: 10 90
          
             * - Value
               - Description
          
             * - ``"non-ignorable"``
          
               - Whitespace and punctuation are considered base characters.
          
             * - ``"shifted"``
          
               - Whitespace and punctuation are not considered base characters
                 and are only distinguished at strength levels greater than 3.
          
          See `ICU Collation: Comparison Levels
          <http://userguide.icu-project.org/collation/concepts#TOC-Comparison-Levels>`_
          for more information.
          
          Default is ``"non-ignorable"``.
          
          
   
      * - ``maxVariable``
   
        - string
   
        - Optional. Field that determines up to which characters are considered
          ignorable when ``alternate: "shifted"``. Has no effect if
          ``alternate: "non-ignorable"``
          
          Possible values are:
          
          .. list-table::
             :header-rows: 1
             :widths: 10 90
          
             * - Value
               - Description
          
             * - ``"punct"``
          
               - Both whitespaces and punctuation are "ignorable", i.e. not
                 considered base characters.
          
             * - ``"space"``
          
               - Whitespace are "ignorable", i.e. not considered base
                 characters.
          
          
   
      * - ``backwards``
   
        - boolean
   
        - Optional. Flag that determines whether strings with diacritics sort from back
          of the string, such as with some French dictionary ordering.
          
          If ``true``, compare from back to front.
          
          If ``false``, compare from front to back.
          
          The default value is ``false``.
          
          
   
      * - ``normalization``
   
        - boolean
   
        - Optional. Flag that determines whether to check if text require normalization
          and to perform normalization. Generally, majority of text does not
          require this normalization processing.
          
          If ``true``, check if fully normalized and perform normalization to
          compare text.
          
          If ``false``, does not check.
          
          The default value is ``false``.
          
          See
          `<http://userguide.icu-project.org/collation/concepts#TOC-Normalization>`_ for details.
          
          
   


Examples
--------

Consider a collection ``foo`` with the following documents:

.. code-block:: javascript

   { "_id" : 1, "x" : "a" }
   { "_id" : 2, "x" : "A" }
   { "_id" : 3, "x" : "รก" }

The following operation specifies a query filter of ``x: "a"``. The
operation also includes a collation option with ``locale: "en_US"``
(US English locale) and ``strength: 1`` (compare base characters
only; i.e. ignore case and diacritics):

.. code-block:: javascript

   db.foo.find( { x: "a" } ).collation( { locale: "en_US", strength: 1 } )

The operation returns the following documents:

.. code-block:: javascript

   { "_id" : 1, "x" : "a" }
   { "_id" : 2, "x" : "A" }
   { "_id" : 3, "x" : "รก" }

If you do not specify the collation, i.e. ``db.collection.find( { x:
"a" } )``, the query would only match the following document:

.. code-block:: javascript

   db.foo.find( { x: "a" } )

You can chain other cursor methods, such as :method:`cursor.sort()`
and :method:`cursor.count()`, to :method:`cursor.collation()`:

.. code-block:: javascript

   db.collection.find({...}).collation({...}).sort({...});
   db.collection.find({...}).collation({...}).count();

.. note::

   .. include:: /includes/extracts/collation-single-per-operation.rst
