# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/index-partial.txt:6
msgid "Partial Indexes"
msgstr ""

#: ../source/core/index-partial.txt:18
msgid "Partial indexes only index the documents in a collection that meet a specified filter expression. By indexing a subset of the documents in a collection, partial indexes have lower storage requirements and reduced performance costs for index creation and maintenance."
msgstr ""

#: ../source/core/index-partial.txt:24
msgid "Create a Partial Index"
msgstr ""

#: ../source/core/index-partial.txt:26
msgid "To create a ``partial`` index, use the :method:`db.collection.createIndex()` method with the ``partialFilterExpression`` option. The ``partialFilterExpression`` option accepts a document that specifies the filter condition using:"
msgstr ""

#: ../source/includes/fact-partial-filter-expression-operators.rst:1
msgid "equality expressions (i.e. ``field: value`` or using the :query:`$eq` operator),"
msgstr ""

#: ../source/includes/fact-partial-filter-expression-operators.rst:4
msgid ":query:`$exists: true <$exists>` expression,"
msgstr ""

#: ../source/includes/fact-partial-filter-expression-operators.rst:6
msgid ":query:`$gt`, :query:`$gte`, :query:`$lt`, :query:`$lte` expressions,"
msgstr ""

#: ../source/includes/fact-partial-filter-expression-operators.rst:8
msgid ":query:`$type` expressions,"
msgstr ""

#: ../source/includes/fact-partial-filter-expression-operators.rst:10
msgid ":query:`$and` operator at the top-level only"
msgstr ""

#: ../source/core/index-partial.txt:33
msgid "For example, the following operation creates a compound index that indexes only the documents with a ``rating`` field greater than 5."
msgstr ""

#: ../source/core/index-partial.txt:43
msgid "You can specify a ``partialFilterExpression`` option for all MongoDB :ref:`index types <index-types>`."
msgstr ""

#: ../source/core/index-partial.txt:47
msgid "Behavior"
msgstr ""

#: ../source/core/index-partial.txt:50
msgid "Query Coverage"
msgstr ""

#: ../source/core/index-partial.txt:52
msgid "MongoDB will not use the partial index for a query or sort operation if using the index results in an incomplete result set."
msgstr ""

#: ../source/core/index-partial.txt:55
msgid "To use the partial index, a query must contain the filter expression (or a modified filter expression that specifies a subset of the filter expression) as part of its query condition."
msgstr ""

#: ../source/core/index-partial.txt:59
msgid "For example, given the following index:"
msgstr ""

#: ../source/core/index-partial.txt:68
msgid "The following query can use the index since the query predicate includes the condition ``rating: { $gte: 8 }`` that matches a subset of documents matched by the index filter expression ``ratings: { $gt: 5 }``:"
msgstr ""

#: ../source/core/index-partial.txt:77
msgid "However, the following query cannot use the partial index on the ``cuisine`` field because using the index results in an incomplete result set. Specifically, the query predicate includes the condition ``rating: { $lt: 8 }`` while the index has the filter ``rating: { $gt: 5 }``. That is, the query ``{ cuisine: \"Italian\", rating: { $lt: 8 } }`` matches more documents (e.g. an Italian restaurant with a rating equal to 1) than are indexed."
msgstr ""

#: ../source/core/index-partial.txt:89
msgid "Similarly, the following query cannot use the partial index because the query predicate does not include the filter expression and using the index would return an incomplete result set."
msgstr ""

#: ../source/core/index-partial.txt:98
msgid "Comparison with the ``sparse`` Index"
msgstr ""

#: ../source/core/index-partial.txt:104
msgid "Partial indexes offer a more expressive mechanism than :doc:`/core/index-sparse` indexes to specify which documents are indexed."
msgstr ""

#: ../source/core/index-partial.txt:108
msgid "Sparse indexes select documents to index *solely* based on the existence of the indexed field, or for compound indexes, the existence of the indexed fields."
msgstr ""

#: ../source/core/index-partial.txt:112
msgid "Partial indexes determine the index entries based on the specified filter. The filter can include fields other than the index keys and can specify conditions other than just an existence check. For example, a partial index can implement the same behavior as a sparse index:"
msgstr ""

#: ../source/core/index-partial.txt:124
msgid "This partial index supports the same queries as a sparse index on the ``name`` field."
msgstr ""

#: ../source/core/index-partial.txt:127
msgid "However, a partial index can also specify filter expressions on fields other than the index key. For example, the following operation creates a partial index, where the index is on the ``name`` field but the filter expression is on the ``email`` field:"
msgstr ""

#: ../source/core/index-partial.txt:139
msgid "For the query optimizer to choose this partial index, the query predicate must include a condition on the ``name`` field as well as a *non-null* match on the ``email`` field."
msgstr ""

#: ../source/core/index-partial.txt:143
msgid "For example, the following query can use the index because it includes both a condition on the ``name`` field and a non-null match on the ``email`` field:"
msgstr ""

#: ../source/core/index-partial.txt:151
msgid "However, the following query cannot use the index because it includes a null match on the ``email`` field, which is not permitted by the filter expression ``{ email: { $exists: true } }``:"
msgstr ""

#: ../source/core/index-partial.txt:161
msgid "Restrictions"
msgstr ""

#: ../source/core/index-partial.txt:163
msgid "In MongoDB, you cannot create multiple versions of an index that differ only in the options. As such, you cannot create multiple partial indexes that differ only by the filter expression."
msgstr ""

#: ../source/core/index-partial.txt:167
msgid "You cannot specify both the ``partialFilterExpression`` option and the ``sparse`` option."
msgstr ""

#: ../source/core/index-partial.txt:170
msgid "MongoDB 3.0 or earlier do not support partial indexes. To use partial indexes, you must use MongoDB version 3.2 or higher. For sharded clusters or replica sets, all nodes must be version 3.2 or higher."
msgstr ""

#: ../source/core/index-partial.txt:174
msgid "``_id`` indexes cannot be partial indexes."
msgstr ""

#: ../source/core/index-partial.txt:176
msgid "Shard key indexes cannot be partial indexes."
msgstr ""

#: ../source/core/index-partial.txt:179
msgid "Examples"
msgstr ""

#: ../source/core/index-partial.txt:182
msgid "Create a Partial Index On A Collection"
msgstr ""

#: ../source/core/index-partial.txt:184
msgid "Consider a collection ``restaurants`` containing documents that resemble the following"
msgstr ""

#: ../source/core/index-partial.txt:210
msgid "You could add a partial index on the ``borough`` and ``cuisine`` fields choosing only to index documents where the ``rating.grade`` field is ``A``:"
msgstr ""

#: ../source/core/index-partial.txt:221
msgid "Then, the following query on the ``restaurants`` collection uses the partial index to return the restaurants in the Bronx with ``rating.grade`` equal to ``A``:"
msgstr ""

#: ../source/core/index-partial.txt:228
msgid "However, the following query cannot use the partial index because the query expression does not include the ``rating.grade`` field:"
msgstr ""

#: ../source/core/index-partial.txt:238
msgid "Partial Index with Unique Constraint"
msgstr ""

#: ../source/core/index-partial.txt:240
msgid "Partial indexes only index the documents in a collection that meet a specified filter expression. If you specify both the ``partialFilterExpression`` and a :ref:`unique constraint <index-type-unique>`, the unique constraint only applies to the documents that meet the filter expression. A partial index with a unique constraint does not prevent the insertion of documents that do not meet the unique constraint if the documents do not meet the filter criteria."
msgstr ""

#: ../source/core/index-partial.txt:249
msgid "For example, a collection ``users`` contains the following documents:"
msgstr ""

#: ../source/core/index-partial.txt:257
msgid "The following operation creates an index that specifies a :ref:`unique constraint <index-type-unique>` on the ``username`` field and a partial filter expression ``age: { $gte: 21 }``."
msgstr ""

#: ../source/core/index-partial.txt:268
msgid "The index prevents the insertion of the following documents since documents already exist with the specified usernames and the ``age`` fields are greater than ``21``:"
msgstr ""

#: ../source/core/index-partial.txt:278
msgid "However, the following documents with duplicate usernames are allowed since the unique constraint only applies to documents with ``age`` greater than or equal to 21."
msgstr ""

