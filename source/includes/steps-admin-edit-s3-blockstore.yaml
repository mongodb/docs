stepnum: 1
source:
  file: steps-source-admin-navigation.yaml
  ref:  admin-backup-snapshot
---
title: "Go to the row for the blockstore you want to edit."
stepnum: 2
level: 4
ref: select-blockstore
---
title: "In the :guilabel:`MongoDB Connection` column, update any values that need to be changed in the following fields:"
stepnum: 3
level: 4
ref: edit-blockstore
content: |

   .. list-table::
      :widths: 30 70
      :header-rows: 1

      * - Field
        - Contents

      * - :guilabel:`Name`

        - Type the name for the S3 blockstore.

      * - :guilabel:`S3 Endpoint`
        - Type the :abbr:`URL (Uniform Resource Locator)` for an :abbr:`AWS
          (Amazon Web Services)` :abbr:`S3 (Simple Storage Service)` or
          :abbr:`S3 (Simple Storage Service)`-compatible bucket.

          .. note::

             MongoDB currently supports endpoints for:

             - :abbr:`AWS (Amazon Web Services)` :abbr:`S3 (Simple Storage Service)` 
               `API <http://docs.aws.amazon.com/AmazonS3/latest/API/Welcome.html>`_,
             - IBM `Cloud Object Storage <https://developer.ibm.com/recipes/tutorials/cloud-object-storage-s3-api-intro/>`_ 
               `API <https://ibm-public-cos.github.io/crs-docs/index.html>`_ and 
             - Dell EMC `Elastic Cloud Storage <https://www.Dell EMC.com/en-us/storage/ecs/index.htm#collapse=>`_ 
               `API <https://www.emc.com/techpubs/ecs/ecs_s3_supported_features-1.htm>`_.

             IBM and Dell EMC support a subset of the full :abbr:`AWS (Amazon
             Web Services)` :abbr:`S3 (Simple Storage Service)` :abbr:`API
             (Application Programming Interface)`.

      * - :guilabel:`Path Style Access`

        - Click if you want your :abbr:`AWS (Amazon Web Services)`
          :abbr:`S3 (Simple Storage Service)` or :abbr:`S3 (Simple
          Storage Service)`-compatible bucket to use a path-style
          :abbr:`URL (Uniform Resource Locator)` endpoint
          (``s3.amazonaws.com/<bucket>``) instead of a 
          virtual-host-style :abbr:`URL (Uniform Resource Locator)` 
          endpoint (``<bucket>.s3.amazonaws.com``).

          To review the :abbr:`S3 (Simple Storage Service)` bucket 
          :abbr:`URL (Uniform Resource Locator)` conventions, see the 
          `AWS S3 documentation <http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html#access-bucket-intro>`_

      * - :guilabel:`AWS Access Key`

        - Type your AWS Access Key ID.
        
      * - :guilabel:`AWS Secret Key`

        - Type your AWS Secret Access Key.

          .. note:: The existing Secret Access Key is not displayed.
        
      * - :guilabel:`<hostname>:<port>`

        - Type in one or more hosts that comprise the S3 blockstore metadata
          database in the ``<hostname:port>`` format.

          .. important::

             If these hosts are changed, the blockstore they host must
             have the same data as the original blockstore. Changing
             the host to a new blockstore results in data loss.

          - If the S3 blockstore metadata database is a Replica Set or
            Sharded Cluster, type a comma-separated list of
            :program:`mongod` instances (for a Replica Set) or
            :program:`mongos` instances (for a Sharded Cluster).

            .. example::

               ``host1.example.com:27017, host2.example.com:27017, host2.example.com:27018``

          - If the S3 blockstore metadata database is a standalone
            MongoDB instance, type the ``hostname:port`` of the
            instance.
        
      * - :guilabel:`MongoDB Auth Username`

        -

          .. list-table::
             :widths: 25 45 30
             :header-rows: 1

             * - Auth Mechanism
               - Action
               - Configure Instructions

             * - Username and Password (``SCRAM-SHA-1``)
               - Type the name of the user authorized to access the S3
                 blockstore metadata database.
               - :manual:`SCRAM-SHA-1 </core/security-
                 scram-sha-1>`

             * - x.509 (``X.509``)
               - Type the `RFC2253
                 <https://www.ietf.org/rfc/rfc2253.txt>`_-formatted
                 subject from the client certificate of the user
                 authorized to access the S3 blockstore metadata
                 database.
               - :manual:`x.509 </tutorial/configure-x509-client-authentication>`

             * - Kerberos (``GSSAPI``)
               - Type the User Principal Name of the user authorized to
                 access the S3 blockstore metadata database.
               - :manual:`Kerberos </core/kerberos>`

             * - LDAP (``PLAIN``)
               - Type the name of the :abbr:`LDAP (Lightweight
                 Directory Access Protocol)` user authorized to access
                 the S3 blockstore metadata database.
               - :manual:`LDAP </core/security-ldap>`

      * - :guilabel:`MongoDB Auth Password`

        - 

          .. list-table::
             :widths: 25 45 30
             :header-rows: 1

             * - Auth Mechanism
               - Action
               - Configure Instructions

             * - Username and Password (SCRAM-SHA-1)
               - Type the password associated with the username that
                 can access the S3 blockstore metadata database.
               - :manual:`SCRAM-SHA-1 </core/security-
                 scram-sha-1>`

             * - x.509 (X.509)
               - Leave it blank.
               - :manual:`x.509 </tutorial/configure-x509-client-authentication>`

             * - Kerberos (``GSSAPI``)
               - Kerberos retrieves the password from its 
                 :doc:`keytab file </tutorial/enable-kerberos-authentication-for-group/>`. 
                 You do not need to type a password into this field.
               - :manual:`Kerberos </core/kerberos>`

             * - LDAP (``PLAIN``)
               - Type the password of the :abbr:`LDAP (Lightweight
                 Directory Access Protocol)` user authorized to access
                 the S3 blockstore metadata database.
               - :manual:`LDAP </core/security-ldap>`
        
          .. note:: The existing :guilabel:`MongoDB Auth Password` is not displayed.

      * - :guilabel:`Encrypted Credentials`

        - Select if the credentials for the database were encrypted using the
          :ref:`credentialstool <encrypt-mongodb-user-credentials>`. 
          The credentials include the Username, Password, AWS Access
          Key ID and AWS Secret Key.
        
      * - :guilabel:`Use TLS/SSL`

        - Select if the blockstore database only accepts connection
          encrypted using :abbr:`TLS (Transport Layer Security)`.

          To enable TLS on the S3 blockstore metadata database, see 
          :manual:`Configure mongod and mongos for TLS/SSL </tutorial/configure-ssl>`.
        
      * - :guilabel:`Connection Options` 

        - Type any additional :manual:`configuration file options 
          </reference/configuration-options>` for the MongoDB instance. 
          This field supports unescaped values only.

          For proper syntax, see :manual:`Connection String URI
          Format </reference/connection-string>` in the MongoDB manual.
        
      * - :guilabel:`Assignment Labels` (Optional)

        - Type a comma-separated list of labels to assign the
          S3 blockstores to specific projects.

      * - :guilabel:`Load Factor` (Optional)

        - Type any positive integer that expresses how much backup work
          you want this snapshot store to perform compared to another
          snapshot store.

          .. important::
             If you have only one snapshot store, skip this setting.

          Backup work includes running backups, restoring snapshots or
          :term:`grooming <groom>` blockstores. The term of backup work
          ratio assigned to a single snapshot store is called its *Load
          Factor*.

          By default, |mms| assigns each snapshot store a
          :guilabel:`Load Factor` of ``1``. This means each snapshot
          store would perform the same amount of backup work.

          As a snapshot store's :guilabel:`Load Factor` increases, it
          performs more backup work compared to another snapshot store.
          If the :guilabel:`Load Factor` of snapshot store ``A`` is set
          to ``2`` and the :guilabel:`Load Factor` of snapshot store
          ``B`` is set to ``1``, ``A`` performs two times the backup
          work of ``B``.

          .. example:: **How to estimate Load Factor**

             Consider a five-shard sharded cluster with the
             following backup storage configuration:
             
             - File system store (``F``) manages the backup work for
               one shard in the cluster. ``F`` is running on a single
               two-core physical server.

             - Blockstore (``B``) manages the backup work for four
               shards in the cluster. ``B`` is running as a four-node
               sharded cluster on four physical servers with two cores
               on each server.

             In this example, ``B`` has four times the capability of
             ``F``. ``B`` should receive the greater part of the ratio
             of backup work: ``4:1``. For every one backup task ``F``
             performs, ``B`` performs ``4``. 

             Set the Load Factors of ``B`` to ``4`` and ``F`` to ``1``.

          Snapshot stores with greater compute or storage performance
          should be given a greater :guilabel:`Load Factor`:

          - A file system store with 16-cores and 128 GB of RAM can
            back up more databases in less time than a file system
            store with only 2 cores and 8 GB of RAM.

          - A blockstore backed by a 10-node sharded cluster can back
            up more databases and groom more databases than a
            blockstore backed by a single replica set.

          :guilabel:`Load Factor` can be set to ``0``. When one 
          snapshot store's :guilabel:`Load Factor` is set to ``0``, it
          performs no backup work at all. If a snapshot store's
          :guilabel:`Load Factor` is changed while backup work is in
          progress, all jobs or tasks running on that snapshot store
          are allowed to finish. All future backup work then is re-
          distributed among the remaining snapshot stores with a
          :guilabel:`Load Factor` of ``1`` or greater and have
          :guilabel:`Assignment Enabled` selected.


      * - :guilabel:`Write Concern`

        - Select your preferred :manual:`Write Concern</core/write-concern/>`:

          .. list-table::
             :widths: 30 70
             :stub-columns: 1
 
             * - Default
               - The write is not acknowledged.
             * - Journaled
               - A :term:`primary` or :term:`standalone` MongoDB instance
                 acknowledged the write and wrote that write to their on-disk
                 :term:`journals <journal>`.

                 .. note:: This is the default for standalone deployments.
                 
             * - Acknowledged
               - A :term:`primary` or :term:`standalone` MongoDB instance
                 acknowledged the write.
             * - Replica Acknowledged
               - Two replica set members acknowledged the write.

                 .. note:: 
                    This is the default for replica sets or sharded clusters.

             * - Majority
               - A majority of the replica set members acknowledged the write.

---
title: "Select the checkbox in the :guilabel:`Assignment Enabled` column."
stepnum: 4
level: 4
ref: assign-s3-blockstores
content: |

  Select if you want to enable this S3 blockstore after creating it. This is
  selected by default so the S3 blockstore can be assigned backup jobs. If you
  clear this checkbox, the S3 blockstore is created but you cannot assign
  backups to this S3 blockstore.

---
title: "Click :guilabel:`Save`."
stepnum: 5
level: 4
ref: save-s3-blockstore-changes
--- 
title: "If you change any connection string values or the Write Concern, restart all the |onprem| instances including those running Backup Daemons."
stepnum: 6 
level: 4
ref: restart-s3-blockstore-after-edits
content: |

   .. warning::

      Modifying the connection string values or the Write Concern for
      an existing blockstore requires all |onprem| components, including
      those only running the Backup Daemon, to be restarted to apply those changes.
      Connection parameters include:

      - :guilabel:`<hostname>:<port>` 
      - :guilabel:`MongoDB Auth Username`
      - :guilabel:`MongoDB Auth Password` 
      - :guilabel:`Encrypted Credentials`
      - :guilabel:`Use TLS/SSL`
      - :guilabel:`Connection Options`
      - :guilabel:`Write Concern`

      If you change to another blockstore host, the data on the existing
      blockstore is not copied automatically to the other blockstore.

   .. seealso::
   
      For more details on the MongoDB connection string URI, see
      :manual:`Connection String URI Format </reference/connection-string>`
      in the MongoDB Manual.

...
