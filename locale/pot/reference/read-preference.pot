# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/read-preference.txt:3
# 17ebc5a7be214031b6408c6497cbd11b
msgid "Read Preference Reference"
msgstr ""

#: ../source/includes/introduction-read-preference.rst:1
# 290b99b1c73d4e588033e3fa563fdf17
msgid "Read preference describes how MongoDB clients route read operations to members of a :term:`replica set`."
msgstr ""

#: ../source/includes/introduction-read-preference.rst:4
# bc85448e56fe427796169f7e7a413609
msgid "By default, an application directs its read operations to the :term:`primary` member in a :term:`replica set`. Reading from the primary guarantees that read operations reflect the latest version of a document. However, by distributing some or all reads to secondary members of the replica set, you can improve read throughput or reduce latency for an application that does not require fully up-to-date data."
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:5
# afabd413de7c439faf45742a285cb0d2
msgid "Read Preference Mode"
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:6
# f23504690d394340bcd972c21ec97d39
msgid "Description"
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:7
# 82952394ffaf42e6b2e8d418c75673f8
msgid ":readmode:`primary`"
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:8
# 59cae1da85214b3b9ebdefbb77c5de51
msgid "Default mode. All operations read from the current replica set :term:`primary`."
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:10
# e58790d17fd2456d912b7576d90f2b71
msgid ":readmode:`primaryPreferred`"
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:11
# 8131f2e6af2b4cd4b8dc0274ef662297
msgid "In most situations, operations read from the :term:`primary` but if it is unavailable, operations read from :term:`secondary` members."
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:14
# 4ac46320c2494982bbaba86cf865c879
msgid ":readmode:`secondary`"
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:15
# a9efbabd51ed4da7a377fdf14a91fc79
msgid "All operations read from the :term:`secondary` members of the replica set."
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:17
# 31da4c71b3374b679ca1b131faeaf30f
msgid ":readmode:`secondaryPreferred`"
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:18
# a44f6befef924f789f32689440669ed5
msgid "In most situations, operations read from :term:`secondary` members but if no :term:`secondary` members are available, operations read from the :term:`primary`."
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:21
# 0b16cf4253234be287f53f8d5174473e
msgid ":readmode:`nearest`"
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:22
# 32246c8a2b004784895fb69a7ee4d106
msgid "Operations read from member of the :term:`replica set` with the least network latency, irrespective of the member's type."
msgstr ""

#: ../source/reference/read-preference.txt:17
# ca67a5d48b0244549612799cc6bdef6b
msgid "Read Preference Modes"
msgstr ""

#: ../source/reference/read-preference.txt:21
# 4cc2ac189f464305a2e1bac764c9a6ca
msgid "All read operations use only the current replica set :term:`primary`. This is the default. If the primary is unavailable, read operations produce an error or throw an exception."
msgstr ""

#: ../source/reference/read-preference.txt:25
# 83955e7e6c7a4791898ca58fa54454af
msgid "The :readmode:`primary` read preference mode is not compatible with read preference modes that use :ref:`tag sets <replica-set-read-preference-tag-sets>`. If you specify a tag set with :readmode:`primary`, the driver will produce an error."
msgstr ""

#: ../source/reference/read-preference.txt:32
# 9a3517b352f84f04b10bb214e3d3769c
msgid "In most situations, operations read from the :term:`primary` member of the set. However, if the primary is unavailable, as is the case during :term:`failover` situations, operations read from secondary members."
msgstr ""

#: ../source/reference/read-preference.txt:37
# ef32085e624f4948bc7c25b3ebc3ca53
msgid "When the read preference includes a :ref:`tag set <replica-set-read-preference-tag-sets>`, the client reads first from the primary, if available, and then from :term:`secondaries <secondary>` that match the specified tags. If no secondaries have matching tags, the read operation produces an error."
msgstr ""

#: ../source/reference/read-preference.txt:43
# e7b47418319a4434a30c6dcb7c4717d4
msgid "Since the application may receive data from a secondary, read operations using the :readmode:`primaryPreferred` mode may return stale data in some situations."
msgstr ""

#: ../source/reference/read-preference.txt:49
# b0b2e251855d4fa998363495a60eacd0
msgid ":program:`mongos` added full support for read preferences."
msgstr ""

#: ../source/reference/read-preference.txt:52
# 9df5c8a5b15b444097b2610165315807
msgid "When connecting to a :program:`mongos` instance older than 2.2, using a client that supports read preference modes, :readmode:`primaryPreferred` will send queries to secondaries."
msgstr ""

#: ../source/reference/read-preference.txt:58
# 561d3b5f96b24b4d83e12906575c8f7a
msgid "Operations read *only* from the :term:`secondary` members of the set. If no secondaries are available, then this read operation produces an error or exception."
msgstr ""

#: ../source/reference/read-preference.txt:62
# d910e197a0af4bb887da59780d7f3a89
msgid "Most sets have at least one secondary, but there are situations where there may be no available secondary. For example, a set with a primary, a secondary, and an :term:`arbiter` may not have any secondaries if a member is in recovering state or unavailable."
msgstr ""

#: ../source/reference/read-preference.txt:67
# e14060717f3145e494c129e991da12f0
msgid "When the read preference includes a :ref:`tag set <replica-set-read-preference-tag-sets>`, the client attempts to find secondary members that match the specified tag set and directs reads to a random secondary from among the :ref:`nearest group <replica-set-read-preference-behavior-nearest>`. If no secondaries have matching tags, the read operation produces an error. [#capacity-planning]_"
msgstr ""

#: ../source/reference/read-preference.txt:75
# 66671926a23a478b968c5de89efbf07d
msgid "Read operations using the :readmode:`secondary` mode may return stale data."
msgstr ""

#: ../source/reference/read-preference.txt:79
# 5a9c8a8d9dc047ae87475de8777aebbc
msgid "In most situations, operations read from :term:`secondary` members, but in situations where the set consists of a single :term:`primary` (and no other members), the read operation will use the set's primary."
msgstr ""

#: ../source/reference/read-preference.txt:84
# 8a44c46555c74a93a1cf50bc89c48f37
msgid "When the read preference includes a :ref:`tag set <replica-set-read-preference-tag-sets>`, the client attempts to find a secondary member that matches the specified tag set and directs reads to a random secondary from among the :ref:`nearest group <replica-set-read-preference-behavior-nearest>`. If no secondaries have matching tags, the client ignores tags and reads from the primary."
msgstr ""

#: ../source/reference/read-preference.txt:91
# af9ebc8841aa44b9a0a75a85c3e82b2c
msgid "Read operations using the :readmode:`secondaryPreferred` mode may return stale data."
msgstr ""

#: ../source/reference/read-preference.txt:96
# 998330c5960d444a944107060397ceef
msgid "The driver reads from the *nearest* member of the :term:`set <replica set>` according to the :ref:`member selection <replica-set-read-preference-behavior-nearest>` process. Reads in the :readmode:`nearest` mode do not consider the member's *type*. Reads in :readmode:`nearest` mode may read from both primaries and secondaries."
msgstr ""

#: ../source/reference/read-preference.txt:103
# 11007eee51864dbdbc11e6ba2fdc3c16
msgid "Set this mode to minimize the effect of network latency on read operations without preference for current or stale data."
msgstr ""

#: ../source/reference/read-preference.txt:106
# 9e10353411ff4a3794dc0eebc88ac16e
msgid "If you specify a :ref:`tag set <replica-set-read-preference-tag-sets>`, the client attempts to find a replica set member that matches the specified tag set and directs reads to an arbitrary member from among the :ref:`nearest group <replica-set-read-preference-behavior-nearest>`."
msgstr ""

#: ../source/reference/read-preference.txt:112
# 410ce6cfffce4efe868cee57dbd2eaf3
msgid "Read operations using the :readmode:`nearest` mode may return stale data."
msgstr ""

#: ../source/reference/read-preference.txt:117
# 141eab1b66f84a609cf6b645e173b358
msgid "All operations read from a member of the nearest group of the replica set that matches the specified read preference mode. The :readmode:`nearest` mode prefers low latency reads over a member's :term:`primary` or :term:`secondary` status."
msgstr ""

#: ../source/reference/read-preference.txt:122
# 5444226a6d3549b2862d07355bac61c3
msgid "For :readmode:`nearest`, the client assembles a list of acceptable hosts based on tag set and then narrows that list to the host with the shortest ping time and all other members of the set that are within the \"local threshold,\" or acceptable latency. See :ref:`replica-set-read-preference-behavior-nearest` for more information."
msgstr ""

#: ../source/reference/read-preference.txt:129
# f79463951e774696bbee53c7d7840364
msgid "If your set has more than one secondary, and you use the :readmode:`secondary` read preference mode, consider the following effect. If you have a :ref:`three member replica set <replica-set-three-members>` with a primary and two secondaries, and if one secondary becomes unavailable, all :readmode:`secondary` queries must target the remaining secondary. This will double the load on this secondary. Plan and provide capacity to support this as needed."
msgstr ""

#: ../source/reference/read-preference.txt:139
# c4ef1e52c88b4078a2a3692ae082f54c
msgid "Use Cases"
msgstr ""

#: ../source/reference/read-preference.txt:141
# 3a47fcd91872430a8538f2884b7ebc9d
msgid "Depending on the requirements of an application, you can configure different applications to use different read preferences, or use different read preferences for different queries in the same application. Consider the following applications for different read preference strategies."
msgstr ""

#: ../source/reference/read-preference.txt:148
# d142989b35044796bc21806435a6e129
msgid "Maximize Consistency"
msgstr ""

#: ../source/reference/read-preference.txt:150
# fb9171c8749c48199ebfdb5f7905557b
msgid "To avoid *stale* reads under all circumstances, use :readmode:`primary`. This prevents all queries when the set has no :term:`primary`, which happens during elections, or when a majority of the replica set is not accessible."
msgstr ""

#: ../source/reference/read-preference.txt:156
# 1e082e8f432548c49b0eec643389a74b
msgid "Maximize Availability"
msgstr ""

#: ../source/reference/read-preference.txt:158
# 76b322449ff04774a376baf02e88ee7f
msgid "To permit read operations when possible, Use :readmode:`primaryPreferred`. When there's a primary you will get consistent reads, but if there is no primary you can still query :term:`secondaries <secondary>`."
msgstr ""

#: ../source/reference/read-preference.txt:164
# 1d3b058ebfa040f9b13f7fac0cc33df6
msgid "Minimize Latency"
msgstr ""

#: ../source/reference/read-preference.txt:166
# c78476277062457e804b27c074d7c3c4
msgid "To always read from a low-latency node, use :readmode:`nearest`. The driver or :program:`mongos` will read from the nearest member and those no more than 15 milliseconds [#secondary-acceptable-latency]_ further away than the nearest member."
msgstr ""

#: ../source/reference/read-preference.txt:171
# 922b6c3a1dad46ec8ac3d26fca756842
msgid ":readmode:`nearest` does *not* guarantee consistency. If the nearest member to your application server is a secondary with some replication lag, queries could return stale data. :readmode:`nearest` only reflects network distance and does not reflect I/O or CPU load."
msgstr ""

#: ../source/reference/read-preference.txt:176
# 2430c0751d7e4ca0b5d0807ad37e21b6
msgid "This threshold is configurable. See :setting:`~replication.localPingThresholdMs` for :program:`mongos` or your driver documentation for the appropriate setting."
msgstr ""

#: ../source/reference/read-preference.txt:182
# ae2a85ebea314bdbbb260a9f06d9904b
msgid "Query From Geographically Distributed Members"
msgstr ""

#: ../source/reference/read-preference.txt:184
# 4f0a50855287402e9cf288be44ede548
msgid "If the members of a replica set are geographically distributed, you can create replica tags based that reflect the location of the instance and then configure your application to query the members nearby."
msgstr ""

#: ../source/reference/read-preference.txt:188
# f4387573e327447899262263aa720da6
msgid "For example, if members in \"east\" and \"west\" data centers are :ref:`tagged <replica-set-configuration-tag-sets>` ``{'dc': 'east'}`` and ``{'dc': 'west'}``, your application servers in the east data center can read from nearby members with the following read preference:"
msgstr ""

#: ../source/reference/read-preference.txt:198
# 5ee794ffeb844108847c0ae2b787eb31
msgid "Although :readmode:`nearest` already favors members with low network latency, including the tag makes the choice more predictable."
msgstr ""

#: ../source/reference/read-preference.txt:202
# 0dfd6babbdba4b9db6b74809e64a018f
msgid "Reduce load on the primary"
msgstr ""

#: ../source/reference/read-preference.txt:204
# 7e2f1ed20d714b6b90e4a1ea7296c5f4
msgid "To shift read load from the primary, use mode :readmode:`secondary`. Although :readmode:`secondaryPreferred` is tempting for this use case, it carries some risk: if all secondaries are unavailable and your set has enough :term:`arbiters <arbiter>` to prevent the primary from stepping down, then the primary will receive all traffic from clients. If the primary is unable to handle this load, queries will compete with writes. For this reason, use :readmode:`secondary` to distribute read load to replica sets, not :readmode:`secondaryPreferred`."
msgstr ""

#: ../source/reference/read-preference.txt:214
# 16e0003ec5c14f978b4fdec7d2aad9c9
msgid "Read Preferences for Database Commands"
msgstr ""

#: ../source/reference/read-preference.txt:216
# 0b4f9124ae8347eeb1981e32ad7433b8
msgid "Because some :term:`database commands <database command>` read and return data from the database, all of the official drivers support full :ref:`read preference mode semantics <replica-set-read-preference-modes>` for the following commands:"
msgstr ""

#: ../source/reference/read-preference.txt:221
# b9db8c464837432bb43f1ba3c3a4645b
msgid ":dbcommand:`group`"
msgstr ""

#: ../source/reference/read-preference.txt:222
# 59f94215fa594bca9d6f8f6054d568ea
msgid ":dbcommand:`mapReduce` [#inline-map-reduce]_"
msgstr ""

#: ../source/reference/read-preference.txt:223
# cf0f904523a3452291792ba4b817d977
msgid ":dbcommand:`aggregate` [#aggregation-out]_"
msgstr ""

#: ../source/reference/read-preference.txt:224
# 06ce0053b21145babc61cd8f43706d93
msgid ":dbcommand:`collStats`"
msgstr ""

#: ../source/reference/read-preference.txt:225
# 9a512dc53c9b46ddaa25132b5f5a3ee4
msgid ":dbcommand:`dbStats`"
msgstr ""

#: ../source/reference/read-preference.txt:226
# 905d6aedd9c744f888c1e43a53265f16
msgid ":dbcommand:`count`"
msgstr ""

#: ../source/reference/read-preference.txt:227
# 24772195ed5c4858abff2339348072fd
msgid ":dbcommand:`distinct`"
msgstr ""

#: ../source/reference/read-preference.txt:228
# 3e4063340f1344beab72231852f14a93
msgid ":dbcommand:`geoNear`"
msgstr ""

#: ../source/reference/read-preference.txt:229
# 58902ce6c0f142538c6daafac960db1b
msgid ":dbcommand:`geoSearch`"
msgstr ""

#: ../source/reference/read-preference.txt:230
# 511190b0181b4d0ebac06c27f8ed23ca
msgid ":dbcommand:`geoWalk`"
msgstr ""

#: ../source/reference/read-preference.txt:231
# 1fe23193db34430aac7d82c14ecf2df4
msgid ":dbcommand:`parallelCollectionScan`"
msgstr ""

#: ../source/reference/read-preference.txt:233
# e93b52e1f8aa4b978cf304e34e2d7e3d
msgid ":program:`mongos` adds support for routing commands to shards using read preferences. Previously :program:`mongos` sent all commands to shards' primaries."
msgstr ""

#: ../source/reference/read-preference.txt:238
# 7cbb7e4bdcee4a5faf6f155092f9e042
msgid "Only \"inline\" :dbcommand:`mapReduce` operations that do not write data support read preference, otherwise these operations must run on the :term:`primary` members."
msgstr ""

#: ../source/reference/read-preference.txt:243
# 2546f0c3213c45a08d90ab178c82e53b
msgid "Using the ``$out`` pipeline operator forces the aggregation pipeline to run on the primary."
msgstr ""

#: ../source/reference/read-preference.txt:11
#: ../source/reference/read-preference.txt:13
# 97a35ff7c6b44c7089ea2278ff232b11
# 04b8473a718b4e05af32c3c12842e320
msgid "read preference"
msgstr ""

#: ../source/reference/read-preference.txt:11
# 97a35ff7c6b44c7089ea2278ff232b11
msgid "semantics"
msgstr ""

#: ../source/reference/read-preference.txt:13
# 04b8473a718b4e05af32c3c12842e320
msgid "modes"
msgstr ""

