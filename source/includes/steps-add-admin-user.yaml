title: Connect with the Privileges to Create Users and Grant Roles
stepnum: 1
ref: connect-as-admin
pre: |
  Connect to the :program:`mongod` or :program:`mongos` as a user with the
  :authaction:`createUser` *and* :authaction:`grantRole` actions on the
  ``admin`` database.
action:
  pre: |
    The following example operation connects to the MongoDB instance as a user
    name ``accountManager``:
  language: javascript
  code: |
    mongo --port 27017 -u accountManager -p 12345678 --authenticationDatabase admin
post: |
  As an alternative, if your MongoDB system does not have any
  users in the ``admin`` database you can connect a client over the
  localhost interface without authenticating using the :ref:`localhost
  bypass <localhost-exception>`.
---
source:
  file: steps-change-user-privileges.yaml
  ref: verify-privileges
---
title: Create the Administrative User
stepnum: 3
ref: create-admin-user
pre: |
  In the ``admin`` database, create a new user using the
  :method:`db.createUser()` method. Give the user the system-defined
  :authrole:`root` role.
action:
  pre: |
    For example:
  language: javascript
  code: |
    use admin
    db.createUser(
        {
          user: "superuser",
          pwd: "12345678",
          roles: [ "root" ]
        }
    )
post: |
  Authenticate against the ``admin`` database to test the new user
  account. Use :method:`db.auth()` while using the ``admin`` database
  or use the :program:`mongo` shell with the :option:`--authenticationDatabase
  <mongo --authenticateDatabase>` option.
...
