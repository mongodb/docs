ref: run-compound-constant-query-nodejs
stepnum: 1
title: "Run an |fts| compound query that alters the score using the 
       :ref:`scoring-constant` option."
content: |

  a. Create a file named ``compound-constant-query.js``. 
  #. Copy and paste the code example into the 
     ``compound-constant-query.js`` file.

     The code example performs the following tasks:

     - Imports ``mongodb``, MongoDB's Node.js driver.
     - Creates an instance of the ``MongoClient`` class to establish a 
       connection to your |service| cluster.
     - Uses the following compound clauses to query the collection: 

       .. include:: /includes/extracts/fts-compound-constant-desc.rst 

     - Uses the following pipeline stages:

       .. include:: /includes/extracts/fts-compound-score-stages.rst 

     - Iterates over the cursor to print the documents that match the 
       query.
       
     .. literalinclude:: /includes/fts-tutorial/compound-constant-query.js
        :language: javascript
        :linenos:
        :emphasize-lines: 47

  #. .. include:: /includes/fact-fts-driver-connection-string.rst
  #. Run the following command to query your collection: 
  
     .. code-block:: sh 
     
        node compound-constant-query.js

  When you run ``compound-constant-query.js``, this file prints the   
  following documents to your terminal:

  .. code-block:: javascript
     :copyable: false
     :emphasize-lines: 1-4

     { title: 'Snow in Paradise', year: 2014, score: 5 }
     { title: 'Dead Snow 2: Red vs. Dead', year: 2014, score: 5 }
     { title: 'The Snow White Murder Case', year: 2014, score: 5 }
     { title: 'Snow on the Blades', year: 2014, score: 5 }
     { year: 2013, title: 'The Secret Life of Walter Mitty', score: 0 }
     { title: 'Jurassic World', year: 2015, score: 0 }
     { title: 'Action Jackson', year: 2014, score: 0 }
     { year: 2013, title: 'In Secret', score: 0 }
     { title: 'The Stanford Prison Experiment', year: 2015, score: 0 }
     { year: 2014, title: 'The Giver', score: 0 }

  The highlighted documents in the results above have a higher score 
  because the ``should`` clause in the query specifies a preference for 
  documents with ``snow`` in the title. The ``should`` clause also 
  alters the score for the query term ``snow`` using the ``constant`` 
  option.

---
ref: run-compound-boost-query-nodejs
stepnum: 2
title: "Run an |fts| compound query that alters the score using the 
       :ref:`scoring-boost` option."
content: |

  a. Create a file named ``compound-boost-query.js``. 
  #. Copy and paste the code example into the 
     ``compound-boost-query.js`` file.

     The code example performs the following tasks:

     - Imports ``mongodb``, MongoDB's Node.js driver.
     - Creates an instance of the ``MongoClient`` class to establish a 
       connection to your |service| cluster.
     - Uses the following compound clauses to query the collection: 

       .. include:: /includes/extracts/fts-compound-boost-desc.rst 

     - Uses the following pipeline stages:

       .. include:: /includes/extracts/fts-compound-score-stages.rst 

     - Iterates over the cursor to print the documents that match the 
       query.

     .. literalinclude:: /includes/fts-tutorial/compound-boost-query.js
        :language: javascript
        :linenos:
        :emphasize-lines: 47

  #. .. include:: /includes/fact-fts-driver-connection-string.rst
  #. Run the following command to query your collection: 
  
     .. code-block:: sh 
     
        node compound-boost-query.js

  When you run ``compound-boost-query.js``, this file prints the   
  following documents to your terminal:

  .. code-block:: javascript
     :copyable: false
     :emphasize-lines: 1-4

     { title: 'Snow in Paradise', year: 2014, score: 6.7722930908203125 }
     { title: 'Snow on the Blades', year: 2014, score: 6.063445568084717 }
     { title: 'The Snow White Murder Case', year: 2014, score: 5.509652137756348 }
     { title: 'Dead Snow 2: Red vs. Dead', year: 2014, score: 5.065053939819336 }
     { year: 2013, title: 'The Secret Life of Walter Mitty', score: 1 }
     { title: 'Jurassic World', year: 2015, score: 1 }
     { title: 'Action Jackson', year: 2014, score: 1 }
     { year: 2013, title: 'In Secret', score: 1 }
     { title: 'The Stanford Prison Experiment', year: 2015, score: 1 }
     { year: 2014, title: 'The Giver', score: 1 }

  The highlighted documents in the results above have a higher score 
  because the ``should`` clause in the query specifies a preference for 
  documents with ``snow`` in the title. The ``should`` clause also 
  alters the score for the query term ``snow`` using the ``boost`` 
  option.

---
ref: run-compound-function-query-nodejs
stepnum: 2
title: "Run an |fts| compound query that alters the score using the 
       :ref:`scoring-function` option."
content: |

  a. Create a file named ``compound-function-query.js``. 
  #. Copy and paste the code example into the 
     ``compound-function-query.js`` file.

     The code example performs the following tasks:

     - Imports ``mongodb``, MongoDB's Node.js driver.
     - Creates an instance of the ``MongoClient`` class to establish a 
       connection to your |service| cluster.
     - Uses the following compound clauses to query the collection: 

       .. include:: /includes/extracts/fts-compound-function-desc.rst 

     - Uses the following pipeline stages:

       .. include:: /includes/extracts/fts-compound-score-stages.rst 

     - Iterates over the cursor to print the documents that match the 
       query.

     .. literalinclude:: /includes/fts-tutorial/compound-function-query.js
        :language: javascript
        :linenos:
        :emphasize-lines: 59

  #. .. include:: /includes/fact-fts-driver-connection-string.rst
  #. Run the following command to query your collection: 
  
     .. code-block:: sh 
     
        node compound-function-query.js

  When you run ``compound-function-query.js``, this file prints the   
  following documents to your terminal:

  .. code-block:: javascript
     :copyable: false
     :emphasize-lines: 1-4

     { title: 'The Snow White Murder Case', year: 2014, score: 10.454826354980469 }
     { title: 'Snow on the Blades', year: 2014, score: 10.3317232131958 }
     { title: 'Dead Snow 2: Red vs. Dead', year: 2014, score: 10.032526969909668 }
     { title: 'Snow in Paradise', year: 2014, score: 8.386146545410156 }
     { year: 2013, title: 'The Secret Life of Walter Mitty', score: 1 }
     { title: 'Jurassic World', year: 2015, score: 1 }
     { title: 'Action Jackson', year: 2014, score: 1 }
     { year: 2013, title: 'In Secret', score: 1 }
     { title: 'The Stanford Prison Experiment', year: 2015, score: 1 }
     { year: 2014, title: 'The Giver', score: 1 }

  The highlighted documents in the results above have a higher score 
  because the ``should`` clause in the query specifies a preference for 
  documents with ``snow`` in the title. The ``should`` clause also 
  alters the score for the query term ``snow`` using the ``function`` 
  option.

...