=======================================
Manage Client-Side Encryption Data Keys
=======================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. include:: /includes/fact-client-side-field-level-encryption-beta.rst

.. versionadded:: 4.2

Client-side field level encryption uses data keys for encryption and
decryption. The :binary:`~bin.mongo` shell :method:`getKeyVault()`
method returns a key vault object for creating, modifying, and deleting
data keys. 

This page documents client-side field level encryption using the
:binary:`~bin.mongo` shell, and does *not* refer to any official MongoDB
4.2-compatible driver. See the relevant :ref:`documentation
<field-level-encryption-drivers>` for driver-specific data key
management methods and syntax.

.. _field-level-encryption-data-key-create:

Create a Data Key
-----------------

The following procedure uses the :binary:`~bin.mongo` shell to create a data key
for use with client-side field level encryption and decryption. For guidance on
data key management using a 4.2-compatible driver, see the documentation for
that driver.

.. include:: /includes/steps/manage-client-side-encryption-create-key.rst

.. _field-level-encryption-data-key-manage:

Manage a Data Key's Alternate Name
----------------------------------

The following procedure uses the :binary:`~bin.mongo` shell to manage the
alternate names of a data key. For guidance on data key management using a
4.2-compatible driver, see the documentation for that driver.

.. include:: /includes/steps/manage-client-side-encryption-manage-key-altname.rst

.. _field-level-encryption-data-key-delete:

Remove a Data Key
-----------------

.. warning::

    Deleting a data key renders all fields encrypted using that key as 
    permanently unreadable.

The following procedure uses the :binary:`~bin.mongo` shell to remove a data key
from the key vault. For guidance on data key management using a 4.2-compatible
driver, see the documentation for that driver.

.. include:: /includes/steps/manage-client-side-encryption-delete-key.rst
