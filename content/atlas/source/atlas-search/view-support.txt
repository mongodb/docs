.. _fts-transform-documents-collections:

=============================
Use Views with |fts|
=============================

.. default-domain:: mongodb

.. meta::
   :description: Use MongoDB Search to transform documents and collections.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. |product-name| replace:: |fts|

You can create an |fts| index on a :manual:`View 
</core/views/>` to transform documents and collections so that you can 
partially index a collection, support incompatible data types or 
data models, and more.

The following examples use the :ref:`sample_mflix <sample-mflix>` 
and :ref:`sample_airbnb <sample-airbnb>` sample databases.

----------

.. |arrow| unicode:: U+27A4

|arrow| Use the **Select your language** drop-down menu to set the 
interface for the examples on this page.

.. tabs-selector:: drivers
   :default-tabid: shell

----------


.. include:: /includes/search-shared/fact-view-disambiguation.rst

.. include:: /includes/search-shared/fact-partial-indexing-reqs.rst

- To retrieve the transformed document, use the ``storedSource`` 
  :ref:`option <index-definition-options>`.

.. _partially-indexed-collection:

Example: Filter Documents
-------------------------

To create a View, you must have the :authaction:`createCollection` 
privilege.

You can partially index a collection to filter documents. The following 
example creates a View on the ``sample_mflix.movies`` collection so 
that you can search for only movies released after January 1, 
2000.

.. |search-type| replace:: :guilabel:`MongoDB Search`
.. |index-name| replace:: ``releasedAfter2000Index``
.. |database-name| replace:: ``sample_mflix``
.. |collection-name| replace:: ``movies_ReleasedAfter2000``
.. |source-collection| replace:: ``movies``

.. tabs-drivers::

   .. tab::
      :tabid: shell

      .. include:: /includes/fts/views/filter-documents-mongosh.rst

   .. tab::
      :tabid: atlas-ui

      .. include:: /includes/fts/views/filter-documents-atlas-ui.rst

Example: Add or Modify Fields
-----------------------------

The following example lets you search the
``sample_airbnb.listingsAndReviews`` collection for accomodatations 
based on a new ``totalPrice`` field, which is the sum of the ``price`` 
and ``cleaningFee`` fields.  Also, since |fts| doesn't support 
``Decimal128`` types, we transform the values to ``Double``.

.. |search-type| replace:: :guilabel:`MongoDB Search`
.. |index-name| replace:: ``totalPriceIndex``
.. |database-name| replace:: ``sample_airbnb``
.. |collection-name| replace:: ``listingsAndReviews_totalPrice``
.. |source-collection| replace:: ``listingsAndReviews``

.. tabs-drivers::

   .. tab::
      :tabid: shell

      .. include:: /includes/fts/views/add-modify-fields-mongosh.rst

   .. tab::
      :tabid: atlas-ui

      .. include:: /includes/fts/views/add-modify-fields-atlas-ui.rst

Edit a View
-------------------

The following example updates the ``movies_ReleasedAfter2000`` MongoDB
View for movies before 2000.

.. literalinclude:: /includes/fts/views/edit-view-shell.sh
   :language: sh
   :copyable: true

After you run this command, |fts| automatically detects the change in
the View definition and performs a reindexing with no downtime.

Return the Pipelines for a View
---------------------------------------

The following example returns the pipelines on the
``movies_ReleasedAfter2000`` View.

.. io-code-block::
   :copyable: true

   .. input:: /includes/fts/views/return-pipelines-shell.sh
         :language: sh

   .. output:: /includes/fts/views/return-pipelines-output.json
      :language: json
      :visible: false


Performance Considerations
--------------------------

.. include:: /includes/search-shared/fact-partial-indexing-performance-considerations.rst

Troubleshoot
------------

.. include:: /includes/search-shared/fact-partial-indexing-troubleshoot.rst

Index Process
-------------

.. include:: /includes/search-shared/fact-partial-indexing-process.rst

Learn More
----------

To learn more about Views, see :manual:`Views </core/views/>`.

To create an {+avs+} index on a View, see 
:ref:`avs-transform-documents-collections`.
