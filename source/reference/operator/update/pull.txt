=====
$pull
=====

.. default-domain:: mongodb

.. update:: $pull

   The :update:`$pull` operator removes all instances of a value
   from an existing array, as in the following prototype: 

   .. code-block:: javascript

      db.collection.update( { field: <query> }, { $pull: { field: <query> } } );

   :update:`$pull` removes items from the array in the field
   named ``field``  that match the query in the :update:`$pull`
   statement. 

   If a value (i.e. ``<value>``) exists multiple times in an array,
   :update:`$pull` will remove all instances of the value.

   .. example:: 
      
      Given the following document in the ``cpuinfo`` collection: 
      
      .. code-block:: javascript

         { flags: ['vme', 'de', 'pse', 'tsc', 'msr', 'pae', 'mce' ] }

      The following operation will remove the ``msr`` value from the
      ``flags`` array: 

      .. code-block:: javascript

         db.cpuinfo.update( { flags: 'msr' }, { $pull: { flags: 'msr' } } )

   .. example:: 
      
      Given the following document in the ``profiles`` collection: 
      
      .. code-block:: javascript

         { votes: [ 3, 5, 6, 7, 7, 8 ] }

      The following operation will remove all occurrences of ``7``
      from the ``votes`` array.

      .. code-block:: javascript

         db.profiles.update( { votes: 3 }, { $pull: { votes: 7 } } )

      Therefore, the ``votes`` array would resemble the following: 
      
      .. code-block:: javascript
      
         { votes: [ 3, 5, 6, 8 ] }

      Conversely, the following operation will remove all items from
      the array that are larger than ``6``: 

      .. code-block:: javascript

         db.profiles.update( { votes: 3 }, { $pull: { votes: { $gt: 6 } } } )

      Therefore, the ``votes`` array would resemble the following: 
      
      .. code-block:: javascript

         { votes: [ 3, 5, 6 ] }

