.. _pymongo-distinct:

==============================
Retrieve Distinct Field Values
==============================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. facet::
   :name: genre
   :values: reference
 
.. meta::
   :keywords: read, unique, code example

Overview
--------

Within a collection, different documents might contain different values for a
single field. For example, one ``restaurant`` document has a ``borough`` value of ``"Manhattan"``, and
another has a ``borough`` value of ``"Queens"``. With {+driver-short+}, you can
retrieve all the distinct values that a field contains across multiple documents
in a collection.

Sample Data
~~~~~~~~~~~

The examples in this guide use the ``sample_restaurants.restaurants`` collection
from the :atlas:`Atlas sample datasets </sample-data>`. To learn how to create a
free MongoDB Atlas cluster and load the sample datasets, see the
:ref:`<pymongo-get-started>`.

``distinct()`` Method
---------------------

To retrieve the distinct values for a specified field, call the ``distinct()``
method and pass in the name of the field you want to find distinct values for.

Retrieve Distinct Values Across a Collection
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following example retrieves the distinct values of the ``borough`` field in
the ``restaurants`` collection:

.. io-code-block::

   .. input:: /includes/read/distinct.py
      :start-after: start-distinct
      :end-before: end-distinct
      :language:  python

   .. output:: 

      Bronx
      Brooklyn
      Manhattan
      Missing
      Queens
      Staten Island

The results show every distinct value that appears in the ``borough`` field
across all documents in the collection. Although several documents have the same
value in the ``borough`` field, each value appears in the results only once.

Retrieve Distinct Values Across Specified Documents
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You can provide a **query filter** to the ``distinct()`` method to find the distinct
field values across a subset of documents in a collection. A query filter is an expression that specifies search
criteria used to match documents in an operation. For more information about
creating a query filter, see :ref:`pymongo-specify-query`.

The following example retrieves the distinct values of the ``borough`` field for
all documents that have a ``cuisine`` field value of ``"Italian"``:

.. io-code-block::

   .. input:: /includes/read/distinct.py
      :start-after: start-distinct-with-query
      :end-before: end-distinct-with-query
      :language:  python

   .. output:: 

      Bronx
      Brooklyn
      Manhattan
      Queens
      Staten Island

Modify Distinct Behavior
~~~~~~~~~~~~~~~~~~~~~~~~

The ``distinct()`` method accepts optional parameters, which represent
options you can use to configure the operation. If you don't specify any
options, the driver does not customize the operation.

The following table describes the options you can set to customize
``distinct()``:

.. list-table::
   :widths: 30 70
   :header-rows: 1

   * - Property
     - Description

   * - ``filter``
     - | A query filter that specifies the documents to retrieve distinct
         values from.

   * - ``session``
     - | An instance of ``ClientSession``.

   * - ``comment``
     - | A comment to attach to the operation.

   * - ``maxTimeMS``
     - | The maximum amount of time to allow the operation to run, in
         milliseconds.
     
   * - ``collation``
     - | An instance of ``Collation``.

The following example retrieves the distinct values of the ``name`` field for
all documents that have a ``borough`` field value of ``"Bronx"`` and a
``cuisine`` field value of ``"Pizza"``. It also uses
the ``comment`` option to add a comment to the operation.

.. io-code-block::

   .. input:: /includes/read/distinct.py
      :start-after: start-distinct-with-comment
      :end-before: end-distinct-with-comment
      :language:  python

   .. output:: 

      $1.25 Pizza
      18 East Gunhill Pizza
      2 Bros
      Aenos Pizza
      Alitalia Pizza Restaurant
      ...

API Documentation
-----------------

To learn more about any of the methods or types discussed in this
guide, see the following API documentation:

- `distinct() <{+api-root+}pymongo/collection.html#pymongo.collection.Collection.distinct>`__
- `Collation <{+api-root+}pymongo/collation.html#pymongo.collation.Collation>`__
- `ClientSession <{+api-root+}pymongo/client_session.html#pymongo.client_session.ClientSession>`__