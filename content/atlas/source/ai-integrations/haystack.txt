.. _haystack:

=========================================
Get Started with the Haystack Integration
=========================================

.. default-domain:: mongodb

.. facet::
   :name: genre
   :values: tutorial

.. facet::
   :name: programming_language
   :values: python

.. meta::
   :description: Integrate MongoDB Vector Search with Haystack to build Gen AI applications and implement RAG.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

You can integrate {+avs+} with `Haystack
<https://haystack.deepset.ai/integrations/mongodb>`__
to build custom applications with |llm|\s and implement 
retrieval-augmented generation (RAG). This tutorial demonstrates
how to start using {+avs+} with Haystack to perform
semantic search on your data and build a |rag| implementation.
Specifically, you perform the following actions:

#. Set up the environment.
#. Create a {+avs+} index.
#. Store custom data in MongoDB.
#. Implement |rag| by using {+avs+} to answer questions on your data.

.. cta-banner::
   :url: https://github.com/mongodb/docs-notebooks/blob/main/ai-integrations/haystack.ipynb
   :icon: Code

   Work with a runnable version of this tutorial as a :github:`Python notebook <mongodb/docs-notebooks/blob/main/ai-integrations/haystack.ipynb>`.

Background
----------

Haystack is a framework for building custom applications with 
|llm|\s, embedding models, and vector search. 
By integrating {+avs+} with Haystack, you can use 
MongoDB as a vector database and use {+avs+} to
implement |rag| by retrieving semantically similar documents 
from your data. To learn more about |rag|,
see :ref:`ai-key-concepts`.

Procedure
---------

.. tabs::

   .. tab::
      :tabid: Voyage AI

      Prerequisites
      ~~~~~~~~~~~~~

      To complete this tutorial, you must have the following:

      - .. include:: /includes/avs/shared/avs-requirements-cluster.rst
      - .. include:: /includes/avs/shared/avs-requirements-openai-api-key.rst
      - .. include:: /includes/avs/shared/avs-requirements-voyageai-api-key.rst

      - A notebook to run your Python project such as `Colab <https://colab.research.google.com>`__.

      Set Up the Environment
      ~~~~~~~~~~~~~~~~~~~~~~

      .. include:: /includes/avs/shared/set-up-python-notebook-environment.rst
      .. include:: /includes/ai-integrations/haystack/haystack-set-up-environment-voyageai.rst

      Create the {+avs+} Index
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      In this section, you create the ``haystack_db`` database 
      and ``test`` collection to store your custom data.
      Then, to enable vector search queries on your data, you 
      create a {+avs+} index.

      .. include:: /includes/ai-integrations/haystack/haystack-create-index-voyageai.rst

      Store Custom Data in MongoDB
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      In this section, you instantiate MongoDB as a vector database,
      also called a `document store <https://docs.haystack.deepset.ai/docs/mongodbatlasdocumentstore>`__.
      Then, you create vector embeddings from custom data and store
      these documents in a collection in MongoDB. Paste and
      run the following code snippets in your notebook.

      .. include:: /includes/ai-integrations/haystack/haystack-store-custom-data-voyageai.rst

      Answer Questions on Your Data
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      This section demonstrates how to implement |rag| in your 
      application with {+avs+} and Haystack.

      .. include:: /includes/ai-integrations/haystack/haystack-perform-qa-voyageai.rst

   .. tab::
      :tabid: OpenAI

      Prerequisites
      ~~~~~~~~~~~~~

      To complete this tutorial, you must have the following:

      - .. include:: /includes/avs/shared/avs-requirements-cluster.rst
      - .. include:: /includes/avs/shared/avs-requirements-openai-api-key.rst

      - A notebook to run your Python project such as `Colab <https://colab.research.google.com>`__.

      Set Up the Environment
      ~~~~~~~~~~~~~~~~~~~~~~

      .. include:: /includes/avs/shared/set-up-python-notebook-environment.rst
      .. include:: /includes/ai-integrations/haystack/haystack-set-up-environment-openai.rst

      Create the {+avs+} Index
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      In this section, you create the ``haystack_db`` database 
      and ``test`` collection to store your custom data.
      Then, to enable vector search queries on your data, you 
      create a {+avs+} index.

      .. include:: /includes/ai-integrations/haystack/haystack-create-index-openai.rst

      Store Custom Data in MongoDB
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      In this section, you instantiate MongoDB as a vector database,
      also called a `document store <https://docs.haystack.deepset.ai/docs/mongodbatlasdocumentstore>`__.
      Then, you create vector embeddings from custom data and store
      these documents in a collection in MongoDB. Paste and
      run the following code snippets in your notebook.

      .. include:: /includes/ai-integrations/haystack/haystack-store-custom-data-openai.rst

      Answer Questions on Your Data
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      This section demonstrates how to implement |rag| in your 
      application with {+avs+} and Haystack.

      .. include:: /includes/ai-integrations/haystack/haystack-perform-qa-openai.rst

Next Steps
----------

MongoDB also provides the following developer resources:

- :website:`Building RAG Pipelines With Haystack and MongoDB Atlas
  </developer/products/atlas/haystack-ai-mongodb-atlas-vector-demo/>`
- :github:`Interactive Python Notebook
  </mongodb-developer/GenAI-Showcase/blob/main/notebooks/rag/Haystack_MongoDB_Atlas_RAG.ipynb>`
- `Hugging Face Space <https://huggingface.co/spaces/MongoDB/Haystack-MongoDB-Integration-Chat>`__
- :github:`MongoDB Developer GitHub Repository </mongodb-developer>`

.. seealso:: 

   - `Haystack Integrations <https://haystack.deepset.ai/integrations/mongodb>`__
   - `Haystack Documentation <https://docs.haystack.deepset.ai/docs/mongodbatlasdocumentstore>`__
   - `Haystack API Reference <https://docs.haystack.deepset.ai/reference/integrations-mongodb-atlas>`__
