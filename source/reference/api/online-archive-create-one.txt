.. _api-online-archive-create-one:

========================
Create an Online Archive
========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

You can create an :ref:`online archive <online-archive-overview>` from the 
API and |service| :ref:`UI <config-online-archive>`. You must have the 
``GROUP_DATA_ACCESS_ADMIN`` (:authrole:`Project Data Access Admin`) role 
to create an online archive.

.. include:: /includes/api-requirements.rst

.. include:: /includes/fact-projects-groups-synonyms.rst

.. include:: /includes/api-base-url-new.rst

.. _api-online-archive-create-one-syntax:

Syntax
------

.. code-block:: none

   POST /groups/{GROUP-ID}/clusters/{CLUSTER-NAME}/onlineArchives

.. _api-online-archive-create-one-params:

Request Parameters
------------------

.. _api-online-archive-create-one-path-params:

Request Path Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1
   :widths: 15 10 75

   * - Path Element
     - Necessity
     - Description

   * - ``GROUP-ID``
     - Required
     - Unique identifier for the :ref:`project <projects>`
       that contains the specified cluster.

   * - ``CLUSTER-NAME``
     - Required
     - Name of the cluster that contains the collection for which
       you want to create an online archive.

.. _api-online-archive-create-one-query-params:

Request Query Parameters
~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/api/no-query-single-parameters.rst

.. _api-online-archive-create-one-body-params:

Request Body Parameters 
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table:: 
   :header-rows: 1
   :widths: 15 10 10 65

   * - Name
     - Type
     - Necessity
     - Description

   * - ``collName``
     - string
     - Required
     - Name of the collection for which to create an online 
       archive.

   * - ``collectionType``
     - string 
     - Optional 
     - Type of collection. Value can be one of the following: 

       - ``STANDARD`` - for a standard collection 
       - ``TIMESERIES`` - for a :manual:`time series 
         </core/timeseries-collections/>` collection

       If value is ``TIMESERIES``: 

       - ``criteria.type`` must be ``date``
       - ``criteria.dateFormat`` must be ``ISODATE``

       .. include:: /includes/fact-oa-timeseries-preview.rst

       If omitted, defaults to ``STANDARD``. 

   * - ``dbName``
     - string
     - Required
     - Name of the database that contains the collection.

   * - ``criteria``
     - object
     - Required
     - Criteria to use for archiving data.

   * - ``criteria.type``
     - string
     - Required
     - Type of criteria. Value can be one of the following: 

       - ``DATE`` - to select documents for archiving based on a date.
       - ``CUSTOM`` - to select documents for archiving based on a 
         custom |json| query. This is not supported for :manual:`time 
         series </core/timeseries-collections/>` collections.

   * - ``criteria.dateField``
     - string
     - Conditional
     - Required if ``criteria.type`` is ``DATE``.
     
       Name of an already indexed date field from the documents. For 
       a :manual:`time series </core/timeseries-collections/>` 
       collection, field name must correspond to the ``timeField`` in 
       the :manual:`time series </core/timeseries-collections/>` 
       collection. Data is archived when the current date is greater 
       than the value of the date field specified here plus the number 
       of days specified via the ``expireAfterDays`` parameter.

   * - ``criteria.dateFormat``
     - enum
     - Optional
     - If ``criteria.type`` is ``DATE``, the date format. Value can be 
       one of the following: 

       - ``ISODATE`` - ISO-8601 format date (default)
       - ``EPOCH_SECONDS`` - Unix timestamp in seconds
       - ``EPOCH_MILLIS`` - Unix timestamp in milliseconds
       - ``EPOCH_NANOSECONDS`` - Unix timestamp in nanoseconds

       Only ``ISODATE`` is supported for :manual:`time series 
       </core/timeseries-collections/>` collections.

       If omitted, defaults to ``ISODATE``.

   * - ``criteria.expireAfterDays``
     - int
     - Conditional
     - Required if ``criteria.type`` is ``DATE``.
     
       Number of days that specifies the age limit for the data 
       in the live |service| cluster. Data is archived when the current 
       date is greater than the value of the date field specified via 
       the ``dateField`` parameter plus the number of days specified 
       here.

   * - ``criteria.query``
     - string
     - Conditional
     - Required if ``criteria.type`` is ``CUSTOM``.
     
       |json| query to use to select documents for archiving. |service| 
       uses the specified query with the :manual:`db.collection.find
       (query) </reference/method/db.collection.find/>` command. The 
       empty document ``{}`` to return all documents is not supported.

   * - ``dataExpirationRule``
     - object
     - Optional 
     - Rule for specifying when data should be deleted from the 
       archive. This data expiration rule takes effect only after 24 
       hours.
    
   * - ``dataExpirationRule.expireAfterDays``
     - int 
     - Required 
     - Number of days after which |service| must delete archived data. 
       Value can be between ``7`` and ``9125`` days (25 years). 
       |service| deletes archived data after the number of days you 
       specify here.

   * - ``partitionFields``
     - document array
     - Optional
     - Fields to use to partition data. You can specify up to two 
       frequently queried fields to use for partitioning data. Note 
       that queries that donâ€™t contain the specified fields will 
       require a full collection scan of all archived documents, which 
       will take longer and increase your costs. To learn more about 
       how partition improves query performance, see `Data Structure 
       in S3 <https://www.mongodb.com/docs/datalake/admin/optimize-query-performance#data-structure-in-s3>`__. 

       .. include:: /includes/fact-online-archive-partition-field-length.rst

   * - ``partitionFields.fieldName``
     - string
     - Required
     - Name of the field. To specify a nested field, use the 
       :manual:`dot notation </core/document/#embedded-documents>`.

   * - ``partitionFields.order``
     - int
     - Required
     - Position of the field in the partition. Value can be: 

       - ``0`` - for the first position 
       - ``1`` - for the second position
       - ``2`` - for the third position

       By default, the date field specified in the 
       ``criteria.dateField`` parameter is in the first position of the 
       partition.

.. _api-online-archive-create-one-response:

Response Elements 
-----------------

.. include:: /includes/list-table-online-archive-response.rst

.. _api-online-archive-create-one-eg:

Examples 
--------

Date Criteria Examples 
~~~~~~~~~~~~~~~~~~~~~~

.. tabs:: 

   .. tab:: Basic Example
      :tabid: basic
   
      The following example request creates an online archive for 
      an example ``people.employees`` collection in a cluster named 
      ``myTestClstr``. Data in the collection will be archived based on 
      the ``created`` date field and partitioned based on the 
      ``firstName`` and ``lastName`` fields. The criteria for archiving 
      data specifies that data should be archived when current date is 
      greater than the value of the ``created`` date field plus ``5`` 
      days. The request also specifies that archived data must be 
      deleted after ``500`` days.

      **Example Request** 

      .. code-block:: json 

         curl --user "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest \
         --header "Content-Type: application/json" \
         --include \
         --request POST "https://cloud.mongodb.com/api/atlas/v1.0/groups/5e2211c17a3e5a48f5497de3/clusters/myTestClstr/onlineArchives?pretty=true" \
         --data '
         {
	         "dbName": "people",
	         "collName": "employees",
	         "partitionFields": [
		         {
			         "fieldName": "firstName", 
			         "order": 0
		         }, 
		         {
			         "fieldName": "lastName",
			         "order": 1
		       }], 
	         "criteria": {
		         "type": "DATE",
		         "dateField": "created",
		         "dateFormat": "ISODATE",
		         "expireAfterDays": 5
           },
           "dataExpirationRule": {
             "expireAfterDays": 500
           }
         }'

      **Example Response** 

      .. code-block:: json 
         :copyable: false 

         {
           "_id": "5ebad3c1fe9c0ab8d37d61e1",
           "clusterName": "myTestClstr",
           "collName": "employees",
           "collectionType": "STANDARD",
           "criteria": {
             "type": "DATE",
             "dateField": "created",
             "dateFormat": "ISODATE",
             "expireAfterDays": 5
           },
           "dataExpirationRule": {
             "expireAfterDays": 500
           },
           "dbName": "people",
           "groupId": "5e2211c17a3e5a48f5497de3",
           "partitionFields": [
             {
               "fieldName": "firstName",
               "fieldType": "null",
               "order": 0
             },
             {
               "fieldName": "lastName",
               "fieldType": "null",
               "order": 1
             }
           ],
           "paused": false,
           "state": "PENDING"
         }

   .. tab:: Advanced Example
      :tabid: advanced

      The following example request creates an online archive for 
      an example ``accounting.invoices`` collection in a cluster named 
      ``myTestClstr``. Data in the collection will be archived based on 
      the ``created`` date field. Data is partitioned based on the 
      ``created`` field, which is moved to the first position, 
      ``customerID`` field, and ``invoiceNumber`` field. The criteria 
      for archiving data specifies that data should be archived when 
      current date is greater than the value of the ``created`` date 
      field plus ``7`` days.

      **Example Request** 

      .. code-block:: json 

         curl --user "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest \
         --header "Content-Type: application/json" \
         --include \
         --request POST "https://cloud.mongodb.com/api/atlas/v1.0/groups/5e2211c17a3e5a48f5497de3/clusters/myTestClstr/onlineArchives?pretty=true" \
         --data '
         {
	         "dbName": "accounting",
	         "collName": "invoices",
	         "partitionFields": [
		         {
			         "fieldName": "created", 
			         "order": 0
		         }, 
		         {
			         "fieldName": "customerID",
			         "order": 1
		         },
		         {
			         "fieldName": "invoiceNumber",
			         "order": 2
		       }], 
	         "criteria": {
		         "type": "DATE",
		         "dateField": "created",
		         "dateFormat": "ISODATE",
		         "expireAfterDays": 7
           }
         }'

      **Example Response** 

      .. code-block:: json 
         :copyable: false 

         {
           "_id": "5f9869ddb41cea31cfcb000a",
           "clusterName": "myTestClstr",
           "collName": "invoices",
           "collectionType": "STANDARD",
           "criteria": {
             "type": "DATE",
             "dateField": "created",
             "dateFormat": "ISODATE",
             "expireAfterDays": 7
           },
           "dbName": "accounting",
           "groupId": "5e2211c17a3e5a48f5497de3",
           "partitionFields": [
             {
               "fieldName": "created",
               "fieldType": "date",
               "order": 0
             },
             {
               "fieldName": "customerID",
               "fieldType": "string",
               "order": 1
             },
             {
               "fieldName": "invoiceNumber",
               "fieldType": "int",
               "order": 2
             }
           ],
           "paused": false,
           "state": "PENDING"
         }

   .. tab:: Time Series Example
      :tabid: timeseries 

      .. include:: /includes/fact-oa-timeseries-preview.rst

      The following example request creates an online archive for 
      an example ``test.weather`` :manual:`collection </core/timeseries-collections/#insert-measurements-into-a-time-series-collection>` 
      in a cluster named ``myTestClstr``. Data in the collection will 
      be archived based on the ``timestamp`` date field. Data is 
      partitioned based on the ``timestamp`` field, which is moved to 
      the first position, ``metadata.type`` field, and ``temp`` field. 
      The criteria for archiving data specifies that data should be 
      archived when current time is greater than the value of the 
      ``timestamp`` date 
      field plus ``7`` days.

      **Example Request** 

      .. code-block:: json 

         curl --user "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest \
         --header "Content-Type: application/json" \
         --include \
         --request POST "https://cloud.mongodb.com/api/atlas/v1.0/groups/5e2211c17a3e5a48f5497de3/clusters/myTestClstr/onlineArchives?pretty=true" \
         --data '
         {
           "dbName": "my_test",
           "collName": "weather",
           "collectionType": "TIMESERIES",
           "partitionFields": [
             {
               "fieldName": "timestamp",
               "order": 0
             },
             {
               "fieldName": "metadata.type",
               "order": 1
             },
             {
               "fieldName": "temp",
               "order": 2
           }],
           "criteria": {
             "type": "DATE",
             "dateField": "timestamp",
             "dateFormat": "ISODATE",
             "expireAfterDays": 7
           }
         }

      **Example Response** 

      .. code-block:: json 
         :copyable: false 

         {
           "_id": "611a8c2d2d0d7825c954d48c",
           "clusterName": "myTestClstr",
           "collName": "weather",
           "collectionType": "TIMESERIES",
           "criteria": {
             "type": "DATE",
             "dateField": "timestamp",
             "dateFormat": "ISODATE",
             "expireAfterDays": 7
           },
           "dbName": "test",
           "groupId": "5e2211c17a3e5a48f5497de3",
           "partitionFields": [
             {
               "fieldName": "timestamp",
               "fieldType": null,
               "order": 0
             },
             {
               "fieldName": "metadata.type",
               "fieldType": null,
               "order": 1
             },
             {
               "fieldName": "temp",
               "fieldType": null,
               "order": 2
             }
           ],
           "paused": false,
           "state": "PENDING"
         }

Custom Criteria Example 
~~~~~~~~~~~~~~~~~~~~~~~

The following example request creates an online archive for an example 
``people.employees`` collection in a cluster named ``myTestClstr``. 
Documents in the collection will be selected for archiving based on a 
custom query and data is partitioned based on the ``firstName`` and 
``lastName`` fields. 

**Example Request**

.. code-block:: json

   curl --user "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest \
   --header "Content-Type: application/json" \
   --include \
   --request POST "https://cloud.mongodb.com/api/atlas/v1.0/groups/5e2211c17a3e5a48f5497de3/clusters/myTestClstr/onlineArchives?pretty=true" \
   --data '
   {
        "dbName": "people",
        "collName": "employees",
        "partitionFields": [
              {
                      "fieldName": "firstName",
                      "order": 0
              },
              {
                      "fieldName": "lastName",
                      "order": 1
              }],
        "criteria": {
              "type": "CUSTOM",
              "query": "{ \"department\": \"engineering\" }"
        }
   }'

**Example Response**

.. code-block:: json
   :copyable: false

   {
     "_id": "5f9856146b3c0c4e454b9409",
     "clusterName": "osTest",
     "collName": "employees",
     "collectionType": "STANDARD",
     "criteria": {
        "type": "CUSTOM",
        "query": "{department: engineering}"
     },
     "dbName": "people",
     "groupId": "5e2211c17a3e5a48f5497de3",
     "partitionFields": [
        {
            "fieldName": "name.firstName",
            "fieldType": null,
            "order": 0
        },
        {
            "fieldName": "name.lastName",
            "fieldType": null,
            "order": 1
        }
     ],
     "paused": false,
     "state": "PENDING"
   }

.. _api-online-archive-create-one-errors:

Error Codes 
-----------

If the request fails, it returns one of the following errors: 

.. list-table:: 
   :header-rows: 1
   :widths: 30 70

   * - Error Code
     - Description

   * - ``INVALID_GROUP_ID``
     - The specified project ID is not valid.

   * - ``CLUSTER_NOT_FOUND``
     - There is no cluster with the specified name in the specified 
       project.

   * - ``CLUSTER_DELETE_REQUESTED``
     - The cluster for the online archive is being deleted.

   * - ``ONLINE_ARCHIVE_ALREADY_EXISTS``
     - An online archive with identical settings already exists.

   * - ``NAMESPACE_HAS_ONLINE_ARCHIVE``
     - The collection has another active online archive and so, an 
       online archive with the specified criteria can't be created.

   * - ``RESOURCE_NOT_FOUND``
     - The specified archive ID is not valid.
