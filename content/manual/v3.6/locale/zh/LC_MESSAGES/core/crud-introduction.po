# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/crud-introduction.txt:3
msgid "MongoDB CRUD Introduction"
msgstr ""

#: ../source/core/crud-introduction.txt:7
msgid ""
"MongoDB stores data in the form of *documents*, which are JSON-like field "
"and value pairs. Documents are analogous to structures in programming "
"languages that associate keys with values (e.g. dictionaries, hashes, maps, "
"and associative arrays). Formally, MongoDB documents are :term:`BSON` "
"documents. BSON is a binary representation of :term:`JSON` with additional "
"type information. In the documents, the value of a field can be any of the "
"BSON data types, including other documents, arrays, and arrays of documents."
" For more information, see :doc:`/core/document`."
msgstr ""

#: ../source/core/crud-introduction.txt:19
msgid ""
"MongoDB stores all documents in :term:`collections <collection>`. A "
"collection is a group of related documents that have a set of shared common "
"indexes. Collections are analogous to a table in relational databases."
msgstr ""

#: ../source/core/crud-introduction.txt:27
msgid "Database Operations"
msgstr ""

#: ../source/core/crud-introduction.txt:30
msgid "Query"
msgstr ""

#: ../source/core/crud-introduction.txt:32
msgid ""
"In MongoDB a query targets a specific collection of documents. Queries "
"specify criteria, or conditions, that identify the documents that MongoDB "
"returns to the clients. A query may include a *projection* that specifies "
"the fields from the matching documents to return. You can optionally modify "
"queries to impose limits, skips, and sort orders."
msgstr ""

#: ../source/core/crud-introduction.txt:38
msgid ""
"In the following diagram, the query process specifies a query criteria and a"
" sort modifier:"
msgstr ""

#: ../source/core/crud-introduction.txt:43
msgid "See :doc:`/core/read-operations-introduction` for more information."
msgstr ""

#: ../source/core/crud-introduction.txt:46
msgid "Data Modification"
msgstr ""

#: ../source/core/crud-introduction.txt:48
msgid ""
"Data modification refers to operations that create, update, or delete data. "
"In MongoDB, these operations modify the data of a single :term:`collection`."
" For the update and delete operations, you can specify the criteria to "
"select the documents to update or remove."
msgstr ""

#: ../source/core/crud-introduction.txt:53
msgid ""
"In the following diagram, the insert operation adds a new document to the "
"``users`` collection."
msgstr ""

#: ../source/core/crud-introduction.txt:58
msgid "See :doc:`/core/write-operations-introduction` for more information."
msgstr ""

#: ../source/core/crud-introduction.txt:62
msgid "Related Features"
msgstr ""

#: ../source/core/crud-introduction.txt:65
msgid ":doc:`Indexes </indexes>`"
msgstr ""

#: ../source/core/crud-introduction.txt:67
msgid ""
"To enhance the performance of common queries and updates, MongoDB has full "
"support for secondary indexes. These indexes allow applications to store a "
"*view* of a portion of the collection in an efficient data structure. Most "
"indexes store an ordered representation of all values of a field or a group "
"of fields. Indexes may also :ref:`enforce uniqueness <index-type-unique>`, "
"store objects in a :doc:`geospatial representation </applications"
"/geospatial-indexes>`, and facilitate :doc:`text search </core/index-text>`."
msgstr ""

#: ../source/core/crud-introduction.txt:78
msgid ":doc:`Replica Set Read Preference </core/read-preference>`"
msgstr ""

#: ../source/core/crud-introduction.txt:80
msgid ""
"For replica sets and sharded clusters with replica set components, "
"applications specify :ref:`read preferences <replica-set-read-preference>`. "
"A read preference determines how the client directs read operations to the "
"set."
msgstr ""

#: ../source/core/crud-introduction.txt:86
msgid ":doc:`Write Concern </core/write-concern>`"
msgstr ""

#: ../source/core/crud-introduction.txt:88
msgid ""
"Applications can also control the behavior of write operations using "
":ref:`write concern <write-concern>`. Particularly useful for deployments "
"with replica sets, the write concern semantics allow clients to specify the "
"assurance that MongoDB provides when reporting on the success of a write "
"operation."
msgstr ""

#: ../source/core/crud-introduction.txt:95
msgid ":doc:`Aggregation </aggregation>`"
msgstr ""

#: ../source/core/crud-introduction.txt:97
msgid ""
"In addition to the basic queries, MongoDB provides several data aggregation "
"features. For example, MongoDB can return counts of the number of documents "
"that match a query, or return the number of distinct values for a field, or "
"process a collection of documents using a versatile stage-based data "
"processing pipeline or map-reduce operations."
msgstr ""
