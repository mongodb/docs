===================================
Get All Projects in an Organization
===================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. include:: /includes/api-requirements.rst

.. include:: /includes/api-base-url-new.rst

Resource
--------

.. code-block:: http

   GET /orgs/{ORG-ID}/groups

Request Parameters
------------------

Request Path Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :widths: 20 20 60
   :header-rows: 1
   :stub-columns: 1

   * - Path Element
     - Type
     - Description

   * - ORG-ID

     - Required.

     - The unique identifier for the
       :ref:`organization <organizations>` whose information you want 
       to retrieve.

Request Query Parameters
~~~~~~~~~~~~~~~~~~~~~~~~

The following query parameters are optional:

.. list-table::
  :widths: 10 10 70 10
  :header-rows: 1
  :stub-columns: 1

  * - Name
    - Type
    - Description
    - Default

  * - ``pageNum``
    - integer
    - Page number (1-based).
    - ``1``

  * - ``itemsPerPage``
    - integer
    - Number of items to return per page, up to a maximum of 500.
    - ``100``

  * - ``pretty``
    - boolean
    - Displays response in a `prettyprint <https://en.wikipedia.org/wiki/Prettyprint?oldid=791126873>`_ format.
    - ``false``

  * - ``envelope``
    - boolean
    - Specifies whether or not to wrap the response in an :ref:`envelope <api-envelope>`.
    - ``false``

  * - ``name``
    - string
    - Filters results based on the specified project name. Performs
      a case-insensitive search for a project within the organization
      which exactly matches the specified ``name``.

      .. example::

         If you specify a ``name`` query parameter of ``project1``,
         |service| returns the project named ``project1``, but would
         not return a project named ``project123``.
    - None

Request Body Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/no-body-parameters.rst

Response
--------

.. include:: /includes/get-all-note.rst

If you set the query element ``envelope`` to ``true``, the response is wrapped
by the ``content`` object.

The HTTP response returns a JSON document that includes the following objects:

.. list-table::
   :header-rows: 1
   :widths: 25 75

   * - Name
     - Description

   * - ``clusterCount``
     - The number of |service| clusters deployed in the project.

   * - ``created``
     - The ISO-8601-formatted timestamp of when |service| created 
       the project.

   * - ``id``
     - The unique identifier of the project. You can use this value
       for populating the ``{GROUP-ID}`` parameter of other
       |service| API endpoints.

   * - ``links``
     - An array of documents. Contains a 
       :ref:`link <api-linking>` to the following resource:

       - ``/api/atlas/v1.0/groups/{GROUP-ID}/``

         A self-referential link to the project.

   * - ``name``
     - The name of the project. You can use this value for populating
       the ``{GROUP-NAME}`` parameter of the 
       :doc:`/groups/byName/{GROUP-NAME} 
       </reference/api/project-get-one-by-name>` endpoint.

   * - ``orgId``
     - The unique identifier of the |service| organization to which
       the project belongs.

Example Request
---------------

.. code-block:: shell

   curl --user "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest --include \
     --header "Accept: application/json" \
     --header "Content-Type: application/json" \
     --request GET "https://cloud.mongodb.com/api/atlas/v1.0/orgs/{ORG-ID}/groups"


Example Response
----------------

.. code-block:: json

   {
    "links": [
        {
            "href": "https://cloud.mongodb.com/api/atlas/v1.0/orgs/5a0a1e7e0f2912c554080adc/groups?pageNum=1&itemsPerPage=100",
            "rel": "self"
        }
    ],
    "results": [
        {
            "clusterCount": 1,
            "created": "2018-02-02T00:32:31Z",
            "id": "5ad645d4806d0119d6b35638",
            "links": [
                {
                    "href": "https://cloud.mongodb.com/api/atlas/v1.0/groups/5ad645d4806d0119d6b35638",
                    "rel": "self"
                }
            ],
            "name": "Production",
            "orgId": "5a0a1e7e0f2912c554080adc"
        },
        {
            "clusterCount": 1,
            "created": "2017-02-06T17:59:05Z",
            "id": "5ad645d4806d0119d6b35639",
            "links": [
                {
                    "href": "https://cloud.mongodb.com/api/atlas/v1.0/groups/5ad645d4806d0119d6b35639",
                    "rel": "self"
                }
            ],
            "name": "Staging",
            "orgId": "5a0a1e7e0f2912c554080adc"
        }
    ],
    "totalCount": 2
   }
