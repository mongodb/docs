.. _arch-center-hasura-fintech-services:

==============================================
MongoDB and Hasura for Modern Fintech Services
==============================================

.. meta:: 
   :keywords: [Keywords related to the solution]
   :description: Leverage agentic RAG using MongoDB and Dataworkz to enhance customersâ€™ shopping experiences with a personalized chatbot.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Build secure, high-performance fintech applications with MongoDB and
Hasura Data Delivery Network, featuring real-time data access and
regulatory support.

- **Use cases:** `App Driven-Analytics <https://www.mongodb.com/collateral/application-driven-analytics>`__, 
  `Payments <https://www.mongodb.com/solutions/use-cases/payments>`__, 
  `Fraud Prevention <http://mongodb.com/solutions/industries/financial-services/fraud-prevention>`__, 
  `Personalization <https://www.mongodb.com/solutions/use-cases/personalization>`__, 
  `Modernization <https://www.mongodb.com/resources/solutions/use-cases/application-modernization>`__, 
  `Single View <https://www.mongodb.com/solutions/use-cases/single-view>`__

- **Industries:** `Financial Services <https://www.mongodb.com/solutions/industries/financial-services>`__

- **Products and tools:** `MongoDB Atlas <https://www.mongodb.com/products/platform/atlas-database>`__, 
  `MongoDB Kafka Connector <https://www.mongodb.com/docs/kafka-connector/current/>`__, 
  `Atlas Vector Search <https://www.mongodb.com/products/platform/atlas-vector-search>`__

- **Partners:** `Hasura <https://cloud.mongodb.com/ecosystem/hasura>`__

Solution Overview
------------------

The fintech sector is rapidly transforming, driven by technological innovation, evolving
customer needs, and regulatory changes. This dynamic landscape creates both opportunities
and challenges for financial services providers:

- A high volume of real-time transactions requiring millisecond-level processing.
- Complex data relationships spanning customer profiles, financial instruments, and
  privacy issues.
- Strict regulatory compliance requirements with geographical data residency concerns.
- Need for scalable and flexible systems that can adapt to spikes in volume and new
  product offerings.
- Real-time analytics capabilities for risk assessment and fraud detection.

We present a reference architecture using Hasura DDN (Data Delivery Network) with
|service-fullname| to address these challenges. This combination offers a powerful,
flexible, and scalable solution for modern fintech applications.

Hasura DDN is a universal data access layer for next-gen apps and AI. It lets teams
effortlessly build and deploy a fast, secure, and federated API layer on all their data.

|service-fullname| is a leading fully managed cloud database service known for its flexible
document model, horizontal scalability through sharding, and performance optimizations
that support the demanding requirements of financial applications. Together, they create a
foundation that accelerates innovation while maintaining the security and reliability
essential to financial services.

Reference Architectures
-----------------------

The Hasura DDN with MongoDB reference architecture provides a comprehensive framework for
building modern fintech applications that can handle high transaction volumes while
maintaining data integrity, security, and regulatory compliance.

*The diagram below illustrates the multi-regional deployment of Hasura DDN with MongoDB
clusters, showing how fintech client applications connect through a global load balancer
to distributed data nodes with centralized authentication, analytics, compliance, and
external service integration.*

.. figure:: /includes/images/industry-solutions/hasura-fintech-architecture.png
    :alt: Hasura DDN with MongoDB architecture diagram

    Figure 1. Hasura DDN with MongoDB architecture diagram

This architecture diagram shows the key components and their interactions within the
reference implementation. Fintech client applications connect through a global load
balancer to multiple Hasura DDN regions, which in turn interact with MongoDB clusters
deployed across different geographical regions. The architecture also incorporates
centralized authentication and access control, AI and analytics capabilities, global
compliance and security measures, and integration with external financial services.

Key components of the architecture:

- **Data layer:** MongoDB clusters for primary data storage.
- **API and access layer:** Hasura DDN for data access and real-time subscriptions.
- **Application layer:** Fintech services and applications.
- **Security layer:** Authentication and authorization services.
- **Analytics layer:** Data processing and |ml| services.

Data Model Approach
-------------------

The MongoDB data model for this fintech architecture leverages the document-based
structure to address the unique requirements of financial applications. The flexible
schema design allows fintech organizations to adapt quickly to new financial products or
regulatory requirements without disruptive schema migrations. For optimal performance, the
model employs strategic decisions around data organization.

.. code-block:: json
   :copyable: true
  
  // Example Customer Document with Embedded Account Information
  {
    "_id": ObjectId("5f8a7b2b9d3b2e5a7c8b4567"),
    "customerId": "C10045678",
    "customerInfo": {
      "name": "Jane Smith",
      "contactDetails": {
        "email": "jane.smith@example.com",
        "phone": "+1-555-123-4567",
        // PII fields can utilize MongoDB's field-level encryption
      },
      "kycStatus": "verified",
      "riskProfile": "moderate"
    },
    "accounts": [
      {
        "accountId": "A200387645",
        "accountType": "savings",
        "balance": 45678.92,
        "currency": "USD",
        "status": "active",
        "createdDate": ISODate("2022-03-15T10:30:00Z")
      },
      {
        "accountId": "A200456789",
        "accountType": "investment",
        "balance": 125000.00,
        "currency": "USD",
        "status": "active",
        "createdDate": ISODate("2022-08-22T14:45:00Z")
      }
    ]
  }

This model implements key approaches mentioned in the document: using MongoDB's flexible
schema for financial product adaptation, supporting sharding strategies for high-volume
data (potentially sharding by customer ID or date ranges for time-series transaction
data), and leveraging MongoDB's storage capabilities for performance optimization. The
structure also facilitates the role-based access control (RBAC) and field-level security
mentioned in the Security and Governance section.

Building the Solution
---------------------

The implementation of the Hasura DDN with MongoDB architecture for fintech applications
follows a strategic approach focused on security, performance, and scalability. Building
this solution requires careful consideration of how the MongoDB data layer interacts with
the Hasura DDN API layer while ensuring that authentication, security policies, and
compliance requirements are properly addressed.

The solution should be deployed in multiple geographic regions to support global financial
operations, with MongoDB clusters configured for high availability using replica sets and
appropriate sharding strategies based on financial data access patterns. Hasura DDN
instances should be positioned close to their respective MongoDB clusters to minimize
latency for real-time financial transactions and market data updates. The centralized
authentication and access control layer ensures consistent policy enforcement across all
regions, while the AI and analytics layer enables advanced capabilities like fraud
detection and risk assessment.

Organizations implementing this architecture should adopt an incremental approach,
starting with specific financial use cases like trading platforms or personalized banking,
and gradually expanding to cover more complex scenarios. The solution can accommodate both
new fintech startups building from scratch and established financial institutions
transitioning from legacy systems through the API-first modernization approach described
in the reference architecture.

For those interested in exploring anti-money laundering (AML) use cases more in depth, we
recommend checking out the `Axiom repository
<https://github.com/hasura/axiom?tab=readme-ov-file#-aml-demo-in-action>`__, which
provides a comprehensive demonstration of implementing AML solutions using this
architecture.

Note: While the API querying functionality will work as documented, setting up PromptQL
locally requires additional steps not covered in the repository. You can access the
PromptQL playground via this link:
`https://promptql.console.hasura.io/public/aml/playground
<https://promptql.console.hasura.io/public/aml/playground>`__.

Key Learnings
-------------
Implementing the Hasura DDN with MongoDB architecture for fintech applications reveals
several important insights that organizations should consider:

1. **Distributed data architecture drives performance:** The combination of MongoDB's distributed
clusters with Hasura DDN's regional deployment model enables financial institutions to
achieve the microsecond-level latency required for trading platforms and high-frequency
transaction processing while maintaining data consistency across global operations.

2. **Security must be multi-layered:** Effective security in fintech applications requires both
centralized and decentralized approaches. The hybrid policy management strategy leveraging
Hasura's permission systems and MongoDB's field-level security provides comprehensive
protection while maintaining flexibility for evolving regulatory requirements like GDPR,
PSD2, and MiFID II.

3. **Data model flexibility accelerates innovation:** MongoDB's schema flexibility paired with
Hasura's GraphQL API generation capabilities allows fintech without extensive
redevelopment, significantly reducing time-to-market for new offerings. 

4. **Real-time capabilities transform customer experiences:** The architecture's support for
real-time data subscriptions and complex relationship mapping enables next-generation
financial applications like personalized banking, immediate fraud detection, and
comprehensive risk assessment that leverage a complete view of customer data.

5. **Modernization can be incremental:** The API-first approach allows organizations to
gradually transition from legacy systems by creating a modern data access layer while
maintaining existing data sources, reducing risk during digital transformation initiatives
in the highly regulated financial services industry.


Technologies and Products Used
------------------------------

MongoDB Develeoper Data Platform
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- `MongoDB Atlas <https://www.mongodb.com/atlas>`__

Partner Technologies
~~~~~~~~~~~~~~~~~~~~
- `Hasura <https://hasura.io/>`__
- {+kafka+} for event streaming

Authors
-------
- Jon Mills, Hasura
- Aditi Phadke, Hasura
- Asawari Samant, Hasura
- Adam Malone, Hasura
- Kenneth Stott, Hasura
- Sebastian Rojas Arbulu, MongoDB
