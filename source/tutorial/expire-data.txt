===========================================
Expire Data from Collections by Setting TTL
===========================================

.. default-domain:: mongodb

.. versionadded:: 2.2

This document provides an introductions to MongoDB's "*time to live*"
or ":term:`TTL`" collection feature. Implemented as a special index
type, TTL collections make it possible to store data in MongoDB and
have the :program:`mongod` automatically remove data after a specified
period of time. This is ideal for some types of information like
machine generated event data, logs, and session information that only
need to persist in a database for a limited period of time.

Background
----------

Collections expire by way of a special index that keeps track of
insertion time in conjunction with a background :program:`mongod`
process that regularly removes expired :term:`documents <document>`
from the collection. You can use this feature to expire data from
:term:`replica sets <replica set>` and :term:`shard clusters
<shard cluster>`.

Use the ``expireAfterSeconds`` option to the :func:`ensureIndex
<db.collection.ensureIndex()>` method in conjunction with a TTL value
in seconds to create an expiring collection. Additionally, TTL
collections have the collection flag :collflag:`usePowerOf2Sizes` set
to support more efficient storage reuse.

Constraints
-----------

Consider the following limitations:

- the indexed field must be a date :term:`BSON type <BSON types>`. If
  the field does not have a date type, the data will not expire.

- you *cannot* create this index on the ``_id`` field, or a field that
  already has an index.

- the TTL index may not have multiple fields.

- if the field holds an array, and there are multiple date-typed
  data in the index, the document will expire when the *lowest*
  (i.e. earliest) matches the expiration threshold.

- you *cannot* use a TTL index on a capped collection, because MongoDB
  cannot remove documents from a capped collection.

.. include:: /includes/note-ttl-collection-background-timing.rst

Create Collections with a TTL
-----------------------------

To set a TTL on the collection "``log.events``" for one hour use the
following command at the :program:`mongo` shell:

.. code-block:: javascript

   db.log.events.ensureIndex( { "status": 1 }, { expireAfterSeconds: 3600 } )

MongoDB will automatically delete documents from this collection after
storing it for an hour, *if* ``status`` holds date-type information.
