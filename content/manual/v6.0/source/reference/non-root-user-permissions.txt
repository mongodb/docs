.. _non-root-user-permissions:

===================================
Configure Non-Root User Permissions
===================================

.. meta:: 
   :description: Limit the privileges of non-root users to starting, stopping, and restarting a mongod process to ensure database security.
   :keywords: on-prem, atlas

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

To maintain database security, you can limit authorized, non-root usersâ€™ 
privileges, allowing them to perform administrative 
operations without granting them full root privileges. 

This page demonstrates how to allow non-root users to start, 
stop, and restart ``mongod`` processes on Linux systems, without
allowing them access to all root user privileges. 
This procedure applies to users belonging to a non-root 
Linux group, distinct from the group under which the ``mongod`` process runs.

Before You Begin 
----------------

Install :ref:`MongoDB Community <install-mdb-community-edition>` or 
:ref:`MongoDB Enterprise <install-mdb-enterprise>`.

Considerations
--------------

.. important::

   The following procedure requires root access for the setup. Incorrect settings 
   can lead to an unresponsive system, so always test on a development environment 
   before implementing in production. Ensure you have a current backup of your data. 

- We recommend you perform this procedure while setting up a new system. If this 
  is not possible, perform the procedure during the maintenance window. 

- This procedure impacts the settings of only one local system. If you 
  are using a replica set or a sharded cluster, perform this procedure 
  in a rolling matter. Do not update all of your nodes at once. 

- This procedure works with all Linux distributions, but has only been 
  tested with CentOS 6/7, RHEL 6/7, Ubuntu 18.04, and Amazon Linux 2.

.. tabs-selector:: 

Procedure
---------

Select the tab for your system provider below.

.. tabs::

   .. tab:: systemd
      :tabid: systemd
      
      This procedure works for CentOS 7 and RHEL 7.

      .. procedure::

         .. step:: Add your new user. 
         
            .. code-block:: 
            
               adduser <user-name>
               groupadd <group-name>

         .. step:: Update the configuration file permissions. 
         
            Use the following commands to update the permissions in the 
            configuration file, found at ``/etc/mongod.conf``: 
            
            .. code-block:: 
            
               sudo chown mongod:mongod /etc/mongod.conf
               sudo chmod 600 /etc/mongod.conf
               ls -l /etc/mongod.conf
               -rw-------. 1 mongod mongod 330 Feb 27 18:43 /etc/mongod.conf
							 
            This configuration ensures that only the ``mongod`` user and root have 
            permissions to access and edit the ``mongod.conf`` file. 

         .. step:: Update the ``sudoers`` file. 

            Add the following configuration lines to the 
            `sudoers <https://www.sudo.ws/docs/man/1.8.17/sudoers.man/>`__ file 
            with `visudo <https://www.sudo.ws/docs/man/1.8.13/visudo.man/>`__:

            .. code-block:: 

               %mongod ALL =(ALL) NOPASSWD: /bin/systemctl start mongod.service, /bin/systemctl stop mongod.service, /bin/systemctl restart mongod.service
               %testuser ALL =(ALL) NOPASSWD: /bin/systemctl start mongod.service, /bin/systemctl stop mongod.service, /bin/systemctl restart mongod.service

            .. note:: 

               A syntax error in the ``sudoers`` file may affect the 
               functionality of the root user account. 

         .. step:: Confirm the non-root user's permissions. 

            Your new user now can start and stop the ``mongod`` service, but 
            cannot read the ``/etc/mongod.conf`` file.

            Have your new user run the following command to start ``mongod`` 
            and confirm that they do not receive a ``[Permission Denied]`` message: 

            .. code-block:: 

               sudo /bin/systemctl start mongod.service

            They can run a similar test using ``sudo /bin/systemctl stop mongod.service`` to
            ensure that they can stop the ``mongod`` service with no errors. 
            
            Now, have them run the following command to attempt to access the ``/etc/mongod.conf``
            file:

            .. code-block:: 

               sudo vi /etc/mongod.conf

            This command should return a ``[Permission Denied]`` message.

					     
   .. tab:: System V Init
      :tabid: system-v-init 
      
      This procedure works for CentOS 6, RHEL 6, Amazon Linux 2 and Ubuntu 18.04.  
      
      .. procedure::

         .. step:: Add your new user. 
         
            .. code-block:: 
            
               adduser <user-name>
               groupadd <group-name>

         .. step:: Update the configuration file permissions. 
         
            Use the following commands to update the permissions in the 
            configuration file, found at ``/etc/mongod.conf``: 
            
            .. code-block:: 
            
               sudo chown mongod:mongod /etc/mongod.conf
               sudo chmod 600 /etc/mongod.conf
               ls -l /etc/mongod.conf
               -rw-------. 1 mongod mongod 330 Feb 27 18:43 /etc/mongod.conf

            This configuration ensures that only the ``mongod`` user and root have 
            permissions to access and edit the ``mongod.conf`` file. 

         .. step:: Update the ``sudoers`` file. 

            Add the following configuration lines to the 
            `sudoers <https://www.sudo.ws/docs/man/1.8.17/sudoers.man/>`__ file 
            with `visudo <https://www.sudo.ws/docs/man/1.8.13/visudo.man/>`__.

            For CentOS 6, RHEL 6 and Amazon Linux 2:

            .. code-block:: 

               %mongod ALL =(ALL) NOPASSWD: /sbin/service mongod start, /sbin/service mongod stop, /sbin/service mongod restart
               %testuser ALL =(ALL) NOPASSWD: /sbin/service mongod start, /sbin/service mongod stop, /sbin/service mongod restart

            For Ubuntu 18.04:

            .. code-block:: 
 
               %mongod ALL =(ALL) NOPASSWD: /usr/sbin/service mongod start, /usr/sbin/service mongod stop, /usr/sbin/service mongod restart
               %testuser ALL =(ALL) NOPASSWD: /usr/sbin/service mongod start, /usr/sbin/service mongod stop, /usr/sbin/service mongod restart

            .. note:: 
 
               A syntax error in the ``sudoers`` file may affect the 
               functionality of the root user account. 

         .. step:: Confirm the non-root user's permissions. 

            Your new user now can start and stop the ``mongod`` service, but 
            cannot read the ``/etc/mongod.conf`` file.

            Have your new user run the following commands to start ``mongod``:

            .. code-block:: 

               sudo service mongod start

            Ensure that they receive the following confirmation in the shell:
            
            .. code-block:: 
               :copyable: false

                Starting mongod:                                      [  OK  ]

            They can run a similar test using ``sudo service mongod stop`` to
            ensure that they can stop the ``mongod`` service with no errors. 

            Now, have them run the following command to attempt to access the 
            ``/etc/mongod.conf`` file:

            .. code-block:: 

               sudo vi /etc/mongod.conf

            This command should return a ``[Permission Denied]`` message. 