========================
dropAllRolesFromDatabase
========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. dbcommand:: dropAllRolesFromDatabase

   Deletes all :ref:`user-defined <user-defined-roles>` roles
   on the database where you run the command.

   .. warning::

      The :dbcommand:`dropAllRolesFromDatabase` removes *all*
      :ref:`user-defined <user-defined-roles>` roles from the database.

   The :dbcommand:`dropAllRolesFromDatabase` command takes the following
   form:

   .. code-block:: javascript

      {
        dropAllRolesFromDatabase: 1,
        writeConcern: { <write concern> }
      }

   The command has the following fields:


   .. list-table::
      :header-rows: 1
      :widths: 20 20 80
   
      * - Field
   
        - Type
   
        - Description
   
      * - ``dropAllRolesFromDatabase``
   
        - integer
   
        - Specify ``1`` to drop all :ref:`user-defined <user-defined-roles>`
          roles from the database where the command is run.
          
          
   
      * - ``writeConcern``
   
        - document
   
        - Optional. The level of :doc:`write concern </reference/write-concern>` for the
          removal operation. The ``writeConcern`` document takes the same
          fields as the :dbcommand:`getLastError` command.
          
          
   


Required Access
---------------

.. include:: /includes/access-drop-role.rst

Example
-------

The following operations drop all :ref:`user-defined
<user-defined-roles>` roles from the ``products`` database:

.. code-block:: javascript

   use products
   db.runCommand(
      {
        dropAllRolesFromDatabase: 1,
        writeConcern: { w: "majority" }
      }
   )

The ``n`` field in the results document reports the number of roles
dropped:

.. code-block:: javascript

   { "n" : 4, "ok" : 1 }
