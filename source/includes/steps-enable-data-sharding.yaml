title: "Click the ellipsis menu."
stepnum: 1
level: 4
ref: enable-ellipsis-menu
content: |


---
title: "Select :guilabel:`Manage Sharding`. "
stepnum: 2
level: 4
ref: enable-manage-sharding
content: |

   The Sharding tab displays.

---
title: "Click :guilabel:`Manage Sharding`."
stepnum: 3
level: 4
ref: manage-sharding-button
content: |


---
title: "Click :guilabel:`Import Sharding Info` to manage sharded collections on existing sharded clusters."
stepnum: 4
level: 4
ref: import-clusters
content: |

   Imports any existing sharded collections and zones.

---
title: "If the import is successful, click :guilabel:`Review and Deploy`."
stepnum: 5
level: 4
ref: import-success
content: |


---
title: "Troubleshoot any failed imports. (Optional)"
stepnum: 6
level: 4
ref: import-fail
content: |

   There are a few possible errors that could happen when importing
   sharded collections.

   Overlapping ranges 
      |mms| does not support overlapped defined ranges.

      .. example::

         A compound shard key may appear to have overlapped ranges when
         it does not. This example explains the difference.

         A simple compound shard key is comprised of two integers with
         values between 1 and 10. The chunk ranges for a collection
         where each chunk is approximately 64 MB are:

         .. list-table::
            :header-rows: 1
            :widths: 50,50

            * - min
              - max
            * - [$min, $min]
              - [1, 8]
            * - [1,8]
              - [3,1]
            * - [3,1]
              - [5,2]
            * - [5,2]
              - [5,10]
            * - [5,10]
              - [7,3]
            * - [7,3]
              - [$max,$max]

         The ranges are based on the two values *combined* (or
         compound) and *not* each value individually. The second value
         goes up and down in each chunk, but the combination always
         increases from minimum to maximum.

      You can use the mongo shell to resolve this issue on the database
      directly.

      1. Check the :manual:`status of the shard ranges </reference/method/sh.status>`.

      2. Review the ranges for possible overlap.

      3. :manual:`Remove a Tag from the Shard Key Range </reference/method/sh.removeShardTag>`.

      4. :manual:`Add a new Tag to a Shard Key Range </reference/method/sh.addTagRange>`.

   Data type mismatch
      For each range, |mms| requires the minimum and maximum values of
      each field in a shard key to be the same BSON data type. A
      compound shard key in a range can use a different BSON type for
      each field in the key. |mms| verifies this when the sharded
      collections are imported and when ranges are created.

      .. note::
         The :guilabel:`Min` key and :guilabel:`Max` key are different
         data types and are the only exception to not mixing BSON data
         types in the range.

      You can use the mongo shell to resolve this issue on the database
      directly.

      1. Check the :manual:`status of the shard ranges </reference/method/sh.status>`.

      2. :ref:`check-types-in-shell` for the minimum and maximum values.

      3. :manual:`Remove a Tag from the Shard Key Range </reference/method/sh.removeShardTag>`.

      4. :manual:`Add a new Tag to a Shard Key Range </reference/method/sh.addTagRange>`.

   Data type invalid
      The minimum and maximum values for a range can only use eight BSON
      data types:

      * String
      * Integer
      * Double
      * Long
      * Date
      * Timestamp
      * ObjectId
      * MinKey / MaxKey

      .. seealso::
         Review information on the data types in the 
         `BSON specification <http://bsonspec.org/spec.html>`_.

      You can use the mongo shell to resolve this issue on the database
      directly.

      1. Check the :manual:`status of the shard ranges </reference/method/sh.status>`.

      2. :ref:`check-types-in-shell` for the minimum and maximum values.

      3. :manual:`Remove a Tag from the Shard Key Range </reference/method/sh.removeShardTag>`.

      4. :manual:`Add a new Tag to a Shard Key Range </reference/method/sh.addTagRange>`.

---
title: "Review your Changes."
stepnum: 7
level: 4
ref: enable-review-changes
content: |

   * If the changes are acceptable, click :guilabel:`Confirm and Deploy`.
   * If the changes need to be revised, click :guilabel:`Cancel` and
     return to Step 1.

...