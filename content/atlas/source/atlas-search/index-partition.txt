.. _fts-index-partition:

=========================
Configure Index Partition 
=========================

.. default-domain:: mongodb

.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: atlas search, index partition
   :description: Partition the Atlas Search index to support more index objects.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

For indexing, |fts| counts each document as a single index object when
it isn't nested inside another document. For embedded documents, |fts|
counts each embedded document as additional index objects depending on
the number of levels of nesting. |fts| stops replicating changes for
indexes larger than 2,100,000,000 index objects. 

If you deployed |fts| on separate search nodes, you can increase the
number of |fts| index objects by partitioning your index. By
default, |fts| supports one partition per shard. Each partition supports
up to 2 billion index objects. You can create an index with up to four
(``4``) partitions by using the ``numPartitions`` option. These
partitions represent a single index with support for up to 8B documents
per cluster or shard. 

When you configure partitions for your index, |fts| automatically
distributes the index objects between the partitions in an optimal way.
When you run queries against a collection with index partitions, |fts|
scatters the queries to all the partitions and gathers the search
results and metadata to sort, merge, and return the results. 

We recommend partitioning your index when:

- Your index objects reach 50% of the total limit.
- The number of documents in your collection reaches two billion.
- Your index will contain up to eight billion documents.
- Your index is in the ``STALE`` state because |fts| stopped
  replication. 

When you configure partitions or modify the number of partitions,
|fts| triggers a rebuild of your index.

If you have more than one partition in your {+cluster+}, you can't
remove all the search nodes and migrate to a deployment model where both
the ``mongod`` and ``mongot`` processes run on the same node.

Syntax 
~~~~~~

.. code-block:: json 
   :copyable: true
   :linenos: 

   { 
     "numPartitions": <integer>
   }

Supported Values 
~~~~~~~~~~~~~~~~

The |fts| ``numPartitions`` option takes the following values: 

- ``1`` - to create a single index, with no additional partitions. This
  is the default value.
- ``2`` - to create up to two partitions for up to four billion documents. 
- ``4`` - to create up to four partitions for up to eight billion documents. 

Example 
~~~~~~~

The following index example uses the ``sample_mflix.movies`` collection
to demonstrate how to configure up to ``4`` partitions for the data in
the collection. You can use the Visual Editor or the |json| Editor in
the {+atlas-ui+} and :ref:`other supported clients
<fts-about-indexing>` to create the index.  

.. tabs-selector:: drivers

----------

.. |arrow| unicode:: U+27A4

|arrow| Use the **Select your language** drop-down menu to set the 
client of the example in this section.

----------


.. |search-type| replace:: :guilabel:`Atlas Search`
.. |index-name| replace:: ``partitioned_index``
.. |database-name| replace:: ``sample_mflix`` database
.. |collection-name| replace:: ``movies`` collection

.. tabs-drivers::

   .. tab::
      :tabid: atlas-cli

      a. Create a file named ``indexDef.json`` similar to the following: 

         .. literalinclude:: /includes/fts/index-partitions/acli-index-def.json
            :copyable:

      #. Run the following command to create the index.

         .. literalinclude:: /includes/fts/index-partitions/acli-example.sh
            :language: shell
            :copyable:

   .. tab::
      :tabid: atlas-api

      .. literalinclude:: /includes/fts/index-partitions/api-example.sh
         :language: shell
         :copyable:

   .. tab::
      :tabid: atlas-ui

      .. procedure:: 
         :style: normal 

         .. include:: /includes/nav/steps-db-deployments-page.rst

         .. include:: /includes/nav/steps-atlas-search.rst

         .. include:: /includes/nav/steps-configure-index.rst

         .. step:: Specify the index definition.

            .. tabs:: 

               .. tab:: Visual Editor 
                  :tabid: vib 

                  a. Click :guilabel:`Refine Your Index`. 

                  #. Toggle :guilabel:`Index Partitions` to enable it.
                  #. Select ``4`` from the :guilabel:`Number of partitions` dropdown
                     and click :guilabel:`Save Changes`.

               .. tab:: JSON Editor
                  :tabid: jib

                  a. Replace the default index definition with the following: 

                     .. literalinclude:: /includes/fts/index-partitions/atlas-ui-example.json
                        :language: json
                        :copyable:

                  #. Click :guilabel:`Next`.

         .. include:: /includes/fts/search-index-management/procedures/steps-fts-finish-index-creation.rst

   .. tab::
      :tabid: shell

      .. literalinclude:: /includes/fts/index-partitions/mongosh-example.sh
         :language: json
         :copyable:

   .. tab::
      :tabid: nodejs

      .. literalinclude:: /includes/fts/index-partitions/nodejs-example.js
         :language: javascript
         :copyable:

   .. tab::
      :tabid: csharp

      .. literalinclude:: /includes/fts/index-partitions/csharp-example.cs
         :language: csharp
         :copyable:

   .. tab::
      :tabid: java-sync

      .. literalinclude:: /includes/fts/index-partitions/example.java
         :language: java
         :copyable:

   .. tab::
      :tabid: python

      .. literalinclude:: /includes/fts/index-partitions/example.py 
         :language: python
         :copyable: