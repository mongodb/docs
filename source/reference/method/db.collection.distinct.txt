========================
db.collection.distinct()
========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. method:: db.collection.distinct(field, query, options)

   Finds the distinct
   values for a specified field across a single collection or view and returns
   the results in an array.

   .. include:: /includes/apiargs/method-db.collection.distinct-param.rst

   The :method:`db.collection.distinct()` method provides a wrapper
   around the :dbcommand:`distinct` command.

   .. include:: /includes/note-distinct-bson-limit-agg-alternative.rst

.. _distinct-method-options:

Options
-------

.. code-block:: javascript

   { collation: <document> }

.. include:: /includes/apiargs/method-db.collection.distinct-options-param.rst

Behavior
--------

In a :term:`sharded cluster`, the :dbcommand:`distinct` command may return
:term:`orphaned documents <orphaned document>`.

.. _distinct-method-behavior-array:

Array Fields
~~~~~~~~~~~~

.. include:: /includes/extracts/fact-distinct-method-array-field.rst

For an example, see :ref:`distinct-method-array`.

Index Use
~~~~~~~~~

.. include:: /includes/extracts/fact-distinct-method-index-use.rst


Examples
--------

The examples use the ``inventory`` collection that contains the
following documents:

.. code-block:: javascript

   { "_id": 1, "dept": "A", "item": { "sku": "111", "color": "red" }, "sizes": [ "S", "M" ] }
   { "_id": 2, "dept": "A", "item": { "sku": "111", "color": "blue" }, "sizes": [ "M", "L" ] }
   { "_id": 3, "dept": "B", "item": { "sku": "222", "color": "blue" }, "sizes": "S" }
   { "_id": 4, "dept": "A", "item": { "sku": "333", "color": "black" }, "sizes": [ "S" ] }

Return Distinct Values for a Field
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following example returns the distinct values for the field
``dept`` from all documents in the ``inventory`` collection:

.. code-block:: javascript

   db.inventory.distinct( "dept" )

The method returns the following array of distinct ``dept`` values:

.. code-block:: javascript

   [ "A", "B" ]

Return Distinct Values for an Embedded Field
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following example returns the distinct values for the field
``sku``, embedded in the ``item`` field, from all documents in the
``inventory`` collection:

.. code-block:: javascript

   db.inventory.distinct( "item.sku" )

The method returns the following array of distinct ``sku`` values:

.. code-block:: javascript

   [ "111", "222", "333" ]

.. seealso:: :ref:`document-dot-notation` for information on accessing fields
   within embedded documents

.. _distinct-method-array:

Return Distinct Values for an Array Field
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following example returns the distinct values for the field
``sizes`` from all documents in the ``inventory`` collection:

.. code-block:: javascript

   db.inventory.distinct( "sizes" )

The method returns the following array of distinct ``sizes`` values:

.. code-block:: javascript

   [ "M", "S", "L" ]

For information on :method:`~db.collection.distinct()` and array
fields, see the :ref:`Behavior <distinct-method-behavior-array>` section.

Specify Query with ``distinct``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following example returns the distinct values for the field
``sku``, embedded in the ``item`` field, from the documents whose
``dept`` is equal to ``"A"``:

.. code-block:: javascript

   db.inventory.distinct( "item.sku", { dept: "A" } )

The method returns the following array of distinct ``sku`` values:

.. code-block:: javascript

   [ "111", "333" ]

Specify a Collation
~~~~~~~~~~~~~~~~~~~

.. include:: /includes/extracts/collation-versionadded.rst

A collection ``myColl`` has the following documents:

.. code-block:: javascript

   { _id: 1, category: "caf√©", status: "A" }
   { _id: 2, category: "cafe", status: "a" }
   { _id: 3, category: "cafE", status: "a" }

The following aggregation operation includes the :ref:`collation`
option:

.. code-block:: javascript

   db.myColl.distinct( "category", {}, { collation: { locale: "fr", strength: 1 } } )

For descriptions on the collation fields, see
:ref:`collation-document-fields`.

