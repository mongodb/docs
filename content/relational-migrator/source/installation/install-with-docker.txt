.. _rm-install-docker:

===================
Install with Docker
===================

.. meta::
   :description: Install and run Relational Migrator as a Docker container, ensuring an OS-independent and easily replicable setup process.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

You can install and run {+rel-mig+} as a Docker container. 
Running {+rel-mig+} with Docker ensures an installation process 
that is both independent of the operating system and straightforward 
to replicate.

.. note::

   This deployment method is intended as an easy way to evaluate {+rel-mig+} and
   is not recommended for production workloads.
   
   For information about deploying {+rel-mig+} in production, see the 
   :ref:`Production Installation Guide <unattended-server>`.

About this Task
---------------

You can also use `Docker Compose <https://docs.docker.com/compose/>`__ 
to run {+rel-mig+}. You can find a Docker Compose example file
in the 
`download center <https://www.mongodb.com/try/download/relational-migrator>`__.
If you use Docker Compose, you must set environment variables
for ``MIGRATOR_PATH_DATA`` to the local path for the data volume mount 
and ``MIGRATOR_PATH_DRIVER`` to the path of the JAR file with the 
JDBC drivers.

Before you Begin
----------------

Install `Docker <https://docs.docker.com/install/>`__

Procedure
---------

.. procedure::
   :style: normal

   .. step:: Pull the MongoDB Docker Image
      
      .. code-block:: sh

         docker pull public.ecr.aws/v4d7k6c9/relational-migrator:latest

   .. step:: Run the Image as a Container
      
      The tabs below show various docker commands that are useful for 
      running {+rel-mig+}:

      .. tabs::

         .. tab:: Basic
            :tabid: basic-run

            The ``-p 8080:8080`` in this command maps the container port to the host port.
            This allows you to connect to {+rel-mig+} by browsing to 
            `<http://localhost:8080>`__:

            .. code-block:: sh

               docker run --name mongodb-relational-migrator -p 8080:8080 public.ecr.aws/v4d7k6c9/relational-migrator:latest

         .. tab:: Persist Data Directory
            :tabid: logging-directory

            The following command makes the project files and logs 
            persistent even if the container is stopped:

            .. code-block:: sh

               docker run --name mongodb-relational-migrator -p 8080:8080 -v c:\temp\migdocker\data:/root/Migrator  public.ecr.aws/v4d7k6c9/relational-migrator:latest

         .. tab:: Map a Jar File
            :tabid: map-jar

            The following command maps a single jar file that contains a
            JDBC driver to the container. This is useful for Oracle and 
            MySQL migration projects because those drivers are not included
            with {+rel-mig+} by default:

            .. code-block:: sh

               docker run --name mongodb-relational-migrator -p 8080:8080 -v C:\Temp\migdocker\drivers\ojdbc11.jar:/opt/mongodb-relational-migrator/lib/app/lib/driver.jar  public.ecr.aws/v4d7k6c9/relational-migrator:latest

      .. note:: Override a Config Setting

         You can specify a configuration setting to override in the 
         Docker command. For example, consider disabling telemetry with
         the following command:

         .. code-block:: bash

            docker run --name mongodb-relational-migrator -p 8080:8080 -e MIGRATOR_APP_TELEMETRY_ENABLE=false public.ecr.aws/v4d7k6c9/relational-migrator:latest

   .. step:: Check that the Container is Running

      To check the status of your Docker container, run the following 
      command:

      .. code-block:: sh

         docker container ls

      The output from the ``ls`` command lists the following fields that 
      describe the running container:

      - ``Container ID``
      - ``Image``
      - ``Command``
      - ``Created``
      - ``Status``
      - ``Port``
      - ``Names`` 

      .. code-block:: sh
         :copyable: false

         CONTAINER ID   IMAGE                                              COMMAND                  CREATED         STATUS         PORTS                    NAMES
         82b1f8adca43 public.ecr.aws/v4d7k6c9/relational-migrator:latest   "/opt/mongodb-relatiâ€¦"   46 seconds ago   Up 44 seconds 0.0.0.0:8080->8080/tcp   pedantic_kirch

   .. step:: Open the application

      To view the application, navigate to: `<http://localhost:8080>`__.

      .. note::

         If you changed the port number in the ``docker run`` command, 
         you also need to change the port in the url above.

Next Steps
----------

- :ref:`rm-database-connections`
