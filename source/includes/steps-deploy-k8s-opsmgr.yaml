---
ref: configure-kubectl-om
stepnum: 1
inherit:
  file: steps-configure-kubectl-namespace.yaml
  ref: configure-kubectl-namespace
---
title: "Copy the following example |onprem| |k8s| |k8s-obj|."
stepnum: 2
level: 4
ref: copy-k8s-example
content: |

   Change the highlighted settings to match your desired
   |onprem| configuration.

   .. literalinclude:: /reference/k8s/example-opsmgr-minimal.yaml
      :language: yaml
      :linenos:
      :emphasize-lines: 5,7-11,13,15,17-19,21,23-25,27-31,34,38-39

---
title: "Open your preferred text editor and paste the |k8s-obj| specification into a new text file."
stepnum: 3
level: 4
ref: paste-k8s-example
---
title: "Configure the settings highlighted in the prior example."
stepnum: 4
level: 4
ref: change-k8s-values
content: |

   .. list-table::
      :widths: 20 20 40 20
      :header-rows: 1

      * - Key
        - Type
        - Description
        - Example

      * - :opsmgrkube:`metadata.name`
        - string
        - Name for this |k8s| |onprem| |k8s-obj|.

          .. seealso::

             - :opsmgrkube:`metadata.name`
             - |k8s| documentation on :k8sdocs:`names </concepts/overview/working-with-objects/names/>`.

        - ``om``

      * - :opsmgrkube:`spec.replicas`
        - number
        - Number of |onprem| instances to run in parallel.

          The minimum valid value is ``1``.

          .. include:: /includes/admonitions/note-highly-available-om.rst

        - ``1``

      * - :opsmgrkube:`spec.version`
        - string
        - Version of |onprem| to be installed.

          The format should be :manual:`X.Y.Z </reference/versioning>`.
          To view available |onprem| versions, view the
          `container registry <https://quay.io/repository/mongodb/mongodb-enterprise-ops-manager?tag=latest&tab=tags>`__.
        - ``4.2.0``

      * - :opsmgrkube:`spec.adminCredentials`
        - string
        - Name of the |k8s-secret| you :ref:`created <om-rsrc-prereqs>`
          for the |onprem| admin user.

          .. note::

             Configure the secret to use the same |k8s-ns| as the |onprem|
             resource.
             
        - ``om-admin-secret``

      * - | ``spec``
          | ``.backup``
          | ``.``:opsmgrkube:`~spec.backup.enabled`
        - boolean
        - | Flag that indicates that Backup is enabled for your |onprem| resource.
          | You must specify ``spec.backup.enabled: true`` to configure
            settings for the head database, oplog store, and snapshot
            store. 
        - ``true``

      * - | ``spec``
          | ``.backup``
          | ``.opLogStores``
          | ``.``:opsmgrkube:`~spec.backup.opLogStores.name`
        - string
        - Name of the oplog store.
        - ``oplog1``

      * - | ``spec``
          | ``.backup``
          | ``.opLogStores``
          | ``.mongodbRef``
          | ``.``:opsmgrkube:`~spec.backup.opLogStores.mongodbResourceRef.name`
        - string
        - Name of the MongoDB database resource for the oplog store.
        - ``my-oplog-db``

      * - | ``spec``
          | ``.backup``
          | ``.s3Stores``
          | ``.``:opsmgrkube:`~spec.backup.s3Stores.name`
        - string
        - Name of the |s3| snapshot store.
        - ``s3store1``

      * - | ``spec``
          | ``.backup``
          | ``.s3Stores``
          | ``.mongodbResourceRef``
          | ``.``:opsmgrkube:`~spec.backup.s3Stores.mongodbResourceRef.name`
        - string
        - Name of the MongoDB database resource for the |s3| snapshot
          store metadata.
        - ``my-s3-metadata-db``

      * - | ``spec``
          | ``.backup``
          | ``.s3Stores``
          | ``.s3SecretRef``
          | ``.``:opsmgrkube:`~spec.backup.s3Stores.s3SecretRef.name`
        - string
        - Name of the |k8s-secret| that contains the ``accessKey`` and
          ``secretKey`` fields. The :ref:`backup-daemon` uses the values
          of these fields as credentials to
          access the |s3| or |s3|-compatible bucket.
        - ``my-s3-credentials``

      * - | ``spec``
          | ``.backup``
          | ``.s3Stores``
          | ``.``:opsmgrkube:`~spec.backup.s3Stores.s3BucketEndpoint`
        - string
        - |url| of the |s3| or |s3|-compatible bucket that
          :opsmgr:`stores </tutorial/manage-s3-blockstore-storage>` the
          database Backup snapshots.
        - ``s3.us-east-1.amazonaws.com``

      * - | ``spec``
          | ``.backup``
          | ``.s3Stores``
          | ``.``:opsmgrkube:`~spec.backup.s3Stores.s3BucketName`
        - string
        - Name of the |s3| or |s3|-compatible bucket that stores the 
          database Backup snapshots.
        - my-bucket

      * - | ``spec``
          | ``.externalConnectivity``
          | ``.``:opsmgrkube:`~spec.externalConnectivity.type`
        - string
        - *Optional*.

          The |k8s| service :k8sdocs:`ServiceType 
          </concepts/services-networking/service/#publishing-services-service-types>` 
          that exposes |onprem| outside of |k8s|.

          .. note::

             Exclude the ``spec.``:opsmgrkube:`~spec.externalConnectivity`
             setting and its children if you don't want the 
             |k8s-op-short| to create a |k8s| service to route external 
             traffic to the |onprem| application.


        - ``LoadBalancer``        

      * - | ``spec``
          | ``.applicationDatabase`` 
          | ``.``:setting:`~spec.members`
        - integer
        - Number of members of the :ref:`mms-application-database`
          replica set.
        - ``3``

      * - | ``spec``
          | ``.applicationDatabase``
          | ``.``:opsmgrkube:`~spec.applicationDatabase.version`
        - string
        - *Optional*.
          
          Version of MongoDB that the :ref:`mms-application-database`
          should run.
          
          The format should be ``X.Y.Z`` for the Community edition and
          ``X.Y.Z-ent`` for the :product:`Enterprise edition 
          </mongodb-enterprise-advanced>`.

          .. include:: /includes/admonitions/note-deploy-om-offline.rst

          To learn more about MongoDB versioning, see see
          :ref:`release-version-numbers` in the MongoDB Manual.
        - ``4.0.7``

      * - | ``spec``
          | ``.applicationDatabase``
          | ``.``:setting:`~spec.persistent`
        - boolean
        - *Optional.*

          Flag indicating if this |k8s-mdbrsc| should use |k8s-pvs| for
          storage. Persistent volumes are not deleted when the
          |k8s-mdbrsc| is stopped or restarted.

          If this value is ``true``, then
          ``spec.applicationDatabase.podSpec.persistence.``
          :setting:`~spec.podSpec.persistence.single`
          is set to its default value of ``16G``.

          To change your |k8s-pvcs| configuration, configure the
          following collections to meet your deployment requirements:

          - If you want one |k8s-pv| for each |k8s-pod|, configure the
            ``spec.applicationDatabase.``
            :setting:`~spec.podSpec.persistence.single` collection.

          - If you want separate |k8s-pvs| for data, journals, and
            logs for each |k8s-pod|, configure the following
            collections:

            - | ``spec.applicationDatabase``
              | ``.podSpec.persistence.multiple.``
              | :setting:`~spec.podSpec.persistence.multiple.data`
            - | ``spec.applicationDatabase``
              | ``.podSpec.persistence.multiple.``
              | :setting:`~spec.podSpec.persistence.multiple.journal`
            - | ``spec.applicationDatabase``
              | ``.podSpec.persistence.multiple.``
              | :setting:`~spec.podSpec.persistence.multiple.logs`

          .. include:: /includes/admonitions/k8s-persistent-volumes-om.rst

        - ``true``

---
title: "(Optional) Configure any additional settings for an |onprem| deployment."
stepnum: 5
level: 4
ref: add-k8s-values
content: |
  
  You can add any of the following optional settings to the
  |k8s-obj| specification file for an |onprem| deployment:

  - ``spec.``:opsmgrkube:`~spec.clusterDomain`
  - ``spec.``:opsmgrkube:`~spec.configuration`

    .. include:: /includes/admonitions/mms-centralurl-external-mdb.rst

  - ``spec.applicationDatabase.``:setting:`~spec.logLevel`
  - ``spec.applicationDatabase.``:setting:`~spec.featureCompatibilityVersion`
  - ``spec.applicationDatabase.podSpec.``:setting:`~spec.podSpec.cpu`
  - ``spec.applicationDatabase.podSpec.``:setting:`~spec.podSpec.cpuRequests`
  - ``spec.applicationDatabase.podSpec.``:setting:`~spec.podSpec.memory`
  - ``spec.applicationDatabase.podSpec.``:setting:`~spec.podSpec.memoryRequests`
  - ``spec.applicationDatabase.podSpec.persistence.``:setting:`~spec.podSpec.persistence.single`
  - ``spec.applicationDatabase.podSpec.persistence.multiple.``:setting:`~spec.podSpec.persistence.multiple.data`
  - ``spec.applicationDatabase.podSpec.persistence.multiple.``:setting:`~spec.podSpec.persistence.multiple.journal`
  - ``spec.applicationDatabase.podSpec.persistence.multiple.``:setting:`~spec.podSpec.persistence.multiple.logs`
  - ``spec.applicationDatabase.podSpec.``:setting:`~spec.podSpec.podAffinity`
  - ``spec.applicationDatabase.podSpec.``:setting:`~spec.podSpec.podAntiAffinityTopologyKey`
  - ``spec.applicationDatabase.podSpec.``:setting:`~spec.podSpec.nodeAffinity`
  - ``spec.applicationDatabase.passwordSecretKeyRef.``:opsmgrkube:`~spec.applicationDatabase.passwordSecretKeyRef.name`
  - ``spec.applicationDatabase.passwordSecretKeyRef.``:opsmgrkube:`~spec.applicationDatabase.passwordSecretKeyRef.key`
  - ``spec.backup.``:opsmgrkube:`~spec.backup.headDB` ``.labelSelector``
  - ``spec.backup.``:opsmgrkube:`~spec.backup.headDB` ``.storage``
  - ``spec.backup.``:opsmgrkube:`~spec.backup.headDB` ``.storageClass``
  - ``spec.backup.opLogStores.mongodbUserRef.``:opsmgrkube:`~spec.backup.opLogStores.mongodbUserRef.name`
  - ``spec.backup.s3Stores.mongodbUserRef.``:opsmgrkube:`~spec.backup.s3Stores.mongodbUserRef.name`
  - ``spec.backup.s3Stores.``:opsmgrkube:`~spec.backup.s3Stores.pathStyleAccessEnabled`
  - ``spec.externalConnectivity.``:opsmgrkube:`~spec.externalConnectivity.port`
  - ``spec.externalConnectivity.``:opsmgrkube:`~spec.externalConnectivity.loadBalancerIP`
  - ``spec.externalConnectivity.``:opsmgrkube:`~spec.externalConnectivity.externalTrafficPolicy`
  - ``spec.externalConnectivity.``:opsmgrkube:`~spec.externalConnectivity.annotations`

---
title: "Save this file with a ``.yaml`` file extension."
stepnum: 6
level: 4
ref: save-object-spec

---
title: "Create your |onprem| instance."
stepnum: 7
level: 4
ref: start-k8s-instance
content: |

   Invoke the following ``kubectl`` command on the filename of the
   |onprem| resource definition:

   .. code-block:: sh

      kubectl apply -f <opsmgr-resource>.yaml

---
title: "Track the status of your |onprem| instance."
stepnum: 8
level: 4
ref: track-k8s-instance
content: |

  To check the status of your |onprem| resource, invoke the following 
  command:

  .. code-block:: sh

     kubectl get om -o yaml -w

  The command returns the following output under the ``status`` field
  while the resource deploys:
  
  .. code-block:: yaml
     :copyable: false

     status:
      applicationDatabase:
       lastTransition: "2019-11-15T19:48:01Z"
       message: AppDB Statefulset is not ready yet
       phase: Reconciling
       type: ""
       version: ""
      opsManager:
       lastTransition: "2019-11-15T19:48:01Z"
       message: Ops Manager is still starting
       phase: Reconciling
       version: ""

  After the resource completes the ``Reconciling`` phase, the command
  returns the following output under the ``status`` field: 

  .. code-block:: yaml
     :copyable: false

      status:
        applicationDatabase:
          lastTransition: "2019-12-06T18:23:22Z"
          members: 3
          phase: Running
          type: ReplicaSet
          version: 4.0.7
        opsManager:
          lastTransition: "2019-12-06T18:23:26Z"
          message: The MongoDB object namespace/oplogdbname doesn't exist
          phase: Pending
          url: http://om-svc.dev.svc.cluster.local:8080
          version: ""

  The |application| remains in a ``Pending`` state until you configure
  the Backup databases.
  
  .. tip::
    
     The ``status.opsManager.url`` field states the resource's
     connection |url|. Using this |url|, you can reach |onprem| from
     inside the |k8s| cluster or :ref:`create a project using a
     ConfigMap <create-k8s-project>`.

---
title: "Access the |onprem| application."
stepnum: 9
level: 4
ref: access-opsmgr-instance
content: |

  The steps you take differ based on how you are routing traffic to the 
  |onprem| application in |k8s|. If you configured the |k8s-op-short| to 
  create a |k8s| service for you, or you created a |k8s| service 
  manually, use one of the following methods to access the |onprem| 
  application:

  .. tabs::

     .. tab:: External Traffic Routes Using LoadBalancer Service
        :tabid: om-loadbalancer-svc-access

        a. Query your cloud provider to get the |fqdn| of the load
           balancer service. See your cloud provider's documentation
           for details.

        #. Open a browser window and navigate to the |onprem| 
           application using the |fqdn| and port number of your load 
           balancer service.
     
           .. code-block:: sh
              :copyable: false
        
              http://ops.example.com:8080
  
        #. Log in to |onprem| using the :ref:`admin user credentials 
           <om-rsrc-prereqs>`. 

     .. tab:: External Traffic Routed Using NodePort Service
        :tabid: om-nodeport-svc-access

        a. Set your firewall rules to allow access from the Internet to 
           the ``spec.externalConnectivity.``:opsmgrkube:`~spec.externalConnectivity.port` 
           on the host on which your |k8s| cluster is running.
    
        #. Open a browser window and navigate to the |onprem| 
           application using the |fqdn| and the 
           ``spec.externalConnectivity.``:opsmgrkube:`~spec.externalConnectivity.port`.

           .. code-block:: sh
              :copyable: false

              http://ops.example.com:30036
        
        #. Log in to |onprem| using the :ref:`admin user credentials <om-rsrc-prereqs>`.

  To learn how to access the |onprem| application using a third-party 
  service, refer to the documentation for your solution.
  
---
title: "Create credentials for the Kubernetes Operator."
stepnum: 10
level: 4
ref: create-credentials
content: |

  To configure credentials, you must create an |onprem| organization,
  generate programmatic API keys, and create a |k8s-secret|. These
  activities follow the prerequisites and procedure on the
  :ref:`create-k8s-credentials` page.

---
title: "Create a project using a |k8s-configmap|."
stepnum: 11
level: 4
ref: create-project
content: |

  To create a project, follow the prerequisites and procedure on the
  :ref:`create-k8s-project` page.

  You must set ``data.baseUrl`` in the ConfigMap to the |application|\'s |url|. To find this |url|, invoke the following command:

  .. code-block:: sh

     kubectl get om -o yaml -w

  The command returns the URL of the |application| in the
  ``status.opsManager.url`` field.

  .. code-block:: yaml
     :copyable: false
     :emphasize-lines: 12

      status:
        applicationDatabase:
          lastTransition: "2019-12-06T18:23:22Z"
          members: 3
          phase: Running
          type: ReplicaSet
          version: 4.0.7
        opsManager:
          lastTransition: "2019-12-06T18:23:26Z"
          message: The MongoDB object namespace/oplogdbname doesn't exist
          phase: Pending
          url: http://om-svc.dev.svc.cluster.local:8080
          version: ""

  .. include:: /includes/admonitions/data-url-config-map-external-dbs.rst

---
title: "Deploy MongoDB database resources to complete the Backup configuration."
stepnum: 12
level: 4
ref: configure-backup
content: |

  By default, |onprem| enables :ref:`mms-backup-functional-overview`.
  Create a MongoDB database resource for the oplog and snapshot stores
  to complete the configuration.

  a. Deploy a :ref:`MongoDB database resource    
     <k8s-deploy-mdb-resources>` for the oplog store in the same
     namespace as the |onprem| resource.
     
     .. note:: 

        Create this database as a three-member :ref:`replica set
        <deploy-replica-set>`.

     Match the ``metadata.name`` of the resource with the
     :opsmgrkube:`spec.backup.opLogStores.mongodbResourceRef.name` that you specified
     in your |onprem| resource definition.

  #. Deploy a :ref:`MongoDB database resource    
     <k8s-deploy-mdb-resources>` for the |s3| snapshot store in the
     same namespace as the |onprem| resource.

     .. note::
        
        Create the |s3| snapshot store as a replica set.

     Match the ``metadata.name`` of the resource to the
     :opsmgrkube:`spec.backup.s3Stores.mongodbResourceRef.name`
     that you specified in your |onprem| resource definition. 
     
---
title: "Confirm that the |onprem| resource is running."
stepnum: 13
level: 4
ref: confirm-running
content: |

  To check the status of your |onprem| resource, invoke the following 
  command:

  .. code-block:: sh

     kubectl get om -o yaml -w

  When the |onprem| is running, the command returns the following output
  under the ``status`` field: 
  
  .. code-block:: yaml
     :copyable: false

     status:
       applicationDatabase:
         lastTransition: "2019-12-06T17:46:15Z"
         members: 3
         phase: Running
         type: ReplicaSet
         version: 4.0.7
       opsManager:
         lastTransition: "2019-12-06T17:46:32Z"
         phase: Running
         replicas: 1
         url: http://om-backup-svc.dev.svc.cluster.local:8080
         version: 4.2.0

  See :doc:`/reference/troubleshooting` for information about the resource
  deployment statuses.
...
