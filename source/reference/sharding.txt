.. _sharding-reference:

==================
Sharding Reference
==================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Sharding Methods in ``mongosh``
-------------------------------

.. list-table::
   :widths: 30,70
   :header-rows: 1

   * - Name

     - Description

   * - :method:`sh.abortMoveCollection()`

     - .. include:: /includes/command/abortMoveCollection.rst 

   * - :method:`sh.abortReshardCollection()`

     - Aborts a :ref:`resharding operation <sharding-resharding>`.

       .. versionadded:: 5.0

   * - :method:`sh.addShard()`

     - Adds a :term:`shard` to a sharded cluster.

   * - :method:`sh.addShardTag()`

     - This method aliases to :method:`sh.addShardToZone()`.

   * - :method:`sh.addShardToZone()`

     - Associates a shard to a zone. Supports configuring :ref:`zones <zone-sharding>` in sharded clusters.

   * - :method:`sh.addTagRange()`

     - This method aliases to :method:`sh.updateZoneKeyRange()`.

   * - :method:`sh.balancerCollectionStatus()`

     - Returns information on whether the chunks of a sharded
       collection are balanced.

   * - :method:`sh.commitReshardCollection()`

     - Forces a :ref:`resharding operation <sharding-resharding>` to
       block writes and complete.

       .. versionadded:: 5.0

   * - :method:`sh.disableBalancing()`

     - Disable balancing on a single collection in a sharded database. Does not affect balancing of other collections in a sharded cluster.

   * - :method:`sh.enableAutoMerger()`

     - .. include:: /includes/enableAutoMerger.rst
   
       .. versionadded:: 7.0
       
   * - :method:`sh.enableBalancing()`

     - Activates the sharded collection balancer process if previously disabled using :method:`sh.disableBalancing()`.

   * - :method:`sh.disableAutoMerger()`

     - .. include:: /includes/disableAutoMerger.rst
   
       .. versionadded:: 7.0

   * - :method:`sh.disableAutoSplit()`

     - Disables auto-splitting for the sharded cluster.

       .. include:: /includes/autosplit-no-operation.rst

   * - :method:`sh.enableAutoSplit()`

     - Enables auto-splitting for the sharded cluster.

       .. include:: /includes/autosplit-no-operation.rst

   * - :method:`sh.enableSharding()`

     - Creates a database.

   * - :method:`sh.getBalancerState()`

     - Returns a boolean to report if the :term:`balancer` is currently enabled.

   * - :method:`sh.getShardedDataDistribution()`

     - .. include:: /includes/sharding/getShardedDataDistribution-shell-helper-method-summary.rst

   * - :method:`sh.removeTagRange()`

     - This method aliases to :method:`sh.removeRangeFromZone()`.

   * - :method:`sh.removeRangeFromZone()`

     - Removes an association between a range of shard keys and a zone. Supports configuring :ref:`zones <zone-sharding>` in sharded clusters.

   * - :method:`sh.help()`

     - Returns help text for the ``sh`` methods.

   * - :method:`sh.isBalancerRunning()`

     - Returns a document describing the status of the balancer.

   * - :method:`sh.moveChunk()`

     - Migrates a :term:`chunk` in a :term:`sharded cluster`.

   * - :method:`sh.moveCollection()`

     - Moves a single unsharded collection to a different shard.

   * - :method:`sh.removeShardTag()`

     - This method aliases to :method:`sh.removeShardFromZone()`.

   * - :method:`sh.removeShardFromZone()`

     - Removes the association between a shard and a zone. Use to manage :ref:`zone sharding <zone-sharding>`.

   * - :method:`sh.reshardCollection()`

     - Initiates a :ref:`resharding operation <sharding-resharding>` to change the
       shard key for a collection, changing the distribution of your data.

       .. versionadded:: 5.0

   * - :method:`sh.setBalancerState()`

     - Enables or disables the :term:`balancer` which migrates :term:`chunks <chunk>` between :term:`shards <shard>`.

   * - :method:`sh.shardCollection()`

     - Enables sharding for a collection.

   * - :method:`sh.splitAt()`

     - Divides an existing :term:`chunk` into two chunks using a specific value of the :term:`shard key` as the dividing point.

   * - :method:`sh.splitFind()`

     - Divides an existing :term:`chunk` that contains a document matching a query into two approximately equal chunks.

   * - :method:`sh.startAutoMerger()`

     - .. include:: /includes/startAutoMerger.rst

       .. versionadded:: 7.0

   * - :method:`sh.startBalancer()`

     - Enables the :term:`balancer` and waits for balancing to start.

   * - :method:`sh.status()`

     - Reports on the status of a :term:`sharded cluster`, as :method:`db.printShardingStatus()`.

   * - :method:`sh.stopAutoMerger()`

     - .. include:: /includes/stopAutoMerger.rst

       .. versionadded:: 7.0

   * - :method:`sh.stopBalancer()`

     - Disables the :term:`balancer` and waits for any in progress balancing rounds to complete.

   * - :method:`sh.waitForBalancer()`

     - Internal. Waits for the balancer state to change.

   * - :method:`sh.waitForBalancerOff()`

     - Internal. Waits until the balancer stops running.

   * - :method:`sh.waitForPingChange()`

     - Internal. Waits for a change in ping state from one of the :binary:`~bin.mongos` in the sharded cluster.

   * - :method:`sh.updateZoneKeyRange()`

     - Associates a range of shard keys to a zone. Supports configuring :ref:`zones <zone-sharding>` in sharded clusters.

   * - :method:`convertShardKeyToHashed()`

     - Returns the hashed value for the input.


Sharding Database Commands
--------------------------

The following database commands support :term:`sharded clusters
<sharded cluster>`.

.. list-table::
   :widths: 30,70
   :header-rows: 1

   * - Name

     - Description

   * - :dbcommand:`abortMoveCollection`

     - .. include:: /includes/command/abortMoveCollection.rst

   * - :dbcommand:`abortReshardCollection`

     - Aborts a :ref:`resharding operation <sharding-resharding>`.

       .. versionadded:: 5.0

   * - :dbcommand:`addShard`

     - Adds a :term:`shard` to a :term:`sharded cluster`.

   * - :dbcommand:`addShardToZone`

     - Associates a shard with a :term:`zone`. Supports configuring :ref:`zones <zone-sharding>` in sharded clusters.

   * - :dbcommand:`balancerCollectionStatus`

     - Returns information on whether the chunks of a sharded
       collection are balanced.

   * - :dbcommand:`balancerStart`

     - Starts a balancer thread.

   * - :dbcommand:`balancerStatus`

     - Returns information on the balancer status.

   * - :dbcommand:`balancerStop`

     - Stops the balancer thread.

   * - :dbcommand:`clearJumboFlag`

     - Clears the ``jumbo`` flag for a chunk.

   * - :dbcommand:`cleanupReshardCollection`

     - Cleans up a failed :ref:`resharding operation <sharding-resharding>`.

       .. versionadded:: 5.0

   * - :dbcommand:`commitReshardCollection`

     - Forces a :ref:`resharding operation <sharding-resharding>` to
       block writes and complete.

       .. versionadded:: 5.0

   * - :dbcommand:`enableSharding`

     - Enables sharding on a specific database.

   * - :dbcommand:`flushRouterConfig`

     - Forces a :binary:`mongod` / :binary:`mongos` instance to update its cached routing metadata.

   * - :dbcommand:`getShardMap`

     - Internal command that reports on the state of a sharded cluster.

   * - :dbcommand:`isdbgrid`

     - Verifies that a process is a :binary:`~bin.mongos`.

   * - :dbcommand:`listShards`

     - Returns a list of configured shards.

   * - :dbcommand:`moveChunk`

     - Internal command that migrates chunks between shards.

   * - :dbcommand:`moveCollection`

     - Moves a single unsharded collection to a different shard.

   * - :dbcommand:`movePrimary`

     - Reassigns the :term:`primary shard` when removing a shard from a sharded cluster.
   
   * - :dbcommand:`moveRange`

     - Command that migrates ranges between shards.

   * - :dbcommand:`mergeChunks`

     - Provides the ability to combine chunks on a single shard.

   * - :dbcommand:`removeShard`

     - Starts the process of removing a shard from a sharded cluster.

   * - :dbcommand:`removeShardFromZone`

     - Removes the association between a shard and a :term:`zone`. Supports configuring :ref:`zones <zone-sharding>` in sharded clusters.

   * - :dbcommand:`reshardCollection`

     - Initiates a :ref:`resharding operation <sharding-resharding>` to change the
       shard key for a collection, changing the distribution of your data.

       .. versionadded:: 5.0

   * - :dbcommand:`shardCollection`

     - Enables the sharding functionality for a collection, allowing the collection to be sharded.

   * - :dbcommand:`shardingState`

     - Reports whether the :binary:`~bin.mongod` is a member of a sharded cluster.

   * - :dbcommand:`split`

     - Creates a new :term:`chunk`.

   * - :dbcommand:`unsetSharding`

     - *Removed in MongoDB 5.0.* Internal command that affects
       connections between instances in a MongoDB deployment.

   * - :dbcommand:`updateZoneKeyRange`

     - Adds or removes the association between a range of sharded data and a :term:`zone`. Supports configuring :ref:`zones <zone-sharding>` in sharded clusters.


Reference Documentation
-----------------------

:ref:`Operational Restrictions <sharding-fundamentals>`
   Requirement for deploying a sharded cluster

:ref:`sharding-high-availability`
   Common strategies for troubleshooting sharded cluster deployments.

:ref:`config-database`
   Complete documentation of the content of the ``local`` database
   that MongoDB uses to store sharded cluster metadata.


.. toctree::
   :titlesonly: 
   :hidden: 

   /reference/config-database
   /core/defragment-sharded-collections
   /reference/inconsistency-type
   Operational Restrictions </core/sharded-cluster-requirements>
   /tutorial/troubleshoot-sharded-clusters
   Shard Direct Commands </reference/supported-shard-direct-commands>
