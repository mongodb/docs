.. meta::
   :keywords: IOT

.. facet::
   :name: genre
   :values: reference

.. _manual-timeseries-collection-limitations:

==================================
Time Series Collection Limitations
==================================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

:ref:`Time series collections <manual-timeseries-collection>` generally
behave like regular collections with several limitations.

Unsupported Features
~~~~~~~~~~~~~~~~~~~~~

MongoDB does not support the following features with time series collections:

* :atlas:`Atlas Search </atlas-search>`
* :ref:`Change streams <changeStreams>`
* :ref:`{+csfle+} <manual-csfle-feature>`
* :appservices:`Database Triggers </triggers/database-triggers>`
* :appservices:`GraphQL API (deprecated) </graphql>`
* :ref:`Schema validation rules <schema-validation-overview>`
* :dbcommand:`reIndex`
* :dbcommand:`renameCollection`

Aggregation $merge
~~~~~~~~~~~~~~~~~~

You cannot use the :pipeline:`$merge` aggregation stage to add data from
another collection to a time series collection. Use the :pipeline:`$out`
aggregation stage to write documents to a time series collection. 

You can use :pipeline:`$merge` to move data from a time series
collection to another collection.

.. _timeseries-limitation-distinct:

distinct Command
~~~~~~~~~~~~~~~~

.. include:: /includes/time-series/timeseries-distinct-command.rst


Geospatial Queries
~~~~~~~~~~~~~~~~~~

.. include:: /includes/time-series/fact-time-series-geodata.rst

.. _timeseries-limitations-doc-size:

Document Size
~~~~~~~~~~~~~

The maximum size for documents within a time series collection is 4 MB.

Extended Date Range
~~~~~~~~~~~~~~~~~~~

.. include:: /includes/time-series-ttl-deletes.rst

For details on TTL deletes, see :ref:`ttl-collections`.

If your time series collection contains  documents with ``timeField``
timestamps before ``1970-01-01T00:00:00.000Z`` or after
``2038-01-19T03:14:07.000Z``, create an index on the ``timeField`` to
optimize queries.  

.. _timeseries-limitations-updates:

Updates
~~~~~~~

Update commands must meet the following requirements:

.. include:: /includes/time-series/fact-update-limitations.rst

To automatically delete old data, :ref:`set up automatic removal (TTL)
<set-up-automatic-removal>`.

.. _timeseries-limitations-secondary-indexes:

Time Series Secondary Indexes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB partially supports the following indexes on time series collections:
 
- You can only create :ref:`multikey indexes <index-type-multikey>` on
  the ``metaField``.
- You can only create :ref:`2d indexes <2d-index>` on the ``metaField``. 
- You can only create :ref:`sparse indexes <index-type-sparse>` on the ``metaField``.

MongoDB doesn't support the following index types on time series collections:

- :ref:`Text indexes <index-type-text>`
- :ref:`Unique indexes <index-type-unique>`

.. include:: /includes/time-series-secondary-indexes-downgrade-FCV.rst

Capped Collections
~~~~~~~~~~~~~~~~~~

You cannot create a time series collection as a :ref:`capped collection
<manual-capped-collection>`.

Modification of Collection Type
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You can only set the collection type when you create a collection:

- You cannot convert an existing collection into a time series
  collection.
- You cannot convert a time series collection into a different
  collection type.

To move data from an existing collection to a time series collection,
:ref:`migrate data into a time series collection
<migrate-data-into-a-timeseries-collection>`.

Modification of ``timeField`` and ``metaField``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You can only set a collection's ``timeField`` and ``metaField``
parameters when you create the collection. You cannot modify these
parameters later.

.. _timeseries-limitations-granularity:

Granularity
~~~~~~~~~~~

Bucket Size
```````````
For any configuration of granularity parameters, the maximum
size of a bucket is 1000 measurements or 125KB of data,
whichever is lower. MongoDB may also enforce a lower maximum size for 
high cardinality data with many unique values, so that the working set 
of buckets fits within the :ref:`WiredTiger cache <storage-wiredtiger>`.

Modifying Bucket Parameters
```````````````````````````

Once you set a collection's ``granularity`` or the custom bucketing
parameters ``bucketMaxSpanSeconds`` and ``bucketRoundingSeconds``, you
can increase the time span covered by a bucket, but not decrease it.
Use the :dbcommand:`collMod` command to modify the parameters. For example:

.. code-block:: javascript

   db.runCommand({
      collMod: "timeseries",
      timeseries: { bucketMaxSpanSeconds: 3600, bucketRoundingSeconds: 3600 }
   })
   
.. note::

   ``bucketMaxSpanSeconds`` and ``bucketRoundingSeconds`` must be
   equal. If you modify one parameter, you must also set the other to
   the same value.

.. _time-series-limitations-sharding:

Sharding
~~~~~~~~

Time series collections are subject to several sharding limitations. 

Sharding Administration Commands 
````````````````````````````````

You cannot run sharding administration commands on sharded time series 
collections. 

Shard Key Fields
````````````````

.. include:: /includes/time-series/fact-shard-key-limitations.rst

.. include:: /includes/time-series/timeseries-timeField-deprecated.rst

Resharding
``````````

You cannot reshard a sharded time series collection. However, you can 
:ref:`refine its shard key <shard-key-refine>`.

Transactions
~~~~~~~~~~~~

You cannot write to time series collections in :ref:`transactions
<transactions>`.

.. note::

  MongoDB supports reads from time series collections in transactions.

Views
~~~~~

- Time series collections are writable non-materialized :ref:`views
  <views-landing-page>`. Limitations for views apply to time series
  collections.

- You cannot create a view from a time series bucket collection
  namespace (namely, a collection prefixed with ``system.buckets``).

Snapshot Isolation
~~~~~~~~~~~~~~~~~~

Read operations on time series collections with read concern
``"snapshot"`` guarantee snapshot isolation only in the absence of
concurrent drop or rename operations on collections in the read
operation. Re-creating a time series collection on the same namespace
with different granularity setting does not yield full snapshot
isolation.