# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/crud-introduction.txt:3
# 4543a754589348b49158f2cb4f03dcbb
msgid "MongoDB CRUD Introduction"
msgstr ""

#: ../source/core/crud-introduction.txt:7
# 8adc3403e70147d5b06e0d06ec35fb7b
msgid "MongoDB stores data in the form of *documents*, which are JSON-like field and value pairs. Documents are analogous to structures in programming languages that associate keys with values (e.g. dictionaries, hashes, maps, and associative arrays). Formally, MongoDB documents are :term:`BSON` documents. BSON is a binary representation of :term:`JSON` with additional type information. In the documents, the value of a field can be any of the BSON data types, including other documents, arrays, and arrays of documents. For more information, see :doc:`/core/document`."
msgstr ""

#: ../source/core/crud-introduction.txt:19
# 19f0fcf6fa00491b91c66838894f4603
msgid "MongoDB stores all documents in :term:`collections <collection>`. A collection is a group of related documents that have a set of shared common indexes. Collections are analogous to a table in relational databases."
msgstr ""

#: ../source/core/crud-introduction.txt:27
# edaa4d7cd96f42f19ef96f19c0ebf4fb
msgid "Database Operations"
msgstr ""

#: ../source/core/crud-introduction.txt:30
# 34b53b8d1c4d4adb8237fdd478827fd5
msgid "Query"
msgstr ""

#: ../source/core/crud-introduction.txt:32
# 01317e03c7f34c0c953ed30442fab648
msgid "In MongoDB a query targets a specific collection of documents. Queries specify criteria, or conditions, that identify the documents that MongoDB returns to the clients. A query may include a *projection* that specifies the fields from the matching documents to return. You can optionally modify queries to impose limits, skips, and sort orders."
msgstr ""

#: ../source/core/crud-introduction.txt:38
# b1e26b8341ef437f9f045195e9d5da1e
msgid "In the following diagram, the query process specifies a query criteria and a sort modifier:"
msgstr ""

#: ../source/core/crud-introduction.txt:43
# 9210fead5ae2459b90172680b315be87
msgid "See :doc:`/core/read-operations-introduction` for more information."
msgstr ""

#: ../source/core/crud-introduction.txt:46
# 5cf2167c24fb4244acb7f56e460cf21e
msgid "Data Modification"
msgstr ""

#: ../source/core/crud-introduction.txt:48
# c00dcd783cd54b56a1a4169ebd83bb27
msgid "Data modification refers to operations that create, update, or delete data. In MongoDB, these operations modify the data of a single :term:`collection`. For the update and delete operations, you can specify the criteria to select the documents to update or remove."
msgstr ""

#: ../source/core/crud-introduction.txt:53
# 053b36d023544ace91215f7f1c412642
msgid "In the following diagram, the insert operation adds a new document to the ``users`` collection."
msgstr ""

#: ../source/core/crud-introduction.txt:58
# 2fa97001eaf5477c96999f4d0e0c70bf
msgid "See :doc:`/core/write-operations-introduction` for more information."
msgstr ""

#: ../source/core/crud-introduction.txt:62
# db00b137e90944c3bb6efdd68495e816
msgid "Related Features"
msgstr ""

#: ../source/core/crud-introduction.txt:65
# 70de8790d5914c74a54c42a2c4d5c24e
msgid ":doc:`Indexes </indexes>`"
msgstr ""

#: ../source/core/crud-introduction.txt:67
# 7dcaff2d52f84b4782311bba355dac4c
msgid "To enhance the performance of common queries and updates, MongoDB has full support for secondary indexes. These indexes allow applications to store a *view* of a portion of the collection in an efficient data structure. Most indexes store an ordered representation of all values of a field or a group of fields. Indexes may also :ref:`enforce uniqueness <index-type-unique>`, store objects in a :doc:`geospatial representation </applications/geospatial-indexes>`, and facilitate :doc:`text search </core/index-text>`."
msgstr ""

#: ../source/core/crud-introduction.txt:78
# 2cc87edc8a8c44c09db5633796728e9d
msgid ":doc:`Replica Set Read Preference </core/read-preference>`"
msgstr ""

#: ../source/core/crud-introduction.txt:80
# a6457038a2e445518e81cc7490795cc1
msgid "For replica sets and sharded clusters with replica set components, applications specify :ref:`read preferences <replica-set-read-preference>`. A read preference determines how the client direct read operations to the set."
msgstr ""

#: ../source/core/crud-introduction.txt:86
# 73e1002d37ef4c1ab7cdd0a0b73871a3
msgid ":doc:`Write Concern </core/write-concern>`"
msgstr ""

#: ../source/core/crud-introduction.txt:88
# 2ebad73cb0d34940902a804248e8aeb9
msgid "Applications can also control the behavior of write operations using :ref:`write concern <write-concern>`. Particularly useful for deployments with replica sets, the write concern semantics allow clients to specify the assurance that MongoDB provides when reporting on the success of a write operation."
msgstr ""

#: ../source/core/crud-introduction.txt:95
# 8a7a412a064b45a8859b37a98418990a
msgid ":doc:`Aggregation </aggregation>`"
msgstr ""

#: ../source/core/crud-introduction.txt:97
# d44d95aa843b4d52a3f982297ced578d
msgid "In addition to the basic queries, MongoDB provides several data aggregation features. For example, MongoDB can return counts of the number of documents that match a query, or return the number of distinct values for a field, or process a collection of documents using a versatile stage-based data processing pipeline or map-reduce operations."
msgstr ""

