# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/resync-replica-set-member.txt:3
# 084a6c9c49bf4f0698cd10fc3c60a465
msgid "Resync a Member of a Replica Set"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:7
# 75e32423ef1b43e094c21f786f228b26
msgid "A :term:`replica set` member becomes \"stale\" when its replication process falls so far behind that the :term:`primary` overwrites oplog entries the member has not yet replicated. The member cannot catch up and becomes \"stale.\" When this occurs, you must completely resynchronize the member by removing its data and performing an :ref:`initial sync <replica-set-initial-sync>`."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:14
# f03338f1828f47fd85204a64578403f4
msgid "This tutorial addressed both resyncing a stale member and to creating a new member using seed data from another member. When syncing a member, choose a time when the system has the bandwidth to move a large amount of data. Schedule the synchronization during a time of low usage or during a maintenance window."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:20
# 105d237adfb141a286fabacda7289a68
msgid "MongoDB provides two options for performing an initial sync:"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:22
# 2f0ea8a7744c480c8aa215c873bcdd9a
msgid "Restart the :program:`mongod` with an empty data directory and let MongoDB's normal initial syncing feature restore the data. This is the more simple option but may take longer to replace the data."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:26
# 867bbbf9544543d292600f2711843dfe
msgid "See :ref:`replica-set-auto-resync-stale-member`."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:28
# 45306ac4cd92402a900715a35d7583a6
msgid "Restart the machine with a copy of a recent data directory from another member in the replica set. This procedure can replace the data more quickly but requires more manual steps."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:32
# 864229eda9074e908beba732055f547c
msgid "See :ref:`replica-set-resync-by-copying`."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:39
# 4cd6c8d3ab0348aaa791dcfb6e4c1593
msgid "Procedures"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:42
# c2897d97a3d1419f8cb334a1c6e0967a
msgid "Automatically Sync a Member"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:44
# 98ba4931ae1d4d5c807032ccd7747537
msgid "During initial sync, :program:`mongod` will remove the content of the :setting:`~storage.dbPath`."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:47
# 89fe5de81cc84132896f316b341cb21a
msgid "This procedure relies on MongoDB's regular process for :ref:`initial sync <replica-set-initial-sync>`. This will store the current data on the member. For an overview of MongoDB initial sync process, see the :ref:`replica-set-syncing` section."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:52
# 0d37d356c6f74785ae649c24ae7dcc17
msgid "If the instance has no data, you can simply follow the :doc:`/tutorial/expand-replica-set` or :doc:`/tutorial/replace-replica-set-member` procedure to add a new member to a replica set."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:57
# 0dc276e401824b51b906ed58db0a3e2a
msgid "You can also force a :program:`mongod` that is already a member of the set to to perform an initial sync by restarting the instance without the content of the :setting:`~storage.dbPath` as follows:"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:61
# 788c288e4d4f41aebd8049d07ed6149c
msgid "Stop the member's :program:`mongod` instance. To ensure a clean shutdown, use the :method:`db.shutdownServer()` method from the :program:`mongo` shell or on Linux systems, the :option:`mongod --shutdown` option."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:66
# 3372fa85a7a049a1b58b8126fb34f582
msgid "Delete all data and sub-directories from the member's data directory. By removing the data :setting:`~storage.dbPath`, MongoDB will perform a complete resync. Consider making a backup first."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:70
# 46d2717d82c44aeeae7a605d0a6e5654
msgid "At this point, the :program:`mongod` will perform an initial sync. The length of the initial sync process depends on the size of the database and network connection between members of the replica set."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:75
# d289c9d132594b10a748705639d9ad14
msgid "Initial sync operations can impact the other members of the set and create additional traffic to the primary and can only occur if another member of the set is accessible and up to date."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:83
# 63820c60a4194b3da4584ed430af524b
msgid "Sync by Copying Data Files from Another Member"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:85
# 1df5fdc759c64e038fa30a4a3e24fd6f
msgid "This approach \"seeds\" a new or stale member using the data files from an existing member of the replica set. The data files **must** be sufficiently recent to allow the new member to catch up with the :term:`oplog`. Otherwise the member would need to perform an initial sync."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:92
# 6681ce916ab94607aa10f6d68e46ab04
msgid "Copy the Data Files"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:94
# 3dc965d8b12e4e98a5d4c6cba7d83a79
msgid "You can capture the data files as either a snapshot or a direct copy. However, in most cases you cannot copy data files from a running :program:`mongod` instance to another because the data files will change during the file copy operation."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:99
# 73555f49397e4ad2826bb46a326e08a4
msgid "If copying data files, you must copy the content of the ``local`` database."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:102
# e627e00d82a24ec79bbc9f89c836e659
msgid "You *cannot* use a :program:`mongodump` backup for the data files, **only a snapshot backup**. For approaches to capturing a consistent snapshot of a running :program:`mongod` instance, see the :doc:`/core/backups` documentation."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:108
# a5f5427627b848a2a84f7736897db24e
msgid "Sync the Member"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:110
# ef807db7e69a4e92ad449f10cc61ed43
msgid "After you have copied the data files from the \"seed\" source, start the :program:`mongod` instance and allow it to apply all operations from the oplog until it reflects the current state of the replica set."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:34
#: ../source/tutorial/resync-replica-set-member.txt:35
#: ../source/tutorial/resync-replica-set-member.txt:79
# 21209ac5dc1246538ff45873a964a9a8
# 935ac362fa8746b7bbd4b2b51064d521
# b17ffeb4fc034579b5a27b6aefd97028
msgid "replica set"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:34
# 21209ac5dc1246538ff45873a964a9a8
msgid "sync"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:35
#: ../source/tutorial/resync-replica-set-member.txt:79
# 935ac362fa8746b7bbd4b2b51064d521
# b17ffeb4fc034579b5a27b6aefd97028
msgid "resync"
msgstr ""

