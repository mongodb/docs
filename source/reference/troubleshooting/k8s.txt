.. _k8s-troubleshooting:

=============================
|k8s-op-full| Troubleshooting
=============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol


Review the Logs
---------------

.. _review-k8s-op-logs:

Review Logs from the |k8s-op-short|
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To review the |k8s-op-short| logs, invoke this command:

.. code-block:: sh

   kubectl logs -f deployment/mongodb-enterprise-operator -n <metadata.namespace>

You could check the :doc:`Ops Manager Logs </tutorial/view-logs>` as
well to see if any issues were reported to |onprem|.

.. _review-all-k8s-logs:

Review Logs from All Pods
~~~~~~~~~~~~~~~~~~~~~~~~~

If you have an issue with your |k8s| resources, you can invoke the
following command to see logs from all |k8s-pods| in the deployment:

.. code-block:: sh

   kubectl logs deployments/<deploymentName> -n <metadata.namespace>

.. seealso::
   |k8s| documentation on `kubectl logs <https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#logs>`__.

.. _review-one-k8s-pod:

Review Logs from Specific Pod
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you want to narrow your review to a specific |k8s-pod|, you can
invoke this command:

.. code-block:: sh

   kubectl logs <podName> -n <metadata.namespace>

.. example::

   If your :term:`replica set` is labeled ``myrs``, the |k8s-pod| log
   command is invoked as:

   .. code-block:: sh

      kubectl logs myrs-0 -n <metadata.namespace>

   This returns the :ref:`Automation Agent Log <agent-logs>` for this 
   replica set.

.. _find-one-k8s-pod:

Find a Specific Pod
~~~~~~~~~~~~~~~~~~~

To find which pods are available, invoke this command first:

.. code-block:: sh

   kubectl get pods -n <metadata.namespace>

.. seealso::
   |k8s| documentation on `kubectl get <https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#get>`__.

View |k8s-mdbrsc| Specifications
--------------------------------

View All Replica Set |k8s-mdbrsc| Specifications
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To view all replica set |k8s-mdbrsc| specifications in the provided
|k8s-ns|:

.. code-block:: shell

   kubectl get mrs -n <namespace>

View All Sharded Cluster |k8s-mdbrsc| Specifications
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To view all sharded cluster |k8s-mdbrsc| specifications in the
provided |k8s-ns|:

.. code-block:: shell

   kubectl get msc -n <namespace>

View All Standalone |k8s-mdbrsc| Specifications
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To view all standalone |k8s-mdbrsc| specifications in the provided
|k8s-ns|:

.. code-block:: shell

   kubectl get mst -n <namespace>

.. example::

   To read details about the ``dublin`` standalone resource, invoke
   this command:

   .. code-block:: shell

      kubectl get mst dublin -n <namespace> -o yaml

   This returns the following response:
   
   .. code-block:: yaml
      :copyable: false

      apiVersion: mongodb.com/v1
      kind: MongoDbStandalone
      metadata:
        annotations:
          kubectl.kubernetes.io/last-applied-configuration: |
            {"apiVersion":"mongodb.com/v1","kind":"MongoDbStandalone","metadata":{"annotations":{},"name":"dublin","namespace":"mongodb"},"spec":{"credentials":"alis-credentials","persistent":false,"podSpec":{"memory":"1G"},"project":"my-om-config","version":"4.0.0-ent"}}
        clusterName: ""
        creationTimestamp: 2018-09-12T17:15:32Z
        generation: 1
        name: dublin
        namespace: mongodb
        resourceVersion: "337269"
        selfLink: /apis/mongodb.com/v1/namespaces/mongodb/mongodbstandalones/dublin
        uid: 7442095b-b6af-11e8-87df-0800271b001d
      spec:
        credentials: my-credentials
        persistent: false
        podSpec:
          memory: 1G
        project: my-om-config
        version: 4.0.0-ent

.. _remove-k8s-resource:

Remove a |k8s-mdbrsc|
---------------------

To remove any instance that |k8s| deployed, you must use |k8s|.

.. important::

   You can only use the |k8s-op-short| to remove |k8s|\-deployed
   instances. If you use |mms| to remove the instance, |mms| throws an
   error.

.. example::

   To remove a standalone MongoDB instance you created using |k8s|:

   .. code-block:: shell

      kubectl delete mongodbstandalone -n <metadata.namespace>

   To remove all MongoDB instances you created using |k8s|:

   .. code-block:: shell

      kubectl delete [mrs|msc|mst] -n <metadata.namespace>

You can refer to the |k8s-mdbrscs| by either their long or short names:

.. list-table::
   :header-rows: 1
   :widths: 40 30 30

   * - MongoDB Deployment Item
     - Resource Long Name 
     - Resource Short Name

   * - MongoDB Replica Set
     - ``mongodbreplicaset``
     - ``mrs``
   * - MongoDB Sharded Cluster
     - ``mongodbshardedclusters``
     - ``msc``
   * - MongoDB Standalone Deployment
     - ``mongodbstandalone``
     - ``mst``

.. _remove-k8s-operator:

Remove the |k8s-op-short|
--------------------------------------------------

To remove the |k8s-op-short|:

1. :ref:`Remove all Kubernetes resources <remove-k8s-resource>`:

   .. code-block:: shell

      kubectl delete [mrs|msc|mst] --all -n <metadata.namespace>

2. Remove the |k8s-op-short|:

   .. code-block:: shell

      kubectl delete deployment mongodb-enterprise-operator -n <metadata.namespace>


.. admonition:: Removing Databases after Operator was deleted
   :class: important

   If you have already removed the |k8s-op-short| but still have
   running databases, you need to remove the ``finalizer`` header from
   errant resources:

   .. code-block:: sh

      kubectl patch [mrs|msc|mst] <name> -n <metadata.namespace> \
        --type json -p='[{"op": "remove", "path": "/metadata/finalizers"}]'

This deletes all of the resources immediately.

.. _remove-k8s-namespace:

Remove the |k8s-ns|
--------------------------------------------------

To remove the |k8s-ns|:

1. :ref:`Remove all Kubernetes resources <remove-k8s-resource>`:

   .. code-block:: shell

      kubectl delete [mrs|msc|mst] --all -n <metadata.namespace>

2. Remove the |k8s-ns|:

   .. code-block:: shell

      kubectl delete namespace <metadata.namespace>

.. _remove-k8s-crds:

Remove the |k8s-crds|
---------------------

To remove the |k8s-crds|:

1. :ref:`Remove all Kubernetes resources <remove-k8s-resource>`:

   .. code-block:: shell

      kubectl delete [mrs|msc|mst] --all -n <metadata.namespace>

2. Remove the |k8s-crds|:

   .. code-block:: shell

      kubectl delete crd --all

