===========
Checkpoints
===========

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: twocols

.. include:: /includes/fact-groups-projects-synonyms.rst

This resource allows you to view :ref:`checkpoint` metadata. You can
use checkpoints to create custom snapshots of a cluster at points in
time between regular snapshots.

.. include:: /includes/admonitions/important/checkpoints-fcv-4-0-only.rst

Endpoints
---------

Get All Checkpoints
~~~~~~~~~~~~~~~~~~~

Get all checkpoints for a cluster.

.. code-block:: http

   GET /groups/{PROJECT-ID}/clusters/CLUSTER-ID/checkpoints

Get One Checkpoint
~~~~~~~~~~~~~~~~~~

Get a single checkpoint.

.. code-block:: http

   GET /groups/{PROJECT-ID}/clusters/CLUSTER-ID/checkpoints/CHECKPOINT-ID

Sample Entity
-------------

.. code-block:: json
   :linenos:

   {
     "clusterId" : "{CLUSTER-ID}",
     "completed" : "2015-07-31T23:19:51Z",
     "groupId" : "{GROUP-ID}",
     "id" : "{CHECKPOINT-ID}",
     "parts" : [ {
       "replicaSetName" : "shard_1",
       "shardName" : "shard_1",
       "tokenDiscovered" : true,
       "tokenTimestamp" : {
         "date" : "2015-07-31T23:19:51Z",
         "increment" : 1
       },
       "typeName" : "REPLICA_SET"
     }, {
       "replicaSetName" : "shard_0",
       "shardName" : "shard_0",
       "tokenDiscovered" : true,
       "tokenTimestamp" : {
         "date" : "2015-07-31T23:19:51Z",
         "increment" : 1
       },
       "typeName" : "REPLICA_SET"
     }, {
       "hostId" : "{HOST-ID}",
       "tokenDiscovered" : true,
       "tokenTimestamp" : {
         "date" : "2015-07-31T23:19:51Z",
         "increment" : 6
       },
       "typeName" : "CONFIG_SERVER"
     } ],
     "restorable" : true,
     "started" : "2015-07-31T23:19:51Z",
     "timestamp" : "2015-07-31T23:19:47Z"
   }

Entity Fields
-------------

.. list-table::
   :widths: 10 10 80
   :header-rows: 1
   :stub-columns: 1

   * - Name
     - Type
     - Description

   * - ``clusterId``
     - string
     - Unique identifier of the cluster represented by the checkpoint.

   * - ``completed``
     - string
     - |iso8601-time| for the point-in-time when the checkpoint
       completed and the balancer restarted.

   * - ``groupId``
     - string
     - Unique identifier of the group that owns the checkpoint.

   * - ``id``
     - string
     - Unique identifier of the checkpoint.

   * - ``parts``
     - array of objects
     - Individual parts that comprise the complete checkpoint. There
       will be one element for each shard plus one element for the
       config servers.

   * - | ``parts``
       | ``.replicaSetName``
     - string
     - Name of the replica set. Not present for a config server.

   * - | ``parts``
       | ``.shardName``
     - string
     - Name of the shard.

   * - | ``parts``
       | ``.tokenDiscovered``
     - Boolean
     - Flag that indicates whether the token exists.

   * - | ``parts``
       | ``.tokenTimestamp``
     - object
     - Timestamp of an entry in the :term:`oplog`, as specified by the
       entryâ€™s ``ts`` field. The ``ts`` field is a :manual:`BSON
       </reference/bson-types>` timestamp and has two components: the
       timestamp, which is the value in seconds since the Unix epoch,
       and the increment, which is an incrementing ordinal for
       operations within a given second.

   * - | ``parts``
       | ``.typeName``
     - string
     - Type of server represented by the part. Possible values are:

       - ``REPLICA_SET``, which indicates the part is a shard.
       - ``CONFIG_SERVER``

   * - ``restorable``
     - Boolean
     - Flag that indicates whether the checkpoint can be used for a
       restore.

   * - ``started``
     - string
     - |iso8601-time| for the point-in-time when |mms| stopped the
       :term:`balancer` and began the checkpoint.

   * - ``timestamp``
     - string
     - |iso8601-time| for the point-in-time to which the checkpoint
       restores data.


Links
-----

.. list-table::
   :header-rows: 1

   * - Relation
     - Description
   * - ``self``
     - Checkpoint
   * - ``http://mms.mongodb.com/cluster``
     - Cluster the checkpoint belongs to.
   * - ``http://mms.mongodb.com/group``
     - Project that owns the checkpoint.

Examples
--------

Get All Checkpoints
~~~~~~~~~~~~~~~~~~~

Request
```````

.. code-block:: sh

   curl --user "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest \
        --header "Accept: application/json" \
        --include \
        --request GET "https://<ops-manager-host>/api/public/v1.0/groups/{GROUP-ID}/clusters/{CLUSTER-ID}/checkpoints"

Response
````````

Response Header
~~~~~~~~~~~~~~~

.. include:: /includes/api/api-headers/401.rst

.. include:: /includes/api/api-headers/200.rst

Response Body
~~~~~~~~~~~~~

.. code-block:: json
   :linenos:

   {
     "links" : [],
     "results" : [ {
       "clusterId" : "{CLUSTER-ID}",
       "completed" : "2015-07-31T23:35:52Z",
       "groupId" : "{GROUP-ID}",
       "id" : "55bc0658e4b097a3efe06f1f",
       "links" : [],
       "parts" : [ {
         "replicaSetName" : "shard_1",
         "shardName" : "shard_1",
         "tokenDiscovered" : true,
         "tokenTimestamp" : {
           "date" : "2015-07-31T23:35:52Z",
           "increment" : 1
         },
         "typeName" : "REPLICA_SET"
       }, {
         "replicaSetName" : "shard_0",
         "shardName" : "shard_0",
         "tokenDiscovered" : true,
         "tokenTimestamp" : {
           "date" : "2015-07-31T23:35:52Z",
           "increment" : 1
         },
         "typeName" : "REPLICA_SET"
       }, {
         "hostId" : "{HOST-ID}",
         "tokenDiscovered" : true,
         "tokenTimestamp" : {
           "date" : "2015-07-31T23:35:52Z",
           "increment" : 2
         },
         "typeName" : "CONFIG_SERVER"
       } ],
       "restorable" : true,
       "started" : "2015-07-31T23:35:52Z",
       "timestamp" : "2015-07-31T23:34:47Z"
     },
     ...
     ],
     "totalCount" : 6
   }

Get One Checkpoint
~~~~~~~~~~~~~~~~~~

Request
```````

.. code-block:: sh

   curl --user "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest \
        --header "Accept: application/json" \
        --include \
        --request GET "https://<ops-manager-host>/api/public/v1.0/groups/{GROUP-ID}/clusters/{CLUSTER-ID}/checkpoints/{CHECKPOINT-ID}"

Response
````````

Response Header
~~~~~~~~~~~~~~~

.. include:: /includes/api/api-headers/401.rst

.. include:: /includes/api/api-headers/200.rst

Response Body
~~~~~~~~~~~~~

.. code-block:: json
   :linenos:

   {
     "clusterId" : "{CLUSTER-ID}",
     "completed" : "2015-07-31T23:19:51Z",
     "groupId" : "{GROUP-ID}",
     "id" : "{CHECKPOINT-ID}",
     "links" : [],
     "parts" : [ {
       "replicaSetName" : "shard_1",
       "shardName" : "shard_1",
       "tokenDiscovered" : true,
       "tokenTimestamp" : {
         "date" : "2015-07-31T23:19:51Z",
         "increment" : 1
       },
       "typeName" : "REPLICA_SET"
     }, {
       "replicaSetName" : "shard_0",
       "shardName" : "shard_0",
       "tokenDiscovered" : true,
       "tokenTimestamp" : {
         "date" : "2015-07-31T23:19:51Z",
         "increment" : 1
       },
       "typeName" : "REPLICA_SET"
     }, {
       "hostId" : "{HOST-ID}",
       "tokenDiscovered" : true,
       "tokenTimestamp" : {
         "date" : "2015-07-31T23:19:51Z",
         "increment" : 6
       },
       "typeName" : "CONFIG_SERVER"
     } ],
     "restorable" : true,
     "started" : "2015-07-31T23:19:51Z",
     "timestamp" : "2015-07-31T23:19:47Z"
   }
