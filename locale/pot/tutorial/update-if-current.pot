# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/update-if-current.txt:3
# 0e173323faea453ba2ba938f8988cf2a
msgid "Update Document if Current"
msgstr ""

#: ../source/tutorial/update-if-current.txt:8
# 74fe03b5da1b494da2e0d8b9e5194486
msgid "Overview"
msgstr ""

#: ../source/tutorial/update-if-current.txt:10
# ac54b6309613426d82b365a25a1630a0
msgid "The *Update if Current* pattern is an approach to :ref:`concurrency control <concurrency-control>` when multiple applications have access to the data."
msgstr ""

#: ../source/tutorial/update-if-current.txt:16
# 34805c04c22146b4adf5fd2bfa1da72b
msgid "Pattern"
msgstr ""

#: ../source/tutorial/update-if-current.txt:18
# 565cac51fdb841c5be4e9bed89a2b3b2
msgid "The pattern queries for the document to update. Then, for each field to modify, the pattern includes the field and its value in the returned document in the query predicate for the update operation. This way, the update only modifies the document fields *if* the fields have not changed since the query."
msgstr ""

#: ../source/tutorial/update-if-current.txt:25
# 77dd0f793fbb4c9ca40228957944ee65
msgid "Example"
msgstr ""

#: ../source/tutorial/update-if-current.txt:27
# d7ecf7e160dd47f88eb9b8d06bf0a703
msgid "Consider the following example in the :program:`mongo` shell. The example updates the ``quantity`` and the ``reordered`` fields of a document *only* if the fields have not changed since the query."
msgstr ""

#: ../source/tutorial/update-if-current.txt:31
# a5238716502a404e94a7da6185754b7e
msgid "The :method:`db.collection.update()` method now returns a :method:`WriteResult()` object that contains the status of the operation. Previous versions required an extra :method:`db.getLastErrorObj()` method call."
msgstr ""

#: ../source/tutorial/update-if-current.txt:71
# 5263ea08445b4fac96154c8ae7459f32
msgid "Modifications to the Pattern"
msgstr ""

#: ../source/tutorial/update-if-current.txt:73
# 127455487514417b87f09d3e599de675
msgid "Another approach is to add a ``version`` field to the documents. Applications increment this field upon each update operation to the documents. You must be able to ensure that *all* clients that connect to your database include the ``version`` field in the query predicate. To associate increasing numbers with documents in a collection, you can use one of the methods described in :doc:`/tutorial/create-an-auto-incrementing-field`."
msgstr ""

#: ../source/tutorial/update-if-current.txt:81
# 92647e9a1f414033a99df6d35fb9ffa0
msgid "For more approaches, see :ref:`concurrency-control`."
msgstr ""

