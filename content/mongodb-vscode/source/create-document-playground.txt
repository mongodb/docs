.. _vsce-create-doc-playground:

=============================
Create Documents with VS Code
=============================

.. meta::
   :description: Create documents in a MongoDB collection using VS Code by utilizing the insertOne() and insertMany() methods in a MongoDB Playground.

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

You can create documents in a collection using the 
:manual:`MongoDB CRUD Operators </crud>` in a MongoDB Playground:

- Use the :manual:`insertOne() 
  </reference/method/db.collection.insertOne>` method to insert one
  document.
- Use the :manual:`insertMany() 
  </reference/method/db.collection.insertMany>` method to insert more 
  than one document.

Prerequisites
-------------

If you have not done so already, you must complete the following 
prerequisites before you can create documents with a MongoDB Playground:

- :ref:`Create a connection to a MongoDB deployment 
  <vsce-connect-task>`.
- :ref:`Activate the connection to the MongoDB deployment 
  <vsce-activate-connection>`.
- :ref:`Open a MongoDB Playground <open-playground-for-crud-vsce>`.

Create One Document
-------------------

To create one document, use the following syntax in your Playground:

.. code-block:: javascript

   db.collection.insertOne(
      <document>,
      {
         writeConcern: <document>
      }
   )

.. note::

   If the database doesn't exist, insert operations will create it.

For a detailed description of this method's parameters,
see :manual:`insertOne() </reference/method/db.collection.insertOne>`
in the MongoDB Manual.

.. include:: /includes/run-playground.rst

Example
~~~~~~~

.. include:: /includes/blank-playground.rst

The following example:

1. Switches to the ``test`` database.
#. Inserts eight documents into the ``test.sales`` collection.

.. code-block:: javascript
   :copyable: false

   use("test");

   db.sales.insertOne(
     { "_id" : 1, "item" : "abc", "price" : 10, "quantity" : 2, "date" : new Date("2014-03-01T08:00:00Z")}
   );

.. include:: /includes/fact-playground-results.rst

.. code-block:: javascript

   {
     acknowleged: 1,
     insertedId: 1
   }


Create Many Documents
---------------------

To create many documents, use the following syntax in your Playground:

.. code-block:: javascript

   db.collection.insertMany(
      [ <document 1> , <document 2>, ... ],
      {
         writeConcern: <document>,
         ordered: <boolean>
      }
   )

.. note::

   If the database doesn't exist, insert operations will create it.

For a detailed description of this method's parameters,
see :manual:`insertMany() </reference/method/db.collection.insertMany>`
in the MongoDB Manual.

.. include:: /includes/run-playground.rst

Example
~~~~~~~

.. include:: /includes/blank-playground.rst

The following example:

1. Switches to the ``test`` database.
#. Inserts eight documents into the ``test.sales`` collection.

.. code-block:: javascript
   :copyable: false

   use("test");

   db.sales.insertMany([
     { "_id" : 2, "item" : "abc", "price" : 10, "quantity" : 2, "date" : new Date("2014-03-01T08:00:00Z") },
     { "_id" : 3, "item" : "jkl", "price" : 20, "quantity" : 1, "date" : new Date("2014-03-01T09:00:00Z") },
     { "_id" : 4, "item" : "xyz", "price" : 5, "quantity" : 10, "date" : new Date("2014-03-15T09:00:00Z") },
     { "_id" : 5, "item" : "xyz", "price" : 5, "quantity" :  20, "date" : new Date("2014-04-04T11:21:39.736Z") },
     { "_id" : 6, "item" : "abc", "price" : 10, "quantity" : 10, "date" : new Date("2014-04-04T21:23:13.331Z") },
     { "_id" : 7, "item" : "def", "price" : 7.5, "quantity": 5, "date" : new Date("2015-06-04T05:08:13Z") },
     { "_id" : 8, "item" : "def", "price" : 7.5, "quantity": 10, "date" : new Date("2015-09-10T08:43:00Z") },
     { "_id" : 9, "item" : "abc", "price" : 10, "quantity" : 5, "date" : new Date("2016-02-06T20:20:13Z") },
   ]);

.. include:: /includes/fact-playground-results.rst

.. code-block:: javascript
   :copyable: false

   {
     acknowleged: 1,
     insertedIds: {
       '0': 2,
       '1': 3,
       '2': 4,
       '3': 5,
       '4': 6,
       '5': 7,
       '6': 8,
       '7': 9
     }
   }
