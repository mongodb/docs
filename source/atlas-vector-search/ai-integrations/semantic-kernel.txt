.. _semantic-kernel:

=======================================================
Get Started with the Semantic Kernel Python Integration
=======================================================

.. default-domain:: mongodb

.. facet::
   :name: genre
   :values: tutorial

.. facet::
   :name: programming_language
   :values: python

.. meta::
   :description: Integrate Atlas Vector Search with Microsoft Semantic Kernel to build Gen AI applications and implement RAG.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. note::

   This tutorial uses the Semantic Kernel :github:`Python library 
   </microsoft/semantic-kernel/tree/main/python/semantic_kernel/connectors/memory/mongodb_atlas>`. 
   For a tutorial that uses the C# library, see :ref:`semantic-kernel-csharp`.

.. include:: /includes/ai-integrations/semantic-kernel/sk-overview.rst

Background
----------

.. include:: /includes/ai-integrations/semantic-kernel/sk-background.rst

Prerequisites
-------------

To complete this tutorial, you must have the following:

- An |service| {+cluster+} running MongoDB version 6.0.11, 7.0.2, or later
  (including :abbr:`RCs (Release Candidates)`). Ensure that your 
  :abbr:`IP address (Internet Protocal address)` is included
  in your |service| project's :ref:`access list <access-list>`.

- An OpenAI API Key. You must have a paid OpenAI account with credits
  available for API requests.

- An environment to run interactive Python notebooks 
  such as `Colab <https://colab.research.google.com>`__.

  .. include:: /includes/fact-colab-ip-address.rst

Set Up the Environment
----------------------

You must first set up the environment for this tutorial. 
Create an interactive Python notebook by saving a file 
with the ``.ipynb`` extension, and then run the 
following code snippets in the notebook.

.. include:: /includes/ai-integrations/semantic-kernel/sk-set-up-environment.rst

Store Custom Data in |service|
------------------------------

In this section, you initialize the `kernel 
<https://learn.microsoft.com/en-us/semantic-kernel/agents/kernel/>`__, 
which is the main interface used to manage your 
application's services and plugins. Through the kernel, you configure your 
AI services, instantiate |service| as a vector database (also called a memory 
store), and load custom data into your |service| {+cluster+}. 

To store custom data in |service|, paste and 
run the following code snippets in your notebook:

.. include:: /includes/ai-integrations/semantic-kernel/sk-store-custom-data.rst

Create the {+avs+} Index
------------------------------------

.. note:: 

   To create an {+avs+} index, you must have :authrole:`Project Data Access Admin` 
   or higher access to the |service| project.

To enable vector search queries on your vector store,
create an {+avs+} index on the ``semantic_kernel_db.test`` collection.

.. include:: /includes/ai-integrations/semantic-kernel/sk-create-index.rst

Run Vector Search Queries
-------------------------

Once |service| builds your index, you can run vector search 
queries on your data.

.. include:: /includes/ai-integrations/semantic-kernel/sk-query-examples.rst

Answer Questions on Your Data
-----------------------------

This section shows an example |rag| implementation 
with {+avs+} and Semantic Kernel. Now that you've used {+avs+} 
to retrieve semantically similar documents, run the following code example
to prompt the |llm| to answer questions based on those documents.

.. include:: /includes/ai-integrations/semantic-kernel/sk-perform-qa.rst

Next Steps
----------

.. include:: /includes/ai-integrations/semantic-kernel/sk-next-steps.rst
