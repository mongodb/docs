.. meta::
   :robots: noindex, nosnippet

.. _react-native-data-types-embedded-objects:
.. _react-native-define-an-embedded-object-property:

===================================
Embedded Objects - React Native SDK
===================================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Create an Embedded Object
-------------------------

To create an embedded object, assign an instance of the embedded object
to a parent object's property.

Example
~~~~~~~

In the following ``CreateContact`` example, we create a new ``Contact`` object 
with an embedded ``Address`` object.

The ``CreateContact`` component does the following:

- Creates React `state <https://react.dev/reference/react/Component#state>`__
  variables that represent the contact's name and address details.
- Gets access to an open realm instance by calling the ``useRealm()`` hook within the 
  component.
- Creates a component method ``submitContact()`` that performs a write transaction 
  to create a new ``Address`` embedded object and ``Contact`` parent object based 
  on the ``TextInput`` values for the contact's name and address.
- Adds an `onPress <https://reactnative.dev/docs/handling-touches>`__ event on the
  "Submit Contact" button that calls ``submitContact()``.

.. literalinclude:: /examples/generated/react-native/ts/embedded-objects-test.snippet.create-embedded-object.tsx
   :language: typescript
   :emphasize-lines: 13-18, 24
   :linenos:

Query a Collection on Embedded Object Properties
------------------------------------------------

You can use dot notation to filter or sort a :ref:`collection
<react-native-results-collections>` of objects based on an embedded object
property value.

Example
~~~~~~~

In the following ``ContactList`` example, we filter and query an embedded 
``Address`` object.

The ``ContactList`` component does the following:

- Performs a query for all contacts by passing the ``Contact`` class to the ``useQuery`` hook.
- Filters for contacts with the name "John Smith" by passing :js-sdk:`collection.filtered()
  <Realm.Collection.html#filtered>` on the query ``"name == 'John Smith'"``.
- Retrieves the contact's street address by using dot notation.

.. tabs-realm-languages::

   .. tab::
      :tabid: typescript

      .. literalinclude:: /examples/generated/react-native/ts/embedded-objects-test.snippet.query-embedded-object.tsx
         :language: typescript
         :emphasize-lines: 4-6
         :linenos:

   .. tab::
      :tabid: javascript

      .. literalinclude:: /examples/generated/react-native/js/embedded-objects-test.snippet.query-embedded-object.jsx
         :language: javascript
         :emphasize-lines: 4-10
         :linenos:

Update an Embedded Object Property
----------------------------------

To update a property in an embedded object, modify the property in a
write transaction.

Example
~~~~~~~

In the following ``UpdateContact`` example, we update the ``street`` property for 
an embedded ``Address`` object.

The ``UpdateContact`` component does the following:

- Creates a React `state <https://react.dev/reference/react/Component#state>`__
  variable that represents the contact's new street address.
- Performs a query for all contacts by passing the ``Contact`` class to the
  ``useQuery`` hook and filters for the contact that matches the name passed
  into the component as a `prop <https://react.dev/learn/passing-props-to-a-component>`__.
- Gets access to an opened realm instance by calling the ``useRealm()`` hook
  within the component. 
- Creates a component method ``updateStreet()`` that performs a write transaction and 
  sets the contact's street address to the value of the ``street`` state variable.
- Renders a ``TextInput`` that displays and changes the ``street`` state variable.
- Adds an `onPress <https://reactnative.dev/docs/handling-touches>`__ event on the 
  ``'Update Street Address'`` button that calls ``updateStreet()``.

.. tabs-realm-languages::

   .. tab::
      :tabid: typescript

      .. literalinclude:: /examples/generated/react-native/ts/embedded-objects-test.snippet.update-embedded-object.tsx
         :language: typescript
         :emphasize-lines: 4, 11
         :linenos:

   .. tab::
      :tabid: javascript

      .. literalinclude:: /examples/generated/react-native/js/embedded-objects-test.snippet.update-embedded-object.jsx
         :language: javascript
         :emphasize-lines: 4, 11
         :linenos:

Overwrite an Embedded Object
----------------------------

To overwrite an embedded object, reassign the embedded object property
of a party to a new instance in a write transaction.

Example
~~~~~~~

In the following ``OverwriteContact`` example, we overwrite an embedded ``Address`` object.

The ``OverwriteContact`` component does the following:

- Creates React `state <https://react.dev/reference/react/Component#state>`__
  variables that represent the contact's new address.
- Performs a query for all contacts by passing the ``Contact`` class to the
  ``useQuery`` hook and filters for the contact that matches the name passed
  into the component as a `prop <https://react.dev/learn/passing-props-to-a-component>`__.
- Gets access to an opened realm instance by calling the ``useRealm()`` hook
  within the component.
- Creates a component method ``updateAddress()`` that performs a write
  transaction and creates a new ``Address`` object that overwrites the existing
  address in the ``Contact`` object.
- Renders ``TextInput`` components that display and change the state variables
  for the new address.
- Adds an `onPress <https://reactnative.dev/docs/handling-touches>`__ event on
  the ``'Overwrite Address'`` button that calls ``updateAddress()``.

.. tabs-realm-languages::

   .. tab::
      :tabid: typescript

      .. literalinclude:: /examples/generated/react-native/ts/embedded-objects-test.snippet.overwrite-embedded-object.tsx
         :language: typescript
         :emphasize-lines: 16-21, 23
         :linenos:

   .. tab::
      :tabid: javascript

      .. literalinclude:: /examples/generated/react-native/js/embedded-objects-test.snippet.overwrite-embedded-object.jsx
         :language: javascript
         :emphasize-lines: 12-17, 19
         :linenos:

Delete an Embedded Object
-------------------------

Realm Uses Cascading Deletes for Embedded Objects. To delete an embedded object,
delete the embedded object's parent. 

Example
~~~~~~~

In the following ``DeleteContact`` example, we delete an embedded object and its 
parent object.

The ``DeleteContact`` component does the following:

- Performs a query for all contacts by passing the ``Contact`` class to the
  ``useQuery`` hook.
- Filters for the ``Contact`` object that matches the name passed into the
  component as a `prop <https://react.dev/learn/passing-props-to-a-component>`__.
- Gets access to an open realm instance by calling the ``useRealm()`` hook
  within the component. 
- Creates a component method ``deleteContact()`` that performs a write
  transaction and calls :realm-react-sdk:`Realm.delete() <classes/Realm-1.html#delete>` to remove
  the ``Contact`` object.
- Add an `onPress <https://reactnative.dev/docs/handling-touches>`__ event on
  the "Delete Contact" button that calls ``deleteContact()``.

.. tabs-realm-languages::

   .. tab::
      :tabid: typescript

      .. literalinclude:: /examples/generated/react-native/ts/embedded-objects-test.snippet.delete-embedded-object.tsx
         :language: typescript
         :emphasize-lines: 20, 16-20, 24-29
         :linenos:

   .. tab::
      :tabid: javascript

      .. literalinclude:: /examples/generated/react-native/js/embedded-objects-test.snippet.delete-embedded-object.jsx
         :language: javascript
         :emphasize-lines: 19-23, 27-32
         :linenos:
