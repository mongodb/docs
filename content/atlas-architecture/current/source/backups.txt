.. _arch-center-backups:

================================
Guidance for {+service+} Backups
================================

.. default-domain:: mongodb

.. facet::
   :name: genre
   :values: reference

.. meta::
   :description: Learn the best practices for configuring backups for you Atlas cluster.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: onecol

|service-fullname| provides fully managed and customizable backups to
ensure data retention and recovery: 

- Cloud Backups: Taken using the native snapshot capabilities of your
  cloud provider, to support full-copy snapshots and localized snapshot
  storage. These snapshots are always incremental in nature and leverage
  the cloud provider's underlying backup snapshot mechanism for low cost
  and fast restores. You choose a backup policy that specifies a certain
  number of daily, weekly, and monthly snapshots.
- Continuous Cloud Backups: This is an additive feature to cloud backups
  that provides Point In Time (PIT) recovery. This feature allows you to recover
  back to a specific minute during the restore process by backing up the
  oplog and capturing data changes between snapshots. This feature allows you to
  recover your data to the exact moment (a point in time) right before
  any failure or event, meeting Recovery Point Objectives (RPOs) as low
  as 1 minute.   

We don't recommend enabling backup for development and test
environments. For staging and production environments, we recommend
developing automated deployment templates that include the
recommendations described in this page. 

Features for {+service+} Backups
--------------------------------

|service| provides fully-managed backups of your data, including
point-in-time data recovery and consistent, cluster-wide snapshots of
all {+clusters+}, including sharded {+clusters+}. In |service|, you can
choose from four snapshot frequencies: hourly, daily, weekly, and
monthly, each with its own retention period.

.. list-table:: 
   :widths: 20 80 
   :stub-columns: 1

   * - Cloud Backups
     - This feature provides localized backup storage using the native snapshot
       functionality of your {+cluster+}'s cloud service provider.
       Benefits include a strong default backup retention schedule of 12
       months, full flexibility to customize snapshot and retention
       schedules, and the ability to set different snapshot frequencies
       (such as hourly for recovery, weekly or monthly for long-term
       retention) to meet industry regulations. You can access your
       backup data instantly, which is useful for auditing, compliance,
       or data recovery purposes and also run queries directly against
       the backup data, saving time and resources.  

   * - Continuous Cloud Backups
     - This feature provides Point In Time (PIT) recovery, which allows you to
       recover back to any timestamp. This allows you to recover your
       data to the exact moment (a point in time) right before any
       failure or event, like a cyber attack. You can also set a
       customized restore window to dictate how many days you  would
       like to be able to restore back to a specific point in time.  

   * - Multi-region Snapshot Distribution
     - This feature allows you to increase resilience by automatically
       distributing backup snapshots and oplogs across geographic
       regions instead of just storing them in their primary region. You
       can meet compliance requirements of storing backups in different,
       air gapped geographical locations to ensure disaster recovery in
       case of regional outages. 

       To learn more, see :atlas:`Snapshot Distribution </backup/cloud-backup/snapshot-distribution/>`.

   * - Backup Compliance Policy 
     - This feature enables you to further secure business critical data
       by preventing all snapshots and oplogs stored in |service| from
       being modified or deleted for a predefined retention period
       specified by you, guaranteeing that your backups are fully WORM
       (Write Once Read Many) compliant. Only a designated, authorized
       user can turn off this protection after completing a verification
       process with MongoDB support. This feature adds a mandatory manual delay
       and cooldown period so that an attacker cannot change the backup 
       policy and export the data. To learn more, see `Configure a Backup Compliance Policy <https://www.mongodb.com/docs/atlas/backup/cloud-backup/backup-compliance-policy/>`__.

.. _arch-center-backups-recs:

Recommendations for {+service+} Backups
---------------------------------------

Recommendations for Backup Strategy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You must align your backup strategy with specific Recovery Point
Objectives (RPO) and Recovery Time Objectives (RTO) to meet business
continuity requirements, particularly for critical applications where
near-instant RPO and rapid recovery times are crucial. RPO defines the
maximum acceptable amount of data loss during an incident, while RTO 
defines how quickly your application must recover. Since data varies in
importance, you must evaluate RPO and RTO for each application
individually. For example, any mission-critical data will likely have 
different requirements than clickstream analytics. Your requirements
for RTO, RPO, and the backup retention period will influence the cost
and performance considerations of maintaining backups. In development
and test environments, we recommend that you disable backup to save
costs. In staging and production environments, ensure that backup is
enabled in your deployment template and that you have successfully tested 
your backup and restore procedure and process.

Large replica sets (and shards) take longer to restore from backup. 
In staging and production environments, through testing techniques, we
recommend that you identify replica set size or shard size limits to
ensure that your size is compatible with RTO requirements. Ensure that 
snapshot schedule and retention policies meet any RPO requirements. 

In production, in addition to |service| cloud backups, we recommend that
you start with a default of continuous cloud backups with a restore
window of seven days. Adjust this time range with a longer setting based
on the criticality of the workload. This allows you to replay the oplog
to restore a {+cluster+} from a particular point in time and satisfy
your RTO.

.. seealso:: 

   :mdbu-course:`Choosing the Right Atlas Backup Policy </learn/article/choosing-the-right-atlas-backup-policy>`

.. _backup-policy-recommendations:

Recommendations for Backup Policy 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

|service| provides predefined backup snapshot schedules including
frequency of snapshots, and retention period. Retaining backup snapshots
for long periods can be costly. We recommend building automated
deployment templates that meet your requirements based on the size and
criticality of the data and the environment (development, test, staging,
production). For frequency and retention of snapshots, we recommend
the following: 

.. list-table:: 
   :widths: 10 15 20 45 10
   :header-rows: 1

   * - Tier
     - RTO 
     - RPO
     - Recommended Frequency and Retention
     - Total Number of Snapshots

   * - Tier 1 
     - 30 minutes 
     - Near zero (within 7 days)
     - | **Hourly**: Every 12 hours, retain for 7 days = 14 snapshots
       | **Daily**: Once a day, retain for 7 days = 7 snapshots
       | **Weekly**: Saturday, retain for 4 weeks = 4 snapshots
       | **Monthly**: Last day of month, retain for 3 months = 6 snapshots
     - 31

   * - Tier 2 
     - 12 hours 
     - Near zero (within 7 days)
     - | **Daily**: Once a day, retain for 7 days = 7 snapshots
       | **Weekly**: Saturday, retain for 4 weeks = 4 snapshots
       | **Monthly**: Last day of month, retain for 3 months = 3 snapshots
     - 14

   * - Tier 3 
     - 3 days 
     - Near zero (within 2 days)
     - | **Daily**: Once a day, retain for 7 days = 7 snapshots
       | **Weekly**: Saturday, retain for 4 weeks = 4 snapshots
       | **Monthly**: Last day of month, retain for 3 months = 3 snapshots
     - 14

.. _atlas-backup-distribution:

Recommendations for Backup Distribution 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

|service| provides options for backup locations. To further enhance
resilience, we recommend distributing backups to a local region and to an
external disaster recovery region, ensuring data recovery even during
regional outages. For an |service| {+cluster+} in three regions,
multi-region Snapshot Distribution copies backups to two secondary
regions, enabling restores by using backup copies. You can also copy
critical backups, with the point-in-time data, to any secondary region
available from your cloud provider in |service| .

When you configure your snapshot frequency, retention, and distribution,
we recommend striking a balance between availability and cost. However,
your critical workloads might require multiple copies of snapshots in
various locations. 

Recommendations for Backup Compliance Policy 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

We recommend enforcing |service|'s `Backup Compliance Policy <https://www.mongodb.com/docs/atlas/backup/cloud-backup/backup-compliance-policy/>`__ to prevent
unauthorized modifications or deletions of backups, thereby maintaining
data integrity and supporting robust disaster recovery.  

Recommendations for PIT Recovery
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Continuous Cloud Backups enable precise Point In Time (PIT) recovery, which minimizes
data loss during failures. |service| can quickly recover to the exact
timestamp before a failure event, giving you at least a one minute
:abbr:`RPO (Recovery Point Objective)` and an :abbr:`RTO (Recovery Time
Objective)` of less than 15 minutes when utilizing optimized restores,
even in the event of the outage of the primary region. This is because
|service| restores the most recent snapshot from before the desired
point in time and then replays the oplog changes to restore to that
particular point. Recovery times can vary due to cloud provider disk
warming and how much of the oplog must replay during recovery. Your
cluster performance might be slow until the cloud provider disk warming
completes after a restore. If you can be flexible in your requirements
for recovery, we recommend designing templates that identify the best
compromise between reasonable recovery options and cost. 

Recommendations for Backup Costs 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To optimize |service| backup costs, you must adjust the backup frequency 
and retention policies to align with data criticality, reducing
unnecessary storage expenses. For example, you should disable backups in
lower environments, and ensure that in upper environments with high
availability requirements you are distributing backups to each region
where your |service| {+clusters+} are deployed. You can also use
incremental backups through snapshots that capture only incremental
changes and built-in compression to minimize the amount of stored data.
By :ref:`selecting regions <atlas-backup-distribution>` strategically
for backup, you can avoid cross-region data transfer fees and choose the
right {+cluster+} disk size based on workload to prevent overspending.
By implementing these strategies, you can effectively manage costs while
maintaining secure and reliable backups.   

Automation Examples: {+service+} Backups
----------------------------------------

.. include:: /includes/complete-examples.rst

The following examples enable backup and restore operations using |service|
:ref:`tools for automation <arch-center-automation>`.

These examples apply only for staging and production environments where
backup is enabled for the {+cluster+}.

.. tabs::

   .. tab:: CLI
      :tabid: cli

      Run the following command take a backup snapshot for the {+cluster+}
      named myDemo and retain the snapshot for 7 days:

      .. include:: /includes/examples/cli-example-backup-take-snapshot.rst

      Enable backup compliance policy for your project with a
      designated, authorized user (``governance@example.org``) who alone can turn
      off this protection after completing a verification process with
      MongoDB support. 

      .. include:: /includes/examples/cli-example-backup-compliance-policy-enable.rst

      Run the following command to create a compliance policy for
      scheduled backup snapshots that enforces the number of times
      snapshots must be taken, which is set to every ``6`` hours, and
      the duration for retaining the snapshots, which is set to ``1``
      month.   

      .. include:: /includes/examples/cli-example-backup-compliance-policy-schedule.rst

   .. tab:: Terraform
      :tabid: Terraform
 
      The following examples demonstrate how to configure backups during
      deployment. Before you can create resources with Terraform,
      you must:  

      - :ref:`Create your paying organization <configure-paying-org>`
        and :ref:`create an API key <atlas-admin-api-access>` for the
        paying organization. Store your API key as environment variables
        by running the following command in the terminal: 

        .. code-block::

           export MONGODB_ATLAS_PUBLIC_KEY="<insert your public key here>"
           export MONGODB_ATLAS_PRIVATE_KEY="<insert your private key here>"

      - `Install Terraform <https://developer.hashicorp.com/terraform/tutorials/aws-get-started/install-cli>`__.

      Common Files 
      ~~~~~~~~~~~~

      You must create the following files for each example. Place the
      files for each example in their own directory. Change the IDs and
      names to use your values. Then run the commands to initialize
      Terraform, view the Terraform plan, and apply the changes. 

      variables.tf 
      ````````````

      .. include:: /includes/examples/tf-example-backup-variables.rst

      Configure Backup Schedule for the {+Cluster+} 
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      Use the following to configure a :ref:`Tier 1
      <backup-policy-recommendations>` backup schedule for the {+cluster+}. 

      main.tf 
      ```````

      .. include:: /includes/examples/tf-example-backup-snapshot-schedule-tier1.rst

      Use the following to configure a :ref:`Tier 2
      <backup-policy-recommendations>` backup schedule for the {+cluster+}. 

      main.tf 
      ```````

      .. include:: /includes/examples/tf-example-backup-snapshot-schedule-tier2.rst

      Use the following to configure a :ref:`Tier 3
      <backup-policy-recommendations>` backup schedule for the {+cluster+}. 

      main.tf 
      ```````

      .. include:: /includes/examples/tf-example-backup-snapshot-schedule-tier3.rst

      Configure Backup and PIT Restore for the {+Cluster+}
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      Use the following to configure cloud backup snapshot and PIT restore
      job.

      main.tf 
      ```````
      
      .. include:: /includes/examples/tf-example-backup-snapshot-pit-restore.rst
