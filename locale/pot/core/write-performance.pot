# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/write-performance.txt:3
# 92d41c65e26a40619d9698bb1167bb46
msgid "Write Operation Performance"
msgstr ""

#: ../source/core/write-performance.txt:8
# 0cf53b25527444d9b815d4c6fe0121a9
msgid "Indexes"
msgstr ""

#: ../source/core/write-performance.txt:10
# 62e417b6c3a34b68b58159f3256fa329
msgid "After every insert, update, or delete operation, MongoDB must update *every* index associated with the collection in addition to the data itself. Therefore, every index on a collection adds some amount of overhead for the performance of write operations. [#exceptions]_"
msgstr ""

#: ../source/core/write-performance.txt:15
# 6e4625b8fc9249eb85b8908ae107b20e
msgid "In general, the performance gains that indexes provide for *read operations* are worth the insertion penalty. However, in order to optimize write performance when possible, be careful when creating new indexes and evaluate the existing indexes to ensure that your queries actually use these indexes."
msgstr ""

#: ../source/core/write-performance.txt:21
# e3aecffa9983497a92240a33f8b057be
msgid "For indexes and queries, see :doc:`/core/query-optimization`. For more information on indexes, see :doc:`/indexes` and :doc:`/applications/indexes`."
msgstr ""

#: ../source/core/write-performance.txt:25
# a9efe8d4d8254686873be6f62d2bcfdd
msgid "For inserts and updates to un-indexed fields, the overhead for :ref:`sparse indexes <index-type-sparse>` is less than for non-sparse indexes. Also for non-sparse indexes, updates that do not change the record size have less indexing overhead."
msgstr ""

#: ../source/core/write-performance.txt:33
# e5787cdb3fae43b486acdf1fffd5f1e1
msgid "Document Growth and the MMAPv1 Storage Engine"
msgstr ""

#: ../source/core/write-performance.txt:35
# 665317b3bcc34387b1bc12bcf5d3f553
msgid "Some update operations can increase the size of the document; for instance, if an update adds a new field to the document."
msgstr ""

#: ../source/core/write-performance.txt:38
# 5f2abad7e90f4d9e9178d75e017d9fc2
msgid "For the MMAPv1 storage engine, if an update operation causes a document to exceed the currently allocated :term:`record size`, MongoDB relocates the document on disk with enough contiguous space to hold the document. Updates that require relocations take longer than updates that do not, particularly if the collection has indexes. If a collection has indexes, MongoDB must update all index entries. Thus, for a collection with many indexes, the move will impact the write throughput."
msgstr ""

#: ../source/core/write-performance.txt:49
# be628e5ae43e44f59f7b829b4b7553b8
msgid "By default, MongoDB uses :ref:`power-of-2-allocation` to add :ref:`padding automatically <record-allocation-strategies>` for the MMAPv1 storage engine. The :ref:`power-of-2-allocation` ensures that MongoDB allocates document space in sizes that are powers of 2, which helps ensure that MongoDB can efficiently reuse free space created by document deletion or relocation as well as reduce the occurrences of reallocations in many cases."
msgstr ""

#: ../source/core/write-performance.txt:57
# 7f9cb1bab454491680fe9c3dd0f13d6b
msgid "Although :ref:`power-of-2-allocation` minimizes the occurrence of re-allocation, it does not eliminate document re-allocation."
msgstr ""

#: ../source/core/write-performance.txt:61
# e88ef383743942219d81b2252e0183fb
msgid "See :doc:`/core/storage` for more information."
msgstr ""

#: ../source/core/write-performance.txt:64
# eb64dd1d9aaf4f9492accac38bfd38ca
msgid "Storage Performance"
msgstr ""

#: ../source/core/write-performance.txt:67
# eebea9d232614dcc91c3f657b79dabd7
msgid "Hardware"
msgstr ""

#: ../source/core/write-performance.txt:69
# dd2d4d54c8ad4cf1ba66cb1694773d0f
msgid "The capability of the storage system creates some important physical limits for the performance of MongoDB's write operations. Many unique factors related to the storage system of the drive affect write performance, including random access patterns, disk caches, disk readahead and RAID configurations."
msgstr ""

#: ../source/core/write-performance.txt:75
# 4e8e30903a8f48c19f53f041c512dfef
msgid "Solid state drives (SSDs) can outperform spinning hard disks (HDDs) by 100 times or more for random workloads."
msgstr ""

#: ../source/core/write-performance.txt:0
# f294699e88c64b19990850a404a88c00
msgid "See"
msgstr ""

#: ../source/core/write-performance.txt:82
# e999292842fe427c80b3da227947a089
msgid "Journaling"
msgstr ""

#: ../source/core/write-performance.txt:84
# 9976aa657a434fd0a4600ed986419e70
msgid "MongoDB uses *write ahead logging* to an on-disk :term:`journal` to guarantee :doc:`write operation </core/write-operations>` durability and to provide crash resiliency. Before applying a change to the data files, MongoDB writes the change operation to the journal."
msgstr ""

#: ../source/core/write-performance.txt:89
# 2683cdff460e440eb62a68427fde58c5
msgid "While the durability assurance provided by the journal typically outweigh the performance costs of the additional write operations, consider the following interactions between the journal and performance:"
msgstr ""

#: ../source/core/write-performance.txt:94
# 7595ac15c9c24826bbc8e88f9e73bb83
msgid "if the journal and the data file reside on the same block device, the data files and the journal may have to contend for a finite number of available write operations. Moving the journal to a separate device may increase the capacity for write operations."
msgstr ""

#: ../source/core/write-performance.txt:99
# 52fd00b30b1346efad57329be58052f7
msgid "if applications specify :doc:`write concern </core/write-concern>` that includes :ref:`journaled <write-concern-replica-journaled>`, :program:`mongod` will decrease the duration between journal commits, which can increases the overall write load."
msgstr ""

#: ../source/core/write-performance.txt:104
# b00e0ec0984f43efb479c7fc2ad8f08e
msgid "the duration between journal commits is configurable using the :setting:`~storage.journal.commitIntervalMs` run-time option. Decreasing the period between journal commits will increase the number of write operations, which can limit MongoDB's capacity for write operations. Increasing the amount of time between commits may decrease the total number of write operation, but also increases the chance that the journal will not record a write operation in the event of a failure."
msgstr ""

#: ../source/core/write-performance.txt:113
# 113baec058b24a7eb5b5233ac11107c2
msgid "For additional information on journaling, see :doc:`/core/journaling`."
msgstr ""

