title: "Log in to the |application|."
stepnum: 0
ref: login
---
title: "Begin or Manage a Deployment."
stepnum: 0
ref: begin-deployment-manage
content: |

  Your project has with no deployments and you see a prompt to get
  started.

  .. tabs::

     hidden: true

     tabs:

       - id: buildNew
         name: Build New
         content: |

           a. From the :guilabel:`Build New Deployment` menu,
              select the type of deployment you wish to add:

              - :doc:`New Sharded Cluster </tutorial/deploy-sharded-cluster>`
              - :doc:`New Replica Set </tutorial/deploy-replica-set>`
              - :doc:`New Standalone </tutorial/deploy-standalone>`

           b. If, on the :guilabel:`Create New <Deployment>`
              page, |mms| cannot detect any hosts with the
              MongoDB Agent installed, you see a banner
              displayed at the top of the
              :guilabel:`Create New <Deployment>` page.

              Click the :guilabel:`see instructions` link.

           c. From the :guilabel:`Select Your Server's
              Operating System` menu, click
              :guilabel:`{{menuOption}}`.

           d. Click :guilabel:`Next`.

       - id: manageExisting
         name: Manage Existing
         content: |

           a. Click :doc:`Manage your existing deployment </tutorial/add-existing-mongodb-processes>`.

           b. From the :guilabel:`Install Agent` menu, click
              :guilabel:`{{menuOption}}`.

---
title: "Navigate to the MongoDB Agent Download page."
stepnum: 0
ref: begin-deployment-monitor
content: |

  If you have a project with existing deployments, you can
  install the MongoDB Agent on your existing deployments:

  a. Select the desired Project from the :guilabel:`Context`
     menu.
  #. Click :guilabel:`Deployment`.
  #. Click :guilabel:`Agents`.
  #. Click :guilabel:`Downloads & Settings`.
  #. From the :guilabel:`Select Your Server's Operating
     System` menu, click :guilabel:`{{menuOption}}`.

---
title: Download the latest version of the {+mdbagent+}.
stepnum: 0
ref: download-mongodb-agent-installer-cloud
edition: cloud
content: |

  .. note::

     Starting with this step, follow the {+mdbagent+}
     installation modal and copy the provided commands into the
     {{commandline}}.

  From a system shell on the host that will run the {+mdbagent+},
  issue the following ``curl`` command to download the installer for
  {{platform}}:

  .. cond:: cloud

     .. code-block:: shell

        curl -OL https://{+cloudmgr-url+}/download/agent/automation/mongodb-mms-automation-agent-manager-{+mdbagent-version-cloud+}.{{fileBuild}}

     .. note::

        You can download the agent from previous |url|, as
        ``mongodb-mms-automation-agent-latest.{{fileBuild}}``.
        The downloaded file and the extracted directory are saved as
        ``mongodb-mms-automation-agent-{+mdbagent-version-cloud+}``.

  .. cond:: onprem

     .. code-block:: shell

        curl -OL https://{+opsmgr-url+}/download/agent/automation/mongodb-mms-automation-agent-manager-{+mdbagent-version-opsmgr+}.{{fileBuild}}

     .. note::

        You can download the agent from previous |url|, as
        ``mongodb-mms-automation-agent-latest.{{fileBuild}}``.
        The downloaded file and the extracted directory are saved as
        ``mongodb-mms-automation-agent-{+mdbagent-version-opsmgr+}``.

---
title: Download the latest version of the {+mdbagent+}.
stepnum: 0
ref: download-mongodb-agent-installer-opsmgr
edition: onprem
content: |

  .. note::

     Starting with this step, follow the {+mdbagent+}
     installation modal and copy the commands provided into the
     {{commandline}}.

  From a system shell on the host that will run the {+mdbagent+},
  issue the following ``curl`` command to download the installer for
  {{platform}}:

  .. code-block:: shell

     curl -OL https://{+opsmgr-url+}/download/agent/automation/mongodb-mms-automation-agent-manager-{+mdbagent-version-opsmgr+}.{{fileBuild}}

  .. note::

     Replace ``{+opsmgr-url+}`` with the hostname and port of
     your |application|.

---
title: Download the latest version of the {+mdbagent+}.
stepnum: 0
ref: download-mongodb-agent-installer-appdb
content: |

  .. note::

     Starting with this step, follow the {+mdbagent+}
     installation modal and copy the commands provided into the
     {{commandline}}.

  From a system shell on the host that will run the {+mdbagent+},
  issue the following ``curl`` command to download the installer for
  {{platform}}:

  .. code-block:: shell

     curl -OL https://{+opsmgr-url+}/download/agent/automation/mongodb-mms-automation-agent-manager-{+mdbagent-version-opsmgr+}.{{fileBuild}}

  .. note::

     Replace ``{+opsmgr-url+}`` with the hostname and port of
     your |application|.

---
title: "Finish the installation of the MongoDB Agent."
stepnum: 0
ref: verify-mongodb-agent
content: |
  In the :guilabel:`Install Agent Instructions` modal:

  a. Click :guilabel:`Verify Agent` to make
     sure the MongoDB Agent can connect to |mms|.

  b. Click :guilabel:`Done`.

---
title: "Finish the installation of the MongoDB Agent."
stepnum: 0
ref: finish-mongodb-agent
content: |
  In the :guilabel:`Install Agent Instructions` modal, click
  :guilabel:`Done`.
---
title: "Configure the MongoDB Agent to use a proxy server."
optional: true
stepnum: 0
ref: set-proxy-server
content: |

  To configure the MongoDB Agent to connect to |mms| via a proxy
  server, you must specify the server in the :setting:`httpProxy`
  environment variable.

  In the directory where you installed the MongoDB Agent, open the
  ``{{configFile}}`` file in your preferred text editor.

  .. code-block:: sh

     {{editCommand}}

  Add the following configuration key:

  .. list-table::
     :header-rows: 1
     :widths: 20 80

     * - Key
       - Value
     * - :setting:`httpProxy`
       - |url| (hostname and port) of to your proxy server.

---
title: "Edit the MongoDB Agent configuration file."
stepnum: 0
ref: edit-config-file-cloud
content: |

  In the directory where you installed the MongoDB Agent, open the
  ``{{configFile}}`` file in your preferred text editor.

  .. code-block:: sh

     {{editCommand}}

  Update the following configuration keys:

  .. list-table::
     :header-rows: 1
     :widths: 20 80

     * - Key
       - Value
     * - :setting:`mmsGroupId`
       - ``ProjectID`` of your project.
     * - :setting:`mmsApiKey`
       - :term:`Agent API key <agent API key>` of your project.

edition: cloud
---
title: "Edit the MongoDB Agent configuration file."
stepnum: 0
ref: edit-config-file-opsmgr
content: |

  In the directory where you installed the MongoDB Agent, open the
  ``{{configFile}}`` file in your preferred text editor:

  .. code-block:: sh

     {{editCommand}}

  Update the following configuration keys:

  .. list-table::
     :header-rows: 1
     :widths: 20 80

     * - Key
       - Value
     * - :setting:`mmsGroupId`
       - ``ProjectID`` of your project.
     * - :setting:`mmsApiKey`
       - :term:`Agent API key <agent API key>` of your
          project.
     * - :setting:`mmsBaseUrl`
       - |url| (hostname and port) of the |application|.

  The resulting changes to the ``{{configFile}}`` file should
  look like the following:

  .. code-block:: ini

     mmsGroupId=<Project ID>
     mmsApiKey=<agent API key>
     mmsBaseUrl=<application URL>


edition: onprem
---
title: "Edit the MongoDB Agent configuration file."
stepnum: 0
ref: edit-config-file-appdb
content: |

  In the directory where you installed the MongoDB Agent, open the
  ``{{configFile}}`` file in your preferred text editor:

  .. code-block:: sh

     {{editCommand}}

  Update the following configuration keys:

  .. list-table::
     :header-rows: 1
     :widths: 20 80

     * - Key
       - Value
     * - :setting:`mmsGroupId`
       - ``ProjectID`` of your project.
     * - :setting:`mmsApiKey`
       - :term:`Agent API key <agent API key>` of your
          project.
     * - :setting:`mmsBaseUrl`
       - |url| (hostname and port) of the |application|.

  The resulting changes to the ``{{configFile}}`` file should
  look like the following:

  .. code-block:: ini

     mmsGroupId=<Project ID>
     mmsApiKey=<agent API key>
     mmsBaseUrl=<application URL>

---
title: "Repeat the installation procedure for each MongoDB host."
stepnum: 0
ref: repeat-per-host
---
title: "Verify that the {+mdbagent+} is running."
stepnum: 0
ref: verify-mongodb-agent-install
content: |

  In the :guilabel:`Install Agent Instructions` modal,
  wait for each deployment to show :guilabel:`Verified` in the
  :guilabel:`Install the {+mdbagent+}` step.

  .. important::

     All authentication SCRAM, |ldap|, and Kerberos credentials from
     legacy Agents are retained after the update. All ``.pem`` key
     files are retained as well.

  Click :guilabel:`Next`.


...
