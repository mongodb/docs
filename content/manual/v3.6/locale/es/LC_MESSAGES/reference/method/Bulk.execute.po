# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: 2014-04-08 19:39+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/reference/method/Bulk.execute.txt:3
msgid "Bulk.execute()"
msgstr ""

#: ../source/includes/fact-bulkwrite.rst:3
msgid ""
"Starting in version 3.2, MongoDB also provides the "
":method:`db.collection.bulkWrite()` method for performing bulk write "
"operations."
msgstr ""

#: ../source/includes/apiargs/method-Bulk.execute-param.rst:11
#: ../source/reference/method/Bulk.execute.txt:16
msgid "Description"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:22
msgid ""
"Executes the list of operations built by the :method:`Bulk()` operations "
"builder."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:25
msgid ":method:`Bulk.execute()` accepts the following parameter:"
msgstr ""

#: ../source/includes/apiargs/method-Bulk.execute-param.rst:7
msgid "Parameter"
msgstr ""

#: ../source/includes/apiargs/method-Bulk.execute-param.rst:9
msgid "Type"
msgstr ""

#: ../source/includes/apiargs/method-Bulk.execute-param.rst:13
msgid "``writeConcern``"
msgstr ""

#: ../source/includes/apiargs/method-Bulk.execute-param.rst:15
msgid "document"
msgstr ""

#: ../source/includes/apiargs/method-Bulk.execute-param.rst:17
#: ../source/includes/apiargs/method-Bulk.execute-param.rst:33
msgid ""
"Optional. :doc:`Write concern </reference/write-concern>` document for "
"the bulk operation as a whole. Omit to use default. For a standalone "
":binary:`~bin.mongod` server, the write concern defaults to ``{ w: 1 }``."
" With a replica set, the default write concern is ``{ w: 1 }`` unless "
"modified as part of the :ref:`replica set configuration <repl-set-modify-"
"default-write-concern>`."
msgstr ""

#: ../source/includes/apiargs/method-Bulk.execute-param.rst:24
#: ../source/includes/apiargs/method-Bulk.execute-param.rst:40
msgid "See :ref:`bulk-execute-ex-write-concern` for an example."
msgstr ""

#: ../source/includes/apiargs/method-Bulk.execute-param.rst
msgid "param document writeConcern"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt
msgid "Returns"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:29
msgid ""
"A :method:`BulkWriteResult` object that contains the status of the "
"operation."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:32
msgid ""
"After execution, you cannot re-execute the :method:`Bulk()` object "
"without reinitializing. See "
":method:`db.collection.initializeUnorderedBulkOp()` and "
":method:`db.collection.initializeOrderedBulkOp()`."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:40
msgid "Behavior"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:43
msgid "Ordered Operations"
msgstr ""

#: ../source/includes/fact-bulk-operation-ordered-list.rst:1
msgid ""
"When executing an :method:`ordered "
"<db.collection.initializeOrderedBulkOp()>` list of operations, MongoDB "
"groups the operations by the :data:`operation type <batchType>` and "
"contiguity; i.e. *contiguous* operations of the same type are grouped "
"together. For example, if an ordered list has two insert operations "
"followed by an update operation followed by another insert operation, "
"MongoDB groups the operations into three separate groups: first group "
"contains the two insert operations, second group contains the update "
"operation, and the third group contains the last insert operation. This "
"behavior is subject to change in future versions."
msgstr ""

#: ../source/includes/fact-bulk-operation-batches.rst:1
msgid ""
"Each group of operations can have at most :limit:`1000 operations <Write "
"Command Operation Limit Size>`. If a group exceeds this :limit:`limit "
"<Write Command Operation Limit Size>`, MongoDB will divide the group into"
" smaller groups of 1000 or less. For example, if the bulk operations list"
" consists of 2000 insert operations, MongoDB creates 2 groups, each with "
"1000 operations."
msgstr ""

#: ../source/includes/fact-bulk-operation-batches.rst:7
msgid ""
"The sizes and grouping mechanics are internal performance details and are"
" subject to change in future versions."
msgstr ""

#: ../source/includes/fact-bulk-operation-batches.rst:10
msgid ""
"To see how the operations are grouped for a bulk operation execution, "
"call :method:`Bulk.getOperations()` *after* the execution."
msgstr ""

#: ../source/includes/fact-bulk-operation-sharded-cluster.rst:1
msgid ""
"Executing an :method:`ordered <db.collection.initializeOrderedBulkOp()>` "
"list of operations on a sharded collection will generally be slower than "
"executing an :method:`unordered "
"<db.collection.initializeUnorderedBulkOp()>` list since with an ordered "
"list, each operation must wait for the previous operation to finish."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:52
msgid "Unordered Operations"
msgstr ""

#: ../source/includes/fact-bulk-operation-unordered-list.rst:1
msgid ""
"When executing an :method:`unordered "
"<db.collection.initializeUnorderedBulkOp()>` list of operations, MongoDB "
"groups the operations. With an unordered bulk operation, the operations "
"in the list may be reordered to increase performance. As such, "
"applications should not depend on the ordering when performing "
":method:`unordered <db.collection.initializeUnorderedBulkOp()>` bulk "
"operations."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:59
msgid "Examples"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:62
msgid "Execute Bulk Operations"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:64
msgid ""
"The following initializes a :method:`Bulk()` operations builder on the "
"``items`` collection, adds a series of insert operations, and executes "
"the operations:"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:75
#: ../source/reference/method/Bulk.execute.txt:113
msgid "The operation returns the following :method:`BulkWriteResult()` object:"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:90
msgid ""
"For details on the return object, see :method:`BulkWriteResult()`. For "
"details on the batches executed, see :method:`Bulk.getOperations()`."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:96
msgid "Override Default Write Concern"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:98
msgid ""
"The following operation to a replica set specifies a :doc:`write concern "
"</reference/write-concern>` of ``\"w: majority\"`` with a ``wtimeout`` of"
" 5000 milliseconds such that the method returns after the writes "
"propagate to a majority of the voting replica set members or the method "
"times out after 5 seconds."
msgstr ""

#: ../source/includes/fact-majority-write-concern-change.rst:1
msgid ""
"In previous versions, ``majority`` referred to the majority of all "
"members of the replica set instead of the majority of the voting members."
msgstr ""

#~ msgid ":ref:`bulk-write-result`"
#~ msgstr ""

#~ msgid ""
#~ "After execution, you must reinitialize "
#~ "the :method:`Bulk()` operations builder. See"
#~ " :method:`db.collection.initializeUnorderedBulkOp()` and "
#~ ":method:`db.collection.initializeOrderedBulkOp()`."
#~ msgstr ""

#~ msgid ""
#~ "The following initializes a :method:`Bulk()`"
#~ " operations builder on the ``items`` "
#~ "collection, adds a series of write "
#~ "operations, and executes the operations:"
#~ msgstr ""

#~ msgid "BulkWriteResult"
#~ msgstr ""

#~ msgid "The ``BulkWriteResult`` contains a document with the following fields:"
#~ msgstr ""

#~ msgid ""
#~ "The number of documents inserted using"
#~ " the :method:`Bulk.insert()` method."
#~ msgstr ""

#~ msgid ""
#~ "The number of documents inserted through"
#~ " update or replacement operations with "
#~ "the :method:`Bulk.find.upsert()` option."
#~ msgstr ""

#~ msgid ""
#~ "The number of documents selected for "
#~ "update or replacement. If the "
#~ "update/replacement operation results in no "
#~ "change to the document, e.g. "
#~ ":update:`$set` expression updates the value"
#~ " to the current value, "
#~ ":data:`~BulkWriteResult.nMatched` can be greater "
#~ "than :data:`~BulkWriteResult.nModified`."
#~ msgstr ""

#~ msgid ""
#~ "The number of documents updated or "
#~ "replaced. If the update/replacement operation"
#~ " results in no change to the "
#~ "document, such as setting the value "
#~ "of the field to its current value,"
#~ " :data:`~BulkWriteResult.nModified` can be less"
#~ " than :data:`~BulkWriteResult.nMatched`."
#~ msgstr ""

#~ msgid "The number of documents removed."
#~ msgstr ""

#~ msgid ""
#~ "An array of documents that contains "
#~ "information for each upserted documents."
#~ msgstr ""

#~ msgid "Each document contains the following information:"
#~ msgstr ""

#~ msgid ""
#~ "An integer that identifies the operation"
#~ " in the bulk operations list, which"
#~ " uses a zero-based index."
#~ msgstr ""

#~ msgid "The ``_id`` value of the upserted document."
#~ msgstr ""

#~ msgid ""
#~ "An array of documents that contains "
#~ "information regarding any error, unrelated "
#~ "to write concerns, encountered during "
#~ "the update operation. The "
#~ ":data:`~BulkWriteResult.writeErrors` array contains "
#~ "an error document for each write "
#~ "operation that errors."
#~ msgstr ""

#~ msgid "Each error document contains the following fields:"
#~ msgstr ""

#~ msgid ""
#~ "An integer that identifies the write "
#~ "operation in the bulk operations list,"
#~ " which uses a zero-based index."
#~ msgstr ""

#~ msgid "An integer value identifying the error."
#~ msgstr ""

#~ msgid "A description of the error."
#~ msgstr ""

#~ msgid ""
#~ "A document identifying the operation "
#~ "that failed. For instance, an "
#~ "update/replace operation error will return "
#~ "a document specifying the query, the "
#~ "update, the ``multi`` and the ``upsert``"
#~ " options; an insert operation will "
#~ "return the document the operation tried"
#~ " to insert."
#~ msgstr ""

#~ msgid ""
#~ "Document that describe error related to"
#~ " write concern and contains the "
#~ "field:"
#~ msgstr ""

#~ msgid "An integer value identifying the cause of the write concern error."
#~ msgstr ""

#~ msgid "A document identifying the write concern setting related to the error."
#~ msgstr ""

#~ msgid "A description of the cause of the write concern error."
#~ msgstr ""

# b30adf776b784c8c891ea3ea109fb7fd
#~ msgid "Example"
#~ msgstr ""

# 49286e639bbd438d88c5693a0d29a603
#~ msgid "See"
#~ msgstr ""

