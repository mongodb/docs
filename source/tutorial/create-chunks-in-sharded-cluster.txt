.. _create-chunks-in-a-sharded-cluster:
.. _create-ranges-in-a-sharded-cluster:

==================================
Create Ranges in a Sharded Cluster
==================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

In most situations a :term:`sharded cluster` will create, split, and
distribute ranges automatically without user intervention. However, in
some cases, MongoDB cannot create enough ranges or distribute data fast
enough to support the required throughput.

For example, if you want to ingest a large volume of data into a cluster
where you have inserts distributed across shards, pre-splitting the
ranges of an empty sharded collection can improve throughput.

.. note::

   Starting in MongoDB 6.0, the balancer does not distribute empty
   ranges. To pre-split the collection, use :dbcommand:`moveRange` to
   distribute the empty ranges across the shards in the cluster.
   ``moveRange`` automatically splits the range to be moved, meaning
   ``moveRange`` performs both splitting and moving. You don't need to
   manually split the range with :dbcommand:`split`.

Alternatively, by defining the :doc:`zones
and zone ranges </core/zone-sharding>` *before* sharding an empty or a
non-existing collection, the shard collection operation creates ranges
for the defined zone ranges as well as any additional ranges to cover
the entire range of the shard key values and performs an initial range
distribution based on the zone ranges. For more information, see
:ref:`initial-ranges-empty-collection`.

.. warning::

   Only pre-split ranges for an empty collection. Manually splitting
   ranges for a populated collection can lead to unpredictable range
   ranges and sizes as well as inefficient or ineffective balancing
   behavior.

Learn More
----------

- :ref:`bulk-write-sharded-collection`
- :method:`sh.balancerCollectionStatus()`
- Initial ranges created and distributed by the sharding command,
  see :ref:`initial-ranges-empty-collection`.
- Balancer and automatic distribution of ranges across shards,
  see :ref:`sharding-balancing-internals` and
  :ref:`sharding-range-migration`.
- Manually migrate ranges, see :ref:`<migrate-chunks-sharded-cluster>`.
