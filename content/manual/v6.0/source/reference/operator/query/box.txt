====
$box
====

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. query:: $box

   Specifies a rectangle for a :term:`geospatial` :query:`$geoWithin`
   query to return documents that are within the bounds of the
   rectangle, according to their point-based location data. When used
   with the :query:`$box` operator, :query:`$geoWithin` returns
   documents based on :ref:`grid coordinates
   <geospatial-legacy>` and does *not* query
   for GeoJSON shapes.

   To use the :query:`$box` operator, you must specify the bottom
   left and top right corners of the rectangle in an array object:

   .. code-block:: javascript

      {
        <location field>: {
           $geoWithin: {
              $box: [
                [ <bottom left coordinates> ],
                [ <upper right coordinates> ]
              ]
           }
        }
      }

   .. important::
      If you use longitude and latitude, specify **longitude first**.

Behavior
--------

The query calculates distances using flat (planar) geometry.

.. |operator| replace:: :query:`$box`
.. include:: /includes/note-geospatial-index-must-exist.rst

Only the :doc:`2d </core/2d>` geospatial index supports :query:`$box`.

Example
-------

The following example query returns all documents that are within the
box having points at: ``[ 0 , 0 ]``, ``[ 0 , 100 ]``, ``[ 100 , 0 ]``,
and ``[ 100 , 100 ]``.

.. code-block:: javascript

   db.places.find( {
      loc: { $geoWithin: { $box:  [ [ 0, 0 ], [ 100, 100 ] ] } }
   } )
