.. meta::
   :robots: noindex, nosnippet

.. _java-realmany:
.. _java-mixed:

===================
RealmAny - Java SDK
===================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. versionadded:: 10.6.0

.. include:: /includes/note-java-and-realmany.rst

You can use the :java-sdk:`RealmAny <io/realm/RealmAny.html>` data type to create
Realm object fields that can contain any of several
underlying types. You can store multiple ``RealmAny`` instances in
``RealmList``, ``RealmDictionary``, or ``RealmSet`` fields. To change
the value of a ``RealmAny`` field, assign a new ``RealmAny`` instance
with a different underlying value. In Atlas App Services backend
:ref:`object schemas <object-schema>`, the ``RealmAny``
data type is called **mixed**. ``RealmAny`` fields are indexable, but
cannot be used as primary keys.

.. note:: ``RealmAny`` Type Compatiblility

   ``RealmAny`` objects can refer to any
   :ref:`supported field type <java-supported-data-types>`
   *except*:

   - ``RealmAny``
   - ``RealmList``
   - ``RealmSet``
   - ``RealmDictionary``

Usage
-----

To create a ``RealmAny`` instance, use the
:java-sdk:`RealmAny.valueOf() <io/realm/RealmAny.html#valueOf-->` method
to assign an initial value or ``RealmAny.nullValue()`` to assign no
value. ``RealmAny`` instances are immutable just like ``String`` or
``Integer`` instances; if you want to assign a new value to a
``RealmAny`` field, you must create a new ``RealmAny`` instance.

.. warning:: Two Possible Null ``RealmAny`` Values

   ``RealmAny`` instances are always :ref:`nullable
   <java-optionality>`. Additionally, instances can contain a value
   of type ``RealmAny.Type.NULL``.

.. tabs-realm-languages::
   
   .. tab::
      :tabid: kotlin

      .. literalinclude:: /examples/generated/java/local/FrogAnyKt.snippet.complete.kt
         :language: kotlin
         :copyable: false

      .. literalinclude:: /examples/generated/java/local/DataTypesTest.snippet.realmany.kt
         :language: kotlin
         :copyable: false

   .. tab::
      :tabid: java

      .. literalinclude:: /examples/generated/java/local/FrogAny.snippet.complete.java
         :language: java
         :copyable: false

      .. literalinclude:: /examples/generated/java/local/DataTypesTest.snippet.realmany.java
         :language: java
         :copyable: false

Queries
-------

You can query a ``RealmAny`` field just like any other data type.
Operators that only work with certain types, such as :ref:`string
operators <java-string-operators>` and arithmetic operators, ignore
values that do not contain that type. Negating such operators matches
values that do not contain the type. Type queries match the underlying
type, rather than ``RealmAny``. Arithmetic operators convert numeric
values implicitly to compare across types.

Notifications
-------------

To subscribe to changes to a ``RealmAny`` field, use the
:java-sdk:`RealmObject.addChangeListener
<io/realm/RealmObject.html#addChangeListener-io.realm.RealmChangeListener->`
method of the enclosing object. You can use the
:java-sdk:`ObjectChangeSet <io/realm/ObjectChangeSet.html>`
parameter to determine if the ``RealmAny`` field changed.

.. tabs-realm-languages::
   
   .. tab::
      :tabid: kotlin

      .. literalinclude:: /examples/generated/java/local/DataTypesTest.snippet.realmany-notifications.kt
         :language: kotlin
         :copyable: false

   .. tab::
      :tabid: java

      .. literalinclude:: /examples/generated/java/local/DataTypesTest.snippet.realmany-notifications.java
         :language: java
         :copyable: false
