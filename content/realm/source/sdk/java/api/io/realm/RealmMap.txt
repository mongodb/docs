.. meta::
   :robots: noindex, nosnippet


.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol



Class RealmMap
^^^^^^^^^^^^^^

.. _io_realm_RealmMap:



io.realm
========


 | `java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ 
 | 		io.realm.RealmMap


**Implemented interfaces:**



- `java.util.Map <https://docs.oracle.com/javase/7/docs/api/java/util/Map.html>`__ 


RealmMap is used to map keys to values. A RealmMap cannot contain duplicate keys and each key can map to at most one value. A RealmMap cannot have ``null``  keys but can have ``null``  values.

Similarly to :ref:`RealmList <io_realm_RealmList>` s, a RealmDictionary can operate in managed and unmanaged modes. In managed mode a RealmDictionary persists all its contents inside a Realm whereas in unmanaged mode it functions like a `HashMap <https://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html>`__ .



Managed RealmDictionaries can only be created by Realm and will automatically update its content whenever the underlying Realm is updated. Managed RealmDictionaries can only be accessed using the getter that points to a RealmDictionary field of a :ref:`RealmObject <io_realm_RealmObject>` .



Unmanaged RealmDictionaries can be created by the user and can contain both managed and unmanaged RealmObjects. This is useful when dealing with JSON deserializers like GSON or other frameworks that inject values into a class. Unmanaged RealmMaps can be added to a Realm using the :ref:`Realm.copyToRealm(Iterable, ImportFlag...) <io_realm_Realm_copyToRealm_Iterable__ImportFlag____>`  method.






Method Summary
==============

.. list-table::
   :header-rows: 1
   
   * - Modifier and Type
     - Method and Description
   
   * - public **void**
     - | :ref:`addChangeListener <io_realm_RealmMap_addChangeListener>` (
       |  :ref:`io.realm.RealmChangeListener\<io.realm.RealmMap\<K, V>> <io_realm_RealmChangeListener>`  listener
       | )
       
       
       Adds a change listener to this :ref:`RealmMap <io_realm_RealmMap>` .
       
       
       
       
       
   
   * - public **void**
     - | :ref:`addChangeListener <io_realm_RealmMap_addChangeListener>` (
       |  :ref:`io.realm.MapChangeListener\<K, V> <io_realm_MapChangeListener>`  listener
       | )
       
       
       Adds a change listener to this :ref:`RealmMap <io_realm_RealmMap>` .
       
       
       
       
       
   
   * - public **void**
     - | :ref:`clear <io_realm_RealmMap_clear>` ()
       | 
       
       
       
       
       
       
   
   * - public **boolean**
     - | :ref:`containsKey <io_realm_RealmMap_containsKey>` (
       |  `Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__  key
       | )
       
       
       
       
       
       
   
   * - public **boolean**
     - | :ref:`containsValue <io_realm_RealmMap_containsValue>` (
       |  `Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__  value
       | )
       
       
       
       
       
       
   
   * - public `Set <https://docs.oracle.com/javase/7/docs/api/java/util/Set.html>`__ 
     - | :ref:`entrySet <io_realm_RealmMap_entrySet>` ()
       | 
       
       
       
       
       
       
   
   * - public :ref:`RealmMap <io_realm_RealmMap>` 
     - | :ref:`freeze <io_realm_RealmMap_freeze>` ()
       | 
       
       
       
       
       
       
   
   * - public **V**
     - | :ref:`get <io_realm_RealmMap_get>` (
       |  `Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__  key
       | )
       
       
       
       
       
       
   
   * - public **boolean**
     - | :ref:`isEmpty <io_realm_RealmMap_isEmpty>` ()
       | 
       
       
       
       
       
       
   
   * - public **boolean**
     - | :ref:`isFrozen <io_realm_RealmMap_isFrozen>` ()
       | 
       
       
       
       
       
       
       
       
   
   * - public **boolean**
     - | :ref:`isManaged <io_realm_RealmMap_isManaged>` ()
       | 
       
       
       
       
       
       
       
       
   
   * - public **boolean**
     - | :ref:`isValid <io_realm_RealmMap_isValid>` ()
       | 
       
       
       
       
       
       
       
       
   
   * - public `Set <https://docs.oracle.com/javase/7/docs/api/java/util/Set.html>`__ 
     - | :ref:`keySet <io_realm_RealmMap_keySet>` ()
       | 
       
       
       
       
       
       
   
   * - public **V**
     - | :ref:`put <io_realm_RealmMap_put>` (
       |  **K** key, 
       |  **V** value
       | )
       
       
       
       
       
       
   
   * - public **void**
     - | :ref:`putAll <io_realm_RealmMap_putAll>` (
       |  `java.util.Map\<? extends K, ? extends V> <https://docs.oracle.com/javase/7/docs/api/java/util/Map.html>`__  m
       | )
       
       
       
       
       
       
   
   * - public **V**
     - | :ref:`remove <io_realm_RealmMap_remove>` (
       |  `Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__  key
       | )
       
       
       
       
       
       
   
   * - public **void**
     - | :ref:`removeAllChangeListeners <io_realm_RealmMap_removeAllChangeListeners>` ()
       | 
       
       
       Removes all user-defined change listeners.
       
       
       
   
   * - public **void**
     - | :ref:`removeChangeListener <io_realm_RealmMap_removeChangeListener>` (
       |  :ref:`io.realm.RealmChangeListener\<io.realm.RealmMap\<K, V>> <io_realm_RealmChangeListener>`  listener
       | )
       
       
       Removes the specified change listener.
       
       
       
   
   * - public **void**
     - | :ref:`removeChangeListener <io_realm_RealmMap_removeChangeListener>` (
       |  :ref:`io.realm.MapChangeListener\<K, V> <io_realm_MapChangeListener>`  listener
       | )
       
       
       Removes the specified change listener.
       
       
       
   
   * - public **int**
     - | :ref:`size <io_realm_RealmMap_size>` ()
       | 
       
       
       
       
       
       
   
   * - public `Collection <https://docs.oracle.com/javase/7/docs/api/java/util/Collection.html>`__ 
     - | :ref:`values <io_realm_RealmMap_values>` ()
       | 
       
       
       
       
       
       
   
   


Inherited Methods
=================



- Methods inherited from class `java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ : ``getClass`` , ``hashCode`` , ``equals`` , ``clone`` , ``toString`` , ``notify`` , ``notifyAll`` , ``wait`` , ``wait`` , ``wait`` , ``finalize`` 




Method Detail
=============

.. _addChangeListener:

.. _addChangeListener__:

.. _RealmMap_addChangeListener:

.. _RealmMap_addChangeListener__:

.. _io_realm_RealmMap_addChangeListener:

.. _io_realm_RealmMap_addChangeListener__:



addChangeListener
-----------------

.. _io_realm_RealmMap_addChangeListener_io_realm_RealmChangeListener_:

.. _io_realm_RealmMap_addChangeListener_RealmChangeListener_:

.. _addChangeListener_io_realm_RealmChangeListener_:

.. _addChangeListener_RealmChangeListener_:

.. _RealmMap_addChangeListener_io_realm_RealmChangeListener_:

.. _RealmMap_addChangeListener_RealmChangeListener_:

.. _io_realm_RealmMap_addChangeListener_RealmChangeListener_RealmMap_K__V___:

.. list-table::
   :header-rows: 1
   
   * - | public **void** :ref:`addChangeListener <io_realm_RealmMap_addChangeListener>` (
       |  :ref:`io.realm.RealmChangeListener\<io.realm.RealmMap\<K, V>> <io_realm_RealmChangeListener>`  listener
       | )
       
       
       
   
   * - Adds a change listener to this :ref:`RealmMap <io_realm_RealmMap>` .
       
       Registering a change listener will not prevent the underlying RealmMap from being garbage collected. If the RealmMap is garbage collected, the change listener will stop being triggered. To avoid this, keep a strong reference for as long as appropriate e.g. in a class variable.
       
        
       
       .. code-block:: java
       
          
           public class MyActivity extends Activity {
          
               private RealmMap<String, Dog> dogs; // Strong reference to keep listeners alive
          
               @Override
               protected void onCreate(Bundle savedInstanceState) {
                 super.onCreate(savedInstanceState);
                 dogs = realm.where(Person.class).findFirst().getDogs();
                 dogs.addChangeListener(new RealmChangeListener<RealmMap<String, Dog>>() {
                     @Override
                     public void onChange(RealmMap<String, Dog> map) {
                         // React to change
                     }
                 });
               }
           }
           
       
       
        
       
       
       
       
       
       
       **Parameters**
       
       - ``listener`` - the change listener to be notified.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the change listener is ``null`` .
          
          
          
          
          
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if you try to add a listener from a non-Looper or `android.app.IntentService <https://developer.android.com/reference/android/app/IntentService>`__  thread.
          
          
          
          
          
       
       
       
       
       
       
       .. seealso::
       
       
          
          - :ref:`io.realm.RealmChangeListener <io_realm_RealmChangeListener>` 
             
             
             
          
          
          
       
       
   
   
.. _io_realm_RealmMap_addChangeListener_io_realm_MapChangeListener_:

.. _io_realm_RealmMap_addChangeListener_MapChangeListener_:

.. _addChangeListener_io_realm_MapChangeListener_:

.. _addChangeListener_MapChangeListener_:

.. _RealmMap_addChangeListener_io_realm_MapChangeListener_:

.. _RealmMap_addChangeListener_MapChangeListener_:

.. _io_realm_RealmMap_addChangeListener_MapChangeListener_K__V__:

.. list-table::
   :header-rows: 1
   
   * - | public **void** :ref:`addChangeListener <io_realm_RealmMap_addChangeListener>` (
       |  :ref:`io.realm.MapChangeListener\<K, V> <io_realm_MapChangeListener>`  listener
       | )
       
       
       
   
   * - Adds a change listener to this :ref:`RealmMap <io_realm_RealmMap>` .
       
       Registering a change listener will not prevent the underlying RealmMap from being garbage collected. If the RealmMap is garbage collected, the change listener will stop being triggered. To avoid this, keep a strong reference for as long as appropriate e.g. in a class variable.
       
        
       
       .. code-block:: java
       
          
           public class MyActivity extends Activity {
          
               private RealmMap<String, Dog> dogs; // Strong reference to keep listeners alive
          
               @Override
               protected void onCreate(Bundle savedInstanceState) {
                 super.onCreate(savedInstanceState);
                 dogs = realm.where(Person.class).findFirst().getDogs();
                 dogs.addChangeListener(new MapChangeListener<String, Dog>() {
                     @Override
                     public void onChange(RealmMap<String, Dog> map, MapChangeSet<String> changeSet) {
                         // React to change
                     }
                 });
               }
           }
           
       
       
        
       
       
       
       
       
       
       **Parameters**
       
       - ``listener`` - the change listener to be notified.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the change listener is ``null`` .
          
          
          
          
          
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if you try to add a listener from a non-Looper or `android.app.IntentService <https://developer.android.com/reference/android/app/IntentService>`__  thread.
          
          
          
          
          
       
       
       
       
       
   
   


.. _clear:

.. _clear__:

.. _RealmMap_clear:

.. _RealmMap_clear__:

.. _io_realm_RealmMap_clear:

.. _io_realm_RealmMap_clear__:



clear
-----

.. list-table::
   :header-rows: 1
   
   * - | public **void** :ref:`clear <io_realm_RealmMap_clear>` ()
       | 
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _containsKey:

.. _containsKey__:

.. _RealmMap_containsKey:

.. _RealmMap_containsKey__:

.. _io_realm_RealmMap_containsKey:

.. _io_realm_RealmMap_containsKey__:



containsKey
-----------

.. _io_realm_RealmMap_containsKey_java_lang_Object_:

.. _io_realm_RealmMap_containsKey_Object_:

.. _containsKey_java_lang_Object_:

.. _containsKey_Object_:

.. _RealmMap_containsKey_java_lang_Object_:

.. _RealmMap_containsKey_Object_:

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`containsKey <io_realm_RealmMap_containsKey>` (
       |  `Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__  key
       | )
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _containsValue:

.. _containsValue__:

.. _RealmMap_containsValue:

.. _RealmMap_containsValue__:

.. _io_realm_RealmMap_containsValue:

.. _io_realm_RealmMap_containsValue__:



containsValue
-------------

.. _io_realm_RealmMap_containsValue_java_lang_Object_:

.. _io_realm_RealmMap_containsValue_Object_:

.. _containsValue_java_lang_Object_:

.. _containsValue_Object_:

.. _RealmMap_containsValue_java_lang_Object_:

.. _RealmMap_containsValue_Object_:

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`containsValue <io_realm_RealmMap_containsValue>` (
       |  `Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__  value
       | )
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _entrySet:

.. _entrySet__:

.. _RealmMap_entrySet:

.. _RealmMap_entrySet__:

.. _io_realm_RealmMap_entrySet:

.. _io_realm_RealmMap_entrySet__:



entrySet
--------

.. list-table::
   :header-rows: 1
   
   * - | public `Set <https://docs.oracle.com/javase/7/docs/api/java/util/Set.html>`__  :ref:`entrySet <io_realm_RealmMap_entrySet>` ()
       | 
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _freeze:

.. _freeze__:

.. _RealmMap_freeze:

.. _RealmMap_freeze__:

.. _io_realm_RealmMap_freeze:

.. _io_realm_RealmMap_freeze__:



freeze
------

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmMap <io_realm_RealmMap>`  :ref:`freeze <io_realm_RealmMap_freeze>` ()
       | 
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _get:

.. _get__:

.. _RealmMap_get:

.. _RealmMap_get__:

.. _io_realm_RealmMap_get:

.. _io_realm_RealmMap_get__:



get
----

.. _io_realm_RealmMap_get_java_lang_Object_:

.. _io_realm_RealmMap_get_Object_:

.. _get_java_lang_Object_:

.. _get_Object_:

.. _RealmMap_get_java_lang_Object_:

.. _RealmMap_get_Object_:

.. list-table::
   :header-rows: 1
   
   * - | public **V** :ref:`get <io_realm_RealmMap_get>` (
       |  `Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__  key
       | )
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _isEmpty:

.. _isEmpty__:

.. _RealmMap_isEmpty:

.. _RealmMap_isEmpty__:

.. _io_realm_RealmMap_isEmpty:

.. _io_realm_RealmMap_isEmpty__:



isEmpty
-------

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`isEmpty <io_realm_RealmMap_isEmpty>` ()
       | 
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _isFrozen:

.. _isFrozen__:

.. _RealmMap_isFrozen:

.. _RealmMap_isFrozen__:

.. _io_realm_RealmMap_isFrozen:

.. _io_realm_RealmMap_isFrozen__:



isFrozen
--------

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`isFrozen <io_realm_RealmMap_isFrozen>` ()
       | 
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _isManaged:

.. _isManaged__:

.. _RealmMap_isManaged:

.. _RealmMap_isManaged__:

.. _io_realm_RealmMap_isManaged:

.. _io_realm_RealmMap_isManaged__:



isManaged
---------

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`isManaged <io_realm_RealmMap_isManaged>` ()
       | 
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _isValid:

.. _isValid__:

.. _RealmMap_isValid:

.. _RealmMap_isValid__:

.. _io_realm_RealmMap_isValid:

.. _io_realm_RealmMap_isValid__:



isValid
-------

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`isValid <io_realm_RealmMap_isValid>` ()
       | 
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _keySet:

.. _keySet__:

.. _RealmMap_keySet:

.. _RealmMap_keySet__:

.. _io_realm_RealmMap_keySet:

.. _io_realm_RealmMap_keySet__:



keySet
------

.. list-table::
   :header-rows: 1
   
   * - | public `Set <https://docs.oracle.com/javase/7/docs/api/java/util/Set.html>`__  :ref:`keySet <io_realm_RealmMap_keySet>` ()
       | 
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _put:

.. _put__:

.. _RealmMap_put:

.. _RealmMap_put__:

.. _io_realm_RealmMap_put:

.. _io_realm_RealmMap_put__:



put
----

.. _io_realm_RealmMap_put_K_V_:

.. _io_realm_RealmMap_put_K__V_:

.. _put_K_V_:

.. _put_K__V_:

.. _RealmMap_put_K_V_:

.. _RealmMap_put_K__V_:

.. list-table::
   :header-rows: 1
   
   * - | public **V** :ref:`put <io_realm_RealmMap_put>` (
       |  **K** key, 
       |  **V** value
       | )
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _putAll:

.. _putAll__:

.. _RealmMap_putAll:

.. _RealmMap_putAll__:

.. _io_realm_RealmMap_putAll:

.. _io_realm_RealmMap_putAll__:



putAll
------

.. _io_realm_RealmMap_putAll_java_util_Map_:

.. _io_realm_RealmMap_putAll_Map_:

.. _io_realm_RealmMap_putAll_Map___extends_K____extends_V__:

.. _putAll_java_util_Map_:

.. _putAll_Map_:

.. _putAll_Map___extends_K____extends_V__:

.. _RealmMap_putAll_java_util_Map_:

.. _RealmMap_putAll_Map_:

.. _RealmMap_putAll_Map___extends_K____extends_V__:

.. list-table::
   :header-rows: 1
   
   * - | public **void** :ref:`putAll <io_realm_RealmMap_putAll>` (
       |  `java.util.Map\<? extends K, ? extends V> <https://docs.oracle.com/javase/7/docs/api/java/util/Map.html>`__  m
       | )
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _remove:

.. _remove__:

.. _RealmMap_remove:

.. _RealmMap_remove__:

.. _io_realm_RealmMap_remove:

.. _io_realm_RealmMap_remove__:



remove
------

.. _io_realm_RealmMap_remove_java_lang_Object_:

.. _io_realm_RealmMap_remove_Object_:

.. _remove_java_lang_Object_:

.. _remove_Object_:

.. _RealmMap_remove_java_lang_Object_:

.. _RealmMap_remove_Object_:

.. list-table::
   :header-rows: 1
   
   * - | public **V** :ref:`remove <io_realm_RealmMap_remove>` (
       |  `Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__  key
       | )
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _removeAllChangeListeners:

.. _removeAllChangeListeners__:

.. _RealmMap_removeAllChangeListeners:

.. _RealmMap_removeAllChangeListeners__:

.. _io_realm_RealmMap_removeAllChangeListeners:

.. _io_realm_RealmMap_removeAllChangeListeners__:



removeAllChangeListeners
------------------------

.. list-table::
   :header-rows: 1
   
   * - | public **void** :ref:`removeAllChangeListeners <io_realm_RealmMap_removeAllChangeListeners>` ()
       | 
       
       
       
   
   * - Removes all user-defined change listeners.
       
       
       
       
       
       
       
       
       **Throws**
       
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if you try to remove listeners from a non-Looper Thread.
          
          
          
       
       
       
       
       
       
       .. seealso::
       
       
          
          - :ref:`io.realm.RealmChangeListener <io_realm_RealmChangeListener>` 
             
             
             
          
          
          
       
       
   
   


.. _removeChangeListener:

.. _removeChangeListener__:

.. _RealmMap_removeChangeListener:

.. _RealmMap_removeChangeListener__:

.. _io_realm_RealmMap_removeChangeListener:

.. _io_realm_RealmMap_removeChangeListener__:



removeChangeListener
--------------------

.. _io_realm_RealmMap_removeChangeListener_io_realm_RealmChangeListener_:

.. _io_realm_RealmMap_removeChangeListener_RealmChangeListener_:

.. _removeChangeListener_io_realm_RealmChangeListener_:

.. _removeChangeListener_RealmChangeListener_:

.. _RealmMap_removeChangeListener_io_realm_RealmChangeListener_:

.. _RealmMap_removeChangeListener_RealmChangeListener_:

.. _io_realm_RealmMap_removeChangeListener_RealmChangeListener_RealmMap_K__V___:

.. list-table::
   :header-rows: 1
   
   * - | public **void** :ref:`removeChangeListener <io_realm_RealmMap_removeChangeListener>` (
       |  :ref:`io.realm.RealmChangeListener\<io.realm.RealmMap\<K, V>> <io_realm_RealmChangeListener>`  listener
       | )
       
       
       
   
   * - Removes the specified change listener.
       
       
       
       
       **Parameters**
       
       - ``listener`` - the change listener to be removed.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the change listener is ``null`` .
          
          
          
          
          
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if you try to remove a listener from a non-Looper Thread.
          
          
          
       
       
       
       
       
       
       .. seealso::
       
       
          
          - :ref:`io.realm.RealmChangeListener <io_realm_RealmChangeListener>` 
             
             
             
          
          
          
       
       
   
   
.. _io_realm_RealmMap_removeChangeListener_io_realm_MapChangeListener_:

.. _io_realm_RealmMap_removeChangeListener_MapChangeListener_:

.. _removeChangeListener_io_realm_MapChangeListener_:

.. _removeChangeListener_MapChangeListener_:

.. _RealmMap_removeChangeListener_io_realm_MapChangeListener_:

.. _RealmMap_removeChangeListener_MapChangeListener_:

.. _io_realm_RealmMap_removeChangeListener_MapChangeListener_K__V__:

.. list-table::
   :header-rows: 1
   
   * - | public **void** :ref:`removeChangeListener <io_realm_RealmMap_removeChangeListener>` (
       |  :ref:`io.realm.MapChangeListener\<K, V> <io_realm_MapChangeListener>`  listener
       | )
       
       
       
   
   * - Removes the specified change listener.
       
       
       
       
       **Parameters**
       
       - ``listener`` - the change listener to be removed.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the change listener is ``null`` .
          
          
          
          
          
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if you try to remove a listener from a non-Looper Thread.
          
          
          
       
       
       
       
       
   
   


.. _size:

.. _size__:

.. _RealmMap_size:

.. _RealmMap_size__:

.. _io_realm_RealmMap_size:

.. _io_realm_RealmMap_size__:



size
----

.. list-table::
   :header-rows: 1
   
   * - | public **int** :ref:`size <io_realm_RealmMap_size>` ()
       | 
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _values:

.. _values__:

.. _RealmMap_values:

.. _RealmMap_values__:

.. _io_realm_RealmMap_values:

.. _io_realm_RealmMap_values__:



values
------

.. list-table::
   :header-rows: 1
   
   * - | public `Collection <https://docs.oracle.com/javase/7/docs/api/java/util/Collection.html>`__  :ref:`values <io_realm_RealmMap_values>` ()
       | 
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
   
   



