ref: transactions-faq
content: |
   Because a single document can contain related data that would otherwise
   be modeled across separate parent-child tables in a relational schema,
   MongoDB's atomic single-document operations already provide transaction
   semantics that meet the data integrity needs of the majority of
   applications. One or more fields may be written in a single operation,
   including updates to multiple sub-documents and elements of an array.
   The guarantees provided by MongoDB ensure complete isolation as a
   document is updated; any errors cause the operation to roll back so
   that clients receive a consistent view of the document.
   
   Starting in version 4.0, for situations that require atomicity for
   updates to multiple documents or consistency between reads to multiple
   documents, MongoDB provides :manual:`multi-document transactions
   </core/transactions>` for replica sets, and transactions for sharded
   clusters are scheduled for MongoDB 4.2.
---
ref: transactions-usage
content: |
   .. important::
      In most cases, multi-document transaction incurs a greater
      performance cost over single document writes, and the
      availability of multi-document transaction should not be a
      replacement for effective schema design. For many scenarios, the
      :ref:`denormalized data model (embedded documents and arrays)
      <data-modeling-embedding>` will continue to be optimal for your
      data and use cases. That is, for many scenarios, modeling your data
      appropriately will minimize the need for multi-document
      transactions.
...