.. _atlasfederatedauth-custom-resource:

======================================
``AtlasFederatedAuth`` Custom Resource
======================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

The ``AtlasFederatedAuth`` custom resource configures
:ref:`federated authentication <atlas-federated-authentication>` 
for your |service| organization.

.. include:: /includes/fact-ak8so-federated-auth.rst

.. include:: /includes/fact-ak8so-crds.rst

To use this resource, you must have an existing identity 
provider (|idp|) linked to your |service| organization. 
To learn more, see :ref:`ak8so-federated-auth`.

Examples
--------

.. include:: /includes/fact-atlasfederatedauth-example.rst

.. code-block::

   apiVersion: atlas.mongodb.com/v1
   kind: AtlasFederatedAuth
   metadata:
     name: atlas-default-federated-auth
     namespace: mongodb-atlas-system
   spec:
     enabled: true
     dataAccessIdentityProviders:
       - 32b6e34b3d91647abb20e7b8
       - 42d8v92k5a34184rnv93f0c1
     connectionSecretRef:
       name: my-org-secret
       namespace: mongodb-atlas-system
     domainAllowList:
       - my-org-domain.com
     domainRestrictionEnabled: true
     ssoDebugEnabled: false
     postAuthRoleGrants:
       - ORG_MEMBER
     roleMappings:
       - externalGroupName: org-admin
         roleAssignments:
           - role: ORG_OWNER
       - externalGroupName: dev-team
         roleAssignments:
           - role: ORG_GROUP_CREATOR
           - projectName: dev-project
             role: GROUP_OWNER
   status:
     conditions:
       - type: Ready
         status: True
       - type: RolesReady
         status: True
       - type: UsersReady
         status: True

.. note::

   The preceding example includes the ``status`` section,
   which describes the update process. To learn more, 
   see :ref:`ak8so-create-update-process`.


.. _atlasfederatedauth-parameters:

Parameters
----------

This section describes the parameters available 
for the ``AtlasFederatedAuth`` custom resource. For
detailed descriptions of the parameters, see the 
:oas-atlas-tag:`Atlas Federated Authentication API Resource
</federated-authentication>`.

Refer to these descriptions, the example on this page, and the
API documentation to customize your specifications.

.. _atlasfederatedauth-metadata-name:

``metadata.name``
  *Type*: string

  *Required*

  Name that identifies the ``AtlasFederatedAuth`` custom resource
  that |ak8so| uses to configure federated authentication
  for the organization.

.. _atlasfederatedauth-metadata-namespace:

``metadata.namespace``
  *Type*: string

  *Optional*

  Namespace that you want to contain the ``atlasFederatedAuth``
  custom resource. If unspecified, |ak8so| uses the current namespace
  set by ``kubectl``.

.. _atlasfederatedauth-enabled:

``spec.enabled``
  *Type*: boolean

  *Required*

  Flag that determines whether to enable federated 
  authentication for the organization. Defaults to ``false``.

.. _atlasfederatedauth-dateaccessidentityproviders-id:

``spec.dataAccessIdentityProviders``
  *Type*: list

  *Optional*
  
  List of string values that identify the identity providers that 
  |ak8so| uses to configure federated authentication
  for the organization.

  .. note::

     The ``dataAccessIdentityProviders`` parameter defines one or 
     more identity providers that are used for data access. This 
     means that they are used to access the actual MongoDB database 
     instances, as configured in the :ref:`AtlasDatabaseUser <atlasdatabaseuser-custom-resource>` 
     resource. This is different from the existing options in the 
     :ref:`AtlasFederatedAuth <atlasfederatedauth-custom-resource>` 
     resource which is used to configure using identity providers for 
     the {+service+} UI.

.. _atlasfederatedauth-connectionSecretRef-name:

``spec.connectionSecretRef.name``
  *Type*: string

  *Required*

  Name of the opaque |k8s-secret| that contains a single ``password`` 
  field with the organization ID and :ref:`API keys 
  <about-org-api-keys>` that |ak8so| uses to :ref:`connect 
  <ak8so-access-to-atlas-ref>` to |service|. When you 
  :ref:`create the secret <ak8so-access-to-atlas-procedure>`, 
  specify the ``orgID``, ``publicApiKey``, and ``privateApiKey`` 
  fields.

  The secret's API keys must have the :authrole:`Organization Owner` role. 
  You can use the same secret from an :ref:`atlasproject-custom-resource` 
  only if the secret has :authrole:`Organization Owner` permissions.

  .. include:: /includes/fact-ak8so-label-secret.rst

  .. note::

     By default, |ak8so| keeps connection secrets in the same |k8s-ns| 
     as the :ref:`atlasproject-custom-resource`. To store 
     secrets in another |k8s-ns|, specify the :ref:`spec.connectionSecretRef.namespace 
     <atlasfederatedauth-connectionSecretRef-namespace>` parameter.

.. _atlasfederatedauth-connectionSecretRef-namespace:

``spec.connectionSecretRef.namespace``
  *Type*: string

  *Optional*

  |k8s-Ns| that contains the |k8s-secret| with the organization ID 
  and :ref:`API keys <about-org-api-keys>` that |ak8so| uses to 
  :ref:`connect <ak8so-access-to-atlas-ref>` to |service|. 
  If you omit or don't specify this parameter, |ak8so| keeps 
  connection secrets in the same |k8s-ns| as the 
  :ref:`atlasproject-custom-resource`.

.. _atlasfederatedauth-domainAllowList:

``spec.domainAllowList``
  *Type*: array of strings

  *Optional*

  Approved domains that restrict users who can join the organization 
  based on their email address.

.. _atlasfederatedauth-domainRestrictionEnabled:

``spec.domainRestrictionEnabled``
  *Type*: boolean

  *Required*
  
  Flag that indicates whether domain restriction is enabled for 
  the connected organization. Defaults to ``false``.
  
  If you set this parameter to ``true``, |service| returns a list 
  of users that belong to organizations outside of the federation.
  To learn more, see :ref:`User Conflicts <fed-auth-advanced-procedure>`.

.. _atlasfederatedauth-ssoDebugEnabled:

``spec.ssoDebugEnabled``
  *Type*: boolean

  *Optional*
  
  Flag that indicates whether the identity provider has debug enabled 
  for :abbr:`SSO (Single Sign-On)`. Defaults to ``false``.

.. _atlasfederatedauth-postAuthRoleGrants:

``spec.postAuthRoleGrants``
  *Type*: array of strings

  *Optional*

  |service| roles that are granted to a user in this organization after 
  authenticating. For example:

  - ``ORG_MEMBER``
  - ``ORG_READ_ONLY``
  - ``ORG_BILLING_ADMIN``
  - ``ORG_GROUP_CREATOR``
  - ``ORG_OWNER``
  - ``ORG_BILLING_READ_ONLY``
  - ``ORG_TEAM_MEMBERS_ADMIN``

  For a full list of accepted values, refer to the 
  :oas-atlas-op:`Federated Authentication API Resource </listConnectedOrgConfigs>`.

.. _atlasfederatedauth-roleMappings:

``spec.roleMappings``
  *Type*: array of objects

  *Optional*

  Role mappings that are configured in this organization.

  The :ref:`spec.roleMappings.roleAssignments 
  <atlasfederatedauth-roleAssignments>` 
  parameter must include at least one organization role
  within the current organization or the projects in 
  the organization.

.. _atlasfederatedauth-externalGroupName:

``spec.roleMappings.externalGroupName``
  *Type*: string

  *Required*

  Unique human-readable label that identifies the identity 
  provider group to which this role mapping applies.

.. _atlasfederatedauth-roleAssignments:

``spec.roleMappings.roleAssignments``
  *Type*: array of objects

  *Optional*

  |service| roles and the unique identifiers of the groups and 
  organizations associated with each role. This parameter
  must include at least one organization role
  within the current organization or the projects in 
  the organization.

.. _atlasfederatedauth-projectName:

``spec.roleMappings.roleAssignments.projectName``
  *Type*: string

  *Optional*

  The |service| project in the same organization to which to associate the
  role.

.. _atlasfederatedauth-role:

``spec.roleMappings.roleAssignments.role``
  *Type*: string

  *Optional*

  Human-readable label that identifies the collection of privileges 
  that |service| grants a specific API key, user, or team. 
  These roles include organization and project-level privileges.

  |ak8so| accepts the following values:

  - ``ORG_MEMBER``
  - ``ORG_READ_ONLY``
  - ``ORG_BILLING_ADMIN``
  - ``ORG_GROUP_CREATOR``
  - ``ORG_OWNER``
  - ``ORG_BILLING_READ_ONLY``
  - ``ORG_TEAM_MEMBERS_ADMIN``
  - ``GROUP_AUTOMATION_ADMIN``
  - ``GROUP_BACKUP_ADMIN``
  - ``GROUP_MONITORING_ADMIN``
  - ``GROUP_OWNER``
  - ``GROUP_READ_ONLY``
  - ``GROUP_USER_ADMIN``
  - ``GROUP_BILLING_ADMIN``
  - ``GROUP_DATA_ACCESS_ADMIN``
  - ``GROUP_DATA_ACCESS_READ_ONLY``
  - ``GROUP_DATA_ACCESS_READ_WRITE``
  - ``GROUP_CHARTS_ADMIN``
  - ``GROUP_CLUSTER_MANAGER``
  - ``GROUP_SEARCH_INDEX_EDITOR``
