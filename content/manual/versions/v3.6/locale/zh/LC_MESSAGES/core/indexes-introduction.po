# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/indexes-introduction.txt:6
msgid "Index Introduction"
msgstr ""

#: ../source/core/indexes-introduction.txt:10
msgid ""
"Indexes support the efficient execution of queries in MongoDB. Without "
"indexes, MongoDB must perform a *collection scan*, i.e. scan every document "
"in a collection, to select those documents that match the query statement. "
"If an appropriate index exists for a query, MongoDB can use the index to "
"limit the number of documents it must inspect."
msgstr ""

#: ../source/core/indexes-introduction.txt:17
msgid ""
"Indexes are special data structures [#b-tree]_ that store a small portion of"
" the collection's data set in an easy to traverse form. The index stores the"
" value of a specific field or set of fields, ordered by the value of the "
"field. The ordering of the index entries supports efficient equality matches"
" and range-based query operations. In addition, MongoDB can return sorted "
"results by using the ordering in the index."
msgstr ""

#: ../source/core/indexes-introduction.txt:25
msgid ""
"The following diagram illustrates a query that selects and orders the "
"matching documents using an index:"
msgstr ""

#: ../source/core/indexes-introduction.txt:30
msgid ""
"Fundamentally, indexes in MongoDB are similar to indexes in other database "
"systems. MongoDB defines indexes at the :term:`collection` level and "
"supports indexes on any field or sub-field of the documents in a MongoDB "
"collection."
msgstr ""

#: ../source/core/indexes-introduction.txt:35
msgid "MongoDB indexes use a B-tree data structure."
msgstr ""

#: ../source/core/indexes-introduction.txt:38
msgid "Index Types"
msgstr ""

#: ../source/core/indexes-introduction.txt:40
msgid ""
"MongoDB provides a number of different index types to support specific types"
" of data and queries."
msgstr ""

#: ../source/core/indexes-introduction.txt:44
msgid "Default ``_id``"
msgstr ""

#: ../source/core/indexes-introduction.txt:46
msgid ""
"All MongoDB collections have an index on the ``_id`` field that exists by "
"default. If applications do not specify a value for ``_id`` the driver or "
"the :program:`mongod` will create an ``_id`` field with an :term:`ObjectId` "
"value."
msgstr ""

#: ../source/core/indexes-introduction.txt:51
msgid ""
"The ``_id`` index is *unique* and prevents clients from inserting two "
"documents with the same value for the ``_id`` field."
msgstr ""

#: ../source/core/indexes-introduction.txt:57
msgid "Single Field"
msgstr ""

#: ../source/core/indexes-introduction.txt:59
msgid ""
"In addition to the MongoDB-defined ``_id`` index, MongoDB supports the "
"creation of user-defined ascending/descending indexes on a :doc:`single "
"field of a document </core/index-single>`."
msgstr ""

#: ../source/core/indexes-introduction.txt:65
msgid ""
"For a single-field index and sort operations, the sort order (i.e. ascending"
" or descending) of the index key does not matter because MongoDB can "
"traverse the index in either direction."
msgstr ""

#: ../source/core/indexes-introduction.txt:69
msgid ""
"See :doc:`/core/index-single` and :ref:`sort-results-single-field` for more "
"information on single-field indexes."
msgstr ""

#: ../source/core/indexes-introduction.txt:73
msgid "Compound Index"
msgstr ""

#: ../source/core/indexes-introduction.txt:75
msgid ""
"MongoDB also supports user-defined indexes on multiple fields, i.e. "
":doc:`compound indexes </core/index-compound>`."
msgstr ""

#: ../source/core/indexes-introduction.txt:78
msgid ""
"The order of fields listed in a compound index has significance. For "
"instance, if a compound index consists of ``{ userid: 1, score: -1 }``, the "
"index sorts first by ``userid`` and then, within each ``userid`` value, "
"sorts by ``score``."
msgstr ""

#: ../source/core/indexes-introduction.txt:85
msgid ""
"For compound indexes and sort operations, the sort order (i.e. ascending or "
"descending) of the index keys can determine whether the index can support a "
"sort operation. See :ref:`index-ascending-and-descending` for more "
"information on the impact of index order on results in compound indexes."
msgstr ""

#: ../source/core/indexes-introduction.txt:91
msgid ""
"See :doc:`/core/index-compound` and :ref:`sort-on-multiple-fields` for more "
"information on compound indexes."
msgstr ""

#: ../source/core/indexes-introduction.txt:95
msgid "Multikey Index"
msgstr ""

#: ../source/core/indexes-introduction.txt:97
msgid ""
"MongoDB uses :doc:`multikey indexes </core/index-multikey>` to index the "
"content stored in arrays. If you index a field that holds an array value, "
"MongoDB creates separate index entries for *every* element of the array. "
"These :doc:`multikey indexes </core/index-multikey>` allow queries to select"
" documents that contain arrays by matching on element or elements of the "
"arrays. MongoDB automatically determines whether to create a multikey index "
"if the indexed field contains an array value; you do not need to explicitly "
"specify the multikey type."
msgstr ""

#: ../source/core/indexes-introduction.txt:108
msgid ""
"See :doc:`/core/index-multikey` and :doc:`/core/multikey-index-bounds` for "
"more information on multikey indexes."
msgstr ""

#: ../source/core/indexes-introduction.txt:112
msgid "Geospatial Index"
msgstr ""

#: ../source/core/indexes-introduction.txt:114
msgid ""
"To support efficient queries of geospatial coordinate data, MongoDB provides"
" two special indexes: :doc:`2d indexes </core/2d>` that uses planar geometry"
" when returning results and :doc:`2sphere indexes </core/2dsphere>` that use"
" spherical geometry to return results."
msgstr ""

#: ../source/core/indexes-introduction.txt:119
msgid ""
"See :doc:`/core/geospatial-indexes` for a high level introduction to "
"geospatial indexes."
msgstr ""

#: ../source/core/indexes-introduction.txt:123
msgid "Text Indexes"
msgstr ""

#: ../source/core/indexes-introduction.txt:125
msgid ""
"MongoDB provides a ``text`` index type that supports searching for string "
"content in a collection. These text indexes do not store language-specific "
"*stop* words (e.g. \"the\", \"a\", \"or\") and *stem* the words in a "
"collection to only store root words."
msgstr ""

#: ../source/core/indexes-introduction.txt:130
msgid ""
"See :doc:`/core/index-text` for more information on text indexes and search."
msgstr ""

#: ../source/core/indexes-introduction.txt:134
msgid "Hashed Indexes"
msgstr ""

#: ../source/core/indexes-introduction.txt:136
msgid ""
"To support :ref:`hash based sharding <sharding-hashed-sharding>`, MongoDB "
"provides a :doc:`hashed index </core/index-hashed>` type, which indexes the "
"hash of the value of a field. These indexes have a more random distribution "
"of values along their range, but *only* support equality matches and cannot "
"support range-based queries."
msgstr ""

#: ../source/core/indexes-introduction.txt:143
msgid "Index Properties"
msgstr ""

#: ../source/core/indexes-introduction.txt:146
msgid "Unique Indexes"
msgstr ""

#: ../source/core/indexes-introduction.txt:148
msgid ""
"The :doc:`unique </core/index-unique>` property for an index causes MongoDB "
"to reject duplicate values for the indexed field. Other than the unique "
"constraint, unique indexes are functionally interchangeable with other "
"MongoDB indexes."
msgstr ""

#: ../source/core/indexes-introduction.txt:154
msgid "Sparse Indexes"
msgstr ""

#: ../source/core/indexes-introduction.txt:156
msgid ""
"The :doc:`sparse </core/index-sparse>` property of an index ensures that the"
" index only contain entries for documents that have the indexed field. The "
"index skips documents that *do not* have the indexed field."
msgstr ""

#: ../source/core/indexes-introduction.txt:160
msgid ""
"You can combine the sparse index option with the unique index option to "
"reject documents that have duplicate values for a field but ignore documents"
" that do not have the indexed key."
msgstr ""

#: ../source/core/indexes-introduction.txt:165
msgid "TTL Indexes"
msgstr ""

#: ../source/core/indexes-introduction.txt:167
msgid ""
":doc:`TTL indexes </core/index-ttl>` are special indexes that MongoDB can "
"use to automatically remove documents from a collection after a certain "
"amount of time. This is ideal for certain types of information like machine "
"generated event data, logs, and session information that only need to "
"persist in a database for a finite amount of time."
msgstr ""

#: ../source/core/indexes-introduction.txt:173
msgid "See: :doc:`/tutorial/expire-data` for implementation instructions."
msgstr ""

#: ../source/core/indexes-introduction.txt:176
msgid "Index Use"
msgstr ""

#: ../source/core/indexes-introduction.txt:178
msgid ""
"Indexes can improve the efficiency of read operations. The :doc:`/tutorial"
"/analyze-query-plan` tutorial provides an example of the execution "
"statistics of a query with and without an index."
msgstr ""

#: ../source/core/indexes-introduction.txt:182
msgid ""
"For information on how MongoDB chooses an index to use, see :ref:`query "
"optimizer <read-operations-query-optimization>`."
msgstr ""

#: ../source/core/indexes-introduction.txt:186
msgid "Covered Queries"
msgstr ""

#: ../source/core/indexes-introduction.txt:188
msgid ""
"When the query criteria and the :term:`projection` of a query include *only*"
" the indexed fields, MongoDB will return results directly from the index "
"*without* scanning any documents or bringing documents into memory. These "
"covered queries can be *very* efficient."
msgstr ""

#: ../source/core/indexes-introduction.txt:195
msgid ""
"For more information on covered queries, see :ref:`read-operations-covered-"
"query`."
msgstr ""

#: ../source/core/indexes-introduction.txt:199
msgid "Index Intersection"
msgstr ""

#: ../source/core/indexes-introduction.txt:203
msgid ""
"MongoDB can use the :doc:`intersection of indexes </core/index-"
"intersection>` to fulfill queries. For queries that specify compound query "
"conditions, if one index can fulfill a part of a query condition, and "
"another index can fulfill another part of the query condition, then MongoDB "
"can use the intersection of the two indexes to fulfill the query. Whether "
"the use of a compound index or the use of an index intersection is more "
"efficient depends on the particular query and the system."
msgstr ""

#: ../source/core/indexes-introduction.txt:212
msgid ""
"For details on index intersection, see :doc:`/core/index-intersection`."
msgstr ""

#: ../source/core/indexes-introduction.txt:215
msgid "Restrictions"
msgstr ""

#: ../source/core/indexes-introduction.txt:217
msgid ""
"Certain restrictions apply to indexes, such as the length of the index keys "
"or the number of indexes per collection. See :ref:`Index Limitations <index-"
"limitations>` for details."
msgstr ""

#: ../source/core/indexes-introduction.txt:1
msgid "index"
msgstr ""

#: ../source/core/indexes-introduction.txt:1
msgid "overview"
msgstr ""
