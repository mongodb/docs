========
ObjectId
========

:term:`ObjectId <objectid>` is a 12-byte :term:`BSON` type that consists of:

- 4-byte timestamp
- 3-byte machine id
- 2-byte process id
- 3-byte counter

In MongoDB, documents stored in a collection require a unique
:term:`_id` field that acts as a :term:`primary key`. Because
``ObjectIds`` are small, most likely unique, and fast to generate,
MongoDB uses ``ObjectIds`` as the default value for the ``_id`` field
if the ``_id`` field is not specified; i.e., the :program:`mongod` adds
the ``_id`` field and generates a unique ``ObjectId`` to assign as its
value.

Since the ``ObjectId`` contains the timestamp of its generation, using
the ``ObjectId`` as the default value for the ``_id`` field provides
these additional benefits:

- Storing of the create timestamp is inherent and easily accessible
  with the ``getTimestamp()`` method.

- Sorting by the ``_id`` field is analogous to sorting by the create
  timestamp.

.. _core-object-id-class:

ObjectId()
----------

MongoDB provides the ``ObjectId()`` wrapper class in the :program:`mongo`
shell. The ``ObjectId()`` class can generate a new ``ObjectId`` and provide
the following helper attribute and methods:

- ``str``

   The hexadecimal string value of the ObjectID() object.

- ``getTimestamp()``

   Returns the timestamp portion of the ObjectId() object as a Date.

- ``toString()``

   Returns the string representation of the ObjectId() object. The
   returned string literal has the format "ObjectId(...)".

   Prior to version 2.2, returns the value of the object as a
   hexadecmial string.
   
- ``valueOf()``

   Returns the value of the ObjectId() object as a hexadecimal string.
   The returned string is the ``str`` attribute.

   Prior to version 2.2, returns the object ObjectId(...)

Consider the following usage of the ObjectID() class in the :program:`mongo`
shell:

- Generate a new ObjectId() using the constructor with no argument:

  .. code-block:: javascript

     > x = ObjectId()

     ObjectId("507f1f77bcf86cd799439011")

- Generate a new ObjectId() using the constructor with a unique hexadecimal string:

  .. code-block:: javascript

     > y = ObjectId("507f191e810c19729de860ea")

     ObjectId("507f191e810c19729de860ea")

- Get the timestamp of an ObjectId() object:

  .. code-block:: javascript

     > ObjectId("507f191e810c19729de860ea").getTimestamp()

     ISODate("2012-10-17T20:46:22Z")

- Access the ``str`` attribute of an ObjectId() object:

  .. code-block:: javascript

     > ObjectId("507f191e810c19729de860ea").str

     507f191e810c19729de860ea

- Get the string representation of an ObjectId() object:

  .. code-block:: javascript

     > ObjectId("507f191e810c19729de860ea").toString()

     ObjectId("507f191e810c19729de860ea")

- Get the value of an ObjectId() object as a hexadecimal string:

  .. code-block:: javascript

     > ObjectId("507f191e810c19729de860ea").valueOf()

     507f191e810c19729de860ea
