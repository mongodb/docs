# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: 2014-04-08 16:24+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# bb3fd02e093544a2be704e1020e89f91
#: ../source/faq/replica-sets.txt:3
msgid "FAQ: Replication and Replica Sets"
msgstr ""

# 3b68a43ac7f440e9906cbd1805fdcb96
#: ../source/faq/replica-sets.txt
msgid "On this page"
msgstr ""

# 8f4bbffc00914d69a0a8bb36e057d028
#: ../source/faq/replica-sets.txt:13
msgid ""
"This document answers common questions about replication in MongoDB. See "
"also the :doc:`/replication` section in the manual, which provides an "
":doc:`overview of replication </replication>`, including details on:"
msgstr ""

# 89adfb32a955409ea3e62c9c5f2c7743
#: ../source/faq/replica-sets.txt:17
msgid ":doc:`/core/replica-set-members`"
msgstr ""

# 713dbed3e50748e7adc4f4ff87d08e79
#: ../source/faq/replica-sets.txt:19
msgid ":doc:`/core/replica-set-architectures`"
msgstr ""

# a84173ab79f34569a08e43963d1b55e7
# 9f939934e4644ab8a1bf5f8b7635bbef
#: ../source/faq/replica-sets.txt:21 ../source/faq/replica-sets.txt:55
msgid ":doc:`/core/replica-set-elections`"
msgstr ""

# 1f188726edd9443786c0f8fd2eb7b4e8
#: ../source/faq/replica-sets.txt:24
msgid "What kinds of replication does MongoDB support?"
msgstr ""

# 138864c429db468e8304ba5eafd6c6a9
#: ../source/faq/replica-sets.txt:26
msgid ""
"MongoDB supports :doc:`replica sets </replication>`, which can have up to"
" :ref:`50 nodes <3.0-replica-sets-max-members>`."
msgstr ""

# 1c9451b92ffa4ba3af4fd672c5284670
#: ../source/faq/replica-sets.txt:29
msgid ""
"MongoDB also supports master-slave replication; however, replica sets are"
" the recommended replication topology. However, if your deployment "
"requires more than 50 nodes, you must use master/slave replication."
msgstr ""

# ce4cb9a4d5be4f4bb3881b9a5749c2e0
#: ../source/faq/replica-sets.txt:34
msgid "Does replication work over the Internet and WAN connections?"
msgstr ""

# a456689a16a6491ea649a3d1ac97dbd2
# 387e2647734e4ee6891367a1a7482b7e
#: ../source/faq/replica-sets.txt:36 ../source/faq/replica-sets.txt:105
msgid "Yes."
msgstr ""

# 1aa69bda10f54a0da7f612c575d89c96
#: ../source/faq/replica-sets.txt:38
msgid ""
"For example, a deployment may maintain a :term:`primary` and "
":term:`secondary` in an East-coast data center along with a "
":term:`secondary` member for disaster recovery in a West-coast data "
"center."
msgstr ""

# 9d0f7ec9bf7d4c75a1a2a127292b17b4
#: ../source/faq/replica-sets.txt:42
msgid ":doc:`/tutorial/deploy-geographically-distributed-replica-set`"
msgstr ""

# 9f13373636ae4221bc2073afad1b363a
#: ../source/faq/replica-sets.txt:45
msgid "Can MongoDB replicate over a \"noisy\" connection?"
msgstr ""

# 2d261632ebec447188b0f8b3e3d36bdf
#: ../source/faq/replica-sets.txt:47
msgid "Yes, but not without connection failures and the obvious latency."
msgstr ""

# 91c3325a5bd94c2198e450d52b7c50cc
#: ../source/faq/replica-sets.txt:49
msgid ""
"Members of the set will attempt to reconnect to the other members of the "
"set in response to networking flaps. This does not require administrator "
"intervention. However, if the network connections among the nodes in the "
"replica set are very slow, it might not be possible for the members of "
"the node to keep up with the replication."
msgstr ""

# 1a710779f2514c1ca45f00618714d4d4
#: ../source/faq/replica-sets.txt:58
msgid "Why use journaling if replication already provides data redundancy?"
msgstr ""

# 8f7e52551b8b4825a5f6d426dc369937
#: ../source/faq/replica-sets.txt:60
msgid ""
":term:`Journaling <journal>` facilitates faster crash recovery. Prior to "
"journaling, crashes often required :dbcommand:`database repairs "
"<repairDatabase>` or full data resync. Both were slow, and the first was "
"unreliable."
msgstr ""

# d436037ff2254125ae133a62afbf053e
#: ../source/faq/replica-sets.txt:64
msgid ""
"Journaling is particularly useful for protection against power failures, "
"especially if your replica set resides in a single data center or power "
"circuit."
msgstr ""

# 1aa783d970c440039ff030de50500aae
#: ../source/faq/replica-sets.txt:68
msgid ""
"When a :term:`replica set` runs with journaling, you can safely restart "
":program:`mongod` instances without additional intervention."
msgstr ""

# 3b1519b13b6b48d2874020e45b86317d
#: ../source/faq/replica-sets.txt:73
msgid ""
"Journaling requires some resource overhead for write operations. "
"Journaling has no effect on read performance, however."
msgstr ""

# 909ef62e461144f09bfece4677bdd722
#: ../source/faq/replica-sets.txt:76
msgid ""
"Journaling is enabled by default on all 64-bit builds of MongoDB v2.0 and"
" greater."
msgstr ""

# 3b2690458a514e91978196402bb64371
#: ../source/faq/replica-sets.txt:80
msgid "What information do arbiters exchange with the rest of the replica set?"
msgstr ""

# 91e0cbe82903429eb1605c265a5b66ac
#: ../source/faq/replica-sets.txt:82
msgid ""
"Arbiters never receive the contents of a collection but do exchange the "
"following data with the rest of the replica set:"
msgstr ""

# db7d019fada746e2941fb85ddd63a2fc
#: ../source/faq/replica-sets.txt:85
msgid ""
"Credentials used to authenticate the arbiter with the replica set. These "
"exchanges are encrypted."
msgstr ""

# c987bf508b464653bca7ae0a2d5a1431
#: ../source/faq/replica-sets.txt:88
msgid ""
"Replica set configuration data and voting data. This information is not "
"encrypted. Only credential exchanges are encrypted."
msgstr ""

# caa361a398104ceab221a479d0b497be
#: ../source/faq/replica-sets.txt:91
msgid ""
"If your MongoDB deployment uses TLS/SSL, then all communications between "
"arbiters and the other members of the replica set are secure."
msgstr ""

# 9a3aa21ff8eb433eb240176ba09076a7
#: ../source/faq/replica-sets.txt:94
msgid ""
"See the documentation for :doc:`/tutorial/configure-ssl` for more "
"information. As with all MongoDB components, run arbiters on secure "
"networks."
msgstr ""

# 11dae01efcf749bdb013dca1d561a1b1
#: ../source/faq/replica-sets.txt
msgid "See"
msgstr ""

# 9d6c28fb1f644fbdb61e3cd73b8e15ed
#: ../source/faq/replica-sets.txt:103
msgid ""
"Is it normal for replica set members to use different amounts of disk "
"space?"
msgstr ""

# 367dfbb086944f138325ba8acd190fd6
#: ../source/faq/replica-sets.txt:107
msgid ""
"Factors including: different oplog sizes, different levels of storage "
"fragmentation, and MongoDB's data file pre-allocation can lead to some "
"variation in storage utilization between nodes. Storage use disparities "
"will be most pronounced when you add members at different times."
msgstr ""

# 45cc23e0cf074ba9bb5fca1538c8f4db
#: ../source/faq/replica-sets.txt:114
msgid "Can I rename a replica set?"
msgstr ""

# 2ed51b1e89f2466abe0e3451a2cddcc8
#: ../source/faq/replica-sets.txt:116
msgid "No."
msgstr ""

# 512b5ff1b73f4c0d938026ca51d6d311
#: ../source/faq/replica-sets.txt:118
msgid ""
"You can use the backup and restore procedure described in the "
":doc:`/tutorial/restore-replica-set-from-backup` tutorial to create a new"
" replica set with the desired name. Downtime may be necessary in order to"
" ensure parity between the original replica set and the new one."
msgstr ""

#~ msgid ""
#~ "However, if you want confirmation that"
#~ " a given write has arrived at "
#~ "the server, use :ref:`write concern "
#~ "<write-concern>`. The :dbcommand:`getLastError` "
#~ "command provides the facility for write"
#~ " concern. However, after the :ref:`default"
#~ " write concern change <driver-write-"
#~ "concern-change>`, the default write concern"
#~ " acknowledges all write operations, and "
#~ "unacknowledged writes must be explicitly "
#~ "configured. See the :doc:`/applications/drivers` "
#~ "documentation for your driver for more"
#~ " information."
#~ msgstr ""

# 558c8716113d4250b840602411a6e0cc
#~ msgid ""
#~ "This document answers common questions "
#~ "about database replication in MongoDB."
#~ msgstr ""

# e2c6da2ebc614d6195bfb5b06b76a30d
#~ msgid ""
#~ "If you don't find the answer "
#~ "you're looking for, check the "
#~ ":doc:`complete list of FAQs </faq>` or"
#~ " post your question to the `MongoDB"
#~ " User Mailing List "
#~ "<https://groups.google.com/forum/?fromgroups#!forum/mongodb-"
#~ "user>`_."
#~ msgstr ""

# 074bbc155584431e925b2067bf9d5256
#~ msgid ""
#~ "MongoDB supports master-slave replication "
#~ "and a variation on master-slave "
#~ "replication known as replica sets. "
#~ "Replica sets are the recommended "
#~ "replication topology."
#~ msgstr ""

# abd2268528bb411aa21595c2a48122d1
#~ msgid "What do the terms \"primary\" and \"master\" mean?"
#~ msgstr ""

# 0fccf92e50df484bb33224a9e365a8ee
#~ msgid ""
#~ ":term:`Primary` and :term:`master` nodes are"
#~ " the nodes that can accept writes."
#~ " MongoDB's replication is \"single-"
#~ "master:\" only one node can accept "
#~ "write operations at a time."
#~ msgstr ""

# 2c529fa853be415883e735e8628eaed7
#~ msgid ""
#~ "In a replica set, if the current"
#~ " \"primary\" node fails or becomes "
#~ "inaccessible, the other members can "
#~ "autonomously :term:`elect <election>` one of"
#~ " the other members of the set "
#~ "to be the new \"primary\"."
#~ msgstr ""

# 5ad8791787e34af4812270a8a11c6698
#~ msgid ""
#~ "By default, clients send all reads "
#~ "to the primary; however, :term:`read "
#~ "preference` is configurable at the "
#~ "client level on a per-connection "
#~ "basis, which makes it possible to "
#~ "send reads to secondary nodes instead."
#~ msgstr ""

# d7caf28a3dad488fbdc7cb5f15d4d0de
#~ msgid "What do the terms \"secondary\" and \"slave\" mean?"
#~ msgstr ""

# 8e91ad22c5794606be1d19b8e6ddabd6
#~ msgid ""
#~ ":term:`Secondary` and :term:`slave` nodes are"
#~ " read-only nodes that replicate from"
#~ " the :term:`primary`."
#~ msgstr ""

# c381d29e551343908cdbda1bff824937
#~ msgid ""
#~ "Replication operates by way of an "
#~ ":term:`oplog`, from which secondary/slave "
#~ "members apply new operations to "
#~ "themselves. This replication process is "
#~ "asynchronous, so secondary/slave nodes may "
#~ "not always reflect the latest writes "
#~ "to the primary. But usually, the "
#~ "gap between the primary and secondary"
#~ " nodes is just few milliseconds on"
#~ " a local network connection."
#~ msgstr ""

# a372de8ff6a74cf4a46f8f561e653e77
#~ msgid "How long does replica set failover take?"
#~ msgstr ""

# b13a85f6481048e6bd81c24a75ad9051
#~ msgid "It varies, but a replica set will select a new primary within a minute."
#~ msgstr ""

# 1d8f5096e61e472aa85a20ae448128c9
#~ msgid ""
#~ "It may take 10-30 seconds for the"
#~ " members of a :term:`replica set` to"
#~ " declare a :term:`primary` inaccessible. "
#~ "This triggers an :term:`election`. During "
#~ "the election, the cluster is unavailable"
#~ " for writes."
#~ msgstr ""

# 79bb94831a1949e082cc940895f573da
#~ msgid "The election itself may take another 10-30 seconds."
#~ msgstr ""

# 909b9858b5ed4a7ca8a87876802a6ffb
#~ msgid ""
#~ ":term:`Eventually consistent <eventual consistency>`"
#~ " reads, like the ones that will "
#~ "return from a replica set are only"
#~ " possible with a :term:`write concern` "
#~ "that permits reads from :term:`secondary` "
#~ "members."
#~ msgstr ""

# eb68d1064ebd4fea8fd3c8ecc4a78683
#~ msgid ""
#~ "If the TCP connection between the "
#~ "secondaries and the :term:`primary` instance"
#~ " breaks, a :term:`replica set` will "
#~ "automatically elect one of the "
#~ ":term:`secondary` members of the set as"
#~ " primary."
#~ msgstr ""

# e8efa14d8cdb4ad780c5ee900e70fdc1
#~ msgid "What is the preferred replication method: master/slave or replica sets?"
#~ msgstr ""

# 99fc5d10e92a4cea9b392a9ce839cafc
#~ msgid ""
#~ ":term:`Replica sets <replica set>` are "
#~ "the preferred :term:`replication` mechanism in"
#~ " MongoDB. However, if your deployment "
#~ "requires more than 12 nodes, you "
#~ "must use master/slave replication."
#~ msgstr ""

# 9ce535d4ad68482dbc6cd461355b02a3
#~ msgid ""
#~ "What is the preferred replication "
#~ "method: replica sets or replica pairs?"
#~ msgstr ""

# 2d3146b97c734ee6b6fc4ca88fa64eae
#~ msgid ""
#~ ":term:`Replica sets <replica set>` replaced"
#~ " :term:`replica pairs` in version 1.6. "
#~ ":term:`Replica sets <replica set>` are "
#~ "the preferred :term:`replication` mechanism in"
#~ " MongoDB."
#~ msgstr ""

# af766652f604412f855fed3ee507a0e9
#~ msgid ""
#~ "When a :term:`replica set` runs with "
#~ "journaling, :program:`mongod` instances can "
#~ "safely restart without any administrator "
#~ "intervention."
#~ msgstr ""

# 0d7090db63074e63a8cc77fafec52e33
#~ msgid ""
#~ "Are write operations durable if write"
#~ " concern does not acknowledge writes?"
#~ msgstr ""

# 201283209c724a30b5f3b3ee6f60415c
#~ msgid "How many arbiters do replica sets need?"
#~ msgstr ""

# b3052bebebc04301a7e1e3d1950b3f4f
#~ msgid ""
#~ "Some configurations do not require any"
#~ " :term:`arbiter` instances. Arbiters vote "
#~ "in :term:`elections <election>` for "
#~ ":term:`primary` but do not replicate the"
#~ " data like :term:`secondary` members."
#~ msgstr ""

# f5238b5e0c7642adb84f702e6f8656f7
#~ msgid ""
#~ ":term:`Replica sets <replica set>` require "
#~ "a majority of the remaining nodes "
#~ "present to elect a primary. Arbiters "
#~ "allow you to construct this majority "
#~ "without the overhead of adding "
#~ "replicating nodes to the system."
#~ msgstr ""

# 5b096e56e3ad4c739fe2d685b386fb7f
#~ msgid ""
#~ "There are many possible replica set "
#~ ":doc:`architectures </core/replica-set-"
#~ "architectures>`."
#~ msgstr ""

# 2ff957c5054142e9a695ca662d5f52b5
#~ msgid ""
#~ "A replica set with an odd number"
#~ " of voting nodes does not need "
#~ "an arbiter."
#~ msgstr ""

# 84b548a730d343ab9f337153438100e6
#~ msgid ""
#~ "A common configuration consists of two"
#~ " replicating nodes that include a "
#~ ":term:`primary` and a :term:`secondary`, as"
#~ " well as an :term:`arbiter` for the"
#~ " third node. This configuration makes "
#~ "it possible for the set to elect"
#~ " a primary in the event of "
#~ "failure, without requiring three replicating"
#~ " nodes."
#~ msgstr ""

# d9eb380fa359465da66c0f580cffd73c
#~ msgid ""
#~ "You may also consider adding an "
#~ "arbiter to a set if it has "
#~ "an equal number of nodes in two"
#~ " facilities and network partitions between"
#~ " the facilities are possible. In "
#~ "these cases, the arbiter will break "
#~ "the tie between the two facilities "
#~ "and allow the set to elect a "
#~ "new primary."
#~ msgstr ""

# ba1a6dc83ed74c4393ac446845e00788
#~ msgid ""
#~ "Credentials used to authenticate the "
#~ "arbiter with the replica set. All "
#~ "MongoDB processes within a replica set"
#~ " use keyfiles. These exchanges are "
#~ "encrypted."
#~ msgstr ""

# 14a43c527caa4a9a80a78bc34c080b74
#~ msgid ""
#~ "If your MongoDB deployment uses SSL, "
#~ "then all communications between arbiters "
#~ "and the other members of the "
#~ "replica set are secure. See the "
#~ "documentation for :doc:`/tutorial/configure-ssl` "
#~ "for more information. Run all arbiters"
#~ " on secure networks, as with all "
#~ "MongoDB components."
#~ msgstr ""

# af7dbc1c05c54dbcbb27a23789ef60f3
#~ msgid "Which members of a replica set vote in elections?"
#~ msgstr ""

# ac88d09e8bfb47f7be842eff6c1a6da2
#~ msgid ""
#~ "All members of a replica set, "
#~ "unless the value of :data:`votes "
#~ "<local.system.replset.members[n].votes>` is equal to"
#~ " ``0``, vote in elections. This "
#~ "includes all :ref:`delayed <replica-set-"
#~ "delayed-members>`, :ref:`hidden <replica-set-"
#~ "hidden-members>` and :ref:`secondary-only "
#~ "<replica-set-secondary-only-members>` "
#~ "members, as well as the :ref:`arbiters"
#~ " <replica-set-arbiters>`."
#~ msgstr ""

# e9608f02068d49bd8c651ce8fbaac1a2
#~ msgid ""
#~ "Additionally, the :data:`~replSetGetStatus.members.state`"
#~ " of the voting members also determine"
#~ " whether the member can vote. Only"
#~ " voting members in the following "
#~ "states are eligible to vote:"
#~ msgstr ""

# f4610c67338a4aaf8229db6d7871db2d
#~ msgid "``PRIMARY``"
#~ msgstr ""

# 33f5e841978e4765b5e6337cb064e639
#~ msgid "``SECONDARY``"
#~ msgstr ""

# 7d6cb3ee7a994dba9bc506fec77f8bf8
#~ msgid "``RECOVERING``"
#~ msgstr ""

# 6722c8bded4b4ece9b119a06fc1cd675
#~ msgid "``ARBITER``"
#~ msgstr ""

# 216966a6850343b18ab82f0bf433bd21
#~ msgid "``ROLLBACK``"
#~ msgstr ""

# d5f50e119fe84c9bbf778c398554a3c0
# 1883c88a7dfe4b36a0a8a46057dbb6f0
#~ msgid ":ref:`replica-set-elections`"
#~ msgstr ""

# ddb3324f4d1641939d389254e71f177a
#~ msgid "Do hidden members vote in replica set elections?"
#~ msgstr ""

# 3694b5f596354fdab30a17f13959d5f0
#~ msgid ""
#~ ":ref:`Hidden members <replica-set-hidden-"
#~ "members>` of :term:`replica sets <replica "
#~ "set>` *do* vote in elections. To "
#~ "exclude a member from voting in an"
#~ " :term:`election`, change the value of "
#~ "the member's "
#~ ":data:`~local.system.replset.members[n].votes` configuration "
#~ "to ``0``."
#~ msgstr ""

#~ msgid ""
#~ "However, if you want confirmation that"
#~ " a given write has arrived at "
#~ "the server, use :ref:`write concern "
#~ "<write-concern>`."
#~ msgstr ""

#~ msgid ""
#~ "After the :ref:`default write concern "
#~ "change <driver-write-concern-change>`, "
#~ "the default write concern acknowledges "
#~ "all write operations, and unacknowledged "
#~ "writes must be explicitly configured. "
#~ "See the :doc:`/applications/drivers` documentation"
#~ " for your driver for more "
#~ "information."
#~ msgstr ""

#~ msgid ""
#~ "The :program:`mongo` shell now defaults "
#~ "to use :doc:`safe writes </core/write-"
#~ "concern>`. See :ref:`write-methods-"
#~ "incompatibility` for more information."
#~ msgstr ""

#~ msgid ""
#~ "A new protocol for :ref:`write "
#~ "operations <rel-notes-write-operations>` "
#~ "integrates write concerns with the write"
#~ " operations. Previous versions issued a "
#~ ":dbcommand:`getLastError` command after a "
#~ "write to specify a write concern."
#~ msgstr ""

