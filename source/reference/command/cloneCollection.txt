===============
cloneCollection
===============

.. default-domain:: mongodb

Definition
----------

.. dbcommand:: cloneCollection

   Copies a collection from a remote :program:`mongod` instance to the
   current :program:`mongod` instance. :dbcommand:`cloneCollection`
   creates a collection in a database with the same name as the remote
   collection's database.  :dbcommand:`cloneCollection` takes the
   following form:

   .. code-block:: javascript

      { cloneCollection: "<namespace>", from: "<hostname>", query: { <query> } }

   .. important:: You cannot clone a collection through a
      :program:`mongos` but must connect directly to the
      :program:`mongod` instance.

   :dbcommand:`cloneCollection` has the following fields:

   .. include:: /reference/command/cloneCollection-field.rst

Example
-------

.. code-block:: javascript

   { cloneCollection: "users.profiles", from: "mongodb.example.net:27017", query: { active: true } }

This operation copies the ``profiles`` collection from the ``users``
database on the server at ``mongodb.example.net``. The operation only
copies documents that satisfy the query ``{ active: true }`` and does
not copy indexes. :dbcommand:`cloneCollection` copies indexes by
default. The ``query`` arguments is optional.

If, in the above example, the ``profiles`` collection exists in the
``users`` database, then MongoDB appends documents from the remote
collection to the destination collection.
