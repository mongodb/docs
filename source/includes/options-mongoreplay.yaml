# mongoreplay is new and different, in that it is the only mongo tool
# (at time of writing) that has *commands*.
#
# This file uses {{program}} to refer to the tool, {{role}} to refer to
# the option (:option:`mongoreplay --option`), and {{command}} to refer
# to the combination of the program and command, as in
# ":binary:`~bin.mongoreplay` ``commandname``"
######
program: mongoreplay
name: help
directive: option
inherit:
  name: help
  program: _shared
  file: options-shared.yaml
---
program: mongoreplay
name: verbosity
directive: option
inherit:
  name: verbose
  program: _shared
  file: options-shared.yaml
---
program: mongoreplay
name: debug
aliases: -d
args: null
directive: option
description: |
  Increases the amount of detail about {{program}} operations
  and errors recorded
  in log files. Increase the debugging detail with the ``-d`` form by
  including the option multiple times, (e.g. ``-ddd``.)
optional: true
---
program: mongoreplay
name: silent
aliases: -s
args: null
directive: option
description: |
  When set, {{program}} does not produce any log output.
optional: true
---
program: _shared
name: -f
command: record
directive: option
args: <path>
description: |
  Specifies the path to a pcap file that {{command}} should read to
  produce a playback file.
  
  Use ``-f`` as an alternative to capturing network traffic using
  ``-i``. You must specify *either* ``-f`` or ``-i``. If you include
  both options, {{program}} produces an error.
optional: true
---
program: mongoreplay record
name: -f
command: record
inherit:
  file: options-mongoreplay.yaml
  program: _shared
  name: -f
---
program: mongoreplay monitor
name: -f
command: monitor
inherit:
  file: options-mongoreplay.yaml
  program: _shared
  name: -f
---
program: _shared
name: -b
directive: option
args: <number>
description: |
  Size of heap used to merge separate streams together. 
optional: true
---
program: mongoreplay record
name: -b
command: record
inherit:
  file: options-mongoreplay.yaml
  name: -b
  program: _shared
---
program: mongoreplay monitor
name: -b
command: monitor
inherit:
  file: options-mongoreplay.yaml
  program: _shared
  name: -b
---
program: _shared
name: expr
aliases: -e
command: record
directive: option
args: <filter expression>
description: |
  An expression in `Berkeley Packet Filter (BPF) syntax
  <http://biot.com/capstats/bpf.html>`_ to apply to incoming traffic to
  record. Required if you are capturing traffic from a network interface using
  :option:`-i`.

  For example, to capture traffic from a MongoDB instance running on
  port 27017, you would specify ``-e 'port 27017'``.
optional: true
---
program: mongoreplay record
name: expr
command: record
inherit:
  file: options-mongoreplay.yaml
  name: expr
  program: _shared
---
program: mongoreplay monitor
name: expr
command: monitor
inherit:
  file: options-mongoreplay.yaml
  name: expr
  program: _shared
---
program: _shared
name: -i 
directive: option
args: <interface>
description: |
  Specifies the network interface that {{command}} should listen on to
  capture network traffic.

  Use with :option:`-e`.
  
  Use ``-i`` as an alternative to reading an existing pcap file with
  ``-i``. You must specify *either* ``-f`` or ``-i``. If you include
  both options, {{program}} produces an error.
optional: true
---
program: mongoreplay record
name: -i
command: record
inherit:
  file: options-mongoreplay.yaml
  name: -i
  program: _shared
---
program: mongoreplay monitor
name: -i
command: monitor
inherit:
  file: options-mongoreplay.yaml
  name: -i
  program: _shared
---
program: _shared
name: gzip
directive: option
args: <boolean>
description: |
  If specified, {{command}} {{verb}} the playback file with gzip.
optional: true
---
program: mongoreplay record
name: gzip
command: record
directive: option
inherit:
  file: options-mongoreplay.yaml
  name: gzip
  program: _shared
replacement:
  verb: "compresses"
---
program: mongoreplay play
name: gzip
command: play
directive: option
inherit:
  file: options-mongoreplay.yaml
  name: gzip
  program: _shared
replacement:
  verb: "decompresses"
---
program: mongoreplay monitor
name: gzip
command: monitor
inherit:
  file: options-mongoreplay.yaml
  program: _shared
  name: gzip
replacement:
  verb: "decompresses"
---
program: _shared
name: playback-file
aliases: -p
directive: option
args: <path>
description: |
  Specifies the path {{activity}} the playback file.
optional: true
---
program: mongoreplay record
name: playback-file
command: record
directive: option
inherit:
  file: options-mongoreplay.yaml
  name: playback-file
  program: _shared
replacement:
  activity: "to which to write"
post: |
  The produced playback file is a BSON file.
---
program: mongoreplay play
name: playback-file
command: play
directive: option
inherit:
  file: options-mongoreplay.yaml
  name: playback-file
  program: _shared
replacement:
  activity: "from which to read"
post: |
  If the playback file was created using the :option:`--gzip
  <mongoreplay record --gzip>` option, you must also specify ``--gzip``
  when running {{command}}.
---
program: mongoreplay monitor
name: playback-file
command: monitor
inherit:
  file: options-mongoreplay.yaml
  program: _shared
  name: playback-file
replacement:
  activity: "from which to read"
---
program: _shared
name: collect
directive: option
args: <json|format|none>
description: |
  Specifies the output format for the collected statistics.

  - ``json``: outputs stat information as json
  - ``format``: uses the formatting specified in the ``--format`` option
    to produce the output file.
  - ``none``: does not provide any output

default: format
optional: true
---
program: mongoreplay play
name: collect
command: play
inherit:
  file: options-mongoreplay.yaml
  program: _shared
  name: collect
---
program: mongoreplay monitor
name: collect
command: monitor
inherit:
  file: options-mongoreplay.yaml
  program: _shared
  name: collect
---
program: _shared
name: report
directive: option
args: <path>
description: |
  Specifies the path to which to write an execution report. 
  Use :option:`--collect` to specify the output format for the report.
  
  If you do not specify ``--report``, {{command}} writes to STDOUT.
optional: true
---
program: mongoreplay play
name: report
command: play
inherit:
  file: options-mongoreplay.yaml
  program: _shared
  name: report
---
program: mongoreplay monitor
name: report
command: monitor
inherit:
  file: options-mongoreplay.yaml
  program: _shared
  name: report
---
program: _shared
name: no-truncate
directive: option
description: |
  If specified, disables truncation of large reply payload data in the
  {{command}} log output.
optional: true
---
program: mongoreplay play
name: no-truncate
command: play
inherit:
  file: options-mongoreplay.yaml
  program: _shared
  name: no-truncate
---
program: mongoreplay monitor
name: no-truncate
command: monitor
inherit:
  file: options-mongoreplay.yaml
  program: _shared
  name: no-truncate
---
program: _shared
name: format
directive: option
description: |
  Specifies the format for terminal output.
  You can specify arguments immediately after the format 'verbs' by wrapping
  them in curly braces, as in ``%Q{<arg>}``.

  If you specify {{role}}, also specify ``format`` as the value for the
  :option:`--collect` option.

  {{role}} supports the following verbs:

  - ``%n``: namespace
  - ``%l``: latency
  
  - ``%t``: time. You may optionally specify the date layout using the
    Go Programming Language's `time formatting`_. Go
    uses ``Mon Jan 2 15:04:05 MST 2006`` as its reference time. You
    must specify the time format using the reference time. Thus, if you
    wanted to print the date in format ``yyyy-mm-dd hh:mm``, you would
    specify ``%t{2006-01-02 15:04}``. Refer to the Go `time formatting`_
    documentation for more information.
  
  - ``%T``: op time
  - ``%c``: command
  - ``%o``: number of connections
  - ``%i``: request ID
  - ``%q``: request. You may optinally specified a dot-delimited field
    within the JSON structure, as in, ``%q{command_args.documents}``.
  - ``%r``: response. You may optinally specified a dot-delimited field
    within the JSON structure, as in, ``%q{command_args.documents}``.
  - ``%Q{<arg>}``: display ``<arg>`` on presence of request data
  - ``%R{<arg>}``: display ``<arg>`` on presence of response data

  In addition, {{role}} supports the following start/end ANSI escape sequences:

  - ``%B``/``%b``: bold
  - ``%U``/``%u``: underline
  - ``%S``/``%s``: standout
  - ``%F``/``%f``: text color (required arg -- word or number, 8-color)
  - ``%K``/``%k``: background color (required arg -- same as %F/%f)
  
  {{linkref}}
default: "``%F{blue}%t%f %F{cyan}(Connection: %o:%i)%f %F{yellow}%l%f %F{red}%T %c%f %F{white}%n%f %F{green}%Q{Request:}%f%q%F{green}%R{Response:}%f%r)``"
optional: true
replacement:
  verb: ""
---
program: mongoreplay play
name: format
command: play
inherit:
  file: options-mongoreplay.yaml
  program: _shared
  name: format
replacement:
  linkref: ".. _time formatting: https://golang.org/pkg/time/"
---
program: mongoreplay monitor
name: format
command: monitor
inherit:
  file: options-mongoreplay.yaml
  program: _shared
  name: format
replacement:
  linkref: ""
---
program: _shared
name: no-colors
directive: option
description: |
  When set, removes colors from the {{format}}.
optional: true
replacement:
   format: "default format"
---
program: mongoreplay monitor
name: no-colors
command: monitor
inherit:
  file: options-mongoreplay.yaml
  program: _shared
  name: no-colors
replacement:
   format: ":option:`default format <mongoreplay monitor --format>`"
---
program: mongoreplay play
name: no-colors
command: play
inherit:
  file: options-mongoreplay.yaml
  program: _shared
  name: no-colors
replacement:
   format: ":option:`default format <mongoreplay play --format>`"
---
program: mongoreplay play
name: speed
command: play
directive: option
args: number
description: |
  Specifies a multiplier to adjust playback speed. ``--speed 1.0``
  processes the playback file in real time; ``--speed 0.5`` at half
  speed; ``--speed 3.0`` at triple speed.
  
  The specified speed is a *target* speed. If {{program}} encounters
  a bottleneck, playback may be slower than the specified multiplier.
optional: true
default: 1.0
---
program: mongoreplay play
name: host
command: play
directive: option
inherit:
  file: options-shared.yaml
  program: _shared
  name: host
description: |
  Specifies a MongoDB :doc:`connection string </reference/connection-string>`
  for the MongoDB deployment to which to
  play back the captured network traffic. 
  
  By default, {{command}}
  attempts to connect to a :binary:`~bin.mongod` instance running on the localhost on
  port number ``27017``.
---
program: mongoreplay play
name: repeat
command: play
directive: option
args: number
description: |
  Specifies the number of times to play the playback file.
default: 1
optional: true
---
program: mongoreplay play
name: queueTime
command: play
directive: option
args: number
description: |
  Specifies the maximum time, in seconds, to queue operations in advance
  of transmitting them.
default: 15
optional: true
---
program: mongoreplay play
name: no-preprocess
command: play
directive: option
description: |
  When set, {{command}} does not preprocess the input file to pre-map
  data such as MongoDB cursor IDs.
optional: true
---
program: mongoreplay monitor
name: paired
command: monitor
directive: option
description: |
  When specified, {{command}} outputs one line for each request/reply pair record.
optional: true
...
