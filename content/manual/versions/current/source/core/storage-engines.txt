.. _storage-engines:

============================================
Storage Engines for Self-Managed Deployments
============================================

.. meta::
   :keywords: on-prem

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

The :term:`storage engine` is the component of the database that is
responsible for managing how data is stored, both in memory and on disk.
MongoDB supports multiple storage engines, as different engines perform
better for specific workloads. Choosing the appropriate storage engine
for your use case can significantly impact the performance of your
applications.

|arrow| WiredTiger Storage Engine (*Default*)
   :ref:`WiredTiger <storage-wiredtiger>` is the default storage engine and is 
   recommended for new deployments. WiredTiger provides a document-level 
   concurrency model, checkpointing, and compression, among other features. 
   
   In MongoDB Enterprise, WiredTiger also supports
   :doc:`/core/security-encryption-at-rest`. See
   :ref:`encrypted-storage-engine`.

|arrow| In-Memory Storage Engine
   An :ref:`In-Memory storage engine <storage-inmemory>` is available 
   in MongoDB Enterprise. Rather than storing documents on-disk, it
   retains them in-memory for more predictable data latencies.

.. toctree::
   :titlesonly: 
   :hidden: 

   WiredTiger </core/self-managed-wiredtiger>
   In-Memory </core/inmemory>

.. |arrow| unicode:: U+27A4
