#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/read-preference.txt:9
msgid "Read Preference"
msgstr "复制集读选项"

#: ../source/includes/introduction-read-preference.rst:1
msgid ""
"Read preference describes how MongoDB clients route read operations to the "
"members of a :term:`replica set`."
msgstr "复制集读选项决定了在 :term:`复制集 <replica set>` 中读请求的路由方式。"


#: ../source/core/read-preference.txt:22

msgid ""
"Exercise care when specifying read preferences: Modes other than "
":readmode:`primary` may return stale data because with :ref:`asynchronous "
"replication <asynchronous-replication>`, data in the secondary may not "
"reflect the most recent write operations. [#edge-cases-2-primaries]_"
msgstr ""
"我们需要谨慎选择是否在从节点上进行读操作，与在 :readmode:`primary` 进行读操作"
"不同，在从节点上进行读操作时返回的数据可能不是 :term:`主节点 <primary>` 上最"
"新的数据。"

#: ../source/core/read-preference.txt:35
msgid "Use Cases"
msgstr "用例"

#: ../source/core/read-preference.txt:38
msgid "Indications"
msgstr "Indications"

#: ../source/core/read-preference.txt:40
msgid ""
"The following are common use cases for using non-:readmode:`primary` read "
"preference modes:"
msgstr "下列是复制集读选项为在非 :readmode:`primary` 节点上进行的用例："

#: ../source/core/read-preference.txt:43
msgid ""
"Running systems operations that do not affect the front-end application."
msgstr "执行系统名将不会影响前段的应用。"

#: ../source/core/read-preference.txt:48
msgid ""
"Read preferences aren't relevant to direct connections to a single :program:"
"`mongod` instance. However, in order to perform read operations on a direct "
"connection to a secondary member of a replica set, you must set a read "
"preference, such as :term:`secondary`."
msgstr ""
"复制集读选项与单实例的 :program:`mongod` 连接无关。然而，在复制集中如果我们希"
"望在从节点上执行读操作，我们就需要设定复制集读选项，如 :term:`secondary` 。"

#: ../source/core/read-preference.txt:54
msgid "Providing local reads for geographically distributed applications."
msgstr "为地理分布式架构的应用提供了本地读。"

#: ../source/core/read-preference.txt:56
msgid ""
"If you have application servers in multiple data centers, you may consider "
"having a :ref:`geographically distributed replica set <replica-set-"
"geographical-distribution>` and using a non primary read preference or the :"
"readmode:`nearest`. This allows the client to read from the lowest-latency "
"members, rather than always reading from the primary."
msgstr ""
"如果应用程序服务器分布在多个数据中心，那么我们可以考虑使用 :ref:`异地分布式架"
"构的复制集 <replica-set-geographical-distribution>` 并使用非主节点读取或是 :"
"readmode:`nearest` 模式的复制集读选项。这让客户端从最近、延时最低的节点上去读"
"取，而不是在主节点上读取。"

#: ../source/core/read-preference.txt:63
msgid "Maintaining availability during a failover."
msgstr "在故障切换过程中保持可用性。"

#: ../source/core/read-preference.txt:65
msgid ""
"Use :readmode:`primaryPreferred` if you want an application to read from the"
" primary under normal circumstances, but to allow stale reads from "
"secondaries when the primary is unavailable. This provides a \"read-only "
"mode\" for your application during a failover."
msgstr ""
"我们可以使用 :readmode:`primaryPreferred` 让应用程序正常情况下在主节点上进行"
"读取，但是在紧急情况下在从上进行读取。这会让应用程序在故障切换后处于只读状"
"态。"

#: ../source/core/read-preference.txt:71
msgid "Counter-Indications"
msgstr "Counter-Indications"

#: ../source/core/read-preference.txt:73
msgid ""
"In general, do *not* use :readmode:`secondary` and "
":readmode:`secondaryPreferred` to provide extra capacity for reads, because:"
msgstr ""

#: ../source/core/read-preference.txt:77
msgid ""
"All members of a replica have roughly equivalent write traffic; as a result,"
" secondaries will service reads at roughly the same rate as the primary."
msgstr ""

#: ../source/core/read-preference.txt:86
msgid ""
"Distributing read operations to secondaries can compromise availability if "
"*any* members of the set become unavailable because the remaining members of"
" the set will need to be able to handle all application requests."
msgstr ""

#: ../source/core/read-preference.txt:91
msgid ""
"For queries of sharded collections, for clusters with the :ref:`balancer "
"<sharding-internals-balancing>` active, secondaries may return stale results"
" with missing or duplicated data because of incomplete or terminated chunk "
"migrations."
msgstr ""

#: ../source/core/read-preference.txt:97
msgid ""
":doc:`Sharding </sharding>` increases read and write capacity by "
"distributing read and write operations across a group of machines, and is "
"often a better strategy for adding capacity."
msgstr ""
":doc:`Sharding </sharding>` 是个很好的策略来提升性能，因为它将读写请求分散到"
"多组服务器，并因此提高了读写性能。"

#: ../source/core/read-preference.txt:101
msgid ""
"See :doc:`/core/read-preference-mechanics` for more information about the "
"internal application of read preferences."
msgstr ""
"更多有关内网内应用的复制集读选项，请参见 :doc:`/core/read-preference-"
"mechanics` 。"

#: ../source/core/read-preference.txt:105
msgid "Read Preference Modes"
msgstr "复制集读选项模式"

#: ../source/core/read-preference.txt:109
msgid ""
"All read preference modes except :readmode:`primary` may return stale data "
"because :term:`secondaries <secondary>` replicate operations from the "
"primary with some delay. [#edge-cases-2-primaries]_ Ensure that your "
"application can tolerate stale data if you choose to use a "
"non-:readmode:`primary` mode."
msgstr ""
"除了 :readmode:`primary` 模式以外的复制集读选项都有可能返回非最新的数据，因为"
"复制过程是异步的， :term:`从节点 <secondary>` 上应用操作可能会比主节点有所延"
"后。如果我们不使用 :readmode:`primary` 模式，请确保业务允许数据存在可能的不一"
"致。"

#: ../source/core/read-preference.txt:115
msgid ""
"MongoDB :doc:`drivers </applications/drivers>` support five read preference "
"modes."
msgstr "MongoDB的  :doc:`驱动 </applications/drivers>` 支持5种复制集读选项。"

#: ../source/includes/read-preference-modes-table.rst:5
msgid "Read Preference Mode"
msgstr "复制集读选项模式"

#: ../source/includes/read-preference-modes-table.rst:6
msgid "Description"
msgstr "详细说明"

#: ../source/includes/read-preference-modes-table.rst:7
msgid ":readmode:`primary`"
msgstr ":readmode:`primary`"

#: ../source/includes/read-preference-modes-table.rst:8
msgid ""
"Default mode. All operations read from the current replica set :term:"
"`primary`."
msgstr "默认模式，所有的读操作都在复制集的 :term:`主节点 <primary>` 进行的。"

#: ../source/includes/read-preference-modes-table.rst:10
#: ../source/core/read-preference.txt:156
msgid ":readmode:`primaryPreferred`"
msgstr ":readmode:`primaryPreferred`"

#: ../source/includes/read-preference-modes-table.rst:11
msgid ""
"In most situations, operations read from the :term:`primary` but if it is "
"unavailable, operations read from :term:`secondary` members."
msgstr ""
"在大多数情况时，读操作在 :term:`主节点 <primary>` 上进行，但是如果主节点不可"
"用了，读操作就会转移到  :term:`从节点 <secondary>` 上执行。 "

#: ../source/includes/read-preference-modes-table.rst:14
#: ../source/core/read-preference.txt:157
msgid ":readmode:`secondary`"
msgstr ":readmode:`secondary`"

#: ../source/includes/read-preference-modes-table.rst:15
msgid ""
"All operations read from the :term:`secondary` members of the replica set."
msgstr "所有的读操作都在复制集的 :term:`从节点 <secondary>`  上执行。"

#: ../source/includes/read-preference-modes-table.rst:17
#: ../source/core/read-preference.txt:158
msgid ":readmode:`secondaryPreferred`"
msgstr ":readmode:`secondaryPreferred`"

#: ../source/includes/read-preference-modes-table.rst:18
msgid ""
"In most situations, operations read from :term:`secondary` members but if "
"no :term:`secondary` members are available, operations read from the :term:"
"`primary`."
msgstr ""
"在大多数情况下，读操作都是在 :term:`从节点 <secondary>` 上进行的，但是当 :"
"term:`从节点 <secondary>` 不可用了，读操作会转移到 :term:`主节点 <primary>` "
"上进行。"

#: ../source/includes/read-preference-modes-table.rst:21
#: ../source/core/read-preference.txt:159
msgid ":readmode:`nearest`"
msgstr ":readmode:`nearest`"

#: ../source/includes/read-preference-modes-table.rst:22
msgid ""
"Operations read from member of the :term:`replica set` with the least "
"network latency, irrespective of the member's type."
msgstr ""
"读操作会在 :term:`复制集 <replica set>` 中网络延时最小的节点上进行，与节点类"
"型无关。"

#: ../source/core/read-preference.txt:120
msgid ""
"The syntax for specifying the read preference mode is :api:`specific to the "
"driver and to the idioms of the host language <>`."
msgstr ""
"指定复制集读选项模式的语法参见 :api:`specific to the driver and to the "
"idioms of the host language <>` 。"

#: ../source/core/read-preference.txt:124
msgid ""
"Read preference modes are also available to clients connecting to a :term:"
"`sharded cluster` through a :program:`mongos`. The :program:`mongos` "
"instance obeys specified read preferences when connecting to the :term:"
"`replica set` that provides each :term:`shard` in the cluster."
msgstr ""
"复制集读选项对通过 :program:`mongos` 来对 :term:`分片集群 <sharded cluster>` "
"进行连接也有效 。当通过 :program:`mongos` 对 :term:`分片 <shard>` 的 :term:`"
"复制集 <replica set>` 进行连接时，我们也可以使用复制集选项来指定连接对象。"

#: ../source/core/read-preference.txt:130
msgid ""
"In the :program:`mongo` shell, the :method:`~cursor.readPref()` cursor "
"method provides access to read preferences."
msgstr ""
"在 :program:`mongo` shell中，通过游标 :method:`~cursor.readPref()` 来指定复制"
"集读选项。"

#: ../source/core/read-preference.txt:133
msgid ""
"For more information, see :ref:`read preference background <replica-set-read-"
"preference-background>` and :ref:`read preference behavior <replica-set-read-"
"preference-behavior>`. See also the :api:`documentation for your driver <>`."
msgstr ""
"参见  :ref:`read preference background <replica-set-read-preference-"
"background>` 、 :ref:`read preference behavior <replica-set-read-preference-"
"behavior>` 和 :api:`documentation for your driver <>` 。"

#: ../source/core/read-preference.txt:143
msgid "Tag Sets"
msgstr "标签设置"

#: ../source/core/read-preference.txt:145
msgid ""
"Tag sets allow you to target read operations to specific members of a "
"replica set."
msgstr "标签设置可以让我们将"

#: ../source/core/read-preference.txt:148
msgid ""
"Custom read preferences and write concerns evaluate tag sets in different "
"ways. Read preferences consider the value of a tag when selecting a member "
"to read from. Write concerns ignore the value of a tag to when selecting a "
"member, *except* to consider whether or not the value is unique."
msgstr ""
"复制集读选项与安全写级别获取标签的方式是不同的。当需要选择从哪个节点进行读操"
"作的时候，复制集读选项会参考的是标签的值。安全写级别在选择节点的时候只考虑标"
"签的值是否为唯一，与标签的具体数值无关。"

#: ../source/core/read-preference.txt:154
msgid "You can specify tag sets with the following read preference modes:"
msgstr "你可以通过标签来指定如下的复制集读选项："

#: ../source/core/read-preference.txt:161
msgid ""
"Tags are not compatible with mode :readmode:`primary` and, in general, only "
"apply when :ref:`selecting <replica-set-read-preference-behavior-member-"
"selection>` a :term:`secondary` member of a set for a read operation. "
"However, the :readmode:`nearest` read mode, when combined with a tag set, "
"selects the matching member with the lowest network latency. This member may "
"be a primary or secondary."
msgstr ""
"标签一般而言只适用于在 :term:`从节点 <secondary>` 上进行 :ref:`查询 <replica-"
"set-read-preference-behavior-member-selection>` 请求的复制集读选项，而不适用"
"于 :readmode:`primary` 模式。当 :readmode:`nearest` 模式与标签结合使用的时"
"候，就会匹配最低网络延时的节点。这个节点可能是从节点也可能是主节点。"

#: ../source/core/read-preference.txt:168
msgid ""
"All interfaces use the same :ref:`member selection logic <replica-set-read-"
"preference-behavior-member-selection>` to choose the member to which to "
"direct read operations, basing the choice on read preference mode and tag "
"sets."
msgstr ""
"所有的交互都是基于复制集读选项模式与标签的，且使用了同样的 :ref:`用户选择逻"
"辑 <replica-set-read-preference-behavior-member-selection>` 来将选择分发读请"
"求的节点。"

#: ../source/core/read-preference.txt:173
msgid ""
"For information on configuring tag sets, see the :doc:`/tutorial/configure-"
"replica-set-tag-sets` tutorial."
msgstr ""
"参见 :doc:`/tutorial/configure-replica-set-tag-sets` 获得更多有关标签配置的信"
"息。"

#: ../source/core/read-preference.txt:176
msgid ""
"For more information on how read preference :ref:`modes <replica-set-read-"
"preference-modes>` interact with tag sets, see the :doc:`documentation for "
"each read preference mode </reference/read-preference>`."
msgstr ""
"参见  :doc:`documentation for each read preference mode </reference/read-"
"preference>`以获得更多有关复制集读选项的 :ref:`模式 <replica-set-read-"
"preference-modes>` 与标签之间的相互作用。"

#: ../source/core/read-preference.txt:1 ../source/core/read-preference.txt:3
#: ../source/core/read-preference.txt:139
msgid "read preference"
msgstr "复制集读选项"

#: ../source/core/read-preference.txt:2
msgid "slaveOk"
msgstr "slaveOk"

#: ../source/core/read-preference.txt:3
msgid "background"
msgstr "background"

#: ../source/core/read-preference.txt:138
#: ../source/core/read-preference.txt:139
msgid "tag sets"
msgstr ""

#: ../source/core/read-preference.txt:0
msgid "On this page"
msgstr ""

#: ../source/includes/introduction-read-preference.rst:6
msgid ""
"By default, an application directs its read operations to the "
":term:`primary` member in a :term:`replica set`."
msgstr ""

#: ../source/includes/extracts/replica-read-consistency-single-primary.rst:2
msgid ""
"In MongoDB, in a replica set with one primary member [#edge-"
"cases-2-primaries]_,"
msgstr ""

#: ../source/includes/extracts/replica-read-consistency-single-primary.rst:5
msgid ""
"With :readconcern:`\"local\"` ``readConcern``, reads from the primary "
"reflect the latest writes in absence of a failover;"
msgstr ""

#: ../source/includes/extracts/replica-read-consistency-single-primary.rst:8
msgid ""
"With :readconcern:`\"majority\"` ``readConcern``, read operations from the "
"primary or the secondaries have :term:`eventual consistency`."
msgstr ""

#: ../source/core/read-preference.txt:28
msgid ""
"The read preference does not affect the visibility of data; i.e, clients can"
" see the results of writes before they are acknowledged or have propagated "
"to a majority of replica set members:"
msgstr ""

#: ../source/includes/list-visibility-of-data.rst:1
msgid ""
"Regardless of :doc:`write concern </reference/write-concern>`, other clients"
" using :readconcern:`\"local\"` (i.e. the default) readConcern can see the "
"result of a write operation before the write operation is acknowledged to "
"the issuing client."
msgstr ""

#: ../source/includes/list-visibility-of-data.rst:6
msgid ""
"Clients using :readconcern:`\"local\"` (i.e. the default) readConcern can "
"read data which may be subsequently :doc:`rolled back </core/replica-set-"
"rollbacks>`."
msgstr ""

#: ../source/core/read-preference.txt:81
msgid ""
"Replication is asynchronous and there is some amount of delay between a "
"successful write operation and its replication to secondaries. Reading from "
"a secondary can return out-of-date data; reading from different secondaries "
"may result in non-monotonic reads."
msgstr ""

#: ../source/includes/footnote-two-primaries-edge-cases.rst:1
msgid ""
"In :ref:`some circumstances <edge-cases>`, two nodes in a replica set may "
"*transiently* believe that they are the primary, but at most, one of them "
"will be able to complete writes with :writeconcern:`{ w: \"majority\" } "
"<\"majority\">` write concern. The node that can complete :writeconcern:`{ "
"w: \"majority\" } <\"majority\">` writes is the current primary, and the "
"other node is a former primary that has not yet recognized its demotion, "
"typically due to a :term:`network partition`. When this occurs, clients that"
" connect to the former primary may observe stale data despite having "
"requested read preference :readmode:`primary`, and new writes to the former "
"primary will eventually roll back."
msgstr ""

#~ msgid ""
#~ "By default, an application directs its read operations to the "
#~ ":term:`primary` member in a :term:`replica set`. Because write operations "
#~ "are issued to the single primary, reading from the primary returns the "
#~ "latest version of a document [#edge-cases-2-primaries]_."
#~ msgstr ""

#~ msgid ""
#~ "For an application that does not require fully up-to-date data, you can "
#~ "improve read throughput or reduce latency by distributing some or all reads "
#~ "to secondary members of the replica set."
#~ msgstr ""

#~ msgid ""
#~ "The read preference does not affect the visibility of data; i.e, clients can"
#~ " see the results of writes before they are made durable:"
#~ msgstr ""

#~ msgid ""
#~ "Regardless of :doc:`write concern </reference/write-concern>`, other clients"
#~ " can see the result of the write operations before the write operation is "
#~ "acknowledged to the issuing client."
#~ msgstr ""

#~ msgid ""
#~ "Clients can read data which may be subsequently :doc:`rolled back </core"
#~ "/replica-set-rollbacks>`."
#~ msgstr ""

#~ msgid ""
#~ "Replication is asynchronous and there is some amount of delay between a "
#~ "successful write operation and its replication to secondaries; reading from "
#~ "a secondary can return out-of-date data."
#~ msgstr ""

#~ msgid ""
#~ "In some circumstances, two nodes in a replica set may *transiently* believe "
#~ "that they are the primary, but at most, one of them will be able to complete"
#~ " writes with :ref:`{w: majority} write concern <wc-w>`. The node that can "
#~ "complete :ref:`{w: majority} <wc-w>` writes is the current primary, and the "
#~ "other node is a former primary that has not yet recognized its demotion, "
#~ "typically due to a :term:`network partition`. When this occurs, clients that"
#~ " connect to the former primary may observe stale data despite having "
#~ "requested read preference :readmode:`primary`."
#~ msgstr ""
