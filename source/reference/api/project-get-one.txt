===============
Get One Project
===============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. include:: /includes/fact-projects-groups-synonyms.rst

.. include:: /includes/api-requirements.rst

.. include:: /includes/api-base-url.rst

Syntax
------

.. code-block:: none

   GET /api/atlas/v1.0/groups/{GROUP-ID}

Request Path Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1
   :widths: 15 10 75

   * - Path Element
     - Required/Optional
     - Description

   * - ``GROUP-ID``

     - Required.

     - The unique identifier for the :ref:`project <group-id>` whose information
       you want to retrieve.

Request Query Parameters
~~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1
   :widths: 30 10 60

   * - Field
     - Required/Optional
     - Description

   * - ``pageNum``

     - Optional.

     - The page to return.

       Defaults to ``1``.

   * - ``itemsPerPage``

     - Optional.

     - Number of items to return per page, up to a maximum of 500.

       Defaults to ``100``.

   * - ``envelope``

     - Optional.

     - A boolean that specifies whether or not to wrap the response in an
       :ref:`envelope <api-envelope>`.

       Defaults to ``false``.

   * - ``pretty``

     - Optional.

     - A boolean that specifies whether or not to return a "pretty-printed"
       JSON document.

       Defaults to ``false``.

Response
--------

If you set the query element ``envelope`` to ``true``, the response is wrapped
by the ``content`` object.

The HTTP response returns a JSON document that includes the following objects:

.. list-table::
   :header-rows: 1
   :widths: 25 75

   * - Name
     - Description

   * - ``clusterCount``
     - The number of |service| clusters deployed in the project.

   * - ``created``
     - The ISO-8601-formatted timestamp of when |service| created 
       the project.

   * - ``id``
     - The unique identifier of the project. You can use this value
       for populating the ``{GROUP-ID}`` parameter of other
       |service| API endpoints.

   * - ``links``
     - An array of documents. Each element represents a :ref:`link <api-linking>`
       to one of the following resources:

       - ``/api/atlas/v1.0/groups/{GROUP-ID}/``

         A self-referential link to the project.

       - ``/api/atlas/v1.0/groups/{GROUP-ID}/containers``

         A link to the :doc:`/reference/api/vpc` container resource.

       - ``/api/atlas/v1.0/groups/{GROUP-ID}/clusters``

         A link to the :doc:`/reference/api/clusters` resource.

       - ``/api/atlas/v1.0/groups/{GROUP-ID}/databaseUsers``

         A link to the :doc:`/reference/api/database-users` resource.

       - ``/api/atlas/v1.0/groups/{GROUP-ID}/peers``

         A link to the :doc:`/reference/api/vpc` peering resource.

       - ``/api/atlas/v1.0/groups/{GROUP-ID}/processes``

         A link to the :doc:`/reference/api/monitoring-and-logs` resource.

       - ``/api/atlas/v1.0/groups/{GROUP-ID}/whitelist``

         A link to the :doc:`/reference/api/whitelist` resource.

   * - ``name``
     - The name of the project. You can use this value for populating
       the ``{GROUP-NAME}`` parameter of the 
       :doc:`/groups/byName/{GROUP-NAME} 
       </reference/api/project-get-one-by-name>` endpoint.

   * - ``orgId``
     - The unique identifier of the |service| organization to which
       the project belongs.

Example
-------

Request
~~~~~~~

.. class:: copyable-code
.. code-block:: none

   curl -i -u "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest "https://cloud.mongodb.com/api/atlas/v1.0/groups/5a0a1e7e0f2912c554080ae6"

Response
~~~~~~~~

.. code-block:: none

   HTTP/1.1 200 OK

   {
     "clusterCount" : 2,
     "created" : "2016-07-14T14:19:33Z",
     "id" : "5a0a1e7e0f2912c554080ae6",
     "links" : [ {
       "href" : "https://cloud.mongodb.com/api/atlas/v1.0/groups/5a0a1e7e0f2912c554080ae6",
       "rel" : "self"
     }, {
       "href" : "https://cloud.mongodb.com/api/atlas/v1.0/groups/5a0a1e7e0f2912c554080ae6/containers",
       "rel" : "http://mms.mongodb.com/containers"
     }, {
       "href" : "https://cloud.mongodb.com/api/atlas/v1.0/groups/5a0a1e7e0f2912c554080ae6/clusters",
       "rel" : "http://mms.mongodb.com/clusters"
     }, {
       "href" : "https://cloud.mongodb.com/api/atlas/v1.0/groups/5a0a1e7e0f2912c554080ae6/databaseUsers",
       "rel" : "http://mms.mongodb.com/databaseUsers"
     }, {
       "href" : "https://cloud.mongodb.com/api/atlas/v1.0/groups/5a0a1e7e0f2912c554080ae6/peers",
       "rel" : "http://mms.mongodb.com/peers"
     }, {
       "href" : "https://cloud.mongodb.com/api/atlas/v1.0/groups/5a0a1e7e0f2912c554080ae6/processes",
       "rel" : "http://mms.mongodb.com/processes"
     }, {
       "href" : "https://cloud.mongodb.com/api/atlas/v1.0/groups/5a0a1e7e0f2912c554080ae6/whitelist",
       "rel" : "http://mms.mongodb.com/whitelist"
     } ],
     "name" : "DocsFeedbackGroup",
     "orgId" : "5a0a1e7e0f2912c554080adc"
  }
