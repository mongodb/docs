=========================
Restore a Sharded Cluster
=========================

.. default-domain:: mongodb

Overview
--------

The procedure outlined in this document addresses how to restore an
entire sharded cluster. For information on related backup procedures
consider the following tutorials which describe backup procedures in
greater detail:

- :doc:`/tutorial/backup-sharded-cluster-with-filesystem-snapshots`
- :doc:`/tutorial/backup-sharded-cluster-with-database-dumps`

The exact procedure used to restore a database depends on the method
used to capture the backup. See the :doc:`/core/backups`
document for an overview of backups with MongoDB and
:doc:`/administration/backup-sharded-clusters` for a complete
information on backups in MongoDB and backups of sharded clusters in
particular.

Procedure
---------

#. Stop all :program:`mongos` and :program:`mongod` processes,
   including all shards *and* all config servers.

Procedure
---------

#. Stop all :program:`mongos` and :program:`mongod` processes,
   including all shards *and* all config servers.

# If shard hostnames have *not* changed, skip to step 3. Otherwise:

   #. Restore the config database on each config server
   
   b. Start the three :ref:`config servers <sharding-config-server>` by
      issuing commands similar to the following, using values appropriate
      to your configuration:
      
      .. code-block:: sh

         mongod --configsvr --dbpath /data/configdb --port 27019

   #. Start one :program:`mongos` instance, making sure you have updated the 
      config string with the new configdb hostnames and ports

   #. Update the :ref:`config-database` collection named ``shards`` to reflect the
      new hostnames.

#. Restore the following:

   - Data files for each server in each :term:`shard`. Because replica
     sets provide each production shard, restore all the members of
     the replica set or use the other standard approaches for
     restoring a replica set from backup. See the
     :ref:`backup-restore-snapshot` and :ref:`backup-restore-dump`
     sections for details on these procedures.

   - Data files for each :ref:`config server <sharding-config-server>`,
     if you have not already done so in the previous step.

#. Restart all the config servers :program:`mongod` instances.

#. Restart all the :program:`mongos` instances, making sure to use the updated config string.

#. Restart all the shard :program:`mongod` instances.

#. Connect to a :program:`mongos` instance from a :program:`mongo` shell
   and use the :method:`db.printShardingStatus()` method to ensure
   that the cluster is operational, as follows:

   .. code-block:: javascript

      db.printShardingStatus()
      show collections
