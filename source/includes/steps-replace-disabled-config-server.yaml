title: Start the replacement config server.
stepnum: 1
ref: start-config-server
pre: |
   Start a :program:`mongod` instance, specifying both the ``--configsvr``
   and ``--replSet`` options.
action:
   language: sh
   code: |
      mongod --configsvr --replSet <replicaSetName>
---
title: Add the new config server to the replica set.
stepnum: 2
ref: add-to-replica-set
pre: |
    Connect a :program:`mongo` shell to the primary of the config server
    replica set and use :method:`rs.add()` to add the new member.
action:
   language: javascript
   code: |
     rs.add("<hostnameNew>:<portNew>")
post: |
   The initial sync process copies all the data from one member of the
   config server replica set to the new member without restarting.

   :program:`mongos` instances automatically recognize the change in the
   config server replica set members without restarting.
---
title: Shut down the member to replace.
stepnum: 3
ref: shut-down-old-member
content: |
   If replacing the primary member, step down the primary first before
   shutting down.
---
title: Remove the member to replace from the config server replica set.
stepnum: 4
ref: remove-old-member
pre: |
    Upon completion of initial sync of the replacement config server,
    from a :program:`mongo` shell connected to the primary, use
    :method:`rs.remove()` to remove the old member.
action:
   language: javascript
   code: |
     rs.remove("<hostnameOld>:<portOld>")
post: |
   :program:`mongos` instances automatically recognize the change in the
   config server replica set members without restarting.

   .. end-for-migration-steps
---
title: "If necessary, update ``mongos`` configuration or DNS entry."
stepnum: 5
ref: update-mongos-setting
pre: |
    With replica set config servers, the :program:`mongos` instances specify
    in the :option:`--configdb` or :setting:`sharding.configDB` setting the config
    server replica set name and at least one of the replica set members. 

    As such, if the :program:`mongos` instance does not specify the
    removed replica set member in the :option:`--configdb` or
    :setting:`sharding.configDB` setting, no further action is necessary.

    If, however, a :program:`mongos` instance specified the removed
    member in the ``--configdb`` or :setting:`~sharding.configDB`
    setting, either:

    - Update the setting for the next time you restart the
      :program:`mongos`, or

    - Modify the DNS entry that points to the system that provided the old
      config server, so that the *same* hostname points to the new
      config server.
...
