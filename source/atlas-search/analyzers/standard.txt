.. _ref-standard-analyzer:

=================
Standard Analyzer
=================

.. default-domain:: mongodb

.. meta::
   :keywords: default analyzer, divide text, convert to lower case, remove punctuation, grammar based tokenization, create index
   :description: Use the Atlas Search standard analyzer to divide text into terms based on word boundaries, convert terms to lowercase, and remove punctuation.

The ``standard`` analyzer is the default for all |fts| indexes and
queries. It divides text into terms based on word boundaries, which
makes it language-neutral for most use cases. It converts all terms
to lower case and removes punctuation. It provides grammar-based 
tokenization that recognizes email addresses, acronyms, 
Chinese-Japanese-Korean characters, alphanumerics, and more.

.. |analyzer-name| replace:: ``standard``

.. include:: /includes/fact-fts-index-configurations.rst

.. important:: 

   .. include:: /includes/fact-fts-string-size-limit.rst

Example
-------

The following example index definition specifies an index on
the ``title`` field in the :ref:`sample_mflix.movies <sample-mflix>`
collection using the ``standard`` analyzer. If you loaded the collection
on your {+cluster+}, you can create the example index using the
{+atlas-ui+} Visual Editor or the |json| Editor. After you select your
preferred configuration method, select the database and collection. 

.. tabs:: 

   .. tab:: Visual Editor 
      :tabid: vib

      1. Click :guilabel:`Refine Your Index` to configure your index.
      #. In the :guilabel:`Field Mappings` section, click
         :guilabel:`Add Field Mapping` to open the :guilabel:`Add Field
         Mapping` window. 
      #. Click :guilabel:`Customized Configuration`.
      #. Select ``title`` from the :guilabel:`Field Name` dropdown.
      #. Click the :guilabel:`Data Type` dropdown and select
         :guilabel:`String` if it isn't already selected. 
      #. Expand :guilabel:`String Properties` and make the following 
         changes: 

         .. list-table:: 
            :stub-columns: 1

            * - Index Analyzer 
              - Select ``lucene.standard`` from the dropdown if it isn't
                already selected. 
      
            * - Search Analyzer 
              - Select ``lucene.standard`` from the dropdown if it isn't
                already selected.

            * - Index Options 
              - Use the default ``offsets``.

            * - Store 
              - Use the default ``true``.

            * - Ignore Above 
              - Keep the default setting.

            * - Norms 
              - Use the default ``include``.
      
      #. Click :guilabel:`Add`.
      #. Click :guilabel:`Save Changes`.
      #. Click :guilabel:`Create Search Index`.

   .. tab:: JSON Editor 
      :tabid: jsonib

      1. Replace the default index definition with the following index
         definition. 

         .. code-block:: json
            :copyable: true
            :emphasize-lines: 6

            {
              "mappings": {
                "fields": {
                  "title": {
                    "type": "string",
                    "analyzer": "lucene.standard"
                  }
                }
              }
            }
      
      #. Click :guilabel:`Next`.
      #. Click :guilabel:`Create Search Index`.

The following query searches the ``title`` field for the term ``action``
and limits the output to two results.  

.. io-code-block:: 
   :copyable: true 

   .. input:: 
      :language: json 

      db.movies.aggregate([
        { 
          "$search": {
            "text": {
               "query": "action",
               "path": "title"
            }
          }
        },
        {
          "$limit": 2
        },
        {
          "$project": {
            "_id": 0,
            "title": 1
          }
        }
      ])

   .. output:: 
      :language: json 

      [
        {
          title: 'Action Jackson'
        },
        { 
          title: 'Class Action' 
        }
      ]

|fts| returned these documents because it matched the query term
``action`` to the token ``action`` for the documents, which |fts|
created by doing the following for the text in the ``title`` field
using the ``lucene.standard`` analyzer: 

- Convert the text to lowercase. 
- Split the text based on word boundaries and create separate tokens.

The following table shows the tokens (searchable terms) that |fts|
creates using the :ref:`ref-standard-analyzer` and, by contrast, the
tokens that |fts| creates for the :ref:`ref-keyword-analyzer` and
:ref:`ref-whitespace-analyzer` for the documents in the results: 

.. list-table:: Tokens
   :header-rows: 1
   :stub-columns: 1

   * - Title 
     - Standard Analyzer Tokens 
     - Keyword Analyzer Tokens
     - Whitespace Analyzer Tokens

   * - ``Action Jackson`` 
     - ``action``, ``jackson``
     - ``Action Jackson``
     - ``Action``, ``Jackson``

   * - ``Class Action`` 
     - ``class``, ``action``
     - ``Class Action``
     - ``Class``, ``Action``

If you index the field using the: 

- :ref:`ref-keyword-analyzer`, |fts| wouldn't match the documents in the
  results for the query term ``action`` because the ``keyword`` analyzer
  matches only documents in which the search term matches the entire
  contents of the field (``Action Jackson`` and ``Class Action``)
  exactly.    
- :ref:`ref-whitespace-analyzer`, |fts| wouldn't match the documents in
  the results for the query term ``action`` because the ``whitespace``
  analyzer tokenizes the ``title`` field value in its original case
  (``Action``) and the query term has the lowercase ``action``, which
  doesn't match the ``whitespace`` analyzer token. 
