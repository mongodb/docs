.. _c2c-pull-live-migration:

================================================================
Live Migrate (Pull) a MongoDB 6.0.5 or Later Cluster into Atlas
================================================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. include:: /includes/serverless-dont-use.rst

If both the source and destination {+clusters+} are running MongoDB 6.0.5
or later, |service| can pull a source {+cluster+} to an |service| {+cluster+}
using the procedure described in this section.

This process uses |mongosync| as the underlying data migration tool,
enabling faster live migrations with less downtime:

- |service| syncs data from the source to the destination {+cluster+} until
  you cut your applications over to the destination |service| {+cluster+}.

- Once you reach the cutover step in the following procedure:
  
  - Stop writes to the source {+cluster+}.
  - Stop your application instances, point them to the |service| {+cluster+},
    and restart them.

.. _c2c-limitations:

Restrictions
------------

This live migration has the following limitations:

.. include:: /includes/c2c-limitations.rst

   - Live migration (pull) in this section doesn't support
     :ref:`VPC peering <vpc-peering>` or :ref:`private endpoints <private-endpoint>`
     for either the source or destination {+cluster+}.

Prerequisites
-------------

- If the {+cluster+} runs with authentication:

  - For replica sets, grant the :authrole:`backup` and :authrole:`readAnyDatabase`
    roles on the admin database to the user that will run the migration process.
  - For sharded {+clusters+}, grant the :authrole:`backup`, :authrole:`readAnyDatabase`,
    and :authrole:`clusterMonitor` roles on the admin database to the user
    that will run the migration process.
  - Ensure that this user is authenticated using
    :manual:`both SCRAM-SHA-1 and SCRAM-SHA-256 </core/security-scram/>`.
    To learn more, see :ref:`live-import-c2c-security`.

.. include:: /includes/note-source-cluster-readiness.rst

.. _live-import-c2c-upgrade-path:

Migration Path
~~~~~~~~~~~~~~

|service| live migration described in this section supports the following
migration paths:

.. include:: /includes/list-tables/c2c-pull-live-migration-upgrade-path.rst

.. _live-import-c2c-ip-access-list:

Network Access
~~~~~~~~~~~~~~~

.. include:: /includes/import/network-access.rst

.. _live-import-c2c-migration-validation:

Pre-Migration Validation
~~~~~~~~~~~~~~~~~~~~~~~~

Before starting the following live migration procedure, |service| runs
validation checks on the source and destination {+clusters+} and verifies that:

- The source and destination {+cluster+}\'s MongoDB version is at least |fcv|
  6.0 and is matching as described in :ref:`c2c-limitations`.
- The source {+cluster+}\'s database user has the correct permissions as
  described in :ref:`live-import-c2c-security`.
- The source and destination {+clusters+} are either both replica sets, or they
  are both sharded {+clusters+} with the same number of shards.

  If the source {+cluster+} is a standalone, before using this migration process,
  :manual:`convert the standalone to a replica set </tutorial/convert-standalone-to-replica-set>`.

If migrating a sharded {+cluster+} to another sharded {+cluster+}, the
  source sharded {+cluster+} must use CSRS (Config Server Replica Sets).
  See :ref:`replset-config-servers`.

.. _live-import-c2c-security:

Source {+Cluster+} Security
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/c2c-pull-source-cluster-security.rst

Considerations
--------------

.. include:: /includes/fact-network-encryption-pull-migration.rst

Database Users and Roles
~~~~~~~~~~~~~~~~~~~~~~~~

|service| doesn't migrate any user or role data to the destination {+cluster+}.

.. include:: /includes/fact-create-atlas-user.rst

If the source {+cluster+} enforces authentication, you must recreate the
credentials that your applications use on the destination |service| {+cluster+}.
|service| uses :ref:`SCRAM <authentication-scram>` for user authentication.
To learn more, see :doc:`/security-add-mongodb-users`.

Destination {+Cluster+} Configuration
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

When you configure the destination {+cluster+}, consider the following:

.. include:: /includes/fact-live-migration-perf-target-cluster.rst

- The source and destination {+clusters+} are either both replica sets, or
  they are both sharded {+clusters+} with the same number of shards.

- You can't select an ``M0`` (Free Tier) or ``M2/M5`` shared-tier
  {+cluster+} as the destination {+cluster+} for live migration.

- Don't change the ``featureCompatibilityVersion`` flag while
  |service| live migration is running.


Avoid Workloads on the Destination {+Cluster+}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-mongomirror-no-workloads-target-cluster.rst

Avoid Cloud Backups
~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-avoid-backups.rst

Avoid Elections
~~~~~~~~~~~~~~~

.. include:: /includes/fact-avoid-elections.rst


Migrate Your {+Cluster+}
------------------------

.. note:: Staging and Production Migrations

   Consider running this procedure twice. Run a partial migration
   that stops at the :guilabel:`Perform the Cutover` step *first*. This
   creates an up-to-date |service|-backed staging {+cluster+} to test
   application behavior and performance using the latest
   :driver:`driver version </driver-compatibility-reference>` that
   supports the MongoDB version of the |service| {+cluster+}.

   After you test your application, run the full migration
   procedure using a separate |service| {+cluster+} to create your
   |service|-backed production environment.

.. include:: /includes/pre-migration-checklist.rst

Procedure
~~~~~~~~~

.. include:: /includes/steps/c2c-pull-live-migration.rst

Migration Support
-----------------

.. _live-migration-c2c-support:

.. include:: /includes/live-migration-support.rst
