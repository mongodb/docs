.. _arch-center-is-unified-namespace:

================================
Unified Namespace Data Integrity
================================

.. facet::
   :name: genre
   :values: tutorial

.. meta::
   :keywords: unified namespace, manufacturing, modernization, odl, IoT
   :description: Explore manufacturing efficiency with a Unified Namespace solution for seamless data integration and real-time insights. Discover how to enhance your operations.
   
.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

MongoDB aids manufacturers by unifying operational data, enhancing
production efficiency, enabling real-time insights, and optimizing
processes.

**Use cases:** `App-Driven Analytics
<https://www.mongodb.com/resources/solutions/use-cases/application-driven-intelligence>`__,
`IoT <https://www.mongodb.com/solutions/use-cases/internet-of-things>`__,
`Single View <https://www.mongodb.com/solutions/use-cases/single-view>`__

**Industries:** `Manufacturing & Mobility
<https://www.mongodb.com/solutions/industries/manufacturing>`__

**Products:** `MongoDB Atlas <https://www.mongodb.com/products/platform/atlas-database>`__, 
`MongoDB Atlas Charts <https://www.mongodb.com/products/platform/atlas-charts>`__,
`MongoDB Change Streams <https://www.mongodb.com/resources/products/capabilities/change-streams>`__,
`MongoDB Connector for Kafka <https://www.mongodb.com/products/integrations/kafka-connector>`__,
`MongoDB Time Series <https://www.mongodb.com/products/capabilities/time-series>`__

**Partners:** `Cedalo (Mosquitto)
<https://cedalo.com/blog/mqtt-to-mongodb-integration/>`__

Solution Overview
-----------------

The manufacturing industry is changing due to the integration of real-time
data and centralized data management tools like the Unified Namespace (UNS)
model, which stores different types of data in one location. 
Modern factories generate data from systems like 
enterprise resource planning (ERP), manufacturing execution system (MES), 
and shop floor machines. As manufacturers connect and automate their systems, 
unifying these data sources is crucial. For example, smart factory initiatives can 
boost productivity by up to 12 perfect and improve equipment effectiveness 
by up to 20 percent, `according to Deloitte <https://www2.deloitte.com/us/en/insights/industry/manufacturing/manufacturing-industry-outlook.html>`__.

This solution implements a demo named Leafy Factory that develops a
comprehensive UNS framework with MongoDB. You can use MongoDB as a UNS
that autonomously unifies and analyzes data from different manufacturing
systems. MongoDB's flexibility, real-time processing, and 
scalability make it an optimal choice for an efficient UNS. It also brings
improved efficiency and insights to manufacturing data management systems, as
shown in the following diagram:

.. figure:: /includes/images/industry-solutions/unified-namespace-lessons.svg
   :figwidth: 1200px
   :alt: Unified namespace simplifies the architecture deployment
   
   Figure 1. Automation pyramid versus a Unified Namespace

This UNS framework ingests diverse operational data types, analyzes streams for
actionable insights, stores information in MongoDB, and provides
strategic recommendations using comprehensive analytics generated from
different data sources. This allows for increased efficiency by centralizing
data storage and management.

Reference Architectures
-----------------------

The following diagram displays this solution's architecture:

.. figure:: /includes/images/industry-solutions/unified-namespace-architecture.svg
   :figwidth: 1200px
   :alt: Architecture diagram for the unified namespace solution
   
   Figure 2. Leafy Factory UNS architecture

This architecture has the following data flow:

**1. Data Ingestion with MQTT Broker**

The solution begins by employing Cedalo's Mosquitto MQTT Broker to
handle real-time data streams from shop floor machines. This
broker gathers data such as machine status and sensor
readings, including temperature and vibration. The architecture remains
broker-agnostic and is capable of integrating with various other MQTT
providers as needed.

**2. SQL Data Integration via Kafka Connector**

Concurrent with the MQTT data reception, the Debezium connector captures
SQL data from :abbr:`ERP (enterprise resource planning)` and 
:abbr:`MES (manufacturing execution system)` systems, such as work orders 
and material tracking, and streams it into Kafka topics. Kafka connector 
then processes this data and inserts it into MongoDB Atlas. This ensures 
that ERP data is continuously updated.

**3. Database Management with MongoDB Atlas**

MongoDB's flexible document model allows you to store diverse data
structures, from raw machine sensor data to structured ERP records, in Atlas.
By storing data in a document format, manufacturers can effortlessly adapt
to changes, such as new sensors or machine attributes. 

The data in this solution has the following structure:

.. code-block:: javascript
   :copyable: false

   {  
      "result": {  
         "factory": {  
            "location": "qro_fact_1",  
            "timestamp": "2025-04-12 02:59:41.569745",  
            "production_lines": [  
            {  
               "production_line_id": 2,  
               "machines": [  
                  {  
                  "_id": 3,  
                  "machine_id": 3,  
                  "details": {  
                     "machine_status": "Available",  
                     "last_maintenance": "2024-10-31 14:25:00",  
                     "operator": "Grace Conway",  
                     "avg_temperature": 70.48,  
                     "avg_vibration": 0.59,  
                     "temp_values": 70,  
                     "vib_values": 0.01  
                  },  
                  "work_orders": [  
                     {  
                        "id_work": 111,  
                        "jobs": [  
                        {  
                           "id_job": 62  
                        }  
                        ]  
                     },  
                     {  
                        "id_work": 105,  
                        "jobs": [  
                        {  
                           "id_job": 58  
                        }  
                        ]  
                     },  
                     {  
                        "id_work": 104,  
                        "jobs": [  
                        {  
                           "id_job": 57  
                        }  
                        ]  
                     },  
                     {  
                        "id_work": 100,  
                        "jobs": [  
                        {  
                           "id_job": 55  
                        }  
                        ]  
                     },  
                     {  
                        "id_work": 99,  
                        "jobs": [  
                        {  
                           "id_job": 52  
                        }  
                        ]  
                     }  
                  ]  
                  }  
               ]  
            }  
            ]  
         }  
      }  
   }  

**4. Real-time Analysis with Time Series Collections**

Once the data is in Atlas, you can use :ref:`time series <manual-timeseries-landing>`
collections to manage and analyze your data. Time series collections allow 
manufacturers to store time-stamped data and gain insights into 
manufacturing processes over time, allowing you to spot patterns and react
promptly to any changes. You can also integrate additional metadata into
the document model, such as machine ID, operator name, location, and more.

**5. Visualization and Analytics with Atlas Charts**

Finally, you can visualize the integrated data by using Atlas Charts, 
which provides intuitive graphical representations of production metrics,
quality analysis, and machine statuses. This enables manufacturers to
make informed decisions through actionable insights.

Build the Solution
------------------

This solution uses a combination of core technologies that work together
to allow seamless data processing and integration across diverse manufacturing
systems. For complete implementation details, including code samples,
configuration files, and tutorial videos, see this solution's 
`GitHub repository <https://github.com/mongodb-industry-solutions/leafy_factory>`__. 

This solution has the following prerequisites:

- Python 3.12 or later
- Node.js 14 or later
- MongoDB Atlas Cluster running MongoDB 8.0.4 or later
- Apache Kafka 3.9.0 or later
- Java JDK 23 or later
- PostgreSQL 15.10 or later

To deploy the solution, follow the instructions in the ``README``
in the GitHub repository linked above.

Key Learnings 
-------------

- **Adaptability to operational changes:** MongoDB's flexible document model
  can easily integrate new data sources and scale with expanding production
  lines, allowing manufacturers to maintain a dynamic data system without
  requiring architectural overhauls.

- **Centralized data layer for advanced applications:** While the UNS doesn't
  directly perform applications like predictive maintenance, it provides
  infrastructure for such initiatives. Manufacturers can easily implement
  IoT-based solutions, enhance maintenance schedules, and optimize costs by
  using the UNS to centralize real-time and historical data.

- **Cross-functional insight generation:** MongoDB's analytics capabilities
  allows manufacturing teams to integrate diverse datasets, such as MES
  metrics and ERP outputs.

- **Ensured data availability and reliability:** MongoDB's replica set
  architecture ensures that the system remains operational without interruption.
  This prevents potential disruptions in the manufacturing data ecosystem
  and supports reliable long-term operations.

Authors
-------

- Raphael Schor, MongoDB
- Romina Carranza, MongoDB
- Giovanni Rodriguez, MongoDB

Learn More
----------

- :ref:`arch-center-is-manufacturing-iot-data-hub-solution`
- :ref:`arch-center-is-framework-rapid-agent-deployment`
- :ref:`arch-center-real-time-flight-management`