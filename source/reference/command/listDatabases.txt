=============
listDatabases
=============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. dbcommand:: listDatabases

   The :dbcommand:`listDatabases` command provides a list of all
   existing databases along with basic statistics about them. The
   :dbcommand:`listDatabases` must run against the ``admin`` database,
   as in the following example:

Compatibility
-------------

This command is available in deployments hosted in the following environments: 

.. include:: /includes/fact-environments-atlas-only.rst

.. include:: /includes/fact-environments-atlas-support-all.rst

.. include:: /includes/fact-environments-onprem-only.rst

Syntax
------

.. code-block:: javascript

   db.adminCommand( 
      { 
        listDatabases: 1 
      } 
   )

The value (e.g. ``1``) does not affect the output of the
command.

Command Fields
--------------

The command can take the following optional fields:

.. list-table::
   :header-rows: 1
   :widths: 20 20 80
 
   * - Field
     - Type
     - Description
 
   * - ``filter``
     - document
     - Optional. A query predicate that determines which databases are listed.
       
       You can specify a condition on any of the fields in the output of
       :dbcommand:`listDatabases`:
       
       - ``name``
       
       - ``sizeOnDisk``
       
       - ``empty``
       
       - ``shards``

       The ``filter`` option isn't supported on Atlas :atlas:`Free
       and Shared tier </manage-clusters/>` clusters and
       :atlas:`Serverless Instances </manage-serverless-instances/>`. 
 
   * - ``nameOnly``
     - boolean
     - Optional. A flag to indicate whether the command should return just the
       database names, or return both database names and size information.
       
       The default value is ``false``, so :dbcommand:`listDatabases` returns
       the name and size information of each database.
       
   * - ``authorizedDatabases``
     - boolean
     - Optional. A flag that determines which databases are returned based on the
       user privileges when access control is enabled.
       
       .. include:: /includes/extracts/listDatabases-auth-privileges.rst
       
       For more information, see :ref:`listDatabases-behavior`.
       
   * - ``comment``
     - any
     - .. include:: /includes/extracts/comment-content.rst

.. _listDatabases-behavior:

Behavior
--------

When :ref:`authentication <authentication>` is enabled,
the :dbcommand:`listDatabases` command returns different values based on 
the privileges assigned to the user who executes the command and the
``authorizedDatabases`` command option:

.. include:: /includes/extracts/listDatabases-auth-privileges-4.0.6.rst


Client Disconnection
~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/extracts/4.2-changes-disconnect.rst

.. |operation| replace:: :dbcommand:`listDatabases`


Replica Set Member State Restriction
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/extracts/4.4-changes-repl-state-restrictions-operation.rst

.. |operations| replace:: :dbcommand:`listDatabases`


Examples
--------

List Database Names and Sizes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Run :dbcommand:`listDatabases` against the ``admin`` database:

.. code-block:: javascript

   db.adminCommand( { listDatabases: 1 } )

The following is an example of a :dbcommand:`listDatabases` result:

.. code-block:: json

   {
      "databases" : [
         {
            "name" : "admin",
            "sizeOnDisk" : 83886080,
            "empty" : false
         },
         {
            "name" : "local",
            "sizeOnDisk" : 83886080,
            "empty" : false
         },
         {
            "name" : "test",
            "sizeOnDisk" : 83886080,
            "empty" : false
         }
      ],
      "totalSize" : 251658240,
      "totalSizeMb" : 251,
      "ok" : 1
   }


List Database Names Only
~~~~~~~~~~~~~~~~~~~~~~~~

Run :dbcommand:`listDatabases` against the ``admin`` database. Specify
the ``nameOnly: true`` option:

.. code-block:: javascript

   db.adminCommand( { listDatabases: 1, nameOnly: true} )

The following is an example of a :dbcommand:`listDatabases` results
when run with the ``nameOnly: true`` option:

.. code-block:: javascript

   {
      "databases" : [
         {
            "name" : "admin"
         },
         {
            "name" : "local"
         },
         {
            "name" : "test"
         }
      ],
      "ok" : 1
   }

List Databases That Match the Filter
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Run :dbcommand:`listDatabases` against the ``admin`` database. Specify
the ``filter`` option to only list databases that match the specified filter criteria.

For example, the following specifies a filter such that
:dbcommand:`listDatabases` only returns information on databases whose
name matches the specified :query:`regular expression <$regex>`:

.. code-block:: javascript

   db.adminCommand( { listDatabases: 1, filter: { "name": /^rep/ } } )

.. _listDatabases-sharded-clusters:

Sharded Clusters
~~~~~~~~~~~~~~~~

When executed against a :binary:`~bin.mongos` instance,
:dbcommand:`listDatabases`:

- adds a ``shards`` embedded document to each database's summary
  document if ``nameOnly: false``, and
- excludes the ``local`` database.

Each element in the ``shards`` embedded document consists of a field
whose key gives the name of a collection on that shard, and whose value
represents the collection's size in bytes.

The ``sizeOnDisk`` field represents the total size of all
listed collections and indexes.

For example:

.. code-block:: javascript

   {
     "databases" : [
       {
         "name" : "admin",
         "sizeOnDisk" : 16384,
         "empty" : false,
         "shards" : {
           "config" : 16384
         }
       },
       {
         "name" : "config",
         "sizeOnDisk" : 176128,
         "empty" : false,
         "shards" : {
           "clients" : 28672,
           "patients" : 8192,
           "config" : 139264
         }
       },
       {
         "name" : "test",
         "sizeOnDisk" : 12288,
         "empty" : false,
         "shards" : {
           "clients" : 12288
         }
       }
     ],
     "totalSize" : 204800,
     "totalSizeMb" : 0,
     "ok" : 1
   }

.. seealso:: 
 
   :doc:`/tutorial/use-database-commands`.

Output
------

.. data:: listDatabases.databases

   *Type: Array*

   Array of documents, each containing information on a single
   database.
   
.. data:: listDatabases.databases.name
 
   *Type: String*

   Name of the database.

.. data:: listDatabases.databases.sizeOnDisk

   *Type: Integer*

   Total size of the database files on disk, expressed in bytes.

.. data:: listDatabases.databases.empty

   *Type: Boolean*
   
   Specifies whether the database is empty.
   
.. data:: listDatabases.databases.shards

   *Type: Document*

   Each element in the ``shards`` document consists of a field whose key 
   gives the name of a collection on that shard, and whose value 
   represents the collection's size in bytes.

   ``shards`` only appears in the output if ``nameOnly: false``.

   See :ref:`Sharded Clusters <listDatabases-sharded-clusters>`
   for details.

.. data:: listDatabases.totalSize

   *Type: Integer*

   Sum of all the ``sizeOnDisk`` fields in bytes.

.. data:: listDatabases.totalSizeMb

   *Type: Integer*

   Sum of all the ``sizeOnDisk`` fields, expressed in megabytes.

.. data:: listDatabases.ok

   *Type: Integer*

   Return value for the command. A value of ``1`` indicates
   success.
