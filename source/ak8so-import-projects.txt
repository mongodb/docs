.. _ak8so-import-projects:

======================================
Import |service| Projects into |ak8so|
======================================

.. meta::
   :description: Import Atlas projects into Atlas Kubernetes Operator using CLI commands to export configurations in a compatible format for Kubernetes or Openshift clusters.

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2 
   :class: singlecol

If you have existing |k8s| deployments and wish to start using |ak8so|, 
you can use the |service| CLI ``atlas kubernetes config generate`` or 
``atlas kubernetes config apply`` commands to export |service| 
projects, deployments, and database users.

Both commands allow you to export your configuration in an 
|ak8so|-compatible format for use in the |k8s| or Openshift cluster on 
which |ak8so| runs. The ``atlas kubernetes config generate`` command 
achieves this by outputting a 
:abbr:`YAML (Yet Another Markup Lanugage)`-formatted configuration to 
your terminal's ``stdout``, while the ``atlas kubernetes config apply`` 
command stores the configuration in memory and sends it directly to a 
target |k8s| cluster.

Overview
--------

Both commands generate a ``.yaml``-formatted configuration 
which includes the following |ak8so| resources:

- An :ref:`atlasdeployment-custom-resource`
- An :ref:`atlasbackupschedule-custom-resource`
- An :ref:`atlasbackuppolicy-custom-resource`
- An :ref:`atlasproject-custom-resource`
- An :ref:`atlasdatabaseuser-custom-resource`
- An :ref:`atlasteam-custom-resource`

Parameters
``````````

.. tabs::

   .. tab:: Config Generate
      :tabid: generate-params
       
      The command takes the following parameters:

      .. list-table::
        :widths: 30 60 10
        :header-rows: 1

        * - Parameter
          - Description
          - Necessity

        * - ``--projectId``
          - Unique 24-digit hexadecimal string that identifies your 
            project. If omitted, defaults to the ``projectId`` value in 
            your ``atlascli`` configuration file. 
          - Required.

        * - ``--clusterName``
          - A comma-separated list of human-readable labels that 
            identify the clusters to export. These must be clusters in 
            the project specified in the ``projectId`` parameter. If 
            omitted, the command exports all clusters in the specified 
            project. 
          - Optional.

        * - ``--includeSecrets``
          - Flag that populates an entry in the configuration file for an |service| 
            credentials secret. If omitted, the 
            command creates a secret, but doesn't populate it with data.
            The secret is rendered as plain text.
          - Optional.

        * - ``--targetNamespace``
          - Kubernetes namespace to export the resources to. The command
            fills the ``metadata.namespace`` field of each exported |service| 
            entity with the value of this parameter. 
          - Required.
          
        * - ``--operatorVersion``
          - Version of |ak8so| for which to export your files. If 
            omitted, the command exports files compatible with |ak8so| 
            v1.5.1. 
          - Optional.

   .. tab:: Config Apply
      :tabid: apply-params

      The command takes the following parameters:

      .. list-table::
        :widths: 30 60 10
        :header-rows: 1

        * - Parameter
          - Description
          - Necessity

        * - ``--projectId``
          - Unique 24-digit hexadecimal string that identifies your 
            project. If omitted, defaults to the ``projectId`` value in 
            your ``atlascli`` configuration file. 
          - Required.

        * - ``--orgId``
          - Unique 24-digit hexadecimal string that identifies the 
            |service| organization to register the project with. If 
            omitted, defaults to the ``orgId`` value in your 
            ``atlascli`` configuration file or your ``ORGID`` 
            environment variable. 
          - Optional.

        * - ``--clusterName``
          - A comma-separated list of human-readable labels that 
            identify clusters to export. These must be clusters in the 
            project specified in the ``projectId`` parameter. If 
            omitted, the command exports all clusters in the specified 
            project. 
          - Optional.

        * - ``--targetNamespace``
          - Kubernetes namespace to export the resources to. The command
            fills the ``metadata.namespace`` field of each exported |service| 
            entity with the value of this parameter. 
          - Required.
          
        * - ``--operatorVersion``
          - Version of |ak8so| for which to export your files. If 
            omitted, the command exports files compatible with |ak8so| 
            v1.5.1. 
          - Optional.

        * - ``--kubeContext``
          - ``Kubeconfig`` context to use for connecting to the cluster.
          - Required

        * - ``--kubeconfig``
          - Path to your ``kubeconfig`` file.
          - Required


Compatibility
-------------

``atlascli`` exports configurations from Atlas in a format that is
version-dependent on |ak8so|. The following table describes which 
versions of ``atlascli`` support which versions of |ak8so|:

.. list-table::
   :widths: 40 60
   :header-rows: 1

   * - ``atlascli`` version
     - |ak8so| versions

   * - 1.4.0
     - 1.5.0

Examples
--------

The following examples assume a project named ``sampleProject``,
with clusters named ``sample1``, ``sample2``, and ``sample3``, a 
Project ID of ``63500d1139dd494b92fe4376``, and a target namespace of
``sampleNamespace``.

.. tabs::

   .. tab:: Config Generate
      :tabid: generate-example

      To export the entire project, including all |service| deployments and 
      secrets with credentials, run the following command:

      .. code-block:: sh

        atlas kubernetes config generate --projectId=63500d1139dd494b92fe4376 \
        --includeSecrets --targetNamespace=sampleNamespace

      To export two specific |service| deployments from the project without
      secret credentials, run the following command:

      .. code-block:: sh

        atlas kubernetes config generate --projectId=63500d1139dd494b92fe4376 \
        --clusterName=sample1,sample2 --targetNamespace=sampleNamespace

      In the preceding command examples, you can **apply the generated 
      configuration to your {+k8s+} or Openshift cluster** by piping 
      the output into the ``kubectl apply`` command. The following 
      command example illustrates this:

      .. code-block:: sh

        atlas kubernetes config generate --projectId=63500d1139dd494b92fe4376 \
        --clusterName=sample1,sample2 --targetNamespace=sampleNamespace \
        | kubectl apply -f -

      Alternatively, you can **save the generated configuration** by 
      redirecting ``stdout`` to a ``.yaml`` file. The following command 
      imports a single |service| deployment from the project without 
      secret credentials and saves the output to 
      ``myAtlasProject.yaml``.

      .. code-block:: sh

        atlas kubernetes config generate --projectId=63500d1139dd494b92fe4376 \
        --clusterName=sample3 --targetNamespace=sampleNamespace \
        > myAtlasProject.yaml

      Applying the Configuration
      ``````````````````````````

      To apply the generated configuration to your |k8s| or Openshift 
      cluster in this scenario, pass the ``.yaml`` file as an argument to
      the ``kubectl apply`` command.

      .. code-block:: sh

        kubectl apply -f myAtlasProject.yaml

   .. tab:: Config Apply
      :tabid: apply-example

      To export the entire project, run the following command:

      .. code-block:: sh

        atlas kubernetes config apply --projectId=63500d1139dd494b92fe4376 \
        --targetNamespace=sampleNamespace

      To export two specific |service| deployments from the project, 
      run the following command:

      .. code-block:: sh

        atlas kubernetes config apply --projectId=63500d1139dd494b92fe4376 \
        --clusterName=sample1,sample2 --targetNamespace=sampleNamespace

        In contrast to ``atlas kubernetes config generate``, this 
        command directly applies the generated configuration without
        any further manual operation on your part.
