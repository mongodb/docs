# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: 2014-04-08 16:30+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/tutorial/manage-mongodb-processes.txt:3
msgid "Manage ``mongod`` Processes"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:13
msgid ""
"MongoDB runs as a standard program. You can start MongoDB from a command "
"line by issuing the :binary:`~bin.mongod` command and specifying options."
"  For a list of options, see the :binary:`~bin.mongod` reference. MongoDB"
" can also run as a Windows service. For details, see :ref:`manually-"
"create-windows-service`. To install MongoDB, see :doc:`/installation`."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:20
msgid ""
"The following examples assume the directory containing the "
":binary:`~bin.mongod` process is in your system paths. The "
":binary:`~bin.mongod` process is the primary database process that runs "
"on an individual server. :binary:`~bin.mongos` provides a coherent "
"MongoDB interface equivalent to a :binary:`~bin.mongod` from the "
"perspective of a client. The :binary:`~bin.mongo` binary provides the "
"administrative shell."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:28
msgid ""
"This document discusses the :binary:`~bin.mongod` process; however, some "
"portions of this document may be applicable to :binary:`~bin.mongos` "
"instances."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:35
msgid "Start ``mongod`` Processes"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:37
msgid ""
"By default, MongoDB listens for connections from clients on port "
"``27017``, and stores data in the ``/data/db`` directory."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:40
msgid ""
"On Windows, this path is on the drive from which you start MongoDB. For "
"example, if you do not specify a :option:`--dbpath <mongod --dbpath>`, "
"starting a MongoDB server on the ``C:\\`` drive stores all data files in "
"``C:\\data\\db``."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:44
msgid ""
"To start MongoDB using all defaults, issue the following command at the "
"system shell:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:52
msgid "Specify a Data Directory"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:54
msgid ""
"If you want :binary:`~bin.mongod` to store data files at a path *other "
"than* ``/data/db`` you can specify a :setting:`~storage.dbPath`. The "
":setting:`~storage.dbPath` must exist before you start "
":binary:`~bin.mongod`. If it does not exist, create the directory and the"
" permissions so that :binary:`~bin.mongod` can read and write data to "
"this path. For more information on permissions, see the :doc:`security "
"operations documentation </administration/security-checklist>`."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:62
msgid ""
"To specify a :setting:`~storage.dbPath` for :binary:`~bin.mongod` to use "
"as a data directory, use the :option:`--dbpath <mongod --dbpath>` option."
" The following invocation will start a :binary:`~bin.mongod` instance and"
" store data in the ``/srv/mongodb`` path"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:72
msgid "Specify a TCP Port"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:74
msgid ""
"Only a single process can listen for connections on a network interface "
"at a time. If you run multiple :binary:`~bin.mongod` processes on a "
"single machine, or have other processes that must use this port, you must"
" assign each a different port to listen on for client connections."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:80
msgid ""
"To specify a port to :binary:`~bin.mongod`, use the :option:`--port "
"<mongod --port>` option on the command line. The following command starts"
" :binary:`~bin.mongod` listening on port ``12345``:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:88
msgid "Use the default port number when possible, to avoid confusion."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:91
msgid "Start ``mongod`` as a Daemon"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:93
msgid ""
"To run a :binary:`~bin.mongod` process as a daemon (i.e. "
":setting:`~processManagement.fork`), *and* write its output to a log "
"file, use the :option:`--fork <mongod --fork>` and :option:`--logpath "
"<mongod --logpath>` options. You must create the log directory; however, "
":binary:`~bin.mongod` will create the log file if it does not exist."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:99
msgid ""
"The following command starts :binary:`~bin.mongod` as a daemon and "
"records log output to ``/var/log/mongodb.log``."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:107
msgid "Additional Configuration Options"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:109
msgid ""
"For an overview of common configurations and deployments for common use "
"cases, see :doc:`/administration/configuration`."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:116
msgid "Stop ``mongod`` Processes"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:118
msgid ""
"In a clean shutdown a :binary:`~bin.mongod` completes all pending "
"operations, flushes all data to data files, and closes all data files. "
"Other shutdowns are *unclean* and can compromise the validity of the data"
" files."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:129
msgid ""
"To ensure a clean shutdown, always shutdown :binary:`~bin.mongod` "
"instances using one of the following methods:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:133
msgid "Use ``shutdownServer()``"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:135
msgid ""
"Shut down the :binary:`~bin.mongod` from the :binary:`~bin.mongo` shell "
"using the :method:`db.shutdownServer()` method as follows:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:143
msgid ""
"Calling the same method from a :term:`init script` accomplishes the same "
"result."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:145
msgid ""
"For systems with :setting:`~security.authorization` enabled, users may "
"only issue :method:`db.shutdownServer()` when authenticated to the "
"``admin`` database or via the localhost interface on systems without "
"authentication enabled."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:151
msgid "Use ``--shutdown``"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:153
msgid ""
"From the Linux command line, shut down the :binary:`~bin.mongod` using "
"the :option:`--shutdown <mongod --shutdown>` option in the following "
"command:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:161
msgid "Use ``CTRL-C``"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:163
msgid ""
"When running the :binary:`~bin.mongod` instance in interactive mode (i.e."
" without :option:`--fork <mongod --fork>`), issue ``Control-C`` to "
"perform a clean shutdown."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:168
msgid "Use ``kill``"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:170
msgid ""
"From the Linux command line, shut down a specific :binary:`~bin.mongod` "
"instance using one of the following commands:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:180
msgid "Never use ``kill -9`` (i.e. ``SIGKILL``) to terminate a mongod instance."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:183
msgid "Stop a Replica Set"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:186
msgid "Procedure"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:188
msgid ""
"If the :binary:`~bin.mongod` is the :term:`primary` in a :term:`replica "
"set`, the shutdown process for this :binary:`~bin.mongod` instance has "
"the following steps:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:192
msgid "Check how up-to-date the :term:`secondaries <secondary>` are."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:194
msgid ""
"If no secondary is within 10 seconds of the primary, "
":binary:`~bin.mongod` will return a message that it will not shut down. "
"You can pass the :dbcommand:`shutdown` command a ``timeoutSecs`` argument"
" to wait for a secondary to catch up."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:199
msgid ""
"If there is a secondary within 10 seconds of the primary, the primary "
"will step down and wait for the secondary to catch up."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:202
msgid ""
"After 60 seconds or once the secondary has caught up, the primary will "
"shut down."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:206
msgid "Force Replica Set Shutdown"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:208
msgid ""
"If there is no up-to-date secondary and you want the primary to shut "
"down, issue the :dbcommand:`shutdown` command with the ``force`` "
"argument, as in the following :binary:`~bin.mongo` shell operation:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:216
msgid ""
"To keep checking the secondaries for a specified number of seconds if "
"none are immediately up-to-date, issue :dbcommand:`shutdown` with the "
"``timeoutSecs`` argument. MongoDB will keep checking the secondaries for "
"the specified number of seconds if none are immediately up-to-date. If "
"any of the secondaries catch up within the allotted time, the primary "
"will shut down. If no secondaries catch up, it will not shut down."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:223
msgid ""
"The following command issues :dbcommand:`shutdown` with ``timeoutSecs`` "
"set to ``5``:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:230
msgid ""
"Alternately you can use the ``timeoutSecs`` argument with the "
":method:`db.shutdownServer()` method:"
msgstr ""

#~ msgid ""
#~ "To run a :program:`mongod` process as"
#~ " a daemon (i.e. :setting:`fork`), *and* "
#~ "write its output to a log file,"
#~ " use the :option:`--fork <mongod --fork>`"
#~ " and :option:`--logpath <mongod --logpath>` "
#~ "options. You must create the log "
#~ "directory; however, :program:`mongod` will "
#~ "create the log file if it does "
#~ "not exist."
#~ msgstr ""

#~ msgid ""
#~ "For systems with :setting:`~security.authentication`"
#~ " enabled, users may only issue "
#~ ":method:`db.shutdownServer()` when authenticated to"
#~ " the ``admin`` database or via the"
#~ " localhost interface on systems without "
#~ "authentication enabled."
#~ msgstr ""

# ab66b7fa339e49e0987c4bdb2064566d
#~ msgid ""
#~ "MongoDB runs as a standard program. "
#~ "You can start MongoDB from a "
#~ "command line by issuing the "
#~ ":program:`mongod` command and specifying "
#~ "options. For a list of options, "
#~ "see :doc:`/reference/program/mongod`. MongoDB can"
#~ " also run as a Windows service. "
#~ "For details, see :ref:`tutorial-mongod-"
#~ "as-windows-service`. To install MongoDB,"
#~ " see :doc:`/installation`."
#~ msgstr ""

# ef3ccc873e22427a9820180ba5c64c38
#~ msgid ""
#~ "The following examples assume the "
#~ "directory containing the :program:`mongod` "
#~ "process is in your system paths. "
#~ "The :program:`mongod` process is the "
#~ "primary database process that runs on"
#~ " an individual server. :program:`mongos` "
#~ "provides a coherent MongoDB interface "
#~ "equivalent to a :program:`mongod` from "
#~ "the perspective of a client. The "
#~ ":program:`mongo` binary provides the "
#~ "administrative shell."
#~ msgstr ""

# 6c598e9efd8f4b1690c92a46bb8646bd
#~ msgid ""
#~ "This document  page discusses the "
#~ ":program:`mongod` process; however, some "
#~ "portions of this document may be "
#~ "applicable to :program:`mongos` instances."
#~ msgstr ""

# 8a4ceabf295d4e88a1a562c9ce7b5b67
#~ msgid ""
#~ ":doc:`/administration/configuration`, "
#~ ":doc:`/reference/program/mongod`, "
#~ ":doc:`/reference/program/mongos`, and :doc:`/reference"
#~ "/configuration-options`."
#~ msgstr ""

# 20053078ce674e75980a4f416deeaf1e
#~ msgid ""
#~ "By default, MongoDB stores data in "
#~ "the ``/data/db`` directory. On Windows, "
#~ "MongoDB stores data in ``C:\\data\\db``. "
#~ "On all platforms, MongoDB listens for"
#~ " connections from clients on port "
#~ "``27017``."
#~ msgstr ""

# 6a8fc6b2bf314682ac2092e7f9af4649
#~ msgid ""
#~ "If you want :program:`mongod` to store"
#~ " data files at a path *other "
#~ "than* ``/data/db`` you can specify a "
#~ ":setting:`~storage.dbPath`. The :setting:`~storage.dbPath`"
#~ " must exist before you start "
#~ ":program:`mongod`. If it does not exist,"
#~ " create the directory and the "
#~ "permissions so that :program:`mongod` can "
#~ "read and write data to this path."
#~ " For more information on permissions, "
#~ "see the :ref:`security operations "
#~ "documentation <security-operations>`."
#~ msgstr ""

# 4344f935901b4f4d9f0ef56eff76af3e
#~ msgid ""
#~ "To specify a :setting:`~storage.dbPath` for"
#~ " :program:`mongod` to use as a data"
#~ " directory, use the :option:`--dbpath "
#~ "<mongod --dbpath>` option. The following "
#~ "invocation will start a :program:`mongod` "
#~ "instance and store data in the "
#~ "``/srv/mongodb`` path"
#~ msgstr ""

# 609af0abb18847cc8a11ec0bef1f4dab
#~ msgid ""
#~ "Only a single process can listen "
#~ "for connections on a network interface"
#~ " at a time. If you run multiple"
#~ " :program:`mongod` processes on a single"
#~ " machine, or have other processes "
#~ "that must use this port, you must"
#~ " assign each a different port to "
#~ "listen on for client connections."
#~ msgstr ""

# 6ce8ca73413f4879ac834b1d39928ed4
#~ msgid ""
#~ "To specify a port to :program:`mongod`,"
#~ " use the :option:`--port <mongod --port>`"
#~ " option on the command line. The "
#~ "following command starts :program:`mongod` "
#~ "listening on port ``12345``:"
#~ msgstr ""

# 792be4099d9a42e180145ac03d91cab8
#~ msgid ""
#~ "The following command starts :program:`mongod`"
#~ " as a daemon and records log "
#~ "output to ``/var/log/mongodb.log``."
#~ msgstr ""

# 99b3d7ab9e8e4d80939c3eb49c683903
#~ msgid ""
#~ "For an overview of common configurations"
#~ " and common configuration deployments. "
#~ "configurations for common use cases, see"
#~ " :doc:`/administration/configuration`."
#~ msgstr ""

# 49d1dc2720c2431aaa8a9b895a8986be
#~ msgid ""
#~ "In a clean shutdown a :program:`mongod`"
#~ " completes all pending operations, flushes"
#~ " all data to data files, and "
#~ "closes all data files. Other shutdowns"
#~ " are *unclean* and can compromise the"
#~ " validity the data files."
#~ msgstr ""

# 9c1d676534ed4179bb1c0f6dd5bdb531
#~ msgid ""
#~ "To ensure a clean shutdown, always "
#~ "shutdown :program:`mongod` instances using one"
#~ " of the following methods:"
#~ msgstr ""

# 9d9564c4bb604f499d4f31d0b0810e8a
#~ msgid ""
#~ "Shut down the :program:`mongod` from the"
#~ " :program:`mongo` shell using the "
#~ ":method:`db.shutdownServer()` method as follows:"
#~ msgstr ""

# d6c368acd972498eb9312b85126516cf
#~ msgid ""
#~ "Calling the same method from a "
#~ "control script accomplishes the same "
#~ "result."
#~ msgstr ""

# db0af9287f374bd98d235ad8a792415d
#~ msgid ""
#~ "From the Linux command line, shut "
#~ "down the :program:`mongod` using the "
#~ ":option:`--shutdown <mongod --shutdown>` option "
#~ "in the following command:"
#~ msgstr ""

# 3c356e283a2e48debf5ab888f91703be
#~ msgid ""
#~ "When running the :program:`mongod` instance"
#~ " in interactive mode (i.e. without "
#~ ":option:`--fork <mongod --fork>`), issue "
#~ "``Control-C`` to perform a clean "
#~ "shutdown."
#~ msgstr ""

# 209336dd3f554494a55fa4194ec2030f
#~ msgid ""
#~ "From the Linux command line, shut "
#~ "down a specific :program:`mongod` instance "
#~ "using the following command:"
#~ msgstr ""

# cf7fc2289cf843189167fbf1a78ee7e0
#~ msgid ""
#~ "If the :program:`mongod` is the "
#~ ":term:`primary` in a :term:`replica set`, "
#~ "the shutdown process for these "
#~ ":program:`mongod` instances has the following"
#~ " steps:"
#~ msgstr ""

# f17bfdf2cd1b450489e3d489e94d24b8
#~ msgid ""
#~ "If no secondary is within 10 "
#~ "seconds of the primary, :program:`mongod` "
#~ "will return a message that it will"
#~ " not shut down. You can pass "
#~ "the :dbcommand:`shutdown` command a "
#~ "``timeoutSecs`` argument to wait for a"
#~ " secondary to catch up."
#~ msgstr ""

# 175eb47f15ac46b387db84be2db298e4
#~ msgid ""
#~ "If there is no up-to-date "
#~ "secondary and you want the primary "
#~ "to shut down, issue the "
#~ ":dbcommand:`shutdown` command with the "
#~ "``force`` argument, as in the following"
#~ " :program:`mongo` shell operation:"
#~ msgstr ""

#~ msgid ""
#~ "To run a :program:`mongod` process as"
#~ " a daemon (i.e. "
#~ ":setting:`~processManagement.fork`), *and* write its"
#~ " output to a log file, use the"
#~ " :option:`--fork <mongod --fork>` and "
#~ ":option:`--logpath <mongod --logpath>` options. "
#~ "You must create the log directory; "
#~ "however, :program:`mongod` will create the "
#~ "log file if it does not exist."
#~ msgstr ""

