# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: 2013-12-16 22:45+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# fdb0a5d462fb47edaeda4db22ba773f3
#: ../source/tutorial/insert-documents.txt:5
msgid "Insert Documents"
msgstr ""

# 6687b0146f4c45afa401b43a8ea0ab02
#: ../source/tutorial/insert-documents.txt
msgid "On this page"
msgstr ""

# 3a14076860244f7d923e84b2e4c7dd60
#: ../source/tutorial/insert-documents.txt:16
msgid "Insert Methods"
msgstr ""

# 38ce052e5c994fee91c3613a297bb039
#: ../source/tutorial/insert-documents.txt:18
msgid ""
"MongoDB provides the following methods for inserting :ref:`documents "
"<bson-document-format>` into a collection:"
msgstr ""

# 732ece2117b04ab497a8e4ec62da4abb
#: ../source/tutorial/insert-documents.txt:21
msgid ":ref:`write-op-insertOne`"
msgstr ""

# e5e11cf6ff4d4e359ddd84da554239fb
#: ../source/tutorial/insert-documents.txt:23
msgid ":ref:`write-op-insertMany`"
msgstr ""

# 5914fb308b9949acba33022b65fd37bb
#: ../source/tutorial/insert-documents.txt:25
msgid ":ref:`write-op-insert-method`"
msgstr ""

# aab4936c49424094980077c19d68cd75
#: ../source/tutorial/insert-documents.txt:27
msgid ""
"This page provides examples of insert operations in the :program:`mongo` "
"shell."
msgstr ""

# a91e7af01f3c4a828cb783f5ebf95b97
#: ../source/tutorial/insert-documents.txt:33
msgid "Insert Behavior"
msgstr ""

# 42280a32e5854e72bf922fd389cfbea8
#: ../source/tutorial/insert-documents.txt:36
msgid "Collection Creation"
msgstr ""

# 3b3a6806ecd146c5bf41a9b48652b6d9
#: ../source/tutorial/insert-documents.txt:38
msgid ""
"If the collection does not currently exist, insert operations will create"
" the collection."
msgstr ""

# 257ec69ad7e540aca6f16b6ab9f9f759
#: ../source/tutorial/insert-documents.txt:42
msgid "``_id`` Field"
msgstr ""

# 708a1063ace445a484ff22b19da6267c
#: ../source/includes/fact-id-field.rst:1
msgid ""
"In MongoDB, each document stored in a collection requires a unique "
":term:`_id` field that acts as a :term:`primary key`. If an inserted "
"document omits the ``_id`` field, the MongoDB driver automatically "
"generates an :ref:`objectid` for the ``_id`` field."
msgstr ""

# bad0d09f30084ed1a0819adfcfc6bb28
#: ../source/includes/fact-id-field.rst:6
msgid ""
"This also applies to documents inserted through update operations with "
":ref:`upsert: true <upsert-parameter>`."
msgstr ""

# c007a5a484b7401190b3aba58c74dde2
#: ../source/tutorial/insert-documents.txt:47
msgid "Atomicity"
msgstr ""

# 9a9fba6557814ea6a49a88e030896a52
#: ../source/tutorial/insert-documents.txt:49
msgid ""
"All write operations in MongoDB are atomic on the level of a single "
"document. For more information on MongoDB and atomicity, see :doc:`/core"
"/write-operations-atomicity`"
msgstr ""

# a9319611578f43dfbed74fac763fc452
#: ../source/tutorial/insert-documents.txt:56
msgid "``db.collection.insertOne()``"
msgstr ""

# 7c1cd3ebe6c94f6cbb8e2d2fe2f96bf9
#: ../source/tutorial/insert-documents.txt:60
msgid ""
":method:`db.collection.insertOne()` inserts a *single* :ref:`document "
"<bson-document-format>` into a collection."
msgstr ""

# d5873d128cae4b9b8e599455991d99c1
#: ../source/tutorial/insert-documents.txt:63
msgid ""
"The following example inserts a new document into the ``users`` "
"collection. The new document has three fields ``name``, ``age``, and "
"``status``. Since the document does not specify an ``_id`` field, MongoDB"
" adds the ``_id`` field with an ObjectId value to the new document. See "
":ref:`write-op-insert-behavior`."
msgstr ""

# f36b238a92db4f2ab77ef395c0fb11c5
#: ../source/tutorial/insert-documents.txt:85
msgid ""
":method:`~db.collection.insertOne()` will return a document providing the"
" inserted document's ``_id`` field. See the :ref:`reference <insertOne-"
"examples>` for an example."
msgstr ""

# 9dec2d81e7cf410286a3fda69fd8e2a0
#: ../source/tutorial/insert-documents.txt:89
msgid ""
"To retrieve the document that you just inserted, :ref:`query the "
"collection <document-query-filter>`:"
msgstr ""

# 5da93ed53dc14b89a7f9b62f45342fa9
#: ../source/tutorial/insert-documents.txt:96
msgid ""
"For more information and examples, see "
":method:`db.collection.insertOne()`."
msgstr ""

# e9e609dc3a294fa0b026cf2fae86f323
#: ../source/tutorial/insert-documents.txt:102
msgid "``db.collection.insertMany()``"
msgstr ""

# f7146d0e6b1e455da590ed5f52496ef9
#: ../source/tutorial/insert-documents.txt:106
msgid ""
":method:`db.collection.insertMany()` inserts *multiple* :ref:`documents "
"<bson-document-format>` into a collection."
msgstr ""

# bbfbc276cca44dda8b47a55dd2927030
#: ../source/tutorial/insert-documents.txt:109
msgid ""
"The following example inserts three new documents into the ``users`` "
"collection. Each document has three fields ``name``, ``age``, and "
"``status``. Since the documents do not specify an ``_id`` field, MongoDB "
"adds the ``_id`` field with an ObjectId value to each document. See :ref"
":`write-op-insert-behavior`."
msgstr ""

# 2361a81767194d00bf25083821b8d6dd
#: ../source/tutorial/insert-documents.txt:131
msgid ""
":method:`~db.collection.insertMany()` will return a document providing "
"each inserted document's ``_id`` field. See the :ref:`reference "
"<insertMany-examples>` for an example."
msgstr ""

# 6a147a6b56fc450ea5609d4ef235aad7
#: ../source/tutorial/insert-documents.txt:135
msgid ""
"To retrieve the inserted documents, :ref:`query the collection <read-"
"operations-query-document>`:"
msgstr ""

# 86e3427f9b9c4253b37a2bab71a6dab1
#: ../source/tutorial/insert-documents.txt:142
msgid ""
"For more information and examples, see "
":method:`db.collection.insertMany()`."
msgstr ""

# 948a5edf8b154e7e960c441fcfcbc5ec
#: ../source/tutorial/insert-documents.txt:148
msgid "``db.collection.insert()``"
msgstr ""

# 9b9d7dd1771b4d44882caf0a061ab29a
#: ../source/tutorial/insert-documents.txt:150
msgid ""
":method:`db.collection.insert()` inserts a single document or multiple "
"documents into a collection. To insert a single document, pass a document"
" to the method; to insert multiple documents, pass an array of documents "
"to the method."
msgstr ""

# 5bea34f7357e40ff8c6281491864082e
#: ../source/tutorial/insert-documents.txt:155
msgid ""
"The following example inserts a new document into the ``users`` "
"collection. The new document has three fields ``name``, ``age``, and "
"``status``. Since the document does not specify an ``_id`` field, MongoDB"
" adds the ``_id`` field with an ObjectId value to the document. See :ref"
":`write-op-insert-behavior`."
msgstr ""

# c6b52672367c4f7a8e319ee789f92dea
#: ../source/tutorial/insert-documents.txt:177
msgid ""
":method:`db.collection.insert` returns a :method:`WriteResult` object "
"providing status information."
msgstr ""

# 6e3c9e8dfe9d4833b6e8a28a48f6d4e1
#: ../source/tutorial/insert-documents.txt:180
msgid ""
"For example, a successful insert returns the following "
":method:`WriteResult` object:"
msgstr ""

# ab1c935205114bd08388ed4b0f99d267
#: ../source/tutorial/insert-documents.txt:187
msgid ""
"The :data:`~WriteResult.nInserted` field specifies the number of "
"documents inserted. If the operation encounters an error, the "
":method:`WriteResult` object will contain the error information."
msgstr ""

# f3e5d2d29c72433687bd2dad61a9742f
#: ../source/tutorial/insert-documents.txt:191
msgid ""
"The following example inserts multiple documents into the ``users`` "
"collection. Since the documents do not specify an ``_id`` field, MongoDB "
"adds the ``_id`` field with an ObjectId value to each document. See :ref"
":`write-op-insert-behavior`."
msgstr ""

# c8ae8c78d49d4a939dd721e9a2472f89
#: ../source/tutorial/insert-documents.txt:206
msgid ""
"The method returns a :method:`BulkWriteResult` object with the status of "
"the operation. A successful insert of the documents returns the following"
" :method:`BulkWriteResult` object:"
msgstr ""

# a1cdf3ad16ca4038a3d8664ebb4d09cc
#: ../source/tutorial/insert-documents.txt:223
msgid "For more information and examples, see :method:`db.collection.insert()`."
msgstr ""

# f5958aa63948458793a3932b642f2620
#: ../source/tutorial/insert-documents.txt:226
msgid "Additional Methods"
msgstr ""

# a192b9edde1d46bb9cf61266322090ce
#: ../source/tutorial/insert-documents.txt:228
msgid "The following methods can also add new documents to a collection:"
msgstr ""

# 5aa7fffde5844d0cb117787ce38702af
#: ../source/tutorial/insert-documents.txt:230
msgid ""
":method:`db.collection.update()` when used with the ``upsert: true`` "
"option."
msgstr ""

# 9406fd421d9f46878fcd25ba44e628b5
#: ../source/tutorial/insert-documents.txt:233
msgid ""
":method:`db.collection.updateOne()` when used with the ``upsert: true`` "
"option."
msgstr ""

# 587a39a57f38488e9e873da93838b8af
#: ../source/tutorial/insert-documents.txt:236
msgid ""
":method:`db.collection.updateMany()` when used with the ``upsert: true`` "
"option."
msgstr ""

# 6ce9cd393d1d4fceacddd0ee2fce74b7
#: ../source/tutorial/insert-documents.txt:239
msgid ""
":method:`db.collection.findAndModify()` when used with the ``upsert: "
"true`` option."
msgstr ""

# 668c902f35e54593918938fd8da16179
#: ../source/tutorial/insert-documents.txt:242
msgid ""
":method:`db.collection.findOneAndUpdate()` when used with the ``upsert: "
"true`` option."
msgstr ""

# 8d511dd7905a4bb492aba39716650528
#: ../source/tutorial/insert-documents.txt:245
msgid ""
":method:`db.collection.findOneAndReplace()` when used with the ``upsert: "
"true`` option."
msgstr ""

# fa6660a256554e2f95c7591fce6c4d17
#: ../source/tutorial/insert-documents.txt:248
msgid ":method:`db.collection.save()`."
msgstr ""

# 3ace6ea4c21e4be0b83c6f90853d70a4
#: ../source/tutorial/insert-documents.txt:250
msgid ":method:`db.collection.bulkWrite()`."
msgstr ""

# a5563efbfd69431382e94180f5fc8435
#: ../source/tutorial/insert-documents.txt:252
msgid ""
"See the individual reference pages for the methods for more information "
"and examples."
msgstr ""

# 98cb1c2fa5314cf1a0d53d801e028c0d
#: ../source/tutorial/insert-documents.txt:256
msgid "Write Acknowledgement"
msgstr ""

# a9d6a6bfd1d34ecab8390d0f0cacbe5f
#: ../source/tutorial/insert-documents.txt:258
msgid ""
"With write concerns, you can specify the level of acknowledgement "
"requested from MongoDB for write operations. For details, see "
":doc:`/reference/write-concern`."
msgstr ""

#~ msgid ""
#~ "In MongoDB, the :method:`db.collection.insert()` "
#~ "method adds new documents into a "
#~ "collection. In addition, both the "
#~ ":method:`db.collection.update()` method and the "
#~ ":method:`db.collection.save()` method can also "
#~ "add new documents through an operation"
#~ " called an *upsert*. An *upsert* is"
#~ " an operation that performs either an"
#~ " update of an existing document or"
#~ " an insert of a new document if"
#~ " the document to modify does not "
#~ "exist."
#~ msgstr ""

#~ msgid ""
#~ "This tutorial provides examples of "
#~ "insert operations using each of the "
#~ "three methods in the :program:`mongo` "
#~ "shell."
#~ msgstr ""

#~ msgid "Insert a Document with ``insert()`` Method"
#~ msgstr ""

#~ msgid ""
#~ "The following statement inserts a "
#~ "document with three fields into the "
#~ "collection ``inventory``:"
#~ msgstr ""

#~ msgid ""
#~ "In the example, the document has a"
#~ " user-specified ``_id`` field value "
#~ "of ``10``. The value must be "
#~ "unique within the ``inventory`` collection."
#~ msgstr ""

#~ msgid "For more examples, see :method:`~db.collection.insert()`."
#~ msgstr ""

#~ msgid "Insert a Document with ``update()`` Method"
#~ msgstr ""

#~ msgid ""
#~ "Call the :method:`~db.collection.update()` method"
#~ " with the ``upsert`` flag to create"
#~ " a new document if no document "
#~ "matches the update's query criteria. "
#~ "[#previous-versions-upsert]_"
#~ msgstr ""

#~ msgid ""
#~ "The following example creates a new "
#~ "document if no document in the "
#~ "``inventory`` collection contains ``{ type:"
#~ " \"books\", item : \"journal\" }``:"
#~ msgstr ""

#~ msgid ""
#~ "MongoDB adds the ``_id`` field and "
#~ "assigns as its value a unique "
#~ "ObjectId. The new document includes the"
#~ " ``item`` and ``type`` fields from "
#~ "the ``<query>`` criteria and the ``qty``"
#~ " field from the ``<update>`` parameter."
#~ msgstr ""

#~ msgid "For more examples, see :method:`~db.collection.update()`."
#~ msgstr ""

#~ msgid ""
#~ "Prior to version 2.2, in the "
#~ ":program:`mongo` shell, you would specify "
#~ "the ``upsert`` and the ``multi`` options"
#~ " in the :method:`~db.collection.update()` method"
#~ " as positional boolean options. See "
#~ ":method:`~db.collection.update()` for details."
#~ msgstr ""

#~ msgid "Insert a Document with ``save()`` Method"
#~ msgstr ""

#~ msgid ""
#~ "To insert a document with the "
#~ ":method:`~db.collection.save()` method, pass the "
#~ "method a document that does not "
#~ "contain the ``_id`` field or a "
#~ "document that contains an ``_id`` field"
#~ " that does not exist in the "
#~ "collection."
#~ msgstr ""

#~ msgid ""
#~ "The following example creates a new "
#~ "document in the ``inventory`` collection:"
#~ msgstr ""

#~ msgid ""
#~ "MongoDB adds the ``_id`` field and "
#~ "assigns as its value a unique "
#~ "ObjectId."
#~ msgstr ""

#~ msgid "For more examples, see :method:`~db.collection.save()`."
#~ msgstr ""

#~ msgid ""
#~ "In MongoDB, the :method:`db.collection.insert()` "
#~ "method adds new documents into a "
#~ "collection."
#~ msgstr ""

#~ msgid "Insert a Document"
#~ msgstr ""

#~ msgid "Insert a document into a collection."
#~ msgstr ""

#~ msgid ""
#~ "Insert a document into a collection "
#~ "named ``inventory``. The operation will "
#~ "create the collection if the collection"
#~ " does not currently exist."
#~ msgstr ""

#~ msgid ""
#~ "The operation returns a :method:`WriteResult`"
#~ " object with the status of the "
#~ "operation. A successful insert of the"
#~ " document returns the following object:"
#~ msgstr ""

#~ msgid "Review the inserted document."
#~ msgstr ""

#~ msgid ""
#~ "If the insert operation is successful,"
#~ " verify the insertion by querying the"
#~ " collection."
#~ msgstr ""

#~ msgid "The document you inserted should return."
#~ msgstr ""

#~ msgid ""
#~ "The returned document shows that MongoDB"
#~ " added an ``_id`` field to the "
#~ "document. If a client inserts a "
#~ "document that does not contain the "
#~ "``_id`` field, MongoDB adds the field"
#~ " with the value set to a "
#~ "generated :manual:`ObjectId </reference/object-id>`."
#~ " The :manual:`ObjectId </reference/object-id>`"
#~ " values in your documents will differ"
#~ " from the ones shown."
#~ msgstr ""

#~ msgid "Insert an Array of Documents"
#~ msgstr ""

#~ msgid ""
#~ "You can pass an array of documents"
#~ " to the :method:`db.collection.insert()` method"
#~ " to insert multiple documents."
#~ msgstr ""

#~ msgid "Create an array of documents."
#~ msgstr ""

#~ msgid ""
#~ "Define a variable ``mydocuments`` that "
#~ "holds an array of documents to "
#~ "insert."
#~ msgstr ""

#~ msgid "Insert the documents."
#~ msgstr ""

#~ msgid ""
#~ "Pass the ``mydocuments`` array to the"
#~ " :method:`db.collection.insert()` to perform a"
#~ " bulk insert."
#~ msgstr ""

#~ msgid ""
#~ "The method returns a :method:`BulkWriteResult`"
#~ " object with the status of the "
#~ "operation. A successful insert of the"
#~ " documents returns the following object:"
#~ msgstr ""

#~ msgid ""
#~ "The :data:`~BulkWriteResult.nInserted` field "
#~ "specifies the number of documents "
#~ "inserted. If the operation encounters an"
#~ " error, the :method:`BulkWriteResult` object "
#~ "will contain information regarding the "
#~ "error."
#~ msgstr ""

#~ msgid ""
#~ "The inserted documents will each have"
#~ " an ``_id`` field added by MongoDB."
#~ msgstr ""

#~ msgid "Insert Multiple Documents with ``Bulk``"
#~ msgstr ""

#~ msgid ""
#~ "MongoDB provides a :method:`Bulk()` API "
#~ "that you can use to perform "
#~ "multiple write operations in bulk. The"
#~ " following sequence of operations describes"
#~ " how you would use the "
#~ ":method:`Bulk()` API to insert a group"
#~ " of documents into a MongoDB "
#~ "collection."
#~ msgstr ""

#~ msgid "Initialize a ``Bulk`` operations builder."
#~ msgstr ""

#~ msgid ""
#~ "Initialize a :method:`Bulk` operations builder"
#~ " for the collection ``inventory``."
#~ msgstr ""

#~ msgid ""
#~ "The operation returns an unordered "
#~ "operations builder which maintains a "
#~ "list of operations to perform. Unordered"
#~ " operations means that MongoDB can "
#~ "execute in parallel as well as in"
#~ " nondeterministic order. If an error "
#~ "occurs during the processing of one "
#~ "of the write operations, MongoDB will"
#~ " continue to process remaining write "
#~ "operations in the list."
#~ msgstr ""

#~ msgid ""
#~ "You can also initialize an ordered "
#~ "operations builder; see "
#~ ":method:`db.collection.initializeOrderedBulkOp()` for "
#~ "details."
#~ msgstr ""

#~ msgid "Add insert operations to the ``bulk`` object."
#~ msgstr ""

#~ msgid ""
#~ "Add two insert operations to the "
#~ "``bulk`` object using the "
#~ ":method:`Bulk.insert()` method."
#~ msgstr ""

#~ msgid "Execute the bulk operation."
#~ msgstr ""

#~ msgid ""
#~ "Call the :method:`~Bulk.execute()` method on"
#~ " the ``bulk`` object to execute the"
#~ " operations in its list."
#~ msgstr ""

#~ msgid "Additional Examples and Methods"
#~ msgstr ""

#~ msgid "For more examples, see :method:`db.collection.insert()`."
#~ msgstr ""

#~ msgid ""
#~ "The :method:`db.collection.update()` method, the "
#~ ":method:`db.collection.findAndModify()`, and the "
#~ ":method:`db.collection.save()` method can also "
#~ "add new documents. See the individual"
#~ " reference pages for the methods for"
#~ " more information and examples."
#~ msgstr ""

