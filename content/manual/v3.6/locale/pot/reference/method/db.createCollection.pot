# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/db.createCollection.txt:3
msgid "db.createCollection()"
msgstr ""

#: ../source/reference/method/db.createCollection.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/method/db.createCollection.txt:20
msgid "Added support for:"
msgstr ""

#: ../source/reference/method/db.createCollection.txt:22
msgid "Creation of views (see also :method:`db.createView()`)."
msgstr ""

#: ../source/reference/method/db.createCollection.txt:24
msgid "Collation."
msgstr ""

#: ../source/reference/method/db.createCollection.txt:26
msgid "Creates a new collection or :doc:`view </core/views>`."
msgstr ""

#: ../source/reference/method/db.createCollection.txt:28
msgid "Because MongoDB creates a collection implicitly when the collection is first referenced in a command, this method is used primarily for creating new collections that use specific options. For example, you use :method:`db.createCollection()` to create a :term:`capped collection <capped collection>`, or to create a new collection that uses :doc:`document validation </core/schema-validation>`."
msgstr ""

#: ../source/reference/method/db.createCollection.txt:35
msgid ":method:`db.createCollection()` is a wrapper around the database command :dbcommand:`create`."
msgstr ""

#: ../source/reference/method/db.createCollection.txt:38
msgid "The :method:`db.createCollection()` method has the following prototype form:"
msgstr ""

#: ../source/reference/method/db.createCollection.txt:56
msgid "The :method:`db.createCollection()` method has the following parameters:"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-param.rst:7
msgid "Parameter"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-param.rst:9
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:9
msgid "Type"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-param.rst:11
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:11
#: ../source/includes/extracts/table-validationLevel-values.rst:6
#: ../source/includes/extracts/table-validationAction-values.rst:7
#: ../source/includes/extracts/table-validationLevel-values.rst:6
#: ../source/includes/extracts/table-validationAction-values.rst:7
msgid "Description"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-param.rst:13
msgid "``name``"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-param.rst:15
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:157
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:170
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:211
msgid "string"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-param.rst:17
#: ../source/includes/apiargs/method-db.createCollection-param.rst:35
msgid "The name of the collection to create."
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-param.rst:21
msgid "``options``"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-param.rst:23
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:106
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:129
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:188
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:247
msgid "document"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-param.rst:25
#: ../source/includes/apiargs/method-db.createCollection-param.rst:41
msgid "Optional. Configuration options for creating a capped collection, for preallocating space in a new collection, or for creating a view."
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-param.rst:0
msgid "param string name"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-param.rst:0
msgid "param document options"
msgstr ""

#: ../source/reference/method/db.createCollection.txt:60
msgid "The ``options`` document contains the following fields:"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:7
msgid "Field"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:13
msgid "``capped``"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:15
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:25
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:65
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:80
msgid "boolean"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:17
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:274
msgid "Optional. To create a :term:`capped collection`, specify ``true``. If you specify ``true``, you must also set a maximum size in the ``size`` field."
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:23
msgid "``autoIndexId``"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:27
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:282
msgid "Optional. Specify ``false`` to disable the automatic creation of an index on the ``_id`` field."
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:32
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:287
msgid "For replica sets, do not set ``autoIndexId`` to ``false``."
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:38
msgid "``size``"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:40
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:51
msgid "number"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:42
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:295
msgid "Optional. Specify a maximum size in bytes for a capped collection. Once a capped collection reaches its maximum size, MongoDB removes the older documents to make space for the new documents. The ``size`` field is required for capped collections and ignored for other collections."
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:49
msgid "``max``"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:53
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:304
msgid "Optional. The maximum number of documents allowed in the capped collection. The ``size`` limit takes precedence over this limit. If a capped collection reaches the ``size`` limit before it reaches the maximum number of documents, MongoDB removes old documents. If you prefer to use the ``max`` limit, ensure that the ``size`` limit, which is required for a capped collection, is sufficient to contain the maximum number of documents."
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:63
msgid "``usePowerOf2Sizes``"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:67
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:82
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:316
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:329
msgid "Optional. Available for the MMAPv1 storage engine only."
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:71
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:320
msgid "For the MMAPv1 storage engine, all collections use the :ref:`power of 2 sizes allocation <power-of-2-allocation>` unless the ``noPadding`` option is ``true``. The ``usePowerOf2Sizes`` option does not affect the allocation strategy."
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:78
msgid "``noPadding``"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:86
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:333
msgid "``noPadding`` flag disables the :ref:`power of 2 sizes allocation <power-of-2-allocation>` for the collection. With ``noPadding`` flag set to true, the allocation strategy does not include additional space to accommodate document growth, as such, document growth will result in new allocation. Use for collections with workloads that are insert-only or in-place updates (such as incrementing counters)."
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:94
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:341
msgid "Defaults to ``false``."
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:98
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:345
msgid "Do not set ``noPadding`` if the workload includes removes or any updates that may cause documents to grow. For more information, see :ref:`exact-fit-allocation`."
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:104
msgid "``storageEngine``"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:108
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:353
msgid "Optional. Available for the WiredTiger storage engine only."
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:112
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:357
msgid "Allows users to specify configuration to the storage engine on a per-collection basis when creating a collection. The value of the ``storageEngine`` option should take the following form:"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:120
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:365
msgid "Storage engine configuration specified when creating collections are validated and logged to the :term:`oplog` during replication to support replica sets with members that use different storage engines."
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:127
msgid "``validator``"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:131
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:374
msgid "Optional. Allows users to specify :doc:`validation rules or expressions </core/schema-validation>` for the collection. For more information, see :doc:`/core/schema-validation`."
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:137
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:380
msgid "The ``validator`` option takes a document that specifies the validation rules or expressions. You can specify the expressions using the same operators as the :ref:`query operators <query-selectors>` with the exception of :query:`$geoNear`, :query:`$near`, :query:`$nearSphere`, :query:`$text`, and :query:`$where`."
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:145
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:388
msgid "Validation occurs during updates and inserts. Existing documents do not undergo validation checks until modification."
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:148
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:391
msgid "You cannot specify a validator for collections in the ``admin``, ``local``, and ``config`` databases."
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:151
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:394
msgid "You cannot specify a validator for ``system.*`` collections."
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:155
#: ../source/includes/extracts/table-validationLevel-values.rst:4
#: ../source/includes/extracts/table-validationLevel-values.rst:4
msgid "``validationLevel``"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:159
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:400
msgid "Optional. Determines how strictly MongoDB applies the validation rules to existing documents during an update."
msgstr ""

#: ../source/includes/extracts/table-validationLevel-values.rst:8
#: ../source/includes/extracts/table-validationLevel-values.rst:8
msgid "``\"off\"``"
msgstr ""

#: ../source/includes/extracts/table-validationLevel-values.rst:10
#: ../source/includes/extracts/table-validationLevel-values.rst:10
msgid "No validation for inserts or updates."
msgstr ""

#: ../source/includes/extracts/table-validationLevel-values.rst:12
#: ../source/includes/extracts/table-validationLevel-values.rst:12
msgid "``\"strict\"``"
msgstr ""

#: ../source/includes/extracts/table-validationLevel-values.rst:14
#: ../source/includes/extracts/table-validationLevel-values.rst:14
msgid "**Default** Apply validation rules to all inserts and all updates."
msgstr ""

#: ../source/includes/extracts/table-validationLevel-values.rst:18
#: ../source/includes/extracts/table-validationLevel-values.rst:18
msgid "``\"moderate\"``"
msgstr ""

#: ../source/includes/extracts/table-validationLevel-values.rst:20
#: ../source/includes/extracts/table-validationLevel-values.rst:20
msgid "Apply validation rules to inserts and to updates on existing *valid* documents. Do not apply rules to updates on existing *invalid* documents."
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:168
#: ../source/includes/extracts/table-validationAction-values.rst:5
#: ../source/includes/extracts/table-validationAction-values.rst:5
msgid "``validationAction``"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:172
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:411
msgid "Optional. Determines whether to ``error`` on invalid documents or just ``warn`` about the violations but allow invalid documents to be inserted."
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:179
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:418
msgid "Validation of documents only applies to those documents as determined by the ``validationLevel``."
msgstr ""

#: ../source/includes/extracts/table-validationAction-values.rst:9
#: ../source/includes/extracts/table-validationAction-values.rst:9
msgid "``\"error\"``"
msgstr ""

#: ../source/includes/extracts/table-validationAction-values.rst:11
#: ../source/includes/extracts/table-validationAction-values.rst:11
msgid "**Default** Documents must pass validation before the write occurs. Otherwise, the write operation fails."
msgstr ""

#: ../source/includes/extracts/table-validationAction-values.rst:15
#: ../source/includes/extracts/table-validationAction-values.rst:15
msgid "``\"warn\"``"
msgstr ""

#: ../source/includes/extracts/table-validationAction-values.rst:17
#: ../source/includes/extracts/table-validationAction-values.rst:17
msgid "Documents do not have to pass validation. If the document fails validation, the write operation logs the validation failure."
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:186
msgid "``indexOptionDefaults``"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:190
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:427
msgid "Optional. Allows users to specify a default configuration for indexes when creating a collection."
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:193
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:430
msgid "The ``indexOptionDefaults`` option accepts a ``storageEngine`` document, which should take the following form:"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:200
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:437
msgid "Storage engine configuration specified when creating indexes are validated and logged to the :term:`oplog` during replication to support replica sets with members that use different storage engines."
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:209
msgid "``viewOn``"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:213
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:448
msgid "The name of the source collection or view from which to create the view. The name is not the full namespace of the collection or view; i.e. does not include the database name and implies the same database as the view to create. You must create views in the same database as the source collection."
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:220
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:238
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:455
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:471
msgid "See also :method:`db.createView()`."
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:227
msgid "``pipeline``"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:229
msgid "array"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:231
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:464
msgid "An array that consists of the :ref:`aggregation pipeline stage <aggregation-pipeline>`.  :method:`db.createView` creates the view by applying the specified ``pipeline`` to the ``viewOn`` collection or view."
msgstr ""

#: ../source/includes/extracts/views-public-definition.rst:1
#: ../source/includes/extracts/views-public-definition.rst:1
msgid "The view definition is public; i.e. :method:`db.getCollectionInfos()` and ``explain`` operations on the view will include the pipeline that defines the view. As such, avoid referring directly to sensitive fields and values in view definitions."
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:245
msgid "``collation``"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:249
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:480
msgid "Specifies the default :ref:`collation <collation>` for the collection."
msgstr ""

#: ../source/includes/extracts/collation-description.rst:1
#: ../source/includes/extracts/collation-description.rst:1
#: ../source/includes/extracts/collation-description.rst:1
msgid ":doc:`Collation </reference/collation>` allows users to specify language-specific rules for string comparison, such as rules for lettercase and accent marks."
msgstr ""

#: ../source/includes/extracts/collation-option-specification.rst:2
#: ../source/includes/extracts/collation-option-specification.rst:2
msgid "The collation option has the following syntax:"
msgstr ""

#: ../source/includes/extracts/collation-option-specification.rst:17
#: ../source/includes/extracts/collation-option-specification.rst:17
msgid "When specifying collation, the ``locale`` field is mandatory; all other collation fields are optional. For descriptions of the fields, see :ref:`collation-document-fields`."
msgstr ""

#: ../source/includes/extracts/collation-collection-level.rst:1
#: ../source/includes/extracts/collation-collection-level.rst:1
msgid "If you specify a collation at the collection level:"
msgstr ""

#: ../source/includes/extracts/collation-collection-level.rst:3
#: ../source/includes/extracts/collation-collection-level.rst:3
msgid "Indexes on that collection will be created with that collation unless the index creation operation explicitly specify a different collation."
msgstr ""

#: ../source/includes/extracts/collation-collection-level.rst:6
#: ../source/includes/extracts/collation-collection-level.rst:6
msgid "Operations on that collection use the collection's default collation unless they explicitly specify a different collation."
msgstr ""

#: ../source/includes/extracts/collation-single-per-operation.rst:2
#: ../source/includes/extracts/collation-single-per-operation.rst:2
msgid "You cannot specify multiple collations for an operation. For example, you cannot specify different collations per field, or if performing a find with a sort, you cannot use one collation for the find and another for the sort."
msgstr ""

#: ../source/includes/extracts/collation-unspecified.rst:1
#: ../source/includes/extracts/collation-unspecified.rst:1
msgid "If no collation is specified for the collection or for the operations, MongoDB uses the simple binary comparison used in prior versions for string comparisons."
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:259
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:490
msgid "For a collection, you can only specify the collation during the collection creation. Once set, you cannot modify the collection's default collation."
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:263
#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:494
msgid "For an example, see :ref:`createCollection-collation-example`."
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:0
msgid "field boolean capped"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:0
msgid "field boolean autoIndexId"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:0
msgid "field number size"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:0
msgid "field number max"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:0
msgid "field boolean usePowerOf2Sizes"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:0
msgid "field boolean noPadding"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:0
msgid "field document storageEngine"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:0
msgid "field document validator"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:0
msgid "field string validationLevel"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:0
msgid "field string validationAction"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:0
msgid "field document indexOptionDefaults"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:0
msgid "field string viewOn"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:0
msgid "field array pipeline"
msgstr ""

#: ../source/includes/apiargs/method-db.createCollection-options-param.rst:0
msgid "field document collation"
msgstr ""

#: ../source/reference/method/db.createCollection.txt:65
msgid "Examples"
msgstr ""

#: ../source/reference/method/db.createCollection.txt:68
msgid "Create a Capped Collection"
msgstr ""

#: ../source/reference/method/db.createCollection.txt:70
msgid "Capped collections have maximum size or document counts that prevent them from growing beyond maximum thresholds. All capped collections must specify a maximum size and may also specify a maximum document count. MongoDB removes older documents if a collection reaches the maximum size limit before it reaches the maximum document count. Consider the following example:"
msgstr ""

#: ../source/reference/method/db.createCollection.txt:81
msgid "This command creates a collection named ``log`` with a maximum size of 5 megabytes and a maximum of 5000 documents."
msgstr ""

#: ../source/reference/method/db.createCollection.txt:84
msgid "See :doc:`/core/capped-collections` for more information about capped collections."
msgstr ""

#: ../source/reference/method/db.createCollection.txt:88
msgid "Create a Collection with Document Validation"
msgstr ""

#: ../source/reference/method/db.createCollection.txt:92
msgid "Collections with validation compare each inserted or updated document against the criteria specified in the ``validator`` option. Depending on the ``validationLevel`` and ``validationAction``, MongoDB either returns a warning, or refuses to insert or update the document if it fails to meet the specified criteria."
msgstr ""

#: ../source/reference/method/db.createCollection.txt:98
msgid "The following example creates a ``contacts`` collection with a JSON Schema validator:"
msgstr ""

#: ../source/reference/method/db.createCollection.txt:103
msgid "MongoDB 3.6 adds the :query:`$jsonSchema` operator to support JSON Schema validation."
msgstr ""

#: ../source/reference/method/db.createCollection.txt:132
msgid "With the validator in place, the following insert operation fails validation:"
msgstr ""

#: ../source/reference/method/db.createCollection.txt:138
msgid "The method returns the error in the ``WriteResult``:"
msgstr ""

#: ../source/reference/method/db.createCollection.txt:152
msgid "For more information, see :doc:`/core/schema-validation`. To view the validation specifications for a collection, use the :method:`db.getCollectionInfos()` method."
msgstr ""

#: ../source/reference/method/db.createCollection.txt:159
msgid "Specify Collation"
msgstr ""

#: ../source/reference/method/db.createCollection.txt:163
msgid "You can specify :ref:`collation <collation>` at the collection or :ref:`view <3.4-reference-views>` level. For example, the following operation creates a collection, specifying a collation for the collection (See :ref:`collation-document-fields` for descriptions of the collation fields):"
msgstr ""

#: ../source/reference/method/db.createCollection.txt:173
msgid "This collation will be used by indexes and operations that support collation unless they explicitly specify a different collation. For example, insert the following documents into ``myColl``:"
msgstr ""

#: ../source/reference/method/db.createCollection.txt:183
msgid "The following operation uses the collection's collation:"
msgstr ""

#: ../source/reference/method/db.createCollection.txt:189
msgid "The operation returns documents in the following order:"
msgstr ""

#: ../source/reference/method/db.createCollection.txt:197
msgid "The same operation on a collection that uses simple binary collation (i.e. no specific collation set) returns documents in the following order:"
msgstr ""

#: ../source/reference/method/db.createCollection.txt:206
msgid ":ref:`create-view-w-collation`"
msgstr ""

#: ../source/reference/method/db.createCollection.txt:211
msgid "Specify Storage Engine Options"
msgstr ""

#: ../source/reference/method/db.createCollection.txt:215
msgid "You can specify collection-specific storage engine configuration options when you create a collection with :method:`db.createCollection()`. Consider the following operation:"
msgstr ""

#: ../source/reference/method/db.createCollection.txt:226
msgid "This operation creates a new collection named ``users`` with a specific configuration string that MongoDB will pass to the ``wiredTiger`` storage engine. See the :wtdocs:`WiredTiger documentation of collection level options </struct_w_t___s_e_s_s_i_o_n.html>` for specific ``wiredTiger`` options."
msgstr ""

