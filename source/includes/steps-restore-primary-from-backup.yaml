title: Obtain backup MongoDB Database files.
stepnum: 1
ref: obtain-backup-files
content: |
  The backup files may come from a :doc:`file system snapshot
  </tutorial/backup-with-filesystem-snapshots>`. The `MongoDB Management
  Service (MMS)
  :mms-home:</>`
  produces MongoDB database files for :mms:`stored snapshots
  </tutorial/restore-from-snapshot/>` and :mms:`point in time
  snapshots </tutorial/restore-from-point-in-time-snapshot/>`. You
  can also use :program:`mongorestore` to restore database files using
  data created with :program:`mongodump`. See
  :doc:`/tutorial/backup-with-mongodump` for more information.
---
title: "Start a :program:`mongod` using data files from the backup as the data path."
stepnum: 2
ref: start
pre: |
  The following example uses ``/data/db`` as the data path, as specified
  in the :setting:`dbpath` setting:
action:
  language: sh
  code: |
    mongod --dbpath /data/db
---
title: "Convert the standalone :program:`mongod` to a single-node replica set"
stepnum: 3
ref: convert
pre: |
  Convert the standalone :program:`mongod` process to a single-node
  replica set by shutting down the :program:`mongod` instance, and
  restarting it with the :option:`--replSet <mongod --replSet>` option,
  as in the following example:
action:
  language: sh
  code: |
    mongod --dbpath /data/db --replSet <replName>
post: |
  Optionally, you can explicitly set a :setting:`~replication.oplogSizeMB`
  to control the size of the :term:`oplog` created for this replica set
  member.
---
title: Connect to the :program:`mongod` instance.
stepnum: 4
ref: connect
pre: |
  For example, first use the following command to a :program:`mongod`
  instance running on the localhost interface:
action:
  language: sh
  code: |
    mongo
---
title: Initiate the new replica set.
stepnum: 5
ref: initiate
pre: |
  Use :method:`rs.initiate()` to initiate the new replica set, as in
  the following example:
action:
  language: javascript
  code: |
    rs.initiate()
...
