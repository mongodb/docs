# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: 2014-04-08 19:35+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/release-notes/2.6-compatibility.txt:3
msgid "Compatibility Changes in MongoDB 2.6"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:13
msgid ""
"The following 2.6 changes can affect the compatibility with older "
"versions of MongoDB. See :doc:`/release-notes/2.6` for the full list of "
"the 2.6 changes."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:18
msgid "Index Changes"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:23
msgid "Enforce Index Key Length Limit"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:96
#: ../source/release-notes/2.6-compatibility.txt:127
#: ../source/release-notes/2.6-compatibility.txt:160
#: ../source/release-notes/2.6-compatibility.txt:177
#: ../source/release-notes/2.6-compatibility.txt:285
#: ../source/release-notes/2.6-compatibility.txt:302
#: ../source/release-notes/2.6-compatibility.txt:326
#: ../source/release-notes/2.6-compatibility.txt:352
#: ../source/release-notes/2.6-compatibility.txt:389
#: ../source/release-notes/2.6-compatibility.txt:406
#: ../source/release-notes/2.6-compatibility.txt:449
#: ../source/release-notes/2.6-compatibility.txt:469
#: ../source/release-notes/2.6-compatibility.txt:483
#: ../source/release-notes/2.6-compatibility.txt:510
#: ../source/release-notes/2.6-compatibility.txt:526
#: ../source/release-notes/2.6-compatibility.txt:560
#: ../source/release-notes/2.6-compatibility.txt:581
#: ../source/release-notes/2.6-compatibility.txt:610
#: ../source/release-notes/2.6-compatibility.txt:624
#: ../source/release-notes/2.6-compatibility.txt:636
#: ../source/release-notes/2.6-compatibility.txt:656
#: ../source/release-notes/2.6-compatibility.txt:674
#: ../source/release-notes/2.6-compatibility.txt:685
#: ../source/release-notes/2.6-compatibility.txt:746
#: ../source/release-notes/2.6-compatibility.txt:762
#: ../source/release-notes/2.6-compatibility.txt:784
#: ../source/release-notes/2.6-compatibility.txt:801
#: ../source/release-notes/2.6-compatibility.txt:820
#: ../source/release-notes/2.6-compatibility.txt:839
#: ../source/release-notes/2.6-compatibility.txt:864
#: ../source/release-notes/2.6-compatibility.txt:893
#: ../source/release-notes/2.6-compatibility.txt:910
msgid "Description"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:26
msgid ""
"MongoDB 2.6 implements a stronger enforcement of the limit on "
":limit:`index key <Index Key>`."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:29
msgid ""
"Creating indexes will error if an index key in an existing document "
"exceeds the limit:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:32
msgid ""
":method:`db.collection.ensureIndex()`, :method:`db.collection.reIndex()`,"
" :dbcommand:`compact`, and :dbcommand:`repairDatabase` will error and not"
" create the index. Previous versions of MongoDB would create the index "
"but not index such documents."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:38
msgid ""
"Because :method:`db.collection.reIndex()`, :dbcommand:`compact`, and "
":dbcommand:`repairDatabase` drop *all* the indexes from a collection and "
"then recreate them sequentially, the error from the index key limit "
"prevents these operations from rebuilding any remaining indexes for the "
"collection and, in the case of the :dbcommand:`repairDatabase` command, "
"from continuing with the remainder of the process."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:46
msgid "Inserts will error:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:48
msgid ""
":method:`db.collection.insert()` and other operations that perform "
"inserts (e.g. :method:`db.collection.save()` and "
":method:`db.collection.update()` with ``upsert`` that result in inserts) "
"will fail to insert if the new document has an indexed field whose "
"corresponding index entry exceeds the limit. Previous versions of MongoDB"
" would insert but not index such documents."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:56
msgid ""
":binary:`~bin.mongorestore` and :binary:`~bin.mongoimport` will fail to "
"insert if the new document has an indexed field whose corresponding index"
" entry exceeds the limit."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:60
msgid "Updates will error:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:62
msgid ""
":method:`db.collection.update()` and :method:`db.collection.save()` "
"operations on an indexed field will error if the updated value causes the"
" index entry to exceed the limit."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:67
msgid ""
"If an existing document contains an indexed field whose index entry "
"exceeds the limit, updates on other fields that result in the relocation "
"of a document on disk will error."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:71
msgid "Chunk Migration will fail:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:73
msgid ""
"Migrations will fail for a chunk that has a document with an indexed "
"field whose index entry exceeds the limit."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:76
msgid ""
"If left unfixed, the chunk will repeatedly fail migration, effectively "
"ceasing chunk balancing for that collection. Or, if chunk splits occur in"
" response to the migration failures, this response would lead to "
"unnecessarily large number of chunks and an overly large config "
"databases."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:82
msgid "Secondary members of replica sets will warn:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:84
msgid ""
"Secondaries will continue to replicate documents with an indexed field "
"whose corresponding index entry exceeds the limit on initial sync but "
"will print warnings in the logs."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:88
msgid ""
"Secondaries allow index build and rebuild operations on a collection that"
" contains an indexed field whose corresponding index entry exceeds the "
"limit but with warnings in the logs."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:92
msgid ""
"With *mixed version* replica sets where the secondaries are version 2.6 "
"and the primary is version 2.4, secondaries will replicate documents "
"inserted or updated on the 2.4 primary, but will print error messages in "
"the log if the documents contain an indexed field whose corresponding "
"index entry exceeds the limit."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:103
#: ../source/release-notes/2.6-compatibility.txt:134
#: ../source/release-notes/2.6-compatibility.txt:241
#: ../source/release-notes/2.6-compatibility.txt:290
#: ../source/release-notes/2.6-compatibility.txt:308
#: ../source/release-notes/2.6-compatibility.txt:336
#: ../source/release-notes/2.6-compatibility.txt:371
#: ../source/release-notes/2.6-compatibility.txt:394
#: ../source/release-notes/2.6-compatibility.txt:411
#: ../source/release-notes/2.6-compatibility.txt:454
#: ../source/release-notes/2.6-compatibility.txt:475
#: ../source/release-notes/2.6-compatibility.txt:488
#: ../source/release-notes/2.6-compatibility.txt:543
#: ../source/release-notes/2.6-compatibility.txt:567
#: ../source/release-notes/2.6-compatibility.txt:586
#: ../source/release-notes/2.6-compatibility.txt:613
#: ../source/release-notes/2.6-compatibility.txt:664
#: ../source/release-notes/2.6-compatibility.txt:811
#: ../source/release-notes/2.6-compatibility.txt:823
#: ../source/release-notes/2.6-compatibility.txt:867
#: ../source/release-notes/2.6-compatibility.txt:897
#: ../source/release-notes/2.6-compatibility.txt:914
msgid "Solution"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:99
#: ../source/release-notes/2.6-compatibility.txt:130
msgid ""
"Run :v2.6:`db.upgradeCheckAllDBs() "
"</reference/method/db.upgradeCheckAllDBs>` to find current keys that "
"violate this limit and correct as appropriate. Preferably, run the test "
"before upgrading; i.e. connect the 2.6 :binary:`~bin.mongo` shell to your"
" MongoDB 2.4 database and run the method."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:105
msgid ""
"If you have an existing data set and want to disable the default index "
"key length validation so that you can upgrade before resolving these "
"indexing issues, use the :parameter:`failIndexKeyTooLong` parameter."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:110
msgid "Index Specifications Validate Field Names"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:113
msgid ""
"In MongoDB 2.6, create and re-index operations fail when the index key "
"refers to an empty field, e.g. ``\"a..b\" : 1`` or the field name starts "
"with a dollar sign (``$``)."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:117
msgid ""
":method:`db.collection.ensureIndex()` will not create a new index with an"
" invalid or empty key name."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:120
msgid ""
":method:`db.collection.reIndex()`, :dbcommand:`compact`, and "
":dbcommand:`repairDatabase` will error if an index exists with an invalid"
" or empty key name."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:124
msgid ""
"Chunk migration will fail if an index exists with an invalid or empty key"
" name."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:127
msgid "Previous versions of MongoDB allow the index."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:137
msgid "``ensureIndex`` and Existing Indexes"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:140
msgid ":method:`db.collection.ensureIndex()` now errors:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:142
msgid ""
"if you try to create an existing index but with different options; e.g. "
"in the following example, the second "
":method:`db.collection.ensureIndex()` will error."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:151
msgid ""
"if you specify an index name that already exists but the key "
"specifications differ; e.g. in the following example, the second "
":method:`db.collection.ensureIndex()` will error."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:160
msgid "Previous versions did not create the index but did not error."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:165
msgid "Write Method Acknowledgements"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:168
msgid ""
"The :binary:`~bin.mongo` shell write methods "
":method:`db.collection.insert()`, :method:`db.collection.update()`, "
":method:`db.collection.save()` and :method:`db.collection.remove()` now "
"integrate the :doc:`write concern </reference/write-concern>` directly "
"into the method rather than with a separate :dbcommand:`getLastError` "
"command to provide :ref:`acknowledgement of writes <wc-w>` whether run "
"interactively in the :binary:`~bin.mongo` shell or non-interactively in a"
" script. In previous versions, these methods exhibited a \"fire-and-"
"forget\" behavior. [#mongo-shell-gle-interactive]_"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:179
msgid ""
"Existing scripts for the :binary:`~bin.mongo` shell that used these "
"methods will now wait for acknowledgement, which take **longer** than the"
" previous \"fire-and-forget\" behavior."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:183
msgid ""
"The write methods now return a :method:`WriteResult` object that contains"
" the results of the operation, including any write errors and write "
"concern errors, and obviates the need to call :dbcommand:`getLastError` "
"command to get the status of the results. See "
":method:`db.collection.insert()`, :method:`db.collection.update()`, "
":method:`db.collection.save()` and :method:`db.collection.remove()` for "
"details."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:191
msgid ""
"In sharded environments, :binary:`~bin.mongos` no longer supports \"fire-"
"and-forget\" behavior. This limits throughput when writing data to "
"sharded clusters."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:196
msgid ""
"In previous versions, when using the :binary:`~bin.mongo` shell "
"interactively, the :binary:`~bin.mongo` shell automatically called the "
":dbcommand:`getLastError` command after a write method to provide "
"acknowledgement of the write. Scripts, however, would observe \"fire-and-"
"forget\" behavior in previous versions unless the scripts included an "
"**explicit** call to the :dbcommand:`getLastError` command after a write "
"method."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:205
msgid ""
"Scripts that used these :binary:`~bin.mongo` shell methods for bulk write"
" operations with \"fire-and-forget\" behavior should use the "
":method:`Bulk()` methods."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:209
msgid ""
"In sharded environments, applications using any driver or "
":binary:`~bin.mongo` shell should use :method:`Bulk()` methods for "
"optimal performance when inserting or modifying groups of documents."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:213
msgid "For example, instead of:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:221
msgid "In MongoDB 2.6, replace with :method:`Bulk()` operation:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:233
msgid ""
"Bulk method returns a :method:`BulkWriteResult` object that contains the "
"result of the operation."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:237
msgid ""
":ref:`rel-notes-write-operations`, :method:`Bulk()`, "
":method:`Bulk.execute()`, "
":method:`db.collection.initializeUnorderedBulkOp()`, "
":method:`db.collection.initializeOrderedBulkOp()`"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:244
msgid "``db.collection.aggregate()`` Change"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:247
msgid ""
"The :method:`db.collection.aggregate()` method in the "
":binary:`~bin.mongo` shell defaults to returning a cursor to the results "
"set. This change enables the aggregation pipeline to return result sets "
"of any size and requires cursor iteration to access the result set. For "
"example:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:266
msgid ""
"Previous versions returned a single document with a field ``results`` "
"that contained an array of the result set, subject to the :ref:`BSON "
"Document size <limit-bson-document-size>` limit. Accessing the result set"
" in the previous versions of MongoDB required accessing the ``results`` "
"field and iterating the array. For example:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:288
msgid ""
"Update scripts that currently expect :method:`db.collection.aggregate()` "
"to return a document with a ``results`` array to handle cursors instead."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:292
msgid ":ref:`rn-2.6-aggregation-cursor`, :method:`db.collection.aggregate()`,"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:296
msgid "Write Concern Validation"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:299
msgid ""
"Specifying a write concern that includes ``j: true`` to a "
":binary:`~bin.mongod` or :binary:`~bin.mongos` instance running with "
"``--nojournal`` option now errors. Previous versions would ignore the "
"``j: true``."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:305
msgid ""
"Either remove the ``j: true`` specification from the write concern when "
"issued against a :binary:`~bin.mongod` or :binary:`~bin.mongos` instance "
"with ``--nojournal`` or run :binary:`~bin.mongod` or "
":binary:`~bin.mongos` with journaling."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:311
msgid "Security Changes"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:316
msgid "New Authorization Model"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:319
msgid ""
"MongoDB 2.6 :ref:`authorization model <authorization>` changes how "
"MongoDB stores and manages user privilege information:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:322
msgid ""
"Before the upgrade, MongoDB 2.6 requires at least one user in the admin "
"database."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:325
msgid ""
"MongoDB versions using older models cannot create/modify users or create "
"user-defined roles."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:329
msgid ""
"Ensure that at least one user exists in the admin database. If no user "
"exists in the admin database, add a user. Then upgrade to MongoDB 2.6. "
"Finally, upgrade the user privilege model. See :doc:`/release-"
"notes/2.6-upgrade`."
msgstr ""

#: ../source/includes/important-upgrade-auth-model-prerequisites.rst:3
msgid ""
"Before upgrading the authorization model, you should first upgrade "
"MongoDB binaries to 2.6. For sharded clusters, ensure that **all** "
"cluster components are 2.6. If there are users in any database, be sure "
"you have at least one user in the ``admin`` database with the role "
":authrole:`userAdminAnyDatabase` **before** upgrading the MongoDB "
"binaries."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:338
msgid ":ref:`2.6-relnotes-security`"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:343
msgid "SSL Certificate Hostname Validation"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:346
msgid ""
"The SSL certificate validation now checks the Common Name (``CN``) and "
"the Subject Alternative Name (``SAN``) fields to ensure that either the "
"``CN`` or one of the ``SAN`` entries matches the hostname of the server. "
"As a result, if you currently use SSL and *neither* the ``CN`` nor any of"
" the ``SAN`` entries of your current SSL certificates match the "
"hostnames, upgrading to version 2.6 will cause the SSL connections to "
"fail."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:355
msgid ""
"To allow for the continued use of these certificates, MongoDB provides "
"the :setting:`~net.ssl.allowInvalidCertificates` setting. The setting is "
"available for:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:359
msgid ""
":binary:`~bin.mongod` and :binary:`~bin.mongos` to bypass the validation "
"of SSL certificates on other servers in the cluster."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:362
msgid ""
":binary:`~bin.mongo` shell, :ref:`MongoDB tools that support SSL "
"<mongodb-tools-support-ssl>`, and the C++ driver to bypass the validation"
" of server certificates."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:366
msgid ""
"When using the :setting:`~net.ssl.allowInvalidCertificates` setting, "
"MongoDB logs as a warning the use of the invalid certificates."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:369
msgid ""
"The :setting:`~net.ssl.allowInvalidCertificates` setting bypasses the "
"other certificate validation, such as checks for expiration and valid "
"signatures."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:376
msgid "``2dsphere`` Index Version 2"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:379
msgid ""
"MongoDB 2.6 introduces a version 2 of the :doc:`2dsphere index "
"</core/2dsphere>`. If a document lacks a ``2dsphere`` index field (or the"
" field is ``null`` or an empty array), MongoDB does not add an entry for "
"the document to the ``2dsphere`` index. For inserts, MongoDB inserts the "
"document but does not add to the ``2dsphere`` index."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:386
msgid ""
"Previous version would not insert documents where the ``2dsphere`` index "
"field is a ``null`` or an empty array. For documents that lack the "
"``2dsphere`` index field, previous versions would insert and index the "
"document."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:392
msgid ""
"To revert to old behavior, create the ``2dsphere`` index with ``{ "
"\"2dsphereIndexVersion\" : 1 }`` to create a version 1 index. However, "
"version 1 index cannot use the new GeoJSON geometries."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:396
msgid ":ref:`2dsphere-v2`"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:399
msgid "Log Messages"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:402
msgid "Timestamp Format Change"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:405
msgid ""
"Each message now starts with the timestamp format given in :ref:`2.6"
"-time-format-changes`. Previous versions used the ``ctime`` format."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:409
msgid ""
"MongoDB adds a new option ``--timeStampFormat`` which supports timestamp "
"format in ``ctime``, ``iso8601-utc``, and ``iso8601-local`` (new "
"default)."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:437
msgid "Package Configuration Changes"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:442
msgid "Default ``bindIp`` for RPM/DEB Packages"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:445
msgid ""
"In the official MongoDB packages in RPM (Red Hat, CentOS, Fedora Linux, "
"and derivatives) and DEB (Debian, Ubuntu, and derivatives), the default "
":setting:`~net.bindIp` value attaches MongoDB components to the localhost"
" interface *only*. These packages set this default in the default "
"configuration file (i.e. ``/etc/mongod.conf``.)"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:452
msgid ""
"If you use one of these packages and have *not* modified the default "
"``/etc/mongod.conf`` file, you will need to set :setting:`~net.bindIp` "
"before or during the upgrade."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:456
msgid ""
"There is no default :setting:`~net.bindIp` setting in any other official "
"MongoDB packages."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:462
msgid "SNMP Changes"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:465
msgid "The IANA enterprise identifier for MongoDB changed from 37601 to 34601."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:468
msgid ""
"MongoDB changed the MIB field name ``globalopcounts`` to "
"``globalOpcounts``."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:472
msgid ""
"Users of SNMP monitoring must modify their SNMP configuration (i.e. MIB) "
"from 37601 to 34601."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:475
msgid "Update references to ``globalopcounts`` to ``globalOpcounts``."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:478
msgid "Remove Method Signature Change"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:481
msgid ""
":method:`db.collection.remove()` requires a query document as a "
"parameter. In previous versions, the method invocation without a query "
"document deleted all documents in a collection."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:486
msgid ""
"For existing :method:`db.collection.remove()` invocations without a query"
" document, modify the invocations to include an empty document "
":method:`db.collection.remove({})`."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:493
msgid "Update Operator Syntax Validation"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:496
msgid ""
":doc:`Update operators (e.g $set) </reference/operator/update>` must "
"specify a non-empty operand expression. For example, the following "
"expression is now invalid:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:504
msgid ""
":doc:`Update operators (e.g $set) </reference/operator/update>` cannot "
"repeat in the update statement. For example, the following expression is "
"invalid:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:518
msgid "Updates Enforce Field Name Restrictions"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:521
msgid ""
"Updates cannot use :doc:`update operators (e.g $set) "
"</reference/operator/update>` to target fields with empty field names "
"(i.e. ``\"\"``)."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:525
msgid ""
"Updates no longer support saving field names that contain a dot (``.``) "
"or a field name that starts with a dollar sign (``$``)."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:529
msgid ""
"For existing documents that have fields with empty names ``\"\"``, "
"replace the whole document. See :method:`db.collection.update()` and "
":method:`db.collection.save()` for details on replacing an existing "
"document."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:534
msgid ""
"For existing documents that have fields with names that contain a dot "
"(``.``), either replace the whole document or :update:`unset <$unset>` "
"the field. To find fields whose names contain a dot, run "
":v2.6:`db.upgradeCheckAllDBs() "
"</reference/method/db.upgradeCheckAllDBs>`."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:539
msgid ""
"For existing documents that have fields with names that start with a "
"dollar sign (``$``), :update:`unset <$unset>` or :update:`rename "
"<$rename>` those fields. To find fields whose names start with a dollar "
"sign, run :v2.6:`db.upgradeCheckAllDBs() "
"</reference/method/db.upgradeCheckAllDBs>`."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:545
msgid ""
"See :ref:`rel-notes-write-operations` for the changes to the write "
"operation protocol, and :ref:`rel-notes-data-modification` for the "
"changes to the insert and update operations. Also consider the "
"documentation of the :limit:`Restrictions on Field Names`."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:551
msgid "Query and Sort Changes"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:556
msgid "Enforce Field Name Restrictions"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:559
msgid ""
"Queries cannot specify conditions on fields with names that start with a "
"dollar sign (``$``)."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:563
msgid ""
":update:`Unset <$unset>` or :update:`rename <$rename>` existing fields "
"whose names start with a dollar sign (``$``). Run "
":v2.6:`db.upgradeCheckAllDBs() </reference/method/db.upgradeCheckAllDBs>`"
" to find fields whose names start with a dollar sign."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:572
msgid "Sparse Index and Incomplete Results"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:575
msgid ""
"If a :doc:`sparse index </core/index-sparse>` results in an incomplete "
"result set for queries and sort operations, MongoDB will not use that "
"index unless a :method:`~cursor.hint()` explicitly specifies the index."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:580
msgid ""
"For example, the query ``{ x: { $exists: false } }`` will no longer use a"
" sparse index on the ``x`` field, unless explicitly hinted."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:584
msgid ""
"To override the behavior to use the sparse index and return incomplete "
"results, explicitly specify the index with a :method:`~cursor.hint()`."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:588
msgid ""
"See :ref:`sparse-index-incomplete-results` for an example that details "
"the new behavior."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:594
msgid "``sort()`` Specification Values"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:597
msgid ""
"The :method:`~cursor.sort()` method **only** accepts the following values"
" for the sort keys:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:600
msgid "``1`` to specify ascending order for a field,"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:602
msgid "``-1`` to specify descending order for a field, or"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:604
msgid ":projection:`$meta` expression to specify sort by the text search score."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:607
msgid "Any other value will result in an error."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:609
msgid ""
"Previous versions also accepted either ``true`` or ``false`` for "
"ascending."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:613
msgid "Update sort key values that use ``true`` or ``false`` to ``1``."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:618
msgid "``skip()`` and ``_id`` Queries"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:621
msgid "Equality match on the ``_id`` field obeys :method:`~cursor.skip()`."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:623
msgid ""
"Previous versions ignored :method:`~cursor.skip()` when performing an "
"equality match on the ``_id`` field."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:629
msgid "``explain()`` Retains Query Plan Cache"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:632
msgid ""
":method:`~cursor.explain()` no longer clears the :doc:`query plans </core"
"/query-plans>` cached for that :term:`query shape`."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:635
msgid ""
"In previous versions, :method:`~cursor.explain()` would have the side "
"effect of clearing the query plan cache for that query shape."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:638
msgid "The :method:`PlanCache() <db.collection.getPlanCache()>` reference."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:641
msgid "Geospatial Changes"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:646
msgid "``$maxDistance`` Changes"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:649
msgid ""
"For :query:`$near` queries on GeoJSON data, if the queries specify a "
":query:`$maxDistance`, :query:`$maxDistance` must be inside of the "
":query:`$near` document."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:653
msgid ""
"In previous version, :query:`$maxDistance` could be either inside or "
"outside the :query:`$near` document."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:656
msgid ":query:`$maxDistance` must be a positive value."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:659
msgid ""
"Update any existing :query:`$near` queries on GeoJSON data that currently"
" have the :query:`$maxDistance` outside the :query:`$near` document"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:663
msgid ""
"Update any existing queries where :query:`$maxDistance` is a negative "
"value."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:669
msgid "Deprecated ``$uniqueDocs``"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:672
msgid ""
"MongoDB 2.6 deprecates :query:`$uniqueDocs`, and geospatial queries no "
"longer return duplicated results when a document matches the query "
"multiple times."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:679
msgid "Stronger Validation of Geospatial Queries"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:682
msgid ""
"MongoDB 2.6 enforces a stronger validation of geospatial queries, such as"
" validating the options or GeoJSON specifications, and errors if the "
"geospatial query is invalid. Previous versions allowed/ignored invalid "
"options."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:688
msgid "Query Operator Changes"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:693
msgid "``$not`` Query Behavior Changes"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:696
msgid "Queries with :query:`$not` expressions on an indexed field now match:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:698
msgid ""
"Documents that are missing the indexed field. Previous versions would not"
" return these documents using the index."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:701
msgid ""
"Documents whose indexed field value is a different type than that of the "
"specified value. Previous versions would not return these documents using"
" the index."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:705
msgid "For example, if a collection ``orders`` contains the following documents:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:714
msgid "If the collection has an index on the ``price`` field:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:720
msgid ""
"The following query uses the index to search for documents where "
"``price`` is not greater than or equal to ``50``:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:727
msgid "In 2.6, the query returns the following documents:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:735
msgid ""
"In previous versions, indexed plans would only return matching documents "
"where the type of the field matches the type of the query predicate:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:743
msgid ""
"If using a collection scan, previous versions would return the same "
"results as those in 2.6."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:746
msgid "MongoDB 2.6 allows chaining of :query:`$not` expressions."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:751
msgid "``null`` Comparison Queries"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:754
msgid ""
":query:`$lt` and :query:`$gt` comparisons to ``null`` no longer match "
"documents that are missing the field."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:757
msgid ""
"``null`` equality conditions on array elements (e.g. ``\"a.b\": null``) "
"no longer match document missing the nested field ``a.b`` (e.g. ``a: [ 2,"
" 3 ]``)."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:761
msgid ""
"``null`` equality queries (i.e. ``field: null`` ) now match fields with "
"values ``undefined``."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:767
msgid "``$all`` Operator Behavior Change"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:770
msgid ""
"The :query:`$all` operator is now equivalent to an :query:`$and` "
"operation of the specified values. This change in behavior can allow for "
"more matches than previous versions when passed an array of a single "
"nested array (e.g. ``[ [ \"A\" ] ]``). When passed an array of a nested "
"array, :query:`$all` can now match documents where the field contains the"
" nested array as an element (e.g. ``field: [ [ \"A\" ], ... ]``), *or* "
"the field equals the nested array (e.g. ``field: [ \"A\", \"B\" ]``). "
"Earlier version could only match documents where the field contains the "
"nested array."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:780
msgid ""
"The :query:`$all` operator returns no match if the array field contains "
"nested arrays (e.g. ``field: [ \"a\", [\"b\"] ]``) and :query:`$all` on "
"the nested field is the element of the nested array (e.g. ``\"field.1\": "
"{ $all: [ \"b\" ] }``). Previous versions would return a match."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:789
msgid "``$mod`` Operator Enforces Strict Syntax"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:792
msgid ""
"The :query:`$mod` operator now only accepts an array with exactly two "
"elements, and errors when passed an array with fewer or more elements. "
"See :ref:`mod-not-enough-elements` and :ref:`mod-too-many-elements` for "
"details."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:797
msgid ""
"In previous versions, if passed an array with one element, the "
":query:`$mod` operator uses ``0`` as the second element, and if passed an"
" array with more than two elements, the :query:`$mod` ignores all but the"
" first two elements. Previous versions do return an error when passed an "
"empty array."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:804
msgid ""
"Ensure that the array passed to :query:`$mod` contains exactly two "
"elements:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:807
msgid ""
"If the array contains the a single element, add ``0`` as the second "
"element."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:810
msgid "If the array contains more than two elements, remove the extra elements."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:816
msgid "``$where`` Must Be Top-Level"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:819
msgid ""
":query:`$where` expressions can now only be at top level and cannot be "
"nested within another expression, such as :query:`$elemMatch`."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:823
msgid "Update existing queries that nest :query:`$where`."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:826
msgid "``$exists`` and ``notablescan``"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:828
msgid ""
"If the MongoDB server has disabled collection scans, i.e. "
":parameter:`notablescan`, then :query:`$exists` queries that have no "
"*indexed solution* will error."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:835
msgid "``MinKey`` and ``MaxKey`` Queries"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:838
msgid ""
"Equality match for either ``MinKey`` or ``MaxKey`` no longer match "
"documents missing the field."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:846
msgid "Nested Array Queries with $elemMatch"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:849
msgid ""
"The :query:`$elemMatch` query operator no longer traverses recursively "
"into nested arrays."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:852
msgid "For example, if a collection ``test`` contains the following document:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:859
msgid ""
"In 2.6, the following :query:`$elemMatch` query does *not* match the "
"document:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:867
msgid "Update existing queries that rely upon the old behavior."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:870
msgid "Text Search Compatibility"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:872
msgid ""
"MongoDB does not support the use of the :query:`$text` query operator in "
"mixed sharded cluster deployments that contain both version 2.4 and "
"version 2.6 shards. See :doc:`/release-notes/2.6-upgrade` for upgrade "
"instructions."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:878
msgid "Replica Set/Sharded Cluster Validation"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:883
msgid "Shard Name Checks on Metadata Refresh"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:886
msgid ""
"For sharded clusters, MongoDB 2.6 disallows a shard from refreshing the "
"metadata if the shard name has not been explicitly set."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:889
msgid ""
"For mixed sharded cluster deployments that contain both version 2.4 and "
"version 2.6 shards, this change can cause errors when migrating chunks "
"**from** version 2.4 shards **to** version 2.6 shards if the shard name "
"is unknown to the version 2.6 shards. MongoDB does not support migrations"
" in mixed sharded cluster deployments."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:896
msgid ""
"Upgrade all components of the cluster to 2.6. See :doc:`/release-"
"notes/2.6-upgrade`."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:902
msgid "Replica Set Vote Configuration Validation"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:905
msgid ""
"MongoDB now deprecates giving any :term:`replica set` member more than a "
"single vote. During configuration, "
":data:`local.system.replset.members[n].votes` should only have a value of"
" 1 for voting members and 0 for non-voting members. MongoDB treats values"
" other than 1 or 0 as a value of 1 and produces a warning message."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:913
msgid ""
"Update :data:`local.system.replset.members[n].votes` with values other "
"than 1 or 0 to 1 or 0 as appropriate."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:919
msgid "Time Format Changes"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:921
msgid ""
"MongoDB now uses ``iso8601-local`` when formatting time data in many "
"outputs. This format follows the template ``YYYY-MM-"
"DDTHH:mm:ss.mmm<+/-Offset>``. For example, "
"``2014-03-04T20:13:38.944-0500``."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:925
msgid ""
"This change impacts all clients using :doc:`Extended JSON </reference"
"/mongodb-extended-json>` in *Strict mode*, such as "
":binary:`~bin.mongoexport` and the :ecosystem:`REST and HTTP Interfaces "
"</tools/http-interfaces>`."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:933
msgid "Other Resources"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:935
#, python-format
msgid ""
"`All backwards incompatible changes (JIRA) "
"<https://jira.mongodb.org/issues/?jql=project%20%3D%20SERVER%20AND%20fixVersion%20in%20(%222.5.0%22%2C%20%222.5.1%22%2C%20%222.5.2%22%2C%20%222.5.3%22%2C%20%222.5.4%22%2C%20%222.5.5%22%2C%20%222.6.0-rc1%22%2C%20%222.6.0-rc2%22)%20AND%20%22Backwards%20Compatibility%22%20in%20%20(%22Major%20Change%22%2C%20%22Minor%20Change%22)%20ORDER%20BY%20votes%20DESC%2C%20issuetype%20DESC%2C%20key%20DESC>`_."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:937
msgid ":doc:`/release-notes/2.6`."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:939
msgid ":doc:`/release-notes/2.6-upgrade` for the upgrade process."
msgstr ""

#~ msgid ""
#~ "MongoDB 2.6 implements a stronger "
#~ "enforcement of the limit on "
#~ ":limit:`index key length <Index Key>`."
#~ msgstr ""

#~ msgid ""
#~ ":method:`db.collection.insert()` and other "
#~ "operations that perform inserts (e.g. "
#~ ":method:`db.collection.save()` and "
#~ ":method:`db.collection.update()` with ``upsert`` "
#~ "that result in inserts) will fail "
#~ "to insert if the new document has"
#~ " an indexed field value that exceeds"
#~ " the limit. Previous versions of "
#~ "MongoDB would insert but not index "
#~ "such documents."
#~ msgstr ""

#~ msgid ""
#~ ":program:`mongorestore` and :program:`mongoimport` "
#~ "will fail to insert if the new "
#~ "document has an indexed field value "
#~ "that exceeds the limit."
#~ msgstr ""

#~ msgid ""
#~ ":method:`db.collection.update()` and "
#~ ":method:`db.collection.save()` operations on an "
#~ "indexed field will error if the "
#~ "new value for the field exceeds "
#~ "the limit."
#~ msgstr ""

#~ msgid ""
#~ "If an existing document contains a "
#~ "value for the indexed field that "
#~ "exceeds the limit, updates on other "
#~ "fields that result in the relocation "
#~ "of a document on disk will error."
#~ msgstr ""

#~ msgid ""
#~ "Migrations will fail for a chunk "
#~ "that has a document with an "
#~ "indexed field that exceeds the index "
#~ "key length limit."
#~ msgstr ""

#~ msgid ""
#~ "Secondaries will continue to replicate "
#~ "documents with an indexed field value"
#~ " that exceeds the limit on initial"
#~ " sync but will print warnings in "
#~ "the logs."
#~ msgstr ""

#~ msgid ""
#~ "Secondaries allow index build and "
#~ "rebuild operations on a collection that"
#~ " contains an indexed field value that"
#~ " exceeds the limit but with warnings"
#~ " in the logs."
#~ msgstr ""

#~ msgid ""
#~ "With *mixed version* replica sets where"
#~ " the secondaries are version 2.6 and"
#~ " the primary is version 2.4, "
#~ "secondaries will replicate documents inserted"
#~ " or updated on the 2.4 primary, "
#~ "but will print error messages in "
#~ "the log if the documents contain "
#~ "indexed field value that exceeds the "
#~ "limit."
#~ msgstr ""

#~ msgid ""
#~ "Bulk method returns a :ref:`bulk-"
#~ "write-result` object that contains the "
#~ "result of the operation."
#~ msgstr ""

#~ msgid ""
#~ "Specifying a write concern that includes"
#~ " ``j:1`` to a :program:`mongod` or "
#~ ":program:`mongos` instance running with "
#~ ":option:`--nojournal` option now errors. "
#~ "Previous versions would ignore the "
#~ "``j:1``."
#~ msgstr ""

#~ msgid ""
#~ "Either remove the ``j:1`` specification "
#~ "from the write concern when issued "
#~ "against a :program:`mongod` or "
#~ ":program:`mongos` instance with "
#~ ":option:`--nojournal` or run :program:`mongod` "
#~ "or :program:`mongos` with journaling."
#~ msgstr ""

#~ msgid "Default ``bind_ip`` for RPM/DEB Packages"
#~ msgstr ""

#~ msgid ""
#~ "In the official MongoDB packages in "
#~ "RPM (Red Hat, CentOS, Fedora Linux, "
#~ "and derivatives) and DEB (Debian, "
#~ "Ubuntu, and derivatives), the default "
#~ ":setting:`bind_ip` value attaches MongoDB "
#~ "components to the localhost interface "
#~ "*only*. These packages set this default"
#~ " in the default configuration file "
#~ "(i.e. ``/etc/mongodb.conf``.)"
#~ msgstr ""

#~ msgid ""
#~ "If you use one of these packages"
#~ " and have *not* modified the default"
#~ " ``/etc/mongodb.conf`` file, you will need"
#~ " to set :setting:`bind_ip` before or "
#~ "during the upgrade."
#~ msgstr ""

#~ msgid ""
#~ "There is no default ``bind_ip`` setting"
#~ " in any other official MongoDB "
#~ "packages."
#~ msgstr ""

#~ msgid ""
#~ "See :ref:`rel-notes-write-operations` "
#~ "for the changes to the write "
#~ "operation protocol, and :ref:`rel-notes-"
#~ "data-modification` for the changes to "
#~ "the insert and update operations."
#~ msgstr ""

#~ msgid ""
#~ ":query:`$lt` and :query:`$gt` comparisons to"
#~ " null no longer match documents that"
#~ " are missing the field."
#~ msgstr ""

#~ msgid ""
#~ "``null`` equality conditions on array "
#~ "elements (e.g. ``\"a.b\": null``) no "
#~ "longer match document missing the nested"
#~ " field ``a.b`` (e.g. ``a: [ 2, "
#~ "3 ]``)"
#~ msgstr ""

#~ msgid ""
#~ "`All backwards incompatible changes (JIRA) "
#~ "<https://jira.mongodb.org/secure/IssueNavigator.jspa?reset=true&jqlQuery=project+%3D+SERVER+AND+fixVersion+in+%28%222.5.0%22%2C+%222.5.1%22%2C+%222.5.2%22%2C+%222.5.3%22%2C+%222.5.4%22%2C+%222.5.5%22%2C+%222.6.0-rc1%22%2C+%222.6.0-rc2%22%29+AND+%22Backward+Breaking%22+in+%28+Rarely+%2C+sometimes%2C+yes+%29+ORDER+BY+votes+DESC%2C+issuetype+DESC%2C+key+DESC>`_."
#~ msgstr ""

# 840acc8e35894e55afdc9c3a99847fd3
# 8cdb3dfb004a4cc9812273363003a1b7
#~ msgid ""
#~ "Run :method:`db.upgradeCheckAllDBs()` to find "
#~ "current keys that violate this limit "
#~ "and correct as appropriate. Preferably, "
#~ "run the test before upgrading; i.e. "
#~ "connect the 2.6 :program:`mongo` shell "
#~ "to your MongoDB 2.4 database and "
#~ "run the method."
#~ msgstr ""

# 9dfc2bd6a348443690ab1bd976b442ac
#~ msgid ""
#~ "The :program:`mongo` shell write methods "
#~ ":method:`db.collection.insert()`, "
#~ ":method:`db.collection.update()`, :method:`db.collection.save()`"
#~ " and :method:`db.collection.remove()` now "
#~ "integrate the :doc:`write concern </core"
#~ "/write-concern>` directly into the method"
#~ " rather than with a separate "
#~ ":dbcommand:`getLastError` command to provide "
#~ ":ref:`safe writes <write-concern-"
#~ "acknowledged>` whether run interactively in"
#~ " the :program:`mongo` shell or non-"
#~ "interactively in a script. In previous"
#~ " versions, these methods exhibited a "
#~ "\"fire-and-forget\" behavior. [#mongo-"
#~ "shell-gle-interactive]_"
#~ msgstr ""

# ff33434665b8404990783c38a59b798d
#~ msgid ""
#~ "Existing scripts for the :program:`mongo` "
#~ "shell that used these methods will "
#~ "now observe safe writes which take "
#~ "**longer** than the previous \"fire-"
#~ "and-forget\" behavior."
#~ msgstr ""

# 621fef3e280d42798281e8033ad040f9
#~ msgid ""
#~ "In previous versions, when using the "
#~ ":program:`mongo` shell interactively, the "
#~ ":program:`mongo` shell automatically called "
#~ "the :dbcommand:`getLastError` command after a"
#~ " write method to provide \"safe "
#~ "writes\". Scripts, however, would observe "
#~ "\"fire-and-forget\" behavior in previous"
#~ " versions unless the scripts included "
#~ "an **explicit** call to the "
#~ ":dbcommand:`getLastError` command after a "
#~ "write method."
#~ msgstr ""

# 3f3f9632c28b4eb89fe34499551f703b
#~ msgid ""
#~ "Scripts that used these :program:`mongo` "
#~ "shell methods for bulk write operations"
#~ " with \"fire-and-forget\" behavior "
#~ "should use the :method:`Bulk()` methods."
#~ msgstr ""

# 607de3a0c94e4c5a809f69580cbc970a
#~ msgid ""
#~ "The :method:`db.collection.aggregate()` method in"
#~ " the :program:`mongo` shell defaults to "
#~ "returning a cursor to the results "
#~ "set. This change enables the aggregation"
#~ " pipeline to return result sets of"
#~ " any size and requires cursor "
#~ "iteration to access the result set. "
#~ "For example:"
#~ msgstr ""

# 4bd03ff039664c68b50f4e98ca47567e
#~ msgid ""
#~ "Before upgrading the authorization model, "
#~ "you should first upgrade MongoDB "
#~ "binaries to 2.6. For sharded clusters,"
#~ " ensure that **all** cluster components "
#~ "are 2.6. If there are users in "
#~ "any database, be sure you have at"
#~ " least one user in the ``admin`` "
#~ "database **before** upgrading the MongoDB "
#~ "binaries."
#~ msgstr ""

# be5401aa67ba45c489d6b0af12b5ddd6
#~ msgid ""
#~ ":program:`mongod` and :program:`mongos` to "
#~ "bypass the validation of SSL "
#~ "certificates on other servers in the "
#~ "cluster."
#~ msgstr ""

# aa6322244ade491ea1e8fead4fab9c37
#~ msgid ""
#~ ":program:`mongo` shell, :ref:`MongoDB tools "
#~ "that support SSL <mongodb-tools-"
#~ "support-ssl>`, and the C++ driver to"
#~ " bypass the validation of server "
#~ "certificates."
#~ msgstr ""

# 4c920571282c43749ff6f073c9d7ccb6
#~ msgid ""
#~ "Each message now starts with the "
#~ "timestamp formatted in ``iso8601-local``, i.e."
#~ " ``YYYY-MM-DDTHH:mm:ss.mmm<+/-Offset>``. For "
#~ "example, ``2014-03-04T20:13:38.944-0500``. Previous "
#~ "versions used ``ctime`` format."
#~ msgstr ""

# 4a221b4a0b4a44b494787856ec245db9
#~ msgid ""
#~ "MongoDB adds a new option "
#~ ":option:`--timeStampFormat` which supports timestamp"
#~ " format in :option:`ctime <--timeStampFormat>`,"
#~ " :option:`iso8601-utc <--timeStampFormat>`, and "
#~ ":option:`iso8601-local <--timeStampFormat>` (new "
#~ "default)."
#~ msgstr ""

# d8b4b6e7dacc48ef85be67b5dcbef475
#~ msgid ""
#~ "For existing documents that currently "
#~ "have fields with empty names ``\"\"``,"
#~ " replace the whole document. See "
#~ ":method:`db.collection.update()` and "
#~ ":method:`db.collection.save()` for details on "
#~ "replacing an existing document."
#~ msgstr ""

# 297ba7761a804cab8ad4e93aa8246ce2
#~ msgid ""
#~ ":update:`Unset <$unset>` or :update:`rename "
#~ "<$rename>` existing fields with names "
#~ "that contain a dot (``.``) or that"
#~ " start with a dollar sign (``$``)."
#~ " Run :method:`db.upgradeCheckAllDBs()` to find"
#~ " fields whose names contain a dot "
#~ "or starts with a dollar sign."
#~ msgstr ""

# a8af11306e78469e9a3a63eaa4781268
#~ msgid ""
#~ ":update:`Unset <$unset>` or :update:`rename "
#~ "<$rename>` existing fields whose names "
#~ "start with a dollar sign (``$``). "
#~ "Run :method:`db.upgradeCheckAllDBs()` to find "
#~ "fields whose names start with a "
#~ "dollar sign."
#~ msgstr ""

# 670266cd674048549dfe8d4ffb0343f3
#~ msgid ":doc:`/reference/method/js-plan-cache`"
#~ msgstr ""

#~ msgid ""
#~ ":program:`mongorestore` and :program:`mongoimport` "
#~ "will fail to insert if the new "
#~ "document has an indexed field whose "
#~ "corresponding index entry exceeds the "
#~ "limit."
#~ msgstr ""

#~ msgid ""
#~ "In sharded environments, :program:`mongos` no"
#~ " longer supports \"fire-and-forget\" "
#~ "behavior. This limits throughput when "
#~ "writing data to sharded clusters."
#~ msgstr ""

#~ msgid ""
#~ "In sharded environments, applications using"
#~ " any driver or :program:`mongo` shell "
#~ "should use :method:`Bulk()` methods for "
#~ "optimal performance when inserting or "
#~ "modifying groups of documents."
#~ msgstr ""

#~ msgid ""
#~ "Specifying a write concern that includes"
#~ " ``j: true`` to a :program:`mongod` "
#~ "or :program:`mongos` instance running with "
#~ ":option:`--nojournal` option now errors. "
#~ "Previous versions would ignore the ``j:"
#~ " true``."
#~ msgstr ""

#~ msgid ""
#~ "Either remove the ``j: true`` "
#~ "specification from the write concern "
#~ "when issued against a :program:`mongod` "
#~ "or :program:`mongos` instance with "
#~ ":option:`--nojournal` or run :program:`mongod` "
#~ "or :program:`mongos` with journaling."
#~ msgstr ""

#~ msgid ""
#~ "In the official MongoDB packages in "
#~ "RPM (Red Hat, CentOS, Fedora Linux, "
#~ "and derivatives) and DEB (Debian, "
#~ "Ubuntu, and derivatives), the default "
#~ ":setting:`~net.bindIp` value attaches MongoDB "
#~ "components to the localhost interface "
#~ "*only*. These packages set this default"
#~ " in the default configuration file "
#~ "(i.e. ``/etc/mongodb.conf``.)"
#~ msgstr ""

#~ msgid ""
#~ "If you use one of these packages"
#~ " and have *not* modified the default"
#~ " ``/etc/mongodb.conf`` file, you will need"
#~ " to set :setting:`~net.bindIp` before or"
#~ " during the upgrade."
#~ msgstr ""

