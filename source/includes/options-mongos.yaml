#  This file borrows content from:
#  /includes/options-shared.yaml
#  /includes/options-mongod.yaml
#
#  The {{program}} variable is generated by the system.
#
program: mongos
name: help
inherit:
  name: help
  program: _shared
  file: options-shared.yaml
---
program: mongos
name: version
inherit:
  name: version
  program: _shared
  file: options-shared.yaml
---
program: mongos
name: config
inherit:
  name: config
  program: mongod
  file: options-mongod.yaml
---
program: mongos
name: verbose
inherit:
  name: verbose
  program: _shared
  file: options-shared.yaml
---
program: mongos
name: quiet
inherit:
  name: quiet
  program: _shared
  file: options-shared.yaml
---
program: mongos
name: port
inherit:
  name: port
  program: _shared
  file: options-shared.yaml
---
program: mongos
name: bind_ip
inherit:
  name: bind_ip
  program: mongod
  file: options-mongod.yaml
---
program: mongos
name: maxConns
directive: option
args: <number>
description: |
  Specifies the maximum number of simultaneous connections that
  :program:`mongos` will accept. This setting will have no effect if the
  value of this setting is higher than your operating system's configured
  maximum connection tracking threshold.

  This setting is particularly useful for :program:`mongos` if you have a
  client that creates a number of collections but allows them to timeout
  rather than close the collections. When you set :setting:`maxConns`,
  ensure the value is slightly higher than the size of the connection pool
  or the total number of connections to prevent erroneous connection
  spikes from propagating to the members of a :term:`sharded cluster`.

  .. versionchanged:: 2.5.0
     MongoDB removed the upward limit on the :setting:`maxConns` setting.
optional: true
---
program: mongos
name: objcheck
inherit:
  name: objcheck
  program: mongod
  file: options-mongod.yaml
---
program: mongos
name: logpath
inherit:
  name: logpath
  program: mongod
  file: options-mongod.yaml
---
program: mongos
name: logappend
inherit:
  name: logappend
  program: mongod
  file: options-mongod.yaml
---
program: mongos
name: setParameter
directive: option
args: <options>
description: |
  .. versionadded:: 2.4

  Specifies an option to configure on startup. Specify multiple options
  with multiple :option:`--setParameter` options. See
  :doc:`/reference/parameters` for full documentation of these parameters.
  The :dbcommand:`setParameter` database command provides access to many
  of these parameters. :option:`--setParameter` supports the following
  options:

  .. include:: /includes/list-set-parameters-mongos.rst

optional: true
---
program: mongos
name: syslog
inherit:
  name: syslog
  program: mongod
  file: options-mongod.yaml
---
program: mongos
name: syslogFacility
inherit:
  name: syslogFacility
  program: mongod
  file: options-mongod.yaml
---
program: mongos
name: pidfilepath
inherit:
  name: pidfilepath
  program: mongod
  file: options-mongod.yaml
---
program: mongos
name: keyFile
inherit:
  name: keyFile
  program: mongod
  file: options-mongod.yaml
---
program: mongos
name: nounixsocket
inherit:
  name: nounixsocket
  program: mongod
  file: options-mongod.yaml
---
program: mongos
name: unixSocketPrefix
inherit:
  name: unixSocketPrefix
  program: mongod
  file: options-mongod.yaml
---
program: mongos
name: fork
inherit:
  name: fork
  program: mongod
  file: options-mongod.yaml
---
program: mongos
name: saslServiceName
inherit:
  name: saslServiceName
  program: mongod
  file: options-mongod.yaml
---
program: mongos
name: ipv6
inherit:
  name: ipv6
  program: _shared
  file: options-shared.yaml
---
program: mongos
name: jsonp
inherit:
  name: jsonp
  program: mongod
  file: options-mongod.yaml
---
program: mongos
name: noscripting
inherit:
  name: noscripting
  program: mongod
  file: options-mongod.yaml
---
program: mongos
name: nohttpinterface
directive: option
args: null
description: |
  .. deprecated:: 2.6
     MongoDB disables the HTTP interface by default.

  Disables the HTTP interface.

  Do not use in conjunction with :option:`--jsonp`.
optional: true
---
program: mongos
name: httpinterface
directive: option
args: null
description: |
  .. versionadded:: 2.6

  Enables the HTTP interface. Enabling the interface can increase
  network exposure.

  Leave the HTTP interface *disabled* for production deployments. If you
  *do* enable this interface, you should only allow trusted clients to
  access this port. See :ref:`security-firewalls`.

  .. include:: /includes/note-kerberos-unsupported-in-http-console.rst
optional: true
---
program: mongos
name: configdb
directive: option
args: <config1>,<config2>,<config3>
description: |
  Specifies the :term:`configuration database <config database>` for the
  :term:`sharded cluster`. You must specify either 1 or 3 configuration
  servers, in a comma separated list.

  All :program:`mongos` instances **must** specify the hosts in the
  :option:`--configdb` setting in the in the same order.

  If your configuration databases reside in more that one data center,
  order the hosts so that the config database that is closest to the
  majority of your :program:`mongos` instances is first servers in the
  list.

  .. warning::

     Never remove a config server from this setting, even if the config
     server is not available or offline.
optional: false
---
program: mongos
name: upgrade
directive: option
args: null
description: |
  Updates the meta data format used by the :term:`config database`.
optional: true
---
program: mongos
name: chunkSize
directive: option
args: <value>
description: |
  Determines the size in megabytes of each :term:`chunk` in the
  :term:`sharded cluster`. The default value is 64 megabytes, which is the
  ideal size for chunks in most deployments: larger chunk size can lead to
  uneven data distribution; smaller chunk size can lead to inefficient
  movement of chunks between nodes. However, in some circumstances it may
  be necessary to set a different chunk size.

  This option *only* affects chunk size when you initialize the cluster
  for the first time. If you later modify the option, the new value has no
  effect. See the :doc:`/tutorial/modify-chunk-size-in-sharded-cluster`
  procedure if you need to change the chunk size on an existing sharded
  cluster.
optional: true
---
program: mongos
name: localThreshold
directive: option
args: null
description: |
  Affects the logic that :program:`mongos` uses when selecting
  :term:`replica set` members to pass read operations to from clients.
  Specify a value in milliseconds. The default value is ``15``, which
  corresponds to the default value in all of the client :doc:`drivers
  </applications/drivers>`.

  When :program:`mongos` receives a request that permits reads to
  :term:`secondary` members, the :program:`mongos` will:

  - Find the member of the set with the lowest ping time.

  - Construct a list of replica set members that is within a ping time of
    15 milliseconds of the nearest suitable member of the set.

    If you specify a value for :option:`--localThreshold`,
    :program:`mongos` will construct the list of replica members that are
    within the latency allowed by this value.

  - Select a member to read from at random from this list.

  The ping time used for a member compared by the
  :option:`--localThreshold` setting is a moving average of recent ping
  times, calculated at most every 10 seconds. As a result, some queries
  may reach members above the threshold until the :program:`mongos`
  recalculates the average.

  See the :ref:`replica-set-read-preference-behavior-member-selection`
  section of the :doc:`read preference </core/read-preference>`
  documentation for more information.
optional: true
---
program: mongos
name: noAutoSplit
directive: option
args: null
description: |
  Prevents :program:`mongos` from automatically inserting metadata splits
  in a :term:`sharded collection <sharding>`. If set on all
  :program:`mongos` instances, this prevents MongoDB from creating new
  chunks as the data in a collection grows.

  Because any :program:`mongos` in a cluster can create a split, to
  totally disable splitting in a cluster you must set
  :option:`--noAutoSplit` on all :program:`mongos`.

  .. warning::

     With :option:`--noAutoSplit` enabled, the data in your sharded
     cluster may become imbalanced over time. Enable with caution.
optional: true
---
program: mongos
name: ssl
inherit:
  name: ssl
  program: _shared
  file: options-shared.yaml
---
program: mongos
name: sslMode
inherit:
  name: sslMode
  program: mongod
  file: options-mongod.yaml
---
program: mongos
name: sslPEMKeyFile
inherit:
  name: sslPEMKeyFile
  program: _shared
  file: options-shared.yaml
---
program: mongos
name: sslPEMKeyPassword
inherit:
  name: sslPEMKeyPassword
  program: _shared
  file: options-shared.yaml
---
program: mongos
name: sslClusterFile
inherit:
  name: sslClusterFile
  program: mongod
  file: options-mongod.yaml
---
program: mongos
name: sslClusterPassword
inherit:
  name: sslClusterPassword
  program: mongod
  file: options-mongod.yaml
---
program: mongos
name: sslCAFile
inherit:
  name: sslCAFile
  program: _shared
  file: options-shared.yaml
---
program: mongos
name: sslCRLFile
inherit:
  name: sslCRLFile
  program: _shared
  file: options-shared.yaml
---
program: mongos
name: sslAllowInvalidCertificates
inherit:
  name: sslAllowInvalidCertificates
  program: _shared
  file: options-shared.yaml
---
program: mongos
name: sslWeakCertificateValidation
inherit:
  name: sslWeakCertificateValidation
  program: mongod
  file: options-mongod.yaml
---
program: mongos
name: sslFIPSMode
inherit:
  name: sslFIPSMode
  program: _shared
  file: options-shared.yaml
---
program: mongos
name: clusterAuthMode
directive: option
args: <option>
description: |
  .. versionadded:: 2.6

  Enables :ref:`internal x.509 authentication
  <x509-internal-authentication>` for membership to the cluster or replica
  set. The :option:`--clusterAuthMode` option can have one of the
  following values:

  .. list-table::
     :header-rows: 1
     :widths: 20 40

     * - Value

       - Description

     * - ``keyFile``

       - Default value. Use keyfile for authentication.

     * - ``sendKeyFile``

       - For rolling upgrade purposes. Send the keyfile for
         authentication but can accept either keyfile or x.509
         certificate.

     * - ``sendX509``

       - For rolling upgrade purposes. Send the x.509 certificate for
         authentication but can accept either keyfile or x.509
         certificate.

     * - ``x509``

       - Recommended. Send the x.509 certificate for authentication and
         accept **only** x.509 certificate.

  The default distribution of MongoDB does not contain support for SSL.
  For more information on MongoDB and SSL, see :doc:`/tutorial/configure-ssl`.
optional: true
---
program: mongos
name: sslOnNormalPorts
directive: option
args: null
description: |
  .. deprecated:: 2.5.3

  .. versionadded:: 2.2

  Enables SSL so that {{program}} requires SSL encryption for all
  connections on the default MongoDB port or port specified by
  :option:`--port`.

  The default distribution of MongoDB does not contain support for SSL.
  For more information on MongoDB and SSL, see :doc:`/tutorial/configure-ssl`.
optional: true
---
program: mongos
name: auditDestination
inherit:
  name: auditDestination
  program: mongod
  file: options-mongod.yaml
---
program: mongos
name: auditFormat
inherit:
  name: auditFormat
  program: mongod
  file: options-mongod.yaml
---
program: mongos
name: auditPath
inherit:
  name: auditPath
  program: mongod
  file: options-mongod.yaml
---
program: mongos
name: auditFilter
inherit:
  name: auditFilter
  program: mongod
  file: options-mongod.yaml
---
program: mongos
name: test
directive: option
args: null
description: |
  This option is for internal testing use only and runs unit tests
  without starting a :program:`mongos` instance.
optional: true
...
