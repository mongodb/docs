==========================================
Enable Authentication in a Sharded Cluster
==========================================

.. default-domain:: mongodb

.. versionadded:: 2.0
   Support for authentication with sharded clusters.

To control access to a sharded cluster, create key files and then set
the :setting:`keyFile` option on *all* components of the sharded
cluster, including all :program:`mongos` instances, all config server
:program:`mongod` instances, and all shard :program:`mongod`
instances. The content of the key file is arbitrary but must be the
same on all cluster members.

.. note:: For an overview of authentication, see
   :ref:`security-authentication`. For an overview of security, see
   :doc:`/security`.

Procedure
---------

To enable authentication, do the following:

1. Generate a key file to store authentication information, as described
   in the :ref:`generate-key-file` section.

#. On each component in the sharded cluster, enable authentication by
   doing one of the following:

   - In the configuration file, set the :setting:`keyFile` option to the
     key file's path and then start the component, as in the following
     example:

     .. code-block:: cfg

        keyFile = /srv/mongodb/keyfile

   - When starting the component, set :option:`--keyFile <mongos --keyFile>` option,
     which is an option for both :program:`mongos` instances and
     :program:`mongod` instances. Set the :option:`--keyFile <mongos --keyFile>`
     to the key file's path.

   .. note::

      The :setting:`keyFile` setting implies :setting:`auth`, which
      means in most cases you do not need to set :setting:`auth`
      explicitly.

#. Add the first administrative user and then add subsequent users. See
   :ref:`control-access-add-users`.
