# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: 2014-04-08 18:53+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# a28719d28f484213b296f6775b6c8b9d
#: ../source/reference/operator/query/or.txt:3
msgid "$or"
msgstr ""

# 7e9204e91e20479392be9352e044f68e
#: ../source/reference/operator/query/or.txt
msgid "On this page"
msgstr ""

# c73cc1488f8446e0ae99255b0c3d3c55
#: ../source/reference/operator/query/or.txt:15
msgid ""
"The :query:`$or` operator performs a logical ``OR`` operation on an array"
" of *two or more* ``<expressions>`` and selects the documents that "
"satisfy *at least* one of the ``<expressions>``. The :query:`$or` has the"
" following syntax:"
msgstr ""

# 910438854e9d4ba4808576823270579d
#: ../source/reference/operator/query/or.txt:24
msgid "Consider the following example:"
msgstr ""

# f01ddf39d16b4baaafac2f88d4982947
#: ../source/reference/operator/query/or.txt:30
msgid ""
"This query will select all documents in the ``inventory`` collection "
"where either the ``quantity`` field value is less than ``20`` **or** the "
"``price`` field value equals ``10``."
msgstr ""

# 4efbd1d4cc3d48b38541ff6717902d15
#: ../source/reference/operator/query/or.txt:35
msgid "Behaviors"
msgstr ""

# 09cd5e876994490cb798f89863fa1649
#: ../source/reference/operator/query/or.txt:40
msgid "``$or`` Clauses and Indexes"
msgstr ""

# 0ac3db96c260411da3df429aa19f18dc
#: ../source/reference/operator/query/or.txt:42
msgid ""
"When evaluating the clauses in the :query:`$or` expression, MongoDB "
"either performs a collection scan or, if all the clauses are supported by"
" indexes, MongoDB performs index scans. That is, for MongoDB to use "
"indexes to evaluate an :query:`$or` expression, all the clauses in the "
":query:`$or` expression must be supported by indexes. Otherwise, MongoDB "
"will perform a collection scan."
msgstr ""

# 4b7e54f1adf64fe9913a282fdbcd0d99
#: ../source/reference/operator/query/or.txt:49
msgid ""
"When using indexes with :query:`$or` queries, each clause of an "
":query:`$or` can use its own index.  Consider the following query:"
msgstr ""

# d730f7b869354be08fa0a99a366c71ba
#: ../source/reference/operator/query/or.txt:56
msgid ""
"To support this query, rather than a compound index, you would create one"
" index on ``quantity`` and another index on ``price``:"
msgstr ""

# a4c42c37e6f44606a8602374634c8a32
#: ../source/reference/operator/query/or.txt:64
msgid ""
"MongoDB can use all but the :doc:`geoHaystack </core/geohaystack>` index "
"to support :query:`$or` clauses."
msgstr ""

# f860417a66ec45eb942ed25e9a577d1e
#: ../source/reference/operator/query/or.txt:70
msgid "``$or`` and ``text`` Queries"
msgstr ""

# a584c3ee9cbd4dd980b45e9a43e3ae52
#: ../source/reference/operator/query/or.txt:74
msgid ""
"If :query:`$or` includes a :query:`$text` query, all clauses in the "
":query:`$or` array must be supported by an index. This is because a "
":query:`$text` query *must* use an index, and :query:`$or` can only use "
"indexes if all its clauses are supported by indexes. If the "
":query:`$text` query cannot use an index, the query will return an error."
msgstr ""

# 888d1e053d204f35aeee83a9d286de79
#: ../source/reference/operator/query/or.txt:82
msgid "``$or`` and GeoSpatial Queries"
msgstr ""

# 6f3b8ed34cb74cc4b7444a132e254fea
#: ../source/reference/operator/query/or.txt:86
msgid ""
":operator:`$or` supports :doc:`geospatial clauses </reference/operator"
"/query-geospatial>` with the following exception for the near clause "
"(near clause includes :query:`$nearSphere` and :query:`$near`). "
":operator:`$or` cannot contain a near clause with any other clause."
msgstr ""

# e4631d1519964006901455b2c482f2b1
#: ../source/reference/operator/query/or.txt:93
msgid "``$or`` and Sort Operations"
msgstr ""

# 58d41890f02e4ab6a4f576bc2fa06db7
#: ../source/reference/operator/query/or.txt:97
msgid ""
"When executing :query:`$or` queries with a :method:`~cursor.sort()`, "
"MongoDB can now use indexes that support the :query:`$or` clauses. "
"Previous versions did not use the indexes."
msgstr ""

# 4ec21237c0b84824861d68f6c24f1c42
#: ../source/reference/operator/query/or.txt:102
msgid "``$or`` versus ``$in``"
msgstr ""

# e40f6cae52a54b4981393176769e49df
#: ../source/reference/operator/query/or.txt:104
msgid ""
"When using :query:`$or` with ``<expressions>`` that are equality checks "
"for the value of the same field, use the :query:`$in` operator instead of"
" the :query:`$or` operator."
msgstr ""

# 697acb6d64e44d1d959282c5e2319e21
#: ../source/reference/operator/query/or.txt:108
msgid ""
"For example, to select all documents in the ``inventory`` collection "
"where the ``quantity`` field value equals either ``20`` *or* ``50``, use "
"the :query:`$in` operator:"
msgstr ""

# a12c14ffd1fe4ef8888b111e4202428c
#: ../source/reference/operator/query/or.txt:117
msgid "Nested ``$or`` Clauses"
msgstr ""

# 8e256f8751da4dd19380e19e97d2eaa0
#: ../source/reference/operator/query/or.txt:119
msgid "You may nest :query:`$or` operations."
msgstr ""

# a5350dea64764b3ca887ba62d07933a1
#: ../source/reference/operator/query/or.txt:121
msgid ""
":query:`$and`, :method:`~db.collection.find()`, :method:`~cursor.sort()`,"
" :query:`$in`"
msgstr ""

#~ msgid ""
#~ "You may nest :query:`$or` operations; "
#~ "however, these expressions are not as"
#~ " efficiently optimized as top-level."
#~ msgstr ""

#~ msgid ""
#~ "This query will select all documents "
#~ "in the ``inventory`` collection where "
#~ "either the ``qty`` field value is "
#~ "less than ``20`` **or** the ``sale`` "
#~ "field value is ``true``."
#~ msgstr ""

#~ msgid ""
#~ "When using indexes with :query:`$or` "
#~ "queries, each clause of an :query:`$or`"
#~ " will execute in parallel. These "
#~ "clauses can each use their own "
#~ "index. Consider the following query:"
#~ msgstr ""

#~ msgid ""
#~ "To support this query, rather than "
#~ "a compound index, you would create "
#~ "one index on ``price`` and another "
#~ "index on ``sale``:"
#~ msgstr ""

#~ msgid ""
#~ "When using the :query:`$or` operator "
#~ "with the :method:`~cursor.sort()` method, the"
#~ " query will **not** use the indexes"
#~ " on the :query:`$or` fields. Consider "
#~ "the following query which adds a "
#~ ":method:`~cursor.sort()` method to the above"
#~ " query:"
#~ msgstr ""

#~ msgid ""
#~ "This modified query will not use "
#~ "the index on ``price`` nor the "
#~ "index on ``sale``."
#~ msgstr ""

#~ msgid ""
#~ "If :query:`$or` includes a :query:`$text` "
#~ "query, all clauses in the :query:`$or`"
#~ " array must be indexed."
#~ msgstr ""

#~ msgid ""
#~ "For example, to select all documents "
#~ "in the ``inventory`` collection where "
#~ "the ``qty`` field value equals either"
#~ " ``20`` *or* ``50``, use the "
#~ ":query:`$in` operator:"
#~ msgstr ""

