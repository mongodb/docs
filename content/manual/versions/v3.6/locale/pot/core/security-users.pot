# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/security-users.txt:6
msgid "Users"
msgstr ""

#: ../source/core/security-users.txt:16
msgid "To authenticate a client in MongoDB, you must add a corresponding user to MongoDB."
msgstr ""

#: ../source/core/security-users.txt:20
msgid "User Management Interface"
msgstr ""

#: ../source/core/security-users.txt:22
msgid "To add a user, MongoDB provides the :method:`db.createUser()` method. When adding a user, you can assign :doc:`roles </core/authorization>` to the user in order to grant privileges."
msgstr ""

#: ../source/core/security-users.txt:28
msgid "The first user created in the database should be a user administrator who has the privileges to manage other users. See :doc:`/tutorial/enable-authentication`."
msgstr ""

#: ../source/core/security-users.txt:32
msgid "You can also update existing users, such as to change password and grant or revoke roles. For a full list of user management methods, see :ref:`user-management-methods`."
msgstr ""

#: ../source/core/security-users.txt:40
msgid "Authentication Database"
msgstr ""

#: ../source/core/security-users.txt:42
msgid "When adding a user, you create the user in a specific database. This database is the authentication database for the user."
msgstr ""

#: ../source/core/security-users.txt:45
msgid "A user can have privileges across different databases; that is, a user's privileges are not limited to their authentication database. By assigning to the user roles in other databases, a user created in one database can have permissions to act on other databases. For more information on roles, see :doc:`/core/authorization`."
msgstr ""

#: ../source/core/security-users.txt:51
msgid "The user's name and authentication database serve as a unique identifier for that user. That is, if two users have the same name but are created in different databases, they are two separate users. If you intend to have a single user with permissions on multiple databases, create a single user with roles in the applicable databases instead of creating the user multiple times in different databases."
msgstr ""

#: ../source/core/security-users.txt:63
msgid "Authenticate a User"
msgstr ""

#: ../source/includes/fact-authenticate.rst:1
msgid "To authenticate as a user, you must provide a username, password, and the :ref:`authentication database <mongo-shell-authentication-options>` associated with that user."
msgstr ""

#: ../source/includes/fact-authenticate.rst:5
msgid "To authenticate using the :binary:`~bin.mongo` shell, either:"
msgstr ""

#: ../source/includes/fact-authenticate.rst:7
msgid "Use the :binary:`~bin.mongo` command-line authentication options (:option:`--username <mongo --username>`, :option:`--password <mongo --password>`, and :option:`--authenticationDatabase <mongo --authenticationDatabase>`) when connecting to the :binary:`~bin.mongod` or :binary:`~bin.mongos` instance, or"
msgstr ""

#: ../source/includes/fact-authenticate.rst:14
msgid "Connect first to the :binary:`~bin.mongod` or :binary:`~bin.mongos` instance, and then run the :dbcommand:`authenticate` command or the :method:`db.auth()` method against the :ref:`authentication database <mongo-shell-authentication-options>`."
msgstr ""

#: ../source/includes/fact-authenticate.rst:21
msgid "Authenticating multiple times as different users does **not** drop the credentials of previously-authenticated users. This may lead to a connection having more permissions than intended by the user, and causes operations within a :doc:`logical session </reference/server-sessions>` to raise an error."
msgstr ""

#: ../source/includes/fact-authenticate.rst:28
msgid "For examples of authenticating using a MongoDB driver, see the `driver documentation <https://docs.mongodb.com/ecosystem/drivers/>`__."
msgstr ""

#: ../source/core/security-users.txt:68
msgid "Centralized User Data"
msgstr ""

#: ../source/core/security-users.txt:72
msgid "MongoDB stores all user information, including :data:`name <admin.system.users.user>`, :data:`password <admin.system.users.credentials>`, and the :data:`user's authentication database <admin.system.users.db>`, in the :doc:`system.users </reference/system-users-collection>` collection in the ``admin`` database."
msgstr ""

#: ../source/core/security-users.txt:79
msgid "Do not access this collection directly but instead use the :ref:`user management commands <user-management-commands>`."
msgstr ""

#: ../source/core/security-users.txt:87
msgid "Sharded Cluster Users"
msgstr ""

#: ../source/core/security-users.txt:89
msgid "To create users for a sharded cluster, connect to the :binary:`~bin.mongos` instance and add the users. Clients then authenticate these users through the :binary:`~bin.mongos` instances."
msgstr ""

#: ../source/core/security-users.txt:95
msgid "MongoDB stores these sharded cluster user data in the ``admin`` database of the :term:`config servers <config server>`. Previously, the credentials for authenticating to a database on a sharded cluster resided on the :ref:`primary shard <primary-shard>` for that database."
msgstr ""

#: ../source/core/security-users.txt:103
msgid "Shard Local Users"
msgstr ""

#: ../source/core/security-users.txt:105
msgid "However, some maintenance operations, such as :dbcommand:`cleanupOrphaned`, :dbcommand:`compact`, :method:`rs.reconfig()`, require direct connections to specific shards in a sharded cluster. To perform these operations, you must connect directly to the shard and authenticate as a *shard local* administrative user."
msgstr ""

#: ../source/core/security-users.txt:111
msgid "To create a *shard local* administrative user, connect directly to the shard and create the user. MongoDB stores *shard local* users in the ``admin`` database of the shard itself."
msgstr ""

#: ../source/core/security-users.txt:115
msgid "These *shard local* users are completely independent from the users added to the sharded cluster via :binary:`~bin.mongos`. *Shard local* users are local to the shard and are inaccessible by :binary:`~bin.mongos`."
msgstr ""

#: ../source/core/security-users.txt:119
msgid "Direct connections to a shard should only be for shard-specific maintenance and configuration. In general, clients should connect to the sharded cluster through the :binary:`~bin.mongos`."
msgstr ""

#: ../source/core/security-users.txt:126
msgid "Localhost Exception"
msgstr ""

#: ../source/core/security-users.txt:128
msgid "The localhost exception allows you to enable access control and then create the first user in the system. With the localhost exception, after you enable access control, connect to the localhost interface and create the first user in the ``admin`` database. The first user must have privileges to create other users, such as a user with the :authrole:`userAdmin` or :authrole:`userAdminAnyDatabase` role."
msgstr ""

#: ../source/core/security-users.txt:137
msgid "MongoDB 3.4 extended the localhost exception to permit execution of the :method:`db.createRole()` method. This method allows users authorizing via LDAP to create a role inside of MongoDB that maps to a role defined in LDAP. See :ref:`LDAP Authorization <security-ldap-external>` for more information."
msgstr ""

#: ../source/core/security-users.txt:145
msgid "The localhost exception changed so that these connections *only* have access to create the first user on the ``admin`` database. In previous versions, connections that gained access using the localhost exception had unrestricted access to the MongoDB instance."
msgstr ""

#: ../source/core/security-users.txt:151
msgid "The localhost exception applies only when there are no users created in the MongoDB instance."
msgstr ""

#: ../source/core/security-users.txt:154
msgid "In the case of a sharded cluster, the localhost exception applies to each shard individually as well as to the cluster as a whole. Once you create a sharded cluster and add a user administrator through the :binary:`~bin.mongos` instance, you must still prevent unauthorized access to the individual shards. Follow one of the following steps for each shard in your cluster:"
msgstr ""

#: ../source/core/security-users.txt:160
msgid "Create an administrative user, or"
msgstr ""

#: ../source/core/security-users.txt:162
msgid "Disable the localhost exception at startup. To disable the localhost exception, set the :parameter:`enableLocalhostAuthBypass` parameter to ``0``."
msgstr ""

