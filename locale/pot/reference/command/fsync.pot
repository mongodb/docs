# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/command/fsync.txt:3
# aa9376fd1af54b739f31150fa2bbcd35
msgid "fsync"
msgstr ""

#: ../source/reference/command/fsync.txt:8
# c7a514ef08a9468998b50b604fdadc82
msgid "Definition"
msgstr ""

#: ../source/reference/command/fsync.txt:12
# d8a9712f49d74be7aa0f5fd8e0fd1c92
msgid "Forces the :program:`mongod` process to flush all pending writes from the storage layer to disk. Optionally, you can use :dbcommand:`fsync` to lock the :program:`mongod` instance and block write operations for the purpose of capturing backups."
msgstr ""

#: ../source/reference/command/fsync.txt:17
# 6bdddcb64f54477197930b9b7d966c32
msgid "As applications write data, MongoDB records the data in the storage layer and then writes the data to disk within the :setting:`~storage.syncPeriodSecs` interval, which is 60 seconds by default. Run :dbcommand:`fsync` when you want to flush writes to disk ahead of that interval."
msgstr ""

#: ../source/reference/command/fsync.txt:22
# 728e7293100c4284a2fb66934678dc5a
msgid "The :dbcommand:`fsync` command has the following syntax:"
msgstr ""

#: ../source/reference/command/fsync.txt:28
# 76655188059841bb9d844db9cb685a4a
msgid "The :dbcommand:`fsync` command has the following fields:"
msgstr ""

#: ../source/reference/command/fsync.txt:33
# ad464fbf01dc4d1c842c8893fc889aa4
msgid "Considerations"
msgstr ""

#: ../source/reference/command/fsync.txt:36
# 2543fa1f75ff483da1ebaab0a2e0fac3
msgid "Impact on Larger Deployments"
msgstr ""

#: ../source/reference/command/fsync.txt:38
# 427a1714cbcd4865956dcc89b66015cf
msgid "An :dbcommand:`fsync` lock is only possible on *individual* :program:`mongod` instances of a sharded cluster, not on the entire cluster. To backup an entire sharded cluster, please see :doc:`/administration/backup-sharded-clusters` for more information."
msgstr ""

#: ../source/reference/command/fsync.txt:45
# f5a6e04cf44340a495aecb3ddc3c9515
msgid "Alternatives with Journaling"
msgstr ""

#: ../source/reference/command/fsync.txt:47
# ac58e7f82326418a9edfd824a96a42e8
msgid "If your :program:`mongod` has :term:`journaling <journal>` enabled, consider using :ref:`another method <backup-with-journaling>` to create a back up of the data set."
msgstr ""

#: ../source/reference/command/fsync.txt:52
# d09bdd7859d74774891ce1863b321416
msgid "Impact on Read Operations"
msgstr ""

#: ../source/reference/command/fsync.txt:54
# 54c1e3d57ecc48ceb8e3fc8ab768c5d8
msgid "After :dbcommand:`fsync`, with lock, runs on a :program:`mongod`, all write operations will block until a subsequent unlock. Read operations *may* also block. As a result, :dbcommand:`fsync`, with lock, is not a reliable mechanism for making a :program:`mongod` instance operate in a read-only mode."
msgstr ""

#: ../source/reference/command/fsync.txt:62
# f0a50ea864864d2e99cf2f28e68dcd70
msgid "Blocked read operations prevent verification of authentication. Such reads are necessary to establish new connections to a :program:`mongod` that enforces authorization checks."
msgstr ""

#: ../source/reference/command/fsync.txt:68
# 779c436b082043d3be938da1d2a1e04b
msgid "When calling :dbcommand:`fsync` with lock, ensure that the connection remains open to allow a subsequent call to :method:`db.fsyncUnlock()`."
msgstr ""

#: ../source/reference/command/fsync.txt:71
# e736ee4d9c0c4f8ea0b597be1dc19704
msgid "Closing the connection may make it difficult to release the lock."
msgstr ""

#: ../source/reference/command/fsync.txt:74
# 4c96bb010f914ce59d527e87711b9983
msgid "Wired Tiger Compatibility"
msgstr ""

#: ../source/includes/extracts/wt-fsync-lock-compatibility-command.rst:1
# ffcb05c663a54aab9528447160120adf
msgid "With WiredTiger the :dbcommand:`fsync` command with the ``lock`` option *cannot* guarantee that the data files do not change. As a result, do not use these methods to ensure consistency for the purposes of creating backups."
msgstr ""

#: ../source/reference/command/fsync.txt:81
# 27cdb2f4623b45b884cb42932fb161d2
msgid "Examples"
msgstr ""

#: ../source/reference/command/fsync.txt:84
# 5ad95ef6512e4bee9c69120105ba3de4
msgid "Run Asynchronously"
msgstr ""

#: ../source/reference/command/fsync.txt:86
# 58f866d94b9c4e74813ac7baa393d347
msgid "The :dbcommand:`fsync` operation is synchronous by default To run :dbcommand:`fsync` asynchronously, use the ``async`` field set to ``true``:"
msgstr ""

#: ../source/reference/command/fsync.txt:94
# 04f1599874a542f188db5cfe2c32a41f
msgid "The operation returns immediately. To view the status of the :dbcommand:`fsync` operation, check the output of :method:`db.currentOp()`."
msgstr ""

#: ../source/reference/command/fsync.txt:99
# 9aa79c410b08465aa09868b0188d220d
msgid "Lock ``mongod`` Instance"
msgstr ""

#: ../source/reference/command/fsync.txt:101
# fc24f97d5b32407a84e20b25788d91d4
msgid "The primary use of :dbcommand:`fsync` is to lock the :program:`mongod` instance in order to back up the files withing :program:`mongod`\\ 's :setting:`~storage.dbPath`. The operation flushes all data to the storage layer and blocks all write operations until you unlock the :program:`mongod` instance."
msgstr ""

#: ../source/reference/command/fsync.txt:106
# 1e0b6b473d65478cbf9932ed7818d63e
msgid "To lock the database, use the ``lock`` field set to ``true``:"
msgstr ""

#: ../source/reference/command/fsync.txt:112
# 69f33622d0f049d6a4aebd4c6e7ab123
msgid "You may continue to perform read operations on a :program:`mongod` instance that has a :dbcommand:`fsync` lock. However, after the first write operation all subsequent read operations wait until you unlock the :program:`mongod` instance."
msgstr ""

#: ../source/reference/command/fsync.txt:117
# 5ea729061a5f4da9979b9a8b6ce212de
msgid "Unlock ``mongod`` Instance"
msgstr ""

#: ../source/reference/command/fsync.txt:119
# 656ae94442744b77bdaba7111ba352d0
msgid "To unlock the :program:`mongod`, use :method:`db.fsyncUnlock()`:"
msgstr ""

#: ../source/reference/command/fsync.txt:127
# 14422de88bb94648ae7b1768618c38f0
msgid "Check Lock Status"
msgstr ""

#: ../source/reference/command/fsync.txt:129
# 155c47f67a7a474bae122fba4206e647
msgid "To check the state of the fsync lock, use :method:`db.currentOp()`. Use the following JavaScript function in the shell to test if :program:`mongod` instance is currently locked:"
msgstr ""

#: ../source/reference/command/fsync.txt:143
# c1fdba74d95448ee9b957601b04ddfa3
msgid "After loading this function into your :program:`mongo` shell session call it, with the following syntax:"
msgstr ""

#: ../source/reference/command/fsync.txt:150
# 7bd5e3e66afc4662abfcae7b37908b43
msgid "This function will return ``true`` if the :program:`mongod` instance is currently locked and ``false`` if the :program:`mongod` is not locked."
msgstr ""

