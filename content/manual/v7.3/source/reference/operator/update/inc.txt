====
$inc
====

.. default-domain:: mongodb

.. facet::
   :name: programming_language
   :values: shell

.. meta::
   :description: Use the $inc operator to increment field values by specified amounts. $inc creates fields if absent, errors on null values, and is atomic within a document.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. update:: $inc

   The :update:`$inc` operator increments a field by a specified value.

Compatibility
-------------

.. |operator-method| replace:: ``$inc``

.. include:: /includes/fact-compatibility.rst

Syntax
------

The :update:`$inc` operator has the following form:

.. code-block:: javascript

   { $inc: { <field1>: <amount1>, <field2>: <amount2>, ... } }

.. include:: /includes/use-dot-notation.rst

Behavior
--------

.. include:: /includes/fact-update-operator-processing-order.rst

The :update:`$inc` operator accepts positive and negative values.

If the field does not exist, :update:`$inc` creates the field and sets
the field to the specified value.

Use of the :update:`$inc` operator on a field with a null value will
generate an error.

:update:`$inc` is an atomic operation within a single document.

.. include:: /includes/extracts/update-operation-empty-operand-expressions-inc.rst

Example
-------

Create the ``products`` collection:

.. code-block:: javascript

   db.products.insertOne(
      {
        _id: 1,
        sku: "abc123",
        quantity: 10,
        metrics: { orders: 2, ratings: 3.5 }
      }
   )

The following :method:`~db.collection.updateOne()` operation uses the
:update:`$inc` operator to:

- increase the ``"metrics.orders"`` field by 1
- increase the ``quantity`` field by -2 (which decreases ``quantity``)


.. code-block:: javascript

   db.products.updateOne(
      { sku: "abc123" },
      { $inc: { quantity: -2, "metrics.orders": 1 } }
   )

The updated document would resemble:

.. code-block:: javascript

   {
     _id: 1,
     sku: 'abc123',
     quantity: 8,
     metrics: { orders: 3, ratings: 3.5 }
   }

.. seealso::

   - :method:`db.collection.updateMany()`
   - :method:`db.collection.findAndModify()`

