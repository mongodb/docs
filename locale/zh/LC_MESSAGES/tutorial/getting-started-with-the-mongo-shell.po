# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:3
msgid "Getting Started with the ``mongo`` Shell"
msgstr " ``mongo`` 命令行入门"

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:7
msgid ""
"This document provides a basic introduction to using the :program:`mongo` "
"shell. See :doc:`/installation` for instructions on installing MongoDB for "
"your system."
msgstr "本文提供一个基本的介绍使用  :program:`mongo` 命令行."
"参见 :doc:`/installation` 为您的系统安装MongoDB"

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:12
msgid "Start the ``mongo`` Shell"
msgstr "启动  ``mongo`` 命令行"

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:14
msgid ""
"To start the :program:`mongo` shell and connect to your :doc:`MongoDB "
"</reference/program/mongod>` instance running on **localhost** with "
"**default port**:"
msgstr "启动 :program:`mongo` 命令行连接到 **本地主机** **默认端口** "
"运行您的MongoDB "

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:17
msgid "Go to your ``<mongodb installation dir>``:"
msgstr "到您的 ``<MongoDB安装目录>``:"

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:23
msgid "Type ``./bin/mongo`` to start :program:`mongo`:"
msgstr "输入 ``./bin/mongo`` 运行  :program:`mongo` :"

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:29
msgid ""
"If you have added the ``<mongodb installation dir>/bin`` to the ``PATH`` "
"environment variable, you can just type ``mongo`` instead of "
" ``./bin/mongo`` ."
msgstr "如果你已经添加 ``<mongodb installation dir>/bin`` 添加到PATH环境变量中."
"你只要输入 ``mongo`` 代替 ``./bin/mongo`` ."

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:33
msgid "To display the database you are using, type ``db``:"
msgstr "显示您正在使用的数据库,输入 ``db`` :"

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:39
msgid ""
"The operation should return ``test``, which is the default database. To "
"switch databases, issue the ``use <db>`` helper, as in the following "
"example:"
msgstr "该操作返回 ``test`` , 这是默认的数据库.要切换数据库,"
"输入  ``use <db>`` .如下面的例子:"

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:47
msgid ""
"To list the available databases, use the helper ``show dbs``. See also :ref"
":`mongo-shell-getSiblingDB` to access a different database from the current "
"database without switching your current database context (i.e. ``db.``.)"
msgstr "要列出可用的数据库.使用 ``show dbs`` .参见 :ref"
":`mongo-shell-getSiblingDB` 从当前数据库访问不同的数据库,"
"而无需切换当前的数据库环境(即db)."

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:52
msgid ""
"To start the :program:`mongo` shell with other options, see :ref:`examples "
"of starting up mongo <mongo-usage-examples>` and :doc:`mongo reference "
"</reference/program/mongo>` which provides details on the available options."
msgstr "启动 :program:`mongo` 命令行的其它选项,请参见 :ref:`examples"
" of starting up mongo <mongo-usage-examples>` 它提供可用选项的详细信息."

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:59
msgid ""
"When starting, :program:`mongo` checks the user's :envvar:`HOME` directory "
"for a JavaScript file named :ref:`.mongorc.js <mongo-mongorc-file>`. If "
"found, :program:`mongo` interprets the content of :file:`.mongorc.js` before"
" displaying the prompt for the first time. If you use the shell to evaluate "
"a JavaScript file or expression, either by using the :option:`--eval <mongo "
"--eval>` option on the command line or by specifying :ref:`a .js file to "
"mongo <mongo-shell-file>`, :program:`mongo` will read the ``.mongorc.js`` "
"file *after* the JavaScript has finished processing. You can prevent "
"``.mongorc.js`` from being loaded by using the :option:`--norc` option."
msgstr ""
"在启动时, :program:`mongo` 检查用户 :envvar:`HOME` 目录名为"
" :ref:`.mongorc.js <mongo-mongorc-file>` 的JavaScript文件. 如果发现,"
" :program:`mongo` 显示的提示是首次解释 :file:`.mongorc.js` 的内容."
"如果你使用命令行来评估一个JavaScript 文件或表达式,或者通过使用命令行选项"
" :option:`--eval <mongo --eval>` 或指定的 :ref:`a .js file to"
"mongo <mongo-shell-file>` , *之后* , :program:`mongo` 将读取JavaScript处理完成的"
" ``.mongorc.js`` 文件.你可以使用选项 :option:`--norc` 来防止"
" ``.mongorc.js`` 被加载."


#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:73
msgid "Executing Queries"
msgstr "执行查询"

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:75
msgid ""
"From the :program:`mongo` shell, you can use the :doc:`shell methods "
"</reference/method>` to run queries, as in the following example:"
msgstr "从 :program:`mongo` 命令行,你可以使用 :doc:`shell methods "
"</reference/method>` 来运行查询.如下面的例子:"

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:82
msgid "The ``db`` refers to the current database."
msgstr "该 ``db`` 是指当前的数据库."

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:84
msgid ""
"The ``<collection>`` is the name of the collection to query. See :ref"
":`mongo-shell-help-collection` to list the available collections."
msgstr "该 ``<collection>`` 是查询的集合名称. 参见"
" :ref:`mongo-shell-help-collection` 列出可用的集合."

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:87
msgid ""
"If the :program:`mongo` shell does not accept the name of the collection, "
"for instance if the name contains a space, hyphen, or starts with a number, "
"you can use an alternate syntax to refer to the collection, as in the "
"following:"
msgstr "如果该 :program:`mongo` 命令行不接受的集合名称.例如:集合名称中包含"
" **空格** , **连字符(-)** ,或以 **数字** 开头,你可以使用替代语法来引用集合."
"如下面的例子:"


#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:98
msgid ""
"The :method:`~db.collection.find()` method is the JavaScript method to "
"retrieve documents from ``<collection>``. The "
":method:`~db.collection.find()` method returns a :term:`cursor` to the "
"results; however, in the :program:`mongo` shell, if the returned cursor is "
"not assigned to a variable using the ``var`` keyword, then the cursor is "
"automatically iterated up to 20 times to print up to the first 20 documents "
"that match the query. The :program:`mongo` shell will prompt ``Type it`` to "
"iterate another 20 times."
msgstr "该 :method:`~db.collection.find()` 方法是JavaScript检索"
" ``<collection>`` 的方法. :method:`~db.collection.find()` 返回一个游标的结果."
"然而,在 :program:`mongo` 命令行,如果返回的游标没有分配给使用var关键字的变量."
"则游标被最多自动迭代20次,最多输出与查询匹配的头20个文档."
"该 :program:`mongo` 命令行提示 ``Type it`` 迭代出其它20个文档."

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:108
msgid ""
"You can set the ``DBQuery.shellBatchSize`` attribute to change the number of"
" iteration from the default value ``20``, as in the following example which "
"sets it to ``10``:"
msgstr "你可以设置 ``DBQuery.shellBatchSize`` 属性改变迭代默认值 ``20``,"
"在下面的例子中设置它为 ``10``:"

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:116
msgid ""
"For more information and examples on cursor handling in the :program:`mongo`"
" shell, see :doc:`/core/cursors`."
msgstr "更多游标在:program:`mongo` 命令行的信息和处理的例子,"
"参见 :doc:`/core/cursors` ."

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:119
msgid ""
"See also :ref:`mongo-shell-help-cursor` for list of cursor help in the "
":program:`mongo` shell."
msgstr "参见  :ref:`mongo-shell-help-cursor` 游标在"
" :program:`mongo` 命令行的帮助列表."


#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:122
msgid ""
"For more documentation of basic MongoDB operations in the :program:`mongo` "
"shell, see:"
msgstr "更多在 :program:`mongo` 命令行的基本MongoDB操作,参见:"

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:125
msgid ""
"`Getting Started with MongoDB <http://docs.mongodb.org/getting-"
"started/shell>`_"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:127
msgid ":doc:`/reference/mongo-shell`"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:128
msgid ":doc:`/core/read-operations`"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:129
msgid ":doc:`/core/write-operations`"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:130
msgid ":doc:`/administration/indexes`"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:135
msgid "Print"
msgstr "输出"

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:137
msgid ""
"The :program:`mongo` shell automatically prints the results of the "
":method:`~db.collection.find()` method if the returned cursor is not "
"assigned to a variable using the ``var`` keyword. To format the result, you "
"can add the ``.pretty()`` to the operation, as in the following:"
msgstr "该 :program:`mongo` 命令行自动输出 :method:`~db.collection.find()` "
"方法的结果.如果返回的游标没有分配给使用var关键字的变量.你可以添加"
" ``.pretty()`` 的操作,如下面的例子:"

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:147
msgid ""
"In addition, you can use the following explicit print methods in the "
":program:`mongo` shell:"
msgstr "另外,你可以在 :program:`mongo` 命令行下准确的输出该方法:"

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:150
msgid "``print()`` to print without formatting"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:152
msgid ""
" ``print(tojson(<obj>))`` to print with :term:`JSON` formatting and "
"equivalent to ``printjson()`` "
msgstr " ``print(tojson(<obj>))`` 输出格式化的 :term:`JSON` 与 ``printjson()`` 相当"

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:155
msgid ""
" ``printjson()`` to print with :term:`JSON` formatting and equivalent to "
" ``print(tojson(<obj>))`` "
msgstr " ``printjson()`` 输出格式化的 :term:`JSON` 与 ``print(tojson(<obj>))`` 相当"

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:159
msgid "Evaluate a JavaScript File"
msgstr "评估一个JavaScript文件"

#: ../source/includes/fact-execute-javascript-from-shell.rst:1
msgid ""
"You can execute a ``.js`` file from within the :program:`mongo` shell, using"
" the :method:`load()` function, as in the following:"
msgstr "你可以在 :program:`mongo` 命令行下执行一个 ``.js`` 文件."
"使用  :method:`load()` 函数,如下面的例子:"

#: ../source/includes/fact-execute-javascript-from-shell.rst:8
msgid "This function loads and executes the :file:`myjstest.js` file."
msgstr "这个函数加载和执行 :file:`myjstest.js` 文件"

#: ../source/includes/fact-execute-javascript-from-shell.rst:10
msgid ""
"The :method:`load()` method accepts relative and absolute paths. If the "
"current working directory of the :program:`mongo` shell is :file:`/data/db`,"
" and the :file:`myjstest.js` resides in the :file:`/data/db/scripts` "
"directory, then the following calls within the :program:`mongo` shell would "
"be equivalent:"
msgstr " :method:`load()` 方法接受相对和绝对路径.如果 :program:`mongo` 命令行"
"当前的工作目录是 :file:`/data/db` ,而 :file:`myjstest.js` 驻留在"
" :file:`/data/db/scripts` 目录,那么 :program:`mongo`  命令行在下面的调用是相等的:"

#: ../source/includes/fact-execute-javascript-from-shell.rst:21
msgid ""
"There is no search path for the :method:`load()` function. If the desired "
"script is not in the current working directory or the full specified path, "
":program:`mongo` will not be able to access the file."
msgstr " :method:`load()` 函数不支持搜索路径功能."
"如果所需的script不是在当前工作目录下或完整指定的路径,mongo将不能访问该文件"

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:166
msgid "Use a Custom Prompt"
msgstr "使用自定义提示"

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:168
msgid ""
"You may modify the content of the prompt by creating the variable ``prompt``"
" in the shell. The prompt variable can hold strings as well as any arbitrary"
" JavaScript. If ``prompt`` holds a function that returns a string, "
":program:`mongo` can display dynamic information in each prompt. Consider "
"the following examples:"
msgstr "你可以在命令行下创建修改提示内容的变量. ``prompt`` 变量可以保存字符串"
"以及任意JavaScript.如果 ``prompt`` 保存函数返回一个字符串, :program:`mongo` "
"可以显示每个动态的 ``prompt`` 信息.请看下面例子:"

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:0
#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:0
#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:0
msgid "Example"
msgstr "例子"

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:176
msgid ""
"Create a prompt with the number of operations issued in the current session,"
" define the following variables:"
msgstr "创建与当前会话发出操作的数量提示,定义如下变量:"

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:186
#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:207
#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:227
msgid "The prompt would then resemble the following:"
msgstr "该提示将类似于以下内容:"

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:196
msgid ""
"To create a :program:`mongo` shell prompt in the form of "
"``<database>@<hostname>$`` define the following variables:"
msgstr "在 ``<database>@<hostname>$`` 定义以下变量的形式创建一个"
" :program:`mongo` 命令行提示符:"

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:217
msgid ""
"To create a :program:`mongo` shell prompt that contains the system up time "
"*and* the number of documents in the current database, define the following "
"prompt variable:"
msgstr "要创建一个 :program:`mongo` 命令行提示符包含系统时间和文件"
"在当前数据库的数量,定义如下提示变量:"

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:235
msgid "Use an External Editor in the ``mongo`` Shell"
msgstr "在 ``mongo`` 命令行使用外部编辑器"

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:239
msgid ""
"In the :program:`mongo` shell you can use the ``edit`` operation to edit a "
"function or variable in an external editor. The ``edit`` operation uses the "
"value of your environments ``EDITOR`` variable."
msgstr "在 :program:`mongo` 命令行可以使用 ``edit`` 操作在外部编辑器编辑"
"一个功能或变量.编辑操作使用您的EDITOR环境变量的值."

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:243
msgid ""
"At your system prompt you can define the ``EDITOR`` variable and start "
":program:`mongo` with the following two operations:"
msgstr "在您的系统提示下你可以定义EDITOR变量，并开始 :program:`mongo` 以下两个操作："

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:251
msgid "Then, consider the following example shell session:"
msgstr "然后,考虑命令行会话下面的例子:"

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:273
msgid ""
"As :program:`mongo` shell interprets code edited in an external editor, it "
"may modify code in functions, depending on the JavaScript compiler. For "
":program:`mongo` may convert ``1+1`` to ``2`` or remove comments. The actual"
" changes affect only the appearance of the code and will vary based on the "
"version of JavaScript used but will not affect the semantics of the code."
msgstr "作为外部编辑器在 :program:`mongo` 命令行解释编辑代码时,它可以在功能上修改代码,"
"这取决于JavaScript编译.对于 :program:`mongo` 可以转换 ``1+1`` to ``2`` 或 remove comments."
"实际变化影响的代码只是外观,并会基于JavaScript使用的版本不同而异."
"但不会影响该代码的语义."

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:283
msgid "Exit the Shell"
msgstr "退出命令行"

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:285
msgid "To exit the shell, type ``quit()`` or use the ``<Ctrl-c>`` shortcut."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:287
msgid ":gettingstarted:`Getting Started Guide </shell>`"
msgstr ""
