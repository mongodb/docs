===========================================
Shard a Collection Using a Hashed Shard Key
===========================================

.. default-domain:: mongodb

.. versionadded:: 2.4

:ref:`Hashed shard keys <sharding-hashed-sharding>` use a :ref:`hashed
index <index-hashed-index>` of a field as the :term:`shard key` to
partition data across your sharded cluster.

For suggestions on choosing the right field as your hashed shard key, see
:ref:`sharding-hashed-sharding`. For limitations on hashed indexes, see
:ref:`index-hashed-index`.

.. include:: /includes/note-hashed-shard-key-during-chunk-migration.rst

Shard the Collection
--------------------

To shard a collection using a hashed shard key, use an operation in
the :program:`mongo` that resembles the following:

.. code-block:: javascript

   sh.shardCollection( "records.active", { a: "hashed" } )

This operation shards the ``active`` collection in the ``records``
database, using a hash of the ``a`` field as the shard key.

Specify the Initial Number of Chunks
------------------------------------

If you shard an empty collection using a hashed shard key, MongoDB
automatically creates and migrates empty chunks so that each shard
has two chunks. To control how many chunks MongoDB creates when
sharding the collection, use :dbcommand:`shardCollection` with the
``numInitialChunks`` parameter.

.. important:: MongoDB 2.4 adds support for hashed shard keys. After
   sharding a collection with a hashed shard key, you must use the
   MongoDB 2.4 or higher :program:`mongos` and :program:`mongod`
   instances in your sharded cluster.

.. include:: /includes/warning-hashed-index-floating-point.rst
