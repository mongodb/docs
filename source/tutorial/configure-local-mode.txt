=======================================================
Configure Local Mode if Servers Have No Internet Access
=======================================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Overview
--------

If the servers that run your Automation Agents or Backup Daemons do not have
internet access, you must configure |onprem| to run in Local Mode, and you
must manually provide the MongoDB binaries and :term:`version manifest
<version manifest>`. As MongoDB Inc. releases new versions, you must update
the binaries and manifest.

The Automation Agents require MongoDB binaries to install MongoDB on
new deployments and to change MongoDB versions on existing ones. The Backup
Daemons require the binaries in order to run the correct versions of
MongoDB for the databases being backed up.

In a default configuration, the agents and daemons access the binaries over
the internet from MongoDB Inc. The :setting:`Version Manifest Source` configuration
setting determines whether |onprem| runs in Internet Mode or Local Mode.

.. _versions-directory:

Versions Directory
~~~~~~~~~~~~~~~~~~

The versions directory on the |onprem| server(s) holds ``.tgz`` archive files
of the MongoDB binaries that the agents and daemons require in order to manage
and back up your deployments. You specify this directory in the
:setting:`Versions Directory` setting.

If you run in Local Mode, you must manually download the binaries from MongoDB
Inc. and place them in this directory. The "mongodb-mms" user must have
permission to read the archives in this directory.

.. _version-manifest:

Version Manifest
~~~~~~~~~~~~~~~~

The MongoDB version manifest makes |onprem| aware of all released MongoDB
versions. In Local Mode, the Automation Agents and Backup Daemons can deploy
versions for which archives exist in the :ref:`versions directory
<versions-directory>`. For a given |onprem| :term:`group`, the version must
also be selected in the group's :ref:`Version Manager <version-manager>`.

In Internet Mode, |onprem| automatically updates the version manifest from
MongoDB, Inc. In Local Mode, you must update the version manifest as MongoDB
releases new versions.

Required Access
---------------

To configure Local Mode, you must have :ref:`Global Owner <global-owner-role>`
access to |onprem|.

Prerequisites
-------------

Before configuring |onprem| to run in Local Mode, you must meet the
prerequisites described here.

.. _local-mode-determine-versions:

Determine Which Binaries to Store
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The :ref:`versions directory <versions-directory>` requires archives of
following versions of MongoDB:

- Versions that are used by existing deployments that you will import into |onprem|.

- Versions you will use to create new deployments through |onprem| Automation.

- Versions you will use during an intermediary step in an upgrade. For example,
  if you will import an existing deployment of MongoDB 2.6 Community and upgrade it
  to MongoDB 3.0 Community and then to MongoDB 3.0 Enterprise, you must include
  all those editions and versions.

- If you use both the MongoDB Community edition and the MongoDB Enterprise
  subscription edition, you must include the required versions of both.

The archives required for specific versions include:

.. list-table::
   :widths: 30 30 60
   :header-rows: 1

   * - Edition
     - Version
     - Archive
   * - Community
     - 2.6+, 2.4+
     - Linux archive at `<http://www.mongodb.org/downloads>`_.
   * - Community
     - 3.2+, 3.0+
     - Platform-specific archive available from `<http://www.mongodb.org/downloads>`_.
   * - Enterprise
     - 3.2+, 3.0+, 2.6+, 2.4+
     - Platform-specific archive available from `<http://mongodb.com/download>`_.

.. warning::

   Uncheck every version you do not plan to deploy before enabling
   Local Mode. If you leave unused versions checked and did not
   download their associated binaries, |onprem| fails a pre-flight
   check when it starts.

   If you did not uncheck unused versions or download the associated binaries, you can bypass the |onprem| pre-flight check. See :ref:`Start |onprem| When All Versions Are Not Downloaded <fix-local-mode-start-failure>` for the procedure. 

Download Binaries Before Importing a Deployment
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Populate the :ref:`versions directory <versions-directory>` with all
required MongoDB versions **before you import any existing MongoDB
deployments** into |onprem|. If a version is missing, the Automation
Agent cannot manage the deployment.

Install Enterprise Dependencies (MongoDB Enterprise Only)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you will run :term:`MongoDB Enterprise` and use Linux servers, then you must
manually install a set of dependencies to each server **before installing MongoDB**.
The MongoDB manual provides the appropriate command to install the dependencies.
See the link for the server's operating system:

.. include:: /includes/list-links-per-os-for-enterprise-dependencies.rst

Configure Local Mode
--------------------

.. include:: /includes/steps/configure-local-mode.rst

.. _fix-local-mode-start-failure:

Start |onprem| When All Versions Are Not Downloaded
---------------------------------------------------

By default, |onprem| enables you to install all versions of MongoDB.
This is because |onprem| also sets the default source of MongoDB
installers to be over the Internet from MongoDB.

Once you set |onprem| to *Local Mode*, |onprem| checks to see if the
installers for all of the versions you set in Version Manager can be
found on the |onprem| server. If these installers are not found,
|onprem| fails this "pre-flight" check and stops.

To allow you to start |onprem|, you can either install all of the
installers for every version of MongoDB or change the configuration of
|onprem| temporarily to allow it to start and let you change the
versions of MongoDB your |onprem| server supports.

To change the |onprem| configuration temporarily:

1. Login to the |onprem| server. 

2. Open the |onprem| configuration properties file.
  
   .. code-block:: sh

      sudo vi /opt/mongodb/mms/conf/conf-mms.properties

   .. note::
      This path is for :doc:`RPM </tutorial/install-on-prem-with-rpm-packages>` 
      and :doc:`DEB </tutorial/install-on-prem-with-deb-packages>` 
      package installs. 
      The :doc:`Linux archive </tutorial/install-on-prem-from-archive>` 
      and :doc:`Windows </tutorial/install-on-prem-from-archive>` installs install in different paths.

3. Add a line changing the source of MongoDB versions to be MongoDB,
   Inc. via the Internet.

   .. code-block:: ini

      automation.versions.source=mongodb

4. Save and close the file.

5. If you run |onprem| with high availability, you must repeat steps
   1-4 on each |onprem| server.

6. Start the |onprem| service on each |onprem| server.

   .. code-block:: sh

      sudo service mongodb-mms start

7. Change the versions of MongoDB that Automation Agents can install.
   See :doc:`how to set the MongoDB versions that automation can install </tutorial/configure-available-mongodb-version/>` for
   details.
