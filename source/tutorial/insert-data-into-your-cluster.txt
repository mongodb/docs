:noprevnext:

====================================
Insert and View Data in Your Cluster
====================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Insert and View Data
--------------------

*Estimated completion time: 5 minutes*

The following steps in this tutorial show you how to insert and
interact with data on your cluster. Select the appropriate tab based
on how you would like to interact with your cluster data:

.. tabs::

   tabs:
     - id: atlas-gui
       name: Atlas GUI
       content: |

         Insert Data Using the Atlas UI 
         ------------------------------

         |service| provides a :abbr:`GUI (Graphical user interface)`
         to interact with data in your cluster, called the
         :guilabel:`Data Explorer`. You can use the
         :guilabel:`Data Explorer` to import
         :ref:`sample data <sample-data>` provided by |service| into
         your cluster.

         To import sample data into your cluster using the
         :guilabel:`Data Explorer`:
         
         .. include:: /includes/steps/getting-started-explorer-import.rst

         .. seealso::

            For more information on Data Explorer in |service|, see
            :doc:`/data-explorer`.

         View and Edit Your Cluster Data
         -------------------------------

         *Estimated completion time: 2 minutes*

         Now that you have imported some data into your cluster, you
         can try viewing and modifying it.

         .. include:: /includes/steps/getting-started-explorer-edit.rst

         Summary
         -------

         Congratulations! You have just set up an |service| cluster to
         host your data, populated that cluster with sample data, and
         learned how to interact with that data using the |service|
         :guilabel:`Data Explorer`.
         
     - id: driver
       name: Driver (Python)
       content: |

         Insert Data into Your Atlas Cluster Using the Driver
         ----------------------------------------------------

         *Estimated completion time: 3 minutes*

         Now that you have established a client to connect to your
         cluster, you can create a database and a collection on your
         cluster and insert some data.

         .. include:: /includes/steps/gswa-driver-insert.rst

         View Your Cluster Data
         ----------------------

         *Estimated completion time: 1 minute* 

         Now that you have successfully inserted a document into
         your |service| cluster using the PyMongo driver, you can try
         reading that data. You can view your data using the
         |service| :doc:`Data Explorer </data-explorer/>`.

         To view your cluster data:

         .. include:: /includes/steps/gswa-driver-view-data-de.rst

         .. note::

            You may see a different value for
            :manual:`ObjectId </reference/bson-types/#objectid>`,
            because it is a randomly generated value.

         .. seealso::

            For information on querying data in MongoDB, see
            :manual:`Query Documents </tutorial/query-documents/>`.

         Summary
         -------

         Congratulations! You've just set up an |service| cluster to
         host your data and used the PyMongo driver to write and read
         data to and from your cluster.

     - id: shell
       name: Mongo Shell
       content: |

         Insert Data Into Your Cluster Using the Mongo Shell
         ---------------------------------------------------

         *Estimated completion time: 1 minute* 

         Now that you have successfully connected to your |service|
         cluster using the Mongo shell, let's insert a document into
         your cluster.

         .. include:: /includes/steps/getting-started-shell-insert.rst

         View Data Using the Mongo Shell
         -------------------------------

         *Estimated completion time: 1 minute* 

         Now we can try reading the data we just inserted into our
         cluster.

         The following command searches our ``people`` collection for
         documents which have a ``name.last`` value of ``Turing``:

         .. code-block:: none

            db.people.find({ "name.last": "Turing" })

         When you run this command, you should see the following
         output:

         .. code-block:: none
            :copyable: false

            {
              "_id" : ObjectId("5c9bca3c5345268c98ac7abc"),
              "name" : {
                "first" : "Alan",
                "last" : "Turing"
              },
              "birth" : ISODate("1912-06-23T04:00:00Z"),
              "death" : ISODate("1954-06-07T04:00:00Z"),
              "contribs" : [
                "Turing machine",
                "Turing test",
                "Turingery"
              ],
              "views" : NumberLong(1250000)
            }

         .. note::

            You may see a different value for
            :manual:`ObjectId </reference/bson-types/#objectid>`,
            because it is a randomly generated value.

         .. seealso::

            For more information on querying data in MongoDB, see
            :manual:`Query Documents </tutorial/query-documents/>`.

         Summary
         -------
         
         Congratulations! You've just set up an |service| cluster to
         host your data, and used the Mongo shell to write and read
         data to and from your cluster.

Moving Forward
--------------

If you continue to grow your cluster, consider
:doc:`scaling your cluster </scale-cluster/>` to support more
users and operations.
