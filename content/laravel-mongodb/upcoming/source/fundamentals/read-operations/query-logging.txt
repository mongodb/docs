.. _laravel-query-logging:

====================
Enable Query Logging
====================

.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: monitoring, CRUD, code example

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

In this guide, you can learn how to enable query logging in
{+odm-long+}. Query logging can help you debug your queries and monitor
database interactions.

.. include:: /includes/fundamentals/read-operations/before-you-get-started.rst

Enable Logs On a Connection
---------------------------

To enable logs on a connection, you can use the ``enableQueryLog()``
method on the ``DB`` facade. This method enables MongoDB command logging
on any queries that you perform on the database connection.

After you enable query logging, any queries you perform are stored in
memory. To retrieve the logs, use one of the following methods:

- ``getQueryLog()``: Returns a log of MongoDB queries
- ``getRawQueryLog()``: Returns a log of raw MongoDB queries

The following example enables query logging, performs some queries, then
prints the query log:

.. io-code-block::
   :copyable: true

   .. input:: /includes/fundamentals/read-operations/ReadOperationsTest.php
      :language: php
      :dedent:
      :start-after: start-query-log
      :end-before: end-query-log
      :emphasize-lines: 1, 7

   .. output::
      :language: json
      :visible: false

      {
        "query": "{ \"find\" : \"movies\", \"filter\" : { \"title\" : \"Carrie\" } }",
        "bindings": [],
        "time": 29476
      }
      {
        "query": "{ \"find\" : \"movies\", \"filter\" : { \"year\" : { \"$lt\" : { \"$numberInt\" : \"2005\" } } } }",
        "bindings": [],
        "time": 29861
      }
      {
        "query": "{ \"find\" : \"movies\", \"filter\" : { \"imdb.rating\" : { \"$gt\" : { \"$numberDouble\" : \"8.5\" } } } }",
        "bindings": [],
        "time": 27251
      }

Additional Information
----------------------

To learn more about connecting to MongoDB, see the
:ref:`laravel-connect-to-mongodb`.

To learn how to retrieve data based on filter criteria, see the
:ref:`laravel-fundamentals-read-retrieve` guide.
