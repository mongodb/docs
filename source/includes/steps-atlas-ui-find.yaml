title: "Select the database for the collection."
level: 4
ref: atlas-ui-select-db
content: |
   The main panel and :guilabel:`Namespaces` on the left side list the
   collections in the database.

   .. figure:: /images/data-explorer-dbs.png
      :figwidth: 696px
      :alt: Screenshot highlighting databases in the Atlas UI.
---
title: "Select the collection on the left-hand side or in the main panel."
level: 4
ref: atlas-ui-select-collection
content: |
   The main panel displays the :guilabel:`Find` view and the
   :guilabel:`Indexes` view.
---
title: "Select the :guilabel:`Find` view."
level: 4
ref: atlas-ui-select-find
content: |
   The panel displays the documents in the collection. Collections of
   smaller documents display up to 20 documents per page. Collections 
   of larger documents display a single document per page.
---
title: "Specify a query to find specific documents."
optional: true
level: 4
ref: atlas-ui-query-filter
content: |

   You can use the query bar to search for specific documents in your 
   collection. You can specify one or more of the following in the 
   query bar: 
   
   - A filter condition
   - A project document to include and exclude specific fields in the 
     results
   - A sort order for the documents in the results
   - A collation document for language specific rules.

   .. tabs:: 

      .. tab:: Filter
         :tabid: filter

         To specify a filter condition, type in a :ref:`query filter 
         <read-operations-query-argument>` document in the 
         :guilabel:`Filter` field. For example, to specify equality 
         condition, use a filter document of the form:

         .. code-block:: javascript

            { <field1>: <value1>, ... }

         To use :ref:`query operators <query-selectors>` to specify a 
         filter condition, use a filter document of the form:

         .. code-block:: javascript

            { <field1>: { <queryoperator>: <value1> }, ... }

         .. note::

            The {+atlas-ui+} does not support date queries 
            that use the ``IsoDate()`` function. Instead, use the 
            :manual:`MongoDB Extended JSON (v2) 
            </reference/mongodb-extended-json/>` ``$date`` data type 
            for date queries.

         For example, the following query returns all documents where 
         the date added to a ``created_at`` field is equal to or more 
         recent than midnight on January 1, 2019, |utc| time:

         .. code-block:: javascript
            :copyable: false
         
            { created_at: { $gte: { $date: "2019-01-01T00:00-00:00" } } }

         For more information on specifying query filters, including 
         compound conditions, see :manual:`Query Documents 
         </tutorial/query-documents>`.

      .. tab:: Project 
         :tabid: project
   
         To specify the document fields to include or exclude in the 
         results, click :guilabel:`Options` in the query bar and 
         specify the document fields in the :guilabel:`Project` field. 
         
         To include fields, specify the field name and set to ``1`` in 
         the project document. For example, to include the ``year`` and 
         ``name`` fields in the documents:

         .. code-block:: javascript
            :copyable: false

            { year: 1, name: 1 }

         |service| returns the fields specified in the 
         :guilabel:`Project` field and the ``_id`` field, which is 
         returned unless it is explicitly excluded.

         To exclude fields, specify the field name and set to ``0`` in 
         the project document. For example, to exclude the ``year`` and 
         ``name`` fields in the documents:

         .. code-block:: javascript
            :copyable: false

            { year: 0, name: 0 }

         |service| returns all fields except the fields specified in 
         :guilabel:`Project`.

         To learn more about project documents, see 
         :pipeline:`$project`.

      .. tab:: Sort 
         :tabid: sort

         To sort the order of the documents in the results, click 
         :guilabel:`Options` in the query bar and enter the ``sort`` 
         document in the :guilabel:`Sort` field. 

         - To specify ascending order for a field, set the field to 
           ``1`` in the sort document.
         - To specify descending order for a field, set the field to 
           ``-1`` in the sort documents.

         For example, the following ``sort`` document sorts results 
         first by ``year`` in descending order, and within each year, 
         sorts by ``name`` in ascending order:

         .. code-block:: javascript
            :copyable: false

            { year: -1, name: 1 }

         To learn more about sort documents, see 
         :pipeline:`$sort`.

      .. tab:: Collation 
         :tabid: collation

         .. include:: /includes/serverless-preview-dont-use.rst

         To specify language-specific rules for string comparison, such 
         as rules for lettercase and accent marks, click 
         :guilabel:`Options` in the query bar and enter the collation 
         document in the :guilabel:`Collation` field. Use the 
         ``locale`` field in the collation document to specify the `ICU 
         Locale code <http://userguide.icu-project.org/locale>`__ for 
         the desired language. For example, to use the ``pinyin`` 
         variant of the Chinese collation, use the following collation 
         document:

         .. code-block:: javascript

            { "locale" : "zh@collation=pinyin" }

         To learn more about collation documents, see 
         :manual:`Collation </reference/collation/>`.

   .. note:: 

      As you type, the :guilabel:`Apply` button is disabled and the 
      field name in the User Interface turns red until a valid query is 
      entered.
---
title: "Click :guilabel:`Apply` to run your query."
level: 4
ref: atlas-ui-run
content: ""
...
