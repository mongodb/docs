.. _mongod:

==========
``mongod``
==========

.. default-domain:: mongodb

Synopsis
--------

:program:`mongod` is the primary daemon process for the MongoDB
system. It handles data requests, manages data format, and performs
background management operations.

This document provides a complete overview of all command line options
for :program:`mongod`. These options are primarily useful for testing
purposes. In common operation, use the :doc:`configuration file
options </reference/configuration-options>` to control the behavior of
your database, which is fully capable of all operations described
below.

Options
-------

.. only:: (not man)

   .. class:: hidden

      .. binary:: mongod

Core Options
~~~~~~~~~~~~

.. program:: mongod

.. include:: /includes/option/option-mongod-help.rst

.. include:: /includes/option/option-mongod-version.rst

.. include:: /includes/option/option-mongod-config.rst

.. include:: /includes/option/option-mongod-verbose.rst

.. include:: /includes/option/option-mongod-quiet.rst

.. include:: /includes/option/option-mongod-port.rst

.. include:: /includes/option/option-mongod-bind_ip.rst

.. include:: /includes/option/option-mongod-maxConns.rst

.. include:: /includes/option/option-mongod-objcheck.rst

.. include:: /includes/option/option-mongod-noobjcheck.rst

.. include:: /includes/option/option-mongod-logpath.rst

.. include:: /includes/option/option-mongod-logappend.rst

.. include:: /includes/option/option-mongod-syslog.rst

.. include:: /includes/option/option-mongod-pidfilepath.rst

.. include:: /includes/option/option-mongod-.rst

.. option:: --keyFile <file>

   Specify the path to a key file to store authentication
   information. This option is only useful for the connection between
   replica set members.

   .. seealso:: :ref:`Replica Set Security <replica-set-security>`
      and :doc:`/administration/replica-sets`.

.. option:: --nounixsocket

   Disables listening on the UNIX socket. {{program}} always
   listens on the UNIX socket, unless :option:`--nounixsocket` is set,
   :setting:`bind_ip` is *not* set, or :setting:`bind_ip` does *not*
   specify ``127.0.0.1``.

   .. |mongodb-package| replace:: {{program}}

   .. include:: /includes/note-deb-and-rpm-default-to-localhost.rst

.. option:: --unixSocketPrefix <path>

   Specifies a path for the UNIX socket. Unless this option has a
   value {{program}} creates a socket with ``/tmp`` as a
   prefix.

   MongoDB will *always* create and listen on a UNIX socket, unless
   :option:`--nounixsocket` is set, :setting:`bind_ip` is *not* set,
   or :setting:`bind_ip` does *not* specify ``127.0.0.1``.

.. option:: --fork

   Enables a :term:`daemon` mode for {{program}} that runs the
   process to the background. This is the normal mode of operation, in
   production and production-like environments, but may *not* be
   desirable for testing.

.. option:: --auth

   Enables database authentication for users connecting from remote
   hosts. Configure users via the :doc:`mongo shell
   </reference/program/mongo>`. If no users exist, the localhost interface
   will continue to have access to the database until the you create
   the first user.

   See the :doc:`Security and Authentication </core/security>`
   page for more information regarding this functionality.

.. option:: --saslServiceName

   .. versionadded:: 2.4.6
      Allows users to override the default :doc:`Kerberos
      </tutorial/control-access-to-mongodb-with-kerberos-authentication>`
      service name component of the :doc:`Kerberos
      </tutorial/control-access-to-mongodb-with-kerberos-authentication>`
      principal name, on a per-instance basis. If unspecified, the
      default value is ``mongodb``.

   Only settable during start-up. The :dbcommand:`setParameter` command
   does not change this setting.

   Only available on MongoDB Enterprise.

   .. important::

      Ensure that your driver supports alternate service names.

.. option:: --cpu

   Forces {{program}} to report the percentage of CPU time in
   write lock. {{program}} generates output every four
   seconds. MongoDB writes this data to standard output or the logfile
   if using the :setting:`logpath` option.

.. option:: --dbpath <path>

   Specify a directory for the {{program}} instance to store its
   data. Typical locations include: ``/srv/mongodb``,
   ``/var/lib/mongodb`` or ``/opt/mongodb``

   Unless specified, {{program}} will look for data files in the
   default ``/data/db`` directory. (Windows systems use the
   ``\data\db`` directory.) If you installed using a package
   management system. Check the ``/etc/mongodb.conf`` file provided by
   your packages to see the configuration of the :setting:`dbpath`.

.. option:: --diaglog <value>

   .. deprecated:: 2.6

   Creates a very verbose, :term:`diagnostic log` for troubleshooting
   and recording various errors. MongoDB writes these log files in the
   :setting:`dbpath` directory in a series of files that begin with
   the string ``diaglog`` and end with the initiation time of the
   logging as a hex string.

   The specified value configures the level of verbosity. Possible
   values, and their impact are as follows.

   =========  ===================================
   **Value**  **Setting**
   ---------  -----------------------------------
      0       off. No logging.
      1       Log write operations.
      2       Log read operations.
      3       Log both read and write operations.
      7       Log write and some read operations.
   =========  ===================================

   You can use the :program:`mongosniff` tool to replay this output
   for investigation. Given a typical diaglog file, located at
   ``/data/db/diaglog.4f76a58c``, you might use a command in the
   following form to read these files:

   .. code-block:: sh

      mongosniff --source DIAGLOG /data/db/diaglog.4f76a58c

   :option:`--diaglog` is for internal use and not intended for most
   users.

   .. include:: /includes/warning-diaglogging-off.rst

.. option:: --directoryperdb

   Alters the storage pattern of the data directory to store each
   database's files in a distinct folder. This option will create
   directories within the :option:`--dbpath` named for each directory.

   Use this option in conjunction with your file system and device
   configuration so that MongoDB will store data on a number of
   distinct disk devices to increase write throughput or disk
   capacity.

   .. warning::

      .. |directoryperdb-option-name| replace:: :option:`--directoryperdb`
      .. include:: /includes/fact-directory-per-db-requires-migration.rst

.. option:: --journal

   Enables operation journaling to ensure write durability and data file
   validity. {{program}} enables journaling by default on
   64-bit builds of versions after 2.0.

.. option:: --journalOptions <arguments>

   Provides functionality for testing. Not for general use, and will affect data
   file integrity in the case of abnormal system shutdown.

.. option:: --journalCommitInterval <value>

   Specifies the maximum amount of time for {{program}} to allow
   between journal operations. Possible values are between 2 and 300
   milliseconds. Lower values increase the durability of the journal,
   at the expense of disk performance.

   .. include:: /includes/fact-journal-commit-interval-length.rst
   .. include:: /includes/fact-journal-commit-interval-with-gle.rst

.. option:: --ipv6

   Specify this option to enable IPv6 support. This will allow clients
   to connect to {{program}} using IPv6
   networks. {{program}} disables IPv6 support by default in
   {{program}} and all utilities.

.. option:: --jsonp

   Permits :term:`JSONP` access via an HTTP interface. Consider the
   security implications of allowing this activity before enabling this
   option. If the HTTP interface is disabled, the :option:`--jsonp`
   also enables the HTTP interface.

   .. seealso:: :option:`--httpinterface` to enable the HTTP interface.

.. option:: --noauth

   Disable authentication. Currently the default. Exists for future
   compatibility and clarity.

.. option:: --nohttpinterface

   .. deprecated:: 2.6
      MongoDB disables the HTTP interface by default.

   Disables the HTTP interface.

   Do not use in conjunction with :option:`--rest` or :option:`--jsonp`.

   .. include:: /includes/note-kerberos-unsupported-in-http-console.rst

.. option:: --httpinterface

   .. versionadded:: 2.6

   Enables the HTTP interface. Enabling the interface can increase
   network exposure.

   Leave the HTTP interface *disabled* for production deployments. If
   you *do* enable this interface, you should only allow trusted
   clients to access this port. See :ref:`security-firewalls`.

   .. include:: /includes/note-kerberos-unsupported-in-http-console.rst

.. option:: --nojournal

   Disables the durability journaling. By default, {{program}}
   enables journaling in 64-bit versions after v2.0.

.. option:: --noprealloc

   Disables the preallocation of data files. This will shorten the
   start up time in some cases, but can cause significant performance
   penalties during normal operations.

.. option:: --noscripting

   Disables the scripting engine.

.. option:: --notablescan

   Forbids operations that require a table scan.

.. option:: --nssize <value>

   Specifies the default size for namespace files (i.e ``.ns``). This
   option has no impact on the size of existing namespace files. The
   maximum size is 2047 megabytes.

   The default value is 16 megabytes; this provides for approximately
   24,000 namespaces. Each collection, as well as each index, counts as
   a namespace.

.. option:: --profile <level>

   Changes the level of database profiling, which inserts information
   about operation performance into output of {{program}} or the log
   file. The following levels are available:

   =========  ==================================
   **Level**  **Setting**
   ---------  ----------------------------------
      0       Off. No profiling.
      1       On. Only includes slow operations.
      2       On. Includes all operations.
   =========  ==================================

   Profiling is off by default. Database profiling can impact database
   performance. Enable this option only after careful consideration.

.. option:: --quota

   Enables a maximum limit for the number data files each database can
   have. When running with :option:`--quota`, there are a maximum of
   8 data files per database. Adjust the quota with the
   :option:`--quotaFiles` option.

.. option:: --quotaFiles <number>

   Modify limit on the number of data files per database. This option
   requires the :option:`--quota` setting. The default value for
   :option:`--quotaFiles` is 8.

.. option:: --rest

   Enables the simple :term:`REST` API. Consider the security
   implications of allowing this activity before enabling this option.
   If the HTTP interface is disabled, the :option:`--rest` setting
   also enables the HTTP interface.

   .. seealso:: :option:`--httpinterface` to enable the HTTP interface.

.. option:: --repair

   Runs a repair routine on all databases. This is equivalent
   to shutting down and running the :dbcommand:`repairDatabase` database
   command on all databases.

   .. include:: /includes/warning-repair.rst

   .. include:: /includes/note-repair.rst

   .. versionchanged:: 2.1.2

   If you run the repair option *and* have data in a journal file,
   {{program}} refuses to start. In these cases you should
   start {{program}} without the :option:`--repair` option to
   allow {{program}} to recover data from the journal. This
   completes more quickly and is more likely to produce valid data files.

   To continue the repair operation despite the journal files, shut down
   {{program}} cleanly and restart with the :option:`--repair`
   option.

   .. note::

      :option:`--repair` copies data from the source data files into
      new data files in the :setting:`repairpath`, and then replaces
      the original data files with the repaired data files. *If*
      :setting:`repairpath` is on the same device as
      :setting:`dbpath`, you *may* interrupt a {{program}}
      running :option:`--repair` without affecting the integrity of
      the data set.

.. option:: --repairpath <path>

   Specifies the root directory containing MongoDB data files, to use
   for the :option:`--repair` operation. Defaults to a ``_tmp``
   directory within the :setting:`dbpath`.

.. option:: --setParameter <options>

   .. versionadded:: 2.4

   Specifies an option to configure on startup.  Specify multiple
   options with multiple :option:`--setParameter` options.  See
   :doc:`/reference/parameters` for full documentation of these
   parameters. The :dbcommand:`setParameter` database command provides
   access to many of these parameters. :option:`--setParameter` supports the
   following options:

   .. include:: /includes/list-set-parameters-mongod.rst

.. option:: --slowms <value>

   Defines the value of "slow," for the :option:`--profile`
   option. The database logs all slow queries to the log, even when
   the profiler is not turned on. When the database profiler is on,
   {{program}} the profiler writes to the ``system.profile``
   collection. See the :dbcommand:`profile` command for more information on the
   database profiler.

.. option:: --smallfiles

   Enables a mode where MongoDB uses a smaller default file
   size.  Specifically, :option:`--smallfiles` reduces the initial
   size for data files and limits them to 512
   megabytes. :option:`--smallfiles` also reduces the size of each
   :term:`journal` files from 1 gigabyte to 128 megabytes.

   Use :option:`--smallfiles` if you have a large number of databases
   that each holds a small quantity of data. :option:`--smallfiles` can
   lead your {{program}} to create a large number of files,
   which may affect performance for larger databases.

.. option:: --shutdown

   Used in :term:`control scripts <control script>`, the
   :option:`--shutdown` will cleanly and safely terminate the
   {{program}} process. When invoking {{program}} with this
   option you must set the :option:`--dbpath` option either directly
   or by way of the :doc:`configuration file
   </reference/configuration-options>` and the :option:`--config`
   option.

   The :option:`--shutdown` option is available only on Linux systems.

.. option:: --syncdelay <value>

   {{program}} writes data very quickly to the journal, and
   lazily to the data files. :option:`--syncdelay` controls how much
   time can pass before MongoDB flushes data to the *database files*
   via an :term:`fsync` operation. The default setting is 60 seconds.
   In almost every situation you should not set this value and use the
   default setting.

   The :dbcommand:`serverStatus` command reports the background flush
   thread's status via the :data:`~serverStatus.backgroundFlushing`
   field.

   :setting:`syncdelay` has no effect on the :setting:`journal`
   files or :doc:`journaling </core/journaling>`.

   .. warning::

      If you set :option:`--syncdelay` to ``0``, MongoDB will not
      sync the memory mapped files to disk. Do not set this value on
      production systems.

.. option:: --sysinfo

   Returns diagnostic system information and then exits. The
   information provides the page size, the number of physical pages,
   and the number of available physical pages.

.. option:: --upgrade

   Upgrades the on-disk data format of the files specified by the
   :option:`--dbpath` to the latest version, if needed.

   This option only affects the operation of {{program}} if the
   data files are in an old format.

   .. note::

      .. todo:: change link to release notes here

      In most cases you should **not** set this value, so you can
      exercise the most control over your upgrade process. See the MongoDB
      `release notes <http://www.mongodb.org/downloads>`_ (on the
      download page) for more information about the upgrade process.

.. option:: --traceExceptions

   For internal diagnostic use only.

   .. see SERVER-6667a

.. option:: --noIndexBuildRetry

   By default, {{program}} will attempt to rebuild indexes upon
   start-up *if* :program:`mongod` shuts down or stops in the middle
   of an index build. When you specify :option:`--noIndexBuildRetry`,
   {{program}} will not attempt to rebuild the index.

.. _cli-mongod-replica-set:

Replication Options
~~~~~~~~~~~~~~~~~~~

.. option:: --replSet <setname>

   Use this option to configure replication with replica sets. Specify
   a replica set name as an argument to this set. All hosts in the
   replica set must have the same set name.

   .. include:: /includes/important-unique-replica-set-names.rst

   .. seealso:: :doc:`/replication`,
      :doc:`/administration/replica-sets`, and
      :doc:`/reference/replica-configuration`

.. option:: --oplogSize <value>

   Specifies a maximum size in megabytes for the replication operation
   log (e.g. :term:`oplog`.) By {{program}} creates an
   :term:`oplog` based on the maximum amount of space available. For
   64-bit systems, the op log is typically 5% of available disk space.

   Once the {{program}} has created the oplog for the first
   time, changing :option:`--oplogSize` will not affect the size of
   the oplog.

.. option:: --fastsync

   In the context of :term:`replica set` replication, set this option
   if you have seeded this member with a snapshot of the
   :term:`dbpath` of another member of the set. Otherwise the
   {{program}} will attempt to perform an initial sync,
   as though the member were a new member.

   .. warning::

      If the data is not perfectly synchronized *and*
      {{program}} starts with :setting:`fastsync`, then the
      secondary or slave will be permanently out of sync with the
      primary, which may cause significant consistency problems.

.. option:: --replIndexPrefetch

   .. versionadded:: 2.2

   You must use :option:`--replIndexPrefetch` in conjunction with
   :setting:`replSet`. The default value is ``all`` and available
   options are:

   - ``none``
   - ``all``
   - ``_id_only``

   By default :term:`secondary` members of a :term:`replica set` will
   load all indexes related to an operation into memory before
   applying operations from the oplog. You can modify this behavior so
   that the secondaries will only load the ``_id`` index. Specify
   ``_id_only`` or ``none`` to prevent the {{program}} from
   loading *any* index into memory.

.. _cli-mongod-master-slave:

Master-Slave Replication
~~~~~~~~~~~~~~~~~~~~~~~~

These options provide access to conventional master-slave database
replication. While this functionality remains accessible in MongoDB,
replica sets are the preferred configuration for database replication.

.. option:: --master

   Configures {{program}} to run as a replication
   :term:`master`.

.. option:: --slave

   Configures {{program}} to run as a replication
   :term:`slave`.

.. option:: --source <host><:port>

   For use with the :option:`--slave` option, the ``--source`` option
   designates the server that this instance will replicate.

.. option:: --only <arg>

   For use with the :option:`--slave` option, the ``--only`` option
   specifies only a single :term:`database` to replicate.

.. option:: --slavedelay <value>

   For use with the :option:`--slave` option, the ``--slavedelay``
   option configures a "delay" in seconds, for this slave to wait to
   apply operations from the :term:`master` node.

.. option:: --autoresync

   For use with the :option:`--slave` option. When set,
   :option:`--autoresync` option allows this slave to automatically
   resync if it is more than 10 seconds behind the master. This
   setting may be problematic if the :option:`--oplogSize` specifies
   a too small oplog.
   If the :term:`oplog` is not large enough to store the difference in
   changes between the master's current state and the state of the
   slave, this instance will forcibly resync itself
   unnecessarily. When you set the :setting:`autoresync` option to
   ``false``, the slave will not attempt an automatic resync more than
   once in a ten minute period.

Sharding Cluster Options
~~~~~~~~~~~~~~~~~~~~~~~~

.. option:: --configsvr

   Declares that this {{program}} instance serves as the
   :term:`config database` of a sharded cluster. When running with
   this option, clients will not be able to write data to any database
   other than ``config`` and ``admin``. The default port for a
   {{program}} with this option is ``27019`` and the default
   :option:`--dbpath` directory is ``/data/configdb``, unless
   specified.

   .. versionchanged:: 2.2
      :option:`--configsvr` also sets :option:`--smallfiles`.

   .. versionchanged:: 2.4
      :option:`--configsvr` creates a local :term:`oplog`.

   Do not use :option:`--configsvr` with :option:`--replSet` or
   :option:`--shardsvr`. Config servers cannot be a shard
   server or part of a :term:`replica set`.

.. option:: --shardsvr

   Configures this {{program}} instance as a shard in a
   partitioned cluster. The default port for these instances is
   ``27018``.  The only effect of :option:`--shardsvr` is to change
   the port number.

.. option:: --moveParanoia

   .. |move-paranoia-opt| replace:: :option:`--moveParanoia`

   .. versionadded:: 2.4

   .. include:: /includes/setting-moveparanoia.rst

SSL Options
~~~~~~~~~~~

.. see:: :doc:`/tutorial/configure-ssl` for full
   documentation of MongoDB's support.

.. include:: /includes/option/option-mongod-ssl.rst

.. include:: /includes/option/option-mongod-sslCAFile.rst

.. include:: /includes/option/option-mongod-sslPEMKeyFile.rst

.. include:: /includes/option/option-mongod-sslPEMKeyPassword.rst

.. include:: /includes/option/option-mongod-sslCRLFile.rst

.. include:: /includes/option/option-mongod-sslAllowInvalidCertificates.rst

.. include:: /includes/option/option-mongod-sslFIPSMode.rst

Audit Options
~~~~~~~~~~~~~

.. include:: /includes/option/option-mongod-auditDestination.rst

.. include:: /includes/option/option-mongod-auditFormat.rst

.. include:: /includes/option/option-mongod-auditPath.rst

.. include:: /includes/option/option-mongod-auditFilter.rst

Use
---

In common usage, the invocation of :program:`mongod` will resemble the
following in the context of an initialization or control script:

.. code-block:: sh

   mongod --config /etc/mongodb.conf

See the :doc:`/reference/configuration-options` for more information
on how to configure :program:`mongod` using the configuration file.
