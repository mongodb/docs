.. _rm-sync-jobs:

==============
Data Migration
==============

.. meta::
   :description: Explore how to transfer data from relational databases to MongoDB using snapshot or continuous migration jobs with Relational Migrator.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Migration jobs transfer data from your relational database to MongoDB.
Migration jobs use project-level :ref:`rm-mapping-rules` to distribute
data to your MongoDB database.

.. _rm-migration-job-types:

Types of Migration Jobs
-----------------------

{+rel-mig+} offers two different migration job types:

**Snapshot**: Snapshot migration jobs run once, typically for a point in time 
migration strategy.

**Continuous**: Continuous migration jobs cover new incoming data for a zero-downtime 
Change Data Capture (CDC) migration strategy. Continuous jobs run a snapshot stage first,
followed by a CDC stage that captures database updates in near-real time. The CDC stage
updates all new or modified database objects, ignoring any :ref:`rm-table-filters` set in project-level mapping rules. 
When you run a continuous migration job, your source and destination database 
data remain in sync.

.. note:: Kafka Deployment Model

   The Kafka deployment model of {+rel-mig+} allows you to run 
   longer-running snapshot or continuous migration jobs with improved resiliency. 
   For more details about the Kafka deployment model, see 
   :ref:`kafka-intro`.

Recoverability
--------------

.. include:: /includes/fact-cdc-recoverable.rst

Compatibility
-------------

Some relational databases are only compatible with Snapshot jobs.
For more compatibility information, see the following table:

.. include:: /includes/table-supported-migration-types.rst

Some databases might have specific requirements, and Relational
Migrator generates a script to modify source databases as necessary.
See the following pages to learn more about
configuration prerequisites for each type of relational database:

- :ref:`Configure MySQL <rm-prereq-mysql>`
- :ref:`Configure Oracle <rm-prereq-oracle>`
- :ref:`Configure PostgreSQL <rm-prereq-postgres>`
- :ref:`Configure SQL Server <rm-prereq-sqlserver>`
- :ref:`Configure Sybase <rm-prereq-sybase>`
- :ref:`Configure DB2 <rm-prereq-db2>`

Behavior
--------

Migration jobs are non-idempotent by default. {+rel-mig+} inserts new 
documents and embeded arrays each time a job is run, with the option to 
delete each existing collection at the start of the sync dialogue. You 
can enable idempotency to delete inserts from the previous migration job 
automatically.

To enable idempotent inserts for documents and embedded arrays, set 
``migrator.engine.transform.idempotency: true`` in the 
``user.properties`` file. Enabling idempotency may have substantial 
performance impact on large jobs.

Indexes
~~~~~~~

{+rel-mig+} creates new `indexes
<https://www.mongodb.com/docs/manual/indexes/>`_ in your MongoDB
collections to supplement the migration process. For best performance,
review the indexes in your collection after migration to ensure that
they best fit your application usage patterns. 

{+rel-mig+} does not create new indexes in the relational
database. {+rel-mig+} has read-only access to your source
database. 

See the following pages for more information on revewing your collection
indexes:

- `Create an Index <https://www.mongodb.com/docs/manual/core/indexes/create-index/>`_
- `Drop an Index <https://www.mongodb.com/docs/manual/core/indexes/drop-index/>`_
- `db.collection.getIndexes <https://www.mongodb.com/docs/manual/reference/method/db.collection.getIndexes>`_


Get Started
-----------

You can perform the following tasks from the **Data Migration** tab.

.. list-table::
   :header-rows: 1

   * - Task
     - Description
   * - :ref:`rm-create-jobs`
     - Create a migration job which uses the defined mapping rules and migration options.
   * - :ref:`rm-monitor-jobs`
     - View metadata, execution status, and issues for a migration job.
   * - :ref:`rm-stop-jobs`
     - Cancels the execution of a migration job.

.. toctree::
   :titlesonly:
   :hidden:

   Log In with Atlas </getting-started/atlas-log-in>
   Create Job </jobs/creating-jobs>
   Monitor </jobs/monitoring-jobs>
   Stop </jobs/stopping-jobs>
   Recover </jobs/recover-jobs>
   Pause & Resume with Kafka </jobs/pause-resume-kafka-jobs>
   Data Verification </jobs/data-verification>
