=========
collStats
=========

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. dbcommand:: collStats

   The :dbcommand:`collStats` command returns a variety of storage statistics
   for a given collection.

   .. |command| replace:: ``collStats``

   .. include:: /includes/fact-dbcommand.rst

   The :dbcommand:`collStats` command has the following syntax:

   .. code-block:: javascript

      {
         collStats: <string>,
         scale: <int>,
         verbose: <boolean>
      }

   The command takes the following fields:

   .. include:: /includes/apiargs/dbcommand-collStats-field.rst

Behavior
--------

Accuracy after Unexpected Shutdown
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. |cmd| replace:: :dbcommand:`collStats`
.. |opt| replace:: size

.. include:: /includes/fact-unexpected-shutdown-accuracy.rst

Example
-------

The following operation runs the :dbcommand:`collStats` command on the
``restaurant`` collection, specifying a scale of ``1024`` bytes:

.. code-block:: javascript

  db.runCommand( { collStats : "restaurant", scale: 1024 } )

The following document provides a representation of the
:dbcommand:`collStats` output. Depending on the configuration of your
collection and the storage engine, the output fields may include a
subset of the fields.

.. code-block:: javascript


   {
     "ns" : <string>,
     "count" : <number>,
     "size" : <number>,
     "avgObjSize" : <number>,
     "storageSize" : <number>,
     "capped" : <boolean>,
     "max" : <number>,
     "maxSize" :  <number>,
     "wiredTiger" : {
        "metadata" : {
           "formatVersion" : <num>
        },
        "creationString" : <string>
        "type" :  <string>,
        "uri" :  <string>,
        "LSM" : {
           "bloom filters in the LSM tree" : <number>,
           "bloom filter false positives" : <number>,
           "bloom filter hits" : <number>,
           "bloom filter misses" : <number>,
           "bloom filter pages evicted from cache" : <number>,
           "bloom filter pages read into cache" : <number>,
           "total size of bloom filters" : <number>,
           "sleep for LSM checkpoint throttle" : <number>,
           "chunks in the LSM tree" : <number>,
           "highest merge generation in the LSM tree" : <number>,
           "queries that could have benefited from a Bloom filter that did not exist" : <number>,
           "sleep for LSM merge throttle" : <number>
        },
        "block-manager" : {
           "file allocation unit size" : <number>,
           "blocks allocated" : <number>,
           "checkpoint size" : <number>,
           "allocations requiring file extension" : <number>,
           "blocks freed" : <number>,
           "file magic number" : <number>,
           "file major version number" : <number>,
           "minor version number" : <number>,
           "file bytes available for reuse" : <number>,
           "file size in bytes" : <number>
        },
        "btree" : {
           "btree checkpoint generation" : <number>,
           "column-store variable-size deleted values" : <number>,
           "column-store fixed-size leaf pages" : <number>,
           "column-store internal pages" : <number>,
           "column-store variable-size leaf pages" : <number>,
           "pages rewritten by compaction" : <number>,
           "number of key/value pairs" : <number>,
           "fixed-record size" : <number>,
           "maximum tree depth" : <number>,
           "maximum internal page key size" : <number>,
           "maximum internal page size" :<number>,
           "maximum leaf page key size" : <number>,
           "maximum leaf page size" : <number>,
           "maximum leaf page value size" : <number>,
           "overflow pages" : <number>,
           "row-store internal pages" : <number>,
           "row-store leaf pages" : <number>
        },
        "cache" : {
           "bytes read into cache" : <number>,
           "bytes written from cache" : <number>,
           "checkpoint blocked page eviction" : <number>,
           "unmodified pages evicted" : <number>,
           "page split during eviction deepened the tree" : <number>,
           "modified pages evicted" : <number>,
           "data source pages selected for eviction unable to be evicted" : <number>,
           "hazard pointer blocked page eviction" : <number>,
           "internal pages evicted" : <number>,
           "pages split during eviction" : <number>,
           "in-memory page splits" : <number>,
           "overflow values cached in memory" : <number>,
           "pages read into cache" : <number>,
           "overflow pages read into cache" : <number>,
           "pages written from cache" : 2
        },
        "compression" : {
           "raw compression call failed, no additional data available" : <number>,
           "raw compression call failed, additional data available" : <number>,
           "raw compression call succeeded" : <number>,
           "compressed pages read" : <number>,
           "compressed pages written" : <number>,
           "page written failed to compress" : <number>,
           "page written was too small to compress" : 1
        },
        "cursor" : {
           "create calls" : <number>,
           "insert calls" : <number>,
           "bulk-loaded cursor-insert calls" : <number>,
           "cursor-insert key and value bytes inserted" : <number>,
           "next calls" : <number>,
           "prev calls" : <number>,
           "remove calls" : <number>,
           "cursor-remove key bytes removed" : <number>,
           "reset calls" : <number>,
           "search calls" : <number>,
           "search near calls" : <number>,
           "update calls" : <number>,
           "cursor-update value bytes updated" : <number>
        },
        "reconciliation" : {
           "dictionary matches" : <number>,
           "internal page multi-block writes" : <number>,
           "leaf page multi-block writes" : <number>,
           "maximum blocks required for a page" : <number>,
           "internal-page overflow keys" : <number>,
           "leaf-page overflow keys" : <number>,
           "overflow values written" : <number>,
           "pages deleted" : <number>,
           "page checksum matches" : <number>,
           "page reconciliation calls" : <number>,
           "page reconciliation calls for eviction" : <number>,
           "leaf page key bytes discarded using prefix compression" : <number>,
           "internal page key bytes discarded using suffix compression" : <number>
        },
        "session" : {
           "object compaction" : <number>,
           "open cursor count" : <number>
        },
        "transaction" : {
           "update conflicts" : <number>
        }
     },
     "nindexes" : <number>,         // number of indexes
     "totalIndexSize" : <number>,   // total index size in bytes
     "indexSizes" : {                // size of specific indexes in bytes
             "_id_" : <number>,
             "username" : <number>
     },
     // ...
     "ok" : <number>
   }

.. _collStats-output:

Output
------

.. data:: collStats.ns

   The namespace of the current collection, which follows the format
   ``[database].[collection]``.

.. data:: collStats.count

   The number of objects or documents in this collection.

.. data:: collStats.size

   The total size in memory of all records in a collection. This value does not
   include the record header, which is 16 bytes per record, but *does*
   include the record's :term:`padding`. Additionally
   :data:`~collStats.size` does not include the size of any indexes
   associated with the collection, which the
   :data:`~collStats.totalIndexSize` field reports.

   The ``scale`` argument affects this value.

.. data:: collStats.avgObjSize

   The average size of an object in the collection (plus any
   :term:`padding`). The ``scale`` argument does not affect this
   value.

.. data:: collStats.storageSize

   The total amount of storage allocated to this collection for
   :term:`document` storage. The ``scale`` argument affects this
   value.

   :data:`~collStats.storageSize` does not include index size. See
   :data:`~collStats.totalIndexSize` for index sizing.

   For MMAPv1, :data:`~collStats.storageSize` will not decrease
   as you remove or shrink documents.

   .. for MMAPv1: sum of all extents (no indexes or the $freelist)

.. data:: collStats.numExtents

   The total number of contiguously allocated data file regions.
   Only present when using the MMAPv1 storage engine.

.. data:: collStats.nindexes

   The number of indexes on the collection. All collections have at
   least one index on the :term:`_id` field.

.. data:: collStats.lastExtentSize

   The size of the last extent allocated. The ``scale`` argument
   affects this value. Only present when using the ``mmapv1`` storage
   engine.

.. data:: collStats.paddingFactor

   .. deprecated:: 3.0.0
      :data:`~collStats.paddingFactor` is no longer used in 3.0.0, and
      remains hard coded to 1.0 for compatibility only.

   :data:`~collStats.paddingFactor` only appears when using the
   ``mmapv1`` storage engine.

.. data:: collStats.userFlags

   A number that indicates the user-set flags on the collection.
   :data:`~collStats.userFlags` only appears when using the ``mmapv1``
   storage engine.

   .. versionchanged:: 3.0.0
      :data:`~collStats.userFlags` reports on the
      :collflag:`usePowerOf2Sizes` and the :collflag:`noPadding`
      flags.

   .. include:: /includes/list-collection-user-flags.rst

.. data:: collStats.totalIndexSize

   The total size of all indexes. The ``scale`` argument affects this
   value.

.. data:: collStats.indexSizes

   This field specifies the key and size of every existing index on
   the collection. The ``scale`` argument affects this value.

.. data:: collStats.capped

   This field will be "true" if the collection is
   :term:`capped <capped collection>`.

.. data:: collStats.max

   Shows the maximum number of documents that may be present in a
   :term:`capped collection`.

.. data:: collStats.maxSize

   Shows the maximum size of a :term:`capped collection`.

.. data:: collStats.wiredTiger

   .. versionadded:: 3.0.0

   :data:`~collStats.wiredTiger` only appears when using the
   WiredTiger storage engine.

   This document contains data reported
   directly by the WiredTiger engine and other data for internal
   diagnostic use.

.. data:: collStats.indexDetails

   .. versionadded:: 3.0.0

   A document that reports data from the :ref:`WiredTiger <storage-wiredTiger>`
   storage engine for each index in the collection. Other storage engines will
   return an empty document.

   The fields in this document are the names of the indexes, while the
   values themselves are documents that contain statistics for the
   index provided by the storage engine. These statistics are for
   internal diagnostic use.
