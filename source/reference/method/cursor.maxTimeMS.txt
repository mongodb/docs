==================
cursor.maxTimeMS()
==================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. versionadded:: 2.6

.. method:: cursor.maxTimeMS(<time limit>)

   Specifies a cumulative time limit in milliseconds for processing
   operations on a cursor.

   The :method:`~cursor.maxTimeMS()` method has the following
   parameter:

   .. include:: /includes/apiargs/method-cursor.maxTimeMS-param.rst

.. important::

   :method:`~cursor.maxTimeMS()` is not related to the
   ``NoCursorTimeout`` query flag. :method:`~cursor.maxTimeMS()`
   relates to processing time, while ``NoCursorTimeout`` relates
   to idle time. A cursor's idle time does not contribute towards its
   processing time.

Behaviors
---------

MongoDB targets operations for termination if the associated cursor
exceeds its allotted time limit. MongoDB terminates operations that
exceed their allotted time limit using the same mechanism as
:method:`db.killOp()`. MongoDB only terminates an operation at one of
its designated :term:`interrupt points <interrupt point>`.

MongoDB does not count network latency between the client and the
server towards a cursor's time limit. For a sharded cluster, however,
MongoDB does include the latency between the :binary:`~bin.mongos` and
:binary:`~bin.mongod` instances towards this time limit.

Queries that generate multiple batches of results continue to return
batches until the cursor exceeds its allotted time limit.

Examples
--------

.. example:: The following query specifies a time limit of 50 milliseconds:

   .. code-block:: javascript

      db.collection.find({description: /August [0-9]+, 1969/}).maxTimeMS(50)
