=================================================
Enforce Keyfile Access Control in Sharded Cluster
=================================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Overview
--------

Enforcing access control on a :term:`sharded cluster` requires configuring:

- Security between components of the cluster using
  :doc:`Internal Authentication</core/security-internal-authentication>`.

- Security between connecting clients and the cluster using
  :doc:`/core/authorization`.

For this tutorial, each member of the sharded cluster *must* use the same
internal authentication mechanism and settings. This means enforcing internal
authentication on each :binary:`~bin.mongos` and :binary:`~bin.mongod` in the cluster.

The following tutorial uses a :ref:`keyfile <internal-auth-keyfile>` to
enable internal authentication.

Enforcing internal authentication also enforces user access control. To
connect to the replica set, clients like the :binary:`~bin.mongo` shell need to
use a :doc:`user account</core/authorization>`. See
:ref:`security-shardClust-enforce-access-control`.

CloudManager and OpsManager
~~~~~~~~~~~~~~~~~~~~~~~~~~~

If Cloud Manager or Ops Manager is managing your deployment, internal
authentication is automatically enforced.

To configure Access Control on a
managed deployment, see: ``Configure Access Control for MongoDB Deployments``
in the :mms-docs:`Cloud Manager manual
</tutorial/edit-host-authentication-credentials>`
or in the :opsmgr:`Ops Manager manual
</tutorial/edit-host-authentication-credentials>`.

Considerations
--------------

IP Binding
~~~~~~~~~~~

.. versionchanged:: 3.6

.. include:: /includes/fact-default-bind-ip-change.rst

Operating System
~~~~~~~~~~~~~~~~

This tutorial primarily refers to the :binary:`~bin.mongod` process.
Windows users should use the :binary:`~bin.mongod.exe` program instead.

Keyfile Security
~~~~~~~~~~~~~~~~

Keyfiles are bare-minimum forms of security and are best suited for testing or
development environments. For production environments we recommend using
:doc:`x.509 certificates</core/security-x.509>`.

.. _security-shardClust-enforce-access-control:

Access Control
~~~~~~~~~~~~~~

.. include:: /includes/internal-authentication-tutorials-access-control-consideration.rst

Users
~~~~~

.. include:: /includes/sharded-clusters-users.rst

See the :doc:`/core/security-users` security documentation for more
information.

Downtime
~~~~~~~~

Upgrading a sharded cluster to enforce access control requires downtime.

Procedures
----------

.. _security-update-existing-sharded-deployment-with-auth:

Enforce Keyfile Internal Authentication on Existing Sharded Cluster Deployment
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/steps/enable-authentication-in-sharded-cluster.rst


x.509 Internal Authentication
-----------------------------

For details on using x.509 for internal authentication, see
:doc:`/tutorial/configure-x509-member-authentication`.

To upgrade from keyfile internal authentication to x.509 internal
authentication, see
:doc:`/tutorial/upgrade-keyfile-to-x509`.

.. seealso::

   :doc:`/core/sharded-cluster-components`

   :doc:`/core/sharded-cluster-requirements`
