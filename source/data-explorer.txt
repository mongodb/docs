.. _data-explorer:

=============
Data Explorer
=============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: twocols

.. include:: /includes/fact-atlas-free-tier-limits.rst

The :guilabel:`Data Explorer` in |service| provides the ability to:

- View databases,collections and indexes in your cluster.

- Create and drop databases, collections, and indexes. (Beta)

- Insert/edit/delete documents. (Beta)

Data explorer reads from the primary unless the primary is unavailable.
If the primary is unavailable, data explorer reads from a non-hidden,
non-delayed secondary member.

Access ``Data Explorer``
------------------------

.. admonition:: Required Privileges
   :class: important

   To access :guilabel:`Data Explorer`, you must have at least one
   of the following roles:

   - :authrole:`Project Owner`

   - :authrole:`Project Data Access Admin`

   - :authrole:`Project Data Access Read/Write`

   - :authrole:`Project Data Access Read Only`

To access :guilabel:`Data Explorer`, click :guilabel:`Clusters` and
then for the MongoDB cluster, click the :guilabel:`Data` button. Or, if
you are already viewing a specific cluster, select the :guilabel:`Data`
tab. The tab lists the databases in your deployment and the collections
in each database.

.. _view-db-collections:

View Databases and Collections
------------------------------

From the :guilabel:`Data Explorer` tab, you can view the databases and
collections in the deployment. To view the collections in a particular
database, click on the database.

.. _de-view-documents:

View Documents
--------------

From the :guilabel:`Data Explorer` tab, you can view documents in a
collection. To view documents for a collection:

.. include:: /includes/steps/data-explorer-find.rst

.. _de-insert-documenets:

Insert Documents (Beta)
--------------------------

*Beta Feature*

To insert a new document through the :guilabel:`Data Explorer`, you
must be have at least one of the following roles:

- :authrole:`Project Owner`

- :authrole:`Project Data Access Admin`

- :authrole:`Project Data Access Read/Write`

To add a document to a collection through the :guilabel:`Data
Explorer`, you can specify the document to insert from scratch or you
can clone an existing document and modify its fields and values as
needed.

Insert Document
~~~~~~~~~~~~~~~

#. Select the collection and go to the :guilabel:`Find` tab.

#. Click :guilabel:`Insert Document` button.

   The document editor appears with the ``_id`` field with an
   :ref:`objectid` value that reflects the time of its generation and
   not the insertion time of the document. As such, the :ref:`objectid`
   does not represent a strict insertion order.

#. Modify the document:

   - To add a new field after an existing field, hover over the field
     and click on the plus sign that appears over the field's line
     number.

   - To delete a field, hover over the field and click on the x sign
     that appears to the left of the field's line number. You cannot
     delete the ``_id`` field.

   - To edit a field name, value, or type, click on the field name,
     value, or type.

#. Click :guilabel:`Insert`.


Clone a Document
~~~~~~~~~~~~~~~~~

#. Select the collection and go to the :guilabel:`Find` tab.

   Up to 20 documents displays in the tab.

#. Optional. To specify filter condition, type in a :ref:`query filter
   <read-operations-query-argument>` document in the filter bar. For
   example, to specify equality condition, use a filter document of the
   form:

   .. code-block:: javascript

      { <field1>: <value1>, ... }

   To use query operators to specify a filter condition, use a filter
   document of the form:

   .. code-block:: javascript

      { <field1>: { <queryoperator>: <value1> }, ... }

#. To clone a document displayed in the query results, hover over the
   document and click on its clone document icon.
   
   .. figure:: /images/clone-document.png
      :alt: Clone document icon
      :figwidth: 202px

   The document editor appears with the ``_id`` field with an
   :ref:`objectid` value that reflects the time of its generation and
   not the insertion time of the document. As such, the :ref:`objectid`
   does not represent a strict insertion order.

#. Modify the document:

   - To add a new field after an existing field, hover over the field
     and click on the plus sign that appears over the field's line
     number.

   - To delete a field, hover over the field and click on the x sign
     that appears to the left of the field's line number. You cannot
     delete the ``_id`` field.

   - To edit a field name, value, or type, click on the field name,
     value, or type.

#. Click :guilabel:`Insert`.

.. _de-create-an-index:

Edit a Document (Beta)
----------------------

*Beta Feature*

To edit a collection's documents through the :guilabel:`Data Explorer`,
you must have at least one of the following roles:

- :authrole:`Project Owner`

- :authrole:`Project Data Access Admin`

- :authrole:`Project Data Access Read/Write`


To edit a document from a collection through the :guilabel:`Data
Explorer`,

#. Select the collection and go to the :guilabel:`Find` tab.

   Up to 20 documents displays in the tab.

#. Optional. To specify filter condition, type in a :ref:`query filter
   <read-operations-query-argument>` document in the filter bar. For
   example, to specify equality condition, use a filter document of the
   form:

   .. code-block:: javascript

      { <field1>: <value1>, ... }

   To use query operators to specify a filter condition, use a filter
   document of the form:

   .. code-block:: javascript

      { <field1>: { <queryoperator>: <value1> }, ... }

#. To edit a document displayed in the query results, hover over the
   document to edit and click on the pencil icon.

   The document is editable.

#. Modify the document:

   - To add a new field, hover over the field and click on the plus
     sign that appears over the field's line number.

   - To delete a field, hover over the field and click on the x sign
     that appears to the left of the field's line number. You cannot
     delete the ``_id`` field.

   - To edit a field name, value, or type, click on the field name,
     value, or type.

   - To revert a specific change, hover over the edited field and click the
     revert icon that appears to the left of the field's line number.

#. To confirm, click the :guilabel:`Update` button.

#. To cancel all modifications to the document, click the
   :guilabel:`Cancel` button.

Delete a Document (Beta)
------------------------

*Beta Feature*

To delete documents from a collection through the :guilabel:`Data
Explorer`, you must have at least one of the following roles:

- :authrole:`Project Owner`

- :authrole:`Project Data Access Admin`

- :authrole:`Project Data Access Read/Write`


To delete a document from a collection through the have

#. Select the collection, and go to the :guilabel:`Find` tab.

   Up to 20 documents from the collection displays in the results.

#. Optional. To specify filter condition, type in a :ref:`query filter
   <read-operations-query-argument>` document in the filter bar. For
   example, to specify equality condition, use a filter document of the
   form:

   .. code-block:: javascript

      { <field1>: <value1>, ... }

   To use query operators to specify a filter condition, use a filter
   document of the form:

   .. code-block:: javascript

      { <field1>: { <queryoperator>: <value1> }, ... }

#. To delete a document displayed in the query results, hover over the
   document to delete and click on the trash can icon.

   The document is flagged for deletion.
   
#. To confirm, click the :guilabel:`Delete` button.


.. _de-view-indexes:

View Indexes
------------

From the :guilabel:`Data Explorer` tab, you can view index information
for a collection. To view index information for a collection:

.. include:: /includes/steps/data-explorer-indexes.rst

.. _de-create-a-db:

Create a Database (Beta)
------------------------

*Beta Feature*

To create a database through the :guilabel:`Data Explorer`, you must
have at least one of the following roles:

- :authrole:`Project Owner`

- :authrole:`Project Data Access Admin`

- :authrole:`Project Data Access Read/Write`

To create a database through the :guilabel:`Data Explorer`,

#. Click :guilabel:`Create Database`.

#. Enter the :guilabel:`Database Name` and the :guilabel:`Collection
   Name` to create the database and its first collection. [#first-collection]_

   For more information on MongoDB database names and collection names,
   see :ref:`restrictions-on-db-names`.

#. Select whether the collection is a :ref:`capped collection
   <manual-capped-collection>`. If you select to create a capped
   collection, specify the maximum size in bytes.

#. Click :guilabel:`Create`.

Upon successful creation, the database and the collection appears in
the :guilabel:`Data Explorer`.

.. [#first-collection]

   MongoDB creates a database when you first store data for that
   database.

.. _de-create-a-collection:

Create a Collection (Beta)
--------------------------

*Beta Feature*

To create a collection through the :guilabel:`Data Explorer`, you must
have at least one of the following roles:

- :authrole:`Project Owner`

- :authrole:`Project Data Access Admin`

- :authrole:`Project Data Access Read/Write`

To create a collection in an existing database through the :guilabel:`Data
Explorer`:

#. Either select or hover over the database to drop and click on the plus
   sign ``+`` icon.

#. Enter the collection name.

   For more information on MongoDB collection names, see
   :ref:`restrictions-on-db-names`.

#. Select whether the collection is a :ref:`capped collection
   <manual-capped-collection>`. If you select to create a capped
   collection, specify the maximum size in bytes.

#. Click :guilabel:`Create`.

Upon successful creation, the collection appears underneath the
database in the :guilabel:`Data Explorer`.

To create the first collection in a new database, see
:ref:`de-create-a-db`.


Create an Index (Beta)
----------------------

*Beta Feature*

To create a database through the :guilabel:`Data Explorer`, you must
have at least one of the following roles:

- :authrole:`Project Owner`

- :authrole:`Project Data Access Admin`

To create an index from a collection through the :guilabel:`Data Explorer`,

#. Select the collection you wish to index, and go to the
   :guilabel:`Indexes` tab.

#. Enter the :ref:`index key specification
   <document-index-specification>` document:

   .. code-block:: javascript

      { <field1>: <index type>, ... }

   For example, to create a compound index on the fields ``category``
   (ascending order) and ``score`` (descending order), specify the
   index specification document:

   .. code-block:: javascript

      { category: 1, score: -1 }

   For more information on indexes, see :ref:`indexes`.

#. Optional. Enter the :ref:`index options
   <createIndex-options>` document:

   .. code-block:: javascript

      { <option1>: <value1>, ... }

   For example, the following options document specifies the ``unique``
   option and the ``name`` for the index to create:

   .. code-block:: javascript

      { unique: true, name: "myUniqueIndex" }

.. _de-drop-a-db:

Drop a Database (Beta)
----------------------

*Beta Feature*

To drop a database through the :guilabel:`Data Explorer`, you must have
at least one of the following roles:

- :authrole:`Project Owner`

- :authrole:`Project Data Access Admin`

To drop a database, including all its collections, through the
:guilabel:`Data Explorer`,

#. Either select or hover of the database to drop and click on its
   trash can icon.

#. Confirm by typing the name of the database, and click :guilabel:`Drop`.

.. _de-drop-a-collection:

Drop a Collection (Beta)
------------------------

*Beta Feature*

To drop a collection through the :guilabel:`Data Explorer`, you must
have at least one of the following roles:

- :authrole:`Project Owner`

- :authrole:`Project Data Access Admin`

- :authrole:`Project Data Access Read/Write`

To drop a collection, including its documents and indexes, through the
:guilabel:`Data Explorer`,

#. Either select or hover over the collection to drop and click on its
   trash can icon.

#. Confirm by typing the name of the collection, and click
   :guilabel:`Drop`.

.. _de-drop-an-index:

Drop an Index (Beta)
--------------------

*Beta Feature*


To drop an index through the :guilabel:`Data Explorer`, you must have
at least one of the following roles:

- :authrole:`Project Owner`

- :authrole:`Project Data Access Admin`

To drop an index from a collection through the :guilabel:`Data
Explorer`,

.. note::

   You cannot delete the ``_id`` index.

#. Select the collection whose index you wish to drop, and go to the :guilabel:`Indexes` tab.

#. Click the :guilabel:`Drop Index` button for the index to drop.

#. Confirm by typing the name of the collection, and click
   :guilabel:`Drop`.

