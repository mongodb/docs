#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:5
msgid "Back Up a Sharded Cluster with Database Dumps"
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:17
msgid ""
"Starting in MongoDB 3.2, the following procedure can be used with the "
":doc:`MMAPv1 </core/mmapv1>` and the :doc:`WiredTiger </core/wiredtiger>`"
" storage engines. With previous versions of MongoDB, the procedure "
"applied to :doc:`MMAPv1 </core/mmapv1>` only."
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:23
msgid "Overview"
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:25
msgid ""
"This document describes a procedure for taking a backup of all components"
" of a :term:`sharded cluster`. This procedure uses "
":binary:`~bin.mongodump` to create dumps of the :binary:`~bin.mongod` "
"instances."
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:30
msgid ""
"You may alternatively use :doc:`file system snapshots </tutorial/backup-"
"sharded-cluster-with-filesystem-snapshots>` to capture the backup data. "
"File system snapshots may be more efficient in some situations if your "
"system configuration supports them."
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:35
msgid ""
"For more information on backups in MongoDB and backups of sharded "
"clusters in particular, see :doc:`/core/backups` and "
":doc:`/administration/backup-sharded-clusters`."
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:40
msgid "Prerequisites"
msgstr ""

#: ../source/includes/note-shard-cluster-backup.rst:1
msgid ""
"To capture a point-in-time backup from a sharded cluster you **must** "
"stop *all* writes to the cluster. On a running production system, you can"
" only capture an *approximation* of point-in-time snapshot."
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:45
msgid "Access Control"
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:47
msgid ""
"The :authrole:`backup` role provides the required privileges to perform "
"backup on a sharded cluster that has access control enabled."
msgstr ""

#: ../source/includes/fact-required-access-for-backup-profiling.rst:3
msgid ""
"The :authrole:`backup` role provides additional privileges to back up the"
" :data:`system.profile <<database>.system.profile>` collections that "
"exist when running with :ref:`database profiling <database-profiling>`. "
"Previously, users required an additional ``read`` access on this "
"collection."
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:53
msgid "Consideration"
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:55
msgid ""
"To create backups of a sharded cluster, you will stop the cluster "
"balancer, take a backup of the :term:`config database`, and then take "
"backups of each shard in the cluster using :binary:`~bin.mongodump` to "
"capture the backup data. To capture a more exact moment-in-time snapshot "
"of the system, you will need to stop all application writes before taking"
" the filesystem snapshots; otherwise the snapshot will only approximate a"
" moment in time."
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:63
msgid ""
"For approximate point-in-time snapshots, you can minimize the impact on "
"the cluster by taking the backup from a secondary member of each replica "
"set shard."
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:68
msgid "Procedure"
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:8
msgid "Disable the balancer process."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:10
#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:38
msgid ""
"To disable the :ref:`balancer <sharding-internals-balancing>`, connect "
"the :binary:`~bin.mongo` shell to a :binary:`~bin.mongos` instance and "
"run :method:`sh.stopBalancer()` in the ``config`` database."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:21
#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:49
msgid ""
"For more information, see the :ref:`sharding-balancing-disable-"
"temporarily` procedure."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:24
#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:52
msgid ""
"If you do not stop the balancer, the backup could have duplicate data or "
"omit data as :term:`chunks <chunk>` migrate while recording backups."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:36
msgid "Step 1: Disable the balancer process."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:64
msgid "Lock one secondary member of each replica set."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:66
#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:162
msgid ""
"Lock a secondary member of each replica set in the sharded cluster, and "
"one secondary of the :ref:`config server replica set (CSRS) <replset-"
"config-servers>`."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:70
#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:166
msgid ""
"Ensure that the :term:`oplog` has sufficient capacity to allow these "
"secondaries to catch up to the state of the primaries after finishing the"
" backup procedure. See :ref:`replica-set-oplog-sizing` for more "
"information."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:77
#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:173
msgid "Lock shard replica set secondary."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:79
#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:175
msgid ""
"For each shard replica set in the sharded cluster, connect a "
":binary:`~bin.mongo` shell to the secondary member's "
":binary:`~bin.mongod` instance and run :method:`db.fsyncLock()`."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:90
#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:186
msgid "Lock config server replica set secondary."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:92
#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:188
msgid ""
"If locking a secondary of the CSRS, confirm that the member has "
"replicated data up to some control point. To verify, first connect a "
":binary:`~bin.mongo` shell to the CSRS primary and perform a write "
"operation with :writeconcern:`\"majority\"` write concern on a control "
"collection:"
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:113
#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:209
msgid ""
"The operation should return either the newly inserted document or the "
"updated document:"
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:122
#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:218
msgid ""
"Query the CSRS secondary member for the returned control document. "
"Connect a :binary:`~bin.mongo` shell to the CSRS secondary to lock and "
"use :method:`db.collection.find()` to query for the control document:"
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:138
#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:234
msgid ""
"If the secondary member contains the latest control document, it is safe "
"to lock the member. Otherwise, wait until the member contains the "
"document or select a different secondary member that contains the latest "
"control document."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:144
#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:240
msgid "To lock the secondary member, run :method:`db.fsyncLock()` on the member:"
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:160
msgid "Step 2: Lock one secondary member of each replica set."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:256
msgid "Backup one config server."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:258
#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:294
msgid ""
"Run :binary:`~bin.mongodump` against a config server "
":binary:`~bin.mongod` instance to back up the cluster's metadata. You "
"only need to back up one config server. Perform this step against the "
"locked config server."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:264
#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:300
msgid ""
"Use :binary:`~bin.mongodump` with the :option:`--oplog <mongodump "
"--oplog>` option to backup one of the :ref:`config servers <sharding-"
"config-server>`."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:274
#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:310
msgid ""
"If your deployment uses CSRS config servers, unlock the config server "
"node before proceeding to the next step. To unlock the CSRS member, use "
":method:`db.fsyncUnlock()` method in the :binary:`~bin.mongo` shell."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:292
msgid "Step 3: Backup one config server."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:328
msgid "Back up a replica set member for each shard."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:330
#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:350
msgid ""
"Back up the locked replica set members of the shards using "
":binary:`~bin.mongodump` with the :option:`--oplog <mongodump --oplog>` "
"option. You may back up the shards in parallel."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:348
msgid "Step 4: Back up a replica set member for each shard."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:368
msgid "Unlock replica set members for each shard."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:370
#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:391
msgid ""
"To unlock the replica set members, use :method:`db.fsyncUnlock()` method "
"in the :binary:`~bin.mongo` shell."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:379
#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:400
msgid "Allow these members to catch up with the state of the primary."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:389
msgid "Step 5: Unlock replica set members for each shard."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:410
msgid "Re-enable the balancer process."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:412
#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:432
msgid ""
"To re-enable to balancer, connect the :binary:`~bin.mongo` shell to a "
":binary:`~bin.mongos` instance and run :method:`sh.setBalancerState()`."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:430
msgid "Step 6: Re-enable the balancer process."
msgstr ""

#: ../source/includes/extracts/additional-resources-backup-tutorials.rst:4
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-backup-tutorials.rst:6
msgid ""
"`MongoDB Atlas: For a simple way to run, monitor, and maintain cloud-"
"hosted MongoDB deployments "
"<https://www.mongodb.com/cloud/atlas?jmp=docs>`_"
msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid "Backup a Sharded Cluster with Database Dumps"
#~ msgstr ""

#~ msgid ""
#~ "To create these backups of a "
#~ "sharded cluster, you will stop the "
#~ "cluster balancer and take a backup "
#~ "of the :term:`config database`, and then"
#~ " take backups of each shard in "
#~ "the cluster using :program:`mongodump` to "
#~ "capture the backup data. To capture "
#~ "a more exact moment-in-time "
#~ "snapshot of the system, you will "
#~ "need to stop all application writes "
#~ "before taking the filesystem snapshots; "
#~ "otherwise the snapshot will only "
#~ "approximate a moment in time."
#~ msgstr ""

#~ msgid ""
#~ "This document describes a procedure for"
#~ " taking a backup of all components"
#~ " of a sharded cluster. This procedure"
#~ " uses :program:`mongodump` to create dumps"
#~ " of the :program:`mongod` instance. An "
#~ "alternate procedure uses file system "
#~ "snapshots to capture the backup data,"
#~ " and may be more efficient in "
#~ "some situations if your system "
#~ "configuration allows file system backups."
#~ msgstr ""

# f20bd0104c7b4993838541596b6e4989
#~ msgid "On this page"
#~ msgstr ""

# 40fd6b3320104e83b8e71683805e6f46
#~ msgid ""
#~ "This document describes a procedure for"
#~ " taking a backup of all components"
#~ " of a :term:`sharded cluster`. This "
#~ "procedure uses :program:`mongodump` to create"
#~ " dumps of the :program:`mongod` instances."
#~ msgstr ""

# 4e78bd25898a4cf98a42a96440a504ed
#~ msgid ""
#~ "To create backups of a sharded "
#~ "cluster, you will stop the cluster "
#~ "balancer, take a backup of the "
#~ ":term:`config database`, and then take "
#~ "backups of each shard in the "
#~ "cluster using :program:`mongodump` to capture"
#~ " the backup data. To capture a "
#~ "more exact moment-in-time snapshot "
#~ "of the system, you will need to"
#~ " stop all application writes before "
#~ "taking the filesystem snapshots; otherwise "
#~ "the snapshot will only approximate a "
#~ "moment in time."
#~ msgstr ""

# b834ec187fce442e942f054ceb58fd09
#~ msgid "See also |mms-home| for seamless automation, backup, and monitoring."
#~ msgstr ""

