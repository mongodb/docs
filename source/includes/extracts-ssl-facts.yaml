ref: ssl-facts-x509-invalid-certificate
content: |

   Starting in MongoDB 4.0, if you specify
   ``--sslAllowInvalidCertificates`` or
   ``net.ssl.allowInvalidCertificates: true`` (or in MongoDB 4.2, the
   alias ``--tlsAllowInvalidateCertificates`` or
   ``net.tls.allowInvalidCertificates: true``) when using x.509
   authentication, an invalid certificate is only sufficient to
   establish a TLS/SSL connection but is *insufficient* for
   authentication.

---
# This is separate from the mongo shell ca file extract since the version is different.
ref: ssl-facts-ca-file
content: |

   Starting in version 3.4, if ``--tlsCAFile``/``net.tls.CAFile`` (or
   their aliases ``--sslCAFile``/``net.ssl.CAFile``) is not specified
   and you are not using x.509 authentication, the system-wide CA
   certificate store will be used when connecting to an TLS/SSL-enabled
   server.

   .. include:: /includes/extracts/ssl-facts-x509-ca-file.rst

---
ref: ssl-facts-x509-ca-file
content: |

   To use x.509 authentication, ``--tlsCAFile`` or ``net.tls.CAFile``
   must be specified unless using ``--tlsCertificateSelector`` or
   ``--net.tls.certificateSelector``. Or if using the ``ssl`` aliases,
   ``--sslCAFile`` or ``net.ssl.CAFile`` must be specified unless using
   ``--sslCertificateSelector`` or ``net.ssl.certificateSelector``.

---
ref: ssl-facts-see-more
content: |
   For more information about TLS/SSL and MongoDB, see
   :doc:`/tutorial/configure-ssl` and
   :doc:`/tutorial/configure-ssl-clients` .
---
# This is separate from the mongod/mongos ca file extract since the version is different.
ref: ssl-facts-mongo-shell-ca
content: |

   Starting in version 3.2.6, if ``--tlsCAFile`` or ``net.tls.CAFile``
   (or their aliases ``--sslCAFile`` or ``ssl.CAFile``) is not
   specified, the system-wide CA certificate store will be used when
   connecting to an TLS/SSL-enabled server. In previous versions of
   MongoDB, the :binary:`~bin.mongo` shell exited with an error that it
   could not validate the certificate.
   
   .. include:: /includes/extracts/ssl-facts-x509-ca-file.rst
---
ref: ssl-facts-invalid-cert-warning-clients
content: |

   # We created a separate blurb for tls in the ssl-clients page.

   .. warning::

      Although available, avoid using the
      ``--sslAllowInvalidCertificates`` option if possible. If the use of
      ``--sslAllowInvalidCertificates`` is necessary, only use the option
      on systems where intrusion is not possible.

      If the :binary:`~bin.mongo` shell (and other
      :ref:`mongodb-tools-support-ssl`) runs with the
      ``--sslAllowInvalidCertificates`` option, the
      :binary:`~bin.mongo` shell (and other
      :ref:`mongodb-tools-support-ssl`) will not attempt to validate
      the server certificates. This creates a vulnerability to expired
      :binary:`~bin.mongod` and :binary:`~bin.mongos` certificates as
      well as to foreign processes posing as valid
      :binary:`~bin.mongod` or :binary:`~bin.mongos` instances. If you
      only need to disable the validation of the hostname in the
      TLS/SSL certificates, see ``--sslAllowInvalidHostnames``.

---
ref: ssl-facts-mongo-ssl-hostname-verification
content: |

   The :binary:`~bin.mongo` shell verifies that the hostname (specified
   in :option:`--host <mongo --host>` option or the connection string)
   matches the ``SAN`` (or, if ``SAN`` is not present, the ``CN``) in
   the certificate presented by the :binary:`~bin.mongod` or
   :binary:`~bin.mongos`. If ``SAN`` is present, :binary:`~bin.mongo`
   does not match against the ``CN``. If the hostname does not match
   the ``SAN`` (or ``CN``), the :binary:`~bin.mongo` shell will fail to
   connect.

---
ref: ssl-facts-certificate-selector-properties
content: |

    .. list-table::
       :header-rows: 1
       :widths: 20 20 60

       * - Property
         - Value type
         - Description
     
       * - ``subject``
         - ASCII string
         - Subject name or common name on certificate

       * - ``thumbprint``
         - hex string

         - A sequence of bytes, expressed as hexadecimal, used to
           identify a public key by its SHA-1 digest.

           The ``thumbprint`` is sometimes referred to as a
           ``fingerprint``.

---
ref: ssl-facts-certificate-selector-revocation
content: |

   When using the system SSL certificate store, OCSP (Online
   Certificate Status Protocol) is used to validate the revocation
   status of certificates.

...
