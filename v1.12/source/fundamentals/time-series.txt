.. _golang-time-series:

=======================
Time Series Collections
=======================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Overview
--------

In this guide, you can learn about **time series collections** in
MongoDB, and how to interact with them in the {+driver-long+}.

Time series collections efficiently store sequences of measurements over
a period of time. The collection consists of time series data with the
following information:

- Data collected over time
- Metadata that describes the measurement
- Date of the measurement

.. list-table::
   :widths: 33, 33, 33
   :header-rows: 1
   :stub-columns: 1

   * - Example
     - Measurement
     - Metadata

   * - Sales Data
     - Revenue
     - Company

   * - Infection Rates
     - Amount of People Infected
     - Location

Create a Time Series Collection
-------------------------------

.. important::

   Time series collections require MongoDB 5.0 or later.

To create a time series collection, pass the following parameters to the
``CreateCollection()`` method:

- The name of the new collection to create
- The ``TimeSeriesOptions`` object specifying at least the time field

Example
~~~~~~~

The following example creates the ``march2022`` time series collection in the
``db`` database with the ``temperature`` as the time field:

.. literalinclude:: /includes/fundamentals/code-snippets/timeSeries.go
   :start-after: begin create ts coll
   :end-before: end create ts coll
   :emphasize-lines: 4, 7
   :language: go
   :dedent:

To check if you created the collection, send the ``"listCollections"``
command to the ``RunCommand()`` method:

.. io-code-block::
   :copyable: true

   .. input:: /includes/fundamentals/code-snippets/timeSeriesRunCommand.go
      :language: go
      :emphasize-lines: 2, 6

   .. output:: 
      :visible: false
      :emphasize-lines: 9, 11, 15
      :language: json

      {  
         ...
         "cursor": {
              "firstBatch": [
                  {
                      "info": {
                          "readOnly": false
                      },
                      "name": "march2022",
                      "options": {
                          "timeseries": {
                              ...
                          }
                      },
                      "type": "timeseries"
                  },
          ...
       }

Query a Time Series Collection
------------------------------

To query a time series collection, use the same conventions as you
would for :ref:`retrieving <golang-retrieve>` and aggregating data.

Additional Information
----------------------

To learn more about the operations mentioned, see the following
guides:

- :ref:`manual-timeseries-collection`
- :ref:`manual-timeseries-collection-limitations`
- :ref:`golang-run-command-usage-example`
- :ref:`golang-retrieve`

.. TODO: db and collections, run command fundamentals page, aggregation page

API Documentation
~~~~~~~~~~~~~~~~~

To learn more about any of the methods or types discussed in this
guide, see the following API Documentation:

- `TimeSeriesOptions <{+api+}/mongo/options#TimeSeriesOptions>`__
- `SetTimeField() <{+api+}/mongo/options#TimeSeriesOptions.SetTimeField>`__
- `CreateCollection() <{+api+}/mongo#Database.CreateCollection>`__
- `SetTimeSeriesOptions() <{+api+}/mongo/options#CreateCollectionOptions.SetTimeSeriesOptions>`__
- `RunCommand() <{+api+}/mongo#Database.RunCommand>`__
