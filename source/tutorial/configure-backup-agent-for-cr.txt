=====================================
Configure Backup Agent for MONGODB-CR
=====================================

.. default-domain:: mongodb

If your MongoDB deployment enforces access control, the |mms| Backup
Agent must authenticate to MongoDB as a user with the proper access.

To authenticate using ``MONGODB-CR``, create a user in the ``admin``
database with the appropriate roles in MongoDB.

MongoDB user roles are separate from |mms| :doc:`user roles
</reference/user-roles>` and are described in the MongoDB manual beginning
with the :manual:`Authorization </core/authorization>` page.

Considerations
--------------

.. include:: /includes/considerations-agent-access-control.rst

.. only:: classic

   .. include:: /includes/fact-auth-backup-requirements.rst

Prerequisites
-------------

.. include:: /includes/prerequisites-create-user-for-agent.rst


3.0 and Later
-------------

To backup MongoDB instances running 3.0 and later, create a user in
the ``admin`` database with an operation that resembles the following:

.. code-block:: javascript

   use admin
   db.createUser(
      {
        user: "<username>",
        pwd: "<password>",
        roles: [ { role: "backup", db: "admin" } ]
      }
   )

See :ref:`Access Control for MongoDB 3.0
<access-control-backup-3.0>` for more information on the
required access.

MongoDB 2.6
-----------

To backup MongoDB 2.6 release series instances, create a user in the
``admin`` database with an operation that resembles the following:

.. code-block:: javascript

   use admin
   db.createUser(
      {
        user: "<username>",
        pwd: "<password>",
        roles: [ 
           "clusterAdmin",
           "readAnyDatabase",
           "userAdminAnyDatabase",
           { role: "readWrite", db: "admin" },
           { role: "readWrite", db: "local" },
        ]
      }
   )

See :ref:`Access Control for MongoDB 2.6
<access-control-backup-2.6>` for more information on the
required access.

MongoDB 2.4
-----------

To backup MongoDB 2.4 release series instances, create a user in the
``admin`` database with an operation that resembles the following:

.. code-block:: javascript

   use admin
   db.addUser(
      {
        user: "<username>",
        pwd: "<password>",
        roles: [
           "clusterAdmin",
           "readAnyDatabase",
           "userAdminAnyDatabase"
        ],
        otherDBRoles: { 
           local: ['readWrite'],
           admin: ['readWrite']
        }
      }
   )

See :ref:`Access Control for MongoDB 2.4
<access-control-backup-2.4>` for more information on the
required access.

Host Settings
-------------

.. include:: /includes/fact-access-control-host-settings.rst
