# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: 2013-12-16 22:44+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# 35365b1a8e1f46a7a7e1fef6fb79a857
#: ../source/tutorial/troubleshoot-replica-sets.txt:3
msgid "Troubleshoot Replica Sets"
msgstr ""

# 2f92ae46152843f5a9ca51a0cbcc6ec3
#: ../source/tutorial/troubleshoot-replica-sets.txt
msgid "On this page"
msgstr ""

# 3fef7a09e25642eba1dee64902d65ea8
#: ../source/tutorial/troubleshoot-replica-sets.txt:13
msgid ""
"This section describes common strategies for troubleshooting "
":term:`replica set` deployments."
msgstr ""

# 5672507c2e40480b8c771910e240109e
#: ../source/tutorial/troubleshoot-replica-sets.txt:19
msgid "Check Replica Set Status"
msgstr ""

# 07c00e86d99e43e5a0203c4ac67267ab
#: ../source/tutorial/troubleshoot-replica-sets.txt:21
msgid ""
"To display the current state of the replica set and current state of each"
" member, run the :method:`rs.status()` method in a :program:`mongo` shell"
" connected to the replica set's :term:`primary`. For descriptions of the "
"information displayed by :method:`rs.status()`, see "
":doc:`/reference/command/replSetGetStatus`."
msgstr ""

# 5081682246f64522842bd8b9cf304eee
#: ../source/tutorial/troubleshoot-replica-sets.txt:29
msgid ""
"The :method:`rs.status()` method is a wrapper that runs the "
":dbcommand:`replSetGetStatus` database command."
msgstr ""

# e32c9a2487a34727a527e36775443772
#: ../source/tutorial/troubleshoot-replica-sets.txt:35
msgid "Check the Replication Lag"
msgstr ""

# c8fab16996df4f7781864e214029a749
#: ../source/tutorial/troubleshoot-replica-sets.txt:37
msgid ""
"Replication lag is a delay between an operation on the :term:`primary` "
"and the application of that operation from the :term:`oplog` to the "
":term:`secondary`. Replication lag can be a significant issue and can "
"seriously affect MongoDB :term:`replica set` deployments. Excessive "
"replication lag makes \"lagged\" members ineligible to quickly become "
"primary and increases the possibility that distributed read operations "
"will be inconsistent."
msgstr ""

# 11a2231198634693a043057d8ff9690c
#: ../source/tutorial/troubleshoot-replica-sets.txt:45
msgid "To check the current length of replication lag:"
msgstr ""

# 5ee39d1244e44d5090e22eaca176b633
#: ../source/tutorial/troubleshoot-replica-sets.txt:47
msgid ""
"In a :program:`mongo` shell connected to the primary, call the "
":method:`rs.printSlaveReplicationInfo()` method."
msgstr ""

# 252187fd1a114a47879910885a3cf967
#: ../source/tutorial/troubleshoot-replica-sets.txt:50
msgid ""
"Returns the ``syncedTo`` value for each member, which shows the time when"
" the last oplog entry was written to the secondary, as shown in the "
"following example:"
msgstr ""

# 8977c75971b34a9e98105bec746bec57
#: ../source/tutorial/troubleshoot-replica-sets.txt:63
msgid ""
"A :ref:`delayed member <replica-set-delayed-members>` may show as ``0`` "
"seconds behind the primary when the inactivity period on the primary is "
"greater than the :rsconf:`members[n].slaveDelay` value."
msgstr ""

# 16fa5160c08847d68ba4067f61b2d769
#: ../source/tutorial/troubleshoot-replica-sets.txt:70
msgid ""
"The :method:`rs.status()` method is a wrapper around the "
":dbcommand:`replSetGetStatus` database command."
msgstr ""

# b4847d57dd55440f9c5bf9aee09da5c8
#: ../source/tutorial/troubleshoot-replica-sets.txt:73
msgid ""
"Monitor the rate of replication by watching the oplog time in the "
"\"replica\" graph in the |mms-home| and in :products:`Ops Manager, an on-"
"premise solution available in MongoDB Enterprise Advanced </mongodb-"
"enterprise-advanced?jmp=docs>`. For more information see the |mms-docs| "
"and :opsmgr:`Ops Manager documentation </>`."
msgstr ""

# ea16d53a98b14496bd80dfb5e2cc90ef
#: ../source/tutorial/troubleshoot-replica-sets.txt:83
msgid "Possible causes of replication lag include:"
msgstr ""

# 2ad342d372c948be9e6c6e70d6d25a4e
#: ../source/tutorial/troubleshoot-replica-sets.txt:85
msgid "**Network Latency**"
msgstr ""

# 5e2ea2b73ee945d28a6562476794e5e0
#: ../source/tutorial/troubleshoot-replica-sets.txt:87
msgid ""
"Check the network routes between the members of your set to ensure that "
"there is no packet loss or network routing issue."
msgstr ""

# 874c75d9424644459cb9bfea47908eb8
#: ../source/tutorial/troubleshoot-replica-sets.txt:90
msgid ""
"Use tools including ``ping`` to test latency between set members and "
"``traceroute`` to expose the routing of packets network endpoints."
msgstr ""

# 451ffc5daf014bfe966f6122e651ff5e
#: ../source/tutorial/troubleshoot-replica-sets.txt:94
msgid "**Disk Throughput**"
msgstr ""

# e925f31dcaea43eaa9820a0f529bb911
#: ../source/tutorial/troubleshoot-replica-sets.txt:96
msgid ""
"If the file system and disk device on the secondary is unable to flush "
"data to disk as quickly as the primary, then the secondary will have "
"difficulty keeping state. Disk-related issues are incredibly prevalent on"
" multi-tenant systems, including virtualized instances, and can be "
"transient if the system accesses disk devices over an IP network (as is "
"the case with Amazon's EBS system.)"
msgstr ""

# 7110635ffbe14a12b66f86bac328e472
#: ../source/tutorial/troubleshoot-replica-sets.txt:104
msgid ""
"Use system-level tools to assess disk status, including ``iostat`` or "
"``vmstat``."
msgstr ""

# 6b982d30876e4d759d4b9f230095d70c
#: ../source/tutorial/troubleshoot-replica-sets.txt:107
msgid "**Concurrency**"
msgstr ""

# 0aeb25f59b7b47daa05cbf10f565fe8a
#: ../source/tutorial/troubleshoot-replica-sets.txt:109
msgid ""
"In some cases, long-running operations on the primary can block "
"replication on secondaries. For best results, configure :ref:`write "
"concern <wc-w>` to require confirmation of replication to secondaries. "
"This prevents write operations from returning if replication cannot keep "
"up with the write load."
msgstr ""

# 0f8f443fda9c4cd99309f8ea1e4664c9
#: ../source/tutorial/troubleshoot-replica-sets.txt:115
msgid ""
"Use the :term:`database profiler` to see if there are slow queries or "
"long-running operations that correspond to the incidences of lag."
msgstr ""

# 60a02b6e111646d69d265f2b68724484
#: ../source/tutorial/troubleshoot-replica-sets.txt:118
msgid "**Appropriate Write Concern**"
msgstr ""

# 17f5b996a6004c69b9dc760359c72b72
#: ../source/tutorial/troubleshoot-replica-sets.txt:120
msgid ""
"If you are performing a large data ingestion or bulk load operation that "
"requires a large number of writes to the primary, particularly with "
":writeconcern:`unacknowledged write concern <0>`, the secondaries will "
"not be able to read the oplog fast enough to keep up with changes."
msgstr ""

# d67eb544890c4606a4ba7e4528b42d9c
#: ../source/tutorial/troubleshoot-replica-sets.txt:126
msgid ""
"To prevent this, request :doc:`write acknowledgment write concern "
"</reference/write-concern>` after every 100, 1,000, or an another "
"interval to provide an opportunity for secondaries to catch up with the "
"primary."
msgstr ""

# 402c90bd4ffb4e79ab4a4ad422c72c73
#: ../source/tutorial/troubleshoot-replica-sets.txt:131
msgid "For more information see:"
msgstr ""

# c2baacd172af4d6989ed3a757150a3b2
#: ../source/tutorial/troubleshoot-replica-sets.txt:133
msgid ":ref:`Write Concern <wc-w>`"
msgstr ""

# 815b75aab2c142c7add6a4642d4a1a8a
#: ../source/tutorial/troubleshoot-replica-sets.txt:134
msgid ":ref:`Replica Set Write Concern <write-operations-replica-sets>`"
msgstr ""

# 2b4dcf24e0c94aa0940e0124fd6ff7aa
#: ../source/tutorial/troubleshoot-replica-sets.txt:135
msgid ":ref:`replica-set-oplog-sizing`"
msgstr ""

# 36f0c0280b774257ae28e1c9a10ca396
#: ../source/tutorial/troubleshoot-replica-sets.txt:140
msgid "Test Connections Between all Members"
msgstr ""

# 5ca03eae1a99465fb16d34bbf2e176b4
#: ../source/tutorial/troubleshoot-replica-sets.txt:142
msgid ""
"All members of a :term:`replica set` must be able to connect to every "
"other member of the set to support replication. Always verify connections"
" in both \"directions.\"  Networking topologies and firewall "
"configurations can prevent normal and required connectivity, which can "
"block replication."
msgstr ""

# 186b088520834d53afe7871848b6a5d8
#: ../source/tutorial/troubleshoot-replica-sets.txt:148
msgid "Consider the following example of a bidirectional test of networking:"
msgstr ""

# 161d21dea3a4420cadd03ca655c4c580
# 958cf032b6bf48a0a045892ec192f3a1
# c0a644b3b5dd4a5fb0fa29e2f78f9896
#: ../source/tutorial/troubleshoot-replica-sets.txt
msgid "Example"
msgstr ""

# 48926301e7ef43ab8c5df627fdfb821a
#: ../source/tutorial/troubleshoot-replica-sets.txt:153
msgid "``m1.example.net``"
msgstr ""

# 7b1a36cef0de4a1d9ab4e1d370e5edb0
#: ../source/tutorial/troubleshoot-replica-sets.txt:154
msgid "``m2.example.net``"
msgstr ""

# 9a7a91baca4b4f7cacdd1762c928e04d
#: ../source/tutorial/troubleshoot-replica-sets.txt:155
msgid "``m3.example.net``"
msgstr ""

# bb0ff3a22353480096a5366163cf5ced
#: ../source/tutorial/troubleshoot-replica-sets.txt:157
msgid ""
"Test the connection from ``m1.example.net`` to the other hosts with the "
"following operation set ``m1.example.net``:"
msgstr ""

# 68f6608996c1467bb60dee72f8f08aeb
#: ../source/tutorial/troubleshoot-replica-sets.txt:166
msgid ""
"Test the connection from ``m2.example.net`` to the other two hosts with "
"the following operation set from ``m2.example.net``, as in:"
msgstr ""

# 1588aa52d50042299e8c0a99aa23e0e4
#: ../source/tutorial/troubleshoot-replica-sets.txt:176
msgid ""
"You have now tested the connection between ``m2.example.net`` and "
"``m1.example.net`` in both directions."
msgstr ""

# 00288065df9542f1b024532822651a2b
#: ../source/tutorial/troubleshoot-replica-sets.txt:179
msgid ""
"Test the connection from ``m3.example.net`` to the other two hosts with "
"the following operation set from the ``m3.example.net`` host, as in:"
msgstr ""

# 0572a96f0e4c48f39a45dbef8453dec0
#: ../source/tutorial/troubleshoot-replica-sets.txt:189
msgid ""
"If any connection, in any direction fails, check your networking and "
"firewall configuration and reconfigure your environment to allow these "
"connections."
msgstr ""

# f2ce84f18be5472e9b07688f059b20af
#: ../source/tutorial/troubleshoot-replica-sets.txt:194
msgid "Socket Exceptions when Rebooting More than One Secondary"
msgstr ""

# c10cf228eee74b33bf184fd137981445
#: ../source/tutorial/troubleshoot-replica-sets.txt:196
msgid ""
"When you reboot members of a replica set, ensure that the set is able to "
"elect a primary during the maintenance. This means ensuring that a "
"majority of the set's :rsconf:`members[n].votes` are available."
msgstr ""

# bf2b132f53af4aad919ac98a8ce775be
#: ../source/tutorial/troubleshoot-replica-sets.txt:201
msgid ""
"When a set's active members can no longer form a majority, the set's "
":term:`primary` steps down and becomes a :term:`secondary`. The former "
"primary closes all open connections to client applications. Clients "
"attempting to write to the former primary receive socket exceptions and "
"*Connection reset* errors until the set can elect a primary."
msgstr ""

# c846148eb7214edc85fe9c75f9aaadd6
#: ../source/tutorial/troubleshoot-replica-sets.txt:215
msgid ""
"For more information on votes, see :doc:`/core/replica-set-elections`. "
"For related information on connection errors, see :ref:`faq-keepalive`."
msgstr ""

# 2047250d3fce4519b760701a4a63abb3
#: ../source/tutorial/troubleshoot-replica-sets.txt:221
msgid "Check the Size of the Oplog"
msgstr ""

# 4708b071daab430f8b5c80473d82fd69
#: ../source/tutorial/troubleshoot-replica-sets.txt:223
msgid ""
"A larger :term:`oplog` can give a replica set a greater tolerance for "
"lag, and make the set more resilient."
msgstr ""

# 6ad03637d81b45db85c48ab04ef1a724
#: ../source/tutorial/troubleshoot-replica-sets.txt:226
msgid ""
"To check the size of the oplog for a given :term:`replica set` member, "
"connect to the member in a :program:`mongo` shell and run the "
":method:`rs.printReplicationInfo()` method."
msgstr ""

# 7323d1af558c4247a4bca5e1e13cc0c6
#: ../source/tutorial/troubleshoot-replica-sets.txt:230
msgid ""
"The output displays the size of the oplog and the date ranges of the "
"operations contained in the oplog. In the following example, the oplog is"
" about 10 MB and is able to fit about 26 hours (94400 seconds) of "
"operations:"
msgstr ""

# 00c426f747d5428a83e11f19423bacdd
#: ../source/tutorial/troubleshoot-replica-sets.txt:243
msgid ""
"The oplog should be long enough to hold all transactions for the longest "
"downtime you expect on a secondary. At a minimum, an oplog should be able"
" to hold minimum 24 hours of operations; however, many users prefer to "
"have 72 hours or even a week's work of operations."
msgstr ""

# 3f81c9d958574cf7bbde39a3c55869d5
#: ../source/tutorial/troubleshoot-replica-sets.txt:248
msgid "For more information on how oplog size affects operations, see:"
msgstr ""

# 96b7d6197e024c7a8d8f2005037e16ce
#: ../source/tutorial/troubleshoot-replica-sets.txt:250
msgid ":ref:`replica-set-oplog-sizing`,"
msgstr ""

# da3edf6704db4439b53b74d0254d8180
#: ../source/tutorial/troubleshoot-replica-sets.txt:251
msgid ":ref:`replica-set-delayed-members`, and"
msgstr ""

# f971e3d31d0f466c81e938ead29971d6
#: ../source/tutorial/troubleshoot-replica-sets.txt:252
msgid ":ref:`replica-set-replication-lag`."
msgstr ""

# 1bfb94efc0e2494792edf8648106fde6
#: ../source/tutorial/troubleshoot-replica-sets.txt:254
msgid ""
"You normally want the oplog to be the same size on all members. If you "
"resize the oplog, resize it on all members."
msgstr ""

# 6caeda0e08fc4a15a6783373228b8358
#: ../source/tutorial/troubleshoot-replica-sets.txt:257
msgid "To change oplog size, see the :doc:`/tutorial/change-oplog-size` tutorial."
msgstr ""

# 8c5c4f6f7f1c404db984b70eaca32aad
#: ../source/tutorial/troubleshoot-replica-sets.txt:262
msgid "Oplog Entry Timestamp Error"
msgstr ""

# 472f8ee9c8704071be0b1d0a443e6269
#: ../source/tutorial/troubleshoot-replica-sets.txt:266
msgid "Consider the following error in :program:`mongod` output and logs:"
msgstr ""

# 775376914ca540d78071d9ae1915dbad
#: ../source/tutorial/troubleshoot-replica-sets.txt:273
msgid ""
"Often, an incorrectly typed value in the ``ts`` field in the last "
":term:`oplog` entry causes this error. The correct data type is "
"Timestamp."
msgstr ""

# 1124b286a1324454bdfd661196bf5968
#: ../source/tutorial/troubleshoot-replica-sets.txt:277
msgid ""
"Check the type of the ``ts`` value using the following two queries "
"against the oplog collection:"
msgstr ""

# fc1a658f1ca843e18466dfecc4de10c1
#: ../source/tutorial/troubleshoot-replica-sets.txt:286
msgid ""
"The first query returns the last document in the oplog, while the second "
"returns the last document in the oplog where the ``ts`` value is a "
"Timestamp. The :query:`$type` operator allows you to select :term:`BSON "
"type <BSON types>` 17, is the Timestamp data type."
msgstr ""

# ea719fa7dad045e19d964041f52ed4c5
#: ../source/tutorial/troubleshoot-replica-sets.txt:291
msgid ""
"If the queries don't return the same document, then the last document in "
"the oplog has the wrong data type in the ``ts`` field."
msgstr ""

# 1757633cf6ec4b8fa5041eef5c544b55
#: ../source/tutorial/troubleshoot-replica-sets.txt:296
msgid "If the first query returns this as the last oplog entry:"
msgstr ""

# 4fc199ead2674007b90e9ca3e8007939
#: ../source/tutorial/troubleshoot-replica-sets.txt:306
msgid ""
"And the second query returns this as the last entry where ``ts`` has the "
"``Timestamp`` type:"
msgstr ""

# 639e1e38246f40f1a1335547d03093cb
#: ../source/tutorial/troubleshoot-replica-sets.txt:317
msgid ""
"Then the value for the ``ts`` field in the last oplog entry is of the "
"wrong data type."
msgstr ""

# 95bd030dac1847768593902f10f5e63d
#: ../source/tutorial/troubleshoot-replica-sets.txt:320
msgid ""
"To set the proper type for this value and resolve this issue, use an "
"update operation that resembles the following:"
msgstr ""

# 23c52b808b314cc1aeb03811a936cbc5
#: ../source/tutorial/troubleshoot-replica-sets.txt:328
msgid ""
"Modify the timestamp values as needed based on your oplog entry. This "
"operation may take some period to complete because the update must scan "
"and pull the entire oplog into memory."
msgstr ""

# c8de87a9235e40a68bdfc1b0ec1d01b9
#: ../source/tutorial/troubleshoot-replica-sets.txt:333
msgid "Duplicate Key Error on ``local.slaves``"
msgstr ""

# 75baf9abec1847daa159d44b6df51f13
#: ../source/tutorial/troubleshoot-replica-sets.txt:337
msgid ""
"MongoDB 3.0.0 removes the :data:`local.slaves` collection. For "
"``local.slaves`` error in earlier versions of MongoDB, refer to the "
"appropriate version of the MongoDB Manual."
msgstr ""

#~ msgid ""
#~ "The returned document displays the "
#~ "``syncedTo`` value for each member, "
#~ "which shows you when each member "
#~ "last read from the oplog, as shown"
#~ " in the following example:"
#~ msgstr ""

# 2acee7d06bf14495a2f9dd889035b7c5
#~ msgid ""
#~ "Monitor the rate of replication by "
#~ "watching the oplog time in the "
#~ "\"replica\" graph in the `MongoDB "
#~ "Management Service`_. For more information "
#~ "see the `documentation for MMS`_."
#~ msgstr ""

# 6808a38bbd714e049b713ae439b08131
#~ msgid ""
#~ "In some cases, long-running operations"
#~ " on the primary can block replication"
#~ " on secondaries. For best results, "
#~ "configure :ref:`write concern <write-concern>`"
#~ " to require confirmation of replication "
#~ "to secondaries, as described in "
#~ ":ref:`replica set write concern <replica-"
#~ "set-write-concern>`. This prevents write"
#~ " operations from returning if replication"
#~ " cannot keep up with the write "
#~ "load."
#~ msgstr ""

# 0c5191a14728425190a5e9befb50da53
#~ msgid ""
#~ "If you are performing a large data"
#~ " ingestion or bulk load operation "
#~ "that requires a large number of "
#~ "writes to the primary, particularly with"
#~ " :ref:`unacknowledged write concern <write-"
#~ "concern-unacknowledged>`, the secondaries will"
#~ " not be able to read the oplog"
#~ " fast enough to keep up with "
#~ "changes."
#~ msgstr ""

# 40346350844f47a2ae7c980ae7db101a
#~ msgid ""
#~ "To prevent this, require :ref:`write "
#~ "acknowledgment or journaled write concern "
#~ "<write-operations-write-concern>` after "
#~ "every 100, 1,000, or an another "
#~ "interval to provide an opportunity for"
#~ " secondaries to catch up with the "
#~ "primary."
#~ msgstr ""

# 59264ae7d0344484bc39ce8667e2023f
#~ msgid ":ref:`Replica Acknowledge Write Concern <replica-set-write-concern>`"
#~ msgstr ""

# 6a4aff36f3af4cf68e52ab0adef8be03
#~ msgid ""
#~ "All members of a :term:`replica set` "
#~ "must be able to connect to every"
#~ " other member of the set to "
#~ "support replication. Always verify connections"
#~ " in both \"directions.\"  Networking "
#~ "topologies and firewall configurations prevent"
#~ " normal and required connectivity, which"
#~ " can block replication."
#~ msgstr ""

# 2c05d6219b834eb594cd71c2fe7baa55
#~ msgid ""
#~ "When you reboot members of a "
#~ "replica set, ensure that the set "
#~ "is able to elect a primary during"
#~ " the maintenance. This means ensuring "
#~ "that a majority of the set's "
#~ "':data:`~local.system.replset.members[n].votes` are "
#~ "available."
#~ msgstr ""

# dddd1e573000418e998bdb74b08b926e
#~ msgid ""
#~ "The output displays the size of "
#~ "the oplog and the date ranges of"
#~ " the operations contained in the "
#~ "oplog. In the following example, the "
#~ "oplog is about 10MB and is able"
#~ " to fit about 26 hours (94400 "
#~ "seconds) of operations:"
#~ msgstr ""

# 826d967d91d14695a0a2831097c8a5fb
#~ msgid ""
#~ "The *duplicate key on local.slaves* "
#~ "error, occurs when a :term:`secondary` "
#~ "or :term:`slave` changes its hostname "
#~ "and the :term:`primary` or :term:`master` "
#~ "tries to update its ``local.slaves`` "
#~ "collection with the new name. The "
#~ "update fails because it contains the "
#~ "same ``_id`` value as the document "
#~ "containing the previous hostname. The "
#~ "error itself will resemble the "
#~ "following."
#~ msgstr ""

# 451499a95f06447392dfaac0aaa04533
#~ msgid ""
#~ "This is a benign error and does"
#~ " not affect replication operations on "
#~ "the :term:`secondary` or :term:`slave`."
#~ msgstr ""

# 0e9742a6780e4dae8eb9ef827b693cf6
#~ msgid ""
#~ "To prevent the error from appearing, "
#~ "drop the ``local.slaves`` collection from "
#~ "the :term:`primary` or :term:`master`, with"
#~ " the following sequence of operations "
#~ "in the :program:`mongo` shell:"
#~ msgstr ""

# 35acacabbdb1413dac1f60bf020c5ccc
#~ msgid ""
#~ "The next time a :term:`secondary` or "
#~ ":term:`slave` polls the :term:`primary` or "
#~ ":term:`master`, the :term:`primary` or "
#~ ":term:`master` recreates the ``local.slaves`` "
#~ "collection."
#~ msgstr ""

#~ msgid ""
#~ "A :ref:`delayed member <replica-set-"
#~ "delayed-members>` may show as ``0`` "
#~ "seconds behind the primary when the "
#~ "inactivity period on the primary is "
#~ "greater than the "
#~ ":data:`~local.system.replset.members[n].slaveDelay` value."
#~ msgstr ""

