==============================================
Authenticate Using SASL and LDAP with OpenLDAP
==============================================

.. default-domain:: mongodb

Overview
--------

MongoDB Enterprise provides support for proxy authentication of users.
This allows administrators to configure a MongoDB cluster to authenticate
users via Linux PAM or by proxying authentication requests to a specified
Lightweight Directory Access Protocol (LDAP) service.

MongoDB does **not** support LDAP authentication in mixed sharded cluster
deployments that contain both version 2.4 and version 2.6 shards. See
:doc:`/release-notes/2.6-upgrade` for upgrade instructions.

.. include:: /includes/admonition-mongodb-enterprise-windows-ldap.rst

Considerations
--------------

Because the transmission of the username and password from the client
to the MongoDB server, from the MongoDB server to ``saslauthd``, and
from ``saslauthd`` to the LDAP server uses ``SASL PLAIN`` mechanism,
i.e. in **plain text**, you should, in general, use only on a trusted
channel (VPN, SSL, trusted wired network).

Procedures
----------

To use LDAP for user authentication, configure the ``saslauthd`` daemon
process and the MongoDB server, as described here.

Configure ``saslauthd`` to use OpenLDAP as the Authentication Mechanism
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Update the ``saslauthd.conf`` file with the following configuration
options:

.. code-block:: none

   ldap_servers: <ldap uri, e.g. ldaps://ad.example.net>
   ldap_search_base: <search base, e.g. ou=Users,dc=example,dc=com>
   ldap_filter: <filter, e.g. (uid=%u)>

For the ``<ldap uri>``, specify the uri of the ldap server. For example,
``ldap_servers: ldaps://ad.example.net``.

For example, a sample ``saslauthd.conf`` file may have the following
content:

.. code-block:: none

   ldap_servers: ldaps://ad.example.net
   ldap_search_base: ou=Users,dc=example,dc=com
   ldap_filter: (uid=%u)

The values for these configuration options should correspond to the
values specific for your test. For example, to filter on email, specify
``ldap_filter: (mail=%n)`` instead.

To use this sample OpenLDAP configuration, create users with a ``uid``
attribute (login name) and place under the ``Users`` organizational
unit (``ou``) under the domain components (``dc``) ``example`` and
``com``.

For more information on ``saslauthd`` configuration, see
`<http://www.openldap.org/doc/admin24/guide.html#Configuring saslauthd>`_.

Configure MongoDB Server to use ``saslauthd`` for Authentication
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To configure the MongoDB server to use ``saslauthd`` set the following
options. Use either the :doc:`configuration file
</reference/configuration-options>` or the command line:

- :setting:`auth`. This option enables authentication and authorization.
  Either set :setting:`auth` to ``true`` in the configuration file or
  enable :option:`--auth` on the command-line.

- :parameter:`authenticationMechanisms`. Set this parameter to ``PLAIN``.

  - If using the configuration file, set the following:

    .. code-block:: sh

       setParameter=authenticationMechanisms=PLAIN

  - If using the command line, use :doc:`--setParameter
    </reference/parameters>` to set the following:

    .. code-block:: sh

       --setParameter authenticationMechanisms=PLAIN

- :parameter:`saslauthdPath`. Set this parameter to the path of the
  Unix-domain Socket of the ``saslauthd`` instance.

  For example, to set this option in the configuration file for a system
  that uses ``/etc/sysconfig/saslauthd``, set the following:

  .. code-block:: sh

     setParameter=saslauthdPath=/etc/sysconfig/saslauthd/mux

  To use the default Unix-domain socket path, set
  :parameter:`saslauthdPath` to the empty string ``""``.

The following example sets the parameters using a :doc:`configuration file
</reference/configuration-options>`:

.. code-block:: sh

   auth=true
   setParameter=authenticationMechanisms=PLAIN
   setParameter=saslauthdPath=/<path>/saslauthd/mux

Add a User for Authentication
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Add the user to the ``$external`` database in MongoDB. To specify the
user's privileges, assign :doc:`roles </core/authorization>` to the user.
For example, the following adds a user with read-only access to the
records database:

.. code-block:: sh

   db.getSiblingDB("$external").createUser(
       {
           user : <username>,
           roles: [ { role: "read", db: "records" } ]
       }
   )

Authenticate a Client
~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/steps/authenticate-through-ldap.rst
