# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:3
msgid "Migrate a Sharded Cluster to Different Hardware"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:13
msgid "The tutorial is specific to MongoDB |version|. For earlier versions of MongoDB, refer to the corresponding version of the MongoDB Manual."
msgstr ""

#: ../source/includes/fact-mirrored-config-servers-deprecated.rst:1
msgid "Starting in MongoDB 3.2, config servers for sharded clusters can be deployed as a :doc:`replica set </replication>`. The replica set config servers must run the :doc:`WiredTiger storage engine </core/wiredtiger>`. MongoDB 3.2 deprecates the use of three mirrored :binary:`~bin.mongod` instances for config servers."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:18
msgid "This procedure moves the components of the :term:`sharded cluster` to a new hardware system without downtime for reads and writes."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:21
msgid "While the migration is in progress, do not attempt to change to the :ref:`sharding-internals-config-database`. Do not use any operation that modifies the cluster metadata *in any way*. For example, do not create or drop databases, create or drop collections, or use any sharding commands."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:30
msgid "Disable the Balancer"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:32
msgid "Disable the balancer to stop :doc:`chunk migration </core/sharding-balancer-administration>` and do not perform any metadata write operations until the process finishes. If a migration is in progress, the balancer will complete the in-progress migration before stopping."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:38
msgid "To disable the balancer, connect to one of the cluster's :binary:`~bin.mongos` instances and issue the following method:"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:45
#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:191
msgid "To check the balancer state, issue the :method:`sh.getBalancerState()` method."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:48
msgid "For more information, see :ref:`sharding-balancing-disable-temporarily`."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:53
msgid "Migrate Each Config Server Separately"
msgstr ""

#: ../source/includes/fact-csrs-versionchanged.rst:1
msgid "Starting in MongoDB 3.2, config servers for sharded clusters can be deployed as a :doc:`replica set </replication>` (CSRS) instead of three mirrored config servers (SCCC). Using a replica set for the config servers improves consistency across the config servers, since MongoDB can take advantage of the standard replica set read and write protocols for the config data. In addition, using a replica set for config servers allows a sharded cluster to have more than 3 config servers since a replica set can have up to 50 members. To deploy config servers as a replica set, the config servers must run the :doc:`WiredTiger storage engine </core/wiredtiger>`."
msgstr ""

#: ../source/includes/fact-csrs-versionchanged.rst:12
msgid "In version 3.4, MongoDB :ref:`removes support for SCCC config servers <3.4-compat-remove-sccc>`."
msgstr ""

#: ../source/includes/fact-config-server-replica-set-restrictions.rst:1
msgid "The following restrictions apply to a replica set configuration when used for config servers:"
msgstr ""

#: ../source/includes/fact-config-server-replica-set-restrictions.rst:4
msgid "Must have zero :doc:`arbiters </core/replica-set-arbiter>`."
msgstr ""

#: ../source/includes/fact-config-server-replica-set-restrictions.rst:6
msgid "Must have no :doc:`delayed members </core/replica-set-delayed-member>`."
msgstr ""

#: ../source/includes/fact-config-server-replica-set-restrictions.rst:9
msgid "Must build indexes (i.e. no member should have :data:`~replSetGetConfig.members[n].buildIndexes` setting set to false)."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:61
msgid "For each member of the config server replica set:"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:63
msgid "Replace the secondary members before replacing the primary."
msgstr ""

#: ../source/includes/steps/replace-disabled-config-server.rst:8
msgid "Start the replacement config server."
msgstr ""

#: ../source/includes/steps/replace-disabled-config-server.rst:11
#: ../source/includes/steps/replace-disabled-config-server.rst:33
msgid "Start a :binary:`~bin.mongod` instance, specifying the ``--configsvr``, ``--replSet``, ``--bind_ip`` options, and other options as appropriate to your deployment."
msgstr ""

#: ../source/includes/warning-bind-ip-security-considerations.rst:3
#: ../source/includes/warning-bind-ip-security-considerations.rst:3
msgid "Before binding to a non-localhost (e.g. publicly accessible) IP address, ensure you have secured your cluster from unauthorized access. For a complete list of security recommendations, see :doc:`/administration/security-checklist`. At minimum, consider :ref:`enabling authentication <checklist-auth>` and :doc:`hardening network infrastructure </core/security-network>`."
msgstr ""

#: ../source/includes/steps/replace-disabled-config-server.rst:30
msgid "Step 1: Start the replacement config server."
msgstr ""

#: ../source/includes/steps/replace-disabled-config-server.rst:52
msgid "Add the new config server to the replica set."
msgstr ""

#: ../source/includes/steps/replace-disabled-config-server.rst:54
#: ../source/includes/steps/replace-disabled-config-server.rst:83
msgid "Connect a :binary:`~bin.mongo` shell to the primary of the config server replica set and use :method:`rs.add()` to add the new member."
msgstr ""

#: ../source/includes/tip-repl-set-add-members.rst:1
#: ../source/includes/tip-repl-set-add-members.rst:1
msgid "When a newly added secondary has its :rsconf:`~members[n].votes` and :rsconf:`~members[n].priority` settings greater than zero, during its initial sync, the secondary still counts as a voting member even though it cannot serve reads nor become primary because its data is not yet consistent."
msgstr ""

#: ../source/includes/tip-repl-set-add-members.rst:7
#: ../source/includes/tip-repl-set-add-members.rst:7
msgid "This can lead to a case where a majority of the voting members are online but no primary can be elected. To avoid such situations, consider adding the new secondary initially with :rsconf:`priority :0 <members[n].priority>` and :rsconf:`votes :0 <members[n].votes>`. Then, once the member has transitioned into :replstate:`SECONDARY` state, use :method:`rs.reconfig()` to update its priority and votes."
msgstr ""

#: ../source/includes/steps/replace-disabled-config-server.rst:67
#: ../source/includes/steps/replace-disabled-config-server.rst:96
msgid "The initial sync process copies all the data from one member of the config server replica set to the new member without restarting."
msgstr ""

#: ../source/includes/steps/replace-disabled-config-server.rst:70
#: ../source/includes/steps/replace-disabled-config-server.rst:99
#: ../source/includes/steps/replace-disabled-config-server.rst:222
msgid ":binary:`~bin.mongos` instances automatically recognize the change in the config server replica set members without restarting."
msgstr ""

#: ../source/includes/steps/replace-disabled-config-server.rst:81
msgid "Step 2: Add the new config server to the replica set."
msgstr ""

#: ../source/includes/steps/replace-disabled-config-server.rst:110
msgid "Update the newly added config server's votes and priority settings."
msgstr ""

#: ../source/includes/steps/replace-disabled-config-server.rst:113
#: ../source/includes/steps/replace-disabled-config-server.rst:150
msgid "Ensure that the new member has reached :replstate:`SECONDARY` state. To check the state of the replica set members, run :method:`rs.status()`:"
msgstr ""

#: ../source/includes/steps/replace-disabled-config-server.rst:122
#: ../source/includes/steps/replace-disabled-config-server.rst:159
msgid "Reconfigure the replica set to update the votes and priority of the new member:"
msgstr ""

#: ../source/includes/steps/replace-disabled-config-server.rst:134
#: ../source/includes/steps/replace-disabled-config-server.rst:171
msgid "where ``n`` is the array index of the new member in the :rsconf:`members` array."
msgstr ""

#: ../source/includes/warning-rs-reconfig.rst:3
#: ../source/includes/warning-rs-reconfig.rst:3
msgid "The :method:`rs.reconfig()` shell method can force the current primary to step down, which causes an :ref:`election <replica-set-elections>`. When the primary steps down, the :binary:`~bin.mongod` closes all client connections. While this typically takes 10-20 seconds, try to make these changes during scheduled maintenance periods."
msgstr ""

#: ../source/includes/warning-mixed-version-rs-config.rst:1
#: ../source/includes/warning-mixed-version-rs-config.rst:1
msgid "Avoid reconfiguring replica sets that contain members of different MongoDB versions as validation rules may differ across MongoDB versions."
msgstr ""

#: ../source/includes/steps/replace-disabled-config-server.rst:147
msgid "Step 3: Update the newly added config server's votes and priority settings."
msgstr ""

#: ../source/includes/steps/replace-disabled-config-server.rst:184
msgid "Shut down the member to replace."
msgstr ""

#: ../source/includes/steps/replace-disabled-config-server.rst:186
#: ../source/includes/steps/replace-disabled-config-server.rst:199
msgid "If replacing the primary member, step down the primary first before shutting down."
msgstr ""

#: ../source/includes/steps/replace-disabled-config-server.rst:197
msgid "Step 4: Shut down the member to replace."
msgstr ""

#: ../source/includes/steps/replace-disabled-config-server.rst:210
msgid "Remove the member to replace from the config server replica set."
msgstr ""

#: ../source/includes/steps/replace-disabled-config-server.rst:212
msgid "Upon completion of initial sync of the replacement config server, from a :binary:`~bin.mongo` shell connected to the primary, use :method:`rs.remove()` to remove the old member."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:71
msgid "Restart the ``mongos`` Instances"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:75
msgid "With replica set config servers, the :binary:`~bin.mongos` instances specify in the :option:`--configdb <mongos --configdb>` or :setting:`sharding.configDB` setting the config server replica set name and at least one of the replica set members. The :binary:`~bin.mongos` instances for the sharded cluster must specify the same config server replica set name but can specify different members of the replica set."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:82
msgid "If a :binary:`~bin.mongos` instance specifies a migrated replica set member in the :option:`--configdb <mongos --configdb>` or :setting:`sharding.configDB` setting, update the config server setting for the next time you restart the :binary:`~bin.mongos` instance."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:87
msgid "For more information, see :ref:`sharding-setup-start-mongos`."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:92
msgid "Migrate the Shards"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:94
msgid "Migrate the shards one at a time. For each shard, follow the appropriate procedure in this section."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:100
msgid "Migrate a Replica Set Shard"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:102
msgid "To migrate a sharded cluster, migrate each member separately. First migrate the non-primary members, and then migrate the :term:`primary` last."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:106
msgid "If the replica set has two voting members, add an :doc:`arbiter </core/replica-set-arbiter>` to the replica set to ensure the set keeps a majority of its votes available during the migration. You can remove the arbiter after completing the migration."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:114
msgid "Migrate a Member of a Replica Set Shard"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:116
msgid "Shut down the :binary:`~bin.mongod` process. To ensure a clean shutdown, use the :dbcommand:`shutdown` command."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:119
msgid "Move the data directory (i.e., the :setting:`~storage.dbPath`) to the new machine."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:122
msgid "Restart the :binary:`~bin.mongod` process at the new location."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:125
msgid "Connect to the replica set's current primary."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:127
msgid "If the hostname of the member has changed, use :method:`rs.reconfig()` to update the :doc:`replica set configuration document </reference/replica-configuration>` with the new hostname."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:131
msgid "For example, the following sequence of commands updates the hostname for the instance at position ``2`` in the ``members`` array:"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:141
msgid "For more information on updating the configuration document, see :ref:`replica-set-reconfiguration-usage`."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:144
msgid "To confirm the new configuration, issue :method:`rs.conf()`."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:146
msgid "Wait for the member to recover. To check the member's state, issue :method:`rs.status()`."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:150
msgid "Migrate the Primary in a Replica Set Shard"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:152
msgid "While migrating the replica set's primary, the set must elect a new primary. This failover process which renders the replica set unavailable to perform reads or accept writes for the duration of the election, which typically completes quickly. If possible, plan the migration during a maintenance window."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:158
msgid "Step down the primary to allow the normal :ref:`failover <replica-set-failover>` process.  To step down the primary, connect to the primary and issue the either the :dbcommand:`replSetStepDown` command or the :method:`rs.stepDown()` method. The following example shows the :method:`rs.stepDown()` method:"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:169
msgid "Once the primary has stepped down and another member has become :replstate:`PRIMARY` state. To migrate the stepped-down primary, follow the :ref:`migrate-replica-set-shard-member` procedure"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:173
msgid "You can check the output of :method:`rs.status()` to confirm the change in status."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:179
msgid "Re-Enable the Balancer"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:181
msgid "To complete the migration, re-enable the balancer to resume :doc:`chunk migrations </core/sharding-balancer-administration>`."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:184
msgid "Connect to one of the cluster's :binary:`~bin.mongos` instances and pass ``true`` to the :method:`sh.setBalancerState()` method:"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:194
msgid "For more information, see :ref:`sharding-balancing-enable`."
msgstr ""

