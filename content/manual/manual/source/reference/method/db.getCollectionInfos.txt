========================================
db.getCollectionInfos() (mongosh method)
========================================

.. meta::
   :description: Retrieve collection or view information from the current database using `db.getCollectionInfos()`, with options for filtering and access control.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. method:: db.getCollectionInfos(filter, options)

   Returns an array of documents that contain collection or :ref:`view
   <views-landing-page>` information, such as name and options, for the
   current database. The results depend on the user's privilege. For
   details, see :ref:`db.getCollectionInfo-access-control`.

   The ``db.getCollectionInfos()`` helper wraps the
   :dbcommand:`listCollections` command.

Syntax
------

The ``db.getCollectionInfos()`` method has the following 
parameters:

.. list-table::
  :header-rows: 1
  :widths: 20 20 80

  * - Parameter
    - Type
    - Description

  * - ``filter``
    - document
    - Optional. A query predicate to filter the list of collections.
      
      You can specify a query predicate on any of the :ref:`fields
      returned <list-collection-output>` by ``db.getCollectionInfos()``.
  
  * - ``options``
    - document
    - Optional. A document that specifies additional options for the
      command. For a list of available options, see
      :ref:`dbCollectionInfos-options`.

.. _dbCollectionInfos-options:

Options
~~~~~~~

You can specify the following options in the ``options`` document of a
``db.getCollectionInfos()`` command:

.. list-table::
   :header-rows: 1
   :widths: 25 15 80 

   * - Option
     - Type
     - Description

   * - ``nameOnly``
     - boolean
     - .. include:: /includes/listCollections-nameOnly-option.rst

       For an example, see :ref:`dbCollectionInfos-example-nameOnly`.

   * - ``authorizedCollections``
     - boolean
     - Optional. When set to ``true`` and used with ``nameOnly:
       true``, allows a user without the required privilege (such as the
       :authaction:`listCollections` action on the database) to run
       ``db.getCollectionInfos()`` when access control is enforced.
       
       When both ``authorizedCollections`` and ``nameOnly`` options are
       set to true, the command returns only those collections for
       which the user has privileges. For example:
       
       - If a user has the :authaction:`find` action on specific
         collections, the command returns only those collections.
         
       - If a user has any permission action on the database resource,
         the command lists all collections in the database.
       
       The default value is ``false``, meaning the user must have
       :authaction:`listCollections` action on the database to run the
       command.
       
       For a user who has :authaction:`listCollections` action on the
       database, this option has no effect since the user has privileges to
       list the collections in the database.
       
       When used without ``nameOnly: true``, this option has no effect.

Compatibility
-------------

This method is available in deployments hosted in the following environments: 

.. include:: /includes/fact-environments-atlas-only.rst

.. include:: /includes/fact-environments-atlas-support-all.rst

.. include:: /includes/fact-environments-onprem-only.rst

.. _db.getCollectionInfo-access-control:

Required Access
---------------

.. include:: /includes/extracts/listCollections-auth-required-access.rst

``show collections``
~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/extracts/listCollections-auth-show-collections.rst

Behavior
--------

Client Disconnection
~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/extracts/4.2-changes-disconnect.rst

.. |operation| replace:: :method:`db.getCollectionInfos()`

Replica Set Member State Restriction
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/extracts/4.4-changes-repl-state-restrictions-operation.rst

.. |operations| replace:: :dbcommand:`listCollections`

Examples
--------

Return Information for All Collections in a Database
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following returns information for all collections in the
``example`` database:

.. io-code-block::
   :copyable: true

   .. input::
      :language: javascript

      use example
      db.getCollectionInfos()

   .. output::
      :language: javascript

         [
            {
               "name" : "employees",
               "type" : "collection",
               "options" : {
                  "flags" : 1,
                  "validator" : {
                     "$or" : [
                        {
                           "phone" : {
                              "$exists" : true
                           }
                        },
                        {
                           "email" : {
                              "$exists" : true
                           }
                        }
                     ]
                  }
               },
               "info" : {
                  "readOnly" : false,
                  "uuid" : UUID("222e18ca-4a10-4a42-a8fe-c39255cc4c55")
               },
               "idIndex" : {
                  "v" : 2,
                  "key" : {
                     "_id" : 1
                  },
                  "name" : "_id_",
                  "ns" : "example.employees"
               }
            },
            {
               "name" : "products",
               "type" : "collection",
               "options" : {
                  "flags" : 1
               },
               "info" : {
                  "readOnly" : false,
                  "uuid" : UUID("1bc898b2-3b91-45e4-9d8b-0be462d5a157")
               },
               "idIndex" : {
                  "v" : 2,
                  "key" : {
                     "_id" : 1
                  },
                  "name" : "_id_",
                  "ns" : "example.products"
               }
            },
            {
               "name" : "mylogs",
               "type" : "collection",
               "options" : {
                  "capped" : true,
                  "size" : 256
               },
               "info" : {
                  "readOnly" : true,
                  "uuid" : UUID("8e62116d-b6a0-490a-808c-258ccb7ea947")
               },
               "idIndex" : {
                  "v" : 2,
                  "key" : {
                     "_id" : 1
                  },
                  "name" : "_id_",
                  "ns" : "example.mylogs"
               }
            }
         ]

.. _dbCollectionInfos-example-nameOnly:

Return Only Collection Names
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To return only the names of collections in the current database,
specify the ``nameOnly: true`` option. For example:

.. io-code-block::
   :copyable: true

   .. input::
      :language: javascript

      use example
      db.getCollectionInfos( {}, { nameOnly: true } )

   .. output::
      :language: javascript

      [
        { name: 'products', type: 'collection' },
        { name: 'weather', type: 'timeseries' },
        { name: 'system.buckets.weather', type: 'collection' },
        { name: 'system.views', type: 'collection' },
        { name: 'sales', type: 'collection' }
      ]

Return Information for a Specific Collection
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To request collection information for a specific collection, specify the
collection name in the filter document. The following example returns an
array with a single document that details the collection information for
the ``employees`` collection in the ``example`` database.

.. io-code-block::
   :copyable: true

   .. input::
      :language: javascript

      use example
      db.getCollectionInfos( { name: "employees" } )

   .. output::
      :language: javascript

      [
         {
            "name" : "employees",
            "type" : "collection",
            "options" : {
               "flags" : 1,
               "validator" : {
                  "$or" : [
                     {
                        "phone" : {
                           "$exists" : true
                        }
                     },
                     {
                        "email" : {
                           "$exists" : true
                        }
                     }
                  ]
               }
            },
            "info" : {
               "readOnly" : false,
               "uuid" : UUID("222e18ca-4a10-4a42-a8fe-c39255cc4c55")
            },
            "idIndex" : {
               "v" : 2,
               "key" : {
                  "_id" : 1
               },
               "name" : "_id_",
               "ns" : "example.employees"
            }
         }
      ]

Return Information for Read-Only Collections
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You can specify a filter on any of the fields returned by
``db.getCollectionInfos()``.

For example, the following command returns information for all
collections in the ``example`` database where ``info.readOnly`` is
``true``:

.. io-code-block::
   :copyable: true

   .. input::
      :language: javascript

      use example
      db.getCollectionInfos( { "info.readOnly" : true } )

   .. output::
      :language: javascript

      [
         {
            "name" : "mylogs",
            "type" : "collection",
            "options" : {
               "capped" : true,
               "size" : 256
            },
            "info" : {
               "readOnly" : true,
               "uuid" : UUID("8e62116d-b6a0-490a-808c-258ccb7ea947")
            },
            "idIndex" : {
               "v" : 2,
               "key" : {
                  "_id" : 1
               },
               "name" : "_id_",
               "ns" : "example.mylogs"
            }
         }
      ]
