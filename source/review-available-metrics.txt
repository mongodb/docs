.. _review-available-metrics:

========================
Review Available Metrics
========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

You can review the following metrics to monitor your 
deployments. All hardware metrics include metrics or 
individual charts for maximum values.

.. important::

   The metrics available depend on your user role and 
   deployment type.

.. list-table::
   :widths: 30 70
   :header-rows: 1
        
   * - Metric
  
     - Description

   * - :guilabel:`Asserts`
  
     - Displays the following information:

       - :guilabel:`regular` displays the average rate of 
         regular asserts raised per second over the selected sample 
         period. 
        
       - :guilabel:`warning` displays the average rate of 
         warnings per second over the selected sample period.
        
       - :guilabel:`msg` displays the average rate of message 
         asserts per second over the selected sample period. These 
         internal server errors have a well-defined text string. 
         |service| logs stack traces for these.
       
       - :guilabel:`user` displays the average rate of user 
         asserts per second over the selected sample period. This 
         metric includes asserts that a user generates, such as out of 
         disk space or duplicate key errors.
     
       Monitor asserts to track how many errors occur while trying to 
       read or write data. Check the server logs to identify the source 
       of any errors.
   
   * - :guilabel:`Avg Object Size`
     
     - Displays the average object size across all collections in the 
       database.

       Monitor object size to track the size of your objects and better 
       understand your database space.

   * - :guilabel:`Background Flush Avg`
    
     - Displays the average time of background flushes in seconds. 	
       |mongod| writes to and flushes (fsyncs) journal 
       files immediately. By default, all other data files are flushed 
       every 60 seconds in the background.
       
       Monitor the background flush average to determine whether this 
       statistic is a significant percentage of 60 seconds. If so, this 
       statistic could indicate that the server is bottlenecked on 
       these writes. You might have a large number of random writes 
       occurring. The operating system might flush data faster than 
       every 60 seconds. In that case, this statistic will be a very 
       small value even if the writing is a bottleneck.

   * - :guilabel:`Collections`

     - Displays the number of collections in the database.
     
       Monitor collections to determine restart times, continuous 
       backup performance, and stability.

   * - :guilabel:`Connections`

     - Displays the total number of active connections to the 
       deployment.

       Monitor connections to determine whether the current connection 
       limits are sufficient.
  
   * - :guilabel:`Cursors`

     - Displays the following information:
     
       - :guilabel:`totalOpen` displays the number of cursors that the 
         server is maintaining for clients. Since MongoDB exhausts 
         unused cursors, this value is usually small or zero. However, 
         if there is a queue, stale tailable cursors, or a large number 
         of operations, this value might rise.
        
       - :guilabel:`timedOut` displays the average rate of cursors 
         that have timed out per second over the selected sample period.
  
       Monitor cursors to close unnecessary cursors and reduce the 
       timeout configuration in the application.

   * - :guilabel:`Data Size`

     - Displays the actual size of the data files in the database.
   
       Monitor data size to ensure that database is not using too much 
       memory or CPU.

   * - :guilabel:`DB Storage`

     - Displays the following information:
       
       - :guilabel:`storageSize` displays the sum 
         total amount of on-disk storage space allocated for document 
         storage across all databases.
           
       - :guilabel:`dataSize` displays the amount 
         of storage space in bytes that your stored data uses.

       - :guilabel:`indexSize` displays the sum total 
         size in bytes of the index data across all databases.
  
       Monitor storage space to determine whether to manually increase 
       the disk size.
   
   * - :guilabel:`Disk IOPS`

     - Displays input operations per second.

       .. include:: /includes/fact-disk-iops.rst

   * - :guilabel:`Disk Latency`

     - Displays the following information:
     
       - :guilabel:`read latency` displays the average amount of time 
         to read from disk.
      
       - :guilabel:`write latency` displays the average amount of time 
         to write to disk.

       Monitor disk latency to track the efficiency of reading from and 
       writing to disk.

   * - :guilabel:`Disk Queue Depth`

     - Displays the average length of the queue of requests issued 
       to the disk partition that stores MongoDB data.
  
       .. include:: /includes/fact-disk-queue-depth.rst

   * - :guilabel:`Disk Space Free`

     - Displays the total amount of free space remaining on disk.

       Monitor free disk space to determine whether to use disk 
       auto-scaling or manually increase the disk size.

   * - :guilabel:`Disk Space Percent Free`

     - Displays the total amount of free space remaining on disk as a 
       percentage of the total disk space.

       Monitor the percentage of free disk space to determine whether 
       to use disk auto-scaling or manually increase the disk size.

   * - :guilabel:`Disk Space Used`

     - Displays the total bytes of used disk space on the partition 
       that runs MongoDB.

       Monitor the used disk space to determine whether to manually 
       increase the disk size.

   * - :guilabel:`Document Metrics`
    
     - Displays the following information:
     
       - :guilabel:`returned` displays the documents per second 
         returned.
        
       - :guilabel:`inserted` displays the documents per second 
         inserted.
        
       - :guilabel:`updated` displays the documents per second updated.
        
       - :guilabel:`deleted` displays the documents per second deleted.
     
       Monitor document metrics to measure the work MongoDB completes.

   * - :guilabel:`File Size`

     - Displays the total size of all the data files in the database.

       Monitor file size to deternine whether files are consuming 
       excessive disk space.

   * - :guilabel:`Index Size`
   
     - Displays the total size of all indexes in the database. This 
       metric includes the overhead incurred by indexes on top of the 
       actual document data on which the indexes are based.
     
       Monitor the index size to manage your indexes. To learn more, 
       see :manual:`Indexing Strategies </applications/indexes/>`. 

   * - :guilabel:`Indexes`
   
     - Displays the total number of indexes in the database.
    
       Monitor indexes to manage them. To learn more, 
       see :manual:`Indexing Strategies </applications/indexes/>`.
  
   * - :guilabel:`Max Disk IOPS`
     
     - Displays the following maximum disk IOPS values over the time 
       period specified by the metric granularity:

       - :guilabel:`max read iops` maximum disk read input operations 
         per second.

       - :guilabel:`max write iops` maximum disk write input operations 
         per second.
  
       .. include:: /includes/fact-disk-iops.rst

   * - :guilabel:`Max Disk Queue Depth`
     - Displays the maximum disk queue depth values over the time 
       period specified by the metric granularity. Disk queue depth 
       is the average length of the queue of requests issued to the 
       disk partition that stores MongoDB data.
  
       .. include:: /includes/fact-disk-queue-depth.rst

   * - :guilabel:`Max Normalized System CPU`

     - Displays the maximum CPU usage values of all processes on the 
       node, scaled to a range of 0-100% by dividing by the number of 
       CPU cores.
  
       .. include:: /includes/fact-cpu.rst

   * - :guilabel:`Max Process CPU`

     - Displays the following maximum process CPU values over the time 
       period specified by the metric granularity:
     
       - :guilabel:`max user` displays the maximum percentage of time 
         that the CPU spent servicing the MongoDB process.

       - :guilabel:`max kernel` displays the maximum percentage of time 
         the CPU spent servicing operating system calls for the MongoDB 
         process.

       .. include:: /includes/fact-cpu.rst

   * - :guilabel:`Max System CPU`
     
     - Displays the maximum CPU usage values of all processes on the 
       node.
  
       .. include:: /includes/fact-cpu.rst

   * - :guilabel:`Max System Memory`
    
     - Displays the maximum system memory values in bytes.

       .. include:: /includes/fact-memory.rst

   * - :guilabel:`Memory`

     - Displays the total consumption of memory in megabytes at a 
       particular point in time:
       
       - :guilabel:`resident` displays the memory that the MongoDB 
         process running on a node consumes. This metric excludes the 
         consumption of other processes and does not represent the 
         total memory that the node consumes.

       - :guilabel:`virtual` displays the memory reserved in disk to 
         act as swap space.

       - :guilabel:`mapped` displays the number of MMAPv1 memory maps 
         of all the data files. This number is likely similar to your 
         total database(s) size. WiredTiger does not use memory mapped 
         files, so this should be 0.

       .. include:: /includes/fact-memory.rst

   * - :guilabel:`Network`

     - Displays the following information:
     
       - :guilabel:`bytesIn` displays the average rate of physical 
         bytes (after any wire compression) sent to this database 
         server per second over the selected sample period.

       - :guilabel:`bytesOut` displays the average rate of physical  
         bytes (after any wire compression) sent from this database 
         server per second over the selected sample period.

       - :guilabel:`numRequests` displays the average rate of requests 
         sent to this database server per second over the selected 
         sample period.
   
       Monitor network metrics to track network performance.

   * - :guilabel:`Non-Mapped Virtual Memory`
    
     - Displays the amount of virtual memory that the memory mapping of 
       data files doesn't take into account.
       
       Monitor non-mapped virtual memory to determine whether aspects 
       other than memory mapping files use excessive memory. For 
       example, this could indicate too many connections to the 
       database. Each connection has a thread stack and the memory for 
       those stacks can add up to a considerable amount. Keep this 
       statistic reasonably low because the memory used here is 
       unavailable for caching.

   * - :guilabel:`Normalized Process CPU`
    
     - Displays the following information:
     
       - :guilabel:`user` displays the percentage of time that the CPU 
         spent servicing the MongoDB process, scaled to a range of 
         0-100% by dividing by the number of CPU cores.

       - :guilabel:`kernel` displays the percentage of time the CPU 
         spent servicing operating system calls for the MongoDB 
         process, scaled to a range of 0-100% by dividing by the number 
         of CPU cores.

       .. include:: /includes/fact-cpu.rst
  
   * - :guilabel:`Normalized System CPU`

     - Displays the CPU usage of all processes on the node, scaled to a 
       range of 0-100% by dividing by the number of CPU cores.

       .. include:: /includes/fact-cpu.rst
  
   * - :guilabel:`Num Extents`
   
     - Displays the total number of contiguously allocated chunks of 
       data file space for the database.

       Monitor this metric to better understand your database space.

   * - :guilabel:`Objects`

     - Displays the number of objects in the database.

       Monitor this metric to better understand your database space.

   * - :guilabel:`OpCounters`

     - Displays the number of the following operations per second run 
       on a MongoDB process since the process last started:

       - :guilabel:`command` (replica set) or :guilabel:`cmd` (sharded 
         cluster)

       - :guilabel:`query`

       - :guilabel:`insert`

       - :guilabel:`delete`

       - :guilabel:`update`

       - :guilabel:`getmore`

       Monitor MongoDB operations to validate performance issues 
       related to high workloads. Confirm the type of operations 
       responsible for the load.

   * - :guilabel:`Page Faults`
   
     - Displays the average rate of page faults on this process per 
       second over the selected sample period. In non-Windows 
       environments this applies to hard page faults only.

       Monitor page faults to determine whether to increase your memory.

   * - :guilabel:`Process CPU`
   
     - Displays the following information:
     
       - :guilabel:`user` displays the percentage of time that the CPU 
         spent servicing the MongoDB process.

       - :guilabel:`kernel` displays the percentage of time the CPU 
         spent servicing operating system calls for the MongoDB process.

       .. include:: /includes/fact-cpu.rst

   * - :guilabel:`Queues`

     - Displays the following information:

       - :guilabel:`total` displays the number of operations queued 
         and waiting for any lock. 

       - :guilabel:`readers` displays the number of operations queued 
         and waiting for a read lock.

       - :guilabel:`writers` displays the number of operation queued 
         and waiting for a write lock.

       Monitor queues to identify potential issues and bottlenecks.
    
   * - :guilabel:`Query Executor`
   
     - Displays the following information:
      
       - :guilabel:`scanned` displays the number of index 
         items scanned per second.

       - :guilabel:`scanned objects` displays the number of documents 
         scanned per second.

       Monitor the query executor to determine whether you have any 
       inefficient queries.

   * - :guilabel:`Query Targeting`

     - Displays the efficiency of read operations run on MongoDB:

       - :guilabel:`scanned / returned` displays the number of 
         documents scanned to return one document.

       - :guilabel:`scanned objects / returned` the ratio of the number 
         of documents scanned to the number of documents returned by 
         queries, since the previous data point for the selected sample 
         period.

       Monitor query targeting to determine read efficiency and 
       optimize queries and indexes.

   * - :guilabel:`Scan and Order`
   
     - Displays the number of operations per second returning results 
       that required a sort in-memory.

       Monitor this metric to identify whether your queries need 
       indexes.

   * - :guilabel:`Storage Size`

     - Displays the storage size of the database.

       Monitor storage size to determine whether to manually increase 
       the disk size.

   * - :guilabel:`System CPU`
     
     - Displays the CPU usage of all processes on the node.

       .. include:: /includes/fact-cpu.rst
