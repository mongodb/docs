---
title: "Create a new directory to complete this tutorial."
level: 4
stepnum: 1
ref: create-new-dire
content: |
  Run the following command to create a new directory for
  the configuration files used in this tutorial:

  .. code-block:: sh

     mkdir client-x509-certs-tutorial
---
title: "Enter your newly created directory."
level: 4
stepnum: 2
ref: cd-new-directory
content: |
  
  .. code-block:: sh

     cd client-x509-certs-tutorial
---
title: "Copy and save the following example JSON."
level: 4
stepnum: 3
ref: copy-k8s-user-configmap
content: |

  In the ``client-x509-certs-tutorial`` directory, save the following
  JSON as  ``x509_user.json``:
  
  .. code-block:: json

     {
       "names": [
         {"O": "organization"},
         {"OU": "organizationalunit"}
       ],
       "CN": "my-x509-authenticated-user",
       "key": {
         "algo": "rsa",
         "size": 4096
       }
     }

---
title: "Generate a key file."
level: 4
stepnum: 4
ref: gen-key-file
content: |

  Run the following command to pass the JSON from the previous step
  to ``CFSSL`` and generate a key file:

  .. code-block:: sh

     cfssl genkey x509_user.json > x509_user_key.json

  You should see output similar to the following:

  .. code-block:: sh
     :copyable: false

     2019/06/04 18:12:38 [INFO] generate received request
     2019/06/04 18:12:38 [INFO] received CSR
     2019/06/04 18:12:38 [INFO] generating key: rsa-4096
     2019/06/04 18:12:40 [INFO] encoded CSR

  You now have a file called ``x509_user_key.json`` containing
  a new private key.
---
title: "Generate the Certificate Signing Request."
level: 4
stepnum: 5
ref: gen-cert-req
content: |
   Run the following command to use your ``x509_user_key.json`` key
   file to generate a certificate signing request (CSR):

   .. code-block:: sh

      cfssljson -f x509_user_key.json -bare x509_user

   This command generates two files:

   - ``x509_user-key.pem``, the private key for the user

   - ``x509_user.csr``, the CSR that represents the user

...
