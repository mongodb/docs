# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/bson-types.txt:5
msgid "BSON Types"
msgstr ""

#: ../source/reference/bson-types.txt:15
msgid ":term:`BSON` is a binary serialization format used to store documents and make remote procedure calls in MongoDB. The BSON specification is located at `bsonspec.org <http://bsonspec.org/>`_."
msgstr ""

#: ../source/reference/bson-types.txt:19
msgid "Each BSON type has both integer and string identifiers as listed in the following table:"
msgstr ""

#: ../source/includes/fact-bson-types.rst:4
msgid "Type"
msgstr ""

#: ../source/includes/fact-bson-types.rst:5
msgid "Number"
msgstr ""

#: ../source/includes/fact-bson-types.rst:6
msgid "Alias"
msgstr ""

#: ../source/includes/fact-bson-types.rst:7
msgid "Notes"
msgstr ""

#: ../source/includes/fact-bson-types.rst:9
msgid "Double"
msgstr ""

#: ../source/includes/fact-bson-types.rst:10
msgid "1"
msgstr ""

#: ../source/includes/fact-bson-types.rst:11
msgid "\"double\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:14
#: ../source/reference/bson-types.txt:70
msgid "String"
msgstr ""

#: ../source/includes/fact-bson-types.rst:15
msgid "2"
msgstr ""

#: ../source/includes/fact-bson-types.rst:16
msgid "\"string\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:19
msgid "Object"
msgstr ""

#: ../source/includes/fact-bson-types.rst:20
msgid "3"
msgstr ""

#: ../source/includes/fact-bson-types.rst:21
msgid "\"object\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:24
msgid "Array"
msgstr ""

#: ../source/includes/fact-bson-types.rst:25
msgid "4"
msgstr ""

#: ../source/includes/fact-bson-types.rst:26
msgid "\"array\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:29
msgid "Binary data"
msgstr ""

#: ../source/includes/fact-bson-types.rst:30
msgid "5"
msgstr ""

#: ../source/includes/fact-bson-types.rst:31
msgid "\"binData\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:34
msgid "Undefined"
msgstr ""

#: ../source/includes/fact-bson-types.rst:35
msgid "6"
msgstr ""

#: ../source/includes/fact-bson-types.rst:36
msgid "\"undefined\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:37
#: ../source/includes/fact-bson-types.rst:67
#: ../source/includes/fact-bson-types.rst:77
msgid "Deprecated."
msgstr ""

#: ../source/includes/fact-bson-types.rst:39
#: ../source/reference/bson-types.txt:42
msgid "ObjectId"
msgstr ""

#: ../source/includes/fact-bson-types.rst:40
msgid "7"
msgstr ""

#: ../source/includes/fact-bson-types.rst:41
msgid "\"objectId\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:44
msgid "Boolean"
msgstr ""

#: ../source/includes/fact-bson-types.rst:45
msgid "8"
msgstr ""

#: ../source/includes/fact-bson-types.rst:46
msgid "\"bool\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:49
#: ../source/reference/bson-types.txt:142
msgid "Date"
msgstr ""

#: ../source/includes/fact-bson-types.rst:50
msgid "9"
msgstr ""

#: ../source/includes/fact-bson-types.rst:51
msgid "\"date\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:54
msgid "Null"
msgstr ""

#: ../source/includes/fact-bson-types.rst:55
msgid "10"
msgstr ""

#: ../source/includes/fact-bson-types.rst:56
msgid "\"null\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:59
msgid "Regular Expression"
msgstr ""

#: ../source/includes/fact-bson-types.rst:60
msgid "11"
msgstr ""

#: ../source/includes/fact-bson-types.rst:61
msgid "\"regex\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:64
msgid "DBPointer"
msgstr ""

#: ../source/includes/fact-bson-types.rst:65
msgid "12"
msgstr ""

#: ../source/includes/fact-bson-types.rst:66
msgid "\"dbPointer\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:69
msgid "JavaScript"
msgstr ""

#: ../source/includes/fact-bson-types.rst:70
msgid "13"
msgstr ""

#: ../source/includes/fact-bson-types.rst:71
msgid "\"javascript\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:74
msgid "Symbol"
msgstr ""

#: ../source/includes/fact-bson-types.rst:75
msgid "14"
msgstr ""

#: ../source/includes/fact-bson-types.rst:76
msgid "\"symbol\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:79
msgid "JavaScript (with scope)"
msgstr ""

#: ../source/includes/fact-bson-types.rst:80
msgid "15"
msgstr ""

#: ../source/includes/fact-bson-types.rst:81
msgid "\"javascriptWithScope\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:84
msgid "32-bit integer"
msgstr ""

#: ../source/includes/fact-bson-types.rst:85
msgid "16"
msgstr ""

#: ../source/includes/fact-bson-types.rst:86
msgid "\"int\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:89
msgid "Timestamp"
msgstr ""

#: ../source/includes/fact-bson-types.rst:90
msgid "17"
msgstr ""

#: ../source/includes/fact-bson-types.rst:91
msgid "\"timestamp\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:94
msgid "64-bit integer"
msgstr ""

#: ../source/includes/fact-bson-types.rst:95
msgid "18"
msgstr ""

#: ../source/includes/fact-bson-types.rst:96
msgid "\"long\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:99
msgid "Decimal128"
msgstr ""

#: ../source/includes/fact-bson-types.rst:100
msgid "19"
msgstr ""

#: ../source/includes/fact-bson-types.rst:101
msgid "\"decimal\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:102
msgid "New in version 3.4."
msgstr ""

#: ../source/includes/fact-bson-types.rst:104
msgid "Min key"
msgstr ""

#: ../source/includes/fact-bson-types.rst:105
msgid "-1"
msgstr ""

#: ../source/includes/fact-bson-types.rst:106
msgid "\"minKey\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:109
msgid "Max key"
msgstr ""

#: ../source/includes/fact-bson-types.rst:110
msgid "127"
msgstr ""

#: ../source/includes/fact-bson-types.rst:111
msgid "\"maxKey\""
msgstr ""

#: ../source/reference/bson-types.txt:24
msgid "You can use these values with the :query:`$type` operator to query documents by their BSON type. The :expression:`$type` aggregation operator returns the type of an :ref:`operator expression <agg-quick-ref-operator-expressions>` using one of the listed BSON type strings."
msgstr ""

#: ../source/reference/bson-types.txt:30
msgid "To determine a field's type, see :ref:`check-types-in-shell`."
msgstr ""

#: ../source/reference/bson-types.txt:32
msgid "If you convert BSON to JSON, see the :doc:`Extended JSON </reference/mongodb-extended-json>` reference."
msgstr ""

#: ../source/reference/bson-types.txt:35
msgid "The following sections describe special considerations for particular BSON types."
msgstr ""

#: ../source/reference/bson-types.txt:44
msgid "ObjectIds are small, likely unique, fast to generate, and ordered. ObjectId values consist of 12 bytes, where the first four bytes are a timestamp that reflect the ObjectId's creation. Specifically:"
msgstr ""

#: ../source/includes/fact-ObjectId-construct.rst:1
msgid "a 4-byte value representing the seconds since the Unix epoch,"
msgstr ""

#: ../source/includes/fact-ObjectId-construct.rst:3
msgid "a 5-byte random value, and"
msgstr ""

#: ../source/includes/fact-ObjectId-construct.rst:5
msgid "a 3-byte counter, starting with a random value."
msgstr ""

#: ../source/includes/fact-id-field.rst:1
msgid "In MongoDB, each document stored in a collection requires a unique :term:`_id` field that acts as a :term:`primary key`. If an inserted document omits the ``_id`` field, the MongoDB driver automatically generates an :ref:`objectid` for the ``_id`` field."
msgstr ""

#: ../source/includes/fact-id-field.rst:6
msgid "This also applies to documents inserted through update operations with :ref:`upsert: true <upsert-parameter>`."
msgstr ""

#: ../source/reference/bson-types.txt:52
msgid "MongoDB clients should add an ``_id`` field with a unique ObjectId. Using ObjectIds for the ``_id`` field provides the following additional benefits:"
msgstr ""

#: ../source/reference/bson-types.txt:56
msgid "in the :binary:`~bin.mongo` shell, you can access the creation time of the ``ObjectId``, using the :method:`ObjectId.getTimestamp()` method."
msgstr ""

#: ../source/reference/bson-types.txt:59
msgid "sorting on an ``_id`` field that stores ``ObjectId`` values is roughly equivalent to sorting by creation time."
msgstr ""

#: ../source/includes/fact-ObjectId-timestamp-order.rst:1
msgid "While :ref:`objectid` values should increase over time, they are not necessarily monotonic. This is because they:"
msgstr ""

#: ../source/includes/fact-ObjectId-timestamp-order.rst:4
msgid "Only contain one second of temporal resolution, so :ref:`objectid` values created within the same second do not have a guaranteed ordering, and"
msgstr ""

#: ../source/includes/fact-ObjectId-timestamp-order.rst:7
msgid "Are generated by clients, which may have differing system clocks."
msgstr ""

#: ../source/reference/bson-types.txt:65
msgid ":method:`ObjectId()`"
msgstr ""

#: ../source/reference/bson-types.txt:72
msgid "BSON strings are UTF-8. In general, drivers for each programming language convert from the language's string format to UTF-8 when serializing and deserializing BSON. This makes it possible to store most international characters in BSON strings with ease. [#sort-string-internationalization]_ In addition, MongoDB :query:`$regex` queries support UTF-8 in the regex string."
msgstr ""

#: ../source/reference/bson-types.txt:79
msgid "Given strings using UTF-8 character sets, using :method:`sort() <cursor.sort()>` on strings will be reasonably correct. However, because internally :method:`sort() <cursor.sort()>` uses the C++ ``strcmp`` api, the sort order may handle some characters incorrectly."
msgstr ""

#: ../source/reference/bson-types.txt:88
msgid "Timestamps"
msgstr ""

#: ../source/reference/bson-types.txt:90
msgid "BSON has a special timestamp type for *internal* MongoDB use and is **not** associated with the regular :ref:`document-bson-type-date` type. Timestamp values are a 64 bit value where:"
msgstr ""

#: ../source/reference/bson-types.txt:94
msgid "the first 32 bits are a ``time_t`` value (seconds since the Unix epoch)"
msgstr ""

#: ../source/reference/bson-types.txt:96
msgid "the second 32 bits are an incrementing ``ordinal`` for operations within a given second."
msgstr ""

#: ../source/reference/bson-types.txt:99
msgid "Within a single :binary:`~bin.mongod` instance, timestamp values are always unique."
msgstr ""

#: ../source/reference/bson-types.txt:102
msgid "In replication, the :term:`oplog` has a ``ts`` field. The values in this field reflect the operation time, which uses a BSON timestamp value."
msgstr ""

#: ../source/reference/bson-types.txt:108
msgid "The BSON timestamp type is for *internal* MongoDB use. For most cases, in application development, you will want to use the BSON date type. See :ref:`document-bson-type-date` for more information."
msgstr ""

#: ../source/reference/bson-types.txt:113
msgid "If you insert a document containing an empty BSON timestamp in a top-level field, the MongoDB server will replace that empty timestamp with the current timestamp value. For example, if you create an insert a document with a timestamp value, as in the following operation:"
msgstr ""

#: ../source/reference/bson-types.txt:124
msgid "Then, the :method:`db.test.find() <db.collection.find()>` operation will return a document that resembles the following:"
msgstr ""

#: ../source/reference/bson-types.txt:131
msgid "If ``ts`` were a field in an embedded document, the server would have left it as an empty timestamp value."
msgstr ""

#: ../source/reference/bson-types.txt:134
msgid "Previously, the server would only replace empty timestamp values in the first two fields, including ``_id``, of an inserted document. Now MongoDB will replace any top-level field."
msgstr ""

#: ../source/reference/bson-types.txt:144
msgid "BSON Date is a 64-bit integer that represents the number of milliseconds since the Unix epoch (Jan 1, 1970). This results in a representable date range of about 290 million years into the past and future."
msgstr ""

#: ../source/reference/bson-types.txt:149
msgid "The `official BSON specification <http://bsonspec.org/#/specification>`_ refers to the BSON Date type as the *UTC datetime*."
msgstr ""

#: ../source/reference/bson-types.txt:152
msgid "BSON Date type is signed. [#unsigned-date]_ Negative values represent dates before 1970."
msgstr ""

#: ../source/reference/bson-types.txt:182
msgid "Prior to version 2.0, ``Date`` values were incorrectly interpreted as *unsigned* integers, which affected sorts, range queries, and indexes on ``Date`` fields. Because indexes are not recreated when upgrading, please re-index if you created an index on ``Date`` values with an earlier version, and dates before 1970 are relevant to your application."
msgstr ""

