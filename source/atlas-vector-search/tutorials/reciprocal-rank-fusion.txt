.. _avs-reciprocal-rank-fusion:

==========================================================
Perform Hybrid Search with {+avs+} and |fts| 
==========================================================

.. default-domain:: mongodb

.. facet::
   :name: genre
   :values: tutorial

.. facet::
   :name: programming_language
   :values: javascript/typescript, shell

.. meta::
   :keywords: atlas vector search, vector search, $vectorSearch, $vectorSearch pipeline stage, atlas vector search pipeline stage, atlas vector search query, atlas vector search index, $vectorSearch filter examples, $vectorSearch query examples, $vectorSearch pipeline stage examples, approximate nearest neighbor search, sematic search, $search, atlas search, $unionWith
   :description: Learn how to search vector embeddings in your data on the Atlas cluster.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol
   
.. |prereq-link| replace:: :ref:`common prerequisites <avs-tutorials-prereqs>` 

.. tabs-selector:: drivers

You can combine {+avs+} and |fts| queries into a hybrid search for
unified results. 

This tutorial demonstrates how to run a hybrid search on the
``sample_mflix.embedded_movies`` collection, which contains details 
about movies. Specifically, this tutorial takes you through the
following steps: 

1. Create an {+avs+} index on the ``plot_embedding`` field. This field
   contains vector embeddings that represent the summary of a movie's
   plot. 
#. Create an |fts| index on the dynamically indexable fields in the
   ``sample_mflix.embedded_movies`` collection.  
#. Run a query that uses reciprocal rank fusion to combine the results
   from a :pipeline:`$vectorSearch` query against the
   ``plot_embedding`` field and a :pipeline:`$search` query against the
   ``title`` field.

Why Hybrid Search?
------------------

.. include:: /includes/search-shared/extracts/why-hybrid-search.rst 

What is Reciprocal Rank Fusion?
-------------------------------

.. include:: /includes/search-shared/extracts/what-is-rrf.rst 

Prerequisites 
-------------

.. include:: /includes/search-shared/extracts/hybrid-search-prereq.rst 

Create the {+avs+} and |fts| Indexes 
-------------------------------------------------

This section demonstrates how to create the following indexes on the
fields in the ``sample_mflix.embedded_movies`` collection: 

- An {+avs+} index on the ``plot_embedding`` field for running vector
  queries against that field. 
- An |fts| index on the ``title`` field for running full-text search
  against that field.

Procedure 
~~~~~~~~~

.. tabs-drivers::

   .. tab::
      :tabid: nodejs

      .. include:: /includes/avs/rrf-tutorial/steps-avs-rrf-tutorial-create-index-javascript.rst

   .. tab::
      :tabid: shell

      .. include:: /includes/avs/rrf-tutorial/steps-avs-rrf-tutorial-create-index-mongosh.rst

Retrieval Rank Fusion
---------------------

This section demonstrates how to query the data in the
``sample_mflix.embedded_movies`` collection for *star wars* in the
``plot_embedding`` and ``title`` fields by using the
:pipeline:`$vectorSearch` and :pipeline:`$search` pipeline stages and 
combine each document's scores from both stages to re-sort the documents
in the results. This ensures that documents appearing in both searches
appear at the top of the combined results.  

Procedure 
~~~~~~~~~

.. tabs-drivers::

   .. tab::
      :tabid: nodejs

      .. include:: /includes/avs/rrf-tutorial/steps-avs-rrf-javascript-query.rst

   .. tab::
      :tabid: shell

      .. include:: /includes/avs/rrf-tutorial/steps-avs-rrf-shell-query.rst

About the Query 
~~~~~~~~~~~~~~~

.. include:: /includes/search-shared/extracts/rrf-query-intro.rst 

Query Variables 
```````````````

.. include:: /includes/search-shared/extracts/rrf-query-variables.rst 

Query Stages 
````````````
.. include:: /includes/search-shared/extracts/rrf-query-stages.rst 

Learn by Watching
~~~~~~~~~~~~~~~~~

.. include:: /includes/search-shared/extracts/hybrid-search-learn.rst 

  