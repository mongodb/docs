.. _java-authentication-scram:

=====
SCRAM
=====

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: .NET, salt, default, code example

Overview
--------

**Salted Challenge Response Authentication Mechanism (SCRAM)** is a family of
authentication mechanisms that use a challenge-response mechanism to authenticate
the user. SCRAM-SHA-256, which uses the SHA-256 algorithm to hash your password, is the
default authentication mechanism in {+mdb-server+} version 4.0
and later. SCRAM-SHA-1, which uses the SHA-1 algorithm instead, is the default
authentication mechanism in {+mdb-server+} versions earlier than 4.0.

You can use SCRAM to authenticate to MongoDB Atlas, MongoDB
Enterprise Advanced, and MongoDB Community Edition.

.. tip:: SCRAM Mechanisms

   To learn more about the SCRAM family of authentication mechanisms, see
   `RFC 5802 <https://tools.ietf.org/html/rfc5802>`__ and
   :wikipedia:`Salted Challenge Response Authentication Mechanism <Salted_Challenge_Response_Authentication_Mechanism>`
   on Wikipedia.

   For more information about the MongoDB implementation of SCRAM, see
   :manual:`SCRAM </core/security-scram>` in the {+mdb-server+} manual.

Code Placeholders 
~~~~~~~~~~~~~~~~~

The code examples on this page use the following placeholders:

- ``<db_username>``: The MongoDB username of the user to authenticate.
- ``<db_password>``: The MongoDB password of the user to authenticate.
- ``<hostname>``: The network address of your MongoDB deployment.
- ``<port>``: The port number of your MongoDB deployment. If you omit this parameter,
  the driver uses the default port number (``27017``). You don't need a port number
  when connecting to a MongoDB Atlas cluster.
- ``<authenticationDb>``: The MongoDB database that contains the user's authentication
  data. If you omit this parameter, the driver uses the default value, ``admin``.

To use the code examples, replace these placeholders with your own values.

Specify the Default SCRAM Authentication Mechanism
--------------------------------------------------

To use the default SCRAM mechanism to authenticate your MongoDB user, specify your
MongoDB credentials, but don't specify an authentication mechanism.
Select the :guilabel:`Connection String` or the :guilabel:`MongoCredential`
tab below for instructions and sample code for the corresponding syntax:

.. tabs::

   .. tab::
      :tabid: Connection String

      To specify the default authentication mechanism by using a connection
      string, omit the mechanism. The code to instantiate a ``MongoClient``
      resembles the following:

      .. code-block:: java

         MongoClient mongoClient = MongoClients.create("mongodb://<db_username>:<db_password>@<hostname>:<port>/?authSource=<authenticationDb>");

   .. tab::
      :tabid: MongoCredential

      To specify the default authentication mechanism by using the
      ``MongoCredential`` class, use the ``createCredential()`` method. The
      code to instantiate a ``MongoClient`` resembles the following:

      .. include:: /includes/fundamentals/code-snippets/auth-credentials-default.rst

For more information about the challenge-response (CR) and salted
challenge-response authentication mechanisms (SCRAM) that MongoDB supports,
see the :manual:`SCRAM </core/security-scram/>` section of the {+mdb-server+}
manual.

Specify SCRAM-SHA-256 Authentication
------------------------------------

``SCRAM-SHA-256`` is the default authentication method for MongoDB starting
in MongoDB 4.0, but this code example shows how to explicitly use this
mechanism. Select the :guilabel:`Connection String` or the :guilabel:`MongoCredential`
tab for instructions and sample code for specifying this authentication
mechanism:

.. tabs::

   .. tab::
      :tabid: Connection String

      To specify the ``SCRAM-SHA-256`` authentication mechanism by using a
      connection string, assign the ``authMechanism`` parameter the value
      ``SCRAM-SHA-256`` in your connection string. The code to instantiate
      a ``MongoClient`` resembles the following:

      .. code-block:: java

         MongoClient mongoClient = MongoClients.create("mongodb://<db_username>:<db_password>@<hostname>:<port>/?authSource=<authenticationDb>&authMechanism=SCRAM-SHA-256");

   .. tab::
      :tabid: MongoCredential

      To specify the ``SCRAM-SHA-256`` authentication mechanism by using the
      ``MongoCredential`` class, use the ``createScramSha256Credential()``
      method. The code to instantiate a ``MongoClient`` resembles
      the following:

      .. include:: /includes/fundamentals/code-snippets/auth-credentials-sha256.rst

Specify SCRAM-SHA-1 Authentication
----------------------------------

``SCRAM-SHA-1`` is the default authentication method for MongoDB versions
earlier than 4.0, but this code example shows how to explicitly use this
mechanism. Select the :guilabel:`Connection String` or the :guilabel:`MongoCredential`
tab for instructions and sample code for specifying this authentication
mechanism:

.. tabs::

   .. tab::
      :tabid: Connection String

      To specify the ``SCRAM-SHA-1`` authentication mechanism by using a
      connection string, assign the ``authMechanism`` parameter the value
      ``SCRAM-SHA-1`` in your connection string. The code to instantiate
      a ``MongoClient`` resembles the following:

      .. code-block:: java

         MongoClient mongoClient = MongoClients.create("mongodb://<db_username>:<db_password>@<hostname>:<port>/?authSource=<authenticationDb>&authMechanism=SCRAM-SHA-1");

   .. tab::
      :tabid: MongoCredential

      To specify the ``SCRAM-SHA-1`` authentication mechanism by using the
      ``MongoCredential`` class, use the ``createScramSha1Credential()``
      method. The code to instantiate a ``MongoClient`` resembles the following:

      .. include:: /includes/fundamentals/code-snippets/auth-credentials-sha1.rst

API Documentation
-----------------

To learn more about any of the methods or types discussed on this
page, see the following API documentation:

- `MongoClient <{+driver-api+}/MongoClient.html>`__
- `MongoCredential <{+core-api+}/MongoCredential.html>`__
- `MongoCredential.createCredential() <{+core-api+}/MongoCredential.html#createCredential(java.lang.String,java.lang.String,char%5B%5D)>`__
- `MongoCredential.createScramSha256Credential() <{+core-api+}/MongoCredential.html#createScramSha256Credential(java.lang.String,java.lang.String,char[])>`__
- `MongoCredential.createScramSha1Credential() <{+core-api+}/MongoCredential.html#createScramSha1Credential(java.lang.String,java.lang.String,char[])>`__