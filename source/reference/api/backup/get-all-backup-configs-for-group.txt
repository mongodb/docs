=============================================
Get All Backup Configurations for One Project
=============================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. include:: /includes/fact-groups-projects-synonyms.rst

.. include:: /includes/api/base-api-uri.rst

Resource
--------

.. code-block:: http

   GET /groups/{GROUP-ID}/backupConfigs

Request Parameters
------------------

Request Path Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :widths: 10 10 80
   :header-rows: 1
   :stub-columns: 1
   
   * - Name
     - Type
     - Description

   * - GROUP-ID
     - string
     - *(Required.)* The unique identifier for the group.

Request Query Parameters
~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/api/no-query-list-parameters.rst

Request Body Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/api/no-body-parameters.rst

Response
--------

.. list-table::
   :widths: 10 10 80
   :header-rows: 1
   :stub-columns: 1

   * - Name
     - Type
     - Description

   * - groupId
     - string
     - Unique identifier of the group that owns this backup configuration.

   * - clusterId
     - string
     - Unique identifier of the cluster that this backup configuration is for.

   * - statusName
     - string
     - The current (or desired) status of the backup configuration. Possible
       values are:

       - ``INACTIVE``
       - ``PROVISIONING``
       - ``STARTED``
       - ``STOPPED``
       - ``TERMINATING``

   * - storageEngineName
     - string
     - The storage engine used for the backup. Possible values are:

       - ``MEMORY_MAPPED``
       - ``WIRED_TIGER``

.. only:: onprem

   .. list-table::
      :widths: 10 10 80
      :stub-columns: 1

      * - encryptionEnabled
        - boolean
        - Specifies whether encryption is enabled for the backup
          configuration. You must include the ``syncSource`` field when
          enabling encryption for a backup configuration. For existing
          backups in a group, enabling encryption requires an initial backup
          sync to recreate the backupsâ€™ head databases.

.. list-table::
   :widths: 10 10 80
   :stub-columns: 1

   * - sslEnabled
     - boolean
     - Is SSL enabled for the sync source database?

   * - excludedNamespaces
     - string array
     - A list of database names and collection names to omit from the
       backup. Each string is a namespace in the form of ``<database>`` or
       ``<database>.<collection>``. If this field is present the
       ``includedNamespaces`` field cannot be present.

       You must send the new full list of excluded namespaces, including any
       that were already listed.

       If the new list removes any namespaces from the previous list, you must
       also set the ``syncSource`` field, as the removal of an excluded
       namespace necessitates a full resync. Without the ``syncSource`` field,
       the request will fail.

       If the new list only adds to the previous list, you do not need to set
       ``syncSource``.

   * - includedNamespaces
     - string array
     - A list of database names and collection names to include in the
       backup. Each string is a namespace in the form of ``<database>``
       or ``<database>.<collection>``. Any namespace **not listed** in this
       array **will not be backed up**. If this field is present the
       ``excludedNamespaces`` field cannot be present.

       You must send the new full list of included namespaces, including any
       that were already listed.

       If the new list adds any namespaces to the previous list, you must
       also set the ``syncSource`` field, as the addition of an included
       namespace necessitates a full resync. Without the ``syncSource`` field,
       the request will fail.

       If the new list only removes namespaces from the previous list, you do
       not need to set ``syncSource``.

Example Request
---------------

.. only:: cloud

   .. cssclass:: copyable-code
   .. code-block:: sh

      curl --user "{username}:{apiKey}" --digest \
       --header "Accept: application/json" \
       --include \
       --request GET "https://cloud.mongodb.com/api/public/v1.0/groups/{GROUP-ID}/backupConfigs"

.. only:: onprem

   .. cssclass:: copyable-code
   .. code-block:: sh

      curl --user "{username}:{apiKey}" --digest \
       --header "Accept: application/json" \
       --include \
       --request GET "https://{opsManagerHost}:{port}/api/public/v1.0/groups/{GROUP-ID}/backupConfigs"

Example Response
~~~~~~~~~~~~~~~~

Response Header
~~~~~~~~~~~~~~~

.. include:: /includes/api/api-headers/401.rst

.. include:: /includes/api/api-headers/200.rst

Response Body
~~~~~~~~~~~~~

.. code-block:: json

   {
     "totalCount" : 3,
     "results" : [ {
       "groupId" : "{GROUP-ID}",
       "clusterId" : "{CLUSTER-ID1}",
       "statusName" : "STARTED",
       "storageEngineName" : "WIRED_TIGER",
       "sslEnabled" : false,
       "excludedNamespaces" : [ ],
       "includedNamespaces" : [ ],
       "links" : []
     }, {
       "groupId" : "{GROUP-ID}",
       "clusterId" : "{CLUSTER-ID2}",
       "statusName" : "STARTED",
       "storageEngineName" : "MEMORY_MAPPED",
       "sslEnabled" : false,
       "excludedNamespaces" : [ ],
       "includedNamespaces" : [ ],
       "links" : []
     }, {
       "groupId" : "{GROUP-ID}",
       "clusterId" : "{CLUSTER-ID3}",
       "statusName" : "STOPPED",
       "storageEngineName" : "WIRED_TIGER",
       "sslEnabled" : false,
       "excludedNamespaces" : [ ],
       "includedNamespaces" : [ ],
       "links" : []
     } ],
     "links" : []
   }
