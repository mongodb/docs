.. _package-installation:

==============================
Package Installation Reference
==============================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

``libbson`` and ``libmongoc`` are available from several package management tools
on a variety of systems.

.. important::

   The third-party packages detailed here are not directly controlled via the
   ``mongo-c-driver`` maintainers, and the information found here may be incomplete
   or out-of-date.


Package Names and Availability
------------------------------

This table details the names and usage notes of such packages.

.. note::
  
   The development packages (ending in ``-dev`` or ``-devel``) include files required to build
   applications using ``libbson`` and ``libmongoc``.

.. seealso::

   For a step-by-step tutorial on installing packages, refer to
   :ref:`installing`.


.. list-table::
  :widths: 1 1 1 1 1
  :header-rows: 1
  :align: left

  * - Packaging Tool
    - Platform(s)
    - ``libbson`` package(s)
    - ``libmongoc`` package(s)
    - Notes

  * - APT (``apt`` / ``apt-get``)
    - Debian-based Linux distributions (``Debian``, ``Ubuntu``, Linux
      Mint, etc.)
    - ``libbson-1.0-0``, ``libbson-dev``,
      ``libbson-doc``
    - ``libmongoc-1.0-0``, ``libmongoc-dev``,
      ``libmongoc-doc``
    - .. empty cell

  * - YUM / DNF
    - RHEL-based systems (RHEL, ``Fedora``, ``CentOS``,
      ``Rocky Linux``, ``AlmaLinux``)
    - ``libbson``, ``libbson-devel``
    - ``mongo-c-driver-libs``, ``mongo-c-driver-devel``
    - *Except on Fedora* the `EPEL <https://docs.fedoraproject.org/en-US/epel/>`_ repositories must be enabled (i.e. install
      the ``epel-release`` package first)

  * - APK
    - Alpine Linux
    - ``libbson``, ``libbson-dev``, ``libbson-static``
    - ``mongo-c-driver``, ``mongo-c-driver-dev``, ``mongo-c-driver-static``
    - .. empty cell

  * - pacman
    - Arch Linux
    - ``mongo-c-driver``
    - ``mongo-c-driver``
    - A single package provides both runtime and development support for both
      ``libbson`` and ``libmongoc``

  * - Homebrew
    - macOS
    - ``mongo-c-driver``
    - ``mongo-c-driver``
    - .. empty

  * - Conan
    - Cross-platform
    - ``mongo-c-driver``
    - ``mongo-c-driver``
    - See: :ref:`ref.conan.settings`

  * - vcpkg
    - Cross-platform
    - ``libbson``
    - ``mongo-c-driver``
    - See: :ref:`ref.vcpkg.features`

.. _ref.conan.settings:

Conan Settings and Features
---------------------------

The ``mongo-c-driver`` `Conan <https://conan.io/>`__ recipe includes several build settings that
correspond to the configure-time build settings available when building the
``mongo-c-driver`` project.

.. seealso::

   `The mongo-c-driver Conan recipe (includes libbson) <https://github.com/conan-io/conan-center-index/tree/master/recipes/mongo-c-driver>`__


.. list-table::
  :header-rows: 1
  :align: left

  * - Setting
    - Options
    - Default
    - Notes

  * - ``shared``
    - (Boolean)
    - ``False``
    - Build the shared library instead of the static library

  * - ``fPIC``
    - (Boolean)
    - ``True``
    - Compile code as position-independent

  * - ``srv``
    - (Boolean)
    - ``True``
    - Enables MongoDB SRV URI support

  * - ``with_ssl``
    - ``openssl``, ``libressl``, ``windows``, ``darwin``, ``False``
    - ``openssl`` (:ref:`See note <oss-default>`)
    - Select a TLS backend. Setting to "``False``" disables TLS support.

  * - ``with_sasl``
    - ``sspi``, ``cyrus``, ``False``
    - ``sspi`` on Windows, ``False`` elsewhere
    - Enable `SASL authentication <https://en.wikipedia.org/wiki/Simple_Authentication_and_Security_Layer>`__ support

  * - ``with_snappy``
    - (Boolean)
    - ``True``
    - Enable `Snappy <https://google.github.io/snappy/>`_ compression

  * - ``with_zlib``
    - (Boolean)
    - ``True``
    - Enable `Zlib <https://www.zlib.net/>`__ compression

  * - ``with_zstd``
    - (Boolean)
    - ``True``
    - Enable `Zstd <https://github.com/facebook/zstd>`_ compression

.. _oss-default:

.. note::

  Conan will use OpenSSL as the default TLS backend, even on platforms that ship
  with their own TLS implementation (e.g. Windows and macOS). This behavior
  differs from the upstream default-configured ``libmongoc`` or the vcpkg
  distribution of ``mongo-c-driver``, which both default to use the TLS
  implementation preferred for the target platform.

.. _ref.vcpkg.features:

vcpkg Optional Features
-----------------------

The ``mongo-c-driver`` package offered by `vcpkg <https://vcpkg.io/>`_ supports several optional
features.

.. seealso::

  - `The vcpkg libbson port <https://github.com/microsoft/vcpkg/tree/master/ports/libbson>`__
  - `The vcpkg mongo-c-driver port <https://github.com/microsoft/vcpkg/tree/master/ports/mongo-c-driver>`__

.. list-table::
  :header-rows: 1
  :align: left

  * - Feature
    - Notes

  * - ``icu``
    - Installs the ICU library, which is necessary for non-ASCII usernames and
      passwords in pre-1.25 ``libmongoc``
  * - ``openssl``
    - Use OpenSSL for encryption, even on Windows and Apple platforms which
      provide a native TLS backend.

      If omitted, the default will be to use the preferred TLS implementation
      for the system.
  * - ``snappy``
    - Enable the `Snappy <https://google.github.io/snappy/>`_ compression backend
  * - ``zstd``
    - Enable the `Zstd <https://github.com/facebook/zstd>`_ compression backend
