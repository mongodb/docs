#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/index-text.txt:5
msgid "Text Indexes"
msgstr "文本索引"


#: ../source/core/index-text.txt:38

msgid "Create Text Index"
msgstr "创建文本搜索"

#: ../source/core/index-text.txt:44
msgid ""
"To create a ``text`` index, use the :method:`db.collection.createIndex()` "
"method. To index a field that contains a string or an array of string "
"elements, include the field and specify the string literal ``\"text\"`` in "
"the index document, as in the following example:"
msgstr ""
"请使用 :method:`db.collection.ensureIndex()` 方法创建 ``文本`` 索引。为了索引"
"一个存储字符串或者字符串数组的键，您需要在创建选项中包含这个键并指定为 ``"
"\"text\"`` ，如下："

#: ../source/includes/fact-text-index-limit-one.rst:1
#: ../source/includes/fact-text-index-limit-one.rst:1
msgid "A collection can have at most **one** ``text`` index."
msgstr "一个集合最多只能创建 **一个** ``文本`` 索引。"


#: ../source/core/index-text.txt:85

msgid "Wildcard Text Indexes"
msgstr ""

#: ../source/core/index-text.txt:102
msgid ""
"Wildcard text indexes are ``text`` indexes on multiple fields. As such, you "
"can assign weights to specific fields during index creation to control the "
"ranking of the results. For more information using weights to control the "
"results of a text search, see :doc:`/tutorial/control-results-of-text-"
"search`."
msgstr ""

#: ../source/core/index-text.txt:108
msgid ""
"Wildcard text indexes, as with all text indexes, can be part of a compound "
"indexes. For example, the following creates a compound index on the field "
"``a`` as well as the wildcard specifier:"
msgstr ""

#: ../source/core/index-text.txt:116
msgid ""
"As with all :ref:`compound text indexes <text-index-compound>`, since the "
"``a`` precedes the text index key, in order to perform a :query:`$text` "
"search with this index, the query predicate must include an equality match "
"conditions ``a``. For information on compound text indexes, see "
":ref:`Compound Text Indexes <text-index-compound>`."
msgstr ""

#: ../source/core/index-text.txt:211
msgid "Supported Languages and Stop Words"
msgstr "支持的语言和停止词(Stop Words， 信息检索术语)"

#: ../source/includes/fact-text-search-language-none.rst:3
msgid ""
"If you specify a language value of ``\"none\"``, then the |text-obj| uses "
"simple tokenization with no list of stop words and no stemming."
msgstr ""

#: ../source/core/index-text.txt:222
msgid ""
"To specify a language for the ``text`` index, see :doc:`/tutorial/specify-"
"language-for-text-index`."
msgstr ""

#: ../source/core/index-text.txt:226
msgid "``sparse`` Property"
msgstr ""


#: ../source/core/index-text.txt:241

msgid "Restrictions"
msgstr "限制"

#: ../source/core/index-text.txt:249
msgid "Text Search and Hints"
msgstr "文本搜索与提示"

#: ../source/includes/fact-hint-text-query-restriction.rst:3
msgid ""
"You cannot use :method:`~cursor.hint()` if the query includes a :query:`"
"$text` query expression."
msgstr ""
"如果查询中包含了 :query:`$text` 表达式，您不能使用 :method:`~cursor."
"hint()` 。"

#: ../source/core/index-text.txt:256
msgid "Text Index and Sort"
msgstr ""

#: ../source/core/index-text.txt:258
msgid ""
"Sort operations cannot obtain sort order from a ``text`` index, even from a "
":ref:`compound text index <text-index-compound>`; i.e. sort operations "
"cannot use the ordering in the text index."
msgstr ""

#: ../source/core/index-text.txt:265
msgid "Compound Index"
msgstr "复合索引"

#: ../source/core/index-text.txt:267
msgid ""
"A :doc:`compound index </core/index-compound>` can include a ``text`` index "
"key in combination with ascending/descending index keys. However, these "
"compound indexes have the following restrictions:"
msgstr ""
"MongoDB中 :doc:`复合索引 </core/index-compound>` 可以包含一个 ``文本`` 索引"
"键，和其它递增/递减索引键。但是，这些复合索引都有如下限制："

#: ../source/includes/fact-compound-index-with-text-restrictions.rst:1
msgid ""
"A compound ``text`` index cannot include any other special index types, such "
"as :ref:`multi-key <index-type-multi-key>` or :ref:`geospatial <index-"
"feature-geospatial>` index fields."
msgstr ""
"复合 ``文本`` 索引不能包含任何其他特殊类型索引，比如 :ref:`多键索引 <index-"
"type-multi-key>` or :ref:`地理索引 <index-feature-geospatial>` 键。"

#: ../source/includes/fact-compound-index-with-text-restrictions.rst:5
msgid ""
"If the compound ``text`` index includes keys **preceding** the ``text`` "
"index key, to perform a :query:`$text` search, the query predicate must "
"include **equality match conditions** on the preceding keys."
msgstr ""
"如果复合 ``文本`` 索引中有其他键排在 ``文本`` 索引键 **之前** ，当查询 :"
"query:`$text` 时，这条查询必须包含对这些键的 **相等匹配条件** 。"

#: ../source/core/index-text.txt:273
msgid "See also :ref:`text-index-and-sort` for additional limitations."
msgstr ""

#: ../source/core/index-text.txt:275
msgid ""
"For an example of a compound text index, see :doc:`/tutorial/limit-number-"
"of-items-scanned-for-text-search`."
msgstr ""

#: ../source/core/index-text.txt:281
msgid "Drop a Text Index"
msgstr ""

#: ../source/core/index-text.txt:287
msgid ""
"For information on the default naming scheme for ``text`` indexes as well as"
" overriding the default name, see :doc:`/tutorial/avoid-text-index-name-"
"limit`."
msgstr ""

#: ../source/core/index-text.txt:292
msgid "Storage Requirements and Performance Costs"
msgstr ""
"MongoDB中 ``文本`` 索引创建以后会将集合中接下来的记录的空间分配方式更改为 :"
"collflag:`usePowerOf2Sizes` 。"

#: ../source/core/index-text.txt:294
msgid ""
"``text`` indexes have the following storage requirements and performance "
"costs:"
msgstr ""

#: ../source/core/index-text.txt:297
msgid ""
"``text`` indexes can be large. They contain one index entry for each unique "
"post-stemmed word in each indexed field for each document inserted."
msgstr ""
"MongoDB中 ``文本``索引可能会很大。它们会为每篇被插入文档中被索引键的每个唯一"
"的词根(post-stemmed word)创建索引项。"

#: ../source/core/index-text.txt:301
msgid ""
"Building a ``text`` index is very similar to building a large multi-key "
"index and will take longer than building a simple ordered (scalar) index on "
"the same data."
msgstr ""
"创建 ``文本`` 索引和创建一个大的多键索引很像，并且对于索引同样的数据，所需时"
"间也会长于创建一个简单的有序(非地理)索引。"

#: ../source/core/index-text.txt:305
msgid ""
"When building a large ``text`` index on an existing collection, ensure that "
"you have a sufficiently high limit on open file descriptors. See the :doc:"
"`recommended settings </reference/ulimit>`."
msgstr ""
"当在一个已经存在的集合上创建一个大的 ``文本`` 索引，请确保您有足够高的文件描"
"述符打开个数的限制。参见 :doc:`推荐设置 </reference/ulimit>` 。"

#: ../source/core/index-text.txt:309
msgid ""
"``text`` indexes will impact insertion throughput because MongoDB must add "
"an index entry for each unique post-stemmed word in each indexed field of "
"each new source document."
msgstr ""
"MongoDB中 ``文本`` 索引会影响插入，因为MOngoDB必须为每个新插入的文档中的每个"
"被索引键的数据中的每个唯一词根添加索引项。"

#: ../source/core/index-text.txt:313
msgid ""
"Additionally, ``text`` indexes do not store phrases or information about the "
"proximity of words in the documents. As a result, phrase queries will run "
"much more effectively when the entire collection fits in RAM."
msgstr ""
"此外， ``文本`` 索引不会存储词组或者文档中词的近义词的信息。所以，当整个集合"
"可以容纳在内存中时，词组查询会比较高效。"


#: ../source/core/index-text.txt:0
msgid "On this page"
msgstr ""

#: ../source/core/index-text.txt:17
msgid ""
"Starting in MongoDB 3.2, MongoDB introduces a version 3 of the ``text`` "
"index. Key features of the new version of the index are:"
msgstr ""

#: ../source/core/index-text.txt:20
msgid "Improved :ref:`case insensitivity <text-index-case-insensitivity>`"
msgstr ""

#: ../source/core/index-text.txt:22
msgid ":ref:`Diacritic insensitivity <text-index-diacritic-insensitivity>`"
msgstr ""

#: ../source/core/index-text.txt:24
msgid ""
"Additional :ref:`delimiters for tokenization <text-index-tokenization-"
"delimiters>`"
msgstr ""

#: ../source/core/index-text.txt:27
msgid ""
"Starting in MongoDB 3.2, version 3 is the default version for new ``text`` "
"indexes."
msgstr ""

#: ../source/core/index-text.txt:31
msgid "Overview"
msgstr ""

#: ../source/includes/fact-text-index.rst:1
msgid ""
"MongoDB provides :ref:`text indexes <index-feature-text>` to support text "
"search queries on string content. ``text`` indexes can include any field "
"whose value is a string or an array of string elements."
msgstr ""

#: ../source/core/index-text.txt:54
msgid ""
"You can index multiple fields for the ``text`` index. The following example "
"creates a ``text`` index on the fields ``subject`` and ``comments``:"
msgstr ""

#: ../source/core/index-text.txt:67
msgid ""
"A :doc:`compound index </core/index-compound>` can include ``text`` index "
"keys in combination with ascending/descending index keys. For more "
"information, see :ref:`text-index-compound`."
msgstr ""

#: ../source/core/index-text.txt:71
msgid ""
"In order to drop a ``text`` index, use the index name. See :ref:`drop-text-"
"index` for more information."
msgstr ""

#: ../source/core/index-text.txt:75
msgid "Specify Weights"
msgstr ""

#: ../source/includes/fact-text-index-weight.rst:1
msgid ""
"For a ``text`` index, the *weight* of an indexed field denotes the "
"significance of the field relative to the other indexed fields in terms of "
"the text search score."
msgstr ""

#: ../source/includes/fact-text-index-weight.rst:5
msgid ""
"For each indexed field in the document, MongoDB multiplies the number of "
"matches by the weight and sums the results. Using this sum, MongoDB then "
"calculates the score for the document. See :projection:`$meta` operator for "
"details on returning and sorting by text scores."
msgstr ""

#: ../source/includes/fact-text-index-weight.rst:10
msgid ""
"The default weight is 1 for the indexed fields. To adjust the weights for "
"the indexed fields, include the ``weights`` option in the "
":method:`db.collection.createIndex()` method."
msgstr ""

#: ../source/core/index-text.txt:79
msgid ""
"For more information using weights to control the results of a text search, "
"see :doc:`/tutorial/control-results-of-text-search`."
msgstr ""

#: ../source/core/index-text.txt:87
msgid ""
"When creating a ``text`` index on multiple fields, you can also use the "
"wildcard specifier (``$**``). With a wildcard text index, MongoDB indexes "
"every field that contains string data for each document in the collection. "
"The following example creates a text index using the wildcard specifier:"
msgstr ""

#: ../source/core/index-text.txt:97
msgid ""
"This index allows for text search on all fields with string content. Such an"
" index can be useful with highly unstructured data if it is unclear which "
"fields to include in the text index or for ad-hoc querying."
msgstr ""

#: ../source/core/index-text.txt:125
msgid "Case Insensitivity"
msgstr ""

#: ../source/core/index-text.txt:129
msgid ""
"The version 3 ``text`` index supports the common ``C``, simple ``S``, and "
"for Turkish languages, the special ``T`` case foldings as specified in "
"`Unicode 8.0 Character Database Case Folding "
"<http://www.unicode.org/Public/8.0.0/ucd/CaseFolding.txt>`_."
msgstr ""

#: ../source/core/index-text.txt:136
msgid ""
"The case foldings expands the case insensitivity of the ``text`` index to "
"include characters with diacritics, such as ``é`` and ``É``, and characters "
"from non-Latin alphabets, such as \"И\" and \"и\" in the Cyrillic alphabet."
msgstr ""

#: ../source/core/index-text.txt:148
msgid ""
"Version 3 of the ``text`` index is also :ref:`diacritic insensitive <text-"
"index-diacritic-insensitivity>`. As such, the index also does not "
"distinguish between ``é``, ``É``, ``e``, and ``E``."
msgstr ""


#: ../source/core/index-text.txt:152
msgid ""
"Previous versions of the ``text`` index are case insensitive for ``[A-z]`` "
"only; i.e. case insensitive for non-diacritics Latin characters only . For "
"all other characters, earlier versions of the text index treat them as "
"distinct."
msgstr ""
"文本搜索支持对文档中的字符串内容进行搜索。MongoDB提供 :query:`$text` 操作符来"
"执行文本搜索，对于查询和 :doc:`聚集管道 </tutorial/text-search-in-"
"aggregation>` 都是可用的。"


#: ../source/core/index-text.txt:160
msgid "Diacritic Insensitivity"
msgstr ""


#: ../source/core/index-text.txt:164
msgid ""

"With version 3, ``text`` index is diacritic insensitive. That is, the index "
"does not distinguish between characters that contain diacritical marks and "
"their non-marked counterpart, such as ``é``, ``ê``, and ``e``. More "
"specifically, the ``text`` index strips the characters categorized as "
"diacritics in `Unicode 8.0 Character Database Prop List "
"<http://www.unicode.org/Public/8.0.0/ucd/PropList.txt>`_."
msgstr ""


#: ../source/core/index-text.txt:171
msgid ""
"Version 3 of the ``text`` index is also :ref:`case insensitive <text-index-"
"case-insensitivity>` to characters with diacritics. As such, the index also "
"does not distinguish between ``é``, ``É``, ``e``, and ``E``."
msgstr ""
"如果一篇文档的被索引键中包含了搜索词，则为它赋予一个分数。这个分数决定了一篇"
"文档和一个给定搜索查询的相关性。"

#: ../source/core/index-text.txt:176
msgid ""
"Previous versions of the ``text`` index treat characters with diacritics as "
"distinct."
msgstr ""

#: ../source/core/index-text.txt:182
msgid "Tokenization Delimiters"
msgstr ""

#: ../source/core/index-text.txt:186
msgid ""
"For tokenization, version 3 ``text`` index uses the delimiters categorized "
"under ``Dash``, ``Hyphen``, ``Pattern_Syntax``, ``Quotation_Mark``, "
"``Terminal_Punctuation``, and ``White_Space`` in `Unicode 8.0 Character "
"Database Prop List <http://www.unicode.org/Public/8.0.0/ucd/PropList.txt>`_."
msgstr ""

#: ../source/core/index-text.txt:192
msgid ""
"For example, if given a string ``\"Il a dit qu'il «était le meilleur joueur "
"du monde»\"``, the ``text`` index treats ``«``, ``»``, and spaces as "
"delimiters."
msgstr ""

#: ../source/core/index-text.txt:196
msgid ""
"Previous versions of the index treat ``«`` as part of the term "
"``\"«était\"`` and ``»`` as part of the term ``\"monde»\"``."
msgstr ""

#: ../source/core/index-text.txt:200
msgid "Index Entries"
msgstr ""

#: ../source/core/index-text.txt:202
msgid ""
"``text`` index tokenizes and stems the terms in the indexed fields for the "
"index entries. ``text`` index stores one index entry for each unique stemmed"
" term in each indexed field for each document in the collection. The index "
"uses simple :ref:`language-specific <text-index-supported-languages>` suffix"
" stemming."
msgstr ""

#: ../source/core/index-text.txt:213
msgid ""
"MongoDB supports text search for various languages. ``text`` indexes drop "
"language-specific stop words (e.g. in English, ``the``, ``an``, ``a``, "
"``and``, etc.) and use simple language-specific suffix stemming. For a list "
"of the supported languages, see :ref:`text-search-languages`."
msgstr ""
"操作符 :query:`$text` 可以搜索单层和词组。当整个词根被匹配上时，查询才算匹配"
"上。例如，如果一篇文档的键包含了词 ``blueberry`` ，如果搜索的是 ``blue`` 将不"
"会匹配上。相反，如果查询的是 ``blueberry`` 或者 ``blueberries`` 将会得到匹"
"配。"

#: ../source/core/index-text.txt:228
msgid ""

"``text`` indexes are :doc:`sparse </core/index-sparse>` by default and "
"ignore the :doc:`sparse: true </core/index-sparse>` option. If a document "
"lacks a ``text`` index field (or the field is ``null`` or an empty array), "
"MongoDB does not add an entry for the document to the ``text`` index. For "
"inserts, MongoDB inserts the document but does not add to the ``text`` "
"index."

msgstr ""

#: ../source/core/index-text.txt:235
msgid ""
"For a compound index that includes a ``text`` index key along with keys of "
"other types, only the ``text`` index field determines whether the index "
"references a document. The other keys do not determine whether the index "
"references the documents or not."
msgstr ""

#: ../source/core/index-text.txt:244
msgid "One Text Index Per Collection"
msgstr ""

#: ../source/core/index-text.txt:283
msgid ""
"To drop a ``text`` index, pass the *name* of the index to the "
":method:`db.collection.dropIndex()` method. To get the name of the index, "
"run the :method:`db.collection.getIndexes()` method."
msgstr ""

#: ../source/core/index-text.txt:319
msgid "Text Search Support"
msgstr ""

#: ../source/core/index-text.txt:321
msgid ""
"The ``text`` index supports :query:`$text` query operations. For examples of"
" text search, see the :query:`$text reference page <$text>`. For examples of"
" :query:`$text` operations in aggregation pipelines, see :doc:`/tutorial"
"/text-search-in-aggregation`."
msgstr ""

#~ msgid ""
#~ "MongoDB provides ``text`` indexes to support text search of string content "
#~ "in documents of a collection."
#~ msgstr ""

#~ msgid ""
#~ "``text`` indexes can include any field whose value is a string or an array "
#~ "of string elements. To perform queries that access the ``text`` index, use "
#~ "the :query:`$text` query operator."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB enables the text search feature by default. In MongoDB 2.4, you need"
#~ " to enable the text search feature manually to create ``text`` indexes and "
#~ "perform :ref:`text search <index-text-text-search>`."
#~ msgstr ""

#~ msgid ""
#~ "However, you can specify multiple fields for the ``text`` index. For "
#~ "examples of creating ``text`` indexes on multiple fields, see "
#~ ":doc:`/tutorial/create-text-index-on-multiple-fields` and :ref:`text-index-"
#~ "wildcard`."
#~ msgstr ""

#~ msgid ""
#~ "To allow for text search on all fields with string content, use the wildcard"
#~ " specifier (``$**``) to index all fields in the collection that contain "
#~ "string content. Such an index can be useful with highly unstructured data if"
#~ " it is unclear which fields to include in the text index or for ad-hoc "
#~ "querying."
#~ msgstr ""

#~ msgid ""
#~ "With a wildcard text index, MongoDB indexes every field that contains string"
#~ " data for each document in the collection. The following example creates a "
#~ "text index using the wildcard specifier:"
#~ msgstr ""

#~ msgid ""
#~ "MongoDB supports text search for various languages. ``text`` indexes drop "
#~ "language-specific stop words (e.g. in English, \"the\", \"an\", \"a\", "
#~ "\"and\", etc.) and uses simple language-specific suffix stemming. For a list"
#~ " of the supported languages, see :ref:`text-search-languages`."
#~ msgstr ""

#~ msgid ""
#~ "For the Latin alphabet, ``text`` indexes are case insensitive for non-"
#~ "diacritics; i.e. case insensitive for ``[A-z]``. For all other characters, "
#~ "text indexes treat them as distinct."
#~ msgstr ""

#~ msgid ""
#~ "``text`` indexes are :doc:`sparse </core/index-sparse>` by default and "
#~ "ignores the :doc:`sparse: true </core/index-sparse>` option. If a document "
#~ "lacks a ``text`` index field (or the field is ``null`` or an empty array), "
#~ "MongoDB does not add an entry for the document to the ``text`` index. For "
#~ "inserts, MongoDB inserts the document but does not add to the ``text`` "
#~ "index."
#~ msgstr ""

#~ msgid ""
#~ "For a compound index that includes a ``text`` index key along with keys of "
#~ "other types, only the ``text`` index field determine whether the index "
#~ "references a document. The other keys do not determine whether the index "
#~ "references the documents or not."
#~ msgstr ""

#~ msgid ""
#~ "To drop a ``text`` index, pass the name of the index to the "
#~ ":method:`db.collection.dropIndex()` method. To get the name of the index, "
#~ "run the :method:`~db.collection.getIndexes()` method."
#~ msgstr ""

#~ msgid "Text Search"
#~ msgstr ""

#~ msgid ""
#~ "Text search supports the search of string content in documents of a "
#~ "collection. MongoDB provides the :query:`$text` operator to perform text "
#~ "search in queries and in :doc:`aggregation pipelines </tutorial/text-search-"
#~ "in-aggregation>`."
#~ msgstr ""

#~ msgid "The text search process:"
#~ msgstr ""

#~ msgid ""
#~ "tokenizes and stems the search term(s) during both the index creation and "
#~ "the text command execution."
#~ msgstr ""

#~ msgid ""
#~ "assigns a score to each document that contains the search term in the "
#~ "indexed fields. The score determines the relevance of a document to a given "
#~ "search query."
#~ msgstr ""

#~ msgid ""
#~ "The :query:`$text` operator can search for words and phrases. The query "
#~ "matches on the complete stemmed words. For example, if a document field "
#~ "contains the word ``blueberry``, a search on the term ``blue`` will not "
#~ "match the document. However, a search on either ``blueberry`` or "
#~ "``blueberries`` will match."
#~ msgstr ""

#~ msgid ""
#~ "For information and examples on various text search patterns, see the "
#~ ":query:`$text` query operator. For examples of text search in aggregation "
#~ "pipeline, see :doc:`/tutorial/text-search-in-aggregation`."
#~ msgstr ""
