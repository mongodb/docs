.. _mongodb-analyzer-analyze-pocos:

=============
Analyze POCOs
=============

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

Plain old CLR objects, or plain old class objects (POCOs), are
simple class objects that don't
inherit features from any framework-specific base classes or interfaces.
If your application uses POCOs, you can use the {+product-short+} to preview them as JSON
objects.

To learn more about POCOs, see the :wikipedia:`POCOs page on Wikipedia <Plain_old_CLR_object>`
and the `Work with POCOs <{+driver-docs+}/fundamentals/data-formats/poco/>`__ page in the
{+driver-short+} documentation.

Preview as JSON
---------------

The following code sample shows an example of a POCO class definition
and its corresponding JSON translation. By previewing your
POCOs in JSON, you can see how BSON serialization attributes, such as ``BsonId`` and
``BsonElement``, change the shape of the resulting BSON during serialization.

.. io-code-block::
   :copyable: false

   .. input::
      :language: csharp

      class Order
      {
        [BsonId]
        public int OrderNumber { get; set; }

        [BsonElement("customer_id")]
        public int CustomerId { get; set; }

        public string Date { get; set; }

        [BsonIgnore]
        public string Email { get; set; }
      }

   .. output::
      :language: json

      {
        "_id": 6783456,
        "customer_id": 678234,
        "Date": "06/03/2023"
      }

.. tip:: Sample Data

   The {+product-short+} includes predefined sample values for certain common property names.
   If you use
   these property names in your POCO, the Analyzer uses the sample values in the JSON
   output. For any property names without predefined sample values, the Analyzer uses a
   random value that matches the property's data type.

   For a list of property names with sample values, see the
   `JSON sample value file <{+product-source-repo+}/blob/main/src/MongoDB.Analyzer/Core/Poco/Data/data.json>`__
   in the {+product+} GitHub repo.

Preview POCOs in Visual Studio
------------------------------

To preview your POCOs in Visual Studio, perform the following actions:

1. Install the {+product-short+} as described in the :ref:`mongodb-analyzer-install`
   guide.
#. Define a POCO class.
#. Move your cursor over the :guilabel:`...` ellipsis annotation beneath the first
   word of your class definition to display an information message that contains
   the JSON translation.

Click on the following corresponding tab to see a POCO class definition
with or without an information message displayed:

.. tabs::

   .. tab:: Without Information Message
      :tabid: no-message

      .. figure:: /includes/images/poco.png
         :alt: Screenshot of POCO definition with an ellipsis annotation in Visual Studio

   .. tab:: With Information Message
      :tabid: message

      .. figure:: /includes/images/poco-popup.png
         :alt: Screenshot of POCO definition with an information message displayed in Visual Studio

      .. tip:: Rule ID

         The information message begins with the {+product-short+} Rule ID that generated the 
         popup. In the previous example, the Rule ID is ``MAPoco1001``, indicating
         the POCO is valid. To learn more about this rule, see the
         :ref:`mongodb-analyzer-rules` guide.
