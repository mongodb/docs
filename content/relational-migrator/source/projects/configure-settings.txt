.. _rm-configure-settings:

================
Project Settings
================

.. meta::
   :description: Configure settings for a Relational Migrator project, including key handling options, global casing, and suggested mappings.

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

After you create a {+rel-mig+} project, you can configure settings for that
project.

.. note::

   To learn how to create a {+rel-mig+} project, see
   :ref:`Creating a Project <rm-create-project-live>`. To learn how to
   configure application settings, see :ref:`rm-application-settings`.

Open Project Settings Dialog
----------------------------

To open the :guilabel:`Project Settings` dialog:

1. From the {+rel-mig+} home page, click the target project.

#. From the project view, the gear icon next to your project's name.

Configurable Project Settings
-----------------------------

You can configure the following settings for your project:

.. _rm-key-handling-setting:

Key Handling Options
~~~~~~~~~~~~~~~~~~~~

Specifies how the ``_id`` field is populated when new documents are
inserted into a collection. You can choose one of the following options:

- :guilabel:`Autogenerated ObjectId`

  - Your ``_id`` field is populated with an autogenerated random
    :ref:`ObjectId <document-bson-type-object-id>`.

    ``Autogenered ObjectId`` is the default key handling strategy used 
    when creating a new project.

    You may choose to keep the original primary key as a different field
    in the collection.

    For example, if your relational table row has a primary key of ``personId = 1``, 
    after migration your MongoDB ``_id`` field is ``_id: ObjectId("62472f3d5849820a91d7b52f")``.

- :guilabel:`Single Inherited Primary Key`

  - Your ``_id`` field is populated with the value of the primary key
    field. The name of your primary key field is not included in the ``_id``.

    For example, if your relational table row has a primary key of ``personId=1``, 
    after migration your MongoDB ``_id`` field is ``_id: 1``. 

- :guilabel:`Wrapped Inherited Primary Key`

  - Your ``_id`` field is populated with an object where the key is the 
    name of your primary key field and the value is the value of your
    primary key field.

    For example, if your relational table row has a primary key of 
    ``personId = 1``, after  migration your MongoDB ``_id`` field is 
    ``_id: { personId: 1 }``. 


Key Handling Behavior
`````````````````````

- If your relational table has more than one field in its primary key
  and you select the :guilabel:`single` strategy, collections receiving data
  from that table use the :guilabel:`wrapped` key handling strategy. The
  :guilabel:`single` strategy only works for tables that have a single primary
  key.

- If your relational table does not have a primary key, collections
  receiving data from that table use the :guilabel:`generated` strategy even if
  you select a different global strategy.

.. _rm-global-casing:

Global Casing
~~~~~~~~~~~~~

You can choose one of the following options:

- :guilabel:`Keep Original`: Keep the original casing used in your relational
  database table name.

- :guilabel:`Override with Global Casing`: Override the original table name
  with a global casing convention.

  - ``camelCase``
  - ``TitleCase``
  - ``kebab-case``
  - ``snake_case``
  - ``UPPER_SNAKE_CASE``

.. note::

   Changing this setting after creating a project only impacts mappings
   created after the setting change. Mappings created prior to changing
   this setting are not affected.

Suggested Mappings
~~~~~~~~~~~~~~~~~~

Enabling :guilabel:`Suggested mappings` allows {+rel-mig+} to automatically
suggest mapping rules based upon your relational schema.
