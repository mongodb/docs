=======================
cloneCollectionAsCapped
=======================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. dbcommand:: cloneCollectionAsCapped

   The :dbcommand:`cloneCollectionAsCapped` command creates a new
   :term:`capped collection` from an existing, non-capped collection
   within the same database. The operation does not affect the
   original non-capped collection.

   The command has the following syntax:

   .. code-block:: javascript

      { cloneCollectionAsCapped: <existing collection>, toCollection: <capped collection>, size: <capped size> }

   The command copies an ``existing collection`` and creates a new
   ``capped collection`` with a maximum size specified by the ``capped
   size`` in bytes. The name of the new capped collection must be
   distinct and cannot be the same as that of the original existing
   collection. To replace the original non-capped collection with a
   capped collection, use the :dbcommand:`convertToCapped` command.

   During the cloning, the :dbcommand:`cloneCollectionAsCapped` command
   exhibit the following behavior:

   - MongoDB will transverse the documents in the original collection
     in :term:`natural order <natural order>` as they're loaded.

   - If the ``capped size`` specified for the new collection is
     smaller than the size of the original uncapped collection, then
     MongoDB will begin overwriting earlier documents in
     insertion order, which is *first in, first out* (e.g "FIFO").
