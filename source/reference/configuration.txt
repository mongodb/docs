.. _conf-mms.properties:

======================
|onprem| Configuration
======================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: twocols

Overview
--------

|onprem| stores configuration settings both globally in the
|application| Database and locally on each server. Global settings
apply to all your |onprem| servers. Local settings apply to the server
on which they are configured. Any local settings on a server override
the global settings.

You configure global settings through the |onprem| interface during
installation. You can edit global settings at any time through the
:guilabel:`Admin` interface by clicking the :guilabel:`General` tab and
then clicking :guilabel:`Ops Manager Config`.

You configure local settings through a server's ``conf-mms.properties``
file. Each server's ``conf-mms.properties`` must contain the connection
string and authentication settings for accessing the |onprem|
Application Database. The ``conf-mms.properties`` file also contains
any overrides of global settings specific to that server.

The location of the ``conf-mms.properties`` file depends on how you
installed |onprem|, as described in the table below.

.. list-table::
   :widths: 35 65
   :header-rows: 1

   * - Install method

     - conf-mms.properties location

   * - ``rpm`` or ``deb`` package

     - ``/opt/mongodb/mms/conf/``

   * - ``tar.gz`` archive

     - ``<install-directory>/conf/``

   * - ``msi`` file (Windows)

     - ``<install-folder>\Server\Config``

       By default, this is: ``C:\MMSData\Server\Config``.

Web Server Settings
-------------------

Configure global settings through the :guilabel:`Admin` interface.
|onprem| stores global settings in the |application| database.

.. setting:: URL to Access Ops Manager

   *Type*: string

   The fully qualified URL and port number of the |application|. For
   example:

   .. code-block:: ini

      http://mms.example.com:8080

   To use a port other than ``8080``, see :doc:`/tutorial/manage-ports`.

   Corresponds to configuration file setting: ``mms.centralUrl``

.. setting:: HTTPS PEM Key File

   *Type*: string

   Absolute path to the PEM file that contains the |application|'s
   valid certificate and private key. The PEM file is required if the
   |application| will use HTTPS to encrypt connections between the
   |application|, the agents, and the web interface.

   The default port for HTTPS access to the |application| is ``8443``,
   as set in ``<install_dir>/conf/mms.conf`` file. If you change this
   default, you must also change the port specified in the
   :setting:`URL to Access Ops Manager` setting.

   Corresponds to configuration file setting: ``mms.https.PEMKeyFile``

.. setting:: HTTPS PEM Key File Password

   *Type*: string

   The password for the HTTPS PEM key file. This is required if the PEM
   file contains an encrypted private key. If storing this in the
   :ref:`conf-mms.properties <conf-mms.properties>` file, you can
   encrypt the password using the |onprem| ``credentialstool``. See
   :ref:`encrypt-mongodb-user-credentials`.

   Corresponds to configuration file setting: ``mms.https.PEMKeyFilePassword``

.. setting:: Client Certificate Mode

   *Type*: string

   Specifies the how many SSL certificates are required for
   transactions between |mms| and clients: ``None``, ``Required for
   Agents Only``, ``Required for All Requests``.

   Corresponds to configuration file setting: ``mms.https.ClientCertificateMode``

.. setting:: CA File

   *Type*: string

   Specifies the certificate authority file containing the list of
   acceptable client certificates.

   .. code-block:: ini

      /path/to/ca_file.pem

   Corresponds to configuration file setting: ``mms.https.CAFile``

.. setting:: Load Balancer Remote IP Header

   *Type*: string

   If you use a load balancer with the |application|, use this setting
   to specify the name of the header that the load balancer will use to
   specify the original client's IP address to the application server.
   When you specify :setting:`Load Balancer Remote IP Header`, do not
   allow clients to connect directly to any application server. A load
   balancer placed in front of the |application| servers must not
   return cached content.

   See :doc:`/tutorial/configure-application-high-availability` for
   more information.

   Corresponds to configuration file setting: ``mms.remoteIp.header``

.. _email-address-settings:

Email Settings
--------------

The following email address settings are mandatory. You **must** define
them before |onprem| will start.

.. setting:: From Email Address

   *Type*: string

   The email address used for sending the general emails, such as
   |onprem| alerts. You can include an alias with the email address.

   .. code-block:: ini

      Ops Manager Alerts <mms-alerts@example.com>

   Corresponds to configuration file setting: ``mms.fromEmailAddr``

.. setting:: Reply To Email Address

   *Type*: string

   The email address from which to send replies to general emails.

   Corresponds to configuration file setting: ``mms.replyToEmailAddr``

.. setting:: Admin Email Address

   *Type*: string

   The email address of the |onprem| admin. This address receives
   emails related to problems with |onprem|.

   Corresponds to configuration file setting: ``mms.adminEmailAddr``

.. setting:: Email Delivery Method Configuration

   *Type*: string

   The email interface to use.

   If you use the AWS Simple Email Service, set this to
   ``com.xgen.svc.core.dao.email.AwsEmailDao``. See also the
   :setting:`AWS Access Key` and :setting:`AWS Secret Key` settings.

   For JavaEmailDao, set this to 
   ``com.xgen.svc.core.dao.email.JavaEmailDao``.

   Corresponds to configuration file setting: ``mms.emailDaoClass``

.. setting:: Transport

   *Type*: string

   *Default*: smtp

   The transfer protocol, either ``smtp`` or ``smtps``, as specified by
   your email provider.

   Corresponds to configuration file setting: ``mms.mail.transport``

.. setting:: SMTP Server Hostname

   *Type*: string

   *Default*: localhost

   Email hostname as specified by your email provider. 

   .. code-block:: ini

      mail.example.com

   Corresponds to configuration file setting: ``mms.mail.hostname``

.. setting:: SMTP Server Port

   *Type*: number

   *Default*: 25

   Port number for the transfer protocol as specified by your email
   provider.

   Corresponds to configuration file setting: ``mms.mail.port``

.. setting:: Username

   *Type*: string

   User name of the email account. If unset, defaults to disabled SMTP
   authentication.

   Corresponds to configuration file setting: ``mms.mail.username``

.. setting:: Password

   *Type*: string

   Password for the email account. If unset, defaults to disabled SMTP
   authentication.

   Corresponds to configuration file setting: ``mms.mail.password``

.. setting:: Use SSL

   *Type*: boolean

   *Default*: false

   Set this to ``true`` if the transfer protocol runs on top of TLS.

   Corresponds to configuration file setting: ``mms.mail.tls``

.. setting:: AWS Endpoint

   *Type*: string

   Required if using the Amazon Simple Email Service. Sets the endpoint
   URL for the Amazon Simple Email Service.

   Corresponds to configuration file setting: ``aws.ses.endpoint``

.. setting:: AWS Access Key

   *Type*: string

   The access key ID for AWS. Required if using the Amazon Simple Email
   Service.

   Corresponds to configuration file setting: ``aws.accesskey``

.. setting:: AWS Secret Key

   *Type*: string

   The secret access key for AWS. Required if using the Amazon Simple
   Email Service.

   Corresponds to configuration file setting: ``aws.secretkey``

User Authentication Method
--------------------------

.. setting:: User Authentication Method

   *Type*: string

   Select whether to store authentication credentials in the |onprem|
   Application Database or in an external authentication source.

   Corresponds to configuration file setting: ``mms.userSvcClass``

Authentication through |onprem| Application Database
----------------------------------------------------

.. setting:: Password Changes Before Reuse

   *Type*: number

   The number of previous passwords to remember. You cannot reuse a
   remembered password as a new password.

   Corresponds to configuration file setting: ``mms.password.minChangesBeforeReuse``

.. setting:: Failed Login Attempts Before Account Lock

   *Configuration file setting*: ``mms.password.maxFailedAttemptsBeforeAccountLock``

   *Type*: number

   The number of failed login attempts before an account becomes
   locked. Only an |a-mms| Administrator can unlock a locked account.
 
   Corresponds to configuration file setting: 
   ``mms.password.maxFailedAttemptsBeforeAccountLock``

.. setting:: Days Inactive Before Account Lock

   *Configuration file setting*: ``mms.password.maxDaysInactiveBeforeAccountLock``

   *Type*: number

   The maximum number of days with no visits to the |mms| website
   before |mms| locks an account.

   Corresponds to configuration file setting: 
   ``mms.password.maxDaysInactiveBeforeAccountLock``

.. setting:: Days Before Password Change Required

   *Type*: number

   The number of days a password is valid before the password expires.

   Corresponds to configuration file setting: ``mms.password.maxDaysBeforeChangeRequired``

.. _ldap-settings:
.. _ldap-user-settings:
.. _default-ldap-separator:
.. _ldap-global-role-settings:

Authentication through LDAP
---------------------------

These settings configure |mms| to use an LDAP server for
authentication. If you use LDAP authentication, users must belong to an
LDAP group to log into |mms|. You must create LDAP groups for each
|mms| :doc:`user role </reference/user-roles>`.

*Settings that begin with "mms.ldap.global.role"* assign |mms|
:ref:`global roles <global-roles>` to the members of the specified LDAP
groups. Specify groups using the format used by the LDAP attribute
specified in the :setting:`LDAP User Group` setting. You can specify
multiple groups using the ``;;`` delimiter. To change the default
delimiter, use the :setting:`mms.ldap.group.separator` setting. Each
|mms| global role provides its level of access to all the |mms|
:doc:`groups </tutorial/create-group>` in the deployment. To provide
access to specific groups, use :doc:`group-level roles </reference/user-roles>`.

.. setting:: LDAP URI

   *Type*: string

   The URI for the LDAP or SSL LDAP server.  

   .. code-block:: ini

      mms.ldap.url=ldaps://acme-dc1.acme.example.com:3890

   Corresponds to configuration file setting: ``mms.ldap.url``

.. setting:: LDAP SSL CA File

   *Type*: string

   A file containing one or more trusted certificates in PEM format.
   Use this setting if you are using LDAPS and the server
   is using a certificate that is not from a well-known CA.

   .. code-block:: ini

      mms.ldap.ssl.CAFile=/opt/CA.pem

   Corresponds to configuration file setting: ``mms.ldap.ssl.CAFile``

.. setting:: LDAP SSL PEM Key File

   *Type*: string

   A file containing a client certificate and private key. Use this
   setting when your SSL LDAP server requires client certificates.

   .. code-block:: ini

      mms.ldap.ssl.PEMKeyFile=/opt/keyFile.pem

   Corresponds to configuration file setting: ``mms.ldap.ssl.PEMKeyFile``

.. setting:: LDAP SSL PEM Key File Password

   *Type*: string

   The password for :setting:`LDAP SSL PEM Key File`. Use this setting
   if the ``PEMKeyFile`` is encrypted.

   .. code-block:: ini

      mms.ldap.ssl.PEMKeyFilePassword=<password>

   Corresponds to configuration file setting: ``mms.ldap.ssl.PEMKeyFilePassword``

.. setting:: LDAP Bind Dn

   *Type*: string

   The LDAP user used to execute searches for other users.

   .. code-block:: ini

      mms.ldap.bindDn=authUser@acme.example.com

   Corresponds to configuration file setting: ``mms.ldap.bindDn``

.. setting:: LDAP Bind Password

   *Type*: string

   The password for the search user.

   .. code-block:: ini

      mms.ldap.ssl.bindPassword=<password>

   Corresponds to configuration file setting: ``mms.ldap.bindPassword``

.. setting:: LDAP User Base Dn

   *Type*: string

   The base Distinguished Name (DN) that |mms| uses to search for
   users. Escape the ``=`` sign with ``\``.

   .. code-block:: ini

      mms.ldap.user.baseDn=DC\=acme,DC\=example,DC\=com

   Corresponds to configuration file setting: ``mms.ldap.user.baseDn``

.. setting:: LDAP User Search Attribute

   *Type*: string

   The LDAP field used for the LDAP search. This is typically a
   username or an email address. The value of this field is also used
   as the |mms| username.

   .. code-block:: ini

      mms.ldap.user.searchAttribute=<myAccountName>

   Corresponds to configuration file setting: ``mms.ldap.user.searchAttribute``

.. setting:: LDAP User Group

   *Type*: string

   The LDAP user attribute that contains the list of LDAP groups the
   user belongs to.  The LDAP attribute can use any format to list the
   groups, including Common Name (``cn``) or Distinguished Name
   (``dn``). All |mms| settings in this configuration file that specify
   groups must match the chosen format.

   .. code-block:: ini
   
      mms.ldap.user.group=memberOf

   Corresponds to configuration file setting: ``mms.ldap.user.group``

.. setting:: LDAP Global Role Owner

   *Type*: string

   The LDAP group that has full privileges for the |mms| deployment,
   including full access to all |mms| :doc:`groups </tutorial/create-group>`
   and all administrative permissions. Users in the specified
   LDAP group receive the :ref:`global owner <global-owner-role>` role
   in |mms|. Specify the group using the format that is used by the
   LDAP attribute specified in the :setting:`LDAP User Group` setting.

   .. COMMENT/QUESTION: Should the LDAP examples use ;; as the delimiter?

   .. code-block:: ini

      mms.ldap.global.role.owner=CN\=MMSGlobalOwner,OU\=MMS,OU\=acme Groups,DC\=acme,DC\=example,DC\=com

   Corresponds to configuration file setting: ``mms.ldap.global.role.owner``

.. setting:: LDAP User First Name

   *Type*: string

   The LDAP user attribute that contains the user's first name. After
   successful LDAP authentication, |mms| synchronizes the specified
   LDAP attribute with the first name from the |mms| user record.

   .. code-block:: ini

      mms.ldap.user.firstName="First"

   Corresponds to configuration file setting: ``mms.ldap.user.firstName``

.. setting:: LDAP User Last Name

   *Type*: string

   The LDAP user attribute that contains the user's last name such as
   ``sn``. After successful LDAP authentication, |mms| synchronizes the
   specified LDAP attribute with the last name from the |mms| user
   record.

   .. code-block:: ini

      mms.ldap.user.lastName="Last"

   Corresponds to configuration file setting: ``mms.ldap.user.lastName``

.. setting:: LDAP User Email

   *Type*: string

   The LDAP user attribute that contains the user's email address such
   as ``mail``. After successful LDAP authentication, |mms|
   synchronizes the specified LDAP attribute with the email address
   from the |mms| user record.

   .. code-block:: ini

      mms.ldap.user.email="user@example.com"

   Corresponds to configuration file setting: ``mms.ldap.user.email``

.. setting:: LDAP Global Role Automation Admin

   *Type*: string

   The LDAP group whose members have the :ref:`global automation admin
   role <global-automation-admin-role>` in |mms|. Specify groups using
   the format used by the LDAP attribute specified in the
   :setting:`LDAP User Group` setting. You can specify multiple groups
   using the ``;;`` delimiter. To change the default delimiter, use the
   :setting:`mms.ldap.group.separator` setting.

   .. code-block:: ini

      mms.ldap.global.role.automationAdmin=CN\=MMS-AutomationAdmin,OU\=MMS,OU\=acme Groups,DC\=acme,DC\=example,DC\=com

   Each |mms| global role provides its level of access to all the |mms|
   :doc:`groups </tutorial/create-group>` in the deployment. To provide
   access to specific groups, use :ref:`group-level roles <global-roles>`.

   Corresponds to configuration file setting: ``mms.ldap.global.role.automationAdmin``

.. setting:: LDAP Global Role Backup Admin

   *Type*: string

   The LDAP group whose members have the :ref:`global backup admin role
   <global-backup-admin-role>` in |mms|. 

   .. code-block:: ini

      mms.ldap.global.role.backupAdmin=CN\=MMS-BackupAdmin,OU\=MMS,OU\=acme Groups,DC\=acme,DC\=example,DC\=com

   Corresponds to configuration file setting: ``mms.ldap.global.role.backupAdmin``

.. setting:: LDAP Global Role Monitoring Admin

   *Type*: string

   The LDAP group whose members have the :ref:`global monitoring admin
   role <global-monitoring-admin-role>` in |mms|. 

   .. code-block:: ini

      mms.ldap.global.role.monitoringAdmin=CN\=MMS-MonitoringAdmin,OU\=MMS,OU\=acme Groups,DC\=acme,DC\=example,DC\=com

   Corresponds to configuration file setting: ``mms.ldap.global.role.monitoringAdmin``

.. setting:: LDAP Global Role User Admin

   *Type*: string

   The LDAP group whose members have the :ref:`global user admin role
   <global-user-admin-role>` in |mms|. 

   .. code-block:: ini

      mms.ldap.global.role.userAdmin=CN\=MMS-UserAdmin,OU\=MMS,OU\=acme Groups,DC\=acme,DC\=example,DC\=com

   Corresponds to configuration file setting: ``mms.ldap.global.role.userAdmin``

.. setting:: LDAP Global Role Read Only

   *Type*: string

   The LDAP group whose members have the :ref:`global read-only role
   <global-read-only-role>` in |mms|. 

   .. code-block:: ini

      mms.ldap.global.role.readOnly=CN\=MMS-ReadOnly,OU\=MMS,OU\=acme Groups,DC\=acme,DC\=example,DC\=com

   Corresponds to configuration file setting: ``mms.ldap.global.role.readOnly``

.. setting:: mms.ldap.group.separator

   To set this, click :guilabel:`Config` and then click the
   :guilabel:`Custom` tab.

   *Type*: string

   Each of the global role values takes a delimited list of groups:

   .. code-block:: ini

      "dbas,sysadmins"

   If a group value contains the delimiter, the delimiter must be set
   to another value. 

   .. example:: 
      If you have the group value ``"CN\=foo,DN\=bar"`` and the
      delimiter is ``,`` then |mms| parses ``"CN\=foo,DN\=bar"`` as two
      elements rather than as the description for a single group.

   Change the delimiter by adding the
   :setting:`mms.ldap.group.separator` setting to the configuration
   file and specifying a different delimiter.

   Starting with |mms| 1.5, the default delimiter is ``;;``.

Multi-Factor Authentication (MFA) Settings
------------------------------------------

.. setting:: Multi-factor Auth Level

   *Type*: string

   *Default*: OFF

   Configures the :doc:`two-factor authentication </tutorial/manage-two-factor-authentication>` "level":

   - ``OFF``: Disables two-factor authentication. |onprem| does not
     use two-factor authentication.

   - ``OPTIONAL``: Users can choose to set up two-factor authentication
     for their |onprem| account.

   - ``REQUIRED_FOR_GLOBAL_ROLES``: Users who possess a 
     :ref:`global role <global-roles>` **must** set up two-factor
     authentication. Two factor authentication is optional for all
     other users.

   - ``REQUIRED``: **All** users must set up two-factor authentication
     for their |onprem| account.

   Two-factor authentication is recommended for the security of your
   |onprem| deployment.

   Corresponds to configuration file setting: ``mms.multiFactorAuth.level``

.. setting:: mms.multiFactorAuth.require

   In |onprem| 1.8 and later, :setting:`mms.multiFactorAuth.level`
   replaces :setting:`mms.multiFactorAuth.require`.

   *Type*: boolean

   *Default*: false

   When ``true``, |mms| will require two-factor authentication for
   users to log in or to perform certain destructive operations within
   the application.

   If you configure 
   :ref:`Twilio integration <twilio-sms-alert-settings>`, users may 
   obtain their second factor tokens via Google Authenticator, SMS, or 
   voice calls. Otherwise, the only mechanism to provide two-factor 
   authentication is Google Authenticator.

.. setting:: Multi-factor Auth Allow Reset

   *Type*: boolean

   *Default*: false

   When ``true``, |mms| will allow users to reset their two-factor
   authentication settings via email in an analogous fashion to
   resetting their passwords.

   To reset two-factor authentication, a user must:

   - be able to receive email at the address associated with the user 
     account.
   - know the user account's password.
   - know the :term:`agent API key` for each |mms| group the user
     belongs to.

   Corresponds to configuration file setting: ``mms.multiFactorAuth.allowReset``

.. setting:: Multi-factor Auth Issuer

   *Type*: string

   If Google Authenticator provides two-factor authentication, this
   string is the ``issuer`` in the Google Authenticator app. If
   left blank, the ``issuer`` is the domain name of the |mms|
   installation.

   Corresponds to configuration file setting: ``mms.multiFactorAuth.issuer``

Other Authentication Options
----------------------------

.. setting:: ReCaptcha Enabled

   *Type*: boolean

   Set to ``true`` to require `reCaptcha
   <https://www.google.com/recaptcha>`_ validation when a new user
   registers. You must have a `reCaptcha account
   <https://www.google.com/recaptcha/admin>`_.

   Corresponds to configuration file setting: ``reCaptcha.enabled``

.. setting:: ReCaptcha Public Key

   *Type*: string

   The reCaptcha public key associated with your account.

   Corresponds to configuration file setting: ``reCaptcha.public.key``

.. setting:: ReCaptcha Private Key

   *Type*: string

   The reCaptcha private key associated with your account.

   Corresponds to configuration file setting: ``reCaptcha.private.key``

.. setting:: Session Max Hours

   *Type*: number

   The number of hours before a session on the |mms| website expires.

   Corresponds to configuration file setting: ``mms.session.maxHours``

.. setting:: mms.monitoring.agent.session.timeoutMillis

   To set this, click :guilabel:`Config` and then click the
   :guilabel:`Custom` tab.

   *Type*: number

   *Default*: 300000

   *Minimum*: 90000

   The Monitoring Agent failover time, in milliseconds. If |mms| does
   not receive a deployment status from the primary Monitoring Agent in
   the time specified, |mms| will make a standby Monitoring Agent the
   new primary. Configuring the timeout below `90000` (90 seconds) will
   cause |mms| to fail at startup with a configuration error.

HTTP/HTTPS Proxy Settings
-------------------------

|mms| can pass all outgoing HTTP and HTTPS requests through an HTTP
or HTTPS proxy.

.. setting:: Proxy Host

   *Type*: string

   Specify the hostname of the HTTP or HTTPS proxy to which you wish to
   connect.

   .. code-block:: ini

      proxy.example.com

   Corresponds to configuration file setting: ``http.proxy.host``

.. setting:: Proxy Port

   *Type*: integer

   Specify the port on which you wish to connect to the host. You must
   specify both the :setting:`Proxy Port` and :setting:`Proxy Host`
   to use a proxy.

   Corresponds to configuration file setting: ``http.proxy.port``

.. setting:: Proxy Username

   *Type*: string

   If the proxy requires authentication, use this setting
   to specify the username with which to connect to the proxy.

   Corresponds to configuration file setting: ``http.proxy.username``

.. setting:: Proxy Password

   *Type*: string

   If the proxy requires authentication, use this setting
   to specify the password with which to connect to the proxy.

   Corresponds to configuration file setting: ``http.proxy.password``

.. _twilio-sms-configure:
.. _twilio-sms-alert-settings:

Twilio Integration Settings
---------------------------

To receive alert notifications via SMS, you must have a 
`Twilio <http://www.twilio.com/docs/quickstart>`_ account.

.. setting:: Account SID

   *Type*: string

   `Twilio <http://www.twilio.com/docs/quickstart>`_ account ID.

   Corresponds to configuration file setting: ``twilio.account.sid``

.. setting:: Twilio Auth Token

   *Type*: string

   Twilio API token.

   Corresponds to configuration file setting: ``twilio.auth.token``

.. setting:: Twilio From Number

   *Type*: string

   Twilio phone number.

   Corresponds to configuration file setting: ``twilio.from.num``

.. _automation-versions-settings:

MongoDB Version Management
--------------------------

The following settings determine how |onprem| knows what MongoDB
releases exist and how the MongoDB binaries are supplied to the
|onprem| server. The Automation Agents and Backup Daemons use these
binaries when when deploying MongoDB.

.. setting:: Version Manifest Source

   *Type*: string

   *Default*: mongodb

   Set this to ``Local`` if your Automation Agents and Backup Daemons
   will not have internet access to download MongoDB binaries. If you
   set this to ``Local``, an |onprem| admin must manually provide the
   version manifest and the MongoDB binaries, as described in
   :doc:`/tutorial/configure-local-mode`.

   Corresponds to configuration file setting: ``automation.versions.source``

.. setting:: Versions Directory

   *Type*: string

   Specify the directory on the |application| server where |onprem|
   stores the MongoDB binaries. The Automation Agent accesses the
   binaries when installing or changing versions of MongoDB on your
   deployments. If you set :setting:`Version Manifest Source` to run in
   ``Local`` mode, the Backup Daemons also access the MongoDB binaries
   from this directory. See :doc:`/tutorial/configure-local-mode` for
   more information.

.. _mongodb-release-autodownload:

.. setting:: Backup Versions Auto Download

   *Type*: boolean

   Indicates whether the Backup Daemons automatically install the
   versions of MongoDB they run. If set to ``true``, the daemons
   retrieve the binaries either over the internet from MongoDB Inc. or,
   if |onprem| is running in :doc:`Local Mode </tutorial/configure-local-mode>`, 
   from the :setting:`Versions Directory` on the |onprem| servers.

   Set this to ``false`` only if |onprem| does not use Automation
   **and** the Backup Daemons do not have internet access. If you set
   this to ``false``, an |onprem| admin must place the MongoDB binaries
   on the Backup Daemon servers.

   Corresponds to configuration file setting: ``mongodb.release.autoDownload``

.. setting:: Backup Versions Auto Download Enterprise Builds

   *Type*: string

   If :setting:`Backup Versions Auto Download` is set to ``true``,
   specify whether the Daemon should download binaries for the
   Enterprise Edition.

   .. warning::

      If you will run :term:`MongoDB Enterprise` and provision your own
      Linux servers, then you must manually install a set of
      dependencies to each server **before installing MongoDB**. See
      :doc:`/tutorial/configure-local-mode`.

   Corresponds to configuration file setting: ``mongodb.release.directory``

.. _automation-backup-compression-settings:

Backup Snapshots
----------------

.. setting:: File System Store Gzip Compression Level

   *Type*: int

   Determines the compression level. Available levels are from ``0`` to
   ``9``:

   - ``0`` for no compression.
   
   - ``1`` to ``9`` increases the compression level, starting with
     level ``1`` which provides the fastest but less compression and up
     to level ``9`` which provides the best compression but is the
     slowest.

   The default compression level is ``6``.

   .. note:: The setting affects snapshots going forward and does not
      affect existing snapshots.

   Corresponds to configuration file setting: ``backup.fileSystemSnapshotStore.gzip.compressionLevel``

Public API
----------

You can modify certain default behaviors of the :doc:`Public API
</core/api>`. To add the following settings, click the :guilabel:`Admin`
link, then the :guilabel:`General` tab, then the :guilabel:`Ops Manager
Config` page, and then the :guilabel:`Custom` section.

.. setting:: mms.publicApi.ignoreEnabledForGlobalRoles

   *Type*: boolean

   By default, a user with a :ref:`global role <global-roles>` can
   access any |onprem| group through the :doc:`Public API </core/api>`,
   whether or not the Public API is enabled for that group.

   To prevent access when a group's Public API is disabled, add this
   setting in the :guilabel:`Custom` section and set its value to
   ``false``.

.. setting:: mms.publicApi.whitelistEnabled

   *Type*: boolean

   Certain API calls require that requests originate from a whitelisted
   IP address. To turn off this requirement, add this setting and set
   its value to ``false``.

.. _config-monitoring-agent-failover:

Monitoring Agent Session Failover
---------------------------------

If you have multiple monitoring agents for a group, only one Monitoring
Agent is the **primary agent**. The primary agent reports the cluster's
status to |onprem|. The remaining agents are completely idle, except to
log their status as standby agents and to periodically ask |onprem|
whether they should become the primary. The following settings tune the
frequency with which the standby agents poll |onprem| to determine if
they have become the primary agent, and the interval that |onprem| uses
to determine if the primary agent is unaccessible.

To add the following settings, click the :guilabel:`Admin` link, then
the :guilabel:`General` tab, then the :guilabel:`Ops Manager Config`
page, and then the :guilabel:`Custom` section.

.. setting:: mms.monitoring.agent.session.timeoutMillis

   *Type*: integer

   *Default*: ``90000``

   The interval that |mms| uses to determine if a secondary agent
   should be promoted to primary. If |mms| does not hear from the
   primary agent for the duration specifies in
   :setting:`mms.monitoring.agent.session.timeoutMillis`, |mms|
   promotes a secondary agent to primary. The minimum supported value
   is ``90000``.

.. setting:: mms.monitoring.agent.standbyCollectionFactor

   *Type*: Integer
   
   *Default*: ``4``

   Specifies how frequently standby agents check in with |mms| to see
   if they have become the primary agent. The following values are
   permitted:

   - ``1``: the standby agents check every 55 seconds.

   - ``2``: the standby agents check in at twice the rate as ``1``, or
     approximately every 27 seconds.

   - ``3``: the standby agents check approximately every 18 seconds

   - ``4``: the standby agents check approximately every 14
     seconds.

.. _snmp-heartbeat-configure:

SNMP Heartbeat Settings
-----------------------

|onprem| uses SNMP v2c. You can configure the |application| to send a
periodic heartbeat trap notification (v2c) that contains an internal
health assessment of the |application|. The |application| can send
traps to one or more endpoints on the standard SNMP UDP port 162.

To configure the |application| to send trap notifications, first
download the Management Information Base (MIB) file at
`<http://downloads.mongodb.com/on-prem-monitoring/MMS-MONGODB-MIB.txt>`_ . 
Then add the following settings as custom settings. To do
so, click the :guilabel:`Admin` link, then the :guilabel:`General` tab,
then the :guilabel:`Ops Manager Config` page, and then the
:guilabel:`Custom` section.

.. setting:: snmp.default.hosts

   *Type*: string

   *Default*: blank

   Comma-separated list of hosts where 'heartbeat' traps will be sent
   on the standard UDP port 162. You must set
   :setting:`snmp.default.hosts` to enable the SNMP heartbeat
   functionality; otherwise, leaving the setting blank disables the
   SNMP heartbeat functionality.

.. setting:: snmp.listen.port

   *Type*: number

   *Default*: 11611

   Listening UDP port for SNMP. Setting to a number less than ``1024``
   will require running the |application| with root privileges.

.. setting:: snmp.default.heartbeat.interval

   *Type*: number

   *Default*: 300

   Number of seconds between heartbeat notifications.

Non-Uniform Access Memory (NUMA) Settings
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To disable NUMA for the :term:`head databases <head database>` managed
by the Backup Daemon, configure this setting. See :manual:`MongoDB and
NUMA Hardware </administration/production-notes/>` in the MongoDB
Production Notes. To add the following setting, click the
:guilabel:`Admin` link, then the :guilabel:`General` tab, then the
:guilabel:`Ops Manager Config` page, and then the :guilabel:`Custom`
section.

.. setting:: mongodb.disable.numa

   *Type*: boolean

   Add this property and set it to ``true`` to disable the NUMA
   setting.

Backup Settings
---------------

To add the following settings, click the :guilabel:`Admin` link, then
the :guilabel:`General` tab, then the :guilabel:`Ops Manager Config`
page, and then the :guilabel:`Custom` section.

.. setting:: mms.alerts.LowHeadFreeSpace.minimumHeadFreeSpaceGB

   *Type*: integer

   *Default*: 10

   Specifies the minimum amount of free disk space in GB required on
   the partition where the Backup Daemon stores the 
   :term:`head databases <head database>` that back up your data. 
   You can view a daemon's available head space on the |onprem| 
   :ref:`daemons-interface`. If the amount of free space drops below 
   this minimum, |onprem| triggers the following 
   :doc:`system alert </core/system-alerts>`:

   :alert:`System detects backup daemon has low free head space`

.. setting:: mms.alerts.BackupAgentConfCallFailure.maximumFailedConfCalls

   *Type*: integer

   *Default*: 10

   If the Backup Agent experiences more than this number of consecutive
   failed conf calls, |onprem| triggers the following 
   :doc:`global alert </tutorial/manage-global-alerts>`:

   :alert:`Backup Agent has too many conf call failures`

.. setting:: mms.backup.minimumOplogWindowHours

   To set this, click :guilabel:`Config` and then click the
   :guilabel:`Custom` tab.

   *Type*: float

   *Default*: 3

   This sets the minimum number of hours that the OpLog should record.

Backup Daemon
-------------

The following settings are specific to a Backup Daemon and are set
through the :guilabel:`Admin` interface, through the :guilabel:`Backup`
tab's :ref:`Daemons page <daemons-interface>`. These settings **are
not** global but are specific to the daemon being configured. For a
given daemon, you can set these locally through the 
:ref:`conf-mms.properties <conf-mms.properties>` configuration file.

.. setting:: Head directory

   If the directory is already configured, the path is listed in the
   :guilabel:`Server` column.

   *Type*: string

   The dedicated disk partition on the Backup Daemon's server where the
   daemon stores the :term:`head databases <head database>`. The daemon
   maintains a head database for each shard or replica set it backs up.
   This directory must be writable by the mongodb-mms user and must end
   in a trailing slash. It is critical that this partition is sized
   appropriately.

   .. important::
      Data in this directory is dynamically created, maintained and
      destroyed by the Backup Daemon. This partition should not be used
      for any other purpose. This partition should *not* overlap with
      the partition used for the Backup Database.

   Corresponds to configuration file setting: ``rootDirectory``

.. setting:: Number of Workers

   *Type*: number

   The number of replica sets that should be processed at a time.

   Corresponds to configuration file setting: ``numWorkers``

|application| Database Connection String
----------------------------------------

The following settings configure the |onprem| connection to the
:ref:`mms-application-database`. You must configure this setting in the
:ref:`conf-mms.properties <conf-mms.properties>` file on each |onprem|
server. To encrypt authentication information, see
:ref:`encrypt-mongodb-user-credentials`.

.. setting:: mongo.mongoUri

   *Type*: string

   The :manual:`connection string </reference/connection-string/>` used
   to access the |application| Database. The connection string **must**
   include the following if applicable:

   - All members of the replica set, if the |application| database is a
     replica set.

   - Authentication credentials for the :parameter:`authentication
     mechanism <authenticationMechanisms>` used on the |application|
     database.

   See the following example connection strings:

   - **Replica Sets:** If you use a :term:`replica set` for the
     database's :doc:`backing instance </tutorial/prepare-backing-mongodb-instances>`, 
     specify all members of the replica set, as shown below. If you
     omit the port number, |onprem| uses the default ``27017`` port for
     all hosts.
   
     .. code-block:: ini

        mongo.mongoUri=mongodb://db1.example.com:40000,db2.example.com:40000,db3.example.com:40000

   - **Default MongoDB Authentication:** For a MongoDB instance using
     the MongoDB ``SCRAM-SHA-1`` or ``MONGODB-CR`` challenge-response
     mechanisms, the connection string must include authentication
     credentials. The |application| must authenticate as a MongoDB user
     with the following roles:

     - :authrole:`readWriteAnyDatabase`

     - :authrole:`dbAdminAnyDatabase`.

     - :authrole:`clusterAdmin` if the database is a sharded cluster,
       otherwise :authrole:`clusterMonitor`

     Prefix the hostname with the MongoDB username and password in the
     form ``<username>:<password>@``

     .. code-block:: ini

        mongo.mongoUri=mongodb://mongodbuser1:password@mydb1.example.com:40000

   - **x.509 Certificate Authentication:** For a MongoDB instance using
     ``MONGODB-X509`` authentication, you must first add the value of
     the **subject** from the client certificate as a MongoDB user, as
     described in :manual:`Use x.509 Certificates to Authenticate
     Clients </tutorial/configure-x509-client-authentication>` in the
     MongoDB manual. The client certificate is contained in the PEM
     file you specify in the :setting:`mongodb.ssl.PEMKeyFile` setting.
     Once you have created the user, prefix the host specified in
     :setting:`mongo.mongoUri` with the name of the new user and append
     ``authMechanism=MONGODB-X509`` after the specified port:

     .. code-block:: ini

        mongo.mongoUri=mongodb://<new_mongodb_user>@mydb1.example.com:40000/?authMechanism=MONGODB-X509

   - **LDAP Authentication:** For a MongoDB instance using LDAP, prefix
     the hostname with the MongoDB username and password in the form
     ``<username>:<password>@``, and append the
     ``authMechanism=PLAIN&authSource=$external`` options after the
     port:

     .. code-block:: ini

        mongo.mongoUri=mongodb://mongodbuser1:password@mydb1.example.com:40000/?authMechanism=PLAIN&authSource=$external

   - **Kerberos Authentication:** For a MongoDB instance using
     Kerberos, prefix the hostname with the Kerberos user principal and
     specify the authentication mechanism, ``authMechanism=GSSAPI``,
     after the port.

     Kerberos user principal names have the form ``<username>@<KERBEROS
     REALM>``. You must escape the user principal, replacing symbols
     with the URL encoded representation. A Kerberos user principal of
     ``username@REALM.EXAMPLE.COM`` would therefore become
     ``username%40REALM.EXAMPLE.COM``.

     This is an example of Kerberos authentication:

     .. code-block:: ini

        mongo.mongoUri=mongodb://username%40REALM.EXAMPLE.COM@mydb1.example.com:40000/?authMechanism=GSSAPI

     To enable Kerberos authentication between the |application| and
     the :ref:`backup-database`, see :ref:`configuration-kerberos-settings`. 

     .. seealso::
        :data:`~uri.authMechanism` and :data:`~uri.authSource` in the 
        MongoDB manual.

.. setting:: mongo.encryptedCredentials

   *Type*: boolean

   To use encrypted credentials in :setting:`mongo.mongoUri`, encrypt
   the credentials using the |onprem| 
   :ref:`credentialstool <encrypt-mongodb-user-credentials>`, 
   enter them in the :setting:`mongo.mongoUri` setting, and set this to
   ``true``:

   .. code-block:: ini

      mongo.encryptedCredentials=true

.. _mongodb-ssl-settings:

SSL Connection to the Application Database
------------------------------------------

The following settings configure |onprem| to use SSL to encrypt
connections to the dedicated MongoDB instances that host the
:ref:`mms-application-database` and :ref:`backup-database`. You must
configure this setting in the 
:ref:`conf-mms.properties <conf-mms.properties>` file on each |onprem| 
server.

.. setting:: mongo.ssl

   *Type*: boolean

   Enables SSL connection to the :ref:`mms-application-database` when
   set to ``true``.

.. setting:: mongodb.ssl.CAFile

   *Type*: string

   The name of the PEM file that contains the root certificate chain
   from the Certificate Authority that signed the MongoDB server
   certificate.

.. setting:: mongodb.ssl.PEMKeyFile

   *Type*: string

   The name of the PEM file that contains the X509 certificate and
   private key. Required if the MongoDB instance is running with the
   :option:`--sslCAFile` option or :setting:`net.ssl.CAFile` setting.

   If you authenticate using the ``MONGODB-X509`` authentication
   mechanism, you also enter this as the name of the user in the
   :setting:`mongoUri` connection string.

.. setting:: mongodb.ssl.PEMKeyFilePassword

   *Type*: string

   Required if the PEM file contains an encrypted private key. Specify
   the password for PEM file. You can encrypt the password using the
   |onprem| ``credentialstool``. See :ref:`encrypt-mongodb-user-credentials`.

.. _configuration-kerberos-settings:

Kerberos Authentication to the Application Database
---------------------------------------------------

To enable Kerberos authentication between |onprem| and the
:ref:`mms-application-database`, configure the following settings in 
the :ref:`conf-mms.properties <conf-mms.properties>` file on each 
|onprem| server. You must configure all required Kerberos settings to 
enable Kerberos authentication.

.. setting:: jvm.java.security.krb5.kdc

   *Type*: string

   Required if using Kerberos. The IP/FQDN (Fully Qualified Domain
   Name) of the KDC server. The value will be set to JVM's
   java.security.krb5.kdc.
   
   .. code-block:: properties

      jvm.java.security.krb5.kdc=kdc.example.com

.. setting:: jvm.java.security.krb5.realm

   *Type*: string

   Required if using Kerberos. This is the default REALM for Kerberos.
   It is being used for JVM's java.security.krb5.realm.

   .. code-block:: properties

      jvm.java.security.krb5.realm=EXAMPLE.COM

.. setting:: mms.kerberos.principal

   *Type*: string

   Required if using Kerberos. The principal used to authenticate with
   MongoDB. This should be the exact same user on the
   :setting:`mongo.mongoUri` above.

   .. code-block:: properties

      mms.kerberos.principal=mms/mmsweb.example.com@EXAMPLE.COM

.. setting:: mms.kerberos.keyTab

   *Type*: string

   Required if using Kerberos. The absolute path to the keytab file for
   the principal.

   .. code-block:: properties

      mms.kerberos.keyTab=/path/to/mms.keytab

.. setting:: mms.kerberos.debug

   *Type*: boolean

   The debug flag to output more information on Kerberos authentication
   process.

   .. code-block:: properties

      mms.kerberos.debug=false

.. _encrypt-mongodb-user-credentials:

Encrypt User Credentials
------------------------

For configuration settings that store credentials, you can either store
the credentials in plain text or use the |onprem| ``credentialstool``
to encrypt the credentials. If you choose to store credentials in plain
text, reduce the permissions on the :ref:`conf-mms.properties <conf-mms.properties>` 
file on each server.

.. note:: 

   **Protect Plain Text Passwords**

   If you choose to store credentials in plain text, reduce the
   permissions on the :ref:`conf-mms.properties <conf-mms.properties>`
   file on each server.

   .. list-table::
      :widths: 25 75
      :header-rows: 1

      * - Operating System

        - Permission Changes

      * - Linux
         
        - ``sudo chmod 600 <install_dir>/conf/conf-mms.properties``

      * - Windows
         
        - Restrict access to only the users and/or groups that need to
          modify :ref:`conf-mms.properties <conf-mms.properties>`.

.. important::

   When installed with ``rpm`` or ``deb`` packages, the
   ``credentialstool`` tool requires root (``sudo``) privileges,
   because it modifies the ``/etc/mongodb-mms/gen.key`` file. |onprem|
   uses the ``gen.key`` to encrypt sensitive data in the database and
   configuration files.

Use the ``credentialstool`` to generate encrypted credentials for the MongoDB deployments:

.. include:: /includes/steps/encrypt-using-credentialstool.rst
