:template: guide

.. _guides-search-static:

=========================================
Build an Index with Static Field Mappings
=========================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Overview
--------

.. short-description::

   Perform a relevance-based search on specific fields within a MongoDB
   collection.

In this guide, you will learn how to index only specified fields in
documents by creating an index with static field mappings. This
allows you to perform more targeted searches.

.. time:: 15

What You'll Need
----------------

- A MongoDB account. See :ref:`guides-create-atlas-account`.
- An Atlas cluster. See :ref:`guides-create-a-cluster`.

Procedure
---------

.. procedure::
   :style: normal

   .. step:: Log in to MongoDB Atlas.

      Log in to MongoDB Atlas according to the steps described in 
      :ref:`Sign Up for a MongoDB Account <guides-create-atlas-account>`.

   .. step:: Navigate to the search index editor.

      .. procedure::
         :style: connected

         .. step:: Select a project.

         .. step:: Populate your cluster with sample data.

            On your target cluster pane, click the three-dot button to 
            open the dropdown menu. Click :guilabel:`Load Sample Dataset`
            and wait for the load operation to complete.

         .. step:: Navigate to the ``sales`` collection of the 
            ``sample_supplies`` database.

            Click :guilabel:`Browse Collections` to pull up a list of
            databases in the sample dataset. In the right-hand pane,
            click the ``sample_supplies``, then click the ``sales``
            collection.

         .. step:: Click :guilabel:`Search Indexes` in the upper right
            of the collection preview pane.

   .. step:: Create a search index in the :guilabel:`Visual Editor`.

      .. procedure::
         :style: connected

         .. step:: Click :guilabel:`Create Search Index`.

         .. step:: Click the :guilabel:`Visual Editor` configuration 
            method, then click :guilabel:`Next`.

         .. step:: Review the :guilabel:`Index Name and Data Source` to
            ensure that ``sample_supplies.sales`` is selected, then click
            :guilabel:`Next`.

         .. step:: Click :guilabel:`Refine Your Index` in the bottom 
            left. Then, in the :guilabel:`Index Configurations` pane, 
            toggle off :guilabel:`Dynamic Mapping`.

         .. step:: In the :guilabel:`Field Mappings` pane, click
            :guilabel:`Add Field Mapping`. In the modal window, select 
            ``storeLocation`` from the :guilabel:`Field Name` dropdown 
            menu.

         .. step:: From the :guilabel:`Data Type` dropdown menu, select 
            ``String``. Leave the :guilabel:`Index Configurations` 
            values unchanged, and click :guilabel:`Add` at the bottom 
            of the modal window.

         .. step: Click :guilabel:`Save Changes`, then click 
            :guilabel:`Create Search Index`. Wait for the 
            :guilabel:`Status` column to read :guilabel:`Active`.

      You now have a search index with a static field mapping. 
      This index allows you to focus your search on the 
      ``storeLocation`` field and reduce your computational resource
      requirements by not indexing unused fields.

   .. step:: Query your collection.

      .. procedure::
         :style: connected

         .. step:: On the :guilabel:`Search Tester` page, type 
            ``London`` into the search bar, then click 
            :guilabel:`Search`.

         .. step:: Review the results. Each record includes a relevance
            score.

         .. step:: Type ``online`` into the search bar, then click
            :guilabel:`Search`.

         .. step:: Review the results. Even though some records include
            the string ``online`` in the ``purchaseMethod`` field, no
            records appear. The index only has a mapping for the
            ``storeLocation`` field, meaning Atlas Search will only 
            return records with matching values in the 
            ``storeLocation`` field.

         .. step:: Click :guilabel:`View Query Syntax`. The modal window
            displays the query sent through the {+fts+} API.

Summary
-------

If you successfully completed the procedure in this guide, you have
created an Atlas Search index with a static field mapping, and used 
it to perform a targeted relevance-based search. In the next guide,
you will learn how to perform compound searches against specific 
fields using the aggregation pipeline.

.. guide-next::