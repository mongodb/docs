.. _diacritic-insensitive-tutorial:

=====================================================================
How to Define a Custom Analyzer and Run a Diacritic-Insensitive Query
=====================================================================

.. default-domain:: mongodb

.. meta::
   :keywords: diacritic insensitive, atlas search, atlas search index without accents, atlas search index without diacritical marks, ignore accents, no accent, no accent mark, no diacritical marks, ignore diacritic marks, custom analyzer, keyword tokenizer, icuFolding token, wildcard operator, text operator, compound operator, compound search queries, search scoring
   :description: Learn how to define a custom analyzer with a keyword tokenizer and icuFolding token to run a query that ignores diacritical marks.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

This tutorial describes how to create an index that uses a 
:ref:`custom analyzer <custom-analyzers>` and run a
diacritic-insensitive query against the ``sample_mflix.movies``
collection. It takes you through the following steps:

1. Set up an |fts| index on the ``title`` and ``genres`` 
   fields in the ``sample_mflix.movies`` collection. 
#. Run an |fts| :ref:`compound-ref` query against the ``title``
   and ``genres`` fields in the ``sample_mflix.movies``
   collection using the :ref:`wildcard-ref` and :ref:`text-ref`
   operators.

Before you begin, ensure that your |service| cluster meets the 
requirements described in the :ref:`fts-tutorials-prereqs`.

.. _diacratic-insensitive-index:

Create the |fts| Index 
----------------------

In this section, you will create an |fts| index on the ``title`` and
``genres`` fields in the ``sample_mflix.movies`` collection. 

.. include:: /includes/steps/fts-diacritic-insensitive-create-index.rst

Search the Collection 
---------------------

----------

.. |arrow| unicode:: U+27A4

|arrow| Use the **Select your language** drop-down menu to set the
language of the example in this section.

----------

.. tabs-selector:: drivers

You can use the :ref:`compound-ref` operator to combine two or more
operators into a single query. The sample query in this section uses the
:ref:`compound-ref` operator to query the ``title`` and ``genres``
fields in the ``movies`` collection using multiple operators.  

In this section, connect to your |service|
cluster and run the sample query against the
``sample_mflix.movies`` collection using the ``compound`` operator. 

.. tabs-drivers::

   .. tab::
      :tabid: shell

      .. include:: /includes/steps/fts-diacritic-insensitive-tutorial-run-query-shell.rst


   .. tab::
      :tabid: compass

      .. include:: /includes/steps/fts-diacritic-insensitive-tutorial-run-query-compass.rst

   .. tab:: 
      :tabid: go

      .. include:: /includes/steps/fts-diacritic-insensitive-tutorial-run-query-go.rst

   .. tab:: 
      :tabid: java-sync 

      .. include:: /includes/steps/fts-diacritic-insensitive-tutorial-run-query-java.rst

   .. tab::
      :tabid: nodejs

      .. include:: /includes/steps/fts-diacritic-insensitive-tutorial-run-query-nodejs.rst

   .. tab::
      :tabid: python

      .. include:: /includes/steps/fts-diacritic-insensitive-tutorial-run-query-python.rst
