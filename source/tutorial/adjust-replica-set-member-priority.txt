======================================
Adjust Priority for Replica Set Member
======================================

.. default-domain:: mongodb

Overview
--------

Adjust the priority of a replica set member to change the member's
precedence in :doc:`elections </core/replica-set-elections>` for primary
or to prevent a member from becoming primary.

The number assigned to a member's
:data:`~local.system.replset.members[n].priority` field determines the
value of the field. The higher the number as compared to other
members in the set the higher the priority.

The value of :data:`~local.system.replset.members[n].priority` can be any
floating point (i.e. decimal) number between ``0`` and ``1000``. The
default value for the :data:`~local.system.replset.members[n].priority`
field is ``1``.

To block a member from seeking election as primary, assign it a priority
of ``0``. :ref:`Hidden members <replica-set-hidden-members>`,
:ref:`delayed members <replica-set-delayed-members>`, and :ref:`arbiters
<replica-set-arbiters>` all have
:data:`~local.system.replset.members[n].priority` set to ``0``.

Considerations
--------------

Adjust priority during scheduled maintenance windows.

Reconfiguring priority can force the current primary to step down, leading
to an election. Before an election the primary closes all open
:term:`client` connections.

To modify priorities, you update the :data:`~local.system.replset.members`
array in the the replica configuration object. The array index begins with
``0``. Do **not** confuse this index value with the value of the replica
set member's :data:`~local.system.replset.members[n]._id` field in the
array.

Procedure
---------

To change the :data:`~local.system.replset.members[n].priority` values in
the replica set configuration, use the following sequence of commands in
the :program:`mongo` shell:

.. code-block:: javascript

   cfg = rs.conf()
   cfg.members[0].priority = 0.5
   cfg.members[1].priority = 2
   cfg.members[2].priority = 2
   rs.reconfig(cfg)

The first operation uses :method:`rs.conf()` to set the local variable
``cfg`` to the contents of the current replica set configuration, which is
a :term:`document`.

The next three operations change the
:data:`~local.system.replset.members[n].priority` value in the ``cfg``
document for the first three members configured in the :data:`members
<local.system.replset.members>` array.

The final operation calls :method:`rs.reconfig()` with the argument of
``cfg`` to initialize the new configuration.
