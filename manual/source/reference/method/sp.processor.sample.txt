=====================
sp.processor.sample()
=====================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Definition 
-----------

.. method:: sp.processor.sample()

.. versionadded:: 7.0

   Returns arrays of sampled results from a currently running
   :atlas:`Stream Processor
   </atlas-sp/overview/#mongodb-expression-exp.Stream-Processor>` on
   the current :atlas:`Stream Processing Instance
   </atlas-sp/overview/#mongodb-expression-exp.Stream-Processing-Instance>`.

Compatibility
-------------

.. include:: /includes/fact-environments-atlas-support-stream-processing-only.rst

Syntax
-----------
   
The :method:`sp.processor.sample()` method has the following syntax:

.. code-block:: json

   sp.processor.sample()

Command Fields
---------------------------

``sp.processor.sample()`` takes no fields.

Behavior
---------------

``sp.processor.sample()`` returns arrays of sampled results
from the named, currently running stream processor to ``STDOUT``. This
command runs continuously until you cancel it using ``CTRL-C``, or until
the returned samples cumulatively reach ``40 MB``.

Access Control
------------------------

The user running ``sp.processor.sample()`` must have the
:atlasrole:`atlasAdmin` role.

Example
----------------

The following example shows an expected response from calling ``sp.solarDemo.sample()``
to sample from a stream processor called ``solarDemo``:

.. io-code-block::
   :copyable: true
   
   .. input::
      :language: sh

      sp.solarDemo.sample()

   .. output::
      :language: json
   
      {
	_id: {
	  device_id: 'device_5'
	},
	max_temp: 8,
	max_watts: 66,
	min_watts: 66,
	avg_watts: 66,
	median_watts: 66,
	_stream_meta: {
          window: {
            start: ISODate('2024-03-19T22:09:10.000Z'),
            end: ISODate('2024-03-19T22:09:20.000Z')
          }
	}
      }
      {
	_id: {
	  device_id: 'device_0'
	},
	max_temp: 18,
	max_watts: 210,
	min_watts: 68,
	avg_watts: 157,
	median_watts: 193,
	_stream_meta: {
          window: {
            start: ISODate('2024-03-19T22:09:10.000Z'),
            end: ISODate('2024-03-19T22:09:20.000Z')
          }
	}
      }
      {
	_id: {
	  device_id: 'device_10'
	},
	max_temp: 21,
	max_watts: 128,
	min_watts: 4,
	avg_watts: 66,
	median_watts: 4,
	_stream_meta: {
          window: {
            start: ISODate('2024-03-19T22:09:10.000Z'),
            end: ISODate('2024-03-19T22:09:20.000Z')
          }
	}
      }
      {
	_id: {
	  device_id: 'device_9'
	},
	max_temp: 10,
	max_watts: 227,
	min_watts: 66,
	avg_watts: 131.4,
	median_watts: 108,
	_stream_meta: {
          window: {
            start: ISODate('2024-03-19T22:09:10.000Z'),
            end: ISODate('2024-03-19T22:09:20.000Z')
          }
	}
      }

Learn More
------------------

- :atlas:`Manage Stream Processors </atlas-sp/manage-stream-processor>`
