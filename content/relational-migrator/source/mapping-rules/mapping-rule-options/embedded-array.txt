.. _rm-embedded-array:

==============
Embedded Array
==============

.. meta::
   :description: Use the Embedded array mapping rule to insert child table values as array elements in a parent collection, configuring options like foreign keys and array conditions.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Use the :guilabel:`Embedded array` mapping rule to insert the 
values of the child table as array elements under documents in
the collection mapped to the parent table. The 
:guilabel:`Embedded array` mapping rule is an advanced mapping 
rule option. It must be explicitly added to a mapping model.

About this Task
---------------

- The :guilabel:`Embedded array` mapping rule is available if the 
  relational table it is mapping from is on the many side of the 
  foreign key relationship. 

- The table containing the primary key must also be mapped to a 
  collection in the MongoDB model.

Steps
-----

.. procedure::
   :style:  connected

   .. step:: Select a table or collection

      a. In the left :guilabel:`Schema model` pane, click on a 
         collection under the :guilabel:`MongoDB` or 
         :guilabel:`Relational` header.
   
         This prompts the :guilabel:`Mappings` pane to open on the right of the screen.

   .. step:: Create or edit a rule

      a. From the :guilabel:`Mapping` screen, click :guilabel:`+ Add` 
         to create a new mapping rule or click the 
         :icon-fa5:`pencil-alt` icon to edit an existing rule.

      b. Select :guilabel:`Embedded array` under :guilabel:`Migrate table as`.

   .. step:: Configure the root path

      a. Select the name of the :guilabel:`Source table` or 
         :guilabel:`Parent collection` from the drop-down.

      b. Configure the root path:

         - :guilabel:`Prefix`: Specifies the rule hierarchy.

         - :guilabel:`Field name`: Specifies the field containing the embedded array or document.

   .. step:: (Optional) Configure multiple foreign keys
      
      .. include:: /includes/fact-mapping-options-foreign-key-link.rst

   .. step:: (Optional) Configure mapping rule filters
      
      .. include:: /includes/fact-mapping-options-rule-filter.rst

   .. step:: (Optional) Configure array conditions
      
      .. include:: /includes/fact-mapping-options-array-conditions.rst

   .. step:: Configure fields

      .. include:: /includes/fact-mapping-options-configure-fields.rst

   .. step:: Save and close

      a. Click :guilabel:`Save And Close`.

Example
-------

This section demonstrates the relational input and
the MongoDB output of the :guilabel:`Embedded array` mapping rule.

Embedded array
~~~~~~~~~~~~~~

In this example:

- An :guilabel:`Embedded Array` mapping rule is applied to the :guilabel:`Customer` table.
- The :guilabel:`Source table` is set to :guilabel:`Order`.
- The :guilabel:`Prefix` is set to :guilabel:`(root)`.
- The :guilabel:`Field Name` is set to :guilabel:`orders`.


Click the tabs below to see the input and output for this example:

.. tabs::

   .. tab:: Relational Input
      :tabid: Embedded-array-in

      ``Customer`` table:

      .. list-table::
         :header-rows: 1

         * - Id
           - Name
           - Address1
           - Address2
           - Address3
         * - 1
           - Joelynn Fawthrop
           - 86 Dwight Pass
           - Carregal
           - 3800-854

      ``Orders`` table:

      .. list-table::
         :header-rows: 1

         * - OrderID
           - CustomerID
           - TotalAmount
           - OrderStatusID
         * - 1
           - 1
           - 50.00
           - 1
         * - 4
           - 1
           - 500.00
           - 3

   .. tab:: MongoDB Output
      :tabid: Embedded-array-out

      The document in the ``Customer`` collection now has the ``Order`` details
      embedded as an array of objects field called ``Orders``.

      All of the customers orders are now visible in the ``Customer`` collection
      as an array of nested documents.

      .. code-block:: javascript
         :copyable: false
         :emphasize-lines: 7-19

         {  
         "_id": {    "CustomerID": 1  },
         "Name": "Joelynn Fawthrop",
         "Address1": "86 Dwight Pass",
         "Address2": "Carregal",
         "Address3": "3800-854",
         "Orders": 
            [    
               {  "OrderID": 1,
                  "CustomerID": 1,
                  "TotalAmount": 50,
                  "OrderStatusID": 1
               },    
               {  "OrderID": 4, 
                  "CustomerID": 1, 
                  "TotalAmount": 500,
                  "OrderStatusID": 1    
               }  
            ]
         }
