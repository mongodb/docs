# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/command/getLastError.txt:3
# 6f4c6555c5804eafb45da65ec50408c8
msgid "getLastError"
msgstr ""

#: ../source/reference/command/getLastError.txt:8
# f4a286b700144735b20c053350a77118
msgid "Definition"
msgstr ""

#: ../source/includes/extracts/fact-2.6-wc-gle-change-cmd-getLastError.rst:5
# e52d290fb766442c9b574f6fbc9cf251
msgid "A new protocol for :ref:`write operations <rel-notes-write-operations>` integrates write concerns with the write operations, eliminating the need for a separate :dbcommand:`getLastError`. Write methods now return the status of the write operation, including error information."
msgstr ""

#: ../source/includes/extracts/fact-2.6-wc-gle-change-cmd-getLastError.rst:11
# bf4e6c1b33214668ad0509c5812b1e1f
msgid "In previous versions, clients typically used the :dbcommand:`getLastError` in combination with the write operations to ensure that the write succeeds."
msgstr ""

#: ../source/reference/command/getLastError.txt:14
# ce5324d4f0f24aab8ca072cb7fd613e9
msgid "Returns the error status of the preceding write operation on the *current connection*."
msgstr ""

#: ../source/reference/command/getLastError.txt:17
# e1c58776f3534892b4bd0f6709ca63a1
msgid ":dbcommand:`getLastError` uses the following prototype form:"
msgstr ""

#: ../source/reference/command/getLastError.txt:23
# 88f1765a4ba04da199b1dadcfbd95ddf
msgid ":dbcommand:`getLastError` uses the following fields:"
msgstr ""

#: ../source/reference/command/getLastError.txt:27
# 2e6891b843644231952449db8cf98ff6
msgid ":doc:`Write Concern </core/write-concern>`, :doc:`/reference/write-concern`, and :ref:`replica-set-write-concern`."
msgstr ""

#: ../source/reference/command/getLastError.txt:31
# 8e2d6b5ec1404b7abcd6e2d18b93029b
msgid "Output"
msgstr ""

#: ../source/reference/command/getLastError.txt:33
# a24fd5bdcbe24d919bd465d7ef4293a1
msgid "Each :dbcommand:`~db.collection.getLastError()` command returns a document containing a subset of the fields listed below."
msgstr ""

#: ../source/reference/command/getLastError.txt:38
# 83375abdf0c54f849cc120134ffae9fc
msgid ":data:`~getLastError.ok` is ``true`` when the :dbcommand:`getLastError` command completes successfully."
msgstr ""

#: ../source/reference/command/getLastError.txt:41
# 81ad9d1a498c4bf2a1492cd85d65f3b9
msgid "A value of ``true`` does *not* indicate that the preceding operation did not produce an error."
msgstr ""

#: ../source/reference/command/getLastError.txt:46
# 28dc92c47c254b12989e70986f7f4cb5
msgid ":data:`~getLastError.err` is ``null`` unless an error occurs. When there was an error with the preceding operation, ``err`` contains a textual description of the error."
msgstr ""

#: ../source/reference/command/getLastError.txt:52
# 3567ac909288491188465880faa34d6d
msgid ":data:`~getLastError.code` reports the preceding operation's error code."
msgstr ""

#: ../source/reference/command/getLastError.txt:57
# 8eefb0fd104d4ed898a3c43f87ee6ce4
msgid "The identifier of the connection."
msgstr ""

#: ../source/reference/command/getLastError.txt:61
# 4435cd177da64eb5b9d6bc9d0df4452a
msgid "When issued against a replica set member and the preceding operation was a write or update, :data:`~getLastError.lastOp` is the *optime* timestamp in the :term:`oplog`  of the change."
msgstr ""

#: ../source/reference/command/getLastError.txt:67
# 7677db4189f349d2968f15cd5bce8ca6
msgid ":data:`~getLastError.n` reports the number of documents updated or removed, if the preceding operation was an update or remove operation."
msgstr ""

#: ../source/reference/command/getLastError.txt:73
# f07a3454a46140ad8be0134387319fae
msgid "When issued against a sharded cluster after a write operation, :data:`~getLastError.shards` identifies the shards targeted in the write operation. :data:`~getLastError.shards` is present in the output only if the write operation targets multiple shards."
msgstr ""

#: ../source/reference/command/getLastError.txt:80
# e2062b6662bf48ef910db1b6a9428a64
msgid "When issued against a sharded cluster after a write operation, identifies the shard targeted in the write operation. :data:`~getLastError.singleShard` is only present if the write operation targets exactly one shard."
msgstr ""

#: ../source/reference/command/getLastError.txt:87
# 9e0fd43dd2be44fba72a9b22d95f40f4
msgid ":data:`~getLastError.updatedExisting` is ``true`` when an update affects at least one document and does not result in an :term:`upsert`."
msgstr ""

#: ../source/reference/command/getLastError.txt:93
# 2f7cdcbd1a1f4a519dc458249245a050
msgid "If the update results in an insert, :data:`~getLastError.upserted` is the value of ``_id`` field of the document."
msgstr ""

#: ../source/reference/command/getLastError.txt:96
# b4f706b6c75248059ba7fc32c053506e
msgid "Earlier versions of MongoDB included :data:`~getLastError.upserted` only if ``_id`` was an :term:`ObjectId <objectid>`."
msgstr ""

#: ../source/reference/command/getLastError.txt:103
# 5b5dd54ca138436ebdb59d53c83452c5
msgid "If set, ``wnote`` indicates that the preceding operation's error relates to using the ``w`` parameter to :dbcommand:`getLastError`."
msgstr ""

#: ../source/reference/command/getLastError.txt:0
# ce3552ee29194771b7b88bd7c910630f
msgid "See"
msgstr ""

#: ../source/reference/command/getLastError.txt:111
# 50473a8d5e504e23a22a157fe0342144
msgid ":data:`~getLastError.wtimeout` is ``true`` if the :dbcommand:`getLastError` timed out because of the ``wtimeout`` setting to :dbcommand:`getLastError`."
msgstr ""

#: ../source/reference/command/getLastError.txt:117
# 57ac54fa51124a7cbcbdb7782f7aaefa
msgid "If the preceding operation specified a timeout using the ``wtimeout`` setting to :dbcommand:`getLastError`, then :data:`~getLastError.waited` reports the number of milliseconds :dbcommand:`getLastError` waited before timing out."
msgstr ""

#: ../source/reference/command/getLastError.txt:124
# ece9a555c2d94e9c8f8ddf8be7faccb0
msgid ":data:`getLastError.wtime` is the number of milliseconds spent waiting for the preceding operation to complete. If :dbcommand:`getLastError` timed out, :data:`~getLastError.wtime` and :dbcommand:`getLastError.waited` are equal."
msgstr ""

#: ../source/reference/command/getLastError.txt:132
# f8265a94249848458a749e063ab3857e
msgid "Examples"
msgstr ""

#: ../source/reference/command/getLastError.txt:135
# 834154d303b840ba98df62d680acf85b
msgid "Confirm Replication to Two Replica Set Members"
msgstr ""

#: ../source/reference/command/getLastError.txt:137
# 15732b14058f42ba8201fb9e3f40ebc2
msgid "The following example ensures the operation has replicated to two members (the primary and one other member):"
msgstr ""

#: ../source/reference/command/getLastError.txt:145
# 6d69a63fdb404b7e917c8beae65bed72
msgid "Confirm Replication to a Majority of a Replica Set"
msgstr ""

#: ../source/reference/command/getLastError.txt:147
# 547fbcf0aa1a47788f3e345405f6eb17
msgid "The following example ensures the write operation has replicated to a majority of the voting members of the replica set."
msgstr ""

#: ../source/includes/fact-master-slave-majority.rst:1
# b7116624726e426a8ce686bdd9d00d7b
msgid "In :doc:`Master/Slave </core/master-slave>` deployments, MongoDB treats ``w: \"majority\"`` as equivalent to ``w: 1``. In earlier versions of MongoDB, ``w: \"majority\"`` produces an error in :doc:`master/slave </core/master-slave>` deployments."
msgstr ""

#: ../source/reference/command/getLastError.txt:157
# 94c994e7b1394fbc991d8c11e5ce9da8
msgid "Set a Timeout for a ``getLastError`` Response"
msgstr ""

#: ../source/reference/command/getLastError.txt:159
# c82a53dc2f354b88bd788bd7404e7f89
msgid "Unless you specify a timeout, a :dbcommand:`getLastError` command may block forever if MongoDB cannot satisfy the requested write concern. To specify a timeout of 5000 milliseconds, use an invocation that resembles the following:"
msgstr ""

#: ../source/reference/command/getLastError.txt:168
# f8de901c1179435383e69bd44abae9ec
msgid "When ``wtimeout`` is ``0``, the :dbcommand:`getLastError` operation will never time out."
msgstr ""

