title: Create the data directory.
stepnum: 1
ref: create-dbpath
pre: |
  Before you start MongoDB for the first time, you must create the
  directory to which the :binary:`~bin.mongod` process will write data.
action:
  pre: |
    For example, to create the ``~/data/db`` directory:
  language: sh
  code: |
    sudo mkdir -p ~/data/db

---
title: Create the log directory.
stepnum: 2
ref: create-logpath
pre: |
  You must also create the directory in which the ``mongod`` process
  will write its log file:
action:
  pre: |
    For example, to create the ``~/data/log/mongodb`` directory:
  language: sh
  code: |
    sudo mkdir -p ~/data/log/mongodb
---
title: Set permissions for the data and log directories.
stepnum: 3
ref: set-dbpath-logpath-permissions
action:
  pre: |
    Ensure that the user account running :binary:`~bin.mongod` has read
    and write permissions for these two directories. If you are running
    :binary:`~bin.mongod` as your own user account, and you just created
    the two directories above, they should already accessible to your
    user. Otherwise, you can use ``chown`` to set ownership,
    substituting the appropriate *user*:
  language: sh
  code: |
    sudo chown <user> ~/data/db
    sudo chown <user> ~/data/log/mongodb
---
title: Run MongoDB.
stepnum: 4
ref: start-mdb
pre: |
  To run MongoDB, run the :binary:`~bin.mongod` process at the system
  prompt, providing the two parameters ``dbpath`` and ``logpath``
  from above, and the ``fork`` parameter to run :binary:`~bin.mongod`
  in the background. Alternatively, you may choose to store the values
  for ``dbpath``, ``logpath``, ``fork``, and many other parameters in a
  :ref:`configuration file <configuration-options>`.
action:
  - heading: Run ``mongod`` with command-line parameters
    pre: |
      Run the :binary:`~bin.mongod` process at the system prompt,
      providing the three necessary parameters directly on the
      command-line:
    language: sh
    code: |
      mongod --dbpath ~/data/db --logpath ~/data/log/mongodb/mongo.log --fork
  - heading: Run ``mongod`` with a configuration file
    pre: |
      Run the :binary:`~bin.mongod` process at the system prompt,
      providing the path to a
      :ref:`configuration file <configuration-options>`
      with the ``config`` parameter:
    language: sh
    code: |
      mongod --config /usr/local/etc/mongod.conf
post: |
     .. include:: /includes/extracts/macos-prevent-launch-mongod.rst

# End-for-getting-started-guide
---
title: "Verify that MongoDB has started successfully."
stepnum: 5
ref: verify
pre: |
  Verify that MongoDB has started successfully:
action:
  language: none
  code: |
    ps aux | grep -v grep | grep mongod
post: |
  If you do not see a ``mongod`` process running, check the logfile for
  any error messages.
---
title: Begin using MongoDB.
stepnum: 6
ref: begin-using-mongodb
pre: |
  Start a :binary:`~bin.mongosh` session on the same host machine as the 
  :binary:`~bin.mongod`. You can run :binary:`~bin.mongosh`
  without any command-line options to connect to a
  :binary:`~bin.mongod` that is running on your *localhost* with the
  default port of *27017*:
action:
  language: shell
  code: |
     mongosh
post: |

  For more information on connecting using :binary:`~bin.mongosh`,
  such as to connect to a :binary:`~bin.mongod` instance running
  on a different host and/or port, see the
  :mongosh:`mongosh documentation </>`.

  To help you start using MongoDB, MongoDB provides :ref:`Getting
  Started Guides <getting-started>` in various driver editions. See
  :ref:`getting-started` for the available editions.

replacement:
  mongod: ":binary:`~bin.mongod`"
  mongo: ":binary:`~bin.mongosh`"
...

