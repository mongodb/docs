===========
sh.status()
===========

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. start-include-here

.. method:: sh.status()

   When run on a :binary:`~bin.mongos` instance, prints a formatted report
   of the sharding configuration and the information regarding existing
   chunks in a :term:`sharded cluster`. The default behavior suppresses
   the detailed chunk information if the total number of chunks is
   greater than or equal to 20.

   The :method:`sh.status()` method has the following parameter:

   .. include:: /includes/apiargs/method-sh.status-param.rst

   .. seealso:: :method:`db.printShardingStatus()`

.. end-include-here

Output Examples
---------------

The :ref:`sharding-status-version-fields` section displays information on the
:term:`config database`:

.. code-block:: javascript

   --- Sharding Status ---
     sharding version: {
      "_id" : <num>,
      "minCompatibleVersion" : <num>,
      "currentVersion" : <num>,
      "clusterId" : <ObjectId>
   }

The :ref:`sharding-status-mongoses` section displays information on the
version and count of active :binary:`~bin.mongos` instances:

.. code-block:: javascript

   active mongoses:
     <version> : <num>

The :ref:`autosplit-status` displays information on whether autosplit
is enabled:

.. code-block:: javascript

   autosplit:
     Currently enabled: <yes|no>

The :ref:`sharding-status-shards-fields` section lists information on
the shard(s). For each shard, the section displays the name, host, and
the associated tags, if any.

.. code-block:: javascript

     shards:
      {  "_id" : <shard name1>,
         "host" : <string>,
         "tags" : [ <string> ... ]
      }
      {  "_id" : <shard name2>,
         "host" : <string>,
         "tags" : [ <string> ... ]
      }
      ...

.. versionadded:: 3.0.0
   The :ref:`sharding-status-balancer-fields` section lists information
   about the state of the :term:`balancer`. This provides insight into
   current balancer operation and can be useful when troubleshooting an
   unbalanced sharded cluster.

   .. code-block:: none

      balancer:
            Currently enabled:  yes
            Currently running:  yes
                Balancer lock taken at Fri Nov 11 2016 14:23:24 GMT-0500 (EST) by ConfigServer:Balancer
            Collections with active migrations:
                chat.messages started at Fri Nov 11 2016 14:24:12 GMT-0500 (EST)
            Failed balancer rounds in last 5 attempts:  1
            Last reported error:  tag ranges not valid for: test.t2
            Time of Reported error:  Wed Dec 10 2014 12:00:33 GMT+1100 (AEDT)
            Migration Results for the last 24 hours:
                96 : Success
                15 : Failed with error 'ns not found, should be impossible', from
                shard01 to shard02

The :ref:`sharding-status-databases-fields` section lists information
on the database(s). For each database, the section displays the name,
whether the database has sharding enabled, and the :term:`primary
shard` for the database.

.. code-block:: javascript

     databases:
      {  "_id" : <dbname1>,
         "partitioned" : <boolean>,
         "primary" : <string>
      }
      {  "_id" : <dbname2>,
         "partitioned" : <boolean>,
         "primary" : <string>
      }
      ...

The :ref:`sharding-status-collection-fields` section provides
information on the sharding details for sharded collection(s). For each
sharded collection, the section displays the shard key, the number of
chunks per shard(s), the distribution of documents across chunks
[#chunk-details]_, and the tag information, if any, for shard key
range(s).

.. code-block:: javascript

   <dbname>.<collection>
      shard key: { <shard key> : <1 or hashed> }
      unique: <boolean>
      balancing: <boolean>
      chunks:
         <shard name1> <number of chunks>
         <shard name2> <number of chunks>
         ...
      { <shard key>: <min range1> } -->> { <shard key> : <max range1> } on : <shard name> <last modified timestamp>
      { <shard key>: <min range2> } -->> { <shard key> : <max range2> } on : <shard name> <last modified timestamp>
      ...
      tag: <tag1>  { <shard key> : <min range1> } -->> { <shard key> : <max range1> }
      ...

Output Fields
-------------

.. COMMENT to DOCS -- opened https://jira.mongodb.org/browse/DOCS-9308 to redo this page.

.. _sharding-status-version-fields:

Sharding Version
~~~~~~~~~~~~~~~~

.. data:: sh.status.sharding-version._id

   The :data:`~sh.status.sharding-version._id` is an identifier
   for the version details.

.. data:: sh.status.sharding-version.minCompatibleVersion

   The :data:`~sh.status.sharding-version.minCompatibleVersion` is
   the minimum compatible version of the config server.

.. data:: sh.status.sharding-version.currentVersion

   The :data:`~sh.status.sharding-version.currentVersion` is
   the current version of the config server.

.. data:: sh.status.sharding-version.clusterId

   The :data:`~sh.status.sharding-version.clusterId` is the
   identification for the sharded cluster.

.. _sharding-status-mongoses:

``mongos`` Version and Count
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. data:: sh.status.active-mongoses

   :data:`sh.status.active-mongoses` lists the version and count of the
   :binary:`~bin.mongos` instances.

.. _autosplit-status:

Autosplit
~~~~~~~~~

.. data:: sh.status.active-mongoses

   :data:`sh.status.active-mongoses` indicates whether autosplit is
   currently enabled.

.. _sharding-status-shards-fields:

Shards
~~~~~~

.. data:: sh.status.shards._id

   The :data:`~sh.status.shards._id` displays the name of the shard.

.. data:: sh.status.shards.host

   The :data:`~sh.status.shards.host` displays the host location
   of the shard.

.. data:: sh.status.shards.tags

   The :data:`~sh.status.shards.tags` displays all the tags for
   the shard. The field only displays if the shard has tags.

.. _sharding-status-balancer-fields:

Balancer
~~~~~~~~

.. versionadded:: 3.0.0
   :method:`sh.status()` added the ``balancer`` field.

.. data:: sh.status.balancer.currently-enabled

   :data:`~sh.status.balancer.currently-enabled` indicates if the
   :term:`balancer` is currently enabled on the sharded cluster.

.. data:: sh.status.balancer.currently-running

   :data:`~sh.status.balancer.currently-running` indicates whether
   the :term:`balancer` is currently running, and therefore currently
   balancing the cluster.

   If the :term:`balancer` is running,
   :data:`~sh.status.balancer.currently-running` prints information on the ``"balancer"`` lock.
   
   .. versionchanged:: Starting in 3.4
      
      The primary of the CSRS config server holds the ``"balancer"``
      lock, using a process id named ``"ConfigServer"``, which is never
      released.

.. data:: sh.status.balancer.collections-with-active-migrations

   :data:`~sh.status.balancer.collections-with-active-migrations`
   lists the names of any collections with active migrations, and
   specifies when the migration began. If there are no active
   migrations, this field will not appear in the :method:`sh.status()`
   output.

.. data:: sh.status.balancer.failed-balancer-rounds-in-last-5-attempts

   :data:`~sh.status.balancer.failed-balancer-rounds-in-last-5-attempts`
   displays the number of :term:`balancer` rounds that failed, from among
   the last five attempted rounds. A balancer round will fail when a chunk
   migration fails.

.. data:: sh.status.balancer.last-reported-error

   :data:`~sh.status.balancer.last-reported-error` lists the most
   recent balancer error message. If there have been no errors, this
   field will not appear in the :method:`sh.status()` output.

.. data:: sh.status.balancer.time-of-reported-error

   :data:`~sh.status.balancer.time-of-reported-error` provides
   the date and time of the most recently-reported error.

.. data:: sh.status.balancer.migration-results-for-the-last-24-hours

   :data:`~sh.status.balancer.migration-results-for-the-last-24-hours`
   displays the number of migrations in the last 24 hours, and the
   error messages from failed
   migrations . If there have been no recent migrations,
   :data:`~sh.status.balancer.migration-results-for-the-last-24-hours`
   displays ``No recent migrations``.

   :data:`~sh.status.balancer.migration-results-for-the-last-24-hours`
   includes *all* migrations, including those not initiated by the balancer.

.. _sharding-status-databases-fields:

Databases
~~~~~~~~~

.. data:: sh.status.databases._id

   The :data:`~sh.status.databases._id` displays the name of the database.

.. data:: sh.status.databases.partitioned

   The :data:`~sh.status.databases.partitioned` displays whether
   the database has sharding enabled. If ``true``, the database has
   sharding enabled.

.. data:: sh.status.databases.primary

   The :data:`~sh.status.databases.primary` displays the
   :term:`primary shard` for the database.

.. _sharding-status-collection-fields:

Sharded Collection
~~~~~~~~~~~~~~~~~~

.. data:: sh.status.databases.<collection>.shard-key

   The :data:`~sh.status.databases.collection.shard-key` displays the shard
   key specification document.

.. data:: sh.status.databases.<collection>.unique

   The :data:`~sh.status.databases.<collection>.unique` displays
   whether MongoDB enforces uniqueness on the shard key values.

.. data:: sh.status.databases.balancing

   The :data:`~sh.status.databases.<collection>.balancing` displays
   whether balancing is enabled (``true``) or disabled (``false``) for
   the collection.

.. data:: sh.status.databases.<collection>.chunks

   The :data:`~sh.status.databases.<collection>.chunks` lists all the shards
   and the number of chunks that reside on each shard.

.. data:: sh.status.databases.<collection>.chunk-details

   The :data:`~sh.status.databases.<collection>.chunk-details` lists the details
   of the chunks [#chunk-details]_:

   - The range of shard key values that define the chunk,

   - The shard where the chunk resides, and

   - The last modified timestamp for the chunk.

.. data:: sh.status.databases.<collection>.tag

   The :data:`~sh.status.databases.<collection>.tag` lists the details of
   the tags associated with a range of shard key values.

.. [#chunk-details] The sharded collection section, by default,
   displays the chunk information if the total number of chunks is less
   than 20. To display the information when you have 20 or more chunks,
   call the :method:`sh.status()` methods with the ``verbose`` parameter
   set to ``true``, i.e. ``sh.status(true)``.
