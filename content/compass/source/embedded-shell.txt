.. _embedded-mongodb-shell:

======================
Embedded MongoDB Shell
======================

.. meta::
   :description: Access and use the embedded `mongosh` shell in MongoDB Compass to test queries and operations, or disable it for security.

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Starting in version 1.22, |compass| contains an embedded shell,
:binary:`mongosh`. :binary:`mongosh` is a JavaScript environment for
interacting with MongoDB deployments. You can use :binary:`mongosh`
to test queries and operations in your database.

Open the Embedded MongoDB Shell
-------------------------------

To open the embedded :binary:`mongosh`,you can either:

- Click :guilabel:`>_` on the right of your deployment name in the
  :guilabel:`Connections Sidebar`. 
- Click :guilabel:`>_Open MongoDB shell` in the top right of any tab
  connected to a MongoDB deployment.

Use the Embedded MongoDB Shell
------------------------------

By default, :binary:`mongosh`, connects to the ``test`` database.
To use a different database, run the following command in
:binary:`mongosh`:

.. code-block:: sh

   use <database name>

To run an operation in the embedded MongoDB Shell, type the operation
into the shell and press :guilabel:`Enter`.

The following example runs a :method:`db.collection.find()` operation:

.. example::

   .. code-block:: sh

      db.employees.find( { "last_name": "Smith" } )

Multi-Line Operations in the Embedded MongoDB Shell
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To write an operation that spans multiple lines in the embedded
:binary:`mongosh`, begin with the first line, then press
:guilabel:`Shift + Enter` to move to the next line of code.

When you are finished writing your operation, press :guilabel:`Enter`
to run it.

The following multi-line example runs the :pipeline:`$match` stage in
an :ref:`aggregation pipeline <aggregation-pipeline>`: 

.. example::

   .. code-block:: javascript

      db.employees.aggregate( [              // press Shift + Enter
        { $match: { "last_name": "Smith" } } // press Shift + Enter
      ] )                                    // Press Enter

.. _disable-shell:

Disable the Embedded MongoDB Shell
----------------------------------

You can disable the embedded MongoDB shell in |compass-short| to avoid running 
unauthorized commands on :binary:`mongosh`. 

To disable the embedded MongoDB shell: 

.. procedure::
   :style: normal

   .. step:: In the |compass-short| top menu bar, click :guilabel:`MongoDB Compass`.

   .. step:: In the :guilabel:`MongoDB Compass` menu, click :guilabel:`Settings`.
      
      |compass-short| opens a dialog box where you configure your |compass| 
      settings.

   .. step:: Toggle :guilabel:`Enable MongoDB Shell`.

      If you select :guilabel:`Set Read-Only Mode`, |compass-short| 
      automatically unchecks the :guilabel:`Enable MongoDB Shell` setting.

   .. step:: Click :guilabel:`Save`. 

Learn More
~~~~~~~~~~

The following links direct to the
:ref:`mongosh documentation <mdb-shell-overview>`, which contains
more a complete reference for :binary:`mongosh`, including syntax and
behaviors.

- Learn how to :ref:`perform CRUD operations <mdb-shell-crud>` in
  :binary:`mongosh`.

- Learn how to :ref:`run aggregation pipelines <mdb-shell-aggregation>`
  in :binary:`mongosh`.

- See a complete list of :binary:`mongosh` :ref:`methods
  <mdb-shell-methods>`.

