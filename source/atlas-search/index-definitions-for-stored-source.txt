:orphan:

.. meta::
   :robots: noindex, nosnippet

.. _ref-index-definitions-stored-source:

====================
Define |fts| Indexes 
====================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 3
   :class: singlecol

|fts| can index data in different ways. When you define an |fts| index, 
you can specify a particular analyzer or multiple analyzers to index  
certain fields. You can also index certain fields and omit others, or 
you can dynamically index all the fields in a collection. You can 
define |fts| indexes through the |service| :ref:`User Interface 
<ref-create-index>` and |fts| :doc:`API 
</reference/api/fts-indexes-create-one>`.

.. include:: /includes/atlas-search-out-agg.rst

.. note::

   |fts| indexes are eventually consistent.

Limitation
----------

.. include:: /includes/fact-fts-index-limitation.rst


Syntax 
------

.. literalinclude:: /includes/fts-index-definition-stored-source-syntax.json
   :language: json
   :linenos:
   :copyable: false

.. _index-definition-options-stored-source:

Options 
-------

.. list-table::
   :header-rows: 1
   :widths: 20 15 15 50

   * - Field
     - Type
     - Necessity
     - Description

   * - ``analyzer``
     - string 
     - Optional 
     - Specifies the :ref:`analyzer <analyzers-ref>` to apply to 
       string fields when indexing. If you set this only at the top and 
       do not specify an analyzer for the fields in the index 
       definition, |fts| applies this analyzer to all the fields. To 
       use a different analyzer for each field, you must specify a 
       different analyzer for the field. If omitted, defaults to 
       :ref:`ref-standard-analyzer`.

   * - ``analyzers``
     - array of :ref:`custom-analyzers` 
     - Optional 
     - Specifies the :ref:`custom-analyzers` to use in this index.

   * - ``mappings``
     - :ref:`Document Field Definition <bson-data-types-document>`
     - Required
     - Specifies how to index fields at different paths for this 
       index.

   * - ``mappings.dynamic``
     - boolean
     - Optional
     - Enables or disables dynamic mapping of fields for this index.
     
       If set to ``true``, 
       |fts| recursively indexes all fields and embedded documents in the ``document`` except:

       - Fields of certain data types. To learn more, see 
         :ref:`bson-data-chart`.
       - Any fields explicitly excluded by the ``mappings.fields`` 
         parameter.

       If set to ``false``, you must specify individual fields to index 
       using ``mappings.fields``.

       If omitted, defaults to ``false``.

       .. include:: /includes/admonitions/importants/dynamic-flag-considerations.rst
       
          Admonition content
       

       See :ref:`index configuration example <index-config-example>` on 
       this page.

   * - ``mappings.fields``
     - document
     - Conditional
     - Required only if dynamic mapping is disabled. 
     
       Specifies the fields that you would like to index. See the 
       :ref:`example <index-config-example>` on this page. 

   * - ``name``
     - string 
     - Optional 
     - Specifies a name for the index. In each :manual:`namespace 
       </reference/limits/#faq-dev-namespace>`, names of all indexes in 
       the namespace must be unique. If omitted, defaults to 
       ``default``.

   * - ``searchAnalyzer``
     - string 
     - Optional
     - Specifies the :ref:`analyzer <analyzers-ref>` to apply to query 
       text before searching with it. If omitted, defaults to 
       :ref:`ref-standard-analyzer`.

   * - ``storedSource`` 
     - boolean or :ref:`Stored Source Definition  
       <fts-stored-source-definition>` 
     - Optional 
     - Specifies fields in the documents to store for query-time 
       look-ups using the :ref:`returnedStoredSource 
       <fts-return-stored-source-option>` option. Value can be one of 
       the following:

       - ``true``, to store all fields  
       - ``false``, to not store any fields 
       - Document that specifies the fields to ``include`` or 
         ``exclude`` from storage

       If omitted, defaults to ``false``. To learn more about the 
       syntax and fields, see :ref:`fts-stored-source-definition`.

       .. note:: 

          You can store fields of all :ref:`bson-data-chart` on |fts|.

   * - ``synonyms`` 
     - array of :ref:`Synonym Mapping Definition <synonyms-ref>`
     - Optional 
     - Synonym mappings to use in your index. To learn more, see 
       :ref:`synonyms-ref`.

Static and Dynamic Mappings 
---------------------------

For **Static mappings**, set ``mappings.dynamic`` to ``false`` and 
specify the fields to index using ``mappings.fields``. |fts| only 
indexes the specified fields with specific options. 

Use static mappings to configure index options for fields that should 
not be indexed dynamically, or to configure a single field 
independently from others in an index.

.. note:: 

   You must specify static mappings when ``mappings.dynamic`` is 
   ``false``.

For **Dynamic mappings**, set ``mappings.dynamic`` to ``true``. |fts| 
automatically indexes the fields of :ref:`supported types 
<bson-data-chart>` in each document. 

Use dynamic mappings if your schema changes regularly or is unknown, or 
when experimenting with |fts|. You can configure an entire index to use 
dynamic mappings, or specify individual fields, such as fields of type 
``document``, to be dynamically mapped.

.. note::

   Dynamically mapped indexes occupy more disk space than statically 
   mapped indexes and may be less performant.

BSON Data Types
~~~~~~~~~~~~~~~

The table below enumerates all the :manual:`BSON data types
</reference/bson-types/>` and indicates whether they are included in an 
|fts| index with :ref:`dynamic mappings <static-dynamic-mappings>`. 

.. list-table::
   :header-rows: 1

   * - BSON Type
     - Included in Dynamic Index?
     - Atlas Search Field Type

   * - Double
     - yes
     - :ref:`number <bson-data-types-number>`

   * - 32-bit integer
     - yes
     - :ref:`number <bson-data-types-number>`

   * - 64-bit integer
     - yes
     - :ref:`number <bson-data-types-number>`

   * - String 
     - yes :sup:`*`
     - - :ref:`string <bson-data-types-string>`
       - :ref:`stringFacet <bson-data-types-string-facet>`
  
   * - Date
     - yes
     - :ref:`date <bson-data-types-date>`

   * - Object
     - yes
     - :ref:`document <bson-data-types-document>`

   * - ObjectId
     - no
     - :ref:`objectId <objectId-ref>`

   * - Boolean
     - no
     - :ref:`boolean <boolean-ref>`

   * - Timestamp
     - no
     - 

   * - Array
     - yes
     - 

   * - Binary Data
     - no
     - 

   * - Null
     - no
     - 

   * - Regular Expression
     - no
     - 

   * - JavaScript
     - no
     - 

   * - Decimal128
     - no
     - 

   * - Min key
     - no
     - 

   * - Max key
     - no
     - 

:sup:`*` You can't use :ref:`dynamic mapping <static-dynamic-mappings>` 
to automatically index ``string`` fields for faceting. You must index 
fields using :ref:`bson-data-types-string-facet` to run a facet query 
on ``string`` fields.

.. note:: 

   You can store fields of all :ref:`bson-data-chart` on |fts| using 
   the ``storedSource`` :ref:`option <index-definition-options>`.

To learn more, see :ref:`bson-data-chart`.

.. toctree::
   :titlesonly:

   Define Stored Source Fields </atlas-search/stored-source-definition>
   