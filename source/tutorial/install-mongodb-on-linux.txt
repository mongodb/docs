========================
Install MongoDB on Linux
========================

.. default-domain:: mongodb

Synopsis
--------

10gen provides compiled versions of :term:`MongoDB` for use on Linux
that provides a simple option for users who cannot use packages. This
tutorial outlines the basic installation of MongoDB using these
compiled versions and an initial usage guide.

.. seealso:: The documentation of following related processes and
   concepts.

   Other installation tutorials:

   - :doc:`/tutorial/install-mongodb-on-red-hat-centos-or-fedora-linux`
   - :doc:`/tutorial/install-mongodb-on-ubuntu`
   - :doc:`/tutorial/install-mongodb-on-debian`
   - :doc:`/tutorial/install-mongodb-on-os-x`
   - :doc:`/tutorial/install-mongodb-on-windows`

   .. Documentation for getting started with MongoDB:

   .. - :doc:`/getting-started`
   .. STUB - :doc:`/tutorial/insert-test-data-into-a-mongodb-database`

Download MongoDB
----------------

.. note::

   You should place the MongoDB binaries in a central location on the
   file system that is easy to access and control. Consider ``/opt``
   or ``/usr/local/bin``.

In a terminal session, begin by downloading the latest release. In
most cases you will want to download the 64-bit version of MongoDB.

.. include:: /includes/install-curl-release-linux-64.rst

If you need to run the 32-bit version, use the following command.

.. include:: /includes/install-curl-release-linux-32.rst

Once you've downloaded the release, issue the following command to
extract the files from the archive:

.. code-block:: sh

   tar -zxvf mongo.tgz

.. optional::

   You may use the following command to copy the extracted folder into
   a more generic location.

   .. code-block:: sh

      cp -R -n  mongodb-linux-????-??-??/ mongodb

You can find the :program:`mongod` binary, and the binaries all of the
associated MongoDB utilities, in the ``bin/`` directory within the
extracted directory.

Using MongoDB
~~~~~~~~~~~~~

Before you start :program:`mongod` for the first time, you will need
to create the data directory. By default, :program:`mongod` writes
data to the ``/data/db/`` directory. To create this directory, use the
following command:

.. code-block:: sh

   mkdir -p /data/db

.. note::

   Ensure that the system account that will run the :program:`mongod`
   process has read and write permissions to this directory. If
   :program:`mongod` runs under the ``mongo`` user account, issue the
   following command to change the owner of this folder:

   .. code-block:: sh

      chown mongo /data/db

   If you use an alternate location for your data directory, ensure
   that this user can write to your chosen data path.

You can specify, and create, an alternate path using the
:option:`--dbpath <mongod --dbpath>` option to :program:`mongod` and the above
command.

The 10gen builds of MongoDB contain no :term:`control scripts <control
script>` or method to control the :program:`mongod` process. You may
wish to create control scripts, modify your path, and/or create
symbolic links to the MongoDB programs in your ``/usr/local/bin`` or
``/usr/bin`` directory for easier use.

For testing purposes, you can start a :program:`mongod` directly in
the terminal without creating a control script:

.. code-block:: sh

   mongod --config /etc/mongod.conf

.. note::

   The above command assumes that the :program:`mongod` binary is
   accessible via your system's search path, and that you have created
   a default configuration file located at ``/etc/mongod.conf``.

Among the tools included with this MongoDB distribution, is the
:program:`mongo` shell. You can use this shell to connect to your
MongoDB instance by issuing the following command at the system
prompt:

.. code-block:: sh

   ./bin/mongo

.. note::

   The ``./bin/mongo`` command assumes that the :program:`mongo`
   binary is in the ``bin/`` sub-directory of the current
   directory. This is the directory into which you extracted the
   ``.tgz`` file.

This will connect to the database running on the localhost interface
by default. At the :program:`mongo` prompt, issue the following two
commands to insert a record in the "test" :term:`collection` of the
(default) "test" database and then retrieve that record:

.. code-block:: javascript

   > db.test.save( { a: 1 } )
   > db.test.find()

.. seealso:: ":program:`mongo`" and ":doc:`/reference/javascript`"
