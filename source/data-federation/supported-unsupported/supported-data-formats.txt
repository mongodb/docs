.. _adf-data-formats:

======================
Supported Data Formats
======================

.. default-domain:: mongodb

.. meta::
   :keywords: {+df+}


{+df+} can read the following data formats:

.. list-table::
   :header-rows: 1
   :widths: 20 80 

   * - Supported Format
     - Supported Compression

   * - `Avro <https://avro.apache.org/docs/current/>`_ 
     - - `gzip <https://www.gnu.org/software/gzip/manual/gzip.html>`__ 
       - `bzip2 <https://www.sourceware.org/bzip2/>`__

   * - `Parquet <https://parquet.apache.org/documentation/latest/>`_
     - - `gzip <https://www.gnu.org/software/gzip/manual/gzip.html>`__ 
       - `snappy <http://google.github.io/snappy/>`__

   * - `ORC <https://orc.apache.org/docs/>`_
     - - `snappy <http://google.github.io/snappy/>`__
       - `zlib <https://zlib.net/>`__

   * - |json| :sup:`1`
     - - `gzip <https://www.gnu.org/software/gzip/manual/gzip.html>`__ 
       - `bzip2 <https://www.sourceware.org/bzip2/>`__

   * - :manual:`MongoDB Extended JSON 
       </reference/mongodb-extended-json/>` :sup:`1`
     - - `gzip <https://www.gnu.org/software/gzip/manual/gzip.html>`__ 
       - `bzip2 <https://www.sourceware.org/bzip2/>`__

   * - |bson| 
     - - `gzip <https://www.gnu.org/software/gzip/manual/gzip.html>`__ 
       - `bzip2 <https://www.sourceware.org/bzip2/>`__

   * - :ref:`CSV <adf-csv-tsv-data>` 
     - - `gzip <https://www.gnu.org/software/gzip/manual/gzip.html>`__ 
       - `bzip2 <https://www.sourceware.org/bzip2/>`__

   * - :ref:`TSV <adf-csv-tsv-data>` 
     - - `gzip <https://www.gnu.org/software/gzip/manual/gzip.html>`__ 
       - `bzip2 <https://www.sourceware.org/bzip2/>`__

.. _adf-csv-tsv-data:

Comma-Separated and Tab-Separated Value Data Files
--------------------------------------------------

Your CSV or TSV file must start with a header row. {+adf+} utilizes the 
header row as field names. The dot-delimited field names in the header 
row become nested fields or objects in |json| format. For each dot in 
the field name, {+df+} creates another level of nesting.

.. example::

   Suppose your {+fdi+} is reading a CSV file with content 
   similar to the following:

   .. code-block:: text
      :copyable: false

      company,location.state,location.city.name,location.city.street
      "MongoDB", "California", "Palo Alto", "Forest Ave"

   For the data fields in the above example CSV file, {+df+} 
   creates a |json| document similar to the following:

   .. code-block:: json 
      :copyable: false

      {
         "company": "MongoDB",
         "location": { 
            "state": "California",
            "city": {
               "name": "Palo Alto",
               "street": "Forest Ave",
         }
      }

{+df+} requires all field names at the same level of nesting 
to be unique. The following are examples of invalid field names 
in the header row:

- One field duplicates another field at the same level of nesting. 

  .. example::

     Consider the following:

     .. code-block:: text
        :copyable: false

        company,location,company

     In the header, ``company`` is repeated twice at the same level of 
     nesting. 

- One dot-delimited field duplicates another field at the same level 
  of nesting. 

  .. example:: 
   
     Consider the following:

     .. code-block:: text
        :copyable: false

        company,location,location.city

     In the header, ``location`` is both a stand-alone field 
     and dot-delimited field at the same level of nesting. 
