object:
  name: db.collection.ensureIndex()
  type: method
field:
  optional: true
  type: param
name: background
type: Boolean
position: 1
description: |
  Builds the index in the background so that building an index does
  *not* block other database activities. Specify ``true`` to build in
  the background. The default value is ``false``.
---
object:
  name: db.collection.ensureIndex()
  type: method
field:
  optional: true
  type: param
name: unique
type: Boolean
position: 2
description: |
  Creates a unique index so that the collection will not accept
  insertion of documents where the index key or keys match an existing
  value in the index. Specify ``true`` to create a unique index. The
  default value is ``false``.

  The option is *unavailable* for :doc:`hashed </core/index-hashed>`
  indexes.
---
object:
  name: db.collection.ensureIndex()
  type: method
field:
  optional: true
  type: param
name: name
type: string
position: 3
description: |
  The name of the index. If unspecified, MongoDB generates an index name
  by concatenating the names of the indexed fields and the sort order.

  Whether user specified or MongoDB generated, index names including
  their full namespace (i.e. ``database.collection``) cannot be longer
  than the :limit:`Index Name Limit`.
---
object:
  name: db.collection.ensureIndex()
  type: method
field:
  optional: true
  type: param
name: dropDups
type: Boolean
position: 4
description: |
  Creates a unique index on a field that *may* have duplicates. MongoDB
  indexes only the first occurrence of a key and **removes** all
  documents from the collection that contain subsequent occurrences of
  that key. Specify ``true`` to create unique index. The default value
  is ``false``.

  The option is *unavailable* for :doc:`hashed </core/index-hashed>`
  indexes.

  .. deprecated:: 2.6

  .. warning:: ``dropDups`` will delete data from your collection when
     building the index.

---
object:
  name: db.collection.ensureIndex()
  type: method
field:
  optional: true
  type: param
name: sparse
type: Boolean
position: 5
description: |
  If ``true``, the index only references documents with the specified
  field. These indexes use less space but behave differently in some
  situations (particularly sorts). The default value is ``false``.
  See :doc:`/core/index-sparse` for more information.

  .. versionchanged:: 2.6

     :doc:`2dsphere </core/2dsphere>` indexes are sparse by default and
     ignore this option. For a compound index that includes
     ``2dsphere`` index key(s) along with keys of other types, only the
     ``2dsphere`` index fields determine whether the index references a
     document.

     :doc:`2d </core/2d>`, :doc:`geoHaystack </core/geohaystack>`, and
     :doc:`text </core/index-text>` indexes behave similarly to the
     :doc:`2dsphere </core/2dsphere>` indexes.
---
object:
  name: db.collection.ensureIndex()
  type: method
field:
  optional: true
  type: param
name: expireAfterSeconds
type: integer
position: 6
description: |
  Specifies a value, in seconds, as a :term:`TTL` to control how long
  MongoDB retains documents in this collection. See
  :doc:`/tutorial/expire-data` for more information on this
  functionality. This applies only to :term:`TTL` indexes.
---
object:
  name: db.collection.ensureIndex()
  type: method
field:
  optional: true
  type: param
name: v
type: index version
position: 7
description: |
  The index version number. The default index version depends on the
  version of :program:`mongod` running when creating the index. Before
  version 2.0, the this value was 0; versions 2.0 and later use version
  1, which provides a smaller and faster index format. Specify a
  different index version *only* in unusual situations.
...
