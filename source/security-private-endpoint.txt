.. _private-endpoint:

=========================
Set up a Private Endpoint
=========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. include:: /includes/fact-atlas-free-tier-limits.rst

MongoDB |service| supports private endpoints on |aws| using the
`{+aws-pl+} <https://aws.amazon.com/privatelink/>`__ feature. When you
enable this feature, |service| creates its own |vpc| and places clusters
within a region behind a network load balancer in the |service| |vpc|.
Then you create resources that establish a one-way connection from your
|vpc| to the network load balancer in the |service| |vpc| using a
private endpoint.

.. figure:: /images/atlas-aws-privatelink.svg
   :width: 720px
   :alt: Image showing how {+aws-pl+} establishes connections from your
         application VPC to resources in the |service| VPC.

Connections to |service| clusters using private endpoints offer the
following advantages over other network access management options:

- Connections using private endpoints are one-way. |service| |vpc|\s
  can't initiate connections back to your |vpc|\s. This ensures your
  network trust boundary is not extended.

- Connections to private endpoints within your |vpc| can be made
  transitively from:

  - Another |vpc| peered to the private endpoint-connected |vpc|.
  - An on-premises data center connected with
    :aws:`DirectConnect </whitepapers/latest/aws-vpc-connectivity-options/aws-direct-connect-network-to-amazon.html>`
    to the private endpoint-connected |vpc|. This enables you to
    connect to |service| directly from your on-premises data center
    without adding public IP addresses to the IP access list.

Considerations
--------------

High Availability
~~~~~~~~~~~~~~~~~

To ensure {+aws-pl+} connections to |service| can withstand an
availability zone outage, you should deploy |vpc| subnets to multiple
availability zones in a region.

.. _private-endpoint-connection-strings:

Private Endpoint-Aware Connection Strings
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

When you enable {+aws-pl+}, |service| generates DNS seedlist and 
standard private-endpoint-aware connection strings. Your clients can use 
these strings to connect to |service| clusters through
a private endpoint.

The hostname in the connection strings resolves to the 
:term:`interface endpoints <interface endpoint>` deployed in the VPC 
subnets you specified when you created the {+aws-pl+} connection. The 
interface endpoints connect to the network load balancer provisioned in 
the |service| VPC. The network load balancer assigns a unique port to 
each |service| replica set node in the region for which you enabled 
{+aws-pl+}.

When you connect using {+aws-pl+}, all nodes in an |service| replica set 
are accessible via the same hostname, with the load balancer resolving
individual nodes by their port.

The following example shows a |dns| lookup of the hostname in a connection 
string for an {+aws-pl+}-enabled single-region cluster, showing three 
unique ports defined for the ``cluster0-pl-0-k45tj.mongodb.net`` 
hostname:

.. code-block:: sh
   :copyable: false

   $ nslookup -type=SRV _mongodb._tcp.cluster0-pl-0-k45tj.mongodb.net

   Server: 127.0.0.53
   Address: 127.0.0.53#53

   Non-authoritative answer:
   _mongodb._tcp.cluster0-pl-0-k45tj.mongodb.net service = 0 0 1026 pl-0-us-east-1-k45tj.mongodb.net.
   _mongodb._tcp.cluster0-pl-0-k45tj.mongodb.net service = 0 0 1024 pl-0-us-east-1-k45tj.mongodb.net.
   _mongodb._tcp.cluster0-pl-0-k45tj.mongodb.net service = 0 0 1025 pl-0-us-east-1-k45tj.mongodb.net.

The hostname in the connection string is a |dns| Canonical Name 
(``CNAME``) record that resolves to the endpoint-specific regional |dns| 
name that |aws| generates for the interface endpoint. A |dns| ``ALIAS`` 
record exists for each subnet in your VPC that you deployed the 
interface endpoint to. Each ``ALIAS`` record contains the private IP 
address of the :term:`interface endpoint` for that subnet.

The following example shows the |dns| lookup for the hostname in the 
connection string, including the endpoint-specific regional |dns| name 
for the interface endpoint and its |dns| ``ALIAS`` records:

.. code-block:: sh
   :copyable: false

   $ nslookup pl-0-us-east-1-k45tj.mongodb.net
   Server: 127.0.0.53
   Address: 127.0.0.53#53

   Non-authoritative answer:
   pl-0-us-east-1-k45tj.mongodb.net
   canonical name = vpce-024f5b57108c8d3ed-ypwbxwll.vpce-svc-02863655456245e5c.us-east-1.vpce.amazonaws.com.
   
   Name: vpce-024f5b57108c8d3ed-ypwbxwll.vpce-svc-02863655456245e5c.us-east-1.vpce.amazonaws.com
   Address: 10.0.30.194
   Name: vpce-024f5b57108c8d3ed-ypwbxwll.vpce-svc-02863655456245e5c.us-east-1.vpce.amazonaws.com
   Address: 10.0.20.54

When a client in your |vpc| connects to an |service| cluster using a
private-endpoint-aware connection string, the client attempts to
establish a connection to the load balancer in the |service| |vpc|
through one of the :term:`interface endpoints <interface endpoint>`.
Your client's |dns| resolution mechanism handles which of the interface
endpoints the hostname resolves to. If one interface endpoint is
unavailable the next is used. This is opaque to the driver or other
connection mechanism. The driver is only aware of the hostname in the
connection string, listening on one port for each node in the cluster's
replica set.

.. seealso:: :ref:`Connect to Atlas using a Private Endpoint <connect-private-endpoint>`

IP Access Lists and VPC Peering with Private Endpoints
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

When Private Endpoints are enabled, you can still enable access to your
|service| clusters using other methods, such as adding public IPs to
:doc:`IP access lists </security/ip-access-list>` and
:doc:`VPC peering </security-vpc-peering>`.

Clients connecting to |service| clusters using other methods use
standard connection strings. Your clients might have to identify when
to use private-endpoint-aware connection strings and standard
connection strings.

Limitations
-----------

- You can use {+aws-pl+} to connect to |service| clusters running
  MongoDB version 3.6 or later.

- {+aws-pl+} must be active in all regions into which you deploy a
  multi-region cluster. You receive an error if {+aws-pl+} is active in
  some, but not all, targeted regions.

- You can do only one of the following:

  - Create more than one private endpoints in a single region, or
  - Create one private endpoint in multiple regions.

  If you create more than one private endpoint in a single region, you 
  can't create private endpoints in other regions.

- To connect to |service| clusters using {+aws-pl+} from regions in 
  which you didn't deploy a private endpoint connection, you must peer 
  these |vpc|\s to |vpc|\s in a region in which you created a private
  endpoint connection.

  To learn about inter-region |vpc| peering, see the `AWS documentation
  <https://aws.amazon.com/answers/networking/aws-multiple-region-multi-vpc-connectivity/>`__.

- You can use {+aws-pl+} in |service| projects with up to 50
  addressable targets **per region**. If you need more than 50
  addressable targets in a region:

  - Contact :ref:`MongoDB Support <request-support>`, or 
  - Use additional projects or regions to connect to addressable targets
    beyond this limit.

  Addressable targets include:

  - Each node in a replica set, excluding nodes that comprise a shard
    in a sharded cluster.
  - Each |mongos| instance for sharded clusters.
  - Each |bic| instance across all dedicated clusters in the project.

  .. note::

     To request a one-time increase to use {+aws-pl+} with up to 100
     addressable targets per |service| project, contact
     :ref:`MongoDB Support <request-support>`.

- When you delete all {+aws-pl+} endpoints for a region in |service|,
  you must manually
  :aws:`delete the private endpoint </vpc/latest/userguide/delete-vpc-endpoint.html>`.
  |aws| lists the endpoint as ``rejected``. |service| can't delete this
  resource because it lacks the required permissions.

Prerequisites
-------------

To enable connections to |service| using private endpoints, you must:

1. Have either the :authrole:`Project Owner` or
   :authrole:`Organization Owner` role in |service|.

#. Have an |aws| user account with an |iam| user policy that grants
   permissions to create, modify, describe, and delete endpoints. For
   more information on controlling the use of interface endpoints, see the
   :aws:`AWS Documentation </vpc/latest/userguide/vpc-endpoints.html>`.

#. **(Recommended)**:
   :aws:`Install the AWS CLI </cli/latest/userguide/cli-chap-install.html>`.

#. If you have not already done so, create your |vpc| and EC2 instances
   in |aws|. See the :aws:`AWS documentation </index.html>` for guidance.

Procedures
----------

.. _atlas-configure-private-endpoint:

Configure an |service| Private Endpoint
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Enable clients to connect to |service| clusters using private endpoints
with the following procedure:

.. include:: /includes/steps/configure-privatelink.rst

.. _connect-private-endpoint:
.. _atlas-connect-private-endpoint:

Connect to |service| using a Private Endpoint
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. note::

   For important considerations about private-endpoint-aware connection
   strings, see
   :ref:`Private Endpoint-Aware Connection Strings <private-endpoint-connection-strings>`.

Use a private-endpoint-aware connection string to connect to an
|service| cluster with the following procedure:

.. include:: /includes/steps/connect-to-cluster-privatelink.rst

.. _pl-troubleshooting:
.. _atlas-troubleshoot-private-endpoint:

Troubleshoot {+aws-pl+} Connection Issues
----------------------------------------------

.. include:: /includes/steps/troubleshoot-privatelink.rst
