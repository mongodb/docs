===========
Update Data
===========

.. default-domain:: mongodb

Overview
--------

MongoDB provides the :method:`~db.collection.update()` method to update
documents of a collection. The method accepts as its parameters:

- a conditions document to match the documents to update,

- an update document to specify the modification to perform, and

- an options document.

To specify the update condition, use the same structure and syntax as
the query conditions. See :doc:`/query` for an introduction to query
conditions.

By default, the :method:`~db.collection.update()` method
updates a single document. Use the :ref:`multi` option to update all
documents that match the criteria.

You cannot update the ``_id`` field.

Prerequisite
------------

The examples in this section use the ``inventory`` collection in the
``test`` database. Populate the collection with
:doc:`/tutorial/prerequisite`.

Update Specific Fields
----------------------

To change a field value, MongoDB provides :manual:`update operators
</reference/operator/update>`, such as :update:`$set` to modify values.
Some update operators, such as :update:`$set`, will create the field if
the field does not exist. See the individual :manual:`update operator
</reference/operator/update>` reference.

.. include:: /includes/examples/example-gs-update-fields.rst

Replace a Document
------------------

To replace the **entire** document except for the ``_id`` field, pass
an entirely new document as the second argument to
:method:`~db.collection.update()`. The replacement document can have
different fields from the original document. In the replacement
document, you can omit the ``_id`` field since the ``_id`` field is
immutable. If you do include the ``_id`` field, it must be the same
value as the existing value.

.. important::
   After the update, the document **only** contains the field or fields
   in the replacement document.

.. include:: /includes/examples/example-gs-update-replace.rst

Additional Information
----------------------

If no document matches the update condition, the default behavior of
the :method:`~db.collection.update()` method is to do nothing. By
specifying ``upsert: true`` in the options document, the
:method:`~db.collection.update()` method either updates matching
document(s) or inserts a new document if no matching document exists.
See :method:`~db.collection.update()` for more information and examples
regarding the ``upsert`` option.

In MongoDB, write operations are atomic on the level of a single
document. If a single update operation modifies multiple documents of a
collection, the operation can interleave with other write operations on
that collection. See :method:`~db.collection.update()` for more
information regarding the behavior of the method.

For all available update operators, see the :manual:`Update Operators
</reference/operator/update>` reference page.
