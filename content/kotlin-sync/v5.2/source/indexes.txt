.. _kotlin-sync-indexes:
.. _kotlin-sync-work-with-indexes:

==============================
Indexes for Query Optimization
==============================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. facet::
   :name: genre
   :values: reference
 
.. meta::
   :description: Learn how to use indexes by using the MongoDB Kotlin Sync driver.
   :keywords: query, optimization, efficiency, usage example, code example

.. toctree::
   :titlesonly:
   :maxdepth: 1

   MongoDB Search and Vector Search Indexes </indexes/atlas-search-index>

Overview
--------

In this guide, you can learn how to use **indexes** with the {+driver-short+}.
Indexes can improve the efficiency of queries and add functionality to querying and
storing documents.

Without indexes, MongoDB must scan every document in a collection to find the
documents that match each query. These collection scans are slow and can negatively affect
the performance of your application. However, if an appropriate index exists for a query,
MongoDB can use the index to limit the documents it must inspect.

To learn about the criteria your query must meet to return results directly from an index,
see the :manual:`Covered Query </core/query-optimization/#covered-query>`
section in the {+mdb-server+} manual.

Operational Considerations
~~~~~~~~~~~~~~~~~~~~~~~~~~

To improve query performance, build indexes on fields that appear often in your
application's queries and operations that return sorted results. Each index that you add
consumes disk space and memory when active, so it might be necessary to track index memory
and disk usage for capacity planning. In addition, when a write operation updates an
indexed field, MongoDB also updates the related index.

Since MongoDB supports dynamic schemas, applications can query against fields whose names
cannot be known in advance or are arbitrary. :manual:`Wildcard indexes </core/index-wildcard/>`
help support these queries, but are not designed to replace workload-based
index planning.

For more information about designing your data model and choosing indexes
appropriate for your application, see the Server documentation on
:manual:`Indexing Strategies </applications/indexes>` and
:manual:`Data Modeling and Indexes </core/data-model-operations/#indexes>`.

Index Types
-----------

MongoDB provides several different index types to support querying
your data. You can create an index by calling the
``createIndex()`` method on a collection and passing an index definition as an argument.

The following sections describe the most common index types
and provide sample code for creating each index type.

.. note::
  
  The examples on this page use the ``sample_mflix.movies`` and ``sample_mflix.theaters`` collections
  from the :atlas:`Atlas sample datasets </sample-data>`. To learn how to create a
  free MongoDB Atlas cluster and load the sample datasets, see :ref:`kotlin-sync-get-started`.

To learn more about the different index types, see :manual:`Index Types </core/indexes/index-types/>`
in the {+mdb-server+} manual.

Single Field Index
~~~~~~~~~~~~~~~~~~

The following example creates an ascending index on the specified field:

.. literalinclude:: /includes/usage-examples/index-code-examples.kt
   :start-after: start-single-field
   :end-before: end-single-field
   :language: kotlin
   :copyable:
   :dedent:

To learn more about single field indexes, see :manual:`Single Field Indexes </core/indexes/index-types/index-single>`
in the {+mdb-server+} manual.

Compound Index
~~~~~~~~~~~~~~

The following example creates a compound index on the specified fields:

.. literalinclude:: /includes/usage-examples/index-code-examples.kt
   :start-after: start-compound
   :end-before: end-compound
   :language: kotlin
   :copyable:
   :dedent:

To learn more about compound indexes, see :manual:`Compound Indexes </core/indexes/index-types/index-compound>`
in the {+mdb-server+} manual.

Multikey Index
~~~~~~~~~~~~~~

The following example creates a multikey index on the specified array-valued field:

.. literalinclude:: /includes/usage-examples/index-code-examples.kt
   :start-after: start-multikey
   :end-before: end-multikey
   :language: kotlin
   :copyable:
   :dedent:

To learn more about multikey indexes, see :manual:`Multikey Indexes </core/indexes/index-types/index-multikey>`
in the {+mdb-server+} manual.

Clustered Index
~~~~~~~~~~~~~~~

The following example creates a new collection with a clustered index on the ``_id``
field:

.. literalinclude:: /includes/usage-examples/index-code-examples.kt
   :start-after: start-clustered
   :end-before: end-clustered
   :language: kotlin
   :copyable:
   :dedent:

To learn more about clustered collections and indexes, see :manual:`Clustered Collections </core/clustered-collections/>`
in the {+mdb-server+} manual.

Text Index
~~~~~~~~~~

The following example creates a text index on the specified string field:

.. literalinclude:: /includes/usage-examples/index-code-examples.kt
   :start-after: start-text
   :end-before: end-text
   :language: kotlin
   :copyable:
   :dedent:

Geospatial Index
~~~~~~~~~~~~~~~~

The following example creates a ``2dsphere`` index on the specified field that contains
GeoJSON objects:

.. literalinclude:: /includes/usage-examples/index-code-examples.kt
   :start-after: start-geo
   :end-before: end-geo
   :language: kotlin
   :copyable:
   :dedent:

To learn more about geospatial indexes, see :manual:`Geospatial Indexes </core/indexes/index-types/index-geospatial>`
in the {+mdb-server+} manual.

Unique Index
~~~~~~~~~~~~

The following example creates a unique index on the specified field:

.. literalinclude:: /includes/usage-examples/index-code-examples.kt
   :start-after: start-unique
   :end-before: end-unique
   :language: kotlin
   :copyable:
   :dedent:

To learn more about unique indexes, see :manual:`Unique Indexes </core/index-unique>`
in the {+mdb-server+} manual.

Wildcard Index
~~~~~~~~~~~~~~

The following example creates a wildcard index in the specified collection:

.. literalinclude:: /includes/usage-examples/index-code-examples.kt
   :start-after: start-wildcard
   :end-before: end-wildcard
   :language: kotlin
   :copyable:
   :dedent:

To learn more about wildcard indexes, see :manual:`Wildcard Indexes </core/indexes/index-types/index-wildcard/>`
in the {+mdb-server+} manual.

Delete an Index
---------------

You can delete indexes by using the ``dropIndex()`` method on a collection, as shown
in the following example:

.. literalinclude:: /includes/usage-examples/index-code-examples.kt
   :start-after: start-remove
   :end-before: end-remove
   :language: kotlin
   :copyable:
   :dedent:
