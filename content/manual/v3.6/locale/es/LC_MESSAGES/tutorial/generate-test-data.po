# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: 2013-12-16 22:36+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-manual/language/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# 620c1b8f85434bd3822c3aac5d57069b
#: ../source/tutorial/generate-test-data.txt:3
msgid "Generate Test Data"
msgstr ""

# b66aa054b2544e879681ec14c2209547
#: ../source/tutorial/generate-test-data.txt:7
msgid ""
"This tutorial describes how to quickly generate test data as you need to "
"test basic MongoDB operations."
msgstr ""

# e05b4e5233b746389c249decdb72a722
#: ../source/tutorial/generate-test-data.txt:11
msgid "Insert Multiple Documents Using a For Loop"
msgstr ""

# bf98eb4ab006498aba5a8c92ad527aed
#: ../source/tutorial/generate-test-data.txt:13
msgid ""
"You can add documents to a new or existing collection by using a JavaScript "
"``for`` loop run from the :program:`mongo` shell."
msgstr ""

# ebdad568f9eb4a269fee0dbbae0fd71f
#: ../source/tutorial/generate-test-data.txt:16
msgid ""
"From the :program:`mongo` shell, insert new documents into the ``testData`` "
"collection using the following ``for`` loop. If the ``testData`` collection "
"does not exist, MongoDB creates the collection implicitly."
msgstr ""

# 737f4ab57b4647b7a2ba4056ee2a87e2
#: ../source/tutorial/generate-test-data.txt:25
msgid "Use find() to query the collection:"
msgstr ""

# c6b0cd97d81d41369965c36ac0e5bc6f
#: ../source/tutorial/generate-test-data.txt:31
msgid ""
"The :program:`mongo` shell displays the first 20 documents in the "
"collection. Your :doc:`ObjectId </reference/object-id>` values will be "
"different:"
msgstr ""

# 9636c42bcc264d4eb7b4128c5d380a40
#: ../source/tutorial/generate-test-data.txt:60
msgid ""
"The :method:`~db.collection.find()` returns a cursor. To iterate the cursor "
"and return more documents use the ``it`` operation in the :program:`mongo` "
"shell. The :program:`mongo` shell will exhaust the cursor, and return the "
"following documents:"
msgstr ""

# 698e9e700fbf4c27a601232bc7624ee7
#: ../source/tutorial/generate-test-data.txt:74
msgid "Insert Multiple Documents with a ``mongo`` Shell Function"
msgstr ""

# c400acf17c664562879bc0443f4250c1
#: ../source/tutorial/generate-test-data.txt:76
msgid ""
"You can create a JavaScript function in your shell session to generate the "
"above data. The ``insertData()`` JavaScript function, shown here, creates "
"new data for use in testing or training by either creating a new collection "
"or appending data to an existing collection:"
msgstr ""

# 317dac0a02854f6994d7a952c7cf3c71
#: ../source/tutorial/generate-test-data.txt:95
msgid ""
"The ``insertData()`` function takes three parameters: a database, a new or "
"existing collection, and the number of documents to create. The function "
"creates documents with an ``x`` field that is set to an incremented integer,"
" as in the following example documents:"
msgstr ""

# 23ffd6f1ea2e42f49cea95fcd925892d
#: ../source/tutorial/generate-test-data.txt:106
msgid ""
"Store the function in your :ref:`.mongorc.js <mongo-mongorc-file>` file. The"
" :program:`mongo` shell loads the function for you every time you start a "
"session."
msgstr ""

# 54d701ef13bb42aea36c4010ba2773a5
#: ../source/tutorial/generate-test-data.txt:0
msgid "Example"
msgstr ""

# 6256e621dcde4ab4996071d77c337d41
#: ../source/tutorial/generate-test-data.txt:117
msgid ""
"This operation inserts 400 documents into the ``testData`` collection in the"
" ``test`` database. If the collection and database do not exist, MongoDB "
"creates them implicitly before inserting documents."
msgstr ""
