title: Start each member of the replica set with the appropriate options.
stepnum: 1
ref: start-mongod
pre: |
  For each member, start a :program:`mongod` and specify the replica set
  name through the :setting:`replSet` option. Specify any other parameters
  specific to your deployment. For replication-specific parameters, see
  :ref:`cli-mongod-replica-set` required by your deployment.

  .. include:: /includes/fact-unique-replica-set-names.rst
action:
  - pre: |
      The following example specifies the replica set name through the
      :option:`--replSet` command-line option:
    language: javascript
    code: |
      mongod --replSet "rs0"
  - pre: |
      The following example specifies the name through a configuration file:
    language: javascript
    code: |
      mongod --config $HOME/.mongodb/config
post: |
  In production deployments, you can configure a :term:`control script` to
  manage this process. Control scripts are beyond the scope of this document.
---
title: Open a :program:`mongo` shell and connect to one of the replica set members.
stepnum: 2
ref: open-shell
action:
  pre: |
    For example, to connect to a :program:`mongod` running on localhost on
    the default port of ``27017``, simply issue:
  language: javascript
  code: |
    mongo
---
title: Initiate the replica set.
stepnum: 3
ref: initiate-rs
action:
  pre: |
    Use :method:`rs.initiate()`:
  language: javascript
  code: |
    rs.initiate()
post: |
  MongoDB initiates a set that consists of the current member and that
  uses the default replica set configuration.
---
title: Verify the initial replica set configuration.
stepnum: 4
ref: verify-rsconf
action:
  - pre: |
      Use :method:`rs.conf()` to display the :doc:`replica set configuration
      object </reference/replica-configuration>`:
    language: javascript
    code: |
      rs.conf()
  - pre: |
      The replica set configuration object resembles the following:
    language: javascript
    code: |
      {
         "_id" : "rs0",
         "version" : 1,
         "members" : [
            {
               "_id" : 1,
               "host" : "mongodb0.example.net:27017"
            }
         ]
      }
---
title: Add the remaining members to the replica set.
stepnum: 5
ref: add-remaining-members
pre: |
  Add the remaining members with the :method:`rs.add()` method.
action:
  pre: |
    The following example adds two members:
  language: javascript
  code: |
      rs.add("mongodb1.example.net")
      rs.add("mongodb2.example.net")
post: |
  When complete, you have a fully functional replica set. The new replica
  set will elect a :term:`primary`.
---
title: Check the status of the replica set.
stepnum: 6
ref: check-status
action:
  pre: |
    Use the :method:`rs.status()` operation:
  language: javascript
  code: |
    rs.status()
...
