==================
cursor.addOption()
==================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. method:: cursor.addOption(flag)


   .. include:: /includes/fact-mongo-shell-method.rst


   .. include:: /includes/extracts/mongo-shell-deprecated-meta-operator-cursor-addOption.rst

   Adds ``OP_QUERY`` wire protocol flags, such as the ``tailable``
   flag, to change the behavior of queries.

   The :method:`cursor.addOption()` method has the following parameter:


   .. list-table::
      :header-rows: 1
      :widths: 20 20 80
   
      * - Parameter
   
        - Type
   
        - Description
   
      * - ``flag``
   
        - flag
   
        - ``OP_QUERY`` wire protocol flag. For the :binary:`~bin.mongo` shell,
          you can use the cursor flags listed below. For the driver-specific
          list, see your :driver:`driver documentation </>`.
          
          
   


.. _cursor-flags:

Flags
-----

The :binary:`~bin.mongo` shell provides several additional cursor flags to
modify the behavior of the cursor.

.. list-table::
   :header-rows: 1
   :widths: 30 70

   * - Flag
     - Description

   * - .. data:: DBQuery.Option.tailable
     - Sets the cursor not to close once the last data is
       received, allowing the query to continue returning data added
       after the initial results were exhausted.

   * - .. data:: DBQuery.Option.slaveOk
     - Allows querying of a replica slave.

   * - .. data:: DBQuery.Option.noTimeout
     - Prevents the server from timing out idle cursors.

   * - .. data:: DBQuery.Option.awaitData
     - For use with .. data:: DBQuery.Option.tailable; sets the cursor
       to block and await data for a while rather than returning no
       data. The cursor will return no data once the timeout has
       expired.

   * - .. data:: DBQuery.Option.exhaust
     - Sets the cursor to return all data returned by the
       query at once rather than splitting the results into batches.

   * - .. data:: DBQuery.Option.partial
     - Sets the cursor to return partial data from a query against a
       sharded cluster in which some shards do not respond rather than
       throwing an error.

Example
-------

The following example adds the ``DBQuery.Option.tailable`` flag and the
``DBQuery.Option.awaitData`` flag to ensure that the query returns a
:term:`tailable cursor`. The sequence creates a cursor that will wait for few
seconds after returning the full result set so that it can capture and
return additional data added during the query:

.. code-block:: javascript

   var t = db.myCappedCollection;
   var cursor = t.find().addOption(DBQuery.Option.tailable).
                         addOption(DBQuery.Option.awaitData)

.. warning::

   Adding incorrect wire protocol flags can cause problems and/or
   extra server load.
