ref: _keyfile-intro
content: |

   With :ref:`keyfile <internal-auth-keyfile>` authentication, each
   {{components}} in the {{deployment}} uses the contents of the keyfile as the
   shared password for authenticating other members in the deployment. Only
   {{components}} with the correct keyfile can join the {{deployment}}.

   The content of the keyfile must be between 6 and 1024 characters
   long and must be the same for all members of the {{deployment}}.

   .. note::

      .. include:: /includes/extracts/keyfile-file-permission.rst

   You can generate a keyfile using any method you choose. For example,
   the following operation uses ``openssl`` to generate a complex
   pseudo-random 1024 character string to use for a keyfile. It then
   uses ``chmod`` to change file permissions to provide read
   permissions for the file owner only:

---
ref: keyfile-intro-replica-set
source:
   file: extracts-keyfile-info.yaml
   ref: _keyfile-intro
replacement:
   deployment: replica set
   components: :binary:`~bin.mongod` instances
---
ref: keyfile-intro-sharded-cluster
source:
   file: extracts-keyfile-info.yaml
   ref: _keyfile-intro
replacement:
   deployment: sharded cluster
   components: :binary:`~bin.mongod` or :binary:`~bin.mongos` instances
---
ref: _keyfile-distribution
content: |

   Copy the keyfile to each server hosting the {{deployment}} members.
   Ensure that the user running the {{programs}} is the owner of the
   file and can access the keyfile.

   Avoid storing the keyfile on storage mediums that can be easily
   disconnected from the hardware hosting the {{programs}}, such as a
   USB drive or a network attached storage device.

---
ref:  keyfile-distribution-replica-set
source:
   file: extracts-keyfile-info.yaml
   ref: _keyfile-distribution
replacement:
   deployment: replica set
   programs: :binary:`~bin.mongod` instances
---
ref: keyfile-distribution-sharded-cluster
source:
   file: extracts-keyfile-info.yaml
   ref: _keyfile-distribution
replacement:
   deployment: sharded cluster
   programs: :binary:`~bin.mongod` or :binary:`~bin.mongos` instances
---
ref: keyfile-file-permission
content: |
  On UNIX systems, the keyfile must not have group or world
  permissions. On Windows systems, keyfile permissions are not checked.
...
