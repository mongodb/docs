.. _config-datalake:

=============================
Configure {+data-lake-short+}
=============================

.. default-domain:: mongodb

.. include:: /includes/fact-data-lake-beta.rst

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview 
--------

You can configure {+data-lake+} using the :ref:`datalake-configuration-file`. 
The configuration file defines mappings between your {+data-lake-stores+} 
and {+data-lake-short+}. To learn more about the configuration file including 
the configuration fields and file format, see 
:ref:`datalake-configuration-file`.

You can retrieve and update the {+data-lake-short+} configuration by 
connecting a :binary:`~bin.mongo` shell to the {+data-lake-short+}:

1. From the |service| UI, select :guilabel:`Data Lake` from the 
   left-hand navigation. 

#. Click :guilabel:`Connect` for the {+data-lake-short+} to
   which you want to connect.

#. Click :guilabel:`Connect with the Mongo Shell`.

#. Follow the instructions in the :guilabel:`Connect` modal. If you
   already have the :binary:`~bin.mongo` shell installed, ensure
   you are running at least the latest stable release of the 3.6 shell.

.. note::

   Any MongoDB user in the |service| project with the :authrole:`atlasAdmin` 
   role can retrieve and update the {+data-lake-short+} configuration.

.. _datalake-getstorageconfig:

Retrieve {+data-lake-short+} Configuration
------------------------------------------

Once connected to the {+data-lake-short+}, you can use the following
database commands to retrieve the {+data-lake-short+} configuration:

.. code-block:: javascript

   use admin
   db.runCommand( { "storageGetConfig" : 1 } )

The command returns the current {+data-lake-short+} configuration. For 
complete documentation on the configuration fields and file format,
see :ref:`datalake-configuration-format`.

.. _datalake-setstorageconfig:

Set or Update {+data-lake-short+} Configuration
-----------------------------------------------

Once connected to the {+data-lake-short+}, you can use the following
database commands to set or update the {+data-lake-short+} configuration:

.. code-block:: javascript

   use admin
   db.runCommand( { "storageSetConfig" : <config> } )

Replace ``<config>`` with the {+data-lake-short+} configuration
file. For complete documentation on the configuration fields and file 
format, see :ref:`datalake-configuration-format`.

.. _datalake-storagegenconfig:

Generate {+data-lake-short+} Configuration
------------------------------------------

You can run the ``storageGenerateConfig`` command to regenerate a 
{+data-lake-short+} :ref:`configuration <datalake-configuration-file>`. 
The command returns an automatically generated :ref:`configuration 
<datalake-configuration-format>`, which you can then modify and 
:ref:`upload <datalake-setstorageconfig>`. In the automatically 
generated configuration, {+data-lake-short+} regenerates a 
:ref:`database <datalake-databases-reference>` for each :ref:`store 
<datalake-stores-reference>`:

- The :datalakeconf:`databases.[n].name` will be the same as the 
  :datalakeconf:`stores.[n].name` that it maps to.
- Each database will contain up to 3 collections and a wildcard (``*``) 
  collection.

As a result, the :ref:`databases <datalake-databases-reference>` 
array in the generated configuration might be different from the 
:ref:`databases <datalake-databases-reference>` array in your existing 
configuration. 

.. note::

   You must have the ``storageSetConfig`` privilege to run the 
   ``storageGenerateConfig`` command. The :atlas:`atlasAdmin 
   <security-add-mongodb-users/#atlasAdmin>` role has the 
   ``storageSetConfig`` privilege by default.

To generate a {+data-lake-short+} configuration, connect to the {+data-lake-short+} 
and run the following database commands: 

.. code-block:: javascript 

   use admin 
   db.runCommand( { "storageGenerateConfig" : 1 } )

For complete documentation on the configuration fields and file format, see :ref:`datalake-configuration-format`. 


.. class:: hidden

   .. toctree::
      :titlesonly:

      /reference/config-files/data-lake-configuration
      /reference/examples/path-syntax-examples
      /config/manage-stores-cli
      /config/manage-dbs-cli
      /config/manage-collections-views-cli
      /config/update-region
