title: "Open the :guilabel:`Add New Database User` dialog."
level: 4
ref: go-users-view
content: |
   a. In the :guilabel:`Security` section of the left navigation, click
      :guilabel:`Database Access`. The :guilabel:`Database Users` tab
      displays.

   #. Click :icon-fa5:`plus` :guilabel:`Add New Database User`.
---
title: "Select an authentication method."
level: 4
ref: select-auth-method
content: |
  
  A project can have users with different authentication methods.

  You cannot change a user's authentication method after creating that
  user. To use an alternative authentication method, you must create a
  new user.

  .. list-table::
     :widths: 20 80
     :header-rows: 1

     * - Method

       - Description

     * - :guilabel:`Password Authentication`

       - :ref:`SCRAM <authentication-scram>` is MongoDB's default
         authentication method. SCRAM requires a password for each
         user. Select this authentication method by clicking
         :guilabel:`PASSWORD`.

     * - :guilabel:`X.509 Certificates`

       - :manual:`X.509 Certificates </core/security-x.509/>` allow for
         passwordless authentication by using a trusted certificate.
         Select this authentication method by clicking
         :guilabel:`CERTIFICATE`. To download the certificate upon
         saving, you must provide a certificate expiration date and
         check :guilabel:`Download certificate when user is added`.

         X.509 certificates expire and are invalid after the
         certificate expiration date you set. A user will not be able 
         to log in with an expired X.509 certificate and must be issued 
         a new certificate.

         To help manage this, |service| automatically creates a
         project-level alert when you create a new user with X.509
         authentication enabled. This alert sends a notification 30 days
         before that user's latest certificate expires, repeating every
         24 hours. You can view and edit this alert from |service|'s
         :guilabel:`Alert Settings` page. For more information on
         configuring alerts, see
         :doc:`Configure Alert Settings </configure-alerts>`.

         .. important::

            If a user loses their certificate, they will need a new
            certificate to be generated for them before they can log in
            again.

         .. important::
            
            You cannot revoke X.509 certificates. To revoke an X.509
            certificate-authenticated user's access to your project,
            you must delete that user.

         .. include:: /includes/fact-atlas-free-tier-limits.rst

         If you prefer to manage your own X.509 certificates, you 
         can upload a PEM-encoded certificate authority through
         :ref:`Self-Managed X.509 Certificates <self-managed-x509>`.
---
title: "Enter user information."
level: 4
ref: enter-user-info
content: |
  .. list-table::
     :widths: 20 80
     :header-rows: 1

     * - Field

       - Description

     * - :guilabel:`User Name`

       - The user's login name.

         SCRAM-authenticated users are associated with the ``admin`` 
         database; i.e. their
         :ref:`authentication database <user-authentication-database>`
         is ``admin``.

         X.509-authenticated users are associated with the 
         ``$external`` database; i.e. their authentication database 
         is ``$external``.
         
         To access MongoDB, a user provides a username
         and the name of the authentication database, as well as a
         password or X.509 certificate. The authentication database
         does not determine the user's roles. You can assign a user
         different roles in different database namespaces.

         .. example::

            You can create a user to have the ``readWrite`` role on
            the ``test`` database but only the ``read`` role on the
            ``production`` database. For a SCRAM-authenticated user,
            the authentication database would still be ``admin``.
---
title: Assign user privileges.
ref: assign-user-privileges
content: |
  You can assign privileges to the new user in one of the following ways:

  - Select :atlasrole:`Atlas admin` from the :guilabel:`Database User
    Privileges` dropdown menu, which provides the user with
    :atlasrole:`readWriteAnyDatabase` as well as other administrative
    privileges.

  - Select :atlasrole:`Read and write to any database`, which
    allows the user to read from and write to any database.

  - Select :atlasrole:`Only read any database`, which allows
    the user to read from any database.

  - If you have any :ref:`custom roles <mongodb-roles>` defined, you can select
    :guilabel:`Select pre-defined custom roles`, then choose a role from the
    :guilabel:`Pre-defined Custom Role` dropdown menu. To learn more about
    custom roles, see :ref:`mongodb-roles`.

  - Select :guilabel:`Grant specific privileges` to assign the user privileges
    on individual databases and collections.

    .. note::

       .. include:: /includes/fact-read-read-write-actions.rst


    For more information on authorization, see :manual:`Role-Based
    Access Control </core/authorization>` and :manual:`Built-in
    Roles </core/security-built-in-roles>` in the MongoDB manual.
---
title: (Optional) Save as temporary user.
ref: save-temp-user
content: |
  Toggle the :guilabel:`Temporary User` switch to :guilabel:`On` and choose
  a time after which |service| can delete the user from the
  :guilabel:`Temporary User Duration` dropdown. You can select one of the
  following time periods for the user to exist:

  - 6 hours
  - 1 day
  - 1 week

  In the :guilabel:`Database Users` tab, temporary users display
  the time remaining until |service| will delete the user. Once
  |service| deletes the user, any client or application that uses
  the temporary user's credententials loses access to the cluster.
---
title: Click :guilabel:`Add User`.
ref: save-user
...
