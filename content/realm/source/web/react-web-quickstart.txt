.. _realm-react-quick-start:

================================
Quick Start with React - Web SDK
================================

This guide shows you how to set up a basic React web application that connects
to your Atlas App Services backend and authenticates an anonymous user.

We put together a finished version of this quick start on CodeSandbox. All you
have to do is paste in your Realm App ID to connect to your app.

- `JavaScript CodeSandbox <https://codesandbox.io/s/realm-web-react-quickstart-rd8j2?file=/src/App.js>`__
- `TypeScript CodeSandbox <https://codesandbox.io/s/realm-web-react-ts-quickstart-wb0f4?file=/src/App.tsx>`__

Prerequisites
-------------

- This guide assumes that you have already :ref:`created an Atlas App Services
  backend <create-a-realm-app>` and :ref:`enabled anonymous
  authentication <anonymous-authentication>`.

- To create and run this application you will need :npm:`npm <>` installed on
  your machine.

- The `create-react-app <https://create-react-app.dev/docs/getting-started/>`__
  documentation recommends that you install :npm:`npx <package/npx>` to run
  ``create-react-app`` rather than using a version that's installed on your
  machine.

Procedure
---------

.. procedure::

   .. step:: Set up a New React App

      Generate a new application template using `create-react-app
      <https://create-react-app.dev/>`__:

      .. tabs-realm-languages::

         .. tab:: JavaScript
            :tabid: javascript

            .. code-block:: shell

               npx create-react-app realm-web-react-quickstart

         .. tab:: TypeScript
            :tabid: typescript

            .. code-block:: shell

               npx create-react-app realm-web-react-quickstart --template=typescript

      Navigate into the new app and install the ``realm-web`` package:

      .. code-block:: shell

         cd realm-web-react-quickstart
         npm install --save realm-web


   .. step:: Import Dependencies & Connect to Your Realm App

      The Realm Web SDK contains everything you need to connect to a MongoDB Realm
      application from a browser application. In ``/src/App.js``, add the following
      code to import the Web SDK.

      .. literalinclude:: /examples/generated/web/quick-start.test.snippet.import-realm.js
         :language: javascript

      Now uses the imported package to instantiate a new ``Realm.App``.
      The ``app`` object represents your Realm app. You'll use it to authenticate
      and manage the users that interact with your app.

      .. literalinclude:: /examples/generated/web/quick-start.test.snippet.initialize-realm-app.js
        :language: javascript


   .. step:: Create React Components

      In ``/src/App.js``, add the following components that display details about a
      given user and allow users to log in.

      .. tabs-realm-languages::

         .. tab:: JavaScript
            :tabid: javascript

            .. literalinclude:: /examples/generated/web/react-quick-start.test.snippet.basic-user-management.jsx
               :language: javascript

         .. tab:: TypeScript
            :tabid: typescript

            .. literalinclude:: /examples/generated/web/react-quick-start.test.snippet.basic-user-management.tsx
               :language: typescript


   .. step:: Create and Export the App Component

      In ``/src/App.js``, overwrite the existing ``App`` component with the following
      component that stores the current user in local state and conditionally
      renders either details about the current user or a login screen if no user is
      currently authenticated.

      .. tabs-realm-languages::

         .. tab:: JavaScript
            :tabid: javascript

            .. literalinclude:: /examples/generated/web/react-quick-start.test.snippet.create-export-app.jsx
               :language: javascript

         .. tab:: TypeScript
            :tabid: typescript

            .. literalinclude:: /examples/generated/web/react-quick-start.test.snippet.create-export-app.tsx
               :language: typescript


   .. step:: Run the App

      You're now ready to connect to your Realm app and log in! Make sure you've
      saved your changes to ``/src/App.js`` and then run the following command from
      the project root:

      .. code-block:: shell

         yarn start

      This starts a local web server that serves your application. If successful,
      you should see the following output in your shell:

      .. code-block:: shell

         Compiled successfully!

         You can now view realm-quickstart-web in the browser.

           Local:  http://localhost:3000

      Open http://localhost:3000 in your browser and test that you can successfully
      log in as an anonymous user.

Summary
-------

If you have successfully completed this guide, you have created a React
application that can connect to an App Services backend and authenticates an
anonymous user.
