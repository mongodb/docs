===============
Getting Started
===============

.. default-domain:: mongodb

Introduction
------------

|mms| is a service that builds, manages, monitors, and backs up MongoDB
deployments. You can get started with |mms| in minutes by going to
`https://mms.mongodb.com <https://mms.mongodb.com>`_ and selecting
:guilabel:`Start for Free`. |mms| Onboarding walks you through
registration and the setup of your first deployment.

During onboarding, |mms| provides several options for where to deploy
MongoDB and what kind of configuration to deploy. The choices you make for
your first deployment do not limit your choices for future deployments.

At any time, you can click :guilabel:`Advanced Setup` in the upper right
corner if you are already familiar with |mms| and wish to deploy an
advanced configuration, such as a replica set with an arbiter. If you
choose :guilabel:`Advanced Setup`, |mms| takes you to the
:guilabel:`Deployment` page from which you use the usual procedures to
:doc:`/tutorial/nav/management`.

Get Started
-----------

.. include:: /includes/steps/getting-started.rst

Next Steps
----------

- Access your MongoDB deployment to begin building databases.

- Add servers to your deployment.

- Deploy additional MongoDB replica sets, clusters, or standalones.

.. Connect to your MongoDB deployment.

   To connect to the MongoDB deployment, retrieve the hostname and port
   information from the |mms| console and then use a MongoDB client, such
   as the :program:`mongo` shell or a :manual:`driver
   </applications/drivers>`, to connect to MongoDB.

   - Retrieve the hostname and port of your MongoDB deployment.

     In |mms|, select the :guilabel:`Deployment` tab and then the
     :guilabel:`Deployment` page. Click a host's ellipses icon and select
     :guilabel:`Connect to this instance`. |mms| displays host properties,
     including the hostname and port. For a :term:`replica set`, click the
     ellipses icon for the host listed as ``primary``. For a
     :term:`cluster <sharded cluster>`, click the ellipses icon for the
     deployment listed as ``mongos``.

   - Connect through the :program:`mongo` shell.

     At the system shell, run the :program:`mongo` executable and specify
     the host and port of the deployment. Issue a command in the following
     form:

     mongo --username <user> --password <pass> --host <host> --port <port>

   - Connect with a driver.

     Use your :manual:`driver </applications/drivers>` to create a
     :manual:`/reference/connection-string` that specifies the hostname
     and port of the deployment. The connection string for your driver
     will resemble the following:

     mongodb://[<username>:<password>@]hostname0<:port>[,hostname1:<port1>][,hostname2:<port2>][...][,hostnameN:<portN>]

     If you specify a seed list of all hosts in a replica set in the
     connection string, your driver will automatically connect to the
     :term:`primary`.

     For standalone deployments, you will only specify a single host. For
     sharded clusters, only specify a single :program:`mongos` instance.
