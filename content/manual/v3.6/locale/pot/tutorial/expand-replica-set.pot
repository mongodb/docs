# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/expand-replica-set.txt:3
msgid "Add Members to a Replica Set"
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:14
msgid "Overview"
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:16
msgid "This tutorial explains how to add an additional member to an existing :term:`replica set`. For background on replication deployment patterns, see the :doc:`/core/replica-set-architectures` document."
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:21
msgid "Maximum Voting Members"
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:23
msgid "A replica set can have a maximum of seven :ref:`voting members <replica-set-election-internals>`. To add a member to a replica set that already has seven voting members, you must either add the member as a :ref:`non-voting member <replica-set-non-voting-members>` or remove a vote from an :data:`existing member <replSetGetConfig.members[n].votes>`."
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:31
msgid "Init Scripts"
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:33
msgid "In production deployments you can configure a :term:`init script` to manage member processes."
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:37
msgid "Existing Members"
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:39
msgid "You can use these procedures to add new members to an existing set. You can also use the same procedure to \"re-add\" a removed member. If the removed member's data is still relatively recent, it can recover and catch up easily."
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:46
msgid "Data Files"
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:48
msgid "If you have a backup or snapshot of an existing member, you can move the data files (e.g.  the :setting:`~storage.dbPath` directory) to a new system and use them to quickly initiate a new member. The files must be:"
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:52
msgid "A valid copy of the data files from a member of the same replica set. See :doc:`/tutorial/backup-with-filesystem-snapshots` document for more information."
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:56
msgid "Always use filesystem snapshots to create a copy of a member of the existing replica set. **Do not** use :binary:`~bin.mongodump` and :binary:`~bin.mongorestore` to seed a new replica set member."
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:61
msgid "More recent than the oldest operation in the :term:`primary's <primary>` :term:`oplog`. The new member must be able to become current by applying operations from the primary's oplog."
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:66
msgid "IP Binding"
msgstr ""

#: ../source/includes/fact-default-bind-ip.rst:1
msgid "Starting in MongoDB 3.6, MongoDB binaries, :binary:`~bin.mongod` and :binary:`~bin.mongos`, bind to localhost (``127.0.0.1``) by default. If the :setting:`net.ipv6` configuration file setting or the ``--ipv6`` command line option is set for the binary, the binary additionally binds to the IPv6 address ``::1``."
msgstr ""

#: ../source/includes/fact-default-bind-ip.rst:7
msgid "Previously, starting from MongoDB 2.6, only the binaries from the official MongoDB RPM (Red Hat, CentOS, Fedora Linux, and derivatives) and DEB (Debian, Ubuntu, and derivatives) packages bind to localhost by default."
msgstr ""

#: ../source/includes/fact-default-bind-ip.rst:12
msgid "When bound only to the localhost, these MongoDB 3.6 binaries can only accept connections from clients (including the :binary:`~bin.mongo` shell, other members in your deployment for replica sets and sharded clusters) that are running on the same machine. Remote clients cannot connect to the binaries bound only to localhost."
msgstr ""

#: ../source/includes/fact-default-bind-ip.rst:18
msgid "To override and bind to other ip addresses, you can use the :setting:`net.bindIp` configuration file setting or the ``--bind_ip`` command-line option to specify a list of ip addresses."
msgstr ""

#: ../source/includes/warning-bind-ip-security-considerations.rst:3
#: ../source/includes/warning-bind-ip-security-considerations.rst:3
msgid "Before binding to a non-localhost (e.g. publicly accessible) IP address, ensure you have secured your cluster from unauthorized access. For a complete list of security recommendations, see :doc:`/administration/security-checklist`. At minimum, consider :ref:`enabling authentication <checklist-auth>` and :doc:`hardening network infrastructure </core/security-network>`."
msgstr ""

#: ../source/includes/fact-default-bind-ip.rst:25
msgid "For example, the following :binary:`~bin.mongod` instance binds to both the localhost and the sample ip address ``198.51.100.1``:"
msgstr ""

#: ../source/includes/fact-default-bind-ip.rst:32
msgid "In order to connect to this instance, remote clients must specify the ip address ``198.51.100.1`` or the hostname associated with the ip address:"
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:71
msgid "Requirements"
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:73
msgid "An active replica set."
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:75
msgid "A new MongoDB system capable of supporting your data set, accessible by the active replica set through the network."
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:78
msgid "Otherwise, use the MongoDB :ref:`installation tutorial <tutorials-installation>` and the :doc:`/tutorial/deploy-replica-set` tutorials."
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:83
msgid "Procedures"
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:86
msgid "Prepare the Data Directory"
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:88
msgid "Before adding a new member to an existing :term:`replica set`, prepare the new member's :term:`data directory <dbpath>` using one of the following strategies:"
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:92
msgid "Make sure the new member's data directory *does not* contain data. The new member will copy the data from an existing member."
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:95
msgid "If the new member is in a :term:`recovering` state, it must exit and become a :term:`secondary` before MongoDB can copy all data as part of the replication process. This process takes time but does not require administrator intervention."
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:100
msgid "Manually copy the data directory from an existing member. The new member becomes a secondary member and will catch up to the current state of the replica set. Copying the data over may shorten the amount of time for the new member to become current."
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:105
msgid "Ensure that you can copy the data directory to the new member and begin replication within the :ref:`window allowed by the oplog <replica-set-oplog-sizing>`. Otherwise, the new instance will have to perform an initial sync, which completely resynchronizes the data, as described in :doc:`/tutorial/resync-replica-set-member`."
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:111
msgid "Use :method:`rs.printReplicationInfo()` to check the current state of replica set members with regards to the oplog."
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:114
msgid "For background on replication deployment patterns, see the :doc:`/core/replica-set-architectures` document."
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:120
msgid "Add a Member to an Existing Replica Set"
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:122
msgid "Start the new :binary:`~bin.mongod` instance. Specify the data directory and the replica set name. The following example specifies the ``/srv/mongodb/db0`` data directory and the ``rs0`` replica set:"
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:132
msgid "For more information on configuration options, see the :binary:`~bin.mongod` manual page."
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:137
msgid "You can specify the data directory, replica set name, and the ip binding in the ``mongod.conf`` :doc:`configuration file </reference/configuration-options>`, and start the :binary:`~bin.mongod` with the following command:"
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:146
msgid "Connect to the replica set's primary."
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:148
msgid "You can only add members while connected to the primary. If you do not know which member is the primary, log into any member of the replica set and issue the :method:`db.isMaster()` command."
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:152
msgid "Use :method:`rs.add()` to add the new member to the replica set. Pass the :rsconf:`member configuration document <members>` to the method.  For example, to add a member at host ``mongodb3.example.net``, issue the following command:"
msgstr ""

#: ../source/includes/tip-repl-set-add-members.rst:1
msgid "When a newly added secondary has its :rsconf:`~members[n].votes` and :rsconf:`~members[n].priority` settings greater than zero, during its initial sync, the secondary still counts as a voting member even though it cannot serve reads nor become primary because its data is not yet consistent."
msgstr ""

#: ../source/includes/tip-repl-set-add-members.rst:7
msgid "This can lead to a case where a majority of the voting members are online but no primary can be elected. To avoid such situations, consider adding the new secondary initially with :rsconf:`priority :0 <members[n].priority>` and :rsconf:`votes :0 <members[n].votes>`. Then, once the member has transitioned into :replstate:`SECONDARY` state, use :method:`rs.reconfig()` to update its priority and votes."
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:165
msgid "Ensure that the new member has reached :replstate:`SECONDARY` state. To check the state of the replica set members, run :method:`rs.status()`:"
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:174
msgid "Once the newly added member has transitioned into :replstate:`SECONDARY` state, use :method:`rs.reconfig()` to update the newly added member's :rsconf:`~members[n].priority` and :rsconf:`~members[n].votes` if needed."
msgstr ""

#: ../source/tutorial/expand-replica-set.txt:179
msgid "For example, if :method:`rs.conf()` returns the configuration document for ``mongodb3.example.net:27017`` as the fifth element in the :rsconf:`members` array, to update its priority and votes to ``1``, use the following sequence of operations:"
msgstr ""

#: ../source/includes/warning-rs-reconfig.rst:3
msgid "The :method:`rs.reconfig()` shell method can force the current primary to step down, which causes an :ref:`election <replica-set-elections>`. When the primary steps down, the :binary:`~bin.mongod` closes all client connections. While this typically takes 10-20 seconds, try to make these changes during scheduled maintenance periods."
msgstr ""

#: ../source/includes/warning-mixed-version-rs-config.rst:1
msgid "Avoid reconfiguring replica sets that contain members of different MongoDB versions as validation rules may differ across MongoDB versions."
msgstr ""

