.. _security-user-actions:

=================
Privilege Actions
=================

.. versionadded:: 2.5.3

.. default-domain:: mongodb

.. todo: Decide how to organize this section. Tables?
         Decide how to define the actions.

Privilege actions define the operations a user can perform on a :ref:`resource
<resource-document>`. A MongoDB :ref:`privilege <privileges>` comprises a
:ref:`resource <resource-document>` and the permitted actions. This page lists
available actions grouped by common purpose.

Client Access
-------------

.. authaction:: checkShardingIndex

   Provides access to the internal :dbcommand:`checkShardingIndex` command.

.. authaction:: collMod

   Provides access to the :dbcommand:`collMod` command.

.. authaction:: collStats

   Provides access to the :dbcommand:`collStats` command.

.. authaction:: compact

   Provides access to the :dbcommand:`compact` command.

.. authaction:: convertToCapped

   Provides access to the :dbcommand:`convertToCapped` command.

.. authaction:: createCollection

   Provides access to the :method:`db.createCollection` method

.. authaction:: createIndex

   Provides access to the :method:`db.collection.createIndex` method.

.. authaction:: dropCollection

   Provides access to the :method:`db.collection.drop` method.

.. authaction:: dropIndex

   Provides access to the :dbcommand:`dropIndexes` command.

.. authaction:: emptycapped

   Provides access to the :dbcommand:`emptycapped` command.

.. authaction:: enableSharding

   Provides access to the :dbcommand:`enableSharding` command.

.. authaction:: find

   Provides access to the :method:`db.collection.find` method.

.. authaction:: findAndModify

   Provides access to the :dbcommand:`findAndModify` command.

.. authaction:: getShardVersion

   Provides access to the internal :dbcommand:`getShardVersion` command.

.. authaction:: indexStats

   Provides access to the :dbcommand:`indexStats` command.

.. authaction:: insert

   Provides access to the :dbcommand:`insert` command.

.. authaction:: killCursors

   .. todo: definition needed

.. authaction:: mapReduce

   Provides access to the :dbcommand:`mapReduce` command.

.. authaction:: reIndex

   Provides access to the :dbcommand:`reIndex` command.

.. authaction:: renameCollectionSameDB

   Allows the user to rename collections on the current database using the
   :dbcommand:`renameCollection` command.

   .. Verify and add:
      To perform rename collections across databases, a user must have
      :authrole:`readWrite` on the target and either (:authrole:`readWrite` or
      (:authrole:`read` and :authrole:`dbAdmin`)) on the source.

.. authaction:: remove

   Provides access to the :method:`db.collection.remove` method.

.. authaction:: shardCollection

   Provides access to the :dbcommand:`shardCollection` command.

.. authaction:: splitChunk

   Provides access to the internal :dbcommand:`splitChunk` command.

.. authaction:: splitVector

   Provides access to the internal :dbcommand:`splitVector` command.

.. authaction:: storageDetails

   .. todo: definition needed

.. authaction:: update

   Provides access to the :dbcommand:`update` command.

.. authaction:: validate

   Provides access to the :dbcommand:`validate` command.

Database Management
-------------------

.. authaction:: changeCustomData

   The user can change the custom information of any user in the given
   database. MongoDB stores custom information in the ``customData`` field of
   the documents in :data:`admin.system.users` collection.

.. authaction:: changeOwnCustomData

   Users with this action can change their own custom information, as
   stored in the ``customData`` field of documents in the :data:`admin.system.users`
   collection. Grant :authaction:`changeOwnCustomData` on the ``cluster``
   resource.

.. authaction:: changeOwnPassword

   Users with this action can change their own passwords.
   Grant :authaction:`changeOwnPassword` on the ``cluster`` resource.

.. authaction:: changePassword

   The user can change the password of any user in the given database.

.. authaction:: clean

   Provides access to the internal :dbcommand:`clean` command.

.. authaction:: clone

   Provides access to the :dbcommand:`clone` command.

.. authaction:: createRole

   The user can create new roles in the given database.

.. authaction:: createUser

   The user can create new users in the given database.

.. authaction:: dbHash

   Provides access to the internal :dbcommand:`dbHash` command.

.. authaction:: dbStats

   Provides access to the :dbcommand:`dbStats` command.

.. authaction:: dropDatabase

   Provides access to the :dbcommand:`dropDatabase` command.

.. authaction:: dropRole

   The user can delete any role from the given database.

.. authaction:: dropUser

   The user can remove any user from the given database.

.. authaction:: enableProfiler

   .. The user can set the database profiling level ???

.. authaction:: grantRole

   The user can grant any role in the database to any user from any
   database in the system.

.. authaction:: repairDatabase

   Provides access to the :dbcommand:`repairDatabase` command.

.. authaction:: revokeRole

   The user can remove any role from any user from any database in the
   system.

.. authaction:: updateUser

   Provides access to the :dbcommand:`updateUser` command.

.. authaction:: viewRole

   The user can view information about any role in the given database.

.. authaction:: viewUser

   The user can view the information of any user in the given database.

Cluster Management
------------------

.. authaction:: _migrateClone

   Provides access to the internal :dbcommand:`_migrateClone` command.

.. authaction:: _recvChunkAbort

   Provides access to the internal :dbcommand:`_recvChunkAbort` command.

.. authaction:: _recvChunkCommit

   Provides access to the internal :dbcommand:`_recvChunkCommit` command.

.. authaction:: _recvChunkStart

   Provides access to the internal :dbcommand:`_recvChunkStart` command.

.. authaction:: _recvChunkStatus

   Provides access to the internal :dbcommand:`_recvChunkStatus` command.

.. authaction:: _transferMods

   Provides access to the internal :dbcommand:`_transferMods` command.

.. authaction:: addShard

   Provides access to the :dbcommand:`addShard` command.

.. authaction:: applicationMessage

   .. todo: definition needed

.. authaction:: authSchemaUpgrade

   .. todo: definition needed

.. authaction:: cleanupOrphaned

   Provides access to the :dbcommand:`cleanupOrphaned` command.

.. authaction:: closeAllDatabases

   Provides access to the internal :dbcommand:`closeAllDatabases` command.

.. authaction:: connPoolStats

   Provides access to the internal :dbcommand:`connPoolStats` command.

.. authaction:: connPoolSync

   Provides access to the internal :dbcommand:`connPoolSync` command.

.. authaction:: cpuProfiler

   .. todo: definition needed

.. authaction:: cursorInfo

   Provides access to the :dbcommand:`cursorInfo` command.

.. authaction:: diagLogging

   Provides access to the internal :dbcommand:`diagLogging` command.

.. authaction:: flushRouterConfig

   Provides access to the :dbcommand:`flushRouterConfig` command.

.. authaction:: fsync

   Provides access to the :dbcommand:`fsync` command.

.. authaction:: getCmdLineOpts

   Provides access to the :dbcommand:`getCmdLineOpts` command.

.. authaction:: getLog

   Provides access to the :dbcommand:`getLog` command.

.. authaction:: getParameter

   Provides access to the :dbcommand:`getParameter` command.

.. authaction:: getShardMap

   Provides access to the internal :dbcommand:`getShardMap` command.

.. authaction:: handshake

   Provides access to the internal :dbcommand:`handshake` command.

.. authaction:: inprog

   .. todo: definition needed

.. authaction:: invalidateUserCache

   .. todo: definition needed

.. authaction:: killop

   Provides access to the :method:`db.killOp` method.

.. authaction:: listDatabases

   Provides access to the :dbcommand:`listDatabases` command.

.. authaction:: listShards

   Provides access to the :dbcommand:`listShards` command.

.. authaction:: logRotate

   Provides access to the :dbcommand:`logRotate` command.

.. authaction:: mapreduceShardedfinish

   Provides access to the :dbcommand:`mapreduce.shardedfinish` command.

.. authaction:: moveChunk

   Provides access to the :dbcommand:`moveChunk` command.

.. authaction:: netstat

   Provides access to the internal :dbcommand:`netstat` command.

.. authaction:: removeShard

   Provides access to the :dbcommand:`removeShard` command.

.. authaction:: replSetConfigure

   .. todo: definition needed

.. authaction:: replSetElect

   Provides access to the internal :dbcommand:`replSetElect` command.

.. authaction:: replSetFresh

   Provides access to the internal :dbcommand:`replSetFresh` command.

.. authaction:: replSetGetStatus

   Provides access to the :dbcommand:`replSetGetStatus` command.

.. authaction:: replSetHeartbeat

   Provides access to the internal :dbcommand:`replSetHeartbeat` command.

.. authaction:: replSetMaintenance

   Provides access to the :dbcommand:`replSetMaintenance` command.

.. authaction:: replSetStateChange

   .. todo: definition needed

.. authaction:: resync

   Provides access to the :dbcommand:`resync` command.

.. authaction:: serverStatus

   Provides access to the :dbcommand:`serverStatus` command.

.. authaction:: setParameter

   Provides access to the :dbcommand:`setParameter` command.

.. authaction:: setShardVersion

   Provides access to the internal :dbcommand:`setShardVersion` command.

.. authaction:: shardingState

   Provides access to the :dbcommand:`shardingState` command.

.. authaction:: shutdown

   Provides access to the :dbcommand:`shutdown` command.

.. authaction:: top

   Provides access to the :dbcommand:`top` command.

.. authaction:: touch

   Provides access to the :dbcommand:`touch` command.

.. authaction:: unlock

   Provides access to the :method:`db.fsyncUnlock` method.

.. authaction:: unsetSharding

   Provides access to the internal :dbcommand:`unsetSharding` command.

.. authaction:: writeBackListen

   Provides access to the internal :dbcommand:`writebacklisten` command.

.. authaction:: writeBacksQueued

   Provides access to the internal :dbcommand:`writeBacksQueued` command.

Special Actions
----------------

.. authaction:: anyResource

   .. todo: definition needed

.. authaction:: anyAction

   .. todo: definition needed
