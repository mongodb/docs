.. _8.0-upgrade-replica-set:

============================
Upgrade a Replica Set to 8.0
============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. include:: /includes/8.0-upgrade-replacements.rst

Familiarize yourself with the content of this document, including
thoroughly reviewing the prerequisites, prior to upgrading to MongoDB
8.0.

The following steps outline the procedure to upgrade a
:binary:`~bin.mongod` that is a replica set member from version
|oldversion| to |newversion|.

.. include:: /includes/upgrade-guidance-checklists.rst

Prerequisites
-------------

All Members Version
~~~~~~~~~~~~~~~~~~~

All replica set members must be running version |oldversion|. To
upgrade a replica set from |olderseries| and earlier, *first*
:ref:`upgrade all members of the replica set to the latest
7.0-series release <7.0-upgrade-replica-set>`, and then follow the procedure to 
upgrade from MongoDB |oldversion| to |newversion|.

Feature Compatibility Version
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The |oldversion| replica set must have
``featureCompatibilityVersion`` set to |oldfcv|.

To ensure that all members of the replica set have
``featureCompatibilityVersion`` set to |oldfcv|, connect to each
replica set member and check the ``featureCompatibilityVersion``:

.. code-block:: javascript

   db.adminCommand( { getParameter: 1, featureCompatibilityVersion: 1 } )

All members should return a result that includes
``"featureCompatibilityVersion" : { "version" : "7.0" }``.

To set or update ``featureCompatibilityVersion``, run the
following command on the primary. A majority of the data-bearing
members must be available:

.. code-block:: javascript

   db.adminCommand( { setFeatureCompatibilityVersion: "7.0" } )

For more information, see
:dbcommand:`setFeatureCompatibilityVersion`.

Replica Set Member State
~~~~~~~~~~~~~~~~~~~~~~~~

Ensure that no replica set member is in the :replstate:`ROLLBACK` or
:replstate:`RECOVERING` state by issuing the 
:dbcommand:`replSetGetStatus` command:

.. code-block:: javascript

   db.adminCommand( { replSetGetStatus: 1 } )


Download |newversion| Binaries
------------------------------

Use a Package Manager
~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-upgrade-with-package-mgr.rst

Manually
~~~~~~~~

If you have not installed MongoDB using a package manager, you can
manually download the MongoDB binaries from the `MongoDB Download
Center <https://www.mongodb.com/try/download?tck=docs_server>`_.

See |installationdoc| for more information.

Upgrade Procedure
-----------------

You can upgrade from MongoDB |oldversion| to |newversion| using a
"rolling" upgrade to minimize downtime by upgrading the members
individually while the other members are available.

.. procedure::
   :style: normal

   .. step:: Shut down the replica set member.

      To shut down the :binary:`~bin.mongod` process, use 
      :binary:`~bin.mongosh` to connect to the replica set member and 
      run the following command:

      .. code-block:: javascript

         db.adminCommand( { shutdown: 1 } )

   .. step:: Upgrade secondary members of the replica set.  

      .. _8.0-upgrade-rs-secondaries:

      Upgrade the :ref:`secondary <replica-set-secondary-members>`             
      members of the replica set one at a time:                                

      #. Replace the |oldversion| binary with the |newversion| binary.                                  

      #. Restart the member. 

   .. step:: Step down the replica set primary.

      .. _8.0-upgrade-rs-step-down-primary:

      Connect :binary:`~bin.mongosh` to the primary and use                    
      :method:`rs.stepDown()` to step down the primary and force an            
      election of a new primary. 

   .. step:: Upgrade the primary. 

      .. _8.0-upgrade-rs-primary:

      When :method:`rs.status()` shows that the primary has stepped down 
      and another member has assumed ``PRIMARY`` state, upgrade the 
      stepped-down primary:        

      #. Shut down the stepped-down primary and replace the                   
         :binary:`~bin.mongod` binary with the |newversion| binary.           

      #. Restart the member. 

   .. step:: Enable backwards-incompatible |newversion| features. 

      .. _8.0-upgrade-enable-features-primary:

      .. include:: /includes/upgrade-enable-features.rst                      

      .. tip::                                                                

         .. include:: /includes/featureCompatibility-caveat.rst

      .. tip::                              

         Ensure that no initial sync is in progress. Running               
         :dbcommand:`setFeatureCompatibilityVersion` command while an 
         initial sync is in progress will cause the initial sync to 
         restart.       

      On the primary, run the :dbcommand:`setFeatureCompatibilityVersion` 
      command in the ``admin`` database:

      .. code-block:: javascript

         db.adminCommand( { setFeatureCompatibilityVersion: "8.0" } )

      Setting :ref:`featureCompatibilityVersion (FCV) : "8.0" <set-fcv>`
      implicitly performs a :dbcommand:`replSetReconfig` to add the
      :rsconf:`term` field to the configuration document and blocks
      until the new configuration propagates to a majority of replica
      set members.

      This command must perform writes to an internal system
      collection. If for any reason the command does not complete
      successfully, you can safely retry the command on the primary as
      the operation is idempotent.

Additional Upgrade Procedures
-----------------------------

- To upgrade a standalone, see :ref:`8.0-upgrade-standalone`.
- To upgrade a sharded cluster, see :ref:`8.0-upgrade-sharded-cluster`.
