ref: _tools-performance-considerations
content: |
  Because {{out_tool}} and {{in_tool}} operate by
  interacting with a running :binary:`~bin.mongod` instance, they can impact
  the performance of your running database. Not only do the tools create
  traffic for a running database instance, they also force the database to
  read all data through memory. When MongoDB reads infrequently used data,
  it can evict more frequently accessed data, causing a deterioration
  in performance for the database's regular workload.

  When backing up your data with MongoDB's tools, consider the
  following guidelines:

  - Label files so that you can identify the contents of the
    backup as well as the point in time that the backup reflects.

  - Use an alternative backup strategy such as 
    :ref:`Filesystem Snapshots <backup-restore-filesystem-snapshots>` 
    or :atlas:`Cloud Backups in MongoDB Atlas </backup/cloud-backup/overview>`
    if the performance impact of {{out_tool}} and {{in_tool}} is unacceptable
    for your use case.

  {{mongoDumpBullet}}
  
  - Ensure that your backups are usable by restoring them to a test
    MongoDB deployment.

  - To help reduce the likelihood of inconsistencies in a sharded
    cluster backup, you must stop the balancer, stop all write operations, and
    stop any schema transformations for the duration of the backup.

  .. seealso::

     :doc:`/core/backups` and
     :atlas:`MongoDB Atlas Cloud Backups </backup/cloud-backup/overview/>` 
     for more information on backing up MongoDB instances. Additionally, 
     consider the following reference documentation for the MongoDB Database 
     Tools:

     - :binary:`~bin.mongoexport`
     - :binary:`~bin.mongoimport`
     - :binary:`~bin.mongodump`
     - :binary:`~bin.mongorestore`

...
