#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/reference/method/rs.stepDown.txt:3
msgid "rs.stepDown()"
msgstr ""

#: ../source/includes/apiargs/method-rs.stepDown-param.rst:11
#: ../source/reference/method/rs.stepDown.txt:14
msgid "Description"
msgstr ""

#: ../source/includes/stepdown-intro.rst:1
msgid ""
"Instructs the :term:`primary` of the replica set to become a "
":term:`secondary`. After the primary steps down, eligble secondaries will"
" hold an :ref:`election for primary <replica-set-election-internals>`."
msgstr ""

#: ../source/includes/stepdown-intro.rst:5
msgid ""
"The |command-method| does not immediately step down the primary. If no "
":data:`electable <~replSetGetConfig.members[n].priority>` secondaries are"
" up to date with the primary, the primary waits up to "
"``secondaryCatchUpPeriodSecs`` (by default 10 seconds) for a secondary to"
" catch up. Once an electable secondary is available, the |command-method|"
" steps down the primary."
msgstr ""

#: ../source/includes/stepdown-intro.rst:12
msgid ""
"Once stepped down, the original primary becomes a secondary and is "
"ineligible from becoming primary again for the remainder of time "
"specified by |stepdown-secs|."
msgstr ""

#: ../source/includes/stepdown-intro.rst:16
msgid ""
"For a detailed explanation of the |command-method| 's execution, see "
"|behavior-ref|."
msgstr ""

#: ../source/includes/stepdown-intro.rst:21
msgid ""
"The |command-method| is only valid against the primary and throws an "
"error if run on a non-primary member."
msgstr ""

#: ../source/reference/method/rs.stepDown.txt:24
msgid "The :method:`rs.stepDown()` method has the following parameters:"
msgstr ""

#: ../source/includes/apiargs/method-rs.stepDown-param.rst:7
msgid "Parameter"
msgstr ""

#: ../source/includes/apiargs/method-rs.stepDown-param.rst:9
msgid "Type"
msgstr ""

#: ../source/includes/apiargs/method-rs.stepDown-param.rst:13
msgid "``stepDownSecs``"
msgstr ""

#: ../source/includes/apiargs/method-rs.stepDown-param.rst:15
#: ../source/includes/apiargs/method-rs.stepDown-param.rst:29
msgid "number"
msgstr ""

#: ../source/includes/apiargs/method-rs.stepDown-param.rst:17
#: ../source/includes/apiargs/method-rs.stepDown-param.rst:44
msgid ""
"The number of seconds to step down the primary, during which time the "
"stepdown member is ineligible for becoming primary. If you specify a non-"
"numeric value, the command uses ``60`` seconds."
msgstr ""

#: ../source/includes/apiargs/method-rs.stepDown-param.rst:21
#: ../source/includes/apiargs/method-rs.stepDown-param.rst:48
msgid ""
"The stepdown period starts from the time that the :binary:`~bin.mongod` "
"receives the command. The stepdown period must be greater than the "
"``secondaryCatchUpPeriodSecs``."
msgstr ""

#: ../source/includes/apiargs/method-rs.stepDown-param.rst:27
msgid "``secondaryCatchUpPeriodSecs``"
msgstr ""

#: ../source/includes/apiargs/method-rs.stepDown-param.rst:31
#: ../source/includes/apiargs/method-rs.stepDown-param.rst:56
msgid ""
"Optional. The number of seconds that ``mongod`` will wait for an "
"electable secondary to catch up to the primary."
msgstr ""

#: ../source/includes/apiargs/method-rs.stepDown-param.rst:34
#: ../source/includes/apiargs/method-rs.stepDown-param.rst:59
msgid ""
"When specified, ``secondaryCatchUpPeriodSecs`` overrides the default wait"
" time of ``10`` seconds."
msgstr ""

#: ../source/includes/apiargs/method-rs.stepDown-param.rst
msgid "param number stepDownSecs"
msgstr ""

#: ../source/includes/apiargs/method-rs.stepDown-param.rst
msgid "param number secondaryCatchUpPeriodSecs"
msgstr ""

#: ../source/reference/method/rs.stepDown.txt:28
msgid ""
":method:`rs.stepDown()` provides a wrapper around the command "
":dbcommand:`replSetStepDown`."
msgstr ""

#: ../source/reference/method/rs.stepDown.txt:34
msgid "Behavior"
msgstr ""

#: ../source/reference/method/rs.stepDown.txt:42
msgid "Concurrent Operations"
msgstr ""

#: ../source/includes/extracts/rs-stepdown-concurrent-ops.rst:2
msgid ""
"The |command-method-name| |command-method| attempts to terminate long "
"running user operations that block the primary from stepping down, such "
"as an index build, a write operation or a map-reduce job."
msgstr ""

#: ../source/reference/method/rs.stepDown.txt:47
msgid "Availability of Eligible Secondaries"
msgstr ""

#: ../source/includes/extracts/rs-stepdown-eligible-secondaries.rst:1
msgid ""
"The |command-method| then initiates a catchup period where it waits up to"
" ``secondaryCatchUpPeriodSeconds``, by default 10 seconds, for a "
"secondary to become up-to-date with the primary. The primary only steps "
"down if a secondary is up-to-date with the primary during the catchup "
"period to prevent :doc:`rollbacks </core/replica-set-rollbacks>`."
msgstr ""

#: ../source/includes/extracts/rs-stepdown-eligible-secondaries.rst:7
msgid ""
"If no electable secondary meets this criterion by the end of the waiting "
"period, the primary does not step down and the |command-method| errors. "
"|force-option|"
msgstr ""

#: ../source/includes/extracts/rs-stepdown-eligible-secondaries.rst:11
msgid ""
"Once the primary steps down successfully, that node cannot become the "
"primary for the remainder of the |stepdown-secs| period, which began when"
" the node received the |command-method|."
msgstr ""

#: ../source/reference/method/rs.stepDown.txt:53
msgid "Client Connections"
msgstr ""

#: ../source/includes/extracts/rs-stepdown-client-connections.rst:1
msgid ""
"The |command-method-name| |command-method| forces all clients currently "
"connected to the database to disconnect. This helps ensure that the "
"clients maintain an accurate view of the replica set."
msgstr ""

#: ../source/includes/extracts/rs-stepdown-client-connections.rst:5
msgid ""
"Because the disconnect includes the connection used to run the |command-"
"method|, you cannot retrieve the return status of the |command-method| if"
" the |command-method| completes successfully. You can only retrieve the "
"return status of the |command-method| if it errors. When running the "
"|command-method| in a script, the script should account for this "
"behavior."
msgstr ""

#: ../source/reference/method/rs.stepDown.txt:58
msgid "Writes During Stepdown"
msgstr ""

#: ../source/includes/extracts/rs-stepdown-write-fail.rst:3
msgid ""
"All writes to the primary fail during the period starting when the "
"|command-method-name| |command-method| is received until either a new "
"primary is elected, or if there are no electable secondaries, the "
"original primary resumes normal operation. The time period where writes "
"fail is at maximum:"
msgstr ""

#: ../source/includes/extracts/rs-stepdown-write-fail.rst:9
msgid ""
"``secondaryCatchUpPeriodSecs`` (10s by default) + "
":rsconf:`~settings.electionTimeoutMillis` (10s by default)."
msgstr ""

#: ../source/reference/method/rs.stepDown.txt:63
msgid "Election Handoff"
msgstr ""

#: ../source/includes/extracts/rs-stepdown-election-handoff.rst:4
msgid ""
"If the parameter :parameter:`enableElectionHandoff` is true (default), "
"when a primary steps down from :method:`rs.stepDown()` (or the "
":dbcommand:`replSetStepDown` command without the ``force: true``), the "
"stepped-down primary nominates an eligible secondary to call an election "
"immediately. Otherwise, secondaries can wait up to "
":rsconf:`settings.electionTimeoutMillis` before calling an election. The "
"stepped down primary does not wait for the effects of the handoff. For "
"more information, see :parameter:`enableElectionHandoff`."
msgstr ""

#~ msgid "The :method:`rs.stepDown()` method has the following parameter:"
#~ msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid ""
#~ "Forces the :term:`primary` of the "
#~ "replica set to become a "
#~ ":term:`secondary`, triggering an :ref:`election "
#~ "for primary <replica-set-election-"
#~ "internals>`. The method steps down the"
#~ " primary for a specified number of"
#~ " seconds; during this period, the "
#~ "stepdown member is ineligible from "
#~ "becoming primary."
#~ msgstr ""

#~ msgid ""
#~ "The method only steps down the "
#~ "primary if an :data:`electable "
#~ "<~replSetGetConfig.members[n].priority>` secondary is "
#~ "up-to-date with the primary, "
#~ "waiting up to 10 seconds for a "
#~ "secondary to catch up."
#~ msgstr ""

# b8a0c8312fa340268bb489f7d1fb4592
#~ msgid "On this page"
#~ msgstr ""

# e3db0eed60104ad6ac516cc1ae6b4567
#~ msgid ""
#~ "Triggers the :term:`primary` of the "
#~ "replica set to become a "
#~ ":term:`secondary`.  This in turn triggers "
#~ "an :ref:`election for primary <replica-"
#~ "set-election-internals>`. The method steps"
#~ " down the primary for a specified "
#~ "number of seconds; during this period,"
#~ " the stepdown member is ineligible "
#~ "from becoming primary."
#~ msgstr ""

# f60a290bfa4b4cecabe0f41ecf4da8d5
#~ msgid ""
#~ "The method only steps down the "
#~ "primary if an :data:`electable "
#~ "<~replSetGetConfig.members[n].priority>` secondary is "
#~ "up-to-date with the primary, "
#~ "waiting up to 10 seconds, by "
#~ "default, for a secondary to catch "
#~ "up."
#~ msgstr ""

# 0a0d1c2598064279a0bc30686eb6db13
#~ msgid ""
#~ "The method is only valid against "
#~ "the primary and will error if run"
#~ " on a non-primary member."
#~ msgstr ""

# 36e6f637307947c592dd719f01e1d8bb
#~ msgid ""
#~ "Before stepping down, :method:`rs.stepDown()` "
#~ "will attempt to terminate long running"
#~ " user operations that would block the"
#~ " primary from stepping down, such as"
#~ " an index build, a write operation"
#~ " or a map-reduce job."
#~ msgstr ""

# 183fcd7d14ad4d639f17f43f341f842b
#~ msgid ""
#~ "To avoid rollbacks, :method:`rs.stepDown()`, "
#~ "by default, only steps down the "
#~ "primary if an electable secondary is "
#~ "completely caught up with the primary."
#~ " The command will wait up to "
#~ "either 10 seconds or the "
#~ "``secondaryCatchUpPeriodSecs`` for a secondary "
#~ "to catch up."
#~ msgstr ""

# 2f926ebcdc984eebb10955b23ebb59d3
#~ msgid ""
#~ "If no electable secondary meets this "
#~ "criterion by the waiting period, the "
#~ "primary does not step down and the"
#~ " method throws an exception."
#~ msgstr ""

# 9628004a0d664d4380ba98ab5ff37eac
#~ msgid ""
#~ "Upon successful stepdown, :method:`rs.stepDown()`"
#~ " forces all clients currently connected "
#~ "to the database to disconnect. This "
#~ "helps ensure that the clients maintain"
#~ " an accurate view of the replica "
#~ "set."
#~ msgstr ""

# 6f8ae4891a8742779cbb95f0afa14987
#~ msgid ""
#~ "Because the disconnect includes the "
#~ "connection used to run the command, "
#~ "you cannot retrieve the return status"
#~ " of the command if the command "
#~ "completes successfully; i.e. you can "
#~ "only retrieve the return status of "
#~ "the command if it errors. When "
#~ "running the command in a script, "
#~ "the script should account for this "
#~ "behavior."
#~ msgstr ""

# 5a003043ac4b4742b4b16cf8789a890b
#~ msgid ":method:`rs.stepDown()` blocks all writes to the primary while it runs."
#~ msgstr ""

