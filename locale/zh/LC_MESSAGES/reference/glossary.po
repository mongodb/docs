#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/glossary.txt:3
msgid "Glossary"
msgstr ""

#: ../source/reference/glossary.txt:18
msgid "$cmd"
msgstr ""

#: ../source/reference/glossary.txt:20
msgid ""
"A special virtual :term:`collection` that exposes MongoDB's :term:`database "
"commands <database command>`. To use database commands, see :ref:`issue-"
"commands`."
msgstr ""

#: ../source/reference/glossary.txt:23
msgid "_id"
msgstr ""

#: ../source/reference/glossary.txt:25
msgid ""
"A field required in every MongoDB :term:`document`. The :ref:`_id <document-"
"id-field>` field must have a unique value. You can think of the ``_id`` "
"field as the document's :term:`primary key`. If you create a new document "
"without an ``_id`` field, MongoDB automatically creates the field and "
"assigns a unique BSON :term:`ObjectId`."
msgstr ""

#: ../source/reference/glossary.txt:31
msgid "accumulator"
msgstr ""

#: ../source/reference/glossary.txt:33
msgid ""
"An :term:`expression` in the :term:`aggregation framework` that maintains "
"state between documents in the aggregation :term:`pipeline`. For a list of "
"accumulator operations, see :pipeline:`$group`."
msgstr ""

#: ../source/reference/glossary.txt:37
msgid "action"
msgstr ""

#: ../source/reference/glossary.txt:39
msgid ""
"An operation the user can perform on a resource. Actions and "
":term:`resources <resource>` combine to create :term:`privileges "
"<privilege>`. See :doc:`action </reference/privilege-actions>`."
msgstr ""

#: ../source/reference/glossary.txt:42
msgid "admin database"
msgstr ""

#: ../source/reference/glossary.txt:44
msgid ""
"A privileged database. Users must have access to the ``admin`` database to "
"run certain administrative commands. For a list of administrative commands, "
"see :ref:`admin-commands`."
msgstr ""

#: ../source/reference/glossary.txt:48
msgid "aggregation"
msgstr ""

#: ../source/reference/glossary.txt:55
msgid "aggregation framework"
msgstr ""

#: ../source/reference/glossary.txt:57
msgid ""
"The set of MongoDB operators that let you calculate aggregate values without"
" having to use :term:`map-reduce`. For a list of operators, see "
":doc:`/reference/aggregation`."
msgstr ""

#: ../source/reference/glossary.txt:60
msgid "arbiter"
msgstr ""

#: ../source/reference/glossary.txt:62
msgid ""
"A member of a :term:`replica set` that exists solely to vote in "
":term:`elections <election>`. Arbiters do not replicate data. See :ref"
":`replica-set-arbiter-configuration`."
msgstr ""

#: ../source/reference/glossary.txt:65
msgid "authentication"
msgstr ""

#: ../source/reference/glossary.txt:67
msgid "Verification of the user identity. See :doc:`/core/authentication`."
msgstr ""

#: ../source/reference/glossary.txt:69
msgid "authorization"
msgstr ""

#: ../source/reference/glossary.txt:71
msgid ""
"Provisioning of access to databases and operations. See "
":doc:`/core/authorization`."
msgstr ""

#: ../source/reference/glossary.txt:92
msgid "B-tree"
msgstr ""

#: ../source/reference/glossary.txt:94
msgid ""
"A data structure commonly used by database management systems to store "
"indexes. MongoDB uses B-trees for its indexes."
msgstr ""

#: ../source/reference/glossary.txt:73
msgid "balancer"
msgstr ""

#: ../source/reference/glossary.txt:75
msgid ""
"An internal MongoDB process that runs in the context of a :term:`sharded "
"cluster` and manages the migration of :term:`chunks <chunk>`. Administrators"
" must disable the balancer for all maintenance operations on a sharded "
"cluster. See :ref:`sharding-balancing`."
msgstr ""

#: ../source/reference/glossary.txt:80
msgid "BSON"
msgstr ""

#: ../source/reference/glossary.txt:82
msgid ""
"A serialization format used to store :term:`documents <document>` and make "
"remote procedure calls in MongoDB. \"BSON\" is a portmanteau of the words "
"\"binary\" and \"JSON\". Think of BSON as a binary representation of JSON "
"(JavaScript Object Notation) documents. See :doc:`/reference/bson-types` and"
" :doc:`/reference/mongodb-extended-json`."
msgstr ""

#: ../source/reference/glossary.txt:88
msgid "BSON types"
msgstr ""

#: ../source/reference/glossary.txt:90
msgid ""
"The set of types supported by the :term:`BSON` serialization format. For a "
"list of BSON types, see :doc:`/reference/bson-types`."
msgstr ""

#: ../source/reference/glossary.txt:96
msgid "CAP Theorem"
msgstr ""

#: ../source/reference/glossary.txt:98
msgid ""
"Given three properties of computing systems, consistency, availability, and "
"partition tolerance, a distributed computing system can provide any two of "
"these features, but never all three."
msgstr ""

#: ../source/reference/glossary.txt:102
msgid "capped collection"
msgstr ""

#: ../source/reference/glossary.txt:104
msgid ""
"A fixed-sized :term:`collection <collection>` that automatically overwrites "
"its oldest entries when it reaches its maximum size. The MongoDB "
":term:`oplog` that is used in :term:`replication` is a capped collection. "
"See :doc:`/core/capped-collections`."
msgstr ""

#: ../source/reference/glossary.txt:108
msgid "checksum"
msgstr ""

#: ../source/reference/glossary.txt:110
msgid ""
"A calculated value used to ensure data integrity. The :term:`md5` algorithm "
"is sometimes used as a checksum."
msgstr ""

#: ../source/reference/glossary.txt:112
msgid "chunk"
msgstr ""

#: ../source/reference/glossary.txt:114
msgid ""
"A contiguous range of :term:`shard key` values within a particular "
":term:`shard`. Chunk ranges are inclusive of the lower boundary and "
"exclusive of the upper boundary. MongoDB splits chunks when they grow beyond"
" the configured chunk size, which by default is 64 megabytes. MongoDB "
"migrates chunks when a shard contains too many chunks of a collection "
"relative to other shards. See :ref:`sharding-data-partitioning` and "
":doc:`/core/sharded-cluster-mechanics`."
msgstr ""

#: ../source/reference/glossary.txt:121
msgid "client"
msgstr ""

#: ../source/reference/glossary.txt:123
msgid ""
"The application layer that uses a database for data persistence and storage."
" :term:`Drivers <driver>` provide the interface level between the "
"application layer and the database server."
msgstr ""

#: ../source/reference/glossary.txt:128
msgid "cluster"
msgstr ""

#: ../source/reference/glossary.txt:130
msgid "See :term:`sharded cluster`."
msgstr ""

#: ../source/reference/glossary.txt:131
msgid "collection"
msgstr ""

#: ../source/reference/glossary.txt:133
msgid ""
"A grouping of MongoDB :term:`documents <document>`. A collection is the "
"equivalent of an :term:`RDBMS` table. A collection exists within a single "
":term:`database`. Collections do not enforce a schema. Documents within a "
"collection can have different fields. Typically, all documents in a "
"collection have a similar or related purpose. See :ref:`faq-dev-namespace`."
msgstr ""

#: ../source/reference/glossary.txt:139
msgid "collection scan"
msgstr ""

#: ../source/reference/glossary.txt:141
msgid ""
"Collection scans are a query execution strategy where MongoDB must inspect "
"every document in a collection to see if it matches the query criteria. "
"These queries are very inefficient and do not use indexes. See :doc:`/core"
"/query-optimization` for details about query execution strategies."
msgstr ""

#: ../source/reference/glossary.txt:146
msgid "compound index"
msgstr ""

#: ../source/reference/glossary.txt:148
msgid ""
"An :term:`index` consisting of two or more keys. See :ref:`index-type-"
"compound`."
msgstr ""

#: ../source/reference/glossary.txt:150
msgid "concurrency control"
msgstr ""

#: ../source/reference/glossary.txt:152
msgid ""
"Concurrency control ensures that database operations can be executed "
"concurrently without compromising correctness. Pessimistic concurrency "
"control, such as used in systems with :term:`locks <lock>`, will block any "
"potentially conflicting operations even if they may not turn out to actually"
" conflict. Optimistic concurrency control, the approach used by "
":ref:`WiredTiger <storage-wiredtiger>`,  will delay checking until after a "
"conflict may have occurred, aborting and retrying one of the operations "
"involved in any :term:`write conflict` that arises."
msgstr ""

#: ../source/reference/glossary.txt:162
msgid "config database"
msgstr ""

#: ../source/reference/glossary.txt:164
msgid ""
"An internal database that holds the metadata associated with a "
":term:`sharded cluster`. Applications and administrators should not modify "
"the ``config`` database in the course of normal operation. See "
":doc:`/reference/config-database`."
msgstr ""

#: ../source/reference/glossary.txt:168
msgid "config server"
msgstr ""

#: ../source/reference/glossary.txt:175
msgid ""
"A simple shell script, typically located in the ``/etc/rc.d`` or "
"``/etc/init.d`` directory, and used by the system's initialization process "
"to start, restart or stop a :term:`daemon` process."
msgstr ""

#: ../source/reference/glossary.txt:178
msgid "CRUD"
msgstr ""

#: ../source/reference/glossary.txt:180
msgid ""
"An acronym for the fundamental operations of a database: Create, Read, "
"Update, and Delete. See :doc:`/crud`."
msgstr ""

#: ../source/reference/glossary.txt:182
msgid "CSV"
msgstr ""

#: ../source/reference/glossary.txt:184
msgid ""
"A text-based data format consisting of comma-separated values. This format "
"is commonly used to exchange data between relational databases since the "
"format is well-suited to tabular data. You can import CSV files using "
":program:`mongoimport`."
msgstr ""

#: ../source/reference/glossary.txt:188
msgid "cursor"
msgstr ""

#: ../source/reference/glossary.txt:190
msgid ""
"A pointer to the result set of a :term:`query`. Clients can iterate through "
"a cursor to retrieve results. By default, cursors timeout after 10 minutes "
"of inactivity. See :ref:`read-operations-cursors`."
msgstr ""

#: ../source/reference/glossary.txt:194
msgid "daemon"
msgstr ""

#: ../source/reference/glossary.txt:196
msgid "The conventional name for a background, non-interactive process."
msgstr ""

#: ../source/reference/glossary.txt:198
msgid "data directory"
msgstr ""

#: ../source/reference/glossary.txt:200
msgid ""
"The file-system location where the :program:`mongod` stores data files. The "
":setting:`~storage.dbPath` option specifies the data directory."
msgstr ""

#: ../source/reference/glossary.txt:202
msgid "data-center awareness"
msgstr ""

#: ../source/reference/glossary.txt:204
msgid ""
"A property that allows clients to address members in a system based on their"
" locations. :term:`Replica sets <replica set>` implement data-center "
"awareness using :term:`tagging <tag>`. See :doc:`/data-center-awareness`."
msgstr ""

#: ../source/reference/glossary.txt:208
msgid "database"
msgstr ""

#: ../source/reference/glossary.txt:210
msgid ""
"A physical container for :term:`collections <collection>`. Each database "
"gets its own set of files on the file system. A single MongoDB server "
"typically has multiple databases."
msgstr ""

#: ../source/reference/glossary.txt:214
msgid "database command"
msgstr ""

#: ../source/reference/glossary.txt:216
msgid ""
"A MongoDB operation, other than an insert, update, remove, or query. For a "
"list of database commands, see :doc:`/reference/command`. To use database "
"commands, see :ref:`issue-commands`."
msgstr ""

#: ../source/reference/glossary.txt:220
msgid "database profiler"
msgstr ""

#: ../source/reference/glossary.txt:222
msgid ""
"A tool that, when enabled, keeps a record on all long-running operations in "
"a database's ``system.profile`` collection. The profiler is most often used "
"to diagnose slow queries. See :ref:`database-profiling`."
msgstr ""

#: ../source/reference/glossary.txt:226
msgid "datum"
msgstr ""

#: ../source/reference/glossary.txt:228
msgid ""
"A set of values used to define measurements on the earth. MongoDB uses the "
":term:`WGS84` datum in certain :term:`geospatial` calculations. See "
":doc:`/applications/geospatial-indexes`."
msgstr ""

#: ../source/reference/glossary.txt:231
msgid "dbpath"
msgstr ""

#: ../source/reference/glossary.txt:233
msgid ""
"The location of MongoDB's data file storage. See :setting:`~storage.dbPath`."
msgstr ""

#: ../source/reference/glossary.txt:235
msgid "delayed member"
msgstr ""

#: ../source/reference/glossary.txt:237
msgid ""
"A :term:`replica set` member that cannot become primary and applies "
"operations at a specified delay. The delay is useful for protecting data "
"from human error (i.e. unintentionally deleted databases) or updates that "
"have unforeseen effects on the production database. See :ref:`replica-set-"
"delayed-members`."
msgstr ""

#: ../source/reference/glossary.txt:242
msgid "diagnostic log"
msgstr ""

#: ../source/reference/glossary.txt:244
msgid ""
"A verbose log of operations stored in the :term:`dbpath`. See the "
":option:`--diaglog <mongod --diaglog>` option."
msgstr ""

#: ../source/reference/glossary.txt:246
msgid "document"
msgstr ""

#: ../source/reference/glossary.txt:248
msgid ""
"A record in a MongoDB :term:`collection` and the basic unit of data in "
"MongoDB. Documents are analogous to :term:`JSON` objects but exist in the "
"database in a more type-rich format known as :term:`BSON`. See "
":doc:`/core/document`."
msgstr ""

#: ../source/reference/glossary.txt:252
msgid "dot notation"
msgstr ""

#: ../source/reference/glossary.txt:254
msgid ""
"MongoDB uses the dot notation to access the elements of an array and to "
"access the fields of an embedded document. See :ref:`document-dot-notation`."
msgstr ""

#: ../source/reference/glossary.txt:257
msgid "draining"
msgstr ""

#: ../source/reference/glossary.txt:259
msgid ""
"The process of removing or \"shedding\" :term:`chunks <chunk>` from one "
":term:`shard` to another. Administrators must drain shards before removing "
"them from the cluster. See :doc:`/tutorial/remove-shards-from-cluster`."
msgstr ""

#: ../source/reference/glossary.txt:263
msgid "driver"
msgstr ""

#: ../source/reference/glossary.txt:265
msgid ""
"A client library for interacting with MongoDB in a particular language. See "
":doc:`/applications/drivers`."
msgstr ""

#: ../source/reference/glossary.txt:279
msgid "election"
msgstr ""

#: ../source/reference/glossary.txt:281
msgid ""
"The process by which members of a :term:`replica set` select a "
":term:`primary` on startup and in the event of a failure. See :ref:`replica-"
"set-elections`."
msgstr ""

#: ../source/reference/glossary.txt:288
msgid "eventual consistency"
msgstr ""

#: ../source/reference/glossary.txt:296
msgid "expression"
msgstr ""

#: ../source/reference/glossary.txt:301
msgid "failover"
msgstr ""

#: ../source/reference/glossary.txt:303
msgid ""
"The process that allows a :term:`secondary` member of a :term:`replica set` "
"to become :term:`primary` in the event of a failure. See :ref:`replica-set-"
"failover`."
msgstr ""

#: ../source/reference/glossary.txt:306
msgid "field"
msgstr ""

#: ../source/reference/glossary.txt:308
msgid ""
"A name-value pair in a :term:`document <document>`. A document has zero or "
"more fields. Fields are analogous to columns in relational databases. See "
":ref:`document-structure`."
msgstr ""

#: ../source/reference/glossary.txt:311
msgid "field path"
msgstr ""

#: ../source/reference/glossary.txt:313
msgid ""
"Path to a field in the document. To specify a field path, use a string that "
"prefixes the field name with a dollar sign (``$``)."
msgstr ""

#: ../source/reference/glossary.txt:315
msgid "firewall"
msgstr ""

#: ../source/reference/glossary.txt:317
msgid ""
"A system level networking filter that restricts access based on, among other"
" things, IP address. Firewalls form a part of an effective network security "
"strategy. See :ref:`security-firewalls`."
msgstr ""

#: ../source/reference/glossary.txt:321
msgid "fsync"
msgstr ""

#: ../source/reference/glossary.txt:323
msgid ""
"A system call that flushes all dirty, in-memory pages to disk. MongoDB calls"
" ``fsync()`` on its database files at least every 60 seconds. See "
":dbcommand:`fsync`."
msgstr ""

#: ../source/reference/glossary.txt:326
msgid "geohash"
msgstr ""

#: ../source/reference/glossary.txt:328
msgid ""
"A geohash value is a binary representation of the location on a coordinate "
"grid. See :ref:`geospatial-indexes-geohash`."
msgstr ""

#: ../source/reference/glossary.txt:330
msgid "GeoJSON"
msgstr ""

#: ../source/reference/glossary.txt:332
msgid ""
"A :term:`geospatial` data interchange format based on JavaScript Object "
"Notation (:term:`JSON`). GeoJSON is used in :doc:`geospatial queries "
"</applications/geospatial-indexes>`. For supported GeoJSON objects, see :ref"
":`geo-overview-location-data`. For the GeoJSON format specification, see "
"`<http://geojson.org/geojson-spec.html>`_."
msgstr ""

#: ../source/reference/glossary.txt:338
msgid "geospatial"
msgstr ""

#: ../source/reference/glossary.txt:340
msgid ""
"Data that relates to geographical location. In MongoDB, you may store, "
"index, and query data according to geographical parameters. See "
":doc:`/applications/geospatial-indexes`."
msgstr ""

#: ../source/reference/glossary.txt:343
msgid "GridFS"
msgstr ""

#: ../source/reference/glossary.txt:348
msgid "hashed shard key"
msgstr ""

#: ../source/reference/glossary.txt:350
msgid ""
"A special type of :term:`shard key` that uses a hash of the value in the "
"shard key field to distribute documents among members of the :term:`sharded "
"cluster`. See :ref:`index-type-hashed`."
msgstr ""

#: ../source/reference/glossary.txt:353
msgid "haystack index"
msgstr ""

#: ../source/reference/glossary.txt:355
msgid ""
"A :term:`geospatial` index that enhances searches by creating \"buckets\" of"
" objects grouped by a second criterion. See :doc:`/core/geohaystack`."
msgstr ""

#: ../source/reference/glossary.txt:358
msgid "hidden member"
msgstr ""

#: ../source/reference/glossary.txt:360
msgid ""
"A :term:`replica set` member that cannot become :term:`primary` and are "
"invisible to client applications. See :ref:`replica-set-hidden-members`."
msgstr ""

#: ../source/reference/glossary.txt:363
msgid "idempotent"
msgstr ""

#: ../source/reference/glossary.txt:365
msgid ""
"The quality of an operation to produce the same result given the same input,"
" whether run once or run multiple times."
msgstr ""

#: ../source/reference/glossary.txt:367
msgid "index"
msgstr ""

#: ../source/reference/glossary.txt:370
msgid "initial sync"
msgstr ""

#: ../source/reference/glossary.txt:372
msgid ""
"The :term:`replica set` operation that replicates data from an existing "
"replica set member to a new or restored replica set member. See :ref"
":`replica-set-initial-sync`."
msgstr ""

#: ../source/reference/glossary.txt:375
msgid "intent lock"
msgstr ""

#: ../source/reference/glossary.txt:377
msgid ""
"A :term:`lock` on a resource that indicates that the holder of the lock will"
" read (intent shared) or write (intent exclusive) the resource using "
":term:`concurrency control` at a finer granularity than that of the resource"
" with the intent lock. Intent locks allow concurrent readers and writers of "
"a resource.  See :ref:`faq-concurrency-locking`."
msgstr ""

#: ../source/reference/glossary.txt:392
msgid "interrupt point"
msgstr ""

#: ../source/reference/glossary.txt:394
msgid ""
"A point in an operation's lifecycle when it can safely abort. MongoDB only "
"terminates an operation at designated interrupt points. See :doc:`/tutorial"
"/terminate-running-operations`."
msgstr ""

#: ../source/reference/glossary.txt:383
msgid "IPv6"
msgstr ""

#: ../source/reference/glossary.txt:385
msgid ""
"A revision to the IP (Internet Protocol) standard that provides a "
"significantly larger address space to more effectively support the number of"
" hosts on the contemporary Internet."
msgstr ""

#: ../source/reference/glossary.txt:388
msgid "ISODate"
msgstr ""

#: ../source/reference/glossary.txt:390
msgid ""
"The international date format used by :program:`mongo` to display dates. The"
" format is: ``YYYY-MM-DD HH:MM.SS.millis``."
msgstr ""

#: ../source/reference/glossary.txt:398
msgid "JavaScript"
msgstr ""

#: ../source/reference/glossary.txt:400
msgid ""
"A popular scripting language originally designed for web browsers. The "
"MongoDB shell and certain server-side functions use a JavaScript "
"interpreter. See :doc:`/core/server-side-javascript` for more information."
msgstr ""

#: ../source/reference/glossary.txt:404
msgid "journal"
msgstr ""

#: ../source/reference/glossary.txt:406
msgid ""
"A sequential, binary transaction log used to bring the database into a valid"
" state in the event of a hard shutdown. Journaling writes data first to the "
"journal and then to the core data files. MongoDB enables journaling by "
"default for 64-bit builds of MongoDB version 2.0 and newer. Journal files "
"are pre-allocated and exist as files in the :term:`data directory`. See "
":doc:`/core/journaling/`."
msgstr ""

#: ../source/reference/glossary.txt:413
msgid "JSON"
msgstr ""

#: ../source/reference/glossary.txt:415
msgid ""
"JavaScript Object Notation. A human-readable, plain text format for "
"expressing structured data with support in many programming languages. For "
"more information, see `<http://www.json.org>`_. Certain MongoDB tools render"
" an approximation of MongoDB :term:`BSON` documents in JSON format. See "
":doc:`/reference/mongodb-extended-json`."
msgstr ""

#: ../source/reference/glossary.txt:421
msgid "JSON document"
msgstr ""

#: ../source/reference/glossary.txt:423
msgid ""
"A :term:`JSON` document is a collection of fields and values in a structured"
" format. For sample JSON documents, see `<http://json.org/example.html>`_."
msgstr ""

#: ../source/reference/glossary.txt:426
msgid "JSONP"
msgstr ""

#: ../source/reference/glossary.txt:428
msgid ""
":term:`JSON` with Padding. Refers to a method of injecting JSON into "
"applications. **Presents potential security concerns**."
msgstr ""

#: ../source/reference/glossary.txt:430
msgid "least privilege"
msgstr ""

#: ../source/reference/glossary.txt:432
msgid ""
"An authorization policy that gives a user only the amount of access that is "
"essential to that user's work and no more."
msgstr ""

#: ../source/reference/glossary.txt:434
msgid "legacy coordinate pairs"
msgstr ""

#: ../source/reference/glossary.txt:436
msgid ""
"The format used for :term:`geospatial` data prior to MongoDB version 2.4. "
"This format stores geospatial data as points on a planar coordinate system "
"(e.g. ``[ x, y ]``). See :doc:`/applications/geospatial-indexes`."
msgstr ""

#: ../source/reference/glossary.txt:440
msgid "LineString"
msgstr ""

#: ../source/reference/glossary.txt:442
msgid ""
"A LineString is defined by an array of two or more positions. A closed "
"LineString with four or more positions is called a LinearRing, as described "
"in the GeoJSON LineString specification: `<http://geojson.org/geojson-"
"spec.html#linestring>`_. To use a LineString in MongoDB, see :ref"
":`geospatial-indexes-store-geojson`."
msgstr ""

#: ../source/reference/glossary.txt:448
msgid "lock"
msgstr ""

#: ../source/reference/glossary.txt:450
msgid ""
"MongoDB uses locks to ensure that :doc:`concurrency </faq/concurrency>` does"
" not affect correctness.  MongoDB uses :term:`read locks <read lock>`, "
":term:`write locks <write lock>` and :term:`intent locks <intent lock>`. For"
" more information, see :ref:`faq-concurrency-locking`."
msgstr ""

#: ../source/reference/glossary.txt:455
msgid "LVM"
msgstr ""

#: ../source/reference/glossary.txt:457
msgid ""
"Logical volume manager. LVM is a program that abstracts disk images from "
"physical devices and provides a number of raw disk manipulation and snapshot"
" capabilities useful for system management. For information on LVM and "
"MongoDB, see :ref:`lvm-backup-and-restore`."
msgstr ""

#: ../source/reference/glossary.txt:470
msgid "map-reduce"
msgstr ""

#: ../source/reference/glossary.txt:462
msgid "mapping type"
msgstr ""

#: ../source/reference/glossary.txt:464
msgid ""
"A Structure in programming languages that associate keys with values, where "
"keys may nest other pairs of keys and values (e.g. dictionaries, hashes, "
"maps, and associative arrays). The properties of these structures depend on "
"the language specification and implementation. Generally the order of keys "
"in mapping types is arbitrary and not guaranteed."
msgstr ""

#: ../source/reference/glossary.txt:478
msgid "master"
msgstr ""

#: ../source/reference/glossary.txt:480
msgid ""
"The database that receives all writes in a conventional master-:term:`slave`"
" replication. In MongoDB, :term:`replica sets <replica set>` replace master-"
"slave replication for most use cases. For more information on master-slave "
"replication, see :doc:`/core/master-slave`."
msgstr ""

#: ../source/reference/glossary.txt:485
msgid "md5"
msgstr ""

#: ../source/reference/glossary.txt:487
msgid ""
"A hashing algorithm used to efficiently provide reproducible unique strings "
"to identify and :term:`checksum` data. MongoDB uses md5 to identify chunks "
"of data for :term:`GridFS`. See :doc:`/reference/command/filemd5`."
msgstr ""

#: ../source/reference/glossary.txt:491
msgid "MIB"
msgstr ""

#: ../source/reference/glossary.txt:493
msgid ""
"Management Information Base. MongoDB uses MIB files to define the type of "
"data tracked by SNMP in the MongoDB Enterprise edition."
msgstr ""

#: ../source/reference/glossary.txt:495
msgid "MIME"
msgstr ""

#: ../source/reference/glossary.txt:497
msgid ""
"Multipurpose Internet Mail Extensions. A standard set of type and encoding "
"definitions used to declare the encoding and type of data in multiple data "
"storage, transmission, and email contexts. The :program:`mongofiles` tool "
"provides an option to specify a MIME type to describe a file inserted into "
":term:`GridFS` storage."
msgstr ""

#: ../source/reference/glossary.txt:502
msgid "mongo"
msgstr ""

#: ../source/reference/glossary.txt:504
msgid ""
"The MongoDB shell. The :program:`mongo` process starts the MongoDB shell as "
"a daemon connected to either a :program:`mongod` or :program:`mongos` "
"instance. The shell has a JavaScript interface. See "
":doc:`/reference/program/mongo` and :doc:`/reference/method`."
msgstr ""

#: ../source/reference/glossary.txt:508
msgid "mongod"
msgstr ""

#: ../source/reference/glossary.txt:510
msgid ""
"The MongoDB database server. The :program:`mongod` process starts the "
"MongoDB server as a daemon. The MongoDB server manages data requests and "
"formats and manages background operations. See "
":doc:`/reference/program/mongod`."
msgstr ""

#: ../source/reference/glossary.txt:514
msgid "MongoDB"
msgstr ""

#: ../source/reference/glossary.txt:516
msgid ""
"An open-source document-based database system. \"MongoDB\" derives from the "
"word \"humongous\" because of the database's ability to scale up with ease "
"and hold very large amounts of data. MongoDB stores :term:`documents "
"<document>` in :term:`collections <collection>` within databases."
msgstr ""

#: ../source/reference/glossary.txt:521
msgid "MongoDB Enterprise"
msgstr ""

#: ../source/reference/glossary.txt:523
msgid ""
"A commercial edition of MongoDB that includes additional features. For more "
"information, see `MongoDB Subscriptions <https://www.mongodb.com/products"
"/mongodb-subscriptions>`_."
msgstr ""

#: ../source/reference/glossary.txt:526
msgid "mongos"
msgstr ""

#: ../source/reference/glossary.txt:528
msgid ""
"The routing and load balancing process that acts an interface between an "
"application and a MongoDB :term:`sharded cluster`. See "
":doc:`/reference/program/mongos`."
msgstr ""

#: ../source/reference/glossary.txt:531
msgid "namespace"
msgstr ""

#: ../source/reference/glossary.txt:533
msgid ""
"The canonical name for a collection or index in MongoDB. The namespace is a "
"combination of the database name and the name of the collection or index, "
"like so: ``[database-name].[collection-or-index-name]``. All documents "
"belong to a namespace. See :ref:`faq-dev-namespace`."
msgstr ""

#: ../source/reference/glossary.txt:538
msgid "natural order"
msgstr ""

#: ../source/reference/glossary.txt:540
msgid ""
"The order in which the database refers to documents on disk. This is the "
"default sort order. See :operator:`$natural` and :ref:`return-natural-"
"order`."
msgstr ""

#: ../source/reference/glossary.txt:543
msgid "network partition"
msgstr ""

#: ../source/reference/glossary.txt:545
msgid ""
"A network failure that separates a distributed system into partitions such "
"that nodes in one partition cannot communicate with the nodes in the other "
"partition."
msgstr ""

#: ../source/reference/glossary.txt:549
msgid ""
"Sometimes, partitions are partial or asymmetric. An example of a partial "
"partition would be a division of the nodes of a network into three sets, "
"where members of the first set cannot communicate with members of the second"
" set, and vice versa, but all nodes can communicate with members of the "
"third set. In an asymmetric partition, communication may be possible only "
"when it originates with certain nodes. For example, nodes on one side of the"
" partition can communicate to the other side only if they originate the "
"communications channel."
msgstr ""

#: ../source/reference/glossary.txt:561
msgid "ObjectId"
msgstr ""

#: ../source/reference/glossary.txt:563
msgid ""
"A special 12-byte :term:`BSON` type that guarantees uniqueness within the "
":term:`collection`. The ObjectId is generated based on timestamp, machine "
"ID, process ID, and a process-local incremental counter. MongoDB uses "
"ObjectId values as the default values for :term:`_id` fields."
msgstr ""

#: ../source/reference/glossary.txt:568
msgid "operator"
msgstr ""

#: ../source/reference/glossary.txt:570
msgid ""
"A keyword beginning with a ``$`` used to express an update, complex query, "
"or data transformation. For example, ``$gt`` is the query language's "
"\"greater than\" operator. For available operators, see "
":doc:`/reference/operator`."
msgstr ""

#: ../source/reference/glossary.txt:574
msgid "oplog"
msgstr ""

#: ../source/reference/glossary.txt:576
msgid ""
"A :term:`capped collection` that stores an ordered history of logical writes"
" to a MongoDB database. The oplog is the basic mechanism enabling "
":term:`replication` in MongoDB. See :doc:`/core/replica-set-oplog`."
msgstr ""

#: ../source/reference/glossary.txt:580
msgid "ordered query plan"
msgstr ""

#: ../source/reference/glossary.txt:582
msgid ""
"A query plan that returns results in the order consistent with the "
":method:`~cursor.sort()` order. See :ref:`read-operations-query-"
"optimization`."
msgstr ""

#: ../source/reference/glossary.txt:585
msgid "orphaned document"
msgstr ""

#: ../source/reference/glossary.txt:587
msgid ""
"In a sharded cluster, orphaned documents are those documents on a shard that"
" also exist in chunks on other shards as a result of failed migrations or "
"incomplete migration cleanup due to abnormal shutdown. Delete orphaned "
"documents using :dbcommand:`cleanupOrphaned` to reclaim disk space and "
"reduce confusion."
msgstr ""

#: ../source/reference/glossary.txt:593
msgid "padding"
msgstr ""

#: ../source/reference/glossary.txt:595
msgid ""
"The extra space allocated to document on the disk to prevent moving a "
"document when it grows as the result of :method:`~db.collection.update()` "
"operations. See :ref:`record-allocation-strategies`."
msgstr ""

#: ../source/reference/glossary.txt:599
msgid "padding factor"
msgstr ""

#: ../source/reference/glossary.txt:601
msgid ""
"An automatically-calibrated constant used to determine how much extra space "
"MongoDB should allocate per document container on disk. A padding factor of "
"1 means that MongoDB will allocate only the amount of space needed for the "
"document. A padding factor of 2 means that MongoDB will allocate twice the "
"amount of space required by the document. See :ref:`record-allocation-"
"strategies`."
msgstr ""

#: ../source/reference/glossary.txt:608
msgid "page fault"
msgstr ""

#: ../source/includes/fact-page-fault.rst:1
msgid ""
"With the MMAPv1 storage engine, page faults can occur as MongoDB reads from "
"or writes data to parts of its data files that are not currently located in "
"physical memory. In contrast, operating system page faults happen when "
"physical memory is exhausted and pages of physical memory are swapped to "
"disk."
msgstr ""

#: ../source/reference/glossary.txt:612
msgid ""
"See :ref:`administration-monitoring-page-faults` and :ref:`faq-storage-page-"
"faults`."
msgstr ""

#: ../source/reference/glossary.txt:614
msgid "partition"
msgstr ""

#: ../source/reference/glossary.txt:616
msgid ""
"A distributed system architecture that splits data into ranges. "
":term:`Sharding` uses partitioning. See :ref:`sharding-data-partitioning`."
msgstr ""

#: ../source/reference/glossary.txt:619
msgid "passive member"
msgstr ""

#: ../source/reference/glossary.txt:624
msgid "pcap"
msgstr ""

#: ../source/reference/glossary.txt:626
msgid ""
"A packet-capture format used by :program:`mongosniff` to record packets "
"captured from network interfaces and display them as human-readable MongoDB "
"operations. See :ref:`mongosniff-options`."
msgstr ""

#: ../source/reference/glossary.txt:629
msgid "PID"
msgstr ""

#: ../source/reference/glossary.txt:631
msgid ""
"A process identifier. UNIX-like systems assign a unique-integer PID to each "
"running process. You can use a PID to inspect a running process and send "
"signals to it. See :ref:`proc-file-system`."
msgstr ""

#: ../source/reference/glossary.txt:635
msgid "pipe"
msgstr ""

#: ../source/reference/glossary.txt:637
msgid ""
"A communication channel in UNIX-like systems allowing independent processes "
"to send and receive data. In the UNIX shell, piped operations allow users to"
" direct the output of one command into the input of another."
msgstr ""

#: ../source/reference/glossary.txt:641
msgid "pipeline"
msgstr ""

#: ../source/reference/glossary.txt:645
msgid "Point"
msgstr ""

#: ../source/reference/glossary.txt:647
msgid ""
"A single coordinate pair as described in the GeoJSON Point specification: "
"`<http://geojson.org/geojson-spec.html#point>`_. To use a Point in MongoDB, "
"see :ref:`geospatial-indexes-store-geojson`."
msgstr ""

#: ../source/reference/glossary.txt:651
msgid "Polygon"
msgstr ""

#: ../source/reference/glossary.txt:653
msgid ""
"An array of :term:`LinearRing <LineString>` coordinate arrays, as described "
"in the GeoJSON Polygon specification: `<http://geojson.org/geojson-"
"spec.html#polygon>`_. For Polygons with multiple rings, the first must be "
"the exterior ring and any others must be interior rings or holes."
msgstr ""

#: ../source/reference/glossary.txt:659
msgid ""
"MongoDB does not permit the exterior ring to self-intersect. Interior rings "
"must be fully contained within the outer loop and cannot intersect or "
"overlap with each other. See :ref:`geospatial-indexes-store-geojson`."
msgstr ""

#: ../source/reference/glossary.txt:663
msgid "powerOf2Sizes"
msgstr ""

#: ../source/reference/glossary.txt:665
msgid ""
"A per-collection setting that changes and normalizes the way MongoDB "
"allocates space for each :term:`document`, in an effort to maximize storage "
"reuse and to reduce fragmentation. This is the default for :doc:`TTL "
"Collections </tutorial/expire-data>`. See :doc:`/reference/command/collMod` "
"and :collflag:`usePowerOf2Sizes`."
msgstr ""

#: ../source/reference/glossary.txt:677
msgid "pre-splitting"
msgstr ""

#: ../source/reference/glossary.txt:679
msgid ""
"An operation performed before inserting data that divides the range of "
"possible shard key values into chunks to facilitate easy insertion and high "
"write throughput. In some cases pre-splitting expedites the initial "
"distribution of documents in :term:`sharded cluster` by manually dividing "
"the collection rather than waiting for the MongoDB :term:`balancer` to do "
"so. See :doc:`/tutorial/create-chunks-in-sharded-cluster`."
msgstr ""

#: ../source/reference/glossary.txt:671
msgid "prefix compression"
msgstr ""

#: ../source/reference/glossary.txt:673
msgid ""
"Reduces memory and disk consumption by storing any identical index key "
"prefixes only once, per page of memory. See: :ref:`storage-wiredtiger-"
"compression` for more about WiredTiger's compression behavior."
msgstr ""

#: ../source/reference/glossary.txt:686
msgid "primary"
msgstr ""

#: ../source/reference/glossary.txt:688
msgid ""
"In a :term:`replica set`, the primary member is the current :term:`master` "
"instance, which receives all write operations. See :ref:`replica-set-"
"primary-member`."
msgstr ""

#: ../source/reference/glossary.txt:691
msgid "primary key"
msgstr ""

#: ../source/reference/glossary.txt:693
msgid ""
"A record's unique immutable identifier. In an :term:`RDBMS`, the primary key"
" is typically an integer stored in each row's ``id`` field. In MongoDB, the "
":term:`_id` field holds a document's primary key which is usually a BSON "
":term:`ObjectId`."
msgstr ""

#: ../source/reference/glossary.txt:697
msgid "primary shard"
msgstr ""

#: ../source/reference/glossary.txt:699
msgid ""
"The :term:`shard` that holds all the un-sharded collections. See :ref"
":`primary-shard`."
msgstr ""

#: ../source/reference/glossary.txt:701
msgid "priority"
msgstr ""

#: ../source/reference/glossary.txt:706
msgid "privilege"
msgstr ""

#: ../source/reference/glossary.txt:708
msgid ""
"A combination of specified :term:`resource <resource>` and :term:`actions "
"<action>` permitted on the resource. See :ref:`privilege <privileges>`."
msgstr ""

#: ../source/reference/glossary.txt:711
msgid "projection"
msgstr ""

#: ../source/reference/glossary.txt:713
msgid ""
"A document given to a :term:`query` that specifies which fields MongoDB "
"returns in the result set. See :ref:`projection`. For a list of projection "
"operators, see :doc:`/reference/operator/projection`."
msgstr ""

#: ../source/reference/glossary.txt:717
msgid "query"
msgstr ""

#: ../source/reference/glossary.txt:726
msgid "query optimizer"
msgstr ""

#: ../source/reference/glossary.txt:728
msgid ""
"A process that generates query plans. For each query, the optimizer "
"generates a plan that matches the query to the index that will return "
"results as efficiently as possible. The optimizer reuses the query plan each"
" time the query runs. If a collection changes significantly, the optimizer "
"creates a new query plan. See :ref:`read-operations-query-optimization`."
msgstr ""

#: ../source/reference/glossary.txt:734
msgid "query shape"
msgstr ""

#: ../source/reference/glossary.txt:736
msgid "A combination of query predicate, sort, and projection specifications."
msgstr ""

#: ../source/reference/glossary.txt:739
msgid ""
"For the query predicate, only the structure of the predicate, including the "
"field names, are significant; the values in the query predicate are "
"insignificant. As such, a query predicate ``{ type: 'food' }`` is equivalent"
" to the query predicate ``{ type: 'utensil' }`` for a query shape."
msgstr ""

#: ../source/reference/glossary.txt:763
msgid "RDBMS"
msgstr ""

#: ../source/reference/glossary.txt:765
msgid ""
"Relational Database Management System. A database management system based on"
" the relational model, typically using :term:`SQL` as the query language."
msgstr ""

#: ../source/reference/glossary.txt:758
msgid "read lock"
msgstr ""

#: ../source/reference/glossary.txt:760
msgid ""
"A shared :term:`lock` on a resource such as a collection or database that, "
"while held, allows concurrent readers but no writers. See :ref:`faq-"
"concurrency-locking`."
msgstr ""

#: ../source/reference/glossary.txt:750
msgid "read preference"
msgstr ""

#: ../source/reference/glossary.txt:752
msgid ""
"A setting that determines how clients direct read operations. Read "
"preference affects all replica sets, including shard replica sets. By "
"default, MongoDB directs reads to :term:`primaries <primary>`. However, you "
"may also direct reads to secondaries for :term:`eventually consistent "
"<eventual consistency>` reads. See :doc:`Read Preference </core/read-"
"preference>`."
msgstr ""

#: ../source/reference/glossary.txt:768
msgid "record size"
msgstr ""

#: ../source/reference/glossary.txt:770
msgid ""
"The space allocated for a document including the padding. For more "
"information on padding, see :ref:`record-allocation-strategies` and "
":doc:`/reference/command/compact`."
msgstr ""

#: ../source/reference/glossary.txt:773
msgid "recovering"
msgstr ""

#: ../source/reference/glossary.txt:775
msgid ""
"A :term:`replica set` member status indicating that a member is not ready to"
" begin normal activities of a secondary or primary. Recovering members are "
"unavailable for reads."
msgstr ""

#: ../source/reference/glossary.txt:778
msgid "replica pairs"
msgstr ""

#: ../source/reference/glossary.txt:780
msgid "The precursor to the MongoDB :term:`replica sets <replica set>`."
msgstr ""

#: ../source/reference/glossary.txt:783
msgid "replica set"
msgstr ""

#: ../source/reference/glossary.txt:785
msgid ""
"A cluster of MongoDB servers that implements master-slave replication and "
"automated failover. MongoDB's recommended replication strategy. See "
":doc:`/replication`."
msgstr ""

#: ../source/reference/glossary.txt:788
msgid "replication"
msgstr ""

#: ../source/reference/glossary.txt:790
msgid ""
"A feature allowing multiple database servers to share the same data, thereby"
" ensuring redundancy and facilitating load balancing. See "
":doc:`/replication`."
msgstr ""

#: ../source/reference/glossary.txt:793
msgid "replication lag"
msgstr ""

#: ../source/reference/glossary.txt:795
msgid ""
"The length of time between the last operation in the :term:`primary's "
"<primary>` :term:`oplog` and the last operation applied to a particular "
":term:`secondary`. In general, you want to keep replication lag as small as "
"possible. See :ref:`Replication Lag <replica-set-replication-lag>`."
msgstr ""

#: ../source/reference/glossary.txt:800
msgid "resident memory"
msgstr ""

#: ../source/reference/glossary.txt:802
msgid ""
"The subset of an application's memory currently stored in physical RAM. "
"Resident memory is a subset of :term:`virtual memory`, which includes memory"
" mapped to physical RAM and to disk."
msgstr ""

#: ../source/reference/glossary.txt:805
msgid "resource"
msgstr ""

#: ../source/reference/glossary.txt:807
msgid ""
"A database, collection, set of collections, or cluster. A :term:`privilege` "
"permits :term:`actions <action>` on a specified resource. See :ref:`resource"
" <resource-document>`."
msgstr ""

#: ../source/reference/glossary.txt:810
msgid "REST"
msgstr ""

#: ../source/reference/glossary.txt:812
msgid ""
"An API design pattern centered around the idea of resources and the "
":term:`CRUD` operations that apply to them. Typically REST is implemented "
"over HTTP. MongoDB provides a simple HTTP REST interface that allows HTTP "
"clients to run commands against the server. See :ref:`rest-api`."
msgstr ""

#: ../source/reference/glossary.txt:819
msgid "role"
msgstr ""

#: ../source/reference/glossary.txt:825
msgid "rollback"
msgstr ""

#: ../source/reference/glossary.txt:827
msgid ""
"A process that reverts writes operations to ensure the consistency of all "
"replica set members. See :ref:`replica-set-rollback`."
msgstr ""

#: ../source/reference/glossary.txt:829
msgid "secondary"
msgstr ""

#: ../source/reference/glossary.txt:831
msgid ""
"A :term:`replica set` member that replicates the contents of the master "
"database. Secondary members may handle read requests, but only the "
":term:`primary` members can handle write operations. See :ref:`replica-set-"
"secondary-members`."
msgstr ""

#: ../source/reference/glossary.txt:835
msgid "secondary index"
msgstr ""

#: ../source/reference/glossary.txt:837
msgid ""
"A database :term:`index` that improves query performance by minimizing the "
"amount of work that the query engine must perform to fulfill a query. See "
":doc:`/indexes`."
msgstr ""

#: ../source/reference/glossary.txt:840
msgid "set name"
msgstr ""

#: ../source/reference/glossary.txt:842
msgid ""
"The arbitrary name given to a replica set. All members of a replica set must"
" have the same name specified with the :setting:`~replication.replSetName` "
"setting or the :option:`--replSet <mongod --replSet>` option."
msgstr ""

#: ../source/reference/glossary.txt:845
msgid "shard"
msgstr ""

#: ../source/reference/glossary.txt:847
msgid ""
"A single :program:`mongod` instance or :term:`replica set` that stores some "
"portion of a :term:`sharded cluster's <sharded cluster>` total data set. In "
"production, all shards should be replica sets. See :doc:`/core/sharded-"
"cluster-shards`."
msgstr ""

#: ../source/reference/glossary.txt:851
msgid "shard key"
msgstr ""

#: ../source/reference/glossary.txt:853
msgid ""
"The field MongoDB uses to distribute documents among members of a "
":term:`sharded cluster`. See :ref:`shard-key`."
msgstr ""

#: ../source/reference/glossary.txt:855
msgid "sharded cluster"
msgstr "分片集群"

#: ../source/reference/glossary.txt:861
msgid "sharding"
msgstr ""

#: ../source/reference/glossary.txt:863
msgid ""
"A database architecture that partitions data by key ranges and distributes "
"the data among two or more database instances. Sharding enables horizontal "
"scaling. See :doc:`/sharding`."
msgstr ""

#: ../source/reference/glossary.txt:866
msgid "shell helper"
msgstr ""

#: ../source/reference/glossary.txt:868
msgid ""
"A method in the ``mongo`` shell that provides a more concise syntax for a "
":doc:`database command <command>`. Shell helpers improve the general "
"interactive experience. See :doc:`/reference/method`."
msgstr ""

#: ../source/reference/glossary.txt:872
msgid "single-master replication"
msgstr ""

#: ../source/reference/glossary.txt:874
msgid ""
"A :term:`replication` topology where only a single database instance accepts"
" writes. Single-master replication ensures consistency and is the "
"replication topology employed by MongoDB. See :doc:`/core/replica-set-"
"primary`."
msgstr ""

#: ../source/reference/glossary.txt:878
msgid "slave"
msgstr ""

#: ../source/reference/glossary.txt:880
msgid ""
"A read-only database that replicates operations from a :term:`master` "
"database in conventional master/slave replication. In MongoDB, "
":term:`replica sets <replica set>` replace master/slave replication for most"
" use cases. However, for information on master/slave replication, see "
":doc:`/core/master-slave`."
msgstr ""

#: ../source/reference/glossary.txt:886
msgid "snappy"
msgstr ""

#: ../source/reference/glossary.txt:896
msgid "split"
msgstr ""

#: ../source/reference/glossary.txt:898
msgid ""
"The division between :term:`chunks <chunk>` in a :term:`sharded cluster`. "
"See :doc:`/core/sharding-chunk-splitting`."
msgstr ""

#: ../source/reference/glossary.txt:900
msgid "SQL"
msgstr ""

#: ../source/reference/glossary.txt:902
msgid ""
"Structured Query Language (SQL) is a common special-purpose programming "
"language used for interaction with a relational database, including access "
"control, insertions, updates, queries, and deletions. There are some similar"
" elements in the basic SQL syntax supported by different database vendors, "
"but most implementations have their own dialects, data types, and "
"interpretations of proposed SQL standards. Complex SQL is generally not "
"directly portable between major :term:`RDBMS` products. ``SQL`` is often "
"used as metonym for relational databases."
msgstr ""

#: ../source/reference/glossary.txt:912
msgid "SSD"
msgstr ""

#: ../source/reference/glossary.txt:914
msgid ""
"Solid State Disk. A high-performance disk drive that uses solid state "
"electronics for persistence, as opposed to the rotating platters and movable"
" read/write heads used by traditional mechanical hard drives."
msgstr ""

#: ../source/reference/glossary.txt:938
msgid "stale"
msgstr ""

#: ../source/reference/glossary.txt:940
msgid ""
"Refers to the amount of time a :term:`secondary` member of a :term:`replica "
"set` trails behind the current state of the :term:`primary's <primary>`\\ "
":term:`oplog`. If a secondary becomes too stale, it can no longer use "
"replication to catch up to the current state of the primary. See :doc:`/core"
"/replica-set-oplog` and :doc:`/core/replica-set-sync` for more information."
msgstr ""

#: ../source/reference/glossary.txt:917
msgid "standalone"
msgstr ""

#: ../source/reference/glossary.txt:919
msgid ""
"An instance of :program:`mongod` that is running as a single server and not "
"as part of a :term:`replica set`. To convert a standalone into a replica "
"set, see :doc:`/tutorial/convert-standalone-to-replica-set`."
msgstr ""

#: ../source/reference/glossary.txt:558
msgid "storage order"
msgstr ""

#: ../source/reference/glossary.txt:560
msgid "See :term:`natural order`."
msgstr ""

#: ../source/reference/glossary.txt:930
msgid "strict consistency"
msgstr ""

#: ../source/reference/glossary.txt:947
msgid "sync"
msgstr ""

#: ../source/reference/glossary.txt:949
msgid ""
"The :term:`replica set` operation where members replicate data from the "
":term:`primary`. Sync first occurs when MongoDB creates or restores a "
"member, which is called :term:`initial sync`. Sync then occurs continually "
"to keep the member updated with changes to the replica set's data. See "
":doc:`/core/replica-set-sync`."
msgstr ""

#: ../source/reference/glossary.txt:954
msgid "syslog"
msgstr ""

#: ../source/reference/glossary.txt:956
msgid ""
"On UNIX-like systems, a logging process that provides a uniform standard for"
" servers and processes to submit logging information. MongoDB provides an "
"option to send output to the host’s syslog system. See "
":setting:`~systemLog.syslogFacility`."
msgstr ""

#: ../source/reference/glossary.txt:960
msgid "tag"
msgstr ""

#: ../source/reference/glossary.txt:962
msgid ""
"A label applied to a replica set member or shard and used by clients to "
"issue data-center-aware operations. For more information on using tags with "
"replica sets and with shards, see the following sections of this manual: "
":ref:`replica-set-read-preference-tag-sets` and :ref:`shards-tag-sets`."
msgstr ""

#: ../source/reference/glossary.txt:967
msgid "tag set"
msgstr ""

#: ../source/reference/glossary.txt:969
msgid "A document containing zero or more :term:`tags <tag>`."
msgstr ""

#: ../source/reference/glossary.txt:970
msgid "tailable cursor"
msgstr ""

#: ../source/reference/glossary.txt:976
msgid "topology"
msgstr ""

#: ../source/reference/glossary.txt:978
msgid ""
"The state of a deployment of MongoDB instances, including the type of "
"deployment (i.e. standalone, replica set, or sharded cluster) as well as the"
" availability of servers, and the role of each server (i.e. :term:`primary`,"
" :term:`secondary`, :term:`config server`, or :program:`mongos`.)"
msgstr ""

#: ../source/reference/glossary.txt:983
msgid "TSV"
msgstr ""

#: ../source/reference/glossary.txt:985
msgid ""
"A text-based data format consisting of tab-separated values. This format is "
"commonly used to exchange data between relational databases, since the "
"format is well-suited to tabular data. You can import TSV files using "
":program:`mongoimport`."
msgstr ""

#: ../source/reference/glossary.txt:989
msgid "TTL"
msgstr ""

#: ../source/reference/glossary.txt:991
msgid ""
"Stands for \"time to live\" and represents an expiration time or period for "
"a given piece of information to remain in a cache or other temporary storage"
" before the system deletes it or ages it out. MongoDB has a TTL collection "
"feature. See :doc:`/tutorial/expire-data`."
msgstr ""

#: ../source/reference/glossary.txt:996
msgid "unique index"
msgstr ""

#: ../source/reference/glossary.txt:998
msgid ""
"An index that enforces uniqueness for a particular field across a single "
"collection. See :ref:`index-type-unique`."
msgstr ""

#: ../source/reference/glossary.txt:284
msgid "unix epoch"
msgstr ""

#: ../source/reference/glossary.txt:286
msgid ""
"January 1st, 1970 at 00:00:00 UTC. Commonly used in expressing time, where "
"the number of seconds or milliseconds since this point is counted."
msgstr ""

#: ../source/reference/glossary.txt:1000
msgid "unordered query plan"
msgstr ""

#: ../source/reference/glossary.txt:1002
msgid ""
"A query plan that returns results in an order inconsistent with the "
":method:`~cursor.sort()` order. See :ref:`read-operations-query-"
"optimization`."
msgstr ""

#: ../source/reference/glossary.txt:1005
msgid "upsert"
msgstr ""

#: ../source/reference/glossary.txt:1014
msgid "virtual memory"
msgstr ""

#: ../source/reference/glossary.txt:1016
msgid ""
"An application's working memory, typically residing on both disk an in "
"physical RAM."
msgstr ""

#: ../source/reference/glossary.txt:1018
msgid "WGS84"
msgstr ""

#: ../source/reference/glossary.txt:1020
msgid ""
"The default :term:`datum` MongoDB uses to calculate geometry over an Earth-"
"like sphere. MongoDB uses the WGS84 datum for :term:`geospatial` queries on "
":term:`GeoJSON` objects. See the \"EPSG:4326: WGS 84\" specification: "
"`<http://spatialreference.org/ref/epsg/4326/>`_."
msgstr ""

#: ../source/reference/glossary.txt:1025
msgid "working set"
msgstr ""

#: ../source/reference/glossary.txt:1027
msgid ""
"The data that MongoDB uses most often. This data is preferably held in RAM, "
"solid-state drive (SSD), or other fast media. See :ref:`faq-working-set`."
msgstr ""

#: ../source/reference/glossary.txt:1030
msgid "write concern"
msgstr ""

#: ../source/reference/glossary.txt:1037
msgid "write conflict"
msgstr ""

#: ../source/reference/glossary.txt:1044
msgid "write lock"
msgstr ""

#: ../source/reference/glossary.txt:1046
msgid ""
"An exclusive :term:`lock` on a resource such as a collection or database. "
"When a process writes to a resource, it takes an exclusive write lock to "
"prevent other processes from writing to or reading from that resource. For "
"more information on locks, see :doc:`/faq/concurrency`."
msgstr ""

#: ../source/reference/glossary.txt:1051
msgid "writeBacks"
msgstr ""

#: ../source/reference/glossary.txt:1053
msgid ""
"The process within the sharding system that ensures that writes issued to a "
":term:`shard` that *is not* responsible for the relevant chunk get applied "
"to the proper shard. For related information, see :ref:`faq-writebacklisten`"
" and :ref:`server-status-writebacksqueued`."
msgstr ""

#: ../source/reference/glossary.txt:1058
msgid "zlib"
msgstr ""

#: ../source/reference/glossary.txt:1060
msgid ""
"A data compression library that provides higher compression rates at the "
"cost of more CPU, compared to MongoDB's use of :term:`snappy`. You can "
"configure :ref:`WiredTiger <storage-wiredtiger>` to use zlib as its "
"compression library. See http://www.zlib.net and the `WiredTiger compression"
" documentation <http://source.wiredtiger.com/2.4.1/compression.html>`_ for "
"more information."
msgstr ""

#: ../source/includes/extracts/additional-resources-quick-reference.rst:4
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-quick-reference.rst:6
msgid ""
"`Quick Reference Cards <https://www.mongodb.com/lp/misc/quick-reference-"
"cards?jmp=docs>`_"
msgstr ""

#: ../source/reference/glossary.txt:0
msgid "On this page"
msgstr ""

#: ../source/reference/glossary.txt:50
msgid ""
"Any of a variety of operations that reduces and summarizes large sets of "
"data. MongoDB's :method:`~db.collection.aggregate()` and "
":method:`~db.collection.mapReduce()` methods are two examples of aggregation"
" operations. For more information, see :doc:`/aggregation`."
msgstr ""

#: ../source/reference/glossary.txt:127
msgid "Client can also refer to a single thread or process."
msgstr ""

#: ../source/reference/glossary.txt:170
msgid ""
"A :program:`mongod` instance that stores all the metadata associated with a "
":term:`sharded cluster`. See :ref:`sharding-config-server`."
msgstr ""

#: ../source/reference/glossary.txt:267
msgid "durable"
msgstr ""

#: ../source/reference/glossary.txt:269
msgid ""
"A write operation is durable when it will persist across a shutdown (or "
"crash) and restart of one or more server processes. For a single "
":program:`mongod` server, a write operation is considered durable when it "
"has been written to the server's :term:`journal` file. For a :doc:`replica "
"set </core/replication-introduction>`, a write operation is considerable "
"durable once the write operation is durable on a :writeconcern:`majority of "
"voting nodes <\"majority\">` in the replica set; i.e. written to a majority "
"of voting nodes' journal files."
msgstr ""

#: ../source/reference/glossary.txt:290
msgid ""
"A property of a distributed system that allows changes to the system to "
"propagate gradually. In a database system, this means that readable members "
"are not required to reflect the latest writes at all times."
msgstr ""

#: ../source/includes/extracts/replica-read-consistency-single-primary.rst:2
#: ../source/includes/extracts/replica-read-consistency-single-primary.rst:2
msgid ""
"In MongoDB, in a replica set with one primary member [#edge-"
"cases-2-primaries]_,"
msgstr ""

#: ../source/includes/extracts/replica-read-consistency-single-primary.rst:5
#: ../source/includes/extracts/replica-read-consistency-single-primary.rst:5
msgid ""
"With :readconcern:`\"local\"` ``readConcern``, reads from the primary "
"reflect the latest writes in absence of a failover;"
msgstr ""

#: ../source/includes/extracts/replica-read-consistency-single-primary.rst:8
#: ../source/includes/extracts/replica-read-consistency-single-primary.rst:8
msgid ""
"With :readconcern:`\"majority\"` ``readConcern``, read operations from the "
"primary or the secondaries have :term:`eventual consistency`."
msgstr ""

#: ../source/reference/glossary.txt:298
msgid ""
"In the context of :term:`aggregation framework`, expressions are the "
"stateless transformations that operate on the data that passes through a "
":term:`pipeline`. See :doc:`/core/aggregation-pipeline`."
msgstr ""

#: ../source/reference/glossary.txt:345
msgid ""
"A convention for storing large files in a MongoDB database. All of the "
"official MongoDB drivers support this convention, as does the "
":program:`mongofiles` program. See :doc:`/core/gridfs`."
msgstr ""

#: ../source/reference/glossary.txt:369
msgid "A data structure that optimizes queries. See :doc:`/indexes`."
msgstr ""

#: ../source/reference/glossary.txt:173
msgid "init script"
msgstr ""

#: ../source/reference/glossary.txt:472
msgid ""
"A data processing and aggregation paradigm consisting of a \"map\" phase "
"that selects data and a \"reduce\" phase that transforms the data. In "
"MongoDB, you can run arbitrary aggregations over data using map-reduce. For "
"map-reduce implementation, see :doc:`/core/map-reduce`. For all approaches "
"to aggregation, see :doc:`/aggregation`."
msgstr ""

#: ../source/reference/glossary.txt:621
msgid ""
"A member of a :term:`replica set` that cannot become primary because its "
":rsconf:`members[n].priority` is ``0``. See :doc:`/core/replica-set-"
"priority-0-member`."
msgstr ""

#: ../source/reference/glossary.txt:643
msgid ""
"A series of operations in an :term:`aggregation` process. See :doc:`/core"
"/aggregation-pipeline`."
msgstr ""

#: ../source/reference/glossary.txt:703
msgid ""
"A configurable value that helps determine which members in a :term:`replica "
"set` are most likely to become :term:`primary`. See "
":rsconf:`members[n].priority`."
msgstr ""

#: ../source/reference/glossary.txt:719
msgid ""
"A read request. MongoDB uses a :term:`JSON`-like query language that "
"includes a variety of :term:`query operators <operator>` with names that "
"begin with a ``$`` character. In the :program:`mongo` shell, you can issue "
"queries using the :method:`db.collection.find()` and "
":method:`db.collection.findOne()` methods. See :ref:`read-operations-"
"queries`."
msgstr ""

#: ../source/reference/glossary.txt:744
msgid "read concern"
msgstr ""

#: ../source/reference/glossary.txt:746
msgid ""
"Specifies a level of isolation for read operations. For example, you can use"
" read concern to only read data that has propagated to a majority of nodes "
"in a :term:`replica set`. See :doc:`/reference/read-concern`."
msgstr ""

#: ../source/includes/fact-deprecated-http-interface.rst:3
msgid "HTTP interface for MongoDB"
msgstr ""

#: ../source/reference/glossary.txt:821
msgid ""
"A set of privileges that permit :term:`actions <action>` on specified "
":term:`resources <resource>`. Roles assigned to a user determine the user's "
"access to resources and operations. See :doc:`/security`."
msgstr ""

#: ../source/reference/glossary.txt:857
msgid ""
"The set of nodes comprising a :term:`sharded <sharding>` MongoDB deployment."
" A sharded cluster consists of config servers, shards, and one or more "
":program:`mongos` routing processes. See :doc:`/core/sharded-cluster-"
"components`."
msgstr ""

#: ../source/reference/glossary.txt:888
msgid ""
"A compression/decompression library designed to balance efficient "
"computation requirements with reasonable compression rates. Snappy is the "
"default compression library for MongoDB's use of :ref:`WiredTiger <storage-"
"wiredtiger>`. See `Snappy <https://google.github.io/snappy/>`_ and the "
"`WiredTiger compression documentation "
"<http://source.wiredtiger.com/2.4.1/compression.html>`_ for more "
"information."
msgstr ""

#: ../source/reference/glossary.txt:923
msgid "storage engine"
msgstr ""

#: ../source/reference/glossary.txt:925
msgid ""
"The part of a database that is responsible for managing how data is stored "
"and accessed, both in memory and on disk. Different storage engines perform "
"better for specific workloads. See :doc:`/core/storage-engines` for specific"
" details on the built-in storage engines in MongoDB."
msgstr ""

#: ../source/reference/glossary.txt:932
msgid ""
"A property of a distributed system requiring that all members always reflect"
" the latest changes to the system. In a database system, this means that any"
" system that can provide data must reflect the latest writes at all times."
msgstr ""

#: ../source/reference/glossary.txt:972
msgid ""
"For a :term:`capped collection`, a tailable cursor is a cursor that remains "
"open after the client exhausts the results in the initial cursor. As clients"
" insert new documents into the capped collection, the tailable cursor "
"continues to retrieve documents."
msgstr ""

#: ../source/reference/glossary.txt:1007
msgid ""
"An option for update operations; e.g. :method:`~db.collection.update()`, "
":method:`~db.collection.findAndModify()`. If set to true, the update "
"operation will either update the document(s) matched by the specified query "
"or if no documents match, insert a new document. The new document will have "
"the fields indicated in the operation. See :ref:`upsert-parameter`."
msgstr ""

#: ../source/reference/glossary.txt:1032
msgid ""
"Specifies whether a write operation has succeeded. Write concern allows your"
" application to detect insertion errors or unavailable :program:`mongod` "
"instances. For :term:`replica sets <replica set>`, you can configure write "
"concern to confirm replication to a specified number of members. See "
":doc:`/reference/write-concern`."
msgstr ""

#: ../source/reference/glossary.txt:1039
msgid ""
"A situation in which two concurrent operations, at least one of which is a "
"write, attempt to use a resource in a way that would violate constraints "
"imposed by a storage engine using optimistic :term:`concurrency control`. "
"MongoDB will transparently abort and retry one of the conflicting "
"operations."
msgstr ""

#: ../source/includes/footnote-two-primaries-edge-cases.rst:1
msgid ""
"In :ref:`some circumstances <edge-cases>`, two nodes in a replica set may "
"*transiently* believe that they are the primary, but at most, one of them "
"will be able to complete writes with :writeconcern:`{ w: \"majority\" } "
"<\"majority\">` write concern. The node that can complete :writeconcern:`{ "
"w: \"majority\" } <\"majority\">` writes is the current primary, and the "
"other node is a former primary that has not yet recognized its demotion, "
"typically due to a :term:`network partition`. When this occurs, clients that"
" connect to the former primary may observe stale data despite having "
"requested read preference :readmode:`primary`, and new writes to the former "
"primary will eventually roll back."
msgstr ""

#~ msgid ""
#~ "Any of a variety of operations that reduces and summarizes large sets of "
#~ "data. MongoDB's :method:`~db.collection.aggregate()` and "
#~ ":method:`~db.collection.mapReduce()` methods are two examples of aggregation"
#~ " operations. For more information, see :doc:`/core/aggregation`."
#~ msgstr ""

#~ msgid ""
#~ "A :program:`mongod` instance that stores all the metadata associated with a "
#~ ":term:`sharded cluster`. A production sharded cluster requires three config "
#~ "servers, each on a separate machine. See :ref:`sharding-config-server`."
#~ msgstr ""

#~ msgid "control script"
#~ msgstr ""

#~ msgid ""
#~ "A property of a distributed system that allows changes to the system to "
#~ "propagate gradually. In a database system, this means that readable members "
#~ "are not required to reflect the latest writes at all times. In MongoDB, "
#~ "reads to a primary have :term:`strict consistency`; reads to secondaries "
#~ "have *eventual consistency*."
#~ msgstr ""

#~ msgid ""
#~ "In the context of :term:`aggregation framework`, expressions are the "
#~ "stateless transformations that operate on the data that passes through a "
#~ ":term:`pipeline`. See :doc:`/core/aggregation`."
#~ msgstr ""

#~ msgid ""
#~ "A convention for storing large files in a MongoDB database. All of the "
#~ "official MongoDB drivers support this convention, as does the "
#~ ":program:`mongofiles` program. See :doc:`/core/gridfs` and "
#~ ":doc:`/reference/gridfs`."
#~ msgstr ""

#~ msgid "A data structure that optimizes queries. See :doc:`/core/indexes`."
#~ msgstr ""

#~ msgid ""
#~ "A data processing and aggregation paradigm consisting of a \"map\" phase "
#~ "that selects data and a \"reduce\" phase that transforms the data. In "
#~ "MongoDB, you can run arbitrary aggregations over data using map-reduce. For "
#~ "map-reduce implementation, see :doc:`/core/map-reduce`. For all approaches "
#~ "to aggregation, see :doc:`/core/aggregation`."
#~ msgstr ""

#~ msgid ""
#~ "A member of a :term:`replica set` that cannot become primary because its "
#~ ":data:`~replSetGetConfig.members[n].priority` is ``0``. See :doc:`/core"
#~ "/replica-set-priority-0-member`."
#~ msgstr ""

#~ msgid ""
#~ "A series of operations in an :term:`aggregation` process. See "
#~ ":doc:`/core/aggregation`."
#~ msgstr ""

#~ msgid ""
#~ "A configurable value that helps determine which members in a :term:`replica "
#~ "set` are most likely to become :term:`primary`. See "
#~ ":data:`~replSetGetConfig.members[n].priority`."
#~ msgstr ""

#~ msgid ""
#~ "A read request. MongoDB uses a :term:`JSON`-like query language that "
#~ "includes a variety of :term:`query operators <operator>` with names that "
#~ "begin with a ``$`` character. In the :program:`mongo` shell, you can issue "
#~ "queries using the :method:`~db.collection.find()` and "
#~ ":method:`~db.collection.findOne()` methods. See :ref:`read-operations-"
#~ "queries`."
#~ msgstr ""

#~ msgid ""
#~ "A set of privileges that permit :term:`actions <action>` on specified "
#~ ":term:`resources <resource>`. Roles assigned to a user determine the user's "
#~ "access to resources and operations. See :doc:`/core/security-introduction`."
#~ msgstr ""

#~ msgid ""
#~ "The set of nodes comprising a :term:`sharded <sharding>` MongoDB deployment."
#~ " A sharded cluster consists of three config processes, one or more replica "
#~ "sets, and one or more :program:`mongos` routing processes. See :doc:`/core"
#~ "/sharded-cluster-components`."
#~ msgstr ""

#~ msgid ""
#~ "A compression/decompression library designed to balance efficient "
#~ "computation requirements with reasonable compression rates. Snappy is the "
#~ "default compression library for MongoDB's use of :ref:`WiredTiger <storage-"
#~ "wiredtiger>`. See `Snappy <https://code.google.com/p/snappy/>`_ and the "
#~ "`WiredTiger compression documentation "
#~ "<http://source.wiredtiger.com/2.4.1/compression.html>`_ for more "
#~ "information."
#~ msgstr ""

#~ msgid ""
#~ "A property of a distributed system requiring that all members always reflect"
#~ " the latest changes to the system. In a database system, this means that any"
#~ " system that can provide data must reflect the latest writes at all times. "
#~ "In MongoDB, in a replica set with one primary member, reads from that "
#~ "primary have strict consistency [#edge-cases-2-primaries]_; reads from "
#~ "secondary members have :term:`eventual consistency`."
#~ msgstr ""

#~ msgid ""
#~ "For a :term:`capped collection`, a tailable cursor is a cursor that remains "
#~ "open after the client exhausts the results in the initial cursor. As clients"
#~ " insert new documents into the capped collection, the tailable cursor "
#~ "continues to retrieve documents. See :doc:`/tutorial/create-tailable-"
#~ "cursor`."
#~ msgstr ""

#~ msgid ""
#~ "An option for update operations. If set to true, the update operation will "
#~ "either update the first document matched by a query or insert a new document"
#~ " if none matches. The new document will have the fields implied by the "
#~ "operation. The :method:`~db.collection.update()` and "
#~ ":method:`~db.collection.findAndModify()` have the option. See :ref:`upsert-"
#~ "parameter`."
#~ msgstr ""

#~ msgid ""
#~ "Specifies whether a write operation has succeeded. Write concern allows your"
#~ " application to detect insertion errors or unavailable :program:`mongod` "
#~ "instances. For :term:`replica sets <replica set>`, you can configure write "
#~ "concern to confirm replication to a specified number of members. See "
#~ ":doc:`/core/write-concern`."
#~ msgstr ""

#~ msgid ""
#~ "A situation in which two concurrent operations, at least one of which is a "
#~ "write, attempt to use a resource in a way that would violate constraints "
#~ "imposed by a storage engine using optimistic :term:`concurrency control`. "
#~ "MongoDB will abort and transparently retry one of the conflicting "
#~ "operations."
#~ msgstr ""

#~ msgid ""
#~ "In some circumstances, two nodes in a replica set may *transiently* believe "
#~ "that they are the primary, but at most, one of them will be able to complete"
#~ " writes with :ref:`{w: majority} write concern <wc-w>`. The node that can "
#~ "complete :ref:`{w: majority} <wc-w>` writes is the current primary, and the "
#~ "other node is a former primary that has not yet recognized its demotion, "
#~ "typically due to a :term:`network partition`. When this occurs, clients that"
#~ " connect to the former primary may observe stale data despite having "
#~ "requested read preference :readmode:`primary`."
#~ msgstr ""
