.. meta::
   :robots: noindex, nosnippet

.. _java-bundle-a-realm:

==============================
Bundle a Realm File - Java SDK
==============================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. note:: Bundle Synchronized Realms

   SDK version 10.9.0 introduced the ability to bundle synchronized realms.
   Before version 10.9.0, you could only bundle local realms.

Realm supports **bundling** realm files. When you bundle
a realm file, you include a database and all of its data in your
application download.

This allows users to start applications for the first time with a set of
initial data. For synced realms, bundling can avoid a lengthy
initial download the first time a user opens your application. Instead,
users must only download the synced changes that occurred since you
generated the bundled file.

.. include:: /includes/note-bundling-synced-realms.rst

Overview
--------

To create and bundle a realm file with your application:

1. :ref:`Create a realm file <java-create-a-realm-for-bundling>` that
   contains the data you'd like to bundle.

#. :ref:`Bundle the realm file <java-bundle-realm-file>` in the
   :file:`/<app name>/src/main/assets` folder of your production
   application.

#. In your production application,
   :ref:`open the realm from the bundled asset file
   <java-open-a-realm-from-a-bundled-realm-file>`. For synced
   realms, you must supply the partition key.

.. include:: /includes/note-writecopy-same-type-sync-only.rst

.. _java-create-a-realm-for-bundling:

Create a Realm File for Bundling
--------------------------------

1. Build a temporary realm app that shares the data model of your
   application.

#. Open a realm and add the data you wish to bundle. If using a
   synchronized realm, allow time for the realm to fully sync.

#. Use the :java-sdk:`writeCopyTo() <io/realm/Realm.html#writeCopyTo-java.io.File->` 
   method to copy the realm to a new file:

   .. tabs-realm-languages::

      .. tab::
         :tabid: kotlin

         .. include:: /examples/generated/java/sync/BundleTest.snippet.copy-a-realm-file.kt.rst

      .. tab::
         :tabid: java

         .. include:: /examples/generated/java/sync/BundleTest.snippet.copy-a-realm-file.java.rst

   ``writeCopyTo()`` automatically compacts your realm to the smallest
   possible size before copying.

   .. tip:: Differences Between Synced Realms and Local-only Realms

      The above example uses a ``SyncConfiguration`` to configure a synchronized
      realm. To create a copy of a local realm, configure your realm
      with ``RealmConfiguration`` instead.

.. _java-bundle-realm-file:

Bundle a Realm File in Your Production Application
----------------------------------------------------

Now that you have a copy of the realm that contains the initial data,
bundle it with your production application.

1. Search your application logs to find the location of the realm file
   copy you just created.

#. Using the "Device File Explorer" widget in the bottom right of your
   Android Studio window, navigate to the file.

#. Right click on the file and select "Save As". Navigate to the
   :file:`/<app name>/src/main/assets` folder of your production application.
   Save a copy of the realm file there.

.. tip:: Asset Folders

   If your application does not already contain an asset folder, you can
   create one by right clicking on your top-level application
   folder (:file:`<app name>`) in Android Studio and selecting
   :guilabel:`New > Folder > Assets Folder` in the menu.

.. _java-open-a-realm-from-a-bundled-realm-file:

Open a Realm from a Bundled Realm File
--------------------------------------

Now that you have a copy of the realm included with your production
application, you need to add code to use it. Use the :java-sdk:`assetFile()
<io/realm/RealmConfiguration.Builder.html#assetFile-java.lang.String->`
method when configuring your realm to open the realm
from the bundled file:

.. tabs-realm-languages::

   .. tab::
      :tabid: kotlin

      .. include:: /examples/generated/java/sync/BundleTest.snippet.use-bundled-realm-file.kt.rst

   .. tab::
      :tabid: java

      .. include:: /examples/generated/java/sync/BundleTest.snippet.use-bundled-realm-file.java.rst

.. tip:: Differences Between Synced Realms and Local-only Realms

   The above example uses a ``SyncConfiguration`` to configure a synchronized
   realm. To create a copy of a local realm, configure your realm
   with ``RealmConfiguration`` instead.
