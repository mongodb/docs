===============
isInteractive()
===============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. method:: isInteractive()

   .. versionadded:: 4.2

   Returns a boolean value indicating if the current
   :mongosh:`mongosh </>` session is running in interactive mode or in
   script mode:
   
   - ``true`` if in interactive mode
   
   - ``false`` if in script mode

Examples
--------

Interactive Mode
~~~~~~~~~~~~~~~~

Issuing Operations inside the Shell
```````````````````````````````````

Connect :mongosh:`mongosh </>` to a deployment. Inside
:mongosh:`mongosh </>`, run:

.. code-block:: javascript

   isInteractive()

The method returns ``true``.

Running a Javascript File inside ``mongosh``
````````````````````````````````````````````

Create a JavaScript ``testExample.js`` file with the content:

.. code-block:: javascript

   print("Is the shell in interactive mode?  " + isInteractive() );

Connect :mongosh:`mongosh </>` to a deployment. Inside
:mongosh:`mongosh </>`, load the javascript file (see
:method:`load()`):

.. code-block:: javascript

   let loadStatus = load("testExample.js");  //You may need to specify the path to the file

The method returns the following in :mongosh:`mongosh </>`:

.. code-block:: none

   Is the shell in interactive mode?  true


Script Mode
~~~~~~~~~~~

Create a JavaScript ``testExample.js`` file with the content:

.. code-block:: javascript

   print("\n\nIs the shell in interactive mode?  " + isInteractive() );

From a terminal/command-line prompt (i.e. not inside
:mongosh:`mongosh </>`), specify the javascript file to
:mongosh:`mongosh </>` in order to execute the file, as follows:

.. code-block:: bash

   mongo localhost:27017/test testExample.js

The operation prints to the terminal information about the MongoDB
shell version and various information followed by:

.. code-block:: none

   MongoDB shell version v4.4.0
   ...


   Is the shell in interactive mode?  false

