===========================
_hashBSONElement (internal)
===========================

.. default-domain:: mongodb

.. dbcommand:: _hashBSONElement

   .. versionaddded:: 2.3.2

   :dbcommand:`_hashBSONElement` 
   is an internal command that computes the MD5 hash of a BSON element.
   Eight (8) bytes are returned from the 16 byte MD5 hash.
   
   :param BSONElement key: specifies the BSON element to hash.
   
   :param integer seed: specifies a seed to use to compute the hash.
   
   :returns: A document consisting of ``key``, ``seed``, ``out``
             and ``ok`` fields.
           
   :field BSONType key: the original BSON element. 
   :field integer seed: the seed used for the hash, defaults to 0.
   :field NumberLong out: the decimal result of the hash.
   :field integer ok:   exit code (1 = ok, 0 = error)
                  

   .. |dbcommand| replace:: :dbcommand:`_hashBSONElement`
   .. include:: /includes/note-enabletestcommands.rst
   
   .. example::
   
      .. code-block:: sh
      
         mongod --setParameter=enableTestCommands=1
         
   .. example::
    
      Hash an ISODate string:
      
      .. code-block:: javascript
       
         > db.runCommand({_hashBSONElement: ISODate("2013-02-12T22:12:57.211Z")})
         
      Which returns the following document:

      .. code-block:: javascript

         {
                "key" : ISODate("2013-02-12T22:12:57.211Z"),
                "seed" : 0,
                "out" : NumberLong("-4185544074338741873"),
                "ok" : 1
         }

      Hash the same ISODate string but specify a seed value:

      .. code-block:: javascript
             
         > db.runCommand({_hashBSONElement: ISODate("2013-02-12T22:12:57.211Z"), seed:2013})

      Which returns the following document:

      .. code-block:: javascript
      
         {
         	"key" : ISODate("2013-02-12T22:12:57.211Z"),
         	"seed" : 2013,
         	"out" : NumberLong("7845924651247493302"),
         	"ok" : 1
         }