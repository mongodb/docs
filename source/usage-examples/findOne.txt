.. _laravel-find-one-usage:

===============
Find a Document
===============

.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: find one, retrieve, code example, first

.. include:: /includes/usage-examples/operation-description.rst

   .. replacement:: operator-description

      You can retrieve a single document from a collection

   .. replacement:: result-operation

      the ``first()`` method to return one document

If multiple documents match the query filter, ``first()`` returns the
first matching document according to the documents' :term:`natural
order` in the database or according to the sort order that you can
specify by using the ``orderBy()`` method.

.. tip::

   To learn about other ways to retrieve documents with the
   {+odm-short+}, see the :ref:`laravel-fundamentals-retrieve` guide.

Example
-------

Select from the following :guilabel:`Eloquent` and :guilabel:`Query
Builder` tabs to view usage examples for the same operation that use
each corresponding query syntax:

.. tabs::

   .. tab:: Eloquent
      :tabid: eloquent-model-count

      This example performs the following actions:
      
      - Uses the ``Movie`` Eloquent model to represent the ``movies``
        collection in the ``sample_mflix`` database 
      - Retrieves a document from the ``movies`` collection that matches
        a query filter
      - Prints the retrieved document
      
      The example calls the following methods on the ``Movie`` model:
      
      - ``where()``: Matches documents in which the value of the
        ``directors`` field includes ``"Rob Reiner"``
      - ``orderBy()``: Sorts matched documents by their ascending ``_id`` values
      - ``first()``: Retrieves only the first matching document
      
      .. io-code-block::
         :copyable: true
      
         .. input:: ../includes/usage-examples/FindOneTest.php
            :start-after: begin-eloquent-find-one
            :end-before: end-eloquent-find-one
            :language: php
            :dedent:
      
         .. output::
            :language: console
            :visible: false
      
            // Result is truncated
      
            {
              "_id": ...,
              "title": "This Is Spinal Tap",
              "directors": [ "Rob Reiner" ],
               ...
            }

   .. tab:: Query Builder
      :tabid: query-builder-count

      This example performs the following actions:
      
      - Accesses the ``movies`` collection by calling the ``table()``
        method from the ``DB`` facade
      - Retrieves a document from the ``movies`` collection that matches
        a query filter
      - Prints the ``title`` field of the retrieved document

      The example calls the following query builder methods:
      
      - ``where()``: Matches documents in which the value of the
        ``directors`` field includes ``"Rob Reiner"``
      - ``orderBy()``: Sorts matched documents by their ascending ``_id`` values
      - ``first()``: Retrieves only the first matching document
      
      .. io-code-block::
      
         .. input:: ../includes/usage-examples/FindOneTest.php
            :start-after: begin-qb-find-one
            :end-before: end-qb-find-one
            :language: php
            :dedent:
      
         .. output::
            :language: console
            :visible: false

            This Is Spinal Tap

.. include:: /includes/usage-examples/fact-edit-laravel-app.rst
