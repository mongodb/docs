======================
Installation Checklist
======================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Overview
--------

You must make the following decisions before you install |onprem|. During
the install procedures you will make choices based on your decisions here.

If you have not yet read the :doc:`Introduction </application>`, please
do so now. The introduction describes the :doc:`Ops Manager components
</core/system-overview>` and :doc:`common topologies </core/deployments>`.

The sequence for installing |onprem| is to:

1. Plan your installation according to the questions on this page.

2. Provision servers that meet the :doc:`/core/requirements`.

   .. warning::

      Failure to configure servers according to the
      :doc:`/core/requirements`, including the requirement to read the
      :manual:`MongoDB Production Notes
      </administration/production-notes>`, can lead to production failure.

3. :doc:`Install the Application Database and optional Backup Database
   </tutorial/prepare-backing-mongodb-instances>`.

4. :doc:`/tutorial/nav/install-application`.

   .. note::

      To install a simple evaluation deployment on a single server, see
      :doc:`/tutorial/install-simple-test-deployment`.

Topology Decisions
------------------

Do you require redundancy and/or high availability?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The :doc:`topology </core/deployments>` you choose for your deployment
affects the redundancy and availability of both your metadata and
snapshots, and the availability of the |application|.

|onprem| stores application metadata and snapshots in the |application|
Database and Backup Database respectively. To provide data redundancy, run
each database as a three-member :term:`replica set` on multiple servers.

To provide high availability for write operations to the databases,
set up each replica set so that all three members hold data.
This way, if a member is unreachable the replica set can still write data.
|onprem| uses ``w:2`` :manual:`write concern </reference/write-concern>`,
which requires acknowledgement from the primary and one secondary for each
write operation.

To provide high availability for the |application|, run at least two
instances of the application and use a load balancer. A load balancer placed
in front of the |application| must not return cached content. For more
information, see :doc:`/tutorial/configure-application-high-availability`.

The following tables describe the pros and cons for different topologies.

Test Install
````````````

This deployment runs on one server and has no data-redundancy. If you lose the
server, you must start over from scratch.

.. list-table::
   :widths: 15 85

   * - **Pros:**

     - Needs only needs one server.

   * - **Cons:**

     - If you lose the server, you lose everything: users and projects,
       metadata, backups, automation configurations, stored monitoring
       metrics, etc.

.. _production-install-with-redundancy:

Production Install with Redundant Metadata and Snapshots
````````````````````````````````````````````````````````

This install runs on at least three servers and provides redundancy for
your metadata and snapshots. The replica sets for the |application|
Database and the Backup Database are each made up of two data-bearing
members and an arbiter.

.. list-table::
   :widths: 15 85

   * - **Pros:**

     - Can run on as few as three servers. |onprem| metadata and backups
       are redundant from the perspective of the |application|.

   * - **Cons:**

     - No high availability, neither for the databases nor the application:

       1. If the |application| Database or the Backup Database loses a
          data-bearing member, you must restart
          the member to gain back full |onprem| functionality. For the
          Backup Database, |onprem| will not write new snapshots until the
          member is again running.

       2. Loss of the |onprem| instance requires you to manually start a new
          |onprem| instance. No |onprem| functionality is available while the
          application is down.

Production Install with Highly Available Metadata and Snapshots
```````````````````````````````````````````````````````````````

This install requires at least three servers. The replica sets for the
|application| Database and the Backup Database each comprise at least
three *data-bearing* members. This requires more storage and memory than
for the :ref:`production-install-with-redundancy`.

.. list-table::
   :widths: 15 85

   * - **Pros:**

     - You can lose a member of the |application| Database or Backup
       Database and still maintain |onprem| availability. No |onprem|
       functionality is lost while the member is down.

   * - **Cons:**

     - Loss of the |onprem| instance requires you to manually start a new
       |onprem| instance. No |onprem| functionality is available while the
       application is down.

Production Install with a Highly Available |onprem| Application
```````````````````````````````````````````````````````````````

This runs multiple |onprem| Applications behind a load balancer and
requires infrastructure outside of what |onprem| offers. For details, see
:doc:`/tutorial/configure-application-high-availability`.

.. list-table::
   :widths: 15 85

   * - **Pros:**

     - |onprem| continues to be available even when any individual server is lost.

   * - **Cons:**

     - Requires a larger number of servers, and requires a load balancer
       capable of routing traffic to available application servers.

Will you deploy managed MongoDB instances on servers that have no internet access?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you use Automation and if the servers where you will deploy MongoDB do
not have internet access, then you must configure |onprem| to locally
store and share the binaries used to deploy MongoDB so that the {+aagent+}s can download them directly from |onprem|.

You must configure local mode and store the binaries before you create the
first managed MongoDB deployment from |onprem|. For more information, see
:doc:`/tutorial/configure-local-mode`.

Will you use a proxy for the |onprem| application's outbound network connections?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If |onprem| will use a proxy server to access external services, you must
configure the proxy settings in |onprem|'s ``conf-mms.properties``
configuration file. If you have already started |onprem|, you must restart
after configuring the proxy settings.

.. COMMENT: In the install procedure, add a step to see /tutorial/use-opsmanager-with-http-proxy

Security Decisions
------------------

Will you use authentication and/or SSL for the connections to the backing databases?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you will use authentication or SSL for connections to the |application|
Database and Backup Database, you must configure those options on each
database when :doc:`deploying the database
</tutorial/prepare-backing-mongodb-instances>` and then you must configure
|onprem| with the necessary certificate information for accessing the
databases. For details, see
:doc:`/tutorial/configure-ssl-connection-to-backing-mongodb`

Will you use LDAP for user authenticate to |onprem|?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you want to use LDAP for user management, you can configure LDAP
authentication before or after creating your first project. There are different
prerequisites for implementing a new LDAP authentication scheme and converting
existing authentication scheme to LDAP. To learn more about these differences,
see :ref:`ldap-new-vs-convert`.

For details on LDAP authentication, see
:doc:`/tutorial/configure-for-ldap-authentication`.

Will you use SSL (HTTPS) for connections to the |onprem| application?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you will use SSL for connections to |onprem| from agents, users, and
the API, then you must configure |onprem| to use SSL. The procedure to
install |onprem| includes the option to configure SSL access.

.. COMMENT This needs updates: /tutorial/configure-ssl-connection-to-web-interface

Backup Decisions
----------------

Will the servers that run your Backup Daemons have internet access?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If the servers that run your Backup Daemons have no internet access, you
must configure offline binary access for the Backup Daemon before running
the Daemon. The :doc:`install procedure </tutorial/nav/advanced-deployments>`
includes the option to configure offline binary access.

Are certain backups required to be in certain data centers?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you need to assign backups of particular MongoDB deployments to
particular data centers, then each data center requires its own
|onprem| instance, Backup Daemon, and {+bagent+}. The separate |onprem|
instances must share a single dedicated |application| Database. The {+bagent+} in each data center must use the URL for its local |onprem| instance,
which you can configure through either different hostnames or
split-horizon DNS. For detailed requirements, see
:doc:`/tutorial/assign-snapshot-stores-to-data-center`.
