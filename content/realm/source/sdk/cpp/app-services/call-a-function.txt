.. meta::
   :robots: noindex, nosnippet

.. _cpp-call-a-function:

=========================
Call a Function - C++ SDK
=========================

.. meta:: 
  :keywords: code example

.. facet::
  :name: genre
  :values: reference

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

The examples on this page demonstrate calling an :ref:`Atlas Function <functions>` 
named ``concatenate`` that takes two arguments, concatenates them, and 
returns the result:

.. code-block:: javascript

   // concatenate: concatenate two strings
   exports = function(a, b) {
     return a + b;
   };

.. _cpp-call-a-function-by-name:

Call a Function By Name
-----------------------

.. include:: /includes/important-sanitize-client-data-in-functions.rst

To execute a function from the C++ SDK, use the 
:cpp-sdk:`call_function() <structrealm_1_1user.html#a82ab02822dd96e8d44201b996dd6ed0c>` 
member function on the ``user`` object. Pass in the name of the 
function as a string for the first parameter. This function takes two arguments,
which we provide as a string array of arguments:

.. literalinclude:: /examples/generated/cpp/call-function.snippet.call-a-function.cpp
   :language: cpp

The callback can provide an optional string result, or an optional error.
In the example above, we check that the result has a value.
