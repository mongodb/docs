======================
Upgrade MongoDB to 3.0
======================

.. default-domain:: mongodb

MongoDB 3.0 is currently in development. While 3.0 release candidates
are currently available, these versions of MongoDB are for **testing
only and not for production use**.

In the general case, the upgrade from MongoDB 2.6 to 3.0 is a
binary-compatible "drop-in" upgrade: shut down the :program:`mongod`
instances and replace them with :program:`mongod` instances running
3.0. **However**, before you attempt any upgrade please familiarize
yourself with the content of this document, particularly the procedure
for :ref:`upgrading sharded clusters <3.0-upgrade-cluster>`.

.. _3.0-upgrade-considerations:

Upgrade Recommendations and Checklists
--------------------------------------

When upgrading, consider the following:

Upgrade Requirements
~~~~~~~~~~~~~~~~~~~~

To upgrade an existing MongoDB deployment to 3.0, you must be running
2.6. If you're running a version of MongoDB before 2.6, you *must*
upgrade to 2.6 before upgrading to 3.0. See
:doc:`/release-notes/2.6-upgrade` for the procedure to upgrade from 2.4
to 2.6. Once upgraded to MongoDB 2.6, you **cannot** downgrade to any
version earlier than MongoDB 2.4.

Preparedness
~~~~~~~~~~~~

Before upgrading MongoDB, always test your application in a staging
environment before deploying the upgrade to your production
environment.

Some changes in MongoDB 2.6 require manual checks and intervention.
Before beginning your upgrade, see the
:doc:`/release-notes/3.0-compatibility` document to ensure that your
applications and deployments are compatible with MongoDB 3.0. Resolve
the incompatibilities in your deployment before starting the upgrade.

Downgrade Limitations
~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-3.0-downgrade-path.rst

If you upgrade to 3.0 and have run :dbcommand:`authSchemaUpgrade`, you
**cannot** downgrade to 2.6 without disabling :option:`--auth` or
restoring a pre-upgrade backup, as :dbcommand:`authSchemaUpgrade`
discards the ``MONGODB-CR`` credentials used in 2.6.

Package Upgrades
~~~~~~~~~~~~~~~~

If you installed MongoDB from the MongoDB ``apt`` or ``yum`` repositories,
upgrade to 3.0 using the package manager.

For Debian, Ubuntu, and related operating systems, type these commands:

.. code-block:: javascript

   sudo apt-get update
   sudo apt-get install mongodb-org

For Red Hat Enterprise, CentOS, Fedora, or Amazon Linux:

.. code-block:: javascript

   sudo yum install mongodb-org

If you did not install the ``mongodb-org`` package, and installed a subset
of MongoDB components replace ``mongodb-org`` in the commands above with
the appropriate package names.

See installation instructions for :doc:`Ubuntu
</tutorial/install-mongodb-on-ubuntu>`, :doc:`RHEL
</tutorial/install-mongodb-on-red-hat-centos-or-fedora-linux>`,
:doc:`Debian </tutorial/install-mongodb-on-debian>`, or :doc:`other Linux
Systems </tutorial/install-mongodb-on-linux>` for a list of the available
packages and complete MongoDB installation instructions.

Upgrade MongoDB Processes
-------------------------

.. _3.0-upgrade-standalone:

Upgrade Standalone ``mongod`` Instance to MongoDB 3.0
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Upgrade Binaries
````````````````

The following steps outline the procedure to upgrade a standalone
:program:`mongod` from version 2.6 to 3.0. To upgrade from version
2.4 to 3.0, :doc:`upgrade to version 2.6
</release-notes/2.6-upgrade>` *first*, and then follow the procedure to
upgrade from 2.6 to 3.0.

..  include:: /includes/steps/3.0-upgrade-mongod.rst

.. _3.0-upgrade-wiredtiger-standalone:

Change Storage Engine to WiredTiger
```````````````````````````````````

To change storage engine to WiredTiger, you will need to manually
export and upload the data using :program:`mongodump` and
:program:`mongorestore`.

.. include:: /includes/steps/3.0-change-to-wiredtiger.rst

.. _3.0-upgrade-replica-set:

Upgrade a Replica Set to 3.0
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Prerequisites
`````````````

- If the oplog contains entries generated by versions of MongoDB
  that precede version 2.2.1, you must wait for the entries to be
  overwritten by later versions *before* you can upgrade to MongoDB
  3.0. For more information, see :ref:`3.0-oplog-format-change`

- :ref:`Stricter validation in MongoDB 3.0
  <3.0-compatibility-repl-set-config>` of replica set configuration
  may invalidate previously-valid replica set configuration,
  preventing replica sets from starting in MongoDB 3.0. For more
  information, see :ref:`3.0-compatibility-repl-set-config`.

- To upgrade a replica set from MongoDB 2.6 to 3.0, :doc:`upgrade
  all members of the replica set to version 2.6
  </release-notes/2.6-upgrade>` *first*, and then follow the
  procedure to upgrade from MongoDB 2.6 to 3.0.

Upgrade Binaries
`````````````````

You can upgrade from MongoDB 2.6 to 3.0 using a "rolling" upgrade to
minimize downtime by upgrading the members individually while the other
members are available:

.. include:: /includes/steps/3.0-upgrade-replica-set.rst

Replica set failover is not instant and will render the set
unavailable to accept writes until the failover process
completes. This may take 30 seconds or more: schedule the
upgrade procedure during a scheduled maintenance window.

.. _3.0-upgrade-repl-set-wiredtiger:

Change Storage Engine to WiredTiger
```````````````````````````````````

In MongoDB 3.0, replica sets can have members with different storage
engines. As such, you can update members to use the WiredTiger storage
engine in a rolling manner. Before changing all the members to use
WiredTiger, you may prefer to run with mixed storage engines for some
period. However, performance can vary according to workload.

.. note::

   .. include:: /includes/2.6-3.0-mixed-version-wiredTiger-restriction.rst

To change the storage engine to WiredTiger for an existing secondary
replica set member, remove the member's data and perform an
:doc:`initial sync </tutorial/resync-replica-set-member>`:

.. include:: /includes/steps/3.0-change-to-wiredtiger-replica-set.rst

To update all members of the replica set to use WiredTiger, update the
secondary members first. Then step down the primary, and update the
stepped-down member.

.. _3.0-upgrade-cluster:

Upgrade a Sharded Cluster to 3.0
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Only upgrade sharded clusters to 3.0 if **all** members of the
cluster are currently running instances of 2.6. The only supported
upgrade path for sharded clusters running 2.4 is via 2.6. The upgrade
process checks all components of the cluster and will produce warnings
if any component is running version 2.4.

Considerations
``````````````

The upgrade process does not require any downtime. However, while you
upgrade the sharded cluster, ensure that clients do not make changes
to the collection meta-data. For example, during the upgrade, do **not**
do any of the following:

- :method:`sh.enableSharding()`

- :method:`sh.shardCollection()`

- :method:`sh.addShard()`

- :method:`db.createCollection()`

- :method:`db.collection.drop()`

- :method:`db.dropDatabase()`

- any operation that creates a database

- any other operation that modifies the cluster metadata in any
  way. See :doc:`/reference/sharding` for a complete list
  of sharding commands. Note, however, that not all commands on
  the :doc:`/reference/sharding` page modifies the
  cluster meta-data.

Upgrade Sharded Clusters
````````````````````````

*Optional but Recommended.* As a precaution, take a backup of the
``config`` database *before* upgrading the sharded cluster.

.. include:: /includes/steps/3.0-upgrade-sharded-cluster.rst

.. _3.0-upgrade-wiredtiger-sharded-clusters:

Change Storage Engine to WiredTiger
```````````````````````````````````

For a sharded cluster in MongoDB 3.0, you can choose to update the
shards to use WiredTiger storage engine and have the config servers use
MMAPv1. If you update the config servers to use WiredTiger, you must
update all three config servers to use WiredTiger.

.. note::
   .. include:: /includes/2.6-3.0-mixed-version-wiredTiger-restriction.rst

Change Shards to Use WiredTiger
+++++++++++++++++++++++++++++++

To change the storage engine for the shards to WiredTiger, refer to the
procedures in :ref:`Change Storage Engine to WiredTiger for replica
sets <3.0-upgrade-repl-set-wiredtiger>` and :ref:`Change Storage Engine
to WiredTiger for standalone mongod
<3.0-upgrade-wiredtiger-standalone>` as appropriate for your shards.

Change Config Server to Use WiredTiger
++++++++++++++++++++++++++++++++++++++

For a sharded cluster in MongoDB 3.0, you may **continue** to use
MMAPv1 for the config servers even if the shards use WiredTiger. If,
however, you decide to change the config servers to use the WiredTiger
storage engine, you must change **all** three config servers to use
WiredTiger.

.. note::
   During this process, only two config servers will be running at any
   given time to ensure that the sharded cluster's metadata is *read
   only*.

.. include:: /includes/steps/3.0-change-to-wiredtiger-config-server.rst

.. |action| replace:: Upgrade
.. |version-new| replace:: 3.0
.. |version-stop| replace:: 2.6

Upgrade Authentication Schema to Enable ``SCRAM-SHA-1``
```````````````````````````````````````````````````````
See :ref:`2.8-scram` for details on ``SCRAM-SHA-1`` upgrade scenarios.

.. include:: /includes/2.6-3.0-upgrade-downgrade-procedure.rst

.. _`MongoDB Download Page`: http://www.mongodb.org/downloads
