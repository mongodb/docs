# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/tutorial/backup-and-restore-tools.txt:3
msgid "Back Up and Restore with MongoDB Tools"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:13
msgid ""
"This tutorial describes the process for creating backups and restoring "
"data using the utilities provided with MongoDB. The "
":binary:`~bin.mongodump` and :binary:`~bin.mongorestore` utilities work "
"with :doc:`BSON </reference/bson-types>` data dumps, and are useful for "
"creating backups of small deployments. For resilient and non-disruptive "
"backups, use a file system or block-level disk snapshot function, such as"
" the methods described in the :doc:`/core/backups` document."
msgstr ""

#: ../source/includes/extracts/tools-performance-considerations-dump-restore.rst:1
msgid ""
"Because :binary:`~bin.mongodump` and :binary:`~bin.mongorestore` operate "
"by interacting with a running :binary:`~bin.mongod` instance, they can "
"impact the performance of your running database. Not only do the tools "
"create traffic for a running database instance, they also force the "
"database to read all data through memory. When MongoDB reads infrequently"
" used data, it can evict more frequently accessed data, causing a "
"deterioration in performance for the database's regular workload."
msgstr ""

#: ../source/includes/extracts/tools-performance-considerations-dump-restore.rst:9
msgid ""
"When backing up your data with MongoDB's tools, consider the following "
"guidelines:"
msgstr ""

#: ../source/includes/extracts/tools-performance-considerations-dump-restore.rst:12
msgid ""
"Label files so that you can identify the contents of the backup as well "
"as the point in time that the backup reflects."
msgstr ""

#: ../source/includes/extracts/tools-performance-considerations-dump-restore.rst:15
msgid ""
"Use an alternative backup strategy such as :doc:`Filesystem Snapshots "
"</tutorial/backup-with-filesystem-snapshots>` or :mms-docs:`MongoDB Cloud"
" Manager </tutorial/nav/backup-use>` if the performance impact of "
":binary:`~bin.mongodump` and :binary:`~bin.mongorestore` is unacceptable "
"for your use case."
msgstr ""

#: ../source/includes/extracts/tools-performance-considerations-dump-restore.rst:21
msgid ""
"Use :option:`--oplog <mongodump --oplog>` to capture incoming write "
"operations during the :binary:`~bin.mongodump` operation to ensure that "
"the backups reflect a consistent data state."
msgstr ""

#: ../source/includes/extracts/tools-performance-considerations-dump-restore.rst:26
msgid ""
"Ensure that your backups are usable by restoring them to a test MongoDB "
"deployment."
msgstr ""

#: ../source/includes/extracts/tools-performance-considerations-dump-restore.rst:29
msgid ""
":doc:`/core/backups` and :mms-docs:`MongoDB Cloud Manager Backup "
"documentation </tutorial/nav/backup-use/>` for more information on "
"backing up MongoDB instances. Additionally, consider the following "
"reference documentation for the MongoDB import/export tools:"
msgstr ""

#: ../source/includes/extracts/tools-performance-considerations-dump-restore.rst:34
msgid ":binary:`~bin.mongoexport`"
msgstr ""

#: ../source/includes/extracts/tools-performance-considerations-dump-restore.rst:35
msgid ":binary:`~bin.mongoimport`"
msgstr ""

#: ../source/includes/extracts/tools-performance-considerations-dump-restore.rst:36
msgid ":binary:`~bin.mongodump`"
msgstr ""

#: ../source/includes/extracts/tools-performance-considerations-dump-restore.rst:37
msgid ":binary:`~bin.mongorestore`"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:26
msgid "Binary BSON Dumps"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:28
msgid ""
"The :binary:`~bin.mongorestore` and :binary:`~bin.mongodump` utilities "
"work with :doc:`BSON </reference/bson-types>` data dumps, and are useful "
"for creating backups of small deployments. For resilient and non-"
"disruptive backups, use a file system or block-level disk snapshot "
"function, such as the methods described in the :doc:`/core/backups` "
"document."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:34
msgid ""
"Use these tools for backups if other backup methods, such as |mms-home| "
"or :doc:`file system snapshots </tutorial/backup-with-filesystem-"
"snapshots>` are unavailable."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:45
msgid "Procedures"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:48
msgid "Back Up a Database with ``mongodump``"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:51
msgid "Exclude ``local`` Database"
msgstr ""

#: ../source/includes/fact-mongodump-local-database.rst:1
msgid ""
":binary:`~bin.mongodump` excludes the content of the ``local`` database "
"in its output."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:56
msgid "Required Access"
msgstr ""

#: ../source/includes/access-mongodump-collections.rst:1
msgid ""
"To run :binary:`~bin.mongodump` against a MongoDB deployment that has "
":doc:`access control </core/authorization>` enabled, you must have "
"privileges that grant :authaction:`find` action for each database to back"
" up. The built-in :authrole:`backup` role provides the required "
"privileges to perform backup of any and all databases."
msgstr ""

#: ../source/includes/fact-required-access-for-backup-profiling.rst:3
msgid ""
"The :authrole:`backup` role provides additional privileges to back up the"
" :data:`system.profile <<database>.system.profile>` collections that "
"exist when running with :ref:`database profiling <database-profiling>`. "
"Previously, users required an additional ``read`` access on this "
"collection."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:61
msgid "Basic ``mongodump`` Operations"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:63
msgid ""
"The :binary:`~bin.mongodump` utility backs up data by connecting to a "
"running :binary:`~bin.mongod` or :binary:`~bin.mongos` instance."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:66
msgid ""
"The utility can create a backup for an entire server, database or "
"collection, or can use a query to backup just part of a collection."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:69
msgid ""
"When you run :binary:`~bin.mongodump` without any arguments, the command "
"connects to the MongoDB instance on the local system (e.g. ``127.0.0.1`` "
"or ``localhost``) on port ``27017`` and creates a database backup named "
"``dump/`` in the current directory."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:74
msgid ""
"To backup data from a :binary:`~bin.mongod` or :binary:`~bin.mongos` "
"instance running on the same machine and on the default port of "
"``27017``, use the following command:"
msgstr ""

#: ../source/includes/warning-mongodump-compatibility-2.2.rst:1
msgid ""
"The data format used by :binary:`~bin.mongodump` from version 2.2 or "
"later is *incompatible* with earlier versions of :binary:`~bin.mongod`. "
"Do not use recent versions of :binary:`~bin.mongodump` to back up older "
"data stores."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:84
msgid ""
"You can also specify the :option:`--host <mongodump --host>` and "
":option:`--port <mongodump --port>` of the MongoDB instance that the "
":binary:`~bin.mongodump` should connect to. For example:"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:92
msgid ""
":binary:`~bin.mongodump` will write :term:`BSON` files that hold a copy "
"of data accessible via the :binary:`~bin.mongod` listening on port "
"``27017`` of the ``mongodb.example.net`` host. See :ref:`backup-from-non-"
"local` for more information."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:97
msgid ""
"To specify a different output directory, you can use the :option:`--out "
"or -o <mongodump --out>` option:"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:104
msgid ""
"To limit the amount of data included in the database dump, you can "
"specify :option:`--db <mongodump --db>` and :option:`--collection "
"<mongodump --collection>` as options to :binary:`~bin.mongodump`. For "
"example:"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:113
msgid ""
"This operation creates a dump of the collection named ``myCollection`` "
"from the database ``test`` in a :file:`dump/` subdirectory of the current"
" working directory."
msgstr ""

#: ../source/includes/fact-mongodump-overwrite-files.rst:1
msgid ""
":binary:`~bin.mongodump` overwrites output files if they exist in the "
"backup data folder. Before running the :binary:`~bin.mongodump` command "
"multiple times, either ensure that you no longer need the files in the "
"output folder (the default is the ``dump/`` folder) or rename the folders"
" or files."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:120
msgid "Point in Time Operation Using Oplogs"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:122
msgid ""
"Use the :option:`--oplog <mongodump --oplog>` option with "
":binary:`~bin.mongodump` to collect the :term:`oplog` entries to build a "
"point-in-time snapshot of a database within a replica set. With "
":option:`--oplog <mongodump --oplog>`, :binary:`~bin.mongodump` copies "
"all the data from the source database as well as all of the :term:`oplog`"
" entries from the beginning to the end of the backup procedure. This "
"operation, in conjunction with :option:`mongorestore --oplogReplay "
"<mongorestore --oplogReplay>`, allows you to restore a backup that "
"reflects the specific moment in time that corresponds to when "
":binary:`~bin.mongodump` completed creating the dump file."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:136
msgid "Create Backups from Non-Local ``mongod`` Instances"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:138
msgid ""
"The :option:`--host <mongodump --host>` and :option:`--port <mongodump "
"--port>` options for :binary:`~bin.mongodump` allow you to connect to and"
" backup from a remote host. Consider the following example:"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:147
msgid ""
"On any :binary:`~bin.mongodump` command you may, as above, specify "
"username and password credentials to specify database authentication."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:153
msgid "Restore a Database with ``mongorestore``"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:156
msgid "Access Control"
msgstr ""

#: ../source/includes/access-mongorestore-collections.rst:1
msgid ""
"To restore data to a MongoDB deployment that has :doc:`access control "
"</core/authorization>` enabled, the :authrole:`restore` role provides "
"access to restore any database if the backup data does not include "
":data:`system.profile <<database>.system.profile>` collection data."
msgstr ""

#: ../source/includes/fact-restore-role-system.profile.rst:1
msgid ""
"If the backup data includes :data:`system.profile "
"<<database>.system.profile>` collection data and the target database does"
" not contain the :data:`system.profile <<database>.system.profile>` "
"collection, :binary:`~bin.mongorestore` attempts to create the collection"
" even though the program does not actually restore ``system.profile`` "
"documents. As such, the user requires additional privileges to perform "
":authaction:`createCollection` and :authaction:`convertToCapped` actions "
"on the :data:`system.profile <<database>.system.profile>` collection for "
"a database."
msgstr ""

#: ../source/includes/access-mongorestore-collections.rst:8
msgid ""
"As of MongoDB 3.2.11, you can run :binary:`~bin.mongorestore` with "
":option:`--oplogReplay <mongorestore --oplogReplay>` if you have the "
":authrole:`restore` role. To replay the oplog on versions of MongoDB "
"3.2.10 and earlier, you must create a :ref:`user-defined role <create-"
"user-defined-role>` that has :authaction:`anyAction` on :ref:`resource-"
"anyresource` and grant only to users who must run "
":binary:`~bin.mongorestore` with :option:`--oplogReplay <mongorestore "
"--oplogReplay>`."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:161
msgid "Basic ``mongorestore`` Operations"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:163
msgid ""
"The :binary:`~bin.mongorestore` utility restores a binary backup created "
"by :binary:`~bin.mongodump`. By default, :binary:`~bin.mongorestore` "
"looks for a database backup in the :file:`dump/` directory."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:167
msgid ""
"The :binary:`~bin.mongorestore` utility restores data by connecting to a "
"running :binary:`~bin.mongod` or :binary:`~bin.mongos` directly."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:170
msgid ""
":binary:`~bin.mongorestore` can restore either an entire database backup "
"or a subset of the backup."
msgstr ""

#: ../source/includes/fact-uuid-restore-from-backup.rst:3
msgid "*New in version 3.6:*"
msgstr ""

#: ../source/includes/fact-uuid-restore-from-backup.rst:5
msgid ""
"All MongoDB collections have :abbr:`UUIDs (Universally unique "
"identifiers)` by default. When MongoDB restores collections, the restored"
" collections retain their original UUIDs. When restoring a collection "
"where no UUID was present, MongoDB generates a UUID for the restored "
"collection."
msgstr ""

#: ../source/includes/fact-uuid-restore-from-backup.rst:11
msgid ""
"For more information on collection UUIDs, see `Collections "
"<https://docs.mongodb.com/v3.6/core/databases-and-"
"collections/#collections>`_."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:175
msgid ""
"To use :binary:`~bin.mongorestore` to connect to an active "
":binary:`~bin.mongod` or :binary:`~bin.mongos`, use a command with the "
"following prototype form:"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:183
#: ../source/tutorial/backup-and-restore-tools.txt:223
msgid "Consider the following example:"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:189
msgid ""
"Here, :binary:`~bin.mongorestore` imports the database backup in the "
":file:`dump-2013-10-25` directory to the :binary:`~bin.mongod` instance "
"running on the localhost interface on the default port ``27017``."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:196
msgid "Restore Point in Time Oplog Backup"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:198
msgid ""
"If you created your database dump using the :option:`--oplog <mongodump "
"--oplog>` option to ensure a point-in-time snapshot, call "
":binary:`~bin.mongorestore` with the :option:`--oplogReplay <mongorestore"
" --oplogReplay>` option, as in the following example:"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:208
msgid ""
"You may also consider using the :option:`mongorestore --objcheck` option "
"to check the integrity of objects while inserting them into the database,"
" or you may consider the :option:`mongorestore --drop` option to drop "
"each collection from the database before restoring from backups."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:215
msgid "Restore Backups to Non-Local ``mongod`` Instances"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:217
msgid ""
"By default, :binary:`~bin.mongorestore` connects to a MongoDB instance "
"running on the localhost interface (e.g. ``127.0.0.1``) and on the "
"default port (``27017``). If you want to restore to a different host or "
"port, use the :option:`--host <mongorestore --host>` and :option:`--port "
"<mongorestore --port>` options."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:229
msgid ""
"As above, you may specify username and password connections if your "
":binary:`~bin.mongod` requires authentication."
msgstr ""

#: ../source/includes/extracts/additional-resources-mongodump.rst:6
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-mongodump.rst:8
msgid ""
"`Backup and its Role in Disaster Recovery White Paper "
"<https://www.mongodb.com/lp/white-paper/backup-disaster-"
"recovery?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-mongodump.rst:9
msgid ":mms-home:`Cloud Backup through MongoDB Cloud Manager </?jmp=docs>`"
msgstr ""

#: ../source/includes/extracts/additional-resources-mongodump.rst:10
msgid ""
"`Blog Post: Backup vs. Replication, Why you Need Both "
"<http://www.mongodb.com/blog/post/backup-vs-replication-why-do-you-need-"
"both?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-mongodump.rst:11
msgid ""
":products:`Backup Service with Ops Manager, an on-premise solution "
"available in MongoDB Enterprise Advanced </mongodb-enterprise-"
"advanced?jmp=docs>`"
msgstr ""

#: ../source/includes/extracts/additional-resources-mongodump.rst:12
msgid ""
"`MongoDB Atlas: For a simple way to run, monitor, and maintain cloud-"
"hosted MongoDB deployments "
"<https://www.mongodb.com/cloud/atlas?jmp=docs>`_"
msgstr ""

