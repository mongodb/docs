========
$explain
========

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol
   

.. operator:: $explain

   .. include:: /includes/extracts/mongo-shell-deprecated-meta-operator-explain.rst

   The :operator:`$explain` operator provides information on the query
   plan. It returns a document that describes
   the process and indexes used to return the query. This may provide
   useful insight when attempting to optimize a query.
   For details on the output, see :doc:`/reference/method/cursor.explain`.

   You can specify the :operator:`$explain` operator in either of the
   following forms:

   .. code-block:: javascript

       db.collection.find()._addSpecial( "$explain", 1 )
       db.collection.find( { $query: {}, $explain: 1 } )

   In the :binary:`~bin.mongo` shell, you also can retrieve query plan
   information through the :method:`~cursor.explain()` method:

   .. code-block:: javascript

      db.collection.find().explain()

Behavior
--------

:operator:`$explain` runs the actual query to determine the result.
Although there are some differences between running the query with
:operator:`$explain` and running without, generally, the performance
will be similar between the two. So, if the query is slow, the
:operator:`$explain` operation is also slow.

Additionally, the :operator:`$explain` operation reevaluates a set
of candidate query plans, which may cause the :operator:`$explain`
operation to perform differently than a normal query. As a result,
these operations generally provide an accurate account of *how*
MongoDB would perform the query, but do not reflect the length of
these queries.

.. seealso::

   - :method:`~cursor.explain()`

   - :doc:`/administration/analyzing-mongodb-performance` page for information
     regarding optimization strategies.

   - :doc:`/tutorial/manage-the-database-profiler` tutorial for
     information regarding the database profile.

   - :doc:`Current Operation Reporting </reference/method/db.currentOp>`
