title: "Open the :guilabel:`Add New Database User` dialog."
level: 4
ref: go-users-view
content: |
   a. In the :guilabel:`Security` section of the left navigation, click
      :guilabel:`Database Access`. The :guilabel:`Database Users` tab
      displays.

   #. Click :icon-fa5:`plus` :guilabel:`Add New Database User`.
---
title: "Select an authentication method."
level: 4
ref: select-auth-method
content: |
  
  A project can have users with different authentication methods.

  You cannot change a user's authentication method after creating that
  user. To use an alternative authentication method, you must create a
  new user.

  .. list-table::
     :widths: 20 80
     :header-rows: 1

     * - Method

       - Description

     * - :guilabel:`Password Authentication`

       - :ref:`SCRAM <authentication-scram>` is MongoDB's default
         authentication method. SCRAM requires a password for each
         user. Select this authentication method by clicking
         :guilabel:`PASSWORD`.

     * - :guilabel:`X.509 Certificates`

       - :manual:`X.509 Certificates </core/security-x.509/>` allow for
         passwordless authentication by using a trusted certificate.
         Select this authentication method by clicking
         :guilabel:`CERTIFICATE`. To download the certificate upon
         saving, you must provide a certificate expiration date and
         check :guilabel:`Download certificate when user is added`.

         X.509 certificates expire and are invalid after the
         certificate expiration date you set. A user will not be able 
         to log in with an expired X.509 certificate and must be issued 
         a new certificate.

         To help manage this, |service| automatically creates a
         project-level alert when you create a new user with X.509
         authentication enabled. This alert sends a notification 30 days
         before that user's latest certificate expires, repeating every
         24 hours. You can view and edit this alert from |service|'s
         :guilabel:`Alert Settings` page. For more information on
         configuring alerts, see
         :doc:`Configure Alert Settings </configure-alerts>`.

         .. important::

            If a user loses their certificate, they will need a new
            certificate to be generated for them before they can log in
            again.

         .. important::
            
            You cannot revoke X.509 certificates. To revoke an X.509
            certificate-authenticated user's access to your project,
            you must delete that user.

         .. include:: /includes/fact-atlas-free-tier-limits.rst

         If you prefer to manage your own X.509 certificates, you 
         can upload a PEM-encoded certificate authority through
         :ref:`Self-Managed X.509 Certificates <self-managed-x509>`.
---
title: "Enter user information."
level: 4
ref: enter-user-info
content: |
  .. list-table::
     :widths: 20 80
     :header-rows: 1

     * - Field

       - Description

     * - :guilabel:`User Name`

       - The user's login name.

         SCRAM-authenticated users are associated with the ``admin`` 
         database; i.e. their
         :ref:`authentication database <user-authentication-database>`
         is ``admin``.

         X.509-authenticated users are associated with the 
         ``$external`` database; i.e. their authentication database 
         is ``$external``.
         
         To access MongoDB, a user provides a username
         and the name of the authentication database, as well as a
         password or X.509 certificate. The authentication database
         does not determine the user's roles. You can assign a user
         different roles in different database namespaces.

         .. example::

            You can create a user to have the ``readWrite`` role on
            the ``test`` database but only the ``read`` role on the
            ``production`` database. For a SCRAM-authenticated user,
            the authentication database would still be ``admin``.
---
title: Assign privileges.
ref: assign-user-privileges
content: |
  Select the database user privileges. You can assign privileges to the new user
  in one or more of the following ways:

  - Select a :ref:`built-in role <atlas-user-privileges>` from the
    :guilabel:`Built-in Role` dropdown menu. You can select one
    built-in role per database user within the {+atlas-ui+}. If you delete the
    default option, you can click :guilabel:`Add Built-in Role` to select a new built-in role.

  - If you have any :ref:`custom roles <mongodb-roles>` defined, you can expand
    the :guilabel:`Custom Roles` section and select
    one or more roles from the :guilabel:`Custom Roles` dropdown menu. Click
    :guilabel:`Add Custom Role` to add more custom roles. You can also
    click the :guilabel:`Custom Roles` link to see the custom
    roles for your project.

  - Expand the :guilabel:`Specific Privileges` section and select one or more
    :ref:`privileges <atlas-specific-privileges>` from the
    :guilabel:`Specific Privileges` dropdown menu. Click
    :guilabel:`Add Specific Privilege` to add more privileges. This assigns the
    user specific privileges on individual databases and collections.

  |service| can apply a built-in role, multiple custom roles, and multiple specific
  privileges to a single database user. 
  
  To remove an applied role or privilege, click :icon-fa4:`trash-o`
  :guilabel:`Delete` next to the role or privilege you wish to delete.

  .. note::

    |service| doesn't display the :icon-fa4:`trash-o` :guilabel:`Delete` icon
    next to your :guilabel:`Built-in Role`, :guilabel:`Custom Role`, or
    :guilabel:`Specific Privilege` selection if you selected only one option. You
    can delete the selected role or privilege once you apply another role or privilege.
     
  For more information on authorization, see :manual:`Role-Based
  Access Control </core/authorization>` and :manual:`Built-in
  Roles </core/security-built-in-roles>` in the MongoDB manual.

---
title: Specify the resources in the project that the user can access.
optional: true
ref: restrict-resource-access
content: | 
  By default, users can access all the clusters and {+fdi+}\s in the 
  project. You can restrict access to specific clusters and {+fdi+}\s
  by doing the following: 

  a. Toggle :guilabel:`Restrict Access to Specific Clusters/Federated 
     Database Instances` to :guilabel:`ON`.

  #. Select the clusters and {+fdi+}\s to grant the user access to 
     from the :guilabel:`Grant Access To` list.
---
title: Save as temporary user.
optional: true
ref: save-temp-user
content: |
  Toggle :guilabel:`Temporary User` to :guilabel:`On` and choose
  a time after which |service| can delete the user from the
  :guilabel:`Temporary User Duration` dropdown. You can select one of the
  following time periods for the user to exist:

  - 6 hours
  - 1 day
  - 1 week

  In the :guilabel:`Database Users` tab, temporary users display
  the time remaining until |service| will delete the user. Once
  |service| deletes the user, any client or application that uses
  the temporary user's credentials loses access to the cluster.
---
title: Click :guilabel:`Add User`.
ref: save-user
...
