=======
geoNear
=======

.. default-domain:: mongodb

Definition
----------

.. dbcommand:: geoNear

   Specifies a point for which a :term:`geospatial` query returns the
   closest documents first. The query returns the documents from nearest
   to farthest. The :dbcommand:`geoNear` command provides an alternative
   to the :query:`$near` operator. In addition to the functionality
   of :query:`$near`, :dbcommand:`geoNear` returns additional
   diagnostic information.

   The :dbcommand:`geoNear` command accepts a :term:`document` that
   contains the following fields. Specify all distances in the same
   units as the document coordinate system:

   .. include:: /reference/command/geoNear-field.rst

Considerations
--------------

The :dbcommand:`geoNear` command can use either a :term:`GeoJSON`
point or :term:`legacy coordinate pairs`. Queries that use a ``2d``
index return a limit of 100 documents.

The :dbcommand:`geoNear` command requires that a collection have *at
most* only one :doc:`2d index </core/2d>` and/or only one
:doc:`2dsphere </core/2dsphere>`.

Behavior
--------

.. |geo-operation| replace:: :dbcommand:`geoNear`

.. include:: /includes/fact-geo-near-returns-sorted-results.rst

Command Format
--------------

To query a :doc:`2dsphere </core/2dsphere>` index, use the
following syntax:

.. code-block:: javascript

   db.runCommand( { geoNear : <collection> ,
                    near : { type : "Point" ,
                             coordinates: [ <coordinates> ] } ,
                    spherical : true } )

To query a :doc:`2d </core/2d>` index, use:

.. code-block:: javascript

   { geoNear : <collection> , near : [ <coordinates> ] }

.. read-lock, slave-ok

Example
-------

The following example runs the :dbcommand:`geoNear` command on the
collection ``places``:

.. code-block:: javascript

   db.runCommand( { geoNear : "places", 
                    near : { type : "Point", 
                             coordinates : [ -74.00, 40.00 ] },
                    spherical : true } )

The operation returns the following output:

.. code-block:: javascript

   {
       "results" : [
           {
               "dis" : 85753.24625705236,
               "obj" : {
                   "_id" : ObjectId("536943463d2edb9288571e55"),
                   "loc" : {
                       "type" : "Point",
                       "coordinates" : [
                           -73.97,
                           40.77
                       ]
                   },
                   "name" : "Central Park",
                   "category" : "Parks"
               }
           },
           {
               "dis" : 87422.73772813451,
               "obj" : {
                   "_id" : ObjectId("536943603d2edb9288571e56"),
                   "loc" : {
                       "type" : "Point",
                       "coordinates" : [
                           -73.88,
                           40.78
                       ]
                   },
                   "name" : "La Guardia Airport",
                   "category" : "Airport"
               }
           }
       ],
       "stats" : {
           "nscanned" : NumberLong(32),
           "objectsLoaded" : NumberLong(32),
           "avgDistance" : 86587.99199259344,
           "maxDistance" : 87422.73772813451,
           "time" : 2
       },
       "ok" : 1
   }

Output
------

The :dbcommand:`geoNear` command returns a document with the
following fields:

.. data:: geoNear.results

   An array with the results of the :dbcommand:`geoNear` command, sorted
   by distance with the nearest result listed first and farthest last.

.. data:: geoNear.results[n].dis

   For each document in the results, the distance from the coordinates
   defined in the :dbcommand:`geoNear` command.

.. data:: geoNear.results[n].obj

   The document from the collection.

.. data:: geoNear.stats

   An object with statistics about the query used to return the results of
   the :dbcommand:`geoNear` search.

.. data:: geoNear.stats.nscanned

   The total number of index entries scanned during the database operation.

.. data:: geoNear.stats.objectsLoaded

   The total number of documents read from disk during the database operation.

.. data:: geoNear.stats.avgDistance

   The average distance between the coordinates defined in the
   :dbcommand:`geoNear` command and coordinates of the documents returned
   as results.

.. data:: geoNear.stats.maxDistance

   The maximum distance between the coordinates defined in the
   :dbcommand:`geoNear` command and coordinates of the documents returned
   as results.

.. data:: geoNear.stats.time

   The execution time of the database operation, in milliseconds.

.. data:: geoNear.ok

   A value of ``1`` indicates the :dbcommand:`geoNear` search succeeded. A
   value of ``0`` indicates an error.

