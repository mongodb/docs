.. _charts-filter-documents:

=====================================
Filter Documents in the Visualization
=====================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Filters display a subset of results that match a given criteria.
|charts| provides two ways to filter your data. You can either use:

- The :ref:`Filter Tab <filter-tab>` in the Chart Builter, or

- The :ref:`Query Bar <query-bar>` above the chart display.

.. _filter-tab:

Filter Tab
----------

The chart builder contains a filter tab where you can drag and drop
fields to specify filters based on those fields. To filter data using
the filter tab:

1. Click the center tab in the chart builder:

   .. figure:: /images/charts/filter-tab.png
      :scale: 60%
      :alt: Image showing how to access filter tab

   |

#. Drag a field from the :guilabel:`Fields` on the left to the
   :guilabel:`Chart Filters` section of the tab.
   
The data type of the selected field dictates the available filtering
options. You can filter fields with the following data types:

- :ref:`Numeric <filter-numeric>`

- :ref:`String <filter-string-objectid>`

- :ref:`ObjectId <filter-string-objectid>`

- :ref:`Date <filter-date>`

- :ref:`Boolean <filter-boolean>`

.. note::

   You cannot use the same field for multiple filters.

.. _filter-numeric:

Filter Numeric Fields
~~~~~~~~~~~~~~~~~~~~~

When you drag a numeric field to the filter panel, you
can filter based on minimum and/or maximum values for that field.

.. list-table::
   :header-rows: 1

   * - To specify a minimum value:
     - To specify a maximum value:

   * - 1. Toggle :guilabel:`Min` to :guilabel:`On`.

       #. Specify the desired minimum value.
       
       #. Select whether this is an inclusive minimum value.

     - 1. Toggle :guilabel:`Max` to :guilabel:`On`.

       #. Specify the desired maximum value.
       
       #. Select whether this is an inclusive maximum value.

.. example::

   If you have a minimum value of ``5`` with the :guilabel:`Inclusive`
   setting on, |charts| shows documents where the field is greater than
   or equal to ``5``.

   Alternatively, if :guilabel:`Inclusive` is off, |charts| shows
   documents where the field is greater than ``5``.

.. _filter-string-objectid:

Filter String and ObjectId Fields
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

When you drag a string or
:manual:`ObjectId </reference/bson-types/#objectid>` field to the filter
panel, |charts| displays a list of up to 20 distinct field values. If
more than 20 distinct values exist, |charts| displays 20 randomly
selected values.

The list also includes:

- :guilabel:`NULL / MISSING` for documents with ``null`` values for
  the field or are missing the field.

- :guilabel:`Empty String` for documents with
  ``""`` values for the string field. (*String fields only.*)

Select the values to display in the chart. By default, all
values are selected.

.. tip::

   If all values are selected, you can click :guilabel:`Deselect All` 
   at the top of the list to hide all values.
   
   If not all values are selected, you can click :guilabel:`Select All`
   to return to the default state of having all values displayed.

Display Strings and ObjectIds Not in the List
`````````````````````````````````````````````

To display a specific value not included in the list, add the value by
clicking :guilabel:`Add Value`.

.. important::

   For :manual:`ObjectId </reference/bson-types/#objectid>` fields,
   value you input must be a well-formed ObjectId, or else
   |charts| does not accept the value.

To display *all* other values not included in the list, check
:guilabel:`All other values`.

- If :guilabel:`All other values` is checked, |charts| filters out
  any unchecked list items by using a :query:`$nin` query.
  
- If :guilabel:`All other values` is unchecked, |charts| only
  includes the checked list items by using an :query:`$in` query.

.. _filter-date:

Filter Date Fields
~~~~~~~~~~~~~~~~~~

When you drag a date field to the filter panel, you can filter based
on a specified date range. This range can either be:

- A :ref:`relative date <relative-date>` range, which specifies a range
  relative to the time the chart is rendered (e.g., the last six
  months).

- An :ref:`absolute date <absolute-date>` range, which is a range
  between specific beginning and end dates.

.. _relative-date:

Relative Date Filter
````````````````````

Relative date filters specify a range relative to the 
time the chart is rendered. To define the date range, specify a period
of time in the past and/or a period of time in the future relative to
the current date. :guilabel:`Relative` is the default date filtering
option.

To set a lower bound for a relative date filter:

1. Turn on the :guilabel:`From` toggle.

#. Set the lower bound for your relative date. This timespan is
   relative to the current date.

To set an upper bound for a relative date filter:

1. Turn on the :guilabel:`Until` toggle.

#. Set the upper bound for your relative date. This timespan is
   relative to the current date.

.. example::

   The following relative date filter only shows documents
   with a ``Workout Date (As Date)`` field that is more recent than one year
   ago from the current date:

   .. figure:: /images/charts/relative-date.png
      :scale: 60%
      :alt: Image showing relative date filter

.. _absolute-date:

Absolute Date Filter
````````````````````

Absolute date filters use absolute dates to define their upper and lower
bounds. To define an absolute date range, select :guilabel:`Absolute`
at the top of your date filter card. The dates specified in the filter
are assumed to be in :abbr:`UTC (Coordinated Universal Time)`, matching
the raw data in the collection.

To define a lower bound for your absolute date filter:

1. Turn on the :guilabel:`From` toggle.

#. Enter a date for your lower bound, or
   select a date from the calendar below the input field.

#. Enter a time for your lower bound, or select a time
   from the list below the input field.

#. Set :guilabel:`Inclusive` to dictate whether to include
   the specified date.

To define an upper bound for your absolute date filter:

1. Turn on the :guilabel:`To` toggle.

#. Enter a date for your upper bound, or
   select a date from the calendar below the input field.

#. Enter a time for your upper bound, or select a time
   from the list below the input field.

#. Set :guilabel:`Inclusive` to dictate whether to include
   the specified date.

.. example::

   The following absolute date filter only shows documents
   with a ``Workout Date (As Date)`` field from the year
   ``2018``:

   .. figure:: /images/charts/absolute-date.png
      :scale: 60%
      :alt: Image showing absolute date filter

   |

   The filter returns all documents with a
   ``Workout Date (As Date)`` field from ``January 1, 2018 12:00:00
   AM`` inclusively, to ``January 1, 2019 12:00:00 AM`` exclusively.

.. note::

   The date and time formats used in your bounds depend
   on your location, as determined from your browser settings.
 

.. _filter-boolean:

Filter Boolean Fields
~~~~~~~~~~~~~~~~~~~~~

You can filter the chart data based on the boolean value of a specific
field. Drag a boolean field to the filter panel to view the available
options:

- :guilabel:`True` displays documents where the field value is ``true``.

- :guilabel:`False` displays documents where the field value is
  ``false``.

- :guilabel:`NULL / MISSING` displays documents where the field is
  ``null`` or does not exist.

All options are selected by default. The chart preview updates as you
modify the selected options. Deselecting all options renders a blank
chart.

.. example::

   A chart using the following filter only displays documents where the
   ``passed`` field is ``true``. The chart does not display documents
   where the ``passed`` field is ``false``, ``null``, or does not
   exist.

   .. figure:: /images/charts/boolean-filter.png
      :scale: 60%
      :alt: Image showing boolean filter

.. _query-bar:

Query Bar
---------
  
To filter data using the :guilabel:`Query` bar:

1. In the :guilabel:`Query` bar, input a filter document. Use the
   same syntax used in the query portion of the
   :manual:`db.collection.find()
   </reference/method/db.collection.find/>` method.
   
#. Click :guilabel:`Apply`.

Considerations
~~~~~~~~~~~~~~

- Filters on large collections may have performance issues if there
  are not appropriate :manual:`indexes <indexes>` on the collection.

- The date functions utilized in the |charts| query bar are consistent
  and compatible with the date functions used in the
  :manual:`mongo shell </mongo>`. As a result, you can use:

  - ``new Date()``,
  - ``ISODate()``, or
  - ``new ISODate()``.

  |

  The ``Date()`` function (as opposed to the ``new Date()``
  constructor) returns the current date as a string, so it cannot be
  used for querying dates in |charts-short|.

Examples
~~~~~~~~

Comparison Query Filter
```````````````````````

The following chart shows the average runtime of movies by
genre. The filter of ``{runtime: {$gte: 120 }}`` means that we only
include movies which have a runtime greater than or equal to 120
minutes.

.. figure:: /images/charts/charts-dashboard-filter-2.png
   :figwidth: 720px
   :alt: Charts dashboard filter

.. _regex-filter:

Regular Expression (RegEx) Query
````````````````````````````````

.. _`regular expression`: :manual:`


Use the :query:`$regex` query operator to filter using a
regular expression:

.. code-block:: javascript

   { <field>: { $regex: "pattern", $options: "<options>" } }

.. note::

   You must enclose the pattern in quotes.  You cannot use the ``/pattern/`` syntax.

For example, to find all documents where the ``jobs`` field begins with
the letter ``A``, you would write the following in the
:guilabel:`Query` bar:

.. code-block:: javascript

   { "job" : { $regex : "^A" } }

To find all documents where the ``jobs`` field begins with the
letter ``A`` or ``a``, you would write the following in the
:guilabel:`Query` bar:

.. code-block:: javascript

   { "job" : { $regex : "^A", $options : "i" } }
