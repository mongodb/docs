======================================
Get Measurements for a MongoDB Process
======================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. include:: /includes/fact-projects-groups-synonyms.rst

Get measurements for a specific |service| MongoDB process. |A-service| MongoDB process can be either a |mongod| or |mongos|.

.. include:: /includes/fact-metric-series.rst

.. include:: /includes/api-requirements.rst

Resource
--------

.. include:: /includes/api/base-api-uri.rst

.. code-block:: http

   GET /groups/{GROUP-ID}/processes/{HOST}:{PORT}/measurements

Request Path Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/api/list-tables/requests/measurements-path-parameters.rst

Request Query Parameters
~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/api/base-query-list-parameters.rst

.. include:: /includes/api/list-tables/requests/measurements-query-parameters.rst

Request Body Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/api/no-body-parameters.rst

Response Elements
-----------------

.. include:: /includes/api/facts/api-metrics-free-shared-tier-limits.rst

.. include:: /includes/api/basics/response-wrapper.rst

.. include:: /includes/api/list-tables/responses/measurements.rst

.. _process-measurement-types:

Measurement Values
~~~~~~~~~~~~~~~~~~

.. list-table::
   :widths: 80 20
   :stub-columns: 1

   * - | PROCESS_CPU_USER
       | MAX_PROCESS_CPU_USER
       | PROCESS_CPU_KERNEL
       | MAX_PROCESS_CPU_KERNEL
       | PROCESS_CPU_CHILDREN_USER
       | MAX_PROCESS_CPU_CHILDREN_USER
       | PROCESS_CPU_CHILDREN_KERNEL
       | MAX_PROCESS_CPU_CHILDREN_KERNEL

     - MongoDB |cpu| usage. For hosts with more than one |cpu| core,
       these values can exceed 100%.

   * - | PROCESS_NORMALIZED_CPU_USER
       | MAX_PROCESS_NORMALIZED_CPU_USER
       | PROCESS_NORMALIZED_CPU_KERNEL
       | MAX_PROCESS_NORMALIZED_CPU_KERNEL
       | PROCESS_NORMALIZED_CPU_CHILDREN_USER
       | MAX_PROCESS_NORMALIZED_CPU_CHILDREN_USER
       | PROCESS_NORMALIZED_CPU_CHILDREN_KERNEL
       | MAX_PROCESS_NORMALIZED_CPU_CHILDREN_KERNEL

     - MongoDB |cpu| usage scaled to a range of 0% to 100%. |service|
       computes this value by dividing by the number of |cpu| cores.

   * - | ASSERT_REGULAR
       | ASSERT_WARNING
       | ASSERT_MSG
       | ASSERT_USER

     - Rate of asserts for a MongoDB process found in the
       :serverstatus:`asserts` document that the
       :dbcommand:`serverStatus` command generates.

   * - | BACKGROUND_FLUSH_AVG

     - Amount of data flushed in the background.

   * - | CACHE_BYTES_READ_INTO
       | CACHE_BYTES_WRITTEN_FROM
       | CACHE_DIRTY_BYTES
       | CACHE_USED_BYTES
       | TICKETS_AVAILABLE_READS
       | TICKETS_AVAILABLE_WRITE

     - Amount of bytes in the :manual:`WiredTiger </core/wiredtiger>`
       storage engine cache and tickets found in the
       :serverstatus:`wiredTiger.cache` and
       :serverstatus:`wiredTiger.concurrentTransactions` documents that
       the :dbcommand:`serverStatus` command generates.

   * - CONNECTIONS

     - Number of connections to a MongoDB process found in the
       :serverstatus:`connections` document that the
       :dbcommand:`serverStatus` command generates.

   * - | CURSORS_TOTAL_OPEN
       | CURSORS_TOTAL_TIMED_OUT

     - Number of :manual:`cursors </core/cursors>` for a MongoDB
       process found in the :serverstatus:`metrics.cursor` document
       that the :dbcommand:`serverStatus` command generates.

   * - | EXTRA_INFO_PAGE_FAULTS
       | GLOBAL_ACCESSES_NOT_IN_MEMORY
       | GLOBAL_PAGE_FAULT_EXCEPTIONS_THROWN

     - Numbers of **Memory Issues** and **Page Faults** for a MongoDB
       process.

   * - | GLOBAL_LOCK_CURRENT_QUEUE_TOTAL
       | GLOBAL_LOCK_CURRENT_QUEUE_READERS
       | GLOBAL_LOCK_CURRENT_QUEUE_WRITERS

     - Number of operations waiting on locks for the MongoDB process
       that the :dbcommand:`serverStatus` command generates. |mms|
       computes these values based on the type of storage engine.

   * - | INDEX_COUNTERS_BTREE_ACCESSES
       | INDEX_COUNTERS_BTREE_HITS
       | INDEX_COUNTERS_BTREE_MISSES
       | INDEX_COUNTERS_BTREE_MISS_RATIO

     - Number of index btree operations.

   * - | JOURNALING_COMMITS_IN_WRITE_LOCK
       | JOURNALING_MB
       | JOURNALING_WRITE_DATA_FILES_MB

     - Number of journaling operations.

   * - | MEMORY_RESIDENT
       | MEMORY_VIRTUAL
       | MEMORY_MAPPED
       | COMPUTED_MEMORY

     - Amount of memory for a MongoDB process found in the
       :serverstatus:`mem` document that the :dbcommand:`serverStatus`
       command collects.

   * - | NETWORK_BYTES_IN
       | NETWORK_BYTES_OUT
       | NETWORK_NUM_REQUESTS

     - Amount of throughput for MongoDB process found in the
       :serverstatus:`network` document that the
       :dbcommand:`serverStatus` command collects.

   * - | OPLOG_REPLICATION_LAG_TIME
       | OPLOG_SLAVE_LAG_MASTER_TIME
       | OPLOG_MASTER_TIME
       | OPLOG_MASTER_LAG_TIME_DIFF
       | OPLOG_RATE_GB_PER_HOUR

     - Durations and throughput of the MongoDB process'
       :manual:`oplog </core/replica-set-oplog>`.
       The ``OPLOG_SLAVE_LAG_MASTER_TIME`` metric is deprecated.
       Use the ``OPLOG_REPLICATION_LAG_TIME`` metric instead. It returns
       decimal values (seconds and milliseconds). For example, the
       value 2.75 means 2 seconds and 750 milliseconds.

   * - | DB_STORAGE_TOTAL
       | DB_DATA_SIZE_TOTAL

     - Measures the database's on-disk storage space, as collected from
       the MongoDB :dbcommand:`dbStats` command.

   * - | OPCOUNTER_CMD
       | OPCOUNTER_QUERY
       | OPCOUNTER_UPDATE
       | OPCOUNTER_DELETE
       | OPCOUNTER_GETMORE
       | OPCOUNTER_INSERT

     - Rate of database operations on a MongoDB process since the
       process last started found in the :serverstatus:`opcounters`
       document that the :dbcommand:`serverStatus` command collects.

   * - | OPCOUNTER_REPL_CMD
       | OPCOUNTER_REPL_UPDATE
       | OPCOUNTER_REPL_DELETE
       | OPCOUNTER_REPL_INSERT

     - Rate of database operations on MongoDB :term:`secondaries
       <secondary>` found in the :serverstatus:`opcountersRepl`
       document that the :dbcommand:`serverStatus` command collects.

   * - | DOCUMENT_METRICS_RETURNED
       | DOCUMENT_METRICS_INSERTED
       | DOCUMENT_METRICS_UPDATED
       | DOCUMENT_METRICS_DELETED

     - Average rate of documents returned, inserted, updated, or
       deleted per second during a selected time period.

   * - OPERATIONS_SCAN_AND_ORDER

     - Average rate for operations per second during a selected time
       period that perform a sort but cannot perform the sort using an
       index.

   * - | OP_EXECUTION_TIME_READS
       | OP_EXECUTION_TIME_WRITES
       | OP_EXECUTION_TIME_COMMANDS

     - Average execution time in milliseconds per read, write, or
       command operation during a selected time period.

   * - RESTARTS_IN_LAST_HOUR

     - Number of times the host restarted within the previous hour.

   * - QUERY_EXECUTOR_SCANNED

     - Average rate per second to scan index items during queries and
       query-plan evaluations found in the value of
       **totalKeysExamined** from the :dbcommand:`explain` command.

   * - QUERY_EXECUTOR_SCANNED_OBJECTS

     - Average rate of documents scanned per second during queries and
       query-plan evaluations found in the value of
       **totalDocsExamined** from the :dbcommand:`explain` command.

   * - QUERY_TARGETING_SCANNED_PER_RETURNED

     - Ratio of the number of index items scanned to the number of
       documents returned.

   * - QUERY_TARGETING_SCANNED_OBJECTS_PER_RETURNED

     - Ratio of the number of documents scanned to the number of
       documents returned.

   * - | SYSTEM_CPU_USER
       | MAX_SYSTEM_CPU_USER
       | SYSTEM_CPU_KERNEL
       | MAX_SYSTEM_CPU_KERNEL
       | SYSTEM_CPU_NICE
       | MAX_SYSTEM_CPU_KERNEL
       | SYSTEM_CPU_IOWAIT
       | MAX_SYSTEM_CPU_IOWAIT
       | SYSTEM_CPU_IRQ
       | MAX_SYSTEM_CPU_IRQ
       | SYSTEM_CPU_SOFTIRQ
       | MAX_SYSTEM_CPU_SOFTIRQ
       | SYSTEM_CPU_GUEST
       | MAX_SYSTEM_CPU_GUEST
       | SYSTEM_CPU_STEAL
       | MAX_SYSTEM_CPU_STEAL

     - CPU usage of processes on the host. For hosts with more
       than one CPU core, this value can exceed 100%.

   * - | SYSTEM_NORMALIZED_CPU_USER
       | MAX_SYSTEM_NORMALIZED_CPU_USER
       | SYSTEM_NORMALIZED_CPU_KERNEL
       | MAX_SYSTEM_NORMALIZED_CPU_KERNEL
       | SYSTEM_NORMALIZED_CPU_NICE
       | MAX_SYSTEM_NORMALIZED_CPU_NICE
       | SYSTEM_NORMALIZED_CPU_IOWAIT
       | MAX_SYSTEM_NORMALIZED_CPU_IOWAIT
       | SYSTEM_NORMALIZED_CPU_IRQ
       | MAX_SYSTEM_NORMALIZED_CPU_IRQ
       | SYSTEM_NORMALIZED_CPU_SOFTIRQ
       | MAX_SYSTEM_NORMALIZED_CPU_SOFTIRQ
       | SYSTEM_NORMALIZED_CPU_GUEST
       | MAX_SYSTEM_NORMALIZED_CPU_GUEST
       | SYSTEM_NORMALIZED_CPU_STEAL
       | MAX_SYSTEM_NORMALIZED_CPU_STEAL

     - |cpu| usage of processes on the host scaled to a range of
       0 to 100% by dividing by the number of |cpu| cores.

   * - | SYSTEM_MEMORY_AVAILABLE
       | MAX_SYSTEM_MEMORY_AVAILABLE
       | SYSTEM_MEMORY_FREE
       | MAX_SYSTEM_MEMORY_FREE
       | SYSTEM_MEMORY_USED
       | MAX_SYSTEM_MEMORY_USED

     - Physical memory usage, in bytes, that the host uses.

   * - | SYSTEM_NETWORK_IN
       | MAX_SYSTEM_NETWORK_IN
       | SYSTEM_NETWORK_OUT
       | MAX_SYSTEM_NETWORK_OUT

     - Average rate of physical bytes per second that the **eth0**
       network interface received and transmitted.

   * - | SWAP_USAGE_USED
       | MAX_SWAP_USAGE_USED 
       | SWAP_USAGE_FREE
       | MAX_SWAP_USAGE_FREE

     - Total amount of memory that swap uses.

   * - | FTS_MEMORY_RESIDENT
       | FTS_MEMORY_VIRTUAL
       | FTS_MEMORY_MAPPED

     - Memory usage, in bytes, that :ref:`Atlas Search <fts-top-ref>` processes use.

   * - FTS_DISK_UTILIZATION

     - Disk space, in bytes, that :ref:`Atlas Search <fts-top-ref>` indexes use.

   * - | FTS_PROCESS_CPU_USER
       | FTS_PROCESS_CPU_KERNEL
       | FTS_PROCESS_NORMALIZED_CPU_USER
       | FTS_PROCESS_NORMALIZED_CPU_KERNEL

     - Percentage of |cpu| that :ref:`Atlas Search <fts-top-ref>` processes use.

Example Request
---------------

The following example request sets a **granularity** and **period** of
one minute. Replace the information in brackets ``{}`` with your own
|service| information to execute this example request:

.. code-block:: shell

   curl --user "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest \
        --header "Content-Type: application/json" \
        --include \
        --request GET "https://cloud.mongodb.com/api/atlas/v1.0/groups/{GROUP-ID}/processes/{HOST}:{PORT}/measurements?granularity=PT1M&period=PT1M&pretty=true"

Example Response
----------------

Response Header
~~~~~~~~~~~~~~~

.. include:: /includes/api/api-headers/401.rst

.. include:: /includes/api/api-headers/200.rst

Response Body
~~~~~~~~~~~~~

.. code-block:: json
   :linenos:

   {
     "end" : "2021-04-09T20:31:14Z",
     "granularity" : "PT1M",
     "groupId" : "{GROUP-ID}",
     "hostId" : "shard-00-00.mongodb.net:27017",
     "links":[],
     "measurements" : [
       {
         "dataPoints": [
           {
             "timestamp": "2021-04-09T10:06:15Z",
             "value": 0.0
           }
         ],
         "name": "QUERY_EXECUTOR_SCANNED",
         "units": "SCALAR_PER_SECOND"
       },{
         "dataPoints": [
           {
             "timestamp": "2021-04-09T10:06:15Z",
             "value": 6.866666666666666
           }
         ],
         "name": "QUERY_EXECUTOR_SCANNED_OBJECTS",
         "units": "SCALAR_PER_SECOND"
       },{
         "dataPoints": [
           {
             "timestamp": "2021-04-09T10:06:15Z",
             "value": 0.0
           }
         ],
         "name": "QUERY_TARGETING_SCANNED_PER_RETURNED",
         "units": "SCALAR"
       },{
         "dataPoints": [
           {
             "timestamp": "2021-04-09T10:06:15Z",
             "value": 1.0147783251231526
           }
         ],
         "name": "QUERY_TARGETING_SCANNED_OBJECTS_PER_RETURNED",
         "units": "SCALAR"
       }
     ],
     "processId" : "shard-00-00.mongodb.net:27017",
     "start" : "2021-04-09T20:30:45Z"
   }

