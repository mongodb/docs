:noprevnext:

===================
Launch {+bi-short+}
===================

.. meta::
   :description: Launch the BI Connector using `mongosqld` to connect MongoDB to BI tools, with options for schema creation and running as a service.

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. _launch:

Overview
--------

:binary:`~bin.mongosqld` is the |bi-short| program which connects
your MongoDB instance to your BI tool.  :binary:`~bin.mongosqld`
requires a data schema which maps to your MongoDB collections and
databases. You have several options for creating a schema and
launching :binary:`~bin.mongosqld`. This guide will help you choose
the best option for your needs.

By default, :binary:`~bin.mongosqld` generates a default :doc:`data schema
</schema-configuration>` and stores it in memory. Alternatively, if you prefer
to create a custom schema and edit it manually, use one of these two methods:

- Use the :binary:`~bin.mongodrdl` program to create a custom ``.drdl`` schema
  file and then start :binary:`~bin.mongosqld` with the
  :option:`--schema <mongodrdl --schema>` option to point to this file.

- If you previously uploaded a custom schema with the :commandoption:`upload`
  command, you must use the :commandoption:`name-schema <name-schema>`
  command to store the schema internally under the provided custom name.
  Then you can start :binary:`~bin.mongosqld` with
  :option:`--schemaSource <mongosqld --schema>`,
  :option:`--schemaMode <mongosqld --schema>`, and
  :option:`--schemaName <mongosqld --schemaName>` options.

To learn more about creating a schema and data sampling, see :doc:`schema-configuration`.

Prerequisites
-------------

- :doc:`Install </installation>` |bi-short|

Launching ``mongosqld``
-----------------------

There are three options for launching and running
:binary:`~bin.mongosqld`. You can:

- Run ``mongosqld`` as a :ref:`hosted service with MongoDB Atlas
  <deploy-bic-atlas>`
- Start ``mongosqld`` :ref:`from the command line <start-msqld-cli>`
- Install ``mongosqld`` as a :ref:`system service
  <msqld-as-a-system-service>`

.. _deploy-bic-atlas:

Run {+bi-short+} as a Hosted Service with MongoDB Atlas
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/atlas-bi-connector.rst

.. _start-msqld-cli:

Start ``mongosqld`` From the Command Line
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You can use command line options to specify collections and databases
to sample, user credentials, and other configuration options. For a
complete list of command line options, see
:ref:`mongosqld-command-line-options`.

To start :binary:`~bin.mongosqld` from the command line, run the
``mongosqld`` executable in the |bi-short| program directory with any
necessary command line options.

.. COMMENT Empty tabs below to render tab strip below heading

.. tabs-platforms::

   tabs:
     - id: windows
       content: |

     - id: macos
       content: |

     - id: debian
       content: |

     - id: rhel
       content: |

.. tabs-platforms::

   hidden: true

   tabs:
     - id: windows
       content: |
         The following example uses the :option:`--sampleNamespaces <mongosqld
         --sampleNamespaces>` option to specify the ``books`` collection in the
         ``test`` database.

         .. :copyable: true
         .. code-block:: ps1

            "C:\Program Files\MongoDB\Connector for BI\2.4\bin\mongosqld.exe" --sampleNamespaces test.books

     - id: macos
       content: |
         The following example uses the :option:`--sampleNamespaces <mongosqld
         --sampleNamespaces>` option to specify the ``books`` collection in the
         ``test`` database.

         .. :copyable: true
         .. code-block:: ps1

            mongosqld --sampleNamespaces test.books

     - id: debian
       content: |
         The following example uses the :option:`--sampleNamespaces <mongosqld
         --sampleNamespaces>` option to specify the ``books`` collection in the
         ``test`` database.

         .. :copyable: true
         .. code-block:: ps1

            mongosqld --sampleNamespaces test.books

     - id: rhel
       content: |
         The following example uses the :option:`--sampleNamespaces <mongosqld
         --sampleNamespaces>` option to specify the ``books`` collection in the
         ``test`` database.

         .. :copyable: true
         .. code-block:: ps1

            mongosqld --sampleNamespaces test.books

.. note::

   :binary:`~bin.mongosqld` defaults to port ``3307``. You can set
   the port number manually by providing the :option:`--addr
   <mongosqld --addr>` option with the host address and port.

``mongosqld`` with a Configuration File
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. COMMENT Empty tabs below to render tab strip below heading

.. tabs-platforms::

   tabs:
     - id: windows
       content: |

     - id: macos
       content: |

     - id: debian
       content: |

     - id: rhel
       content: |

You can use a :ref:`configuration file <config-format>` to hold all your
``mongosqld`` configuration options. Start ``mongosqld`` with the
:option:`--config <mongosqld --config>` option to specify a
configuration file.

.. tabs-platforms::

   hidden: true

   tabs:
     - id: windows
       content: |
         .. :copyable: true
         .. code-block:: ps1

            "C:\Program Files\MongoDB\Connector for BI\2.4\bin\mongosqld.exe" --config <pathToConfigFile>\mongosqld.conf

     - id: macos
       content: |
         .. :copyable: true
         .. code-block:: ps1

            mongosqld --config <pathToConfigFile>/mongosqld.conf

     - id: debian
       content: |
         .. :copyable: true
         .. code-block:: ps1

            mongosqld --config <pathToConfigFile>/mongosqld.conf

     - id: rhel
       content: |
         .. :copyable: true
         .. code-block:: ps1

            mongosqld --config <pathToConfigFile>/mongosqld.conf

.. _msqld-as-a-system-service:

Install ``mongosqld`` as a System Service
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. COMMENT Empty tabs below to render tab strip below heading

.. tabs-platforms::

   tabs:
     - id: windows
       content: |

     - id: macos
       content: |

     - id: debian
       content: |

     - id: rhel
       content: |

|bi-short| requires a configuration file with the
``mongosqld.systemLog.path`` setting specified when running as a
system service. Using your preferred text editor, create a
``mongosqld.conf`` file. To review the configuration file options,
see :ref:`Configuration File <config-format>`. For example:

.. tabs-platforms::

   hidden: true

   tabs:
     - id: windows
       content: |
         .. code-block:: text

            systemLog:
              path: 'C:\logs\mongosqld.log'
            net:
              bindIp: '127.0.0.1'
              port: 3307

         .. note::

            All the file paths in your configuration file must be
            absolute and wrapped in single quotes. For example:

            .. code-block:: text

               systemLog:
                 path: 'C:\logs\mongosqld.log'

         To install and run ``mongosqld`` as a system service, run the
         following commands:

         .. code-block:: ps1

            "C:\Program Files\MongoDB\Connector for BI\2.4\bin\mongosqld.exe" install --config "<pathToConfigFile>\mongosqld.conf"

            net start mongosql

         Windows returns ``mongosql service installed`` if your installation
         succeeded.

     - id: macos
       content: |
         .. code-block:: text

            systemLog:
              path: '/logs/mongosqld.log'
            net:
              bindIp: '127.0.0.1'
              port: 3307

         To install and run ``mongosqld`` as a system service, run the
         following commands:

         .. code-block:: sh

            mongosqld install --config <pathToConfigFile>/mongosqld.conf
            launchctl load -w /Library/LaunchDaemons/mongosql.plist

     - id: debian
       content: |

         .. code-block:: text

            systemLog:
              path: '/logs/mongosqld.log'
            net:
              bindIp: '127.0.0.1'
              port: 3307

         To install and run ``mongosqld`` as a system service, run the
         following commands:

         .. code-block:: sh

            sudo mongosqld install --config <pathToConfigFile>/mongosqld.conf
            sudo systemctl start mongosql.service

         To enable the service so it starts automatically at boot time,
         run the following:

         .. code-block:: sh

            systemctl enable mongosql.service

     - id: rhel
       content: |
         .. code-block:: text

            systemLog:
              path: '/logs/mongosqld.log'
            net:
              bindIp: '127.0.0.1'
              port: 3307

         To install and run ``mongosqld`` as a system service, run the
         following commands:

         .. code-block:: sh

            sudo mongosqld install --config <pathToConfigFile>/mongosqld.conf
            sudo systemctl start mongosql.service

         To enable the service so it starts automatically at boot time,
         run the following:

         .. code-block:: sh

            systemctl enable mongosql.service

         RHEL / CentOS 
         ~~~~~~~~~~~~~~

         To install and run ``mongosqld`` as a system service, run the
         following commands:

         .. code-block:: sh

            sudo mongosqld install --config <pathToConfigFile>/mongosqld.conf
            sudo service mongosql start

         To enable the service so it starts automatically at boot time,
         run the following:

         .. code-block:: sh

            sudo chkconfig mongosql on

         RHEL  / CentOS and SUSE 12
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~

         To install and run ``mongosqld`` as a system service, run the
         following commands:

         .. code-block:: sh

            sudo mongosqld install --config <pathToConfigFile>/mongosqld.conf
            sudo systemctl start mongosql.service

         To enable the service so it starts automatically at boot time,
         run the following:

         .. code-block:: sh

            sudo systemctl enable mongosql.service

Next Steps
----------

Once |bi-short| is up and running, you are ready to begin using it
with your preferred BI tool. See :doc:`/client-applications` for a
selected list of connection tutorials.
