.. meta::
   :robots: nosnippet

.. _data-api-deprecation:

========================================
Data API and HTTPS Endpoints Deprecation
========================================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. toctree::
   :titlesonly:
   :hidden:

   Guide: Implement an Express.js Alternative to the Atlas Data API </data-api/migration/data-api-tutorial>

As of September 2024, Data API and HTTPS Endpoints are deprecated for Atlas App
Services. Data API and HTTPS Endpoints will reach end-of-life and be removed on
**September 30, 2025**. If you use Data API or HTTPS Endpoints, you should
migrate to alternative solution providers before the services are removed.

The Data API and HTTPS Endpoints effectively enabled you to create a REST
interface to data in your Atlas clusters. Alternative solutions to consider:

- MongoDB Drivers and a Native Language Framework
- MongoDB Drivers and Cloud Native Functions
- Partner Solutions

MongoDB Drivers and a Native Language Framework
-----------------------------------------------

Leverage MongoDB Drivers with a native language framework of your choice to
create REST APIs in your self-managed app stack.

Node.js and Express
~~~~~~~~~~~~~~~~~~~

Express is a popular framework for building restful APIs, which can be leveraged
with the MongoDB native node driver to expose REST API endpoints for your
application.

- `Tutorial: Building a REST API with Express, Node, and MongoDB <https://www.mongodb.com/resources/languages/express-mongodb-rest-api-tutorial>`__
- :ref:`Guide: Implement an Express.js Alternative to the Atlas Data API <data-api-custom-express-alternative>`

Refer to the official `Express Documentation <https://expressjs.com/>`__ to
learn more.

Java and SpringBoot
~~~~~~~~~~~~~~~~~~~

Java Spring Boot is a framework that streamlines the creation of
production-ready Spring-based applications with minimal configuration.

- `Tutorial: Getting Started with MongoDB and SpringBoot <https://www.mongodb.com/resources/products/compatibilities/spring-boot#getting-started-with-mongodb-and-spring-boot>`__
- SpringBoot's `Accessing Data with MongoDB <https://spring.io/guides/gs/accessing-data-mongodb>`__

Refer to the official `SpringBoot Documentation <https://docs.spring.io/spring-data/mongodb/reference/>`__ to
learn more.

Python and FastAPI
~~~~~~~~~~~~~~~~~~~

FastAPI is a modern, easy-to-learn, Python 3.6+ framework for building APIs
based on standard Python type hints.

- `Quick Start: Getting Started With MongoDB and FastAPI <https://www.mongodb.com/developer/languages/python/python-quickstart-fastapi/>`__

Refer to the official `FastAPI Documentation <https://fastapi.tiangolo.com/>`__ to
learn more.

RESTHeart
~~~~~~~~~

RESTHeart is an open source runtime that leverages MongoDB features via 
REST, GraphQL, and WebSocket APIs to provide a persistent data API. RESTHeart 
provides REST APIs for MongoDB features, built-in authentication and authorization,
and support for Java, Kotlin, JavaScript, and Typescript.

Refer to the official `RESTHeart documentation <https://restheart.org/docs/>`__ to
learn more.


MongoDB Drivers and Cloud Native Functions
-------------------------------------------

Leverage MongoDB Drivers alongside serverless functions to perform CRUD
operations. 

AWS Lambda
~~~~~~~~~~

AWS Lambda is a compute service that runs your code in response to events and
automatically manages the compute resources, making it the fastest way to turn
an idea into a modern, production, serverless application.

- `Tutorial: Integrate MongoDB Atlas with AWS Lambda using the Node.js Driver <https://www.mongodb.com/developer/products/atlas/serverless-development-lambda-atlas/>`__
- `Tutorial: Serverless Development with AWS Lambda and the MDB Java Driver <https://www.mongodb.com/developer/products/atlas/serverless-development-aws-lambda-mongodb-atlas-using-java/>`__
- `Tutorial: How to use PyMongo to Connect MongoDB Atlas with AWS Lambda <https://www.mongodb.com/developer/products/atlas/awslambda-pymongo/>`__

Refer to the official `AWS Lambda Documentation
<https://aws.amazon.com/lambda/>`__ to
learn more.

Azure Functions
~~~~~~~~~~~~~~~

Azure Functions is a serverless solution that allows you to write less code,
maintain less infrastructure, and save on costs. Instead of worrying about
deploying and maintaining servers, the cloud infrastructure provides all the
up-to-date resources needed to keep your applications running.

- `Tutorial: How to Integrate Azure Functions with MongoDB using the .Net Driver <https://www.mongodb.com/blog/post/how-to-integrate-azure-functions-with-mongodb>`__
- Azure's `Getting Started with MongoDB Atlas and Azure Functions using .Net and C# <https://techcommunity.microsoft.com/t5/apps-on-azure-blog/getting-started-with-mongodb-atlas-and-azure-functions-using-net/ba-p/3741751>`__

Refer to the official `Azure Functions Documentation
<https://learn.microsoft.com/en-us/azure/azure-functions/functions-overview?pivots=programming-language-csharp>`__
to
learn more.

Google Cloud Run Functions
~~~~~~~~~~~~~~~~~~~~~~~~~~

Cloud Run is a managed compute platform that enables you to run containers that
are invocable via requests or events.

Refer to the official `Cloud Run documentation
<https://cloud.google.com/run/docs>`__ to
learn more.

Vercel, Node.js, and Express
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Vercel is a cloud platform that helps developers build, scale, and secure web
applications.

- `Tutorial: Building a REST API with Express, Node, and MongoDB <https://www.mongodb.com/resources/languages/express-mongodb-rest-api-tutorial>`__
- `Integrate MongoDB Atlas with Vercel
  <https://www.mongodb.com/docs/atlas/reference/partner-integrations/vercel/>`__
- Vercel's `Using Express.js with Vercel <https://vercel.com/guides/using-express-with-vercel>`__

Refer to the official `Vercel Documentation <https://vercel.com/docs/>`__ to
learn more.

Partner Solutions
-----------------

Below are MongoDB partners that offer best-in-class solutions for exposing REST
APIs to MongoDB.

Neurelo
~~~~~~~

Neurelo is a platform for developers designed to simplify working with
databases. It provides a powerful database abstraction with an API-first
approach, instantly transforming databases into REST and GraphQL APIs. Neurelo
offers features such as building and managing schemas with Text-to-Schema
support, fully-documented REST and GraphQL APIs (with SDKs) generated from your
schema with an API  playground, custom API endpoints for complex queries with
Text-to-MQL support, multiple CI/CD environments, schema-aware mock data
generation, and more.

This abstraction layer enables developers to program with databases through
APIs, simplifying communication between the application and the database and
making it easier and faster to integrate databases into their applications.

Refer to the following Nuerelo guides to learn more:

- `MongoDB Data API Migration Guide <https://docs.neurelo.com/guides/mongodb-atlas-migrate-rest-data-apis-to-neurelo>`__
- `MongoDB GraphQL API Migration Guide <https://docs.neurelo.com/guides/mongodb-atlas-migrate-graphql-to-neurelo>`__

Hasura
~~~~~~

Hasura empowers developers to rapidly build and deploy GraphQL and REST APIs on
MongoDB and many other data sources. By radically cutting down API development
times, Hasura enables rapid access to data for next-gen applications and
services, and enables enterprises to shorten time to market on data-powered
products and features.

Refer to Hasura's `MongoDB GraphQL API Migration Guide
<https://hasura.io/graphql/database/mongodb>`__ to learn more.

Eden
~~~~

Eden provides a unified API layer that enables applications to interact
seamlessly with MongoDB and diverse backend systems through a single, universal
interface. 
By handling the underlying complexity of data infrastructure while supporting 
distributed transactions and prepared requests across various data stores, Eden 
empowers development teams to focus on what matters most.

Unlike traditional solutions that impose restrictive abstraction layers, Eden 
maintains native query support, allowing teams to continue leveraging their 
existing MongoDB queries and optimizations. The platform expertly coordinates 
multi-endpoint workflows and manages infrastructure concerns, freeing 
engineering resources to concentrate on core application development.

Refer to the official `Eden Documentation <https://www.eden.dev/mongodb>`__ to 
learn more.

Delbridge Data API
~~~~~~~~~~~~~~~~~~

Delbridge offers a free, open-source Data API that serves as a drop-in 
replacement for the deprecated Atlas Data API, with no need to rewrite your code. 
The Delbridge Data API is designed for production, supporting bulk operations, 
native MongoDB commands, custom HTTP endpoints, and real-time validations with 
native MQL and Node.js driverâ€“aligned payloads.

If you need help deploying or securing the Data API, Delbridge provides optional 
services for cloud deployment, enterprise-grade access controls, monitoring, 
and fully managed support.

Refer to the official `Delbridge Data API <https://delbridge.solutions/data-api-mongodb/>`__ 
page to learn more.

Snaplogic
~~~~~~~~~

Snaplogic provides an integration platform for connecting cloud data sources.

Refer to SnapLogic's `MongoDB Snap Pack
<https://docs-snaplogic.atlassian.net/wiki/spaces/SD/pages/1438065/MongoDB+Snap+Pack>`__
documentation to learn more.

Considerations
--------------

Migrating to an alternative solution implies that you will no longer have access
to the auxiliary features provided by Atlas App Services. Depending on which of
these features you use, you'll need to implement the equivalent features on your
new solution. This process can vary in complexity based on how extensively you
rely on these features. When evaluating the alternative solutions, consider the
following:

- Atlas Functions :ref:`Global Context <function-context>` would no longer be
  available
- :ref:`Global Modules <function-global-modules>` would need to be re-mapped
  to Node and BSON packages before use
- Neither Bearer or Credential Headers-based :ref:`Authentication 
  <data-api-authenticate-requests>` would be available
- :ref:`Values and Secrets <values-and-secrets>` will no longer be available
- :ref:`App Services Data Access Permissions <rules>` will no longer be
  available

Get Help
--------

Please contact our support team through the `MongoDB Support Portal <https://support.mongodb.com/?_ga=2.106517189.77142833.1725890426-453336878.1698066040>`__
or your Account Executive.
