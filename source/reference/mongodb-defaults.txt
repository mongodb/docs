============================================
Default MongoDB Read Concerns/Write Concerns
============================================

.. COMMENT Since the immediate need is for the default read/write concerns and the content will be restricted to just those, this page is currently titled as default read/write concern.
   However, going forward, this page could be a 1-stop shop for
   defaults used in MongoDB and as such the file itself is named
   mongodb-defaults in anticipation of future work.

.. default-domain:: mongodb



.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Read Concern
------------

.. figure:: /images/read-write-concern-inheritance.bakedsvg.svg
   :alt: Read/Write Concern Inheritance
   :figwidth: 500px

Default Read Concern
~~~~~~~~~~~~~~~~~~~~

The :red:`default` :doc:`read concern </reference/read-concern>` is as
follows:

.. list-table::
   :header-rows: 1
   :widths: 45 55
   
   * - Operations
     - Default Read Concern

   * - Reads against primary

     - :readconcern:`"local"`

       .. note::

          - This read concern can return data that may be rolled
            back.

          - This read concern :red:`does not` guarantee :ref:`causal
            consistency <sessions>`.

   * - | Reads against secondaries if the reads are 
       | associated with :ref:`causally consistent sessions <sessions>`.

     - :readconcern:`"local"`

       .. note::

          - This read concern can return data that may be rolled
            back.

          - This read concern :red:`does not` guarantee :ref:`causal
            consistency <sessions>`.


   * - | Reads against secondaries if the reads are :red:`not`
       | associated with :ref:`causally consistent sessions <sessions>`.

     - :readconcern:`"available"`

       .. note::

          - This read concern can return data that may be rolled
            back.

          - This read concern :red:`does not` guarantee :ref:`causal
            consistency <sessions>`.

          - For sharded collections, this read concern can also return
            :red:`orphaned documents`.

.. _mongodb-default-rc-outside-transactions:

.. _mongodb-default-rc-txns:

Specify Read Concern: MongoDB Drivers
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. tabs::

   .. tab:: Operations outside Transactions
      :tabid: override-concern

      .. note::

         The following applies to operations issued outside
         :doc:`transactions </core/transactions>`.

         For read concern information related to operations issued
         inside transactions, click on the ``Operations in
         Transactions`` tab.

      Using the `MongoDB drivers <https://docs.mongodb.com/drivers/>`__,
      you can override the default :doc:`read concern
      </reference/read-concern>` and set read concern for operations at
      the following levels:

      .. list-table::
         :header-rows: 1
         :widths: 25 75

         * - Level

           - Description

         * - Client level

           - Applies to operations unless a finer-grained read concern for an
             operation is set at the database/collection/operation level.

         * - Database level

           - Applies to operations on the database's collections
             (i.e. overrides the client read concern) unless a read
             concern has been set at the collection level or the operation
             level.

             .. note::

                Does not apply to operations inside transactions.

         * - Collection level

           - Applies for read operations on the collection (i.e. overrides
             the database/client read concern) unless a read concern has
             been set at the operation level.

             .. note::

                Does not apply to operations inside transactions.

         * - Operation level

           - Applies for the specific read operation (i.e. overrides the
             database/client/collection read concern).

             The ability to set read concern at the operation depends on the
             driver. Refer to your `driver's documentation
             <https://docs.mongodb.com/drivers/>`__.

             .. note::

                Does not apply to operations inside transactions.

   .. tab:: Operations in Transactions
      :tabid: override-concern-txn

      .. note::

         The following applies to operations issued inside :doc:`transactions
         </core/transactions>`.

         For read concern information related to operations issued
         :red:`outside` transactions, click on the ``Operations
         outside Transactions`` tab.

      Using the `MongoDB drivers <https://docs.mongodb.com/drivers/>`__,
      you can override the default :doc:`read concern
      </reference/read-concern>` and set read concern **for transactions**
      at the following levels:

      .. list-table::
         :header-rows: 1
         :widths: 25 75

         * - Level

           - Description

         * - Client level

           - Applies to transactions unless a finer-grained read concern
             is set at the session/transaction level.

             .. note::
       
                All operations in a transaction use the transaction read
                concern; i.e., any read concern set at the
                operation/collection/database level is :red:`ignored`
                inside the transaction.

         * - Session level

           - Applies to :doc:`transactions </core/transactions>` started
             in the session (i.e. overrides the client read concern)
             unless a finer-grained read concern level is set at a
             specific transaction level.

             .. note::
       
                All operations in a transaction use the transaction read
                concern; i.e., any read concern set at the
                operation/collection/database level is :red:`ignored`
                inside the transaction.

             See :ref:`transactions-read-concern` for more information.

         * - Transaction level

           - Applies to the specific transaction (i.e. overrides the
             client/session read concern).

             .. note::

                All operations in a transaction use the transaction read
                concern; i.e., any read concern set at the
                operation/collection/database level is :red:`ignored`
                inside the transaction.

             See :ref:`transactions-read-concern` for more information.

Additional Information
~~~~~~~~~~~~~~~~~~~~~~

For more information on the available read concerns, see
:doc:`/reference/read-concern`.

Write Concern
-------------

.. figure:: /images/read-write-concern-inheritance.bakedsvg.svg
   :alt: Read/Write Concern Inheritance
   :figwidth: 500px

Default Write Concern
~~~~~~~~~~~~~~~~~~~~~

The :red:`default` :doc:`write concern </reference/write-concern>` is
:writeconcern:`w: 1 <w: \<number\>>`. 

.. note::

   - With the default write concern, data can be rolled back.

   - This write concern :red:`does not` guarantee :ref:`causal
     consistency <sessions>`.

.. _mongodb-default-wc-txns:

.. _mongodb-default-wc-outside-transactions:

Specify Write Concern: MongoDB Drivers
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. tabs::

   .. tab:: Operations outside Transactions
      :tabid: override-concern

      .. note::

         The following applies to operations issued outside
         :doc:`transactions </core/transactions>`.

         For read concern information related to operations issued
         inside transactions, click on the ``Operations in
         Transactions`` tab.

      Using the `MongoDB drivers <https://docs.mongodb.com/drivers/>`__,
      you can override the default :doc:`write concern
      </reference/write-concern>` and set write concern for operations at
      the following levels:

      .. list-table::
         :header-rows: 1
         :widths: 25 75

         * - Level

           - Description

         * - Client level

           - Applies to operations unless a finer-grained write concern
             for an operation is set at the operation/database/collection.

         * - Database level

           - Applies to write operations on the database's collections
             (i.e. overrides the client write concern) unless a write
             concern has been set at the collection level or the operation
             level.

             .. note::

                Does not apply to operations inside transactions.

         * - Collection level

           - Applies to write operations on the collection (i.e.
             overrides the database and client write concern) unless a
             write concern has been set at the operation level.

             .. note::

                Does not apply to operations inside transactions.

         * - Operation level

           - Applies to the specific write operation.

             The ability to set write concern at the operation depends on the
             driver. Refer to your `driver's documentation
             <https://docs.mongodb.com/drivers/>`__.

             .. note::

                Does not apply to operations inside transactions.

   .. tab:: Operations in Transactions
      :tabid: override-concern-txn

      .. note::

         The following applies to operations issued inside :doc:`transactions
         </core/transactions>`.

         For read concern information related to operations issued
         :red:`outside` transactions, click on the ``Operations
         outside Transactions`` tab.

      Using the `MongoDB drivers <https://docs.mongodb.com/drivers/>`__,
      you can override the default :doc:`write concern
      </reference/write-concern>` and set write concern for **for
      transactions** at the following levels:

      .. list-table::
         :header-rows: 1
         :widths: 25 75

         * - Level

           - Description

         * - Client level

           - Applies to transactions unless a finer-grained write concern for
             transactions are set at the session/transaction level.
       
             Transaction write concern applies to the commit operation and
             the operations inside the transaction.

             .. note::

                All operations within a transaction use the transaction write
                concern; i.e., any write concern set at the
                operation/collection/database level is :red:`ignored` inside
                the transaction.

         * - Session level

           - Applies for :doc:`transactions </core/transactions>` started in
             the session unless the write concern level is set at a specific
             transaction level.

             Transaction write concern applies to the commit operation and
             the operations inside the transaction.

             .. note::

                All operations within a transaction use the transaction write
                concern; i.e., any write concern set at the
                operation/collection/database level is :red:`ignored` inside
                the transaction.

         * - Transaction level

           - Applies to the specific transaction.

             Transaction write concern applies to the commit operation and
             the operations inside the transaction.

             .. note::

                All operations within a transaction use the transaction write
                concern; i.e., any write concern set at the
                operation/collection/database level is :red:`ignored` inside
                the transaction.

      See :ref:`transactions-write-concern` for more information. 

Additional Information
~~~~~~~~~~~~~~~~~~~~~~

For more information on the available write concerns, see
:doc:`/reference/write-concern`.

Causally Consistency Guarantees
-------------------------------

With :ref:`causally consistent client sessions <sessions>`, the
client sessions only guarantee causal consistency if:

- the associated read operations use :readconcern:`"majority"` read
  concern, and 

- the associated write operations use :writeconcern:`"majority"`
  write concern.
