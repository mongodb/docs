term: agent
ref: glossary-agent
definition: |

  A lightweight program that provides an interface between your MongoDB
  processes and |mms|.

---
term: agent API key
ref: glossary-agent-api-key
definition: |

  A unique identifier that authenticates a project's
  :term:`MongoDB Agents <MongoDB Agent>` to |mms|. A project can have
  multiple agent |api| keys.

  .. seealso::

     :doc:`/tutorial/manage-agent-api-key`

---
term: "authentication mechanism"
ref: glossary-authentication-mechanism
definition: |

  A method to enable access to a MongoDB database. This is separate
  from authorization, which grants you permission to use certain
  actions on a MongoDB database.

  .. seealso::

     :doc:`/tutorial/edit-host-authentication-credentials`

---
term: automation
ref: glossary-automation
definition: |

  The assisted management of MongoDB processes through the |mms|
  interface. The :term:`MongoDB Agents <MongoDB Agent>` installed on
  your MongoDB hosts allow you to deploy, configure, and update
  MongoDB processes directly from |mms|.

  .. seealso::

     :ref:`automation`

---
term: Automation Agent
ref: glossary-automation-agent
definition: |

  The lightweight component that had automated common management
  tasks. The Automation Agent runs on every server that ran a
  :manual:`mongod </reference/program/mongod/#mongodb-binary-bin.mongod>` or :manual:`mongos </reference/program/mongos/#mongodb-binary-bin.mongos>`.

  .. note::

     This has been replaced with the :term:`MongoDB Agent`.

---
term: Backup Agent
ref: glossary-backup-agent
definition: |

  The lightweight component that had run within your data center and
  backed up MongoDB processes via the MongoDB wire protocol. No direct
  file system access was needed.

  .. note::

     This has been replaced with the :term:`MongoDB Agent`.

---
term: batch
ref: glossary-batch
definition: |

  The collection of jobs needed to restore a :manual:`sharded cluster </reference/glossary/#std-term-sharded-cluster>`:
  one job for each shard and one job for the :manual:`config server </reference/glossary/#std-term-config-server>`.

  Replica set restore jobs do not use batches.
---
term: checkpoint
ref: glossary-checkpoint
definition: |

  A point in time between snapshots to which you can restore a sharded
  cluster. |mms| must stop the :term:`balancer` each time it creates a
  checkpoint. |mms| doesn't require checkpoints and disables
  checkpoints by default.

  .. include:: /includes/admonitions/important/checkpoints-fcv-4-0-only.rst

  .. seealso::

     :ref:`checkpoint`

---
term: cluster
ref: glossary-cluster
definition: |

  In |mms|, *cluster* can refer to either a :manual:`replica set </reference/glossary/#std-term-replica-set>` or
  :manual:`sharded cluster </reference/glossary/#std-term-sharded-cluster>`.

---
term: custom snapshot
ref: glossary-custom-snapshot
definition: |

  A backup of the state of your MongoDB deployment at a point in time
  between :manual:`stored snapshots </reference/glossary/#std-term-snapshot>`. |mms| builds a custom
  snapshot by applying oplog data to a stored snapshot.

  .. seealso::

     :doc:`/tutorial/nav/restore-overview`

---
term: deduplication
ref: glossary-deduplication
definition: |

  A process that eliminates redundant data. This data can be additional
  copies of database or file system documents or redundant data within
  those documents at the block level when written to a storage medium
  like spinning or solid state disks. Only unique documents or blocks
  are written to a storage medium. This process usually applies to
  backups or data archiving.

  .. example::

     Each recipient in an email system may have their own copy of an
     email sent to the whole company. With deduplication, all copies of
     this except one are replaced with pointers to a single stored copy
     before backing up the email system. This effectively reduces the
     amount of storage capacity needed to back up this one email by 99
     percent.

---
term: deployment
ref: glossary-deployment
definition: |

  Usually refers to all the MongoDB processes that run within |a-mms|
  :cloudmgr:`project </reference/glossary/#term-project>`. *Deployment* can also refer to a specific set of
  MongoDB processes, such as a specific :manual:`sharded cluster </reference/glossary/#std-term-sharded-cluster>` or
  :manual:`replica set </reference/glossary/#std-term-replica-set>`.

---
term: dirty bytes
ref: glossary-dirty-bytes
definition: |

  Data that has been updated in the WiredTiger cache but not flushed to
  disk.

---
term: excluded namespace
ref: glossary-excluded-namespace
definition: |

  A database or collection that |mms| will not back up, as designated
  by its :term:`namespace`.

  .. seealso::

     :ref:`namespaces-filter`

---
term: group
ref: glossary-group
definition: |

  A distinct set of MongoDB processes and |mms| users. Synonymous with
  :cloudmgr:`project </reference/glossary/#term-project>`.

  .. seealso::

     :doc:`/tutorial/manage-projects`

---
term: initial sync
ref: glossary-initial-sync-cloud
definition: |

  The MongoDB operation that replicates data from an existing
  :term:`replica set` member to a new member. |mms| uses initial sync
  when :doc:`starting a new backup </tutorial/enable-backup>`.

  .. seealso::

     :manual:`Replica Set Data Synchronization
     </core/replica-set-sync>` in the MongoDB manual
---
term: host
ref: glossary-host
definition: |

  A physical machine, virtual machine, or container that serves one or
  more MongoDB processes.

---
term: link-token
ref: glossary-link-token
definition: |

  A string that contains the information necessary to connect from
  |mms| to |service-short| during a Live Migration from an |mms| deployment
  to a deployment in |service-short|.
  
  When you are ready to live migrate data from an
  |mms| deployment, you generate a link-token in |service-short|
  and then enter it in your |mms| organization's settings. You use the
  same link-token to migrate each deployment in your |mms|
  organization sequentially, one at a time.
  
  You can generate multiple link-tokens in |service-short|. Use
  one unique link-token for each |mms| organization.

  .. seealso::
  
     - :ref:`lm-workflow`
     - :doc:`/tutorial/migrate-to-atlas`

---
term: migration host
ref: glossary-migration-host
definition: |

  A dedicated server with its own specially-configured {+mdbagent-lm+}.
  You run the Live Migration (push) process on the migration host to migrate
  your MongoDB deployment to |service-short|.

  .. seealso::
  
     - :doc:`/tutorial/provision-migration-host`
     - :doc:`/tutorial/migrate-to-atlas`

---
term: MongoDB Agent
ref: glossary-mongodb-agent
definition: |

  A lightweight :term:`agent` that can monitor, manage, and back up
  your MongoDB databases.

  .. seealso::

     :doc:`/tutorial/nav/mongodb-agent`


---
term: monitoring
ref: glossary-monitoring
definition: |

  The real-time reporting, visualization, and alerting of the state of
  your MongoDB processes.

  .. seealso::

     :ref:`monitoring-functional-overview`

---
term: Monitoring Agent
ref: glossary-monitoring-agent
definition: |

  The lightweight component that had run within your data center and
  monitored your MongoDB processes via the MongoDB wire protocol. No
  direct file system access was needed.

  .. note::

     This has been replaced with the :term:`MongoDB Agent`.

---
term: namespace
ref: glossary-namespace
definition: |

  The combination of the database name and collection name:

  .. code-block:: javascript

     "database-name.collection-name"

---
term: oplog slice
ref: glossary-oplog-slice
definition: |

  Compressed batch of entries for the tailed :term:`oplog` of a
  backed-up shard or replica set. The :term:`MongoDB Agent` creates an
  oplog slice and sends it to |mms|, which stores it in the
  :term:`Oplog Store Database`.

---
term: Oplog Store Database
ref: glossary-oplog-store-database
definition: |

  The database where |onprem| stores :term:`oplog slices <oplog slice>`
  before applying them to a deployment's backup.

---
term: ping
ref: glossary-ping
definition: |

  A data transmission that the :term:`MongoDB Agent` sends to |mms| to
  confirm that the Agent and its MongoDB processes are running and
  reachable.

---
term: point-in-time restore
ref: glossary-point-in-time-restore
definition: |

  A database restoration that captures the state of your data at a
  moment in-between :manual:`snapshots </reference/glossary/#std-term-snapshot>`. Point-in-time
  restores take longer to perform than snapshot restores.

  .. seealso::

     :doc:`/tutorial/nav/restore-overview`

---
term: process
ref: glossary-process
definition: |

  An instance of MongoDB running on a given host and port. The MongoDB
  database process is :manual:`mongod </reference/program/mongod/#mongodb-binary-bin.mongod>`. MongoDB also uses the
  :manual:`mongos </reference/program/mongos/#mongodb-binary-bin.mongos>` process to route operations in the
  :manual:`sharded clusters </reference/glossary/#std-term-sharded-cluster>`.

  .. seealso::

     :manual:`MongoDB Package Components </reference/program>`

---
term: project
ref: glossary-project
definition: |

  A distinct set of MongoDB processes and |mms| users. Synonymous with
  :cloudmgr:`group </reference/glossary/#term-group>`.

  .. seealso::

     :doc:`/tutorial/manage-projects`

---
term: Public API key
ref: glossary-public-api-key
definition: |

  A unique identifier that authenticates |a-mms| user through the
  :doc:`{+admin-api+} </core/api>`. The key belongs to 
  the user, as opposed to the :cloudmgr:`agent API key </reference/glossary/#term-agent-api-key>`, which belongs to 
  the project.

---
term: queryable backup
ref: glossary-queryable-backup
definition: |

  A feature provided by |mms| in which |mms| quickly and securely makes
  a given snapshot accessible over a MongoDB connection string. You can
  use the connection string with standard MongoDB tools such as
  {+mongosh+} or |mongodump| to access the snapshot for read-only
  operations.

  Queryable backups start up quickly regardless of the snapshot's total
  data size. They are uniquely useful for restoring a small subset of
  data, such as a document that was accidentally deleted, or reading
  out a single collection with |mongodump|.

  .. seealso::

     :doc:`/tutorial/query-backup/`

---
term: Recovery Point Objective
ref: glossary-recovery-point-objective
definition: |

  The maximum tolerable age of backup files that must be recovered from
  storage for normal operations to resume after a failure or disaster
  occurs.

---
term: Recovery Time Objective
ref: glossary-recovery-time-objective
definition: |

  The maximum tolerable length of time that a system can be offline
  after a failure or disaster occurs.

---
term: role
ref: glossary-role
definition: |

  The permissions granted to |a-mms| or MongoDB user.

  .. seealso::

     - :doc:`/reference/user-roles` for |mms| user roles
     - :manual:`Built-in Roles </reference/built-in-roles>` in the
       MongoDB manual for MongoDB user roles

---

term: rolling restart
ref: glossary-rolling-restart
definition: |

  A technique used to maintain cluster availability during maintenance 
  periods by updating nodes in a replica set one-by-one, always
  maintaining a primary node, until all nodes are updated.

  .. seealso::

     :ref:`rolling-restart-faq`

---
term: server
ref: glossary-server
definition: |

  A physical or virtual machine that serves one or more MongoDB
  processes.

---
term: snapshot
ref: glossary-snapshot-cloud
definition: |

  Single backup of your data that |mms| captures at a specific interval
  and stores. The :ref:`snapshot-frequency-and-retention` determines
  the interval for taking snapshots and how long to store them. You can
  :doc:`query specific backups </tutorial/query-backup/>`.

  .. seealso::

     :term:`custom snapshot`

---
term: snapshot frequency and retention policy
ref: glossary-snapshot-policy
definition: |

  The schedule for how often to take :manual:`snapshots </reference/glossary/#std-term-snapshot>` and
  how long to store them.

  .. seealso::

     :ref:`snapshot-frequency-and-retention`

---
term: snapshot store
ref: glossary-snapshot-store
definition: |

  The location where your :term:`snapshots <snapshot>` are stored.

---
term: storage engine
ref: glossary-storage-engine
definition: |

  The database storage engine manages how data is stored on disk.
  MongoDB versions 3.0 and later offer multiple storage engines.

  .. seealso::

     - :manual:`Storage </core/storage>`
     - :manual:`MongoDB Storage FAQ </faq/storage>` in the MongoDB
       manual

...
