#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:3
msgid "Recover a Standalone after an Unexpected Shutdown"
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:7
msgid ""
"When a standalone :binary:`~bin.mongod` instance has journaling disabled "
"[#journaling-on]_, an unclean shutdown may leave the data in an "
"inconsistent state. Following an unclean shutdown, if a non-empty "
"``mongod.lock`` file exists, :binary:`~bin.mongod` instance logs the "
"following message upon restart:"
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:17
msgid ""
"If your :setting:`~storage.dbPath` contains a non-empty ``mongod.lock`` "
"file, you must repair the database. This tutorial outlines the procedure "
"to repair your database for a standalone :binary:`~bin.mongod`."
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:23
msgid ""
"Do not use this tutorial to recover a member of a :term:`replica set`. "
"Instead, you should either restore from a :doc:`backup </core/backups>` "
"or resync from another member of the set, as described in :doc:`/tutorial"
"/resync-replica-set-member`."
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:30
msgid ""
"By default, MongoDB runs with :doc:`journaling </core/journaling>` "
"enabled to prevent data inconsistency in the event of an unclean "
"shutdown. To shut down cleanly, see :ref:`terminate-mongod-processes`."
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:38
msgid "Procedure"
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:42
msgid ""
"Run the repair operation as the same user that normally runs the "
":binary:`~bin.mongod` process to avoid changing the permissions of the "
"MongoDB data files."
msgstr ""

#: ../source/includes/steps/recover-data-with-repairpath.rst:8
msgid "Create a backup of the data files."
msgstr ""

#: ../source/includes/steps/recover-data-with-repairpath.rst:10
#: ../source/includes/steps/recover-data-with-repairpath.rst:22
msgid ""
"Create a backup copy of the data files in the :option:`--dbpath <mongod "
"--dbpath>`."
msgstr ""

#: ../source/includes/steps/recover-data-with-repairpath.rst:20
msgid "Step 1: Create a backup of the data files."
msgstr ""

#: ../source/includes/steps/recover-data-with-repairpath.rst:32
msgid "Start :binary:`~bin.mongod` with ``--repair``."
msgstr ""

#: ../source/includes/steps/recover-data-with-repairpath.rst:34
#: ../source/includes/steps/recover-data-with-repairpath.rst:63
msgid ""
"To repair the data files, start the :binary:`~bin.mongod` instance with "
"the :option:`--repair <mongod --repair>` option. By default, during the "
"repair operation, MongoDB uses a ``_tmp`` directory in the "
":option:`--dbpath <mongod --dbpath>`."
msgstr ""

#: ../source/includes/steps/recover-data-with-repairpath.rst:39
#: ../source/includes/steps/recover-data-with-repairpath.rst:68
msgid ""
"If the :binary:`~bin.mongod` instance uses :doc:`/core/mmapv1`, you can "
"include the :option:`--repairpath <mongod --repairpath>` option to "
"specify an alternate temporary directory. For details, see "
":option:`--repairpath <mongod --repairpath>`."
msgstr ""

#: ../source/includes/steps/recover-data-with-repairpath.rst:43
#: ../source/includes/steps/recover-data-with-repairpath.rst:72
msgid "Issue a command similar to the following:"
msgstr ""

#: ../source/includes/steps/recover-data-with-repairpath.rst:52
#: ../source/includes/steps/recover-data-with-repairpath.rst:81
msgid ""
"Upon completion, the ``dbpath`` should contain the repaired data files "
"and an empty ``mongod.lock`` file. [#manual-removal]_"
msgstr ""

#: ../source/includes/steps/recover-data-with-repairpath.rst:61
msgid "Step 2: Start :binary:`~bin.mongod` with ``--repair``."
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:50
msgid ""
"Generally, you should not manually remove the ``mongod.lock`` file. "
"Instead, use the above procedure to recover the database. In dire "
"situations, you can remove the file, start the database using the "
"possibly corrupt files, and attempt to recover data from the database. "
"However, it is impossible to predict the state of the database in these "
"situations."
msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid "Recover Data after an Unexpected Shutdown"
#~ msgstr ""

#~ msgid ""
#~ "To prevent data inconsistency and "
#~ "corruption, always shut down the "
#~ "database cleanly and use the "
#~ ":term:`durability journaling <journal>`. MongoDB "
#~ "writes data to the journal, by "
#~ "default, every 100 milliseconds, such "
#~ "that MongoDB can always recover to "
#~ "a consistent state even in the "
#~ "case of an unclean shutdown due to"
#~ " power loss or other system failure."
#~ msgstr ""

#~ msgid ""
#~ "If you are *not* running as part"
#~ " of a :term:`replica set` **and** do"
#~ " *not* have journaling enabled, use "
#~ "the following procedure to recover data"
#~ " that may be in an inconsistent "
#~ "state. If you are running as part"
#~ " of a replica set, you should "
#~ "*always* restore from a backup or "
#~ "restart the :program:`mongod` instance with"
#~ " an empty :setting:`~storage.dbPath` and "
#~ "allow MongoDB to perform an initial "
#~ "sync to restore the data."
#~ msgstr ""

#~ msgid ""
#~ "The :doc:`/administration` documents, including "
#~ ":ref:`Replica Set Syncing <replica-set-"
#~ "syncing>`, and the documentation on the"
#~ " :option:`--repair <mongod --repair>` "
#~ ":setting:`~storage.repairPath` and "
#~ ":setting:`storage.journal.enabled` settings."
#~ msgstr ""

#~ msgid ""
#~ "You can also use the "
#~ ":method:`db.collection.validate()` method to test"
#~ " the integrity of a single "
#~ "collection. However, this process is "
#~ "time consuming, and without journaling "
#~ "you can safely assume that the "
#~ "data is in an invalid state and"
#~ " you should either run the repair "
#~ "operation or resync from an intact "
#~ "member of the replica set."
#~ msgstr ""

#~ msgid "Process"
#~ msgstr ""

#~ msgid "Indications"
#~ msgstr ""

#~ msgid ""
#~ "When you are aware of a "
#~ ":program:`mongod` instance running without "
#~ "journaling that stops unexpectedly **and** "
#~ "you're not running with replication, you"
#~ " should always run the repair "
#~ "operation before starting MongoDB again. "
#~ "If you're using replication, then "
#~ "restore from a backup and allow "
#~ "replication to perform an initial "
#~ ":ref:`sync <replica-set-syncing>` to "
#~ "restore data."
#~ msgstr ""

#~ msgid ""
#~ "If the ``mongod.lock`` file in the "
#~ "data directory specified by "
#~ ":setting:`~storage.dbPath`, ``/data/db`` by default,"
#~ " is *not* a zero-byte file, "
#~ "then :program:`mongod` will refuse to "
#~ "start, and you will find a message"
#~ " that contains the following line in"
#~ " your MongoDB log our output:"
#~ msgstr ""

#~ msgid ""
#~ "This indicates that you need to "
#~ "run :program:`mongod` with the "
#~ ":option:`--repair <mongod --repair>` option. "
#~ "If you run repair when the "
#~ "``mongodb.lock`` file exists in your "
#~ ":setting:`~storage.dbPath`, or the optional "
#~ ":option:`--repairpath <mongod --repairpath>`, you"
#~ " will see a message that contains "
#~ "the following line:"
#~ msgstr ""

#~ msgid ""
#~ "If you see this message, as a "
#~ "last resort you may remove the "
#~ "lockfile **and** run the repair "
#~ "operation before starting the database "
#~ "normally, as in the following procedure:"
#~ msgstr ""

#~ msgid "Overview"
#~ msgstr ""

#~ msgid "Recovering a member of a replica set."
#~ msgstr ""

#~ msgid ""
#~ "Do not use this procedure to "
#~ "recover a member of a :term:`replica "
#~ "set`. Instead you should either restore"
#~ " from a :doc:`backup </core/backups>` or"
#~ " perform an initial sync using data"
#~ " from an intact member of the "
#~ "set, as described in :doc:`/tutorial"
#~ "/resync-replica-set-member`."
#~ msgstr ""

#~ msgid ""
#~ "There are two processes to repair "
#~ "data files that result from an "
#~ "unexpected shutdown:"
#~ msgstr ""

#~ msgid ""
#~ "Use the :option:`--repair <mongod --repair>`"
#~ " option in conjunction with the "
#~ ":option:`--repairpath <mongod --repairpath>` option."
#~ " :program:`mongod` will read the existing"
#~ " data files, and write the existing"
#~ " data to new data files."
#~ msgstr ""

#~ msgid ""
#~ "You do not need to remove the "
#~ "``mongod.lock`` file before using this "
#~ "procedure."
#~ msgstr ""

#~ msgid ""
#~ "Use the :option:`--repair <mongod --repair>`"
#~ " option. :program:`mongod` will read the"
#~ " existing data files, write the "
#~ "existing data to new files and "
#~ "replace the existing, possibly corrupt, "
#~ "files with new files."
#~ msgstr ""

#~ msgid "You must remove the ``mongod.lock`` file before using this procedure."
#~ msgstr ""

#~ msgid ""
#~ ":option:`--repair <mongod --repair>` functionality"
#~ " is also available in the shell "
#~ "with the :method:`db.repairDatabase()` helper "
#~ "for the :dbcommand:`repairDatabase` command."
#~ msgstr ""

#~ msgid "Procedures"
#~ msgstr ""

#~ msgid ""
#~ "Always Run :program:`mongod` as the same"
#~ " user to avoid changing the "
#~ "permissions of the MongoDB data files."
#~ msgstr ""

#~ msgid "Repair Data Files and Preserve Original Files"
#~ msgstr ""

#~ msgid ""
#~ "To repair your data files using "
#~ "the :option:`--repairpath <mongod --repairpath>` "
#~ "option to preserve the original data "
#~ "files unmodified."
#~ msgstr ""

#~ msgid "Repair Data Files without Preserving Original Files"
#~ msgstr ""

#~ msgid ""
#~ "To repair your data files without "
#~ "preserving the original files, do not"
#~ " use the :option:`--repairpath <mongod "
#~ "--repairpath>` option, as in the "
#~ "following procedure:"
#~ msgstr ""

#~ msgid ""
#~ "After you remove the ``mongod.lock`` "
#~ "file you *must* run the "
#~ ":option:`--repair <mongod --repair>` process "
#~ "before using your database."
#~ msgstr ""

#~ msgid "``mongod.lock``"
#~ msgstr ""

#~ msgid ""
#~ "In normal operation, you should "
#~ "**never** remove the ``mongod.lock`` file "
#~ "and start :program:`mongod`. Instead consider"
#~ " the one of the above methods "
#~ "to recover the database and remove "
#~ "the lock files. In dire situations "
#~ "you can remove the lockfile, and "
#~ "start the database using the possibly"
#~ " corrupt files, and attempt to "
#~ "recover data from the database; however,"
#~ " it's impossible to predict the state"
#~ " of the database in these situations."
#~ msgstr ""

#~ msgid ""
#~ "If you are not running with "
#~ "journaling, and your database shuts down"
#~ " unexpectedly for *any* reason, you "
#~ "should always proceed *as if* your "
#~ "database is in an inconsistent and "
#~ "likely corrupt state. If at all "
#~ "possible restore from :doc:`backup "
#~ "</core/backups>` or, if running as a "
#~ ":term:`replica set`, restore by performing "
#~ "an initial sync using data from an"
#~ " intact member of the set, as "
#~ "described in :doc:`/tutorial/resync-replica-"
#~ "set-member`."
#~ msgstr ""

#~ msgid "On this page"
#~ msgstr ""

#~ msgid ""
#~ "If MongoDB does not shutdown cleanly,"
#~ " the on-disk representation of the"
#~ " data files will likely reflect an"
#~ " inconsistent state which could lead "
#~ "to data corruption. [#validation]_"
#~ msgstr ""

#~ msgid "To ensure a clean shut down, use one of the following methods:"
#~ msgstr ""

#~ msgid ":method:`db.shutdownServer()` from the :program:`mongo` shell,"
#~ msgstr ""

#~ msgid "Your system's :term:`init script`,"
#~ msgstr ""

#~ msgid "\"Control-C\" when running :program:`mongod` in interactive mode,"
#~ msgstr ""

#~ msgid "``kill $(pidof mongod)``; or ``kill -2 $(pidof mongod)``,"
#~ msgstr ""

#~ msgid "On Linux, the :option:`mongod --shutdown` option."
#~ msgstr ""

# 78c8bf496a0d499abec5b5f776138ee4
#~ msgid ""
#~ "When a standalone :program:`mongod` instance"
#~ " has journaling disabled [#journaling-on]_,"
#~ " an unclean shutdown may leave the"
#~ " data in an inconsistent state. "
#~ "Following an unclean shutdown, if a "
#~ "non-empty ``mongod.lock`` file exists, "
#~ ":program:`mongod` instance logs the following"
#~ " message upon restart:"
#~ msgstr ""

# ad92438bf19a4a9da32414a6d935adfa
#~ msgid ""
#~ "If your :setting:`~storage.dbPath` contains a"
#~ " non-empty ``mongod.lock`` file, you "
#~ "must repair the database. This tutorial"
#~ " outlines the procedure to repair "
#~ "your database for a standalone "
#~ ":program:`mongod`."
#~ msgstr ""

# dccd60796c7145808e8fcd9c3036ca64
#~ msgid ""
#~ "Run the repair operation as the "
#~ "same user that normally runs the "
#~ ":program:`mongod` process to avoid changing"
#~ " the permissions of the MongoDB data"
#~ " files."
#~ msgstr ""

