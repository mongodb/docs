# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:3
# e09e722440c34fb1a067b529b4986518
msgid "Optimize Query Performance"
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:8
# 71bbf946a2694691a7cdb84a7ca4a2ca
msgid "Create Indexes to Support Queries"
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:10
# 4b8d1735d5be4269bd08ae5a0a43f74f
msgid "For commonly issued queries, create :doc:`indexes </indexes>`. If a query searches multiple fields, create a :ref:`compound index <index-type-compound>`. Scanning an index is much faster than scanning a collection. The indexes structures are smaller than the documents reference, and store references in order."
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:0
#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:0
# f08175dea03c44699c05e1386403cdff
# 271fa3ab4a8c4d9585c12bde98599273
msgid "Example"
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:25
# f9d9926a2e6b4e83bd8f1dc9bfe36f12
msgid "Indexes also improve efficiency on queries that routinely sort on a given field."
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:32
# a9794b8a27cd4b6ab1604472964d138e
msgid "Creating this index:"
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:38
# b096241938ee4bf1b1dfbd3389c570e6
msgid "Optimizes this query:"
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:44
# cb08af14be9f48a7a2db8db8a20a0164
msgid "Because MongoDB can read indexes in both ascending and descending order, the direction of a single-key index does not matter."
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:47
# c2e4545a97ef43d08c8913f855741b05
msgid "Indexes support queries, update operations, and some phases of the :ref:`aggregation pipeline <aggregation-pipeline-operators-and-performance>`."
msgstr ""

#: ../source/includes/fact-bindata-storage-optimization.rst:1
# 9288e25558cb47d286e1fb77a7726c26
msgid "Index keys that are of the ``BinData`` type are more efficiently stored in the index if:"
msgstr ""

#: ../source/includes/fact-bindata-storage-optimization.rst:4
# 1abba47a17e049c2a8183906df64b3c6
msgid "the binary subtype value is in the range of 0-7 or 128-135, and"
msgstr ""

#: ../source/includes/fact-bindata-storage-optimization.rst:6
# 2811accc945048a5a9152d1ce3b01b9f
msgid "the length of the byte array is: 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 16, 20, 24, or 32."
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:55
# 209c06b2ec8a4217958e99f80a4519a6
msgid "Limit the Number of Query Results to Reduce Network Demand"
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:57
# 5ece3595499747fe9444700d85ea4e34
msgid "MongoDB :term:`cursors <cursor>` return results in groups of multiple documents. If you know the number of results you want, you can reduce the demand on network resources by issuing the :method:`~cursor.limit()` method."
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:62
# a3f386221a654ee2889aa3cc9f7e053b
msgid "This is typically used in conjunction with sort operations. For example, if you need only 10 results from your query to the ``posts`` collection, you would issue the following command:"
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:70
# 9f41c9dcc8964811a908d9b07398f5dd
msgid "For more information on limiting results, see :method:`~cursor.limit()`"
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:73
# c7c257624bee4b9882dd71ecac1fd1b2
msgid "Use Projections to Return Only Necessary Data"
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:75
# d504630b652f4904bfea3c9cabf59189
msgid "When you need only a subset of fields from documents, you can achieve better performance by returning only the fields you need:"
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:78
# cf7c72a7c7a94bbcad8becf1bc0d9e63
msgid "For example, if in your query to the ``posts`` collection, you need only the ``timestamp``, ``title``, ``author``, and ``abstract`` fields, you would issue the following command:"
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:86
# 05facbefcc99484b997612f11508a3e1
msgid "For more information on using projections, see :ref:`read-operations-projection`."
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:90
# 254821a2f6884348ac25eff3365312a3
msgid "Use ``$hint`` to Select a Particular Index"
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:92
# 67b9aa5a3c7e45ea809ae0530bb6b462
msgid "In most cases the :ref:`query optimizer <read-operations-query-optimization>` selects the optimal index for a specific operation; however, you can force MongoDB to use a specific index using the :method:`~cursor.hint()` method. Use :method:`~cursor.hint()` to support performance testing, or on some queries where you must select a field or field included in several indexes."
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:101
# 80f5b3d5d7184f54be1c345300e9ae3f
msgid "Use the Increment Operator to Perform Operations Server-Side"
msgstr ""

#: ../source/tutorial/optimize-query-performance-with-indexes-and-projections.txt:103
# 58bf3cc4e54e45109c714d3ae85c5f3b
msgid "Use MongoDB's :update:`$inc` operator to increment or decrement values in documents. The operator increments the value of the field on the server side, as an alternative to selecting a document, making simple modifications in the client and then writing the entire document to the server.  The :update:`$inc` operator can also help avoid race conditions, which would result when two application instances queried for a document, manually incremented a field, and saved the entire document back at the same time."
msgstr ""

