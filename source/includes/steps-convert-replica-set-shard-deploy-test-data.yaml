stepnum: 1
inherit:
  file: steps-deploy-replica-set.yaml
  ref: start-mongod
post: |
  In production deployments, you can configure a :term:`control script` to
  manage this process. Control scripts are beyond the scope of this document.

  Repeat this step for each member of the replica set.
---
stepnum: 2
inherit:
  file: steps-deploy-replica-set.yaml
  ref: open-shell
pre: |
  Run this command on one member of the replica set (e.g. ``mongodb0.example.net``):
---
stepnum: 3
inherit:
  file: steps-deploy-replica-set.yaml
  ref: initiate-rs
pre: |
  Use :method:`rs.initiate()` on one member of the replica set (e.g. ``mongodb0.example.net``):
---
stepnum: 4
inherit:
  file: steps-deploy-replica-set.yaml
  ref: verify-rsconf
---
stepnum: 5
inherit:
  file: steps-deploy-replica-set.yaml
  ref: add-remaining-members
---
title: 
  text: Create and populate a new collection.
  character: "`"
stepnum: 6
ref: create-populate-collection
action:
  - pre: |
       In the :program:`mongo` shell, issue the following sequence of
       JavaScript operations on the primary member of one replica set:
    language: javascript
    code: |
       use test
       people = ["Marc", "Bill", "George", "Eliot", "Matt", "Trey", "Tracy", "Greg", "Steve", "Kristina", "Katie", "Jeff"];
       for(var i=0; i<1000000; i++){
                                    name = people[Math.floor(Math.random()*people.length)];
                                    user_id = i;
                                    boolean = [true, false][Math.floor(Math.random()*2)];
                                    added_at = new Date();
                                    number = Math.floor(Math.random()*10001);
                                    db.test_collection.save({"name":name, "user_id":user_id, "boolean": boolean, "added_at":added_at, "number":number });
                                   }
  - pre: |
       The above operations add one million documents to the collection
       ``test_collection``. This can take several minutes, depending on
       your system.

       The script adds the documents in the following form:
    language: javascript
    code: |
       { "_id" : ObjectId("4ed5420b8fc1dd1df5886f70"), "name" : "Greg", "user_id" : 4, "boolean" : true, "added_at" : ISODate("2011-11-29T20:35:23.121Z"), "number" : 74 }
...
