.. _security-azure-kms:

=========================================
Manage Customer Keys with Azure Key Vault
=========================================

.. default-domain:: mongodb

.. facet::
   :name: genre
   :values: tutorial

.. meta::
   :keywords: encryption

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. include:: /includes/unavailable-serverless-m0-m2-m5-clusters.rst

|service| uses your Azure Key Identifier (AKI) from your Azure Key
Vault (AKV) to encrypt and decrypt your MongoDB master keys. These
MongoDB master keys are used to encrypt cluster database files and
:ref:`cloud providers snapshots <backup-cloud-provider>`.

.. include:: /includes/fact-atlas-key-rotation.rst

|service| encrypts your data at rest using encrypted storage media.
Using keys you manage with |akv|, |service| encrypts your
data a second time when it writes it to the MongoDB
:manual:`encrypted storage engine </core/security-encryption-at-rest>`.
You use your |aki| to encrypt the MongoDB master encryption keys.

This page covers configuring customer key management using |akv| on
your |service| project.

You must configure customer key management for the |service| project
before enabling it on clusters in that project.

Enable Customer-Managed Keys with Azure Key Vault
-------------------------------------------------

Key Concepts 
~~~~~~~~~~~~

.. expression:: MongoDB Master Key

   :expression:`MongoDB Master Key` is an encryption key used by the
   MongoDB Server to encrypt the WiredTiger Storage Engine. The key
   isn't stored in the MongoDB database, but it's supplied externally
   through |kmip| or a local keyfile. When the MongoDB server starts, it
   obtains the master key from the |kmip| or local file and then stores
   it in memory. This key is then used to decrypt the data stored in the
   WiredTiger storage engine. 

   |service| maintains a layer that translates requests between MongoDB
   Server and a |cmk| that you created in |azure|. To translate the
   requests, |service| uses the layer to request the |cmk| to create an
   encrypted data encryption key (DEK). This encrypted
   :abbr:`DEK (data encryption key)` is generated per |service| deployment. 

   For example, for a three node M10+ replica set as shown in the
   following figure, there are three unique encrypted :abbr:`DEK (data
   encryption key)`\s, one per node. |service| stores the encrypted
   :abbr:`DEK (data encryption key)` on disk on each node in the
   |service| cluster. When the cluster starts up, the |service| layer
   decrypts the :abbr:`DEK (data encryption key)` using the customer
   provided encryption key and supplies this to the MongoDB Server.  

   .. figure:: /images/azure-kms-cmk-key-concepts.png 
      :figwidth: 100%
      :alt: Atlas and AWS KMS key transfer workflow

.. expression:: Per Database Encryption Key in a MongoDB Cluster

   MongoDB Server maintains a per database encryption key in the MongoDB 
   cluster. In the preceding figure, there are three databases on the
   MongoDB cluster, each of which is encrypted with a unique database
   encryption key. Each of these keys are then encrypted with the
   :expression:`MongoDB Master Key`.  

.. expression:: Data Encryption Key (in cloud provider terminology) or MongoDB Master Key 

   |service| uses the customer provided encryption key to create an
   encrypted :abbr:`DEK (data encryption key)`. |service| also uses a 
   customer key management instance to decrypt this encrypted :abbr:`DEK
   (data encryption key)` and supply the resulting plaintext key to the 
   MongoDB Server over the wire using |tls|. When MongoDB Server uses
   this plaintext key, it refers to it as the :expression:`MongoDB
   Master Key`, whereas a cloud provider's customer key management
   instance might refer to it as a :abbr:`DEK (data encryption key)`. 
   To learn more about :abbr:`DEK (data encryption key)`\s, see `Data
   Encryption <https://learn.microsoft.com/en-us/azure/security/fundamentals/encryption-overview>`__.

.. expression:: Customer Master Key (CMK)

   :abbr:`Customer Master Key (CMK)` is a concept of a customer key
   management instance. |cmk|\s are used to  encrypt and decrypt a
   :expression:`MongoDB Master Key` (or :abbr:`DEK (data encryption
   key)`). The |cmk| exists only on the customer key management
   instance. To learn more about |cmk|\s, see `Customer-managed keys 
   <https://learn.microsoft.com/en-us/azure/storage/common/customer-managed-keys-overview>`__. 


Required Access
---------------

.. include:: /includes/atlas-roles/kms.rst

.. _azure-kms-prereqs:

.. _security-azure-kms-restrictions:

Prerequisites
~~~~~~~~~~~~~

To enable customer-managed keys with Azure Key Vault for a MongoDB
project, you must:

.. include:: /includes/fact-azure-kms-prereqs.rst

.. _azure-kms-configure-project:

Enable Customer-Managed Keys for a Project
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You must enable customer key management for a project before you can
enable it on a cluster in that project.

.. include:: /includes/steps/configure-azure-encryption-for-project.rst

.. _azure-enable-cluster-encryption-at-rest:

Enable Customer Key Management for an |service| Cluster
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

After you :ref:`azure-kms-configure-project`, you must enable customer key
management for each |service| cluster that contains data that you want
to encrypt.

.. note::

   You must have the :authrole:`Project Owner <Project Owner>` role to
   enable customer key management for clusters in that project.

For new clusters, toggle the
:ref:`Manage your own encryption keys 
<create-cluster-enable-encryption>`
setting to :guilabel:`Yes` when you create the cluster. 

For existing clusters:

.. include:: /includes/steps/cluster-customer-key-management.rst

Disable Customer-Managed Keys for a Project
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You must disable customer key management on each cluster in a project
before you can disable the feature for the project.

.. important::

   Do *not* disable or delete any |akv| keys that any cluster in your
   |service| project uses before you have disabled customer key
   management within the |service| project. If |service| cannot access
   an |akv| key, any data that key encrypted becomes inaccessible.

Revoke Access to an Encryption Key
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You can revoke |service|'s access to an encryption key from within |akv|.
|service| automatically pauses your {+clusters+} when you revoke access to the
encryption key unless your |akv| IP access list restricts the |service| control plane.

To allow automatic pausing of your {+cluster+}, you must either:

- Disable the IP access list for your |akv|
- Allow access to your |akv| from the :ref:`Atlas control plane <atlas-add-inbound-ips>`.  
  
.. note::
    
   MongoDB adds new |service| control plane IP addresses over time. You must keep
   the IP access list updated to allow automatic {+cluster+} pausing while using an
   IP access list for your |akv|.

If the IP access list for your |akv| restricts access from the |service| control plane when
you revoke access to an encryption key, you must pause
your {+clusters+} manually to revoke |service|'s access.

Alerts
~~~~~~

|service| automatically creates an
:alert:`encryption key rotation alert <Azure encryption key elapsed time since last rotation is above (n) days>`
once you configure customer key management for a project.

To reset this alert, :ref:`azure-kms-rotate-key`.

.. _azure-kms-rotate-key:

Rotate your Azure Key Identifier
--------------------------------

.. meta::
   :keywords: encryption

.. include:: /includes/unavailable-serverless-m0-m2-m5-clusters.rst

MongoDB Master Key - MongoDB Responsibility
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-atlas-key-rotation.rst

Rotate your Azure Key ID - Your Responsibility
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

|service| does *not* automatically rotate the Key Identifier used for
Azure Key Vault. 

|service| automatically creates an :alert:`encryption key rotation alert
<Azure encryption key elapsed time since last rotation is above (n)
days>` to remind you to rotate your Azure Key Identifier every 90 days by
default when you :ref:`enable Encryption at Rest <security-azure-kms>`
for |a-service| project.

You can `rotate <https://learn.microsoft.com/en-us/azure/container-registry/tutorial-rotate-revoke-customer-managed-keys>`__ 
|cmk| stored in Azure Key Vault yourself or configure
your Azure Key Vault to automatically rotate your keys. If you
configure `automatic rotation
<https://learn.microsoft.com/en-us/azure/virtual-machines/disk-encryption#automatic-key-rotation-of-customer-managed-keys>`__ 
in Azure Key Vault, the default time period for rotation is
approximately 365 days.  

If you have already set up an automatic rotation in Azure Key Vault and
don't want to receive the |service| alert to rotate your Azure Key
Identifier every 90 days, you can :ref:`modify <configure-alerts>` the
default alert period to be greater than 365 days. 

Prerequisites
~~~~~~~~~~~~~

You must create a new key in the Azure Key Vault associated to the
|service| project.

Procedure
~~~~~~~~~

The following procedure documents how to rotate your |service| project Key Identifier by specifying a new key identifier in |service|.

.. include:: /includes/steps/rotate-azure-encryption-key.rst

Alerts
~~~~~~

|service| resets the :alert:`encryption key rotation alert <Azure encryption key elapsed time since last rotation is above (n) days>`
alert at the completion of this procedure.

Azure Key Vault Failover During an Outage
-----------------------------------------

During a regional outage, your Azure KMS region might 
become unavailable. If this happens, Azure automatically routes 
incoming KMS requests to a pre-assigned secondary region. To learn more, see 
:azure:`Azure Key Vault Failover </key-vault/general/disaster-recovery-guidance#failover>`
and :azure:`Regional Pairings
</reliability/cross-region-replication-azure#azure-cross-region-replication-pairings-for-all-geographies>`.

If both regions are down, you can manually migrate your key to a 
region outside of the regional pairing. To learn more, see 
:azure:`Move a Key Vault across Regions </key-vault/general/move-region>`.

.. note::

   If you've enabled :ref:`security-kms-encryption`, you can
   perform encrypt and decrypt operations while at least one node 
   is still available during the outage.

Related Topics
--------------

- To enable Encryption at Rest using your Key Management when deploying
  an |service| cluster, see :ref:`create-cluster-enable-encryption`.

- To enable Encryption at Rest using your Key Management for an
  existing |service| cluster, see
  :ref:`scale-cluster-enable-encryption`.

- To learn more about Encryption at Rest using your Key Management in
  |service|, see :ref:`security-kms-encryption`.

- To learn more about MongoDB Encryption at Rest, see
  :manual:`Encryption at Rest </core/security-encryption-at-rest/>` in
  the MongoDB server documentation.

- To learn more about Encryption at Rest with {+Cloud-Backup+}s, see :ref:`encrypted-cloud-provider-snapshot`.
