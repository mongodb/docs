.. _php-drupal-integration:

==========================
Drupal MongoDB Integration
==========================

.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: php framework, CMS, web app, authentication, Atlas

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

In this guide, you can learn about the benefits of using MongoDB Atlas
as the database for Drupal sites.

`Drupal <https://www.drupal.org/about>`__ is an open-source web content
management system (CMS) written in PHP. Drupal provides simple content
authoring, composability, and robust authentication features.

The :ref:`php-drupal-tutorial` section of this guide links to a tutorial
that you can follow to set up a Drupal site that connects to MongoDB Atlas.

The :ref:`php-drupal-resources` section contains links to resources and
documentation for further learning.

Why Use MongoDB as the Database for Drupal Sites?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Websites that seek to provide personalized user experiences must contain
robust capabilities for user authentication. Sites that have many
authenticated users might face performance impacts due to the complexity
of retrieving entity data from multiple tables in a relational database.
MongoDB eliminates the need for complicated table joins and
thus increases data retrieval speed, enhancing user experience of
components such as personalized dashboards and dynamic content feeds.

When you use MongoDB Atlas as your site's database, Drupal stores entity
instances as JSON objects that contain all revisions, translations, and
field data. This flexible data structure decreases latency and allows
Drupal to support personalized, user-focused experiences.

MongoDB offers the following features that improve your Drupal sites:

- Horizontal scaling: Distribute loads across multiple
  servers, making your database scalable for large user bases.

- Integrated file storage: Store user files directly in the
  database instead of on the web server, simplifying hosting.

- Full-text search: Avoid implementing separate search
  solutions by leveraging the :atlas:`Atlas Search
  </atlas-search/atlas-search-overview/>` feature.

- AI capabilities: Perform vector searches and integrate AI services by
  using the :atlas:`Atlas Vector Search
  </atlas-vector-search/vector-search-overview/>` feature.

.. _php-drupal-tutorial:

Tutorial
--------

To learn how to install the MongoDB driver for Drupal and set up a site
that uses MongoDB Atlas as its database, see the
`How to Run Drupal on MongoDB <https://dev.to/mongodb/how-to-install-drupal-on-mongodb-atlas-2dg3>`__
tutorial on the DEV Community website.

This tutorial demonstrates how to perform the following steps:

1. Setting up a MongoDB Atlas account and deployment.

#. Setting up an AWS EC2 medium instance.

#. Connecting the EC2 instance to Atlas.

#. Installing the following components:
   
   - Apache web server
   - `MongoDB PHP extension <https://php.net/mongodb>`__
   - Drupal web server
   - Drupal core patch

#. Connecting your Drupal site to Atlas.

#. Adding content to Drupal and viewing how it is stored in Atlas.

#. Safely shutting down your web server.

.. _php-drupal-resources:

Resources
---------

Learn more about Drupal and MongoDB by viewing the following resources:

- :website:`MongoDB Blog: Advancing Integration Between Drupal and MongoDB
  </blog/post/advancing-integration-between-drupal-mongodb>`
- `MongoDB module suite for Drupal <https://www.drupal.org/project/mongodb>`__
- `Drupal CMS User Guide <https://new.drupal.org/docs/drupal-cms>`__
- :website:`Podcast: PHP, Drupal and MongoDB with David Bekker
  </developer/podcasts/ep-185-php-drupal-and-mongodb-with-david-bekker/>`
