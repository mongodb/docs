.. facet::
   :name: programming_language
   :values: java, javascript/typescript, python, shell, go

.. _vector-search-tutorial:

=====================================================================
How to Perform Semantic Search Against Data in Your Atlas {+Cluster+} 
=====================================================================

.. default-domain:: mongodb

.. meta::
   :keywords: atlas vector search, vector search, $vectorSearch, $vectorSearch pipeline stage, atlas vector search pipeline stage, atlas vector search query, atlas vector search index, knnVector field type, atlas search knnVector type, $vectorSearch filter examples, $vectorSearch query examples, $vectorSearch pipeline stage examples, approximate nearest neighbor search, sematic search, code example, node.js, java sync, atlas ui, go
   :description: Learn how to search vector embeddings in your data on the Atlas cluster.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

This tutorial describes how to perform an |ann| search on a vector in
the ``plot_embeddings`` field in the ``sample_mflix.embedded_movies``
collection on your |service| {+cluster+}. To demonstrate this, it takes
you through the following steps:

1. Create an {+avs+} index on the numeric field named
   ``plot_embeddings`` in the ``sample_mflix.embedded_movies``
   collection. 
#. Run {+avs+} queries against the ``plot_embeddings`` field in the
   ``sample_mflix.embedded_movies`` collection.

Prerequisites 
-------------

To complete this tutorial, you must have the following: 

- An |service| {+cluster+} with MongoDB version 6.0.11, or v7.0.2 or later
  (including :abbr:`RCs (Release Candidates)`).

- The :doc:`sample data </sample-data>` loaded into your |service| 
  {+cluster+}.

  .. note:: 

     You can convert the embeddings in the sample data to |bson| vectors for
     efficient storage and ingestion of vectors in |service|. To learn
     more, see :ref:`how to convert native embeddings to BSON vectors
     <avs-bindata-vector-subtype>`. 
  
- One of the following applications to run queries on your |service|
  {+cluster+}:

  - {+mongosh+}
  - :driver:`A MongoDB Java Driver </java-drivers/>`
  - :driver:`MongoDB Go Driver </go/>`
  - :driver:`MongoDB Node Driver </node/current/>`
  - :driver:`PyMongo </pymongo/>`

  You can also use {+avs+} with local |service| deployments that you 
  create with the {+atlas-cli+}. To learn more, see :atlascli:`Create a
  Local Atlas Deployment </atlas-cli-deploy-local>`. 

Create the {+avs+} Index 
------------------------------------

----------

.. |arrow| unicode:: U+27A4

|arrow| Use the **Select your language** drop-down menu to select the
client to use to create the {+avs+} index and run queries.

----------

.. tabs-selector:: drivers

This section demonstrates how to create an {+avs+} index on the
``plot_embeddings`` field in the  ``sample_mflix.embedded_movies`` 
collection for running vector queries against the field.

Required Access
~~~~~~~~~~~~~~~

To create an {+avs+} index, you must have :authrole:`Project Data Access 
Admin` or higher access to the project.

Procedure 
~~~~~~~~~

.. tabs-drivers::

   .. tab::
      :tabid: atlas-ui

      .. include:: /includes/steps-avs-tutorial-create-index-ui.rst

   .. tab:: 
      :tabid: go

      .. include:: /includes/steps-avs-tutorial-create-index-go.rst

   .. tab:: 
      :tabid: java-sync

      .. include:: /includes/steps-avs-tutorial-create-index-java.rst

   .. tab:: 
      :tabid: nodejs

      .. include:: /includes/steps-avs-tutorial-create-index-nodejs.rst

   .. tab:: 
      :tabid: python

      .. include:: /includes/steps-avs-tutorial-create-index-python.rst

   .. tab:: 
      :tabid: shell

      .. include:: /includes/steps-avs-tutorial-create-index-mongosh.rst

Run Queries Using the ``$vectorSearch`` Aggregation Pipeline Stage 
------------------------------------------------------------------

Overview 
~~~~~~~~

This section demonstrates how to query the indexed vector data in
the ``sample_mflix.embedded_movies`` collection using the
the :pipeline:`$vectorSearch` stage. These sample queries also demonstrate 
the various :manual:`query </reference/operator/query/>` and :manual:`aggregation 
pipeline </reference/operator/aggregation/>` operators that we can use
in the query to pre-filter the data that we perform the semantic
search on.

Procedure 
~~~~~~~~~

.. tabs-drivers::

   .. tab::
      :tabid: atlas-ui

      .. include:: /includes/steps-avs-tutorial-run-query-atlas-ui.txt

   .. tab:: 
      :tabid: go

      .. include:: /includes/steps-avs-tutorial-run-queries-go.txt

   .. tab:: 
      :tabid: java-sync

      .. include:: /includes/steps-avs-tutorial-run-queries-java.txt

   .. tab:: 
      :tabid: nodejs

      .. include:: /includes/steps-avs-tutorial-run-queries-nodejs.txt

   .. tab:: 
      :tabid: python

      .. include:: /includes/steps-avs-tutorial-run-queries-python.txt

   .. tab:: 
      :tabid: shell

      .. include:: /includes/steps-avs-tutorial-run-queries-mongosh.txt
