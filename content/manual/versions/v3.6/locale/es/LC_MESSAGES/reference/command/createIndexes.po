# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: 2014-04-08 19:37+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/reference/command/createIndexes.txt:3
msgid "createIndexes"
msgstr ""

#: ../source/reference/command/createIndexes.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/command/createIndexes.txt:18
msgid "Builds one or more indexes on a collection."
msgstr ""

#: ../source/reference/command/createIndexes.txt:20
msgid "The :dbcommand:`createIndexes` command takes the following form:"
msgstr ""

#: ../source/reference/command/createIndexes.txt:46
msgid "The :dbcommand:`createIndexes` command takes the following fields:"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-field.rst:7
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:7
msgid "Field"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-field.rst:9
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:9
msgid "Type"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-field.rst:11
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:11
msgid "Description"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-field.rst:13
msgid "``createIndexes``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-field.rst:15
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:27
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:163
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:175
msgid "string"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-field.rst:17
#: ../source/includes/apiargs/dbcommand-createIndexes-field.rst:46
msgid "The collection for which to create indexes."
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-field.rst:21
msgid "``indexes``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-field.rst:23
msgid "array"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-field.rst:25
#: ../source/includes/apiargs/dbcommand-createIndexes-field.rst:52
msgid ""
"Specifies the indexes to create. Each document in the array specifies a "
"separate index."
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-field.rst:30
msgid "``writeConcern``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-field.rst:32
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:15
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:63
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:125
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:149
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:255
msgid "document"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-field.rst:34
#: ../source/includes/apiargs/dbcommand-createIndexes-field.rst:59
msgid ""
"Optional. A document expressing the :doc:`write concern </reference"
"/write-concern>`. Omit to use the default write concern."
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-field.rst
msgid "field string createIndexes"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-field.rst
msgid "field array indexes"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-field.rst
msgid "field document writeConcern"
msgstr ""

#: ../source/reference/command/createIndexes.txt:50
msgid "Each document in the ``indexes`` array can take the following fields:"
msgstr ""

#: ../source/includes/fact-remove-dropDups-option.rst:1
msgid "The ``dropDups`` option is no longer available."
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:13
msgid "``key``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:17
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:274
msgid ""
"Specifies the index's fields. For each field, specify a key-value pair in"
" which the key is the name of the field to index and the value is either "
"the index direction or :ref:`index type <index-types>`. If specifying "
"direction, specify ``1`` for ascending or ``-1`` for descending."
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:25
msgid "``name``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:29
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:284
msgid "A name that uniquely identifies the index."
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:33
msgid "``background``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:35
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:45
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:83
msgid "boolean"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:37
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:290
msgid ""
"Optional. Builds the index in the background so the operation does *not* "
"block other database activities. Specify ``true`` to build in the "
"background. The default value is ``false``."
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:43
msgid "``unique``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:47
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:298
msgid ""
"Optional. Creates a unique index so that the collection will not accept "
"insertion or update of documents where the index key value matches an "
"existing value in the index."
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:52
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:303
msgid "Specify ``true`` to create a unique index. The default value is ``false``."
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:55
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:306
msgid ""
"The option is *unavailable* for :doc:`hashed </core/index-hashed>` "
"indexes."
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:61
msgid "``partialFilterExpression``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:65
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:314
msgid ""
"Optional. If specified, the index only references documents that match "
"the filter expression. See :doc:`/core/index-partial` for more "
"information."
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:69
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:318
msgid "A filter expression can include:"
msgstr ""

#: ../source/includes/fact-partial-filter-expression-operators.rst:1
msgid ""
"equality expressions (i.e. ``field: value`` or using the :query:`$eq` "
"operator),"
msgstr ""

#: ../source/includes/fact-partial-filter-expression-operators.rst:4
msgid ":query:`$exists: true <$exists>` expression,"
msgstr ""

#: ../source/includes/fact-partial-filter-expression-operators.rst:6
msgid ":query:`$gt`, :query:`$gte`, :query:`$lt`, :query:`$lte` expressions,"
msgstr ""

#: ../source/includes/fact-partial-filter-expression-operators.rst:8
msgid ":query:`$type` expressions,"
msgstr ""

#: ../source/includes/fact-partial-filter-expression-operators.rst:10
msgid ":query:`$and` operator at the top-level only"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:73
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:322
msgid ""
"You can specify a ``partialFilterExpression`` option for all MongoDB "
":ref:`index types <index-types>`."
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:81
msgid "``sparse``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:85
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:332
msgid ""
"Optional. If ``true``, the index only references documents with the "
"specified field. These indexes use less space but behave differently in "
"some situations (particularly sorts). The default value is ``false``. See"
" :doc:`/core/index-sparse` for more information."
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:92
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:339
msgid ""
"Starting in MongoDB 3.2, MongoDB provides the option to create "
":ref:`partial indexes <index-type-partial>`. Partial indexes offer a "
"superset of the functionality of sparse indexes. If you are using MongoDB"
" 3.2 or later, :ref:`partial indexes <index-type-partial>` should be "
"preferred over sparse indexes."
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:100
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:347
msgid ""
":doc:`2dsphere </core/2dsphere>` indexes are sparse by default and ignore"
" this option. For a compound index that includes ``2dsphere`` index "
"key(s) along with keys of other types, only the ``2dsphere`` index fields"
" determine whether the index references a document."
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:106
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:353
msgid ""
":doc:`2d </core/2d>`, :doc:`geoHaystack </core/geohaystack>`, and "
":doc:`text </core/index-text>` indexes behave similarly to the "
":doc:`2dsphere </core/2dsphere>` indexes."
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:112
msgid "``expireAfterSeconds``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:114
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:186
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:199
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:212
msgid "integer"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:116
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:361
msgid ""
"Optional. Specifies a value, in seconds, as a :term:`TTL` to control how "
"long MongoDB retains documents in this collection. See :doc:`/tutorial"
"/expire-data` for more information on this functionality. This applies "
"only to :term:`TTL` indexes."
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:123
msgid "``storageEngine``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:127
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:370
msgid ""
"Optional. Allows users to configure the storage engine on a per-index "
"basis when creating an index."
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:131
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:374
msgid "The ``storageEngine`` option should take the following form:"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:137
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:380
msgid ""
"Storage engine configuration options specified when creating indexes are "
"validated and logged to the :term:`oplog` during replication to support "
"replica sets with members that use different storage engines."
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:147
msgid "``weights``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:151
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:392
msgid ""
"Optional. For :doc:`text </core/index-text>` indexes, a document that "
"contains field and weight pairs. The weight is an integer ranging from 1 "
"to 99,999 and denotes the significance of the field relative to the other"
" indexed fields in terms of the score. You can specify weights for some "
"or all the indexed fields. See :doc:`/tutorial/control-results-of-text-"
"search` to adjust the scores. The default value is ``1``."
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:161
msgid "``default_language``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:165
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:404
msgid ""
"Optional. For :doc:`text </core/index-text>` indexes, the language that "
"determines the list of stop words and the rules for the stemmer and "
"tokenizer. See :ref:`text-search-languages` for the available languages "
"and :doc:`/tutorial/specify-language-for-text-index` for more information"
" and examples. The default value is ``english``."
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:173
msgid "``language_override``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:177
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:414
msgid ""
"Optional. For :doc:`text </core/index-text>` indexes, the name of the "
"field, in the collection's documents, that contains the override language"
" for the document. The default value is ``language``. See :ref:`specify-"
"language-field-text-index-example` for an example."
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:184
msgid "``textIndexVersion``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:188
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:423
msgid ""
"Optional. The ``text`` index version number. Users can use this option to"
" override the default version number."
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:191
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:426
msgid "For available versions, see :ref:`text-versions`."
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:197
msgid "``2dsphereIndexVersion``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:201
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:434
msgid ""
"Optional. The ``2dsphere`` index version number. Users can use this "
"option to override the default version number."
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:204
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:437
msgid "For the available versions, see :ref:`2dsphere-v2`."
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:210
msgid "``bits``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:214
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:445
msgid ""
"Optional. For :doc:`2d </core/2d>` indexes, the number of precision of "
"the stored :term:`geohash` value of the location data."
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:217
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:448
msgid ""
"The ``bits`` value ranges from 1 to 32 inclusive. The default value is "
"``26``."
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:222
msgid "``min``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:224
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:233
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:242
msgid "number"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:226
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:455
msgid ""
"Optional. For :doc:`2d </core/2d>` indexes, the lower inclusive boundary "
"for the longitude and latitude values. The default value is ``-180.0``."
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:231
msgid "``max``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:235
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:462
msgid ""
"Optional. For :doc:`2d </core/2d>` indexes, the upper inclusive boundary "
"for the longitude and latitude values. The default value is ``180.0``."
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:240
msgid "``bucketSize``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:244
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:469
msgid ""
"For :doc:`geoHaystack </core/geohaystack>` indexes, specify the number of"
" units within which to group the location values; i.e. group in the same "
"bucket those location values that are within the specified number of "
"units to each other."
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:249
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:474
msgid "The value must be greater than 0."
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:253
msgid "``collation``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:257
#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst:480
msgid "Optional. Specifies the :ref:`collation <collation>` for the index."
msgstr ""

#: ../source/includes/extracts/collation-description.rst:1
msgid ""
":doc:`Collation </reference/collation>` allows users to specify language-"
"specific rules for string comparison, such as rules for lettercase and "
"accent marks."
msgstr ""

#: ../source/includes/extracts/collation-index-collection.rst:1
msgid "If you have specified a collation at the collection level, then:"
msgstr ""

#: ../source/includes/extracts/collation-index-collection.rst:3
msgid ""
"If you do not specify a collation when creating the index, MongoDB "
"creates the index with the collection's default collation."
msgstr ""

#: ../source/includes/extracts/collation-index-collection.rst:6
msgid ""
"If you do specify a collation when creating the index, MongoDB creates "
"the index with the specified collation."
msgstr ""

#: ../source/includes/extracts/collation-option-specification.rst:2
msgid "The collation option has the following syntax:"
msgstr ""

#: ../source/includes/extracts/collation-option-specification.rst:17
msgid ""
"When specifying collation, the ``locale`` field is mandatory; all other "
"collation fields are optional. For descriptions of the fields, see :ref"
":`collation-document-fields`."
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst
msgid "field document key"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst
msgid "field string name"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst
msgid "field boolean background"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst
msgid "field boolean unique"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst
msgid "field document partialFilterExpression"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst
msgid "field boolean sparse"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst
msgid "field integer expireAfterSeconds"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst
msgid "field document storageEngine"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst
msgid "field document weights"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst
msgid "field string default_language"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst
msgid "field string language_override"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst
msgid "field integer textIndexVersion"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst
msgid "field integer 2dsphereIndexVersion"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst
msgid "field integer bits"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst
msgid "field number min"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst
msgid "field number max"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst
msgid "field number bucketSize"
msgstr ""

#: ../source/includes/apiargs/dbcommand-createIndexes-indexes-field.rst
msgid "field document collation"
msgstr ""

#: ../source/reference/command/createIndexes.txt:56
msgid ""
"The :binary:`~bin.mongo` shell provides the methods "
":method:`db.collection.createIndex()` and "
":method:`db.collection.createIndexes()` as wrappers for the "
":dbcommand:`createIndexes` command."
msgstr ""

#: ../source/reference/command/createIndexes.txt:62
msgid "Considerations"
msgstr ""

#: ../source/reference/command/createIndexes.txt:66
msgid ""
"MongoDB disallows the creation of :ref:`version 0 "
"<3.2-version-0-indexes>` indexes. To upgrade existing version 0 indexes, "
"see :ref:`3.2-version-0-indexes`."
msgstr ""

#: ../source/reference/command/createIndexes.txt:71
msgid "Index Names"
msgstr ""

#: ../source/reference/command/createIndexes.txt:73
msgid ""
"An index name, including the :term:`namespace`, cannot be longer than the"
" :ref:`Index Name Length <limit-index-name-length>` limit."
msgstr ""

#: ../source/reference/command/createIndexes.txt:77
msgid "Replica Sets and Sharded Clusters"
msgstr ""

#: ../source/reference/command/createIndexes.txt:79
msgid ""
"To minimize the impact of building an index on replica sets and sharded "
"clusters, use a rolling index build procedure as described on "
":doc:`/tutorial/build-indexes-on-replica-sets`."
msgstr ""

#: ../source/reference/command/createIndexes.txt:84
msgid "Collation and Index Types"
msgstr ""

#: ../source/includes/extracts/collation-index-type-restrictions.rst:2
msgid ""
"The following indexes only support simple binary comparison and do not "
"support :ref:`collation <collation>`:"
msgstr ""

#: ../source/includes/extracts/collation-index-type-restrictions.rst:5
msgid ":doc:`text </core/index-text>` indexes,"
msgstr ""

#: ../source/includes/extracts/collation-index-type-restrictions.rst:7
msgid ":doc:`2d </core/2d>` indexes, and"
msgstr ""

#: ../source/includes/extracts/collation-index-type-restrictions.rst:9
msgid ":doc:`geoHaystack </core/geohaystack>` indexes."
msgstr ""

#: ../source/includes/extracts/collation-index-type-restrictions-addendum.rst:4
msgid ""
"To create a ``text``, a ``2d``, or a ``geoHaystack`` index on a "
"collection that has a non-simple collation, you must explicitly specify "
"``{collation: {locale: \"simple\"} }`` when creating the index."
msgstr ""

#: ../source/reference/command/createIndexes.txt:91
msgid "Behavior"
msgstr ""

#: ../source/reference/command/createIndexes.txt:94
msgid "Concurrency"
msgstr ""

#: ../source/reference/command/createIndexes.txt:96
msgid ""
"Foreground indexing operations on a populated collection block all other "
"operations on a database."
msgstr ""

#: ../source/reference/command/createIndexes.txt:102
msgid "Multiple Index Builds"
msgstr ""

#: ../source/reference/command/createIndexes.txt:106
msgid ""
"If you specify multiple indexes to the :dbcommand:`createIndexes` "
"command, the operation only scans the collection once, and if at least "
"one index is to be built in the foreground, the operation will build all "
"the specified indexes in the foreground."
msgstr ""

#: ../source/reference/command/createIndexes.txt:112
msgid "Memory Usage Limit"
msgstr ""

#: ../source/includes/fact-index-build-default-memory-limit.rst:1
msgid ""
"You can build one or more indexes on a collection with the database "
"command :dbcommand:`createIndexes`. The default limit on memory usage for"
" a :dbcommand:`createIndexes` operation is 500 megabytes. You can "
"override this limit by setting the "
":parameter:`maxIndexBuildMemoryUsageMegabytes` server parameter."
msgstr ""

#: ../source/includes/fact-index-build-default-memory-limit.rst:7
msgid ""
":dbcommand:`createIndexes` uses a combination of memory and temporary "
"files on disk to complete index builds. Once the memory limit is reached,"
" :dbcommand:`createIndexes` uses temporary disk files in a subdirectory "
"named ``_tmp`` within the :option:`--dbpath <mongod --dbpath>` directory "
"for additional scratch space. The higher the memory limit is set, the "
"faster the index build can complete, but be careful not to set this limit"
" too high relative to available RAM or your system can run out of free "
"memory."
msgstr ""

#: ../source/reference/command/createIndexes.txt:120
msgid "Index Options"
msgstr ""

#: ../source/reference/command/createIndexes.txt:122
msgid ""
"With the exception of the :ref:`collation option <createIndexes-"
"collation-option>`, if you create an index with one set of options and "
"then issue :dbcommand:`createIndexes` with the same index fields but "
"different options, MongoDB will not change the options nor rebuild the "
"index. To change these index options, drop the existing index with "
":method:`db.collection.dropIndex()` before running the new "
":dbcommand:`createIndexes` with the new options."
msgstr ""

#: ../source/reference/command/createIndexes.txt:133
msgid "Collation Option"
msgstr ""

#: ../source/includes/extracts/collation-index-options.rst:1
msgid ""
"Unlike other index options, you can create multiple indexes on the same "
"key(s) with different collations. To create indexes with the same key "
"pattern but different collations, you must supply unique index names."
msgstr ""

#: ../source/includes/extracts/collation-index-tip.rst:4
msgid ""
"By specifying a collation ``strength`` of ``1`` or ``2``, you can create "
"a case-insensitive index. Index with a collation ``strength`` of ``1`` is"
" both diacritic- and case-insensitive."
msgstr ""

#: ../source/includes/extracts/collation-index-use.rst:1
msgid ""
"To use an index for string comparisons, an operation must also specify "
"the same collation. That is, an index with a collation cannot support an "
"operation that performs string comparisons on the indexed fields if the "
"operation specifies a different collation."
msgstr ""

#: ../source/includes/extracts/collation-index-use.rst:6
msgid ""
"For example, the collection ``myColl`` has an index on a string field "
"``category`` with the collation locale ``\"fr\"``."
msgstr ""

#: ../source/includes/extracts/collation-index-use.rst:13
msgid ""
"The following query operation, which specifies the same collation as the "
"index, can use the index:"
msgstr ""

#: ../source/includes/extracts/collation-index-use.rst:20
msgid ""
"However, the following query operation, which by default uses the "
"\"simple\" binary collator, cannot use the index:"
msgstr ""

#: ../source/includes/extracts/collation-index-use.rst:27
msgid ""
"For a compound index where the index prefix keys are not strings, arrays,"
" and embedded documents, an operation that specifies a different "
"collation can still use the index to support comparisons on the index "
"prefix keys."
msgstr ""

#: ../source/includes/extracts/collation-index-use.rst:32
msgid ""
"For example, the collection ``myColl`` has a compound index on the "
"numeric fields ``score`` and ``price`` and the string field ``category``;"
" the index is created with the  collation locale ``\"fr\"`` for string "
"comparisons:"
msgstr ""

#: ../source/includes/extracts/collation-index-use.rst:43
msgid ""
"The following operations, which use ``\"simple\"`` binary collation for "
"string comparisons, can use the index:"
msgstr ""

#: ../source/includes/extracts/collation-index-use.rst:51
msgid ""
"The following operation, which uses ``\"simple\"`` binary collation for "
"string comparisons on the indexed ``category`` field, can use the index "
"to fulfill only the ``score: 5`` portion of the query:"
msgstr ""

#: ../source/reference/command/createIndexes.txt:146
msgid "Example"
msgstr ""

#: ../source/reference/command/createIndexes.txt:148
msgid ""
"The following command builds two indexes on the ``inventory`` collection "
"of the ``products`` database:"
msgstr ""

#: ../source/reference/command/createIndexes.txt:180
msgid ""
"When the indexes successfully finish building, MongoDB returns a results "
"document that includes a status of ``\"ok\" : 1``."
msgstr ""

#: ../source/reference/command/createIndexes.txt:184
msgid "Output"
msgstr ""

#: ../source/reference/command/createIndexes.txt:186
msgid ""
"The :dbcommand:`createIndexes` command returns a document that indicates "
"the success of the operation. The document contains some but not all of "
"the following fields, depending on outcome:"
msgstr ""

#: ../source/reference/command/createIndexes.txt:192
msgid ""
"If ``true``, then the collection didn't exist and was created in the "
"process of creating the index."
msgstr ""

#: ../source/reference/command/createIndexes.txt:197
msgid "The number of indexes at the start of the command."
msgstr ""

#: ../source/reference/command/createIndexes.txt:201
msgid "The number of indexes at the end of the command."
msgstr ""

#: ../source/reference/command/createIndexes.txt:205
msgid ""
"A value of ``1`` indicates the indexes are in place. A value of ``0`` "
"indicates an error."
msgstr ""

#: ../source/reference/command/createIndexes.txt:210
msgid ""
"This ``note`` is returned if an existing index or indexes already exist. "
"This indicates that the index was not created or changed."
msgstr ""

#: ../source/reference/command/createIndexes.txt:215
msgid "Returns information about any errors."
msgstr ""

#: ../source/reference/command/createIndexes.txt:219
msgid "The error code representing the type of error."
msgstr ""

# e2898f0131f74fdf829b407af86715d8
#~ msgid ""
#~ "Builds one or more indexes on a"
#~ " collection. The :dbcommand:`createIndexes` "
#~ "command takes the following form:"
#~ msgstr ""

# bd687f761e9b47339a92a105c42d4729
#~ msgid ""
#~ "Non-background indexing operations block "
#~ "all other operations on a database. "
#~ "If you specify multiple indexes to "
#~ ":dbcommand:`createIndexes`, MongoDB builds the "
#~ "indexes serially."
#~ msgstr ""

# ddc6648db9424b85ba57ccae97d0bba1
#~ msgid ""
#~ "If you create an index with one"
#~ " set of options and then issue "
#~ ":dbcommand:`createIndexes` with the same index"
#~ " fields but different options, MongoDB "
#~ "will not change the options nor "
#~ "rebuild the index. To change index "
#~ "options, drop the existing index with"
#~ " :method:`db.collection.dropIndex()` before running "
#~ "the new :dbcommand:`createIndexes` with the"
#~ " new options."
#~ msgstr ""

