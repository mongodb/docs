========
addShard
========

.. default-domain:: mongodb

Definition
----------

.. dbcommand:: addShard

   Adds either a database instance or a :term:`replica set` to a
   :term:`sharded cluster`. The optimal configuration is to deploy
   shards across replica sets.

   Run :dbcommand:`addShard` when connected to a :program:`mongos`
   instance. The command takes the following form when adding a single
   database instance as a shard:

   .. code-block:: javascript

      { addShard: "<hostname><:port>", maxSize: <size>, name: "<shard_name>" }

   When adding a replica set as a shard, use the following form:

   .. code-block:: javascript

      { addShard: "<replica_set>/<hostname><:port>", maxSize: <size>, name: "<shard_name>" }

   The command contains the following fields:

   .. include:: /reference/command/addShard-field.rst

   The :dbcommand:`addShard` command stores shard configuration
   information in the :term:`config database`.

   Specify a ``maxSize`` when you have machines with different disk
   capacities, or if you want to limit the amount of data on some
   shards. The ``maxSize`` constraint prevents the :term:`balancer` from
   migrating chunks to the shard when the value of :data:`mem.mapped
   <serverStatus.mem.mapped>` exceeds the value of ``maxSize``.

Examples
--------

The following command adds the database instance running on
port``27027`` on the host ``mongodb0.example.net`` as a shard:

.. code-block:: javascript

   db.runCommand({addShard: "mongodb0.example.net:27027"})

.. warning::

   Do not use ``localhost`` for the hostname unless your
   :term:`configuration server <config database>` is also running on
   ``localhost``.

The following command adds a replica set as a shard:

.. code-block:: javascript

   db.runCommand( { addShard: "repl0/mongodb3.example.net:27327"} )

You may specify all members in the replica set. All additional
hostnames must be members of the same replica set.
