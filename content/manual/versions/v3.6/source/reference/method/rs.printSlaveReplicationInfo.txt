==============================
rs.printSlaveReplicationInfo()
==============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. method:: rs.printSlaveReplicationInfo()

   .. include:: /includes/deprecated-rs.printSlaveReplicationInfo.rst

   Returns a formatted report of the status of a :term:`replica set`
   from the perspective of the :term:`secondary` member of the set. The
   output is identical to that of
   :method:`db.printSlaveReplicationInfo()`.


Output
------

The following is example output from the
:method:`rs.printSlaveReplicationInfo()` method issued on a replica set
with two secondary members:

.. code-block:: javascript

   source: m1.example.net:27017
       syncedTo: Thu Apr 10 2014 10:27:47 GMT-0400 (EDT)
       0 secs (0 hrs) behind the primary
   source: m2.example.net:27017
       syncedTo: Thu Apr 10 2014 10:27:47 GMT-0400 (EDT)
       0 secs (0 hrs) behind the primary

A :ref:`delayed member <replica-set-delayed-members>` may show as ``0``
seconds behind the primary when the inactivity period on the primary is
greater than the :rsconf:`members[n].slaveDelay`
value.

A member may show a negative time value behind the primary when
:method:`rs.printSlaveReplicationInfo()` is called. This behavior is
expected if the method is called after a secondary replicates a write
following a period of inactivity, but before it has received a
heartbeat from the primary with its latest optime.

.. note::

   The lag reported by secondaries may not be representative of cluster
   health. Negative values do not indicate that the secondary is ahead
   of the primary.

   For the most up-to-date information on your replica set, it is
   generally advisable to run
   :method:`rs.printSlaveReplicationInfo()` on the primary.
