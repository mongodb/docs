---
title: "Log into your |service| user account."
level: 3
ref: log-in-to-atlas
content: |
  Go to `Atlas <https://cloud.mongodb.com>`__ to log into your |service|
  user account.

  .. important::

    The |service| user you log in as *must* have the
    :authrole:`Project Owner` role in the |service|
    :ref:`project <projects>` that contains the cluster you want to
    upgrade.
---
title: Create an |service| cluster for your staging environment.
level: 3
ref: create-staging-cluster
content: |

  .. note::

     You can skip this step if you already have an |service| cluster
     as your staging environment.

  To open the cluster creation modal, click the
  :guilabel:`Build a New Cluster` button. Configure the staging cluster
  to match your production cluster. You do not have to enable
  backup for  the staging cluster.

  To learn how to create a new cluster, see :doc:`/tutorial/create-new-cluster`.

  .. important::

    If selecting a smaller cluster tier for the staging
    cluster, take into consideration that any performance tests run
    may not be representative of the performance of the upgraded
    production cluster. You may also need to select a larger storage
    size depending on the amount of data you want to mirror to your
    staging cluster.
---
title: Refresh the staging cluster with production cluster data.
ref: refresh-staging-cluster
level: 3
content: |

  .. note::

     You can skip this step if you already have an up-to-date |service|
     cluster as a staging environment.

  If you have :doc:`backups enabled </backup-restore-cluster>` for the
  production cluster,
  :ref:`restore the most recent snapshot <restore-archive-snapshots>` and choose the
  staging cluster as the destination.

  If you do *not* have backups enabled for the production cluster,
  use |service| :doc:`Live Import </import/live-import>` to mirror data
  from your production cluster to the staging cluster. The live
  migration documentation includes specific instructions for creating
  staging environments.
---
title: Point your staging application at the staging cluster.
ref: point-app-to-staging
level: 3
content: |
  Update your staging application to point at your
  staging cluster. For instructions on retrieving the MongoDB
  driver-friendly connection string for the staging
  cluster, see :doc:`/driver-connection`.

  Confirm that your application can connect successfully to the
  staging cluster *and* that the application operates as expected.
---
title: (Optional) Upgrade your application to the latest MongoDB drivers.
ref:  upgrade-drivers
content: |
  Upgrading your application to the latest MongoDB drivers for your
  cluster's MongoDB version enables full access to the features
  provided by the newer MongoDB version. You may also find better
  performance or stability with newer driver versions. See
  :doc:`/driver-connection` for documentation on the recommended
  MongoDB driver for a given MongoDB version and connection examples.

  If you encounter a bug after upgrading your application,
  file a ticket in the :driver:`JIRA project for your MongoDB driver <>`.
---
title: Update the staging cluster to the new major MongoDB version.
level: 3
ref:  update-staging-cluster-mdb-version
content: |

  a. Click :icon:`ellipsis-h` for your staging cluster
     to open the cluster modification modal.

  #. Select :guilabel:`Edit Configuration`.

  #. :ref:`Change the cluster version <scale-cluster-version>` to
     the desired major MongoDB Version.

     .. important::

        You cannot downgrade the MongoDB version of a |service|
        cluster. If you want to redeploy the staging environment with
        the original MongoDB version, you must terminate and re-create
        the cluster.

  #. Click :guilabel:`Confirm & Deploy` to deploy your changes.

  |service| automatically begins upgrading the cluster. Consider
  measuring the time required by |service| to upgrade the cluster to
  set a general expectation for your production cluster upgrade.

  :ref:`File a support ticket <major-version-upgrade-support>` if you
  encounter version-specific issues with the upgraded staging cluster.
---
title: Test your application against the upgraded staging cluster.
level: 3
ref: test-staging-app
content: |

  Perform any required performance and operational testing of the
  staging cluster.

  :ref:`File a support ticket <major-version-upgrade-support>` if you
  encounter version-specific issues with the upgraded staging cluster.

  .. important::

    The major version upgrade requires at least one replica set
    election. Use the staging cluster as an opportunity to test your
    application's resiliance to primary failover. See
    :doc:`/tutorial/test-failover-or-outage/test-failover` for complete documentation.

---
title: Upgrade your production cluster to the target MongoDB version.
level: 3
ref:  upgrade-prod-cluster
content: |
  Once you are confident in the performance and operation of
  your staging cluster, repeating the :doc:`upgrade </scale-cluster>`
  procedure for your production cluster.

  Once |service| completes the upgrade process, check that your
  production applications are still connected and operating normally.

  If you upgraded your staging application with newer MongoDB drivers
  *and* are satisfied with the performance and operation, consider
  scheduling a maintenance period for upgrading your production
  applications.

  If you encounter problems with the upgraded production cluster, file a
  High Priority support ticket using the procedure in the following
  section.

...
