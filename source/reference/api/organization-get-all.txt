=====================
Get All Organizations
=====================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. include:: /includes/api-requirements.rst

.. include:: /includes/api-base-url-new.rst

Resource
--------

.. code-block:: none

   GET /orgs

Request Path Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/no-path-parameters.rst

Request Query Parameters
~~~~~~~~~~~~~~~~~~~~~~~~

The following query parameters are optional:

.. list-table::
  :widths: 10 10 70 10
  :header-rows: 1
  :stub-columns: 1

  * - Name
    - Type
    - Description
    - Default

  * - ``pageNum``
    - integer
    - Page number (1-based).
    - ``1``

  * - ``itemsPerPage``
    - integer
    - Number of items to return per page, up to a maximum of 500.
    - ``100``

  * - ``pretty``
    - boolean
    - Displays response in a `prettyprint <https://en.wikipedia.org/wiki/Prettyprint?oldid=791126873>`_ format.
    - ``false``

  * - ``envelope``
    - boolean
    - Specifies whether or not to wrap the response in an :ref:`envelope <api-envelope>`.
    - ``false``

  * - ``name``
    - string
    - Filters results based on the specified organization name. Performs
      a case-insensitive search for organizations which exactly match
      the specified ``name``.

      .. example::

         If you specify a ``name`` query parameter of ``org1``,
         |service| returns organizations named ``org1`` and ``Org1``,
         but would not return an organization named ``org123``.
    - None

Request Body Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/no-body-parameters.rst

Response
--------

.. include:: /includes/get-all-note.rst

Each element in the ``result`` array is one organization.

.. include:: /includes/get-org-response-document.rst

Example Request
---------------

.. code-block:: shell

   curl --include --user "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest \
     --header "Accept: application/json" \
     --header "Content-Type: application/json" \
     "https://cloud.mongodb.com/api/atlas/v1.0/orgs?pretty=true"

Example Response
----------------

.. code-block:: json

   {
     "links" : [ 
        {
          "href" : "https://cloud.mongodb.com/api/atlas/v1.0/orgs",
          "rel" : "self"
        } 
     ],
     "results" : [ 
        {
          "id" : "5a2add1cfd9f3cfb17053317",
          "links": [{
             "href": "https://cloud.mongodb.com/api/atlas/v1.0/orgs/5a2add1cfd9f3cfb17053317",
             "rel": "self"
        }],
          "name" : "Internal Application Support"
        }, 
        {
          "id" : "5a2add1cfd9f3cfb17053318",
          "links": [{
             "href": "https://cloud.mongodb.com/api/atlas/v1.0/orgs/5a2add1cfd9f3cfb17053318",
             "rel": "self"
        }],
          "name" : "Customer Application Support"
        }, 
        {
          "id" : "5a2add1cfd9f3cfb17053319",
          "links": [{
             "href": "https://cloud.mongodb.com/api/atlas/v1.0/orgs/5a2add1cfd9f3cfb17053319",
             "rel": "self"
        }],
          "name" : "Research and Development"
        } 
     ],
     "totalCount" : 3
   }
