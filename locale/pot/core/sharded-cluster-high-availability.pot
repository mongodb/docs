# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/sharded-cluster-high-availability.txt:5
# 38905c388dd040ff89a85e6c08b9b3db
msgid "Sharded Cluster High Availability"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:9
# 3df36a8903de4b8bb1a04f106bffcc47
msgid "A :ref:`production <sharding-production-architecture>` :term:`cluster` has no single point of failure. This section introduces the availability concerns for MongoDB deployments in general and highlights potential failure scenarios and available resolutions."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:15
# f8abb1fc38fa4615ae8ff11322d7a64f
msgid "Application Servers or :program:`mongos` Instances Become Unavailable"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:17
# 9b02389fea274bb6a4cb05b63b015d26
msgid "If each application server has its own :program:`mongos` instance, other application servers can continue access the database. Furthermore, :program:`mongos` instances do not maintain persistent state, and they can restart and become unavailable without losing any state or data. When a :program:`mongos` instance starts, it retrieves a copy of the :term:`config database` and can begin routing queries."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:25
# 6c8b4ac5a1ec461d961ba2ae05d8ba1e
msgid "A Single :program:`mongod` Becomes Unavailable in a Shard"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:27
# b3cd5dbb1a5a4db2a0645a283c4af02d
msgid ":doc:`Replica sets </replication>` provide high availability for shards. If the unavailable :program:`mongod` is a :term:`primary`, then the replica set will :ref:`elect <replica-set-elections>` a new primary. If the unavailable :program:`mongod` is a :term:`secondary`, and it disconnects the primary and secondary will continue to hold all data. In a three member replica set, even if a single member of the set experiences catastrophic failure, two other members have full copies of the data. [#recovery-window]_"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:36
# 743a6aa11f884cdb885c29fd823dedce
msgid "Always investigate availability interruptions and failures. If a system is unrecoverable, replace it and create a new member of the replica set as soon as possible to replace the lost redundancy."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:41
# 563dba9d54624c799214d2e678df5adf
msgid "All Members of a Replica Set Become Unavailable"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:43
# 9ac49916c49943e2a1feaf7f3ff3bed6
msgid "If all members of a replica set within a shard are unavailable, all data held in that shard is unavailable. However, the data on all other shards will remain available, and it's possible to read and write data to the other shards. However, your application must be able to deal with partial results, and you should investigate the cause of the interruption and attempt to recover the shard as soon as possible."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:51
# 0c09b4b6d6da453183ceb9a5082654a9
msgid "One or Two Config Databases Become Unavailable"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:53
# 08bdf956a9454d659c2615122515e850
msgid "Three distinct :program:`mongod` instances provide the :term:`config database` using a special two-phase commits to maintain consistent state between these :program:`mongod` instances. Cluster operation will continue as normal but :ref:`chunk migration <sharding-balancing>` and the cluster can create no new :doc:`chunk splits </tutorial/split-chunks-in-sharded-cluster>`. Replace the config server as soon as possible. If all config databases become unavailable, the cluster can become inoperable."
msgstr ""

#: ../source/includes/note-config-server-startup.rst:3
# dead5c59b02a4041a035d2b2ca43ee7a
msgid "All config servers must be running and available when you first initiate a :term:`sharded cluster`."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:64
# 19600c0f093c48ceab270df8a02692b9
msgid "If an unavailable secondary becomes available while it still has current oplog entries, it can catch up to the latest state of the set using the normal :term:`replication process <sync>`, otherwise it must perform an :term:`initial sync`."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:72
# be804fdbb51e4183a226d6bc848a755c
msgid "Renaming Config Servers and Cluster Availability"
msgstr ""

#: ../source/includes/fact-rename-config-servers-requires-cluster-restart.rst:1
# 964ce395fce54424adc6008be54a9d61
msgid "If the name or address that a sharded cluster uses to connect to a config server changes, you must restart **every** :program:`mongod` and :program:`mongos` instance in the sharded cluster. Avoid downtime by using CNAMEs to identify config servers within the MongoDB deployment."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:76
# 39f2de964ece4799ba7c77702e58380b
msgid "To avoid downtime when renaming config servers, use DNS names unrelated to physical or virtual hostnames to refer to your :ref:`config servers <sharding-config-server>`."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:80
# 80d1d719690c4e43b50c7431e7baa368
msgid "Generally, refer to each config server using the DNS alias (e.g. a CNAME record). When specifying the config server connection string to :program:`mongos`, use these names. These records make it possible to change the IP address or rename config servers without changing the connection string and without having to restart the entire cluster."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:87
# b246d2d8ebc246aa8a724a61f18ddab0
msgid "Shard Keys and Cluster Availability"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:89
# dab2635e7e294b859ae6413bd9bd7978
msgid "The most important consideration when choosing a :term:`shard key` are:"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:92
# 126023b80d3a4744818f53ada62d06a5
msgid "to ensure that MongoDB will be able to distribute data evenly among shards, and"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:95
# d29e5b41a273462a861c0822d20c57a7
msgid "to scale writes across the cluster, and"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:97
# 46ec2dc8c20d47b3aaec4c5bc2069985
msgid "to ensure that :program:`mongos` can isolate most queries to a specific :program:`mongod`."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:100
# b6a5ed18e3614b019bc3d196de5a965c
msgid "Furthermore:"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:102
# 5d65f84a62af40f8ac170fb5d5cef14f
msgid "Each shard should be a :term:`replica set`, if a specific :program:`mongod` instance fails, the replica set members will elect another to be :term:`primary` and continue operation. However, if an entire shard is unreachable or fails for some reason, that data will be unavailable."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:108
# 4ac1ecdfb68d474ab77b86c905a5fdfa
msgid "If the shard key allows the :program:`mongos` to isolate most operations to a single shard, then the failure of a single shard will only render *some* data unavailable."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:112
# e997d92aaea341af8b006e3192830b67
msgid "If your shard key distributes data required for every operation throughout the cluster, then the failure of the entire shard will render the entire cluster unavailable."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:116
# 5ae50b968e7c4d3ea5b4f7ed806035f6
msgid "In essence, this concern for reliability simply underscores the importance of choosing a shard key that isolates query operations to a single shard."
msgstr ""

