.. _manage-group-settings:

=====================
Edit Project Settings
=====================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Overview
--------

.. include:: /includes/extracts/settings-groups.rst

Edit Project Settings
---------------------

To modify project settings, select the project in the
:guilabel:`Context` and click :guilabel:`Settings`.

The :guilabel:`Project Settings` displays the configurable settings.
See :ref:`group-settings-page` to view the setting descriptions.

.. only:: onprem

   If you have :ref:`global-owner-role` access, you can also update
   :guilabel:`Admin Project Settings` under the :guilabel:`Global Admin
   Only` section. See :ref:`admin-only-group-settings` to view the
   administrative setting descriptions.

.. _group-settings-page:

Project Settings
~~~~~~~~~~~~~~~~

:guilabel:`Project Settings` apply to all the users in the project.

.. list-table::
   :widths: 30 70
   :header-rows: 1

   * - Setting

     - Description

   * - :guilabel:`Project`

     - Sets your project's name.

       .. note:: 

          Only a user with the :authrole:`Project Owner` access for the
          project can edit the project name.

   * - :guilabel:`Project Time Zone`

     - Sets your project's time zone.

   * - :guilabel:`Collect Logs For All Hosts`

     - Activates or deactivates the collection of log data for all
       hosts. This overwrites the statuses set on the individual hosts.

   * - :guilabel:`Collect Profiling Information for All Hosts`

     - Activates or deactivates |mms| collection of data from the MongoDB
       :manual:`database profilers </tutorial/manage-the-database-profiler>`
       running on your :program:`mongod` instances. A :program:`mongod`
       instance must have its profiler enabled in order for |mms| to
       collect data from it.

       When you change this setting, |mms| applies the change globally to
       all :program:`mongod` processes in the project. For example, if you
       disable this setting, |mms| disables the collection of profiling
       data for all the project's processes. This setting does not affect
       whether the profiler is enabled on a given :program:`mongod`
       process, only whether |mms| collects profiling data.

       To enable the collection of profiling data on a process-by-process
       basis, see :doc:`/tutorial/profile-database`.

       When profiling is enabled, |mms| collects data from MongoDBâ€™s
       profiler to provide statistics about performance and database
       operations. Ensure exposing profile data to |mms| is
       consistent with your information security practices. Also be aware
       the profiler can consume resources which may adversely affect
       MongoDB performance.

       For more information, see :doc:`/tutorial/profile-database`.

   * - :guilabel:`Collect Database Specific Statistics`

     - Allows you to enable or disable the collection of database
       statistics. For more information, see :doc:`/tutorial/profile-database`.

   * - :guilabel:`Reset Duplicates`

     - Allows you to reset and remove all detected duplicate hosts. This
       is useful if your server environment has drastically changed and
       you believe a host is incorrectly marked as a duplicate.

   * - :guilabel:`Preferred Hostnames`

     - Allows you to specify resolvable hostnames or IP address for your
       deployment's servers. |mms| keeps a list of the multiple ways to
       which each server is referred (hostname, FQDN, IP address) and uses
       heuristics to determine the best choice. Use this setting to
       guarantee |mms| uses a resolvable method. The method you choose
       will also be the method used to display the servers in |mms|.

       To specify a preferred hostname, click :guilabel:`Add` and do one of
       the following:

       - To specify hostnames that end with a particular string, click the
         :guilabel:`Ends With` button and enter the string.

       - To specify hostnames that match a pattern, click the
         :guilabel:`Regex` button and enter a regular expression. An
         expression that uses "starts with" behavior must have ``.*`` at the
         end in order to correctly match. For example, to specify
         hostnames that start with ``acme-``, enter:

         .. code-block:: none

            ^acme-.*

   * - :guilabel:`Suppress Mongos Automatic Discovery`

     - Suppresses automatic discovery of all :program:`mongos` processes
       in your deployment's sharded clusters.

   * - :guilabel:`Public Key for SCP Restores`

     - If you use |mms| :doc:`Backup </tutorial/nav/backup-use>`, this
       setting allows you to generate a public key for SCP backup
       restoration. If you restore a snapshot through SCP, |mms| uses the
       key to transmit the snapshot. For more information on restores, see
       :ref:`how to validate an SCP restore <backup-faq-scp-validation>`
       and other SCP FAQs.

   * - :guilabel:`PagerDuty Service Key`

     - Sets a default service key for alert notifications sent to a `PagerDuty
       <http://www.pagerduty.com/?utm_source=mongodb&utm_medium=docs&utm_campaign=partner>`__
       account. |mms| enters the key by default when you add a PagerDuty notification
       to an :doc:`alert configuration </tutorial/manage-alert-configurations>`.
       If you add PagerDuty notifications and if the key used to send the
       notifications becomes invalid, |mms| sends an email to the project owner
       and eventually removes the key.

       You can add PagerDuty notifications only for alerts that require user
       acknowledgement. Informational alerts, such as the alert that a replica
       set has elected a new primary, cannot use PagerDuty notification.

       Users can acknowledge PagerDuty alert notifications only from the
       PagerDuty dashboard.

   * - :guilabel:`Flowdock Settings`

     - Sets default values for alert notifications sent to Flowdock. |mms|
       enters the values by default when you add a Flowdock notification
       to an :doc:`alert configuration </tutorial/manage-alert-configurations>`.
       If you add Flowdock notifications, and if credentials to send
       notifications become invalid, |mms| sends an email to the project owner
       and eventually removes the credentials.

       Set the following:

       - :guilabel:`Org Name`: The Flowdock organization name in
         lower-case letters. This is the name that appears after
         ``www.flowdock.com/app/`` in the URL string.

       - :guilabel:`Flow Name`: The flow name in lower-case letters. The
         flow name appears after the org name in the URL string:
         ``www.flowdock.com/app/<org-name>/<flow-name>``.

       - :guilabel:`API Token`: Your Flowdock "personal API token" found
         on the `<https://www.flowdock.com/account/tokens>`_ page of your
         Flowdock account.

   * - :guilabel:`HipChat Settings`

     - Sets a default room and API token for alert notifications sent to a
       HipChat account. |mms| enters the values by default when you add a
       HipChat notification to an :doc:`alert configuration
       </tutorial/manage-alert-configurations>`. If you add HipChat
       notifications and the token used to send notifications becomes invalid,
       |mms| sends an email to the project owner and eventually removes the token.


   * - :guilabel:`Slack Settings`

     - Sets a default channel and token for alert notifications sent
       to a Slack account. You can use either an API token or a Bot token. To
       create an API token, see the `<https://api.slack.com/web>`_ page in
       your Slack account. For information on Bot users in Slack, see
       `<https://api.slack.com/bot-users>`_.

       |mms| will enter these values by default when you add a Slack
       notification to an :doc:`alert configuration
       </tutorial/manage-alert-configurations>`. If add Slack notifications
       and the token used to send notifications becomes invalid, |mms| sends
       an email to the project owner and eventually removes the token.

   * - :guilabel:`Webhook Settings`

     - Adds a :guilabel:`Webhook URL` endpoint to which |mms| can send
       alert notifications for programmatic processing. |mms| sends an
       alert notification as an HTTP POST request in which the request body
       contains a JSON document that uses the same format as the Public
       API's :doc:`Alerts resource </reference/api/alerts>`.

       |mms| adds a request header called ``X-MMS-Event`` to distinguish
       between various alert states. The possible values for this header
       are:

       .. list-table::
          :widths: 30 70

          * - ``alert.open``

            - The alert was just opened.

          * - ``alert.close``

            - The alert was resolved.

          * - ``alert.update``

            - A previously opened alert is still open.

          * - ``alert.acknowledge``

            - The alert was acknowledged.

          * - ``alert.cancel``

            - The alert became invalid and was canceled.

          * - ``alert.inform``

            - Represents an informational alert, which is a
              point-in-time event, such as "Primary Elected."

       If you specify a key in the :guilabel:`Webhook Secret` field, |mms| adds the
       ``X-MMS-Signature`` request header, which contains the hex-encoded
       HMAC signature of the request body. The signature is created using
       the provided secret.

       To send alert notifications to a Webhook, select the Webhook
       notification option when creating or editing an :doc:`alert
       configuration </tutorial/manage-alert-configurations>`.
       If you add a Webhook notification and the URL or optional key becomes
       invalid, |mms| sends an email to the project owner and eventually removes
       the Webhook settings.

       .. only:: cloud

          .. note::

             The `CIDR <https://tools.ietf.org/html/rfc4632>`_ address
             blocks provided in :doc:`Backup SCP Restores
             </reference/firewall-configuration>`
             are also used for the Webhooks. You must allow HTTP traffic from
             those :abbr:`CIDR (Classless Inter-domain Routing)` address
             blocks.

.. only:: onprem

   .. _admin-only-group-settings:

   Admin Project Settings
   ~~~~~~~~~~~~~~~~~~~~~~

   The following project settings in the :guilabel:`Global Admin Only` section of
   :guilabel:`Settings` could, in certain situations, affect more
   than the project. For example, setting logging to a high verbosity would
   cause system logs to roll over faster. Only users with the
   :ref:`global-owner-role` role can edit these settings:

   .. list-table::
      :header-rows: 1
      :widths: 30 70

      * - Setting

        - Description

      * - :guilabel:`Mongos Deactivation Threshold`

        - Change the amount of time before |mms| removes an unreachable
          :program:`mongos` process from the :guilabel:`Deployment` tab view. By
          default, |mms| waits 30 days before removing an unreachable
          :program:`mongos`. Set this to the amount of time in seconds to wait
          before removal. This setting applies only if the :program:`mongos` is
          not managed by |mms| Automation.

      * - :guilabel:`Monitoring Agent Log Level`

        - Change the verbosity of the Monitoring Agent log.

      * - :guilabel:`Automation Agent Log Level`

        - Change the verbosity of the Automation Agent log.

