.. _mcli-quick-start:

===========
Quick Start
===========

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

{+mcli+} provides a command-line interface for managing your 
|service-fullname|, |cloud|, and |mms-full| projects and clusters. 
This tutorial demonstrates how to: 

- Download, install, and  configure {+mcli+}
- Create clusters in your |service|, |cloud-short|, or |mms| project
- Create a whitelist and MongoDB user for your |service| cluster
- Retrieve details about the new cluster 

The reference pages for the commands mentioned in this tutorial are  
available in the :ref:`mcli-reference` section.

.. _quick-start-reqs:

Prerequisites 
-------------

Before you begin, review and ensure that your environment is 
:ref:`compatible <mcli-compatibility>` for installing and using 
{+mcli+}.

This tutorial requires the following: 

- A `MongoDB account <https://docs.mongodb.com/guides/cloud/account>`_ 
- An :atlas:`Atlas </organizations-projects/>`, 
  :cloudmgr:`Cloud Manager </organizations-projects/>`, or 
  :opsmgr:`Ops Manager </organizations-projects/>` organization and 
  project

.. _quick-start-install:

Download and Install {+mcli+}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

See :ref:`mcli-install` for information on downloading and installing 
{+mcli+}. After installing {+mcli+}, run the following command to 
verify installation:

.. code-block:: sh

   mongocli help

.. _quick-start-config-access-keys:

Generate Programmatic Access Keys 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

{+mcli+} uses Programmatic Access Keys to access the |service|, 
|cloud-short|, or |onprem| projects. Your |svc-api-key| must have: 

- The ``project owner`` role 
- The access list entry for your IP address or |cidr| range

To learn more about generating the |svc-api-key|, see: 

- :atlas:`Atlas API Access </configure-api-access>`
- :cloudmgr:`Cloud Manager API Access </tutorial/configure-public-api-access>`
- :opsmgr:`Ops Manager API Acess </tutorial/configure-public-api-access>`

Procedure
---------

.. note:: 

   The following sections are organized by MongoDB service. Select 
   the tab for your MongoDB service to proceed. 

.. tabs:: 

   .. tab:: Atlas 
      :tabid: atlas

      Configure the {+mcli+}
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      .. include:: /includes/quick-start-intro.rst

      .. include:: /includes/steps/quick-start-atlas-config-mcli.rst

      Configure an |service| Cluster 
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      Use the :ref:`mcli-atlas-quick-start-cmd` command to create an 
      ``M2`` cluster in |service|, add your IP addresses or |cidr| 
      blocks to the project IP access list, and create a MongoDB 
      database user to access the database.

      You can run this command in two ways: 
      
      - Interactive mode - the command prompts you for the cluster settings
      - Non-interactive mode - you run the command with the cluster settings
      
      Click the tab to see the command for your preferred  
      mode. 
  
      .. tabs:: 

         .. tab:: Interactive Mode
            :tabid: interactive

            The command prompts you for the following 
            settings. Enter the corresponding value when prompted: 

            - Cluster name: ``getStarted``
            - Service provider: ``AWS`` 
            - Provider region: ``US_EAST-1``
            - MongoDB DB username: ``testUser``
            - Password: ``<changeMe>``
            - IP address to add to the Access List: 
              ``<your-IP-address>``
            - Download and install MongoDB Shell: ``N``

            .. code-block:: sh 

               mongocli atlas quickstart 

         .. tab:: Non-Interactive Mode 
            :tabid: noninteractive

            The command creates a sample shared-tier cluster 
            with the following settings: 

            - Cluster name: ``getStarted``
            - Service provider: ``AWS`` 
            - Provider region: ``US_EAST-1`` 
            - Cluster tier: ``M2``
            - Disk size: ``2`` GB
            - MongoDB version: ``4.4`` 
            - Replica set members: ``3``

            .. code-block:: sh 

               mongocli atlas quickstart --clusterName getStarted --provider AWS --region US_EAST_1 --username testUser --password changeMe accessListIp <192.0.2.15>

      .. _quick-start-atlas-monitor-cluster:

      Determine Your Cluster Status 
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      Run the :ref:`mcli-atlas-cluster-watch-cmd` command to determine 
      if the cluster is available for use. The following command uses 
      the default profile to access the |service| project:

      .. code-block:: sh 

	     mongocli atlas cluster watch getStarted 

      .. _quick-start-atlas-retrieve-cluster:

      Retrieve Your Cluster 
      ~~~~~~~~~~~~~~~~~~~~~

      To retrieve your cluster settings and status, issue the
      :ref:`mcli-atlas-cluster-describe-command` command.

      .. code-block:: sh 

         mongocli atlas cluster describe getStarted --output json

      Your command output should look similar to the following:

      .. code-block:: json
         :copyable: false 

         {
           "autoScaling": {
             "diskGBEnabled": false,
             "compute": {
               "enabled": false,
               "scaleDownEnabled": false
             }
           },
           "backupEnabled": false,
           "biConnector": {
             "enabled": false,
             "readPreference": "secondary"
           },
           "clusterType": "REPLICASET",
           "diskSizeGB": 0.5,
           "encryptionAtRestProvider": "NONE",
           "id": "5e29cf4e7a3e5a3f46554bde",
           "groupId": "<project-ID>",
           "mongoDBVersion": "4.4.4",
           "mongoDBMajorVersion": "4.4",
           "mongoURI": "mongodb://getStarted-shard-00-00.example.mongodb.net:27017,getStarted-shard-00-01.example.mongodb.net:27017,getStarted-shard-00-02.example.mongodb.net:27017",
           "mongoURIUpdated": "2020-08-12T14:36:23Z",
           "mongoURIWithOptions": "mongodb://getStarted-shard-00-00.example.mongodb.net:27017,getStarted-shard-00-01.example.mongodb.mongodb.net:27017,getStarted-shard-00-02.example.mongodb.net:27017/?ssl=true\u0026authSource=admin\u0026replicaSet=atlas-abcde4-shard-0",
           "name": "getStarted",
           "numShards": 1,
           "paused": false,
           "pitEnabled": false,
           "providerBackupEnabled": false,
           "providerSettings": {
             "backingProviderName": "AWS",
             "instanceSizeName": "M0",
             "providerName": "TENANT",
             "regionName": "US_EAST_1",
             "autoScaling": {
               "compute": {}
             }
           },
           "replicationFactor": 3,
           "replicationSpecs": [
             {
               "id": "5f33fdc96b0fb076cc13ef20",
               "numShards": 1,
               "zoneName": "Zone 1",
               "regionsConfig": {
                 "US_EAST_1": {
                   "analyticsNodes": 0,
                   "electableNodes": 3,
                   "priority": 7,
                   "readOnlyNodes": 0
                 }
               }
             }
           ],
           "srvAddress": "mongodb+srv://getStarted.example.mongodb.net",
           "stateName": "IDLE",
           "connectionStrings": {
             "standard": "mongodb://getStarted-shard-00-00.example.mongodb.net:27017,getStarted-shard-00-01.example.mongodb.net:27017,getStarted-shard-00-02.example.mongodb.net:27017/?ssl=true\u0026authSource=admin\u0026replicaSet=atlas-abcde4-shard-0",
             "standardSrv": "mongodb+srv://getStarted.example.mongodb.net"
           }
         }

      .. _quick-start-atlas-retrieve-conection-string:

      Get Your Cluster Connection String Using a Go Template 
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      You can also use the |mongo| shell to connect to your cluster with
      the ``srvAddress`` and appropriate :manual:`connection string
      options 
      </reference/connection-string/#connection-string-options>`.

      To retrieve the connection string for the ``getStarted`` cluster, 
      run the following :ref:`mcli-atlas-cluster-describe-command` 
      command with the template. The following command uses the default 
      profile for accessing |service|.

      .. code-block:: sh 

	     mongocli atlas clusters describe getStarted -o go-template="Parse: {{.SrvAddress}}"

      The previous command returns a string similar to the following: 

      .. code-block:: sh 
	     :copyable: false 

	     Parse: mongodb+srv://getstarted.example.mongodb.net

      Use the connection string with the |mongo| shell to connect to 
      the ``getStarted`` cluster. This example uses the following to 
      connect to the |service| cluster: 
      
      - The connection string returned by the previous command 
      - The username and password created in this :ref:`tutorial 
        <quick-start-create-mdb-user>` 

      .. code-block:: 

	     mongo "mongodb+srv://getstarted.example.mongodb.net" --username User1 --password ChangeThisPasswordToSomethingSecure

   .. tab:: Cloud Manager
      :tabid: cloud-manager

      Configure the {+mcli+}
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      .. include:: /includes/quick-start-intro.rst

      .. include:: /includes/steps/quick-start-cm-config-mcli.rst

      Create a Cluster 
      ~~~~~~~~~~~~~~~~

      Use the :ref:`mcli-cm-cluster-create-command` command to create
      a cluster in |cloud-short|.

      .. include:: /includes/quick-start-cm-om-create-cluster-intro.rst
      .. include:: /includes/steps/quick-start-cm-cluster-create.rst

      Retrieve the Cluster 
      ~~~~~~~~~~~~~~~~~~~~

      You can check whether your cluster was successfully created by
      retrieving the cluster details using the
      :ref:`mcli-cm-cluster-describe-command` command.

      .. code-block:: sh 

         mongocli cloud-manager cluster describe getStarted

      Your command output should look similar to the following:

      .. code-block:: json
         :copyable: false 

         {
	        "mongoURI": "mongodb://host1:29010,host2:29020,host3:29030",
	        "name": "getStarted",
	        "processes": [
		      {
			     "buildIndexes": true,
			     "db_path": "/data/cluster/rs1",
			     "featureCompatibilityVersion": "4.4",
			     "hostname": "host1",
			     "log_path": "/data/cluster/rs1/mongodb.log",
			     "name": "getStartedCluster",
			     "port": 29010,
			     "priority": 1,
			     "process_type": "mongod",
			     "slave_delay": 0,
			     "version": "4.4.4",
			     "votes": 1,
			     "arbiter_only": false,
			     "disabled": false,
			     "hidden": false
		      },
		      {
			     "buildIndexes": true,
			     "db_path": "/data/cluster/rs2",
			     "featureCompatibilityVersion": "4.4",
			     "hostname": "host2",
			     "log_path": "/data/cluster/rs2/mongodb.log",
			     "name": "getStartedCluster",
			     "port": 29020,
			     "priority": 1,
			     "process_type": "mongod",
			     "slave_delay": 0,
			     "version": "4.4.4",
			     "votes": 1,
			     "arbiter_only": false,
			     "disabled": false,
			     "hidden": false
		      },
		      {
			     "buildIndexes": true,
			     "db_path": "/data/cluster/rs3",
			     "featureCompatibilityVersion": "4.4",
			     "hostname": "host3",
			     "log_path": "/data/cluster/rs3/mongodb.log",
			     "name": "getStartedCluster",
			     "port": 29030,
			     "priority": 1,
			     "process_type": "mongod",
			     "slave_delay": 0,
			     "version": "4.4.4",
			     "votes": 1,
			     "arbiter_only": false,
			     "disabled": false,
			     "hidden": false
		      }
	       ]
         }

      .. _quick-start-cm-watch-automation-config:

      Watch Your Automation Configuration Status
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      Run the :ref:`mcli-cm-automation-watch-command` command to 
      determine if the cluster is ready for use. The following command 
      uses the default profile to access the |cloud-short| project:

      .. code-block:: sh 

	     mongocli cm automation watch  

   .. tab:: Ops Manager
      :tabid: ops-manager 

      Configure the {+mcli+}
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      .. include:: /includes/quick-start-intro.rst

      .. include:: /includes/steps/quick-start-om-config-mcli.rst

      .. _quick-start-om-create-cluster:

      Create a Cluster 
      ~~~~~~~~~~~~~~~~

      Use the :ref:`mcli-om-cluster-create-command` command to create
      a cluster in |onprem|.

      .. include:: /includes/quick-start-cm-om-create-cluster-intro.rst
      .. include:: /includes/steps/quick-start-om-cluster-create.rst

      .. _quick-start-om-retrieve-cluster:

      Retrieve the Cluster 
      ~~~~~~~~~~~~~~~~~~~~

      You can check whether your cluster was successfully created by
      retrieving the cluster details using the
      :ref:`mcli-om-cluster-describe-command` command.

      .. code-block:: sh 

         mongocli ops-manager cluster describe getStarted

      Your command output should look similar to the following:

      .. code-block:: json
         :copyable: false 

         {
	        "mongoURI": "mongodb://host1:29010,host2:29020,host3:29030",
	        "name": "getStarted",
	        "processes": [
		      {
			     "buildIndexes": true,
			     "db_path": "/data/cluster/rs1",
			     "featureCompatibilityVersion": "4.4",
			     "hostname": "host1",
			     "log_path": "/data/cluster/rs1/mongodb.log",
			     "name": "getStartedCluster",
			     "port": 29010,
			     "priority": 1,
			     "process_type": "mongod",
			     "slave_delay": 0,
			     "version": "4.4.4",
			     "votes": 1,
			     "arbiter_only": false,
			     "disabled": false,
			     "hidden": false
		      },
		      {
			     "buildIndexes": true,
			     "db_path": "/data/cluster/rs2",
			     "featureCompatibilityVersion": "4.4",
			     "hostname": "host2",
			     "log_path": "/data/cluster/rs2/mongodb.log",
			     "name": "getStartedCluster",
			     "port": 29020,
			     "priority": 1,
			     "process_type": "mongod",
			     "slave_delay": 0,
			     "version": "4.4.4",
			     "votes": 1,
			     "arbiter_only": false,
			     "disabled": false,
			     "hidden": false
		      },
		      {
			     "buildIndexes": true,
			     "db_path": "/data/cluster/rs3",
			     "featureCompatibilityVersion": "4.4",
			     "hostname": "host3",
			     "log_path": "/data/cluster/rs3/mongodb.log",
			     "name": "getStartedCluster",
			     "port": 29030,
			     "priority": 1,
			     "process_type": "mongod",
			     "slave_delay": 0,
			     "version": "4.4.4",
			     "votes": 1,
			     "arbiter_only": false,
			     "disabled": false,
			     "hidden": false
		      }
	        ]
         }

      .. _quick-start-om-watch-automation-config:

      Watch Your Automation Configuration Status 
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      Run the :ref:`mcli-om-automation-watch-command` command to 
      determine if the cluster is ready for use. The following command 
      uses the default profile to access the |mms| project:

      .. code-block:: sh 

	     mongocli om automation watch  

Summary 
-------

.. tabs:: 
   :hidden:

   .. tab:: Atlas 
      :tabid: atlas

      .. include:: /includes/quick-start-summary.rst

   .. tab:: Cloud Manager
      :tabid: cloud-manager 

      .. include:: /includes/quick-start-summary.rst

      You can also use the |mongo| shell to connect to your cluster with
      the appropriate :manual:`connection string options 
      </reference/connection-string/#connection-string-options>`.

   .. tab:: Ops Manager
      :tabid: ops-manager 

      .. include:: /includes/quick-start-summary.rst

      You can also use the |mongo| shell to connect to your cluster with
      the appropriate :manual:`connection string options 
      </reference/connection-string/#connection-string-options>`.
