.. meta::
   :robots: nosnippet

.. _mongodb-advanced:

========================
Configure Advanced Rules
========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

You can manually configure all aspects of a collection's rules by
editing the underlying configuration document directly through the
App Services UI. :guilabel:`Advanced Mode` refers to editing rules in this manner. 

When To Use Advanced Mode
~~~~~~~~~~~~~~~~~~~~~~~~~

The default or "Basic Mode" rules editor in the App Services UI covers the
majority of use cases for collection rules. However, there are times
when you need more fine-grained control than the UI interface provides.
Consider using Advanced Mode if you need to do the following:

- Configure a role that can :ref:`only insert documents
  <role-template-insert-only>`.

- Define field-level read or write permissions for a :ref:`field in an
  embedded document <role-template-embedded-documents>`.

- Determine field-level write permissions dynamically using a :ref:`rule
  expression <expressions>`.

.. warning::

   Once you convert a collection's rules to Advanced Mode, you may not
   be able to switch back to editing that collection's rules through the
   Basic Mode interface.

Procedure
---------

.. procedure::

   .. step:: Navigate to the Collection Rules Screen

      You can edit collection rules in Advanced Mode from the MongoDB rules
      screen in the App Services UI. To get to the rules screen for a collection,
      click :guilabel:`Rules` beneath :guilabel:`Data Access` in the
      left navigation menu and then select the collection from the list.

      .. figure:: /images/collection-rules-basic-mode.png
         :alt: Basic mode rules editor in the App Services UI


   .. step:: Convert to Advanced Mode

      Click the :guilabel:`</>` symbol by :guilabel:`VIEW` in the top 
      left corner of the collection rules interface to enter Advanced View. 
      The UI will switch an editor that shows a preview of the underlying 
      Advanced Mode rule configuration document.
      Click :guilabel:`Convert to Advanced Mode`. Type "convert" and then click
      :guilabel:`Confirm` to confirm your action.

      .. figure:: /images/collection-rules-convert-to-advanced-mode.png
         :alt: Advanced Mode preview in the App Services UI collection rules editor.


   .. step:: Define the Collection Rules

      Once you have converted the collection to Advanced Mode you can edit
      the underlying configuration document. Collection rule configuration
      documents have the following form:

      .. code-block:: json

         {
           "roles": [
             <Role Configuration>,
             ...
           ],
           "filters": [
             <Filter Configuration>,
             ...
           ],
           "schema": {
             "properties": {
               "<Field Name>": <Schema Document>,
               ...
             }
           }
         }

      .. list-table::
        :widths: 30 70
        :header-rows: 1

        * - Field
          - Description

        * - ``roles``
          - An array of :ref:`Role configuration documents
            <config-role>` that each define a single role's
            :guilabel:`Apply When` condition and associated CRUD
            permissions.

            .. important::

                App Services evaluates roles for each query in the order that
                they're defined. Ensure that each role configuration
                document's array index matches its desired position in the
                evaluation order.

        * - ``filters``
          - An array of :ref:`Filter configuration documents <config-filter>` that each define a filter on the collection.

        * - ``schema``
          - A :ref:`schema <schemas>` that configures the shape and contents of all documents in the collection.

            .. note::

                The root of all collection schemas must be an :ref:`object
                schema document <schema-type-object>`. You can embed other
                :ref:`schema types <schema-types>` inside the ``properties``
                field of the root schema.

                For an example of how to define relationships in advanced
                mode, see: :ref:`Configure Relationships <config-relationships>`.


   .. step:: Save the Updated Collection Rules

      Once you have finished editing the collection rules, click
      :guilabel:`Save Draft` in the top right corner. App Services will immediately 
      begin using the new rule configuration you defined for all incoming queries 
      on the collection.
