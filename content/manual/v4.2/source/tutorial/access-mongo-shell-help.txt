.. _mongo-shell-help:

===============================
Access the ``mongo`` Shell Help
===============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: twocols

In addition to the documentation in the :doc:`MongoDB Manual
</index>`, the :binary:`~bin.mongo` shell provides some additional
information in its "online" help system. This document provides an
overview of accessing this help information.

.. _mongo-shell-help-command-line:

Command Line Help
-----------------

To see the list of options and help for starting the :binary:`~bin.mongo`
shell, use the :option:`--help <mongo --help>` option from the command line:

.. code-block:: sh

   mongo --help

Shell Help
----------

To see the list of help, in the :binary:`~bin.mongo` shell, type ``help``:

.. code-block:: javascript

   help

.. _mongo-shell-help-db:

Database Help
-------------

In the :binary:`~bin.mongo` shell:

- To see the list of databases on the server, use the ``show dbs``
  command: [#access]_

  .. code-block:: javascript

     show dbs

  ``show databases`` is an alias for ``show dbs``.

- To see the list of help for methods you can use on the ``db``
  object, call the :method:`db.help()` method:

  .. code-block:: javascript

     db.help()

- To see the implementation of a method in the shell, type the
  ``db.<method name>`` without the parenthesis (``()``), as in the
  following example which will return the implementation of the method
  :method:`db.updateUser()`:

  .. code-block:: javascript

     db.updateUser

.. [#access]
   If the deployment runs with access control, the operation
   returns different values based on user privileges. See
   :ref:`listDatabases Behavior <listDatabases-behavior>` for details.


.. _mongo-shell-help-collection:

Collection Help
---------------

In the :binary:`~bin.mongo` shell:

- To see the list of collections in the current database, use the
  ``show collections`` command:

  .. code-block:: javascript

     show collections

  .. seealso:: :ref:`4.0-compat-show-collections`
  
- To see the help for methods available on the collection objects
  (e.g. ``db.<collection>``), use the ``db.<collection>.help()``
  method:

  .. code-block:: javascript

     db.collection.help()

  ``<collection>`` can be the name of a collection that exists,
  although you may specify a collection that doesn't exist.

- To see the collection method implementation, type the
  ``db.<collection>.<method>`` name without the parenthesis (``()``),
  as in the following example which will return the implementation of
  the :method:`~db.collection.save()` method:

  .. code-block:: javascript

     db.collection.save

.. _mongo-shell-help-cursor:

Cursor Help
-----------

When you perform :ref:`read operations <read-operations-queries>` with
the :method:`~db.collection.find()` method in the
:binary:`~bin.mongo` shell, you can use various cursor methods to modify
the :method:`~db.collection.find()` behavior and various
JavaScript methods to handle the cursor returned from the
:method:`~db.collection.find()` method.

- To list the available modifier and cursor handling methods, use the
  ``db.collection.find().help()`` command:

  .. code-block:: javascript

     db.collection.find().help()

  ``<collection>`` can be the name of a collection that exists,
  although you may specify a collection that doesn't exist.

- To see the implementation of the cursor method, type the
  ``db.<collection>.find().<method>`` name without the parenthesis
  (``()``), as in the following example which will return the
  implementation of the ``toArray()`` method:

  .. code-block:: javascript

     db.collection.find().toArray

Some useful methods for handling cursors are:

- :method:`~cursor.hasNext()` which checks whether the
  cursor has more documents to return.

- :method:`~cursor.next()` which returns the next document and
  advances the cursor position forward by one.

- :method:`forEach(\<function\>) <cursor.forEach()>` which iterates the
  whole cursor and applies the ``<function>`` to each document returned
  by the cursor. The ``<function>`` expects a single argument which
  corresponds to the document from each iteration.

For examples on iterating a cursor and retrieving the documents from
the cursor, see :doc:`cursor handling </tutorial/iterate-a-cursor>`. See
also :ref:`js-query-cursor-methods` for all available cursor methods.

.. _mongo-shell-type-help:

Wrapper Object Help
-------------------

To get a list of the wrapper classes available in the :binary:`~bin.mongo`
shell, such as ``BinData()``, type ``help misc`` in the
:binary:`~bin.mongo` shell:

.. code-block:: javascript

   help misc

.. seealso:: :doc:`/reference/method`

