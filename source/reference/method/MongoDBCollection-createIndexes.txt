====================================
MongoDB\\Collection::createIndexes()
====================================

.. meta::
   :description: Create one or more indexes for a collection with the MongoDB PHP Library, with options for unique, compound, and 2dsphere indexes.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. phpmethod:: MongoDB\Collection::createIndexes()

   Create one or more indexes for the collection.

   .. code-block:: php

      function createIndexes(
          array $indexes,
          array $options = []
      ): string[]

Parameters
----------

``$indexes`` : array
  The indexes to create on the collection.

  For example, the following specifies a unique index on the ``username`` field
  and a compound index on the ``email`` and ``createdAt`` fields:

  .. code-block:: php

     [
         [ 'key' => [ 'username' => -1 ], 'unique' => true ],
         [ 'key' => [ 'email' => 1, 'createdAt' => 1 ] ],
     ]

``$options`` : array
  An array specifying the desired options.

  .. list-table::
     :header-rows: 1
     :widths: 20 20 80

     * - Name
       - Type
       - Description

     * - comment
       - mixed
       - .. include:: /includes/extracts/common-option-comment.rst

         .. include:: /includes/extracts/option-requires-4.4.rst

         .. versionadded:: 1.13

     * - commitQuorum
       - string|integer
       - Specifies how many data-bearing members of a replica set, including the
         primary, must complete the index builds successfully before the primary
         marks the indexes as ready.

         This option accepts the same values for the ``w`` field in a write
         concern plus ``"votingMembers"``, which indicates all voting
         data-bearing nodes.

         This is not supported for server versions prior to 4.4 and will result
         in an exception at execution time if used.

         .. versionadded:: 1.7

     * - maxTimeMS
       - integer
       - .. include:: /includes/extracts/common-option-maxTimeMS.rst

         .. versionadded:: 1.3

     * - session
       - :php:`MongoDB\Driver\Session <class.mongodb-driver-session>`
       - .. include:: /includes/extracts/common-option-session.rst

         .. versionadded:: 1.3

     * - writeConcern
       - :php:`MongoDB\Driver\WriteConcern <class.mongodb-driver-writeconcern>`
       - .. include:: /includes/extracts/collection-option-writeConcern.rst

         .. include:: /includes/extracts/common-option-writeConcern-transaction.rst

Return Values
-------------

The names of the created indexes as an array of strings.

Errors/Exceptions
-----------------

.. include:: /includes/extracts/error-unsupportedexception.rst
.. include:: /includes/extracts/error-invalidargumentexception.rst
.. include:: /includes/extracts/error-driver-runtimeexception.rst

Behavior
--------

``$indexes`` parameter
~~~~~~~~~~~~~~~~~~~~~~

The ``$indexes`` parameter is an array of index specification documents. Each
element in ``$indexes`` must itself be an array or object with a ``key`` field,
which corresponds to the ``$key`` parameter of :phpmethod:`createIndex()
<MongoDB\Collection::createIndex()>`. The array or object may include other
fields that correspond to index options accepted by :phpmethod:`createIndex()
<MongoDB\Collection::createIndex()>`. For a full list of the supported index
creation options, refer to the
:manual:`createIndexes </reference/command/createIndexes>` command reference
in the MongoDB manual.

For example, the following ``$indexes`` parameter creates two indexes. The first
is an ascending unique index on the ``username`` field and the second is a
2dsphere index on the ``loc`` field with a custom name:

.. code-block:: none

   [
       [ 'key' => [ 'username' => 1 ], 'unique' => true ],
       [ 'key' => [ 'loc' => '2dsphere' ], 'name' => 'geo_index' ],
   ]

Example
-------

The following example creates two indexes on the ``restaurants`` collection in
the ``test`` database. One index is a compound index on the ``borough`` and
``cuisine`` fields and the other is 2dsphere index on the ``loc`` field with a
custom name.

.. code-block:: php

   <?php

   $collection = (new MongoDB\Client)->getCollection('test', 'restaurants');

   $indexNames = $collection->createIndexes([
       [ 'key' => [ 'borough' => 1, 'cuisine' => 1] ],
       [ 'key' => [ 'loc' => '2dsphere'], 'name' => 'geo_index' ],
   ]);

   var_dump($indexNames);

The output would then resemble:

.. code-block:: none

   array(2) {
     [0]=>
     string(19) "borough_1_cuisine_1"
     [1]=>
     string(9) "geo_index"
   }

See Also
--------

- :phpmethod:`MongoDB\Collection::createIndex()`
- :ref:`php-indexes`
- :manual:`createIndexes </reference/command/createIndexes>` command reference
  in the MongoDB manual
- :manual:`Index </indexes>` documentation in the MongoDB Manual
