1
00:00:00,000 --> 00:00:01,950
Now that we've
covered the importance

2
00:00:01,950 --> 00:00:03,990
of internal
authentication and what

3
00:00:03,990 --> 00:00:06,300
might happen if we
don't enable it,

4
00:00:06,300 --> 00:00:08,710
we're going to cover
how to implement it.

5
00:00:08,710 --> 00:00:11,790
So let's look at an
example of a replica set.

6
00:00:11,790 --> 00:00:13,770
Currently, the members
of this replica set

7
00:00:13,770 --> 00:00:15,720
don't have to
authenticate to each other

8
00:00:15,720 --> 00:00:18,450
when joining the replica
set or replicating data

9
00:00:18,450 --> 00:00:20,540
from the primary.

10
00:00:20,540 --> 00:00:24,110
This is dangerous, because if
a bad actor gains admin access

11
00:00:24,110 --> 00:00:26,960
to the primary, they could
potentially add their own rogue

12
00:00:26,960 --> 00:00:29,310
member to the replica set.

13
00:00:29,310 --> 00:00:31,370
So to mitigate this,
we're going to implement

14
00:00:31,370 --> 00:00:34,110
SCRAM internal authentication.

15
00:00:34,110 --> 00:00:37,250
We've actually already looked
at SCRAM authentication

16
00:00:37,250 --> 00:00:40,820
in chapter 1 when we discuss
usernames and passwords

17
00:00:40,820 --> 00:00:43,260
as credentials for
authentication.

18
00:00:43,260 --> 00:00:46,490
However, when SCRAM is used
for internal authentication,

19
00:00:46,490 --> 00:00:49,550
it accepts keyfiles as
credentials instead.

20
00:00:49,550 --> 00:00:52,730
A keyfile is a file with
a very long password.

21
00:00:52,730 --> 00:00:55,820
The keyfile is copied over to
each member of the replica set

22
00:00:55,820 --> 00:00:57,800
and it must be presented
to other members

23
00:00:57,800 --> 00:00:59,550
during authentication.

24
00:00:59,550 --> 00:01:01,670
So now that we've seen
a diagram of SCRAM

25
00:01:01,670 --> 00:01:04,550
internal authentication,
let's move to the command line

26
00:01:04,550 --> 00:01:07,050
and start implementing it.

27
00:01:07,050 --> 00:01:09,030
All right, so to
begin, I'm going

28
00:01:09,030 --> 00:01:11,460
to identify the keyfiles
that each member will

29
00:01:11,460 --> 00:01:15,040
use to authenticate.

30
00:01:15,040 --> 00:01:17,960
So here's the keyfile
for the first member,

31
00:01:17,960 --> 00:01:22,670
here's the keyfile
for the second member,

32
00:01:22,670 --> 00:01:24,590
and here's the keyfile
for the third member.

33
00:01:24,590 --> 00:01:26,960
So all these keyfiles
have the same contents,

34
00:01:26,960 --> 00:01:31,040
but I just want to note that
we have three copies of it.

35
00:01:31,040 --> 00:01:34,800
All right, so now that we know
that our keyfiles are in place,

36
00:01:34,800 --> 00:01:37,850
we can modify the configuration
files to include links

37
00:01:37,850 --> 00:01:39,590
to these keyfiles.

38
00:01:39,590 --> 00:01:43,370
I'm going to open this first
configuration file using vi,

39
00:01:43,370 --> 00:01:45,890
but if you're doing
this in the IDE later,

40
00:01:45,890 --> 00:01:48,383
you can use the file editor
instead of opening this file

41
00:01:48,383 --> 00:01:49,300
from the command line.

42
00:01:54,260 --> 00:01:56,680
So I'm going to edit the
first member's configuration

43
00:01:56,680 --> 00:01:58,490
to use the keyfile.

44
00:01:58,490 --> 00:02:03,070
And as a note, the keyfile
configuration option implicitly

45
00:02:03,070 --> 00:02:07,100
turns on authentication for
replica set members and MongoDB

46
00:02:07,100 --> 00:02:08,050
users.

47
00:02:08,050 --> 00:02:10,900
So instead of writing
"authorization enabled"

48
00:02:10,900 --> 00:02:13,150
in addition to the
keyfile option,

49
00:02:13,150 --> 00:02:15,070
we can just write
"keyfile" to enforce

50
00:02:15,070 --> 00:02:17,063
both types of authentication.

51
00:02:20,520 --> 00:02:23,264
So now I'm going to edit the
second member's configuration.

52
00:02:35,120 --> 00:02:37,660
And now I'll update the
third member's configuration.

53
00:02:42,820 --> 00:02:46,210
OK, so at this stage, all
three configuration files

54
00:02:46,210 --> 00:02:48,280
have been modified
to use keyfiles

55
00:02:48,280 --> 00:02:50,390
for internal authentication.

56
00:02:50,390 --> 00:02:52,840
Now we just need to start
each replica set member

57
00:02:52,840 --> 00:02:56,100
with the new configuration.

58
00:02:56,100 --> 00:03:01,400
So here's the first
one, it looks OK.

59
00:03:01,400 --> 00:03:03,830
Here's the second
one, it looks OK.

60
00:03:03,830 --> 00:03:08,402
And the third one,
yep, looks OK.

61
00:03:08,402 --> 00:03:10,360
So now that all the
members are up and running,

62
00:03:10,360 --> 00:03:13,090
I'm going to initiate
the replica set.

63
00:03:13,090 --> 00:03:17,960
So first, I'll connect to one of
the members of the replica set,

64
00:03:17,960 --> 00:03:25,810
and I will run rs.initiate
to initiate the replica set.

65
00:03:25,810 --> 00:03:28,498
So it looks like the
set has been initiated,

66
00:03:28,498 --> 00:03:30,540
so after a few seconds it
should tell me that I'm

67
00:03:30,540 --> 00:03:33,540
connected to the primary node.

68
00:03:33,540 --> 00:03:36,770
So now, because we connected
to this member over localhost,

69
00:03:36,770 --> 00:03:42,650
I can create the first user
using the localhost exception.

70
00:03:42,650 --> 00:03:45,790
So I'm going to switch
to the admin database,

71
00:03:45,790 --> 00:03:47,590
and I'll create our
user administrator

72
00:03:47,590 --> 00:03:50,110
on the admin database.

73
00:03:50,110 --> 00:03:52,520
And it looks like
it was successful.

74
00:03:52,520 --> 00:03:53,920
So that's our first user.

75
00:03:53,920 --> 00:03:57,010
Let's just authenticate
as that user now.

76
00:03:57,010 --> 00:03:59,240
And it was successful.

77
00:03:59,240 --> 00:04:01,750
So at this point, the user
administrator can do their job

78
00:04:01,750 --> 00:04:03,150
and create other users.

79
00:04:03,150 --> 00:04:05,180
So, we're done.

80
00:04:05,180 --> 00:04:06,760
So let's recap what we learned.

81
00:04:06,760 --> 00:04:08,920
To implement internal
authentication

82
00:04:08,920 --> 00:04:11,860
in a three-member replica
set using keyfiles,

83
00:04:11,860 --> 00:04:14,620
you must have three
copies of the keyfile,

84
00:04:14,620 --> 00:04:17,079
with one available
to each member,

85
00:04:17,079 --> 00:04:21,459
modify all three configuration
files to link each keyfile,

86
00:04:21,459 --> 00:04:24,950
and then restart MongoDB
with the new configuration,

87
00:04:24,950 --> 00:04:27,730
and lastly, create
the first user using

88
00:04:27,730 --> 00:04:30,210
the localhost exception.
