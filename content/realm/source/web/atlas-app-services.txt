.. _web-mongodb-realm:
.. _web-atlas-app-services:

============================
Atlas App Services - Web SDK
============================

.. toctree::
   :titlesonly:

   Initialize the App Client </web/init-app-client>
   Call a Function </web/call-a-function>

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Realm SDKs let you connect your client apps to the App Services backend.
The SDKs provide the functionality
needed to authenticate users with any of the built-in :ref:`authentication
providers <authentication-providers>`, call backend :ref:`functions
<functions>`, and directly access a linked :ref:`MongoDB data source
<data-sources>`.

The App Client
--------------

When using the SDK to access the Atlas App Services backend, you start with a
App object. This object provides all other functionality related to App Services.

For further information, see :ref:`Initialize the App Client <web-init-appclient>`.

Authentication & User Management
--------------------------------

With the Realm Web SDK, you can manage users with minimal backend setup
or client-side code using :ref:`App Services Authentication <users-and-authentication>`.
Integrate with 3rd-part OAuth providers, JWT authentication services, or use
App Service's built-in user management system.

To learn how to use App Services Authentication with the Realm Web SDK,
see :ref:`User Management <web-manage-users>`.

Query MongoDB
-------------

The Realm SDKs includes MongoDB Data Access for performing
CRUD and aggregation operations directly from the browser.
For security, configure server-side :ref:`data access rules <mongodb-rules>`
to dynamically determine read & write permissions for every object that
a user accesses.

To learn how to use the MongoDB APIs, see :ref:`Query MongoDB <web-mongodb-data-access>`.

Call Functions
--------------

:ref:`Atlas Functions <functions>` let you define and execute server-side
logic for your application. Call these Functions from client applications
with the Realm Web SDK. These server-side functions can run under the context
of the authenticated user, and thus honor the rules, roles, and permissions that
you have assigned to your data.

By using Functions, you provide a secure way for multiple client
applications to share complex functionality without having to reproduce that
logic client-side.

To learn how to use Functions, see :ref:`Call a Function <web-call-a-function>`.
