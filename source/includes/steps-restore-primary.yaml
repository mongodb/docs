title: Shut down the primary.
stepnum: 1
ref: shutdown
action:
  pre: |
    Connect to the primary and issue the following:
  language: javascript
  code: |
    use admin
    db.shutdownServer()
---
title: Restore the snapshot data files to the primary.
stepnum: 2
ref: copy
pre: |
  Extract the data files to the location where the :program:`mongod`
  instance will access them. This is the location you will specify as the
  :setting:`dbpath` when running :program:`mongod`.
action:
  pre: |
    For example, the following commands extract the data files and move
    them to a data directory:
  language: sh
  code: |
    tar -xvf <backup-restore-name>.tar.gz
    mv <backup-restore-name> /data
---
title: "Restart the primary as a standalone, without the ``--replSet`` option."
stepnum: 3
ref: standalone
pre: "For example:"
action:
  language: sh
  code: |
    mongod --dbpath /data
---
title: "Run the ``seedSecondary.sh`` script on the primary."
stepnum: 4
ref: seed
pre: |
  The seedSecondary.sh script re-creates the oplog collection and seeds it
  with correct timestamp. The file is included in the backup restore file,
  :ref:`except in certain circumstances <seed-secondary-considerations>`.
action:
  pre: |
    To run the script, issue the following command on at the system prompt:
  language: sh
  code: |
    ./seedSecondary.sh <oplog-size-in-gigabytes>
---
title: Restart the primary as part of a replica set.
stepnum: 5
ref: restart
action:
  pre: |
    For example:
  language: sh
  code: |
    mongod --dbpath /data --replSet <replica-set-name>
---
title: Connect to the primary and initiate the replica set.
stepnum: 6
ref: initiate
action:
  pre: |
    Use :method:`rs.initiate()` to initiate
    the replica set. For example:
  language: javascript
  code: |
    rs.initiate()
...
