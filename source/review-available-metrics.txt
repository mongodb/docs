.. _review-available-metrics:

========================
Review Available Metrics
========================

.. default-domain:: mongodb

.. facet::
   :name: genre
   :values: reference

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol
   
You can review the following metrics to monitor your 
{+database-deployments+}. All hardware metrics include metrics or 
individual charts for maximum values.

.. important::

   The metrics available depend on your user role and 
   {+database-deployment+} type.
   
.. include:: /includes/fact-serverless-metrics-datadog.rst

.. list-table::
   :widths: 30 70
   :header-rows: 1
        
   * - Metric
  
     - Description

   * - :guilabel:`Asserts`
  
     - Displays the following information:

       - :guilabel:`ASSERT_REGULAR` displays the average rate of 
         regular asserts raised per second over the selected sample 
         period. 
        
       - :guilabel:`ASSERT_WARNING` displays the average rate of 
         warnings per second over the selected sample period.
        
       - :guilabel:`ASSERT_MSG` displays the average rate of message 
         asserts per second over the selected sample period. These 
         internal server errors have a well-defined text string. 
         |service| logs stack traces for these.
       
       - :guilabel:`ASSERT_USER` displays the average rate of user 
         asserts per second over the selected sample period. This 
         metric includes asserts that a user generates, such as out of 
         disk space or duplicate key errors.
     
       Monitor asserts to track how many errors occur while trying to 
       read or write data. Check the server logs to identify the source 
       of any errors.
   
   * - :guilabel:`Avg Object Size`
     
     - Displays the average object size across all collections in the 
       database.

       Monitor object size to track the size of your objects and better 
       understand your database space.

   * - :guilabel:`Cache Activity`

     - Displays the following information:

       - :guilabel:`readInto` (replica set) or 
         :guilabel:`cache read into` (sharded cluster) displays the 
         rate in bytes per second of data read from disk into memory to 
         service queries.

       - :guilabel:`writtenFrom` (replica set) or
         :guilabel:`cache written from` (sharded cluster) displays the 
         rate in bytes per second of data written from memory into disk 
         to service writes.

       .. include:: /includes/fact-cache-activity.rst

   * - :guilabel:`Cache Ratio`

     - Displays cache fill ratio and dirty fill ratio metrics.
  
       *Cache Fill Ratio* measures how well a cache can serve requests.
       It is calculated by dividing the number of bytes currently in the
       cache by the maximum number of bytes configured, represented as a
       percentage. A high cache fill ratio indicates that most data
       requests are being served from memory, leading to faster query
       performance and reduced disk I/O. 

       *Dirty Fill Ratio* represents the proportion of dirty bytes,
       which are pages modified in memory but not yet written to disk,
       relative to the total cache. A high dirty fill ratio suggests
       that a significant amount of data is waiting to be flushed to
       disk, which can impact performance. Use this metric when
       monitoring write-heavy workloads to ensure data durability. 

   * - :guilabel:`Cache Usage`

     - Displays the following information:

       - :guilabel:`dirty` (replica set) or :guilabel:`cache dirty` 
         (sharded cluster) displays the total dirty bytes cached in 
         memory for serving reads and writes.
       
       - :guilabel:`used` (replica set) or :guilabel:`cache used` 
         (sharded cluster) displays the total bytes cached in memory 
         for serving reads and writes.
    
       These metrics include both indexes and data from the working 
       set.

       .. include:: /includes/fact-cache-usage.rst

   * - :guilabel:`Catalog`

     - Displays the following information:
     
       - :guilabel:`total databases` displays the total number of 
         non-system databases.
       
       - :guilabel:`total collections` displays the total number of 
         collections across all non-system databases.

       - :guilabel:`total views` displays the total number of views 
         across all non-system databases.

       - :guilabel:`total indexes` displays the total number of indexes 
         across all non-system collections.
      
       Monitor catalog counts to prevent an excessive number of 
       databases, collections, views, or indexes from causing startup 
       failures when you upgrade a {+cluster+} tier.

   * - :guilabel:`Collections`

     - Displays the number of collections in the database.
     
       Monitor collections to determine restart times, continuous 
       backup performance, and stability.

   * - :guilabel:`Connections` ({+Serverless-instance+}/replica set) or 
       :guilabel:`connection` (sharded cluster)

     - Displays the total number of active connections to the 
       {+database-deployment+}.

       .. include:: /includes/fact-connections.rst
  
   * - :guilabel:`Cursors`

     - Displays the following information:
     
       - :guilabel:`totalOpen` displays the number of cursors that the 
         server maintains for clients.
        
       - :guilabel:`totalTimedOut` displays the average rate of cursors 
         that have timed out per second over the selected sample period.
  
       Monitor cursors to close unnecessary cursors and reduce the 
       timeout configuration in the application.

   * - :guilabel:`DB Storage`

     - Displays the following information:
       
       - :guilabel:`storageSize` (replica set) or 
         :guilabel:`db storage size` (sharded cluster) displays the sum 
         total amount of on-disk storage space allocated for document 
         storage across all databases.
           
       - :guilabel:`Data Size` ({+Serverless-instance+}),
         :guilabel:`dataSize` (replica set), or 
         :guilabel:`db data size` (sharded cluster) displays the amount 
         of storage space in bytes that your stored data uses.

       - :guilabel:`db data size without system` displays the sum total 
         size in bytes of the document data (including the padding 
         factor) across non-system databases.

       .. include:: /includes/fact-db-stats-collection-interval.rst
  
       .. include:: /includes/fact-db-storage.rst
   
   * - :guilabel:`Disk IOPS`

     - Displays input operations per second.
  
       .. include:: /includes/fact-disk-iops.rst

   * - :guilabel:`Disk Latency`

     - Displays the following information:
     
       - :guilabel:`Read` displays the average amount of time to read 
         from disk.
      
       - :guilabel:`Write` displays the average amount of time to write 
         to disk.

       Monitor disk latency to track the efficiency of reading from and 
       writing to disk.
   
   * - :guilabel:`Disk Queue Depth`

     - Displays the average length of the queue of requests issued 
       to the disk partition that MongoDB uses.
  
       .. include:: /includes/fact-disk-queue-depth.rst

   * - :guilabel:`Disk Space Free`

     - Displays the total amount of free space remaining on disk.

       Monitor free disk space to determine whether to use disk 
       auto-scaling or manually increase the disk size.

   * - :guilabel:`Disk Space Percent Free`

     - Displays the total amount of free space remaining on disk as a 
       percentage of the total disk space.

       Monitor the percentage of free disk space to determine whether 
       to use disk auto-scaling or manually increase the disk size.

   * - :guilabel:`Disk Space Used`

     - Displays the total space on disk used.

       Monitor the used disk space to determine whether to use disk 
       auto-scaling or manually increase the disk size.

   * - :guilabel:`Disk Throughput`

     - Displays the disk read and write throughput metrics.

       *Disk Read Throughput* reflects the rate at which data is read
       from disk in Megabytes per second, indicating how efficiently the 
       database retrieves data that is not cached in memory. 

       *Disk Write Throughput* measures the speed at which data is
       written to disk in Megabytes per second, reflecting the
       database's ability to handle write operations and persist data to
       storage efficiently. 

   * - :guilabel:`Document Metrics`
    
     - Displays the following information:
     
       - :guilabel:`Returned` displays the documents per second 
         returned.
        
       - :guilabel:`Inserted` displays the documents per second 
         inserted.
        
       - :guilabel:`Updated` displays the documents per second updated.
        
       - :guilabel:`Deleted` displays the documents per second deleted.
     
       Monitor document metrics to measure the work MongoDB completes.

   * - :guilabel:`Execution Time`

     - Displays the average time in seconds for the following metrics:

       - :guilabel:`Average read operational latency`

       - :guilabel:`Average write operational latency`
    
       - :guilabel:`Average command operational latency`

       .. include:: /includes/fact-execution-time.rst

   * - :guilabel:`Index Size`
   
     - Displays the total size of all indexes in the database. This 
       metric includes the overhead incurred by indexes on top of the 
       actual document data on which the indexes are based.
     
       Monitor the index size to manage your indexes. To learn more, 
       see :manual:`Indexing Strategies </applications/indexes/>`. 

   * - :guilabel:`Indexes`
   
     - Displays the total number of indexes in the database.
    
       Monitor indexes to manage them. To learn more, 
       see :manual:`Indexing Strategies </applications/indexes/>`.

   * - :guilabel:`Max Disk IOPS`
     
     - Displays the following maximum disk IOPS values over the time 
       period specified by the metric granularity:

       - :guilabel:`max read iops` maximum disk read input operations 
         per second.

       - :guilabel:`max write iops` maximum disk write input operations 
         per second.
  
       .. include:: /includes/fact-disk-iops.rst

   * - :guilabel:`Max Disk Queue Depth`
     - Displays the maximum disk queue depth values over the time 
       period specified by the metric granularity. Disk queue depth 
       is the average length of the queue of requests issued to the 
       disk partition that MongoDB uses.
  
       .. include:: /includes/fact-disk-queue-depth.rst

   * - :guilabel:`Max Normalized System CPU`

     - Displays the maximum CPU usage values of all processes on the 
       node, scaled to a range of 0-100% by dividing by the number of 
       CPU cores.
  
       .. include:: /includes/fact-system-cpu.rst

   * - :guilabel:`Max Process CPU`

     - Displays the following maximum process CPU values over the time 
       period specified by the metric granularity:
     
       - :guilabel:`max user` displays the maximum percentage of time 
         that the CPU spent servicing the MongoDB process.

       - :guilabel:`max kernel` displays the maximum percentage of time 
         the CPU spent servicing operating system calls for the MongoDB 
         process.

       .. include:: /includes/fact-system-cpu.rst

   * - :guilabel:`Max System CPU`
     
     - Displays the maximum CPU usage values of all processes on the 
       node.
  
       .. include:: /includes/fact-system-cpu.rst

   * - :guilabel:`Max System Memory`
    
     - Displays the maximum system memory values in bytes.

       .. include:: /includes/fact-max-memory.rst

   * - :guilabel:`Memory`

     - Displays the total consumption of memory in megabytes at a 
       particular point in time:
       
       - :guilabel:`memory_resident` (replica set) or 
         :guilabel:`memory resident` (sharded cluster) displays the 
         memory that the MongoDB process running on a node consumes. 
         This metric excludes the consumption of other processes and 
         does not represent the total memory that the node consumes.

       - :guilabel:`memory_virtual` (replica set) or 
         :guilabel:`memory virtual` (sharded cluster) displays the 
         memory reserved in disk to act as swap space.

       .. include:: /includes/fact-memory.rst

   * - :guilabel:`Network`

     - Displays the following information:
     
       - :guilabel:`bytesIn` displays the average rate of physical 
         bytes (after any wire compression) sent to this database 
         server per second over the selected sample period.

       - :guilabel:`bytesOut` displays the average rate of physical  
         bytes (after any wire compression) sent from this database 
         server per second over the selected sample period.

       - :guilabel:`numRequests` displays the average rate of requests 
         sent to this database server per second over the selected 
         sample period.
   
         .. include:: /includes/fact-network.rst

   * - :guilabel:`Normalized Process CPU`
    
     - Displays the following information:
     
       - :guilabel:`user` displays the percentage of time that the CPU 
         spent servicing the MongoDB process, scaled to a range of 
         0-100% by dividing by the number of CPU cores.

       - :guilabel:`kernel` displays the percentage of time the CPU 
         spent servicing operating system calls for the MongoDB 
         process, scaled to a range of 0-100% by dividing by the number 
         of CPU cores.

       .. include:: /includes/fact-system-cpu.rst
  
   * - :guilabel:`Normalized System CPU`

     - Displays the CPU usage of all processes on the node, scaled to a 
       range of 0-100% by dividing by the number of CPU cores.

       .. include:: /includes/fact-system-cpu.rst

   * - :guilabel:`Objects`

     - Displays the number of objects in the database.

       Monitor this metric to better understand your database space.

   * - :guilabel:`Opcounters`

     - Displays the number of the following operations per second run 
       on a MongoDB process since the process last started:

       - :guilabel:`command` (replica set) or :guilabel:`cmd` (sharded 
         cluster)

       - :guilabel:`query`

       - :guilabel:`insert`

       - :guilabel:`delete`

       - :guilabel:`update`

       - :guilabel:`getmore`

       - :guilabel:`ttldeleted`

       ``ttldeleted`` from :manual:`TTL indexes </core/index-ttl>` only occur 
       against a node in a ``PRIMARY`` state and are replicated as standard deletes to the 
       secondary nodes. Because of this, TTL deletes aren't applicable on secondaries. |service|  
       maintains the history of the previous primary member's TTL deletes and the TTL deletes 
       remain visible on secondaries that had previously served as the primary member.

       .. include:: /includes/fact-opcounters.rst

   * - :guilabel:`Opcounters - Repl`

     - Displays the following information:

       - :guilabel:`command` displays the average rate of replicated 
         commands applied per second over the selected sample period.

       - :guilabel:`insert` displays the average rate of replicated 
         inserts applied per second over the selected sample period.

       - :guilabel:`delete` displays the average rate of replicated 
         deletes applied per second over the selected sample period.

       - :guilabel:`update` displays the average rate of replicated 
         updates applied per second over the selected sample period.

       .. include:: /includes/fact-opcounters.rst

   * - :guilabel:`Operation Execution Time`

     - Displays the average time in milliseconds to execute the 
       following operations:

       - :guilabel:`avg ms/read` (replica set) or 
         :guilabel:`execution time reads` (sharded cluster)

       - :guilabel:`avg ms/write` (replica set) or 
         :guilabel:`execution time writes` (sharded cluster)
    
       - :guilabel:`avg ms/command` (replica set) or 
         :guilabel:`execution time commands` (sharded cluster)

       Monitor execution time for an increase in read operations to 
       optimize queries and indexes. Determine whether you need to 
       :ref:`upgrade your cluster tier <scale-cluster-instance>`.

   * - :guilabel:`Oplog GB/Hour`
     
     - Displays the average rate of the uncompressed :term:`oplog` data 
       in gigabytes that the primary generates per hour.
  
       .. include:: /includes/fact-oplog-gb-hour.rst

   * - :guilabel:`Page Faults`
   
     - Displays the average rate of page faults on this process per 
       second over the selected sample period. In non-Windows 
       environments this applies to hard page faults only.

       Monitor page faults to determine whether to increase your memory.

   * - :guilabel:`Process CPU`
   
     - Displays the following information:
     
       - :guilabel:`user` displays the percentage of time that the CPU 
         spent servicing the MongoDB process.

       - :guilabel:`kernel` displays the percentage of time the CPU 
         spent servicing operating system calls for the MongoDB process.

       .. include:: /includes/fact-system-cpu.rst
    
   * - :guilabel:`Query Executor`
   
     - Displays the following information:
      
       - :guilabel:`Index Items Scanned` displays the number of index 
         items scanned per second.

       - :guilabel:`Documents Scanned` displays the number of documents 
         scanned per second.

       Monitor the query executor to determine whether you have any 
       inefficient queries.

   * - :guilabel:`Query Targeting`

     - Displays the efficiency of read operations run on MongoDB:

       - :guilabel:`Scanned Objects to Returned` (replica set) or 
         :guilabel:`scanned objects / returned` (sharded cluster) 
         displays the number of documents scanned to return one 
         document.

       - :guilabel:`Scanned Keys to Returned` (replica set) or 
         :guilabel:`scanned keys / returned` (sharded cluster) displays 
         the number of index keys scanned to return one document.

       .. include:: /includes/fact-query-targeting.rst

       .. include:: /includes/fact-query-targeting-mongot.rst

   * - :guilabel:`Queues`
    
     - Displays the following information:
     
       - :guilabel:`GLOBAL_LOCK_CURRENT_QUEUE_TOTAL` displays the 
         number of operations queued waiting for any lock.

       - :guilabel:`GLOBAL_LOCK_CURRENT_QUEUE_READERS` displays the 
         number of operations queued waiting for a read lock.

       - :guilabel:`GLOBAL_LOCK_CURRENT_QUEUE_WRITERS` displays the 
         number of operations queued waiting for a write lock.

       Monitor lock queues to optimize queries.

   * - :guilabel:`Read/Write Units`
   
     - Displays the following information:
       
       - Total Read Processing Units (RPUs)
       - Total Write Processing Units (WPUs)

       .. include:: /includes/fact-read-write-units.rst

   * - :guilabel:`Replication Headroom`
   
     - Displays the difference between the primary's replication oplog 
       window and the secondary's replication lag.

       Monitor replication headroom to determine whether the secondary 
       might fall off the oplog. 

   * - :guilabel:`Replication Lag`
   
     - Displays the approximate number of seconds the secondary is 
       behind the primary in write application.

       Monitor replication lag to determine whether the secondary 
       might fall off the oplog.

   * - :guilabel:`Replication Oplog Window`
   
     - Displays the estimated average number of hours of database 
       operations available in the primary's replication oplog, based 
       on oplog churn. If replication lag on a secondary node exceeds 
       the replication oplog window, and replication headroom reaches 
       zero, a :manual:`full resync 
       </tutorial/resync-replica-set-member/>` is required for that 
       node to become healthy again.

       Monitor the replication oplog window, together with replication 
       headroom, to determine whether the secondary may soon require a 
       full resync. The replication oplog window often helps to 
       determine in advance the resilience of secondaries to planned 
       and unplanned outages.

   * - :guilabel:`Scan and Order`
   
     - Displays the number of operations per second returning results 
       that required a sort in-memory.

       Monitor this metric to identify whether your queries need 
       indexes.

   * - :guilabel:`Shard Data Size`
    
     -  Displays the amount of storage space in bytes that your 
        stored data uses on each shard. You can access this chart only 
        for sharded clusters with MongoDB 6.0+.

        .. include:: /includes/fact-balanced-shards.rst

   * - :guilabel:`Shard Document Count`

     - Displays the number of documents on each shard. You can access 
       this chart only for sharded clusters with MongoDB 6.0+.

       .. include:: /includes/fact-balanced-shards.rst
   
   * - :guilabel:`System CPU`
     
     - Displays the CPU usage of all processes on the node.

       .. include:: /includes/fact-system-cpu.rst

   * - :guilabel:`System Memory`
    
     - Displays the following information:
     
       - :guilabel:`used` displays the number of bytes of physical 
         memory in use.

       - :guilabel:`available` displays an estimate of the number of 
         bytes of system memory available for running new applications, 
         without swapping.

       .. include:: /includes/fact-memory.rst

   * - :guilabel:`System Network`

     - Displays the following information:
     
       - :guilabel:`network bytes in` displays the average rate of 
         physical bytes that the network interface receives per second.

       - :guilabel:`network bytes out` displays the average rate of 
         physical bytes that the network interface transmits per second.

       - :guilabel:`max network bytes in` displays the maximum network 
         bytes in values over the time period that the metric 
         granularity specifies.

       - :guilabel:`max network bytes out` displays the maximum network 
         bytes out values over the time period that the metric 
         granularity specifies. 
   
       .. include:: /includes/fact-network.rst

   * - :guilabel:`Tickets Available`

     - Displays the following information:

       - :guilabel:`Tickets Available Read` displays the number of read 
         tickets available to the WiredTiger storage engine. Read 
         tickets represent the number of concurrent read operations 
         allowed into the storage engine. When this value reaches zero, 
         new read requests might queue until a read ticket becomes 
         available.

       - :guilabel:`Tickets Available Write` displays the number of 
         write tickets available to the WiredTiger storage engine. 
         Write tickets represent the number of concurrent write 
         operations allowed into the storage engine. When this value 
         reaches zero, new write requests might queue until a write 
         ticket becomes available.

       Monitor the tickets available to see when read and write 
       requests queue.

       .. include:: /includes/fact-tickets.rst

   * - :guilabel:`Views`
  
     - Displays the number of views in the database.
    
       Monitor views to help optimize your database.
