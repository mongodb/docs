# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/write-operations-introduction.txt:6
msgid "Write Operations Overview"
msgstr "写操作概览"

#: ../source/core/write-operations-introduction.txt:10
msgid ""
"A write operation is any operation that creates or modifies data in the MongoDB "
"instance. In MongoDB, write operations target a single :term:`collection`. All write "
"operations in MongoDB are atomic on the level of a single :term:`document`."
msgstr ""
"写操作指的是任何一个创建或修改MongoDB实例中数据的操作。在MongoDB中，写操作针对一个单"
"一的 :term:`集合` 。MongoDB中所有写操作在一个单一的 :term:`文档` 层面都具有原子性。"

#: ../source/core/write-operations-introduction.txt:15
msgid ""
"There are three classes of write operations in MongoDB: :ref:`insert <write-"
"op-insert>`, :ref:`update <write-op-update>`, and :ref:`remove <write-op-"
"remove>`. Insert operations add new data to a collection. Update operations "
"modify existing data, and remove operations delete data from a collection. "
"No insert, update, or remove can affect more than one document atomically."
msgstr ""

#: ../source/core/write-operations-introduction.txt:22
msgid ""
"For the update and remove operations, you can specify criteria, or conditions, that "
"identify the documents to update or remove. These operations use the same query "
"syntax to specify the criteria as :doc:`read operations </core/read-operations>`."
msgstr ""
"对于更新以及删除操作， 您可以指定一些可以识别出需要更新或删除文档的条件或准则。 这些"
"操作使用 :doc:`read operations </core/read-operations>` 中相同的查询语法来指定条件。 "

#: ../source/core/write-operations-introduction.txt:27
msgid ""
"MongoDB allows applications to determine the acceptable level of "
"acknowledgement required of write operations. See :doc:`/core/write-concern`"
" for more information."
msgstr ""

#: ../source/core/write-operations-introduction.txt:34
msgid "Insert"
msgstr ""

#: ../source/core/write-operations-introduction.txt:36
msgid ""
"In MongoDB, the :method:`db.collection.insert()` method adds new "
":term:`documents <document>` to a collection."
msgstr ""

#: ../source/core/write-operations-introduction.txt:39
msgid "The following diagram highlights the components of a MongoDB insert operation:"
msgstr "下面的图表展示了一个MongoDB插入操作的组件："

#: ../source/core/write-operations-introduction.txt:44
#: ../source/core/write-operations-introduction.txt:109
#: ../source/core/write-operations-introduction.txt:188
msgid "The following diagram shows the same query in SQL:"
msgstr "下面的图表展示了和SQL中相同的查询："

#: ../source/core/write-operations-introduction.txt:0
msgid "Example"
msgstr "示例"

#: ../source/core/write-operations-introduction.txt:50
msgid ""
"The following operation inserts a new document into the ``users`` "
"collection. The new document has four fields ``name``, ``age``, and "
"``status``, and an ``_id`` field. MongoDB always adds the ``_id`` field to "
"the new document if that field does not exist."
msgstr ""
"下面的操作向 ``users`` 集合插入一个新的文档。新的文档有四个字段： ``name`` ， "
"``age`` ， ``status`` ， 以及一个 ``_id`` 字段。如果新的文档不存在 ``_id`` 字段，"
"MongoDB经常会自动增加 ``_id`` 字段。"

#: ../source/core/write-operations-introduction.txt:65
msgid ""
"For more information and examples, see :method:`db.collection.insert()`."
msgstr ""

#: ../source/core/write-operations-introduction.txt:68
msgid "Insert Behavior"
msgstr "插入操作"

#: ../source/core/write-operations-introduction.txt:70
msgid ""
"If you add a new document *without* the :term:`_id` field, the client library or "
"the :program:`mongod` instance adds an ``_id`` field and populates the field with a "
"unique :term:`ObjectId <objectid>`."
msgstr ""
"您插入一个 *不包含*   :term:`_id`  字段的新文档时，客户端库或者 :program:`mongod`  实"
"例将会自动增加一个  ``_id``  字段，并且将该字段填充为一个唯一的 :term:`ObjectId "
"<objectid>`。"

#: ../source/core/write-operations-introduction.txt:74
msgid ""
"If you specify the ``_id`` field, the value must be unique within the collection. "
"For operations with :ref:`write concern <write-concern>`, if you try to create a "
"document with a duplicate ``_id`` value, :program:`mongod` returns a duplicate key "
"exception."
msgstr ""
"您指定  ``_id``  字段时，集合中该字段的值必须唯一。对于  :ref:`写关注 <write-"
"concern>`  中的操作， 如果您试图使用一个重复的  ``_id``  值创建文档，  :program:"
"`mongod`  将会返回一个重复键值的异常。"

#: ../source/core/write-operations-introduction.txt:80
msgid "Other Methods to Add Documents"
msgstr ""

#: ../source/core/write-operations-introduction.txt:82
msgid ""
"You can also add new documents to a collection using methods that have an "
":ref:`upsert <write-operations-upsert-behavior>` option. If the option is "
"set to ``true``, these methods will either modify existing documents or add "
"a new document when no matching documents exist for the query. For more "
"information, see :ref:`write-operations-upsert-behavior`."
msgstr ""

#: ../source/core/write-operations-introduction.txt:91
msgid "Update"
msgstr "更新"

#: ../source/core/write-operations-introduction.txt:93
msgid ""
"In MongoDB, the :method:`db.collection.update()` method modifies existing "
":term:`documents <document>` in a :term:`collection`. The "
":method:`db.collection.update()` method can accept query criteria to "
"determine which documents to update as well as an options document that "
"affects its behavior, such as the ``multi`` option to update multiple "
"documents."
msgstr ""

#: ../source/core/write-operations-introduction.txt:100
msgid ""
"Operations performed by an update are atomic within a single document. For "
"example, you can safely use the :update:`$inc` and :update:`$mul` operators "
"to modify frequently-changed fields in concurrent applications."
msgstr ""

#: ../source/core/write-operations-introduction.txt:104
msgid ""
"The following diagram highlights the components of a MongoDB update "
"operation:"
msgstr ""

#: ../source/core/write-operations-introduction.txt:123
msgid ""
"This update operation on the ``users`` collection sets the ``status`` field to ``A`` "
"for the documents that match the criteria of ``age`` greater than ``18``."
msgstr ""
"这个在  ``users``  集合上的更新操作将会把满足：  ``age``   大于  ``18``  条件文档的  "
"``status``  字段 全部设为  ``A``  。"

#: ../source/core/write-operations-introduction.txt:127
msgid ""
"For more information, see :method:`db.collection.update()` and "
":ref:`update() Examples <update-method-examples>`."
msgstr ""

#: ../source/core/write-operations-introduction.txt:133
msgid "Default Update Behavior"
msgstr ""

#: ../source/core/write-operations-introduction.txt:135
msgid ""
"By default, the :method:`db.collection.update()` method updates a **single** "
"document. However, with the ``multi`` option, :method:`~db.collection.update()` can "
"update all documents in a collection that match a query."
msgstr ""
"默认地，  :method:`db.collection.update()`  方法只更新一个  **单一的**  文档。然而，"
"通过使用  ``multi``  选项，  :method:`~db.collection.update()`  可以更新一个集合中满"
"足条件的所有文档。"

#: ../source/core/write-operations-introduction.txt:140
msgid ""
"The :method:`db.collection.update()` method either updates specific fields "
"in the existing document or replaces the document. See "
":method:`db.collection.update()` for details as well as examples."
msgstr ""

#: ../source/includes/fact-update-field-order.rst:1
msgid ""
"When performing update operations that increase the document size beyond the "
"allocated space for that document, the update operation relocates the document on "
"disk."
msgstr ""
"在执行更新操作的过程中，增加文档的大小超过为该文档分配的空间时，更新操作就会在磁盘上"
"重定位文档。"

#: ../source/includes/fact-update-field-order.rst:7
msgid ""
"MongoDB preserves the order of the document fields following write operations "
"*except* for the following cases:"
msgstr " *除了* 下面几种情况，MongoDB将会保留写操作中文档字段的顺序： "

#: ../source/includes/fact-update-field-order.rst:10
msgid "The ``_id`` field is always the first field in the document."
msgstr " ``_id`` 字段经常是文档的第一个字段。"

#: ../source/includes/fact-update-field-order.rst:12
msgid ""
"Updates that include :update:`renaming <$rename>` of field names may result in the "
"reordering of fields in the document."
msgstr ""
"包括  :update:`renaming <$rename>`  字段名称的更新操作可能会造成 文档中字段的重新排"
"序。"

#: ../source/includes/fact-update-field-order.rst:17
msgid ""
"Starting in version 2.6, MongoDB actively attempts to preserve the field order in a "
"document. Before version 2.6, MongoDB did not actively preserve the order of the "
"fields in a document."
msgstr ""
"从2.6版本开始，MongoDB 主动尝试保持一个文档中的字段顺序。而在版本2.6之前，MongoDB 不"
"会主动保持一个文档中的字段顺序。"

#: ../source/core/write-operations-introduction.txt:149
msgid "Update Behavior with the ``upsert`` Option"
msgstr ""
"虽然写操作会修改 *位于* 该文档的多个子文档，但是一个单一文档的修改通常具有原子性。 对"
"于那些修改多个文档的写操作而言，从整体上看，该操作并不具备原子性，因为它或许会与其它"
"操作交叉进行。"

#: ../source/core/write-operations-introduction.txt:151
msgid ""
"If the :method:`~db.collection.update()` method includes :ref:`upsert: true "
"<upsert-parameter>` *and* no documents match the query portion of the update"
" operation, then the update operation creates a new document. If there are "
"matching documents, then the update operation with the :ref:`upsert: true "
"<upsert-parameter>` modifies the matching document or documents."
msgstr ""
"其它所有操作都不具备原子性。但是，您可以尝试使用 :doc:`隔离算子 </reference/operator/"
"update/isolated>` 来分隔那些影响多个文档的写操作。"

#: ../source/core/write-operations-introduction.txt:158
msgid ""
"By specifying :term:`upsert: true <upsert>`, applications can indicate, in a"
" *single* operation, that if no matching documents are found for the update,"
" an insert should be performed. See :method:`~db.collection.update()` for "
"details on performing an :ref:`upsert <upsert-parameter>`."
msgstr ""

#: ../source/core/write-operations-introduction.txt:166
msgid ""
"In 2.6, the new :method:`Bulk()` methods and the underlying "
":dbcommand:`update` command allow you to perform many updates with ``upsert:"
" true`` operations in a single call."
msgstr ""
"MongoDB中有三种不同类型的写操作：:ref:`插入<write-op-insert>` 、  :ref:`更新<write-"
"op-update>`  以及  :ref:`删除 <write-op-remove>` 。插入操作向一个集合中添加新的数据，"
"更新操作修改现有数据，而删除操作则将数据从集合中删除。所有的插入、更新及删除操作都只"
"能原子性地影响一个文档。"

#: ../source/core/write-operations-introduction.txt:170
msgid ""
"If you create documents using the ``upsert`` option to "
":method:`~db.collection.update()` consider using a :ref:`a unique index "
"<update-with-unique-indexes>` to prevent duplicated operations."
msgstr ""
"MongoDB允许应用决定写操作所需确认的可接受程度。请查阅 :doc:`/core/write-concern` 以了"
"解更多信息。"

#: ../source/core/write-operations-introduction.txt:177
msgid "Remove"
msgstr ""
"在MongoDB中， :method:`db.collection.insert()` 方法向某集合中插入新的  :term:`文档"
"<document>`  。"

#: ../source/core/write-operations-introduction.txt:179
msgid ""
"In MongoDB, the :method:`db.collection.remove()` method deletes documents "
"from a collection. The :method:`db.collection.remove()` method accepts a "
"query criteria to determine which documents to remove."
msgstr ""

#: ../source/core/write-operations-introduction.txt:183
msgid ""
"The following diagram highlights the components of a MongoDB remove "
"operation:"
msgstr ""
"您也可以使用带有 :ref:`upsert <write-operations-upsert-behavior>` 选项的方法向一个集"
"合中插入新文档。如果这个选项被设置为 ``true`` ，这些方法要么就会修改现有文档或者在没"
"有可以匹配该查询的现有文档的情况下插入一个新的文档。请查阅 :ref:`write-operations-"
"upsert-behavior` 以了解更多信息。"

#: ../source/core/write-operations-introduction.txt:200
msgid ""
"This delete operation on the ``users`` collection removes all documents that"
" match the criteria of ``status`` equal to ``D``."
msgstr ""
"在MongoDB中， :method:`db.collection.update()`  方法修改 :term:`集合` 中现有的 :term:"
"`文档<document>` 。 :method:`db.collection.update()`  方法既可以接收查询条件来决定更"
"新哪些文档，也可以接收一个影响其行为的选项文档，例如使用  ``multi``  选项来更新多个文"
"档。"

#: ../source/core/write-operations-introduction.txt:203
msgid ""
"For more information, see :method:`db.collection.remove()` method and "
":doc:`/tutorial/remove-documents`."
msgstr ""
"请查阅 :method:`db.collection.update()` 及 :ref:`update() Examples <update-method-"
"examples>` 以了解更多信息。"

#: ../source/core/write-operations-introduction.txt:207
msgid "Remove Behavior"
msgstr ""

#: ../source/core/write-operations-introduction.txt:209
msgid ""
"By default, :method:`db.collection.remove()` method removes all documents "
"that match its query. However, the method can accept a flag to limit the "
"delete operation to a single document."
msgstr ""

#: ../source/core/write-operations-introduction.txt:216
msgid "Isolation of Write Operations"
msgstr ""
"如果  :method:`~db.collection.update()`  方法包括  :ref:`upsert: true <upsert-"
"parameter>`  * 并且 *  没有文档匹配该更新操作的查询模块，该更新操作就会创建一个新的文"
"档。 如果存在匹配的文档，使用 :ref:`upsert: true <upsert-parameter>` 的更新操作就会对"
"匹配的文档或者文档集进行修改。"

#: ../source/core/write-operations-introduction.txt:218
msgid ""
"The modification of a single document is always atomic, even if the write "
"operation modifies multiple embedded documents *within* that document. No "
"other operations are atomic."
msgstr ""
"通过指定  :term:`upsert: true <upsert>` ，结果表明：在一个 * 单一的 * 操作中，如果不"
"存在与该更新匹配的文档， 将会执行一个插入操作。 请查阅 :method:`~db.collection."
"update()` 以了解更多关于 :ref:`upsert <upsert-parameter>` 操作的细节。"

#: ../source/core/write-operations-introduction.txt:222
msgid ""
"If a write operation modifies multiple documents, the operation as a whole "
"is not atomic, and other operations may interleave. You can, however, "
"attempt to isolate a write operation that affects multiple documents using "
"the :doc:`isolation operator </reference/operator/update/isolated>`."
msgstr ""
"在2.6版本中，新的  :method:`Bulk()`  方法以及基础的 :dbcommand:`update` 命令将会允许"
"您在一个单一的调用中使用 ``upsert: true``  操作执行多次更新。"

#: ../source/core/write-operations-introduction.txt:228
msgid "For more information :doc:`/core/write-operations-atomicity`."
msgstr ""

#: ../source/core/write-operations-introduction.txt:231
msgid "Additional Methods"
msgstr "附加方法"

#: ../source/core/write-operations-introduction.txt:233
msgid ""
"The :method:`db.collection.save()` method can either update an existing "
"document or insert a document if the document cannot be found by the ``_id``"
" field. See :method:`db.collection.save()` for more information and "
"examples."
msgstr ""
"在不能根据  ``_id``  字段查找到文档的情况下， :method:`db.collection.save()` 方法 既"
"可以更新一个现有文档，又可以插入一个新的文档。 请查阅  :method:`db.collection."
"save()`  以了解更多信息及示例。"

#: ../source/core/write-operations-introduction.txt:238
msgid ""
"MongoDB also provides methods to perform write operations in bulk. See "
":method:`Bulk()` for more information."
msgstr ""

#: ../source/core/write-operations-introduction.txt:1
#: ../source/core/write-operations-introduction.txt:2
msgid "write operations"
msgstr ""

#: ../source/core/write-operations-introduction.txt:2
msgid "crud"
msgstr ""
