.. meta::
   :robots: nosnippet

========================
File Metadata Attributes
========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Overview
--------

You can define metadata attributes for each file that you host with
Atlas App Services. Metadata attributes map to standard :mdn:`HTTP headers
<Web/HTTP/Headers>` and allow you to optionally configure how App Services
serves your files as well as how clients that request resources should
handle them. This page provides examples and describes the purpose of
each available attribute.

.. _metadata-content-type:

Content-Type
------------

The :mdn:`Content-Type <Web/HTTP/Headers/Content-Type>` file attribute
indicates the :wikipedia:`media type <Media_type>` of the file.

.. note::

   If you do not specify a ``Content-Type`` attribute for a file, App Services
   will attempt to automatically add a ``Content-Type`` attribute to it
   based on the file extension.

   For example, App Services would automatically add the attribute
   ``Content-Type: application/html`` to the file ``myPage.html``.

Examples
~~~~~~~~

Indicate that a File Contains HTML
``````````````````````````````````

.. code-block:: none

   Content-Type: application/html

.. _metadata-content-disposition:

Content-Disposition
-------------------

The :mdn:`Content-Disposition <Web/HTTP/Headers/Content-Disposition>`
file attribute indicates to client applications (such as your web
browser) whether the file should be downloaded as an attachment or
displayed inline as a web page.

Examples
~~~~~~~~

Display the File Inline
```````````````````````

.. code-block:: none

   Content-Disposition: inline

Download the File
`````````````````

.. code-block:: none

   Content-Disposition: attachment

Download the File with a Custom Filename
````````````````````````````````````````

.. code-block:: none

   Content-Disposition: attachment; filename="myFile.txt"

.. _metadata-content-encoding:

Content-Encoding
----------------

The :mdn:`Content-Encoding <Web/HTTP/Headers/Content-Encoding>` file
attribute indicates any encodings that were applied to the file. Client
applications can use this header to determine how to properly decode the
file.

Examples
~~~~~~~~

Indicate No Encoding
````````````````````

.. code-block:: none

   Content-Encoding: identity

Indicate GZIP Encoding
``````````````````````

.. code-block:: none

   Content-Encoding: gzip

Indicate Multiple Encodings in Application Order
````````````````````````````````````````````````

.. code-block:: none

   Content-Encoding: gzip, identity

.. _metadata-content-language:

Content-Language
----------------

The :mdn:`Content-Language <Web/HTTP/Headers/Content-Language>` file
attribute optionally specifies the language used by the file's intended
target audience. This attribute does not necessarily represent the
language that file is actually written in.

Examples
~~~~~~~~

Specify a Single Language
`````````````````````````

.. code-block:: none

   Content-Language: en-US

Specify Multiple Languages
``````````````````````````

.. code-block:: none

   Content-Language: en-US, en-CA, en-UK

.. _metadata-cache-control:

Cache-Control
-------------

The :mdn:`Cache-Control <Web/HTTP/Headers/Cache-Control>` file attribute
instructs CDN servers on how they should handle cached copies of the
file.

Examples
~~~~~~~~

Refresh a Cached File Every Five Minutes
````````````````````````````````````````

.. code-block:: none

   Cache-Control: max-age=300

Never Cache a File
``````````````````

.. code-block:: none

   Cache-Control: no-cache

.. _metadata-website-redirect-location:

Website-Redirect-Location
-------------------------

The ``Website-Redirect-Location`` file redirects requests to the
specified destination.

Examples
~~~~~~~~

Redirect Requests to a Different File
`````````````````````````````````````

.. code-block:: none

   Website-Redirect-Location: https://example.com/file/redirectedFile.txt
