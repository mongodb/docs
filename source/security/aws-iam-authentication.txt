.. _set-up-pwdless-auth:

==================================
Set Up Authentication with AWS IAM
==================================

.. default-domain:: mongodb

.. meta::
   :keywords: passwordless auth, passwordless, saml, federated identity management, iam roles

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

You can set up a database user to use an |aws| |iam| User or Role
:abbr:`ARN (Amazon Resource Name)` for authentication. You can connect
to your database using {+mongosh+} and drivers and authenticate using
your |aws| |iam| User or Role ARN. Using |aws| |iam| reduces the number
of authentication mechanisms and number of secrets to manage. The secret
key that you use for authentication is not sent over the wire to
|service| and is not persisted by the driver.
  
.. _passwordless-auth-aws-no-saml:

Set Up Authentication with AWS IAM Roles
----------------------------------------

.. note::

   You can't setup authentication for |aws| IAM principals when |ldap|
   authorization is enabled. 

   If you require authentication for an AWS IAM principal, consider
   moving the {+clusters+} that you want to access with |aws| IAM
   authentication into another project where |ldap| authorization is
   disabled.    

You can set up |aws| |iam| Roles to authenticate |aws| compute types to
your |service| {+clusters+}.  

For |aws| Lambda and HTTP (ECS and EC2), drivers automatically read 
from the :spec:`environment variables </auth/auth.rst#obtaining-credentials>`. 
For |aws| EKS, you must manually assign the |iam| role. This page 
describes how |aws| Lambda, |aws| :abbr:`ECS (Elastic Container 
Service)`, and |aws| :abbr:`EKS (Elastic Kubernetes Service)` can 
connect using an |aws| |iam| role.

.. note::

   You must assign an |iam| role to Lambda, EC2, ECS, or EKS in the 
   |aws| console.

.. tabs:: 

   .. tab:: AWS Lambda 
      :tabid: aws-lambda

      |aws| Lambda passes information to functions through the following 
      environment variables if you :aws:`assign an execution role
      </lambda/latest/dg/lambda-intro-execution-role.html>` to the
      lambda function. 

      - ``AWS_ACCESS_KEY_ID``
      - ``AWS_SECRET_ACCESS_KEY``
      - ``AWS_SESSION_TOKEN``

      .. note:: 

         You don't need to manually create these environment variables when
         you use an :aws:`execution role
         </lambda/latest/dg/lambda-intro-execution-role.html>` in your
         function.

      To learn more about these environment variables, see :aws:`Using AWS Lambda 
      environment variables </lambda/latest/dg/configuration-envvars.html>`.

   .. tab:: AWS ECS 
      :tabid: aws-ecs

      |aws| :abbr:`ECS (Elastic Container Service)` gets the credentials from 
      the following URI: 

      .. code-block:: shell 
         :copyable: false 

         http://169.254.170.2 + AWS_CONTAINER_CREDENTIALS_RELATIVE_URI

      ``AWS_CONTAINER_CREDENTIALS_RELATIVE_URI`` is an environment variable. 
      To learn more, see :aws:`IAM Roles for Tasks
      </AmazonECS/latest/developerguide/task-iam-roles.html>`. 

      |aws| EC2 gets the credentials from Instance Metadata Service V2 at the 
      following |url|: 

      .. code-block:: shell 
         :copyable: false

         http://169.254.169.254/latest/meta-data/iam/security-credentials/

      To learn more, see :aws:`Launch an instance with an IAM role
      </AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html#attach-iam-role>`. 

   .. tab:: AWS ECS Fargate
      :tabid: aws-ecs-fargate

      To learn how to configure an AWS IAM role for authentication with 
      |aws| ECS Fargate, see the :aws:`AWS documentation 
      </AmazonECS/latest/developerguide/task_execution_IAM_role.html>`.

   .. tab:: AWS EKS 
      :tabid: aws eks

      For |aws| :abbr:`EKS (Elastic Kubernetes Service)`, you must first
      assign the |iam| role to your pod to set up the following environment 
      variables in that pod:

      - ``AWS_WEB_IDENTITY_TOKEN_FILE`` - contains the path to the web 
        identity token file.
      - ``AWS_ROLE_ARN`` - contains the |iam| role used to connect to
        your {+database-deployment+}. 

      For information on assigning an |iam| role to your pod, see the 
      :aws:`AWS documentation
      </eks/latest/userguide/specify-service-account-role.html>`.

      After you assign the |iam| role to your pod, you must manually
      assume the |iam| role to connect to your {+database-deployment+}.

      To assume the role manually: 

      1. Use the |aws| :aws-docs:`SDK <AWSJavaScriptSDK/latest/>` to 
         call :aws-docs:`AssumeRoleWithWebIdentity <STS/latest/APIReference/API_AssumeRoleWithWebIdentity.html>`.

         .. tip::

            - Omit the ``ProviderID`` parameter.
            - Find the value of the ``WebIdentityToken`` parameter in the file
              described in your pod's ``AWS_WEB_IDENTITY_TOKEN_FILE`` 
              environment variable.

      #. Pass the credentials that you received in the previous step to the
         MongoDB driver. See your :driver:`driver's documentation </>` for 
         details.

Grant Database Access to AWS IAM Roles 
--------------------------------------

To grant database access to the |aws| |iam| role, complete the steps
described in the :ref:`mongodb-users` section for |aws| |iam|. For
more information on granting database access using {+atlas-cli+},
{+atlas-admin-api+}, or {+atlas-ui+}, see :ref:`add-mongodb-users`. 

Connect to |service| {+Cluster+} Using AWS IAM
----------------------------------------------

To connect to |service| with your |aws| |iam| credentials using
{+mongosh+}, provide :ref:`a connection string that specifies the
MONGODB-AWS authentication mechanism
<connections-string-example-mongodb-aws>`. This connection string
format applies to all AWS IAM authentication mechanisms. 

.. important::

   You must configure authentication using one of the
   methods described in the :ref:`passwordless-auth-aws-no-saml` before
   you can use this connection string format.

.. include:: /includes/aws-iam-connection-string-example.rst

.. seealso:: 

   :aws-docs:`IAM roles for service accounts <eks/latest/userguide/iam-roles-for-service-accounts.html>`
