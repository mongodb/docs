.. _mongoimport:

===============
``mongoimport``
===============

.. default-domain:: mongodb
.. |tool-binary| replace:: mongoimport

Synopsis
--------

The :program:`mongoimport` tool provides a route to import content from a
JSON, CSV, or TSV export created by :program:`mongoexport`, or
potentially, another third-party export tool. See the
:doc:`/core/import-export` document for a more in depth
usage overview, and the :doc:`mongoexport` document for more
information regarding :program:`mongoexport`, which
provides the inverse "importing" capability.

.. note::

   Do not use :program:`mongoimport` and :program:`mongoexport` for
   full instance, production backups because they will not reliably capture data type
   information. Use :program:`mongodump` and :program:`mongorestore` as
   described in :doc:`/core/backups` for this kind of
   functionality.

Options
-------

.. binary:: mongoimport

.. program:: mongoimport

.. include:: /includes/options-mongoimport.rst

Usage
-----

In this example, :program:`mongoimport` imports the :term:`csv`
formatted data in the ``/opt/backups/contacts.csv`` into the
collection ``contacts`` in the ``users`` database on the MongoDB
instance running on the localhost port numbered ``27017``.

.. code-block:: sh

   mongoimport --db users --collection contacts --type csv --file /opt/backups/contacts.csv

In the following example, :program:`mongoimport` imports the data in
the :term:`JSON` formatted file ``contacts.json`` into the collection
``contacts`` on the MongoDB instance running on the localhost port
number 27017. Journaling is explicitly enabled.

.. code-block:: sh

   mongoimport --collection contacts --file contacts.json

In the next example, :program:`mongoimport` takes data passed to it on
standard input (i.e. with a ``|`` pipe.)  and imports it into the
collection ``contacts`` in the ``sales`` database is the
MongoDB datafiles located at ``/srv/mongodb/``. if the import process
encounters an error, the :program:`mongoimport` will halt because of
the :option:`--stopOnError <mongoimport --stopOnError>` option.

.. code-block:: sh

   mongoimport --db sales --collection contacts --stopOnError --dbpath /srv/mongodb/

In the final example, :program:`mongoimport` imports data from the
file ``/opt/backups/mdb1-examplenet.json`` into the collection
``contacts`` within the database ``marketing`` on a remote MongoDB
database. This :program:`mongoimport` accesses the :program:`mongod`
instance running on the host ``mongodb1.example.net`` over port
``37017``, which requires the username ``user`` and the password
``pass``.

.. code-block:: sh

   mongoimport --host mongodb1.example.net --port 37017 --username user --password pass --collection contacts --db marketing --file /opt/backups/mdb1-examplenet.json
