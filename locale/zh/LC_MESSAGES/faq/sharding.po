#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/faq/sharding.txt:3
msgid "FAQ: Sharding with MongoDB"
msgstr "FAQ：MongoDB 分片"

#: ../source/faq/sharding.txt:13
msgid ""
"This document answers common questions about horizontal scaling using "
"MongoDB's :term:`sharding`."
msgstr ""
"这篇文档回答了关于使用MongoDB :term:`分片` 水平扩展的常见问题。 "

#: ../source/faq/sharding.txt:16
msgid ""
"If you don't find the answer you're looking for, check the :doc:`complete "
"list of FAQs </faq>` or post your question to the `MongoDB User Mailing List"
" <https://groups.google.com/forum/?fromgroups#!forum/mongodb-user>`_."
msgstr ""
"如果你在这里没有找到你寻找的答案， 请检查 :doc:`常见 "
"问题列表 </faq>` 或发布你的问题到 `MongoDB 用户邮件列表"
" <https://groups.google.com/forum/?fromgroups#!forum/mongodb-user>`_."

#: ../source/faq/sharding.txt:21
msgid "Is sharding appropriate for a new deployment?"
msgstr "分片适用于新的部署吗？"

#: ../source/faq/sharding.txt:23
msgid "Sometimes."
msgstr "有时适用。"

#: ../source/faq/sharding.txt:25
msgid ""
"If your data set fits on a single server, you should begin with an unsharded"
" deployment."
msgstr ""
"如果你的数据集适合在单一的服务器上部署，你应该以一个无分片的方式开始部署。"

#: ../source/faq/sharding.txt:28
msgid ""
"Converting an unsharded database to a :term:`sharded cluster` is easy and "
"seamless, so there is *little advantage* in configuring sharding while your "
"data set is small."
msgstr ""
"从一个无分片的数据库转换到 :term:`分片集群` 是简单并且无缝的。所以在你的数据"
"集比较小情况下配置分片只有微弱的优势。"

#: ../source/faq/sharding.txt:32
msgid ""
"Still, all production deployments should use :term:`replica sets "
"<replication>` to provide high availability and disaster recovery."
msgstr ""
"尽管如此，所有的生产环境部署都应当使用 :term:`复制集 <replication>` "
"来提供高可用性和灾难恢复。"

#: ../source/faq/sharding.txt:36
msgid "How does sharding work with replication?"
msgstr "分片是如何与复制一起工作的？"

#: ../source/faq/sharding.txt:38
msgid ""
"To use replication with sharding, deploy each :term:`shard` as a "
":term:`replica set`."
msgstr ""
"若分片和复制一同使用，则在每个 :term:`分片` 上部署 :term:`副本集` 。"

#: ../source/faq/sharding.txt:44
msgid "Can I change the shard key after sharding a collection?"
msgstr "我可以在一个集合分片后更改片键吗？"

#: ../source/faq/sharding.txt:46
msgid "No."
msgstr "不可以。"

#: ../source/faq/sharding.txt:48
msgid ""
"There is no automatic support in MongoDB for changing a shard key after "
"sharding a collection. This reality underscores the importance of choosing a"
" good :ref:`shard key <shard-key>`. If you *must* change a shard key after "
"sharding a collection, the best option is to:"
msgstr ""
"在MongoDB中，目前不自动支持集合分片后修改片键。这个事实凸显了选择一个好的"
" :ref:`片键 <shard-key>` 的重要性。如果你  *一定要* 在集合分片后更改片键，"
"最好的办法是："

#: ../source/faq/sharding.txt:53
msgid "dump all data from MongoDB into an external format."
msgstr "从MongoDB中导出所有的数据到外部存储格式。"

#: ../source/faq/sharding.txt:55
msgid "drop the original sharded collection."
msgstr "删除原始的分片集合。"

#: ../source/faq/sharding.txt:57
msgid "configure sharding using a more ideal shard key."
msgstr "使用更理想的片键配置分片。"

#: ../source/faq/sharding.txt:59
msgid ""
":doc:`pre-split </tutorial/create-chunks-in-sharded-cluster>` the shard key "
"range to ensure initial even distribution."
msgstr ""
":doc:`预分裂 </tutorial/create-chunks-in-sharded-cluster>` 片键区间以确保"
"初始均匀分布。"

#: ../source/faq/sharding.txt:62
msgid "restore the dumped data into MongoDB."
msgstr "还原转储的数据到MongoDB。"

#: ../source/faq/sharding.txt:64
msgid ""
"See :dbcommand:`shardCollection`, :method:`sh.shardCollection()`, the "
":ref:`Shard Key <sharding-internals-shard-keys>`, :doc:`/tutorial/deploy-"
"shard-cluster`, and :issue:`SERVER-4000` for more information."
msgstr ""
"See :dbcommand:`shardCollection`, :method:`sh.shardCollection()`, the "
":ref:`Shard Key <sharding-internals-shard-keys>`, :doc:`/tutorial/deploy-"
"shard-cluster`, and :issue:`SERVER-4000` 以获得更多信息."

#: ../source/faq/sharding.txt:70
msgid "What happens to unsharded collections in sharded databases?"
msgstr "非共享集合在分片数据库中会发生什么？"

#: ../source/faq/sharding.txt:72
msgid ""
"In the current implementation, all databases in a :term:`sharded cluster` "
"have a \"primary :term:`shard`.\" All unsharded collection within that "
"database will reside on the same shard."
msgstr ""
"在当前的实现方法中，所有 :term:`分片集合` 中的数据库都有一个\"主分片 :term:`shard`。\""
"该数据库中所有的非共享集合将驻留在相同的分片中。"

#: ../source/faq/sharding.txt:77
msgid "How does MongoDB distribute data across shards?"
msgstr "MongoDB如何通过分片来分布数据？"

#: ../source/faq/sharding.txt:79
msgid ""
"Sharding must be specifically enabled on a collection. After enabling "
"sharding on the collection, MongoDB will assign various ranges of collection"
" data to the different shards in the cluster. The cluster automatically "
"corrects imbalances between shards by migrating ranges of data from one "
"shard to another."
msgstr ""
"分片必须明确的在集合上启用。在一个集合上启用分片之后，MongoDB将分配不同范围中"
"的集合数据到集合中不同的分片上。分片集自动通过数据迁移范围调整分片之间的不"
"平衡的数据，从一个分片到其他的分片。"

#: ../source/faq/sharding.txt:86
msgid ""
"What happens if a client updates a document in a chunk during a migration?"
msgstr ""
"如果客户端在数据块迁移的过程中更新文档会发生什么？"

#: ../source/faq/sharding.txt:88
msgid ""
"The :program:`mongos` routes the operation to the \"old\" shard, where it "
"will succeed immediately. Then the :term:`shard` :program:`mongod` instances"
" will replicate the modification to the \"new\" shard before the "
":term:`sharded cluster` updates that chunk's \"ownership,\" which "
"effectively finalizes the migration process."
msgstr ""
":program:`mongos` 将这个操作分发到 \"旧的\" 分片，在那个分片上它会立即成功完成。"
"然后在:term:`分片集` 更新那个数据块的 \"所有权\" ，即有效的完成迁移过程之前，" 
":term:`分片` :program:`mongod` 实例会复制这个更改到 \"新的\" 分片"

#: ../source/faq/sharding.txt:95
msgid "What happens to queries if a shard is inaccessible or slow?"
msgstr "如果在一个分片很慢或者无法访问时查询，会发生什么？"

#: ../source/faq/sharding.txt:97
msgid ""
"If a :term:`shard` is inaccessible or unavailable, queries will return with "
"an error."
msgstr ""
"如果 :term:`分片` 无法访问或者不可用，查询将会返回一个错误信息。"

#: ../source/faq/sharding.txt:100
msgid ""
"However, a client may set the ``partial`` query bit, which will then return "
"results from all available shards, regardless of whether a given shard is "
"unavailable."
msgstr ""
"然而，客户端可以设定 ``partial`` 查询位，它会从所有的有效分片返回结果，无论"
"给定的分片是否可用。"

#: ../source/faq/sharding.txt:104
msgid ""
"If a shard is responding slowly, :program:`mongos` will merely wait for the "
"shard to return results."
msgstr ""
"如果分片响应过慢， :program:`mongos` 将仅会等待这个分片返回结果。"

#: ../source/faq/sharding.txt:108
msgid "How does MongoDB distribute queries among shards?"
msgstr "MongoDB是如何在分片间分配查询的？"

#: ../source/faq/sharding.txt:110
msgid ""
"The exact method for distributing queries to :term:`shards <shard>` in a "
":term:`cluster <sharded cluster>` depends on the nature of the query and the"
" configuration of the sharded cluster. Consider a sharded collection, using "
"the :term:`shard key` ``user_id``, that has ``last_login`` and ``email`` "
"attributes:"
msgstr ""
"在:term:`分片集 <sharded cluster>` 中的 :term:`分片 <shard>` 分布查询的确切方"
"法依赖于查询的性质和分片集的配置。考虑这样的一个分片集合，使用 :term:`片键` "
" ``user_id``, 它具有 ``last_login`` and ``email`` 属性："

#: ../source/faq/sharding.txt:116
msgid "For a query that selects one or more values for the ``user_id`` key:"
msgstr "通过 ``user_id`` 键查询选择一个或多个值："

#: ../source/faq/sharding.txt:119
msgid ""
":program:`mongos` determines which shard or shards contains the relevant "
"data, based on the cluster metadata, and directs a query to the required "
"shard or shards, and returns those results to the client."
msgstr ""
":program:`mongos` 基于分片集的元数据确定在哪个分片或包含相关数据的分片组，直接"
"引导至需要的分片或分片组中查询，并将这些结果返回到客户端。"

#: ../source/faq/sharding.txt:124
msgid "For a query that selects ``user_id`` and also performs a sort:"
msgstr "对于一个选择了 ``user_id`` 并且对其执行排序的查询："

#: ../source/faq/sharding.txt:126
msgid ""
":program:`mongos` can make a straightforward translation of this operation "
"into a number of queries against the relevant shards, ordered by "
"``user_id``. When the sorted queries return from all shards, the "
":program:`mongos` merges the sorted results and returns the complete result "
"to the client."
msgstr ""
":program:`mongos` 能将这个操作简单翻译成许多针对相关分片的按``user_id``排序"
"的查询。当这个排序查询从所有的分片返回，:program:`mongos` 合并这些排序结果"
"并返回完整的结果到客户端。"

#: ../source/faq/sharding.txt:132
msgid "For queries that select on ``last_login``:"
msgstr "对于在 ``last_login`` 上选择查询："

#: ../source/faq/sharding.txt:134
msgid ""
"These queries must run on all shards: :program:`mongos` must parallelize the"
" query over the shards and perform a merge-sort on the ``email`` of the "
"documents found."
msgstr ""
"这些查询必须在所有的分片上运行： :program:`mongos` 必须在分片上并行执行这个查询"
"并在找到的文档中的 ``email`` 运行合并-排序。"

#: ../source/faq/sharding.txt:139
msgid "How does MongoDB sort queries in sharded environments?"
msgstr "MongoDB在分片环境中查询如何排序？"

#: ../source/faq/sharding.txt:141
msgid ""
"If you call the :method:`cursor.sort()` method on a query in a sharded "
"environment, the :program:`mongod` for each shard will sort its results, and"
" the :program:`mongos` merges each shard's results before returning them to "
"the client."
msgstr ""
"如果你在一个分片环境查询中调用 :method:`cursor.sort()` 方法，每一个分片上的"
" :program:`mongod` 都会把结果排序，并且在结果返回客户端之前， :program:`mongos` "
"会合并每一个分片上的结果。"

#: ../source/faq/sharding.txt:147
msgid ""
"How does MongoDB ensure unique ``_id`` field values when using a shard key "
"*other* than ``_id``?"
msgstr ""
"MongoDB 在使用非 ``_id``键作为片键时如何确保 ``_id`` 键的值是唯一的？"

#: ../source/faq/sharding.txt:149
msgid ""
"If you do not use ``_id`` as the shard key, then your application/client "
"layer must be responsible for keeping the ``_id`` field unique. It is "
"problematic for collections to have duplicate ``_id`` values."
msgstr ""
"如果你不使用 ``_id`` 键作为片键，你的 应用程序/客户端 层必须确保  ``_id`` "
"字段的唯一性。这是集合的 ``_id`` 字段有重复的值的问题。"


#: ../source/faq/sharding.txt:160

msgid ""
"I've enabled sharding and added a second shard, but all the data is still on"
" one server. Why?"
msgstr ""
"我已经启用了分片并且添加了第二个分片，但是所有的数据仍然在一个服务器上，为什么？"

#: ../source/faq/sharding.txt:162
msgid ""
"First, ensure that you've declared a :term:`shard key` for your collection. "
"Until you have configured the shard key, MongoDB will not create "
":term:`chunks <chunk>`, and :term:`sharding` will not occur."
msgstr ""
"首先，确保你已经在你的集合中声明了一个 :term:`片键` 。MongoDB不会创建:term:`数据块 <chunk>`"
"， :term:`分片` 也不会发生，直到你配置了这个片键。"

#: ../source/faq/sharding.txt:166
msgid ""
"Next, keep in mind that the default chunk size is 64 MB. As a result, in "
"most situations, the collection needs to have at least 64 MB of data before "
"a migration will occur."
msgstr ""
"接下来，请记住默认的数据块大小为 64 MB。因此，在大多数情况下，集合在发生迁移"
"前至少需要有 64 MB的数据。"

#: ../source/faq/sharding.txt:170
msgid ""
"Additionally, the system which balances chunks among the servers attempts to"
" avoid superfluous migrations. Depending on the number of shards, your shard"
" key, and the amount of data, systems often require at least 10 chunks of "
"data to trigger migrations."
msgstr ""
"此外，在服务器之间的平衡数据块系统会尝试避免多余的迁移。根据分片的数量，片键"
"和数据量，系统通常需要至少10个数据块来触发迁移。"

#: ../source/faq/sharding.txt:175
msgid ""
"You can run :method:`db.printShardingStatus()` to see all the chunks present"
" in your cluster."
msgstr ""
"你可以运行 :method:`db.printShardingStatus()` 来查看你当前集群中的所有数据块。"

#: ../source/faq/sharding.txt:179
msgid "Is it safe to remove old files in the ``moveChunk`` directory?"
msgstr "删除 ``moveChunk`` 目录中的旧文件安全吗？"

#: ../source/faq/sharding.txt:181
msgid ""
"Yes. :program:`mongod` creates these files as backups during normal "
":term:`shard` balancing operations. If some error occurs during a "
":doc:`migration </core/sharding-chunk-migration>`, these files may be "
"helpful in recovering documents affected during the migration."
msgstr ""
"是的。 :program:`mongod` 在:term:`分片` 平衡操作的过程中，创建这些文"
"件作为备份。"

#: ../source/faq/sharding.txt:186
msgid ""
"Once the migration has completed successfully and there is no need to "
"recover documents from these files, you may safely delete these files. Or, "
"if you have an existing backup of the database that you can use for "
"recovery, you may also delete these files after migration."
msgstr ""

#: ../source/faq/sharding.txt:191
msgid ""
"To determine if all migrations are complete, run "
":method:`sh.isBalancerRunning()` while connected to a :program:`mongos` "
"instance."
msgstr ""

#: ../source/faq/sharding.txt:196
msgid "How does ``mongos`` use connections?"
msgstr "``mongos`` 如何使用连接？"

#: ../source/faq/sharding.txt:198
msgid ""
"Each client maintains a connection to a :program:`mongos` instance. Each "
":program:`mongos` instance maintains a pool of connections to the members of"
" a replica set supporting the sharded cluster.  Clients use connections "
"between :program:`mongos` and :program:`mongod` instances one at a time. "
"Requests are not multiplexed or pipelined. When client requests complete, "
"the :program:`mongos` returns the connection to the pool."
msgstr ""
"每一个客户端都保持一个到 :program:`mongos` 实例的连接。每一个:program:`mongos` "
"实例都保持一个到支持分片集的复制集的连接池。客户端每次使用一个 :program:`mongos` 实例"
"和 :program:`mongod` 实例之间的连接。请求不采用多路复用和管道。当客户端"
"请求完毕， :program:`mongos` 将连接返回到连接池中。"

#: ../source/faq/sharding.txt:206
msgid ""
"See the :ref:`System Resource Utilization <system-resource-utilization>` "
"section of the :doc:`/reference/ulimit` document."
msgstr ""
"参见: :ref:`System Resource Utilization <system-resource-utilization>` "
"部分于 :doc:`/reference/ulimit` 文档中。"

#: ../source/faq/sharding.txt:211
msgid "Why does ``mongos`` hold connections open?"
msgstr "为什么 ``mongos`` 保持连接打开？"

#: ../source/faq/sharding.txt:213
msgid ""
":program:`mongos` uses a set of connection pools to communicate with each "
":term:`shard`.  These pools do not shrink when the number of clients "
"decreases."
msgstr ""
":program:`mongos` 使用一组连接池与每个:term:`分片`通信。这些连接池在客户端"
"连接数量减少的情况下不会减少。"

#: ../source/faq/sharding.txt:217
msgid ""
"This can lead to an unused :program:`mongos` with a large number of open "
"connections. If the :program:`mongos` is no longer in use, it is safe to "
"restart the process to close existing connections."
msgstr ""
"这可能会导致一个 :program:`mongos` 未使用却保持大量的打开连接。如果"
":program:`mongos` 不再使用，重新启动进程来关闭现存的连接是安全的。"

#: ../source/faq/sharding.txt:222
msgid "Where does MongoDB report on connections used by ``mongos``?"
msgstr "MongoDB 在哪报告 ``mongos`` 使用的连接？"

#: ../source/faq/sharding.txt:224
msgid ""
"Connect to the :program:`mongos` with the :program:`mongo` shell, and run "
"the following command:"
msgstr "使用 :program:`mongo` 命令行连接到 :program:`mongos` ，运行命令："

#: ../source/faq/sharding.txt:234
msgid "What does ``writebacklisten`` in the log mean?"
msgstr "``writebacklisten`` 在日志中意味着什么？"

#: ../source/faq/sharding.txt:236
msgid ""
"The writeback listener is a process that opens a long poll to relay writes "
"back from a :program:`mongod` or :program:`mongos` after migrations to make "
"sure they have not gone to the wrong server.  The writeback listener sends "
"writes back to the correct server if necessary."
msgstr ""
"在数据迁移之后，确认数据没有发送到错误的服务器， :program:`mongod` 或者 :program:`mongos` "
"会转发回写，回写监听器就是为之打开一个长轮询进程。如果有必要，回写监听器会发送"
"一个回写到正确的服务器。"

#: ../source/faq/sharding.txt:242
msgid ""
"These messages are a key part of the sharding infrastructure and should not "
"cause concern."
msgstr ""
"这些消息是分片基本架构的关键部分，不会造成顾虑。"

#: ../source/faq/sharding.txt:246
msgid "How should administrators deal with failed migrations?"
msgstr "管理员应如何处理失败的迁移？"

#: ../source/faq/sharding.txt:248
msgid ""
"Failed migrations require no administrative intervention. Chunk migrations "
"always preserve a consistent state. If a migration fails to complete for "
"some reason, the :term:`cluster` retries the operation. When the migration "
"completes successfully, the data resides only on the new shard."
msgstr ""
"失败的迁移不需要管理的干预。数据块迁移总是保持一致性状态。如果因为某些原因"
"导致迁移失败， :term:`集群` 会重试这个操作。当迁移完全成功，数据只在新的分"
"片上保留。"

#: ../source/faq/sharding.txt:255
msgid ""
"What is the process for moving, renaming, or changing the number of config "
"servers?"
msgstr ""
"移动，重命名，或者改变配置服务器的数目的流程是什么？"

#: ../source/faq/sharding.txt:257
msgid ""
"See :doc:`/administration/sharded-clusters` for information on migrating and"
" replacing config servers."
msgstr ""
"参见 :doc:`/administration/sharded-clusters` 获得迁移和更换配置服务器的信息。"

#: ../source/faq/sharding.txt:261
msgid "When do the ``mongos`` servers detect config server changes?"
msgstr "什么时候 ``mongos`` 服务器能监测到配置服务器的更改？"

#: ../source/faq/sharding.txt:263
msgid ""
":program:`mongos` instances maintain a cache of the :term:`config database` "
"that holds the metadata for the :term:`sharded cluster`. This metadata "
"includes the mapping of :term:`chunks <chunk>` to :term:`shards <shard>`."
msgstr ""
":program:`mongos` 实例维持一个 :term:`config database` 的缓存，它包含了 :term:`分片集`"
"的元数据。这个元数据包括 :term:`数据块 <chunk>` 到 :term:`分片 <shard>`"
"的映射。"

#: ../source/faq/sharding.txt:268
msgid ""
":program:`mongos` updates its cache lazily by issuing a request to a shard "
"and discovering that its metadata is out of date.  There is no way to "
"control this behavior from the client, but you can run the "
":dbcommand:`flushRouterConfig` command against any :program:`mongos` to "
"force it to refresh its cache."
msgstr ""
"当请求发送到一个分片并且发现它的元数据过时了，:program:`mongos` 懒惰的"
"（lazily）更新它的缓存。没有方法从客户端控制这个行为，但是你可以执行"
":dbcommand:`flushRouterConfig` 命令对任何 :program:`mongos` 使用以强制它 "
"刷新它的缓存。"

#: ../source/faq/sharding.txt:275
msgid ""
"Is it possible to quickly update ``mongos`` servers after updating a replica"
" set configuration?"
msgstr ""
"更新复制集配置之后有没有可能快速的更新 ``mongos`` 服务器？"

#: ../source/faq/sharding.txt:277
msgid ""
"The :program:`mongos` instances will detect these changes without "
"intervention over time. However, if you want to force the :program:`mongos` "
"to reload its configuration, run the :dbcommand:`flushRouterConfig` command "
"against to each :program:`mongos` directly."
msgstr ""
"随着时间推移，:program:`mongos` 实例会检测这些变化而无需干预，然而，如果你想"
"强制 :program:`mongos` 重新加载它的配置，在每个 :program:`mongos` 上直接运行"
":dbcommand:`flushRouterConfig` 命令。"

#: ../source/faq/sharding.txt:284
msgid "What does the ``maxConns`` setting on ``mongos`` do?"
msgstr "``mongos`` 的 ``maxConns`` 设置是做什么的？"

#: ../source/faq/sharding.txt:286
msgid ""
"The :setting:`~net.maxIncomingConnections` option limits the number of "
"connections accepted by :program:`mongos`."
msgstr ""
":setting:`~net.maxIncomingConnections` 选项限制 :program:`mongos`接受"
"连接的数量。"

#: ../source/includes/fact-maxconns-mongos.rst:1
msgid ""
"This is particularly useful for a :program:`mongos` if you have a client "
"that creates multiple connections and allows them to timeout rather than "
"closing them."
msgstr ""

#: ../source/includes/fact-maxconns-mongos.rst:5
msgid ""
"In this case, set :setting:`~net.maxIncomingConnections` to a value slightly"
" higher than the maximum number of connections that the client creates, or "
"the maximum size of the connection pool."
msgstr ""
"如果你的客户端驱动或应用程序建立了大量的连接，不是显示关闭而是允许他们超时，"
"这时限制 :program:`mongos` 层的连接数量将变得有意义。"

#: ../source/includes/fact-maxconns-mongos.rst:9
msgid ""
"This setting prevents the :program:`mongos` from causing connection spikes "
"on the individual :term:`shards <shard>`. Spikes like these may disrupt the "
"operation and memory allocation of the :term:`sharded cluster`."
msgstr ""
"将:setting:`~net.maxIncomingConnections` 设置为一个略高于客户端创建的最大数量"
"或者连接池的最大数量。这个设置可以防止 :program:`mongos` 造成个别 :term:`分片 <shard>`"
"上的连接尖峰。这些尖峰可能会扰乱:term:`分片集` 的内存分配操作。"

#: ../source/faq/sharding.txt:292
msgid "How do indexes impact queries in sharded systems?"
msgstr "索引在分片系统查询中产生什么影响？"

#: ../source/faq/sharding.txt:294
msgid ""
"If the query does not include the :term:`shard key`, the :program:`mongos` "
"must send the query to all shards as a \"scatter/gather\" operation. Each "
"shard will, in turn, use *either* the shard key index or another more "
"efficient index to fulfill the query."
msgstr ""
"如果查询中没有包含 :term:`片键` ，:program:`mongos` 一定会发送所有的查询到"
"所有的分片，就像\"分散/集中\"操作。每个分片将轮流的使用片键索引或者其他的更"
"高效的索引其中的一种索引方式来实现查询。"

#: ../source/faq/sharding.txt:299
msgid ""
"If the query includes multiple sub-expressions that reference the fields "
"indexed by the shard key *and* the secondary index, the :program:`mongos` "
"can route the queries to a specific shard and the shard will use the index "
"that will allow it to fulfill most efficiently. See `this presentation "
"<http://www.slideshare.net/mongodb/how-queries-work-with-sharding>`_ for "
"more information."
msgstr ""
"如果查询中包含了多个引用片键索引*和*辅助索引的子表达式，:program:`mongos`"
"能够路由这个查询到一个指定的分片，这个分片将使用它并允许它实现最有效的索引。"
" See `这个演示文档 <http://www.slideshare.net/mongodb/how-queries-work-with-sharding>`_ 以 "
"获得更多的信息。"


#: ../source/faq/sharding.txt:307
msgid "Can shard keys be randomly generated?"
msgstr "片键可以随机生成吗？"

#: ../source/faq/sharding.txt:309
msgid ""
":term:`Shard keys <shard key>` can be random. Random keys ensure optimal "
"distribution of data across the cluster."
msgstr ""
":term:`片键 <shard key>` 可以随机生成。随机片键确保跨集群数据最优分布。"

#: ../source/faq/sharding.txt:312
msgid ""
":term:`Sharded clusters <sharded cluster>`, attempt to route queries to "
"*specific* shards when queries include the shard key as a parameter, because"
" these directed queries are more efficient. In many cases, random keys can "
"make it difficult to direct queries to specific shards."
msgstr ""
":term:`分片集 <sharded cluster>` 会尝试发送参数中包含片键的查询到 *指定* 的"
"分片，因为这些定向的查询更加高效。在许多情况下，随机片键很难做到向指定分片"
"定向查询。"

#: ../source/faq/sharding.txt:321
msgid "Can shard keys have a non-uniform distribution of values?"
msgstr "片键可以有非均匀分布的值吗？"

#: ../source/faq/sharding.txt:323
msgid ""
"Yes. There is no requirement that documents be evenly distributed by the "
"shard key."
msgstr ""
"可以。这里对片键均匀的分发文档没有要求。"

#: ../source/faq/sharding.txt:326
msgid ""
"However, documents that have the same shard key *must* reside in the same "
"*chunk* and therefore on the same server. If your sharded data set has too "
"many documents with the exact same shard key you will not be able to "
"distribute *those* documents across your sharded cluster."
msgstr ""
"然而，具有相同片键的文档必须保存在同一个数据块，所以在同一个服务器上。如果你"
"分片后的数据集有太多具有精确的相同片键的文档，你将不能通过分片集分布文档。"

#: ../source/faq/sharding.txt:334
msgid "Can you shard on the ``_id`` field?"
msgstr "你能用 ``_id`` 字段分片吗？"

#: ../source/faq/sharding.txt:336
msgid ""
"You can use any field for the shard key. The ``_id`` field is a common shard"
" key."
msgstr ""
"你可以用任何字段作为片键。 ``_id`` 字段是常用的片键。"

#: ../source/faq/sharding.txt:339
msgid ""
"Be aware that ``ObjectId()`` values, which are the default value of the "
"``_id`` field, increment as a timestamp. As a result, when used as a shard "
"key, all new documents inserted into the collection will initially belong to"
" the same chunk on a single shard. Although the system will eventually "
"divide this chunk and migrate its contents to distribute data more evenly, "
"at any moment the cluster can only direct insert operations at a single "
"shard. This can limit the throughput of inserts. If most of your write "
"operations are updates, this limitation should not impact your performance. "
"However, if you have a high insert volume, this may be a limitation."
msgstr ""
"请注意 ``ObjectId()`` 的值，即``_id``字段的默认值，使用时间戳递增。因此，当它"
"作为片键使用，所有插入到集合中的新文档将在一个单一分片上最初属于同一个数据块。"
"虽然系统将最终等分这些数据块并且迁移其内容来更均匀的分发数据，在任何时刻，集群"
"只能定向一个插入操作到单一的分片。这会限制插入操作的吞吐量。如果你的大部分写操作"
"是更新操作，这些限制将不会影响你的性能。然而，如果你插入操作数量很高，这可能是"
"一个局限。"

#: ../source/faq/sharding.txt:350
msgid ""
"To address this issue, MongoDB 2.4 provides :ref:`hashed shard keys "
"<sharding-hashed-sharding>`."
msgstr ""
"为了解决这个问题，MongoDB 2.4 提供了 :ref:`哈希片键 "
"<sharding-hashed-sharding>`."

#: ../source/faq/sharding.txt:354
msgid "What do ``moveChunk commit failed`` errors mean?"
msgstr "错误 ``moveChunk commit failed`` 是什么意思？"

#: ../source/faq/sharding.txt:356
msgid ""
"At the end of a :ref:`chunk migration <sharding-chunk-migration>`, the "
":term:`shard` must connect to the :term:`config database` to update the "
"chunk's record in the cluster metadata. If the :term:`shard` fails to "
"connect to the :term:`config database`, MongoDB reports the following error:"
msgstr ""
"在 :ref:`数据块迁移 <sharding-chunk-migration>`结束的时候，:term:`分片` "
"一定会连接到 :term:`配置数据库` 更新数据块在集群元数据中的记录。如果 :term:`分片` "
"连接到 :term:`配置数据库` 失败，MongoDB会报告如下错误："

#: ../source/faq/sharding.txt:367
msgid ""
"When this happens, the :term:`primary` member of the shard's replica set "
"then terminates to protect data consistency. If a :term:`secondary` member "
"can access the config database, data on the shard becomes accessible again "
"after an election."
msgstr ""
"当这种情况发生时，复制集中分片的 :term:`主节点` 终止运行以保护数据的一致性。"
"如果一个 :term:`子节点` 成员能够访问配置数据库，在投票后，分片上的数据能够再"
"次访问。"


#: ../source/faq/sharding.txt:378

msgid ""
"How does draining a shard affect the balancing of uneven chunk distribution?"
msgstr ""
"清空一个分片如何影响不平均的数据块分布的平衡？"

#: ../source/faq/sharding.txt:380
msgid ""
"The sharded cluster balancing process controls both migrating chunks from "
"decommissioned shards (i.e. draining) and normal cluster balancing "
"activities. Consider the following behaviors for different versions of "
"MongoDB in situations where you remove a shard in a cluster with an uneven "
"chunk distribution:"
msgstr ""
"分片集的平衡进程控制，即是从停止使用的分片(即 清空的分片)迁移数据块，也是正常的集群平衡"
"活动。在你从具有不平衡数据块分布的集群中移除了一个分片，请考虑不同版本的MongoDB在这种情"
"况下的行为："

#: ../source/faq/sharding.txt:386
msgid ""
"After MongoDB 2.2, the balancer first removes the chunks from the draining "
"shard and then balances the remaining uneven chunk distribution."
msgstr ""
"MongoDB 2.2 版本以上，平衡器首先从清空的分片移除数据块，然后平衡器平衡剩余的"
"不平衡的数据块分布。"

#: ../source/faq/sharding.txt:390
msgid ""
"Before MongoDB 2.2, the balancer handles the uneven chunk distribution and "
"*then* removes the chunks from the draining shard."
msgstr ""


#: ../source/faq/sharding.txt:0
msgid "On this page"
msgstr ""

#: ../source/faq/sharding.txt:154
msgid ""
"If you're not sharding your collection by the ``_id`` field, then you should"
" be sure to store a globally unique identifier in that field. The default "
":ref:`BSON ObjectId <objectid>` works well in this case."
msgstr ""

#: ../source/faq/sharding.txt:372
msgid ""
"The user will need to resolve the chunk migration failure independently. If "
"you encounter this issue, contact the `MongoDB User Group "
"<http://groups.google.com/group/mongodb-user>`_ or :doc:`MongoDB Support "
"</support>` to address this issue."
msgstr ""

#~ msgid ""
#~ "If you're not sharding your collection by the ``_id`` field, then you should"
#~ " be sure to store a globally unique identifier in that field. The default "
#~ ":doc:`BSON ObjectId </reference/object-id>` works well in this case."
#~ msgstr ""

#~ msgid ""
#~ "The user will need to resolve the chunk migration failure independently. If "
#~ "you encounter this issue, contact the `MongoDB User Group "
#~ "<http://groups.google.com/group/mongodb-user>`_ or :about:`MongoDB Support "
#~ "</support>` to address this issue."
#~ msgstr ""

