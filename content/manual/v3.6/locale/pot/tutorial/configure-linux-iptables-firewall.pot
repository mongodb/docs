# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/configure-linux-iptables-firewall.txt:3
msgid "Configure Linux ``iptables`` Firewall for MongoDB"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:13
msgid "On contemporary Linux systems, the ``iptables`` program provides methods for managing the Linux Kernel's ``netfilter`` or network packet filtering capabilities. These firewall rules make it possible for administrators to control what hosts can connect to the system, and limit risk exposure by limiting the hosts that can connect to a system."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:20
msgid "This document outlines basic firewall configurations for ``iptables`` firewalls on Linux. Use these approaches as a starting point for your larger networking organization. For a detailed overview of security practices and risk management for MongoDB, see :doc:`/security`."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:25
msgid "For MongoDB deployments on Amazon's web services, see the :ecosystem:`Amazon EC2 </platforms/amazon-ec2>` page, which addresses Amazon's Security Groups and other EC2-specific security features."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:30
msgid "Overview"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:32
msgid "Rules in ``iptables`` configurations fall into chains, which describe the process for filtering and processing specific streams of traffic. Chains have an order, and packets must pass through earlier rules in a chain to reach later rules. This document addresses only the following two chains:"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:39
msgid "``INPUT``"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:39
msgid "Controls all incoming traffic."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:42
msgid "``OUTPUT``"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:42
msgid "Controls all outgoing traffic."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:44
msgid "Given the :doc:`default ports </reference/default-mongodb-port>` of all MongoDB processes, you must configure networking rules that permit *only* required communication between your application and the appropriate :binary:`~bin.mongod` and :binary:`~bin.mongos` instances."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:49
msgid "Be aware that, by default, the default policy of ``iptables`` is to allow all connections and traffic unless explicitly disabled. The configuration changes outlined in this document will create rules that explicitly allow traffic from specific addresses and on specific ports, using a default policy that drops all traffic that is not explicitly allowed. When you have properly configured your ``iptables`` rules to allow only the traffic that you want to permit, you can :ref:`iptables-change-default-policy-to-drop`."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:59
msgid "Patterns"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:61
msgid "This section contains a number of patterns and examples for configuring ``iptables`` for use with MongoDB deployments. If you have configured different ports using the :setting:`~net.port` configuration setting, you will need to modify the rules accordingly."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:69
msgid "Traffic to and from ``mongod`` Instances"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:71
msgid "This pattern is applicable to all :binary:`~bin.mongod` instances running as standalone instances or as part of a :term:`replica set`."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:74
msgid "The goal of this pattern is to explicitly allow traffic to the :binary:`~bin.mongod` instance from the application server. In the following examples, replace ``<ip-address>`` with the IP address of the application server:"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:84
msgid "The first rule allows all incoming traffic from ``<ip-address>`` on port ``27017``, which allows the application server to connect to the :binary:`~bin.mongod` instance. The second rule, allows outgoing traffic from the :binary:`~bin.mongod` to reach the application server."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:91
msgid "If you have only one application server, you can replace ``<ip-address>`` with either the IP address itself, such as: ``198.51.100.55``. You can also express this using CIDR notation as ``198.51.100.55/32``. If you want to permit a larger block of possible IP addresses you can allow traffic from a ``/24`` using one of the following specifications for the ``<ip-address>``, as follows:"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:105
msgid "Traffic to and from ``mongos`` Instances"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:107
msgid ":binary:`~bin.mongos` instances provide query routing for :term:`sharded clusters <sharded cluster>`. Clients connect to :binary:`~bin.mongos` instances, which behave from the client's perspective as :binary:`~bin.mongod` instances. In turn, the :binary:`~bin.mongos` connects to all :binary:`~bin.mongod` instances that are components of the sharded cluster."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:114
msgid "Use the same ``iptables`` command to allow traffic to and from these instances as you would from the :binary:`~bin.mongod` instances that are members of the replica set. Take the configuration outlined in the :ref:`iptables-basic-rule-set` section as an example."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:120
msgid "Traffic to and from a MongoDB Config Server"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:122
msgid "Config servers host the :term:`config database` that stores metadata for sharded clusters. Config servers listen for connections on port ``27019``. As a result, add the following ``iptables`` rules to the config server to allow incoming and outgoing connection on port ``27019``, for connection to the other config servers."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:133
msgid "Replace ``<ip-address>`` with the address or address space of *all* the :binary:`~bin.mongod` that provide config servers."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:136
msgid "Additionally, config servers need to allow incoming connections from all of the :binary:`~bin.mongos` instances in the cluster *and* all :binary:`~bin.mongod` instances in the cluster. Add rules that resemble the following:"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:145
msgid "Replace ``<ip-address>`` with the address of the :binary:`~bin.mongos` instances and the shard :binary:`~bin.mongod` instances."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:150
msgid "Traffic to and from a MongoDB Shard Server"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:152
msgid ":ref:`Shard servers <sharding-background>` default to port number ``27018``. You must configure the following ``iptables`` rules to allow traffic to and from each shard:"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:161
msgid "Replace the ``<ip-address>`` specification with the IP address of all :binary:`~bin.mongod`. This allows you to permit incoming and outgoing traffic between all shards including constituent replica set members, to:"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:166
msgid "all :binary:`~bin.mongod` instances in the shard's replica sets."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:168
msgid "all :binary:`~bin.mongod` instances in other shards. [#migrations]_"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:170
msgid "Furthermore, shards need to be able make outgoing connections to:"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:172
msgid "all :binary:`~bin.mongod` instances in the config servers."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:174
msgid "Create a rule that resembles the following, and replace the ``<ip-address>`` with the address of the config servers and the :binary:`~bin.mongos` instances:"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:182
msgid "All shards in a cluster need to be able to communicate with all other shards to facilitate :term:`chunk` and balancing operations."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:187
msgid "Provide Access For Monitoring Systems"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:189
msgid "The :binary:`~bin.mongostat` diagnostic tool, when running with the :option:`--discover <mongostat --discover>` needs to be able to reach all components of a cluster, including the config servers, the shard servers, and the :binary:`~bin.mongos` instances."
msgstr ""

#: ../source/includes/fact-deprecated-http-interface.rst:3
msgid "MongoDB 3.6 removes the deprecated HTTP interface and REST API to MongoDB."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:199
msgid "Change Default Policy to ``DROP``"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:201
msgid "The default policy for ``iptables`` chains is to allow all traffic. After completing all ``iptables`` configuration changes, you *must* change the default policy to ``DROP`` so that all traffic that isn't explicitly allowed as above will not be able to reach components of the MongoDB deployment. Issue the following commands to change this policy:"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:215
msgid "Manage and Maintain ``iptables`` Configuration"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:217
msgid "This section contains a number of basic operations for managing and using ``iptables``. There are various front end tools that automate some aspects of ``iptables`` configuration, but at the core all ``iptables`` front ends provide the same basic functionality:"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:225
msgid "Make all ``iptables`` Rules Persistent"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:227
msgid "By default all ``iptables`` rules are only stored in memory. When your system restarts, your firewall rules will revert to their defaults. When you have tested a rule set and have guaranteed that it effectively controls traffic you can use the following operations to you should make the rule set persistent."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:233
msgid "On Red Hat Enterprise Linux, Fedora Linux, and related distributions you can issue the following command:"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:240
msgid "On Debian, Ubuntu, and related distributions, you can use the following command to dump the ``iptables`` rules to the ``/etc/iptables.conf`` file:"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:248
msgid "Run the following operation to restore the network rules:"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:254
msgid "Place this command in your ``rc.local`` file, or in the ``/etc/network/if-up.d/iptables`` file with other similar operations."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:258
msgid "List all ``iptables`` Rules"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:260
msgid "To list all of currently applied ``iptables`` rules, use the following operation at the system shell."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:268
msgid "Flush all ``iptables`` Rules"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:270
msgid "If you make a configuration mistake when entering ``iptables`` rules or simply need to revert to the default rule set, you can use the following operation at the system shell to flush all rules:"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:278
msgid "If you've already made your ``iptables`` rules persistent, you will need to repeat the appropriate procedure in the :ref:`iptables-make-all-rules-persistent` section."
msgstr ""

