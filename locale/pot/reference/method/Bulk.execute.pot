# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/Bulk.execute.txt:3
# 3104bdfdfa30475186d5e92158cf4f85
msgid "Bulk.execute()"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:8
# f9f466da42824df9bf55a3663c9566ea
msgid "Description"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:14
# c8d7f4efb480498ea4eccecee6ecbb84
msgid "Executes the list of operations built by the :method:`Bulk()` operations builder."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:17
# 5251df37e0ad432582f0e4aee9edfd92
msgid ":method:`Bulk.execute()` accepts the following parameter:"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:21
# 7e482ebe0b34406287eee7de5e4c274a
msgid "A :method:`BulkWriteResult` object that contains the status of the operation."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:24
# 6b349d5b671b4428a3634d783296ce9f
msgid "After execution, you cannot re-execute the :method:`Bulk()` object without reinitializing. See :method:`db.collection.initializeUnorderedBulkOp()` and :method:`db.collection.initializeOrderedBulkOp()`."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:32
# d1574cc7017c466c8d2e5f850c68b574
msgid "Behavior"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:35
# 16d2c7c6d04047eb82868f12da5e0e53
msgid "Ordered Operations"
msgstr ""

#: ../source/includes/fact-bulk-operation-ordered-list.rst:1
# 624a986d2235494d816479b64a2bb823
msgid "When executing an :method:`ordered <db.collection.initializeOrderedBulkOp()>` list of operations, MongoDB groups the operations by the :data:`operation type <batchType>` and contiguity; i.e. *contiguous* operations of the same type are grouped together. For example, if an ordered list has two insert operations followed by an update operation followed by another insert operation, MongoDB groups the operations into three separate groups: first group contains the two insert operations, second group contains the update operation, and the third group contains the last insert operation. This behavior is subject to change in future versions."
msgstr ""

#: ../source/includes/fact-bulk-operation-batches.rst:1
#: ../source/includes/fact-bulk-operation-batches.rst:1
# 3821544a648c41d1842865e839df3383
# cdcfd5478e6b4462b6f94589c9999138
msgid "Each group of operations can have at most :limit:`1000 operations <Write Command Operation Limit Size>`. If a group exceeds this :limit:`limit <Write Command Operation Limit Size>`, MongoDB will divide the group into smaller groups of 1000 or less. For example, if the bulk operations list consists of 2000 insert operations, MongoDB creates 2 groups, each with 1000 operations."
msgstr ""

#: ../source/includes/fact-bulk-operation-batches.rst:7
#: ../source/includes/fact-bulk-operation-batches.rst:7
# 370a0a12f26346bc890267a8555a50b5
# fb9238eca394406b8d29bb493532071f
msgid "The sizes and grouping mechanics are internal performance details and are subject to change in future versions."
msgstr ""

#: ../source/includes/fact-bulk-operation-batches.rst:10
#: ../source/includes/fact-bulk-operation-batches.rst:10
# 6ad3078047054f1db0316bd85e3f21f1
# 45c11990e13048d29f2e90a40bb8af03
msgid "To see how the operations are grouped for a bulk operation execution, call :method:`Bulk.getOperations()` *after* the execution."
msgstr ""

#: ../source/includes/fact-bulk-operation-sharded-cluster.rst:1
# 90565473e2ce49e8adad48be4282d650
msgid "Executing an :method:`ordered <db.collection.initializeOrderedBulkOp()>` list of operations on a sharded collection will generally be slower than executing an :method:`unordered <db.collection.initializeUnorderedBulkOp()>` list since with an ordered list, each operation must wait for the previous operation to finish."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:44
# ce3ea3e85a0b4d39aa8a4b72e4e7067c
msgid "Unordered Operations"
msgstr ""

#: ../source/includes/fact-bulk-operation-unordered-list.rst:1
# 713ae2f17b0a4fbda5ada9dcfbb8d40a
msgid "When executing an :method:`unordered <db.collection.initializeUnorderedBulkOp()>` list of operations, MongoDB groups the operations. With an unordered bulk operation, the operations in the list may be reordered to increase performance. As such, applications should not depend on the ordering when performing :method:`unordered <db.collection.initializeUnorderedBulkOp()>` bulk operations."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:51
# 2925a52017dd4b169bdd003ffcd128a9
msgid "Examples"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:54
# e308edf6ef224dfd8cbac9414a6796c5
msgid "Execute Bulk Operations"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:56
# c77a53c87a0e414ea5d788f28b6c06ab
msgid "The following initializes a :method:`Bulk()` operations builder on the ``items`` collection, adds a series of insert operations, and executes the operations:"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:67
#: ../source/reference/method/Bulk.execute.txt:105
# 75cb90ba56b54694b020ec9c9c714c30
# 1bd04a107af443b79296bdc9a3ceb758
msgid "The operation returns the following :method:`BulkWriteResult()` object:"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:82
# 41cc00f3896e4795a188e307df0ca62b
msgid "For details on the return object, see :method:`BulkWriteResult()`. For details on the batches executed, see :method:`Bulk.getOperations()`."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:88
# edd6f5dd29584228b3fd93e3fefc7afb
msgid "Override Default Write Concern"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:90
# 29f73d4cc11c4591930c926701fbb2b8
msgid "The following operation to a replica set specifies a :doc:`write concern </reference/write-concern>` of ``\"w: majority\"`` with a ``wtimeout`` of 5000 milliseconds such that the method returns after the writes propagate to a majority of the voting replica set members or the method times out after 5 seconds."
msgstr ""

#: ../source/includes/fact-majority-write-concern-change.rst:1
# e460c3dbc31b47b0b751639d33018f56
msgid "In previous versions, ``majority`` referred to the majority of all members of the replica set."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:0
# 791cc037e48b4cc7b2cb65d7d54afaed
msgid "See"
msgstr ""

