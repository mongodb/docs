#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/core/replica-set-elections.txt:9
msgid "Replica Set Elections"
msgstr ""

#: ../source/core/replica-set-elections.txt:19
msgid ""
":term:`Replica sets <replica set>` use elections to determine which set "
"member will become :term:`primary`. Replica sets can trigger an election "
"in response to a variety of events, such as:"
msgstr ""

#: ../source/core/replica-set-elections.txt:23
msgid "Adding a new node to the replica set,"
msgstr ""

#: ../source/core/replica-set-elections.txt:24
msgid ":method:`initiating a replica set <rs.initiate()>`,"
msgstr ""

#: ../source/core/replica-set-elections.txt:25
msgid ""
"performing replica set maintenance using methods such as "
":method:`rs.stepDown()` or :method:`rs.reconfig()`, and"
msgstr ""

#: ../source/core/replica-set-elections.txt:26
msgid ""
"the :term:`secondary` members losing connectivity to the primary for more"
" than the configured :rsconf:`timeout <settings.electionTimeoutMillis>` "
"(10 seconds by default)."
msgstr ""

#: ../source/core/replica-set-elections.txt:28
msgid ""
"In the following diagram, the primary node was unavailable for longer "
"than the :rsconf:`configured timeout <settings.electionTimeoutMillis>` "
"and triggers the :ref:`automatic failover <replication-auto-failover>` "
"process. One of the remaining secondaries calls for an election to select"
" a new primary and automatically resume normal operations."
msgstr ""

#: ../source/core/replica-set-elections.txt:36
msgid ""
"The replica set cannot process write operations until the election "
"completes successfully. The replica set can continue to serve read "
"queries if such queries are configured to :ref:`run on secondaries "
"<replica-set-read-preference>`."
msgstr ""

#: ../source/includes/fact-election-latency.rst:1
msgid ""
"The median time before a cluster elects a new primary should not "
"typically exceed 12 seconds, assuming default :rsconf:`replica "
"configuration settings <settings>`. This includes time required to mark "
"the primary as :ref:`unavailable <replication-auto-failover>` and call "
"and complete an :ref:`election <replica-set-elections>`. You can tune "
"this time period by modifying the "
":rsconf:`settings.electionTimeoutMillis` replication configuration "
"option. Factors such as network latency may extend the time required for "
"replica set elections to complete, which in turn affects the amount of "
"time your cluster may operate without a primary. These factors are "
"dependent on your particular cluster architecture."
msgstr ""

#: ../source/includes/fact-retryable-writes-failover-election.rst:1
msgid ""
"Your application connection logic should include tolerance for automatic "
"failovers and the subsequent elections."
msgstr ""

#: ../source/includes/fact-retryable-writes-failover-election.rst:6
msgid ""
"MongoDB 3.6+ drivers can detect the loss of the primary and automatically"
" :ref:`retry certain write operations <retryable-writes>` a single time, "
"providing additional built-in handling of automatic failovers and "
"elections."
msgstr ""

#: ../source/core/replica-set-elections.txt:47
msgid "Factors and Conditions that Affect Elections"
msgstr ""

#: ../source/core/replica-set-elections.txt:50
msgid "Replication Election Protocol"
msgstr ""

#: ../source/includes/fact-replica-set-protocolVersion1.rst:3
msgid ""
"MongoDB introduces a version 1 of the replication protocol "
"(:rsconf:`protocolVersion: 1 <protocolVersion>`) to reduce replica set "
"failover time and accelerate the detection of multiple simultaneous "
"primaries. New replica sets, by default, use :rsconf:`protocolVersion: 1 "
"<protocolVersion>`. Previous versions of MongoDB use version 0 of the "
"protocol. See :ref:`replication election enhancements <3.2-rel-notes-rs-"
"enhancements>` for details."
msgstr ""

#: ../source/core/replica-set-elections.txt:55
msgid "Heartbeats"
msgstr ""

#: ../source/core/replica-set-elections.txt:57
msgid ""
"Replica set members send heartbeats (pings) to each other every two "
"seconds. If a heartbeat does not return within 10 seconds, the other "
"members mark the delinquent member as inaccessible."
msgstr ""

#: ../source/core/replica-set-elections.txt:62
msgid "Member Priority"
msgstr ""

#: ../source/core/replica-set-elections.txt:64
msgid ""
"After a replica set has a stable primary, the election algorithm will "
"make a \"best-effort\" attempt to have the secondary with the highest "
":rsconf:`~members[n].priority` available call an election. Member "
"priority affects both the timing and the outcome of elections; "
"secondaries with higher priority call elections relatively sooner than "
"secondaries with lower priority, and are also more likely to win. "
"However, a lower priority instance can be elected as primary for brief "
"periods, even if a higher priority secondary is available. Replica set "
"members continue to call elections until the highest priority member "
"available becomes primary."
msgstr ""

#: ../source/core/replica-set-elections.txt:76
msgid ""
"Members with a priority value of ``0`` cannot become primary and do not "
"seek election. For details, see :doc:`/core/replica-set-"
"priority-0-member`."
msgstr ""

#: ../source/core/replica-set-elections.txt:81
msgid "Loss of a Data Center"
msgstr ""

#: ../source/core/replica-set-elections.txt:83
msgid ""
"With a distributed replica set, the loss of a data center may affect the "
"ability of the remaining members in other data center or data centers to "
"elect a primary."
msgstr ""

#: ../source/core/replica-set-elections.txt:87
msgid ""
"If possible, distribute the replica set members across data centers to "
"maximize the likelihood that even with a loss of a data center, one of "
"the remaining replica set members can become the new primary."
msgstr ""

#: ../source/core/replica-set-elections.txt:91
msgid ":doc:`/core/replica-set-architecture-geographically-distributed`"
msgstr ""

#: ../source/core/replica-set-elections.txt:94
msgid "Network Partition"
msgstr ""

#: ../source/core/replica-set-elections.txt:96
msgid ""
"A :term:`network partition` may segregate a primary into a partition with"
" a minority of nodes. When the primary detects that it can only see a "
"minority of nodes in the replica set, the primary steps down as primary "
"and becomes a secondary. Independently, a member in the partition that "
"can communicate with a majority of the nodes (including itself) holds an "
"election to become the new primary."
msgstr ""

#: ../source/core/replica-set-elections.txt:108
msgid "Vetoes in Elections"
msgstr ""

#: ../source/core/replica-set-elections.txt:112
msgid ""
"The :rsconf:`protocolVersion: 1 <protocolVersion>` obviates the need for "
"vetoes. The following veto discussion applies to replica sets that use "
"the older :rsconf:`protocolVersion: 0 <protocolVersion>`."
msgstr ""

#: ../source/core/replica-set-elections.txt:116
msgid ""
"For replica sets using :rsconf:`protocolVersion: 0 <protocolVersion>`, "
"all members of a replica set can veto an election, including :ref:`non-"
"voting members <replica-set-non-voting-members>`. A member will veto an "
"election:"
msgstr ""

#: ../source/core/replica-set-elections.txt:121
msgid "If the member seeking an election is not a member of the voter's set."
msgstr ""

#: ../source/core/replica-set-elections.txt:123
msgid ""
"If the current primary has more recent operations (i.e. a higher "
":data:`optime <replSetGetStatus.members.optime>`) than the member seeking"
" election, from the perspective of another voting member."
msgstr ""

#: ../source/core/replica-set-elections.txt:128
msgid ""
"If the current primary has the same or more recent operations (i.e. a "
"higher or equal :data:`optime <replSetGetStatus.members.optime>`) than "
"the member seeking election."
msgstr ""

#: ../source/core/replica-set-elections.txt:133
msgid ""
"If a :ref:`priority 0 member <replica-set-secondary-only-members>` "
"[#imply-secondary-only]_ is the most current member at the time of the "
"election. In this case, another eligible member of the set will catch up "
"to the state of the :ref:`priority 0 member <replica-set-secondary-only-"
"members>` member and then attempt to become primary."
msgstr ""

#: ../source/core/replica-set-elections.txt:140
msgid ""
"If the member seeking an election has a lower priority than another "
"member in the set that is also eligible for election."
msgstr ""

#: ../source/core/replica-set-elections.txt:144
msgid ""
":ref:`Hidden <replica-set-hidden-members>` and :ref:`delayed<replica-set-"
"delayed-members>` imply :ref:`priority 0 <replica-set-secondary-only-"
"members>` configuration."
msgstr ""

#: ../source/core/replica-set-elections.txt:149
msgid "Voting Members"
msgstr ""

#: ../source/core/replica-set-elections.txt:151
msgid ""
"The replica set member configuration setting :rsconf:`members[n].votes` "
"and member :data:`~replSetGetStatus.members.state` determine whether a "
"member votes in an election."
msgstr ""

#: ../source/core/replica-set-elections.txt:156
msgid ""
"All replica set members that have their :rsconf:`members[n].votes` "
"setting equal to 1 vote in elections. To exclude a member from voting in "
"an :term:`election`, change the value of the member's "
":rsconf:`members[n].votes` configuration to ``0``."
msgstr ""

#: ../source/includes/fact-rs-non-voting-priority-restriction.rst:1
msgid "Non-voting members must have :rsconf:`~members[n].priority` of 0."
msgstr ""

#: ../source/includes/fact-rs-nonzero-priority-vote-restriction.rst:1
msgid ""
"Members with :rsconf:`~members[n].priority` greater than 0 cannot have 0 "
":rsconf:`~members[n].votes`."
msgstr ""

#: ../source/core/replica-set-elections.txt:167
msgid "Only voting members in the following states are eligible to vote:"
msgstr ""

#: ../source/core/replica-set-elections.txt:169
msgid ":replstate:`PRIMARY`"
msgstr ""

#: ../source/core/replica-set-elections.txt:171
msgid ":replstate:`SECONDARY`"
msgstr ""

#: ../source/core/replica-set-elections.txt:173
msgid ":replstate:`STARTUP2`"
msgstr ""

#: ../source/core/replica-set-elections.txt:175
msgid ":replstate:`RECOVERING`"
msgstr ""

#: ../source/core/replica-set-elections.txt:177
msgid ":replstate:`ARBITER`"
msgstr ""

#: ../source/core/replica-set-elections.txt:179
msgid ":replstate:`ROLLBACK`"
msgstr ""

#: ../source/core/replica-set-elections.txt:185
msgid "Non-Voting Members"
msgstr ""

#: ../source/core/replica-set-elections.txt:187
msgid ""
"Although non-voting members do not vote in elections, these members hold "
"copies of the replica set's data and can accept read operations from "
"client applications."
msgstr ""

#: ../source/core/replica-set-elections.txt:191
msgid ""
"Because a replica set can have up to :limit:`50 members <Number of "
"Members of a Replica Set>`, but only :limit:`7 voting members <Number of "
"Voting Members of a Replica Set>`, non-voting members allow a replica set"
" to have more than seven members."
msgstr ""

#: ../source/core/replica-set-elections.txt:198
msgid ""
"For instance, the following nine-member replica set has seven voting "
"members and two non-voting members."
msgstr ""

#: ../source/core/replica-set-elections.txt:203
msgid ""
"A non-voting member has both :rsconf:`~members[n].votes` and "
":rsconf:`~members[n].priority` equal to ``0``:"
msgstr ""

#: ../source/core/replica-set-elections.txt:222
msgid ""
"Do **not** alter the number of votes to control which members will become"
" primary. Instead, modify the :rsconf:`members[n].priority` option. "
"*Only* alter the number of votes in exceptional cases. For example, to "
"permit more than seven members."
msgstr ""

#: ../source/core/replica-set-elections.txt:228
msgid ""
"To configure a non-voting member, see :doc:`/tutorial/configure-a-non-"
"voting-replica-set-member`."
msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid "Behavior"
#~ msgstr ""

#~ msgid "Priority Comparisons"
#~ msgstr ""

#~ msgid "Optime"
#~ msgstr ""

#~ msgid "Connections"
#~ msgstr ""

#~ msgid "Network Partitions"
#~ msgstr ""

#~ msgid "Election Mechanics"
#~ msgstr ""

#~ msgid "Election Triggering Events"
#~ msgstr ""

#~ msgid "the initiation of a new replica set."
#~ msgstr ""

#~ msgid "a primary steps down."
#~ msgstr ""

#~ msgid "A primary will step down:"
#~ msgstr ""

#~ msgid "after receiving the :dbcommand:`replSetStepDown` command."
#~ msgstr ""

#~ msgid "Participation in Elections"
#~ msgstr ""

#~ msgid ""
#~ ":term:`Replica sets <replica set>` use "
#~ "elections to determine which set member"
#~ " will become :term:`primary`. Elections "
#~ "occur after initiating a replica set,"
#~ " and also any time the primary "
#~ "becomes unavailable. The primary is the"
#~ " only member in the set that "
#~ "can accept write operations. If a "
#~ "primary becomes unavailable, elections allow"
#~ " the set to recover normal operations"
#~ " without manual intervention. Elections are"
#~ " part of the :ref:`failover process "
#~ "<replica-set-failover-administration>`."
#~ msgstr ""

#~ msgid ""
#~ "Elections are essential for independent "
#~ "operation of a replica set; however, "
#~ "elections take time to complete. While"
#~ " an election is in process, the "
#~ "replica set has no primary and "
#~ "cannot accept writes and all remaining"
#~ " members become read-only. MongoDB "
#~ "avoids elections unless necessary."
#~ msgstr ""

#~ msgid ""
#~ "In the following three-member replica"
#~ " set, the primary is unavailable. One"
#~ " of the remaining secondaries holds "
#~ "an election to elect itself as a"
#~ " new primary."
#~ msgstr ""

# 0d9f03851833408fb64a5567ea1e00be
#~ msgid "On this page"
#~ msgstr ""

# dedb79779c08456c8527a2ffdd030068
#~ msgid ""
#~ ":term:`Replica sets <replica set>` use "
#~ "elections to determine which set member"
#~ " will become :term:`primary`. Elections "
#~ "occur after initiating a replica set,"
#~ " and also any time the primary "
#~ "becomes unavailable. The primary is the"
#~ " only member in the set that "
#~ "can accept write operations. If a "
#~ "primary becomes unavailable, elections allow"
#~ " the set to recover normal operations"
#~ " without manual intervention. In the "
#~ "following three-member replica set, the"
#~ " primary is unavailable. One of the"
#~ " remaining secondaries holds an election"
#~ " to elect itself as a new "
#~ "primary."
#~ msgstr ""

# 9a73ef64dd8249fb8ff3a4f2844c87ab
#~ msgid ""
#~ "Elections are essential for independent "
#~ "operation of a replica set; however, "
#~ "elections take time to complete. While"
#~ " an election is in process, the "
#~ "replica set has no primary and "
#~ "cannot accept writes and all remaining"
#~ " members become read-only."
#~ msgstr ""

# 5e3aa9370b644a7b879b674ca1ef8a64
#~ msgid ""
#~ "If a majority of the replica set"
#~ " is inaccessible or unavailable to "
#~ "the current primary, the primary will"
#~ " step down and become a secondary."
#~ " The replica set cannot accept writes"
#~ " after this occurs, but remaining "
#~ "members can continue to serve read "
#~ "queries if such queries are configured"
#~ " to run on secondaries."
#~ msgstr ""

# 98ac5690821f490bb7ceeb94ad176f57
#~ msgid ""
#~ "MongoDB introduces a version 1 of "
#~ "the replication protocol (:rsconf:`protocolVersion:"
#~ " 1 <protocolVersion>`) to reduce replica"
#~ " set failover time and accelerates "
#~ "the detection of multiple simultaneous "
#~ "primaries. New replica sets will, by "
#~ "default, use :rsconf:`protocolVersion: 1 "
#~ "<protocolVersion>`. Previous versions of "
#~ "MongoDB use version 0 of the "
#~ "protocol."
#~ msgstr ""

# d2ed1cf8ea324c61a4b26a7176134b6d
#~ msgid ""
#~ "The :rsconf:`protocolVersion: 1 <protocolVersion>`"
#~ " obviates the need for vetos. The "
#~ "following veto discussion applies to "
#~ "replica sets that use the older "
#~ ":rsconf:`protocolVersion: 0 <protocolVersion>`."
#~ msgstr ""

# 941e227e2e4945fd870a64cac7c05bb9
#~ msgid ""
#~ "A non-voting member has a "
#~ ":rsconf:`members[n].votes` setting equal to "
#~ "``0`` in its member configuration:"
#~ msgstr ""

# 41d95c4226994e198cfae95dab4fcb1d
# 7d18fb7d1c9848ee82a32fab92029eaf
# 2b7b3b123ce940528131c13d6f675485
#~ msgid "replica set"
#~ msgstr ""

# 41d95c4226994e198cfae95dab4fcb1d
#~ msgid "network partitions"
#~ msgstr ""

# 7d18fb7d1c9848ee82a32fab92029eaf
#~ msgid "elections"
#~ msgstr ""

# 2b7b3b123ce940528131c13d6f675485
#~ msgid "failover"
#~ msgstr ""

# 8a78a9c0a7de4bd1a96b86a11bfd4df2
#~ msgid "replica set members"
#~ msgstr ""

# 8a78a9c0a7de4bd1a96b86a11bfd4df2
#~ msgid "non-voting"
#~ msgstr ""

