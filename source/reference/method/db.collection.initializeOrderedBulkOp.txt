=======================================
db.collection.initializeOrderedBulkOp()
=======================================

.. default-domain:: mongodb

Definition
----------

.. method:: db.collection.initializeOrderedBulkOp()

   Initializes and returns a new :method:`Bulk()` operations builder
   for a collection. The builder constructs an ordered list of write
   operations that MongoDB executes in bulk. 

   :returns: new :method:`Bulk()` operations builder object.

Behavior
--------

Order of Operation
~~~~~~~~~~~~~~~~~~

With an *ordered* operations list, MongoDB executes the write
operations in the list serially. 

Stop on Error
~~~~~~~~~~~~~

If an error occurs during the processing of one of the write
operations, MongoDB will return without processing any remaining write
operations in the list.

Examples
--------

The following initializes a :method:`Bulk()` operations builder on the
``users`` collection, adds a series of write operations, and executes
the operations:

.. code-block:: javascript

   var bulk = db.users.initializeOrderedBulkOp();
   bulk.insert( { user: "abc123", status: "A", points: 0 } );
   bulk.insert( { user: "ijk123", status: "A", points: 0 } );
   bulk.insert( { user: "mop123", status: "P", points: 0 } );
   bulk.find( { status: "D" } ).remove();
   bulk.find( { status: "P" } ).update( { $set: { comment: "Pending" } } );
   bulk.execute();

.. seealso::

   - :method:`db.collection.initializeUnorderedBulkOp()`

   - :method:`Bulk.find()`

   - :method:`Bulk.find.removeOne()`

   - :method:`Bulk.execute()`
