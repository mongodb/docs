.. _plan-om-resource:

==============================
Plan Your Ops Manager Resource
==============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. include:: /includes/styles/corrections.rst

MongoDB |onprem-link| is an enterprise application that manages, backs
up, and monitors MongoDB deployments. With |onprem|, you can scale and
upgrade MongoDB, optimize queries, perform point-in-time restores,
receive performance alerts, and more. To easily manage and maintain
|onprem| and its underlying database, you can use the |k8s-op| to run
|onprem| as a container on |k8s|.

Before you deploy an |onprem| resource, make sure you read the
:ref:`considerations <om-rsrc-considerations>` and complete
the :ref:`prerequisites <om-rsrc-prereqs>`.

Architecture
------------

For |onprem| resource architecture details, see :ref:`meko-om-arch`.

.. _om-rsrc-considerations:

Considerations
--------------

.. _om-rsrc-considerations-encrypt-key:

Encryption Key
~~~~~~~~~~~~~~

The |k8s-op-short| generates an encryption key to protect sensitive
information in the :ref:`mms-application-database`. The |k8s-op-short|
saves this key in a |k8s-secret| in the same namespace as the |onprem|
resource. The |k8s-op-short| names the secret
``<om-resource-name>-gen-key``.

.. include:: /includes/facts/fact-can-change-secret-storage-tool.rst

If you remove the |onprem| resource, the key remains stored in the
secret on the |k8s| cluster. If you stored the Application Database in
a |k8s-pv| and you create another |onprem| resource with the same name,
the |k8s-op-short| reuses the secret. If you create an |onprem|
resource with a different name, then |k8s-op-short| creates a new
secret and Application Database, and the old secret isn't reused.

Application Database
~~~~~~~~~~~~~~~~~~~~

.. _app-db-topology:

Topology
++++++++

When you create an instance of |onprem| through the |k8s-op-short|, the
:ref:`mms-application-database` is deployed as a :term:`replica set`.
You can't configure the Application Database as a :term:`standalone`
database or :term:`sharded cluster`. If you have concerns about
performance or size requirements for the Application Database, contact
`MongoDB Support <https://support.mongodb.com/welcome>`__.


Monitoring
++++++++++

The |k8s-op-short| automatically configures |onprem| to monitor the
Application Database that backs the |application|. The |k8s-op-short|
creates a project named ``<ops-manager-deployment-name>-db`` for you to
monitor the Application Database deployment.

|onprem| monitors the Application Database deployment, but |onprem| does
not manage it. You cannot change the Application Database's
configuration in the |application|.



.. important::

    The |onprem| UI might display warnings in the
    ``<ops-manager-deployment-name>-db`` project stating that the
    agents for the Application Database are out of date. You can safely
    ignore these warnings.

.. _app-db-auth:

Authentication
++++++++++++++

The |k8s-op-short| enforces ``SCRAM-SHA-1``
:manual:`authentication </core/security-scram/#scram-mechanisms>` on
the Application Database.

The |k8s-op-short| creates the database user which |onprem| uses to
connect to the Application Database. This database user has the
following attributes:

.. list-table::
   :widths: 30 70
   :stub-columns: 1

   * - Username
     - ``mongodb-ops-manager``

   * - Authentication Database
     - ``admin``

   * - Roles
     -
       - :authrole:`readWriteAnyDatabase`
       - :authrole:`dbAdminAnyDatabase`
       - :authrole:`clusterMonitor`

You can't modify the |onprem| database user's name and roles. You
:ref:`create a secret <om-db-user-secret>` to set the database user's
password. You edit the secret to update the password. If you don't
create a secret or delete an existing secret, the |k8s-op-short|
generates a password and stores it.

.. _app-db-offline:

Offline Deployments
+++++++++++++++++++

The |k8s-op-short| requires that you specify the MongoDB Enterprise version
for the :opsmgr:`Application Database 
</core/system-overview/#application-database>` image to enable any
deployments of |onprem| resources, including offline deployments.

.. _om-rsrc-config:

Streamlined Configuration
~~~~~~~~~~~~~~~~~~~~~~~~~

After you deploy |onprem|, you need to configure it. The regular
procedure involves setting up |onprem| through the
:opsmgr:`configuration wizard </reference/config/ui-settings>`. If you
set some essential settings in your object specification before you
deploy, you can bypass the configuration wizard.

In the :opsmgrkube:`spec.configuration` block of your |onprem| object
specification, you need to:

- Add :ref:`mms.ignoreInitialUiSetup <bypass-ui-config>` and set to
  ``true``.

- Add the :ref:`minimum configuration settings <bypass-ui-config>` to
  allow the |onprem| instance to start without errors.

.. example::

   To disable the |onprem| configuration wizard, configure the
   following settings in your :opsmgrkube:`spec.configuration` block:

   .. literalinclude:: /includes/code-examples/yaml-files/om-spec-configuration-block.yaml
      :language: yaml
      :copyable: false
      :linenos:

   Replace the example values with the values you want your |onprem| to
   use.

.. _om-rsrc-backup:

Backup
~~~~~~

|k8s-op-short| enables :ref:`mms-backup-functional-overview` by
default. The |k8s-op-short| deploys a |k8s-statefulset| comprised of
one pod to host the :ref:`backup-daemon`, and then creates a |k8s-pvc|
and |k8s-pv| for the Backup Daemon's :term:`head database`. The
|k8s-op-short| uses the :opsmgr:`Ops Manager API </reference/api/>` to
enable the Backup Daemon and configure the head database.

.. important::

   To configure Backup, you must create MongoDB database resources for
   the :term:`oplog store <oplog store database>` and for one of the
   following:

   - |s3| :term:`snapshot store <s3 snapshot store>`.
   - :term:`blockstore <Backup Blockstore Database>`.

   If you deploy both an |s3|
   :term:`snapshot store <s3 snapshot store>` and a
   :term:`blockstore <Backup Blockstore Database>`, |onprem| chooses
   one to use for Backup at random.

   The |onprem| resource remains in a ``Pending`` state until you configure these Backup resources.

Oplog Store
+++++++++++

You must deploy a three-member replica set to store your
:term:`oplog slices <Oplog Slice>`.

.. include:: /includes/admonitions/fact-backing-db-auth.rst

Blockstore
++++++++++

To configure a :term:`blockstore <Backup Blockstore Database>`, you
must deploy a replica set to store snapshots.

S3 Snapshot Store
+++++++++++++++++

To configure an |s3| :term:`snapshot store <S3 Snapshot Store>`, you
must create an |aws| |s3| or |s3|-compatible bucket to store your
database Backup :term:`snapshots <snapshot>`.

The default configuration stores snapshot metadata in the Application
Database. You can also deploy a replica set to store snapshot metadata,
then configure it using the
:opsmgrkube:`spec.backup.s3Stores.mongodbResourceRef.name` settings in
the |onprem| resource definition.

You can update any additional |s3|
:opsmgr:`configuration settings </tutorial/manage-s3-blockstore-storage/#provide-the-s3-blockstore-details>`
that |k8s-op-short| doesn't manage through the |application|.

S3 Oplog Store
++++++++++++++

To configure an |s3| oplog store, you must create an |aws| |s3| or
|s3|-compatible bucket to store your database Backup Oplog.

You can configure storing the oplog using the
:opsmgrkube:`spec.backup.s3OpLogStores.mongodbResourceRef.name` setting
in the |onprem| resource definition.

Disable Backup
++++++++++++++

To disable backup after you enabled it:

1. Set the |onprem| |k8s| |k8s-obj| :opsmgrkube:`spec.backup.enabled`
   setting to ``false``.

#. :opsmgr:`Disable backups </tutorial/disable-backup>` in the
   |application|.

#. Delete the :ref:`backup-daemon` |k8s-statefulset|:

   .. code-block:: sh

      kubectl delete statefulset <metadata.name>-backup-daemon -n <namespace>

.. important::

   The |k8s-pvc| and |k8s-pv| for the Backup Daemon's :term:`head
   database` are not deleted when you delete the :ref:`backup-daemon`
   |k8s-statefulset|. You can retrieve stored data before you delete
   these |k8s| resources.

   To learn about reclaiming |k8s-pvs|, see the
   :k8sdocs:`Kubernetes documentation </concepts/storage/persistent-volumes/#reclaiming>`.

.. _config-https:

Configure |onprem| to Run over HTTPS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You can configure your |onprem| instance created through the |k8s-op-short|
to run over |https| instead of |http|. 

To configure your |onprem| instance to run over |https|: 

1. Create a secret that contains the |tls| certificate and private key.
2. Add this secret to the |onprem| configuration object. 

For detailed instructions, see :ref:`deploy-om-container`.

.. important::
   
   If you have existing deployments, you must restart them manually 
   after enabling |https|. To avoid restarting your deployments, 
   configure |https| before deploying your managed resources.

   To learn more, see :ref:`https-enablement-issues`.

Ops Manager Application Access
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

By default, the |k8s-op-short| doesn't create a |k8s| service to route
traffic originating from outside of the |k8s| cluster to the |onprem|
application.

To access the |onprem| application, you can:

- Configure the |k8s-op-short| to create a |k8s| service.
- Create a |k8s| service manually. MongoDB recommends using a
  ``LoadBalancer`` |k8s| service if your cloud provider supports it.
- If you're using OpenShift, use
  `routes <https://docs.openshift.com/enterprise/3.0/architecture/core_concepts/routes.html>`__.
- Use a third-party service, such as Istio.

The simplest method is configuring the |k8s-op-short| to create a |k8s|
service that routes external traffic to the |onprem| application. The
|onprem| deployment procedure instructs you to add the following
settings to the |k8s-obj| specification that configures the
|k8s-op-short| to create a service:

- ``spec.``:opsmgrkube:`~spec.externalConnectivity`
- ``spec.externalConnectivity.``:opsmgrkube:`~spec.externalConnectivity.type`

.. _om-local-mode:

Deploying |onprem| in Remote or Local Mode
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You can use the |k8s-op-short| to configure |onprem| to operate in 
**Local** or **Remote** mode if your environment prevents granting hosts
in your |k8s| cluster access to the Internet. In these modes, the Backup
Daemons and managed MongoDB resources download installation archives
from |onprem| instead of from the Internet:

- :ref:`deploy-om-container-remote-mode`: |onprem| reads the
  installation archives from HTTP endpoints on a web server
  or S3-compatible file store deployed to your |k8s| cluster.
  
- :ref:`deploy-om-container-local-mode`: |onprem| reads the instalation
  archives from a |k8s-pv| that you create for the |onprem| StatefulSet.

.. _mdb-resource-deployment-locations:

Managing External MongoDB Deployments
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

When you deploy |onprem| with the |k8s-op-short|, |onprem| can manage
MongoDB database resources deployed:

- To the same |k8s| cluster as |onprem|.
- Outside of |k8s| clusters.

If |onprem| manages MongoDB database resources deployed to different
|k8s| clusters than |onprem| or outside of |k8s| clusters, you must:

1. Add the ``mms.centralUrl`` setting to ``spec.configuration`` in the
   |onprem| resource specification.

   Set the value to the URL by which |onprem| is exposed outside of the
   |k8s| cluster:

   .. code-block:: yaml

      spec:
        configuration:
          mms.centralUrl: https://a9a8f8566e0094380b5c257746627b82-1037623671.us-east-1.elb.example.com:8080/

#. :ref:`Update the ConfigMaps <example-k8s-configmap>` referenced by
   all MongoDB database resources inside the |k8s| cluster that you
   deployed with the |k8s-op-short|.

   Set ``data.baseUrl`` to the same value of the
   :opsmgrkube:`spec.configuration.mms.centralUrl <spec.configuration>`
   setting in the |onprem| resource specification.

   .. important::

      This includes the ConfigMaps that the `MongoDB database resources
      for the oplog and snapshot stores reference
      <../tutorial/deploy-om-container.html#deploy-mongodb-database-resources-to-complete-the-backup-configuration>`__.

.. _om-rsrc-prereqs:

Prerequisites
-------------

1. If you have not already, run the following command to execute all
   ``kubectl`` commands in the namespace you :ref:`created
   <k8s-prerequisites>`:

   .. code-block:: sh

      kubectl config set-context $(kubectl config current-context) --namespace=<namespace>

#. :doc:`Install </tutorial/install-k8s-operator>` the |k8s-op| 1.6.x or
   later.


#. Ensure that the host on which you want to deploy |onprem| has a
   minimum of five gigabytes of memory.

.. _om-first-user:

4. Create a |k8s| |k8s-secret| for an admin user in the same |k8s-ns|
   as the |onprem| resource.

   When you deploy the |onprem| resource, |onprem| creates a user with
   these credentials and grants it the :authrole:`Global Owner` role.
   Use these credentials to log in to |onprem| for the first time. Once
   you deploy |onprem|, change the password or remove this secret.

   .. note::

      The admin user's password must adhere to the |onprem|
      :opsmgr:`password complexity requirements
      </tutorial/edit-your-user-account/index.html#edit-your-user-account>`. 

   .. code-block:: sh

      kubectl create secret generic <adminusercredentials> \
        --from-literal=Username="<username>" \
        --from-literal=Password="<password>" \
        --from-literal=FirstName="<firstname>" \
        --from-literal=LastName="<lastname>"

.. _om-db-user-secret:

5. (*Optional*) To set the password for the |onprem| database user,
   create a |k8s-secret| in the same |k8s-ns| as the |onprem| resource.

   The |k8s-op-short| creates the database user that |onprem| uses to
   connect to the :ref:`mms-application-database`. You can set the
   password for this database user by invoking the following command to
   create a secret:

   .. code-block:: sh

      kubectl create secret generic <om-db-user-secret-name> \
        --from-literal=password="<om-db-user-password>"

   .. note::

      If you choose to create a secret for the |onprem| database user,
      you must specify the secret's
      :opsmgrkube:`~spec.applicationDatabase.passwordSecretKeyRef.name`
      in the |onprem| resource definition. By default, the
      |k8s-op-short| looks for the password value in the ``password``
      key. If you stored the password value in a different key, you
      must also specify that
      :opsmgrkube:`~spec.applicationDatabase.passwordSecretKeyRef.key`
      name in the |onprem| resource definition.

   If you don't create a secret, then the |k8s-op-short| automatically
   generates a password and stores it internally. To learn more,
   see :ref:`app-db-auth`.

#. (*Optional*). To configure Backup to an |s3| snapshot store, create
   a |k8s-secret| in the same namespace as the |onprem| resource.

   This secret stores your |s3| credentials so that the |k8s-op-short|
   can connect |onprem| to your |aws| |s3| or |s3|-compatible bucket.
   The secret must contain the following key-value pairs:

   .. list-table::
      :widths: 30 70

      * - Key
        - Value

      * - ``accessKey``
        - Unique identifer of the |aws| user who owns the |s3| or
          |s3|-compatible bucket.

      * - ``secretKey``
        - Secret key of the |aws| user who owns the |s3| or
          |s3|-compatible bucket.

   To create the secret, invoke the following command:

   .. code-block:: sh

      kubectl create secret generic <my-aws-s3-credentials> \
        --from-literal=accessKey="<AKIAIOSFODNN7EXAMPLE>" \
        --from-literal=secretKey="<wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY>"

   To learn more about managing |s3| snapshot storage, see the
   :opsmgr:`Prerequisites </tutorial/manage-s3-blockstore-storage/#prerequisites>`.
