=============================
Replica Set Protocol Versions
=============================

.. default-domain:: mongodb


MongoDB provides replica set protocol version 0 (``pv0``) and replica
set protocol version 1 (``pv1``). ``pv1`` is the default for all new
replica sets created with MongoDB 3.2 or later.

The following outlines some differences between ``pv0`` and ``pv1``.

.. include:: /includes/note-pv0-deprecation.rst

Preservation of Writes
----------------------

``w:1`` Writes
~~~~~~~~~~~~~~

The deprecated ``pv0`` prioritizes preservation of :writeconcern:`w:1
<\<number\>>` writes

``pv1`` increases the likelihood of :writeconcern:`w:1 <\<number\>>`
rollbacks compared to ``pv0`` for the following versions:

- MongoDB 3.4.1

- MongoDB 3.4.0

- MongoDB 3.2.11 or earlier

However, for ``pv1`` in MongoDB 3.4 and later, you can configure
:rsconf:`~settings.catchUpTimeoutMillis` to prioritize preservation of
:writeconcern:`w:1 <\<number\>>` writes.

``w: "majority"`` Writes
~~~~~~~~~~~~~~~~~~~~~~~~

The deprecated ``pv0`` can lose confirmed :writeconcern:`w: "majority"
<"majority">` writes.

``pv1`` guarantees the preservation of confirmed :writeconcern:`w:
"majority" <"majority">` writes.

Availability
------------

- The deprecated ``pv0`` is available in all MongoDB versions.

- ``pv1`` is available in MongoDB version 3.2 or later and is the
  default for all new replica sets created with version 3.2 or later.

.. list-table::
   :header-rows: 1
   :widths: 90 10 10

   * - MongoDB Versions
     - ``pv0`` (Deprecated)
     - ``pv1``

   * - ``3.2+``
     - |checkmark|
     - |checkmark|

   * - ``< 3.2``
     - |checkmark|
     -

.. include:: /includes/unicode-checkmark.rst

Read Concern
------------

.. list-table::
   :header-rows: 1
   :widths: 90 10 10

   * - Read Concern
     - ``pv0`` (Deprecated)
     - ``pv1``

   * - :readconcern:`"local"`
     - |checkmark|
     - |checkmark|

   * - :readconcern:`"majority"`
     - 
     - |checkmark|

   * - :readconcern:`"linearizable"`
     - |checkmark|
     - |checkmark|

Arbiters
--------

.. include:: /includes/extracts/arbiters-and-pvs.rst

Priorities
----------

.. include:: /includes/extracts/priorities-and-pvs.rst

Vetoes
------

The deprecated ``pv0`` allows members to :ref:`veto elections
<replica-set-vetoes>` based on member's :data:`optime
<replSetGetStatus.members.optime>` and :rsconf:`~members[n].priority`
values.

``pv1`` does not use vetoes. Individual members can vote for or against
a candidate in a particular election, but cannot individually veto (abort)
an election unilaterally.

.. _simultaneous-primaries:

Detection of Simultaneous Primaries
-----------------------------------

.. include:: /includes/footnote-two-primaries-edge-cases.rst

The deprecated ``pv0`` relies on clock synchronization to disambiguate
when two members both think they are primary.

.. warning::

   Reliance on clock synchronization can lead to the loss of confirmed
   :writeconcern:`w: "majority" <"majority">` writes.

``pv1`` uses the concept of :term:`term` instead of clock
synchronization. This allows for a faster detection of simultaneous
primaries and for multiple successful elections in a short period of
time.

Back to Back Elections
----------------------

The deprecated ``pv0`` includes a 30 seconds buffer between
back-to-back elections as a precaution against poor clock
synchronization. This buffer helps reduce the number of back to back
elections. However, ``pv0`` can leave a replica set with no primary if
multiple elections are needed in a short period of time.

``pv1`` makes a "best-effort" attempt to have the secondary with the
highest :rsconf:`~members[n].priority` available call an election. This
could lead to back-to-back elections as eligible members with
higher priority can call an election.

However, in MongoDB 3.6 (as well as MongoDB 3.4.2+ and 3.2.12+), for ``pv1``:

- Priority elections have been limited to occur only if the higher
  priority node is within 10 seconds of the current primary. 

- Arbiters will vote no in elections if they detect a healthy primary
  of equal or greater priority to the candidate.

Starting in MongoDB 3.4, you can also reduce the likelihood of rollback of
:writeconcern:`w:1 <\<number\>>` writes with ``pv1`` by raisings the
:rsconf:`~settings.catchUpTimeoutMillis` setting.

Double Voting
-------------

``pv1`` prevents double voting in one member's call for election. This
is achieved through its use of :term:`terms <term>`.

The deprecated ``pv0`` lessens the likelihood of double-voting via the
30-second buffer, but cannot guarantee that a member will not double
vote if an election exceeds 30-seconds.

Modify Replica Set Protocol Version
------------------------------------

To change the replica set protocol version, reconfigure
(:method:`rs.reconfig`) the replica set with the new
:rsconf:`protocolVersion`. For example, to upgrade to ``pv1``, connect
a :binary:`~bin.mongo` shell to the current primary and perform the
following sequence of operations:

.. code-block:: sh

   cfg = rs.conf();
   cfg.protocolVersion=1;
   rs.reconfig(cfg);

To reduce the likelihood of :writeconcern:`w:1 <\<number\>>` rollbacks,
you can also reconfigure the replica set to a higher
:rsconf:`settings.catchUpTimeoutMillis` setting.
