============================
Change the Size of the Oplog
============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. versionadded:: 3.6

This procedure changes the size of the oplog on each member of a
replica set using the :dbcommand:`replSetResizeOplog` command, starting
with the :term:`secondary` members before proceeding to the
:term:`primary`.

.. important::

   You can only run :dbcommand:`replSetResizeOplog` on
   replica set member's running with the 
   :ref:`Wired Tiger storage engine <storage-wiredtiger>`.

Perform these steps on each :term:`secondary` replica set member
*first*. Once you have changed the oplog size for all secondary
members, perform these steps on the :term:`primary`.

A. Connect to the replica set member
------------------------------------

Connect to the replica set member using the :program:`mongo` shell:

.. code-block:: shell

   mongo --host <hostname>:<port>

.. note::

   If the replica set enforces :ref:`authentication <authentication>`,
   you must authenticate as a user with privileges to modify the 
   ``local`` database, such as the :authrole:`clusterManager` or
   :authrole:`clusterAdmin` role.

B. (Optional) Verify the current size of the oplog
--------------------------------------------------

To view the current size of the oplog, switch to the ``local``
database and run :method:`db.collection.stats()` against the 
``oplog.rs`` collection. :method:`~db.collection.stats()` displays the 
oplog size as :data:`~collStats.maxSize`.

.. class:: copyable-code
.. code-block:: javascript

   use local
   db.oplog.rs.stats().maxSize

The ``maxSize`` field displays the collection size in bytes.

C. Change the oplog size of the replica set member
--------------------------------------------------

To change the size, run the :dbcommand:`replSetResizeOplog` passing
the desired size in megabytes as the ``size`` parameter. The
specified size must be greater than ``990``, or 990 megabytes.

The following operation changes the oplog size of the replica set
member to 16 gigabytes, or 16000 megabytes.

.. code-block:: javascript

   db.adminCommand({replSetResizeOplog: 1, size: 16000})
