# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: 2014-04-08 19:26+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# a879b86ca2d94bf3a4578e26971b3d00
#: ../source/core/aggregation-pipeline.txt:3
msgid "Aggregation Pipeline"
msgstr ""

# b3922ae091b84eeda3807caf967f75ca
#: ../source/core/aggregation-pipeline.txt
msgid "On this page"
msgstr ""

# 22fc3692182e474390ddc533a914ffa6
#: ../source/core/aggregation-pipeline.txt:13
msgid ""
"The aggregation pipeline is a framework for data aggregation modeled on "
"the concept of data processing pipelines. Documents enter a multi-stage "
"pipeline that transforms the documents into aggregated results."
msgstr ""

# 7952fe7004104ba6b9885095c4496cbd
#: ../source/core/aggregation-pipeline.txt:20
msgid ""
"The aggregation pipeline provides an alternative to :term:`map-reduce` "
"and may be the preferred solution for aggregation tasks where the "
"complexity of map-reduce may be unwarranted."
msgstr ""

# b87119cd6e69421e92c9ae6ca3282c3b
#: ../source/core/aggregation-pipeline.txt:24
msgid ""
"Aggregation pipeline have some limitations on value types and result "
"size. See :doc:`/core/aggregation-pipeline-limits` for details on limits "
"and restrictions on the aggregation pipeline."
msgstr ""

# 76ce9763bce441bd93af6d28f15d2e37
#: ../source/core/aggregation-pipeline.txt:31
msgid "Pipeline"
msgstr ""

# cb37aae09a984bb989b33ecbdd86c40d
#: ../source/core/aggregation-pipeline.txt:33
msgid ""
"The MongoDB aggregation pipeline consists of :ref:`stages <aggregation-"
"pipeline-operator-reference>`. Each stage transforms the documents as "
"they pass through the pipeline. Pipeline stages do not need to produce "
"one output document for every input document; e.g., some stages may "
"generate new documents or filter out documents. Pipeline stages can "
"appear multiple times in the pipeline."
msgstr ""

# cb752c3a76be4bc09097c86627eb9513
#: ../source/core/aggregation-pipeline.txt:40
msgid ""
"MongoDB provides the :method:`db.collection.aggregate()` method in the "
":program:`mongo` shell and the :dbcommand:`aggregate` command for "
"aggregation pipeline. See :ref:`aggregation-pipeline-operator-reference` "
"for the available stages."
msgstr ""

# 93abdb11bf274de0b9bc9b3ec391cd3c
#: ../source/core/aggregation-pipeline.txt:45
msgid ""
"For example usage of the aggregation pipeline, consider :doc:`/tutorial"
"/aggregation-with-user-preference-data` and :doc:`/tutorial/aggregation-"
"zip-code-data-set`."
msgstr ""

# ebf294bf64d344a4b6cb3fc8508003a4
#: ../source/core/aggregation-pipeline.txt:52
msgid "Pipeline Expressions"
msgstr ""

# 1efc9abd39ec4d438f81c88da34892f9
#: ../source/core/aggregation-pipeline.txt:54
msgid ""
"Some pipeline stages takes a pipeline expression as its operand. Pipeline"
" expressions specify the transformation to apply to the input documents. "
"Expressions have a :doc:`document </core/document>` structure and can "
"contain other :ref:`expression <aggregation-expressions>`."
msgstr ""

# 5416ef76693742c79b0dd342d0d44286
#: ../source/core/aggregation-pipeline.txt:60
msgid ""
"Pipeline expressions can only operate on the current document in the "
"pipeline and cannot refer to data from other documents: expression "
"operations provide in-memory transformation of documents."
msgstr ""

# 4f72f7d46e57488d9044c07bf41db4d2
#: ../source/core/aggregation-pipeline.txt:64
msgid ""
"Generally, expressions are stateless and are only evaluated when seen by "
"the aggregation process with one exception: :ref:`accumulator "
"<aggregation-accumulator-operators>` expressions."
msgstr ""

# 527ef8b150fb4be5aefc4a7c96ecf5b9
#: ../source/core/aggregation-pipeline.txt:68
msgid ""
"The accumulators, used in the :pipeline:`$group` stage, maintain their "
"state (e.g. totals, maximums, minimums, and related data) as documents "
"progress through the pipeline."
msgstr ""

# c398bd237b1649efb990e8253dfa587b
#: ../source/core/aggregation-pipeline.txt:74
msgid ""
"Some accumulators are available in the :pipeline:`$project` stage; "
"however, when used in the :pipeline:`$project` stage, the accumulators do"
" not maintain their state across documents."
msgstr ""

# 9c0bf51d25de47e69417f48610882d17
#: ../source/core/aggregation-pipeline.txt:78
msgid "For more information on expressions, see :ref:`aggregation-expressions`."
msgstr ""

# 763e284e515e4715866879dea7cbc4a0
#: ../source/core/aggregation-pipeline.txt:84
msgid "Aggregation Pipeline Behavior"
msgstr ""

# 430196476d5f4678b43bdc3b4efcfb1a
#: ../source/core/aggregation-pipeline.txt:86
msgid ""
"In MongoDB, the :dbcommand:`aggregate` command operates on a single "
"collection, logically passing the *entire* collection into the "
"aggregation pipeline. To optimize the operation, wherever possible, use "
"the following strategies to avoid scanning the entire collection."
msgstr ""

# e96ffd0405ab4115910a5ef30682551a
#: ../source/core/aggregation-pipeline.txt:94
msgid "Pipeline Operators and Indexes"
msgstr ""

# 261a325a09714c1eb6383288faab3303
#: ../source/core/aggregation-pipeline.txt:96
msgid ""
"The :pipeline:`$match` and :pipeline:`$sort` pipeline operators can take "
"advantage of an index when they occur at the **beginning** of the "
"pipeline."
msgstr ""

# 98772f408acc47d2ae4a39ac306f95c4
#: ../source/core/aggregation-pipeline.txt:100
msgid ""
"The :pipeline:`$geoNear` pipeline operator takes advantage of a "
"geospatial index. When using :pipeline:`$geoNear`, the "
":pipeline:`$geoNear` pipeline operation must appear as the first stage in"
" an aggregation pipeline."
msgstr ""

# ae2688c326d34140a7d8fa4a46ca6a2f
#: ../source/core/aggregation-pipeline.txt:108
msgid ""
"Starting in MongoDB 3.2, indexes can :ref:`cover <read-operations-"
"covered-query>` an aggregation pipeline. In MongoDB 2.6 and 3.0, indexes "
"could not cover an aggregation pipeline since even when the pipeline uses"
" an index, aggregation still requires access to the actual documents."
msgstr ""

# 2dde1c17d6104089a76c6d3b2938291b
#: ../source/core/aggregation-pipeline.txt:115
msgid "Early Filtering"
msgstr ""

# 91e320169e7340499e3c39b0229b46e6
#: ../source/core/aggregation-pipeline.txt:117
msgid ""
"If your aggregation operation requires only a subset of the data in a "
"collection, use the :pipeline:`$match`, :pipeline:`$limit`, and "
":pipeline:`$skip` stages to restrict the documents that enter at the "
"beginning of the pipeline. When placed at the beginning of a pipeline, "
":pipeline:`$match` operations use suitable indexes to scan only the "
"matching documents in a collection."
msgstr ""

# 39de03123f204f90933c62b46c5a8e3f
#: ../source/core/aggregation-pipeline.txt:124
msgid ""
"Placing a :pipeline:`$match` pipeline stage followed by a "
":pipeline:`$sort` stage at the start of the pipeline is logically "
"equivalent to a single query with a sort and can use an index. When "
"possible, place :pipeline:`$match` operators at the beginning of the "
"pipeline."
msgstr ""

# 157eb25886384a4aba0d5fd8d1e7cb13
#: ../source/core/aggregation-pipeline.txt:131
msgid "Additional Features"
msgstr ""

# 82e578fdc04f4aec94ad9dad1b6958e8
#: ../source/core/aggregation-pipeline.txt:133
msgid ""
"The aggregation pipeline has an internal optimization phase that provides"
" improved performance for certain sequences of operators. For details, "
"see :doc:`/core/aggregation-pipeline-optimization`."
msgstr ""

# fa8bb6f9278e4d6e9ab1bdafd0e7417b
#: ../source/core/aggregation-pipeline.txt:137
msgid ""
"The aggregation pipeline supports operations on sharded collections. See "
":ref:`aggregation-pipeline-sharded-collection`."
msgstr ""

# 52c6187cf1084746ab3d11ec5d0b28d5
#: ../source/includes/extracts/additional-resources-aggregation.rst:4
msgid "Additional Resources"
msgstr ""

# 9517b9ca7add4c0c8729e0394eedb833
#: ../source/includes/extracts/additional-resources-aggregation.rst:6
msgid ""
"`MongoDB Analytics: Learn Aggregation by Example: Exploratory Analytics "
"and Visualization Using Flight Data <http://www.mongodb.com/presentations"
"/mongodb-analytics-learn-aggregation-example-exploratory-analytics-and-"
"visualization?jmp=docs>`_"
msgstr ""

# 63920b263e974690b3fed36fb64ce645
#: ../source/includes/extracts/additional-resources-aggregation.rst:7
msgid ""
"`MongoDB for Time Series Data: Analyzing Time Series Data Using the "
"Aggregation Framework and Hadoop <http://www.mongodb.com/presentations"
"/mongodb-time-series-data-part-2-analyzing-time-series-data-using-"
"aggregation-framework?jmp=docs>`_"
msgstr ""

# 1c030109f58c42b58fe3e0841498f90a
#: ../source/includes/extracts/additional-resources-aggregation.rst:8
msgid ""
"`The Aggregation Framework <https://www.mongodb.com/presentations"
"/aggregation-framework-0?jmp=docs>`_"
msgstr ""

# 1971140da8d94dcabaf7d9dcf3a97986
#: ../source/includes/extracts/additional-resources-aggregation.rst:9
msgid ""
"`Webinar: Exploring the Aggregation Framework "
"<https://www.mongodb.com/webinar/exploring-the-aggregation-"
"framework?jmp=docs>`_"
msgstr ""

# ee56b62ddaee4530abdc0c9f337dd9b9
#: ../source/includes/extracts/additional-resources-aggregation.rst:10
msgid ""
"`Quick Reference Cards <https://www.mongodb.com/lp/misc/quick-reference-"
"cards?jmp=docs>`_"
msgstr ""

#~ msgid ""
#~ "The aggregation pipeline provides an "
#~ "alternative to :term:`map-reduce` and "
#~ "may be the preferred solution for "
#~ "many aggregation tasks where the "
#~ "complexity of map-reduce may be "
#~ "unwarranted."
#~ msgstr ""

#~ msgid ""
#~ "Conceptually, documents from a collection "
#~ "travel through an aggregation pipeline, "
#~ "which transforms these objects as they"
#~ " pass through. For those familiar "
#~ "with UNIX-like shells (e.g. bash), "
#~ "the concept is analogous to the "
#~ "pipe (i.e. ``|``)."
#~ msgstr ""

#~ msgid ""
#~ "The MongoDB aggregation pipeline starts "
#~ "with the documents of a collection "
#~ "and streams the documents from one "
#~ ":ref:`pipeline operator <aggregation-pipeline-"
#~ "operator-reference>` to the next to "
#~ "process the documents. Each operator in"
#~ " the pipeline transforms the documents "
#~ "as they pass through the pipeline. "
#~ "Pipeline operators do not need to "
#~ "produce one output document for every"
#~ " input document. Operators may generate "
#~ "new documents or filter out documents."
#~ " Pipeline operators can be repeated "
#~ "in the pipeline."
#~ msgstr ""

#~ msgid ""
#~ "The :method:`db.collection.aggregate()` method "
#~ "returns a cursor and can return "
#~ "result sets of any size. Previous "
#~ "versions returned all results in a "
#~ "single document, and the result set "
#~ "was subject to a size limit of "
#~ "16 megabytes."
#~ msgstr ""

#~ msgid ""
#~ "See :ref:`aggregation-pipeline-operator-"
#~ "reference` for the list of pipeline "
#~ "operators that define the stages."
#~ msgstr ""

#~ msgid ""
#~ "For example usage of the aggregation "
#~ "pipeline, consider :doc:`/tutorial/aggregation-"
#~ "with-user-preference-data` and "
#~ ":doc:`/tutorial/aggregation-zip-code-data-"
#~ "set`, as well as the "
#~ ":dbcommand:`aggregate` command and the "
#~ ":method:`db.collection.aggregate()` method reference "
#~ "pages."
#~ msgstr ""

#~ msgid ""
#~ "Each pipeline operator takes a pipeline"
#~ " expression as its operand. Pipeline "
#~ "expressions specify the transformation to "
#~ "apply to the input documents. "
#~ "Expressions have a :term:`document` structure"
#~ " and can contain fields, values, and"
#~ " :ref:`operators <aggregation-expression-"
#~ "operators>`."
#~ msgstr ""

#~ msgid ""
#~ "Generally, expressions are stateless and "
#~ "are only evaluated when seen by "
#~ "the aggregation process with one "
#~ "exception: :term:`accumulator` expressions. The "
#~ "accumulator expressions, used with the "
#~ ":pipeline:`$group` pipeline operator, maintain "
#~ "their state (e.g. totals, maximums, "
#~ "minimums, and related data) as documents"
#~ " progress through the pipeline."
#~ msgstr ""

#~ msgid ""
#~ "For the expression operators, see :ref"
#~ ":`aggregation-expression-operators`."
#~ msgstr ""

#~ msgid ""
#~ "The :pipeline:`$match`, :pipeline:`$sort`, "
#~ ":pipeline:`$limit`, and :pipeline:`$skip` pipeline"
#~ " operators can take advantage of an"
#~ " index when they occur at the "
#~ "**beginning** of the pipeline **before** "
#~ "any of the following aggregation "
#~ "operators: :pipeline:`$project`, :pipeline:`$unwind`, "
#~ "and :pipeline:`$group`."
#~ msgstr ""

#~ msgid ""
#~ "For unsharded collections, when the "
#~ "aggregation pipeline only needs to "
#~ "access the indexed fields to fulfill "
#~ "its operations, an index can :ref:`cover"
#~ " <read-operations-covered-query>` the "
#~ "pipeline."
#~ msgstr ""

#~ msgid "Example"
#~ msgstr ""

#~ msgid "Consider the following index on the ``orders`` collection:"
#~ msgstr ""

#~ msgid ""
#~ "This index can cover the following "
#~ "aggregation pipeline operation because MongoDB"
#~ " does not need to inspect the "
#~ "data outside of the index to "
#~ "fulfill the operation:"
#~ msgstr ""

#~ msgid ""
#~ "The aggregation pipeline has an internal"
#~ " optimization phase that provides improved"
#~ " performance for certain sequences of "
#~ "operators. For details, see :ref"
#~ ":`aggregation-pipeline-sequence-optimization`."
#~ msgstr ""

# 0755e3fea9fc4ad297ddebdba9fd5709
#~ msgid ""
#~ "The aggregation pipeline is a framework"
#~ " for data aggregation modeled on the"
#~ " concept of data processing pipelines. "
#~ "Documents enter a multi-stage pipeline"
#~ " that transforms the documents into "
#~ "an aggregated results."
#~ msgstr ""

#~ msgid ""
#~ "The accumulators, used with the "
#~ ":pipeline:`$group` pipeline operator, maintain "
#~ "their state (e.g. totals, maximums, "
#~ "minimums, and related data) as documents"
#~ " progress through the pipeline."
#~ msgstr ""

#~ msgid ""
#~ "Even when the pipeline uses an "
#~ "index, aggregation still requires access "
#~ "to the actual documents; i.e. indexes"
#~ " cannot fully cover an aggregation "
#~ "pipeline."
#~ msgstr ""

#~ msgid ""
#~ "In previous versions, for very select"
#~ " use cases, an index could cover "
#~ "a pipeline."
#~ msgstr ""

