================
_hashBSONElement
================

.. default-domain:: mongodb

Description
-----------

.. dbcommand:: _hashBSONElement

   .. versionadded:: 2.4

   An internal command that computes the MD5 hash of a BSON element. The
   :dbcommand:`_hashBSONElement` command returns 8 bytes from the 16
   byte MD5 hash.

   The :dbcommand:`_hashBSONElement` command has the following fields:

   .. include:: /reference/command/hashBSONElement-field.rst

   .. |dbcommand| replace:: :dbcommand:`_hashBSONElement`
   .. include:: /includes/note-enabletestcommands.rst

Output
------

The :dbcommand:`_hashBSONElement` command returns a document
consisting of the following fields:

.. data:: _hashBSONElement.key

   The original BSON element.

.. data:: _hashBSONElement.seed

   The seed used for the hash, defaults to ``0``.

.. data:: _hashBSONElement.out

   The decimal result of the hash.

.. data:: _hashBSONElement.ok

   Holds the ``1`` if the function returns successfully, and ``0`` if
   the operation encountered an error.

Example
-------

Invoke a :program:`mongod` instance with test commands enabled:

.. code-block:: sh

   mongod --setParameter enableTestCommands=1

Run the following to compute the hash of an ISODate string:

.. code-block:: javascript

   db.runCommand({_hashBSONElement: ISODate("2013-02-12T22:12:57.211Z")})

The command returns the following document:

.. code-block:: javascript

   {
     "key" : ISODate("2013-02-12T22:12:57.211Z"),
     "seed" : 0,
     "out" : NumberLong("-4185544074338741873"),
     "ok" : 1
   }

Run the following to hash the same ISODate string but this time to
specify a seed value:

.. code-block:: javascript

   db.runCommand({_hashBSONElement: ISODate("2013-02-12T22:12:57.211Z"), seed:2013})

The command returns the following document:

.. code-block:: javascript

   {
     "key" : ISODate("2013-02-12T22:12:57.211Z"),
     "seed" : 2013,
     "out" : NumberLong("7845924651247493302"),
     "ok" : 1
   }
