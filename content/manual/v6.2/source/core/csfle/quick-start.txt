.. _csfle-quick-start:

===========
Quick Start
===========

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

This guide shows you how to encrypt a document with automatic
{+csfle+} ({+csfle-abbrev+}) and a MongoDB driver.

After completing this guide, you should have the following knowledge
and software:

- Knowledge of the steps to configure a driver to encrypt fields in a
  document.
- A working, but not production-ready, client application that
  utilizes automatic {+csfle+}.

.. important:: Do Not Use this Application In Production

   Since this example application stores an encryption key on your
   application's filesystem, you risk unauthorized access to the key or
   loss of the key to decrypt your data.

   To view a tutorial that demonstrates how to create a production-ready
   {+csfle-abbrev+}-enabled application, see
   :ref:`<csfle-tutorial-automatic-encryption>`.

.. _csfle-guide-intro:
.. _fle-create-a-master-key:

.. _download-example-project:

Before You Get Started
----------------------

.. include:: /includes/set-up-section.rst

.. include:: /includes/select-your-language.rst

.. see:: Full Application

   To view the complete runnable application code for this tutorial, go to the
   following link:

   .. tabs-drivers::

      .. tab:: Java
         :tabid: java-sync

         `Complete Java Application <{+sample-app-url-csfle+}/java/local/reader/>`__

      .. tab:: Node.js
         :tabid: nodejs

         `Complete Node.js Application <{+sample-app-url-csfle+}/node/local/reader/>`__

      .. tab:: Python
         :tabid: python

         `Complete Python Application <{+sample-app-url-csfle+}/python/local/reader/>`__

      .. tab:: C#
         :tabid: csharp

         `Complete C# Application <{+sample-app-url-csfle+}/dotnet/local/reader/CSFLE/>`__

      .. tab:: Go
         :tabid: go

         `Complete Go Application <{+sample-app-url-csfle+}/go/local/reader/>`__

.. tabs-selector:: drivers

Procedure
---------

.. include:: /includes/tutorials/language-id.rst

.. procedure::
   :style: normal

   .. step:: Create a {+cmk-long+}

      .. include:: /includes/quick-start/cmk.rst

      .. see:: Complete Code

         .. tabs-drivers::

            .. tab::
               :tabid: java-sync

               To view the complete code for making a {+cmk-long+}, see
               `our Github repository <{+sample-app-url-csfle+}/java/local/reader/src/main/java/com/mongodb/csfle/MakeDataKey.java>`__.

            .. tab::
               :tabid: nodejs

               To view the complete code for making a {+cmk-long+}, see
               `our Github repository <{+sample-app-url-csfle+}/node/local/reader/make_data_key.js>`__.

            .. tab::
               :tabid: python

               To view the complete code for making a {+cmk-long+}, see
               `our Github repository <{+sample-app-url-csfle+}/python/local/reader/make_data_key.py>`__.

            .. tab::
               :tabid: csharp

               To view the complete code for making a {+cmk-long+}, see
               `our Github repository <{+sample-app-url-csfle+}/dotnet/local/reader/CSFLE/MakeDataKey.cs>`__.

            .. tab::
               :tabid: go

               To view the complete code for making a {+cmk-long+}, see
               `our Github repository <{+sample-app-url-csfle+}/go/local/reader/make-data-key.go>`__.

   .. step:: Create a Unique Index on your {+key-vault-long+}

      .. include:: /includes/quick-start/key-vault-index.rst

   .. step:: Create a {+dek-long+}

      .. _csfle-quick-start-create-dek:

      .. include:: /includes/quick-start/dek.rst

      .. see:: Complete Code

         .. tabs-drivers::

            .. tab::
               :tabid: java-sync

               To view the complete code for making a {+dek-long+}, see
               `our Github repository <{+sample-app-url-csfle+}/java/local/reader/src/main/java/com/mongodb/csfle/MakeDataKey.java>`__.

            .. tab::
               :tabid: nodejs

               To view the complete code for making a {+dek-long+}, see
               `our Github repository <{+sample-app-url-csfle+}/node/local/reader/make_data_key.js>`__.

            .. tab::
               :tabid: python

               To view the complete code for making a {+dek-long+}, see
               `our Github repository <{+sample-app-url-csfle+}/python/local/reader/make_data_key.py>`__.

            .. tab::
               :tabid: csharp

               To view the complete code for making a {+dek-long+}, see
               `our Github repository <{+sample-app-url-csfle+}/dotnet/local/reader/CSFLE/MakeDataKey.cs>`__.

            .. tab::
               :tabid: go

               To view the complete code for making a {+dek-long+}, see
               `our Github repository <{+sample-app-url-csfle+}/go/local/reader/make-data-key.go>`__.

   .. step:: Configure the MongoClient

      .. include:: /includes/quick-start/client.rst

   .. step:: Insert a Document with Encrypted Fields

      .. include:: /includes/quick-start/insert.rst

      .. see:: Complete Code

         .. tabs-drivers::

            .. tab::
               :tabid: java-sync

               To view the complete code for inserting a {+in-use-doc+}, see
               `our Github repository <{+sample-app-url-csfle+}/java/local/reader/src/main/java/com/mongodb/csfle/InsertEncryptedDocument.java>`__.

            .. tab::
               :tabid: nodejs

               To view the complete code for inserting a {+in-use-doc+}, see
               `our Github repository <{+sample-app-url-csfle+}/node/local/reader/insert_encrypted_document.js>`__.

            .. tab::
               :tabid: python

               To view the complete code for inserting a {+in-use-doc+}, see
               `our Github repository <{+sample-app-url-csfle+}/python/local/reader/insert_encrypted_document.py>`__.

            .. tab::
               :tabid: csharp

               To view the complete code for inserting a {+in-use-doc+}, see
               `our Github repository <{+sample-app-url-csfle+}/dotnet/local/reader/CSFLE/InsertEncryptedDocument.cs>`__

            .. tab::
               :tabid: go

               To view the complete code for inserting a {+in-use-doc+}, see
               `our Github repository <{+sample-app-url-csfle+}/go/local/reader/insert-encrypted-document.go>`__.

   .. step:: Retrieve Your {+in-use-doc-title+}

      .. include:: /includes/quick-start/find.rst

      .. see:: Complete Code

         .. tabs-drivers::

            .. tab::
               :tabid: java-sync

               To view the complete code for finding a {+in-use-doc+}, see
               `our Github repository <{+sample-app-url-csfle+}/java/local/reader/src/main/java/com/mongodb/csfle/InsertEncryptedDocument.java>`__.

            .. tab::
               :tabid: nodejs

               To view the complete code for finding a {+in-use-doc+}, see
               `our Github repository <{+sample-app-url-csfle+}/node/local/reader/insert_encrypted_document.js>`__.

            .. tab::
               :tabid: python

               To view the complete code for finding a {+in-use-doc+}, see
               `our Github repository <{+sample-app-url-csfle+}/python/local/reader/insert_encrypted_document.py>`__.

            .. tab::
               :tabid: csharp

               To view the complete code for finding a {+in-use-doc+}, see
               `our Github repository <{+sample-app-url-csfle+}/dotnet/local/reader/CSFLE/InsertEncryptedDocument.cs>`__

            .. tab::
               :tabid: go

               To view the complete code for finding a {+in-use-doc+}, see
               `our Github repository <{+sample-app-url-csfle+}/go/local/reader/insert-encrypted-document.go>`__.


Learn More
----------

To view a tutorial on production-ready {+csfle-abbrev+} with a remote
KMS, see :ref:`<csfle-tutorial-automatic-encryption>`.

To learn how {+csfle-abbrev+} works, see
:ref:`<csfle-fundamentals>`.

To learn more about the topics mentioned in this guide, see the
following links:

- :ref:`{+cmk-long+}s <csfle-reference-keys-key-vaults>`
- :ref:`{+kms-long+} providers <csfle-reference-kms-providers>`
- :ref:`{+dek-long+}s <csfle-reference-keys-key-vaults>`
- :ref:`{+key-vault-long+}s <csfle-reference-keys-key-vaults>`
- :ref:`Encryption Schemas <csfle-reference-encryption-schemas>`
- :ref:`mongocryptd <csfle-reference-mongocryptd>`
- :ref:`{+csfle-abbrev+}-specific MongoClient settings <csfle-reference-mongo-client>`
- :ref:`Automatic {+csfle-abbrev+} Writes <csfle-fundamentals-automatic-encryption>`
