.. _fed-auth-advanced:

=============================================
Advanced Options for Federated Authentication
=============================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

You can configure advanced options in your Federated Authentication
instance for greater control over your organization users and
authentication flow.

Federation Management Access
----------------------------

.. include:: /includes/fact-fed-management-access.rst

To open the :guilabel:`Federation Management Console`:

.. include:: /includes/fact-open-fed-auth-console.rst

.. _advanced-option-default-role:

Assign a Default User Role for an Organization
----------------------------------------------

You can have |service| assign users who authenticate through the |idp| a
default :ref:`role <organization-roles>` in a mapped organization. You
can select different roles for different organizations.

.. note::

   The selected role only applies to users who authenticate through the
   |idp| if they do not already have a :ref:`role <organization-roles>`
   in the organization.

.. include:: /includes/steps/assign-default-org-role.rst

.. _restrict-org-access-by-domain:

Restrict Access to an Organization by Domain
--------------------------------------------

You can specify a list of approved domains to prevent users outside of
those domains from accessing your organization. Use this list to define
a list of approved domains for your organization without needing to
directly map those domains to your |idp|.

.. admonition:: Considerations
   :class: important

   Once you enable the :guilabel:`Restrict Access by Domain` option:

   - You can only invite new users to join your organization whose email
     addresses are in the approved list of domains.

   - Users who are already in your organization whose usernames do not
     contain a domain in the approved list are *not* restricted
     access to your organization.

   - Any domains which are mapped to your |idp| are automatically added
     to the approved list.

From the :guilabel:`Federation Management Console`:

.. include:: /includes/steps/restrict-access-to-org.rst

.. _bypass-saml:

Bypass SAML Mode
----------------

:guilabel:`Bypass SAML Mode` provides a login |url| which
bypasses your federated authentication, and instead allows you to
authenticate with your |service| credentials.

If your Federated Authentication settings are not properly configured,
you may not be able to log in to |service| through your |idp|. The
:guilabel:`Bypass SAML Mode` |url| helps prevent you from being locked
out of your |service| organization. While configuring and testing your
|idp|, we recommend that you make note of the :guilabel:`Bypass SAML
Mode` URL to ensure you can log in to |service| and properly configure
your Federated Authentication settings.

Each :guilabel:`Bypass SAML Mode` URL is associated with an individual
|idp|, and corresponds to the IdP's :guilabel:`Login URL`.

:guilabel:`Bypass SAML Mode` is enabled by default, however you may want
to disable it as a security measure once you are confident that you have
properly configured your Federated Authentication.

To set :guilabel:`Bypass SAML Mode`, from the
:guilabel:`Federation Management Console`:

.. include:: /includes/steps/bypass-saml-mode.rst
