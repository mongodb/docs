title: Create a directory to store your |charts-short| configuration.
ref: create-charts-dir
level: 4
stepnum: 1
content: |
  Create a directory to store your |charts-short| configuration, then
  change to the new directory:

  .. code-block:: sh

     mkdir mongodb-charts
     cd mongodb-charts
---
title: Download the |charts| Docker Compose file.
ref: download-compose-file
level: 4
stepnum: 2
content: |
 Download the |charts-short| Docker Compose file from the
 `MongoDB Download Center <https://www.mongodb.com/download-center>`_
 and manually move it to the new directory.
---
title: Enable Docker Swarm mode.
ref: enable-docker-swarm
level: 4
stepnum: 3
content: |
  Run the following command to enable Docker Swarm mode:

  .. code-block:: sh

     docker swarm init
---
title: Create a Docker Secret for the |charts-short| metadata database.
ref: create-docker-secret-mongodb
level: 4
stepnum: 4
content: |
   Create a Docker Secret to hold the
   :manual:`Connection String URI </reference/connection-string>` of the
   MongoDB deployment you will use to store the |charts-short| metadata.
   The MongoDB deployment must be reachable from the |charts-short|
   host. If the MongoDB deployment is running with
   :manual:`authentication enabled </tutorial/enable-authentication>`,
   you must provide the credentials in the connection string, and the
   MongoDB user must have the
   :manual:`readAnyDatabase </core/security-built-in-roles/>` role.

   .. code-block:: sh

      echo "mongodb://<username>:<password>@myhost.com/" | docker secret create charts-mongodb-uri -

   .. important::

      If the database is running on the same host as the |charts-short|
      Docker container but not in Docker, it will not be reachable via
      ``mongodb://localhost``. |charts-short| interprets ``localhost``
      as the Docker container |charts-short| is running in. Instead use
      ``mongodb://host.docker.internal`` for Windows and macOS or the IP
      address of the ``docker0`` interface for Linux.
---
title: Enable or disable the Feedback and Support widget.
ref: feedback-support-widget
level: 4
stepnum: 5
content: |
  By default, the Feedback and Support widget is enabled. It allows
  |charts-short| to collect and transmit usage data including operations
  the user performed, the chart types they use, and any errors returned
  by |charts-short|. The logged-in user's email and name is sent to the
  Intercom system to help provide support. No data is collected
  or transmitted from the user's database.
  
  If you want to disable the widget within |charts| and prevent the
  transmission of usage statistics, open ``charts-docker-compose.yml``
  and set ``CHARTS_SUPPORT_WIDGET_AND_METRICS`` to ``"off"``:

  .. code-block:: sh
  
     CHARTS_SUPPORT_WIDGET_AND_METRICS: "off"
---
title: Pull down the |charts-short| image.
ref: pull-charts-image
level: 4
stepnum: 6
content: |
  .. code-block:: sh

     docker pull quay.io/mongodb/charts

  .. note::

     This command may take a while as it downloads a large file to the
     host server.
---
title: Launch the |charts-short| container.
ref: launch-charts-container
level: 4
stepnum: 7
content: |
  Launch the |charts-short| container as a Docker Stack using the
  Compose file:
  
  .. code-block:: sh

     docker stack deploy -c charts-docker-compose.yml mongodb-charts
---
title: Verify the container is running.
ref: verify-container
level: 4
stepnum: 8
content: |
  Check that the container is running by executing:

  .. code-block:: sh

     docker service ls

  The |charts-short| container should appear with mode ``replicated``
  with ``1/1`` replicas:

  .. code-block:: sh
     :copyable: false

     ID             NAME                    MODE         REPLICAS   IMAGE                   PORTS
     j77uo3slyg4l   mongodb-charts_charts   replicated   1/1        mongodb-charts:latest   *:80->80/tcp
post: |
  .. note::

     The service's mode may not be ``replicated`` immediately. Docker
     does not display the status of certain deployment operations, so
     wait briefly then rerun ``docker service ls``.

     If the service is stuck at ``0/1`` replicas and it's mode is not
     ``replicated`` after an extended period of time, the service may
     not have deployed properly. For more information, see
     :ref:`Troubleshooting <charts-install-troubleshooting>`.
---
title: Create |charts-short| users.
ref: create-users
level: 4
stepnum: 9
content: |
  Once the container is running, execute the ``charts-cli add-user``
  script within the container once for each |charts-short| user account
  you want to create within |charts|. At mininum, you must use the script
  to create one user with the ``UserAdmin`` role in order to be able to
  log into |charts-short|. After creating this initial user, you
  can either use the |charts-short| web UI to add more users or you may
  continue to use the ``charts-cli add-user`` script to add users with
  either the ``UserAdmin`` or ``User`` role.

  To add users with the script, run the following command. Replace the
  placeholders in angle brackets with the appropriate values.

  .. code-block:: sh

     docker exec -it $(docker container ls --filter name=_charts -q) charts-cli add-user --first-name "<First>" --last-name "<Last>" --email "<user@example.com>" --password "<Password>" --role "<UserAdmin|User>"
---
title: Launch the |charts-short| web application.
ref: launch-charts-app
level: 4
stepnum: 10
content: |
  Access |charts| by opening a web browser and connecting to the
  name of the server running the container. Note that |charts-short|
  runs on HTTP port 80 unless you have modified the Docker Compose file
  to use a different port.
---
title: Back up your |charts-short| installation keys.
ref: backup-charts-keys
level: 4
stepnum: 11
content: |
  
  .. include:: /includes/backup-restore-intro.rst

  .. include:: /includes/backup-keys.rst

  For more information, see
  :doc:`/administration/backup-and-restore-keys`.
...
