.. _paid-tier-command-limitations:

=========================================
Unsupported Commands in ``M10+`` Clusters
=========================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

|service| requires clients to authenticate to access an |service|
cluster. |service| provides a curated list of
:ref:`Database User Privileges <atlas-user-privileges>`.
These privileges provide access to a subset of MongoDB commands.

Limited Commands
----------------

|service| limits the :method:`db.killOp()` method to
the MongoDB user who ran the operation.

Unsupported Commands
--------------------

The following table lists the most common commands and shell methods
that database user privileges do not support. To ensure cluster 
stability and performance, |service| subsumes or restricts the 
functionality that these commands provide.

Administrative
~~~~~~~~~~~~~~

.. list-table::
   :widths: 40 30 30 
   :header-rows: 1

   * - Commands
     - Shell Method
     - Privilege Actions

   * - :dbcommand:`setParameter`
     - :method:`db.setLogLevel() <db.setLogLevel>`

       Others that use :dbcommand:`setParameter`.
     - :authaction:`setParameter`

   * - :dbcommand:`logRotate`
     - 
     - :authaction:`logRotate`

   * - :dbcommand:`shutdown`
     - :method:`db.shutdownServer() <db.shutdownServer>`
     - :authaction:`shutdown`

   * - ``eval``
     - ``db.eval()``
     - 

   * - :dbcommand:`fsync`
     - :method:`db.fsyncLock() <db.fsyncLock>`
     - :authaction:`fsync`

   * - :dbcommand:`setFeatureCompatibilityVersion`
     -
     -

Sessions
~~~~~~~~

.. list-table::
   :widths: 40 30 30 
   :header-rows: 1

   * - Commands
     - Shell Method
     - Privilege Actions
  
   * - :dbcommand:`killAllSessions`
     - 
     - :authaction:`killAnySession`

Replication
~~~~~~~~~~~

.. list-table::
   :widths: 40 30 30
   :header-rows: 1

   * - Commands
     - Shell Method
     - Privilege Actions

   * - :dbcommand:`applyOps`
     - 
     - :authaction:`forceUUID`
  
   * - :dbcommand:`replSetFreeze`
     - :method:`rs.freeze() <rs.freeze>`
     - :authaction:`replSetStateChange`

   * - :dbcommand:`replSetInitiate`
     - :method:`rs.initiate() <rs.initiate>`
     - 

   * - :dbcommand:`replSetMaintenance`
     -
     - :authaction:`replSetStateChange`

   * - :dbcommand:`replSetReconfig`
     - :method:`rs.reconfig() <rs.reconfig>`
     - 

   * - :dbcommand:`replSetResizeOplog`
     -
     - 

   * - :dbcommand:`replSetStepDown`
     - :method:`rs.stepDown() <rs.stepDown>`
     - :authaction:`replSetStateChange`

   * - :dbcommand:`replSetSyncFrom`
     - :method:`rs.syncFrom() <rs.syncFrom>`
     - :authaction:`replSetStateChange`

   * - ``resync``
     -
     - :authaction:`resync`

Sharding
~~~~~~~~

.. list-table::
   :widths: 40 30 30
   :header-rows: 1

   * - Commands
     - Shell Method
     - Privilege Actions

   * -
     - :method:`sh.disableBalancing() <sh.disableBalancing>`
     - 

   * -
     - :method:`sh.enableBalancing() <sh.enableBalancing>`
     - 

   * - :dbcommand:`removeShard`
     -
     - :authaction:`removeShard`

   * - :dbcommand:`refineCollectionShardKey` [1]_
     - 
     - :authaction:`refineCollectionShardKey`

.. [1] This command is not supported on :ref:`global write <global-writes-collections>` clusters only.

User and Role Management
~~~~~~~~~~~~~~~~~~~~~~~~

.. note::
   
   As an alternative, see the available :ref:`user-roles`.

.. list-table::
   :widths: 40 30 30
   :header-rows: 1

   * - Commands
     - Shell Method
     - Privilege Actions

   * - :dbcommand:`createUser`
     - :method:`db.createUser() <db.createUser>`
     - :authaction:`createUser`

   * - ``getUser`` [2]_
     - :method:`db.getUser() <db.getUser>` and
       :method:`db.getUsers() <db.getUsers>` [2]_
     - 

   * - :dbcommand:`dropUser`
     - :method:`db.dropUser() <db.dropUser>`
     - :authaction:`dropUser`

   * - :dbcommand:`grantRolesToUser`
     - :method:`db.grantRolesToUser() <db.grantRolesToUser>`
     - :authaction:`grantRole`

   * - :dbcommand:`revokeRolesFromUser`
     - :method:`db.revokeRolesFromUser() <db.revokeRolesFromUser>`
     - :authaction:`revokeRole`

   * - :dbcommand:`updateUser`
     - :method:`db.updateUser() <db.updateUser>`
     - 

   * - :dbcommand:`createRole`
     - :method:`db.createRole() <db.createRole>`
     - :authaction:`createRole`

   * - :dbcommand:`dropRole`
     - :method:`db.dropRole() <db.dropRole>`
     - :authaction:`dropRole`

   * - :dbcommand:`updateRole`
     - :method:`db.updateRole() <db.updateRole>`
     - 

.. [2] You can call ``getUser`` for your own user account.

Aggregation Pipeline
--------------------

.. include:: /includes/fact-planCacheStats-not-supported.rst

MongoDB 4.2+ Incompatibility
----------------------------

MongoDB versions 4.2 and later do not support the following commands 
and methods:

.. list-table::
   :widths: 40 60
   :header-rows: 1

   * - Commands
     - Shell Method

   * - ``parallelCollectionScan``
     -
   * - ``clone``
     - :method:`db.cloneDatabase() <db.cloneDatabase>`
   * - ``copydb``
     - :method:`db.copyDatabase() <db.copyDatabase>`


Contact Support
---------------

Please contact |service| support if your use case requires access
to a command not currently supported by the existing |service|
database user privileges.
