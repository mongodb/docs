.. _connect-atlas-cli:

===============================
Connect from the {+atlas-cli+}
===============================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Select a Connection Method
--------------------------

When you connect to an existing |service| account from the 
{+atlas-cli+}, you can authenticate with one of the following commands:

.. include:: /includes/list-table-atlas-cli-auth.rst

.. important::

   |api| keys are stored in plaintext in the {+atlas-cli+}
   configuration file. Your |api| keys are like passwords. 
   Ensure that you secure the configuration file appropriately.

To create a new |service| account or onboard an existing account that
doesn't have any {+clusters+}, see :ref:`atlas-cli-onboarding`.

Select a use case below to learn more about the available connection
options:

.. tabs::

   .. tab:: Non-programmatic Use
      :tabid: atlas-auth-login

      Use the ``atlas auth login`` command to authenticate with your |service|
      login credentials and a one-time authentication token. ``atlas auth
      login`` requires manual login and verification of an authentication token, 
      which is valid for 12 hours. |api| keys are
      optional when connecting with ``atlas auth login``.

      After you run ``atlas auth login``, you can:

      - :ref:`Connect with minimum required settings <skip-profile-setup>` and specify
        the ``--projectId`` and ``--orgId`` flags with each command. This is the
        quickest way to get started for first-time login.
      - Save your connection settings in a :ref:`profile <atlas-cli-profiles>`. 
        :ref:`Profiles <atlas-cli-profiles>` store the project IDs, organization
        IDs, and, optionally, |api| keys to use in future {+atlas-cli+}
        sessions. To save time, you can specify a profile instead of using the
        ``--projectId`` and ``--orgId`` flags with each command.

   .. tab:: Programmatic Use
      :tabid: atlas-config-init

      You must :ref:`configure API keys <atlas-admin-api-access>` to
      authenticate with this command. 
      
      When you run the
      ``atlas config init`` command, the {+atlas-cli+} prompts you to provide
      your |api| keys and automatically creates a profile that
      stores the |api| keys. ``atlas config init`` is best for programmatic use because
      it doesn't require manual login or
      token verification.

      When you use connect with ``atlas config init``, you can:

      - :ref:`Connect with minimum required settings <skip-profile-setup>` and
        specify the ``--projectId`` and ``--orgId`` flags with each command. This
        is the quickest way to get started for first-time login.
      - Save additional connection settings in a :ref:`profile <atlas-cli-profiles>`. 
        :ref:`Profiles <atlas-cli-profiles>` store the project IDs, organization
        IDs, and, optionally, |api| keys to use in future {+atlas-cli+}
        sessions. To save time, you can specify a profile instead of using the
        ``--projectId`` and ``--orgId`` flags with each command.

.. _skip-profile-setup:


Connect With Minimum Required Settings
--------------------------------------

Select a use case and follow the steps to connect from the {+atlas-cli+} with
minimum required settings.


Complete the Prerequisites
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. tabs::

   .. tab:: Non-programmatic Use
      :tabid: atlas-auth-login

      - :ref:`Install the {+atlas-cli+} <install-atlas-cli>`.
      - Add your host's IP address to the :ref:`IP access list <access-list>`.
  
        If you authenticate with your |service| user credentials
        and your organization's owners enable :atlas:`IP access list for the Atlas UI for an organization
        </tutorial/manage-organizations/#require-ip-access-list-for-the-atlas-ui>`,
        your IP address must be added to the IP access list to run commands
        in this organization. To learn more, see :atlas:`Require IP Access List for the Atlas UI
        </tutorial/manage-organizations/#require-ip-access-list-for-the-atlas-ui>`.


   .. tab:: Programmatic Use
      :tabid: atlas-config-init

      - :ref:`Install the {+atlas-cli+} <install-atlas-cli>`.
      - :ref:`Configure API keys <atlas-admin-api-access>`.


Follow These Steps
~~~~~~~~~~~~~~~~~~

Select a use case and follow the procedure to quickly connect
from the {+atlas-cli+}.

.. tabs::

   .. tab:: Non-programmatic Use
      :tabid: atlas-auth-login

      .. procedure::
         :style: normal

         .. include:: /includes/steps-atlas-cli-auth-nonprog-default.rst

         .. step:: Sign into |service|.

            If you aren't signed in already, sign into your |service| account
            in the browser.

         .. step:: Enter the authorization code.

            Paste your activation code into the browser and click
            :guilabel:`Confirm Authorization`.

         .. step:: Return to the {+atlas-cli+} and accept the default profile options.

            Return to the terminal. If you connect successfully, you see a
            message:

            ``Successfully logged in as {Your Email Address}.``

            Accept the default profile configuration by pressing :guilabel:`Enter` if the following options display:

            - ``Default Org ID``
            - ``Default Project ID``
            - ``Default Output Format``
            - ``Default MongoDB Shell Path``

            .. important:: 

               If you previously set up any profiles with |api| keys for
               MongoCLI, your profiles :ref:`migrate automatically <migrate-to-atlas-cli>`. 
               Some migrated profiles might cause {+atlas-cli+} commands to fail
               when authenticating
               with ``atlas auth login``. The following message displays
               when you run ``atlas auth login`` if there is a conflict:

               .. code-block:: text

                  There was an error fetching your organizations: Global user is
                  from outside whitelisted subnets.
               
               To fix the conflict, open the :ref:`configuration file
               <config-toml-location>`, remove the default profile, and
               run ``atlas auth login`` again.

         .. step:: Issue commands using the ``--projectId`` and ``--orgId`` flags.

            When you run :ref:`{+atlas-cli+} commands <atlas>` for
            the duration of your {+atlas-cli+} session, specify your Project ID and Org ID
            using the ``--projectId`` and ``--orgId`` flags.

            .. example::

               .. code-block:: sh

                  atlas alerts list --projectId 60b3c81153cf986293e2608b

   .. tab:: Programmatic Use
      :tabid: atlas-config-init

      .. procedure::
         :style: normal

         .. include:: /includes/steps-atlas-cli-auth-prog-default.rst

         .. step:: Enter your |api| keys.

            Enter your public and private keys when prompted.

         .. step:: Accept the default profile options.

            Accept the remaining default profile options by pressing :guilabel:`Enter`
            when the following options display:

            - ``Default Org ID``
            - ``Default Project ID``
            - ``Default Output Format``
            - ``Default MongoDB Shell Path``

         .. step:: Issue commands using the ``--projectId`` and ``--orgId`` flags.

            When you run :ref:`{+atlas-cli+} commands <atlas>` for
            the duration of your {+atlas-cli+} session, specify your Project ID and Org ID
            using the ``--projectId`` and ``--orgId`` flags.

            .. example::

               .. code-block:: sh

                  atlas alerts list --projectId 60b3c81153cf986293e2608b



Take the Next Steps
-------------------

Start using the 
:ref:`{+atlas-cli+} commands <atlas>`.

To save connection settings by modifying the default profile or create a
different profile, see :ref:`<atlas-cli-profiles>`.


.. toctree::

   Save Connection Settings </atlas-cli-save-connection-settings>
   Migrate to the Atlas CLI </migrate-to-atlas-cli>



