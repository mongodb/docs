#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/tutorial/troubleshoot-replica-sets.txt:3
msgid "Troubleshoot Replica Sets"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:13
msgid ""
"This section describes common strategies for troubleshooting "
":term:`replica set` deployments."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:19
msgid "Check Replica Set Status"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:21
msgid ""
"To display the current state of the replica set and current state of each"
" member, run the :method:`rs.status()` method in a :binary:`~bin.mongo` "
"shell connected to the replica set's :term:`primary`. For descriptions of"
" the information displayed by :method:`rs.status()`, see "
":doc:`/reference/command/replSetGetStatus`."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:29
msgid ""
"The :method:`rs.status()` method is a wrapper that runs the "
":dbcommand:`replSetGetStatus` database command."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:35
msgid "Check the Replication Lag"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:37
msgid ""
"Replication lag is a delay between an operation on the :term:`primary` "
"and the application of that operation from the :term:`oplog` to the "
":term:`secondary`. Replication lag can be a significant issue and can "
"seriously affect MongoDB :term:`replica set` deployments. Excessive "
"replication lag makes \"lagged\" members ineligible to quickly become "
"primary and increases the possibility that distributed read operations "
"will be inconsistent."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:45
msgid "To check the current length of replication lag:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:47
msgid ""
"In a :binary:`~bin.mongo` shell connected to the primary, call the "
":method:`rs.printSlaveReplicationInfo()` method."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:50
msgid ""
"Returns the ``syncedTo`` value for each member, which shows the time when"
" the last oplog entry was written to the secondary, as shown in the "
"following example:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:63
msgid ""
"A :ref:`delayed member <replica-set-delayed-members>` may show as ``0`` "
"seconds behind the primary when the inactivity period on the primary is "
"greater than the :rsconf:`members[n].slaveDelay` value."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:70
msgid ""
"The :method:`rs.status()` method is a wrapper around the "
":dbcommand:`replSetGetStatus` database command."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:73
msgid ""
"Monitor the rate of replication by checking for non-zero or increasing "
"oplog time values in the :guilabel:`Replication Lag` graph available in "
"`Cloud Manager <https://docs.cloudmanager.mongodb.com/reference/alerts"
"/replication-lag/>`_ and in `Ops Manager "
"<https://docs.opsmanager.mongodb.com/current/reference/alerts"
"/replication-lag/>`_."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:80
msgid "Possible causes of replication lag include:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:82
msgid "**Network Latency**"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:84
msgid ""
"Check the network routes between the members of your set to ensure that "
"there is no packet loss or network routing issue."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:87
msgid ""
"Use tools including ``ping`` to test latency between set members and "
"``traceroute`` to expose the routing of packets network endpoints."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:91
msgid "**Disk Throughput**"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:93
msgid ""
"If the file system and disk device on the secondary is unable to flush "
"data to disk as quickly as the primary, then the secondary will have "
"difficulty keeping state. Disk-related issues are incredibly prevalent on"
" multi-tenant systems, including virtualized instances, and can be "
"transient if the system accesses disk devices over an IP network (as is "
"the case with Amazon's EBS system.)"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:101
msgid ""
"Use system-level tools to assess disk status, including ``iostat`` or "
"``vmstat``."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:104
msgid "**Concurrency**"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:106
msgid ""
"In some cases, long-running operations on the primary can block "
"replication on secondaries. For best results, configure :ref:`write "
"concern <wc-w>` to require confirmation of replication to secondaries. "
"This prevents write operations from returning if replication cannot keep "
"up with the write load."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:112
msgid ""
"You can also use the :term:`database profiler` to see if there are slow "
"queries or long-running operations that correspond to the incidences of "
"lag."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:115
msgid "**Appropriate Write Concern**"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:117
msgid ""
"If you are performing a large data ingestion or bulk load operation that "
"requires a large number of writes to the primary, particularly with "
":writeconcern:`unacknowledged write concern <0>`, the secondaries will "
"not be able to read the oplog fast enough to keep up with changes."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:123
msgid ""
"To prevent this, request :doc:`write acknowledgement write concern "
"</reference/write-concern>` after every 100, 1,000, or another interval "
"to provide an opportunity for secondaries to catch up with the primary."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:128
msgid "For more information see:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:130
msgid ":ref:`Write Concern <wc-w>`"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:131
msgid ":ref:`Replica Set Write Concern <write-operations-replica-sets>`"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:132
msgid ":ref:`replica-set-oplog-sizing`"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:135
msgid "Slow Application of Oplog Entries"
msgstr ""

#: ../source/includes/fact-slow-oplog-log-message-footnote.rst:1
msgid ""
"For MongoDB 3.6 deployments, starting in version 3.6.11, secondary "
"members of a replica set now :ref:`log oplog entries <slow-oplog>` that "
"take longer than the slow operation threshold to apply. These slow oplog "
"messages are logged for the secondaries in the :option:`diagnostic log "
"<mongod --logpath>` under the :data:`REPL` component with the text "
"``applied op: <oplog entry> took <num>ms``. These slow oplog entries "
"depend only on the slow operation threshold. They do not depend on the "
"log levels (either at the system or component level), or the profiling "
"level, or the slow operation sample rate. The profiler does not capture "
"slow oplog entries."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:142
msgid "Test Connections Between all Members"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:144
msgid ""
"All members of a :term:`replica set` must be able to connect to every "
"other member of the set to support replication. Always verify connections"
" in both \"directions.\"  Networking topologies and firewall "
"configurations can prevent normal and required connectivity, which can "
"block replication."
msgstr ""

#: ../source/includes/fact-default-bind-ip.rst:1
msgid ""
"Starting in MongoDB 3.6, MongoDB binaries, :binary:`~bin.mongod` and "
":binary:`~bin.mongos`, bind to localhost (``127.0.0.1``) by default. If "
"the :setting:`net.ipv6` configuration file setting or the ``--ipv6`` "
"command line option is set for the binary, the binary additionally binds "
"to the IPv6 address ``::1``."
msgstr ""

#: ../source/includes/fact-default-bind-ip.rst:7
msgid ""
"Previously, starting from MongoDB 2.6, only the binaries from the "
"official MongoDB RPM (Red Hat, CentOS, Fedora Linux, and derivatives) and"
" DEB (Debian, Ubuntu, and derivatives) packages bind to localhost by "
"default."
msgstr ""

#: ../source/includes/fact-default-bind-ip.rst:12
msgid ""
"When bound only to the localhost, these MongoDB 3.6 binaries can only "
"accept connections from clients (including the :binary:`~bin.mongo` "
"shell, other members in your deployment for replica sets and sharded "
"clusters) that are running on the same machine. Remote clients cannot "
"connect to the binaries bound only to localhost."
msgstr ""

#: ../source/includes/fact-default-bind-ip.rst:18
msgid ""
"To override and bind to other ip addresses, you can use the "
":setting:`net.bindIp` configuration file setting or the ``--bind_ip`` "
"command-line option to specify a list of ip addresses."
msgstr ""

#: ../source/includes/warning-bind-ip-security-considerations.rst:3
msgid ""
"Before binding to a non-localhost (e.g. publicly accessible) IP address, "
"ensure you have secured your cluster from unauthorized access. For a "
"complete list of security recommendations, see :doc:`/administration"
"/security-checklist`. At minimum, consider :ref:`enabling authentication "
"<checklist-auth>` and :doc:`hardening network infrastructure </core"
"/security-network>`."
msgstr ""

#: ../source/includes/fact-default-bind-ip.rst:25
msgid ""
"For example, the following :binary:`~bin.mongod` instance binds to both "
"the localhost and the sample ip address ``198.51.100.1``:"
msgstr ""

#: ../source/includes/fact-default-bind-ip.rst:32
msgid ""
"In order to connect to this instance, remote clients must specify the ip "
"address ``198.51.100.1`` or the hostname associated with the ip address:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:154
msgid "Consider the following example of a bidirectional test of networking:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:159
msgid "``m1.example.net``"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:160
msgid "``m2.example.net``"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:161
msgid "``m3.example.net``"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:163
msgid "All three use the default port ``27017``."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:165
msgid ""
"Test the connection from ``m1.example.net`` to the other hosts with the "
"following operation set ``m1.example.net``:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:174
msgid ""
"Test the connection from ``m2.example.net`` to the other two hosts with "
"the following operation set from ``m2.example.net``, as in:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:184
msgid ""
"You have now tested the connection between ``m2.example.net`` and "
"``m1.example.net`` in both directions."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:187
msgid ""
"Test the connection from ``m3.example.net`` to the other two hosts with "
"the following operation set from the ``m3.example.net`` host, as in:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:197
msgid ""
"If any connection, in any direction fails, check your networking and "
"firewall configuration and reconfigure your environment to allow these "
"connections."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:202
msgid "Socket Exceptions when Rebooting More than One Secondary"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:204
msgid ""
"When you reboot members of a replica set, ensure that the set is able to "
"elect a primary during the maintenance. This means ensuring that a "
"majority of the set's :rsconf:`members[n].votes` are available."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:209
msgid ""
"When a set's active members can no longer form a majority, the set's "
":term:`primary` steps down and becomes a :term:`secondary`. The former "
"primary closes all open connections to client applications. Clients "
"attempting to write to the former primary receive socket exceptions and "
"*Connection reset* errors until the set can elect a primary."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:223
msgid ""
"For more information on votes, see :doc:`/core/replica-set-elections`. "
"For related information on connection errors, see :ref:`faq-keepalive`."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:229
msgid "Check the Size of the Oplog"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:231
msgid ""
"A larger :term:`oplog` can give a replica set a greater tolerance for "
"lag, and make the set more resilient."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:234
msgid ""
"To check the size of the oplog for a given :term:`replica set` member, "
"connect to the member in a :binary:`~bin.mongo` shell and run the "
":method:`rs.printReplicationInfo()` method."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:238
msgid ""
"The output displays the size of the oplog and the date ranges of the "
"operations contained in the oplog. In the following example, the oplog is"
" about 10 MB and is able to fit about 26 hours (94400 seconds) of "
"operations:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:251
msgid ""
"The oplog should be long enough to hold all transactions for the longest "
"downtime you expect on a secondary. At a minimum, an oplog should be able"
" to hold minimum 24 hours of operations; however, many users prefer to "
"have 72 hours or even a week's work of operations."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:256
msgid "For more information on how oplog size affects operations, see:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:258
msgid ":ref:`replica-set-oplog-sizing`,"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:259
msgid ":ref:`replica-set-delayed-members`, and"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:260
msgid ":ref:`replica-set-replication-lag`."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:262
msgid ""
"You normally want the oplog to be the same size on all members. If you "
"resize the oplog, resize it on all members."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:265
msgid "To change oplog size, see the :doc:`/tutorial/change-oplog-size` tutorial."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:269
msgid "Oplog Entry Timestamp Error"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:273
msgid "Consider the following error in :binary:`~bin.mongod` output and logs:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:280
msgid ""
"Often, an incorrectly typed value in the ``ts`` field in the last "
":term:`oplog` entry causes this error. The correct data type is "
"Timestamp."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:284
msgid ""
"Check the type of the ``ts`` value using the following two queries "
"against the oplog collection:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:293
msgid ""
"The first query returns the last document in the oplog, while the second "
"returns the last document in the oplog where the ``ts`` value is a "
"Timestamp. The :query:`$type` operator allows you to select :term:`BSON "
"type <BSON types>` 17, is the Timestamp data type."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:298
msgid ""
"If the queries don't return the same document, then the last document in "
"the oplog has the wrong data type in the ``ts`` field."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:303
msgid "If the first query returns this as the last oplog entry:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:313
msgid ""
"And the second query returns this as the last entry where ``ts`` has the "
"``Timestamp`` type:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:324
msgid ""
"Then the value for the ``ts`` field in the last oplog entry is of the "
"wrong data type."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:327
msgid ""
"To set the proper type for this value and resolve this issue, use an "
"update operation that resembles the following:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:335
msgid ""
"Modify the timestamp values as needed based on your oplog entry. This "
"operation may take some period to complete because the update must scan "
"and pull the entire oplog into memory."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:340
msgid "Duplicate Key Error on ``local.slaves``"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:344
msgid ""
"MongoDB 3.0.0 removes the :data:`local.slaves` collection. For "
"``local.slaves`` error in earlier versions of MongoDB, refer to the "
"appropriate version of the MongoDB Manual."
msgstr ""

#~ msgid ""
#~ "A :ref:`delayed member <replica-set-"
#~ "delayed-members>` may show as ``0`` "
#~ "seconds behind the primary when the "
#~ "inactivity period on the primary is "
#~ "greater than the "
#~ ":data:`~replSetGetConfig.members[n].slaveDelay` value."
#~ msgstr ""

#~ msgid ""
#~ "In some cases, long-running operations"
#~ " on the primary can block replication"
#~ " on secondaries. For best results, "
#~ "configure :ref:`write concern <write-concern>`"
#~ " to require confirmation of replication "
#~ "to secondaries, as described in "
#~ ":ref:`replica set write concern <replica-"
#~ "set-write-concern>`. This prevents write"
#~ " operations from returning if replication"
#~ " cannot keep up with the write "
#~ "load."
#~ msgstr ""

#~ msgid ""
#~ "If you are performing a large data"
#~ " ingestion or bulk load operation "
#~ "that requires a large number of "
#~ "writes to the primary, particularly with"
#~ " :ref:`unacknowledged write concern <write-"
#~ "concern-unacknowledged>`, the secondaries will"
#~ " not be able to read the oplog"
#~ " fast enough to keep up with "
#~ "changes."
#~ msgstr ""

#~ msgid ""
#~ "To prevent this, require :ref:`write "
#~ "acknowledgment or journaled write concern "
#~ "<write-operations-write-concern>` after "
#~ "every 100, 1,000, or an another "
#~ "interval to provide an opportunity for"
#~ " secondaries to catch up with the "
#~ "primary."
#~ msgstr ""

#~ msgid ":ref:`Replica Acknowledge Write Concern <replica-set-write-concern>`"
#~ msgstr ""

#~ msgid ""
#~ "When you reboot members of a "
#~ "replica set, ensure that the set "
#~ "is able to elect a primary during"
#~ " the maintenance. This means ensuring "
#~ "that a majority of the set's "
#~ ":data:`~replSetGetConfig.members[n].votes` are available."
#~ msgstr ""

#~ msgid ""
#~ "The output displays the size of "
#~ "the oplog and the date ranges of"
#~ " the operations contained in the "
#~ "oplog. In the following example, the "
#~ "oplog is about 10MB and is able"
#~ " to fit about 26 hours (94400 "
#~ "seconds) of operations:"
#~ msgstr ""

#~ msgid ""
#~ "To display the current state of "
#~ "the replica set and current state "
#~ "of each member, run the "
#~ ":method:`rs.status()` method in a "
#~ ":program:`mongo` shell connected to the "
#~ "replica set's :term:`primary`. For "
#~ "descriptions of the information displayed "
#~ "by :method:`rs.status()`, see "
#~ ":doc:`/reference/command/replSetGetStatus`."
#~ msgstr ""

#~ msgid ""
#~ "In a :program:`mongo` shell connected to"
#~ " the primary, call the "
#~ ":method:`rs.printSlaveReplicationInfo()` method."
#~ msgstr ""

#~ msgid ""
#~ "Monitor the rate of replication by "
#~ "watching the oplog time in the "
#~ "\"replica\" graph in the |mms-home| "
#~ "and in :products:`Ops Manager, an on-"
#~ "premise solution available in MongoDB "
#~ "Enterprise Advanced </mongodb-enterprise-"
#~ "advanced?jmp=docs>`. For more information see"
#~ " the |mms-docs| and :opsmgr:`Ops "
#~ "Manager documentation </>`."
#~ msgstr ""

#~ msgid ""
#~ "Use the :term:`database profiler` to see"
#~ " if there are slow queries or "
#~ "long-running operations that correspond to"
#~ " the incidences of lag."
#~ msgstr ""

#~ msgid "Example"
#~ msgstr ""

#~ msgid ""
#~ "To check the size of the oplog "
#~ "for a given :term:`replica set` member,"
#~ " connect to the member in a "
#~ ":program:`mongo` shell and run the "
#~ ":method:`rs.printReplicationInfo()` method."
#~ msgstr ""

#~ msgid "Consider the following error in :program:`mongod` output and logs:"
#~ msgstr ""

#~ msgid "On this page"
#~ msgstr ""

#~ msgid ""
#~ "To prevent this, request :doc:`write "
#~ "acknowledgment write concern </reference/write-"
#~ "concern>` after every 100, 1,000, or "
#~ "an another interval to provide an "
#~ "opportunity for secondaries to catch up"
#~ " with the primary."
#~ msgstr ""

