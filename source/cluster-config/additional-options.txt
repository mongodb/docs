.. _create-cluster-more-configuration-options:

============================
Configure Additional Options
============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

You can configure the following :binary:`~bin.mongod` runtime options
on ``M10+`` paid tier clusters.

To view these settings, open the :guilabel:`More Configuration Options`
under :guilabel:`Additional Settings` in the cluster form.

.. figure:: /images/create-cluster-more-config-options.png
   :figwidth: 720px
   :alt: Image showing more cluster configuration options.

.. _set-oplog-size:

Set Oplog Size
--------------

Modify the :term:`oplog` size of the cluster. For sharded
cluster deployments, this modifies the oplog size of each
shard in the cluster. This option corresponds to modifying
the :setting:`replication.oplogSizeMB <replication.oplogSizeMB>`
configuration file option for each :binary:`~bin.mongod` in the
cluster.

Specify your desired :guilabel:`Oplog Size` in megabytes in the
input box.

You can check the oplog size by connecting to your cluster
via the :binary:`~bin.mongo` shell and authenticating as a user
with the :authrole:`Atlas admin` role. Run the
:method:`rs.printReplicationInfo() <rs.printReplicationInfo>`
method to view the current oplog size and time.

.. warning::

   Reducing the size of the oplog requires removing data from the
   oplog. |service| cannot access or restore any oplog
   entries removed as a result of oplog reduction. Consider the
   ramifications of this data loss before reducing the oplog.

Enforce Index Key Limit
-----------------------

Enable or disable enforcement of the 1024-byte index key limit.
Documents can only be updated or inserted if, for all
indexed fields on the target collection, the corresponding index
entries do not exceed 1024 bytes.

If disabled, :binary:`~bin.mongod` writes documents that breach the
limit but does *not* index them. This option corresponds to
modifying the
:parameter:`failIndexKeyTooLong <param.failIndexKeyTooLong>`
parameter via the :dbcommand:`setParameter` command for each
:binary:`~bin.mongod` in the cluster.

Allow Server-Side JavaScript
----------------------------

.. include:: /includes/fact-javascriptEnabled-description.rst

Set Minimum TLS Protocol Version
--------------------------------

Sets the minimum TLS version the cluster accepts for incoming
connections. This option corresponds to configuring the
:setting:`net.ssl.disabledProtocols` configuration file option
for each :binary:`~bin.mongod` in the cluster.

.. admonition:: TLS 1.0 Deprecation
   :class: note

   For users considering this option as a method for enabling the
   deprecated Transport Layer Security (TLS) 1.0 protocol version, please read
   :ref:`faq-tls-1.0-deprecation` before proceeding. |service|
   deprecation of TLS 1.0 improves your security of data-in-transit
   and aligns with industry best practices. Enabling TLS 1.0 for any
   |service| cluster carries security risks. Consider enabling TLS
   1.0 only for as long as required to update your application stack
   to support TLS 1.1 or later.

Require Indexes for All Queries
-------------------------------

Enable or disable the execution of queries that require a collection
scan to return results. This option corresponds to modifying the
:parameter:`notablescan <param.notablescan>` parameter via the
:dbcommand:`setParameter` command for each :binary:`~bin.mongod` in
the cluster.

Considerations
--------------

|service| performs uses a rolling deployment process
to apply modifications to the :guilabel:`Oplog Size` and
:guilabel:`Minimum TLS Protocol Version` options. For sharded clusters,
this involves a rolling restart of all shards and the config
server replica set. To learn more about how |service| supports
high availability during maintenance operations, see
:ref:`high-availability`.
