# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/command/split.txt:3
msgid "split"
msgstr ""

#: ../source/reference/command/split.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/command/split.txt:18
msgid "Splits a :term:`chunk` in a :term:`sharded cluster` into two chunks. The :binary:`~bin.mongos` instance splits and manages chunks automatically, but for exceptional circumstances the :dbcommand:`split` command does allow administrators to manually create splits. See :doc:`/tutorial/split-chunks-in-sharded-cluster` for information on these circumstances, and on the MongoDB shell commands that wrap :dbcommand:`split`."
msgstr ""

#: ../source/reference/command/split.txt:26
msgid "The :dbcommand:`split` command uses the following form:"
msgstr ""

#: ../source/reference/command/split.txt:33
msgid "The :dbcommand:`split` command takes a document with the following fields:"
msgstr ""

#: ../source/includes/apiargs/command-split-field.rst:7
msgid "Field"
msgstr ""

#: ../source/includes/apiargs/command-split-field.rst:9
msgid "Type"
msgstr ""

#: ../source/includes/apiargs/command-split-field.rst:11
msgid "Description"
msgstr ""

#: ../source/includes/apiargs/command-split-field.rst:13
msgid "``split``"
msgstr ""

#: ../source/includes/apiargs/command-split-field.rst:15
msgid "string"
msgstr ""

#: ../source/includes/apiargs/command-split-field.rst:17
#: ../source/includes/apiargs/command-split-field.rst:67
msgid "The name of the :term:`collection` where the :term:`chunk` exists. Specify the collection's full :term:`namespace`, including the database name."
msgstr ""

#: ../source/includes/apiargs/command-split-field.rst:23
msgid "``find``"
msgstr ""

#: ../source/includes/apiargs/command-split-field.rst:25
#: ../source/includes/apiargs/command-split-field.rst:54
msgid "document"
msgstr ""

#: ../source/includes/apiargs/command-split-field.rst:27
#: ../source/includes/apiargs/command-split-field.rst:75
msgid "An query statement that specifies an equality match on the shard key. The match selects the chunk that contains the specified document. You must specify only one of the following: ``find``, ``bounds``, or ``middle``."
msgstr ""

#: ../source/includes/apiargs/command-split-field.rst:32
#: ../source/includes/apiargs/command-split-field.rst:80
msgid "You cannot use the ``find`` option on an empty collection."
msgstr ""

#: ../source/includes/apiargs/command-split-field.rst:36
msgid "``bounds``"
msgstr ""

#: ../source/includes/apiargs/command-split-field.rst:38
msgid "array"
msgstr ""

#: ../source/includes/apiargs/command-split-field.rst:40
#: ../source/includes/apiargs/command-split-field.rst:86
msgid "New in version 2.4: The bounds of a chunk to split. ``bounds`` applies to chunks in collections partitioned using a :term:`hashed shard key`. The parameter's array must consist of two documents specifying the lower and upper shard-key values of the chunk. The values must match the minimum and maximum values of an existing chunk. Specify only one of the following: ``find``, ``bounds``, or ``middle``."
msgstr ""

#: ../source/includes/apiargs/command-split-field.rst:48
#: ../source/includes/apiargs/command-split-field.rst:94
msgid "You cannot use the ``bounds`` option on an empty collection."
msgstr ""

#: ../source/includes/apiargs/command-split-field.rst:52
msgid "``middle``"
msgstr ""

#: ../source/includes/apiargs/command-split-field.rst:56
#: ../source/includes/apiargs/command-split-field.rst:100
msgid "The document to use as the split point to create two chunks. :dbcommand:`split` requires one of the following options: ``find``, ``bounds``, or ``middle``."
msgstr ""

#: ../source/includes/apiargs/command-split-field.rst:0
msgid "field string split"
msgstr ""

#: ../source/includes/apiargs/command-split-field.rst:0
msgid "field document find"
msgstr ""

#: ../source/includes/apiargs/command-split-field.rst:0
msgid "field array bounds"
msgstr ""

#: ../source/includes/apiargs/command-split-field.rst:0
msgid "field document middle"
msgstr ""

#: ../source/reference/command/split.txt:39
msgid "Considerations"
msgstr ""

#: ../source/reference/command/split.txt:41
msgid "When used with either the ``find`` or the ``bounds`` option, the :dbcommand:`split` command splits the chunk along the median. As such, the command cannot use the ``find`` or the ``bounds`` option to split an empty chunk since an empty chunk has no median."
msgstr ""

#: ../source/reference/command/split.txt:46
msgid "To create splits in empty chunks, use either the ``middle`` option with the :dbcommand:`split` command or use the :dbcommand:`splitAt` command."
msgstr ""

#: ../source/reference/command/split.txt:50
msgid "Command Formats"
msgstr ""

#: ../source/reference/command/split.txt:52
msgid "To create a chunk split, connect to a :binary:`~bin.mongos` instance, and issue the following command to the ``admin`` database:"
msgstr ""

#: ../source/reference/command/split.txt:60
#: ../source/reference/command/split.txt:67
msgid "Or:"
msgstr ""

#: ../source/reference/command/split.txt:74
msgid "To create a split for a collection that uses a :term:`hashed shard key`, use the ``bounds`` parameter. Do *not* use the ``middle`` parameter for this purpose."
msgstr ""

#: ../source/includes/warning-splitting-chunks.rst:3
msgid "Be careful when splitting data in a sharded collection to create new chunks. When you shard a collection that has existing data, MongoDB automatically creates chunks to evenly distribute the collection. To split data effectively in a sharded cluster you must consider the number of documents in a chunk and the average document size to create a uniform chunk size. When chunks have irregular sizes, shards may have an equal number of chunks but have very different data sizes. Avoid creating splits that lead to a collection with differently sized chunks."
msgstr ""

#: ../source/reference/command/split.txt:80
msgid ":dbcommand:`moveChunk`, :method:`sh.moveChunk()`, :method:`sh.splitAt()`, and :method:`sh.splitFind()`, which wrap the functionality of :dbcommand:`split`."
msgstr ""

#: ../source/reference/command/split.txt:85
msgid "Examples"
msgstr ""

#: ../source/reference/command/split.txt:87
msgid "The following sections provide examples of the :dbcommand:`split` command."
msgstr ""

#: ../source/reference/command/split.txt:90
msgid "Split a Chunk in Half"
msgstr ""

#: ../source/reference/command/split.txt:96
msgid "The :dbcommand:`split` command identifies the chunk in the ``people`` collection of the ``test`` database, that holds documents that match ``{ _id : 99 }``. :dbcommand:`split` does not require that a match exist, in order to identify the appropriate chunk. Then the command splits it into two chunks of equal size."
msgstr ""

#: ../source/reference/command/split.txt:102
msgid ":dbcommand:`split` creates two equal chunks by range as opposed to size, and does not use the selected point as a boundary for the new chunks"
msgstr ""

#: ../source/reference/command/split.txt:107
msgid "Define an Arbitrary Split Point"
msgstr ""

#: ../source/reference/command/split.txt:109
msgid "To define an arbitrary split point, use the following form:"
msgstr ""

#: ../source/reference/command/split.txt:115
msgid "The :dbcommand:`split` command identifies the chunk in the ``people`` collection of the ``test`` database, that would hold documents matching the query ``{ _id : 99 }``. :dbcommand:`split` does not require that a match exist, in order to identify the appropriate chunk. Then the command splits it into two chunks, with the matching document as the lower bound of one of the split chunks."
msgstr ""

#: ../source/reference/command/split.txt:122
msgid "This form is typically used when :term:`pre-splitting` data in a collection."
msgstr ""

#: ../source/reference/command/split.txt:126
msgid "Split a Chunk Using Values of a Hashed Shard Key"
msgstr ""

#: ../source/reference/command/split.txt:128
msgid "This example uses the :term:`hashed shard key` ``userid`` in a ``people`` collection of a ``test`` database. The following command uses an array holding two single-field documents to represent the minimum and maximum values of the hashed shard key to split the chunk:"
msgstr ""

#: ../source/reference/command/split.txt:140
msgid "MongoDB uses the 64-bit :ref:`NumberLong <shell-type-long>` type to represent the hashed value."
msgstr ""

#: ../source/reference/command/split.txt:143
msgid "Use :method:`sh.status()` to see the existing bounds of the shard keys."
msgstr ""

#: ../source/reference/command/split.txt:146
msgid "Metadata Lock Error"
msgstr ""

#: ../source/reference/command/split.txt:148
msgid "If another process, such as a balancer process, changes metadata while :dbcommand:`split` is running, you may see a ``metadata lock error``."
msgstr ""

#: ../source/reference/command/split.txt:156
msgid "This message indicates that the split has failed with no side effects. Retry the :dbcommand:`split` command."
msgstr ""

