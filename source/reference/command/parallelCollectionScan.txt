======================
parallelCollectionScan
======================

.. default-domain:: mongodb

.. dbcommand:: parallelCollectionScan

   .. versionadded:: 2.6

   Allows applications to use multiple parallel cursors when reading
   all the documents from a collection, thereby increasing throughput.
   The :dbcommand:`parallelCollectionScan` command returns a document
   that contains an array of cursor information. 
   
   Each cursor provides access to the return of a partial set of documents
   from a collection. Iterating each cursor returns every document in the
   collection. Cursors do not contain the results of the database command.
   The result of the database command identifies the cursors, but does not
   contain or constitute the cursors.
   
   The server can return fewer cursors than requested.

   The command has the following syntax:

   .. code-block:: javascript

      {
        parallelCollectionScan: "<collection>",
        numCursors: <integer>
      }

   The :dbcommand:`parallelCollectionScan` command takes the following
   fields:

   .. include:: /reference/command/parallelCollectionScan-field.rst

Output
------

The :dbcommand:`parallelCollectionScan` command returns a document
containing the array of cursor information:

.. code-block:: javascript

   {
       "cursors" : [
           {
               "cursor" : {
                   "firstBatch" : [ ],
                   "ns" : "<database name>.<collection name>",
                   "id" : NumberLong("155949257847")
               },
               "ok" : true
           }
       ],
       "ok" : 1
   }


.. data:: parallelCollectionScan.cursors

   An array with one or more cursors returned with the command.

.. data:: parallelCollectionScan.cursors.cursor

   For each cursor returned, a document with details about the cursor.

.. data:: parallelCollectionScan.cursors.cursor.firstBatch

   An empty first batch is useful for quickly returning a cursor or
   failure message without doing significant server-side work. See
   :ref:`cursor batches <cursor-batches>`.

.. data:: parallelCollectionScan.cursors.cursor.ns

   The namespace for each cursor.

.. data:: parallelCollectionScan.cursors.cursor.id

   The unique id for each cursor.

.. data:: parallelCollectionScan.cursors.ok

   The status of each cursor returned with the command.

.. data:: parallelCollectionScan.ok

   A value of ``1`` indicates the :dbcommand:`parallelCollectionScan`
   command succeeded. A value of ``0`` indicates an error.

