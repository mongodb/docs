=====================
Text Search Operators
=====================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. note::

   .. include:: /includes/extracts/views-unsupported-text-search.rst

Query Framework
---------------

.. include:: /includes/fact-use-text-operator.rst

Use the :expression:`$meta` query operator to obtain and sort by the
relevance score of each matching document. For example, to order a
list of coffee shops in order of relevance, run the following:

.. code-block:: javascript

   db.stores.find(
      { $text: { $search: "coffee shop cake" } },
      { score: { $meta: "textScore" } }
   ).sort( { score: { $meta: "textScore" } } )

For more information on the :query:`$text` and :expression:`$meta`
operators, including restrictions and behavior, see:

- :query:`$text Reference Page <$text>`

- :ref:`$text Query Examples <text-query-examples>`

- :expression:`$meta` projection operator


Aggregation Framework
---------------------

When working with the :doc:`/aggregation` framework, use
:pipeline:`$match` with a :query:`$text` expression to execute a text
search query. To sort the results in order of relevance score,use the
:expression:`$meta` *aggregation operator* in the :pipeline:`$sort`
stage [#meta-aggregation]_.

For more information and examples of text search in the
:doc:`/aggregation` framework, see
:doc:`/tutorial/text-search-in-aggregation`.

.. [#meta-aggregation]

   .. include:: /includes/fact-meta-operator-disambiguation.rst
   