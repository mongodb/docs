# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: 2014-04-08 19:14+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/reference/method/db.collection.findAndModify.txt:3
msgid "db.collection.findAndModify()"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:18
msgid "Definition"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:23
msgid ""
"Modifies and returns a single document. By default, the returned document"
" does not include the modifications made on the update. To return the "
"document with the modifications made on the update, use the ``new`` "
"option. The :method:`~db.collection.findAndModify()` method is a shell "
"helper around the :dbcommand:`findAndModify` command."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:30
msgid ""
"The :method:`~db.collection.findAndModify()` method has the following "
"form:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:51
msgid ""
"The :method:`db.collection.findAndModify()` method takes a document "
"parameter with the following embedded document fields:"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:7
msgid "Parameter"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:9
msgid "Type"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:11
msgid "Description"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:13
msgid "``query``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:15
#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:27
#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:47
#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:68
#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:98
#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:117
msgid "document"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:17
#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:147
msgid ""
"Optional. The selection criteria for the modification. The ``query`` "
"field employs the same :ref:`query selectors <query-selectors>` as used "
"in the :method:`db.collection.find()` method. Although the query may "
"match multiple documents, |operation| **will only select one document to "
"modify**."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:25
msgid "``sort``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:29
#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:157
msgid ""
"Optional. Determines which document the operation modifies if the query "
"selects multiple documents. |operation| modifies the first document in "
"the sort order specified by this argument."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:35
msgid "``remove``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:37
#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:58
#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:78
#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:86
msgid "boolean"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:39
#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:165
msgid ""
"Must specify either the ``remove`` or the ``update`` field. Removes the "
"document specified in the ``query`` field. Set this to ``true`` to remove"
" the selected document . The default is ``false``."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:45
msgid "``update``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:49
#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:173
msgid ""
"Must specify either the ``remove`` or the ``update`` field. Performs an "
"update of the selected document. The ``update`` field employs the same "
":ref:`update operators <update-operators>` or ``field: value`` "
"specifications to modify the selected document."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:56
msgid "``new``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:60
#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:182
msgid ""
"Optional. When ``true``, returns the modified document rather than the "
"original. The |operation| method ignores the ``new`` option for "
"``remove`` operations. The default is ``false``."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:66
msgid "``fields``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:70
#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:190
msgid ""
"Optional. A subset of fields to return. The ``fields`` document specifies"
" an inclusion of a field with ``1``, as in: ``fields: { <field1>: 1, "
"<field2>: 1, ... }``. See :ref:`projection <read-operations-projection>`."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:76
msgid "``upsert``"
msgstr ""

#: ../source/includes/extracts/findAndModify-behavior-method.rst:1
msgid "Optional. Used in conjuction with the ``update`` field."
msgstr ""

#: ../source/includes/extracts/findAndModify-behavior-method.rst:3
msgid "When ``true``, :method:`~db.collection.findAndModify()` either:"
msgstr ""

#: ../source/includes/extracts/findAndModify-behavior-method.rst:5
msgid ""
"Creates a new document if no documents match the ``query``. For more "
"details see :ref:`upsert behavior <upsert-behavior>`."
msgstr ""

#: ../source/includes/extracts/findAndModify-behavior-method.rst:8
msgid "Updates a single document that matches the ``query``."
msgstr ""

#: ../source/includes/extracts/findAndModify-behavior-method.rst:10
msgid ""
"To avoid multiple upserts, ensure that the ``query`` fields are "
":ref:`uniquely indexed <index-type-unique>`."
msgstr ""

#: ../source/includes/extracts/findAndModify-behavior-method.rst:13
msgid "Defaults to ``false``."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:84
msgid "``bypassDocumentValidation``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:88
#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:204
msgid ""
"Optional. Enables :method:`db.collection.findAndModify` to bypass "
"document validation during the operation. This lets you update documents "
"that do not meet the validation requirements."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:96
msgid "``writeConcern``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:100
#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:214
msgid ""
"Optional. A document expressing the :doc:`write concern </reference"
"/write-concern>`. Omit to use the default write concern."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:107
msgid "``maxTimeMS``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:109
msgid "integer"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:111
#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:223
msgid ""
"Optional. Specifies a time limit in milliseconds for processing the "
"operation."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:115
msgid "``collation``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:119
#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:229
msgid "Optional."
msgstr ""

#: ../source/includes/extracts/collation-option.rst:1
msgid "Specifies the :ref:`collation <collation>`  to use for the operation."
msgstr ""

#: ../source/includes/extracts/collation-description.rst:1
msgid ""
":doc:`Collation </reference/collation>` allows users to specify language-"
"specific rules for string comparison, such as rules for lettercase and "
"accent marks."
msgstr ""

#: ../source/includes/extracts/collation-option-specification.rst:2
msgid "The collation option has the following syntax:"
msgstr ""

#: ../source/includes/extracts/collation-option-specification.rst:17
msgid ""
"When specifying collation, the ``locale`` field is mandatory; all other "
"collation fields are optional. For descriptions of the fields, see :ref"
":`collation-document-fields`."
msgstr ""

#: ../source/includes/extracts/collation-option.rst:7
msgid ""
"If the collation is unspecified but the collection has a default "
"collation (see :method:`db.createCollection()`), the operation uses the "
"collation specified for the collection."
msgstr ""

#: ../source/includes/extracts/collation-unspecified.rst:1
msgid ""
"If no collation is specified for the collection or for the operations, "
"MongoDB uses the simple binary comparison used in prior versions for "
"string comparisons."
msgstr ""

#: ../source/includes/extracts/collation-single-per-operation.rst:2
msgid ""
"You cannot specify multiple collations for an operation. For example, you"
" cannot specify different collations per field, or if performing a find "
"with a sort, you cannot use one collation for the find and another for "
"the sort."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:125
msgid "``arrayFilters``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:127
msgid "array"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:129
#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:237
msgid ""
"Optional. An array of filter documents that determines which array "
"elements to modify for an update operation on an array field."
msgstr ""

#: ../source/includes/extracts/arrayFilters-details.rst:2
msgid ""
"In the update document, use the :update:`$[\\<identifier\\>]` filtered "
"positional operator to define an identifier, which you then reference in "
"the array filter documents. You cannot have an array filter document for "
"an identifier if the identifier is not included in the update document."
msgstr ""

#: ../source/includes/extracts/arrayFilters-details.rst:9
msgid ""
"The ``<identifier>`` must begin with a lowercase letter and contain only "
"alphanumeric characters."
msgstr ""

#: ../source/includes/extracts/arrayFilters-details.rst:12
msgid ""
"You can include the same identifier multiple times in the update "
"document; however, for each distinct identifier (``$[identifier]``) in "
"the update document, you must specify **exactly one** corresponding array"
" filter document. That is, you cannot specify multiple array filter "
"documents for the same identifier. For example, if the update statement "
"includes the identifier ``x`` (possibly multiple times), you cannot "
"specify the following for ``arrayFilters`` that includes 2 separate "
"filter documents for ``x``:"
msgstr ""

#: ../source/includes/extracts/arrayFilters-details.rst:28
msgid ""
"However, you can specify compound conditions on the same identifier in a "
"single filter document, such as in the following examples:"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:135
#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst:243
msgid "For examples, see :ref:`findAndModify-arrayFilters`."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst
msgid "param document query"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst
msgid "param document sort"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst
msgid "param boolean remove"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst
msgid "param document update"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst
msgid "param boolean new"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst
msgid "param document fields"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst
msgid "param boolean upsert"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst
msgid "param boolean bypassDocumentValidation"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst
msgid "param document writeConcern"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst
msgid "param integer maxTimeMS"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst
msgid "param document collation"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.findAndModify-param.rst
msgid "param array arrayFilters"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:59
msgid "Return Data"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:61
msgid ""
"For remove operations, if the query matches a document, "
":method:`~db.collection.findAndModify()` returns the removed document. If"
" the query does not match a document to remove, "
":method:`~db.collection.findAndModify()` returns ``null``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:66
msgid ""
"For update operations, :method:`~db.collection.findAndModify()` returns "
"one of the following:"
msgstr ""

#: ../source/includes/extracts/fact-findandmodify-method-return.rst:1
msgid "If the ``new`` parameter is not set or is ``false``:"
msgstr ""

#: ../source/includes/extracts/fact-findandmodify-method-return.rst:3
msgid "the pre-modification document if the query matches a document;"
msgstr ""

#: ../source/includes/extracts/fact-findandmodify-method-return.rst:5
#: ../source/includes/extracts/fact-findandmodify-method-return.rst:13
msgid "otherwise, ``null``."
msgstr ""

#: ../source/includes/extracts/fact-findandmodify-method-return.rst:7
msgid "If ``new`` is ``true``:"
msgstr ""

#: ../source/includes/extracts/fact-findandmodify-method-return.rst:9
msgid "the modified document if the query returns a match;"
msgstr ""

#: ../source/includes/extracts/fact-findandmodify-method-return.rst:11
msgid ""
"the inserted document if ``upsert: true`` and no document matches the "
"query;"
msgstr ""

#: ../source/includes/extracts/fact-findandmodify-method-return.rst:17
msgid ""
"In previous versions, if for the update, ``sort`` is specified, and "
"``upsert: true``, and the ``new`` option is not set or ``new: false``, "
":method:`db.collection.findAndModify()` returns an empty document ``{}`` "
"instead of ``null``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:72
msgid "Behavior"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:77
msgid "Upsert and Unique Index"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:79
msgid ""
"When :method:`~db.collection.findAndModify()` includes the ``upsert: "
"true`` option **and** the query field(s) is not uniquely indexed, the "
"method could insert a document multiple times in certain circumstances."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:83
msgid ""
"In the following example, no document with the name ``Andy`` exists, and "
"multiple clients issue the following command:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:95
msgid ""
"Then, if these clients' :method:`~db.collection.findAndModify()` methods "
"finish the ``query`` phase before any command starts the ``modify`` "
"phase, **and** there is no unique index on the ``name`` field, the "
"commands may all perform an upsert, creating multiple duplicate "
"documents."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:101
msgid ""
"To prevent the creation of multiple duplicate documents with the same "
"name, create a :ref:`unique index <index-type-unique>` on the ``name`` "
"field. With this unique index in place, the multiple methods will exhibit"
" one of the following behaviors:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:106
msgid ""
"Exactly one :method:`~db.collection.findAndModify()` successfully inserts"
" a new document."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:109
msgid ""
"Zero or more :method:`~db.collection.findAndModify()` methods update the "
"newly inserted document."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:112
msgid ""
"Zero or more :method:`~db.collection.findAndModify()` methods fail when "
"they attempt to insert documents with the same name. If the method fails "
"due to the unique index constraint violation on the ``name`` field, you "
"can retry the method. Absent a delete of the document, the retry should "
"not fail."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:119
msgid "Sharded Collections"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:121
msgid ""
"When using :dbcommand:`findAndModify` in a :term:`sharded <sharding>` "
"environment, the ``query`` **must** contain the :term:`shard key` for all"
" operations against the sharded cluster for the *sharded* collections."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:125
msgid ""
":dbcommand:`findAndModify` operations issued against "
":binary:`~bin.mongos` instances for *non-sharded* collections function "
"normally."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:129
msgid "Document Validation"
msgstr ""

#: ../source/includes/extracts/bypassDocumentValidation-db.collection.findAndModify.rst:1
msgid ""
"The :method:`db.collection.findAndModify()` method adds support for the "
"``bypassDocumentValidation`` option, which lets you bypass :doc:`document"
" validation </core/schema-validation>` when inserting or updating "
"documents in a collection with validation rules."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:136
msgid "Comparisons with the ``update`` Method"
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:1
msgid ""
"When updating a document, |operation| and the "
":method:`~db.collection.update()` method operate differently:"
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:4
msgid ""
"By default, both operations modify a single document. However, the "
":method:`~db.collection.update()` method with its ``multi`` option can "
"modify more than one document."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:8
msgid ""
"If multiple documents match the update criteria, for |operation|, you can"
" specify a ``sort`` to provide some measure of control on which document "
"to update."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:12
msgid ""
"With the default behavior of the :method:`~db.collection.update()` "
"method, you cannot specify which single document to update when multiple "
"documents match."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:16
msgid ""
"By default, |operation| returns |return-object|. To obtain the updated "
"document, use the ``new`` option."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:19
msgid ""
"The :method:`~db.collection.update()` method returns a "
":method:`WriteResult` object that contains the status of the operation. "
"To return the updated document, use the :method:`~db.collection.find()` "
"method. However, other updates may have modified the document between "
"your update and the document retrieval. Also, if the update modified only"
" a single document but multiple documents matched, you will need to use "
"additional logic to identify the updated document."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:27
msgid ""
"When modifying a *single* document, both |operation| and the "
":method:`~db.collection.update()` method *atomically* update the "
"document. See :doc:`/core/write-operations-atomicity` for more details "
"about interactions and order of operations of these methods."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:144
msgid "Examples"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:147
msgid "Update and Return"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:149
msgid ""
"The following method updates and returns an existing document in the "
"people collection where the document matches the query criteria:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:160
msgid "This method performs the following actions:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:162
msgid ""
"The ``query`` finds a document in the ``people`` collection where the "
"``name`` field has the value ``Tom``, the ``state`` field has the value "
"``active`` and the ``rating`` field has a value :operator:`greater than "
"<$gt>` 10."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:167
msgid ""
"The ``sort`` orders the results of the query in ascending order. If "
"multiple documents meet the ``query`` condition, the method will select "
"for modification the first document as ordered by this ``sort``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:172
msgid ""
"The update :operator:`increments <$inc>` the value of the ``score`` field"
" by 1."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:175
msgid ""
"The method returns the original (i.e. pre-modification) document selected"
" for this update:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:188
msgid ""
"To return the modified document, add the ``new:true`` option to the "
"method."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:191
msgid ""
"If no document matched the ``query`` condition, the method returns "
"``null``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:195
msgid "Upsert"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:197
msgid ""
"The following method includes the ``upsert: true`` option for the "
"``update`` operation to either update a matching document or, if no "
"matching document exists, create a new document:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:211
msgid "If the method finds a matching document, the method performs an update."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:213
msgid ""
"If the method does **not** find a matching document, the method creates a"
" new document. Because the method included the ``sort`` option, it "
"returns an empty document ``{ }`` as the original (pre-modification) "
"document:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:222
msgid ""
"If the method did **not** include a ``sort`` option, the method returns "
"``null``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:230
msgid "Return New Document"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:232
msgid ""
"The following method includes both the ``upsert: true`` option and the "
"``new:true`` option. The method either updates a matching document and "
"returns the updated document or, if no matching document exists, inserts "
"a document and returns the newly inserted document in the ``value`` "
"field."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:238
msgid ""
"In the following example, no document in the ``people`` collection "
"matches the ``query`` condition:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:251
msgid "The method returns the newly inserted document:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:266
msgid "Sort and Remove"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:268
msgid ""
"By including a ``sort`` specification on the ``rating`` field, the "
"following example removes from the ``people`` collection a single "
"document with the ``state`` value of ``active`` and the lowest ``rating``"
" among the matching documents:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:283
msgid "The method returns the deleted document:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:296
msgid "Specify Collation"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:300
msgid "A collection ``myColl`` has the following documents:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:308
msgid "The following operation includes the :ref:`collation <collation>` option:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:320
msgid "The operation returns the following document:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:329
msgid "Specify ``arrayFilters`` for an Array Update Operations"
msgstr ""

#: ../source/includes/extracts/arrayFilters-blurb.rst:4
msgid ""
"Starting in MongoDB 3.6, when updating an array field, you can specify "
"``arrayFilters`` that determine which array elements to update."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:334
msgid "Update Elements Match ``arrayFilters`` Criteria"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:336
msgid "Create a collection ``students`` with the following documents:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:348
msgid ""
"To modify all elements that are greater than or equal to ``100`` in the "
"``grades`` array, use the filtered positional operator "
":update:`$[\\<identifier\\>]` with the ``arrayFilters`` option in the "
":method:`db.collection.findAndModify` method:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:363
#: ../source/reference/method/db.collection.findAndModify.txt:413
msgid ""
"The operation updates the ``grades`` field for a single document, and "
"after the operation, the collection has the following documents:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:374
msgid "Update Specific Elements of an Array of Documents"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:376
msgid "Create a collection ``students2`` with the following documents:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:399
msgid ""
"To modify the value of the ``mean`` field for all elements in the "
"``grades`` array where the grade is greater than or equal to ``85``, use "
"the filtered positional operator :update:`$[\\<identifier\\>]` with the "
"``arrayFilters`` in the :method:`db.collection.findAndModify` method:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:437
msgid ":ref:`perform-findAndModify-linearizable-reads`"
msgstr ""

#~ msgid ""
#~ "Atomically modifies and returns a single"
#~ " document. By default, the returned "
#~ "document does not include the "
#~ "modifications made on the update. To "
#~ "return the document with the "
#~ "modifications made on the update, use"
#~ " the ``new`` option. The "
#~ ":method:`~db.collection.findAndModify()` method is a"
#~ " shell helper around the "
#~ ":dbcommand:`findAndModify` command."
#~ msgstr ""

#~ msgid ""
#~ "If the query finds no document for"
#~ " an ``upsert``, operation, "
#~ ":method:`~db.collection.findAndModify()` performs an "
#~ "insert. If ``new`` is ``false``, **and**"
#~ " the ``sort`` option is **NOT** "
#~ "specified, the method returns ``null``."
#~ msgstr ""

#~ msgid ""
#~ "Previously returned an empty document "
#~ "``{}``. See :ref:`the 2.2 release notes"
#~ " <2.2-findandmodify-returns-null>` for more"
#~ " information."
#~ msgstr ""

#~ msgid ""
#~ "If the query finds no document for"
#~ " an ``upsert``, "
#~ ":method:`~db.collection.findAndModify()` performs an "
#~ "insert. If ``new`` is ``false``, **and**"
#~ " a ``sort`` option, the method "
#~ "returns an empty document ``{}``."
#~ msgstr ""

#~ msgid ""
#~ "When :method:`~db.collection.findAndModify()` includes "
#~ "the ``upsert: true`` option **and** the"
#~ " query field(s) is not uniquely "
#~ "indexed, the method could insert a "
#~ "document multiple times in certain "
#~ "circumstances. For instance, if multiple "
#~ "clients each invoke the method with "
#~ "the same ``query`` condition and these"
#~ " methods complete the ``find`` phase "
#~ "before any of methods perform the "
#~ "``modify`` phase, these methods could "
#~ "insert the same document."
#~ msgstr ""

#~ msgid "Update and Insert"
#~ msgstr ""

#~ msgid ""
#~ "The following method includes the "
#~ "``upsert: true`` option to insert a "
#~ "new document if no document matches "
#~ "the ``query`` condition:"
#~ msgstr ""

#~ msgid ""
#~ "If the method does **not** find a"
#~ " matching document, the method performs "
#~ "an upsert. Because the method included"
#~ " the ``sort`` option, it returns an"
#~ " empty document ``{ }`` as the "
#~ "original (pre-modification) document:"
#~ msgstr ""

#~ msgid "Update, Insert and Return New Document"
#~ msgstr ""

#~ msgid ""
#~ "The following method includes both the"
#~ " ``upsert: true`` option and the "
#~ "``new:true`` option to return the newly"
#~ " inserted document if a document "
#~ "matching the ``query`` is not found:"
#~ msgstr ""

# 9a880764741b45419048bc356c99019e
#~ msgid ""
#~ "The :method:`db.collection.findAndModify()` method "
#~ "takes a document parameter with the "
#~ "following subdocument fields:"
#~ msgstr ""

# fc672f046f6844f9a125488c8ad8595a
#~ msgid ""
#~ "The :method:`~db.collection.findAndModify()` method "
#~ "returns either: the pre-modification "
#~ "document or, if ``new: true`` is "
#~ "set, the modified document."
#~ msgstr ""

# 0d67bfb6f7bd44c6ab6652e8941627db
#~ msgid ""
#~ "If the query finds no document for"
#~ " ``update`` or ``remove`` operations, "
#~ ":method:`~db.collection.findAndModify()` returns ``null``."
#~ msgstr ""

# 6ca3136ff4874c6db43c5a27d1ccac1d
#~ msgid "Behaviors"
#~ msgstr ""

# 822a0c05ba0e477aabe58ff436470525
#~ msgid ""
#~ "Then, if these clients' "
#~ ":method:`~db.collection.findAndModify()` methods finish"
#~ " the ``query`` phase before any "
#~ "command starts the ``modify`` phase, "
#~ "**and** there is no unique index "
#~ "on the ``name`` field, the commands "
#~ "may all perform an upsert. To "
#~ "prevent this condition, create a "
#~ ":ref:`unique index <index-type-unique>` "
#~ "on the ``name`` field. With the "
#~ "unique index in place, the multiple "
#~ "methods would observe one of the "
#~ "following behaviors:"
#~ msgstr ""

# f4f013f9da0e4b8f83ea1692f35bea39
#~ msgid ""
#~ "Exactly one :method:`~db.collection.findAndModify()` "
#~ "would successfully insert a new "
#~ "document."
#~ msgstr ""

# ab0728a7ad574c9eaa70a6e33a988887
#~ msgid ""
#~ "Zero or more "
#~ ":method:`~db.collection.findAndModify()` methods would "
#~ "update the newly inserted document."
#~ msgstr ""

# 88ee88f464c148b5b5335d4c28a2e34c
#~ msgid ""
#~ "Zero or more "
#~ ":method:`~db.collection.findAndModify()` methods would "
#~ "fail when they attempted to insert "
#~ "a duplicate. If the method fails "
#~ "due to a unique index constraint "
#~ "violation, you can retry the method. "
#~ "Absent a delete of the document, "
#~ "the retry should not fail."
#~ msgstr ""

# d8872f3e377f4560beb68c831ba372ad
#~ msgid ""
#~ "When using :dbcommand:`findAndModify` in a "
#~ ":term:`sharded <sharding>` environment, the "
#~ "``query`` **must** contain the :term:`shard"
#~ " key` for all operations against the"
#~ " shard cluster for the *sharded* "
#~ "collections."
#~ msgstr ""

# 1409c463647b498eaf5fd84d29ddbd49
#~ msgid ""
#~ ":dbcommand:`findAndModify` operations issued against"
#~ " :program:`mongos` instances for *non-"
#~ "sharded* collections function normally."
#~ msgstr ""

# 21ac9a92717d49d29c63cc86fd0ff549
#~ msgid ""
#~ "If no document matched the ``query`` "
#~ "condition, the method returns ``null``:"
#~ msgstr ""

#~ msgid ""
#~ "If the query finds no document for"
#~ " an ``update`` with an ``upsert`` "
#~ "operation, :method:`~db.collection.findAndModify()` "
#~ "creates a new document. If ``new`` "
#~ "is ``false``, **and** the ``sort`` "
#~ "option is **NOT** specified, the method"
#~ " returns ``null``."
#~ msgstr ""

#~ msgid ""
#~ "If the query finds no document for"
#~ " an ``update`` with an ``upsert`` "
#~ "operation, :method:`~db.collection.findAndModify()` "
#~ "creates a new document. If ``new`` "
#~ "is ``false``, **and** a ``sort`` option,"
#~ " the method returns an empty document"
#~ " ``{}``."
#~ msgstr ""

#~ msgid ""
#~ "When :method:`~db.collection.findAndModify()` includes "
#~ "the ``upsert: true`` option **and** the"
#~ " query field(s) is not uniquely "
#~ "indexed, the method could insert a "
#~ "document multiple times in certain "
#~ "circumstances. For instance, if multiple "
#~ "clients each invoke the method with "
#~ "the same ``query`` condition and these"
#~ " methods complete the ``find`` phase "
#~ "before any of methods perform the "
#~ "``modify`` phase, these methods could "
#~ "result in the insertion of the "
#~ "same document."
#~ msgstr ""

#~ msgid ""
#~ "By default, |operation| method returns "
#~ "|return-object|. To obtain the updated "
#~ "document, use the ``new`` option."
#~ msgstr ""

#~ msgid ""
#~ "You cannot specify a :doc:`write concern"
#~ " </core/write-concern>` to |operation| to"
#~ " override the default write concern "
#~ "whereas, starting in MongoDB 2.6, you"
#~ " can specify a write concern to "
#~ "the :method:`~db.collection.update()` method."
#~ msgstr ""

#~ msgid ""
#~ "When modifying a *single* document, both"
#~ " |operation| and the "
#~ ":method:`~db.collection.update()` method *atomically* "
#~ "update the document. See :doc:`/tutorial"
#~ "/isolate-sequence-of-operations` for more"
#~ " details about interactions and order "
#~ "of operations of these methods."
#~ msgstr ""

