.. _x509-rotate-member-to-extensionValue:

==========================================================================
Rotate X.509 Certificates to Use Extension Values on Self-Managed Clusters
==========================================================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. versionadded:: 7.0

.. include:: /includes/x509-cluster-membership-intro

Clusters adopting new certificates can use the 
:parameter:`tlsClusterAuthX509Override` parameter to migrate from
certificates identified using DN attributes to certificates identified
using extension values during the certificate rotation procedure.

Once all members use certificates with the new value, remove the override 
to begin rejecting the now out of date certificates.

About This Task
---------------

Consider a replica set where member certificates 
(set using the :setting:`~net.tls.clusterFile` and 
:setting:`~net.tls.certificateKeyFile` settings) 
have Distinguished Name (DN) values that use the ``MongoDB`` organization
and ``MongoDB Server`` organizational unit (set using the
:setting:`~net.tls.clusterAuthX509.attributes` setting).

.. code-block:: yaml
   :emphasize-lines: 6, 8, 11

   security:
     clusterAuthMode:      x509
   net:
     tls:
       mode:               requireTLS
       certificateKeyFile: /etc/mycerts/10gen-server1.pem
       CAFile:             /etc/mycerts/ca.pem
       clusterFile:        /etc/mycerts/10gen-cluster1.pem
       clusterCAFile:      /etc/mycerts/ca.pem
       clusterAuthX509:
          attributes:      O=MongoDB, OU=MongoDB Server

This tutorial assumes that the new X.509 certificates meet
membership certificate and all other requirements and that
the cluster configuration identifies peer certificates
using extension values.

For details, see :ref:`x509-member-certificate-requirements`.

Steps
-----

These steps update member certificates to use new X.509 certificates 
on a cluster configured with the 
:setting:`~net.tls.clusterAuthX509.attributes` setting.

Initially, the clusters identify members using DN values. 
With the new certificates, the servers instead identify members
using the ``mongodb://example.mongodb.net`` extension value and ignore certificate attributes.

.. procedure::


   .. step:: Update the TLS Cluster Membership Configuration

      Update the configuration file of each server:

      * Change the :setting:`~net.tls.clusterAuthX509` setting to match 
        the new certificate by replacing the  
        :setting:`~net.tls.clusterAuthX509.attributes` setting with the 
        the :setting:`~net.tls.clusterAuthX509.extensionValue` setting.

      * Set the :parameter:`tlsClusterAuthX509Override` parameter to use the
        DN attributes of the old certificate.

      For example: 

      .. code-block:: yaml
         :emphasize-lines: 9, 13

         net:
           tls:
             mode:               requireTLS
             certificateKeyFile: /etc/mycerts/mongodb-server1.pem
             CAFile:             /etc/mycerts/ca.pem
             clusterFile:        /etc/mycerts/mongodb-cluster1.pem
             clusterCAFile:      /etc/mycerts/ca.pem
             clusterAuthX509:
                extensionValue:  mongodb://example.mongodb.net
         security:
           clusterAuthMode: x509
         setParameter:
            tlsClusterAuthX509Override: { attributes: O=MongoDB, OU=MongoDBServer }

   .. step:: Restart Secondary Cluster Members
   
      .. include:: /includes/procedure-replica-set-restart-secondaries

      Secondary servers in the replica set now accept peer connections from
      members using certificates with the new extension values as well as 
      the old DN attributes.
   
   .. step:: Restart Primary Cluster Member
   
      .. include:: /includes/procedure-replica-set-restart-primary

      The primary server in the replica set steps down and restarts as a
      secondary that now accepts peer connections from members using
      certificates with the new extension value as well as the old DN
      attributes.

   .. step:: Update the TLS Certificates

      Update the configuration file of each server:

      * Change the :setting:`net.tls.certificateKeyFile` setting to use the 
        new certificate.

      * Change the :setting:`net.tls.clusterFile` setting to use the 
        new certificate.

      For example:

      .. code-block:: yaml
         :emphasize-lines: 4, 6

         net:
           tls:
             mode:               requireTLS
             certificateKeyFile: /etc/mycerts/mongodb-server2.pem
             CAFile:             /etc/mycerts/ca.pem
             clusterFile:        /etc/mycerts/mongodb-cluster2.pem
             clusterCAFile:      /etc/mycerts/ca.pem
             clusterAuthX509:
                extensionValue:  mongodb://example.mongodb.net
         security:
           clusterAuthMode: x509
         setParameter:
            tlsClusterAuthX509Override: { attributes: O=MongoDB, OU=MongoDB Server }
         
   .. step:: Restart Secondary Cluster Members
   
      .. include:: /includes/procedure-replica-set-restart-secondaries

      Secondary servers in the replica set now use the new X.509 certificates.
   
   .. step:: Restart Primary Cluster Member
   
      .. include:: /includes/procedure-replica-set-restart-primary

      The primary server in the replica set steps down and restarts as a 
      secondary that uses the new X.509 certificate. 

   .. step:: Remove the DN Certification Override Configuration

      With all members of the cluster now using the new X.509 certificate, 
      update the configuration file to remove the :setting:`setParameter` 
      settings for the :parameter:`tlsClusterAuthX509Override` parameter.

      For example:

      .. code-block:: yaml

         net:
           tls:
             mode:               requireTLS
             certificateKeyFile: /etc/mycerts/mongodb-server1.pem
             CAFile:             /etc/mycerts/ca.pem
             clusterFile:        /etc/mycerts/mongodb-cluster1.pem
             clusterCAFile:      /etc/mycerts/ca.pem
             clusterAuthX509:
                extensionValue:  mongodb://example.mongodb.net
         security:
           clusterAuthMode: x509

      This ensures that the server doesn't configure the old certificate
      settings on startup.

   .. step:: Restart Secondary Cluster Members
   
      .. include:: /includes/procedure-replica-set-restart-secondaries

      Secondary servers in the replica set restart and no longer accept
      connections from the old X.509 certificates.
   
   .. step:: Restart Primary Cluster Member
   
      .. include:: /includes/procedure-replica-set-restart-primary

      The primary server steps down and restarts as a secondary that no longer
      accepts connections from the old X.509 certificates.


Learn More
----------

* :ref:`security-auth-x509`
* :ref:`x509-internal-authentication`
* :ref:`upgrade-to-x509-internal-authentication`
* :ref:`x509-rotate-member-certs`
