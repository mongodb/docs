=====================================
Install MongoDB Enterprise on Windows
=====================================

.. default-domain:: mongodb

.. versionadded:: 2.6.0

Synopsis
--------

This tutorial explains how to install MongoDB Enterprise Server for
Microsoft Windows.

Operating MongoDB on Windows is similar to MongoDB on other
platforms. Most components behave the same.

Requirements
------------

MongoDB Enterprise Server for Windows requires Windows Server 2008
R2 or later. All other software dependencies are included in the
MSI installer.

Procedure
---------

Download MongoDB Enterprise for Windows
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Download the latest production release of MongoDB Enterprise from the
`MongoDB downloads page <https://www.mongodb.com/products/downloads/mongodb-enterprise>`_.

Install MongoDB Enterprise for Windows
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Run the downloaded MSI installer. Make configuration choices as
prompted.

Set up the Environment
~~~~~~~~~~~~~~~~~~~~~~

.. note::

   MongoDB is self-contained and does not have any other
   system dependencies. You can install MongoDB into any folder
   (e.g. ``D:\test\mongodb``) and run it from there. The installation
   wizard includes an option to select an installation directory.

MongoDB requires a :term:`data folder <dbpath>` to store all
data. MongoDB's default data directory path is ``\data\db``. Create
this folder using the following commands from a :guilabel:`Command
Prompt`:

.. code-block:: powershell

   md \data\db

.. note::

   You may specify an alternate path for ``\data\db`` with the
   :setting:`dbpath` setting for :program:`mongod.exe`, as in the
   following example:

   .. code-block:: powershell

      "C:\Program Files\MongoDB\bin\mongod.exe" --dbpath d:\test\mongodb\data

   If your path includes spaces, enclose the entire path in double
   quotes, for example:

   .. code-block:: powershell

      "C:\Program Files\MongoDB\bin\mongod.exe" --dbpath "d:\test\mongo db data"

Start MongoDB
~~~~~~~~~~~~~

To start MongoDB, execute from the :guilabel:`Command Prompt`:

.. code-block:: powershell

   "C:\Program Files\MongoDB\bin\mongod.exe"

This starts the main MongoDB database process. The ``waiting for
connections`` message in the console output indicates that the
mongod.exe process is running successfully.

.. note::

   Depending on the security level of your system, Windows may pop
   up a :guilabel:`Security Alert` dialog box about blocking "some
   features" of ``"C:\Program Files\MongoDB\bin\mongod.exe"`` from communicating
   on networks. All users should select ``Private Networks, such
   as my home or work network`` and click ``Allow access``. For
   additional information on security and MongoDB, please read the
   :doc:`/core/security` page.

.. warning::

   Do not make :program:`mongod.exe` visible on public networks
   without running in "Secure Mode" with the :setting:`auth` setting.
   MongoDB is designed to be run in trusted environments and the
   database does not enable "Secure Mode" by default.

To connect to MongoDB using the :program:`mongo.exe <mongo>` shell,
open a :guilabel:`Command Prompt` and issue the following command:

.. code-block:: powershell

   "C:\Program Files\MongoDB\bin\mongo.exe"

.. note::

   Executing ``"C:\Program Files\MongoDB\bin\mongo.exe"`` starts
   the :program:`mongo.exe` shell in a separate :guilabel:`Command
   Prompt` window.

The :program:`mongo.exe <mongo>` shell connects to
:program:`mongod.exe` running on the localhost interface and port
``27017`` by default. At the :program:`mongo.exe <mongo>` prompt,
use the following commands to insert a document in the ``test``
:term:`collection`, and then retrieve that record:

.. code-block:: javascript

   db.test.save( { a: 1 } )
   db.test.find()

.. seealso:: :program:`mongo` and :doc:`/reference/method`. To
   develop applications using .NET, see the documentation of
   :ecosystem:`C# and MongoDB </drivers/csharp>` for more information.

.. _tutorial-mongod-as-windows-service:

MongoDB as a Windows Service
----------------------------

Set up MongoDB Enterprise Windows Server as a :guilabel:`Windows
Service` that starts automatically at boot time.

Configure the System
~~~~~~~~~~~~~~~~~~~~

Create a :doc:`configuration file </reference/configuration-options>`
and a directory path for MongoDB log output (:setting:`logpath`):

#. Create a specific directory for MongoDB log files:

   .. code-block:: powershell

      md "C:\Program Files\MongoDB\log"

#. Create a configuration file for the :setting:`logpath` option for
   MongoDB in the :guilabel:`Command Prompt`:

   .. code-block:: powershell

      echo logpath="C:\Program Files\MongoDB\log\mongo.log" > "C:\Program Files\MongoDB\mongod.cfg"

Install and Run the MongoDB Service
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Run all of the following commands in :guilabel:`Command Prompt` with
"Administrative Privileges:"

#. Install the MongoDB service:

   .. code-block:: powershell

      "C:\Program Files\MongoDB\bin\mongod.exe" --config "C:\Program Files\MongoDB\mongod.cfg" --install

   Modify the path to the ``mongod.cfg`` file as needed.

   .. important::

      For :option:`--install <mongod.exe --install>` to succeed,
      you *must* specify the :setting:`logpath` run-time option.

.. note::

   To use an alternate :setting:`dbpath`, specify the path in
   ``"C:\Program Files\MongoDB\mongod.cfg"``, or use :option:`--dbpath <mongod
   --dbpath>` from the command line.

   If the :setting:`dbpath` directory does not exist,
   :program:`mongod.exe` will not start. The default value for
   :setting:`dbpath` is ``\data\db``.

Stop or Remove the MongoDB Service
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- To stop the MongoDB service:

  .. code-block:: powershell

     net stop MongoDB

- To remove the MongoDB service:

  .. code-block:: powershell

     "C:\Program Files\MongoDB\bin\mongod.exe" --remove
