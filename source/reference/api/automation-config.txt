=================================
Automation Configuration Resource
=================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Overview
--------

The Public API provides the ``automationConfig`` resource to let you
manipulate your groupâ€™s :doc:`automation configuration </reference/cluster-
configuration>`. The configuration defines the various MongoDB clusters,
replica sets and standalones in the deployment and defines how each process
runs. The Automation Agents build the deployment according to the goals
specified. Each Automation Agent is responsible for the MongoDB processes that
run on its host. The configuration also specifies settings for the
deployment's agents.

When a running MongoDB process matches its defined configuration, the process
is in "goal state." When all processes on all hosts are in goal state, the
deployment itself is in goal state.

For example automation configurations, please see the following page on GitHub:
`<https://github.com/10gen-labs/mms-api-examples/tree/master/automation/>`_.

To update the automation configuration, you must issue the request from an IP
address on your user account's :ref:`whitelist <whitelist-for-api-operations>`.

Endpoints
---------

Get the Automation Configuration
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Retrieve the current automation configuration for a group.

.. code-block:: none
   
   GET /api/public/v1.0/groups/GROUP-ID/automationConfig

.. _update-automation-configuration-via-api:

Update the Automation Configuration
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none

   PUT /api/public/v1.0/groups/GROUP-ID/automationConfig

Use ``PUT`` to update a group's automation configuration. **Do not** use
``PATCH``. For steps for updating an automation configuration, see
:doc:`/tutorial/update-automation-configuration`.

To make updates to the Monitoring Agent or Backup Agent *other than*
``hostname``, you must do so through a different endpoint. See
:ref:`update-monitoring-or-backup-agent-via-api`.

When you submit updates, |mms| makes internal modifications to the data
and then saves your new configuration version. For example, |mms| might
add a field to each specified community MongoDB
version to indicate where the agents download them from.

The Automation Agents continuously poll |mms| for changes to the
configuration and fetch configuration updates when they occur. The agents
then adjust the states of their live processes to match.

.. _concurrent-cluster-config:

.. warning:: 
   There is **no protection** in the Public API to prevent
   concurrent modifications. If two administrators both start with a
   configuration based on the current version, make their own
   modifications, and then submit their modifications, the later
   modification wins.

.. _update-monitoring-or-backup-agent-via-api:

Update the Monitoring Agent or Backup Agent
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some attributes of the `monitoringVersions` and `backupVersions` objects
cannot be updated through the ``automationConfig`` endpoint.
|mms| provides the following endpoints to update these fields.

.. important::

   Do **not** use these endpoints to update the agent's host. To update
   ``monitoringVersions.hostname`` or ``backupVersions.hostname``, use the
   endpoint to :ref:`update the entire configuration
   <update-automation-configuration-via-api>`.

Update Monitoring Agent attributes:

.. code-block:: none

   PUT /api/public/v1.0/groups/GROUP-ID/automationConfig/monitoringAgentConfig

Update Backup Agent attributes:

.. code-block:: none

   PUT /api/public/v1.0/groups/GROUP-ID/automationConfig/backupAgentConfig

The endpoints update the following agent attributes. Pass an object with all
the attributes *that you use*, whether or not the value is changing. If you do
not use a field, do not include it:

- ``logPath`` (required for non-Windows operating systems)
- ``logPathWindows`` (required for Windows operating systems)
- ``logRotate``

  - ``logRotate.sizeThresholdMB``
  - ``logRotate.timeThresholdHrs``
  - ``logRotate.numUncompressed``
  - ``logRotate.percentOfDiskspace``

- ``username``
- ``password``
- ``kerberosPrincipal``
- ``kerberosKeytab``
- ``kerberosWindowsUsername`` (only required if Windows MongoDB deployment uses Kerberos authentication)
- ``kerberosWindowsPassword`` (only required if Windows MongoDB deployment uses Kerberos authentication)
- ``sslPEMKeyFile``
- ``sslPEMKeyFileWindows`` (only required if deployment contains Windows processes)
- ``sslPEMKeyPwd``

.. _other-representations-automation-configuration:

Other Representations of the Automation Configuration
-----------------------------------------------------

The Automation Agent stores a copy of the configuration in the
``mms-cluster-config-backup.json`` file. The agent stores the most recent
version of configuration **with which the agent was able to reach goal
state**. If an agent is not able to process configuration changes, it
continues to store an older version of the configuration.

.. only:: onprem

   Users with :ref:`global roles <global-roles>` can view |mms|'s internal
   representation of the deployment configuration, which is much larger than
   the automation configuration and includes additional fields used only
   internally. **Never** use this representation to update the automation
   configuration. The representation is called the ``Raw AutomationConfig`` is
   viewable through the :guilabel:`Deployment` page.

.. _automation-configuration-sample-entity:

Automation Configuration Entity
-------------------------------

This section describes the fields that comprise the automation configuration.
For additional examples, see the following page on GitHub:
`<https://github.com/10gen-labs/mms-api-examples/tree/master/automation/>`_.

.. contents:: This section includes the following:
   :local:
   :backlinks: none
   :depth: 1
   :class: twocols

Configuration Version
~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/api/automation-configuration/version.rst

Download Base
~~~~~~~~~~~~~

.. include:: /includes/api/automation-configuration/options.rst

MongoDB Versions Specifications
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/api/automation-configuration/mongoDbVersions.rst

Automation Agent
~~~~~~~~~~~~~~~~

.. include:: /includes/api/automation-configuration/agentVersion.rst

Monitoring Agent
~~~~~~~~~~~~~~~~

.. include:: /includes/api/automation-configuration/monitoringVersions.rst

Backup Agent
~~~~~~~~~~~~

.. include:: /includes/api/automation-configuration/backupVersions.rst

MongoDB Instances
~~~~~~~~~~~~~~~~~

.. include:: /includes/api/automation-configuration/processes.rst

Replica Sets
~~~~~~~~~~~~

.. include:: /includes/api/automation-configuration/replicaSets.rst

Sharded Clusters
~~~~~~~~~~~~~~~~

.. include:: /includes/api/automation-configuration/sharding.rst

Cluster Balancer
~~~~~~~~~~~~~~~~

.. include:: /includes/api/automation-configuration/balancer.rst

Authentication
~~~~~~~~~~~~~~

.. include:: /includes/api/automation-configuration/auth.rst

SSL
~~~

.. include:: /includes/api/automation-configuration/ssl.rst

MongoDB Roles
~~~~~~~~~~~~~

.. include:: /includes/api/automation-configuration/roles.rst

Kerberos
~~~~~~~~

.. include:: /includes/api/automation-configuration/kerberos.rst

Indexes
~~~~~~~

.. include:: /includes/api/automation-configuration/indexConfigs.rst

Examples
--------

Get the Automation Configuration
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Request
```````

.. only:: cloud

   .. cssclass:: copyable-code
   .. code-block:: sh

      curl -u "{username}:{apiKey}" --digest -i "https://cloud.mongodb.com/api/public/v1.0/groups/533c5895b91030606f21033a/automationConfig"

.. only:: onprem

   .. cssclass:: copyable-code
   .. code-block:: sh

      curl -u "{username}:{apiKey}" --digest -i "https://{opsManagerHost}:{port}/api/public/v1.0/groups/533c5895b91030606f21033a/automationConfig"

Response
````````

.. code-block:: http

   HTTP/1.1 200 OK

.. code-block:: json

   {
     <automation configuration>
   }

Update the Automation Configuration
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Request
```````

The following replaces the automation configuration with the updated
configuration saved in ``Users/admin/updated-conf.json``. For an example of an
updated configuration document, see :ref:`example-updated-configuration`.

.. only:: cloud

   .. cssclass:: copyable-code
   .. code-block:: sh

      curl -u "{username}:{apiKey}" -H "Content-Type: application/json" --digest -i -X PUT "https://cloud.mongodb.com/api/public/v1.0/groups/533c5895b91030606f21033a/automationConfig" --data @/Users/admin/updated-conf.json

.. only:: onprem

   .. cssclass:: copyable-code
   .. code-block:: sh

      curl -u "{username}:{apiKey}" -H "Content-Type: application/json" --digest -i -X PUT "https://{opsManagerHost}:{port}/api/public/v1.0/groups/533c5895b91030606f21033a/automationConfig" --data @/Users/admin/updated-conf.json

Response
````````

.. code-block:: http

   HTTP/1.1 200 OK

.. code-block:: json

   {}

.. _example-updated-configuration:

Example Automation Configuration
````````````````````````````````

The following is an example entity passed through the ``--data @<configuration>``
option. The exact fields included in an automation configuration depend on the
|mms| group.

The example uses ``...`` when a field has multiple entries and also in place
of some field values. For detailed information on a field, see the
:ref:`automation-configuration-sample-entity` section on this page.

.. code-block:: json

   {
     "options" : {
       "downloadBase" : "/var/lib/mongodb-mms-automation",
       "downloadBaseWindows" : "C :\\MMSAutomation\\versions"
     },
     "mongoDbVersions" : [
       {
         "name" : "3.2.0",
         "builds" : [
           {
             "platform" : "windows",
             "url" : "https ://fastdl.mongodb.org/win32/mongodb-win32-x86_64-2008plus-3.2.0.zip",
             "gitVersion" : "45d947729a0315accb6d4f15a6b06be6d9c19fe7",
             "architecture" : "amd64",
             "bits" : 64,
             "win2008plus" : true
           },
           ...
         ],
       },
       ...
     ],
     "agentVersion" : {
     "directoryUrl" : "https://s3.amazonaws.com/mongodb-mms-build-agent/releases/prod/",
     "name" : "2.6.4.1612-1"
     },
     "monitoringVersions" : [
       {
         "name" : "4.1.0.251-1",
         "hostname" : "example.net",
         "baseUrl" : null
       },
       ...
     ],
     "backupVersions" : [
       {
         "name" : "4.1.0.347-1",
         "hostname" : "example.net",
         "baseUrl" : null
       },
       ...
     ],
     "processes" : [
       {
         "name" : "MyCLUSTER_MySHARD_0_0",
         "processType" : "mongod",
         "version" : "2.6.7",
         "hostname" : "testAutoAPI-0.dns.placeholder",
         "logRotate" : {
           "sizeThresholdMB" : 1000,
           "timeThresholdHrs" : 24
         },
         "authSchemaVersion" : 1,
         "args2_6" : {
           "net" : {
             "port" : 27017
           },
           "storage" : {
             "dbPath" : "/data/MyCLUSTER_MySHARD_0_0"
           },
           "systemLog" : {
             "path" : "/data/MyCLUSTER_MySHARD_0_0/mongodb.log",
             "destination" : "file"
           },
           "replication" : {
             "replSetName" : "MySHARD_0"
           },
           "operationProfiling" : {}
         }
       },
       ...
     ],
     "replicaSets" : [
       {
         "_id" : "MySHARD_0",
         "members" : [
           {
             "_id" : 0,
             "host" : "MyCLUSTER_MySHARD_0_0",
             "priority" : 1,
             "votes" : 1,
             "slaveDelay" : 0,
             "hidden" : false,
             "arbiterOnly" : false
           },
           {
             "_id" : 1,
             "host" : "MyCLUSTER_MySHARD_0_1",
             "priority" : 1,
             "votes" : 1,
             "slaveDelay" : 0,
             "hidden" : false,
             "arbiterOnly" : false
           },
           {
             "_id" : 2,
             "host" : "MyCLUSTER_MySHARD_0_2",
             "priority" : 1,
             "votes" : 1,
             "slaveDelay" : 0,
             "hidden" : false,
             "arbiterOnly" : false
           }
         ]
       },
       ...
     ],
     "sharding" : [
       {
         "name" : "myShardedCluster",
         "configServer" : [
           "MyCLUSTER_MyCONFIG_SERVER_6",
           "MyCLUSTER_MyCONFIG_SERVER_7",
           "MyCLUSTER_MyCONFIG_SERVER_8"
         ],
         "shards" : [
           {
             "_id" : "MySHARD_0",
             "rs" : "MySHARD_0"
           },
           {
             "_id" : "MySHARD_1",
             "rs" : "MySHARD_1"
           }
         ]
       }
     ],
     "balancer" : { ... },
     "auth" : {
       "authoritativeSet" : false,
       "disabled" : true
       "usersDeleted" : [ ],
       "usersWanted" : [ ]
     },
     "ssl" : { ... },
     "roles" : [
       {
         "role" : ... ,
         "db" : ... ,
         "privileges" : [ ... ],
         "roles" : [ ... ]
       },
       ...
     ],
     "kerberos" : {
       "serviceName" : ...
     },
     "indexConfigs" : [ ]
   }

Update the Monitoring Agent
~~~~~~~~~~~~~~~~~~~~~~~~~~~

Request
```````

.. only:: cloud

   .. cssclass:: copyable-code
   .. code-block:: sh

      curl -u "{username}:{apiKey}" -H "Content-Type: application/json" --digest -i -X PUT https://cloud.mongodb.com/api/public/v1.0/groups/533c5895b91030606f21033a/automationConfig/monitoringAgentConfig --data '
      {
        "logPath": "/var/log/mongodb-mms-automation/monitoring-agent.log",
        "logRotate": {
          "sizeThresholdMB": 1000,
          "timeThresholdHrs": 12
        }
      }'

.. only:: onprem

   .. cssclass:: copyable-code
   .. code-block:: sh

      curl -u "{username}:{apiKey}" -H "Content-Type: application/json" --digest -i -X PUT https://{opsManagerHost}:{port}/api/public/v1.0/groups/533c5895b91030606f21033a/automationConfig/monitoringAgentConfig --data '
      {
        "logPath": "/var/log/mongodb-mms-automation/monitoring-agent.log",
        "logRotate": {
          "sizeThresholdMB": 1000,
          "timeThresholdHrs": 12
        }
      }'

Response
````````

.. code-block:: http

   HTTP/1.1 200 OK

.. code-block:: json

   {}

Update the Backup Agent
~~~~~~~~~~~~~~~~~~~~~~~

Request
```````

.. only:: cloud

   .. code-block:: none

      curl -u "{username}:{apiKey}" -H "Content-Type: application/json" --digest -i -X PUT https://cloud.mongodb.com/api/public/v1.0/groups/533c5895b91030606f21033a/automationConfig/backupAgentConfig --data '
      {
        "logPath": "/var/log/mongodb-mms-automation/backup-agent.log",
        "logRotate": {
          "sizeThresholdMB": 1000,
          "timeThresholdHrs": 36
        }
      }'

.. only:: onprem

   .. code-block:: none

      curl -u "{username}:{apiKey}" -H "Content-Type: application/json" --digest -i -X PUT https://{opsManagerHost}:{port}/api/public/v1.0/groups/533c5895b91030606f21033a/automationConfig/backupAgentConfig --data '
      {
        "logPath": "/var/log/mongodb-mms-automation/backup-agent.log",
        "logRotate": {
          "sizeThresholdMB": 1000,
          "timeThresholdHrs": 36
        }
      }'

Response
````````

.. code-block:: http

   HTTP/1.1 200 OK

.. code-block:: json

   {}
