# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: 2013-12-16 22:38+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# 72d9f727e54c48a58f72a0873882cf12
#: ../source/tutorial/query-documents.txt:6
msgid "Query Documents"
msgstr ""

# c8aec2a71c514913842cc92af1ac69ac
#: ../source/tutorial/query-documents.txt
msgid "On this page"
msgstr ""

# a45fad270054492fb4d38ebea6a6915e
#: ../source/tutorial/query-documents.txt:17
msgid "Query Method"
msgstr ""

# 917d47ef0e274a429de4f9ecaa1983f2
#: ../source/tutorial/query-documents.txt:19
msgid ""
"MongoDB provides the :method:`db.collection.find()` method to read "
"documents from a collection. The :method:`db.collection.find()` method "
"returns a :doc:`cursor </tutorial/iterate-a-cursor>` to the matching "
"documents."
msgstr ""

# 47ad12da58354480b88e4e57e2e0426d
#: ../source/tutorial/query-documents.txt:28
msgid ""
"For the :method:`db.collection.find()` method, you can specify the "
"following optional fields:"
msgstr ""

# f0d5ca28b222427ebd63c7f0ffabd99b
#: ../source/tutorial/query-documents.txt:31
msgid ""
"a :ref:`query filter <document-query-filter>` to specify which documents "
"to return."
msgstr ""

# 10f59c01ef3b4d24a72038e08b9c37e0
#: ../source/tutorial/query-documents.txt:34
msgid ""
"a query projection to specifies which fields from the matching documents "
"to return. The projection limits the amount of data that MongoDB returns "
"to the client over the network."
msgstr ""

# 1adeb9ec2923415699e011ae5797ee58
#: ../source/tutorial/query-documents.txt:38
msgid ""
"You can optionally add a cursor modifier to impose limits, skips, and "
"sort orders. The order of documents returned by a query is not defined "
"unless you specify a :method:`~cursor.sort()`."
msgstr ""

# 1a4902c98b4248b0ad15ef24845b21e4
#: ../source/tutorial/query-documents.txt:43
msgid "Example Collection"
msgstr ""

# 4939a3728a8e4e4bbc4df60e63303581
#: ../source/tutorial/query-documents.txt:45
msgid ""
"The examples on this page use the :method:`db.collection.find()` method "
"in the :program:`mongo` shell. In the :program:`mongo` shell, if the "
"returned cursor is not assigned to a variable using the ``var`` keyword, "
"then the cursor is automatically iterated up to 20 times [#set-shell-"
"batch-size]_ to print up to the first 20 documents in the results."
msgstr ""

# ee9ef08a9acb4bfd9a87a1c47d80f0a1
#: ../source/tutorial/query-documents.txt:52
msgid ""
"To populate the ``users`` collection referenced in the examples, run the "
"following in :program:`mongo` shell:"
msgstr ""

# 5fa2499e520f472681cbc8a7b33e8e73
#: ../source/tutorial/query-documents.txt:57
msgid ""
"If the ``users`` collection already contains documents with the same "
"``_id`` values, you need to :method:`drop <db.collection.drop()>` the "
"collection (``db.users.drop()``) before inserting the example documents."
msgstr ""

# e5fa915fa1e048e48be086d40daef24d
#: ../source/tutorial/query-documents.txt:153
msgid "Select All Documents in a Collection"
msgstr ""

# 4a4e80f0a8bf4a6a8c36fb7bf7d8701c
#: ../source/tutorial/query-documents.txt:155
msgid ""
"An empty :ref:`query filter <document-query-filter>` document (``{}``) "
"selects all documents in the collection:"
msgstr ""

# 24ad28db935740e7b36c8e427680c821
#: ../source/tutorial/query-documents.txt:162
msgid ""
"Omitting a query filter document to the :method:`db.collection.find()` is"
" equivalent to specifying an empty query document. As such, the following"
" operation is equivalent to the previous operation:"
msgstr ""

# 49bce4722f7b45338e10089d5810f7ee
#: ../source/tutorial/query-documents.txt:173
msgid "Specify Query Filter Conditions"
msgstr ""

# 5011a45d4be3460f96689468ab71ca7a
#: ../source/tutorial/query-documents.txt:176
msgid "Specify Equality Condition"
msgstr ""

# 0468bd33dd734f8187e5f151065c0917
#: ../source/includes/extracts/filter-equality.rst:2
msgid ""
"A :ref:`query filter document <document-query-filter>` can specify "
"equality condition with ``<field>:<value>`` expressions to select all "
"documents that contain the ``<field>`` with the specified ``<value>``:"
msgstr ""

# 70c59e36fced4a1798ef6f3a4bbb67d2
#: ../source/tutorial/query-documents.txt:180
msgid ""
"The following example retrieves from the ``users`` collection all "
"documents where the ``status`` field has the value ``\"A\"``:"
msgstr ""

# 5e89b4312a174824bd1f50b937c31661
#: ../source/tutorial/query-documents.txt:188
msgid "Specify Conditions Using Query Operators"
msgstr ""

# e7fbdd74039c49e1848bbe9a3ed89c16
#: ../source/includes/extracts/filter-query-operators.rst:2
msgid ""
"A :ref:`query filter document <document-query-filter>` can use the "
":ref:`query operators <query-selectors>` to specify conditions in the "
"following form:"
msgstr ""

# fde0fb763aee4ddbb4a0de34b03aa7c6
#: ../source/tutorial/query-documents.txt:192
msgid ""
"The following example retrieves all documents from the ``users`` "
"collection where ``status`` equals either ``\"P\"`` or ``\"D\"``:"
msgstr ""

# 16b8edf877274dce85c09f84d44fe8e5
#: ../source/tutorial/query-documents.txt:200
msgid ""
"Although you can express this query using the :query:`$or` operator, use "
"the :query:`$in` operator rather than the :query:`$or` operator when "
"performing equality checks on the same field."
msgstr ""

# 9c724173e52948758fc79548f81808a8
#: ../source/tutorial/query-documents.txt:204
msgid ""
"Refer to the :doc:`/reference/operator/query` document for the complete "
"list of query operators."
msgstr ""

# 396da5853cdc45c995c19ab20b63fc11
#: ../source/tutorial/query-documents.txt:208
msgid "Specify ``AND`` Conditions"
msgstr ""

# 48be524ee0b9411388a9b204cf86b8ae
#: ../source/tutorial/query-documents.txt:210
msgid ""
"A compound query can specify conditions for more than one field in the "
"collection's documents. Implicitly, a logical ``AND`` conjunction "
"connects the clauses of a compound query so that the query selects the "
"documents in the collection that match all the conditions."
msgstr ""

# 570993d7dbd548339324842ce7435015
#: ../source/tutorial/query-documents.txt:215
msgid ""
"The following example retrieves all documents in the ``users`` collection"
" where the ``status`` equals ``\"A\"`` **and** ``age`` is less than "
"(:query:`$lt`) ``30``:"
msgstr ""

# 71ea773081704122a077ed4b10b9949e
#: ../source/tutorial/query-documents.txt:223
msgid ""
"See :ref:`comparison operators <query-selectors-comparison>` for other "
"comparison operators."
msgstr ""

# 7c2ef9a9533647fdaba6182f9f9e9106
#: ../source/tutorial/query-documents.txt:227
msgid "Specify ``OR`` Conditions"
msgstr ""

# d57ae72c2a7745ff9e16571ad20af0b9
#: ../source/tutorial/query-documents.txt:229
msgid ""
"Using the :query:`$or` operator, you can specify a compound query that "
"joins each clause with a logical ``OR`` conjunction so that the query "
"selects the documents in the collection that match at least one "
"condition."
msgstr ""

# 264531ba67104cf3b3c0bf47e75f4a95
#: ../source/tutorial/query-documents.txt:234
msgid ""
"The following example retrieves all documents in the collection where the"
" ``status`` equals ``\"A\"`` **or** ``age`` is less than (:query:`$lt`) "
"``30``:"
msgstr ""

# c79cd9b85ff9499385a9d0427a602074
#: ../source/tutorial/query-documents.txt:247
msgid ""
"Queries which use :ref:`comparison operators <query-selectors-"
"comparison>` are subject to :ref:`type-bracketing`."
msgstr ""

# 5d2a9780f4344d4d9185b1835f1b33f8
#: ../source/tutorial/query-documents.txt:251
msgid "Specify ``AND`` as well as ``OR`` Conditions"
msgstr ""

# 8043c18840cf4b47a4f00085afa3fa4b
#: ../source/tutorial/query-documents.txt:253
msgid ""
"With additional clauses, you can specify precise conditions for matching "
"documents."
msgstr ""

# 069e117992c94322993597cd32d48517
#: ../source/tutorial/query-documents.txt:256
msgid ""
"In the following example, the compound query document selects all "
"documents in the collection where the ``status`` equals ``\"A\"`` **and**"
" *either* ``age`` is less than than (:query:`$lt`) ``30`` *or* ``type`` "
"equals ``1``:"
msgstr ""

# 027faca550514dc7a0aaa6f2b824322a
#: ../source/tutorial/query-documents.txt:274
msgid "Query on Embedded Documents"
msgstr ""

# f39e8894a1d24198b04dfb8855b642dc
#: ../source/tutorial/query-documents.txt:276
msgid ""
"When the field holds an embedded document, a query can either specify an "
"exact match on the embedded document or specify a match by individual "
"fields in the embedded document using the :term:`dot notation`."
msgstr ""

# a93034ee5ca64882a732533dcf26e04f
#: ../source/tutorial/query-documents.txt:282
msgid "Exact Match on the Embedded Document"
msgstr ""

# f8285a5f0d2048d29e17ff5bb948fd7d
#: ../source/tutorial/query-documents.txt:284
msgid ""
"To specify an exact equality match on the whole embedded document, use "
"the query document ``{ <field>: <value> }`` where ``<value>`` is the "
"document to match. Equality matches on an embedded document require an "
"*exact* match of the specified ``<value>``, including the field order."
msgstr ""

# e25786930a654888ba7e441718a1935b
#: ../source/tutorial/query-documents.txt:289
msgid ""
"In the following example, the query matches all documents where the "
"``favorites`` field is an embedded document that contains only the fields"
" ``artist`` equal to ``\"Picasso\"`` and ``food`` equal to ``\"pizza\"``,"
" in that order:"
msgstr ""

# 8a8ad681ca6f49d4bede038d76730d60
#: ../source/tutorial/query-documents.txt:299
msgid "Equality Match on Fields within an Embedded Document"
msgstr ""

# d37065a3002342c592bf947ece964d68
#: ../source/tutorial/query-documents.txt:301
msgid ""
"Use the :term:`dot notation` to match by specific fields in an embedded "
"document. Equality matches for specific fields in an embedded document "
"will select documents in the collection where the embedded document "
"contains the specified fields with the specified values. The embedded "
"document can contain additional fields."
msgstr ""

# a9459a3c622b4a5686220d1e6b5a7b51
#: ../source/tutorial/query-documents.txt:307
msgid ""
"In the following example, the query uses the :term:`dot notation` to "
"match all documents where the ``favorites`` field is an embedded document"
" that includes the field ``artist`` equal to ``\"Picasso\"`` and may "
"contain other fields:"
msgstr ""

# d078b771e1c749988fdf1f45709bd13e
#: ../source/tutorial/query-documents.txt:319
msgid "Query on Arrays"
msgstr ""

# f179d0c4ea924e1f89df5e1d39701aaa
#: ../source/tutorial/query-documents.txt:321
msgid ""
"When the field holds an array, you can query for an exact array match or "
"for specific values in the array. If the array holds embedded documents, "
"you can query for specific fields in the embedded documents using "
":term:`dot notation`."
msgstr ""

# 015b381fac374c649451f5d89f3164b8
#: ../source/tutorial/query-documents.txt:326
msgid ""
"If you specify multiple conditions using the :query:`$elemMatch` "
"operator, the array must contain at least one element that satisfies all "
"the conditions. See :ref:`single-element-satisfies-criteria`."
msgstr ""

# e48b30622f4b414184c3d3047fbc62f1
#: ../source/tutorial/query-documents.txt:330
msgid ""
"If you specify multiple conditions without using the :query:`$elemMatch` "
"operator, then some combination of the array elements, not necessarily a "
"single element, must satisfy all the conditions; i.e. different elements "
"in the array can satisfy different parts of the conditions. See :ref"
":`combination-of-elements-satisfies-criteria`."
msgstr ""

# 2212341ea60240f08a8b553da8540d1f
#: ../source/tutorial/query-documents.txt:340
msgid "Exact Match on an Array"
msgstr ""

# 6815b32d41bd48fabcd90c96287a12e7
#: ../source/tutorial/query-documents.txt:342
msgid ""
"To specify equality match on an array, use the query document ``{ "
"<field>: <value> }`` where ``<value>`` is the array to match. Equality "
"matches on the array require that the array field match *exactly* the "
"specified ``<value>``, including the element order."
msgstr ""

# 63c6d05a6c634d1ab67d7c1e2e8f3c7e
#: ../source/tutorial/query-documents.txt:347
msgid ""
"The following example queries for all documents where the field "
"``badges`` is an array that holds exactly two elements, ``\"blue\"``, and"
" ``\"black\"``, in this order:"
msgstr ""

# a95fae9e23b145ac96506983b5f80275
#: ../source/tutorial/query-documents.txt:355
msgid "The query matches the following document:"
msgstr ""

# 505aaa98165546a7a17539dbd283344d
#: ../source/tutorial/query-documents.txt:374
msgid "Match an Array Element"
msgstr ""

# bd615ddab2e045ebb8ff489b2358a878
#: ../source/tutorial/query-documents.txt:376
msgid ""
"Equality matches can specify a single element in the array to match. "
"These specifications match if the array contains at least *one* element "
"with the specified value."
msgstr ""

# 66a3e0a755b940299ebd3fc4faa4350d
#: ../source/tutorial/query-documents.txt:380
msgid ""
"The following example queries for all documents where ``badges`` is an "
"array that contains ``\"black\"`` as one of its elements:"
msgstr ""

# 7baeaaaafa2c45b283063be5544a9f7f
#: ../source/tutorial/query-documents.txt:387
msgid "The query matches the following documents:"
msgstr ""

# da5670b0cb9a492790bc3f09fb50f83a
#: ../source/tutorial/query-documents.txt:426
msgid "Match a Specific Element of an Array"
msgstr ""

# c3ce1ab253c54e1d924f34bdc3cfabe6
#: ../source/tutorial/query-documents.txt:428
msgid ""
"Equality matches can specify equality matches for an element at a "
"particular index or position of the array using the :term:`dot notation`."
msgstr ""

# 0f00aa0018a4433fb8a54e23c136c4b5
#: ../source/tutorial/query-documents.txt:432
msgid ""
"In the following example, the query uses the :term:`dot notation` to "
"match all documents where the ``badges`` is an array that contains "
"``\"black\"`` as the first element:"
msgstr ""

# a120c803650842c398c3b20c2bfda646
# 1aa893cdcd524e9ead40a265aafe330b
#: ../source/tutorial/query-documents.txt:440
#: ../source/tutorial/query-documents.txt:660
msgid "The operation returns the following document:"
msgstr ""

# d87bcc5d838d4a6598b4eb278f2e75ef
#: ../source/tutorial/query-documents.txt:459
msgid "Specify Multiple Criteria for Array Elements"
msgstr ""

# bbcb92e8ecc34601bdc081d9c57edf6a
# 50f3360f717144d18aa5f3f6f71fdf2a
#: ../source/tutorial/query-documents.txt:464
#: ../source/tutorial/query-documents.txt:645
msgid "Single Element Satisfies the Criteria"
msgstr ""

# 73e3e707cf86462d99d53bdfa2a5b644
#: ../source/tutorial/query-documents.txt:466
msgid ""
"Use :query:`$elemMatch` operator to specify multiple criteria on the "
"elements of an array such that at least one array element satisfies all "
"the specified criteria."
msgstr ""

# dcef6708cbf14e84ac84564e17342f19
#: ../source/tutorial/query-documents.txt:470
msgid ""
"The following example queries for documents where the ``finished`` array "
"contains at least one element that is greater than (:query:`$gt`) ``15`` "
"and less than (:query:`$lt`) ``20``:"
msgstr ""

# a401a5bec18248dbbeda0a0695629932
#: ../source/tutorial/query-documents.txt:478
msgid ""
"The operation returns the following documents, whose ``finished`` array "
"contains at least one element which meets both criteria:"
msgstr ""

# ad3d620cb3cf4a138cb373ac7e446f9c
# f9116bc1afa2431288ece2a8987c321a
#: ../source/tutorial/query-documents.txt:510
#: ../source/tutorial/query-documents.txt:677
msgid "Combination of Elements Satisfies the Criteria"
msgstr ""

# 764ae09524e14ff996e496ad647c0eb1
#: ../source/tutorial/query-documents.txt:512
msgid ""
"The following example queries for documents where the ``finished`` array "
"contains elements that in some combination satisfy the query conditions; "
"e.g., one element can satisfy the greater than ``15`` condition and "
"another element can satisfy the less than ``20`` condition, or a single "
"element can satisfy both:"
msgstr ""

# 90eb08c0c66048539cfc67545516387f
# ec48c66193264a73883ffdbcfd65f7b5
# a2879169800f48a6943f9cdbe4e5b5a9
#: ../source/tutorial/query-documents.txt:522
#: ../source/tutorial/query-documents.txt:581
#: ../source/tutorial/query-documents.txt:612
msgid "The operation returns the following documents:"
msgstr ""

# 945faf9278f34bd4b311015801a0fe87
#: ../source/tutorial/query-documents.txt:563
msgid "Array of Embedded Documents"
msgstr ""

# c4482c0eb61f4d1490b3ae3db328d4b9
#: ../source/tutorial/query-documents.txt:566
msgid "Match a Field in the Embedded Document Using the Array Index"
msgstr ""

# 22ed2e6919694e6caec6784623c17d1f
#: ../source/tutorial/query-documents.txt:568
msgid ""
"If you know the array index of the embedded document, you can specify the"
" document using the embedded document's position using the :term:`dot "
"notation`."
msgstr ""

# 2ad245aad20545f5ae1d7d096ad874f0
#: ../source/tutorial/query-documents.txt:572
msgid ""
"The following example selects all documents where the ``points`` contains"
" an array whose first element (i.e. index is ``0``) is a document that "
"contains the field ``points`` whose value is less than or equal to "
"``55``:"
msgstr ""

# 965e21f2e54d4b7aaf46b369de5da61e
#: ../source/tutorial/query-documents.txt:598
msgid "Match a Field Without Specifying Array Index"
msgstr ""

# 02cd1bf348304231865872cf44199b8c
#: ../source/tutorial/query-documents.txt:600
msgid ""
"If you do not know the index position of the document in the array, "
"concatenate the name of the field that contains the array, with a dot "
"(``.``) and the name of the field in the embedded document."
msgstr ""

# 5a90e3ed05eb4567bb3031130ad30495
#: ../source/tutorial/query-documents.txt:604
msgid ""
"The following example selects all documents where the ``points`` is an "
"array with at least one embedded document that contains the field "
"``points`` whose value is less than or equal to ``55``:"
msgstr ""

# 77756eb9c2cc4f46a1e9a88bcae91fdb
#: ../source/tutorial/query-documents.txt:642
msgid "Specify Multiple Criteria for Array of Documents"
msgstr ""

# 67146d355b264724b228d480e34eb9ff
#: ../source/tutorial/query-documents.txt:647
msgid ""
"Use :query:`$elemMatch` operator to specify multiple criteria on an array"
" of embedded documents such that at least one embedded document satisfies"
" all the specified criteria."
msgstr ""

# fc92192f5dc24401a8f7bb2fea4a24e2
#: ../source/tutorial/query-documents.txt:651
msgid ""
"The following example queries for documents where the ``points`` array "
"has at least one embedded document that contains both the field "
"``points`` less than or equal to ``70`` and the field ``bonus`` equal to "
"``20``:"
msgstr ""

# 8fd5298c9bf449419ddc4328699560a8
#: ../source/tutorial/query-documents.txt:679
msgid ""
"The following example queries for documents where the ``points`` array "
"contains elements that in some combination satisfy the query conditions; "
"e.g. one element satisfies the ``points`` less than or equal to ``70`` "
"condition and another element satisfies the ``bonus`` equal to ``20`` "
"condition, or a single element satisfies both criteria:"
msgstr ""

# 8bb4a172eac44e00953eb3b5d8959a3d
#: ../source/tutorial/query-documents.txt:690
msgid "The query returns the following documents:"
msgstr ""

# bceb930c7b0644619ce6821e943e4ee3
#: ../source/tutorial/query-documents.txt:718
msgid "Additional Methods"
msgstr ""

# 95079492b9d04dd8a32733c7273d8c5e
#: ../source/tutorial/query-documents.txt:720
msgid "The following methods can also read documents from a collection:"
msgstr ""

# 10f46f594d19413eb1c498aabc57d90e
#: ../source/tutorial/query-documents.txt:722
msgid ":method:`db.collection.findOne` [#findOne]_"
msgstr ""

# 3bec350c897d4a6b9eca49baaae6c8c0
#: ../source/tutorial/query-documents.txt:724
msgid ""
"In :doc:`aggregation pipeline </core/aggregation-pipeline>`, the "
":pipeline:`$match` pipeline stage provides access to MongoDB queries."
msgstr ""

# 7abb35e836dc43548bf9a4331247f40f
#: ../source/tutorial/query-documents.txt:729
msgid ""
"The :method:`db.collection.findOne()` method also performs a read "
"operation to return a single document. Internally, the "
":method:`db.collection.findOne()` method is the "
":method:`db.collection.find()` method with a limit of 1."
msgstr ""

# 7b58a2b141cc4691a122f15869bac5cb
#: ../source/tutorial/query-documents.txt:735
msgid "Read Isolation"
msgstr ""

# 8fa4e1efbde145ac8b1ddb2ed70552b8
#: ../source/tutorial/query-documents.txt:739
msgid ""
"For reads to :doc:`replica sets </replication>` and replica set "
":doc:`shards </sharding>`, read concern allows clients to choose a level "
"of isolation for their reads."
msgstr ""

# b6e36ee3245b40d09ab6bcc394df0d22
#: ../source/tutorial/query-documents.txt:743
msgid "For more information, see :doc:`/reference/read-concern`."
msgstr ""

# a6df1ce9d4be47aaa58310dba444b7e5
#: ../source/includes/footnote-set-shell-batch-size.rst:1
msgid ""
"You can use the ``DBQuery.shellBatchSize`` to change the number of "
"iteration from the default value ``20``. See :ref:`mongo-shell-executing-"
"queries` for more information."
msgstr ""

#~ msgid ""
#~ "In the following example, the query "
#~ "document specifies an equality match on"
#~ " the field ``food`` **and** a less"
#~ " than (:query:`$lt`) comparison match on"
#~ " the field ``price``:"
#~ msgstr ""

#~ msgid "Subdocuments"
#~ msgstr ""

#~ msgid ""
#~ "When the field holds an embedded "
#~ "document (i.e. subdocument), you can "
#~ "either specify the entire subdocument as"
#~ " the value of a field, or "
#~ "\"reach into\" the subdocument using "
#~ ":term:`dot notation`, to specify values "
#~ "for individual fields in the "
#~ "subdocument:"
#~ msgstr ""

#~ msgid "Exact Match on Subdocument"
#~ msgstr ""

#~ msgid ""
#~ "To specify an equality match on "
#~ "the whole subdocument, use the query "
#~ "document ``{ <field>: <value> }`` where"
#~ " ``<value>`` is the subdocument to "
#~ "match. Equality matches on a subdocument"
#~ " require that the subdocument field "
#~ "match *exactly* the specified ``<value>``, "
#~ "including the field order."
#~ msgstr ""

#~ msgid ""
#~ "In the following example, the query "
#~ "matches all documents where the value"
#~ " of the field ``producer`` is a "
#~ "subdocument that contains *only* the "
#~ "field ``company`` with the value "
#~ "``'ABC123'`` and the field ``address`` "
#~ "with the value ``'123 Street'``, in "
#~ "the exact order:"
#~ msgstr ""

#~ msgid "Equality Match on Fields within Subdocument"
#~ msgstr ""

#~ msgid ""
#~ "Equality matches for specific fields "
#~ "within subdocuments select the documents "
#~ "in the collection when the field "
#~ "in the subdocument contains a field "
#~ "that matches the specified value."
#~ msgstr ""

#~ msgid ""
#~ "In the following example, the query "
#~ "uses the :term:`dot notation` to match"
#~ " all documents where the value of "
#~ "the field ``producer`` is a subdocument"
#~ " that contains a field ``company`` "
#~ "with the value ``'ABC123'`` and may "
#~ "contain other fields:"
#~ msgstr ""

#~ msgid ""
#~ "When the field holds an array, you"
#~ " can query for an exact array "
#~ "match or for specific values in "
#~ "the array. If the array holds "
#~ "sub-documents, you can query for "
#~ "specific fields within the sub-documents"
#~ " using :term:`dot notation`:"
#~ msgstr ""

#~ msgid ""
#~ "In the following example, the query "
#~ "matches all documents where the value"
#~ " of the field ``tags`` is an "
#~ "array that holds exactly three elements,"
#~ " ``'fruit'``, ``'food'``, and ``'citrus'``, "
#~ "in this order:"
#~ msgstr ""

#~ msgid ""
#~ "In the following example, the query "
#~ "matches all documents where the value"
#~ " of the field ``tags`` is an "
#~ "array that contains ``'fruit'`` as one"
#~ " of its elements:"
#~ msgstr ""

#~ msgid ""
#~ "Equality matches can specify equality "
#~ "matches for an element at a "
#~ "particular index or position of the "
#~ "array."
#~ msgstr ""

#~ msgid ""
#~ "In the following example, the query "
#~ "uses the :term:`dot notation` to match"
#~ " all documents where the value of "
#~ "the ``tags`` field is an array "
#~ "whose first element equals ``'fruit'``:"
#~ msgstr ""

#~ msgid "Array of Subdocuments"
#~ msgstr ""

#~ msgid "Match a Field in the Subdocument Using the Array Index"
#~ msgstr ""

#~ msgid ""
#~ "If you know the array index of "
#~ "the subdocument, you can specify the "
#~ "document using the subdocument's position."
#~ msgstr ""

#~ msgid ""
#~ "The following example selects all "
#~ "documents where the ``memos`` contains "
#~ "an array whose first element (i.e. "
#~ "index is ``0``) is a subdocument "
#~ "with the field ``by`` with the "
#~ "value ``'shipping'``:"
#~ msgstr ""

#~ msgid ""
#~ "If you do not know the index "
#~ "position of the subdocument, concatenate "
#~ "the name of the field that "
#~ "contains the array, with a dot "
#~ "(``.``) and the name of the field"
#~ " in the subdocument."
#~ msgstr ""

#~ msgid ""
#~ "The following example selects all "
#~ "documents where the ``memos`` field "
#~ "contains an array that contains at "
#~ "least one subdocument with the field "
#~ "``by`` with the value ``'shipping'``:"
#~ msgstr ""

#~ msgid "Match Multiple Fields"
#~ msgstr ""

#~ msgid ""
#~ "To match by multiple fields in the"
#~ " subdocument, you can use either dot"
#~ " notation or the :query:`$elemMatch` "
#~ "operator:"
#~ msgstr ""

#~ msgid ""
#~ "The following example uses dot notation"
#~ " to query for documents where the "
#~ "value of the ``memos`` field is an"
#~ " array that has at least one "
#~ "subdocument that contains the field "
#~ "``memo`` equal to ``'on time'`` and "
#~ "the field ``by`` equal to "
#~ "``'shipping'``:"
#~ msgstr ""

#~ msgid ""
#~ "The following example uses :query:`$elemMatch`"
#~ " to query for documents where the "
#~ "value of the ``memos`` field is an"
#~ " array that has at least one "
#~ "subdocument that contains the field "
#~ "``memo`` equal to ``'on time'`` and "
#~ "the field ``by`` equal to "
#~ "``'shipping'``:"
#~ msgstr ""

# 7b5643608cbc44a093070c2632184b84
#~ msgid ""
#~ "In MongoDB, the :method:`db.collection.find()` "
#~ "method retrieves documents from a "
#~ "collection. [#findOne]_ The "
#~ ":method:`db.collection.find()` method returns a "
#~ ":doc:`cursor </core/cursors>` to the retrieved"
#~ " documents."
#~ msgstr ""

# ea04418694f04165bd7d13767118f1e1
#~ msgid ""
#~ "This tutorial provides examples of read"
#~ " operations using the "
#~ ":method:`db.collection.find()` method in the "
#~ ":program:`mongo` shell. In these examples, "
#~ "the retrieved documents contain all "
#~ "their fields. To restrict the fields "
#~ "to return in the retrieved documents,"
#~ " see :doc:`/tutorial/project-fields-from-"
#~ "query-results`."
#~ msgstr ""

# a795839ebbed4dd4a0b5fea89d1d3d19
#~ msgid ""
#~ "An empty query document (``{}``) selects"
#~ " all documents in the collection:"
#~ msgstr ""

# 6afc46f447404d17aab6b8d088bacdf9
#~ msgid ""
#~ "Not specifying a query document to "
#~ "the :method:`~db.collection.find()` is equivalent"
#~ " to specifying an empty query "
#~ "document. Therefore the following operation"
#~ " is equivalent to the previous "
#~ "operation:"
#~ msgstr ""

# fd09b8b3eacf4bc5b933edffe9b4f478
#~ msgid ""
#~ "To specify equality condition, use the"
#~ " query document ``{ <field>: <value> "
#~ "}`` to select all documents that "
#~ "contain the ``<field>`` with the "
#~ "specified ``<value>``."
#~ msgstr ""

# 2a621f7fe20f4efcb78d8bb1edad6eb1
#~ msgid ""
#~ "The following example retrieves from the"
#~ " ``inventory`` collection all documents "
#~ "where the ``type`` field has the "
#~ "value ``snacks``:"
#~ msgstr ""

# c0ae495557b441bea434ce7df4b72c90
#~ msgid ""
#~ "A query document can use the "
#~ ":ref:`query operators <query-selectors>` to"
#~ " specify conditions in a MongoDB "
#~ "query."
#~ msgstr ""

# e846488f455b4d448d93aef3b57fb844
#~ msgid ""
#~ "The following example selects all "
#~ "documents in the ``inventory`` collection "
#~ "where the value of the ``type`` "
#~ "field is either ``'food'`` or "
#~ "``'snacks'``:"
#~ msgstr ""

# 32652d48a436434f8528f26b873cc89a
#~ msgid ""
#~ "Refer to the :doc:`/reference/operator` "
#~ "document for the complete list of "
#~ "query operators."
#~ msgstr ""

# d47e1548891746cba6d53d5031b7f5bd
#~ msgid ""
#~ "This query selects all documents where"
#~ " the ``type`` field has the value "
#~ "``'food'`` **and** the value of the "
#~ "``price`` field is less than ``9.95``."
#~ " See :ref:`comparison operators <query-"
#~ "selectors-comparison>` for other comparison "
#~ "operators."
#~ msgstr ""

# ac1ecaea97d6471699bed6c44ac41090
#~ msgid ""
#~ "In the following example, the query "
#~ "document selects all documents in the"
#~ " collection where the field ``qty`` "
#~ "has a value greater than (:query:`$gt`)"
#~ " ``100`` **or** the value of the "
#~ "``price`` field is less than "
#~ "(:query:`$lt`) ``9.95``:"
#~ msgstr ""

# 03751513f1d943bca7d611ef43516be6
#~ msgid ""
#~ "In the following example, the compound"
#~ " query document selects all documents "
#~ "in the collection where the value "
#~ "of the ``type`` field is ``'food'`` "
#~ "**and** *either* the ``qty`` has a "
#~ "value greater than (:query:`$gt`) ``100`` "
#~ "*or* the value of the ``price`` "
#~ "field is less than (:query:`$lt`) "
#~ "``9.95``:"
#~ msgstr ""

# d6433b5c462149409c5eb598b62519d8
#~ msgid "Arrays"
#~ msgstr ""

#~ msgid ""
#~ "In the following example, the query "
#~ "document specifies an equality match on"
#~ " the field ``type`` **and** a less"
#~ " than (:query:`$lt`) comparison match on"
#~ " the field ``price``:"
#~ msgstr ""

#~ msgid "Embedded Documents"
#~ msgstr ""

#~ msgid ""
#~ "To specify an equality match on "
#~ "the whole embedded document, use the "
#~ "query document ``{ <field>: <value> }``"
#~ " where ``<value>`` is the document to"
#~ " match. Equality matches on an "
#~ "embedded document require an *exact* "
#~ "match of the specified ``<value>``, "
#~ "including the field order."
#~ msgstr ""

#~ msgid ""
#~ "In the following example, the query "
#~ "matches all documents where the value"
#~ " of the field ``producer`` is an "
#~ "embedded document that contains *only* "
#~ "the field ``company`` with the value "
#~ "``'ABC123'`` and the field ``address`` "
#~ "with the value ``'123 Street'``, in "
#~ "the exact order:"
#~ msgstr ""

#~ msgid ""
#~ "In the following example, the query "
#~ "uses the :term:`dot notation` to match"
#~ " all documents where the value of "
#~ "the field ``producer`` is an embedded"
#~ " document that contains a field "
#~ "``company`` with the value ``'ABC123'`` "
#~ "and may contain other fields:"
#~ msgstr ""

#~ msgid ""
#~ "Consider an ``inventory`` collection that "
#~ "contains the following documents:"
#~ msgstr ""

#~ msgid ""
#~ "The following example queries for all"
#~ " documents where the field ``ratings`` "
#~ "is an array that holds exactly "
#~ "three elements, ``5``, ``8``, and ``9``,"
#~ " in this order:"
#~ msgstr ""

#~ msgid ""
#~ "The following example queries for all"
#~ " documents where ``ratings`` is an "
#~ "array that contains ``5`` as one "
#~ "of its elements:"
#~ msgstr ""

#~ msgid ""
#~ "In the following example, the query "
#~ "uses the :term:`dot notation` to match"
#~ " all documents where the ``ratings`` "
#~ "array contains ``5`` as the first "
#~ "element:"
#~ msgstr ""

#~ msgid ""
#~ "The following example queries for "
#~ "documents where the ``ratings`` array "
#~ "contains at least one element that "
#~ "is greater than (:query:`$gt`) ``5`` and"
#~ " less than (:query:`$lt`) ``9``:"
#~ msgstr ""

#~ msgid ""
#~ "The operation returns the following "
#~ "documents, whose ``ratings`` array contains"
#~ " the element ``8`` which meets the"
#~ " criteria:"
#~ msgstr ""

#~ msgid ""
#~ "The following example queries for "
#~ "documents where the ``ratings`` array "
#~ "contains elements that in some "
#~ "combination satisfy the query conditions; "
#~ "e.g., one element can satisfy the "
#~ "greater than ``5`` condition and another"
#~ " element can satisfy the less than"
#~ " ``9`` condition, or a single element"
#~ " can satisfy both:"
#~ msgstr ""

#~ msgid ""
#~ "The document with the ``\"ratings\" :"
#~ " [ 5, 9 ]`` matches the query"
#~ " since the element ``9`` is greater"
#~ " than ``5`` (the first condition) and"
#~ " the element ``5`` is less than "
#~ "``9`` (the second condition)."
#~ msgstr ""

#~ msgid ""
#~ "Consider that the ``inventory`` collection "
#~ "includes the following documents:"
#~ msgstr ""

#~ msgid ""
#~ "If you know the array index of "
#~ "the embedded document, you can specify"
#~ " the document using the subdocument's "
#~ "position using the :term:`dot notation`."
#~ msgstr ""

#~ msgid ""
#~ "The following example selects all "
#~ "documents where the ``memos`` contains "
#~ "an array whose first element (i.e. "
#~ "index is ``0``) is a document that"
#~ " contains the field ``by`` whose "
#~ "value is ``'shipping'``:"
#~ msgstr ""

#~ msgid ""
#~ "If you do not know the index "
#~ "position of the document in the "
#~ "array, concatenate the name of the "
#~ "field that contains the array, with "
#~ "a dot (``.``) and the name of "
#~ "the field in the subdocument."
#~ msgstr ""

#~ msgid ""
#~ "The following example selects all "
#~ "documents where the ``memos`` field "
#~ "contains an array that contains at "
#~ "least one embedded document that "
#~ "contains the field ``by`` with the "
#~ "value ``'shipping'``:"
#~ msgstr ""

#~ msgid ""
#~ "The following example queries for "
#~ "documents where the ``memos`` array has"
#~ " at least one embedded document that"
#~ " contains both the field ``memo`` "
#~ "equal to ``'on time'`` and the "
#~ "field ``by`` equal to ``'shipping'``:"
#~ msgstr ""

#~ msgid ""
#~ "The following example queries for "
#~ "documents where the ``memos`` array "
#~ "contains elements that in some "
#~ "combination satisfy the query conditions; "
#~ "e.g. one element satisfies the field "
#~ "``memo`` equal to ``'on time'`` "
#~ "condition and another element satisfies "
#~ "the field ``by`` equal to ``'shipping'``"
#~ " condition, or a single element can"
#~ " satisfy both criteria:"
#~ msgstr ""

