stepnum: 1
level: 4
title: "Install your dependencies locally."
ref: external-dependencies-locally-install
content: |
  To upload external dependencies to {+atlas-app-services+}, you first need a local
  ``node_modules`` folder containing at least one Node.js package. You
  can use the following code snippet to locally install a dependency
  you would like to upload:

  .. code-block:: shell

     npm install <package name>

  If the ``node_modules`` folder does not already exist, this command
  automatically creates it.

  .. note:: Alternative Methods of Installation
  
     You can also configure a ``package.json`` and run the
     ``npm install`` command to install all packages (and their
     dependencies) listed in your ``package.json``.

     To learn more about npm and ``node_modules``, consult the
     `npm documentation <https://docs.npmjs.com/cli/install>`_ .
---
stepnum: 2
level: 4
title: "Create a dependency archive."
ref: external-dependencies-create-a-dependency-archive
content: |
  Now that you've downloaded all of your npm modules, you need to
  package them up in an archive so you can upload them to {+app-services+}.
  Create an archive containing the ``node_modules`` folder:

  .. code-block:: shell

     tar -czf node_modules.tar.gz node_modules/

  .. note:: Supported Archive Formats
  
     {+app-services+} supports ``.tar``, ``.tar.gz``, and ``.zip`` archive
     formats.
---
stepnum: 3
level: 4
title: "Upload the dependency archive."
ref: external-dependencies-upload-the-dependency-archive
content: |
  Once you've created an archive containing your dependencies, all
  that's left to do is upload them to {+app-services+}. You can upload
  your dependency archive using the {+app-services+} UI:

  a. Select :guilabel:`{+app-services+}` from the left-side navigation.

  #. Select the :guilabel:`Triggers` app.

     .. include:: /includes/admonitions/notes/note-trigger-names.rst

  #. Select :guilabel:`Functions` from the left-side navigation.

  #. Select the :guilabel:`Dependencies` tab.

  #. Click the :guilabel:`Upload Folder` button.

  #. In the file picker, select the ``node_modules.tar.gz`` archive you
     just created and click :guilabel:`Open`. {+app-services+} automatically
     uploads the archive file, which may take several minutes depending
     on the speed of your internet connection and the size of your
     dependency archive. Whether the operation succeeded or failed,
     {+app-services+} displays a banner indicating the success or failure of
     the operation. If successful, the :guilabel:`Dependencies` tab
     displays a list of the dependencies that you included in your
     dependency archive.

  #. If drafts are enabled, you will also need to click
     :guilabel:`Review & Deploy` in the banner to apply these changes.
     If drafts are disabled, the change will take effect within 5 to 60
     seconds.

  Now that your dependencies have been uploaded, try
  :ref:`importing them into a Function <external-dependencies-import>`.
