# This file borrows content from /includes/options-shared.yaml, which uses
# {{program}} to refer to the tool.
#
program: mongoimport
name: authenticationDatabase
inherit:
  name: authenticationDatabase
  program: _shared
  file: options-shared.yaml
---
program: mongoimport
name: authenticationMechanism
inherit:
  name: authenticationMechanism
  program: _shared
  file: options-shared.yaml
---
program: mongoimport
name: collection
aliases: -c
directive: option
args: <collection>
description: |
  Specifies the collection to import.

  .. versionadded:: 2.5.3
     If you do not specify :option:`--collection`,
     :program:`mongoimport` takes the collection name from the input
     filename. MongoDB omits the extension of the file from the
     collection name, if the input file has an extension.
optional: true
---
program: mongoimport
name: db
inherit:
  name: db
  program: _shared
  file: options-shared.yaml
---
program: mongoimport
name: dbpath
inherit:
  name: dbpath
  program: _shared
  file: options-shared.yaml
---
program: mongoimport
name: directoryperdb
directive: option
args: null
description: |
  When used in conjunction with the corresponding option in
  :program:`mongod`, allows :program:`mongoimport` to import data into
  MongoDB instances that save each database's files in discrete
  directories on the disk. This option is only relevant when specifying
  the :option:`--dbpath` option.
optional: true
---
program: mongoimport
name: drop
directive: option
args: null
description: |
  Modifies the import process so that the target instance drops
  every collection before importing the collection from the input.
optional: true
---
program: mongoimport
name: fieldFile
directive: option
args: <filename>
description: |
  As an alternative to :option:`--fields`, the :option:`--fieldFile`
  option allows you to specify a file that holds a list of field names if
  your :term:`csv` or :term:`tsv` file does not include field names in the
  first line of the file (i.e. header). Place one field per line.
optional: true
---
program: mongoimport
name: fields
aliases: -f
directive: option
args: <field1[,field2]>
description: |
  Specify a comma separated list of field names when importing :term:`csv`
  or :term:`tsv` files that do not have field names in the first (i.e.
  header) line of the file.
optional: true
---
program: mongoimport
name: file
directive: option
args: <filename>
description: |
  Specifies the location and name of a file containing the data to import.
  If you do not specify a file, :program:`mongoimport` reads data from
  standard input (e.g. "stdin").
optional: true
---
program: mongoimport
name: help
inherit:
  name: help
  program: _shared
  file: options-shared.yaml
---
program: mongoimport
name: headerline
directive: option
args: null
description: |
  If using :option:`--type csv <mongoimport --type>` or :option:`--type
  tsv <mongoimport --type>`, uses the first line as field names.
  Otherwise, :program:`mongoimport` will import the first line as a
  distinct document.
optional: true
---
program: mongoimport
name: host
inherit:
  name: host
  program: _shared
  file: options-shared.yaml
---
program: mongoimport
name: ignoreBlanks
directive: option
args: null
description: |
  Ignores empty fields in :term:`csv` and :term:`tsv` exports. If not
  specified, :program:`mongoimport` creates fields without values in
  imported documents.
optional: true
---
program: mongoimport
name: ipv6
inherit:
  name: ipv6
  program: _shared
  file: options-shared.yaml
---
program: mongoimport
name: journal
inherit:
  name: journal
  program: _shared
  file: options-shared.yaml
---
program: mongoimport
name: jsonArray
directive: option
args: null
description: |
  Accepts the import of data expressed with multiple MongoDB documents
  within a single :term:`JSON` array.

  Used in conjunction with :option:`mongoexport --jsonArray` to
  import data written as a single :term:`JSON` array. Limited to
  imports of 16 MB or smaller.
optional: true
---
program: mongoimport
name: password
inherit:
  name: password
  program: _shared
  file: options-shared.yaml
---
program: mongoimport
name: port
inherit:
  name: port
  program: _shared
  file: options-shared.yaml
---
program: mongoimport
name: ssl
inherit:
  name: ssl
  program: _shared
  file: options-shared.yaml
---
program: mongoimport
name: sslAllowInvalidCertificates
inherit:
  name: sslAllowInvalidCertificates
  program: _shared
  file: options-shared.yaml
---
program: mongoimport
name: sslCAFile
inherit:
  name: sslCAFile
  program: _shared
  file: options-shared.yaml
---
program: mongoimport
name: sslCRLFile
inherit:
  name: sslCRLFile
  program: _shared
  file: options-shared.yaml
---
program: mongoimport
name: sslFIPSMode
inherit:
  name: sslFIPSMode
  program: _shared
  file: options-shared.yaml
---
program: mongoimport
name: sslPEMKeyFile
inherit:
  name: sslPEMKeyFile
  program: _shared
  file: options-shared.yaml
---
program: mongoimport
name: sslPEMKeyPassword
inherit:
  name: sslPEMKeyPassword
  program: _shared
  file: options-shared.yaml
---
program: mongoimport
name: stopOnError
directive: option
args: null
description: |
  .. versionadded:: 2.2

  Forces :program:`mongoimport` to halt the import operation at the
  first error rather than continuing the operation despite errors.
optional: true
---
program: mongoimport
name: type
directive: option
args: <json|csv|tsv>
description: |
  Specifies the file type to import. The default format is :term:`JSON`,
  but it's possible to import :term:`csv` and :term:`tsv` files.
optional: true
---
program: mongoimport
name: upsert
directive: option
args: null
description: |
  Modifies the import process to update existing objects in the
  database if they match an imported object, while inserting all
  other objects.

  If you do not specify a field or fields using the
  :option:`--upsertFields` :program:`mongoimport` will upsert on the
  basis of the ``_id`` field.
optional: true
---
program: mongoimport
name: upsertFields
directive: option
args: <field1[,field2]>
description: |
  Specifies a list of fields for the query portion of the
  :term:`upsert`. Use this option if the ``_id`` fields in the
  existing documents don't match the field in the document, but
  another field or field combination can uniquely identify
  documents as a basis for performing upsert operations.

  To ensure adequate performance, indexes should exist for this
  field or fields.
optional: true
---
program: mongoimport
name: username
inherit:
  name: username
  program: _shared
  file: options-shared.yaml
---
program: mongoimport
name: verbose
inherit:
  name: verbose
  program: _shared
  file: options-shared.yaml
---
program: mongoimport
name: version
inherit:
  name: version
  program: _shared
  file: options-shared.yaml
...
