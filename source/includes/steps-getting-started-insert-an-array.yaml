title: Create an array of documents.
stepnum: 1
ref: ''
pre: |
   Define a variable ``documents`` that holds an array of documents to
   insert.
action:
  language: javascript
  code: |
    var documents =
        [
          {
            cust_id: "stu523",
            ord_date: ISODate("2014-04-22T04:00:00Z"),
            status: "A",
            items: [ { sku: "xyz", qty: 5, price: 10 } ],
            shipping: {
               location: "Warehouse1",
               mode: "airfreight"
            }
          },
          {
            cust_id: "ijk021",
            ord_date: ISODate("2014-04-15T04:00:00Z"),
            status: "A",
            items: [
               { sku: "wxy", qty: 10, price: 15 },
               { sku: "xyz", qty: 5, price: 10 }
            ],
            shipping: {
               location: "Warehouse1",
               mode: "airfreight"
            }
          },
          {
            cust_id: "abc123",
            ord_date: ISODate("2014-04-15T04:00:00Z"),
            status: "A",
            items: [ { sku: "yyy", qty: 15, price: 20 } ],
            shipping: {
               location: "Warehouse2",
               mode: "airfreight"
            }
          },
          {
            cust_id: "ijk021",
            ord_date: ISODate("2014-04-27T04:00:00Z"),
            status: "A",
            items: [
              { sku: "zzz", qty: 20, price: 25 },
              { sku: "yyy", qty: 15, price: 20 }
            ],
            shipping: {
               location: "Warehouse2",
               mode: "train"
            }
          },
          {
            cust_id: "abc123",
            ord_date: ISODate("2014-04-08T04:00:00Z"),
            status: "A",
            items: [ { sku: "yyy", qty: 25, price: 30 } ],
            shipping: {
               location: "Warehouse3",
               mode: "airfreight"
            }
          }
        ];
---
title: Insert the documents.
stepnum: 2
ref: ''
pre: |
  Pass the ``documents`` array to the :method:`db.collection.insert()` to
  perform a bulk insert.
action:
  language: javascript
  code: |
      db.orders.insert( documents );
post: |
  The method returns a :method:`BulkWriteResult` object with the status
  of the operation.
---
title: Review the returned object.
stepnum: 3
ref: ''
pre: |
  The insert operation returns a :method:`BulkWriteResult` object which
  contains the status of the operation. A successful insert of the
  documents returns the following object:
action:
  language: javascript
  code: |
      BulkWriteResult({
         "writeErrors" : [ ],
         "writeConcernErrors" : [ ],
         "nInserted" : 5,
         "nUpserted" : 0,
         "nMatched" : 0,
         "nModified" : 0,
         "nRemoved" : 0,
         "upserted" : [ ]
      })
post: |
  The :data:`~BulkWriteResult.nInserted` field specifies the number of
  documents inserted. If the operation encounters an error, the
  :method:`BulkWriteResult` object will contain information regarding
  the error.

  Optional. You can verify the insert operation by querying the
  collection as in the single document insert procedure. The inserted
  documents will each have an ``_id`` field added by MongoDB.
...