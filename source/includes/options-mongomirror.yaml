program: mongomirror
name: host
args: <host>
description: |
   The host information for the source replica set. Specify the replica
   set name and a seed list of the members, as in the following:

   .. code-block:: none

      <RSname>/<host1>:<port1>,<host2>:<port2>,<host3>:<port3> 
optional: false
directive: option
---
program: mongomirror
name: username
args: <username>
description: |
  If the source replica set requires authentication, the name of a user
  in the source replica set with privileges to read any database,
  including the ``local`` database. A user with the :authrole:`backup` role provides
  the appropriate privileges. For details on the specific privileges
  required, see :ref:`source-rs-authorization`.
optional: true
directive: option
---
program: mongomirror
name: password
args: <password>
description: |
   Password for the user specified in ``--username``.
optional: true
directive: option
---
program: mongomirror
name: authenticationDatabase
args: <authenticationDatabase>
description: |
   The database in the source replica set where the user specified in
   ``--username`` was created.
optional: true
directive: option
---
program: mongomirror
name: authenticationMechanism
args: <authenticationMechanism>
description: |
   The authentication mechanism to use to authenticate the user to the
   source replica set.

   .. list-table::
      :header-rows: 1
      :widths: 20 40

      * - Value

        - Description

      * - :ref:`SCRAM-SHA-1 <authentication-scram-sha-1>`

        - `RFC 5802 <https://tools.ietf.org/html/rfc5802>`_ standard
          Salted Challenge Response Authentication Mechanism using the SHA1
          hash function.

      * - :ref:`MONGODB-CR <authentication-mongodb-cr>`

        - MongoDB challenge/response authentication.

      * - :ref:`MONGODB-X509 <security-auth-x509>`

        - MongoDB TLS/SSL certificate authentication.

      * - :ref:`GSSAPI <security-auth-kerberos>` (Kerberos)

        - External authentication using Kerberos. This mechanism is
          available only in `MongoDB Enterprise
          <http://www.mongodb.com/products/mongodb-enterprise?jmp=docs>`_.

      * - :ref:`PLAIN <security-auth-ldap>` (LDAP SASL)

        - External authentication using LDAP. You can also use ``PLAIN``
          for authenticating in-database users. ``PLAIN`` transmits
          passwords in plain text. This mechanism is available only in
          `MongoDB Enterprise
          <http://www.mongodb.com/products/mongodb-enterprise?jmp=docs>`_.
optional: true
directive: option
---
program: mongomirror
name: destination
args: <destination>
description: |

   The host information for the target Atlas cluster.

   For an Atlas replica set, specify the replica set name and a seed
   list of the members, as in the following:

   .. code-block:: none

      <RSname>/<host1>:<port1>,<host2>:<port2>,<host3>:<port3>

   For an Atlas sharded cluster, specify the mongos, as in the following:

   .. code-block:: none

      <host1>:<port1>,<host2>:<port2>,<host3>:<port3>

directive: option
---
program: mongomirror
name: destinationUsername
args: <Atlas user name>
description: |
   Name of a MongoDB user in the Atlas cluster with privileges to
   read, write, and admin any database.
   A user with the |service| :ref:`admin role <add-mongodb-users>`
   provides the appropriate privileges. For details on the specific
   privileges required, see :ref:`destination-authorization`.
directive: option
---
program: mongomirror
name: destinationPassword
args: <password>
description: |
   Password of the MongoDB user specified in --destinationUsername.
directive: option
---
program: mongomirror
name: ssl
args: null
description: |
   Enables TLS/SSL encrypted connections to the source replica set.
optional: true
directive: option
---
program: mongomirror
name: sslPEMKeyFile
args: <file>
description: |
   The .pem file if the source replica set requires clients to present
   a certificate. The .pem file contains both the TLS/SSL certificate
   and key. Specify the file using relative or absolute paths.
optional: true
directive: option
---
program: mongomirror
name:  sslPEMKeyPassword
args: <value>
description: |
   Password to decrypt the certificate-key file specified in
   --sslPEMKeyFile. Use if the --sslPEMKeyFile is encrypted.
optional: true
directive: option
---
program: mongomirror
name:  sslCAFile
args: <file>
description: |
   The .pem file that contains the root certificate chain from the
   Certificate Authority(CA) for the source replica set. Specify the
   file using relative or absolute paths.
optional: true
directive: option
---
program: mongomirror
name:  sslCRLFile
args: <filename>
description: |
   The .pem file that contains the Certificate Revocation List for the source replica set. Specify
   the file using relative or absolute paths.
optional: true
directive: option
---
program: mongomirror
name: sslAllowInvalidHostnames
args: null
description: |
   Disables the validation of the hostnames in TLS/SSL certificates presented by the source replica set.
   Allows :program:`mongomirror` to connect to the source replica set if the
   hostname in the certificates does not match the specified hostname.
optional: true
directive: option
---
program: mongomirror
name: sslAllowInvalidCertificates
args: null
description : |
   Bypasses the validation checks for certificates presented by the source replica set and allows
   the use of invalid certificates. When using the
   ``--allowInvalidCertificates`` setting, MongoDB logs as a warning the
   use of the invalid certificate.
optional: true
directive: option
---
program: mongomirror
name: gssapiServiceName
args: <name>
description: |
   If the source replica set uses Kerberos authentication, the name of the service
   using GSSAPI/Kerberos. Only required if the service does not use the
   default name of ``mongodb``.

   This option is available only in MongoDB Enterprise.
optional: true
directive: option
---
program: mongomirror
name: gssapiHostName
args: <host>
description: |
   If the source replica set uses Kerberos authentication, the hostname of a service
   using GSSAPI/Kerberos. Only required if the hostname of a machine
   does not match the hostname resolved by DNS.

   This option is available only in MongoDB Enterprise.
optional: true
directive: option

---
program: mongomirror
name: readPreference
args: <read preference>
description: |
   Read preference that :program:`mongomirror` uses to read from the
   source replica set. Can specify read preference name, e.g.

   .. code-block:: sh

      mongomirror --readPreference primary  ...

   or as a JSON object; e.g.

   .. code-block:: sh

      mongomirror --readPreference '{mode: primary}' ...

optional: true
directive: option
---
program: mongomirror
name: writeConcern
args: <write concern>
default: majority
description: |

   The write concern that :program:`mongomirror` uses on the target
   cluster during the initial sync. Can specify write concern name; e.g.
   
   .. code-block:: sh
   
      mongomirror --writeConcern majority ...
      
   or as a json object; e.g.
   
   .. code-block:: sh
   
      mongomirror --writeConcern '{w: 3, wtimeout: 500, fsync: true, j: true}'  ...

optional: true
directive: option
---
program: mongomirror
name: numParallelCollections
aliases: -j
default: 4
args: <num>
description: |
   The number of collections to copy and restore in parallel.
optional: true
directive: option
---
program: mongomirror
name: bypassDocumentValidation
args: null
description: |
   Flag that indicates that mongomirror should bypass document
   validation in the target cluster.
optional: true
directive: option
---
program: mongomirror
name: tailOnly
args: null
description: |
   Flag that indicates that mongomirror only tails the oplog; i.e.
   skips the initial sync phase.

optional: true
directive: option
---
program: mongomirror
name: bookmarkFile
args: <file>
default: "mongomirror.timestamp"
description: |

   Name of the oplog timestamp bookmark file. 

optional: true
directive: option
---
program: mongomirror
name: forceDump
args: null
description: |
   Flag that indicates that mongomirror resync all source collections,
   even if a nonempty bookmark file exists.
optional: true
directive: option
---
program: mongomirror
name: drop
args: null
description: |
   Flag that indicates that mongomirror should drop all but the
   ``system.*`` collections in the target cluster.

optional: true
directive: option

...
