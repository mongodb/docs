---
stepnum: 1
ref: create-multi-cluster-agent-secret-x509
source:
  file: steps-multi-cluster-source.yaml
  ref: create-mc-agent-secret-x509

---
stepnum: 2
ref: update-mongodbmulti-resource-x509
title: "Update your |mongodb-multi| to enable X509 authentication."
level: 4
content: |

  :ref:`Update your MongoDBMultiCluster custom resource <k8s-edit-database-resource>`
  with security settings from the |k8s-op-short|
  :ref:`MongoDBMultiCluster resource specification <multi-cluster-specification>`.
  The resulting configuration may look similar to the following example:

  .. code-block:: yaml

     apiVersion: mongodb.com/v1
     kind: MongoDBMultiCluster
     metadata:
      name: multi-replica-set
     spec:
      version: 5.0.0-ent
      type: ReplicaSet
      persistent: false
      duplicateServiceObjects: true
      credentials: my-credentials
      opsManager:
        configMapRef:
          name: my-project
      security:
        tls:
          ca: custom-ca
        certsSecretPrefix: <prefix>
      authentication:
        enabled: true
        modes: ["X509"]
        agents: 
          mode: "X509"
      clusterSpecList:
        - clusterName: ${MDB_CLUSTER_1_FULL_NAME}
          members: 3
        - clusterName: ${MDB_CLUSTER_2_FULL_NAME}
          members: 2
        - clusterName: ${MDB_CLUSTER_3_FULL_NAME}
          members: 3

   The |k8s-op-short| copies the ConfigMap with the |certauth| created in
   the central cluster to each member cluster, generates a concatenated
   |pem| secret, and distributes it to the member clusters.

---
stepnum: 3
level: 4
ref: verify-mc-resources-tls
source:
  file: steps-multi-cluster-source.yaml
  ref: verify-mdb-resources-mc

...
