#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/reference/write-concern.txt:8
msgid "Write Concern"
msgstr ""

#: ../source/reference/write-concern.txt:19
msgid ""
"Write concern describes the level of acknowledgment requested from "
"MongoDB for write operations to a standalone :binary:`~bin.mongod` or to "
":doc:`replica sets </replication>` or to :doc:`sharded clusters "
"</sharding>`. In sharded clusters, :binary:`~bin.mongos` instances will "
"pass the write concern on to the shards."
msgstr ""

#: ../source/reference/write-concern.txt:26
msgid "Write Concern Specification"
msgstr ""

#: ../source/reference/write-concern.txt:28
msgid "Write concern can include the following fields:"
msgstr ""

#: ../source/reference/write-concern.txt:34
msgid ""
"the :ref:`w <wc-w>` option to request acknowledgment that the write "
"operation has propagated to a specified number of :binary:`~bin.mongod` "
"instances or to :binary:`~bin.mongod` instances with specified tags."
msgstr ""

#: ../source/reference/write-concern.txt:38
msgid ""
"the :ref:`j <wc-j>` option to request acknowledgment that the write "
"operation has been written to the on-disk journal, and"
msgstr ""

#: ../source/reference/write-concern.txt:41
msgid ""
"the :ref:`wtimeout <wc-wtimeout>` option to specify a time limit to "
"prevent write operations from blocking indefinitely."
msgstr ""

#: ../source/reference/write-concern.txt:47
msgid "``w`` Option"
msgstr ""

#: ../source/reference/write-concern.txt:49
msgid ""
"The ``w`` option requests acknowledgment that the write operation has "
"propagated to a specified number of :binary:`~bin.mongod` instances or to"
" :binary:`~bin.mongod` instances with specified tags."
msgstr ""

#: ../source/reference/write-concern.txt:53
msgid ""
"Using the ``w`` option, the following ``w: <value>`` write concerns are "
"available:"
msgstr ""

#: ../source/reference/write-concern.txt:60
msgid "Value"
msgstr ""

#: ../source/reference/write-concern.txt:61
msgid "Description"
msgstr ""

#: ../source/reference/write-concern.txt:65
msgid ""
"Requests acknowledgment that the write operation has propagated to the "
"specified number of :binary:`~bin.mongod` instances. For example:"
msgstr ""

#: ../source/reference/write-concern.txt:73
#: ../source/reference/write-concern.txt:234
msgid "``w: 1``"
msgstr ""

#: ../source/reference/write-concern.txt:70
msgid ""
"Requests acknowledgment that the write operation has propagated to the "
"standalone :binary:`~bin.mongod` or the primary in a replica set. ``w: "
"1`` is the default write concern for MongoDB."
msgstr ""

#: ../source/reference/write-concern.txt:83
msgid "``w: 0``"
msgstr ""

#: ../source/reference/write-concern.txt:76
msgid ""
"Requests no acknowledgment of the write operation. However, ``w: 0`` may "
"return information about socket exceptions and networking errors to the "
"application."
msgstr ""

#: ../source/reference/write-concern.txt:80
msgid ""
"If you specify ``w: 0`` but include :ref:`j: true <wc-j>`, the :ref:`j: "
"true <wc-j>` prevails to request acknowledgment from the standalone "
":binary:`~bin.mongod` or the primary of a replica set."
msgstr ""

#: ../source/reference/write-concern.txt:85
msgid ""
"``w`` greater than 1 requires acknowledgment from the primary and as many"
" additional data-bearing secondaries to meet the specified write concern."
" For example, consider a 3-member replica set with no :term:`arbiters "
"<Arbiter>`. Specifying ``w: 2`` would require acknowledgment from the "
"primary and one of the secondaries. Specifying ``w: 3`` would require "
"acknowledgment from the primary and both secondaries."
msgstr ""

#: ../source/reference/write-concern.txt:95
#: ../source/reference/write-concern.txt:329
msgid ""
":ref:`Hidden <replica-set-hidden-members>`, :ref:`delayed <replica-set-"
"delayed-members>`, and :ref:`priority 0 <replica-set-secondary-only-"
"members>` members can acknowledge :writeconcern:`w: \\<number\\> "
"<\\<number\\>>` write operations."
msgstr ""

#: ../source/reference/write-concern.txt:101
#: ../source/reference/write-concern.txt:131
#: ../source/reference/write-concern.txt:302
#: ../source/reference/write-concern.txt:335
msgid ""
"Delayed secondaries can return write acknowledgment no earlier than the "
"configured :rsconf:`~members[n].slaveDelay`."
msgstr ""

#: ../source/reference/write-concern.txt:104
#: ../source/reference/write-concern.txt:139
msgid ""
"See :ref:`wc-ack-behavior` for when :binary:`~bin.mongod` instances "
"acknowledge the write."
msgstr ""

#: ../source/reference/write-concern.txt:109
msgid ""
"Requests acknowledgment that write operations have propagated to the "
"majority of data-bearing voting members (i.e. :rsconf:`members[n].votes` "
"is greater than ``0`` and :rsconf:`members[n].arbiterOnly` is ``false``)."
" [#majority-definition]_"
msgstr ""

#: ../source/reference/write-concern.txt:115
msgid ""
"For example, consider a replica set with 3 data-bearing voting members. "
"``\"majority\"`` write concern requires acknowledgment from two out of "
"three members, specifically the primary and one secondary. If you later "
"scaled the replica set to 5 data-bearing voting members, ``\"majority\"``"
" would require acknowledgment from three out of five members. "
"Specifically, the primary and two secondaries."
msgstr ""

#: ../source/reference/write-concern.txt:125
#: ../source/reference/write-concern.txt:296
msgid ""
":ref:`Hidden <replica-set-hidden-members>`, :ref:`delayed <replica-set-"
"delayed-members>`, and :ref:`priority 0 <replica-set-secondary-only-"
"members>` members with :rsconf:`members[n].votes` greater than ``0`` can "
"acknowledge :writeconcern:`\"majority\"` write operations."
msgstr ""

#: ../source/reference/write-concern.txt:134
msgid ""
"After the write operation returns with a :writeconcern:`w: \"majority\" "
"<\"majority\">` acknowledgment to the client, the client can read the "
"result of that write with a :readconcern:`\"majority\"` readConcern."
msgstr ""

#: ../source/reference/write-concern.txt:144
msgid ""
"Requests acknowledgment that the write operations have propagated to a "
"replica set member with the specified :ref:`tag <replica-set-"
"configuration-tag-sets>`. See :ref:`wc-ack-behavior` for when "
":binary:`~bin.mongod` instances acknowledge the write."
msgstr ""

#: ../source/reference/write-concern.txt:150
msgid ":doc:`/reference/replica-set-protocol-versions`"
msgstr ""

#: ../source/reference/write-concern.txt:155
msgid "``j`` Option"
msgstr ""

#: ../source/reference/write-concern.txt:157
msgid ""
"The ``j`` option requests acknowledgment from MongoDB that the write "
"operation has been written to the :doc:`on-disk journal "
"</core/journaling>`."
msgstr ""

#: ../source/reference/write-concern.txt:166
msgid ""
"If ``j: true``, requests acknowledgment that the :binary:`~bin.mongod` "
"instances, as specified in the :ref:`w: \\<value\\> <wc-w>`, have written"
" to the on-disk journal. ``j: true`` does not by itself guarantee that "
"the write will not be rolled back due to replica set primary failover."
msgstr ""

#: ../source/includes/note-write-concern-journaled-replication.rst:1
msgid ""
"With :writeconcern:`j: true <j>`, MongoDB returns only after the "
"requested number of members, including the primary, have written to the "
"journal. Previously :writeconcern:`j: true <j>` write concern in a "
"replica set only requires the :term:`primary` to write to the journal, "
"regardless of the :ref:`w: \\<value\\> <wc-w>` write concern."
msgstr ""

#: ../source/reference/write-concern.txt:178
msgid ""
"Specifying a write concern that includes ``j: true`` to a "
":binary:`~bin.mongod` instance that is running without journaling "
"produces an error."
msgstr ""

#: ../source/reference/write-concern.txt:182
msgid ""
"For replica sets using :rsconf:`protocolVersion: 1 <protocolVersion>`, if"
" journaling is enabled, :writeconcern:`w: \"majority\" <\"majority\">` "
"may imply ``j: true``. The :rsconf:`writeConcernMajorityJournalDefault` "
"replica set configuration setting determines the behavior. See :ref:`wc-"
"ack-behavior` for details."
msgstr ""

#: ../source/reference/write-concern.txt:192
msgid "``wtimeout``"
msgstr ""

#: ../source/reference/write-concern.txt:194
msgid ""
"This option specifies a time limit, in milliseconds, for the write "
"concern. ``wtimeout`` is only applicable for ``w`` values greater than "
"``1``."
msgstr ""

#: ../source/reference/write-concern.txt:198
msgid ""
"``wtimeout`` causes write operations to return with an error after the "
"specified limit, even if the required write concern will eventually "
"succeed. When these write operations return, MongoDB **does not** undo "
"successful data modifications performed before the write concern exceeded"
" the ``wtimeout`` time limit."
msgstr ""

#: ../source/reference/write-concern.txt:204
msgid ""
"If you do not specify the ``wtimeout`` option and the level of write "
"concern is unachievable, the write operation will block indefinitely. "
"Specifying a ``wtimeout`` value of ``0`` is equivalent to a write concern"
" without the ``wtimeout`` option."
msgstr ""

#: ../source/reference/write-concern.txt:212
msgid "Acknowledgment Behavior"
msgstr ""

#: ../source/reference/write-concern.txt:214
msgid ""
"The :ref:`w <wc-w>` option and the :ref:`j <wc-j>` option determine when "
":binary:`~bin.mongod` instances acknowledge write operations."
msgstr ""

#: ../source/reference/write-concern.txt:218
msgid "Standalone"
msgstr ""

#: ../source/reference/write-concern.txt:220
msgid ""
"A standalone :binary:`~bin.mongod` acknowledges a write operation either "
"after applying the write in memory or after writing to the on-disk "
"journal. The following table lists the acknowledgment behavior for a "
"standalone and the relevant write concerns:"
msgstr ""

#: ../source/reference/write-concern.txt:230
#: ../source/reference/write-concern.txt:271
#: ../source/reference/write-concern.txt:317
msgid "``j`` is unspecified"
msgstr ""

#: ../source/reference/write-concern.txt:231
msgid "``j:true``"
msgstr ""

#: ../source/reference/write-concern.txt:232
msgid "``j:false``"
msgstr ""

#: ../source/reference/write-concern.txt:235
#: ../source/reference/write-concern.txt:237
#: ../source/reference/write-concern.txt:242
msgid "In memory"
msgstr ""

#: ../source/reference/write-concern.txt:236
#: ../source/reference/write-concern.txt:241
msgid "On-disk journal"
msgstr ""

#: ../source/reference/write-concern.txt:239
#: ../source/reference/write-concern.txt:303
msgid "``w: \"majority\"``"
msgstr ""

#: ../source/reference/write-concern.txt:240
msgid "On-disk journal *if running with journaling*"
msgstr ""

#: ../source/includes/extracts/no-journaling-rollback.rst:2
msgid ""
"With :rsconf:`writeConcernMajorityJournalDefault` set to ``false``, "
"MongoDB does not wait for :writeconcern:`w: \"majority\" <\"majority\">` "
"writes to be written to the on-disk journal before acknowledging the "
"writes. As such, :writeconcern:`majority` write operations could possibly"
" roll back in the event of a transient loss (e.g. crash and restart) of a"
" majority of nodes in a given replica set."
msgstr ""

#: ../source/reference/write-concern.txt:251
msgid "Replica Sets"
msgstr ""

#: ../source/reference/write-concern.txt:253
msgid ""
"The value specified to :ref:`w <wc-w>` determines the number of replica "
"set members that must acknowledge the write before returning success. For"
" each eligible replica set member, the :ref:`j <wc-j>` option determines "
"whether the member acknowledges writes after applying the write operation"
" in memory or after writing to the on-disk journal."
msgstr ""

#: ../source/reference/write-concern.txt:260
msgid ""
"Any data-bearing voting member of the replica set can contribute to write"
" acknowledgment of :writeconcern:`\"majority\"` write operations."
msgstr ""

#: ../source/reference/write-concern.txt:264
#: ../source/reference/write-concern.txt:310
msgid ""
"The following table lists when the member can acknowledge the write based"
" on the :ref:`j <wc-j>` value:"
msgstr ""

#: ../source/reference/write-concern.txt:272
msgid ""
"Acknowledgment depends on the value of "
":rsconf:`writeConcernMajorityJournalDefault`:"
msgstr ""

#: ../source/reference/write-concern.txt:275
msgid ""
"If ``true``, acknowledgment requires writing operation to on-disk journal"
" (``j: true``)."
msgstr ""

#: ../source/reference/write-concern.txt:278
msgid ":rsconf:`writeConcernMajorityJournalDefault` defaults to ``true``"
msgstr ""

#: ../source/reference/write-concern.txt:281
msgid ""
"If ``false``, acknowledgment requires writing operation in memory (``j: "
"false``)."
msgstr ""

#: ../source/reference/write-concern.txt:284
#: ../source/reference/write-concern.txt:321
msgid "``j: true``"
msgstr ""

#: ../source/reference/write-concern.txt:285
#: ../source/reference/write-concern.txt:322
msgid "Acknowledgment requires writing operation to on-disk journal."
msgstr ""

#: ../source/reference/write-concern.txt:287
#: ../source/reference/write-concern.txt:324
msgid "``j: false``"
msgstr ""

#: ../source/reference/write-concern.txt:288
#: ../source/reference/write-concern.txt:325
msgid "Acknowledgment requires writing operation in memory."
msgstr ""

#: ../source/reference/write-concern.txt:325
msgid "``w: <number>``"
msgstr ""

#: ../source/reference/write-concern.txt:306
msgid ""
"Any data-bearing member of the replica set can contribute to write "
"acknowledgment of :ref:`w: \\<number\\> <wc-w>` write operations."
msgstr ""

#: ../source/reference/write-concern.txt:318
msgid "Acknowledgment requires writing operation in memory (``j: false``)."
msgstr ""

#: ../source/reference/write-concern.txt:338
msgid ""
"For the behavior in version 3.2, refer to the :v3.2:`3.2 manual "
"</reference/write-concern>`."
msgstr ""

#: ../source/reference/write-concern.txt:345
msgid ""
"Prior to MongoDB 3.0, ``w: \"majority\"`` refers to the majority of the "
"replica set's members instead of the majority of the replica set's voting"
" members."
msgstr ""

#~ msgid "Write Concern Reference"
#~ msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid "Available Write Concern"
#~ msgstr ""

#~ msgid "The ``w`` option accepts the following values:"
#~ msgstr ""

#~ msgid "``1``"
#~ msgstr ""

#~ msgid "This is the default write concern for MongoDB."
#~ msgstr ""

#~ msgid "``0``"
#~ msgstr ""

#~ msgid "<Number greater than 1>"
#~ msgstr ""

#~ msgid "``\"majority\"``"
#~ msgstr ""

#~ msgid "<tag set>"
#~ msgstr ""

#~ msgid ""
#~ "Write concern describes the level of "
#~ "acknowledgement requested from MongoDB for "
#~ "write operations to a standalone "
#~ ":program:`mongod` or to :doc:`replica sets "
#~ "</core/replication-introduction>` or to "
#~ ":doc:`sharded clusters </core/sharding-"
#~ "introduction>`. In sharded clusters, "
#~ ":program:`mongos` instances will pass the "
#~ "write concern on to the shards."
#~ msgstr ""

#~ msgid ""
#~ "For replica sets using "
#~ ":rsconf:`protocolVersion: 1 <protocolVersion>` "
#~ "**and** running with the :term:`journal` "
#~ "enabled:"
#~ msgstr ""

#~ msgid ""
#~ ":writeconcern:`w: \"majority\" <\"majority\">` "
#~ "implies :ref:`j: true <wc-j>`."
#~ msgstr ""

#~ msgid ""
#~ ":term:`Secondary members <secondary>` acknowledge"
#~ " replicated write operations after the "
#~ "secondary members have written to their"
#~ " respective on-disk journals, regardless"
#~ " of the :ref:`j <wc-j>` option used"
#~ " for the write on the "
#~ ":term:`primary`."
#~ msgstr ""

#~ msgid ""
#~ ":ref:`wtimeout <wc-wtimeout>` option to "
#~ "specify a time limit to prevent "
#~ "write operations from blocking indefinitely."
#~ msgstr ""

#~ msgid ""
#~ "Standalone :program:`mongod` instances and "
#~ "primaries of replica sets acknowledge "
#~ "write operations after applying the "
#~ "write in memory, unless :ref:`j:true "
#~ "<wc-j>`."
#~ msgstr ""

#~ msgid ""
#~ "For replica sets using "
#~ ":rsconf:`protocolVersion: 1 <protocolVersion>`, "
#~ "secondaries acknowledge write operations after"
#~ " the secondary members have written "
#~ "to their respective on-disk "
#~ ":doc:`journals </core/journaling>`, regardless of"
#~ " the :ref:`j <wc-j>` option."
#~ msgstr ""

#~ msgid "*Changed in version 3.2*"
#~ msgstr ""

#~ msgid ""
#~ "Requests acknowledgment that write operations"
#~ " have propagated to the majority of"
#~ " voting nodes [#majority-definition]_, "
#~ "including the primary, and have been "
#~ "written to the on-disk :doc:`journal "
#~ "</core/journaling>` for these nodes."
#~ msgstr ""

#~ msgid ""
#~ "For replica sets using "
#~ ":rsconf:`protocolVersion: 1 <protocolVersion>`, "
#~ ":writeconcern:`w: \"majority\" <\"majority\">` "
#~ "implies :ref:`j: true <wc-j>`. So, "
#~ "unlike ``w: <number>``, with :writeconcern:`w:"
#~ " \"majority\" <\"majority\">`, the primary "
#~ "also writes to the on-disk journal"
#~ " before acknowledging the write."
#~ msgstr ""

#~ msgid ""
#~ "Requests acknowledgement that the write "
#~ "operations have propagated to a replica"
#~ " set member with the specified "
#~ ":ref:`tag <replica-set-configuration-tag-"
#~ "sets>`."
#~ msgstr ""

#~ msgid ""
#~ "The :ref:`j <wc-j>` option requests "
#~ "acknowledgement from MongoDB that the "
#~ "write operation has been written to "
#~ "the :doc:`journal </core/journaling>`."
#~ msgstr ""

#~ msgid ""
#~ "Requests acknowledgement that the "
#~ ":program:`mongod` instances, as specified in"
#~ " the :ref:`w: \\<value\\> <wc-w>`, have "
#~ "written to the on-disk journal. "
#~ "``j: true`` does not by itself "
#~ "guarantee that the write will not "
#~ "be rolled back due to replica set"
#~ " primary failover."
#~ msgstr ""

#~ msgid ""
#~ "For replica sets using "
#~ ":rsconf:`protocolVersion: 1 <protocolVersion>`, "
#~ ":writeconcern:`w: \"majority\" <\"majority\">` "
#~ "implies :ref:`j: true <wc-j>`, if "
#~ "journaling is enabled. Journaling is "
#~ "enabled by default."
#~ msgstr ""

#~ msgid ""
#~ "Specifying a write concern that includes"
#~ " ``j: true`` to a :program:`mongod` "
#~ "or :program:`mongos` running with "
#~ ":option:`--nojournal` option produces an "
#~ "error. Previous versions would ignore "
#~ "the ``j: true``."
#~ msgstr ""

#~ msgid ""
#~ "Prior to MongoDB 3.0, ``w: "
#~ "\"majority\"`` refers to the majority of"
#~ " the replica set's members."
#~ msgstr ""

# 8d24bcf63c964efbb9984596e3501f79
#~ msgid "On this page"
#~ msgstr ""

# 22acfd458ba74d5f86918b7d97870c9b
#~ msgid ""
#~ "Write concern describes the level of "
#~ "acknowledgement requested from MongoDB for "
#~ "write operations to a standalone "
#~ ":program:`mongod` or to :doc:`replica sets "
#~ "</replication>` or to :doc:`sharded clusters"
#~ " </sharding>`. In sharded clusters, "
#~ ":program:`mongos` instances will pass the "
#~ "write concern on to the shards."
#~ msgstr ""

# 49c6209b5f664ef2ad7cb2776088ed08
#~ msgid ""
#~ "A new protocol for :ref:`write "
#~ "operations <rel-notes-write-operations>` "
#~ "integrates write concerns with the write"
#~ " operations and eliminates the need "
#~ "to call the :dbcommand:`getLastError` command."
#~ " Previous versions required a "
#~ ":dbcommand:`getLastError` command immediately after"
#~ " a write operation to specify the "
#~ "write concern."
#~ msgstr ""

# 5357ee360e2840c0a75d78e8acb59b29
#~ msgid ""
#~ "the :ref:`w <wc-w>` option to request"
#~ " acknowledgment that the write operation"
#~ " has propagated to a specified number"
#~ " of :program:`mongod` instances or to "
#~ ":program:`mongod` instances with specified "
#~ "tags."
#~ msgstr ""

# 51bd419b8e3c4c00a21fe00fa6694e73
#~ msgid ""
#~ "the :ref:`j <wc-j>` option to request"
#~ " acknowledgement that the write operation"
#~ " has been written to the journal, "
#~ "and"
#~ msgstr ""

# dc4201321cf84a6f8f379a46f3cf8055
#~ msgid ""
#~ "The ``w`` option requests acknowledgement "
#~ "that the write operation has propagated"
#~ " to a specified number of "
#~ ":program:`mongod` instances or to "
#~ ":program:`mongod` instances with specified "
#~ "tags."
#~ msgstr ""

# 4a315043b28f4df2af3a503fdc2b4ef7
#~ msgid ""
#~ "Requests acknowledgement that the write "
#~ "operation has propagated to the "
#~ "specified number of :program:`mongod` "
#~ "instances. For example:"
#~ msgstr ""

# ee2a2ce0c2a64c3b9b56b9e776be7b2e
#~ msgid ""
#~ "Requests acknowledgement that the write "
#~ "operation has propagated to the "
#~ "standalone :program:`mongod` or the primary"
#~ " in a replica set. ``w: 1`` is"
#~ " the default write concern for "
#~ "MongoDB."
#~ msgstr ""

# 623aa91407d34adeb4197ad7358cf592
#~ msgid ""
#~ "If you specify ``w: 0`` but "
#~ "include :ref:`j: true <wc-j>`, the "
#~ ":ref:`j: true <wc-j>` prevails to "
#~ "request acknowledgement from the standalone"
#~ " :program:`mongod` or the primary of "
#~ "a replica set."
#~ msgstr ""

# 4dd4b1b6d9994a82a9845aa9f186f0ab
#~ msgid ""
#~ "Numbers greater than 1 are valid "
#~ "only for replica sets to request "
#~ "acknowledgement from specified number of "
#~ "members, including the primary."
#~ msgstr ""

# 96c5751e7c024faea81ad3b4bd8c2c77
# bc9be7944ad849c29fe950b2f438b454
#~ msgid ""
#~ "See :ref:`wc-ack-behavior` for when "
#~ ":program:`mongod` instances acknowledge the "
#~ "write."
#~ msgstr ""

# eedd2738a16742a8a069ca9ffc1c62f8
#~ msgid ""
#~ "Requests acknowledgment that write operations"
#~ " have propagated to the majority of"
#~ " voting nodes [#majority-definition]_, "
#~ "including the primary."
#~ msgstr ""

# 840df2236a144d9dae926a742032def1
#~ msgid ""
#~ "After the write operation returns with"
#~ " a :writeconcern:`w: \"majority\" <\"majority\">`"
#~ " acknowledgement to the client, the "
#~ "client can read the result of that"
#~ " write with a :readconcern:`\"majority\"` "
#~ "readConcern."
#~ msgstr ""

# 521640e5e8f34d6b8d57e4c170f9b667
#~ msgid ""
#~ "Requests acknowledgement that the write "
#~ "operations have propagated to a replica"
#~ " set member with the specified "
#~ ":ref:`tag <replica-set-configuration-tag-"
#~ "sets>`. See :ref:`wc-ack-behavior` for"
#~ " when :program:`mongod` instances acknowledge "
#~ "the write."
#~ msgstr ""

# 1b4e934ebe9e42b09ef6a728e346b508
#~ msgid ""
#~ "The ``j`` option requests acknowledgement "
#~ "from MongoDB that the write operation"
#~ " has been written to the "
#~ ":doc:`journal </core/journaling>`."
#~ msgstr ""

# d6ebddc5d45c4e1d8252e1172c73851f
#~ msgid ""
#~ "If ``j: true``, requests acknowledgement "
#~ "that the :program:`mongod` instances, as "
#~ "specified in the :ref:`w: \\<value\\> "
#~ "<wc-w>`, have written to the on-"
#~ "disk journal. ``j: true`` does not "
#~ "by itself guarantee that the write "
#~ "will not be rolled back due to "
#~ "replica set primary failover."
#~ msgstr ""

# ee181cc2b99543cc8c5b13f7c053b153
#~ msgid ""
#~ "Specifying a write concern that includes"
#~ " ``j: true`` to a :program:`mongod` "
#~ "instance that is running without "
#~ "journaling produces an error."
#~ msgstr ""

# 45c929765153485ba83efea24b5b92f8
#~ msgid "Acknowledgement Behavior"
#~ msgstr ""

# 3e0e4fb73b1c415a9a66e6d84a8f6dac
#~ msgid ""
#~ "The :ref:`w <wc-w>` option and the "
#~ ":ref:`j <wc-j>` option determine when "
#~ ":program:`mongod` instances acknowledge write "
#~ "operations."
#~ msgstr ""

# 4191f1ff903640b09caa3c5cae87d587
#~ msgid ""
#~ "A standalone :program:`mongod` acknowledges a"
#~ " write operation either after applying "
#~ "the write in memory or after "
#~ "writing to the on-disk journal. "
#~ "The following table lists the "
#~ "acknowledgement behavior for a standalone "
#~ "and the relevant write concerns:"
#~ msgstr ""

# 06fb8800f0ff49e5a33ff4ab8b047c57
# 1d8a3e11a4b34dd294faa41b9aa11eae
#~ msgid ""
#~ "With :rsconf:`writeConcernMajorityJournalDefault` set "
#~ "to ``false``, MongoDB will not wait "
#~ "for :writeconcern:`w: \"majority\" <\"majority\">`"
#~ " writes to be durable before "
#~ "acknowledging the writes. As such, "
#~ ":writeconcern:`\"majority\"` write operations could"
#~ " possibly roll back in the event "
#~ "of a loss of a replica set "
#~ "member."
#~ msgstr ""

# 07d70ee567124c8aa698a589ae36c2b4
#~ msgid ""
#~ "A replica set acknowledges a write "
#~ "operation either after the specified "
#~ "number of members apply the write "
#~ "in memory or after they write to"
#~ " the on-disk journal. The number "
#~ "of members is specified by the "
#~ ":ref:`w: \\<value\\> <wc-w>` setting. The "
#~ "following table lists the acknowledgement "
#~ "behavior for these members and the "
#~ "relevant write concerns [#3.2-behavior]_:"
#~ msgstr ""

# e09a417b99574f649f72563c95ecadb2
#~ msgid "Depends on the value of :rsconf:`writeConcernMajorityJournalDefault`."
#~ msgstr ""

# aa5076ab1aa2427dab23fc6b9b309088
#~ msgid "If true, On-disk journal."
#~ msgstr ""

# 4106661ef7644894b5d9013a085677b6
#~ msgid "If false, In memory."
#~ msgstr ""

# a09435686d524b4b85436c07d293e70f
#~ msgid ""
#~ "In :doc:`Master/Slave </core/master-slave>` "
#~ "deployments, MongoDB treats ``w: "
#~ "\"majority\"`` as equivalent to ``w: "
#~ "1``. In earlier versions of MongoDB, "
#~ "``w: \"majority\"`` produces an error in"
#~ " :doc:`master/slave </core/master-slave>` "
#~ "deployments."
#~ msgstr ""

