#  This file borrows content from other files, including
#  /includes/options-shared.yaml,
#  which uses {{program}} to refer to the tool.
#
program: mongo
name: shell
directive: option
args: null
description: |
  Enables the shell interface. If you invoke the {{program}} command
  and specify a JavaScript file as an argument, or use :option:`--eval` to
  specify JavaScript on the command line, the {{role}} option
  provides the user with a shell prompt after the file finishes executing.
optional: true
---
program: mongo
name: nodb
directive: option
args: null
description: |
  Prevents the shell from connecting to any database instances. Later, to
  connect to a database within the shell, see
  :ref:`mongo-shell-new-connections`.
optional: true
---
program: mongo
name: norc
directive: option
args: null
description: |
  Prevents the shell from sourcing and evaluating :file:`~/.mongorc.js` on
  start up.
optional: true
---
program: mongo
name: quiet
directive: option
args: null
description: |
  Silences output from the shell during the connection process.
optional: true
---
program: mongo
name: port
directive: option
args: <port>
description: |
  Specifies the port where the :binary:`~bin.mongod` or :binary:`~bin.mongos`
  instance is listening. If {{role}} is not specified,
  {{program}} attempts to connect to port ``27017``.
optional: true
---
program: mongo
name: host
directive: option
args: <hostname>
description: |
  Specifies the name of the host machine where the
  {{instance}} is running. If this is not specified,
  {{program}} attempts to connect to a MongoDB process running on
  the localhost.

  To connect to a replica set, specify the :setting:`replica set name
  <~replication.replSetName>` and a seed list of set members. Use the
  following form:

  .. code-block:: none

     <replSetName>/<hostname1><:port>,<hostname2><:port>,<...>

  For TLS/SSL connections (``--ssl``), {{program}} verifies that the
  hostname of the {{instance}} to which you are connecting matches
  the CN or SAN of the {{instance}}'s ``--sslPEMKeyFile`` certificate.
  If the hostname does not match the CN/SAN, {{program}} will fail to
  connect.

  For `DNS seedlist connections <https://docs.mongodb.com/manual/reference/connection-string/#dns-seedlist-connection-format/>`_, specify the connection protocol as
  ``mongodb+srv``, followed by the DNS SRV hostname record and any
  options. The  ``authSource`` and ``replicaSet`` options, if included in
  the connection string, will override any corresponding DNS-configured options
  set in the TXT record. Use of the ``mongodb+srv:`` connection string implicitly
  enables TLS/SSL (normally set with ``ssl=true``) for the client connection. The
  TLS/SSL option can be turned off by setting ``ssl=false`` in the query string.

  Example:

  .. code-block:: none

     mongodb+srv://server.example.com/?connectionTimeout=3000ms

  .. versionadded:: 3.6

optional: true
replacement:
  instance: ":binary:`~bin.mongod` or :binary:`~bin.mongos`"
---
program: mongo
name: eval
directive: option
args: <javascript>
description: |
  Evaluates a JavaScript expression that is specified as an argument.
  {{program}} does not load its own environment when evaluating code.
  As a result many options of the shell environment are not available.
optional: true
---
program: mongo
name: username
inherit:
  name: username
  program: _shared
  file: options-shared.yaml
---
program: mongo
name: password
inherit:
  name: password
  program: _shared
  file: options-shared.yaml
description: |
    Specifies a password with which to authenticate to a MongoDB database
    that uses authentication. Use in conjunction with the :option:`--username`
    and :option:`--authenticationDatabase` options. To force {{program}} to
    prompt for a password, enter the {{role}} option as the
    last option and leave out the argument.
---
program: mongo
aliases: -h
name: help
inherit:
  name: help
  program: _shared
  file: options-shared.yaml
---
program: mongo
name: version
inherit:
  name: version
  program: _shared
  file: options-shared.yaml
---
program: mongo
name: verbose
directive: option
args: null
description: |
  Increases the verbosity of the output of the shell during the connection
  process.
optional: true
---
program: mongo
name: ipv6
inherit:
  name: ipv6
  program: _shared
  file: options-shared.yaml
---
program: mongo
name: <db name>
directive: option
args: null
description: |
  Specifies the name of the database to connect to. For
  example:

  .. code-block:: sh

     mongo admin

  The above command will connect the {{program}} shell to the
  :term:`admin database` of the MongoDB deployment running on the local machine. You may specify a remote
  database instance, with the resolvable hostname or IP address. Separate
  the database name from the hostname using a ``/`` character. See the
  following examples:

  .. code-block:: none

     mongo mongodb1.example.net/test
     mongo mongodb1/admin
     mongo 10.8.8.10/test

  This syntax is the *only* way to connect to a specific database.

  To specify alternate hosts and a database, you must use this syntax and cannot
  use :option:`--host` or :option:`--port`.
optional: true
---
program: mongo
name: <file.js>
directive: option
args: null
description: |
  Specifies a JavaScript file to run and then exit. Generally this should
  be the last option specified.

  .. optional:: To specify a JavaScript file to execute *and* allow
     {{program}} to prompt you for a password using
     :option:`--password`, pass the filename as the first parameter with
     :option:`--username` and :option:`--password` as the last options, as
     in the following:

     .. code-block:: sh

        mongo file.js --username username --password

  Use the :option:`--shell` option to return to a shell after the file
  finishes running.
optional: true
---
program: mongo
name: authenticationDatabase
inherit:
  name: authenticationDatabase
  program: _shared
  file: options-shared.yaml
post: |
  If you do not specify a value for {{role}}, {{program}} uses the database
  specified in the connection string.
---
program: mongo
name: authenticationMechanism
inherit:
  name: authenticationMechanism
  program: _shared
  file: options-shared.yaml
---
program: mongo
name: ssl
args: null
directive: option
description: |

  .. versionchanged:: 3.2.6

  Enables connection to a :binary:`~bin.mongod` or :binary:`~bin.mongos` that has
  TLS/SSL support enabled.

  .. include:: /includes/extracts/ssl-facts-mongo-shell-ca.rst

  .. include:: /includes/extracts/ssl-facts-see-more.rst
optional: true
---
program: mongo
name: sslCertificateSelector
inherit:
  name: sslCertificateSelector
  program: mongod
  file: options-mongod.yaml
---
program: mongo
name: sslPEMKeyFile
args: <filename>
directive: option
description: |

  Specifies the :file:`.pem` file that contains both the TLS/SSL certificate
  and key. Specify the file name of the :file:`.pem` file using relative
  or absolute paths.

  This option is required when using the ``--ssl`` option to connect
  to a :binary:`~bin.mongod` or :binary:`~bin.mongos` that has
  :setting:`~net.ssl.CAFile` enabled *without*
  :setting:`~net.ssl.allowConnectionsWithoutCertificates`.

  .. include:: /includes/extracts/ssl-facts-see-more.rst
optional: true
---
program: mongo
name: sslPEMKeyPassword
args: <value>
directive: option
description: |

  Specifies the password to de-crypt the certificate-key file (i.e.
  ``--sslPEMKeyFile``). Use the {{role}} option only if the
  certificate-key file is encrypted. In all cases, the {{program}} will
  redact the password from all logging and reporting output.

  If the private key in the PEM file is encrypted and you do not
  specify the {{role}} option, the {{program}} will prompt for a
  passphrase. See :ref:`ssl-certificate-password`.

  .. include:: /includes/extracts/ssl-facts-see-more.rst
optional: true
---
program: mongo
name: sslCAFile
args: <filename>
directive: option
description: |
  Specifies the :file:`.pem` file that contains the root certificate chain
  from the Certificate Authority. Specify the file name of the
  :file:`.pem` file using relative or absolute paths.

  .. include:: /includes/extracts/ssl-facts-mongo-shell-ca.rst

  .. include:: /includes/extracts/ssl-facts-see-more.rst

optional: true
---
program: mongo
name: sslCRLFile
args: <filename>
directive: option
description: |

  Specifies the :file:`.pem` file that contains the Certificate Revocation
  List. Specify the file name of the :file:`.pem` file using relative or
  absolute paths.

  .. include:: /includes/extracts/ssl-facts-see-more.rst
optional: true
---
program: mongo
name: sslFIPSMode
inherit:
  name: sslFIPSMode
  program: _shared
  file: options-shared.yaml
optional: true
---
program: mongo
name: sslAllowInvalidCertificates
args: null
directive: option
description: |

  Bypasses the validation checks for server certificates and allows
  the use of invalid certificates to connect.

  .. note::
     
     .. include:: /includes/extracts/ssl-facts-x509-invalid-certificate.rst

  .. include:: /includes/extracts/ssl-facts-invalid-cert-warning-clients.rst

  When using the :setting:`~net.ssl.allowInvalidCertificates` setting,
  MongoDB logs as a warning the use of the invalid certificate.

  .. include:: /includes/extracts/ssl-facts-see-more.rst
optional: true
---
program: mongo
name: gssapiServiceName
inherit:
  name: gssapiServiceName
  program: _shared
  file: options-shared.yaml
---
program: mongo
name: gssapiHostName
inherit:
  name: gssapiHostName
  program: _shared
  file: options-shared.yaml
---
program: mongo
name: sslAllowInvalidHostnames
inherit:
  name: sslAllowInvalidHostnames
  program: _shared
  file: options-shared.yaml
---
program: mongo
name: enableJavaScriptJIT
directive: option
optional: true
args: null
description: |
   .. versionadded:: 4.0

   Enable the JavaScript engine's JIT compiler.
---
program: mongo
name: disableJavaScriptJIT
directive: option
optional: true
args: null
description: |
   .. versionchanged:: 4.0

      .. include:: /includes/fact-jit-disabled.rst

   Disables the JavaScript engine's JIT compiler.
---
program: mongo
name: disableJavaScriptProtection
directive: option
optional: true
args: null
description: |
   .. versionadded:: 3.4

   Allows fields of type :ref:`javascript<bson-types>` and
   :ref:`javascriptWithScope<bson-types>` to be automatically
   marshalled to JavaScript functions in the :binary:`~bin.mongo`
   shell.

   With the ``--disableJavaScriptProtection`` flag set, it is possible
   to immediately execute JavaScript functions contained in documents.
   The following example demonstrates this behavior within the shell:

   .. code-block:: javascript

      > db.test.insert({ _id: 1, jsFunc: function(){ print("hello") } } )
      WriteResult({ "nInserted" : 1 })
      > var doc = db.test.findOne({ _id: 1 })
      > doc
      { "_id" : 1, "jsFunc" : function (){ print ("hello") } }
      > typeof doc.jsFunc
      function
      > doc.jsFunc()
      hello

   The default behavior (when :binary:`~bin.mongo` starts *without* the
   ``--disableJavaScriptProtection`` flag) is to convert embedded
   JavaScript functions to the non-executable MongoDB shell type
   ``Code``. The following example demonstrates the default behavior
   within the shell:

   .. code-block:: javascript

      > db.test.insert({ _id: 1, jsFunc: function(){ print("hello") } } )
      WriteResult({ "nInserted" : 1 })
      > var doc = db.test.findOne({ _id: 1 })
      > doc
      { "_id" : 1, "jsFunc" : { "code" : "function (){print(\"hello\")}" } }
      > typeof doc.func
      object
      > doc.func instanceof Code
      true
      > doc.jsFunc()
      2016-11-09T12:30:36.808-0800 E QUERY    [thread1] TypeError: doc.jsFunc is
      not a function :
      @(shell):1:1
---
program: mongo
name: networkMessageCompressors
args: <string>
directive: option
description: |

   .. versionadded:: 3.4

   .. versionchanged:: 3.6

      - Add support for :term:`zlib` compressor.
      - Enabled by default. To disable, set to ``disabled``.

   Enables network compression for communication between this
   {{program}} shell and:

   - a :binary:`~bin.mongod` instance

   - a :binary:`~bin.mongos` instance.

   .. include:: /includes/fact-networkMessageCompressors.rst

---
program: mongo
name:  retryWrites
args:
directive: option
description: |

   .. versionadded:: 3.6

   Enables retryable writes as the default for sessions in the
   :binary:`~bin.mongo` shell.

   For more information on sessions, see :ref:`sessions`.
---
name: sslDisabledProtocols
args: <string>
description: |

   Disables the specified TLS protocols. The option recognizes the
   following protocols: ``TLS1_0``, ``TLS1_1``, and ``TLS1_2``:

   - On macOS, you cannot disable ``TLS1_1`` and leave both ``TLS1_0`` and
     ``TLS1_2`` enabled. You must also disable at least one of the other
     two; for example, ``TLS1_0,TLS1_1``.

   - To list multiple protocols, specify as a comma separated list of
     protocols. For example ``TLS1_0,TLS1_1``.

   - The specified disabled protocols overrides any default disabled
     protocols.

   Starting in version 4.0, MongoDB disables the use of TLS 1.0 if TLS
   1.1+ is available on the system. To enable the
   disabled TLS 1.0, specify ``none`` to {{role}}.  See :ref:`4.0-disable-tls`.

   .. versionadded:: 3.6.5

optional: true
program: mongo
directive: option
...
