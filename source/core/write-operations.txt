.. index:: write operations
.. index:: crud; write operations

================
Write Operations
================

.. default-domain:: mongodb

All operations that create or modify data in the MongoDB instance are
write operations. MongoDB represents data as :term:`BSON documents
<document>` stored in :term:`collections <collection>`. Write
operations target one collection and are atomic on the level of a
single document: no single write operation can atomically affect more
than one document or more than one collection.

This document introduces the write operators available in MongoDB as
well as presents strategies to increase the efficiency of writes in
applications.

Write Operations in MongoDB
---------------------------

[words about general considerations for write operations here]

.. _write-operations-isolation:

Isolation
~~~~~~~~~

When a single write operation modifies multiple documents, the
operation as a whole is not atomic, and other operations may
interleave. The modification of a single document, or record, is always
atomic, even if the write operation modifies multiple sub-document
*within* the single record.

No other operations are atomic; however, you can attempt to isolate a
write operation that affects multiple documents using the
:doc:`isolation operator </reference/operator/isolated>`.

To isolate a sequence of write operations from other read and write
operations, see :doc:`/tutorial/perform-two-phase-commits`.

.. _write-operations-indexing:

Impact on Indexes
~~~~~~~~~~~~~~~~~

After every insert, update, or delete operation, MongoDB must update
*every* index associated with the collection in addition to the data
itself. Therefore, every index on a collection adds some amount of
overhead for the performance of write operations. [#exceptions]_

In general, the performance gains that indexes provide for *read
operations* are worth the insertion penalty; however, when optimizing
write performance, be careful when creating new indexes and always
evaluate the indexes on the collection and ensure that your queries are
actually using these indexes.

For more information on indexes in MongoDB consider :doc:`/indexes`
and :doc:`/applications/indexes`.

.. [#exceptions] The overhead for :ref:`sparse indexes <index-type-sparse>` 
   inserts and updates to un-indexed fields is less than for non-sparse
   indexes. Also for non-sparse indexes, updates that don't change the
   record size have less indexing overhead.

Certain operations and architectures have their own set of
considerations that are important to be aware of. The following
documents detail these considerations:

.. toctree::
   :maxdepth: 1
   
   /core/write-operations-bulk-inserts
   /core/write-operations-updates-padding
   /core/write-operations-architecture

.. index:: write operators
.. _write-operations-operators:

Write Operators
---------------

.. AM: should this be here? Is this conceptual or just linking out to the relevant example pages?

For information on write operators and how to write data to a MongoDB
database, see the following pages:

- :doc:`/core/create`
- :doc:`/core/update`
- :doc:`/core/delete`

For information on specific methods used to perform write operations in the
:program:`mongo` shell, see the following:

- :method:`db.collection.insert()`
- :method:`db.collection.update()`
- :method:`db.collection.save()`
- :method:`db.collection.findAndModify()`
- :method:`db.collection.remove()`

For information on how to perform write operations from within an
application, see the :doc:`/applications/drivers` documentation or the
documentation for your client library.

.. _write-operations-write-concern:

Write Concern
-------------

.. include:: /includes/introduction-write-concern.rst

.. note:: The :doc:`driver write concern </release-notes/drivers-write-concern>`
   change created a new connection class in all of the MongoDB
   drivers, called ``MongoClient`` with a different default write
   concern. See the :doc:`release notes </release-notes/drivers-write-concern>`
   for this change, and the release notes for the driver you're using
   for more information about your driver's release.

.. seealso:: :doc:`/core/write-concern` and
   :doc:`/reference/write-concern`.
