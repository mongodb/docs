.. _column-bar-chart-ref:

=====================
Column and Bar Charts
=====================

.. meta::
   :description: Explore how to use column and bar charts to visualize data trends, including encoding channels, chart types, use cases, and customization options.

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Column and bar charts plot data in either horizontal or vertical
segments where the length of the segment is proportional to the data
value. Column and bar charts provide high-level overviews of data
trends by comparing values within a specific category.

Column and Bar Chart Encoding Channels
--------------------------------------

Column and bar charts, except for 
the :ref:`candlestick chart type <candlestick-chart-ref>`, 
provide the following :ref:`encoding channels <encoding-channels>`:

.. list-table::
   :header-rows: 1
   :widths: 20 80

   * - Encoding Channel
     - Description

   * - X / Y Axis
     - - In the :guilabel:`category` axis encoding channel, a bar or
         column is rendered for each unique value from this field.

         In a column chart, the :guilabel:`category` is the
         :guilabel:`X Axis`, which results in vertical segments. In a
         bar chart, the :guilabel:`category` is the
         :guilabel:`Y Axis`, which results in horizontal segments.

       - The :guilabel:`aggregation` axis encoding channel dictates
         which field to aggregate on and the type of aggregation to
         perform. This ultimately dictates the size of each bar or
         column.

         You can aggregate upon multiple fields in your dataset to
         create multi-series charts. For more information, see
         :ref:`Multiple Field Mappings <multiple-field-mappings>`.

   * - Series
     - (*Optional*) A :guilabel:`category` encoding channel that
       segments the axis category based on the unique values in
       this field.

       If omitted, |charts| renders a basic bar or column chart with
       just a comparison of the :guilabel:`X Axis` and
       :guilabel:`Y Axis` fields.

       This option is only available for :ref:`Grouped
       <grouped-ref-example>` and :ref:`Stacked
       <stacked-ref-example>` charts with a *single* field mapped in
       the :guilabel:`aggregation` channel.

   * - Color
     - (*Optional*) An :guilabel:`aggregation` encoding channel for
       :ref:`Colored <colored-ref-example>` charts that changes the
       bars or columns' colors to reflect the aggregated
       value of the field, with darker colors meaning greater values.

Column and Bar Chart Types
--------------------------

Column and bar charts provide the following sub-types:

.. list-table::
   :header-rows: 1
   :widths: 20 80

   * - Sub-Type Name
     - Description

   * - :ref:`Grouped <grouped-ref-example>`
     - |charts| groups data by the category specified in the
       :guilabel:`category` :ref:`encoding channel
       <encoding-channels>`, and plots a bar or column for each value
       in the :guilabel:`Series` encoding channel.

       .. figure:: /images/charts/grouped-column-chart-reference-small.png
          :figwidth: 600px
          :alt: Grouped Column Chart Reference Small

          For a more detailed example, refer to the
          :ref:`grouped column chart example <grouped-ref-example>`.

   * - :ref:`Stacked <stacked-ref-example>`
     - |charts| creates a bar or column for each distinct value in the
       :guilabel:`category` :ref:`encoding channel <encoding-channels>`
       field, and splits each bar or column into segments based on the
       the :guilabel:`Series` encoding channel.

       .. figure:: /images/charts/stacked-bar-chart-reference-small.png
          :figwidth: 600px
          :alt: Stacked Bar Chart Reference Small

          For a more detailed example, refer to the
          :ref:`stacked bar chart example <stacked-ref-example>`.

   * - :ref:`100% Stacked <one-hundred-stacked-example>`
     - 100% stacked charts behave similarly to traditional stacked
       charts, with the difference that in a 100% stacked chart each
       bar or column is normalized to a consistent value of 100%. Just
       as with traditional stacked charts, each bar or column is split
       into segments based on the :guilabel:`Series`
       :ref:`encoding channel <encoding-channels>`. Each series is
       shown as a percentage of the whole.

       When using a traditional stacked chart, it can be difficult to
       compare the proportions of each series to the whole if the
       total values of the bars / columns greatly differ. This type of
       chart makes it easier to compare proportions within each bar or
       column by showing relative percentages.

       You cannot customize the minimum, maximum, or logarithmic
       scale :ref:`value axis options <value-axis-options>` of 100%
       stacked charts.

       .. figure:: /images/charts/100-bar-chart-small.png
          :figwidth: 600px
          :alt: Colored Bar Chart Reference Small

          For a more detailed example, refer to the
          :ref:`100% stacked bar chart example <one-hundred-stacked-example>`.

   * - :ref:`Colored <colored-ref-example>`
     - |charts| creates a bar or column for each distinct value in the
       :guilabel:`category` :ref:`encoding channel <encoding-channels>`
       field, and the :guilabel:`Color` encoding channel changes the
       color of each bar / column based on the aggregated value of the
       value specified in the encoding channel.

       .. figure:: /images/charts/colored-bar-chart-reference-small.png
          :figwidth: 600px
          :alt: Colored Bar Chart Reference Small

          For a more detailed example, refer to the
          :ref:`colored bar chart example <colored-ref-example>`.

   * - :ref:`Candlestick <candlestick-chart-ref>`
     - |charts| groups numeric data by the time period specified in the
       :guilabel:`category` :ref:`encoding channel
       <encoding-channels>`, and plots a vertical column that shows the 
       highest, lowest, opening, and closing values in your data source
       for each time period. To learn more, see :ref:`candlestick-chart-ref`.

       .. figure:: /images/charts/candlestick-chart-reference-small.png
          :figwidth: 600px
          :alt: Candlestick Chart Reference Small

          For a more detailed example, refer to the
          :ref:`candlestick chart example <candlestick-ref-example>`.

Use Cases
---------

Column and bar charts display information in similar manners and, as
such, have similar use cases. There are, however, situations where it
may be beneficial to use one over the other:

- A bar chart may be a better choice than a column chart when the
  category labels are long, as it may be difficult to quickly
  pinpoint which label applies to which column.

- A column chart may be a better choice when comparing sequential
  values (such as time or geographic data) because the viewer
  will intuitively read these charts from left to right and attain the
  full picture of the visualization.

.. tip::

   Column and bar charts are best suited for data with limited
   categories. When plotting data with many categories, such as
   years across a long period of time, consider using a
   :doc:`Line Chart </chart-type-reference/line-area-chart>`.

   You can also limit the number of categories displayed in your
   chart to focus on a subset of your data. |charts| provides the
   following methods to reduce the number of bars or columns plotted
   in the visualization:

   - :ref:`Filter documents <charts-filter-documents>`
   - :ref:`Limit Data <charts-limit-data>`
   - :ref:`Bin data <charts-bin-data>`

Customization Options
---------------------

The following customization options are specific to column and bar
charts. To see all available customization options, see
:ref:`customize-charts`.

Adjust X-Axis Label Angle
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/customization/adjust-x-axis-label-angle.rst

Show or Hide Data Value Labels
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/customization/show-hide-data-labels.rst

Examples
--------

.. _grouped-ref-example:

Grouped Column Chart
~~~~~~~~~~~~~~~~~~~~

The following grouped column chart shows the most common items sold
from an office supply store across several store locations.

The :guilabel:`X Axis` category of ``storeLocation`` creates a group
for each store location in the data set, and each group is split by the
:guilabel:`series` column of ``item.name``. This ultimately displays
the count of each item's name sold at each store location:

.. figure:: /images/charts/grouped-column-chart-reference.png
   :figwidth: 750px
   :alt: Grouped Column Chart Reference

.. _stacked-ref-example:

Stacked Column Chart
~~~~~~~~~~~~~~~~~~~~

The following stacked column chart shows the number of awards won by
the top 10 highest award-winning movie directors, with each bar
segmented by the genres of films directed by that director.

The :guilabel:`X Axis` category of director creates a column for each
director in the data set, which we :ref:`limit <charts-limit-data>` to
only the top 10 as sorted by the aggregated sum of ``awards.wins`` from
the :guilabel:`Y Axis`. The :guilabel:`Series` encoding channel field
of ``genres`` segments each column to portray the genres of the films
directed by that director:

.. figure:: /images/charts/stacked-column-chart-reference.png
   :figwidth: 750px
   :alt: Stacked Column Chart Reference

.. _one-hundred-stacked-example:

100% Stacked Bar Chart
~~~~~~~~~~~~~~~~~~~~~~

The following 100% stacked bar chart visualizes the monthly cost
of renting a home in three different suburbs of Austin, Texas, USA.
Using a 100% stacked chart allows us to easily visualize
the percentage of rental homes in each ``monthly_price``
:ref:`bin <charts-bin-data>` within each neighborhood. This provides a
clear picture of how these neighborhoods generally compare on rental
prices.

This is the complete :ref:`filter <charts-filter-documents>` used for
this chart:

.. code-block:: javascript

   {
     $and: [
       { monthly_price:
         { $exists: true, $lte: 2000 }
       },
       { 'address.suburb':
         { $in: ["Georgian Acres", "South Congress", "Wooten"] }
       }
     ]
   }

The :guilabel:`Y Axis` category channel creates a bar for each of the
three suburbs in the filter. The :guilabel:`X Axis` channel aggregates
to obtain a count of documents matching each respective suburb. The
:guilabel:`Series` encoding channel of ``monthly_price`` splits each
bar into categories colored according to the legend on the right
side of the chart:

.. figure:: /images/charts/100-bar-chart.png
   :figwidth: 750px
   :alt: Colored Bar Chart Reference

.. _colored-ref-example:

Colored Bar Chart
~~~~~~~~~~~~~~~~~

The following colored bar chart shows the average `Rotten Tomatoes
<https://www.rottentomatoes.com/>`_ rating for countries with the 10
highest ratings, and colors each bar to show the average runtime for
movies from each country.

The :guilabel:`Y Axis` category creates a bar for each country in the
data set, which we limit to only the top 10 as sorted by the aggregated
mean of the ``tomato.rating`` field from the :guilabel:`X Axis`. The
:guilabel:`Color` encoding channel field of ``runtime`` colors each bar
to show the average runtime for movies from each country. A darker
shade of green indicates a longer average runtime:

.. figure:: /images/charts/colored-bar-chart-reference.png
   :figwidth: 750px
   :alt: Colored Bar Chart Reference

Limitations
-----------

The maximum query response size for column and bar charts is 5000 
documents.

.. toctree::
   :titlesonly:

   Candlestick Chart </chart-type-reference/candlestick-chart>
   