# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: 2014-04-08 19:30+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# c6fbe080684c4efb82998e9ad1e851e9
#: ../source/core/write-concern.txt:7
msgid "Write Concern"
msgstr ""

# 9d03ef5dccb44cfaa92ab282b1cdf028
#: ../source/includes/introduction-write-concern.rst:1
msgid ""
":term:`Write concern` describes the guarantee that MongoDB provides when "
"reporting on the success of a write operation. The strength of the write "
"concerns determine the level of guarantee. When inserts, updates and "
"deletes have a *weak* write concern, write operations return quickly. In "
"some failure cases, write operations issued with weak write concerns may "
"not persist. With *stronger* write concerns, clients wait after sending a"
" write operation for MongoDB to confirm the write operations."
msgstr ""

# 9c4f74db5b564d41910a68390f946b4c
#: ../source/includes/introduction-write-concern.rst:10
msgid ""
"MongoDB provides different levels of write concern to better address the "
"specific needs of applications. Clients may adjust write concern to "
"ensure that the most important operations persist successfully to an "
"entire MongoDB deployment. For other less critical operations, clients "
"can adjust the write concern to ensure faster performance rather than "
"ensure persistence to the entire deployment."
msgstr ""

# 56bac621589e44b9960584687dfa73af
#: ../source/core/write-concern.txt:13
msgid ""
"A new protocol for :ref:`write operations <rel-notes-write-operations>` "
"integrates write concern with the write operations."
msgstr ""

# 565b480d713d4573b81dfcdd88e8fbb6
#: ../source/core/write-concern.txt:18
msgid ""
"For details on write concern configurations, see :doc:`/reference/write-"
"concern`."
msgstr ""

# a5055a4013914f4a87c93ed352cc004b
#: ../source/core/write-concern.txt:22
msgid "Considerations"
msgstr ""

# 4003450c35134eb0ac32dddab7c90c15
#: ../source/core/write-concern.txt:25
msgid "Default Write Concern"
msgstr ""

# 55303945f71f4f328fb5166156ee1ba4
#: ../source/core/write-concern.txt:27
msgid ""
"The :program:`mongo` shell and the MongoDB drivers use :ref:`write-"
"concern-acknowledged` as the default write concern."
msgstr ""

# 21da2d494a374fe490446402fecafade
#: ../source/core/write-concern.txt:30
msgid ""
"See :ref:`write-concern-acknowledged` for more information, including "
"when this write concern became the default."
msgstr ""

# bcba15e82e5b4d2bb05045740435a7bc
#: ../source/core/write-concern.txt:34
msgid "Timeouts"
msgstr ""

# a33501f2c0594b1987c009943186e660
#: ../source/core/write-concern.txt:36
msgid ""
"Clients can set a :ref:`wtimeout <wc-wtimeout>` value as part of a "
":ref:`replica acknowledged <replica-set-write-concern>` write concern. If"
" the write concern is not satisfied in the specified interval, the "
"operation returns an error, even if the write concern will eventually "
"succeed."
msgstr ""

# 077b669e772748ad83ab3977a7691f7b
#: ../source/core/write-concern.txt:42
msgid ""
"MongoDB does not \"rollback\" or undo modifications made before the "
"``wtimeout`` interval expired."
msgstr ""

# 5123dedb7dfc4bdda784f17707d3dccc
#: ../source/core/write-concern.txt:46
msgid "Write Concern Levels"
msgstr ""

# fb704f4496804b3d89370856e78c3fa9
#: ../source/core/write-concern.txt:48
msgid ""
"MongoDB has the following levels of conceptual write concern, listed from"
" weakest to strongest:"
msgstr ""

# facae27110954bfe9d7ff36a3c1ba801
#: ../source/core/write-concern.txt:54
msgid "Unacknowledged"
msgstr ""

# 4ca93f891642480b8902f79ef17f48de
#: ../source/core/write-concern.txt:56
msgid ""
"With an *unacknowledged* write concern, MongoDB does not acknowledge the "
"receipt of write operations. *Unacknowledged* is similar to *errors "
"ignored*; however, drivers will attempt to receive and handle network "
"errors when possible. The driver's ability to detect network errors "
"depends on the system's networking configuration."
msgstr ""

# e8a8fb5214a4441c90a3453e55d1c9a0
#: ../source/core/write-concern.txt:62
msgid ""
"Before the releases outlined in :ref:`driver-write-concern-change`, this "
"was the default write concern."
msgstr ""

# 299814f503e34626bb9ad12fa408a6c4
#: ../source/core/write-concern.txt:70
msgid "Acknowledged"
msgstr ""

# de4a5a9bcec94de7ae285c5f093b1c77
#: ../source/core/write-concern.txt:72
msgid ""
"With a receipt *acknowledged* write concern, the :program:`mongod` "
"confirms that it received the write operation and applied the change to "
"the in-memory view of data. *Acknowledged* write concern allows clients "
"to catch network, duplicate key, and other errors."
msgstr ""

# 127892048aad42598e5d1b56346d5ee8
#: ../source/core/write-concern.txt:77
msgid ""
"MongoDB uses the *acknowledged* write concern by default starting in the "
"driver releases outlined in :ref:`write-concern-change-releases`."
msgstr ""

# 4d626704c0704301b4373312344cde6e
#: ../source/core/write-concern.txt:80
msgid ""
"The :program:`mongo` shell write methods now incorporates the :doc:`write"
" concern </core/write-concern>` in the write methods and provide the "
"default write concern whether run interactively or in a script. See :ref"
":`write-methods-incompatibility` for details."
msgstr ""

# 07da5516a1ad46e5b920a9204cdd75cf
#: ../source/core/write-concern.txt:88
msgid ""
"*Acknowledged* write concern does *not* confirm that the write operation "
"has persisted to the disk system."
msgstr ""

# 9f66bd4334634347a91d6329a0d4ee89
#: ../source/core/write-concern.txt:94
msgid "Journaled"
msgstr ""

# 23579506e2ff46dfb425363fc9559107
#: ../source/core/write-concern.txt:96
msgid ""
"With a *journaled* write concern, the MongoDB acknowledges the write "
"operation only after committing the data to the :term:`journal`. This "
"write concern ensures that MongoDB can recover the data following a "
"shutdown or power interruption."
msgstr ""

# 914c1014c1854f78950d66a773300eaa
#: ../source/core/write-concern.txt:101
msgid "You must have journaling enabled to use this write concern."
msgstr ""

# 12c4024ab27148d7a2d5c5c702286a23
#: ../source/core/write-concern.txt:103
msgid ""
"With a *journaled* write concern, write operations must wait for the next"
" journal commit. To reduce latency for these operations, MongoDB also "
"increases the frequency that it commits operations to the journal. See "
":setting:`storage.mmapv1.journal.commitIntervalMs` for more information."
msgstr ""

# 0787ac8fd0c94515ba8cf9c97b9ab85a
# bc6d978fac3d4659b6a393eb5b9960cd
#: ../source/includes/note-write-concern-journaled-replication.rst:1
msgid ""
"Requiring *journaled* write concern in a replica set only requires a "
"journal commit of the write operation to the :term:`primary` of the set "
"regardless of the level of *replica acknowledged* write concern."
msgstr ""

# 4241da7a524348c48bc209ecd3202cef
#: ../source/core/write-concern.txt:116
msgid "Replica Acknowledged"
msgstr ""

# a013abe0611e4c578ad64631950b915f
#: ../source/core/write-concern.txt:118
msgid ""
":term:`Replica sets <replica set>` present additional considerations with"
" regards to write concern. The default write concern only requires "
"acknowledgement from the primary."
msgstr ""

# e4adb101eabd4accb444b5559fac4ab2
#: ../source/core/write-concern.txt:122
msgid ""
"With *replica acknowledged* write concern, you can guarantee that the "
"write operation propagates to additional members of the replica set. See "
":doc:`Write Concern for Replica Sets <replica-set-write-concern>` for "
"more information."
msgstr ""

# fe570584433d4671ada749a61e6a90ce
#: ../source/core/write-concern.txt:131
msgid ":doc:`/reference/write-concern`"
msgstr ""

# 315079d5bc8e4be78431005c278817a0
#: ../source/core/write-concern.txt:1
msgid "write concern"
msgstr ""

#~ msgid ""
#~ ":doc:`/reference/write-concern` for a "
#~ "reference of specific write concern "
#~ "configuration. Also consider :doc:`/core/write-"
#~ "operations` for a general overview of"
#~ " write operations with MongoDB and "
#~ ":doc:`/core/replica-set-write-concern` for "
#~ "considerations specific to replica sets."
#~ msgstr ""

#~ msgid ""
#~ "The :doc:`driver write concern </release-"
#~ "notes/drivers-write-concern>` change created"
#~ " a new connection class in all "
#~ "of the MongoDB drivers. The new "
#~ "class, called ``MongoClient`` changes the "
#~ "default write concern. See the "
#~ ":doc:`release notes </release-notes/drivers-"
#~ "write-concern>` for this change and "
#~ "the release notes for your driver."
#~ msgstr ""

#~ msgid ""
#~ "Clients issue write operations with some"
#~ " level of :term:`write concern`.  MongoDB"
#~ " has the following levels of "
#~ "conceptual write concern, listed from "
#~ "weakest to strongest:"
#~ msgstr ""

#~ msgid ""
#~ "With an *unacknowledged* write concern, "
#~ "MongoDB does not acknowledge the receipt"
#~ " of write operation. *Unacknowledged* is"
#~ " similar to *errors ignored*; however, "
#~ "drivers attempt to receive and handle"
#~ " network errors when possible. The "
#~ "driver's ability to detect network "
#~ "errors depends on the system's "
#~ "networking configuration."
#~ msgstr ""

#~ msgid ""
#~ "To set *unacknowledged* write concern, "
#~ "specify ``w`` values of ``0`` to "
#~ "your driver."
#~ msgstr ""

#~ msgid ""
#~ "To set *acknowledged* write concern, "
#~ "specify ``w`` values of ``1`` to "
#~ "your driver."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB uses *acknowledged* write concern "
#~ "by default, after the releases outlined"
#~ " in :ref:`driver-write-concern-change`."
#~ msgstr ""

#~ msgid ""
#~ "Internally, the default write concern "
#~ "calls :dbcommand:`getLastError` with no "
#~ "arguments. For replica sets, you can "
#~ "define the default write concern "
#~ "settings in the "
#~ ":data:`~local.system.replset.settings.getLastErrorDefaults`. "
#~ "When :data:`~local.system.replset.settings.getLastErrorDefaults`"
#~ " does not define a default write "
#~ "concern setting, :dbcommand:`getLastError` defaults"
#~ " to basic receipt acknowledgment."
#~ msgstr ""

#~ msgid ""
#~ "With a *journaled* write concern, the"
#~ " :program:`mongod` acknowledges the write "
#~ "operation only after committing the data"
#~ " to the :term:`journal`. This write "
#~ "concern ensures that MongoDB can recover"
#~ " the data following a shutdown or "
#~ "power interruption."
#~ msgstr ""

#~ msgid ""
#~ "To set a *journaled* write concern, "
#~ "specify ``w`` values of ``1`` and "
#~ "set the ``journal`` or ``j`` option "
#~ "to ``true`` for your driver. You "
#~ "must have journaling enabled to use "
#~ "this write concern."
#~ msgstr ""

#~ msgid ""
#~ ":term:`Replica sets <replica set>` add "
#~ "several considerations for write concern. "
#~ "Basic write concerns affect write "
#~ "operations on only one :program:`mongod` "
#~ "instance. The ``w`` argument to "
#~ ":dbcommand:`getLastError` provides *replica "
#~ "acknowledged* write concerns. With *replica"
#~ " acknowledged* you can guarantee that "
#~ "the write operation propagates to the"
#~ " members of a replica set. See "
#~ ":doc:`/reference/write-concern` document for "
#~ "the values for ``w`` and :doc:`Write "
#~ "Concern for Replica Sets <replica-"
#~ "set-write-concern>` for more information."
#~ msgstr ""

#~ msgid ""
#~ "To set *replica acknowledged* write "
#~ "concern, specify ``w`` values greater "
#~ "than ``1`` to your driver."
#~ msgstr ""

# 4b69db1d4d5e454f8bcab5a97d86275b
#~ msgid "Read Isolation"
#~ msgstr ""

# 87f495b684a04d7d90b63ba8447f137e
#~ msgid ""
#~ "MongoDB allows clients to read documents"
#~ " inserted or modified before it "
#~ "commits these modifications to disk, "
#~ "regardless of write concern level or "
#~ "journaling configuration. As a result, "
#~ "applications may observe two classes of"
#~ " behaviors:"
#~ msgstr ""

# 6d7a06c663e6403081549c3cc2682223
#~ msgid ""
#~ "For systems with multiple concurrent "
#~ "readers and writers, MongoDB will allow"
#~ " clients to read the results of "
#~ "a write operation before the write "
#~ "operation returns."
#~ msgstr ""

# e939094fa1ca46d09a12f2e5547aa76e
#~ msgid ""
#~ "If the :program:`mongod` terminates before "
#~ "the journal commits, even if a "
#~ "write returns successfully, queries may "
#~ "have read data that will not exist"
#~ " after the :program:`mongod` restarts."
#~ msgstr ""

# 6751bd06f0054681a4ac7adba612ca6a
#~ msgid ""
#~ "Other database systems refer to these"
#~ " isolation semantics as *read uncommitted*."
#~ " For all inserts and updates, MongoDB"
#~ " modifies each document in isolation: "
#~ "clients never see documents in "
#~ "intermediate states. For multi-document "
#~ "operations, MongoDB does not provide any"
#~ " multi-document transactions or isolation."
#~ msgstr ""

# 0174a290e85e4a7cb3d76f60668bb5da
#~ msgid ""
#~ "When :program:`mongod` returns a successful"
#~ " *journaled write concern*, the data "
#~ "is fully committed to disk and "
#~ "will be available after :program:`mongod` "
#~ "restarts."
#~ msgstr ""

# d68b5b8b80c542b19b41cce57e9de9a7
#~ msgid ""
#~ "For replica sets, write operations are"
#~ " durable only after a write "
#~ "replicates and commits to the journal"
#~ " of a majority of the members "
#~ "of the set. MongoDB regularly commits"
#~ " data to the journal regardless of"
#~ " journaled write concern: use the "
#~ ":setting:`~storage.journal.commitIntervalMs` to control"
#~ " how often a :program:`mongod` commits "
#~ "the journal."
#~ msgstr ""

# 9aef8ff0b31040d2b71a5d3732a2cc8a
#~ msgid ""
#~ "With a receipt *acknowledged* write "
#~ "concern, the :program:`mongod` confirms the"
#~ " receipt of the write operation. "
#~ "*Acknowledged* write concern allows clients"
#~ " to catch network, duplicate key, and"
#~ " other errors."
#~ msgstr ""

# caabf6e53ce8494b9ea600c588d29582
#~ msgid ""
#~ "With a *journaled* write concern, write"
#~ " operations must wait for the next"
#~ " journal commit. To reduce latency "
#~ "for these operations, MongoDB also "
#~ "increases the frequency that it commits"
#~ " operations to the journal. See "
#~ ":setting:`~storage.journal.commitIntervalMs` for more "
#~ "information."
#~ msgstr ""

#~ msgid ""
#~ ":term:`Replica sets <replica set>` present "
#~ "additional considerations with regards to "
#~ "write concern.. The default write "
#~ "concern only requires acknowledgement from "
#~ "the primary."
#~ msgstr ""

