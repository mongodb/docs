# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:3
# 32c67ae4ee11495894921c6be77ed088
msgid "Getting Started with the ``mongo`` Shell"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:7
# 74bbaad7f50d4113b2b02acd3b081603
msgid "This document provides a basic introduction to using the :program:`mongo` shell. See :doc:`/installation` for instructions on installing MongoDB for your system."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:12
# 1ee8d3abc8aa45adbb8843356ba38ca6
msgid "Start the ``mongo`` Shell"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:14
# 53f8841e5d02413ebe7af177cfad080d
msgid "To start the :program:`mongo` shell and connect to your :doc:`MongoDB </reference/program/mongod>` instance running on **localhost** with **default port**:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:17
# 9b657b75d6314e6d930fc45b0edcf860
msgid "Go to your ``<mongodb installation dir>``:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:23
# 64e7c3c0839c44e19df98592624d9688
msgid "Type ``./bin/mongo`` to start :program:`mongo`:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:29
# 3ce06aad50b847a78cfaf68f2d52008d
msgid "If you have added the ``<mongodb installation dir>/bin`` to the ``PATH`` environment variable, you can just type ``mongo`` instead of ``./bin/mongo``."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:33
# 2b100999bc7c4d71b38a3c9e62aaa076
msgid "To display the database you are using, type ``db``:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:39
# 82f7384709e14ab3bc2ec6e9dbc42bcd
msgid "The operation should return ``test``, which is the default database. To switch databases, issue the ``use <db>`` helper, as in the following example:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:47
# 75fe8cd02f62479293fd6c28bf4070c2
msgid "To list the available databases, use the helper ``show dbs``. See also :ref:`mongo-shell-getSiblingDB` to access a different database from the current database without switching your current database context (i.e. ``db.``.)"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:52
# 126a5fa5a3504d819f6dc1e16869d3a6
msgid "To start the :program:`mongo` shell with other options, see :ref:`examples of starting up mongo <mongo-usage-examples>` and :doc:`mongo reference </reference/program/mongo>` which provides details on the available options."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:59
# ecbe1ea1750144a9b3d1e83076c2befe
msgid "When starting, :program:`mongo` checks the user's :envvar:`HOME` directory for a JavaScript file named :ref:`.mongorc.js <mongo-mongorc-file>`. If found, :program:`mongo` interprets the content of :file:`.mongorc.js` before displaying the prompt for the first time. If you use the shell to evaluate a JavaScript file or expression, either by using the :option:`--eval <mongo --eval>` option on the command line or by specifying :ref:`a .js file to mongo <mongo-shell-file>`, :program:`mongo` will read the ``.mongorc.js`` file *after* the JavaScript has finished processing. You can prevent ``.mongorc.js`` from being loaded by using the :option:`--norc` option."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:73
# 5450ad21ae594de09079e4ca38fc9e7a
msgid "Executing Queries"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:75
# 7db8fadacb104c7bad7af7ef8d75cd9f
msgid "From the :program:`mongo` shell, you can use the :doc:`shell methods </reference/method>` to run queries, as in the following example:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:82
# 99d3859bb5c644088b7095e202d4a85e
msgid "The ``db`` refers to the current database."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:84
# 91173bad134e4be9911cd537b45a2477
msgid "The ``<collection>`` is the name of the collection to query. See :ref:`mongo-shell-help-collection` to list the available collections."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:87
# ad04958f627946aea17a616142c3d9ae
msgid "If the :program:`mongo` shell does not accept the name of the collection, for instance if the name contains a space, hyphen, or starts with a number, you can use an alternate syntax to refer to the collection, as in the following:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:98
# b3bfba87ccf1437a84e10d0cbc2587fb
msgid "The :method:`~db.collection.find()` method is the JavaScript method to retrieve documents from ``<collection>``. The :method:`~db.collection.find()` method returns a :term:`cursor` to the results; however, in the :program:`mongo` shell, if the returned cursor is not assigned to a variable using the ``var`` keyword, then the cursor is automatically iterated up to 20 times to print up to the first 20 documents that match the query. The :program:`mongo` shell will prompt ``Type it`` to iterate another 20 times."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:108
# 7f8d11d41b5246ab955dbd099780eb96
msgid "You can set the ``DBQuery.shellBatchSize`` attribute to change the number of iteration from the default value ``20``, as in the following example which sets it to ``10``:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:116
# e0c876e689ab47ebbc69cf25b2377eee
msgid "For more information and examples on cursor handling in the :program:`mongo` shell, see :doc:`/core/cursors`."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:119
# 7e859b20f1df4585bb72edd0a0754eba
msgid "See also :ref:`mongo-shell-help-cursor` for list of cursor help in the :program:`mongo` shell."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:122
# 3f1fa40266494714999aeda07234ff19
msgid "For more documentation of basic MongoDB operations in the :program:`mongo` shell, see:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:125
# 528e7304e58145198422445493907e3c
msgid "`Getting Started with MongoDB <http://docs.mongodb.org/getting-started/shell>`_"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:127
# 81b9ffd938dc4f2a89237bfaa94e9d91
msgid ":doc:`/reference/mongo-shell`"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:128
# 081eca9dadbd456cb849d1373da1a743
msgid ":doc:`/core/read-operations`"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:129
# 3ade73434801478ebe671c7ce3dcad5d
msgid ":doc:`/core/write-operations`"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:130
# 9351870222324ca0a15903fe9fc5e527
msgid ":doc:`/administration/indexes`"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:135
# 43b13b3d80b5476387961819e4d23368
msgid "Print"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:137
# 84e39f8a24c946b2a4ae5eace5f8876e
msgid "The :program:`mongo` shell automatically prints the results of the :method:`~db.collection.find()` method if the returned cursor is not assigned to a variable using the ``var`` keyword. To format the result, you can add the ``.pretty()`` to the operation, as in the following:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:147
# 55a1773b13fe40ab919d3e2359b445f9
msgid "In addition, you can use the following explicit print methods in the :program:`mongo` shell:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:150
# 9df66b11f18a4dc4aa40bf8c55e08aa6
msgid "``print()`` to print without formatting"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:152
# 5baf04b6b5b349c095903ee8443103b2
msgid "``print(tojson(<obj>))`` to print with :term:`JSON` formatting and equivalent to ``printjson()``"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:155
# 6d895b90f7b74184a0c24e6825e8d135
msgid "``printjson()`` to print with :term:`JSON` formatting and equivalent to ``print(tojson(<obj>))``"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:159
# b065446a18a54ba6b064583d4e3a95e0
msgid "Evaluate a JavaScript File"
msgstr ""

#: ../source/includes/fact-execute-javascript-from-shell.rst:1
# 41e4f0cf572e43b9b14692df0ff9d310
msgid "You can execute a ``.js`` file from within the :program:`mongo` shell, using the :method:`load()` function, as in the following:"
msgstr ""

#: ../source/includes/fact-execute-javascript-from-shell.rst:8
# ee7a790a9e554751bd040195f964f096
msgid "This function loads and executes the :file:`myjstest.js` file."
msgstr ""

#: ../source/includes/fact-execute-javascript-from-shell.rst:10
# 5ce65bf93ffa4419978365b0ff6f591e
msgid "The :method:`load()` method accepts relative and absolute paths. If the current working directory of the :program:`mongo` shell is :file:`/data/db`, and the :file:`myjstest.js` resides in the :file:`/data/db/scripts` directory, then the following calls within the :program:`mongo` shell would be equivalent:"
msgstr ""

#: ../source/includes/fact-execute-javascript-from-shell.rst:21
# 457191ce5ddd48788028d9d5cdb2a1d9
msgid "There is no search path for the :method:`load()` function. If the desired script is not in the current working directory or the full specified path, :program:`mongo` will not be able to access the file."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:166
# aa56158456dd4c03a7608827b8e88523
msgid "Use a Custom Prompt"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:168
# 49e90af031424b69976cfaaf648570be
msgid "You may modify the content of the prompt by creating the variable ``prompt`` in the shell. The prompt variable can hold strings as well as any arbitrary JavaScript. If ``prompt`` holds a function that returns a string, :program:`mongo` can display dynamic information in each prompt. Consider the following examples:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:0
#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:0
#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:0
# 9e684d218ac345ccacd6a49ff809586f
# 83f7d9e0ae844a9fb80d633ff775a49d
# ed8f627d592e491595bb3ce00b26ed49
msgid "Example"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:176
# 509b26a953094167949d2f539cfb6a8c
msgid "Create a prompt with the number of operations issued in the current session, define the following variables:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:186
#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:207
#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:227
# 48423df70c11438cafcb0e01e1a5eade
# 293f2ee5cccc430b96521f1e55fe2f27
# deda778786c74c37b32fd80bc6db361e
msgid "The prompt would then resemble the following:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:196
# d934c5de5eb842968124f5a483be1b8e
msgid "To create a :program:`mongo` shell prompt in the form of ``<database>@<hostname>$`` define the following variables:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:217
# fa86667a7a624e949a6ee504be6b4486
msgid "To create a :program:`mongo` shell prompt that contains the system up time *and* the number of documents in the current database, define the following prompt variable:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:235
# 2ad12f2d4e284a93b9798ab2d4ad5f95
msgid "Use an External Editor in the ``mongo`` Shell"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:239
# e7f36022ca6a4724b87a7e2680932046
msgid "In the :program:`mongo` shell you can use the ``edit`` operation to edit a function or variable in an external editor. The ``edit`` operation uses the value of your environments ``EDITOR`` variable."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:243
# 7d11728bf692401a8dbd305fe17b8d56
msgid "At your system prompt you can define the ``EDITOR`` variable and start :program:`mongo` with the following two operations:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:251
# ca4b9821b44146198445d5f1a0b20959
msgid "Then, consider the following example shell session:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:273
# 9de8afbe39fe417a89a578f7dc02dd89
msgid "As :program:`mongo` shell interprets code edited in an external editor, it may modify code in functions, depending on the JavaScript compiler. For :program:`mongo` may convert ``1+1`` to ``2`` or remove comments. The actual changes affect only the appearance of the code and will vary based on the version of JavaScript used but will not affect the semantics of the code."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:283
# 0c6b04bd9a5c44dfb7b27a6fd92e0ece
msgid "Exit the Shell"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:285
# 9e8537881a1c498f9f02c25fee2b4285
msgid "To exit the shell, type ``quit()`` or use the ``<Ctrl-c>`` shortcut."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:287
# 13153247c9ec433e83f5e1dddaa1403a
msgid ":gettingstarted:`Getting Started Guide </shell>`"
msgstr ""

