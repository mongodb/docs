---
ref: configure-kubectl-om
stepnum: 1
inherit:
  file: steps-configure-kubectl-namespace.yaml
  ref: configure-kubectl-namespace
---
title: "Create secrets for your certificates."
stepnum: 2
ref: create-cert-secret
content: |

  .. include:: /includes/facts/fact-if-use-vault.rst
  .. include:: /includes/facts/fact-learn-more-secret-storage.rst

  a. Once you have your |tls| certificates and private keys, run the 
     following command to create a |k8s-secret| that stores |onprem|\'s
     |tls| certificate:

     .. code-block:: sh

        kubectl create secret tls <prefix>-<metadata.name>-cert \
          --cert=<om-tls-cert> \
          --key=<om-tls-key>

  b. Run the following command to create a new |k8s-secret| that stores
     the application database's |tls| certificate:

     .. code-block:: sh

        kubectl create secret tls <prefix>-<metadata.name>-db-cert \
          --cert=<appdb-tls-cert> \
          --key=<appdb-tls-key>

---
title: "If necessary, validate your TLS certificates."
stepnum: 3
ref: validate-tls-cert
content: |

  If your |onprem| |tls| certificate or your application database 
  |tls| certificate is signed by a Custom Certificate
  Authority, you must provide a :abbr:`CA (Certificate Authority)`
  certificate to validate the |tls| certificate(s). To validate the
  |tls| certificate(s), create a |k8s-configmap| to hold the
  :abbr:`CA (Certificate Authority)` certificate:

  .. warning::

     You must concatenate your custom |certauth| file and the entire
     |tls| certificate chain from ``downloads.mongodb.com`` to prevent
     |onprem| from becoming inoperable if the application database
     restarts.

  .. important::

     The |k8s-op-short| requires that:
     
     - Your |onprem| certificate is named ``mms-ca.crt`` in the
       ConfigMap.
     - Your application database certficate is named ``ca-pem`` in
       the ConfigMap.

  a. Obtain the entire |tls| certificate chain for both |onprem| and
     the application database from
     ``downloads.mongodb.com``. The following ``openssl`` command
     outputs each certificate in the chain to your current working
     directory, in ``.crt`` format:

     .. code-block:: sh

        openssl s_client -showcerts -verify 2 \
        -connect downloads.mongodb.com:443 -servername downloads.mongodb.com < /dev/null \
        | awk '/BEGIN/,/END/{ if(/BEGIN/){a++}; out="cert"a".crt"; print >out}'

  #. Concatenate your |certauth|\'s certificate file for |onprem|
     with the entire |tls| certificate chain from 
     ``downloads.mongodb.com`` that
     you obtained in the previous step:

     .. code-block:: sh

        cat cert1.crt cert2.crt cert3.crt cert4.crt  >> mms-ca.crt
  #. Concatenate your |certauth|\'s certificate file for the application
     database with the entire |tls| certificate chain from 
     ``downloads.mongodb.com`` that
     you obtained in the previous step:

     .. code-block:: sh

        cat cert1.crt cert2.crt cert3.crt cert4.crt  >> ca-pem
  #. Create the |k8s-configmap| for |onprem|:

     .. code-block:: sh

        kubectl create configmap om-http-cert-ca --from-file="mms-ca.crt"

  #. Create the |k8s-configmap| for the application database:

     .. code-block:: sh

        kubectl create configmap ca --from-file="ca-pem"

---
title: "Copy the following example |onprem| |k8s| |k8s-obj|."
stepnum: 4
level: 4
ref: copy-k8s-example
content: |

  Change the highlighted settings to match your desired
  |onprem| and application database configuration.

  .. literalinclude:: /reference/k8s/example-opsmgr-https.yaml
     :language: yaml
     :linenos:
     :emphasize-lines: 5,7-11,14-23,25-37
---
title: "Open your preferred text editor and paste the |k8s-obj| specification into a new text file."
stepnum: 5
level: 4
ref: paste-k8s-example
---
title: "Configure the settings highlighted in the prior example."
stepnum: 6
level: 4
ref: change-k8s-values
content: |

   .. list-table::
      :widths: 30 15 40 15
      :header-rows: 1

      * - Key
        - Type
        - Description
        - Example

      * - :opsmgrkube:`metadata.name`
        - string
        - Name for this |k8s| |onprem| |k8s-obj|.

          .. include:: /includes/fact-resource-name-char-limit.rst

          .. seealso::

             - :opsmgrkube:`metadata.name`
             - |k8s| documentation on :k8sdocs:`names </concepts/overview/working-with-objects/names/>`.

        - ``om``

      * - :opsmgrkube:`spec.replicas`
        - number
        - Number of |onprem| instances to run in parallel.

          The minimum valid value is ``1``.

          .. include:: /includes/admonitions/note-highly-available-om.rst

        - ``1``

      * - :opsmgrkube:`spec.version`
        - string
        - Version of |onprem| to be installed.

          The format should be :manual:`X.Y.Z </reference/versioning>`.
          To view available |onprem| versions, view the
          `container registry <https://quay.io/repository/mongodb/mongodb-enterprise-ops-manager?tag=latest&tab=tags>`__.
        - {+om-version-val+}

      * - :opsmgrkube:`spec.adminCredentials`
        - string
        - Name of the |k8s-secret| you :ref:`created <om-rsrc-prereqs>`
          for the |onprem| admin user.

          .. note::

             Configure the secret to use the same |k8s-ns| as the
             |onprem| resource.

        - ``om-admin-secret``

      * - | ``spec``
          | ``.security``
          | ``.``:opsmgrkube:`~spec.security.certsSecretPrefix`
        - string
        - *Required*.
        
          Text to prefix to the name of the secret that contains
          |onprem|\s |tls| certificates.
        - ``om-prod``

      * - | ``spec``
          | ``.security``
          | ``.tls``
          | ``.``:opsmgrkube:`~spec.security.tls.ca`
        - string
        - Name of the |k8s-configmap| you created to verify your
          |onprem| |tls|
          certificates signed using a Custom Certificate Authority.

          .. important::

             This field is required if you signed your 
             |onprem| |tls|
             certificates using a Custom Certificate Authority.

        - ``om-http-cert-ca``


      * - | ``spec``
          | ``.externalConnectivity``
          | ``.``:opsmgrkube:`~spec.externalConnectivity.type`
        - string
        - The |k8s| service :k8sdocs:`ServiceType
          </concepts/services-networking/service/#publishing-services-service-types>`
          that exposes |onprem| outside of |k8s|.

          .. note::

             Exclude the
             ``spec.``:opsmgrkube:`~spec.externalConnectivity` setting
             and its children if you don't want the |k8s-op-short| to
             create a |k8s| service to route external traffic to the
             |onprem| application.


        - ``LoadBalancer``

      * - | ``spec``
          | ``.applicationDatabase``
          | ``.``:setting:`~spec.members`
        - integer
        - Number of members of the :ref:`mms-application-database`
          replica set.
        - ``3``

      * - | ``spec``
          | ``.applicationDatabase``
          | ``.``:opsmgrkube:`~spec.applicationDatabase.version`
        - string
        - *Required*.

          Version of MongoDB that the :ref:`mms-application-database`
          should run.

          The format should be ``X.Y.Z`` for the Community edition and
          ``X.Y.Z-ent`` for the :product:`Enterprise edition
          </mongodb-enterprise-advanced>`.

          .. include:: /includes/admonitions/ubi-8-min-db-versions.rst

          To learn more about MongoDB versioning, see
          :ref:`release-version-numbers` in the MongoDB Manual.

        - .. include:: /includes/facts/fact-which-appdb-version.rst

      * - | ``spec``
          | ``.applicationDatabase``
          | ``.security``
          | ``.``:opsmgrkube:`~spec.applicationDatabase.security.certsSecretPrefix`
        - string
        - *Required*.
        
          Text to prefix to the name of the secret that contains
          the application database's |tls| certificates.
        - ``appdb-prod``

      * - | ``spec``
          | ``.applicationDatabase``
          | ``.security``
          | ``.tls``
          | ``.``:opsmgrkube:`~spec.applicationDatabase.security.tls.ca`
        - string
        - Name of the |k8s-configmap| you created to verify your
          application database |tls|
          certificates signed using a Custom Certificate Authority.

          .. important::

             This field is required if you signed your 
             application database |tls|
             certificates using a Custom Certificate Authority.

        - ``ca``

   .. note::

      The |k8s-op-short| mounts the |certauth| you add using the
      :opsmgrkube:`spec.applicationDatabase.security.tls.ca` setting to
      both the |onprem| and the Application Database pods.

---
title: "Configure Backup settings"
stepnum: 7
level: 4
optional: true
ref: configure-backup-https
content: |

  If you want to enable backup for your |onprem| instance, you must
  configure all of the following settings:

  .. list-table::
     :widths: 30 15 40 15
     :header-rows: 1

     * - Key
       - Type
       - Description
       - Example

     * - | ``spec``
         | ``.backup``
         | ``.``:opsmgrkube:`~spec.backup.enabled`
       - boolean
       - Flag that indicates that Backup is enabled for your You must
         specify ``spec.backup.enabled: true`` to configure settings
         for the head database, oplog store, and snapshot store.
       - ``true``

     * - | ``spec``
         | ``.backup``
         | ``.opLogStores``
         | ``.``:opsmgrkube:`~spec.backup.opLogStores.name`
       - string
       - Name of the oplog store.
       - ``oplog1``

     * - | ``spec``
         | ``.backup``
         | ``.opLogStores``
         | ``.mongodbResourceRef``
         | ``.``:opsmgrkube:`~spec.backup.opLogStores.mongodbResourceRef.name`
       - string
       - Name of the MongoDB database resource for the oplog store.
       - ``my-oplog-db``

  You must also configure an :term:`S3 snapshot store <s3 snapshot store>`
  or a :term:`blockstore <Backup Blockstore Database>`.

  .. note::

     If you deploy both an :term:`S3 snapshot store <s3 snapshot store>`
     and a :term:`blockstore <Backup Blockstore Database>`, |onprem|
     randomly choses one to use for Backup.

  To configure a snapshot store, configure the following settings:

  .. list-table::
    :widths: 20 20 40 20
    :header-rows: 1

    * - Key
      - Type
      - Description
      - Example

    * - | ``spec``
        | ``.backup``
        | ``.s3Stores``
        | ``.``:opsmgrkube:`~spec.backup.s3Stores.name`
      - string
      - Name of the |s3| snapshot store.
      - ``s3store1``

    * - | ``spec``
        | ``.backup``
        | ``.s3Stores``
        | ``.s3SecretRef``
        | ``.``:opsmgrkube:`~spec.backup.s3Stores.s3SecretRef.name`
      - string
      - Name of the |k8s-secret| that contains the ``accessKey`` and
        ``secretKey`` fields. The :ref:`backup-daemon` uses the
        values of these fields as credentials to access the |s3| or
        |s3|-compatible bucket.
      - ``my-s3-credentials``

    * - | ``spec``
        | ``.backup``
        | ``.s3Stores``
        | ``.``:opsmgrkube:`~spec.backup.s3Stores.s3BucketEndpoint`
      - string
      - |url| of the |s3| or |s3|-compatible bucket that
        :opsmgr:`stores </tutorial/manage-s3-blockstore-storage>` the
        database Backup snapshots.
      - ``s3.us-east-1.amazonaws.com``

    * - | ``spec``
        | ``.backup``
        | ``.s3Stores``
        | ``.``:opsmgrkube:`~spec.backup.s3Stores.s3BucketName`
      - string
      - Name of the |s3| or |s3|-compatible bucket that stores the
        database Backup snapshots.
      - ``my-bucket``

    * - | ``spec``
        | ``.backup``
        | ``.s3Stores``
        | ``.``:opsmgrkube:`~spec.backup.s3Stores.s3RegionOverride`
      - string
      - Region where your |s3|-compatible bucket resides. Use this 
        field only if your |s3| store's
        :opsmgrkube:`s3BucketEndpoint <spec.backup.s3Stores.s3BucketEndpoint>`
        doesn't include a region in its |url|. Don't use this field with |aws| |s3| buckets.
      - ``us-east-1``

  To configure a blockstore, configure the following settings:

  .. list-table::
    :widths: 20 20 40 20
    :header-rows: 1

    * - Key
      - Type
      - Description
      - Example

    * - | ``spec``
        | ``.backup``
        | ``.blockStores``
        | ``.``:opsmgrkube:`~spec.backup.blockStores.name`
      - string
      - Name of the blockstore.
      - ``blockStore1``

    * - | ``spec``
        | ``.backup``
        | ``.blockStores``
        | ``.mongodbResourceRef``
        | ``.``:opsmgrkube:`~spec.backup.blockStores.mongodbResourceRef.name`
      - string
      - Name of the MongoDB database resource that you create for the
        blockstore. You must deploy this database resource in the same
        namespace as the |onprem| resource.
      - ``my-mongodb-blockstore``

---
title: "Configure any additional settings for an |onprem| deployment."
stepnum: 8
level: 4
optional: true
ref: add-k8s-values
content: |

  Add any :ref:`optional settings <optional-om-k8s-settings>` that you
  want to apply to your deployment to the |k8s-obj| specification file.
---
title: "Save this file with a ``.yaml`` file extension."
stepnum: 9
level: 4
ref: save-object-spec

---
title: "Create your |onprem| instance."
stepnum: 10
level: 4
ref: start-k8s-instance
content: |

   Invoke the following ``kubectl`` command on the filename of the
   |onprem| resource definition:

   .. code-block:: sh

      kubectl apply -f <opsmgr-resource>.yaml

---
title: "Track the status of your |onprem| instance."
stepnum: 11
level: 4
ref: track-k8s-instance
content: |

  To check the status of your |onprem| resource, invoke the following
  command:

  .. code-block:: sh

     kubectl get om -o yaml -w

  The command returns the following output under the ``status`` field
  while the resource deploys:

  .. code-block:: yaml
     :copyable: false

     status:
      applicationDatabase:
       lastTransition: "2020-04-01T09:49:22Z"
       message: AppDB Statefulset is not ready yet
       phase: Reconciling
       type: ""
       version: ""
      backup:
       phase: ""
      opsManager:
       phase: ""

  The |k8s-op-short| reconciles the resources in the following order:

  1. Application Database.
  #. |onprem|.
  #. Backup.

  The |k8s-op-short| doesn't reconcile a resource until the preceding
  one enters the ``Running`` phase.

  After the |onprem| resource completes the ``Reconciling`` phase, the
  command returns the following output under the ``status`` field if you
  enabled backup:

  .. code-block:: yaml
     :copyable: false

      status:
        applicationDatabase:
          lastTransition: "2020-04-01T09:50:20Z"
          members: 3
          phase: Running
          type: ReplicaSet
          version: "4.2.0"
       backup:
        lastTransition: "2020-04-01T09:57:42Z"
        message: The MongoDB object <namespace>/<oplogresourcename>
          doesn't exist
        phase: Pending
        opsManager:
          lastTransition: "2020-04-01T09:57:40Z"
          phase: Running
          replicas: 1
          url: https://om-svc.cloudqa.svc.cluster.local:8443
          version: "5.0.0"

  Backup remains in a ``Pending`` state until you configure the Backup
  databases.

  .. tip::

     The ``status.opsManager.url`` field states the resource's
     connection |url|. Using this |url|, you can reach |onprem| from
     inside the |k8s| cluster or :ref:`create a project using a
     ConfigMap <create-k8s-project>`.

  After the resource completes the ``Reconciling`` phase, the command
  returns the following output under the ``status`` field:

  .. code-block:: yaml
     :copyable: false

      status:
        applicationDatabase:
          lastTransition: "2019-12-06T18:23:22Z"
          members: 3
          phase: Running
          type: ReplicaSet
          version: "4.2.11-ent"
        opsManager:
          lastTransition: "2019-12-06T18:23:26Z"
          message: The MongoDB object namespace/oplogdbname doesn't exist
          phase: Pending
          url: https://om-svc.dev.svc.cluster.local:8443
          version: ""

  Backup remains in a ``Pending`` state until you configure the Backup
  databases.

  .. tip::

     The ``status.opsManager.url`` field states the resource's
     connection |url|. Using this |url|, you can reach |onprem| from
     inside the |k8s| cluster or :ref:`create a project using a
     ConfigMap <create-k8s-project>`.

---
title: "Access the |onprem| application."
stepnum: 12
level: 4
ref: access-opsmgr-instance
content: |

  The steps you take differ based on how you are routing traffic to the
  |onprem| application in |k8s|. If you configured the |k8s-op-short| to
  create a |k8s| service for you, or you created a |k8s| service
  manually, use one of the following methods to access the |onprem|
  application:

  .. tabs::

     .. tab:: External Traffic Routes Using LoadBalancer Service
        :tabid: om-loadbalancer-svc-access

        a. Query your cloud provider to get the |fqdn| of the load
           balancer service. See your cloud provider's documentation
           for details.

        #. Open a browser window and navigate to the |onprem|
           application using the |fqdn| and port number of your load
           balancer service.

           .. code-block:: sh
              :copyable: false

              https://ops.example.com:8443

        #. Log in to |onprem| using the :ref:`admin user credentials
           <om-rsrc-prereqs>`.

     .. tab:: External Traffic Routed Using NodePort Service
        :tabid: om-nodeport-svc-access

        a. Set your firewall rules to allow access from the Internet to
           the ``spec.externalConnectivity.``:opsmgrkube:`~spec.externalConnectivity.port`
           on the host on which your |k8s| cluster is running.

        #. Open a browser window and navigate to the |onprem|
           application using the |fqdn| and the
           ``spec.externalConnectivity.``:opsmgrkube:`~spec.externalConnectivity.port`.

           .. code-block:: sh
              :copyable: false

              https://ops.example.com:30036

        #. Log in to |onprem| using the :ref:`admin user credentials <om-rsrc-prereqs>`.

  To learn how to access the |onprem| application using a third-party
  service, refer to the documentation for your solution.

---
title: "Create credentials for the Kubernetes Operator."
stepnum: 13
level: 4
ref: create-credentials
content: |

  To configure credentials, you must create an |onprem| organization,
  generate programmatic API keys, and create a |k8s-secret|. These
  activities follow the prerequisites and procedure on the
  :ref:`create-k8s-credentials` page.

---
title: "Create a project using a |k8s-configmap|."
stepnum: 14
level: 4
ref: create-project
content: |

  To create a project, follow the prerequisites and procedure on the
  :ref:`create-k8s-project` page.

  Set the following fields in your project ConfigMap:

  - Set ``data.baseUrl`` in the ConfigMap to the |application|\'s |url|.
    To find this |url|, invoke the following command:

    |

    .. code-block:: sh

      kubectl get om -o yaml -w

    |

    The command returns the URL of the |application| in the
    ``status.opsManager.url`` field.

    |

    .. code-block:: yaml
      :copyable: false
      :emphasize-lines: 12

        status:
          applicationDatabase:
            lastTransition: "2019-12-06T18:23:22Z"
            members: 3
            phase: Running
            type: ReplicaSet
            version: "4.2.11-ent"
          opsManager:
            lastTransition: "2019-12-06T18:23:26Z"
            message: The MongoDB object namespace/oplogdbname doesn't exist
            phase: Pending
            url: https://om-svc.dev.svc.cluster.local:8443
            version: ""

    .. include:: /includes/admonitions/data-url-config-map-external-dbs.rst

  - Set ``data.sslMMSCAConfigMap`` to the name of your
    |k8s-configmap| containing the root :abbr:`CA (Certificate
    Authority)` certificate used to sign the |onprem| host's
    certificate. The |k8s-op-short| requires this name to be
    ``mms-ca.crt``.

---
title: "Deploy MongoDB database resources to complete the Backup configuration."
stepnum: 15
level: 4
ref: configure-backup
content: |

  By default, |onprem| enables :ref:`mms-backup-functional-overview`.
  Create a MongoDB database resource for the oplog and snapshot stores
  to complete the configuration.

  a. Deploy a :ref:`MongoDB database resource
     <k8s-deploy-mdb-resources>` for the oplog store in the same
     namespace as the |onprem| resource.

     .. note::

        Create this database as a three-member :ref:`replica set
        <deploy-replica-set>`.

     Match the ``metadata.name`` of the resource with the
     :opsmgrkube:`spec.backup.opLogStores.mongodbResourceRef.name`
     that you specified in your |onprem| resource definition.

  #. Deploy a :ref:`MongoDB database resource
     <k8s-deploy-mdb-resources>` for the |s3| snapshot store in the
     same namespace as the |onprem| resource.

     .. note::

        Create the |s3| snapshot store as a replica set.

     Match the ``metadata.name`` of the resource to the
     :opsmgrkube:`spec.backup.s3Stores.mongodbResourceRef.name`
     that you specified in your |onprem| resource definition.

---
title: "Confirm that the |onprem| resource is running."
stepnum: 16
level: 4
ref: confirm-running
content: |

  To check the status of your |onprem| resource, invoke the following
  command:

  .. code-block:: sh

     kubectl get om -o yaml -w

  When |onprem| is running, the command returns the following
  output under the ``status`` field:

  .. code-block:: yaml
     :copyable: false

     status:
       applicationDatabase:
         lastTransition: "2019-12-06T17:46:15Z"
         members: 3
         phase: Running
         type: ReplicaSet
         version: "4.2.11-ent"
       opsManager:
         lastTransition: "2019-12-06T17:46:32Z"
         phase: Running
         replicas: 1
         url: https://om-backup-svc.dev.svc.cluster.local:8443
         version: "5.0.0"

  See :doc:`/reference/troubleshooting` for information about the
  resource deployment statuses.

...
