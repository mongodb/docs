.. _mongotop-examples:

=====================
mongotop Examples
=====================

.. meta::
   :description: Explore examples of using `mongotop` to monitor MongoDB performance, including connecting to Atlas clusters with AWS IAM credentials.

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. facet::
   :name: genre
   :values: reference

.. facet::
   :name: programming_language
   :values: shell

.. |arrow| unicode:: U+27A4
.. |tool-binary| replace:: ``mongotop``

This page shows examples for |tool-binary|.

Run |tool-binary| from the system command line, not the 
:binary:`~bin.mongo` shell.


.. _mongotop-use:

Examples
--------

By default ``mongotop`` connects to the MongoDB instance
running on the localhost port ``27017``. However, ``mongotop`` can optionally
connect to remote :binary:`~bin.mongod`
instances. See the :ref:`mongotop options <mongotop-options>` for more
information.

To force ``mongotop`` to return less frequently specify a number, in
seconds at the end of the command. In this example, ``mongotop`` will
return every 15 seconds.

.. code-block:: sh

   mongotop 15

This command produces the following output:

.. code-block:: sh

   2019-04-29T15:35:27.785-0400	connected to: 127.0.0.1


                       ns    total    read    write    2019-04-29T15:35:57-04:00
       admin.system.roles      0ms     0ms      0ms                             
       admin.system.users      0ms     0ms      0ms                             
     admin.system.version      0ms     0ms      0ms                             
   config.system.sessions      0ms     0ms      0ms                             
        local.startup_log      0ms     0ms      0ms                             
     local.system.replset      0ms     0ms      0ms

To return a ``mongotop`` report every 5 minutes, use the
following command:

.. code-block:: sh

   mongotop 300

.. _mongotop-example-connect-using-aws-iam:

Connect to a MongoDB Atlas Cluster using AWS IAM Credentials
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. versionadded:: 100.1.0

To connect to a :atlas:`MongoDB Atlas <?tck=docs_server>` cluster which
has been configured to support authentication via `AWS IAM credentials
<https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html>`__,
provide a :option:`connection string <mongotop --uri>` to
|tool-binary| similar to the following:

.. code-block:: none

   mongotop 'mongodb+srv://<aws access key id>:<aws secret access key>@cluster0.example.com/testdb?authSource=$external&authMechanism=MONGODB-AWS' <other options>

Connecting to Atlas using AWS IAM credentials in this manner uses the
``MONGODB-AWS`` :urioption:`authentication mechanism <authMechanism>`
and the ``$external`` :urioption:`authSource`, as shown in this example.

If using an `AWS session token
<https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html>`__,
as well, provide it with the ``AWS_SESSION_TOKEN``
:urioption:`authMechanismProperties` value, as follows:

.. code-block:: none

   mongotop 'mongodb+srv://<aws access key id>:<aws secret access key>@cluster0.example.com/testdb?authSource=$external&authMechanism=MONGODB-AWS&authMechanismProperties=AWS_SESSION_TOKEN:<aws session token>' <other options>

.. include:: /includes/fact-pct-encode-uri.rst

Alternatively, the AWS access key ID, secret access key, and optionally
session token can each be provided outside of the connection string
using the :option:`--username <mongotop --username>`, :option:`--password <mongotop --password>`, and
:option:`--awsSessionToken <mongotop --awsSessionToken>` options instead, like so:

.. code-block:: none

   mongotop 'mongodb+srv://cluster0.example.com/testdb?authSource=$external&authMechanism=MONGODB-AWS' --username <aws access key id> --password <aws secret access key> --awsSessionToken <aws session token> <other options>

When provided as command line parameters, these three options do not
require percent encoding.

You may also set these credentials on your platform using standard
`AWS IAM environment variables
<https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-envvars.html#envvars-list>`__.
|tool-binary| checks for the following environment variables when you
use the ``MONGODB-AWS``
:urioption:`authentication mechanism <authMechanism>`:

- ``AWS_ACCESS_KEY_ID``
- ``AWS_SECRET_ACCESS_KEY``
- ``AWS_SESSION_TOKEN``

If set, these credentials do not need to be specified in the connection
string or via their explicit options.

.. note::

   If you chose to use the AWS environment variables to specify these
   values, you cannot mix and match with the corresponding explicit or 
   connection string options for these credentials. Either use the
   environment variables for access key ID *and* secret access key
   (*and* session token if used), **or** specify each of these using the
   explicit or connection string options instead.

The following example sets these environment variables in the ``bash``
shell:

.. code-block:: none

   export AWS_ACCESS_KEY_ID='<aws access key id>'
   export AWS_SECRET_ACCESS_KEY='<aws secret access key>'
   export AWS_SESSION_TOKEN='<aws session token>'

Syntax for setting environment variables in other shells will be
different. Consult the documentation for your platform for more
information.

You can verify that these environment variables have been set with the
following command:

.. code-block:: none

   env | grep AWS

Once set, the following example connects to a MongoDB Atlas cluster
using these environment variables:

.. code-block:: none

   mongotop 'mongodb+srv://cluster0.example.com/testdb?authSource=$external&authMechanism=MONGODB-AWS'  <other options>

Learn More
----------

- :ref:`mongotop`
- :ref:`mongotop-compatibility-and-installation`
- :ref:`mongotop Behavior <mongotop-behavior-access-usage>`