# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: 2014-04-08 18:40+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/tutorial/deploy-replica-set-for-testing.txt:3
msgid "Deploy a Replica Set for Testing and Development"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:13
msgid ""
"This procedure describes deploying a replica set in a development or test"
" environment. For a production deployment, refer to the :doc:`/tutorial"
"/deploy-replica-set` tutorial."
msgstr ""

#: ../source/includes/introduction-deploy-replica-set.rst:1
msgid ""
"This tutorial describes how to create a three-member :term:`replica set` "
"from three existing :binary:`~bin.mongod` instances running with "
":doc:`access control </core/authorization>` disabled."
msgstr ""

#: ../source/includes/introduction-deploy-replica-set.rst:5
msgid ""
"To deploy a replica set with enabled :doc:`access control "
"</core/authorization>`, see :ref:`deploy-repl-set-with-auth`. If you wish"
" to deploy a replica set from a single MongoDB instance, see "
":doc:`/tutorial/convert-standalone-to-replica-set`. For more information "
"on replica set deployments, see the :doc:`/replication` and :doc:`/core"
"/replica-set-architectures` documentation."
msgstr ""

#: ../source/includes/introduction-deploy-replica-set.rst:14
msgid "Overview"
msgstr ""

#: ../source/includes/introduction-deploy-replica-set.rst:16
msgid ""
"Three member :term:`replica sets <replica set>` provide enough redundancy"
" to survive most network partitions and other system failures. These sets"
" also have sufficient capacity for many distributed read operations. "
"Replica sets should always have an odd number of members. This ensures "
"that :doc:`elections </core/replica-set-elections>` will proceed "
"smoothly. For more about designing replica sets, see :doc:`the "
"Replication overview </replication>`."
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:20
msgid "Requirements"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:22
msgid ""
"For test and development systems, you can run your :binary:`~bin.mongod` "
"instances on a local system, or within a virtual instance."
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:25
msgid ""
"Before you can deploy a replica set, you must install MongoDB on each "
"system that will be part of your :term:`replica set`. If you have not "
"already installed MongoDB, see the :ref:`installation tutorials "
"<tutorial-installation>`."
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:29
msgid ""
"Each member must be able to connect to every other member. For "
"instructions on how to check your connection, see :ref:`replica-set-"
"troubleshooting-check-connection`."
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:34
msgid "Considerations"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:37
msgid "IP Binding"
msgstr ""

#: ../source/includes/fact-default-bind-ip.rst:1
msgid ""
"Starting in MongoDB 3.6, MongoDB binaries, :binary:`~bin.mongod` and "
":binary:`~bin.mongos`, bind to localhost (``127.0.0.1``) by default. If "
"the :setting:`net.ipv6` configuration file setting or the ``--ipv6`` "
"command line option is set for the binary, the binary additionally binds "
"to the IPv6 address ``::1``."
msgstr ""

#: ../source/includes/fact-default-bind-ip.rst:7
msgid ""
"Previously, starting from MongoDB 2.6, only the binaries from the "
"official MongoDB RPM (Red Hat, CentOS, Fedora Linux, and derivatives) and"
" DEB (Debian, Ubuntu, and derivatives) packages bind to localhost by "
"default."
msgstr ""

#: ../source/includes/fact-default-bind-ip.rst:12
msgid ""
"When bound only to the localhost, these MongoDB 3.6 binaries can only "
"accept connections from clients (including the :binary:`~bin.mongo` "
"shell, other members in your deployment for replica sets and sharded "
"clusters) that are running on the same machine. Remote clients cannot "
"connect to the binaries bound only to localhost."
msgstr ""

#: ../source/includes/fact-default-bind-ip.rst:18
msgid ""
"To override and bind to other ip addresses, you can use the "
":setting:`net.bindIp` configuration file setting or the ``--bind_ip`` "
"command-line option to specify a list of ip addresses."
msgstr ""

#: ../source/includes/warning-bind-ip-security-considerations.rst:3
msgid ""
"Before binding to a non-localhost (e.g. publicly accessible) IP address, "
"ensure you have secured your cluster from unauthorized access. For a "
"complete list of security recommendations, see :doc:`/administration"
"/security-checklist`. At minimum, consider :ref:`enabling authentication "
"<checklist-auth>` and :doc:`hardening network infrastructure </core"
"/security-network>`."
msgstr ""

#: ../source/includes/fact-default-bind-ip.rst:25
msgid ""
"For example, the following :binary:`~bin.mongod` instance binds to both "
"the localhost and the sample ip address ``198.51.100.1``:"
msgstr ""

#: ../source/includes/fact-default-bind-ip.rst:32
msgid ""
"In order to connect to this instance, remote clients must specify the ip "
"address ``198.51.100.1`` or the hostname associated with the ip address:"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:41
msgid "In this test deployment, the three members run on the same machine."
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:44
msgid "Replica Set Naming"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:46
msgid ""
"These instructions should only be used for test or development "
"deployments."
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:49
msgid "The examples in this procedure create a new replica set named ``rs0``."
msgstr ""

#: ../source/includes/fact-unique-replica-set-names.rst:1
msgid ""
"If your application connects to more than one replica set, each set "
"should have a distinct name. Some drivers group replica set connections "
"by replica set name."
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:54
msgid "Procedure"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:56
msgid ""
"Create the necessary data directories for each member by issuing a "
"command similar to the following:"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:63
msgid ""
"This will create directories called \"rs0-0\", \"rs0-1\", and \"rs0-2\", "
"which will contain the instances' database files."
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:66
msgid ""
"Start your :binary:`~bin.mongod` instances in their own shell windows by "
"issuing the following commands:"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:71
msgid "First member:"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:77
msgid "Second member:"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:83
msgid "Third member:"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:89
msgid ""
"This starts each instance as a member of a replica set named ``rs0``, "
"each running on a distinct port, and specifies the path to your data "
"directory with the :option:`--dbpath <mongod --dbpath>` setting. If you "
"are already using the suggested ports, select different ports."
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:94
msgid "The instances bind to both the localhost and the ip address of the host."
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:97
msgid ""
"The :option:`--smallfiles <mongod --smallfiles>` and :option:`--oplogSize"
" <mongod --oplogSize>` settings reduce the disk space that each "
":binary:`~bin.mongod` instance uses. This is ideal for testing and "
"development deployments as it prevents overloading your machine. For more"
" information on these and other configuration options, see "
":doc:`/reference/configuration-options`."
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:104
msgid ""
"Connect to one of your :binary:`~bin.mongod` instances through the "
":binary:`~bin.mongo` shell. You will need to indicate which instance by "
"specifying its port number. For the sake of simplicity and clarity, you "
"may want to choose the first one, as in the following command;"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:113
msgid ""
"In the :binary:`~bin.mongo` shell, use :method:`rs.initiate()` to "
"initiate the replica set. You can create a replica set configuration "
"object in the :binary:`~bin.mongo` shell environment, as in the following"
" example:"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:138
msgid ""
"replacing ``<hostname>`` with your system's hostname, and then pass the "
"``rsconf`` file to :method:`rs.initiate()` as follows:"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:146
msgid ""
"Display the current :doc:`replica configuration </reference/replica-"
"configuration>` by issuing the following command:"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:153
msgid "The replica set configuration object resembles the following:"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:219
msgid ""
"Check the status of your replica set at any time with the "
":method:`rs.status()` operation."
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:222
msgid "The documentation of the following shell functions for more information:"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:225
msgid ":method:`rs.initiate()`"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:226
msgid ":method:`rs.conf()`"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:227
msgid ":method:`rs.reconfig()`"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:228
msgid ":method:`rs.add()`"
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:230
msgid ""
"You may also consider the `simple setup script "
"<https://github.com/mongodb/mongo-snippets/blob/master/replication"
"/simple-setup.py>`_ as an example of a basic automatically-configured "
"replica set."
msgstr ""

#: ../source/tutorial/deploy-replica-set-for-testing.txt:234
msgid ""
"Refer to :doc:`Replica Set Read and Write Semantics "
"</applications/replication>` for a detailed explanation of read and write"
" semantics in MongoDB."
msgstr ""

# edbc183abafb42259a2dffddad7019eb
#~ msgid ""
#~ "This tutorial describes how to create"
#~ " a three-member :term:`replica set` "
#~ "from three existing :program:`mongod` "
#~ "instances."
#~ msgstr ""

# a497aa67d9a44ca5bb1d47969c322205
#~ msgid ""
#~ "If you wish to deploy a replica"
#~ " set from a single MongoDB instance,"
#~ " see :doc:`/tutorial/convert-standalone-to-"
#~ "replica-set`. For more information on "
#~ "replica set deployments, see the "
#~ ":doc:`/replication` and :doc:`/core/replica-set-"
#~ "architectures` documentation."
#~ msgstr ""

# f53f90b391fb4a1fb37e95f5d3d58f08
#~ msgid ""
#~ "Three member :term:`replica sets <replica "
#~ "set>` provide enough redundancy to "
#~ "survive most network partitions and "
#~ "other system failures. These sets also"
#~ " have sufficient capacity for many "
#~ "distributed read operations. Replica sets "
#~ "should always have an odd number "
#~ "of members. This ensures that "
#~ ":doc:`elections </core/replica-set-elections>` "
#~ "will proceed smoothly. For more about"
#~ " designing replica sets, see :doc:`the "
#~ "Replication overview </core/replication-"
#~ "introduction>`."
#~ msgstr ""

# 3b4ae8d8ea4b4516a4e382b0eecc13c4
#~ msgid ""
#~ "The basic procedure is to start "
#~ "the :program:`mongod` instances that will "
#~ "become members of the replica set, "
#~ "configure the replica set itself, and"
#~ " then add the :program:`mongod` instances"
#~ " to it."
#~ msgstr ""

# 241eee436f924cfe876b3c8ec4916538
#~ msgid ""
#~ "For test and development systems, you"
#~ " can run your :program:`mongod` instances"
#~ " on a local system, or within a"
#~ " virtual instance."
#~ msgstr ""

# 5705c4dc2ad647fc9a023ddcf3d24809
#~ msgid ""
#~ "Before creating your replica set, you"
#~ " should verify that your network "
#~ "configuration allows all possible connections"
#~ " between each member. For a "
#~ "successful replica set deployment, every "
#~ "member must be able to connect to"
#~ " every other member. For instructions "
#~ "on how to check your connection, "
#~ "see :ref:`replica-set-troubleshooting-"
#~ "check-connection`."
#~ msgstr ""

# 1fee6ac2fc794160b546574834ab6504
#~ msgid ""
#~ "You will begin by starting three "
#~ ":program:`mongod` instances as members of "
#~ "a replica set named ``rs0``."
#~ msgstr ""

# 13336976588941d4be0e40a89b742a2f
#~ msgid ""
#~ "Start your :program:`mongod` instances in "
#~ "their own shell windows by issuing "
#~ "the following commands:"
#~ msgstr ""

# b4ccf9ecd4b244a4a5bea9b50fbb60c5
#~ msgid ""
#~ "This starts each instance as a "
#~ "member of a replica set named "
#~ "``rs0``, each running on a distinct "
#~ "port, and specifies the path to "
#~ "your data directory with the "
#~ ":option:`--dbpath <dbpath>` setting. If you"
#~ " are already using the suggested "
#~ "ports, select different ports."
#~ msgstr ""

# ce3fb080fb5e4b4db63267e6071f9347
#~ msgid ""
#~ "The :option:`--smallfiles <smallfiles>` and "
#~ ":option:`--oplogSize <oplogSize>` settings reduce"
#~ " the disk space that each "
#~ ":program:`mongod` instance uses. This is "
#~ "ideal for testing and development "
#~ "deployments as it prevents overloading "
#~ "your machine. For more information on"
#~ " these and other configuration options, "
#~ "see :doc:`/reference/configuration-options`."
#~ msgstr ""

# e6da9944aee340cc9cbe81769e3ee5d6
#~ msgid ""
#~ "Connect to one of your :program:`mongod`"
#~ " instances through the :program:`mongo` "
#~ "shell. You will need to indicate "
#~ "which instance by specifying its port"
#~ " number. For the sake of simplicity"
#~ " and clarity, you may want to "
#~ "choose the first one, as in the"
#~ " following command;"
#~ msgstr ""

# 2a0b7d8a15db4dc1b6183d252696b74b
#~ msgid ""
#~ "In the :program:`mongo` shell, use "
#~ ":method:`rs.initiate()` to initiate the "
#~ "replica set. You can create a "
#~ "replica set configuration object in the"
#~ " :program:`mongo` shell environment, as in"
#~ " the following example:"
#~ msgstr ""

# c7ea1fa9334c47bcb5a2b46811d5919e
#~ msgid "The replica set configuration object resembles the following"
#~ msgstr ""

# fefc1908f0884c819921d8ee0b46c6c2
#~ msgid ""
#~ "In the :program:`mongo` shell connected "
#~ "to the :term:`primary`, add the second"
#~ " and third :program:`mongod` instances to"
#~ " the replica set using the "
#~ ":method:`rs.add()` method. Replace ``<hostname>``"
#~ " with your system's hostname in the"
#~ " following examples:"
#~ msgstr ""

# 303e6f4e960f47c180445ac4e13d0cd0
#~ msgid ""
#~ "When complete, you should have a "
#~ "fully functional replica set. The new"
#~ " replica set will elect a "
#~ ":term:`primary`."
#~ msgstr ""

