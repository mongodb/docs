# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/aggregation.txt:8
# 2b18d8459f9a4a14b230209ff3e9f947
msgid "Aggregation Pipeline Operators"
msgstr ""

#: ../source/reference/operator/aggregation.txt:15
# f6bfd9a866b74f97a920a1a6966d2015
msgid "Stage Operators"
msgstr ""

#: ../source/reference/operator/aggregation.txt:17
# 930b9cd1a5f6426ca925513c6506c8de
msgid "Pipeline stages appear in an array. Documents pass through the stages in sequence."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:2
# 8f439128853844749791e88df791deca
msgid "Name"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:2
# c51940d026b54a968ab74506c0c048a6
msgid "Description"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:4
# 61ec85da0f544b0aa6402bd0c2dfc2c2
msgid ":pipeline:`$project`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:4
# eb3c630a2353491f8ba084ccf1521c0b
msgid "Reshapes each document in the stream, such as by adding new fields or removing existing fields. For each input document, outputs one document."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:9
# 4b55da8268e1499cb3d895e60081de3b
msgid ":pipeline:`$match`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:9
# d2881d1ccbd44bd8ba64ea6b88bd57a8
msgid "Filters the document stream to allow only matching documents to pass unmodified into the next pipeline stage. :pipeline:`$match` uses standard MongoDB queries. For each input document, outputs either one document (a match) or zero documents (no match)."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:15
# 913faef1621b4f1aba6d13a93ff25654
msgid ":pipeline:`$redact`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:15
# 3b1b9d3bd1d046f499b95d45fd034bca
msgid "Reshapes each document in the stream by restricting the content for each document based on information stored in the documents themselves. Incorporates the functionality of :pipeline:`$project` and :pipeline:`$match`. Can be used to implement field level redaction. For each input document, outputs either one or zero document."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:23
# b1d84f47e4a34a21afc5c64e7ac61a94
msgid ":pipeline:`$limit`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:23
# ea3467ea117d4523899c09639010ba44
msgid "Passes the first *n* documents unmodified to the pipeline where *n* is the specified limit. For each input document, outputs either one document (for the first *n* documents) or zero documents (after the first *n* documents)."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:29
# 4709ae8d4eee4174b7ab018eceed9e16
msgid ":pipeline:`$skip`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:29
# c8b0881a95c64cf28c4f43c61cda31c1
msgid "Skips the first *n* documents where *n* is the specified skip number and passes the remaining documents unmodified to the pipeline. For each input document, outputs either zero documents (for the first *n* documents) or one document (if after the first *n* documents)."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:35
# 469e57752f23420d9b1d4ffd953a1afc
msgid ":pipeline:`$unwind`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:35
# 16d43a74744d47d8b28ff62ecff67b8d
msgid "Deconstructs an array field from the input documents to output a document for *each* element. Each output document replaces the array with an element value. For each input document, outputs *n* documents where *n* is the number of array elements and can be zero for an empty array."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:42
# 83ec0d424aec4ec3be46074403dcd3f4
msgid ":pipeline:`$group`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:42
# 4652c18ef1bc4801a6c995dda8ad0901
msgid "Groups input documents by a specified identifier expression and applies the accumulator expression(s), if specified, to each group. Consumes all input documents and outputs one document per each distinct group. The output documents only contain the identifier field and, if specified, accumulated fields."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:49
# 0442a69948294725bf5c3b2dec4a802e
msgid ":pipeline:`$sort`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:49
# 5c1f4066daad4fcd8490dee40dcbcafa
msgid "Reorders the document stream by a specified sort key. Only the order changes; the documents remain unmodified. For each input document, outputs one document."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:54
# 8367f245c2044b49be72f96841db5824
msgid ":pipeline:`$geoNear`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:54
# 7f4047b6a03b419d8de6f84abc5789b0
msgid "Returns an ordered stream of documents based on the proximity to a geospatial point. Incorporates the functionality of :pipeline:`$match`, :pipeline:`$sort`, and :pipeline:`$limit` for geospatial data. The output documents include an additional distance field and can include a location identifier field."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:61
# 428bca8eb52b4932bbfa843c28be693e
msgid ":pipeline:`$out`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:61
# 8e7cdb21cfac4081b3a84847766061c1
msgid "Writes the resulting documents of the aggregation pipeline to a collection. To use the :pipeline:`$out` stage, it must be the last stage in the pipeline."
msgstr ""

#: ../source/reference/operator/aggregation.txt:41
# 3375f74f828c4667b876015079171674
msgid "Expression Operators"
msgstr ""

#: ../source/reference/operator/aggregation.txt:43
# f07c7de903eb45799a7017fcee4f8a0d
msgid "These expression operators are available to construct :ref:`expressions <aggregation-expressions>` for use in the aggregation pipeline."
msgstr ""

#: ../source/includes/intro-aggregation-operator-expressions.rst:1
# 357f4801d60d41149de175fa66af1095
msgid "Operator expressions are similar to functions that take arguments. In general, these expressions take an array of arguments and have the following form:"
msgstr ""

#: ../source/includes/intro-aggregation-operator-expressions.rst:9
# d3f82874431a4c69aa3810ee4c27b244
msgid "If operator accepts a single argument, you can omit the outer array designating the argument list:"
msgstr ""

#: ../source/includes/intro-aggregation-operator-expressions.rst:16
# 03583bbe52e04ea1b9ff939b7adb8dc9
msgid "To avoid parsing ambiguity if the argument is a literal array, you must wrap the literal array in a :expression:`$literal` expression or keep the outer array that designates the argument list."
msgstr ""

#: ../source/reference/operator/aggregation.txt:49
# ae2f5c383c50425082d85ceb476d41b7
msgid "Boolean Operators"
msgstr ""

#: ../source/includes/intro-aggregation-boolean.rst:1
# d3ca6179640d4d8c99c8227ad36f2c36
msgid "Boolean expressions evaluate their argument expressions as booleans and return a boolean as the result."
msgstr ""

#: ../source/includes/extracts/fact-agg-boolean-intro.rst:1
# ac0c9bb0deb04015925a72b8ce0ef0d4
msgid "In addition to the ``false`` boolean value, Boolean expression evaluates as ``false`` the following: ``null``, ``0``, and ``undefined`` values. The Boolean expression evaluates all other values as ``true``, including non-zero numeric values and arrays."
msgstr ""

#: ../source/reference/operator/aggregation.txt:65
# f350fc8cb3d144f683b7b199a65903ab
msgid "Set Operators"
msgstr ""

#: ../source/includes/intro-aggregation-set.rst:1
# 52619176d06946378db9d4d4686c7a78
msgid "Set expressions performs set operation on arrays, treating arrays as sets. Set expressions ignores the duplicate entries in each input array and the order of the elements."
msgstr ""

#: ../source/includes/intro-aggregation-set.rst:5
# 1690d48365c447169b8731d50012f3fd
msgid "If the set operation returns a set, the operation filters out duplicates in the result to output an array that contains only unique entries. The order of the elements in the output array is unspecified."
msgstr ""

#: ../source/includes/extracts/fact-agg-top-level-expressions-setExpression.rst:1
# 398b53eb00d6413591e732c20808d57c
msgid "If a set contains a nested array element, the set expression does *not* descend into the nested array but evaluates the array at top-level."
msgstr ""

#: ../source/reference/operator/aggregation.txt:81
# 3ce20936318548eb9a7b385dd8ea318c
msgid "Comparison Operators"
msgstr ""

#: ../source/includes/intro-aggregation-comparison.rst:1
# 38d9a23afe194356aceed4061682bc27
msgid "Comparison expressions return a boolean except for :expression:`$cmp` which returns a number."
msgstr ""

#: ../source/includes/intro-aggregation-comparison.rst:4
# b63cb8552fb342a8b05d04f504d16a65
msgid "The comparison expressions take two argument expressions and compare both value and type, using the :ref:`specified BSON comparison order <bson-types-comparison-order>` for values of different types."
msgstr ""

#: ../source/reference/operator/aggregation.txt:97
# 2b8a6fbfff7544909cb8f91c7fd7230c
msgid "Arithmetic Operators"
msgstr ""

#: ../source/includes/intro-aggregation-arithmetic.rst:1
# 0b6768b1d8664eb0b80db51bd99c8e2d
msgid "Arithmetic expressions perform mathematic operations on numbers. Some arithmetic expressions can also support date arithmetic."
msgstr ""

#: ../source/reference/operator/aggregation.txt:113
# 00fdb605a6de4e14af5b3c7b7f7afeb7
msgid "String Operators"
msgstr ""

#: ../source/includes/intro-aggregation-string.rst:1
# 48ed50e60fde42258782a2641e25557b
msgid "|exp-has| a well-defined behavior for strings of ASCII characters."
msgstr ""

#: ../source/reference/operator/aggregation.txt:120
# d3d7161c7eac4fc090cf54d307e194c3
msgid ":expression:`$concat` behavior is well-defined regardless of the characters used."
msgstr ""

#: ../source/reference/operator/aggregation.txt:135
# ccc69c946e124642941827587f0533ea
msgid "Text Search Operators"
msgstr ""

#: ../source/reference/operator/aggregation.txt:149
# 23b7a2f2dfb04ec0b22b5a1949977685
msgid "Array Operators"
msgstr ""

#: ../source/reference/operator/aggregation.txt:163
# 47e4337072ed48f39ebec8100d4b2d84
msgid "Variable Operators"
msgstr ""

#: ../source/reference/operator/aggregation.txt:177
# b6ddeb7e189041378849129b414a889b
msgid "Literal Operators"
msgstr ""

#: ../source/reference/operator/aggregation.txt:191
# df7fb355ee5041c394fdf77911ad13f1
msgid "Date Operators"
msgstr ""

#: ../source/reference/operator/aggregation.txt:205
# f7268313b76749f98fb65f3c4eb88291
msgid "Conditional Expressions"
msgstr ""

#: ../source/reference/operator/aggregation.txt:221
# 0a0dc5547c49499eb7a7e7710628c8d0
msgid "Accumulators"
msgstr ""

#: ../source/includes/intro-aggregation-accumulator.rst:1
# 817af7b909964755883827e119b893bd
msgid "Accumulators, available only for the :pipeline:`$group` stage, compute values by combining documents that share the same group key. Accumulators take as input a single expression, evaluating the expression once for each input document, and maintain their state for the group of documents."
msgstr ""

