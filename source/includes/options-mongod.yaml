# This file borrows content from other files, including
# /includes/options-shared.yaml, which uses
# {{program}} to refer to the tool.
#
program: mongod
name: help
inherit:
  name: help
  program: _shared
  file: options-shared.yaml
---
program: mongod
name: version
inherit:
  name: version
  program: _shared
  file: options-shared.yaml
---
program: mongod
name: config
aliases: -f
directive: option
args: <filename>
description: |
  Specifies a configuration file for runtime configuration options. The
  configuration file is the preferred method for runtime configuration of
  :program:`mongod`. The options are equivalent to the command-line
  configuration options. See :doc:`/reference/configuration-options` for
  more information.

  Ensure the configuration file uses ASCII encoding. {{program}} does not
  support configuration files with non-ASCII encoding, including UTF-8.
optional: true
---
program: mongod
name: verbose
inherit:
  name: verbose
  program: _shared
  file: options-shared.yaml
---
program: mongod
name: quiet
inherit:
  name: quiet
  program: _shared
  file: options-shared.yaml
---
program: mongod
name: port
description: |
  By default :program:`mongod` listens for connections on port `27017`.
inherit:
  name: port
  program: _shared
  file: options-shared.yaml
---
program: mongod
name: bind_ip
directive: option
args: <ip address>
description: |
  Specifies the IP address that the {{program}} process binds to and
  listens for connections on. By default {{program}} listens for
  connections for all interfaces. You may attach {{program}} to any
  interface. When attaching {{program}} to a publicly accessible
  interface, ensure that you have implemented proper authentication and
  firewall restrictions to protect the integrity of your database.
optional: true
---
program: mongod
name: maxConns
directive: option
args: <number>
description: |
  Specifies the maximum number of simultaneous connections that
  {{program}} will accept. This setting has no effect if it is
  higher than your operating system's configured maximum connection
  tracking threshold.

  .. versionchanged:: 2.5.0
     MongoDB removed the upward limit on the :setting:`maxConns` setting.
optional: true
---
program: mongod
name: objcheck
directive: option
args: null
description: |
  Forces the {{program}} to validate all requests from clients upon
  receipt to ensure that clients never insert invalid documents into the
  database. For objects with a high degree of sub-document nesting,
  :option:`--objcheck` can have a small impact on performance. You can set
  :option:`--noobjcheck` to disable object checking at run-time.

  .. versionchanged:: 2.4
     MongoDB enables :option:`--objcheck` by default, to prevent any
     client from inserting malformed or invalid BSON into a MongoDB
     database.
optional: true
---
program: mongod
name: noobjcheck
directive: option
args: null
description: |
  .. versionadded:: 2.4

  Disables the default document validation that MongoDB performs on all
  incoming BSON documents.
optional: true
---
program: mongod
name: logpath
directive: option
args: <path>
description: |
  Specifies the path for the log file that holds all diagnostic
  logging information.

  Unless specified, {{program}} will output all log information
  to the standard output. Additionally, unless you also specify
  :option:`--logappend`, the logfile will be overwritten when the
  process restarts.

  .. note::

     The behavior of the logging system may change in the near
     future in response to the :issue:`SERVER-4499` case.
optional: true
---
program: mongod
name: logappend
directive: option
args: null
description: |
  Appends new entries to the end of the logfile when the {{program}} restarts
  instead of overwriting the content of the log.
optional: true
---
program: mongod
name: syslog
directive: option
args: null
description: |
  Sends all logging output to the host's :term:`syslog` system rather
  than to standard output or a log file as with :option:`--logpath`.

  .. important:: You cannot use :option:`--syslog` with :option:`--logpath`.
optional: true
---
program: mongod
name: pidfilepath
directive: option
args: <path>
description: |
  Specifies a file location to hold the ":term:`PID`" or process ID of the
  {{program}} process. Useful for tracking the {{program}} process in
  combination with the :option:`mongod --fork` option.

  Without a specified :option:`--pidfilepath` option, :program:`mongos`
  creates no PID file.
optional: true
---
program: mongod
name: keyFile
directive: option
args: <file>
description: |
  Specifies the path to a key file to store authentication
  information. This option is used for interprocess authentication among
  the :program:`mongos` and :program:`mongod` instances of a
  :term:`sharded cluster` or :term:`replica set`.
optional: true
---
program: mongod
name: nounixsocket
directive: option
args: null
description: |
  Disables listening on the UNIX socket. {{program}} always
  listens on the UNIX socket, unless either: :option:`--nounixsocket`
  is set, :setting:`bind_ip` is not set, or :setting:`bind_ip`
  does not specify ``127.0.0.1``.

  .. |mongodb-package| replace:: {{program}}

  .. include:: /includes/note-deb-and-rpm-default-to-localhost.rst
optional: true
---
program: mongod
name: unixSocketPrefix
directive: option
args: <path>
description: |
  Specifies a path for the UNIX socket. Unless this option has a
  value {{program}} creates a socket with ``/tmp`` as a prefix.

  MongoDB will always create and listen on a UNIX socket, unless
  :option:`--nounixsocket` is set, :setting:`bind_ip` is not set,
  or :setting:`bind_ip` does not specify ``127.0.0.1``.
optional: true
---
program: mongod
name: fork
directive: option
args: null
description: |
  Enables a :term:`daemon` mode for {{program}} that runs the
  process to the background. This is the normal mode of operation in
  production and production-like environments but may not be
  desirable for testing.
optional: true
---
program: mongod
name: auth
directive: option
args: null
description: |
  Enables database authentication for users connecting from remote
  hosts. Configure users via the :doc:`mongo shell
  </reference/program/mongo>`. If no users exist, the localhost interface
  will continue to have access to the database until the you create
  the first user.

  See :doc:`Security and Authentication </core/security>`
  for more information.
optional: true
---
program: mongod
name: saslServiceName
directive: option
args: null
description: |
  .. versionadded:: 2.4.6
     Allows users to override the default :doc:`Kerberos
     </tutorial/control-access-to-mongodb-with-kerberos-authentication>`
     service name component of the :doc:`Kerberos
     </tutorial/control-access-to-mongodb-with-kerberos-authentication>`
     principal name, on a per-instance basis. If unspecified, the
     default value is ``mongodb``.

  Only available on MongoDB Enterprise.

  Only settable during start-up. The :dbcommand:`setParameter` command
  does not change this setting.

  **Ensure that your driver supports alternate service names.**

optional: true
---
program: mongod
name: cpu
directive: option
args: null
description: |
  Forces {{program}} to report the percentage of CPU time in
  write lock. {{program}} generates output every four
  seconds. MongoDB writes this data to standard output or the logfile
  if using the :setting:`logpath` option.
optional: true
---
program: mongod
name: dbpath
directive: option
args: <path>
description: |
  Specifies the directory where the {{program}} instance stores its
  data. Typical locations include: ``/srv/mongodb``, ``/var/lib/mongodb``
  or ``/opt/mongodb``

  Unless specified, {{program}} will look for data files in the default
  ``/data/db`` directory. (Windows systems use the ``\data\db``
  directory.) If you installed using a package management system. Check
  the ``/etc/mongodb.conf`` file provided by your packages to see the
  configuration of the :setting:`dbpath`.
optional: true
---
program: mongod
name: diaglog
directive: option
args: <value>
description: |
  .. deprecated:: 2.6

  :option:`--diaglog` is for internal use and not intended for most users.

  Creates a very verbose, :term:`diagnostic log` for troubleshooting and
  recording various errors. MongoDB writes these log files in the
  :setting:`dbpath` directory in a series of files that begin with the
  string ``diaglog`` and end with the initiation time of the logging as a
  hex string.

  The specified value configures the level of verbosity. Possible values,
  and their impact are as follows.

  =========  ===================================
  **Value**  **Setting**
  ---------  -----------------------------------
     0       off. No logging.
     1       Log write operations.
     2       Log read operations.
     3       Log both read and write operations.
     7       Log write and some read operations.
  =========  ===================================

  You can use the :program:`mongosniff` tool to replay this output for
  investigation. Given a typical diaglog file, located at
  ``/data/db/diaglog.4f76a58c``, you might use a command in the following
  form to read these files:

  .. code-block:: sh

     mongosniff --source DIAGLOG /data/db/diaglog.4f76a58c

  .. include:: /includes/warning-diaglogging-off.rst
optional: true
---
program: mongod
name: directoryperdb
directive: option
args: null
description: |

  Alters the storage pattern of the data directory to store each
  database's files in a distinct folder. This option will create
  directories within the :option:`--dbpath` named for each directory.

  Use this option in conjunction with your file system and device
  configuration so that MongoDB will store data on a number of distinct
  disk devices to increase write throughput or disk capacity.

  .. warning::

     .. |directoryperdb-option-name| replace:: :option:`--directoryperdb`
     .. include:: /includes/fact-directory-per-db-requires-migration.rst
optional: true
---
program: mongod
name: journal
directive: option
args: null
description: |
  Enables operation journaling to ensure write durability and data file
  validity. {{program}} enables journaling by default on
  64-bit builds of versions after 2.0.
optional: true
---
program: mongod
name: journalOptions
directive: option
args: <arguments>
description: |
  Provides functionality for testing. Not for general use, and will affect data
  file integrity in the case of abnormal system shutdown.
optional: true
---
program: mongod
name: journalCommitInterval
directive: option
args: <value>
description: |
  Specifies the maximum amount of time for {{program}} to allow
  between journal operations. Possible values are between 2 and 300
  milliseconds. Lower values increase the durability of the journal,
  at the expense of disk performance.

  .. include:: /includes/fact-journal-commit-interval-length.rst
  .. include:: /includes/fact-journal-commit-interval-with-gle.rst
optional: true
---
program: mongod
name: ipv6
inherit:
  name: ipv6
  program: _shared
  file: options-shared.yaml
---
program: mongod
name: jsonp
directive: option
args: null
description: |
  Permits :term:`JSONP` access via an HTTP interface. Consider the
  security implications of allowing this activity before enabling this
  option. If the HTTP interface is disabled, the :option:`--jsonp` also
  enables the HTTP interface.

  .. seealso:: :option:`--httpinterface` to enable the HTTP interface.
optional: true
---
program: mongod
name: noauth
directive: option
args: null
description: |
  Disables authentication. Currently the default. Exists for future
  compatibility and clarity.
optional: true
---
program: mongod
name: nohttpinterface
directive: option
args: null
description: |
  .. deprecated:: 2.6
     MongoDB disables the HTTP interface by default.

  Disables the HTTP interface.

  Do not use in conjunction with :option:`--rest` or :option:`--jsonp`.

  .. include:: /includes/note-kerberos-unsupported-in-http-console.rst
optional: true
---
program: mongod
name: httpinterface
directive: option
args: null
description: |
  .. versionadded:: 2.6

  Enables the HTTP interface. Enabling the interface can increase
  network exposure.

  Leave the HTTP interface *disabled* for production deployments. If you
  *do* enable this interface, you should only allow trusted clients to
  access this port. See :ref:`security-firewalls`.

  .. include:: /includes/note-kerberos-unsupported-in-http-console.rst
optional: true
---
program: mongod
name: nojournal
directive: option
args: null
description: |
  Disables the durability journaling. By default, {{program}}
  enables journaling in 64-bit versions after v2.0.
optional: true
---
program: mongod
name: noprealloc
directive: option
args: null
description: |
  Disables the preallocation of data files. This shortens the
  start up time in some cases and can cause significant performance
  penalties during normal operations.
optional: true
---
program: mongod
name: noscripting
directive: option
args: null
description: |
  Disables the scripting engine.
optional: true
---
program: mongod
name: notablescan
directive: option
args: null
description: |
  Forbids operations that require a table scan.
optional: true
---
program: mongod
name: nssize
directive: option
args: <value>
description: |
  Specifies the default size for namespace files (i.e ``.ns``). This
  option has no impact on the size of existing namespace files. The
  maximum size is 2047 megabytes.

  The default value is 16 megabytes, which provides for approximately
  24,000 namespaces. Each collection, as well as each index, counts as
  a namespace.
optional: true
---
program: mongod
name: profile
directive: option
args: <level>
description: |
  Changes the level of database profiling, which inserts information
  about operation performance into output of {{program}} or the log
  file. The following levels are available:

  =========  ==================================
  **Level**  **Setting**
  ---------  ----------------------------------
     0       Off. No profiling.
     1       On. Only includes slow operations.
     2       On. Includes all operations.
  =========  ==================================

  Profiling is off by default. Database profiling can impact database
  performance. Enable this option only after careful consideration.
optional: true
---
program: mongod
name: quota
directive: option
args: null
description: |
  Enables a maximum limit for the number data files each database can
  have. When running with :option:`--quota`, there are a maximum of
  8 data files per database. Adjust the quota with the
  :option:`--quotaFiles` option.
optional: true
---
program: mongod
name: quotaFiles
directive: option
args: <number>
description: |
  Modifies the limit on the number of data files per database. This
  option requires the :option:`--quota` setting. The default value
  for :option:`--quotaFiles` is 8.
optional: true
---
program: mongod
name: rest
directive: option
args: null
description: |
  Enables the simple :term:`REST` API. Consider the security
  implications of allowing this activity before enabling this option.

  If the HTTP interface is disabled, the :option:`--rest` setting
  also enables the HTTP interface.

  .. seealso:: :option:`--httpinterface` to enable the HTTP interface.
optional: true
---
program: mongod
name: repair
directive: option
args: null
description: |
  Runs a repair routine on all databases. This is equivalent
  to shutting down and running the :dbcommand:`repairDatabase` database
  command on all databases.

  .. include:: /includes/warning-repair.rst

  .. include:: /includes/note-repair.rst

  .. versionchanged:: 2.1.2

  If you run the repair option *and* have data in a journal file,
  {{program}} refuses to start. In these cases you should start
  {{program}} without the :option:`--repair` option to allow {{program}}
  to recover data from the journal. This completes more quickly and is
  more likely to produce valid data files. To continue the repair
  operation despite the journal files, shut down {{program}} cleanly and
  restart with the :option:`--repair` option.

  :option:`--repair` copies data from the source data files into new data
  files in the :setting:`repairpath`, and then replaces the original data
  files with the repaired data files. *If* :setting:`repairpath` is on the
  same device as :setting:`dbpath`, you *may* interrupt a {{program}}
  running :option:`--repair` without affecting the integrity of the data
  set.
optional: true
---
program: mongod
name: repairpath
directive: option
args: <path>
description: |
  Specifies the root directory containing MongoDB data files to use
  for the :option:`--repair` operation. Defaults to a ``_tmp``
  directory within the :setting:`dbpath`.
optional: true
---
program: mongod
name: setParameter
directive: option
args: <options>
description: |
  .. versionadded:: 2.4

  Specifies an option to configure on startup. Specify multiple options
  with multiple :option:`--setParameter` options. See
  :doc:`/reference/parameters` for full documentation of these parameters.
  The :dbcommand:`setParameter` database command provides access to many
  of these parameters. :option:`--setParameter` supports the following
  options:

  .. include:: /includes/list-set-parameters-mongod.rst
optional: true
---
program: mongod
name: slowms
directive: option
args: <value>
description: |
  Defines the value of "slow," for the :option:`--profile`
  option. The database logs all slow queries to the log, even when
  the profiler is not turned on. When the database profiler is on,
  {{program}} the profiler writes to the ``system.profile``
  collection. See the :dbcommand:`profile` command for more information on the
  database profiler.
optional: true
---
program: mongod
name: smallfiles
directive: option
args: null
description: |
  Enables a mode where MongoDB uses a smaller default file
  size.  Specifically, :option:`--smallfiles` reduces the initial
  size for data files and limits them to 512
  megabytes. :option:`--smallfiles` also reduces the size of each
  :term:`journal` files from 1 gigabyte to 128 megabytes.

  Use :option:`--smallfiles` if you have a large number of databases
  that each holds a small quantity of data. :option:`--smallfiles` can
  lead your {{program}} to create a large number of files,
  which may affect performance for larger databases.
optional: true
---
program: mongod
name: shutdown
directive: option
args: null
description: |
  Used in :term:`control scripts <control script>`, the
  :option:`--shutdown` cleanly and safely terminates the {{program}}
  process. When invoking {{program}} with this option you must set the
  :option:`--dbpath` option either directly or by way of the
  :doc:`configuration file </reference/configuration-options>` and the
  :option:`--config` option.

  The :option:`--shutdown` option is available only on Linux systems.
optional: true
---
program: mongod
name: syncdelay
directive: option
args: <value>
description: |
  Controls how much time can pass before MongoDB flushes data to the data
  files via an :term:`fsync` operation. **Do not set this value on
  production systems.** In almost every situation you should not set this
  value and use the default setting.

  .. warning::

     If you set :option:`--syncdelay` to ``0``, MongoDB will not sync the
     memory mapped files to disk.

  {{program}} writes data very quickly to the journal and lazily to the
  data files. The default :setting:`syncdelay` setting is 60 seconds.
  :setting:`syncdelay` has no effect on the :setting:`journal` files or
  :doc:`journaling </core/journaling>`.

  The :dbcommand:`serverStatus` command reports the background flush
  thread's status via the :data:`~serverStatus.backgroundFlushing` field.
optional: true
---
program: mongod
name: sysinfo
directive: option
args: null
description: |
  Returns diagnostic system information and then exits. The
  information provides the page size, the number of physical pages,
  and the number of available physical pages.
optional: true
---
program: mongod
name: upgrade
directive: option
args: null
description: |
  Upgrades the on-disk data format of the files specified by the
  :option:`--dbpath` to the latest version, if needed.

  This option only affects the operation of {{program}} if the data files
  are in an old format.

  In most cases you should **not** set this value, so you can exercise the
  most control over your upgrade process. See the MongoDB `release notes
  <http://www.mongodb.org/downloads>`_ (on the download page) for more
  information about the upgrade process.
optional: true
---
program: mongod
name: traceExceptions
directive: option
args: null
description: |
  For internal diagnostic use only.

  .. see SERVER-6667a
optional: true
---
program: mongod
name: noIndexBuildRetry
directive: option
args: null
description: |
  Stops {{program}} from rebuilding indexes on the next start-up after the
  program had shut down or stopped in the middle of an index build.
optional: true
---
program: mongod
name: replSet
directive: option
args: <setname>
description: |
  Configures replication. Specify a replica set name as an argument to
  this set. All hosts in the replica set must have the same set name.

  .. include:: /includes/important-unique-replica-set-names.rst
optional: true
---
program: mongod
name: oplogSize
directive: option
args: <value>
description: |
  Specifies a maximum size in megabytes for the replication operation log
  (e.g. :term:`oplog`.) By {{program}} creates an :term:`oplog` based on
  the maximum amount of space available. For 64-bit systems, the op log is
  typically 5% of available disk space. Once the {{program}} has created
  the oplog for the first time, changing :option:`--oplogSize` will not
  affect the size of the oplog.
optional: true
---
program: mongod
name: fastsync
directive: option
args: null
description: |
  In the context of :term:`replica set` replication, set this option
  if you have seeded this member with a snapshot of the
  :term:`dbpath` of another member of the set. Otherwise the
  {{program}} will attempt to perform an initial sync,
  as though the member were a new member.

  In the context of :term:`replica set` replication, set this option
  if you have seeded this member with a snapshot of the
  :term:`dbpath` of another member of the set. Otherwise the
  {{program}} will attempt to perform an initial sync,
  as though the member were a new member.

  .. warning::
     If the data is not perfectly synchronized *and*
     {{program}} starts with :setting:`fastsync`, then the
     secondary or slave will be permanently out of sync with the
     primary, which may cause significant consistency problems.
optional: true
---
program: mongod
name: replIndexPrefetch
directive: option
args: null
description: |
  .. versionadded:: 2.2

  You must use :option:`--replIndexPrefetch` in conjunction with
  :setting:`replSet`. The default value is ``all`` and available
  options are:

  - ``none``

  - ``all``

  - ``_id_only``

  By default :term:`secondary` members of a :term:`replica set` will load
  all indexes related to an operation into memory before applying
  operations from the oplog. You can modify this behavior so that the
  secondaries will only load the ``_id`` index. Specify ``_id_only`` or
  ``none`` to prevent the {{program}} from loading *any* index into
  memory.
optional: true
---
program: mongod
name: master
directive: option
args: null
description: |
  Configures {{program}} to run as a replication :term:`master`.
optional: true
---
program: mongod
name: slave
directive: option
args: null
description: |
  Configures {{program}} to run as a replication :term:`slave`.
optional: true
---
program: mongod
name: source
directive: option
args: <host><:port>
description: |
  For use with the :option:`--slave` option, the ``--source`` option
  designates the server that this instance will replicate.
optional: true
---
program: mongod
name: only
directive: option
args: <arg>
description: |
  For use with the :option:`--slave` option, the ``--only`` option
  specifies only a single :term:`database` to replicate.
optional: true
---
program: mongod
name: slavedelay
directive: option
args: <value>
description: |
  For use with the :option:`--slave` option, the ``--slavedelay``
  option configures a "delay" in seconds, for this slave to wait to
  apply operations from the :term:`master` node.
optional: true
---
program: mongod
name: autoresync
directive: option
args: null
description: |
  For use with the :option:`--slave` option. When set,
  :option:`--autoresync` option allows this slave to automatically
  resync if it is more than 10 seconds behind the master. This
  setting may be problematic if the :option:`--oplogSize` specifies
  a too small oplog.

  If the :term:`oplog` is not large enough to store the difference in
  changes between the master's current state and the state of the
  slave, this instance will forcibly resync itself
  unnecessarily. When you set the :setting:`autoresync` option to
  ``false``, the slave will not attempt an automatic resync more than
  once in a ten minute period.
optional: true
---
program: mongod
name: configsvr
directive: option
args: null
description: |
  Declares that this {{program}} instance serves as the
  :term:`config database` of a sharded cluster. When running with
  this option, clients will not be able to write data to any database
  other than ``config`` and ``admin``. The default port for a
  {{program}} with this option is ``27019`` and the default
  :option:`--dbpath` directory is ``/data/configdb``, unless
  specified.

  .. versionchanged:: 2.2
     :option:`--configsvr` also sets :option:`--smallfiles`.

  .. versionchanged:: 2.4
     :option:`--configsvr` creates a local :term:`oplog`.

  Do not use :option:`--configsvr` with :option:`--replSet` or
  :option:`--shardsvr`. Config servers cannot be a shard
  server or part of a :term:`replica set`.
optional: true
---
program: mongod
name: shardsvr
directive: option
args: null
description: |
  Configures this {{program}} instance as a shard in a
  partitioned cluster. The default port for these instances is
  ``27018``.  The only effect of :option:`--shardsvr` is to change
  the port number.
optional: true
---
program: mongod
name: moveParanoia
directive: option
args: null
description: |
  .. |move-paranoia-opt| replace:: :option:`--moveParanoia`

  .. versionadded:: 2.4

  .. include:: /includes/setting-moveparanoia.rst
optional: true
---
program: mongod
name: ssl
inherit:
  name: ssl
  program: _shared
  file: options-shared.yaml
---
program: mongod
name: sslCAFile
inherit:
  name: sslCAFile
  program: _shared
  file: options-shared.yaml
---
program: mongod
name: sslPEMKeyFile
inherit:
  name: sslPEMKeyFile
  program: _shared
  file: options-shared.yaml
---
program: mongod
name: sslPEMKeyPassword
inherit:
  name: sslPEMKeyPassword
  program: _shared
  file: options-shared.yaml
---
program: mongod
name: sslCRLFile
inherit:
  name: sslCRLFile
  program: _shared
  file: options-shared.yaml
---
program: mongod
name: sslAllowInvalidCertificates
inherit:
  name: sslAllowInvalidCertificates
  program: _shared
  file: options-shared.yaml
---
program: mongod
name: sslFIPSMode
inherit:
  name: sslFIPSMode
  program: _shared
  file: options-shared.yaml
---
program: mongod
name: auditDestination
directive: option
args: null
description: |
  Enables auditing. The :option:`--auditDestination` option can have one of
  the following values:

  .. list-table::
     :header-rows: 1
     :widths: 15 50

     * - Value

       - Description

     * - ``syslog``

       - Output the audit events to syslog in JSON format. Not available on
         Windows. Audit messages have a syslog severity level of ``info``
         and a facility level of ``user``.

         .. include:: /includes/fact-audit-syslog-message-limit.rst

     * - ``console``

       - Output the audit events to ``stdout`` in JSON format.

     * - ``file``

       - Output the audit events to the file specified in
         :option:`--auditPath` in the format specified in
         :option:`-auditFormat`.

  .. include:: /includes/note-audit-in-enterprise-only.rst
optional: true
---
program: mongod
name: auditFormat
directive: option
args: null
description: |
  Specifies the format of the output file if
  :option:`--auditDestination` is ``file``. The
  :option:`--auditFormat` can have one of the following values:

  .. list-table::
     :header-rows: 1
     :widths: 15 50

     * - Value

       - Description

     * - ``JSON``

       - Output the audit events in JSON format to the file specified in
         :option:`--auditPath`.

     * - ``BSON``

       - Output the audit events in BSON binary format to the file
         specified in :option:`--auditPath`.
  .. include:: /includes/note-audit-in-enterprise-only.rst
optional: true
---
program: mongod
name: auditPath
directive: option
args: null
description: |
  Specifies the output file for auditing if :option:`--auditDestination`
  has value of ``file``. The :option:`--auditPath` option can take
  either a full path name or a relative path name.

  .. include:: /includes/note-audit-in-enterprise-only.rst
optional: true
---
program: mongod
name: auditFilter
directive: option
args: null
description: |
  Specifies the filter to limit the :ref:`types of operations
  <audit-action-details-results>` the audit system records. The option
  takes a document of the form:

  .. code-block:: javascript

     { atype: <expression> }

  For authentication operations, the option can also take a document of
  the form:

  .. code-block:: javascript

    { atype: <expression>, "param.db": <database> }
  .. include:: /includes/note-audit-in-enterprise-only.rst
optional: true
...
