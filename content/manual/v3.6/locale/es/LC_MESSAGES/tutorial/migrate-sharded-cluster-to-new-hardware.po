# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: 2014-04-08 18:40+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:3
msgid "Migrate a Sharded Cluster to Different Hardware"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:13
msgid ""
"The tutorial is specific to MongoDB |version|. For earlier versions of "
"MongoDB, refer to the corresponding version of the MongoDB Manual."
msgstr ""

#: ../source/includes/fact-mirrored-config-servers-deprecated.rst:1
msgid ""
"Starting in MongoDB 3.2, config servers for sharded clusters can be "
"deployed as a :doc:`replica set </replication>`. The replica set config "
"servers must run the :doc:`WiredTiger storage engine </core/wiredtiger>`."
" MongoDB 3.2 deprecates the use of three mirrored :binary:`~bin.mongod` "
"instances for config servers."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:18
msgid ""
"This procedure moves the components of the :term:`sharded cluster` to a "
"new hardware system without downtime for reads and writes."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:21
msgid ""
"While the migration is in progress, do not attempt to change to the :ref"
":`sharding-internals-config-database`. Do not use any operation that "
"modifies the cluster metadata *in any way*. For example, do not create or"
" drop databases, create or drop collections, or use any sharding "
"commands."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:30
msgid "Disable the Balancer"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:32
msgid ""
"Disable the balancer to stop :doc:`chunk migration </core/sharding-"
"balancer-administration>` and do not perform any metadata write "
"operations until the process finishes. If a migration is in progress, the"
" balancer will complete the in-progress migration before stopping."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:38
msgid ""
"To disable the balancer, connect to one of the cluster's "
":binary:`~bin.mongos` instances and issue the following method:"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:45
#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:191
msgid ""
"To check the balancer state, issue the :method:`sh.getBalancerState()` "
"method."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:48
msgid "For more information, see :ref:`sharding-balancing-disable-temporarily`."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:53
msgid "Migrate Each Config Server Separately"
msgstr ""

#: ../source/includes/fact-csrs-versionchanged.rst:1
msgid ""
"Starting in MongoDB 3.2, config servers for sharded clusters can be "
"deployed as a :doc:`replica set </replication>` (CSRS) instead of three "
"mirrored config servers (SCCC). Using a replica set for the config "
"servers improves consistency across the config servers, since MongoDB can"
" take advantage of the standard replica set read and write protocols for "
"the config data. In addition, using a replica set for config servers "
"allows a sharded cluster to have more than 3 config servers since a "
"replica set can have up to 50 members. To deploy config servers as a "
"replica set, the config servers must run the :doc:`WiredTiger storage "
"engine </core/wiredtiger>`."
msgstr ""

#: ../source/includes/fact-csrs-versionchanged.rst:12
msgid ""
"In version 3.4, MongoDB :ref:`removes support for SCCC config servers "
"<3.4-compat-remove-sccc>`."
msgstr ""

#: ../source/includes/fact-config-server-replica-set-restrictions.rst:1
msgid ""
"The following restrictions apply to a replica set configuration when used"
" for config servers:"
msgstr ""

#: ../source/includes/fact-config-server-replica-set-restrictions.rst:4
msgid "Must have zero :doc:`arbiters </core/replica-set-arbiter>`."
msgstr ""

#: ../source/includes/fact-config-server-replica-set-restrictions.rst:6
msgid "Must have no :doc:`delayed members </core/replica-set-delayed-member>`."
msgstr ""

#: ../source/includes/fact-config-server-replica-set-restrictions.rst:9
msgid ""
"Must build indexes (i.e. no member should have "
":data:`~replSetGetConfig.members[n].buildIndexes` setting set to false)."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:61
msgid "For each member of the config server replica set:"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:63
msgid "Replace the secondary members before replacing the primary."
msgstr ""

#: ../source/includes/steps/replace-disabled-config-server.rst:8
msgid "Start the replacement config server."
msgstr ""

#: ../source/includes/steps/replace-disabled-config-server.rst:11
#: ../source/includes/steps/replace-disabled-config-server.rst:33
msgid ""
"Start a :binary:`~bin.mongod` instance, specifying the ``--configsvr``, "
"``--replSet``, ``--bind_ip`` options, and other options as appropriate to"
" your deployment."
msgstr ""

#: ../source/includes/warning-bind-ip-security-considerations.rst:3
msgid ""
"Before binding to a non-localhost (e.g. publicly accessible) IP address, "
"ensure you have secured your cluster from unauthorized access. For a "
"complete list of security recommendations, see :doc:`/administration"
"/security-checklist`. At minimum, consider :ref:`enabling authentication "
"<checklist-auth>` and :doc:`hardening network infrastructure </core"
"/security-network>`."
msgstr ""

#: ../source/includes/steps/replace-disabled-config-server.rst:30
msgid "Step 1: Start the replacement config server."
msgstr ""

#: ../source/includes/steps/replace-disabled-config-server.rst:52
msgid "Add the new config server to the replica set."
msgstr ""

#: ../source/includes/steps/replace-disabled-config-server.rst:54
#: ../source/includes/steps/replace-disabled-config-server.rst:83
msgid ""
"Connect a :binary:`~bin.mongo` shell to the primary of the config server "
"replica set and use :method:`rs.add()` to add the new member."
msgstr ""

#: ../source/includes/tip-repl-set-add-members.rst:1
msgid ""
"When a newly added secondary has its :rsconf:`~members[n].votes` and "
":rsconf:`~members[n].priority` settings greater than zero, during its "
"initial sync, the secondary still counts as a voting member even though "
"it cannot serve reads nor become primary because its data is not yet "
"consistent."
msgstr ""

#: ../source/includes/tip-repl-set-add-members.rst:7
msgid ""
"This can lead to a case where a majority of the voting members are online"
" but no primary can be elected. To avoid such situations, consider adding"
" the new secondary initially with :rsconf:`priority :0 "
"<members[n].priority>` and :rsconf:`votes :0 <members[n].votes>`. Then, "
"once the member has transitioned into :replstate:`SECONDARY` state, use "
":method:`rs.reconfig()` to update its priority and votes."
msgstr ""

#: ../source/includes/steps/replace-disabled-config-server.rst:67
#: ../source/includes/steps/replace-disabled-config-server.rst:96
msgid ""
"The initial sync process copies all the data from one member of the "
"config server replica set to the new member without restarting."
msgstr ""

#: ../source/includes/steps/replace-disabled-config-server.rst:70
#: ../source/includes/steps/replace-disabled-config-server.rst:99
#: ../source/includes/steps/replace-disabled-config-server.rst:222
msgid ""
":binary:`~bin.mongos` instances automatically recognize the change in the"
" config server replica set members without restarting."
msgstr ""

#: ../source/includes/steps/replace-disabled-config-server.rst:81
msgid "Step 2: Add the new config server to the replica set."
msgstr ""

#: ../source/includes/steps/replace-disabled-config-server.rst:110
msgid "Update the newly added config server's votes and priority settings."
msgstr ""

#: ../source/includes/steps/replace-disabled-config-server.rst:113
#: ../source/includes/steps/replace-disabled-config-server.rst:150
msgid ""
"Ensure that the new member has reached :replstate:`SECONDARY` state. To "
"check the state of the replica set members, run :method:`rs.status()`:"
msgstr ""

#: ../source/includes/steps/replace-disabled-config-server.rst:122
#: ../source/includes/steps/replace-disabled-config-server.rst:159
msgid ""
"Reconfigure the replica set to update the votes and priority of the new "
"member:"
msgstr ""

#: ../source/includes/steps/replace-disabled-config-server.rst:134
#: ../source/includes/steps/replace-disabled-config-server.rst:171
msgid ""
"where ``n`` is the array index of the new member in the :rsconf:`members`"
" array."
msgstr ""

#: ../source/includes/warning-rs-reconfig.rst:3
msgid ""
"The :method:`rs.reconfig()` shell method can force the current primary to"
" step down, which causes an :ref:`election <replica-set-elections>`. When"
" the primary steps down, the :binary:`~bin.mongod` closes all client "
"connections. While this typically takes 10-20 seconds, try to make these "
"changes during scheduled maintenance periods."
msgstr ""

#: ../source/includes/warning-mixed-version-rs-config.rst:1
msgid ""
"Avoid reconfiguring replica sets that contain members of different "
"MongoDB versions as validation rules may differ across MongoDB versions."
msgstr ""

#: ../source/includes/steps/replace-disabled-config-server.rst:147
msgid ""
"Step 3: Update the newly added config server's votes and priority "
"settings."
msgstr ""

#: ../source/includes/steps/replace-disabled-config-server.rst:184
msgid "Shut down the member to replace."
msgstr ""

#: ../source/includes/steps/replace-disabled-config-server.rst:186
#: ../source/includes/steps/replace-disabled-config-server.rst:199
msgid ""
"If replacing the primary member, step down the primary first before "
"shutting down."
msgstr ""

#: ../source/includes/steps/replace-disabled-config-server.rst:197
msgid "Step 4: Shut down the member to replace."
msgstr ""

#: ../source/includes/steps/replace-disabled-config-server.rst:210
msgid "Remove the member to replace from the config server replica set."
msgstr ""

#: ../source/includes/steps/replace-disabled-config-server.rst:212
msgid ""
"Upon completion of initial sync of the replacement config server, from a "
":binary:`~bin.mongo` shell connected to the primary, use "
":method:`rs.remove()` to remove the old member."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:71
msgid "Restart the ``mongos`` Instances"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:75
msgid ""
"With replica set config servers, the :binary:`~bin.mongos` instances "
"specify in the :option:`--configdb <mongos --configdb>` or "
":setting:`sharding.configDB` setting the config server replica set name "
"and at least one of the replica set members. The :binary:`~bin.mongos` "
"instances for the sharded cluster must specify the same config server "
"replica set name but can specify different members of the replica set."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:82
msgid ""
"If a :binary:`~bin.mongos` instance specifies a migrated replica set "
"member in the :option:`--configdb <mongos --configdb>` or "
":setting:`sharding.configDB` setting, update the config server setting "
"for the next time you restart the :binary:`~bin.mongos` instance."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:87
msgid "For more information, see :ref:`sharding-setup-start-mongos`."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:92
msgid "Migrate the Shards"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:94
msgid ""
"Migrate the shards one at a time. For each shard, follow the appropriate "
"procedure in this section."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:100
msgid "Migrate a Replica Set Shard"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:102
msgid ""
"To migrate a sharded cluster, migrate each member separately. First "
"migrate the non-primary members, and then migrate the :term:`primary` "
"last."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:106
msgid ""
"If the replica set has two voting members, add an :doc:`arbiter </core"
"/replica-set-arbiter>` to the replica set to ensure the set keeps a "
"majority of its votes available during the migration. You can remove the "
"arbiter after completing the migration."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:114
msgid "Migrate a Member of a Replica Set Shard"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:116
msgid ""
"Shut down the :binary:`~bin.mongod` process. To ensure a clean shutdown, "
"use the :dbcommand:`shutdown` command."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:119
msgid ""
"Move the data directory (i.e., the :setting:`~storage.dbPath`) to the new"
" machine."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:122
msgid "Restart the :binary:`~bin.mongod` process at the new location."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:125
msgid "Connect to the replica set's current primary."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:127
msgid ""
"If the hostname of the member has changed, use :method:`rs.reconfig()` to"
" update the :doc:`replica set configuration document </reference/replica-"
"configuration>` with the new hostname."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:131
msgid ""
"For example, the following sequence of commands updates the hostname for "
"the instance at position ``2`` in the ``members`` array:"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:141
msgid ""
"For more information on updating the configuration document, see :ref"
":`replica-set-reconfiguration-usage`."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:144
msgid "To confirm the new configuration, issue :method:`rs.conf()`."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:146
msgid ""
"Wait for the member to recover. To check the member's state, issue "
":method:`rs.status()`."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:150
msgid "Migrate the Primary in a Replica Set Shard"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:152
msgid ""
"While migrating the replica set's primary, the set must elect a new "
"primary. This failover process which renders the replica set unavailable "
"to perform reads or accept writes for the duration of the election, which"
" typically completes quickly. If possible, plan the migration during a "
"maintenance window."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:158
msgid ""
"Step down the primary to allow the normal :ref:`failover <replica-set-"
"failover>` process.  To step down the primary, connect to the primary and"
" issue the either the :dbcommand:`replSetStepDown` command or the "
":method:`rs.stepDown()` method. The following example shows the "
":method:`rs.stepDown()` method:"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:169
msgid ""
"Once the primary has stepped down and another member has become "
":replstate:`PRIMARY` state. To migrate the stepped-down primary, follow "
"the :ref:`migrate-replica-set-shard-member` procedure"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:173
msgid ""
"You can check the output of :method:`rs.status()` to confirm the change "
"in status."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:179
msgid "Re-Enable the Balancer"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:181
msgid ""
"To complete the migration, re-enable the balancer to resume :doc:`chunk "
"migrations </core/sharding-balancer-administration>`."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:184
msgid ""
"Connect to one of the cluster's :binary:`~bin.mongos` instances and pass "
"``true`` to the :method:`sh.setBalancerState()` method:"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:194
msgid "For more information, see :ref:`sharding-balancing-enable`."
msgstr ""

# cce8f00956524e018b72aacecf995e28
#~ msgid ""
#~ "While the migration is in progress, "
#~ "do not attempt to change to the"
#~ " :doc:`cluster metadata </core/sharded-"
#~ "cluster-metadata>`. Do not use any "
#~ "operation that modifies the cluster "
#~ "metadata *in any way*. For example, "
#~ "do not create or drop databases, "
#~ "create or drop collections, or use "
#~ "any sharding commands."
#~ msgstr ""

# 5bc663fa35cd4074b51b7df72fedf087
#~ msgid ""
#~ "If your cluster includes a shard "
#~ "backed by a :term:`standalone` "
#~ ":program:`mongod` instance, consider "
#~ ":doc:`converting the standalone to a "
#~ "replica set </tutorial/convert-standalone-"
#~ "to-replica-set>` to simplify migration "
#~ "and to let you keep the cluster"
#~ " online during future maintenance. "
#~ "Migrating a shard as standalone is "
#~ "a multi-step process that may "
#~ "require downtime."
#~ msgstr ""

# 0079ec4734b4431fa9c0216d7c9cf07b
#~ msgid "To migrate a cluster to new hardware, perform the following tasks."
#~ msgstr ""

# e9623ab3b5524d6bbc0c40684f678bd7
#~ msgid ""
#~ "Disable the balancer to stop :doc:`chunk"
#~ " migration </core/sharding-chunk-migration>` "
#~ "and do not perform any metadata "
#~ "write operations until the process "
#~ "finishes. If a migration is in "
#~ "progress, the balancer will complete the"
#~ " in-progress migration before stopping."
#~ msgstr ""

# 8c25a29889e542959ce105aef887339a
#~ msgid ""
#~ "To disable the balancer, connect to "
#~ "one of the cluster's :program:`mongos` "
#~ "instances and issue the following "
#~ "method:"
#~ msgstr ""

# d0368e67d945448c9dd20b9376182721
#~ msgid ""
#~ "Migrate each :ref:`config server <sharding-"
#~ "config-server>` by starting with the "
#~ "*last* config server listed in the "
#~ ":setting:`~sharding.configDB` string. Proceed in "
#~ "reverse order of the "
#~ ":setting:`~sharding.configDB` string. Migrate and"
#~ " restart a config server before "
#~ "proceeding to the next. Do not "
#~ "rename a config server during this "
#~ "process."
#~ msgstr ""

# 0ee6cd04ebb64826ac7668d73b830fb9
#~ msgid ""
#~ "If the name or address that a "
#~ "sharded cluster uses to connect to "
#~ "a config server changes, you must "
#~ "restart **every** :program:`mongod` and "
#~ ":program:`mongos` instance in the sharded "
#~ "cluster. Avoid downtime by using CNAMEs"
#~ " to identify config servers within "
#~ "the MongoDB deployment."
#~ msgstr ""

# c5eab668af3f40ada1e69e948f12d245
#~ msgid ""
#~ "See :doc:`/tutorial/migrate-config-servers-"
#~ "with-different-hostnames` for more "
#~ "information."
#~ msgstr ""

# 3d90136600c14afabf488ff88b3b7f17
#~ msgid ""
#~ "Start with the *last* config server "
#~ "listed in :setting:`~sharding.configDB`."
#~ msgstr ""

# 1194923ae9df48c88f1e3d831df7f0c5
#~ msgid "Shut down the config server."
#~ msgstr ""

# 178ff0330cda40d58660e083869a8481
#~ msgid "This renders all config data for the sharded cluster \"read only.\""
#~ msgstr ""

# 5ba51bc6d4fe4566bb0b60ab6b35943f
#~ msgid ""
#~ "Change the DNS entry that points "
#~ "to the system that provided the "
#~ "old config server, so that the "
#~ "*same* hostname points to the new "
#~ "system. How you do this depends on"
#~ " how you organize your DNS and "
#~ "hostname resolution services."
#~ msgstr ""

# 739af2df1e9748adb2ddcefac2d27161
#~ msgid ""
#~ "Copy the contents of "
#~ ":setting:`~storage.dbPath` from the old config"
#~ " server to the new config server."
#~ msgstr ""

# 83c027a18cc14f358bba60013aad6526
#~ msgid ""
#~ "For example, to copy the contents "
#~ "of :setting:`~storage.dbPath` to a machine "
#~ "named ``mongodb.config2.example.net``, you might "
#~ "issue a command similar to the "
#~ "following:"
#~ msgstr ""

# 75bd4b49b6054d72bb08e03372b7ef02
#~ msgid ""
#~ "Start the config server instance on "
#~ "the new system. The default invocation"
#~ " is:"
#~ msgstr ""

# 7d6d5a5a12444407afdf5713686398e7
#~ msgid ""
#~ "If the :setting:`~sharding.configDB` string "
#~ "will change as part of the "
#~ "migration, you must shut down *all* "
#~ ":program:`mongos` instances before changing "
#~ "the :setting:`~sharding.configDB` string. This "
#~ "avoids errors in the sharded cluster "
#~ "over :setting:`~sharding.configDB` string conflicts."
#~ msgstr ""

# 1f61c0047e9143c5967af5e9cf27c0b5
#~ msgid ""
#~ "If the :setting:`~sharding.configDB` string "
#~ "will remain the same, you can "
#~ "migrate the :program:`mongos` instances "
#~ "sequentially or all at once."
#~ msgstr ""

# 1560726f3bb84760b82475b9291f2bcd
#~ msgid ""
#~ "Shut down the :program:`mongos` instances "
#~ "using the :dbcommand:`shutdown` command. If"
#~ " the :setting:`~sharding.configDB` string is "
#~ "changing, shut down *all* :program:`mongos`"
#~ " instances."
#~ msgstr ""

# 9c051eaec91a4a3a874426202565e6ad
#~ msgid ""
#~ "If the hostname has changed for "
#~ "any of the config servers, update "
#~ "the :setting:`~sharding.configDB` string for "
#~ "each :program:`mongos` instance. The "
#~ ":program:`mongos` instances must all use "
#~ "the same :setting:`~sharding.configDB` string. "
#~ "The strings must list identical host "
#~ "names in identical order."
#~ msgstr ""

# 893f9c55f15f4deeba431e05a295143a
#~ msgid "Tip"
#~ msgstr ""

# b5b54dddddba442db809d7b1f47f4701
#~ msgid ""
#~ "Restart the :program:`mongos` instances being"
#~ " sure to use the updated "
#~ ":setting:`~sharding.configDB` string if hostnames"
#~ " have changed."
#~ msgstr ""

# 3aefea441f44488ebf3977ee73cfc7c1
#~ msgid ""
#~ "Shut down the :program:`mongod` process. "
#~ "To ensure a clean shutdown, use "
#~ "the :dbcommand:`shutdown` command."
#~ msgstr ""

# 9ca454865db843008c7cb1774e96a718
#~ msgid "Restart the :program:`mongod` process at the new location."
#~ msgstr ""

# 3b84df87ec70429b907a813bf60d7eaf
#~ msgid "Migrate a Standalone Shard"
#~ msgstr ""

# 8621c57983c1452393fd5fa7543d62d0
#~ msgid ""
#~ "The ideal procedure for migrating a "
#~ "standalone shard is to :doc:`convert the"
#~ " standalone to a replica set "
#~ "</tutorial/convert-standalone-to-replica-set>`"
#~ " and then use the procedure for "
#~ ":ref:`migrating a replica set shard "
#~ "<migrate-replica-set-shard>`. In production"
#~ " clusters, all shards should be "
#~ "replica sets, which provides continued "
#~ "availability during maintenance windows."
#~ msgstr ""

# c00f27302cd14db3bf53f404bd1d14d0
#~ msgid ""
#~ "Migrating a shard as standalone is "
#~ "a multi-step process during which "
#~ "part of the shard may be "
#~ "unavailable. If the shard is the "
#~ ":term:`primary shard` for a database,the "
#~ "process includes the :dbcommand:`movePrimary` "
#~ "command. While the :dbcommand:`movePrimary` "
#~ "runs, you should stop modifying data "
#~ "in that database. To migrate the "
#~ "standalone shard, use the :doc:`/tutorial"
#~ "/remove-shards-from-cluster` procedure."
#~ msgstr ""

# a8ea46001f0b4810a8fb481a8ec100bf
#~ msgid ""
#~ "To complete the migration, re-enable "
#~ "the balancer to resume :doc:`chunk "
#~ "migrations </core/sharding-chunk-migration>`."
#~ msgstr ""

# 34241b7259994b62b062b6776032a9c2
#~ msgid ""
#~ "Connect to one of the cluster's "
#~ ":program:`mongos` instances and pass ``true``"
#~ " to the :method:`sh.setBalancerState()` method:"
#~ msgstr ""

