.. _donut-chart-ref:

===========
Donut Chart
===========

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. include:: /includes/donut-blurb.rst

Donut Chart Encoding Channels
-----------------------------

Donut charts provide the following :ref:`encoding channels
<encoding-channels>`:

.. list-table::
   :header-rows: 1
   :widths: 20 80

   * - Encoding Channel
     - Description

   * - Label
     - The :guilabel:`category` encoding channel. |charts| creates a
       segment in the donut for each unique value from this field.

       .. note::

          The :guilabel:`Label` encoding channel supports
          :ref:`binning <charts-bin-data>` for numeric and date fields.
          The channel supports :ref:`sorting <charts-sort-data>` and
          :ref:`limiting <charts-limit-data>` for string fields.

   * - Arc
     - The :guilabel:`aggregation` encoding channel. |charts|
       :ref:`aggregates <building-charts-aggregation>` this field
       based on the aggregation method selected. This field dictates
       the size of each circle segment.

       If you don't add a field to the :guilabel:`Label` channel, you
       can add multiple fields to the :guilabel:`Arc` channel. |charts|
       creates one segment for each encoded field.

Use Cases
---------

Donut charts are ideal for giving readers a quick overview of the
proportional distribution of a dataset. Use donut charts when the
general trend of data is more important than precise data values.
Donut charts are especially useful when there is a low number of
categories to visualize, because it is easier to compare fewer
segments of the circle to see which values make up the greatest
parts of the whole.

Consider using donut charts to display:

- The proportion of store customers who place orders in-store versus
  online

- The proportion of various resources exported by a country

- The choices thrown during several Rock, Paper, Scissors games

.. note::

   Although you can :ref:`limit <charts-limit-data>` your data to 
   reduce the number of categories in the visualization, this may not 
   be the best choice for donut charts. The purpose of donut charts is 
   to show each value as a proportion of a total, so excluding 
   categories may result in a misleading visualization that reflects 
   inaccurate proportions.

   If you do :ref:`limit <charts-limit-data>` your data, donut charts 
   enable the :guilabel:`Show "All Others"` option by default. This 
   option creates an "All others" category that represents the sum of 
   the omitted values and ensures that chart values are displayed as a 
   proportion of the total.

   When looking to compare individual data values, rather than show
   values as a proportion to a whole, consider using a
   :ref:`column or bar chart <column-bar-chart-ref>`.

Customization Options
---------------------

The following customization options are specific to donut
charts. To see all available customization options, see
:ref:`customize-charts`.

.. _category-labels-option:

Show or Hide Category Labels
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You can dictate whether |charts-short| displays text labels for
**categories** in your donut charts.

To set this option:

1. Open the :ref:`Customize <customize-charts>` pane for your chart.

#. In the :guilabel:`General Customization` section, set the
   :guilabel:`Data Category Labels` toggle switch to the desired
   setting.

.. note::

   .. include:: /includes/fact-donut-chart-labels.rst

Show or Hide Data Value Labels
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/customization/show-hide-data-labels.rst

.. _show-hide-data-category-labels:

Show Value or Percentage Labels
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You can dictate whether a :ref:`Donut Chart <donut-chart-ref>` displays 
data values as raw values or percentages. By default, data value labels 
show the raw values of your data points. For percentage values in 
:ref:`Donut Charts <donut-chart-ref>`, the whole value is the total 
value of the entire chart. Percentage labels are always rounded to one 
decimal place, and do not adhere to :ref:`Number Formatting 
<customize-number-formats>` settings.

.. include:: /includes/customization/show-value-or-percentage-labels.rst

Examples
--------

Donut Chart Using Count
~~~~~~~~~~~~~~~~~~~~~~~

The following chart visualizes sales data from a mock office supply
store. Each document in the collection represents an individual sale,
which contains information on the item(s) sold and the customer
conducting the purchase. This donut chart shows the proportional
counts of the three different purchase methods the store provides:

.. figure:: /images/charts/donut-chart-store-example.png
   :figwidth: 750px
   :alt: Donut Chart Using Count Example

The :guilabel:`Label` field of ``purchaseMethod`` tells |charts| to
create a circle segment for each unique value in the ``purchaseMethod``
field. |charts| proportions each segment according to the aggregated
value signified in the :guilabel:`Arc` encoding channel. In this case,
we aggregate to find the total :guilabel:`count` of documents with the
same ``purchaseMethod`` value.

We see based on the visualization that the most common purchase method
is ``In store``, followed by ``Online``.

.. note::

   In this example we are counting entire documents, so it does not
   matter what field we select for the :guilabel:`Arc` field. No
   matter what field we apply, the visualization will still be
   the same.

Donut Chart Using Sum
~~~~~~~~~~~~~~~~~~~~~

The following chart visualizes personal workout data. Each document in
the collection represents a single workout activity, which includes
information on the type of activity performed and the amount of time
spent exercising. This donut chart shows the proportional time spent
performing each exercise activity:

.. figure:: /images/charts/donut-chart-workout-example.png
   :figwidth: 750px
   :alt: Donut Chart Using Sum Example

The :guilabel:`Label` field of ``Activity Type`` tells |charts| to
create a circle segment for each unique value in the ``Activity Type``
field. |charts| proportions each segment according to the aggregated
value signified in the :guilabel:`Arc` encoding channel. In this case,
we aggregate to find the total :guilabel:`sum` of workout times for
documents with the same ``Activity Type`` value.

We see based on the visualization that the activity with the greatest
total workout time is ``Surf``, followed by ``Bike Ride``.

Donut Chart Using Multiple Arc Fields
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following chart vizualizes rental property data. Each
document in the collection represents a single rental property, which
includes information on prices. This donut chart shows the average price
of all properties in the collection for a daily, weekly, and monthly
rental:

.. figure:: /images/charts/donut-chart-airbnb-example.png
   :figwidth: 750px
   :alt: Donut Chart Multiple Arc Fields Example

Because there is no :guilabel:`Label` field, |charts| creates a circle
segment for each :guilabel:`Arc` field. |charts| proportions each
segment according to the aggregated value signified in the
:guilabel:`Arc` encoding channel. In this case, we aggregate the
:guilabel:`mean` price for all properties rented by the day, week, and
month.

Limitations
-----------

The maximum query response size for a donut chart is 5000 documents. 
