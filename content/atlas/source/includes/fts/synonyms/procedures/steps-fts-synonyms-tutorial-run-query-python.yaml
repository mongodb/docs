stepnum: 1
title: "Run simple |fts| queries on the ``movies`` collection."
ref: run-simple-query-python
content: |
  These code examples perform the following tasks:

  - Imports ``pymongo``, MongoDB's Python driver, and the ``dns`` 
    module, which is required to connect ``pymongo`` to ``Atlas`` using 
    a |dns| seed list connection string. 
  - Creates an instance of the ``MongoClient`` class to establish a 
    connection to your |service| cluster.
  - Iterates over the cursor to print the documents that match the  
    query.

  |fts| query results vary based on the type of word mapping defined in 
  the synonyms source collection. 

  .. tabs:: 

     .. tab:: equivalent Mapping Type
        :tabid: equivalent

        a. Create a file named ``synonyms-equivalent-query.py``. 
        #. Copy and paste the code example into the 
           ``synonyms-equivalent.py`` file.

           The code example contains the following stages:
           
           - :pipeline:`$search` stage to search the ``title`` field 
             for the word ``automobile`` and uses the synonym mapping 
             definition named ``transportSynonyms`` to search for words 
             configured as synonyms of the query word ``automobile`` in 
             the synonyms source collection named 
             ``transport_synonyms``. 
           - :pipeline:`$limit` stage to limit the output to 10 
             results 
           - :pipeline:`$project` stage to exclude all fields except 
             ``title`` and add a field named ``score``

           .. literalinclude:: /includes/fts/synonyms/synonyms-equivalent-query.py
              :language: python
              :linenos:
              :dedent:
              :emphasize-lines: 4

        #. Before you run the sample, replace ``<connection-string>`` 
           with your |service| connection string. Ensure that your 
           connection string includes your database user's credentials.

        #. Run the following command to query your collection:

           .. io-code-block::
              :copyable: true

              .. input::
                 :language: bash

                 python synonyms-equivalent-query.py

              .. output::
                 :language: python
                 :visible: true

                 {'title': 'Cars', 'score': 4.197734832763672}
                 {'title': 'Planes, Trains & Automobiles', 'score': 3.8511905670166016}
                 {'title': 'Car Wash', 'score': 3.39473032951355}
                 {'title': 'Used Cars', 'score': 3.39473032951355}
                 {'title': 'Blue Car', 'score': 3.39473032951355}
                 {'title': 'Cars 2', 'score': 3.39473032951355}
                 {'title': 'Stealing Cars', 'score': 3.39473032951355}
                 {'title': 'Cop Car', 'score': 3.39473032951355}
                 {'title': 'The Cars That Eat People', 'score': 2.8496146202087402}
                 {'title': 'Khrustalyov, My Car!', 'score': 2.8496146202087402}

           .. include:: /includes/fts/extracts/fts-synonyms-tutorial-equivalent-query-output.rst

     .. tab:: explicit Mapping Type
        :tabid: explicit

        a. Create a file named ``synonyms-explicit-query.py``. 
        #. Copy and paste the code example into the 
           ``synonyms-explicit.py`` file.

           The code example contains the following stages:
           
           - :pipeline:`$search` stage to search the ``title`` field 
             for the word ``boat`` and uses the synonym mapping 
             definition named ``transportSynonyms`` to search for words 
             configured as synonyms of the query word ``boat`` in the 
             synonyms source collection named ``transport_synonyms``. 
           - :pipeline:`$limit` stage to limit the output to 10 
             results.
           - :pipeline:`$project` stage to exclude all fields except 
             ``title`` and add a field named ``score``.

           .. literalinclude:: /includes/fts/synonyms/synonyms-explicit-query.py
              :language: python
              :linenos:
              :dedent:
              :emphasize-lines: 4

        #. Before you run the sample, replace ``<connection-string>`` 
           with your |service| connection string. Ensure that your 
           connection string includes your database user's credentials.

        #. Run the following command to query your collection:

           .. io-code-block::
              :copyable: true

              .. input::
                 :language: bash

                 python synonyms-explicit-query.py

              .. output::
                 :language: python
                 :visible: true

                 {'title': 'Vessel', 'score': 5.373150825500488}
                 {'title': 'Boats', 'score': 4.589139938354492}
                 {'title': 'And the Ship Sails On', 'score': 4.3452959060668945}
                 {'title': 'Broken Vessels', 'score': 4.3452959060668945}
                 {'title': 'Sailing to Paradise', 'score': 4.3452959060668945}
                 {'title': 'Boat People', 'score': 3.711261749267578}
                 {'title': 'Boat Trip', 'score': 3.711261749267578}
                 {'title': 'Three Men in a Boat', 'score': 3.1153182983398438}
                 {'title': 'The Glass Bottom Boat', 'score': 3.1153182983398438}
                 {'title': 'Jack Goes Boating', 'score': 3.1153182983398438}

           .. include:: /includes/fts/extracts/fts-synonyms-tutorial-explicit-query-output.rst

---
stepnum: 2
title: "Run advanced |fts| queries if you created the index with 
       multiple synonym mappings."
ref: run-advanced-query-python
content: |
  These code examples perform the following tasks:

  - Imports ``pymongo``, MongoDB's Python driver, and the ``dns`` 
    module, which is required to connect ``pymongo`` to ``Atlas`` using 
    a |dns| seed list connection string. 
  - Creates an instance of the ``MongoClient`` class to establish a 
    connection to your |service| cluster.
  - Iterates over the cursor to print the documents that match the  
    query.

  |fts| query results vary based on the type of word mapping defined in 
  the synonyms source collection. 

  .. tabs:: 

     .. tab:: equivalent Mapping Type
        :tabid: equivalent

        a. Create a file named ``synonyms-equivalent-query.py``. 
        #. Copy and paste the code example into the 
           ``synonyms-equivalent.py`` file.

           The code example contains the following stages:
           
           - :pipeline:`$search` stage to search the ``title`` field 
             for the word ``automobile`` and uses the synonym mapping 
             definition named ``transportSynonyms`` to search for words 
             configured as synonyms of the query word ``automobile`` in 
             the synonyms source collection named 
             ``transport_synonyms``. The query searches the ``title`` 
             field for the word ``attire`` also and  uses the synonym 
             mapping definition named ``attireSynonyms`` to search for 
             words configured as synonyms of the query word ``attire`` 
             in the synonyms source collection named 
             ``attire_synonyms``. 
           - :pipeline:`$limit` stage to limit the output to 10 
             results.
           - :pipeline:`$project` stage to exclude all fields except 
             ``title`` and add a field named ``score``.

           .. literalinclude:: /includes/fts/synonyms/equivalent-advanced-query.py
              :language: python
              :linenos:
              :dedent:
              :emphasize-lines: 4

        #. Before you run the sample, replace ``<connection-string>`` 
           with your |service| connection string. Ensure that your 
           connection string includes your database user's 
           credentials.

        #. Run the following command to query your collection:

           .. io-code-block::
              :copyable: true

              .. input::
                 :language: bash

                 python synonyms-equivalent-query.py

              .. output:: /includes/fts/synonyms/equivalent-advanced-python-query-results.json
                 :language: json
                 :visible: true

           .. include:: /includes/fts/extracts/fts-synonyms-tutorial-equivalent-advanced-query-output.rst

     .. tab:: explicit Mapping Type
        :tabid: explicit

        a. Create a file named ``synonyms-explicit-query.py``. 
        #. Copy and paste the code example into the 
           ``synonyms-explicit.py`` file.

           The code example contains the following stages:
           
           - :pipeline:`$search` stage to search the ``title`` field 
             for the word ``boat`` and uses the synonym mapping 
             definition named ``transportSynonyms`` to search for words 
             configured as synonyms of the query word ``boat`` in the 
             synonyms source collection named ``transport_synonyms``. 
             The query searches the ``title`` field for the word 
             ``hat`` also and uses the synonym mapping definition named 
             ``attireSynonyms`` to search for words configured as 
             synonyms of the query word ``hat`` in the synonyms source 
             collection named ``attire_synonyms``. 
           - :pipeline:`$limit` stage to limit the output to 10 
             results. 
           - :pipeline:`$project` stage to exclude all fields except 
             ``title`` and add a field named ``score``.

           .. literalinclude:: /includes/fts/synonyms/explicit-advanced-query.py
              :language: python
              :linenos:
              :dedent:
              :emphasize-lines: 4

        #. Before you run the sample, replace ``<connection-string>`` 
           with your |service| connection string. Ensure that your connection string includes your database user's credentials.

        #. Run the following command to query your collection:

           .. io-code-block::
              :copyable: true

              .. input::
                 :language: bash

                 python synonyms-explicit-query.py

              .. output:: /includes/fts/synonyms/explicit-advanced-python-query-results.json
                 :language: json
                 :visible: true

           .. include:: /includes/fts/extracts/fts-synonyms-tutorial-explicit-advanced-query-output.rst
...
