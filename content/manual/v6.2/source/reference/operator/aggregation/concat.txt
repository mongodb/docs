=====================
$concat (aggregation)
=====================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. expression:: $concat

   Concatenates strings and returns the concatenated string.

   :expression:`$concat` has the following syntax:

   .. code-block:: javascript

        { $concat: [ <expression1>, <expression2>, ... ] }

   The arguments can be any valid :ref:`expression
   <aggregation-expressions>` as long as they resolve to
   strings. For more information on expressions, see
   :ref:`aggregation-expressions`.

   If the argument resolves to a value of ``null`` or refers to a field
   that is missing, :expression:`$concat` returns ``null``.

Examples
--------

Consider a ``inventory`` collection with the following documents:

.. code-block:: javascript

   { "_id" : 1, "item" : "ABC1", quarter: "13Q1", "description" : "product 1" }
   { "_id" : 2, "item" : "ABC2", quarter: "13Q4", "description" : "product 2" }
   { "_id" : 3, "item" : "XYZ1", quarter: "14Q2", "description" : null }

The following operation uses the :expression:`$concat` operator to
concatenate the ``item`` field and the ``description`` field with a
" - " delimiter.

.. code-block:: javascript

   db.inventory.aggregate(
      [
         { $project: { itemDescription: { $concat: [ "$item", " - ", "$description" ] } } }
      ]
   )

The operation returns the following results:

.. code-block:: javascript

   { "_id" : 1, "itemDescription" : "ABC1 - product 1" }
   { "_id" : 2, "itemDescription" : "ABC2 - product 2" }
   { "_id" : 3, "itemDescription" : null }
