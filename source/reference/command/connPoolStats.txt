=============
connPoolStats
=============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. dbcommand:: connPoolStats

   The command :dbcommand:`connPoolStats` returns information
   regarding the open outgoing connections from the current database
   instance to other members of the :term:`sharded cluster` or 
   :term:`replica set`.
   
   .. include:: /includes/fact-dbcommand.rst
   
   .. |command| replace:: ``connPoolStats``

   .. include:: /includes/note-conn-pool-stats.rst

   The command takes the following form:

   .. code-block:: javascript

      { connPoolStats: 1 }

   The value of the argument (i.e. ``1`` ) does not affect the
   output of the command.
   
Behavior
--------

A :program:`mongod` or :program:`mongos` has a number of connection 
pools used for outgoing connections to members in a :term:`sharded cluster` or 
:term:`replica set`. 
:dbcommand:`connPoolStats` returns aggregated statistics related to all 
of the outgoing connection pools used by the :program:`mongod` or 
:program:`mongo` running the command.

Example
-------

The following operation uses the :method:`db.runCommand()` method to 
run the :dbcommand:`connPoolStats` command.

.. code-block:: javascript

   db.runCommand( { "connPoolStats" : 1 } )

Output
------

The following output is a sample of what :dbcommand:`connPoolStats` returns. 
It represents a :term:`sharded cluster` with 3 single-member 
:term:`replica set` shards and a config server replica set. 

.. note:: 
   This example does not represent all possible 
   output data from the :dbcommand:`connPoolStats` command. 

.. code-block:: javascript

   {
      "numClientConnections" : <num>,
      "numAScopedConnections" : <num>,
      "totalInUse" : <num>,
      "totalAvailable" : <num>,
      "totalCreated" : <num>,
      "hosts" : {
         "cfg1.example.net:27800" : {
            "inUse" : <num>,
            "available" : <num>,
            "created" : <num>
         },
         "cfg2.example.net:27800" : {
            "inUse" : <num>,
            "available" : <num>,
            "created" : <num>
         },
         "cfg3.example.net:27800" : {
            "inUse" : <num>,
            "available" : <num>,
            "created" : <num>
         },
         "shard1.example.net:27100" : {
            "inUse" : <num>,
            "available" : <num>,
            "created" : <num>
         },
         "shard2.example.net:27200" : {
            "inUse" : <num>,
            "available" : <num>,
            "created" : <num>
         },
         "shard3.example.net:27300" : {
            "inUse" : <num>,
            "available" : <num>,
            "created" : <num>
         }
      },
      "replicaSets" : {
         "cfgReplSet" : {
            "hosts" : [
               {
                  "addr" : "cfg1.example.net:27800",
                  "ok" : <bool>,
                  "ismaster" : <bool>,
                  "hidden" : <bool>,
                  "secondary" : <bool>,
                  "pingTimeMillis" : <num>
               },
               {
                  "addr" : "cfg2.example.net:27800",
                  "ok" : <bool>,
                  "ismaster" : <bool>,
                  "hidden" : <bool>,
                  "secondary" : <bool>,
                  "pingTimeMillis" : <num>
               },
               {
                  "addr" : "cfg3.example.net:27800",
                  "ok" : <bool>,
                  "ismaster" : <bool>,
                  "hidden" : <bool>,
                  "secondary" : <bool>,
                  "pingTimeMillis" : <num>
               },
            ]
         },
         "shard1" : {
            "hosts" : [
               {
                  "addr" : "shard1.example.net:27100",
                  "ok" : <bool>,
                  "ismaster" : <bool>,
                  "hidden" : <bool>,
                  "secondary" : <bool>,
                  "pingTimeMillis" : <num>
               }
            ]
         },
         "shard2" : {
            "hosts" : [
               {
                  "addr" : "shard2.example.net:27200",
                  "ok" : <bool>,
                  "ismaster" : <bool>,
                  "hidden" : <bool>,
                  "secondary" : <bool>,
                  "pingTimeMillis" : <num>
               }
            ]
         },
         "shard3" : {
            "hosts" : [
               {
                  "addr" : "shard3.example.net:27300",
                  "ok" : <bool>,
                  "ismaster" : <bool>,
                  "hidden" : <bool>,
                  "secondary" : <bool>,
                  "pingTimeMillis" : <num>
               }
            ]
         }
      },
      "ok" : 1
   }


Output
------

.. data:: connPoolStats.totalAvailable

   Reports the total number of available outgoing connections from the 
   current :program:`mongod`/:program:`mongos` instance to other members
   of the :term:`sharded cluster` or :term:`replica set`.

.. data:: connPoolStats.totalCreated

   Reports the total number of outgoing connections ever created by the
   current :program:`mongod`/:program:`mongos` instance to other members
   of the :term:`sharded cluster` or :term:`replica set`.
   
.. data:: connPoolStats.totalInUse

   Reports the total number of outgoing connections from the current
   :program:`mongod`/:program:`mongos` instance to other members of the
   :term:`sharded cluster` or :term:`replica set` that are currently in use.

.. data:: connPoolStats.numClientConnection

   Reports the number of active and stored outgoing **synchronous**
   connections from the current :program:`mongod`/:program:`mongos` instance
   to other members of the :term:`sharded cluster` or :term:`replica set`.
   
   These connections are a part of a pool that is a subset of the data 
   reported by :data:`~connPoolStats.totalAvailable`, 
   :data:`~connPoolStats.totalCreated`, and :data:`~connPoolStats.totalInUse`.

.. data:: connPoolStats.numAScopedConnection

   Reports the number of active and stored outgoing **scoped
   synchronous** connections from the current
   :program:`mongod`/:program:`mongos` instance to other members of the
   :term:`sharded cluster` or :term:`replica set`.
   
   These connections are a part of a pool that is a subset of the data 
   reported by :data:`~connPoolStats.totalAvailable`, 
   :data:`~connPoolStats.totalCreated`, and :data:`~connPoolStats.totalInUse`.

.. data:: connPoolStats.hosts

   Contains :term:`documents<document>` that represent a report of connections
   between the current :program:`mongod`/:program:`mongos` instance and
   each member of the :term:`sharded cluster` or :term:`replica set`.

   .. data:: connPoolStats.hosts.[host].available

      Reports the total number of connections available for connecting 
      to the ``[host]``.

   .. data:: connPoolStats.hosts.[host].created

      Reports the number of connections to the ``[host]``  ever created.
      
   .. data:: connPoolStats.hosts.[host].inUse
   
      Reports the number of connections to the ``[host]``
      that are currently in use.

.. data:: connPoolStats.replicaSets

   Contains :term:`documents <document>` that represent a report of 
   information related to each replica set connected to the current
   :program:`mongod`/:program:`mongos`.

   .. data:: connPoolStats.replicaSets.replicaSet

      Reports on each :term:`replica set` connected to the 
      current :program:`mongod`/:program:`mongos`.

   .. data:: connPoolStats.replicaSets.[replicaSets].hosts

      Holds an array of :term:`documents<document>` that reports on each 
      member in the :term:`replica set`.

      These values derive from the :doc:`replica set status
      </reference/command/replSetGetStatus>` values.

      .. data:: connPoolStats.replicaSets.[replicaSet].hosts[n].addr

         Reports the address for the member in the :term:`replica set` 
         in ``[hostname]:[port]`` format.

      .. data:: connPoolStats.replicaSets.[replicaSet].hosts[n].ok

         Reports ``false`` when:

         - the current :program:`mongos` or :program:`mongod` cannot connect
           to instance.

         - the current :program:`mongos` or :program:`mongod` received a
           connection exception or error.

         This field is for internal use.

      .. data:: connPoolStats.replicaSets.[replicaSet].hosts[n].ismaster

         Reports ``true`` if this 
         :data:`~connPoolStats.replicaSets.[replicaSet].host` is the
         :term:`primary` member of the :term:`replica set`.

      .. data:: connPoolStats.replicaSets.[replicaSet].hosts[n].hidden

         Reports ``true`` if this 
         :data:`~connPoolStats.replicaSets.[replicaSet].host` is a 
         :term:`hidden member` of the :term:`replica set`.

      .. data:: connPoolStats.replicaSets.[replicaSet].hosts[n].secondary

         Reports ``true`` if this 
         :data:`~connPoolStats.replicaSets.[replicaSet].host` is a
         :term:`secondary` member of the :term:`replica set`.

      .. data:: connPoolStats.replicaSets.[replicaSet].hosts[n].pingTimeMillis

         Reports the ping time in milliseconds from the :program:`mongos` or
         :program:`mongod` to this 
         :data:`~connPoolStats.replicaSets.[replicaSet].host`.

      .. data:: connPoolStats.replicaSets.[replicaSet].hosts[n].tags

         Reports the :rsconf:`members[n].tags`, if this member of the set has
         tags configured.
