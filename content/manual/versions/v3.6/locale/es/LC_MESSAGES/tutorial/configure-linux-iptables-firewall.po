# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: 2014-04-08 16:31+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/tutorial/configure-linux-iptables-firewall.txt:3
msgid "Configure Linux ``iptables`` Firewall for MongoDB"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:13
msgid ""
"On contemporary Linux systems, the ``iptables`` program provides methods "
"for managing the Linux Kernel's ``netfilter`` or network packet filtering"
" capabilities. These firewall rules make it possible for administrators "
"to control what hosts can connect to the system, and limit risk exposure "
"by limiting the hosts that can connect to a system."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:20
msgid ""
"This document outlines basic firewall configurations for ``iptables`` "
"firewalls on Linux. Use these approaches as a starting point for your "
"larger networking organization. For a detailed overview of security "
"practices and risk management for MongoDB, see :doc:`/security`."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:25
msgid ""
"For MongoDB deployments on Amazon's web services, see the "
":ecosystem:`Amazon EC2 </platforms/amazon-ec2>` page, which addresses "
"Amazon's Security Groups and other EC2-specific security features."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:30
msgid "Overview"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:32
msgid ""
"Rules in ``iptables`` configurations fall into chains, which describe the"
" process for filtering and processing specific streams of traffic. Chains"
" have an order, and packets must pass through earlier rules in a chain to"
" reach later rules. This document addresses only the following two "
"chains:"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:39
msgid "``INPUT``"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:39
msgid "Controls all incoming traffic."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:42
msgid "``OUTPUT``"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:42
msgid "Controls all outgoing traffic."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:44
msgid ""
"Given the :doc:`default ports </reference/default-mongodb-port>` of all "
"MongoDB processes, you must configure networking rules that permit *only*"
" required communication between your application and the appropriate "
":binary:`~bin.mongod` and :binary:`~bin.mongos` instances."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:49
msgid ""
"Be aware that, by default, the default policy of ``iptables`` is to allow"
" all connections and traffic unless explicitly disabled. The "
"configuration changes outlined in this document will create rules that "
"explicitly allow traffic from specific addresses and on specific ports, "
"using a default policy that drops all traffic that is not explicitly "
"allowed. When you have properly configured your ``iptables`` rules to "
"allow only the traffic that you want to permit, you can :ref:`iptables-"
"change-default-policy-to-drop`."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:59
msgid "Patterns"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:61
msgid ""
"This section contains a number of patterns and examples for configuring "
"``iptables`` for use with MongoDB deployments. If you have configured "
"different ports using the :setting:`~net.port` configuration setting, you"
" will need to modify the rules accordingly."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:69
msgid "Traffic to and from ``mongod`` Instances"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:71
msgid ""
"This pattern is applicable to all :binary:`~bin.mongod` instances running"
" as standalone instances or as part of a :term:`replica set`."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:74
msgid ""
"The goal of this pattern is to explicitly allow traffic to the "
":binary:`~bin.mongod` instance from the application server. In the "
"following examples, replace ``<ip-address>`` with the IP address of the "
"application server:"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:84
msgid ""
"The first rule allows all incoming traffic from ``<ip-address>`` on port "
"``27017``, which allows the application server to connect to the "
":binary:`~bin.mongod` instance. The second rule, allows outgoing traffic "
"from the :binary:`~bin.mongod` to reach the application server."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:91
msgid ""
"If you have only one application server, you can replace ``<ip-address>``"
" with either the IP address itself, such as: ``198.51.100.55``. You can "
"also express this using CIDR notation as ``198.51.100.55/32``. If you "
"want to permit a larger block of possible IP addresses you can allow "
"traffic from a ``/24`` using one of the following specifications for the "
"``<ip-address>``, as follows:"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:105
msgid "Traffic to and from ``mongos`` Instances"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:107
msgid ""
":binary:`~bin.mongos` instances provide query routing for :term:`sharded "
"clusters <sharded cluster>`. Clients connect to :binary:`~bin.mongos` "
"instances, which behave from the client's perspective as "
":binary:`~bin.mongod` instances. In turn, the :binary:`~bin.mongos` "
"connects to all :binary:`~bin.mongod` instances that are components of "
"the sharded cluster."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:114
msgid ""
"Use the same ``iptables`` command to allow traffic to and from these "
"instances as you would from the :binary:`~bin.mongod` instances that are "
"members of the replica set. Take the configuration outlined in the :ref"
":`iptables-basic-rule-set` section as an example."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:120
msgid "Traffic to and from a MongoDB Config Server"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:122
msgid ""
"Config servers host the :term:`config database` that stores metadata for "
"sharded clusters. Config servers listen for connections on port "
"``27019``. As a result, add the following ``iptables`` rules to the "
"config server to allow incoming and outgoing connection on port "
"``27019``, for connection to the other config servers."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:133
msgid ""
"Replace ``<ip-address>`` with the address or address space of *all* the "
":binary:`~bin.mongod` that provide config servers."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:136
msgid ""
"Additionally, config servers need to allow incoming connections from all "
"of the :binary:`~bin.mongos` instances in the cluster *and* all "
":binary:`~bin.mongod` instances in the cluster. Add rules that resemble "
"the following:"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:145
msgid ""
"Replace ``<ip-address>`` with the address of the :binary:`~bin.mongos` "
"instances and the shard :binary:`~bin.mongod` instances."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:150
msgid "Traffic to and from a MongoDB Shard Server"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:152
msgid ""
":ref:`Shard servers <sharding-background>` default to port number "
"``27018``. You must configure the following ``iptables`` rules to allow "
"traffic to and from each shard:"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:161
msgid ""
"Replace the ``<ip-address>`` specification with the IP address of all "
":binary:`~bin.mongod`. This allows you to permit incoming and outgoing "
"traffic between all shards including constituent replica set members, to:"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:166
msgid "all :binary:`~bin.mongod` instances in the shard's replica sets."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:168
msgid "all :binary:`~bin.mongod` instances in other shards. [#migrations]_"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:170
msgid "Furthermore, shards need to be able make outgoing connections to:"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:172
msgid "all :binary:`~bin.mongod` instances in the config servers."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:174
msgid ""
"Create a rule that resembles the following, and replace the ``<ip-"
"address>`` with the address of the config servers and the "
":binary:`~bin.mongos` instances:"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:182
msgid ""
"All shards in a cluster need to be able to communicate with all other "
"shards to facilitate :term:`chunk` and balancing operations."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:187
msgid "Provide Access For Monitoring Systems"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:189
msgid ""
"The :binary:`~bin.mongostat` diagnostic tool, when running with the "
":option:`--discover <mongostat --discover>` needs to be able to reach all"
" components of a cluster, including the config servers, the shard "
"servers, and the :binary:`~bin.mongos` instances."
msgstr ""

#: ../source/includes/fact-deprecated-http-interface.rst:3
msgid "MongoDB 3.6 removes the deprecated HTTP interface and REST API to MongoDB."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:199
msgid "Change Default Policy to ``DROP``"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:201
msgid ""
"The default policy for ``iptables`` chains is to allow all traffic. After"
" completing all ``iptables`` configuration changes, you *must* change the"
" default policy to ``DROP`` so that all traffic that isn't explicitly "
"allowed as above will not be able to reach components of the MongoDB "
"deployment. Issue the following commands to change this policy:"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:215
msgid "Manage and Maintain ``iptables`` Configuration"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:217
msgid ""
"This section contains a number of basic operations for managing and using"
" ``iptables``. There are various front end tools that automate some "
"aspects of ``iptables`` configuration, but at the core all ``iptables`` "
"front ends provide the same basic functionality:"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:225
msgid "Make all ``iptables`` Rules Persistent"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:227
msgid ""
"By default all ``iptables`` rules are only stored in memory. When your "
"system restarts, your firewall rules will revert to their defaults. When "
"you have tested a rule set and have guaranteed that it effectively "
"controls traffic you can use the following operations to you should make "
"the rule set persistent."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:233
msgid ""
"On Red Hat Enterprise Linux, Fedora Linux, and related distributions you "
"can issue the following command:"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:240
msgid ""
"On Debian, Ubuntu, and related distributions, you can use the following "
"command to dump the ``iptables`` rules to the ``/etc/iptables.conf`` "
"file:"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:248
msgid "Run the following operation to restore the network rules:"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:254
msgid ""
"Place this command in your ``rc.local`` file, or in the ``/etc/network"
"/if-up.d/iptables`` file with other similar operations."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:258
msgid "List all ``iptables`` Rules"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:260
msgid ""
"To list all of currently applied ``iptables`` rules, use the following "
"operation at the system shell."
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:268
msgid "Flush all ``iptables`` Rules"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:270
msgid ""
"If you make a configuration mistake when entering ``iptables`` rules or "
"simply need to revert to the default rule set, you can use the following "
"operation at the system shell to flush all rules:"
msgstr ""

#: ../source/tutorial/configure-linux-iptables-firewall.txt:278
msgid ""
"If you've already made your ``iptables`` rules persistent, you will need "
"to repeat the appropriate procedure in the :ref:`iptables-make-all-rules-"
"persistent` section."
msgstr ""

#~ msgid ""
#~ "You can also run a config server"
#~ " by setting the :setting:`configsvr` option"
#~ " in a configuration file."
#~ msgstr ""

#~ msgid ""
#~ "For shard servers, running as "
#~ ":option:`mongod --shardsvr` [#shard-option]_ "
#~ "Because the default port number when "
#~ "running with :setting:`shardsvr` is ``27018``,"
#~ "  you must configure the following "
#~ "``iptables`` rules to allow traffic to"
#~ " and from each shard:"
#~ msgstr ""

#~ msgid ""
#~ "You can also specify the shard "
#~ "server option using the :setting:`shardsvr`"
#~ " setting in the configuration file. "
#~ "Shard members are also often "
#~ "conventional replica sets using the "
#~ "default port."
#~ msgstr ""

#~ msgid ""
#~ "For shard server :program:`mongod` instances"
#~ " running with :setting:`shardsvr`, the rule"
#~ " would resemble the following:"
#~ msgstr ""

#~ msgid ""
#~ "For config server :program:`mongod` instances"
#~ " running with :setting:`configsvr`, the "
#~ "rule would resemble the following:"
#~ msgstr ""

# a0a03fb6b9804ab78a7180a08dbcffec
#~ msgid ""
#~ "This document outlines basic firewall "
#~ "configurations for ``iptables`` firewalls on"
#~ " Linux. Use these approaches as a "
#~ "starting point for your larger "
#~ "networking organization. For a detailed "
#~ "overview of security practices and risk"
#~ " management for MongoDB, see "
#~ ":doc:`/core/security`."
#~ msgstr ""

# 413e814220a84949a8d8c8fd40dc9b6b
#~ msgid ""
#~ "Given the :ref:`default ports <security-"
#~ "port-numbers>` of all MongoDB processes,"
#~ " you must configure networking rules "
#~ "that permit *only* required communication "
#~ "between your application and the "
#~ "appropriate :program:`mongod` and :program:`mongos`"
#~ " instances."
#~ msgstr ""

# edbed5cfecd9421bb864881eac21805a
#~ msgid ""
#~ "This pattern is applicable to all "
#~ ":program:`mongod` instances running as "
#~ "standalone instances or as part of "
#~ "a :term:`replica set`."
#~ msgstr ""

# f02c7634355e463a88e97232d3777cb5
#~ msgid ""
#~ "The goal of this pattern is to "
#~ "explicitly allow traffic to the "
#~ ":program:`mongod` instance from the "
#~ "application server. In the following "
#~ "examples, replace ``<ip-address>`` with "
#~ "the IP address of the application "
#~ "server:"
#~ msgstr ""

# 6a38ebb0087443659890a698c6519ab8
#~ msgid ""
#~ "The first rule allows all incoming "
#~ "traffic from ``<ip-address>`` on port"
#~ " ``27017``, which allows the application"
#~ " server to connect to the "
#~ ":program:`mongod` instance. The second rule,"
#~ " allows outgoing traffic from the "
#~ ":program:`mongod` to reach the application "
#~ "server."
#~ msgstr ""

# 1403d5d9b6cf4affb5bbe5ba74e53a3c
# 8571d0698b8a4a97be37e1b4953966f4
#~ msgid "Optional"
#~ msgstr ""

# 6b6762f6f3f34f10a4fc092c7613b5c0
#~ msgid ""
#~ ":program:`mongos` instances provide query "
#~ "routing for :term:`sharded clusters <sharded"
#~ " cluster>`. Clients connect to "
#~ ":program:`mongos` instances, which behave from"
#~ " the client's perspective as "
#~ ":program:`mongod` instances. In turn, the "
#~ ":program:`mongos` connects to all "
#~ ":program:`mongod` instances that are "
#~ "components of the sharded cluster."
#~ msgstr ""

# 1e1d236aa17d4dcbb68cfdf9b257dafc
#~ msgid ""
#~ "Use the same ``iptables`` command to "
#~ "allow traffic to and from these "
#~ "instances as you would from the "
#~ ":program:`mongod` instances that are members"
#~ " of the replica set. Take the "
#~ "configuration outlined in the :ref"
#~ ":`iptables-basic-rule-set` section as "
#~ "an example."
#~ msgstr ""

# 803e53048a764a6286d30c95ef318b60
#~ msgid ""
#~ "Config servers, host the :term:`config "
#~ "database` that stores metadata for "
#~ "sharded clusters. Each production cluster "
#~ "has three config servers, initiated "
#~ "using the :option:`mongod --configsvr` option."
#~ " [#config-option]_ Config servers listen"
#~ " for connections on port ``27019``. "
#~ "As a result, add the following "
#~ "``iptables`` rules to the config server"
#~ " to allow incoming and outgoing "
#~ "connection on port ``27019``, for "
#~ "connection to the other config servers."
#~ msgstr ""

# 29a5f87edb7a472686aaf02864f8e129
#~ msgid ""
#~ "Replace ``<ip-address>`` with the "
#~ "address or address space of *all* "
#~ "the :program:`mongod` that provide config "
#~ "servers."
#~ msgstr ""

# 5bb642d6e1514ccd904a34ed4f34d54c
#~ msgid ""
#~ "Additionally, config servers need to "
#~ "allow incoming connections from all of"
#~ " the :program:`mongos` instances in the "
#~ "cluster *and* all :program:`mongod` instances"
#~ " in the cluster. Add rules that "
#~ "resemble the following:"
#~ msgstr ""

# 1f0a57ab1b4944b294830c87842b06ba
#~ msgid ""
#~ "Replace ``<ip-address>`` with the "
#~ "address of the :program:`mongos` instances "
#~ "and the shard :program:`mongod` instances."
#~ msgstr ""

# cfd72695e72c461183371d25dbace6dd
#~ msgid ""
#~ "Replace the ``<ip-address>`` specification "
#~ "with the IP address of all "
#~ ":program:`mongod`. This allows you to "
#~ "permit incoming and outgoing traffic "
#~ "between all shards including constituent "
#~ "replica set members, to:"
#~ msgstr ""

# fb5a33933dca41eb8409108490ef9f15
#~ msgid "all :program:`mongod` instances in the shard's replica sets."
#~ msgstr ""

# f187c0ea4e4148f0b1877a346e569d0a
#~ msgid "all :program:`mongod` instances in other shards. [#migrations]_"
#~ msgstr ""

# e39ff5574aa1404da0bacdb06a905153
#~ msgid "all :program:`mongos` instances."
#~ msgstr ""

# 819e98fb364a466e9b24d3d46fc27ce1
#~ msgid "all :program:`mongod` instances in the config servers."
#~ msgstr ""

# 6a326ea7805c48feb91ff0b77dcf9177
#~ msgid ""
#~ "Create a rule that resembles the "
#~ "following, and replace the ``<ip-"
#~ "address>`` with the address of the "
#~ "config servers and the :program:`mongos` "
#~ "instances:"
#~ msgstr ""

# 8d0b68efaae245e5bee85c48796106bd
#~ msgid ""
#~ "The :program:`mongostat` diagnostic tool, when"
#~ " running with the :option:`--discover "
#~ "<mongostat --discover>` needs to be able"
#~ " to reach all components of a "
#~ "cluster, including the config servers, "
#~ "the shard servers, and the "
#~ ":program:`mongos` instances."
#~ msgstr ""

# 040192d38c5a4260ac8a183517e78d7f
#~ msgid ""
#~ "If your monitoring system needs access"
#~ " the HTTP interface, insert the "
#~ "following rule to the chain:"
#~ msgstr ""

# 271a6f9b16b644939b54d8d0f2f90641
#~ msgid ""
#~ "Replace ``<ip-address>`` with the "
#~ "address of the instance that needs "
#~ "access to the HTTP or REST "
#~ "interface. For *all* deployments, you "
#~ "should restrict access to this port "
#~ "to *only* the monitoring instance."
#~ msgstr ""

#~ msgid ""
#~ "You also can run a config server"
#~ " by using the ``configsvr`` value for"
#~ " the :setting:`~sharding.clusterRole` setting in"
#~ " a configuration file."
#~ msgstr ""

#~ msgid ""
#~ "For shard servers, running as "
#~ ":option:`mongod --shardsvr` [#shard-option]_ "
#~ "Because the default port number is "
#~ "``27018`` when running with the "
#~ "``shardsvr`` value for the "
#~ ":setting:`~sharding.clusterRole` setting, you must"
#~ " configure the following ``iptables`` rules"
#~ " to allow traffic to and from "
#~ "each shard:"
#~ msgstr ""

#~ msgid ""
#~ "You can also specify the shard "
#~ "server option with the ``shardsvr`` "
#~ "value for the :setting:`~sharding.clusterRole` "
#~ "setting in the configuration file. Shard"
#~ " members are also often conventional "
#~ "replica sets using the default port."
#~ msgstr ""

#~ msgid ""
#~ "For config server :program:`mongod` instances"
#~ " running with the ``shardsvr`` value "
#~ "for the :setting:`~sharding.clusterRole` setting,"
#~ " the rule would resemble the "
#~ "following:"
#~ msgstr ""

#~ msgid ""
#~ "For config server :program:`mongod` instances"
#~ " running with the ``configsvr`` value "
#~ "for the :setting:`~sharding.clusterRole` setting,"
#~ " the rule would resemble the "
#~ "following:"
#~ msgstr ""

