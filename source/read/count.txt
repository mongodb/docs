.. _scala-count:

===============
Count Documents
===============

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: number, amount, estimation, code example

Overview
--------

In this guide, you can learn how to use the {+driver-short+} to retrieve an accurate
and estimated count of the number of documents in a collection. The following methods
count documents in a collection:

- ``countDocuments()``: Returns the exact number of documents that match a
  query filter or that exist in a collection

- ``estimatedDocumentCount()``: Returns the estimated number of documents
  in a collection

Sample Data
~~~~~~~~~~~

The examples in this guide use the ``companies`` collection in the ``sample_training``
database from the :atlas:`Atlas sample datasets </sample-data>`. To access this collection
from your Scala application, create a ``MongoClient`` that connects to an Atlas cluster
and assign the following value to your ``database`` and ``collection`` variables:

.. literalinclude:: /includes/read/count.scala
    :language: scala
    :dedent:
    :start-after: start-db-coll
    :end-before: end-db-coll

To learn how to create a free MongoDB Atlas cluster and load the sample datasets, see the
:atlas:`Get Started with Atlas </getting-started>` guide.

.. _scala-accurate-count:

Retrieve an Accurate Count
--------------------------

Use the ``countDocuments()`` method to count the number of documents in a
collection. To count the number of documents that match specific search criteria,
pass a query filter to the ``countDocuments()`` method.

To learn more about specifying a query, see the :ref:`scala-specify-query` guide.

.. _scala-count-all:

Count All Documents
~~~~~~~~~~~~~~~~~~~

To return a count of all documents in the collection, call the ``countDocuments()``
method without passing any parameters, as shown in the following example:

.. io-code-block::
   :copyable:

   .. input:: /includes/read/count.scala
      :start-after: start-count-all
      :end-before: end-count-all
      :language: scala
      :dedent:

   .. output::
      :visible: false

      Number of documents: 9500

.. _scala-count-specific:

Count Specific Documents
~~~~~~~~~~~~~~~~~~~~~~~~

To return a count of documents that match specific search criteria, pass a query
filter to the ``countDocuments()`` method.

The following example counts the number of documents in which the value of the
``founded_year`` field is ``2010``:

.. io-code-block::
   :copyable:

   .. input:: /includes/read/count.scala
      :start-after: start-count-accurate
      :end-before: end-count-accurate
      :language: scala
      :dedent:

   .. output::
      :visible: false

      Number of companies founded in 2010: 33

Customize Count Behavior
~~~~~~~~~~~~~~~~~~~~~~~~

You can modify the behavior of the ``countDocuments()`` method by
passing a ``CountOptions`` instance as a parameter. The following table
describes some member functions of the ``CountOptions`` class, which you
can use to set options for the count operation:

.. list-table::
   :widths: 30 70
   :header-rows: 1

   * - Method
     - Description

   * - ``collation()``
     - | Sets the collation to use for the operation.
       | **Parameter Type**: ``Collation``

   * - ``hint()``
     - | Sets the index to use for the operation.
       | **ParameterType**: ``Bson``

   * - ``limit()``
     - | Sets the maximum number of documents to count. This value must be a positive integer.
       | **Parameter Type**: ``int``

   * - ``maxTime()``
     - | Sets the maximum amount of time that the operation can run.
       | **Parameter Types**: ``long`` and ``TimeUnit``

   * - ``skip()``
     - | Sets the number of documents to skip before counting documents.
       | **Parameter Type**: ``int``

The following example uses the ``countDocuments()`` method to count the number of
documents in which the ``number_of_employees`` field has the value ``50`` and instructs the
operation to count a maximum of ``100`` results:

.. io-code-block::
   :copyable:

   .. input:: /includes/read/count.scala
      :start-after: start-modify-accurate
      :end-before: end-modify-accurate
      :language: scala
      :dedent:

   .. output::
      :visible: false

      Number of companies with 50 employees: 100

.. _scala-estimated-count:

Retrieve an Estimated Count
---------------------------

You can retrieve an estimate of the number of documents in a collection by calling
the ``estimatedDocumentCount()`` method. The method estimates the amount of documents
based on collection metadata, which might be faster than performing an accurate count.

The following example estimates the number of documents in a collection:

.. io-code-block::
   :copyable:

   .. input:: /includes/read/count.scala
      :start-after: start-count-estimate
      :end-before: end-count-estimate
      :language: scala
      :dedent:

   .. output::
      :visible: false

      Estimated number of documents: 9500

Customize Estimated Count Behavior
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You can modify the behavior of the ``estimatedDocumentCount()`` method by
passing an ``EstimatedDocumentCountOptions`` instance as a parameter. The
``EstimatedDocumentCountOptions`` class includes the ``maxTime()`` member function,
which you can use to configure your ``EstimatedDocumentCountOptions`` object and
set the maximum time that the count operation can run.

The following example uses the ``estimatedDocumentCount()`` method to return an
estimate of the number of documents in the collection and sets a timeout of
``3`` seconds on the operation:

.. io-code-block::
   :copyable:

   .. input:: /includes/read/count.scala
      :start-after: start-modify-estimate
      :end-before: end-modify-estimate
      :language: scala
      :dedent:

   .. output::
      :visible: false

      Estimated number of documents: 9500

API Documentation
-----------------

To learn more about any of the methods or types discussed in this
guide, see the following API documentation:

- `countDocuments() <{+api+}/org/mongodb/scala/MongoCollection.html#countDocuments(filter:org.mongodb.scala.bson.conversions.Bson):org.mongodb.scala.SingleObservable[Long]>`__
- `CountOptions <{+api+}/org/mongodb/scala/model/index.html#CountOptions=com.mongodb.client.model.CountOptions>`__
- `estimatedDocumentCount() <{+api+}/org/mongodb/scala/MongoCollection.html#estimatedDocumentCount():org.mongodb.scala.SingleObservable[Long]>`__
- `EstimatedDocumentCountOptions <{+api+}/org/mongodb/scala/model/index.html#EstimatedDocumentCountOptions=com.mongodb.client.model.EstimatedDocumentCountOptions>`__