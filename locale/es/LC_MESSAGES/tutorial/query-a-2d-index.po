# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: 2013-12-16 22:50+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# 1a237c7ebd6d4dc4a12dc44db36f1e6f
#: ../source/tutorial/query-a-2d-index.txt:3
msgid "Query a ``2d`` Index"
msgstr ""

# c30dee4fd1d84386987dba9f1636027e
#: ../source/tutorial/query-a-2d-index.txt
msgid "On this page"
msgstr ""

# 416e776ae32a48c78837bc1a69a00565
#: ../source/tutorial/query-a-2d-index.txt:13
msgid "The following sections describe queries supported by the ``2d`` index."
msgstr ""

# 13d314edccf84389af3d8a3c48765ade
#: ../source/tutorial/query-a-2d-index.txt:16
msgid "Points within a Shape Defined on a Flat Surface"
msgstr ""

# 08985a8230f8458e90d1418a4e60b6b4
#: ../source/tutorial/query-a-2d-index.txt:18
msgid ""
"To select all legacy coordinate pairs found within a given shape on a "
"flat surface, use the :query:`$geoWithin` operator along with a shape "
"operator. Use the following syntax:"
msgstr ""

# 3154d4350ac0472b835f10dede08a8cc
#: ../source/tutorial/query-a-2d-index.txt:29
msgid ""
"The following queries for documents within a rectangle defined by ``[ 0 ,"
" 0 ]`` at the bottom left corner and by ``[ 100 , 100 ]`` at the top "
"right corner."
msgstr ""

# 7c896ac9e4494830b9c5e83533a764c3
#: ../source/tutorial/query-a-2d-index.txt:41
msgid ""
"The following queries for documents that are within the circle centered "
"on ``[ -74 , 40.74 ]`` and with a radius of ``10``:"
msgstr ""

# 91d106664bbc4d4b9ca1a88c6558c1a5
#: ../source/tutorial/query-a-2d-index.txt:50
msgid "For syntax and examples for each shape, see the following:"
msgstr ""

# 4e6be9d8df8e4267ae444ed9ddf3ac25
#: ../source/tutorial/query-a-2d-index.txt:52
msgid ":query:`$box`"
msgstr ""

# 3e497e5cd7e8487280a558815fb33d37
#: ../source/tutorial/query-a-2d-index.txt:54
msgid ":query:`$polygon`"
msgstr ""

# c0a1da3b31c04e9499488447ceb45c8e
#: ../source/tutorial/query-a-2d-index.txt:56
msgid ":query:`$center` (defines a circle)"
msgstr ""

# 22678bb8fb72427fb71267b7791e86e2
#: ../source/tutorial/query-a-2d-index.txt:59
msgid "Points within a Circle Defined on a Sphere"
msgstr ""

# 20cc84f8e275494a8db3cf2ad523d3cd
#: ../source/tutorial/query-a-2d-index.txt:61
msgid ""
"MongoDB supports rudimentary spherical queries on flat ``2d`` indexes for"
" legacy reasons. In general, spherical calculations should use a "
"``2dsphere`` index, as described in :doc:`/core/2dsphere`."
msgstr ""

# c7d1b2a2542b4391a5d1c1b26d997190
#: ../source/tutorial/query-a-2d-index.txt:65
msgid ""
"To query for legacy coordinate pairs in a \"spherical cap\" on a sphere, "
"use :query:`$geoWithin` with the :query:`$centerSphere` operator. Specify"
" an array that contains:"
msgstr ""

# 3d6af87c65154824b34c525007b1b76d
#: ../source/tutorial/query-a-2d-index.txt:69
msgid "The grid coordinates of the circle's center point"
msgstr ""

# a9d7b9d121cb4ad6aad73a0ce7bd7c01
#: ../source/tutorial/query-a-2d-index.txt:71
msgid ""
"The circle's radius measured in radians. To calculate radians, see "
":doc:`/tutorial/calculate-distances-using-spherical-geometry-with-2d-"
"geospatial-indexes`."
msgstr ""

# 94a45b6b230145b8a566c57ec9a4b379
#: ../source/tutorial/query-a-2d-index.txt:74
msgid "Use the following syntax:"
msgstr ""

# 9afc1a193d804364bafbb2bc894c5f3d
#: ../source/tutorial/query-a-2d-index.txt:83
msgid ""
"The following example query returns all documents within a 10-mile radius"
" of longitude ``88 W`` and latitude ``30 N``. The example converts "
"distance to radians by dividing distance by the approximate equatorial "
"radius of the earth, 3963.2 miles:"
msgstr ""

# 3c8c17f89fa2411bbf6e0ce909f10a1e
#: ../source/tutorial/query-a-2d-index.txt:96
msgid "Proximity to a Point on a Flat Surface"
msgstr ""

# d3813fb7ef4f496f9e639b393a8b38fd
#: ../source/tutorial/query-a-2d-index.txt:98
msgid ""
"Proximity queries return the legacy coordinate pairs closest to the "
"defined point and sort the results by distance. Use either the "
":query:`$near` operator or :dbcommand:`geoNear` command. Both require a "
"``2d`` index."
msgstr ""

# 387c47e8285844269206dd37aeb8b993
#: ../source/tutorial/query-a-2d-index.txt:103
msgid "The :query:`$near` operator uses the following syntax:"
msgstr ""

# 16c0cbbc9a78410eae035d1d6b98cc1e
#: ../source/tutorial/query-a-2d-index.txt:111
msgid "For examples, see :query:`$near`."
msgstr ""

# ebd747c961a1412aabe93c86c6acfcb3
#: ../source/tutorial/query-a-2d-index.txt:113
msgid "The :dbcommand:`geoNear` command uses the following syntax:"
msgstr ""

# 3fb5a2ac232b4cae939d2c5a80d0c8e2
#: ../source/tutorial/query-a-2d-index.txt:119
msgid ""
"The :dbcommand:`geoNear` command offers more options and returns more "
"information than does the :query:`$near` operator. To run the command, "
"see :dbcommand:`geoNear`."
msgstr ""

# 68dc74a18d594c63963bcd5fcbdee941
#: ../source/tutorial/query-a-2d-index.txt:128
msgid "Exact Matches on a Flat Surface"
msgstr ""

# 1683ff431fcb48209ebfeed4bc6e72a8
#: ../source/tutorial/query-a-2d-index.txt:130
msgid ""
"Previously, ``2d`` indexes would support exact-match queries for "
"coordinate pairs."
msgstr ""

# d994166041f14472be15629fba92b354
#: ../source/tutorial/query-a-2d-index.txt:134
msgid ""
"You cannot use a ``2d`` index to return an exact match for a coordinate "
"pair. Use a scalar, ascending or descending, index on a field that stores"
" coordinates to return exact matches."
msgstr ""

# 71863d28b5ec4b4e99cf9e7197d42a80
#: ../source/tutorial/query-a-2d-index.txt:138
msgid ""
"In the following example, the :method:`~db.collection.find()` operation "
"will return an exact match on a location if you have a ``{ 'loc': 1}`` "
"index:"
msgstr ""

# 72aba0bb56934ac8b42e536bf8a4eb2d
#: ../source/tutorial/query-a-2d-index.txt:146
msgid "This query will return any documents with the value of ``[ <x> , <y> ]``."
msgstr ""

# 5eee36a41652430baa40cedd8097435f
# e7e691ed0cff481192d309878f641c7a
#: ../source/tutorial/query-a-2d-index.txt:123
#: ../source/tutorial/query-a-2d-index.txt:124
msgid "geospatial queries"
msgstr ""

# e7e691ed0cff481192d309878f641c7a
#: ../source/tutorial/query-a-2d-index.txt:124
msgid "exact"
msgstr ""

#~ msgid ""
#~ "You can use the :method:`db.collection.find()`"
#~ " method to query for an exact "
#~ "match on a location. These queries "
#~ "use the following syntax:"
#~ msgstr ""

# 64ab0fb64cef432893acbd6ebb5a860b
#~ msgid ""
#~ "The following sections describe queries "
#~ "supported by the ``2d`` index. For "
#~ "an overview of recommended geospatial "
#~ "queries, see :ref:`geospatial-query-"
#~ "compatibility-chart`."
#~ msgstr ""

# dd55ef77b0594ce2a3b40b7757b40fef
#~ msgid ""
#~ "The following example query returns all"
#~ " documents within a 10-mile radius of"
#~ " longitude ``88 W`` and latitude ``30"
#~ " N``. The example converts distance "
#~ "to radians by dividing distance by "
#~ "the approximate radius of the earth, "
#~ "3959 miles:"
#~ msgstr ""

# c1215a1391e443de87a617963e066f59
#~ msgid ""
#~ "Proximity queries return the 100 legacy"
#~ " coordinate pairs closest to the "
#~ "defined point and sort the results "
#~ "by distance. Use either the "
#~ ":query:`$near` operator or :dbcommand:`geoNear` "
#~ "command. Both require a ``2d`` index."
#~ msgstr ""

