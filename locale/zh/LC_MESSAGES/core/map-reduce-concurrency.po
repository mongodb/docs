#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/map-reduce-concurrency.txt:3
msgid "Map Reduce Concurrency"
msgstr "Map Reduce并发"

#: ../source/core/map-reduce-concurrency.txt:13
msgid ""
"The map-reduce operation is composed of many tasks, including reads from the "
"input collection, executions of the ``map`` function, executions of the "
"``reduce`` function, writes to a temporary collection during processing, and "
"writes to the output collection."
msgstr ""
"map-reduce操作包含了几个任务，如从输入集合读取数据、执行 ``map`` 函数和 "
"``reduce`` 函数、处理过程中数据写入临时集合、最终的结果输出到集合。"

#: ../source/core/map-reduce-concurrency.txt:18
msgid "During the operation, map-reduce takes the following locks:"
msgstr "在执行过程中，map-reduce会持有如下几个锁："

#: ../source/core/map-reduce-concurrency.txt:20
msgid "The read phase takes a read lock.  It yields every 100 documents."
msgstr "读取数据阶段持有一个读锁，每次获取锁后读取100个文档。"

#: ../source/core/map-reduce-concurrency.txt:22
msgid ""
"The insert into the temporary collection takes a write lock for a single "
"write."
msgstr "每一次写入临时集合时需要持有一个写锁。"

#: ../source/core/map-reduce-concurrency.txt:25
msgid ""
"If the output collection does not exist, the creation of the output "
"collection takes a write lock."
msgstr "如果输出集合不存在，创建输出集合时需要持有一个写锁。"

#: ../source/core/map-reduce-concurrency.txt:28
msgid ""
"If the output collection exists, then the output actions (i.e. ``merge``, "
"``replace``, ``reduce``) take a write lock. This write lock is *global*, and"
" blocks all operations on the :program:`mongod` instance."
msgstr ""



#: ../source/core/map-reduce-concurrency.txt:34
msgid ""
"The final write lock during post-processing makes the results appear "
"atomically. However, output actions ``merge`` and ``reduce`` may take "
"minutes to process. For the ``merge`` and ``reduce``, the ``nonAtomic`` flag"
" is available, which releases the lock between writing each output document."
" See the :method:`db.collection.mapReduce()` reference for more information."
msgstr ""

#~ msgid ""
#~ "The V8 JavaScript engine, which became the default in 2.4, allows multiple "
#~ "JavaScript operations to execute at the same time. Prior to 2.4, JavaScript "
#~ "code (i.e. ``map``, ``reduce``, ``finalize`` functions) executed in a single"
#~ " thread."
#~ msgstr ""
