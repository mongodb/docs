#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/replica-set-oplog.txt:5
msgid "Replica Set Oplog"
msgstr "复制集Oplog"

#: ../source/core/replica-set-oplog.txt:15
msgid ""
"The :term:`oplog` (operations log) is a special :term:`capped collection` "
"that keeps a rolling record of all operations that modify the data stored in"
" your databases. MongoDB applies database operations on the :term:`primary` "
"and then records the operations on the primary's oplog. The "
":term:`secondary` members then copy and apply these operations in an "
"asynchronous process. All replica set members contain a copy of the oplog, "
"in the :data:`local.oplog.rs` collection, which allows them to maintain the "
"current state of the database."
msgstr ""

#: ../source/core/replica-set-oplog.txt:24
msgid ""
"To facilitate replication, all replica set members send heartbeats (pings) "
"to all other members. Any member can import oplog entries from any other "
"member."
msgstr ""
"为了提高复制的效率，复制集中所有节点之间会互相进行心跳检测（通过ping）。每个"
"节点都可以从任何其他节点上获取oplog。"

#: ../source/core/replica-set-oplog.txt:28
msgid ""
"Whether applied once or multiple times to the target dataset, each operation "
"in the oplog produces the same results, i.e. each operation in the oplog is :"
"term:`idempotent`. For proper replication operations, entries in the oplog "
"must be idempotent:"
msgstr ""
"oplog中的每一条操作，无论是执行一次还是多次执行，对数据集的影响结果是一样的，"
"i.e 每条oplog中的操作都是 :term:`幂等 <idempotent>` 的。For proper "
"replication operations, entries in the oplog must be idempotent:"

#: ../source/core/replica-set-oplog.txt:33
msgid "initial sync"
msgstr "初始化同步"

#: ../source/core/replica-set-oplog.txt:34
msgid "post-rollback catch-up"
msgstr "回滚后的数据追赶"

#: ../source/core/replica-set-oplog.txt:35
msgid "sharding chunk migrations"
msgstr "分片的chunk迁移"

#: ../source/core/replica-set-oplog.txt:40
msgid "Oplog Size"
msgstr "Oplog大小"


#: ../source/core/replica-set-oplog.txt:96

msgid ""
"In most cases, the default oplog size is sufficient. For example, if an "
"oplog is 5% of free disk space and fills up in 24 hours of operations, then "
"secondaries can stop copying entries from the oplog for up to 24 hours "
"without becoming too stale to continue replicating. However, most replica "
"sets have much lower operation volumes, and their oplogs can hold much "
"higher numbers of operations."
msgstr ""
"大多数情况下，默认的oplog大小是足够的。举个例子，如果Oplog是大小是可用空间的"
"5%，且可以存储24小时内的操作，那么从节点就可以在停止复制24小时后仍能追赶上主"
"节点，而不需要重新获取全部数据。然而，大多数复制集中的操作没有那么频繁，oplog"
"可以存放远不止上述的时间的操作记录。"

#: ../source/core/replica-set-oplog.txt:103
msgid ""
"Before :program:`mongod` creates an oplog, you can specify its size with "
"the :setting:`~replication.oplogSizeMB` option. However, after you have "
"started a replica set member for the first time, you can only change the "
"size of the oplog using the :doc:`/tutorial/change-oplog-size` procedure."
msgstr ""
"在 :program:`mongod`  建立oplog之前，我们可以通过设置 :setting:`~replication."
"oplogSizeMB` 选项来设定其大小。但是，如果已经初始化过复制集，已经建立了Oplog"
"了，我们需要通过 :doc:`/tutorial/change-oplog-size` 中的方式来修改其大小。"


#: ../source/core/replica-set-oplog.txt:109

msgid "Workloads that Might Require a Larger Oplog Size"
msgstr "Oplog的大小应随着实际使用压力而增加"

#: ../source/core/replica-set-oplog.txt:111
msgid ""
"If you can predict your replica set's workload to resemble one of the "
"following patterns, then you might want to create an oplog that is larger "
"than the default. Conversely, if your application predominantly performs "
"reads with a minimal amount of write operations, a smaller oplog may be "
"sufficient."
msgstr ""
"如果我能够对我复制集的工作情况有一个很好地预估，如果可能会出现以下的情况，那"
"么我们就可能需要创建一个比默认大小更大的oplog。相反的，如果我们的应用主要是"
"读，而写操作很少，那么一个小一点的oplog就足够了。"

#: ../source/core/replica-set-oplog.txt:117
msgid "The following workloads might require a larger oplog size."
msgstr "下列情况我们可能需要更大的oplog。"

#: ../source/core/replica-set-oplog.txt:120
msgid "Updates to Multiple Documents at Once"
msgstr "同时更新大量的文档。"

#: ../source/core/replica-set-oplog.txt:122
msgid ""
"The oplog must translate multi-updates into individual operations in order "
"to maintain :term:`idempotency <idempotent>`. This can use a great deal of "
"oplog space without a corresponding increase in data size or disk use."
msgstr ""
"Oplog为了保证 :term:`幂等性 <idempotent>` 会将多项更新（multi-updates）转换为"
"一条条单条的操作记录。这就会在数据没有那么多变动的情况下大量的占用oplog空间。"

#: ../source/core/replica-set-oplog.txt:128
msgid "Deletions Equal the Same Amount of Data as Inserts"
msgstr "删除了与插入时相同大小的数据"

#: ../source/core/replica-set-oplog.txt:130
msgid ""
"If you delete roughly the same amount of data as you insert, the database "
"will not grow significantly in disk use, but the size of the operation log "
"can be quite large."
msgstr ""
"如果我们删除了与我们插入时同样多的数据，数据库将不会在硬盘使用情况上有显著提"
"升，但是oplog的增长情况会显著提升。"

#: ../source/core/replica-set-oplog.txt:135
msgid "Significant Number of In-Place Updates"
msgstr "大量In-Place更新"

#: ../source/core/replica-set-oplog.txt:137
msgid ""
"If a significant portion of the workload is updates that do not increase the"
" size of the documents, the database records a large number of operations "
"but does not change the quantity of data on disk."
msgstr ""
"如果我们会有大量的in-place更新，数据库会记录下大量的操作记录，但此时硬盘中数"
"据量不会有所变化。"

#: ../source/core/replica-set-oplog.txt:142
msgid "Oplog Status"
msgstr "Oplog状态"

#: ../source/core/replica-set-oplog.txt:144
msgid ""
"To view oplog status, including the size and the time range of operations, "
"issue the :method:`rs.printReplicationInfo()` method. For more information "
"on oplog status, see :ref:`replica-set-troubleshooting-check-oplog-size`."
msgstr ""
"我们可以通过 :method:`rs.printReplicationInfo()` 来查看oplog的状态，包括大"
"小、存储的操作的时间范围。关于oplog的更多信息可以参考 :ref:`replica-set-"
"troubleshooting-check-oplog-size` 。"

#: ../source/core/replica-set-oplog.txt:149
msgid ""
"Under various exceptional situations, updates to a :term:`secondary's "
"<secondary>` oplog might lag behind the desired performance time.  Use :"
"method:`db.getReplicationInfo()` from a secondary member and the :doc:"
"`replication status </reference/method/db.getReplicationInfo>` output to "
"assess the current state of replication and determine if there is any "
"unintended replication delay."
msgstr ""
"在各类异常情况下， :term:`从节点<secondary>`  oplog的更新可能落后于主节点一些"
"时间。在从节点上通过 :method:`db.getReplicationInfo()`  和  :doc:`db."
"getReplicationInfo </reference/method/db.getReplicationInfo>` 可以获得现在复"
"制集的状态与，也可以知道是否有意外的复制延时。"

#: ../source/core/replica-set-oplog.txt:156
msgid ""
"See :ref:`Replication Lag <replica-set-replication-lag>` for more "
"information."
msgstr ""

#: ../source/core/replica-set-oplog.txt:0
msgid "On this page"
msgstr ""

#: ../source/core/replica-set-oplog.txt:42
msgid ""
"When you start a replica set member for the first time, MongoDB creates an "
"oplog of a default size."
msgstr ""

#: ../source/core/replica-set-oplog.txt:73
msgid "For Unix and Windows systems"
msgstr ""

#: ../source/core/replica-set-oplog.txt:46
msgid "The default oplog size depends on the storage engine:"
msgstr ""

#: ../source/core/replica-set-oplog.txt:52
#: ../source/core/replica-set-oplog.txt:83
msgid "Storage Engine"
msgstr ""

#: ../source/core/replica-set-oplog.txt:53
#: ../source/core/replica-set-oplog.txt:84
msgid "Default Oplog Size"
msgstr ""

#: ../source/core/replica-set-oplog.txt:54
msgid "Lower Bound"
msgstr ""

#: ../source/core/replica-set-oplog.txt:55
msgid "Upper Bound"
msgstr ""

#: ../source/core/replica-set-oplog.txt:57
#: ../source/core/replica-set-oplog.txt:86
msgid ":doc:`/core/inmemory`"
msgstr ""

#: ../source/core/replica-set-oplog.txt:59
msgid "5% of physical memory"
msgstr ""

#: ../source/core/replica-set-oplog.txt:61
msgid "50 MB"
msgstr ""

#: ../source/core/replica-set-oplog.txt:63
#: ../source/core/replica-set-oplog.txt:68
#: ../source/core/replica-set-oplog.txt:73
msgid "50 GB"
msgstr ""

#: ../source/core/replica-set-oplog.txt:65
#: ../source/core/replica-set-oplog.txt:90
msgid ":doc:`/core/wiredtiger`"
msgstr ""

#: ../source/core/replica-set-oplog.txt:66
#: ../source/core/replica-set-oplog.txt:71
msgid "5% of free disk space"
msgstr ""

#: ../source/core/replica-set-oplog.txt:67
#: ../source/core/replica-set-oplog.txt:72
msgid "990 MB"
msgstr ""

#: ../source/core/replica-set-oplog.txt:70
#: ../source/core/replica-set-oplog.txt:93
msgid ":doc:`/core/mmapv1`"
msgstr ""

#: ../source/core/replica-set-oplog.txt:94
msgid "For 64-bit OS X systems"
msgstr ""

#: ../source/core/replica-set-oplog.txt:76
msgid ""
"The default oplog size is 192 MB of either physical memory or free disk "
"space depending on the storage engine:"
msgstr ""

#: ../source/core/replica-set-oplog.txt:88
msgid "192 MB of physical memory"
msgstr ""

#: ../source/core/replica-set-oplog.txt:91
#: ../source/core/replica-set-oplog.txt:94
msgid "192 MB of free disk space"
msgstr ""

#~ msgid ""
#~ "When you start a replica set member for the first time, MongoDB creates an "
#~ "oplog of a default size. The size depends on the architectural details of "
#~ "your operating system."
#~ msgstr ""

#~ msgid "By default, the size of the oplog is as follows:"
#~ msgstr ""

#~ msgid ""
#~ "For 64-bit Linux, Solaris, FreeBSD, and Windows systems, MongoDB allocates "
#~ "5% of the available free disk space, but will always allocate at least 1 "
#~ "gigabyte and never more than 50 gigabytes."
#~ msgstr ""

#~ msgid ""
#~ "For 64-bit OS X systems, MongoDB allocates 183 megabytes of space to the "
#~ "oplog."
#~ msgstr ""

#~ msgid ""
#~ "For 32-bit systems, MongoDB allocates about 48 megabytes of space to the "
#~ "oplog."
#~ msgstr ""
