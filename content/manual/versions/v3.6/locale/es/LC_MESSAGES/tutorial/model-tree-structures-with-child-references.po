# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: 2013-12-16 22:42+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-manual/language/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# 65c0754e592d48fdb4f05354e7d7cbf5
#: ../source/tutorial/model-tree-structures-with-child-references.txt:3
msgid "Model Tree Structures with Child References"
msgstr ""

# f6c5fd4350654472bf68617055ac8187
#: ../source/tutorial/model-tree-structures-with-child-references.txt:8
msgid "Overview"
msgstr ""

# 24fd9cc1b7bf4394bee20e69fe7d4ac4
#: ../source/tutorial/model-tree-structures-with-child-references.txt:10
msgid ""
"Data in MongoDB has a *flexible schema*. :term:`Collections <collection>` do"
" not enforce :term:`document` structure. Decisions that affect how you model"
" data can affect application performance and database capacity. See "
":doc:`/core/data-models` for a full high level overview of data modeling in "
"MongoDB."
msgstr ""

# 5bea406011054f9f858805c5a60b7542
#: ../source/tutorial/model-tree-structures-with-child-references.txt:16
msgid ""
"This document describes a data model that describes a tree-like structure in"
" MongoDB documents by storing :ref:`references <data-modeling-referencing>` "
"in the parent-nodes to children nodes."
msgstr ""

# 1e2e195e65ca46db980698b4f1015e15
#: ../source/tutorial/model-tree-structures-with-child-references.txt:21
msgid "Pattern"
msgstr ""

# c2e40e69f29c444f8d2bebdbe5d01cdd
#: ../source/tutorial/model-tree-structures-with-child-references.txt:25
msgid ""
"The *Child References* pattern stores each tree node in a document; in "
"addition to the tree node, document stores in an array the id(s) of the "
"node's children."
msgstr ""

# 5d9352c2bc984c5185241fcbc9e6ebcc
#: ../source/tutorial/model-tree-structures-with-child-references.txt:29
msgid "Consider the following hierarchy of categories:"
msgstr ""

# 6695b486d1c84f19970d9f397cceee0f
#: ../source/tutorial/model-tree-structures-with-child-references.txt:33
msgid ""
"The following example models the tree using *Child References*, storing the "
"reference to the node's children in the field ``children``:"
msgstr ""

# ef59e663f5414e3894145f197b9fe898
#: ../source/tutorial/model-tree-structures-with-child-references.txt:45
msgid ""
"The query to retrieve the immediate children of a node is fast and "
"straightforward:"
msgstr ""

# 20aa7a905e024caf8575038b101002c4
#: ../source/tutorial/model-tree-structures-with-child-references.txt:52
msgid ""
"You can create an index on the field ``children`` to enable fast search by "
"the child nodes:"
msgstr ""

# 4f6221cd3fee48f3a8c87a092144577a
#: ../source/tutorial/model-tree-structures-with-child-references.txt:59
msgid ""
"You can query for a node in the ``children`` field to find its parent node "
"as well as its siblings:"
msgstr ""

# 2d3a7e49aeac465db060994e5934bc7d
#: ../source/tutorial/model-tree-structures-with-child-references.txt:66
msgid ""
"The *Child References* pattern provides a suitable solution to tree storage "
"as long as no operations on subtrees are necessary. This pattern may also "
"provide a suitable solution for storing graphs where a node may have "
"multiple parents."
msgstr ""
