title:
  text: Drop an existing index.
  character: "`"
stepnum: 1
pre: |
  Use :method:`~db.collection.dropIndex()` method to drop an existing
  index from a collection. Pass either the name of the index or the
  index specification document to identify the index to drop.

  The :method:`~db.collection.dropIndex()` method cannot drop the
  default index on the ``_id`` field.

  For example, the following operation drops the compound index
  associated with the specification document.
ref: ""
action:
  language: javascript
  code: |
     db.orders.dropIndex( { "cust_id" : 1, "ord_date" : -1, "items" : 1 })
---
title:
  text: Review the returned object.
  character: "`"
stepnum: 2
pre: |
   The returned document displays the result of the operation.
ref: ""
action:
  language: javascript
  code: |
     { "nIndexesWas" : 7, "ok" : 1 }
post: |
   The ``"ok"`` field value of ``1`` indicate success.

   To verify the result, use the :method:`~db.collection.getIndexes()`
   to view the indexes on the collection. The collection should have
   one less indexes than the ``"nIndexesWas"`` value; i.e. the
   collection should now have 6 indexes.
---
title:
  text: Drop all indexes from a collection.
  character: "`"
stepnum: 3
pre: |
  Use :method:`~db.collection.dropIndexes()` method to drop all index
  from a collection except for the default index on the ``_id`` field.

  For example, the following operation drops all indexes from the
  ``orders`` collection except for the default index on the ``_id``
  field.
ref: ""
action:
  language: javascript
  code: |
     db.orders.dropIndexes()
---
title:
  text: Review the returned object.
  character: "`"
stepnum: 4
pre: |
   The returned document displays the result of the operation.
ref: ""
action:
  language: javascript
  code: |
     {
        "nIndexesWas" : 6,
        "msg" : "non-_id indexes dropped for collection",
        "ok" : 1
     }
post: |
   The ``"ok"`` field value of ``1`` and the ``"msg"`` field indicate
   success.

   To verify the result, use the :method:`~db.collection.getIndexes()`
   to view the indexes on the collection. The collection should have
   only the default ``_id`` index.
...
