.. meta::
   :robots: nosnippet

:template: product-landing
:hidefeedback: header
:noprevnext:

.. _sync:

==============================
Atlas Device Sync [Deprecated]
==============================

.. meta::
   :description: Atlas Device Sync is a cloud service that syncs data seamlessly between local devices and Atlas.
   :keywords: Realm, C++ SDK, Flutter SDK, Java SDK, Kotlin SDK, .NET SDK, Node.js SDK, React Native SDK, Swift SDK, mobile app development, MongoDB mobile

.. toctree::
   :titlesonly:
   :hidden:

   Device Sync Deprecation </sync/device-sync-deprecation>
   App Builder's Resources </sync/app-builder>
   Define and Update Your Data Model </sync/configure-your-data-model>
   Configure Sync </sync/configure-device-sync>
   Handle Errors </sync/error-handling>
   Go to Production with Sync </sync/go-to-production>
   Migrate a Local-Only App to a Sync-Enabled App </sync/app-builder/local-to-sync>
   Technical Details </sync/details>
   Migrate Sync Modes </sync/migrate-sync-modes>

.. introduction::

   You're developing a mobile app. Your users want their data saved in the cloud
   and accessible from their other devices. Network access on a mobile device
   can be intermittent, so you write data locally on the device first. A
   background process then synchronizes the data to the cloud and resolves any
   conflicting writes.

   Atlas Device Sync provides all of the above, so you can build better apps faster.

   Watch our `Intro to Atlas Device Sync
   <https://learn.mongodb.com/learn/course/intro-to-atlas-device-sync/learning-byte/learn>`__
   Learning Byte to learn more.

   .. button:: Start Building with a Template App
      :uri: https://www.mongodb.com/realm/register?tck=docs_CTA_app_services

.. image:: /images/plp/device-sync-2.png
   :alt: Atlas Device Sync Illustration


.. kicker:: What It Is

Key Features
------------

.. card-group::
   :columns: 3
   :style: compact

   .. card::
      :headline: Atlas Device SDK in the Front, MongoDB in the Back
      :icon: general_features_intelligent_edge
      :icon-alt: An icon depicting a mobile phone connecting with the cloud

      Atlas Device Sync bridges client apps using the :realm:`Atlas Device SDK </>`
      and a MongoDB instance running in Atlas. The lightweight device database is
      optimized for mobile development.

   .. card::
      :headline: Robust & Secure
      :icon: realm_conflict_resolution
      :icon-alt: An icon depicting conflict resolution

      Device Sync handles conflicts for you, so you don't have to write
      complex custom code to resolve conflicting writes from multiple clients.
      A user-based permissions system lets you control who can access which data.

   .. card::
      :headline: "Always-On" Experience
      :icon: realm_offline
      :icon-alt: An icon depicting network loss

      Atlas Device SDK and Device Sync seamlessly handle intermittent
      connectivity so users can continue using your app regardless of their
      current network status.


.. kicker:: Where to Begin

Get Started
-----------

.. card-group::
   :columns: 2
   :style: compact

   .. card::
      :headline: Launch a Template Starter App
      :cta: Register for a free Atlas account
      :url: https://www.mongodb.com/realm/register?tck=docs_CTA_app_services
      :icon: realm_ios_android_cross_platform
      :icon-alt: An icon depicting two mobile devices synchronizing data between each other

      The best way get started with Device Sync is with a template app.
      From the Atlas UI, select the :guilabel:`App Services` tab, and select
      from the provided templates. Atlas configures a backend instance and
      gives you the frontend code for a selection of platforms.

   .. card::
      :headline: Follow a Device Sync Tutorial
      :cta: Visit the Tutorials Page
      :url: https://www.mongodb.com/docs/atlas/app-services/get-started/#tutorials
      :icon: general_content_tutorial
      :icon-alt: A tutorial icon

      The mobile app tutorials guide you through building a feature on top of a
      template starter app with Atlas Device Sync.


.. kicker:: Next Steps

Explore the Device Sync Documentation
-------------------------------------

.. procedure::

   .. step:: Maintain Data Integrity with Your Data Model

      Define your application data model directly in your code or with
      server-side JSON schemas that you can use to generate language-specific
      classes. Read the :ref:`sync-schema-overview` to get oriented.

   .. step:: Configure & Enable Device Sync

      Whether you based your app on one of our template apps or started from
      scratch, at some point you'll want to configure Sync specially for your
      needs. Read more: :ref:`enable-sync`.

   .. step:: Protect User Data with Permissions

      Device Sync provides a user-based permissions system that lets you
      control who can access which data. To learn how to set up permissions for
      a variety of real use cases, check out the
      :ref:`flexible-sync-permissions-guide`.

   .. step:: Handle Errors

      Develop a robust app that can handle data model changes and data recovery
      scenarios with the :ref:`client-resets` documentation. Troubleshoot other
      errors and edge cases with the :ref:`sync-errors` reference.

   .. step:: Go to Production

      Test your app under a simulated load with the
      :ref:`sync-production-load-testing` guide, then get your app ready to ship
      with the :ref:`sync-production-checklist`. To understand how costs scale
      with usage beyond the free tier, refer to the :ref:`billing` page.


.. kicker:: More Info

End-to-End Security
-------------------

.. card-group::
   :columns: 3
   :style: compact

   .. card::
      :headline: On Device
      :icon: realm_mobile
      :icon-alt: An icon depicting a mobile app

      Encrypt sensitive data in synced database files with the encryption APIs.

      Built-in user authentication providers include anonymous, email/password,
      API key, Custom Function, Custom JWT, Facebook, Google, and Apple.

   .. card::
      :headline: In Flight
      :icon: cloud_transfer
      :icon-alt: An icon depicting network upload and download

      Device Sync encrypts all network traffic using Transport Layer Security
      (TLS). Document and field-level permissions determine which data may be
      synced to the device.

   .. card::
      :headline: In the Cloud
      :icon: general_security_default
      :icon-alt: A padlock icon

      MongoDB Atlas has features that meet essential compliance standards:

      - Encrypted storage volumes
      - Network isolation
      - Role-based access management
      - ISO, SOC, PCI, HIPAA, HITRUST, VPAT, GDPR, CSA
