#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Language: zh\n"
"X-Generator: Poedit 1.6.9\n"

#: ../source/tutorial/create-indexes-to-support-queries.txt:5
msgid "Create Indexes to Support Your Queries"
msgstr "创建索引以支持查询"

#: ../source/tutorial/create-indexes-to-support-queries.txt:15
msgid ""
"An index supports a query when the index contains all the fields scanned by "
"the query. The query scans the index and not the collection. Creating "
"indexes that support queries results in greatly increased query performance."
msgstr ""
"当索引包含了查询的所有键时，索引可以支持该查询。查询会扫描索引而不是集合。创"
"建可以支持查询的索引会带来极大的查询性能提升。"

#: ../source/tutorial/create-indexes-to-support-queries.txt:19
msgid ""
"This document describes strategies for creating indexes that support queries."
msgstr "本文描述了创建支持查询的索引的策略。"

#: ../source/tutorial/create-indexes-to-support-queries.txt:22
msgid "Create a Single-Key Index if All Queries Use the Same, Single Key"
msgstr "如果所有的查询都使用同样的单个键时，创建一个单键索引"

#: ../source/tutorial/create-indexes-to-support-queries.txt:24
msgid ""
"If you only ever query on a single key in a given collection, then you need "
"to create just one single-key index for that collection. For example, you "
"might create an index on ``category`` in the ``product`` collection:"
msgstr ""
"如果您在某个集合上只查询某个单键，那么您可以在这个集合上创建一个单键索引。例"
"如，您可能在 ``product`` 集合的  ``category`` 键上创建索引："

#: ../source/tutorial/create-indexes-to-support-queries.txt:35
msgid "Create Compound Indexes to Support Several Different Queries"
msgstr "创建复合索引以支持几个不同的查询"

#: ../source/tutorial/create-indexes-to-support-queries.txt:37
msgid ""
"If you sometimes query on only one key and at other times query on that key "
"combined with a second key, then creating a compound index is more efficient "
"than creating a single-key index. MongoDB will use the compound index for "
"both queries. For example, you might create an index on both ``category`` "
"and ``item``."
msgstr ""
"如果您有时需要查询某个键，而有时又需要查询同样的键和额外的键，那么和创建单键"
"索引相比，创建复合索引会是更高效的选择。MongoDB都会使用复合索引来处理这两种请"
"求。例如，您可能会在 ``category`` 和 ``item`` 键上创建索引："

#: ../source/tutorial/create-indexes-to-support-queries.txt:47
msgid ""
"This allows you both options. You can query on just ``category``, and you "
"also can query on ``category`` combined with ``item``. A single :ref:"
"`compound index <index-type-compound>` on multiple fields can support all "
"the queries that search a \"prefix\" subset of those fields."
msgstr ""
"这允许您有两种选择。您可以只查询 ``category`` 或者同时查询 ``category`` 和 "
"``item`` 。一个在多个键上创建的 :ref:`复合索引 <index-type-compound>` 可以支"
"持那些搜索被索引键的 \"前缀\" 子集的查询。"

#: ../source/tutorial/create-indexes-to-support-queries.txt:0
msgid "Example"
msgstr "例子"

#: ../source/tutorial/create-indexes-to-support-queries.txt:54
msgid "The following index on a collection:"
msgstr "在某集合上有如下索引："

#: ../source/tutorial/create-indexes-to-support-queries.txt:60
msgid "Can support queries that the following indexes support:"
msgstr "它可以支持如下索引支持的查询："

#: ../source/tutorial/create-indexes-to-support-queries.txt:67
msgid ""
"There are some situations where the prefix indexes may offer better query "
"performance: for example if ``z`` is a large array."
msgstr ""
"在某些情况下，前缀键的索引可能会有更好的查询性能：例如，如果 ``z`` 是一个很大"
"的数组。"

#: ../source/tutorial/create-indexes-to-support-queries.txt:70
msgid ""
"The ``{ x: 1, y: 1, z: 1 }`` index can also support many of the same queries "
"as the following index:"
msgstr "索引 ``{ x: 1, y: 1, z: 1 }`` 也支持许多如下索引支持的查询："

#: ../source/tutorial/create-indexes-to-support-queries.txt:77
msgid ""
"Also, ``{ x: 1, z: 1 }`` has an additional use. Given the following query:"
msgstr "此外， ``{ x: 1, z: 1 }`` 索引还有其它用途。给定如下查询："

#: ../source/tutorial/create-indexes-to-support-queries.txt:84
msgid ""
"The ``{ x: 1, z: 1 }`` index supports both the query and the sort operation, "
"while the ``{ x: 1, y: 1, z: 1 }`` index only supports the query. For more "
"information on sorting, see :ref:`sorting-with-indexes`."
msgstr ""
"索引 ``{ x: 1, z: 1 }`` 同时支持查询和排序操作，但是索引 ``{ x: 1, y: 1, z: "
"1 }`` 只支持查询。参见 :ref:`sorting-with-indexes` 了解更多关于排序的详细信"
"息。"

#: ../source/includes/fact-index-intersection-vs-compound-indexes.rst:1
msgid ""
"Starting in version 2.6, MongoDB can use :doc:`index intersection </core/"
"index-intersection>` to fulfill queries. The choice between creating "
"compound indexes that support your queries or relying on index intersection "
"depends on the specifics of your system. See :ref:`index-intersection-"
"compound-indexes` for more details."
msgstr ""

#: ../source/tutorial/create-indexes-to-support-queries.txt:0
msgid "On this page"
msgstr ""
