======================
Manage Users and Roles
======================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Overview
--------

This tutorial provides examples for user and role management under the
MongoDB's authorization model. :doc:`/tutorial/create-users` describes
how to add a new user to MongoDB.

.. tabs::

   .. tab:: {+atlas+}
      :tabid: atlas

      To create user-defined roles in {+atlas+}, see 
      :ref:`add-custom-role-atlas`.
   
   .. tab:: Self-Managed MongoDB
      :tabid: self-managed

Prerequisites
-------------

.. tabs::
   :hidden: true

   .. tab:: {+atlas+}
      :tabid: atlas

      To configure custom user-defined database roles in {+atlas+}, you 
      must have :authrole:`Organization Owner` or 
      :authrole:`Project Owner` access to {+atlas+}. To learn more, see 
      :atlas:`Configure Custom Database Roles 
      </security-add-mongodb-roles/>`.
   
   .. tab:: Self-Managed MongoDB
      :tabid: self-managed

      .. important::

         If you have :doc:`enabled access control
         </tutorial/enable-authentication>` for your deployment, you 
         must authenticate as a user with the required privileges 
         specified in each section. A user administrator with the
         :authrole:`userAdminAnyDatabase` role, or 
         :authrole:`userAdmin` role in the specific databases, provides 
         the required privileges to perform the operations listed in 
         this tutorial. See :doc:`/tutorial/enable-authentication` for 
         details on adding user administrator as the first user.

.. _create-user-defined-role:

Create a User-Defined Role
--------------------------

Roles grant users access to MongoDB resources. MongoDB provides a
number of :doc:`built-in roles </reference/built-in-roles>` that
administrators can use to control access to a MongoDB system. However,
if these roles cannot describe the desired set of privileges, you can
create new roles in a particular database.

.. tabs::
   :hidden: true

   .. tab:: {+atlas+}
      :tabid: atlas
   
   .. tab:: Self-Managed MongoDB
      :tabid: self-managed

      .. include:: /includes/fact-roles-privileges-scope.rst

      To create a new role, use the :method:`db.createRole()` method,
      specifying the privileges in the ``privileges`` array and the 
      inherited roles in the ``roles`` array.

      MongoDB uses the combination of the database name and the role 
      name to uniquely define a role. Each role is scoped to the 
      database in which you create the role, but MongoDB stores all 
      role information in the :data:`admin.system.roles` collection in 
      the ``admin`` database.

.. tabs::

   .. tab:: {+atlas+}
      :tabid: atlas

      .. include:: /includes/atlas-user-defined-roles.rst
   
   .. tab:: Self-Managed MongoDB
      :tabid: self-managed

      .. include:: /includes/self-managed-user-defined-roles.rst

.. _modify-existing-user-access:

Modify Access for an Existing User
----------------------------------

.. _assign-role-to-user-prereq:

Prerequisites
~~~~~~~~~~~~~

- .. include:: /includes/access-grant-roles.rst

- .. include:: /includes/access-revoke-roles.rst

- .. include:: /includes/access-roles-info.rst

Procedure
~~~~~~~~~

.. See https://www.mongodb.com/docs/atlas/access/manage-org-users/#edit-user-s-role-in-an-organization and https://www.mongodb.com/docs/atlas/access/manage-project-access/#edit-a-user-s-or-team-s-role-in-a-project for source material.

.. tabs::

   .. tab:: {+atlas+}
      :tabid: atlas

      .. tabs::

         .. tab:: {+atlas-cli+}
            :tabid: atlascli

            To update roles for a team in the project you specify using 
            the {+atlas-cli+}, run the following command:

            .. code-block:: sh
         
               atlas projects teams update <teamId> [options]

            To learn more about the command syntax and parameters, see 
            the {+atlas-cli+} documentation for 
            :atlascli:`atlas projects teams update 
            </command/atlas-projects-teams-update/>`.

         .. tab:: {+atlas-admin-api+}
            :tabid: api

            To update organization roles through the 
            {+atlas-admin-api+}, see :oas-atlas-op:`Update Organization Roles for One MongoDB Cloud User 
            </updateOrganizationRoles>`.

            To update project roles through the {+atlas-admin-api+}, 
            see :oas-atlas-op:`Update Project Roles for One MongoDB Cloud User </updateProjectRoles>`.

         .. tab:: {+atlas-ui+}
            :tabid: ui

            .. procedure::
               :style: normal

               .. step:: Go to the :guilabel:`Access Manager`

                  Go to the :guilabel:`Access Manager` for your 
                  organization or project.

                  a. If it isn't already displayed, select the desired 
                     organization from the |ui-org-menu| in the 
                     navigation bar.

                  #. (Optional) To modify project access:
             
                     i. Select your desired project from the list of 
                        projects in the :guilabel:`Projects` page.

                     #. Click the vertical ellipsis 
                        (:icon-fa4:`ellipsis-v`) 
                        next to your project name in the upper left 
                        corner and select :guilabel:`Project Settings`.

                  #. Click :guilabel:`Access Manager` in the navigation bar.
            
               .. step:: Edit an {+atlas+} user or team

                  Click the :guilabel:`Users` or :guilabel:`Teams` tab.

               .. step:: Modify the user's access

                  a. In the row for the user or team, click 
                     :icon-fa5:`pencil-alt` :guilabel:`Edit`.

                  #. Select or deselect roles.
            
                  #. To save your changes, click the checkmark button.

   .. tab:: Self-Managed MongoDB
      :tabid: self-managed

      .. include:: /includes/steps/change-user-privileges.rst

Modify the Password for an Existing User
----------------------------------------

.. _change-password-prereq:

Prerequisites
~~~~~~~~~~~~~

.. include:: /includes/access-change-password.rst

Procedure
~~~~~~~~~

.. See https://www.mongodb.com/docs/atlas/security-add-mongodb-users/#modify-database-users for source material.

.. tabs::

   .. tab:: {+atlas+}
      :tabid: atlas

      .. tabs::

         .. tab:: {+atlas-cli+}
            :tabid: atlascli

            To update a database user from your project using the 
            {+atlas-cli+}, run the following command:

            .. code-block:: sh

               atlas dbusers update <username> [options]

            To learn more about the command syntax and parameters, see 
            the {+atlas-cli+} documentation for :atlascli:`atlas 
            dbusers update </command/atlas-dbusers-update/>`.

         .. tab:: {+atlas-admin-api+}
            :tabid: api

            You can update database users through the 
            {+atlas-admin-api+}. To learn more, see 
            :oas-atlas-op:`Update One Database User in One Project
            </updateDatabaseUser>`.

         .. tab:: {+atlas-ui+}
            :tabid: ui

            To modify existing users for an {+atlas+} project:

            .. procedure::
               :style: normal

               .. step:: Go to the :guilabel:`Database Users` tab

                  In the :guilabel:`Security` section in the left 
                  navigation, click :guilabel:`Database Access`.
            
                  The :guilabel:`Database Users` tab displays.

               .. step:: Modify the user

                  Click :icon-fa4:`pencil` :guilabel:`Edit` next to the 
                  user that you want to modify. You can modify the 
                  privileges and authentication details assigned to the 
                  user. You can't modify the authentication method.

                  The following table describes what you can do for 
                  each user:

                  .. list-table::
                     :widths: 50 50
                     :header-rows: 1

                     * - User Type
                       - Action

                     * - SCRAM authenticated users
                       - Edit a user's password.

                     * - X.509 certificate authenticated users
                       - Download a new certificate.

                     * - AWS IAM users
                       - Modify database access privileges.

                     * - Temporary users
                       - Modify the time period the user exists or make 
                         the user a permanent user, provided the user's 
                         expiration date has not already passed.

                  .. note::

                     You can't change a permanent user into a temporary 
                     user. If you change a temporary user into a 
                     permanent user, you can't make it temporary again.

               .. step:: Click :guilabel:`Update User` to save the changes

   .. tab:: Self-Managed MongoDB
      :tabid: self-managed

      .. include:: /includes/steps/change-user-password.rst

.. seealso::

   :doc:`/tutorial/change-own-password-and-custom-data`

View a User's Roles
-------------------

Prerequisites
~~~~~~~~~~~~~

.. include:: /includes/access-user-info.rst

Procedure
~~~~~~~~~~

.. See https://www.mongodb.com/docs/atlas/security-add-mongodb-users/#view-database-users-and-certificates for source material.

.. tabs::

   .. tab:: {+atlas+}
      :tabid: atlas

      .. tabs::

         .. tab:: {+atlas-cli+}
            :tabid: atlascli

            To list all {+atlas+} database users for your project using 
            the {+atlas-cli+}, run the following command:

            .. code-block:: sh

               atlas dbusers list [options]

            To return the details for a single {+atlas+} database user 
            in the project you specify using the {+atlas-cli+}, run the 
            following command:

            .. code-block:: sh

               atlas dbusers describe <username> [options]

            To learn more about the syntax and parameters for the 
            previous commands, see the {+atlas-cli+} documentation for 
            :atlascli:`atlas dbusers list 
            </command/atlas-dbusers-list/>` and 
            :atlascli:`atlas dbusers describe 
            </command/atlas-dbusers-describe/>`.

         .. tab:: {+atlas-admin-api+}
            :tabid: api

            To view {+atlas+} database users using the 
            {+atlas-admin-api+}, see 
            :oas-atlas-op:`Return All Database Users from One Project
            </listDatabaseUsers>`. 

         .. tab:: {+atlas-ui+}
            :tabid: ui

            To view {+atlas+} database users and X.509 certificates in 
            the {+atlas-ui+}:
      
            #. In the :guilabel:`Security` section in the left 
               navigation, click :guilabel:`Database Access`.
         
               The :guilabel:`Database Users` tab displays.

            #. Click :icon-fa4:`pencil`
               :guilabel:`Edit` next to the user to view their 
               privileges, authentication details, and X.509 
               certificates.

   .. tab:: Self-Managed MongoDB
      :tabid: self-managed

      .. include:: /includes/steps/verify-user-privileges.rst

View a Role's Privileges
------------------------

Prerequisites
~~~~~~~~~~~~~

.. include:: /includes/access-roles-info.rst

Procedure
~~~~~~~~~~

.. See https://www.mongodb.com/docs/atlas/security-add-mongodb-roles/#view-custom-roles for source material.

.. tabs::

   .. tab:: {+atlas+}
      :tabid: atlas

      .. tabs::

         .. tab:: {+atlas-cli+}
            :tabid: atlascli

            To list all custom database roles for your project using 
            the {+atlas-cli+}, run the following command:

            .. code-block:: sh

               atlas customDbRoles list [options]

            To return the details for a single custom database role in 
            the project you specify using the {+atlas-cli+}, run the 
            following command:

            .. code-block:: sh

               atlas customDbRoles describe <roleName> [options]

            To learn more about the syntax and parameters for the 
            previous commands, see the {+atlas-cli+} documentation for 
            :atlascli:`atlas customDbRoles list 
            </command/atlas-customDbRoles-list/>` and 
            :atlascli:`atlas customDbRoles describe 
            </command/atlas-customDbRoles-describe/>`.

         .. tab:: {+atlas-admin-api+}
            :tabid: api

            To view custom roles through the {+atlas-admin-api+}, 
            see :oas-atlas-op:`Return All Custom Roles in One Project
            </listCustomDatabaseRoles>`.

         .. tab:: {+atlas-ui+}
            :tabid: ui

            To view your custom roles through the {+atlas-ui+}:
      
            In the :guilabel:`Security` section of the left navigation,
            click :guilabel:`Database Access`.
      
            The :guilabel:`Custom Roles` tab displays.

   .. tab:: Self-Managed MongoDB
      :tabid: self-managed

      .. include:: /includes/steps/view-role-info.rst
