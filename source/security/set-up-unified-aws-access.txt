.. meta::
   :keywords: atlas api, atlas cli, atlas ui

.. _set-up-unified-aws-access:

=========================
Set Up Unified AWS Access
=========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Overview
--------

.. include:: /includes/unified-access-intro.rst

Required Access
---------------

To set up unified |aws| access, you must have
:authrole:`Organization Owner` or :authrole:`Project Owner` access to
the project.

Prerequisites
-------------

- An |service| :doc:`account </index>`.

- The `AWS Command Line Interface (CLI)
  <https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html>`__.

Procedure
---------

.. tabs::

   .. tab:: {+atlas-cli+}
      :tabid: atlascli

      .. include:: /includes/steps/enable-unified-aws-access-cli.rst

   .. tab:: {+atlas-admin-api+}
      :tabid: api
   
      .. include:: /includes/steps/enable-unified-aws-access.rst
 
   .. tab:: {+atlas-ui+}
      :tabid: ui

      .. include:: /includes/setup-aws-iam-roles.rst

      .. _authorize-existing-aws-role:

      Add Trust Relationships to an Existing Role
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      1. Click :guilabel:`Add Trust Relationships to an Existing Role` 
         to expand the next section.
      #. Copy the JSON trust relationship text.
      #. In your AWS web console, navigate to the :guilabel:`Roles` 
         section of the IAM dashboard.
      #. Click on the role you want to authorize.
      #. Select the :guilabel:`Trust relationships` tab.
      #. Click the :guilabel:`Edit trust relationship` button.
      #. Replace the existing text with the JSON text you copied in 
         step 2.
      #. Click :guilabel:`Update Trust Policy`.
      #. Copy the Role ARN and paste it in the |service| modal window, 
         in the text box labelled :guilabel:`Enter the Role ARN`.
      #. Click :guilabel:`Validate and Finish`.

Resume an Authorization Procedure
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you cancel a procedure to authorize an AWS IAM role for use with 
|service|, you can resume it where you left off.

.. procedure::
   :style: normal

   .. include:: /includes/nav/steps-project-integrations.rst

   .. step:: Resume authorization.

      a. Click the :guilabel:`Configure` button in the
         :guilabel:`AWS IAM Role Access` panel.

         .. note::

            If you already have one or more roles configured, the 
            button reads :guilabel:`Edit`.

      #. Any roles with an ongoing authorization procedure are listed 
         with an ``in progress`` status. Click the :guilabel:`Resume` 
         button to resume the authorization process.

         To cancel an in-progress role authorization completely, click 
         the :guilabel:`Delete` icon next to the in-progress role.

Deauthorize an Assumed IAM Role
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You can deauthorize an existing |aws| IAM role from your |service| 
account with the {+atlas-admin-api+} or the {+atlas-ui+}.

.. note::

   Be sure to remove any associated |service| services from the IAM role
   before you deauthorize it.

.. tabs::

   .. tab:: {+atlas-cli+}
      :tabid: atlascli

      .. include:: /includes/extracts/atlas-cloudProviders-accessRoles-aws-deauthorize.rst

   .. tab:: {+atlas-admin-api+}
      :tabid: api
   
      Use the ``DELETE`` API endpoint described in the 
      :oas-atlas-op:`API documentation 
      </deauthorizeCloudProviderAccessRole>`.

   .. tab:: {+atlas-ui+}
      :tabid: ui

      .. procedure::
         :style: normal

         .. include:: /includes/nav/steps-project-integrations.rst

         .. step:: Deauthorize the assumed IAM Role.

            a. Click the :guilabel:`Edit` button in the 
               :guilabel:`AWS IAM Role Access` panel.
      
            #. Click the :guilabel:`Delete` button next to the IAM role 
               you want to deauthorize.

.. _manage-iam-roles:

Manage AWS IAM Roles
--------------------

.. tabs::

   .. tab:: {+atlas-cli+}
      :tabid: atlascli

      .. include:: /includes/extracts/atlas-cloudProviders-accessRoles-aws-authorize.rst 
         
   .. tab:: {+atlas-admin-api+}
      :tabid: api

      You can manage |aws| IAM roles using the :oas-atlas-tag:`API 
      </Cloud-Provider-Access>`.

   .. tab:: {+atlas-ui+}
      :tabid: ui

      .. include:: /includes/manage-aws-iam-roles-ui.rst
