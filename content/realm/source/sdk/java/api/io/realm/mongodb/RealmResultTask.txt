.. meta::
   :robots: noindex, nosnippet


.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol



Interface RealmResultTask
^^^^^^^^^^^^^^^^^^^^^^^^^

.. _io_realm_mongodb_RealmResultTask:



io.realm.mongodb
================

**Implemented interfaces:**



- :ref:`io.realm.RealmAsyncTask <io_realm_RealmAsyncTask>` 


The RealmResultTask is a specific version of :ref:`RealmAsyncTask <io_realm_RealmAsyncTask>`  that provides a mechanism to work with asynchronous operations carried out against MongoDB Realm that yield a result.

This class offers both blocking (``get`` ) and non-blocking (``getAsync`` ) method calls.






Method Summary
==============

.. list-table::
   :header-rows: 1
   
   * - Modifier and Type
     - Method and Description
   
   * - public **T**
     - | :ref:`get <io_realm_mongodb_RealmResultTask_get>` ()
       | 
       
       
       Blocks the thread on which the call is made until the result of the operation arrives.
       
       
       
   
   * - public **void**
     - | :ref:`getAsync <io_realm_mongodb_RealmResultTask_getAsync>` (
       |  :ref:`io.realm.mongodb.App.Callback\<T> <io_realm_mongodb_App_Callback>`  callback
       | )
       
       
       Provides a way to subscribe to asynchronous operations via a callback, which handles both results and errors.
       
       
       
   
   


Inherited Methods
=================



Method Detail
=============

.. _get:

.. _get__:

.. _RealmResultTask_get:

.. _RealmResultTask_get__:

.. _io_realm_mongodb_RealmResultTask_get:

.. _io_realm_mongodb_RealmResultTask_get__:



get
----

.. list-table::
   :header-rows: 1
   
   * - | public **T** :ref:`get <io_realm_mongodb_RealmResultTask_get>` ()
       | 
       
       
       
   
   * - Blocks the thread on which the call is made until the result of the operation arrives.
       
       
       
       
       
       
       **Returns**
       
       the result of the operation executed by this task.
       
       
       
       
       
       
       
   
   


.. _getAsync:

.. _getAsync__:

.. _RealmResultTask_getAsync:

.. _RealmResultTask_getAsync__:

.. _io_realm_mongodb_RealmResultTask_getAsync:

.. _io_realm_mongodb_RealmResultTask_getAsync__:



getAsync
--------

.. _io_realm_mongodb_RealmResultTask_getAsync_io_realm_mongodb_App_Callback_:

.. _io_realm_mongodb_RealmResultTask_getAsync_Callback_:

.. _io_realm_mongodb_RealmResultTask_getAsync_App_Callback_:

.. _getAsync_io_realm_mongodb_App_Callback_:

.. _getAsync_Callback_:

.. _getAsync_App_Callback_:

.. _RealmResultTask_getAsync_io_realm_mongodb_App_Callback_:

.. _RealmResultTask_getAsync_Callback_:

.. _RealmResultTask_getAsync_App_Callback_:

.. _io_realm_mongodb_RealmResultTask_getAsync_App_Callback_T__:

.. list-table::
   :header-rows: 1
   
   * - | public **void** :ref:`getAsync <io_realm_mongodb_RealmResultTask_getAsync>` (
       |  :ref:`io.realm.mongodb.App.Callback\<T> <io_realm_mongodb_App_Callback>`  callback
       | )
       
       
       
   
   * - Provides a way to subscribe to asynchronous operations via a callback, which handles both results and errors.
       
       
       
       
       **Parameters**
       
       - ``callback`` - the :ref:`App.Callback <io_realm_mongodb_App_Callback>`  designed to receive results.
          
          
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if called from a thread without a `android.os.Looper <https://developer.android.com/reference/android/os/Looper>`__  or from an `android.app.IntentService <https://developer.android.com/reference/android/app/IntentService>`__  thread.
          
          
          
          
          
       
       
       
       
       
   
   



