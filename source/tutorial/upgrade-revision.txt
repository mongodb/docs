=========================================
Upgrade to the Latest Revision of MongoDB
=========================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Revisions provide security patches, bug fixes, and new or changed
features that do not contain any backward breaking changes. Always
upgrade to the latest revision in your release series. The third number
in the :ref:`MongoDB version number <release-version-numbers>` indicates
the revision.

.. _upgrade-options:

Before Upgrading
----------------

- Ensure you have an up-to-date backup of your data set. See
  :doc:`/core/backups`.

- Consult the following documents for any special considerations or
  compatibility issues specific to your MongoDB release:

  - The release notes, located at :doc:`/release-notes`.

  - The documentation for your driver. See :ecosystem:`Drivers
    </drivers>` and :ecosystem:`Driver Compatibility
    </drivers/driver-compatibility-reference>` pages for more information.

- If your installation includes :term:`replica sets <replica set>`, plan
  the upgrade during a predefined maintenance window.

  .. TODO check: Upgrading a replica set typically involves 10-20 seconds of downtime.

- Before you upgrade a production environment, use the procedures in
  this document to upgrade a *staging* environment that reproduces your
  production environment, to ensure that your production configuration
  is compatible with all changes.

.. _upgrade-procedure:

Upgrade Procedure
-----------------

.. important:: Always backup all of your data before upgrading MongoDB.

Upgrade each :binary:`~bin.mongod` and :binary:`~bin.mongos` binary
separately, using the procedure described here. When upgrading a binary,
use the procedure :ref:`upgrade-mongodb-instance`.

Follow this upgrade procedure:

1. For deployments that use authentication, first upgrade all of your
   MongoDB :doc:`drivers </applications/drivers>`. To upgrade, see the
   documentation for your driver as well as the :ecosystem:`Driver
   Compatibility </drivers/driver-compatibility-reference>` page.

#. Upgrade sharded clusters, as described in
   :ref:`upgrade-sharded-cluster`.

#. Upgrade any standalone instances. See :ref:`upgrade-mongodb-instance`.

#. Upgrade any replica sets that are not part of a sharded cluster, as
   described in :ref:`upgrade-replica-set`.

.. _upgrade-mongodb-instance:

Upgrade a MongoDB Instance
--------------------------

To upgrade a :binary:`~bin.mongod` or :binary:`~bin.mongos` instance, use one
of the following approaches:

- Upgrade the instance using the operating system's package management
  tool and the official MongoDB packages. This is the preferred
  approach. See :doc:`/installation`.

- Upgrade the instance by replacing the existing binaries with new
  binaries. See :ref:`upgrade-replace-binaries`.

.. _upgrade-replace-binaries:

Replace the Existing Binaries
-----------------------------

.. important:: Always backup all of your data before upgrading MongoDB.

This section describes how to upgrade MongoDB by replacing the existing
binaries. The preferred approach to an upgrade is to use the operating
system's package management tool and the official MongoDB packages, as
described in :doc:`/installation`.

To upgrade a :binary:`~bin.mongod` or :binary:`~bin.mongos` instance by
replacing the existing binaries:

1. Download the binaries for the latest MongoDB revision from the
   `MongoDB Download Page`_ and store the binaries in a temporary
   location. The binaries download as compressed files that uncompress
   to the directory structure used by the MongoDB installation.

#. Shutdown the instance.

#. Replace the existing MongoDB binaries with the downloaded binaries.

#. Restart the instance.

.. _`MongoDB Download Page`: http://downloads.mongodb.org/

.. _upgrade-sharded-cluster:

Upgrade Sharded Clusters
------------------------

.. versionchanged:: 3.4

   The procedure applies to |version|. To make revision upgrades for
   other versions of MongoDB sharded clusters, refer to the appropriate
   version of the manual.

To upgrade a |version| sharded cluster:

1. Disable the cluster's balancer as described in
   :ref:`sharding-balancing-disable-temporarily`.

#. Upgrade the :ref:`config servers <sharding-config-server>`.

   To upgrade the config server replica set, use the procedures in
   :ref:`upgrade-replica-set`.

#. Upgrade each shard.

   - If a shard is a replica set, upgrade the shard using the
     procedure titled :ref:`upgrade-replica-set`.

   - If a shard is a standalone instance, upgrade the shard using the
     procedure titled
     :ref:`upgrade-mongodb-instance`.

#. Upgrade each :binary:`~bin.mongos` instance by following the instructions
   in :ref:`upgrade-mongodb-instance`. You can upgrade the
   :binary:`~bin.mongos` instances in any order.


#. Re-enable the balancer, as described in :ref:`sharding-balancing-re-enable`.

.. _upgrade-replica-set:

Upgrade Replica Sets
--------------------

To upgrade a replica set, upgrade each member individually, starting with
the :term:`secondaries <secondary>` and finishing with the
:term:`primary`. Plan the upgrade during a predefined maintenance window.

.. TODO check: Upgrading a replica set typically involves 10-20 seconds of downtime.

Upgrade Secondaries
~~~~~~~~~~~~~~~~~~~

Upgrade each secondary separately as follows:

1. Upgrade the secondary's :binary:`~bin.mongod` binary by following the
   instructions in :ref:`upgrade-mongodb-instance`.

#. After upgrading a secondary, wait for the secondary to recover to
   the ``SECONDARY`` state before upgrading the next instance. To
   check the member's state, issue :method:`rs.status()` in the
   :binary:`~bin.mongo` shell.

   The secondary may briefly go into ``STARTUP2`` or ``RECOVERING``.
   This is normal. Make sure to wait for the secondary to fully recover
   to ``SECONDARY`` before you continue the upgrade.

Upgrade the Primary
~~~~~~~~~~~~~~~~~~~

1. Step down the primary to initiate the normal :ref:`failover
   <replica-set-failover>` procedure. Using one of the following:

   - The :method:`rs.stepDown()` helper in the :binary:`~bin.mongo` shell.

   - The :dbcommand:`replSetStepDown` database command.

   During failover, the set cannot accept writes. Typically this takes
   10-20 seconds. Plan the upgrade during a predefined maintenance
   window.

   .. note:: Stepping down the primary is preferable to directly
      *shutting down* the primary. Stepping down expedites the
      failover procedure.

#. Once the primary has stepped down, call the :method:`rs.status()`
   method from the :binary:`~bin.mongo` shell until you see that another
   member has assumed the ``PRIMARY`` state.

#. Shut down the original primary and upgrade its instance by
   following the instructions in :ref:`upgrade-mongodb-instance`.
