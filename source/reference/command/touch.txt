=====
touch
=====

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. dbcommand:: touch

   The :dbcommand:`touch` command loads data from the data storage
   layer into memory. :dbcommand:`touch` can load the data
   (i.e. documents) indexes or both documents and indexes. Use this
   command to ensure that a collection, and/or its indexes, are in
   memory before another operation. By loading the collection or
   indexes into memory, :binary:`~bin.mongod` will ideally be able to
   perform subsequent operations more efficiently. The
   :dbcommand:`touch` command has the following prototypical form:

   .. code-block:: javascript

      { touch: [collection], data: [boolean], index: [boolean] }

   By default, ``data`` and ``index`` are false, and
   :dbcommand:`touch` will perform no operation. For example, to load
   both the data and the index for a collection named ``records``, you
   would use the following command in the :binary:`~bin.mongo` shell:

   .. code-block:: javascript

      db.runCommand({ touch: "records", data: true, index: true })

   :dbcommand:`touch` will not block read and write operations on a
   :binary:`~bin.mongod`, and can run on :term:`secondary` members of
   replica sets.


Considerations
--------------

Performance Impact
~~~~~~~~~~~~~~~~~~

Using :dbcommand:`touch` to control or tweak what a
:binary:`~bin.mongod` stores in memory may displace other records
data in memory and hinder performance. Use with caution in
production systems.

Replication and Secondaries
~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you run :dbcommand:`touch` on a secondary, the secondary will
enter a ``RECOVERING`` state to prevent clients from sending
read operations during the :dbcommand:`touch` operation. When
:dbcommand:`touch` finishes the secondary will automatically
return to ``SECONDARY`` state.  See
:data:`~replSetGetStatus.members.state` for more information on
replica set member states.

Storage Engines
~~~~~~~~~~~~~~~

.. versionchanged:: 3.0.0

If the current storage engine does not support :dbcommand:`touch`,
the :dbcommand:`touch` command will return an error.

The MMAPv1 storage engine supports :dbcommand:`touch`.

The WiredTiger storage engine does *not* support :dbcommand:`touch`.
