#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/tutorial/upgrade-revision.txt:3
msgid "Upgrade to the Latest Revision of MongoDB"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:13
msgid ""
"Revisions provide security patches, bug fixes, and new or changed "
"features that do not contain any backward breaking changes. Always "
"upgrade to the latest revision in your release series. The third number "
"in the :ref:`MongoDB version number <release-version-numbers>` indicates "
"the revision."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:22
msgid "Before Upgrading"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:24
msgid ""
"Ensure you have an up-to-date backup of your data set. See "
":doc:`/core/backups`."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:27
msgid ""
"Consult the following documents for any special considerations or "
"compatibility issues specific to your MongoDB release:"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:30
msgid "The release notes, located at :doc:`/release-notes`."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:32
msgid ""
"The documentation for your driver. See :ecosystem:`Drivers </drivers>` "
"and :ecosystem:`Driver Compatibility </drivers/driver-compatibility-"
"reference>` pages for more information."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:36
msgid ""
"If your installation includes :term:`replica sets <replica set>`, plan "
"the upgrade during a predefined maintenance window."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:41
msgid ""
"Before you upgrade a production environment, use the procedures in this "
"document to upgrade a *staging* environment that reproduces your "
"production environment, to ensure that your production configuration is "
"compatible with all changes."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:48
msgid ""
"Starting in MongoDB 3.6, MongoDB enables support for "
":readconcern:`\"majority\"` read concern by default."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:51
msgid ""
"For MongoDB 3.6.1 - 3.6.x, you can disable read concern "
":readconcern:`\"majority\"` to prevent the storage cache pressure from "
"immobilizing a deployment with a primary-secondary-arbiter (PSA) "
"architecture. Disabling :readconcern:`\"majority\"` read concern also "
"disables support for :doc:`/changeStreams`"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:57
msgid "For more information, see :ref:`3.6-disable-read-concern-majority`."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:62
msgid "Upgrade Procedure"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:64
#: ../source/tutorial/upgrade-revision.txt:105
msgid "Always backup all of your data before upgrading MongoDB."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:66
msgid ""
"Upgrade each :binary:`~bin.mongod` and :binary:`~bin.mongos` binary "
"separately, using the procedure described here. When upgrading a binary, "
"use the procedure :ref:`upgrade-mongodb-instance`."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:70
msgid "Follow this upgrade procedure:"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:72
msgid ""
"For deployments that use authentication, first upgrade all of your "
"MongoDB :ecosystem:`drivers </drivers>`. To upgrade, see the "
"documentation for your driver as well as the :ecosystem:`Driver "
"Compatibility </drivers/driver-compatibility-reference>` page."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:77
msgid "Upgrade sharded clusters, as described in :ref:`upgrade-sharded-cluster`."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:80
msgid "Upgrade any standalone instances. See :ref:`upgrade-mongodb-instance`."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:82
msgid ""
"Upgrade any replica sets that are not part of a sharded cluster, as "
"described in :ref:`upgrade-replica-set`."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:88
msgid "Upgrade a MongoDB Instance"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:90
msgid ""
"To upgrade a :binary:`~bin.mongod` or :binary:`~bin.mongos` instance, use"
" one of the following approaches:"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:93
msgid ""
"Upgrade the instance using the operating system's package management tool"
" and the official MongoDB packages. This is the preferred approach. See "
":doc:`/installation`."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:97
msgid ""
"Upgrade the instance by replacing the existing binaries with new "
"binaries. See :ref:`upgrade-replace-binaries`."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:103
msgid "Replace the Existing Binaries"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:107
msgid ""
"This section describes how to upgrade MongoDB by replacing the existing "
"binaries. The preferred approach to an upgrade is to use the operating "
"system's package management tool and the official MongoDB packages, as "
"described in :doc:`/installation`."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:112
msgid ""
"To upgrade a :binary:`~bin.mongod` or :binary:`~bin.mongos` instance by "
"replacing the existing binaries:"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:115
msgid ""
"Download the binaries for the latest MongoDB revision from the `MongoDB "
"Download Page`_ and store the binaries in a temporary location. The "
"binaries download as compressed files that uncompress to the directory "
"structure used by the MongoDB installation."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:120
msgid "Shutdown the instance."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:122
msgid "Replace the existing MongoDB binaries with the downloaded binaries."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:124
msgid "Restart the instance."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:131
msgid "Upgrade Sharded Clusters"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:135
msgid ""
"The procedure applies to |version|. To make revision upgrades for other "
"versions of MongoDB sharded clusters, refer to the appropriate version of"
" the manual."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:139
msgid "To upgrade a |version| sharded cluster:"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:141
msgid ""
"Disable the cluster's balancer as described in :ref:`sharding-balancing-"
"disable-temporarily`."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:144
msgid "Upgrade the :ref:`config servers <sharding-config-server>`."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:146
msgid ""
"To upgrade the config server replica set, use the procedures in :ref"
":`upgrade-replica-set`."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:149
msgid "Upgrade each shard."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:151
msgid ""
"If a shard is a replica set, upgrade the shard using the procedure titled"
" :ref:`upgrade-replica-set`."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:154
msgid ""
"If a shard is a standalone instance, upgrade the shard using the "
"procedure titled :ref:`upgrade-mongodb-instance`."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:158
msgid ""
"Upgrade each :binary:`~bin.mongos` instance by following the instructions"
" in :ref:`upgrade-mongodb-instance`. You can upgrade the "
":binary:`~bin.mongos` instances in any order."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:163
msgid ""
"Re-enable the balancer, as described in :ref:`sharding-balancing-re-"
"enable`."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:168
msgid "Upgrade Replica Sets"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:170
msgid ""
"To upgrade a replica set, upgrade each member individually, starting with"
" the :term:`secondaries <secondary>` and finishing with the "
":term:`primary`. Plan the upgrade during a predefined maintenance window."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:177
msgid "Upgrade Secondaries"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:179
msgid "Upgrade each secondary separately as follows:"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:181
msgid ""
"Upgrade the secondary's :binary:`~bin.mongod` binary by following the "
"instructions in :ref:`upgrade-mongodb-instance`."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:184
msgid ""
"After upgrading a secondary, wait for the secondary to recover to the "
"``SECONDARY`` state before upgrading the next instance. To check the "
"member's state, issue :method:`rs.status()` in the :binary:`~bin.mongo` "
"shell."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:189
msgid ""
"The secondary may briefly go into ``STARTUP2`` or ``RECOVERING``. This is"
" normal. Make sure to wait for the secondary to fully recover to "
"``SECONDARY`` before you continue the upgrade."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:194
msgid "Upgrade the Primary"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:196
msgid ""
"Step down the primary to initiate the normal :ref:`failover <replica-set-"
"failover>` procedure. Using one of the following:"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:199
msgid "The :method:`rs.stepDown()` helper in the :binary:`~bin.mongo` shell."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:201
msgid "The :dbcommand:`replSetStepDown` database command."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:203
msgid ""
"During failover, the set cannot accept writes. Typically this takes 10-20"
" seconds. Plan the upgrade during a predefined maintenance window."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:207
msgid ""
"Stepping down the primary is preferable to directly *shutting down* the "
"primary. Stepping down expedites the failover procedure."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:211
msgid ""
"Once the primary has stepped down, call the :method:`rs.status()` method "
"from the :binary:`~bin.mongo` shell until you see that another member has"
" assumed the ``PRIMARY`` state."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:215
msgid ""
"Shut down the original primary and upgrade its instance by following the "
"instructions in :ref:`upgrade-mongodb-instance`."
msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid "To upgrade a sharded cluster:"
#~ msgstr ""

#~ msgid ""
#~ "Disable the cluster's balancer, as "
#~ "described in :ref:`sharding-balancing-"
#~ "disable-temporarily`."
#~ msgstr ""

#~ msgid ""
#~ "Upgrade each :program:`mongos` instance by "
#~ "following the instructions below in :ref"
#~ ":`upgrade-mongodb-instance`. You can "
#~ "upgrade the :program:`mongos` instances in "
#~ "any order."
#~ msgstr ""

#~ msgid ""
#~ "Upgrade each :program:`mongod` :ref:`config "
#~ "server <sharding-config-server>` individually"
#~ " starting with the last config server"
#~ " listed in your :option:`mongos --configdb`"
#~ " string and working backward. To keep"
#~ " the cluster online, make sure at "
#~ "least one config server is always "
#~ "running. For each config server upgrade,"
#~ " follow the instructions below in "
#~ ":ref:`upgrade-mongodb-instance`"
#~ msgstr ""

#~ msgid "Example"
#~ msgstr ""

#~ msgid "You would upgrade the config servers in the following order:"
#~ msgstr ""

#~ msgid "cfg2.example.net"
#~ msgstr ""

#~ msgid "cfg1.example.net"
#~ msgstr ""

#~ msgid "cfg0.example.net"
#~ msgstr ""

#~ msgid ""
#~ "If a shard is a replica set, "
#~ "upgrade the shard using the procedure"
#~ " below titled :ref:`upgrade-replica-set`."
#~ msgstr ""

#~ msgid ""
#~ "If a shard is a standalone "
#~ "instance, upgrade the shard using the"
#~ " procedure below titled :ref:`upgrade-"
#~ "mongodb-instance`."
#~ msgstr ""

#~ msgid ""
#~ "Upgrade the secondary's :program:`mongod` "
#~ "binary by following the instructions "
#~ "below in :ref:`upgrade-mongodb-instance`."
#~ msgstr ""

#~ msgid ""
#~ "Shut down the original primary and "
#~ "upgrade its instance by following the"
#~ " instructions below in :ref:`upgrade-"
#~ "mongodb-instance`."
#~ msgstr ""

# 61790b54231e4557876955499db61eeb
#~ msgid "On this page"
#~ msgstr ""

# 4acb08b57ac54f3cabefcce91819c5f5
#~ msgid ""
#~ "Upgrade each :program:`mongod` and "
#~ ":program:`mongos` binary separately, using the"
#~ " procedure described here. When upgrading"
#~ " a binary, use the procedure :ref"
#~ ":`upgrade-mongodb-instance`."
#~ msgstr ""

# e0a3757f8e18474da854f9a14cf73dcb
#~ msgid ""
#~ "For deployments that use authentication, "
#~ "first upgrade all of your MongoDB "
#~ ":doc:`drivers </applications/drivers>`. To upgrade,"
#~ " see the documentation for your "
#~ "driver as well as the :ecosystem:`Driver"
#~ " Compatibility </drivers/driver-compatibility-"
#~ "reference>` page."
#~ msgstr ""

# e809a10704bc4ae0b9437371ca59843e
#~ msgid ""
#~ "To upgrade a :program:`mongod` or "
#~ ":program:`mongos` instance, use one of "
#~ "the following approaches:"
#~ msgstr ""

# 6bfe4bc1b19a4578b2b0a9b447bb86a6
#~ msgid ""
#~ "To upgrade a :program:`mongod` or "
#~ ":program:`mongos` instance by replacing the"
#~ " existing binaries:"
#~ msgstr ""

# 7a65bb21ed804f1d99d4e66481b70769
#~ msgid ""
#~ "Upgrade each :program:`mongos` instance by "
#~ "following the instructions in :ref"
#~ ":`upgrade-mongodb-instance`. You can "
#~ "upgrade the :program:`mongos` instances in "
#~ "any order."
#~ msgstr ""

# b716f8083dd24311a2623ccaeca55cf3
#~ msgid ""
#~ "Upgrade the secondary's :program:`mongod` "
#~ "binary by following the instructions in"
#~ " :ref:`upgrade-mongodb-instance`."
#~ msgstr ""

# 2b27e33d5262446b9a264944a4aeef7a
#~ msgid ""
#~ "After upgrading a secondary, wait for"
#~ " the secondary to recover to the "
#~ "``SECONDARY`` state before upgrading the "
#~ "next instance. To check the member's "
#~ "state, issue :method:`rs.status()` in the "
#~ ":program:`mongo` shell."
#~ msgstr ""

# 82fa02db48df4a2ca17e0e029d48586c
#~ msgid "The :method:`rs.stepDown()` helper in the :program:`mongo` shell."
#~ msgstr ""

# 390c2415c43f472c8c2f7f16cf070fd7
#~ msgid ""
#~ "Once the primary has stepped down, "
#~ "call the :method:`rs.status()` method from "
#~ "the :program:`mongo` shell until you see"
#~ " that another member has assumed the"
#~ " ``PRIMARY`` state."
#~ msgstr ""

# 40898f821efc43d39cafee558dac094b
#~ msgid "Additional Resources"
#~ msgstr ""

# 35986a9bc1b74c84ba126ff4263ba486
#~ msgid ""
#~ "`Getting ready for MongoDB 3.2? Get "
#~ "our help. <https://www.mongodb.com/contact/mongodb-3-2"
#~ "-upgrade-services?jmp=docs>`_"
#~ msgstr ""

