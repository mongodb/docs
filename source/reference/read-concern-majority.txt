.. default-domain:: mongodb

===========================
Read Concern ``"majority"``
===========================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. readconcern:: "majority"

For read operations not associated with :doc:`multi-document
transactions </core/transactions>`, read concern ``"majority"``
guarantees that the data read has been acknowledged by a majority of
the replica set members (i.e. the documents read are durable and
guaranteed not to roll back).

For operations in :doc:`multi-document transactions
</core/transactions>`, read concern ``"majority"`` provides its
guarantees only if the transaction commits with :ref:`write concern
"majority" <transactions-write-concern>`. Otherwise, the
:readconcern:`"majority"` read concern provides no guarantees about the
data read in transactions.

.. include:: /includes/fact-readConcern-most-recent-data-in-node.rst

Performance
-----------

Each replica set member maintains, in memory, a view of the data at the
majority-commit point; the majority-commit point is calculated by the
primary. To fulfill read concern ``"majority"``, the node returns data
from this view and is comparable in performance cost to other read
concerns.

Availability
------------

Read concern :readconcern:`"majority"` is available for use with or
without causally consistent sessions and transactions.

Example
-------

.. include:: /includes/fact-read-concern-write-timeline.rst

Then, the following tables summarizes the state of the data that a read
operation with :readconcern:`"majority"` read concern would see at
time ``T``.

.. figure:: /images/read-concern-write-timeline.svg
   :alt: Timeline of a write operation to a three member replica set.
   :figwidth: 330px


.. list-table::
   :header-rows: 1

   * - Read Target
     - Time ``T``
     - State of Data

   * - Primary
     - Before t\ :sub:`3`
     - Data reflects Write\ :sub:`prev`

   * - Primary
     - After t\ :sub:`3`
     - Data reflects Write\ :sub:`0`

   * - Secondary\ :sub:`1`
     - Before t\ :sub:`5`
     - Data reflects Write\ :sub:`prev`

   * - Secondary\ :sub:`1`
     - After t\ :sub:`5`
     - Data reflects Write\ :sub:`0`

   * - Secondary\ :sub:`2`
     - Before or at t\ :sub:`6`
     - Data reflects Write\ :sub:`prev`

   * - Secondary\ :sub:`2`
     - After t\ :sub:`6`
     - Data reflects Write\ :sub:`0`

Storage Engine Support
----------------------

Read concern :readconcern:`"majority"` is available for the
WiredTiger storage engine.

.. tip::

   The :dbcommand:`serverStatus` command returns the
   :serverstatus:`storageEngine.supportsCommittedReads` field which
   indicates whether the storage engine supports ``"majority"`` read
   concern.

.. _readconcern-majority-txn:

Read Concern ``"majority"`` and Transactions
--------------------------------------------

.. note:: 

   You set the read concern at the transaction level, not at the
   individual operation level. To set the read concern for
   transactions, see :ref:`transactions-read-concern`.

For operations in :doc:`multi-document transactions
</core/transactions>`, read concern ``"majority"`` provides its
guarantees only if the transaction commits with :ref:`write concern
"majority" <transactions-write-concern>`. Otherwise, the
:readconcern:`"majority"` read concern provides no guarantees about the
data read in transactions.

Read Concern ``"majority"`` and Aggregation
--------------------------------------------

.. include:: /includes/fact-aggregate-readConcern.rst

Read Your Own Writes
--------------------

.. versionchanged:: 3.6

.. include:: /includes/fact-read-own-writes.rst

.. _disable-read-concern-majority:                                      
                                                                        
Disable Read Concern Majority                                           
-----------------------------                                           
                                                                        
*For 3-Member Primary-Secondary-Arbiter Architecture*                   

.. include:: /includes/fact-eMRC-always-true-in-5.0.rst
