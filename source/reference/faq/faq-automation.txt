.. _faq-automation:

===============
FAQ: Automation
===============

This addresses common questions about |mms| and its Automation
features.

|mms| can automate management operations for your monitored MongoDB
processes, allowing you to reconfigure, stop, and restart MongoDB
through the |mms| interface.

|mms| Automation can run only on 64-bit architectures.

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

What versions of MongoDB does |mms| manage?
-------------------------------------------

For specific |mms| functions and supported MongoDB versions, see
:doc:`/reference/mongodb-compatibility`.

How does |mms| manage MongoDB deployments?
------------------------------------------

.. TODO This information should be incorporated into the main content
   of the manual and not hidden in an FAQ.

After you provision servers in |mms| or deploy the agent
in the environment of the MongoDB deployment, each agent
periodically communicates with |mms| and performs any required work.

Agents constantly reassess their environment to adapt their work as
necessary. As part of this routine activity, the agent establishes
frequent short-lived connections to the cluster members. If an agent
encounters an issue, such as network connectivity problems or |mms|
failure, the agents adjust their work to compensate and safely arrive at
their goal state.

Agents create plans to move from their current state to a goal state.
Plans execute in steps, where each step is autonomous and independent
of other steps.

.. example::

   For an installation, the plan involves downloading MongoDB, starting
   the process with the appropriate command line options, initializing
   the replica set, waiting for a healthy majority. The configuration
   reaches goal state when the replica set is active and has a healthy
   majority.

.. _rolling-restart-faq:

How does |mms| perform maintenance on cluster nodes?
----------------------------------------------------

|mms| performs a :cloudmgr:`rolling restart </reference/glossary/#std-term-rolling-restart>` when you perform maintenance
on nodes in a cluster. The agent updates nodes in a cluster one-by-one,
always maintaining a primary node, until all nodes are updated to 
maintain cluster availability during a maintenance period.

For each secondary node in the cluster, the agent:

1. Restarts the |mongod| process running on the node in ``standalone`` 
   mode.
#. Performs the maintenance task.
#. Restarts the |mongod| process running on the node in ``replSet`` 
   mode.

After the secondary nodes are updated, the agent:

1. Steps the primary down using the :manual:`rs.stepDown() 
   </reference/method/rs.stepDown/>` command.
#. Triggers an election for a new primary node.
#. Performs the maintenance task on the former primary node.
#. Restarts the |mongod| process running on the former primary node in   
   ``replSet`` mode to join the cluster as a secondary node.

In |mms|, the agent performs rolling restarts on cluster nodes for 
maintenance tasks, including the following:

- Rotating |kmip| keys.
- Rotating keyfiles.
- Changing |mongod| configuration arguments.
- Upgrading or downgrading |tls|, ``auth``, or ``clusterAuth`` mode.
- Changing the MongoDB version.
- Changing the oplog size.
- Removing a process from a replica set.
- Cancelling a restore from backup.
- Enabling the Profiler

.. seealso::

   :doc:`/tutorial/prepare-for-maintenance/`

How many agents do I need?
--------------------------

To use Automation, you must have an agent running on every host where
a managed MongoDB instance runs.

Is any MongoDB data transferred by the agent?
---------------------------------------------

Agents do *not* transmit any data records from a MongoDB deployment.
The agents only communicate deployment configuration information and
MongoDB logs.

Will |mms| handle failures during an upgrade?
---------------------------------------------

Generally speaking, yes. The design of the management and automation
components of |mms| do not account for *all* possible failures; however
the architecture of the system can work around many types of failures.


What types of deployment can I create in |mms|?
-----------------------------------------------

.. include:: /includes/compatible-mongodb-deployment-types.rst

.. Cloud Provider questions:

.. include:: /includes/extracts/faq-cloud-providers.rst
