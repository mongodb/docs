.. _security-auth-x509:

=====
x.509
=====

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

MongoDB supports x.509 certificate authentication for client authentication and
internal authentication of the members of replica sets and sharded clusters.

x.509 certificate authentication requires a secure :doc:`TLS/SSL connection
</tutorial/configure-ssl>`.

.. note::

   .. include:: /includes/fact-tls-1.0.rst

.. |binary| replace:: MongoDB

Certificate Authority
---------------------

.. include:: /includes/fact-ssl-certificate-authorities.rst

.. _x509-client-certificate-auth:

Client x.509 Certificates
-------------------------

To authenticate to servers, clients can use x.509 certificates instead
of usernames and passwords.

Client Certificate Requirements
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/extracts/x509-certificate-client.rst

.. _client-x509-mongodb-user:

MongoDB User and ``$external`` Database
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To authenticate with a client certificate, you must first add the value
of the ``subject`` from the client certificate as a MongoDB user. Each
unique x.509 client certificate corresponds to a single MongoDB user;
i.e. you cannot use a single client certificate to authenticate more
than one MongoDB user.

Add the user in the ``$external`` database; i.e. the
:ref:`authentication-database` is the ``$external`` database

.. include:: /includes/extracts/sessions-external-username-limit.rst

Authenticate
~~~~~~~~~~~~

To connect and authenticate using x.509 client certificate:

- For MongoDB 4.2 or greater, include the following options for the client:

  - :option:`--tls <mongo --tls>` (or the deprecated :option:`--ssl
    <mongo --ssl>` option)

  - :option:`--tlsCertificateKeyFile <mongo --tlsCertificateKeyFile>`
    (or the deprecated :option:`--sslPEMKeyFile 
    <mongo --sslPEMKeyFile>` option)
    
  - :option:`--tlsCertificateKeyFilePassword <mongo --tlsCertificateKeyFile>`
    (or the deprecated :option:`--sslPEMKeyPassword 
    <mongo --sslPEMKeyPassword>` option) if the certificate key file is encrypted
    
  - :option:`--authenticationDatabase '$external' 
    <mongo --authenticationDatabase>`

  - :option:`--authenticationMechanism MONGODB-X509 
    <mongo --authenticationMechanism>`

- For MongoDB 4.0 and earlier, include the following options for the client:

  - :option:`--ssl <mongo --ssl>`

  - :option:`--sslPEMKeyFile <mongo --sslPEMKeyFile>`

  - :option:`--sslPEMKeyPassword <mongo --sslPEMKeyPassword>` option if
    the :option:`--sslPEMKeyFile <mongo --sslPEMKeyFile>` is encrypted.

  - :option:`--authenticationDatabase '$external' 
    <mongo --authenticationDatabase>`

  - :option:`--authenticationMechanism MONGODB-X509 <mongo --authenticationMechanism>`

You can also make the TLS/SSL connection first, and then use
:method:`db.auth()` in the ``$external`` database to authenticate.

For examples of both cases, see the :ref:`authenticate-with-x509-cert`
section in :doc:`/tutorial/configure-x509-client-authentication`

Member x.509 Certificates
--------------------------

For internal authentication, members of sharded clusters and replica sets
can use x.509 certificates instead of keyfiles, which use the
:doc:`/core/security-scram` authentication mechanism.

.. _x509-member-certificate-requirements:

Member Certificate Requirements
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/extracts/x509-certificate-member.rst

MongoDB Configuration for Membership Authentication
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/extracts/x509-member-auth-configuration.rst

Next Steps
~~~~~~~~~~

For an example of x.509 internal authentication, see
:doc:`/tutorial/configure-x509-member-authentication`.

.. toctree::
   :titlesonly:
   :hidden:

   /tutorial/configure-x509-client-authentication
