.. facet::
   :name: programming_language
   :values: csharp, go, java, javascript/typescript, python, shell

.. _vector-search-tutorial:

=====================================================================
How to Perform Semantic Search Against Data in Your Atlas {+Cluster+} 
=====================================================================

.. default-domain:: mongodb

.. meta::
   :keywords: atlas vector search, vector search, $vectorSearch, $vectorSearch pipeline stage, atlas vector search pipeline stage, atlas vector search query, atlas vector search index, knnVector field type, atlas search knnVector type, $vectorSearch filter examples, $vectorSearch query examples, $vectorSearch pipeline stage examples, approximate nearest neighbor search, sematic search, code example, node.js, java sync, atlas ui, go, csharp, .NET
   :description: Learn how to search vector embeddings in your data on the Atlas cluster.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

This tutorial describes how to perform an |ann| search on a vector in
the ``plot_embedding`` field in the ``sample_mflix.embedded_movies``
collection on your |service| {+cluster+}. To demonstrate this, it takes
you through the following steps:

1. Create an {+avs+} index on the numeric field named
   ``plot_embedding`` in the ``sample_mflix.embedded_movies``
   collection. 
#. Run {+avs+} queries against the ``plot_embedding`` field in the
   ``sample_mflix.embedded_movies`` collection.

----------

.. |arrow| unicode:: U+27A4

|arrow| Use the **Select your language** drop-down menu to select the
client to use to create the {+avs+} index and run queries.

----------

.. tabs-selector:: drivers
   :default-tabid: python

.. tabs-drivers::

   .. tab::
      :tabid: atlas-ui

   .. tab:: 
      :tabid: csharp

   .. tab:: 
      :tabid: go

   .. tab:: 
      :tabid: java-sync

   .. tab:: 
      :tabid: nodejs

   .. tab:: 
      :tabid: python

      .. cta-banner::
         :url: https://github.com/mongodb/docs-notebooks/blob/main/run-queries/semantic-search.ipynb?tck=docs
         :icon: Code

         Work with a runnable version of this tutorial as a :github:`Python notebook <mongodb/docs-notebooks/blob/main/run-queries/semantic-search.ipynb?tck=docs>`.

   .. tab:: 
      :tabid: shell


Prerequisites 
-------------

.. |query-type| replace:: {+avs+}
.. |search-stage| replace:: :pipeline:`$vectorSearch`
.. |tutorial| replace:: This tutorial
   
Before you begin, complete the :ref:`common prerequisites <avs-tutorials-prereqs>`.
This tutorial includes examples for the following clients:

- :ref:`{+atlas-ui+} <atlas-search-query-ui>`
- {+mongosh+}
- :driver:`MongoDB C# Driver </csharp/>`
- :driver:`MongoDB Go Driver </go/>`
- :driver:`MongoDB Java Driver </java-drivers/>`
- :driver:`MongoDB Node Driver </node/current/>`
- :driver:`MongoDB Python Driver (PyMongo) </pymongo/>`

Create the {+avs+} Index 
------------------------------------

This section demonstrates how to create an {+avs+} index on the
``plot_embedding`` field in the  ``sample_mflix.embedded_movies`` 
collection for running vector queries against the field.

Required Access
~~~~~~~~~~~~~~~

To create an {+avs+} index, you must have :authrole:`Project Data Access 
Admin` or higher access to the project.

Procedure 
~~~~~~~~~

.. |search-type| replace:: :guilabel:`Vector Search`
.. |index-name| replace:: ``vector_index``
.. |database-name| replace:: ``sample_mflix`` database 
.. |collection-name| replace:: ``embedded_movies`` collection
.. |avs-namespace| replace:: ``sample_mflix.embedded_movies``
.. |embedding-field-name| replace:: ``plot_embedding``
.. |similarity-method| replace:: :guilabel:`Dot Product`
.. |quantization-method| replace:: :guilabel:`Scalar`
.. |filter-fields| replace:: ``genres`` and ``year`` fields
   
.. tabs-drivers::

   .. tab::
      :tabid: atlas-ui

      .. include:: /includes/steps-avs-tutorial-create-index-ui.rst

   .. tab:: 
      :tabid: csharp

      .. include:: /includes/steps-avs-tutorial-create-index-csharp.rst

   .. tab:: 
      :tabid: go

      .. include:: /includes/steps-avs-tutorial-create-index-go.rst

   .. tab:: 
      :tabid: java-sync

      .. include:: /includes/steps-avs-tutorial-create-index-java.rst

   .. tab:: 
      :tabid: nodejs

      .. include:: /includes/steps-avs-tutorial-create-index-nodejs.rst

   .. tab:: 
      :tabid: python

      .. include:: /includes/steps-avs-tutorial-create-index-python.rst

   .. tab:: 
      :tabid: shell

      .. include:: /includes/steps-avs-tutorial-create-index-mongosh.rst

Run Queries Using the ``$vectorSearch`` Aggregation Pipeline Stage 
------------------------------------------------------------------

Overview 
~~~~~~~~

This section demonstrates how to query the indexed vector data in
the ``sample_mflix.embedded_movies`` collection using the
the :pipeline:`$vectorSearch` stage. These sample queries also demonstrate 
the various :manual:`query </reference/operator/query/>` and :manual:`aggregation 
pipeline </reference/operator/aggregation/>` operators that we can use
in the query to pre-filter the data that we perform the semantic
search on.

Procedure 
~~~~~~~~~

.. tabs-drivers::

   .. tab::
      :tabid: atlas-ui

      .. include:: /includes/steps-avs-tutorial-run-query-atlas-ui.txt

   .. tab:: 
      :tabid: csharp

      .. include:: /includes/steps-avs-tutorial-run-queries-csharp.rst

   .. tab:: 
      :tabid: go

      .. include:: /includes/steps-avs-tutorial-run-queries-go.txt

   .. tab:: 
      :tabid: java-sync

      .. include:: /includes/steps-avs-tutorial-run-queries-java.txt

   .. tab:: 
      :tabid: nodejs

      .. include:: /includes/steps-avs-tutorial-run-queries-nodejs.txt

   .. tab:: 
      :tabid: python

      .. include:: /includes/steps-avs-tutorial-run-queries-python.txt

   .. tab:: 
      :tabid: shell

      .. include:: /includes/steps-avs-tutorial-run-queries-mongosh.txt
