.. _terminate-running-query:

=============================================
Terminate a Running {+data-lake-short+} Query
=============================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

You can terminate long-running queries using the :manual:`killOp 
</reference/command/killOp/>` command. For more information, see 
:manual:`killOp </reference/command/killOp/>`. In {+adl+}: 

- The ``op`` parameter value is an :manual:`ObjectId 
  </reference/bson-types/#objectid>`. 
- The ``comment`` parameter is not supported.

Only the user who issued the query can terminate the query. To run 
this command, use :manual:`db.runCommand()
</reference/method/db.runCommand>`. You must run :manual:`killOp 
</reference/command/killOp/>` against the ``admin`` database. 

.. _adl-killop-syntax: 

Syntax 
------

.. code-block:: json 

   db.runCommand([{ "killOp": 1, "op":  ObjectId(<hexadecimal>) }])

.. _adl-killop-options:

Options 
-------

.. list-table:: 
   :header-rows: 1
   :widths: 15 15 60 10

   * - Field
     - Type
     - Description
     - Necessity

   * - ``op``
     - :manual:`ObjectId </reference/bson-types/#objectid>`
     - Unique identifier, in :manual:`ObjectId 
       </reference/bson-types/#objectid>` format, of the operation 
       to terminate. You can use :ref:`$currentOp 
       <determine-query-status>` to retrieve the ``opid`` of the 
       operation to terminate.
     - Required

.. _adl-killop-output:

Output 
------

:manual:`killOp </reference/command/killOp/>` returns the following 
if it succeeds in marking the specified operation for termination:

.. code-block:: 
   :copyable: false

   { "info" : "attempting to kill op", "ok" : 1 }

Note that the output is the same whether or not the operation being 
terminated is currently running. You can use :ref:`$currentOp 
<determine-query-status>` to verify that the operation was terminated.

.. _adl-killop-egs:

Examples 
--------

For the example below, suppose a query with ``opid`` value of 
``ObjectId("1635fad364c529820c6f9e76")`` is running. The following 
command terminates this query.

.. code-block:: json 

   use admin 
   db.runCommand({ "killOp": 1, "op": ObjectId("1635fad364c529820c6f9e76") })

The previous command returns the following: 

.. code-block:: json 
   :copyable: false 

   { "info" : "attempting to kill op", "ok" : 1 }
