=============
Configuration
=============

.. default-domain:: mongodb

.. TODO
   - Does Backup also require email settings to be setup?
   - See whether the setting definitions are correct
     (esp the email settings + can the other email settings also take aliases)   
   - Where/How to incorporate previously existing sentence:
     The backing MongoDB store uses a connection string URI defined in the
     ``<install_dir>/conf/conf-mms.properties`` directory.
   - email dao -- other than AWS SES, all others use
   ``com.xgen.svc.core.dao.email.JavaEmailDao``?

Overview
--------

The MMS Application Package and the MMS Backup Daemon Package include a
``conf-mms.properties`` file. Located in the ``<install_dir>/conf/``
directory, the ``conf-mms.properties`` files contain configuration
settings for their respective services.

To start either service, you must configure the
:ref:`application-url-settings` and :ref:`email-address-settings` in
the respective ``conf-mms.properties`` file.

Since the configuration file may contain user credentials in plain
text, follow standard practice and reduce the permissions on the
configuration file:

.. code-block:: sh

   sudo chmod 600 <install_dir>/conf/conf-mms.properties

Settings
--------

.. _application-url-settings:

Application URL Settings
~~~~~~~~~~~~~~~~~~~~~~~~

The following two settings are mandatory.

.. setting:: mms.centralUrl

   *Type*: string

   Required. Fully qualified URL, including the port number, of the MMS
   Monitoring server. For example,

   .. code-block:: ini

      mms.centralUrl=http://mms.example.com:8080

.. setting:: mms.backupCentralUrl

   *Type*: string

   Required. The hostname and port of MMS Backup server. For example,

   .. code-block:: ini

      mms.backupCentralUrl=http://mms.example.com:8081

   You must set :setting:`mms.backupCentralUrl`, even if you are only
   using MMS Monitoring and not MMS Backup.

Email Settings
~~~~~~~~~~~~~~

.. email-address-settings:

Email Address Settings
``````````````````````

The following email address settings are mandatory. You **must** define
them before the |monitoring| instance will start.

.. setting:: mms.fromEmailAddr

   *Type*: string

   Required. The email address used for sending the general emails,
   such as MMS alerts. You can include an alias with the email address.
   For example:

   .. code-block:: ini

      mms.fromEmailAddr=MMS Alerts <mms-alerts@example.com>

.. setting:: mms.replyToEmailAddr

   *Type*: string

   Required. The email address to send replies to general emails. For
   example:

   .. code-block:: ini

      mms.replyToEmailAddr=mms-no-reply@example.com

.. setting:: mms.adminFromEmailAddr

   *Type*: string

   Required. The email address to send messages from the MMS admin. You
   can include an alias with the email address. For example:

   .. code-block:: ini

      mms.adminFromEmailAddr=MMS Admin <mms-admin@example.com>

.. setting:: mms.adminFromEmailAddr

   *Type*: string

   Required. The email address to send messages or replies to the MMS
   admin. You can include an alias with the email address. For example:

   .. code-block:: ini

      mms.adminEmailAddr=mms-admin@example.com

.. setting:: mms.bounceEmailAddr

   *Type*: string
   
   Required. The email address to send bounce messages, i.e. messages
   of non-delivery of alerts or messages from MMS admin. For example:

   .. code-block:: ini

      mms.bounceEmailAddr=bounce@example.com

Email Service Settings
``````````````````````

.. setting:: mms.emailDaoClass

   *Type*: string

   The email interface to use. For AWS Simple Email Service,
   specify ``com.xgen.svc.core.dao.email.AwsEmailDao``, as in:

   .. code-block:: ini

      mms.emailDaoClass=com.xgen.svc.core.dao.email.AwsEmailDao

   For AWS Simple Email Service, see also :setting:`aws.accesskey` and
   :setting:`aws.secretkey`.

   For all others, specify
   ``com.xgen.svc.core.dao.email.JavaEmailDao``, as in:

   .. code-block:: ini

      mms.emailDaoClass=com.xgen.svc.core.dao.email.JavaEmailDao

.. setting:: mms.mail.transport

   *Type*: string
   *Default*: smtp

   Transfer protocol ``smtp`` or ``smtps`` as specified by your email
   provider. For example:

   .. code-block:: ini

      mms.mail.transport=smtp

.. setting:: mms.mail.hostname

   *Type*: string
   *Default*: localhost

   Email hostname as specified by your email provider. For example:

   .. code-block:: ini

      mms.mail.hostname=mail.example.com

.. setting:: mms.mail.hostname

   *Type*: number
   *Default*: 25

   Port number for the transfer protocol as specified by your email
   provider. For example:

   .. code-block:: ini

      mms.mail.port=25

.. setting:: mms.mail.tls

   *Type*: boolean
   *Default*: false

   Indicator of whether the transfer protocol runs on top of TLS. For
   example:

   .. code-block:: ini

      mms.mail.tls=false

.. setting:: mms.mail.username

   *Type*: string

   User name of the email account. If unset, defaults to disabled SMTP
   authentication.

   .. code-block:: ini

       mms.mail.username=

.. setting:: mms.mail.password

   *Type*: string

   Password for the email account. If unset, defaults to disabled SMTP
   authentication.

   .. code-block:: ini

      mms.mail.password=emailPassword

.. setting:: aws.accesskey

   Required if using AWS Simple Email Service. The access key ID for AWS.

   .. code-block:: ini

      aws.accesskey=EXAMPLEAccessKeyID

.. setting:: aws.secretkey

   Required if using AWS Simple Email Service. The secret access key
   for AWS.

   .. code-block:: ini

      aws.secretkey=eXampLe/aCcESs/KEY

.. _twilio-sms-configure:

Twilio SMS Alert Settings
~~~~~~~~~~~~~~~~~~~~~~~~~

To receive alert notifications via SMS, you must have a `Twilio
<http://www.twilio.com/docs/quickstart>`_ account and specify your
Twilio account information in the configuration file.

.. setting:: twilio.account.sid

   *Type*: string

   Twilio account ID.

.. setting:: twilio.auth.token

   *Type*: string

   Twilio API token.

.. setting:: twilio.from.num

   *Type*: string

   Twilio phone number.

MongoDB Settings
~~~~~~~~~~~~~~~~

.. setting:: mongo.mongoUri

   *Type*: string
   
   Required. The :manual:`connection string
   </reference/connection-string/>` to the MongoDB server. For example,
   the following specifies the URI for a replica set:

   .. code-block:: ini

      mongo.mongoUri=mongodb://db1.example.net:40000,db2.example.net:40000,db3.example.net:40000/?maxPoolSize=100

   For a MongoDB server with access control, prefix the hostname with
   the MongoDB username and password in the form
   ``<username>:<password>@``, and append after the port the ``/admin``
   database. For example:

   .. code-block:: ini

      mongo.mongoUri=mongodb://mongodbuser1:password@mydb1.example.net:40000/admin?maxPoolSize=100

   For additional considerations when specifying user credentials, such
   as encrypting user credentials, see
   :ref:`on-prem-authentication-configuration`.
   
   See :manual:`Connection String URI Format
   </reference/connection-string/>` for more information on the
   connection string. 

.. setting:: mongo.replicaSet

   *Type*: string

   Required if using a replica set. The name of the replica set. For example:

   .. code-block:: ini

      mongo.replicaSet=mmsreplset

.. setting:: mongo.encryptedCredentials

   *Type*: boolean

   Optional. Set to ``true`` if :setting:`mongo.mongoUri` contains the
   encrypted username and password.

   .. code-block:: ini

      mongo.encryptedCredentials=true

   The username and password must have been encrypted using the
   |monitoring| ``credentialstool``. See
   :ref:`on-prem-authentication-configuration` for more information on
   encrypting username and password.

Session Management Setting
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. setting:: mms.session.maxHours

   *Type*: number

   The number of hours before a session on the MMS website expires.

Password Policy Settings
~~~~~~~~~~~~~~~~~~~~~~~~

You can configure the password policy for MMS user accounts with the
following settings:

.. setting:: mms.password.minChangesBeforeReuse

   *Type*: number

   The number of previous passwords to remember. You cannot reuse a
   remembered password as a new password.

.. setting:: mms.password.maxFailedAttemptsBeforeAccountLock

   *Type*: number
   
   The number of failed login attempts before an account becomes
   locked. Only an an MMS Administrator can unlock a locked account.

.. setting:: mms.password.maxDaysInactiveBeforeAccountLock

   *Type*: number

   The maximum number of days with no visits to the MMS website before
   an account should be locked.

.. setting:: mms.password.maxDaysBeforeChangeRequired

   *Type*: number

   The number of days a password is valid before the password expires.


.. _snmp-heartbeat-configure:

SNMP Heartbeat Settings
-----------------------

You can configure the On-Prem MMS Server to send a periodic heartbeat
trap notification (v2c) that contain an internal health assessment of
the MMS Server. The MMS Server can send traps to one or more endpoints
on the standard SNMP UDP port 162.

To configure the On-Prem MMS Server to send trap notifications,
download the Management Information Base (MIB) file at
`<http://downloads.mongodb.com/on-prem-monitoring/MMS-MONGODB-MIB.txt>`_
and configure the following settings:

.. setting:: snmp.default.hosts

   *Type*: string
   *Default*: blank

   Comma-separated list of hosts where 'heartbeat' traps will be sent
   on the standard UDP port 162.
   You must set :setting:`snmp.default.hosts` to enable the SNMP
   heartbeat functionality; otherwise, leaving the setting blank
   disables the SNMP heartbeat functionality.

.. setting:: snmp.listen.port

   *Type*: number
   *Default*: 11611

   Listening UDP port for SNMP. Setting to a number less than 1024 will
   require running MMS server with root privileges.

.. setting:: snmp.default.heartbeat.interval

   *Type*: number
   *Default*: 300

   Number of seconds between heartbeat notifications.

reCaptcha Settings
------------------

To enable `reCaptcha anti-spam test
<http://www.google.com/recaptcha/whyrecaptcha>`_ on new user
registration, you must have a `reCaptcha account
<https://www.google.com/recaptcha/admin/create>`_ and specify the API
information in the configuration file.

.. setting:: reCaptcha.public.key

   *Type*: string

   The reCaptcha public key associated with your account.

.. setting:: reCaptcha.private.key

   *Type*: string

   The reCaptcha private key associated with your account.

.. _on-prem-authentication-configuration:

MongoDB Access Control Considerations
-------------------------------------

For a MongoDB server with access control, the :setting:`mongo.mongoUri`
includes the MongoDB user credentials. For example:

.. code-block:: ini

   mongo.mongoUri=mongodb://mongodbuser1:password@mydb1.example.net:40000/admin?maxPoolSize=100

Encrypt MongoDB User Credentials
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you do not want to store credentials in plain text, |monitoring|
provides a tool to encrypt the MongoDB credentials. To encrypt
authentication credentials:

#. Issue the following command to create an encrypted credential pair,
   replacing ``<username>`` with your username:

   .. code-block:: sh

      <install_dir>/bin/credentialstool --username <username> --password

   This will prompt you to enter the password and will output the
   encrypted credential pair.

#. Use the encrypted credential pair in the :setting:`mongo.MongoURI`
   settings where needed, and add the
   :setting:`mongo.encryptedCredentials = true
   <mongo.encryptedCredentials>` setting. For example:

   .. code-block:: sh

      mongo.mongoUri=mongodb://da83ex3s:a4fbcf3a1@mydb1.example.net:40000/admin?maxPoolSize=100
      mongo.encryptedCredentials=true

.. important::
   The ``conf-mms.properties`` file can contain multiple
   :setting:`mongo.MongoURI` settings. If
   :setting:`mongo.encryptedCredentials` is ``true``, you must encrypt
   all user credentials found in the various :setting:`mongo.MongoURI`
   settings.

MongoDB User Access
~~~~~~~~~~~~~~~~~~~

The MongoDB user *must* have the
following roles: :authrole:`readWriteAnyDatabase`,
:authrole:`clusterAdmin`, and :authrole:`dbAdminAnyDatabase`. 

See :doc:`/reference/authentication` for more information.
