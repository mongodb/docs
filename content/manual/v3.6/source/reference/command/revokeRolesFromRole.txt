===================
revokeRolesFromRole
===================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. dbcommand:: revokeRolesFromRole

   Removes the specified inherited roles from a role. The
   :dbcommand:`revokeRolesFromRole` command has the following syntax:

   .. code-block:: javascript

      { revokeRolesFromRole: "<role>",
        roles: [
          { role: "<role>", db: "<database>" } | "<role>",
          ...
        ],
        writeConcern: { <write concern> }
      }

   The command has the following fields:


   .. list-table::
      :header-rows: 1
      :widths: 20 20 80
   
      * - Field
   
        - Type
   
        - Description
   
      * - ``revokeRolesFromRole``
   
        - string
   
        - The role from which to remove inherited roles.
          
          
   
      * - ``roles``
   
        - array
   
        - The inherited roles to remove.
          
          
   
      * - ``writeConcern``
   
        - document
   
        - Optional. The level of :doc:`write concern </reference/write-concern>` to apply
          to this operation. The ``writeConcern`` document uses the same fields
          as the :dbcommand:`getLastError` command.
          
          
   


   .. |local-cmd-name| replace:: :dbcommand:`revokeRolesFromRole`
   .. include:: /includes/fact-roles-array-contents.rst

Required Access
---------------

.. include:: /includes/access-revoke-roles.rst

Example
-------

The ``purchaseAgents`` role in the ``emea`` database inherits privileges
from several other roles, as listed in the ``roles`` array:

.. code-block:: javascript

   {
      "_id" : "emea.purchaseAgents",
      "role" : "purchaseAgents",
      "db" : "emea",
      "privileges" : [],
      "roles" : [
         {
            "role" : "readOrdersCollection",
            "db" : "emea"
         },
         {
            "role" : "readAccountsCollection",
            "db" : "emea"
         },
         {
            "role" : "writeOrdersCollection",
            "db" : "emea"
         }
      ]
   }

The following :dbcommand:`revokeRolesFromRole` operation on the ``emea``
database removes two roles from the ``purchaseAgents`` role:

.. code-block:: javascript

   use emea
   db.runCommand( { revokeRolesFromRole: "purchaseAgents",
                    roles: [
                             "writeOrdersCollection",
                             "readOrdersCollection"
                           ],
                     writeConcern: { w: "majority" , wtimeout: 5000 }
                } )

The ``purchaseAgents`` role now contains just one role:

.. code-block:: javascript

   {
      "_id" : "emea.purchaseAgents",
      "role" : "purchaseAgents",
      "db" : "emea",
      "privileges" : [],
      "roles" : [
         {
            "role" : "readAccountsCollection",
            "db" : "emea"
         }
      ]
   }
