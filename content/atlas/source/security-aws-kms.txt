.. _security-aws-kms:

=================================
Manage Customer Keys with AWS KMS
=================================

.. default-domain:: mongodb

.. facet::
   :name: genre
   :values: tutorial

.. meta::
   :keywords: encryption, atlas api, atlas ui
   :description: Configure Atlas to use AWS KMS for managing encryption keys, enabling role-based access and key rotation for enhanced security.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

You can configure your |service| project to use an |aws| `IAM role 
<https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html>`__ 
for accessing your |aws| |kms| keys for Encryption at Rest. You can 
either use an existing role or create a new role when you enable 
Encryption at Rest for your project.

This page covers configuring customer key management on your |service| 
project for role-based access. You can also 
set up {+aws-pl+} in your |aws| |kms| to ensure that all traffic between
|service| and your |aws| |kms| takes place over |aws|\'s private network
interfaces. 

If you have not yet enabled Encryption at Rest for your new or existing 
|service| project, follow the :ref:`aws-kms-enable-project` procedure 
to enable Encryption at Rest for your |service| project. If you have an 
|service| project for which you have already enabled Encryption at Rest 
and configured credentials-based access to your encryption keys, follow 
the :ref:`aws-kms-switch-project` procedure to switch to role-based 
access to your encryption keys.

You must configure customer key management for the |service| project
before enabling it on {+clusters+} in that project.

.. seealso:: 

   - :ref:`set-up-unified-aws-access`

Required Access
---------------

.. include:: /includes/atlas-roles/kms.rst

Enable Customer-Managed Keys with AWS KMS
-----------------------------------------

.. |cloud-kms| replace:: AWS KMS
.. |envelope-encryption| replace:: `envelope encryption <https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#enveloping>`__
.. |cmk-link| replace:: `AWS KMS Documentation <https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#kms_keys>`__

.. include:: /includes/fact-customer-managed-keys.rst

Example
~~~~~~~

.. include:: /includes/fact-cmk-workflow-example.rst

.. figure:: /images/aws-kms-cmk-diagram.png
   :figwidth: 100%
   :alt: Diagram of CMK workflow with AWS KMS and Atlas

.. _security-aws-kms-rotate-key:

Rotate your AWS Customer Master Key
-----------------------------------

.. include:: /includes/unavailable-flex-serverless-m0-m2-m5-clusters.rst

MongoDB Master Key - MongoDB Responsibility
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-atlas-key-rotation.rst

Your |aws| |cmk| - Your Responsibility
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

|service| does *not* automatically rotate the |aws| |cmk| used for
|aws|\-provided Encryption at Rest. 

As a best practice, |service| creates an :alert:`alert <AWS encryption
key elapsed time since last rotation is above (n) days>` to remind you
to rotate your |aws| |cmk| every 90 days by default when you
:ref:`enable Encryption at Rest <aws-enable-cluster-encryption-at-rest>` for |a-service|
project. You can configure the time period of this alert.

You can rotate your |aws| |cmk| yourself or configure your |aws| |kms|
instance to :aws:`automatically rotate
</kms/latest/developerguide/rotate-keys.html>` your |cmk|. If
you configure automatic |aws| |cmk| rotation, the default time period
for rotation is approximately 365 days.

If you have already set up an automatic |cmk| rotation in |aws| and
don't want to receive the |service| alert to rotate your |cmk| every 90 
days, you can :ref:`modify <configure-alerts>` the default alert period 
to be greater than 365 days or :ref:`disable <disable-alert-setting>` 
the alert.

This page explains how to create a new key and update the |cmk| ID in
|service| to rotate your |service| project |cmk|. This method of key
rotation supports more granular control of the rotation period compared
to |aws| |kms| automatic |cmk| rotation.

.. important:: {+Cloud-Backup+}s with Encryption at Rest

   For {+clusters+} using :doc:`Encryption at Rest </security-aws-kms>` and
   :ref:`backup-cloud-provider`, |service| uses the project's |cmk| and
   |aws| |iam| user credentials at the time of the snapshot to
   automatically encrypt the snapshot data files. This is an additional
   layer of encryption on the existing encryption applied to all
   |service| storage and snapshot volumes.

   |service| does *not* re-encrypt snapshots with the new |cmk| after
   rotation. Do *not* delete the old |cmk| until you check *every*
   backup-enabled {+cluster+} in the project for any snapshots still using
   that |cmk|. |service| deletes backups in accordance to the
   :ref:`cloud-provider-retention-policy`. After |service| deletes all
   snapshots depending on a given |cmk|, you can delete that |cmk|
   safely.

Procedure
~~~~~~~~~

.. include:: /includes/steps-rotate-aws-kms-cmk.rst

.. _aws-kms-regional-outage:

Reconfigure AWS KMS Region During an Outage
-------------------------------------------

During a regional outage, your |aws| |kms| region might
become unavailable. If you've enabled :ref:`security-kms-encryption`,
you can perform encrypt and decrypt operations while at least one node
is still available. However, if all nodes become unavailable,
you can't perform cryptographic operations. A node becomes unavailable
if it restarts during the outage.

To get the unavailable nodes to a healthy state, you
can reconfigure your current |aws| |kms| region to an available region.
To change your |kms| region, your |aws| |kms| key must be a :aws:`multi-Region key 
</kms/latest/developerguide/multi-region-keys-overview>`. 
To create a multi-Region Key, see the :aws:`AWS documentation 
</kms/latest/developerguide/multi-region-keys-create>`.

.. note:: 

   You can't convert a single-Region key to a multi-Region Key.

Procedure
~~~~~~~~~

To reconfigure your |aws| |kms| region, complete the following steps
in |service|:

.. include:: /includes/steps-update-aws-kms-region.rst

Next Steps 
----------

You can use a customer-managed key (CMK) from your |aws| |kms| over
a public network or over {+aws-pl+}. To learn more, see
the following: 

- :ref:`security-aws-kms-public-network`
- :ref:`security-aws-kms-pvt-endpoint`

Related Topics
--------------

- To learn more about MongoDB Encryption at Rest, see
  :manual:`Encryption at Rest </core/security-encryption-at-rest/>` in
  the MongoDB server documentation.

- To learn more about Encryption at Rest with {+Cloud-Backup+}s, see 
  :ref:`encrypted-cloud-provider-snapshot`.

.. toctree::
   :titlesonly:

   Configure Access Over Public Network </security/aws-kms-over-public-network>
   Configure Access Over Private Endpoints </security/aws-kms-over-private-endpoint>