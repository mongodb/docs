#content from this page is included in /reference/method/db.addUser-param.yaml
object:
  name: createUser
  type: dbcommand
field:
  optional: false
  type: field
name: createUser
type: string
position: 1
description: |
  The name of the new user.
---
object:
  name: createUser
  type: dbcommand
field:
  optional: false
  type: field
name: pwd
type: string
position: 2
description: |
  The user's password. The command sends the password to the MongoDB
  instance in cleartext. To encrypt the password in transit, use :doc:`SSL
  </tutorial/configure-ssl>`. The ``pwd`` field is not required if you run
  this command on the ``$external`` database. Users created on the
  ``$external`` database should have credentials stored externally to
  MongoDB, as, for example, with :doc:`MongoDB Enterprise installations that
  use Kerberos
  </tutorial/control-access-to-mongodb-with-kerberos-authentication>`.
---
object:
  name: createUser
  type: dbcommand
field:
  optional: true
  type: any
name: customData
type: document
position: 3
description: |
  Any arbitrary information.
---
object:
  name: createUser
  type: dbcommand
field:
  optional: false
  type: field
name: roles
type: array
position: 4
description: |
  The roles granted to the user. You can specify both :ref:`system-defined
  roles <system-user-roles>` and :ref:`user-defined role
  <user-defined-roles>`. For the syntax of a role, see the
  :data:`~admin.system.users.roles` array.
---
object:
  name: createUser
  type: dbcommand
field:
  optional: true
  type: field
name: writeConcern
type: document
position: 5
description: |
  The level of :doc:`write concern </reference/write-concern>` for the
  creation operation. The ``writeConcern`` document takes the same
  fields as the :dbcommand:`getLastError` command.
...
