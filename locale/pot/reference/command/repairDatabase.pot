# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/command/repairDatabase.txt:3
# 541b174a67b64326951b5af02530d78b
msgid "repairDatabase"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:8
# 307a8cf865e946a497c9badce113d8d2
msgid "Definition"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:12
# d563d9b77b484b6b8f9c5e433e909683
msgid "Checks and repairs errors and inconsistencies in data storage. :dbcommand:`repairDatabase` is analogous to a ``fsck`` command for file systems. Run the :dbcommand:`repairDatabase` command to ensure data integrity after the system experiences an unexpected system restart or crash, if:"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:18
# e733cd6d23594bebb2e50bb676e42755
msgid "The :program:`mongod` instance is not running with :term:`journaling <journal>` enabled."
msgstr ""

#: ../source/includes/note-repair.rst:1
# 54e6f4f5d96b43e58a3a868784ace881
msgid "When using :term:`journaling <journal>`, there is almost never any need to run :dbcommand:`repairDatabase`. In the event of an unclean shutdown, the server will be able to restore the data files to a pristine state automatically."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:23
# cd2251d4f85d4f29ac50151639c864fb
msgid "There are *no* other intact :term:`replica set` members with a complete data set."
msgstr ""

#: ../source/includes/warning-repair.rst:3
# 72d105a4c05e4852ae6647c47bc32159
msgid "During normal operations, only use the :dbcommand:`repairDatabase` command and wrappers including :method:`db.repairDatabase()` in the :program:`mongo` shell and :option:`mongod --repair`, to compact database files and/or reclaim disk space. Be aware that these operations remove and do not save any corrupt data during the repair process."
msgstr ""

#: ../source/includes/warning-repair.rst:10
# 9055102cc98f42028d85402a7101be99
msgid "If you are trying to repair a :term:`replica set` member, and you have access to an intact copy of your data (e.g. a recent backup or an intact member of the :term:`replica set`), you should restore from that intact copy, and **not** use :dbcommand:`repairDatabase`."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:28
# a851a950d785471892c4a17c6001912f
msgid ":dbcommand:`repairDatabase` takes the following form:"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:34
# 9f192422ac5f4adb83e805f4d3378b7f
msgid ":dbcommand:`repairDatabase` has the following fields:"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:38
# 0a8c61ab06e24c43aa414b68a7d1b1b8
msgid "You can explicitly set the options as follows:"
msgstr ""

#: ../source/includes/warning-blocking-global.rst:3
# 6ec05b596b9d41e990fb53d43b5f0a30
msgid "This command obtains a global write lock and will block other operations until it has completed."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:48
# 395c883571324f5f96523fbd15635895
msgid ":dbcommand:`repairDatabase` requires free disk space equal to the size of your current data set plus 2 gigabytes. If the volume that holds dbpath lacks sufficient space, you can mount a separate volume and use that for the repair. When mounting a separate volume for :dbcommand:`repairDatabase` you must run :dbcommand:`repairDatabase` from the command line and use the :option:`--repairpath <mongod --repairpath>` switch to specify the folder in which to store temporary repair files."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:58
# 254ceaec0a7c45b690228d2a8b7fdb3c
msgid "See :option:`mongod --repair` and :option:`mongodump --repair` for information on these related options."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:62
# 46255e653830493998c34f8b239e4c37
msgid "Behavior"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:66
# 9a3c07f0c300479aaf7cc4e38dffd080
msgid "The :dbcommand:`repairDatabase` command is now available for secondary as well as primary members of replica sets."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:69
# 15d26eb6e8f34423b95f18f5657312b8
msgid "The :dbcommand:`repairDatabase` command compacts all collections in the database. It is identical to running the :dbcommand:`compact` command on each collection individually."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:73
# 213efbf3de8e440988c64914588219f2
msgid ":dbcommand:`repairDatabase` reduces the total size of the data files on disk. It also recreates all indexes in the database."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:76
# b3feab97d01d43daaf4cc12fb2241203
msgid "The time requirement for :dbcommand:`repairDatabase` depends on the size of the data set."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:79
# 484328f4e74e44a4b4466f1a0db8e4f2
msgid "You may invoke :dbcommand:`repairDatabase` from multiple contexts:"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:81
# d00ba9058d6e47668a5c75de18d65834
msgid "Use the :program:`mongo` shell to run the command, as above."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:83
# 389db6b3cc724e35b96e109a709a2025
msgid "Use the :method:`db.repairDatabase()` in the :program:`mongo` shell."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:86
# 1d9b8fe4828442aa94b0ab65f9955426
msgid "Run :program:`mongod` directly from your system's shell. Make sure that :program:`mongod` isn't already running, and that you invoke :program:`mongod` as a user that has access to MongoDB's data files. Run as:"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:95
# 585168a2bb044e188713cf7281aa8c9e
msgid "To add a repair path:"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:101
# ca005cf405154932bbd6d0ce92c6e560
msgid "See :setting:`~storage.repairPath` for more information."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:105
# 070aa6efa0a940f7815ee01a46c27187
msgid ":option:`mongod --repair <mongod --repair>` will fail if your database is not a master or primary. In most cases, you should recover a corrupt secondary using the data from an existing intact node. To run repair on a secondary/slave restart the instance in standalone mode without the :option:`--replSet <mongod --replSet>` or :option:`--slave <mongod --slave>` options."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:113
# 69311c4ec63a4cac84f459586d3a378e
msgid "Example"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:120
# 1ee5d716dc564464bfd5940c743523be
msgid "Using ``repairDatabase`` to Reclaim Disk Space"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:122
# 0d9ff26a477f4b079ef1699c947e9ebb
msgid "You should not use :dbcommand:`repairDatabase` for data recovery unless you have no other option."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:125
# c6e774fc34e6475cb5752e24668fb116
msgid "However, if you trust that there is no corruption and you have enough free space, then :dbcommand:`repairDatabase` is the appropriate and the only way to reclaim disk space."
msgstr ""

