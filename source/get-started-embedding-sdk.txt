.. _get-started-embedding-sdk:

==================================
Get Started with the Embedding SDK
==================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

You can embed a chart or dashboard into a web application with the 
:ref:`Embedding SDK <embedding-charts-sdk>`, allowing more flexible 
adjustments of settings and rendering.

Prerequisites
-------------

- You must be a dashboard :ref:`Author <dashboard-permissions>` to 
  enable embedding for a chart.
- :ref:`add-data-source`
- :ref:`create-new-dashboard`
- :ref:`create-new-chart`

Procedures
----------

Enable Embedding
~~~~~~~~~~~~~~~~

.. tabs::

   .. tab:: Chart
      :tabid: chart

      .. tabs::

         .. tab:: Unauthenticated
            :tabid: unauthenticated

            .. include:: /includes/steps/enable-embedding-sdk-anon.rst

         .. tab:: Authenticated
            :tabid: authenticated

            .. include:: /includes/steps/embed-chart-authenticated.rst

            Configure Embedding Authentication Providers
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

            .. include:: /includes/steps/add-auth-providers.rst

   .. tab:: Dashboard
      :tabid: dashboard

      .. tabs::

         .. tab:: Unauthenticated
            :tabid: unauthenticated

            .. include:: /includes/steps/embed-dashboard-anon-auth.rst

         .. tab:: Authenticated
            :tabid: authenticated

            .. include:: /includes/steps/embed-dashboard-authenticated.rst

Create a Web App
~~~~~~~~~~~~~~~~

.. tabs::
   :hidden: true

   .. tab:: Chart
      :tabid: chart

      .. tabs::
         :hidden: true

         .. tab:: Unauthenticated
            :tabid: unauthenticated

            Proceed with the remaining steps to create a new app in 
            which to display your chart.

            .. note::

               .. include:: /includes/fact-create-web-app-anon-chart.rst

         .. tab:: Authenticated
            :tabid: authenticated

            Proceed with the remaining steps to create a new app in 
            which to display your chart.

            .. note::

               MongoDB offers a pre-built example in the 
               :github:`GitHub repository </mongodb-js/charts-embed-sdk/tree/master/examples/charts>` that shows you how to 
               use the Embedding SDK to authenticate an embedded chart 
               using your authentication provider.

   .. tab:: Dashboard
      :tabid: dashboard

      .. tabs::
         :hidden: true

         .. tab:: Unauthenticated
            :tabid: unauthenticated

            Proceed with the remaining steps to create a new app in 
            which to display your dashboard.

            .. note::

                MongoDB offers a :github:`pre-built example of an unauthenticated embedded dashboard </mongodb-js/charts-embed-sdk/tree/master/examples/dashboard/unauthenticated>`
                in the GitHub Repository. This example shows how to use the
                Embedding SDK to display an unauthenticated embedded dashboard.

         .. tab:: Authenticated
            :tabid: authenticated

            Proceed with the remaining steps to create a new app in 
            which to display your dasbhoard.

            .. note::

               MongoDB offers :github:`examples of authenticated embedded dashboards </mongodb-js/charts-embed-sdk/tree/master/examples/dashboard/>`
               in the GitHub Repository. These examples show you how to use
               the Embedding SDK to authenticate an embedded dashboard using
               :stitch:`MongoDB Realm </>`, Google, or |jwt| authentication
               providers.

Add Embedding Code to Your App
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To learn how to install the Embedding SDK into your app, see 
:ref:`embedding-sdk-install`.

.. tabs::
   :hidden: true

   .. tab:: Chart
      :tabid: chart

      .. tabs::
         :hidden: true

         .. tab:: Unauthenticated
            :tabid: unauthenticated

            Add the following code to your web app to execute where you 
            want your chart to render:

            .. note::

               Replace the existing Charts Base URL and chart 
               ID with the values for the chart that you want to 
               display. Your Charts Base URL and chart ID are visible 
               in the embedding options modal window. 

            .. code-block:: javascript
               :copyable: false

               import ChartsEmbedSDK from "@mongodb-js/charts-embed-dom";

               const sdk = new ChartsEmbedSDK({
                 baseUrl: "https://charts.mongodb.com/charts-embedding-examples-wgffp", // ~REPLACE~ with the Base URL from your Embed Chart dialog.
               });

               const chart = sdk.createChart({
                 chartId: "735cfa75-15b8-483a-bc2e-7c6659511c7c", // ~REPLACE~ with the Chart ID from your Embed Chart dialog.
                 height: "700px",
                 // Additional options go here
               });

               chart.render(document.getElementById("chart"));

         .. tab:: Authenticated
            :tabid: authenticated

            Add the following code to your web app to execute where you 
            want your chart to render. The following example 
            :ref:`authenticates <configure-auth-providers>` with 
            :stitch:`MongoDB Realm </>`.

            .. note::

               Replace the existing Realm App ID with your Realm App 
               ID, which you can find on the left side of your Realm 
               app UI. Replace the existing Charts Base URL and chart 
               ID with the values for the chart that you want to 
               display. Your Charts Base URL and chart ID are visible 
               in the embedding options modal window. 

            .. code-block:: javascript
               :copyable: false

               import ChartsEmbedSDK from "@mongodb-js/charts-embed-dom";

               // Needed only if you are using the Realm authentication provider
               const client = Stitch.initializeAppClient(
                 'realm-authentication-sample-eibkj', // ~REPLACE~ with your Realm App ID
               });

               const sdk = new ChartsEmbedSDK({
                 baseUrl: "https://charts.mongodb.com/charts-embedding-examples-wgffp", // ~REPLACE~ with the Base URL from your Embed Chart dialog.
                 getUserToken: () => getRealmUserToken(client),
                 // getUserToken is a callback to provide the auth token to the SDK. 
                 // Use the getRealmUserToken helper when using the Realm auth provider. 
                 // If using Custom JWT or Google providers, provide your own code to retrieve the JWT
               });

               const chart = sdk.createChart({
                 chartId: "735cfa75-15b8-483a-bc2e-7c6659511c7c", // ~REPLACE~ with the Chart ID from your Embed Chart dialog.
                 height: "700px",
                 // Additional options go here
               });

               chart.render(document.getElementById("chart"));

   .. tab:: Dashboard
      :tabid: dashboard

      .. tabs::

         .. tab:: Unauthenticated
            :tabid: unauthenticated

            Add the following code to your web app to execute where you
            want your dashboard to render.

            .. note::

               Replace the existing :guilabel:`Dashboards Base URL`
               and dashboard ID with the values for the dashboard that
               you want to display. Your :guilabel:`Dashboards Base URL`
               and dashboard ID are visible in the embedding options
               modal window.

            .. code-block:: javascript
               :copyable: false

               import ChartsEmbedSDK from "@mongodb-js/charts-embed-dom";

               const sdk = new ChartsEmbedSDK({
                  baseUrl: "https://charts.mongodb.com/charts-embedding-examples-wgffp", // ~REPLACE~ with the Base URL from your Embed Dashboard dialog.
               });

               const chart = sdk.createChart({
                  dashboardId: "735cfa75-15b8-483a-bc2e-7c6659511c7c", // ~REPLACE~ with the Dashboard ID from your Embed Dashboard dialog.
                  height: "700px",
                  widthMode: "scale",
                  heightMode: "fixed"
                  // Additional options go here
               });

               dashboard.render(document.getElementById("dashboard"));

         .. tab:: Authenticated
            :tabid: authenticated

            Add the following code to your web app to run it where you
            want your dashboard to render. The following example
            :ref:`authenticates <configure-auth-providers>` with 
            :stitch:`MongoDB Realm </>`.

            .. note::

               Replace the existing Realm App ID with your Realm
               App ID. You can find the Realm ID on the left side
               of your Realm app UI. Replace the existing :guilabel:`Dashboards
               Base URL` and dashboard ID with the values for the
               dashboard that you want to display. Your :guilabel:`Dashboards Base URL`
               and dashboard ID are visible in the embedding options
               modal window.

            .. code-block:: javascript
               :copyable: false

               import ChartsEmbedSDK from "@mongodb-js/charts-embed-dom";

               // Needed only if you are using the Realm authentication provider
               const client = Stitch.initializeAppClient(
                  'realm-authentication-sample-eibkj', // ~REPLACE~ with your Realm App ID
               });

               const sdk = new ChartsEmbedSDK({
                  baseUrl: "https://charts.mongodb.com/charts-embedding-examples-wgffp", // ~REPLACE~ with the Base URL from your Embed Dashboard dialog.
                  getUserToken: () => getRealmUserToken(client),
                  // getUserToken is a callback to provide the auth token to the SDK. 
                  // Use the getRealmUserToken helper when using the Realm auth provider. 
                  // If using Custom JWT or Google providers, provide your own code to retrieve the JWT
               });

               const chart = sdk.createChart({
                 dashboardId: "735cfa75-15b8-483a-bc2e-7c6659511c7c", // ~REPLACE~ with the Dashboard ID from your Embed Dashboard dialog.
                 height: "700px",
                 widthMode: "scale",
                 heightMode: "fixed"
                 // Additional options go here
               });

               dashboard.render(document.getElementById("dashboard"));
