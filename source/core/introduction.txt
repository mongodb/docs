=====================
Introdução ao MongoDB
=====================

.. default-domain:: mongodb

Bem-vindo ao MongoDB. Este documento é uma pequena introdução ao MongoDB
e alguns conceitos chave. Acesse :doc:`installation guides </installation>` para
mais informações sobre download e instalação do MongoDB.

.. Este documento é uma pequena introdução ao MongoDB
   e alguns conceitos chave, também guiará você pelo processo de instalação e uso do MongoDB.

O que é MongoDB
---------------

MongoDB é uma base de dados de documentos que proporciona alta performance,
alta disponibilidade e escalonamento automático.

Base de Dados de Documentos
~~~~~~~~~~~~~~~~~~~~~~~~~~~

Um registro no MongoDB é um documento, este possui uma estrutura baseada em 
chave e valor. MongoDB é similar a objetos JSON. Os valores dos campos podem 
conter outros objetos, arrays, e array de documentos.

.. include:: /images/crud-annotated-document.rst

As vantagens de usar documentos são:

- Documentos (i.e. objects) correspondem aos tipos de dados, comuns em muitas
  linguagens de programação.

- Embedded documents and arrays reduce need for expensive joins.

- Dynamic schema supports fluent polymorphism.

Key Features
~~~~~~~~~~~~

Alta Performance
````````````````

MongoDB provides high performance data persistence. In particular,

- Support for embedded data models reduces I/O activity on database
  system.

- Indexes support faster queries and can include keys from embedded
  documents and arrays.

Alta Disponibilidade
````````````````````

To provide high availability, MongoDB's replication facility, called
replica sets, provide:

- *automatic* failover.

- data redundancy.

A :doc:`replica set </core/replication-introduction>` is a group of
MongoDB servers that maintain the same data set, providing redundancy
and increasing data availability.

Escalonamento Automático
````````````````````````

MongoDB provides horizontal scalability as part of its *core*
functionality.

- Automatic :doc:`sharding </core/sharding-introduction>` distributes
  data across a cluster of machines.

- Replica sets can provide eventually-consistent reads for low-latency
  high throughput deployments.
