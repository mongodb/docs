ref: views-unsupported-natural-sort
content: |
   You cannot specify a :operator:`$natural` sort on a view.
---
ref: views-unsupported-text-search
content: |
   :doc:`Views </core/views>` do not support text search.
---
ref: views-unsupported-mapReduce
content: |
   :doc:`Views </core/views>` do not support map-reduce operations.
---
ref: views-unsupported-rename
content: |
   You cannot rename :doc:`views </core/views>`.
---
ref: views-unsupported-geoNear
content: |
   :doc:`Views </core/views>` do not support geoNear operations (i.e.
   :pipeline:`$geoNear` pipeline stage).
---
ref: views-unsupported-projection-operators
content: |
   :method:`~db.collection.find()` operations on views do not support
   the following :doc:`projection </reference/operator/projection>`
   operators:

   - :projection:`$`
   - :projection:`$elemMatch`
   - :projection:`$slice`
   - :expression:`$meta`
---
ref: _views-unsupported-projection
content: |
   :method:`db.collection.find()` operations on :doc:`views </core/views>` do not support {{projection}} projection operator.
---
ref: views-unsupported-projection-$
inherit:
   ref: _views-unsupported-projection
   file: extracts-views.yaml
replacement:
   projection: ":projection:`$`"
---
ref: views-unsupported-projection-$elemMatch
inherit:
   ref: _views-unsupported-projection
   file: extracts-views.yaml
replacement:
   projection: ":projection:`$elemMatch`"
---
ref: views-unsupported-projection-$slice
inherit:
   ref: _views-unsupported-projection
   file: extracts-views.yaml
replacement:
   projection: ":projection:`$slice`"
---
ref: views-unsupported-projection-$meta
inherit:
   ref: _views-unsupported-projection
   file: extracts-views.yaml
replacement:
   projection: ":expression:`$meta`"
---
ref: views-collation-behavior
content: |

   - You can specify a default :doc:`collation </reference/collation>`
     for a view at creation time. If no collation is specified, the
     view's default collation is the "simple" binary comparison
     collator. That is, the view does not inherit the collection's
     default collation.

   - String comparisons on the view use the view's default collation.
     An operation that attempts to change or override a view's default
     collation will fail with an error.

   - If creating a view from another view, you cannot specify a
     collation that differs from the source view's collation.

   - .. include:: /includes/extracts/views-collation-agg.rst
---
ref: views-collation-agg
content: |

   If performing an aggregation that involves multiple views, such as
   with :pipeline:`$lookup` or :pipeline:`$graphLookup`, the views must
   have the same :doc:`collation  </reference/collation>`.
---
ref: views-public-definition
content: |
   The view definition is public; i.e. :method:`db.getCollectionInfos()`
   and ``explain`` operations on the view will include the pipeline that
   defines the view. As such, avoid referring directly to sensitive fields
   and values in view definitions.
---
ref: views-restriction-output-to-disk
content: |

   A view definition ``pipeline`` cannot include the :pipeline:`$out` or
   the :pipeline:`$merge` stage. This restriction also applies to
   embedded pipelines, such as pipelines used in :pipeline:`$lookup` or
   :pipeline:`$facet` stages.
---
ref: views-access-control
content: |

  If the deployment enforces :ref:`authentication <authentication>`,
  :method:`db.createView()` requires that the authenticated user have
  the :authaction:`createCollection` privilege on the database.

  However, if the user has the :authaction:`createCollection` on the
  database *and* :authaction:`find` on the view to create, the user must
  *also* have the following additional permissions:

  - :authaction:`find` on the source collection or view.

  - :authaction:`find` on any other collections or views referenced in the
    ``pipeline``, if any.

  A user with the :authrole:`readWrite` built in role on the database
  has the required privileges to run the listed operations. Either
  :doc:`create a user </tutorial/create-users>` with the required role
  or :ref:`grant the role to an existing user
  <modify-existing-user-access>`

...
