=======
$within
=======

.. default-domain:: mongodb

.. operator:: $within

   The :operator:`$within` operator allows you to select items that exist
   within a shape on a coordinate system for :term:`geospatial` queries. This operator uses the
   following syntax:

   .. code-block:: javascript

      db.collection.find( { location: { $within: { shape } } } );

   Replace ``{ shape }`` with a document that describes a shape. The
   :operator:`$within` command supports the following shapes. These shapes and the
   relevant expressions follow:

   - Rectangles. Use the :operator:`$box` operator, consider the following
     variable and :operator:`$within` document:

     .. code-block:: javascript

        db.collection.find( { location: { $within: { $box: [[100,0], [120,100]] } } } );

     Here a box, ``[[100,120], [100,0]]`` describes the parameter
     for the query. As a minimum, you must specify the lower-left and
     upper-right corners of the box.

   - Circles. Use the :operator:`$center` operator. Specify circles in the following form:

     .. code-block:: javascript

        db.collection.find( { location: { $within: { $center: [ center, radius } } } );

   - Circular distance on a sphere. Use the
     :operator:`$centerSphere` operator. For the syntax, see :operator:`$centerSphere`.

   - Polygons. Use the :operator:`$polygon` operator. Specify polygons with an array of points. See the
     following example:

     .. code-block:: javascript

        db.collection.find( { location: { $within: { $polygon: [[100,120], [100,100], [120,100], [240,200]] } } } );

     The last point of a polygon is implicitly connected to the first
     point.

   All shapes include the border of the shape as part of the shape,
   although this is subject to the imprecision of floating point
   numbers.

   Use :operator:`$uniqueDocs` to control whether documents with
   many location fields show up multiple times when more than one
   of its fields match the query.

   .. include:: /includes/note-geospatial-index-must-exist.rst

   .. versionchanged:: 2.4
      Prior to 2.4, the aggregation pipeline :agg:pipeline:`$match` queries did not support the
      :mongodb:operator:`$within` operator.
