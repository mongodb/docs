========================
db.collection.validate()
========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. _validate-standalone-inconsistencies:

Description
-----------

.. method:: db.collection.validate(<documents>)

   .. include:: /includes/fact-mongosh-shell-method.rst

   Validates a collection. The method scans a collection data and
   indexes for correctness and returns the result. For details of the
   output, see :ref:`validate-output`.

   Starting in version 5.0, the :method:`db.collection.validate()`
   method can also fix inconsistencies in the collection.
   
   .. include:: /includes/fact-validate-standalone-inconsistencies.rst

   The :method:`db.collection.validate()` method is a wrapper around
   the :dbcommand:`validate` command.

Syntax
------

.. note:: Changed in version 4.4


   :method:`db.collection.validate()` no longer accepts just a boolean
   parameter. See :ref:`4.4-validate-method-signature`.

.. versionchanged:: 5.0

The :method:`db.collection.validate()` method has the following syntax:

.. code-block:: javascript

   db.collection.validate( { 
      full: <boolean>,          // Optional
      repair: <boolean>         // Optional, added in MongoDB 5.0
   } )

Parameters
~~~~~~~~~~

The :method:`db.collection.validate()` method can take the
following optional document parameter with the fields:

.. list-table::
   :header-rows: 1
   :widths: 10 10 50

   * - Field
     - Type
     - Description

   * - :ref:`full <method-validate-full>`
     - boolean

     - .. _method-validate-full:
     
       *Optional*. A flag that determines whether the command performs
       a slower but more thorough check or a faster but less thorough
       check.

       - If ``true``, performs a more thorough check with the following
         exception:

         - Starting in MongoDB 4.4, full validation on the ``oplog``
           for WiredTiger skips the more thorough check.

       - If ``false``, omits some checks for a faster but less
         thorough check.

       The default is ``false``.

       .. include:: /includes/fact-validate-wiredtiger-full-option.rst

   * - :ref:`repair <method-validate-repair>`
     - boolean

     - .. _method-validate-repair:

       .. include:: /includes/fact-validate-repair-option.rst

Behavior
--------

Performance
~~~~~~~~~~~

The :method:`db.collection.validate()` method is potentially resource
intensive and may impact the performance of your MongoDB instance,
particularly on larger data sets.

The :method:`db.collection.validate()` method obtains an exclusive lock
on the collection. This will block all reads and writes on the
collection until the operation finishes. When run on a secondary, the
operation can block all other operations on that secondary until it
finishes.

.. warning::

   Due to the performance impact of validation, consider running
   :method:`db.collection.validate()` only on :term:`secondary` replica
   set nodes. You can use :method:`rs.stepDown()` to instruct the
   current :term:`primary` node to become a secondary to avoid
   impacting a live primary node.

Data Throughput Metrics
~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/extracts/4.4-validate-data-throughput.rst

Examples
--------

- To validate a collection ``myCollection`` using the default validation
  setting (specifically, :ref:`full: false <method-validate-full>`):

  .. code-block:: javascript

     db.myCollection.validate()

     db.myCollection.validate({ })

     db.myCollection.validate( { full: false } )

- To perform a full validation of collection ``myCollection``, specify
  :ref:`full: true <method-validate-full>`:

  .. code-block:: javascript

     db.myCollection.validate( { full: true } )

- To repair collection ``myCollection``, specify
  :ref:`repair: true <method-validate-repair>`:

  .. code-block:: javascript

     db.myCollection.validate( { repair: true } )

For details of the output, see :ref:`validate-output`.
