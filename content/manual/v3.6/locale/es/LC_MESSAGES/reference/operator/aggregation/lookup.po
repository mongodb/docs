# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/reference/operator/aggregation/lookup.txt:3
msgid "$lookup (aggregation)"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:20
msgid ""
"Performs a left outer join to an unsharded collection in the *same* "
"database to filter in documents from the \"joined\" collection for "
"processing. To each input document, the :pipeline:`$lookup` stage adds a "
"new array field whose elements are the matching documents from the "
"\"joined\" collection. The :pipeline:`$lookup` stage passes these "
"reshaped documents to the next stage."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:28
msgid "Syntax"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:30
msgid "The :pipeline:`$lookup` stage has the following syntaxes:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:33
msgid "Equality Match"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:35
msgid ""
"To perform an equality match between a field from the input documents "
"with a field from the documents of the \"joined\" collection, the "
":pipeline:`$lookup` stage has the following syntax:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:51
#: ../source/reference/operator/aggregation/lookup.txt:141
msgid "The :pipeline:`$lookup` takes a document with the following fields:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:57
#: ../source/reference/operator/aggregation/lookup.txt:147
msgid "Field"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:58
#: ../source/reference/operator/aggregation/lookup.txt:148
msgid "Description"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:60
#: ../source/reference/operator/aggregation/lookup.txt:150
msgid "``from``"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:62
#: ../source/reference/operator/aggregation/lookup.txt:152
msgid ""
"Specifies the collection in the *same* database to perform the join with."
" The ``from`` collection cannot be sharded."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:65
msgid "``localField``"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:67
msgid ""
"Specifies the field from the documents input to the :pipeline:`$lookup` "
"stage. :pipeline:`$lookup` performs an equality match on the "
"``localField`` to the ``foreignField`` from the documents of the ``from``"
" collection. If an input document does not contain the ``localField``, "
"the :pipeline:`$lookup` treats the field as having a value of ``null`` "
"for matching purposes."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:77
msgid ""
"If your ``localField`` is an array, you may want to add an "
":pipeline:`$unwind` stage to your pipeline. Otherwise, the equality "
"condition between the ``localField`` and ``foreignField`` is "
"``foreignField: { $in: [ localField.elem1, localField.elem2, ... ] }``."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:83
msgid "See the :ref:`example <unwind-example>` on this page."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:85
msgid "``foreignField``"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:87
msgid ""
"Specifies the field from the documents in the ``from`` collection. "
":pipeline:`$lookup` performs an equality match on the ``foreignField`` to"
" the ``localField`` from the input documents. If a document in the "
"``from`` collection does not contain the ``foreignField``, the "
":pipeline:`$lookup` treats the value as ``null`` for matching purposes."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:94
#: ../source/reference/operator/aggregation/lookup.txt:196
msgid "``as``"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:96
#: ../source/reference/operator/aggregation/lookup.txt:198
msgid ""
"Specifies the name of the new array field to add to the input documents. "
"The new array field contains the matching documents from the ``from`` "
"collection. If the specified name already exists in the input document, "
"the existing field is *overwritten*."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:102
#: ../source/reference/operator/aggregation/lookup.txt:204
#: ../source/reference/operator/aggregation/lookup.txt:314
#: ../source/reference/operator/aggregation/lookup.txt:543
#: ../source/reference/operator/aggregation/lookup.txt:623
msgid "The operation would correspond to the following pseudo-SQL statement:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:112
#: ../source/reference/operator/aggregation/lookup.txt:214
msgid "See the following examples:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:114
msgid ":ref:`lookup-single-equality`"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:115
msgid ":ref:`unwind-example`"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:116
msgid ":ref:`lookup-mergeObjects`"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:121
msgid "Join Conditions and Uncorrelated Sub-queries"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:125
msgid ""
"To perform uncorrelated subqueries between two collections as well as "
"allow other join conditions besides a single equality match, the "
":pipeline:`$lookup` stage has the following syntax:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:155
msgid "``let``"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:157
msgid ""
"Optional. Specifies variables to use in the ``pipeline`` field stages. "
"Use the variable expressions to access the fields from the documents "
"input to the :pipeline:`$lookup` stage."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:161
#: ../source/reference/operator/aggregation/lookup.txt:182
msgid ""
"The ``pipeline`` cannot directly access the input document fields. "
"Instead, first define the variables for the input document fields, and "
"then reference the variables in the stages in the ``pipeline``."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:166
#: ../source/reference/operator/aggregation/lookup.txt:187
msgid ""
"To access the ``let`` variables in the ``pipeline``, use the "
":query:`$expr` operator."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:171
#: ../source/reference/operator/aggregation/lookup.txt:192
msgid ""
"The ``let`` variables are accessible by the stages in the ``pipeline``, "
"including additional :pipeline:`$lookup` stages nested in the "
"``pipeline``."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:175
msgid "``pipeline``"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:177
msgid ""
"Specifies the pipeline to run on the joined collection. The ``pipeline`` "
"determines the resulting documents from the joined collection. To return "
"all documents, specify an empty pipeline ``[]``."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:216
msgid ":ref:`lookup-multiple-joins`"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:217
msgid ":ref:`lookup-uncorrelated-subuery`"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:220
msgid "Consideration"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:223
msgid "Views and Collation"
msgstr ""

#: ../source/includes/extracts/views-collation-agg.rst:2
msgid ""
"If performing an aggregation that involves multiple views, such as with "
":pipeline:`$lookup` or :pipeline:`$graphLookup`, the views must have the "
"same :doc:`collation  </reference/collation>`."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:228
msgid "Examples"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:233
msgid "Perform a Single Equality Join with ``$lookup``"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:235
#: ../source/reference/operator/aggregation/lookup.txt:409
#: ../source/reference/operator/aggregation/lookup.txt:474
msgid "Create a collection ``orders`` with the following documents:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:247
msgid "Create another collection ``inventory`` with the following documents:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:262
msgid ""
"The following aggregation operation on the ``orders`` collection joins "
"the documents from ``orders`` with the documents from the ``inventory`` "
"collection using the fields ``item`` from the ``orders`` collection and "
"the ``sku`` field from the ``inventory`` collection:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:284
#: ../source/reference/operator/aggregation/lookup.txt:456
#: ../source/reference/operator/aggregation/lookup.txt:532
msgid "The operation returns the following documents:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:327
msgid "Use ``$lookup`` with an Array"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:329
msgid ""
"If your ``localField`` is an array and you'd like to match the elements "
"inside it against a ``foreignField`` which is a single element, you'll "
"need to :pipeline:`$unwind` the array as one stage of the aggregation "
"pipeline."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:334
msgid "Consider a collection ``orders`` with the following document:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:341
msgid "Another collection ``inventory`` contains the following documents:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:352
msgid ""
"The following aggregation operation performs a join on documents in the "
"``orders`` collection which match a particular element of the ``specs`` "
"array to the ``size`` field in the ``inventory`` collection."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:376
msgid "The operation returns the following document:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:402
msgid "Use ``$lookup`` with ``$mergeObjects``"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:406
msgid ""
"MongoDB 3.6 adds the :expression:`$mergeObjects` operator to combine "
"multiple documents into a single document"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:420
msgid "Create another collection ``items`` with the following documents:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:432
msgid ""
"The following operation first uses the :pipeline:`$lookup` stage to join "
"the two collections by the ``item`` fields and then uses "
":expression:`$mergeObjects` in the :pipeline:`$replaceRoot` to merge the "
"joined documents from ``items`` and ``orders``:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:466
msgid "Specify Multiple Join Conditions with ``$lookup``"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:470
#: ../source/reference/operator/aggregation/lookup.txt:563
msgid ""
"MongoDB 3.6 adds support for executing a pipeline on the joined "
"collection, which allows for specifying multiple join conditions as well "
"as uncorrelated sub-queries."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:486
msgid "Create another collection ``warehouses`` with the following documents:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:500
msgid ""
"The following operation joins the ``orders`` collection with the "
"``warehouse`` collection by the item and whether the quantity in stock is"
" sufficient to cover the ordered quantity:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:554
msgid ":query:`$expr`"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:559
msgid "Uncorrelated Subquery"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:567
msgid "Create a collection ``absences`` with the following documents:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:578
msgid "Create another collection ``holidays`` with the following documents:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:592
msgid ""
"The following operation joins the ``absences`` collection with 2018 "
"holiday information from the ``holidays`` collection:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:614
msgid "The operation returns the following:"
msgstr ""

