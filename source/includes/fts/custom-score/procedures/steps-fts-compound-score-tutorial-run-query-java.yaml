ref: fts-compound-score-tutorial-step1
level: 4
stepnum: 1
inherit:
  file: steps-fts-tutorial-run-query-java.yaml
  ref: verify-dependencies-java
---
ref: run-compound-constant-query-java
level: 4
stepnum: 2
title: "Run an |fts| compound query that alters the score using the 
       :ref:`scoring-constant` option."
content: |

  a. Create a file named ``CompoundConstantQuery.java``.
  #. Copy and paste the following code into the file.

     The code example performs the following tasks:

     - Imports ``mongodb`` packages and dependencies.
     - Establishes a connection to your |service| cluster.
     - Uses the following compound clauses to query the collection: 

       .. include:: /includes/fts/extracts/fts-compound-constant-desc.rst

     - .. include:: /includes/fts/extracts/fts-compound-highlight-desc.rst

     - Uses the following pipeline stages:

       .. include:: /includes/fts/extracts/fts-compound-score-stages.rst

     - Iterates over the cursor to print the documents that match the 
       query.

     .. literalinclude:: /includes/fts/custom-score/compound-constant-query.java
        :language: java
        :linenos:
        :dedent:
        :emphasize-lines: 38

     .. note:: 

        To run the sample code in your Maven environment, add the 
        following above the import statements in your file.

        .. code-block:: 

           package com.mongodb.drivers;

  #. .. include:: /includes/fts/facts/fact-fts-driver-connection-string.rst
  #. Compile and run ``CompoundConstantQuery.java`` file.

     .. io-code-block::
        :copyable: true

        .. input::
           :language: bash

           javac CompoundConstantQuery.java
           java CompoundConstantQuery
        
        .. output::
           :language: json
           :visible: true
           
           {"title": "Snow in Paradise", "year": 2014, "score": 5.0, "highlights": [{"score": 1.382846713066101, "path": "title", "texts": [{"value": "Snow", "type": "hit"}, {"value": " in Paradise", "type": "text"}]}]}
           {"title": "Dead Snow 2: Red vs. Dead", "year": 2014, "score": 5.0, "highlights": [{"score": 1.3924485445022583, "path": "title", "texts": [{"value": "Dead ", "type": "text"}, {"value": "Snow", "type": "hit"}, {"value": " 2: Red vs. ", "type": "text"}]}]}
           {"title": "The Snow White Murder Case", "year": 2014, "score": 5.0, "highlights": [{"score": 1.3525336980819702, "path": "title", "texts": [{"value": "The ", "type": "text"}, {"value": "Snow", "type": "hit"}, {"value": " White Murder Case", "type": "text"}]}]}
           {"title": "Snow on the Blades", "year": 2014, "score": 5.0, "highlights": [{"score": 1.3766303062438965, "path": "title", "texts": [{"value": "Snow", "type": "hit"}, {"value": " on the Blades", "type": "text"}]}]}
           {"year": 2013, "title": "The Secret Life of Walter Mitty", "score": 0.0, "highlights": []}
           {"title": "Jurassic World", "year": 2015, "score": 0.0, "highlights": []}
           {"title": "Action Jackson", "year": 2014, "score": 0.0, "highlights": []}
           {"year": 2013, "title": "In Secret", "score": 0.0, "highlights": []}
           {"title": "The Stanford Prison Experiment", "year": 2015, "score": 0.0, "highlights": []}
           {"year": 2014, "title": "The Giver", "score": 0.0, "highlights": []}

     .. include:: /includes/fts/extracts/fts-compound-constant-score-desc.rst

---
ref: run-compound-boost-query-java
level: 4
stepnum: 3
title: "Run |fts| compound queries that alter the score using the 
       :ref:`scoring-boost` option."
content: |

  a. Create a file named ``CompoundBoostQuery.java``.
  #. Copy and paste the following code into the file.

     The code example performs the following tasks:

     - Imports ``mongodb`` packages and dependencies.
     - Establishes a connection to your |service| cluster.
     - Iterates over the cursor to print the documents that match the 
       query.

     .. tabs:: 

        .. tab:: Simple Example
           :tabid: simple

           The query uses the following pipeline stages:

           - :pipeline:`$search` stage to query the collection. The 
             query:

             - Uses the following ``compound`` operator clauses:

               .. include:: /includes/fts/extracts/fts-compound-boost-desc.rst

             .. include:: /includes/fts/extracts/fts-compound-highlight-desc.rst
       
           .. include:: /includes/fts/extracts/fts-compound-score-stages.rst

           .. literalinclude:: /includes/fts/custom-score/compound-boost-query.java
              :language: java
              :linenos:
              :dedent:
              :emphasize-lines: 38

        .. tab:: Multiple Weights Example
           :tabid: multi

           This query uses the following ``compound`` operator clauses 
           with the ``boost`` option to prioritize some fields more 
           than other fields: 
        
           .. include:: /includes/fts/extracts/fts-compound-boost-advanced-desc.rst
   
           .. literalinclude:: /includes/fts/custom-score/boost-multi-query.java
              :language: java
              :linenos:
              :dedent:
              :emphasize-lines: 38

     .. note:: 

        To run the sample code in your Maven environment, add the 
        following above the import statements in your file.

        .. code-block:: 

           package com.mongodb.drivers;

  #. .. include:: /includes/fts/facts/fact-fts-driver-connection-string.rst
  #. Compile and run ``CompoundBoostQuery.java`` file.

     .. tabs:: 
        :hidden:

        .. tab:: Simple Example
           :tabid: simple

           .. io-code-block::
              :copyable: true

              .. input::
                 :language: bash

                 javac CompoundBoostQuery.java
                 java CompoundBoostQuery
        
              .. output::
                 :language: json
                 :visible: true

                 {"title": "Snow in Paradise", "year": 2014, "score": 6.7722930908203125, "highlights": [{"score": 1.382846713066101, "path": "title", "texts": [{"value": "Snow", "type": "hit"}, {"value": " in Paradise", "type": "text"}]}]}
                 {"title": "Snow on the Blades", "year": 2014, "score": 6.063445568084717, "highlights": [{"score": 1.3766303062438965, "path": "title", "texts": [{"value": "Snow", "type": "hit"}, {"value": " on the Blades", "type": "text"}]}]}
                 {"title": "The Snow White Murder Case", "year": 2014, "score": 5.509652137756348, "highlights": [{"score": 1.3525336980819702, "path": "title", "texts": [{"value": "The ", "type": "text"}, {"value": "Snow", "type": "hit"}, {"value": " White Murder Case", "type": "text"}]}]}
                 {"title": "Dead Snow 2: Red vs. Dead", "year": 2014, "score": 5.065053939819336, "highlights": [{"score": 1.3924485445022583, "path": "title", "texts": [{"value": "Dead ", "type": "text"}, {"value": "Snow", "type": "hit"}, {"value": " 2: Red vs. ", "type": "text"}]}]}
                 {"year": 2013, "title": "The Secret Life of Walter Mitty", "score": 1.0, "highlights": []}
                 {"title": "Jurassic World", "year": 2015, "score": 1.0, "highlights": []}
                 {"title": "Action Jackson", "year": 2014, "score": 1.0, "highlights": []}
                 {"year": 2013, "title": "In Secret", "score": 1.0, "highlights": []}
                 {"title": "The Stanford Prison Experiment", "year": 2015, "score": 1.0, "highlights": []}
                 {"year": 2014, "title": "The Giver", "score": 1.0, "highlights": []}

           .. include:: /includes/fts/extracts/fts-compound-boost-score-desc.rst

        .. tab:: Multiple Weights Example
           :tabid: multi

           .. io-code-block::
              :copyable: true

              .. input::
                 :language: bash

                 javac CompoundBoostQuery.java
                 java CompoundBoostQuery
        
              .. output:: /includes/fts/custom-score/boost-multi-java-query-results.json
                 :language: json
                 :visible: true

---
ref: run-compound-function-query-java
level: 4
stepnum: 4
title: "Run an |fts| compound query that alters the score using the 
       :ref:`scoring-function` option."
content: |

  a. Create a file named ``CompoundFunctionQuery.java``.
  #. Copy and paste the following code into the file.

     The code example performs the following tasks:

     - Imports ``mongodb`` packages and dependencies.
     - Establishes a connection to your |service| cluster.
     - Uses the following pipeline stages to query the collection:

       .. include:: /includes/fts/extracts/fts-compound-function-desc.rst

     - Uses the following pipeline stages: 
       
       .. include:: /includes/fts/extracts/fts-compound-score-stages.rst

     - .. include:: /includes/fts/extracts/fts-compound-highlight-desc.rst

     - Iterates over the cursor to print the documents that match the 
       query.

     .. literalinclude:: /includes/fts/custom-score/compound-function-query.java
        :language: java
        :linenos:
        :dedent:
        :emphasize-lines: 39

     .. note:: 

        To run the sample code in your Maven environment, add the 
        following above the import statements in your file.

        .. code-block:: 

           package com.mongodb.drivers;

  #. .. include:: /includes/fts/facts/fact-fts-driver-connection-string.rst
  #. Compile and run ``CompoundFunctionQuery.java`` file.

     .. io-code-block::
        :copyable: true

        .. input::
           :language: bash

           javac CompoundFunctionQuery.java
           java CompoundFunctionQuery
        
        .. output::
           :language: json
           :visible: true

           {"title": "The Snow White Murder Case", "year": 2014, "score": 10.454826354980469, "highlights": [{"score": 1.3525336980819702, "path": "title", "texts": [{"value": "The ", "type": "text"}, {"value": "Snow", "type": "hit"}, {"value": " White Murder Case", "type": "text"}]}]}
           {"title": "Snow on the Blades", "year": 2014, "score": 10.3317232131958, "highlights": [{"score": 1.3766303062438965, "path": "title", "texts": [{"value": "Snow", "type": "hit"}, {"value": " on the Blades", "type": "text"}]}]}
           {"title": "Dead Snow 2: Red vs. Dead", "year": 2014, "score": 10.032526969909668, "highlights": [{"score": 1.3924485445022583, "path": "title", "texts": [{"value": "Dead ", "type": "text"}, {"value": "Snow", "type": "hit"}, {"value": " 2: Red vs. ", "type": "text"}]}]}
           {"title": "Snow in Paradise", "year": 2014, "score": 8.386146545410156, "highlights": [{"score": 1.382846713066101, "path": "title", "texts": [{"value": "Snow", "type": "hit"}, {"value": " in Paradise", "type": "text"}]}]}
           {"year": 2013, "title": "The Secret Life of Walter Mitty", "score": 1.0, "highlights": []}
           {"title": "Jurassic World", "year": 2015, "score": 1.0, "highlights": []}
           {"title": "Action Jackson", "year": 2014, "score": 1.0, "highlights": []}
           {"year": 2013, "title": "In Secret", "score": 1.0, "highlights": []}
           {"title": "The Stanford Prison Experiment", "year": 2015, "score": 1.0, "highlights": []}
           {"year": 2014, "title": "The Giver", "score": 1.0, "highlights": []}

     .. include:: /includes/fts/extracts/fts-compound-function-score-desc.rst

...
