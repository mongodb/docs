file: /tutorial/insert-documents
description: |
  Insert new documents into a collection.
---
file: /tutorial/query-documents
description: |
  Find documents in a collection using search criteria.
---
file: /tutorial/project-fields-from-query-results
description: |
  Limit which fields are returned by a query.
---
file: /tutorial/iterate-a-cursor
description: |
  Access documents returned by a :method:`find <db.collection.find>`
  query by iterating the cursor, either manually or using the iterator
  index.
---
file: /tutorial/analyze-query-plan
description: |
  Analyze the efficiency of queries and determine how a query uses
  available indexes.
---
file: /tutorial/modify-documents
description: |
  Modify documents in a collection
---
file: /tutorial/remove-documents
description: |
  Remove documents from a collection.
---
file: /tutorial/perform-two-phase-commits
description: |
  Use two-phase commits  when writing data to multiple documents.
---
file: /tutorial/create-tailable-cursor
description: |
  Create tailable cursors for use in capped collections with high
  numbers of write operations for which an index would be too
  expensive.
---
file: /tutorial/isolate-sequence-of-operations
description: |
  Use the :update:`$isolated` operator to *isolate* a
  single write operation that affects multiple documents, preventing
  other operations from interrupting the sequence of write operations.
---
file: /tutorial/update-if-current
description: |
  Update a document only if it has not changed since it was last read.
---
file: /tutorial/create-an-auto-incrementing-field
description: |
  Describes how to create an incrementing sequence number for the
  ``_id`` field using a Counters Collection or an Optimistic Loop.
---
file: /tutorial/limit-number-of-elements-in-updated-array
description: |
  Use :operator:`$push <push>` with various modifiers to sort and
  maintain an array of fixed size after update
...
