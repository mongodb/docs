=======
Session
=======

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. method:: Session

   The Session object for the connection in :binary:`~bin.mongosh`.
   To instantiate a session for the connection in
   :binary:`~bin.mongosh`, see :method:`Mongo.startSession()`. For more
   information on sessions, see :ref:`sessions`.

   General Session Methods
   ~~~~~~~~~~~~~~~~~~~~~~~

   .. list-table::
      :widths: 20 80

      * - Method
        - Description

      * - .. method:: Session.advanceClusterTime()
        - Updates the cluster time tracked by the session.

          This method has the following parameters:
         
          .. code-block:: javascript
             :copyable: false

             Session.advanceClusterTime( { 
                clusterTime: <timestamp>,
                signature: 
                   { hash: <BinData>, keyId: <NumberLong> } 
             } )

      * - .. method:: Session.advanceOperationTime(<timestamp>)
        - Updates the operation time.

      * - .. method:: Session.endSession()
        - Ends the session.

      * - .. method:: Session.getClusterTime()
        - Returns the most recent cluster time as seen by the session.
          Applicable for replica sets and sharded clusters only.

      * - .. method:: Session.getDatabase(<database>)
        - Access the specified database from the session in :binary:`~bin.mongosh`.

      * - .. method:: Session.getOptions()
        - Access the options for the session. For the available
          options, see :method:`SessionOptions`.

      * - .. method:: Session.getOperationTime()
        - Returns the timestamp of the last acknowledged operation for
          the session.

      * - .. method:: Session.hasEnded()
        - Returns a boolean that specifies whether the session has
          ended.

   Session Methods for Transactions
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   .. list-table::

      * - Method
        - Description

      * - :method:`Session.abortTransaction()`
        - Aborts the session's transaction. For details, see
          :method:`Session.abortTransaction()`.

      * - :method:`Session.commitTransaction()`
        - Commits the session's transaction. For details, see
          :method:`Session.commitTransaction()`.

      * - :method:`Session.startTransaction()`
        - Starts a multi-document transaction for the session. For
          details, see :method:`Session.startTransaction()`.

      * - :method:`Session.withTransaction()`
        - Runs a specified lambda function within a transaction. For
          details, see :method:`Session.withTransaction()`.

Example
-------

The following example starts a session on the :method:`Mongo`
connection object associated with :binary:`~bin.mongosh`'s global
``db`` variable, and then uses the :method:`Session.getDatabase()`
method to retrieve the database object associated with the session.

.. code-block:: javascript

   var session = db.getMongo().startSession();
   db = session.getDatabase(db.getName());


.. toctree::
   :titlesonly:
   :hidden:

   /reference/method/Session.abortTransaction
   /reference/method/Session.commitTransaction
   /reference/method/Session.startTransaction
   /reference/method/Session.withTransaction
