==========================
Get All Organization Users
==========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. include:: /includes/api/base-api-uri.rst

Syntax
------

.. code-block:: sh

   GET /orgs/{ORG-ID}/users

Request Path Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1

   * - Parameter
     - Required/Optional
     - Description

   * - ``ORG-ID``

     - Required.

     - The unique identifier for the :ref:`organization <organizations>` whose
       user information you want to retrieve.

Request Query Parameters
~~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1
   :widths: 30 10 60

   * - Field
     - Required/Optional
     - Description

   * - ``pageNum``

     - Optional.

     - The page to return.

       Defaults to ``1``.

   * - ``itemsPerPage``

     - Optional.

     - Number of items to return per page, up to a maximum of 500.

       Defaults to ``100``.

   * - ``envelope``

     - Optional.

     - A boolean that specifies whether or not to wrap the response in an
       :ref:`envelope <api-envelope>`.

       Defaults to ``false``.

   * - ``pretty``

     - Optional

     - A boolean that specifies whether or not to return a "pretty-printed"
       JSON document.

       Defaults to ``false``.

Response Elements
~~~~~~~~~~~~~~~~~

If you set the query element ``envelope`` to ``true``, the response is wrapped
by the ``content`` object.

The HTTP response returns a JSON document that includes the following objects:

``results``
+++++++++++

An array of documents, each representing one Organization user.

.. list-table::
   :header-rows: 1
   :widths: 25 75

   * - Name
     - Description

   * - ``country``
     - The country where the user lives.

   * - ``emailAddress``
     - The user's email address.

   * - ``firstName``
     - The user's first name.

   * - ``lastName``
     - ID of the |mms| project the user belongs to.

   * - ``id``
     - The user's id.

   * - ``links``
     - One or more links to sub-resources and/or related resources.

   * - ``mobileNumber``
     - The user's mobile phone number.

   * - ``username``
     - The username for authenticating to MongoDB.

   * - ``roles``
     - An array of the user's roles within the Organization and for each 
       Project to which the user belongs.

   * - ``roles.{ENTITY-ID}``
     - The ``{ENTITY-ID}`` represents the Organization or Project to which this
       role applies. Possible values are: ``orgId`` or ``groupId``.

   * - ``roles.roleName``
     - The name of the role. The ``users`` resource returns all the roles the
       user has in either  |mms| or |service|. Possible values are:

       - Organization Roles

         - ``ORG_OWNER``
         - ``ORG_PROJECT_CREATOR``
         - ``ORG_BILLING_ADMIN``
         - ``ORG_READ_ONLY``
         - ``ORG_MEMBER``

       - Project Roles

         .. note::

            Groups and projects are synonymous terms.

         - ``GROUP_OWNER``
         - ``GROUP_READ_ONLY``
         - ``GROUP_DATA_ACCESS_ADMIN``
         - ``GROUP_DATA_ACCESS_READ_WRITE`` 
         - ``GROUP_DATA_ACCESS_READ_ONLY``
         - ``GROUP_AUTOMATION_ADMIN``
         - ``GROUP_BACKUP_ADMIN`` 
         - ``GROUP_MONITORING_ADMIN`` 
         - ``GROUP_OWNER`` 
         - ``GROUP_USER_ADMIN`` 

   * - ``teamIds``
     - An array of the team ids for the organization.

``links``
+++++++++

An array of documents, representing a :ref:`link <api-linking>` to one or more
sub-resources and/or related resources such as :ref:`list pagination
<api-lists>`. See :ref:`api-linking` for more information.

``totalCount``
++++++++++++++

The total number of items in the result set. This value may be higher than the
number of objects in the ``results`` array if the entire result set is
paginated.

Example Request
---------------

Request
~~~~~~~

.. class:: copyable-code

.. code-block:: none

   curl -i -u "username:apiKey" --digest "https://cloud.mongodb.com/api/public/v1.0/orgs/59db8d1d87d9d6420df0613f/users?pretty=true"

Response
~~~~~~~~

.. code-block:: none

   HTTP/1.1 200 OK

   {
     "links" : [ ... ],
     "results" : [
       {
          "country": "US",
          "emailAddress": "someone@example.com",
          "firstName": "John",
          "id": "59db8d1d87d9d6420df0613a",
          "lastName": "Smith",
          "links": [ ... ],
          "mobileNumber": "123-456-7890",
          "roles": [{
            "groupId": "59ea02e087d9d636b587a967",
            "roleName": "GROUP_OWNER"
          }, {
            "groupId": "59db8d1d87d9d6420df70902",
            "roleName": "GROUP_OWNER"
          }, {
            "orgId": "59db8d1d87d9d6420df0613f",
            "roleName": "ORG_OWNER"
          }],
          "teamIds" : [ "5aeeed020bd6ef9d00033291", "5ac2aeadcabceef96172be31" ],
          "username": "someone@example.com"
       },
       ...
     ],
     "totalCount" : 2
   }
