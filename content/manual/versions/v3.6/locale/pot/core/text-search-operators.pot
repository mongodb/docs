# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/text-search-operators.txt:3
msgid "Text Search Operators"
msgstr ""

#: ../source/includes/extracts/views-unsupported-text-search.rst:1
msgid ":doc:`Views </core/views>` do not support text search."
msgstr ""

#: ../source/core/text-search-operators.txt:18
msgid "Query Framework"
msgstr ""

#: ../source/includes/fact-use-text-operator.rst:1
msgid "Use the :query:`$text` query operator to perform text searches on a collection with a :ref:`text index <index-feature-text>`."
msgstr ""

#: ../source/includes/fact-use-text-operator.rst:4
msgid ":query:`$text` will tokenize the search string using whitespace and most punctuation as delimiters, and perform a logical ``OR`` of all such tokens in the search string."
msgstr ""

#: ../source/includes/fact-use-text-operator.rst:8
msgid "For example, you could use the following query to find all stores containing any terms from the list \"coffee\", \"shop\", and \"java\":"
msgstr ""

#: ../source/core/text-search-operators.txt:22
msgid "Use the :projection:`$meta` query operator to obtain and sort by the relevance score of each matching document. For example, to order a list of coffee shops in order of relevance, run the following:"
msgstr ""

#: ../source/core/text-search-operators.txt:33
msgid "For more information on the :query:`$text` and :projection:`$meta` operators, including restrictions and behavior, see:"
msgstr ""

#: ../source/core/text-search-operators.txt:36
msgid ":query:`$text Reference Page <$text>`"
msgstr ""

#: ../source/core/text-search-operators.txt:38
msgid ":ref:`$text Query Examples <text-query-examples>`"
msgstr ""

#: ../source/core/text-search-operators.txt:40
msgid ":projection:`$meta` projection operator"
msgstr ""

#: ../source/core/text-search-operators.txt:44
msgid "Aggregation Framework"
msgstr ""

#: ../source/core/text-search-operators.txt:46
msgid "When working with the :doc:`/aggregation` framework, use :pipeline:`$match` with a :query:`$text` expression to execute a text search query. To sort the results in order of relevance score,use the :expression:`$meta` *aggregation operator* in the :pipeline:`$sort` stage [#meta-aggregation]_."
msgstr ""

#: ../source/core/text-search-operators.txt:52
msgid "For more information and examples of text search in the :doc:`/aggregation` framework, see :doc:`/tutorial/text-search-in-aggregation`."
msgstr ""

#: ../source/includes/fact-meta-operator-disambiguation.rst:1
msgid "The behavior and requirements of the :projection:`$meta` projection operator differ from that of the :expression:`$meta` aggregation operator. For details on the :expression:`$meta` aggregation operator, see the :expression:`$meta` aggregation operator reference page."
msgstr ""

