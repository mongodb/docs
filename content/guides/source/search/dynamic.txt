:template: guide

.. _guides-search-dynamic:

=====================
Build a Dynamic Index
=====================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Overview
--------

.. short-description::

   Retrieve documents in MongoDB with full-text search.

In this guide, you will learn how to create an :ref:`Atlas Search index 
<ref-create-index>` with :ref:`dynamic mappings 
<static-dynamic-mappings>` to query and quickly retrieve relevant data. 

.. time:: 5

What You'll Need
----------------

- A MongoDB account. See :ref:`guides-create-atlas-account`.
- An Atlas cluster. See :ref:`guides-create-a-cluster`.
- Sample datasets :ref:`loaded into your cluster <guides-load-sample-data>`.

Procedure
---------

.. procedure::
   :style: normal

   .. include:: /includes/navigate_to_cluster.rst

   .. step:: Create a dynamic search index.

      .. procedure::
         :style: connected

         .. include:: /includes/nav/steps-atlas-search.rst

         .. step:: Click 
            :guilabel:`Create Search Index`.

         .. step:: Select the :guilabel:`Visual Editor` configuration 
            method, then click :guilabel:`Next`.

         .. step:: For the :guilabel:`Database and Collection`, select the 
            ``sample_supplies`` database and the ``sales`` collection. 
            Then, click :guilabel:`Next`.

         .. step:: Click :guilabel:`Create Search Index` to confirm your 
            selection. Wait for the :guilabel:`Status` column to read 
            :guilabel:`Active`.

            You now have a search index that
            :ref:`dynamically indexes <static-dynamic-mappings>` the fields
            across the documents in your collection.

   .. step:: Run a query on your index.

      .. procedure::
         :style: connected

         .. step:: Click :guilabel:`Query`
            in the :guilabel:`Actions` column of your index definition.

         .. step:: Type ``notepad`` into the search bar, then click 
            :guilabel:`Search`. 

            This query returns all documents in the ``sales`` collection with
            a field that contains ``notepad``.
         
         .. step:: Review the results.

            Your results should resemble the following sample documents:

            .. code-block:: json
               :copyable: false

               SCORE: 0.20185701549053192
               salesDate: 2013-03-07T09:27:58.283+00:00
               items: Array
               storeLocation: "Austin"

               SCORE: 0.20185701549053192
               salesDate: 2013-05-05T19:03:06.358+00:00
               items: Array
               storeLocation: "London"

               SCORE: 0.20185701549053192
               salesDate: 2016-06-20T14:09:52.408+00:00
               items: Array
               storeLocation: "Denver"

            Each record also includes a :ref:`relevance score <scoring-ref>`.
            You can expand ``Array`` and ``Object`` fields to view their 
            contents by clicking on them.

         .. step:: Click :guilabel:`Edit Query Syntax`. The modal window
            displays the query sent through the {+fts+} API.

Summary
-------

If you successfully completed the procedure in this guide, you have
created an Atlas Search index with dynamic field mappings and used it
to perform a relevance-based query against the 
``sample_supplies.sales`` collection. In the next guide, you will learn 
how to perform a refined search by creating an index with static field 
mappings.

.. guide-next::