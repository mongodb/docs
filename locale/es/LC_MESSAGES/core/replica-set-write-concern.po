# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: 2014-04-08 19:27+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# 1f65ca71a81246e1985e939cb9bb1e77
#: ../source/core/replica-set-write-concern.txt:3
msgid "Write Concern for Replica Sets"
msgstr ""

# 93fc71e9f64a4f99a16e588f041c09be
#: ../source/core/replica-set-write-concern.txt
msgid "On this page"
msgstr ""

# 72793e18a46f468083b05032d3e71e2d
#: ../source/core/replica-set-write-concern.txt:13
msgid ""
"From the perspective of a client application, whether a MongoDB instance "
"is running as a single server (i.e. \"standalone\") or a :term:`replica "
"set` is transparent. However, replica sets offer some configuration "
"options for write. [#sharded-clusters]_"
msgstr ""

# 32b881b9ef55432899817ce48cea9470
#: ../source/core/replica-set-write-concern.txt:18
msgid ""
":term:`Sharded clusters <sharded cluster>` where the shards are also "
"replica sets provide the same configuration options with regards to write"
" and read operations."
msgstr ""

# c0fbf2f200cc4058a4484832d54de6cd
#: ../source/core/replica-set-write-concern.txt:25
msgid "Verify Write Operations to Replica Sets"
msgstr ""

# 5a59ecb86e174939bf87e06175ff8b0e
#: ../source/core/replica-set-write-concern.txt:27
msgid ""
"For a replica set, the default :doc:`write concern </reference/write-"
"concern>` requests acknowledgement only from the primary. You can, "
"however, override this default write concern, such as to confirm write "
"operations on a specified number of the replica set members."
msgstr ""

# 4f335e44964449558d3a3f521a091ccd
#: ../source/core/replica-set-write-concern.txt:35
msgid ""
"To override the default write concern, specify a write concern with each "
"write operation. For example, the following method includes a write "
"concern that specifies that the method return only after the write "
"propagates to the primary and at least one secondary or the method times "
"out after 5 seconds."
msgstr ""

# 9b247c4c15f54ab0bcac046f522de0ba
#: ../source/core/replica-set-write-concern.txt:48
msgid ""
"You can include a timeout threshold for a write concern. This prevents "
"write operations from blocking indefinitely if the write concern is "
"unachievable. For example, if the write concern requires acknowledgement "
"from 4 members of the replica set and the replica set has only available "
"3 members, the operation blocks until those members become available. See"
" :ref:`wc-wtimeout`."
msgstr ""

# bed6d9e749d04ed59934ffeadd27352a
#: ../source/core/replica-set-write-concern.txt:56
msgid ":ref:`write-methods-incompatibility`"
msgstr ""

# e5c183d5284340fb8d0e1d517a605f60
#: ../source/core/replica-set-write-concern.txt:61
msgid "Modify Default Write Concern"
msgstr ""

# 8ab5a23ed86848d881cdb28b48fe9458
#: ../source/core/replica-set-write-concern.txt:66
msgid ""
"You can modify the default write concern for a replica set by setting the"
" :rsconf:`settings.getLastErrorDefaults` setting in the :doc:`replica set"
" configuration </reference/replica-configuration>`. The following "
"sequence of commands creates a configuration that waits for the write "
"operation to complete on a majority of the voting members before "
"returning:"
msgstr ""

# f6571a970bc4473784a7337d29055f08
#: ../source/core/replica-set-write-concern.txt:80
msgid ""
"If you issue a write operation with a specific write concern, the write "
"operation uses its own write concern instead of the default."
msgstr ""

# 07d96a6da0cf47d589241039aeba05f7
#: ../source/core/replica-set-write-concern.txt:83
msgid ":doc:`/reference/write-concern`"
msgstr ""

# 7c6093b23a9740808149c41446447b6b
#: ../source/core/replica-set-write-concern.txt:86
msgid "Custom Write Concerns"
msgstr ""

# b4220428cbc04f99804ba7ce428c0b78
#: ../source/core/replica-set-write-concern.txt:88
msgid ""
"You can :doc:`tag </tutorial/configure-replica-set-tag-sets>` the members"
" of replica sets and use the resulting tag sets to create custom write "
"concerns. See :doc:`/tutorial/configure-replica-set-tag-sets` for "
"information on configuring custom write concerns using tag sets."
msgstr ""

#~ msgid ""
#~ "MongoDB's built-in :doc:`write concern "
#~ "</core/write-concern>` confirms the success"
#~ " of write operations to a "
#~ ":term:`replica set's <replica set>` "
#~ ":term:`primary`. Write concern uses the "
#~ ":dbcommand:`getLastError` command after write "
#~ "operations to return an object with "
#~ "error information or confirmation that "
#~ "there are no errors."
#~ msgstr ""

#~ msgid ""
#~ "From the perspective of a client "
#~ "application, whether a MongoDB instance "
#~ "is running as a single server "
#~ "(i.e. \"standalone\") or a :term:`replica "
#~ "set` is transparent. However, replica "
#~ "sets offer some configuration options "
#~ "for write and read operations. "
#~ "[#sharded-clusters]_"
#~ msgstr ""

#~ msgid "Verify Write Operations"
#~ msgstr ""

#~ msgid ""
#~ "The default write concern confirms write"
#~ " operations only on the primary.  You"
#~ " can configure write concern to "
#~ "confirm write operations to additional "
#~ "replica set members as well by "
#~ "issuing the :dbcommand:`getLastError` command "
#~ "with the ``w`` option."
#~ msgstr ""

#~ msgid ""
#~ "The ``w`` option confirms that write "
#~ "operations have replicated to the "
#~ "specified number of replica set members,"
#~ " including the primary. You can "
#~ "either specify a number or specify "
#~ "``majority``, which ensures the write "
#~ "propagates to a majority of set "
#~ "members."
#~ msgstr ""

#~ msgid ""
#~ "If you specify a ``w`` value "
#~ "greater than the number of members "
#~ "that hold a copy of the data "
#~ "(i.e., greater than the number of "
#~ "non-:term:`arbiter` members), the operation "
#~ "blocks until those members become "
#~ "available. This can cause the operation"
#~ " to block forever. To specify a "
#~ "timeout threshold for the "
#~ ":dbcommand:`getLastError` operation, use the "
#~ "``wtimeout`` argument. A ``wtimeout`` value"
#~ " of ``0`` means that the operation"
#~ " will never time out."
#~ msgstr ""

#~ msgid ""
#~ "See :ref:`getLastError Examples <gle-"
#~ "examples>` for example invocations."
#~ msgstr ""

#~ msgid ""
#~ "You can configure your own \"default\""
#~ " :dbcommand:`getLastError` behavior for a "
#~ "replica set. Use the "
#~ ":data:`~local.system.replset.settings.getLastErrorDefaults` "
#~ "setting in the :doc:`replica set "
#~ "configuration </reference/replica-configuration>`. "
#~ "The following sequence of commands "
#~ "creates a configuration that waits for"
#~ " the write operation to complete on"
#~ " a majority of the set members "
#~ "before returning:"
#~ msgstr ""

#~ msgid ""
#~ "The :data:`~local.system.replset.settings.getLastErrorDefaults`"
#~ " setting affects only those "
#~ ":dbcommand:`getLastError` commands that have "
#~ "*no* other arguments."
#~ msgstr ""

#~ msgid ""
#~ "You can use replica set tags to"
#~ " create custom write concerns using "
#~ "the :data:`~local.system.replset.settings.getLastErrorDefaults`"
#~ " and :data:`~local.system.replset.settings.getLastErrorModes`"
#~ " replica set settings."
#~ msgstr ""

#~ msgid ""
#~ "Custom write concern modes specify the"
#~ " field name and a number of "
#~ "*distinct* values for that field. By "
#~ "contrast, read preferences use the value"
#~ " of fields in the tag document "
#~ "to direct read operations."
#~ msgstr ""

#~ msgid ""
#~ "In some cases, you may be able "
#~ "to use the same tags for read "
#~ "preferences and write concerns; however, "
#~ "you may need to create additional "
#~ "tags for write concerns depending on "
#~ "the requirements of your application."
#~ msgstr ""

#~ msgid "Single Tag Write Concerns"
#~ msgstr ""

#~ msgid ""
#~ "Consider a five member replica set, "
#~ "where each member has one of the"
#~ " following tag sets:"
#~ msgstr ""

#~ msgid ""
#~ "You could create a custom write "
#~ "concern mode that will ensure that "
#~ "applicable write operations will not "
#~ "return until members with two different"
#~ " values of the ``use`` tag have "
#~ "acknowledged the write operation. Create "
#~ "the mode with the following sequence "
#~ "of operations in the :program:`mongo` "
#~ "shell:"
#~ msgstr ""

#~ msgid ""
#~ "To use this mode pass the string"
#~ " ``use2`` to the ``w`` option of "
#~ ":dbcommand:`getLastError` as follows:"
#~ msgstr ""

#~ msgid "Specific Custom Write Concerns"
#~ msgstr ""

#~ msgid "If you have a three member replica with the following tag sets:"
#~ msgstr ""

#~ msgid ""
#~ "You cannot specify a custom "
#~ ":data:`~local.system.replset.settings.getLastErrorModes` value"
#~ " to ensure that the write propagates"
#~ " to the ``san`` before returning. "
#~ "However, you may implement this write"
#~ " concern policy by creating the "
#~ "following additional tags, so that the"
#~ " set resembles the following:"
#~ msgstr ""

#~ msgid ""
#~ "Then, create a custom "
#~ ":data:`~local.system.replset.settings.getLastErrorModes` value,"
#~ " as follows:"
#~ msgstr ""

#~ msgid ""
#~ "To use this mode pass the string"
#~ " ``san`` to the ``w`` option of "
#~ ":dbcommand:`getLastError` as follows:"
#~ msgstr ""

#~ msgid ""
#~ "This operation will not return until "
#~ "a replica set member with the tag"
#~ " ``disk.san`` returns."
#~ msgstr ""

#~ msgid ""
#~ "You may set a custom write concern"
#~ " mode as the default write concern"
#~ " mode using "
#~ ":data:`~local.system.replset.settings.getLastErrorDefaults` "
#~ "replica set as in the following "
#~ "setting:"
#~ msgstr ""

#~ msgid ""
#~ ":ref:`replica-set-configuration-tag-sets` "
#~ "for further information about replica "
#~ "set reconfiguration and tag sets."
#~ msgstr ""

# f2119f94d5454df8928ccc0fbd5a9521
#~ msgid ""
#~ "Use of insufficient write concern can"
#~ " lead to :ref:`rollbacks <replica-set-"
#~ "rollbacks>` in the case of :ref:`replica"
#~ " set failover <replica-set-failover>`. "
#~ "Always ensure that your operations have"
#~ " specified the required write concern "
#~ "for your application."
#~ msgstr ""

# aa1d58f6f4e045a49dc0c789ce010166
#~ msgid ""
#~ ":ref:`write-operations-write-concern` and "
#~ ":ref:`connections-write-concern`"
#~ msgstr ""

#~ msgid ""
#~ "For a replica set, the default "
#~ ":doc:`write concern </core/write-concern>` "
#~ "confirms write operations only on the"
#~ " primary. You can, however, override "
#~ "this default write concern, such as "
#~ "to confirm write operations on a "
#~ "specified number of the replica set "
#~ "members."
#~ msgstr ""

#~ msgid ""
#~ "You can modify the default write "
#~ "concern for a replica set by "
#~ "setting the "
#~ ":data:`~local.system.replset.settings.getLastErrorDefaults` "
#~ "setting in the :doc:`replica set "
#~ "configuration </reference/replica-configuration>`. "
#~ "The following sequence of commands "
#~ "creates a configuration that waits for"
#~ " the write operation to complete on"
#~ " a majority of the set members "
#~ "before returning:"
#~ msgstr ""

#~ msgid ""
#~ "You can :doc:`tag </tutorial/configure-"
#~ "replica-set-tag-sets>` the members of"
#~ " replica sets and use the tags "
#~ "to create custom write concerns. See "
#~ ":doc:`/tutorial/configure-replica-set-tag-"
#~ "sets` for information on configuring "
#~ "custom write concerns using tag sets."
#~ msgstr ""

