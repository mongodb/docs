=====================
Get One Database User
=====================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. include:: /includes/fact-projects-groups-synonyms.rst

.. include:: /includes/api-requirements.rst

Resource
--------

.. include:: /includes/api/base-api-uri.rst

.. code-block:: http

   GET /groups/{GROUP-ID}/databaseUsers/{databaseName}/{USERNAME}

Request Path Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1
   :stub-columns: 1
   :widths: 20 14 11 55

   * - Parameter
     - Type
     - Necessity
     - Description

   * - GROUP-ID
     - string
     - Required
     - Unique 24-hexadecimal string that identifies the
       :ref:`project <group-id>`.

   * - DATABASE-NAME
     - string
     - Required
     - :ref:`Database <authentication-database>` against which the
       database user authenticates. Database users must provide both a
       username and authentication database to log into MongoDB.

       You may set this parameter value as:

       .. include:: /includes/api/tabsets/db-name.rst

   * - USERNAME
     - string
     - Required
     - Username that this resource retrieves from the MongoDB database.
       This username should be formatted as:

       .. include:: /includes/api/tabsets/db-username.rst

Request Query Parameters
~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/api/no-query-single-parameters.rst

Request Body Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/api/no-body-parameters.rst

Response Elements
~~~~~~~~~~~~~~~~~

If you set the query element ``"envelope" : true``, this resource wraps the response in a ``content`` object.

.. include:: /includes/api/list-tables/database-users-get-response.rst

Example Request
---------------

.. tabs::

   .. tab:: SCRAM-SHA
      :tabid: scram

      Retrieve one database user that |service| authenticates using
      :manual:`SCRAM-SHA </core/security-scram>` and the ``admin``
      database.

      .. include:: /includes/extracts/fact-api-requirements-modify.rst

      .. code-block:: sh

         curl --user "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest \
              --header "Accept: application/json" \
              --include \
              --request GET "https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794dee37132bb7b/databaseUsers/admin/ellen"

   .. tab:: X.509
      :tabid: x509

      Retrieve one database user that |service| authenticates using
      X.509 and the **$external** database.

      .. include:: /includes/extracts/fact-api-requirements-modify.rst

      .. code-block:: sh

         curl --user "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest \
              --header "Accept: application/json" \
              --include \
              --request GET "https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794dee37132bb7b/databaseUsers/\$external/CN=ellen@example.com,OU=users,DC=example,DC=com"

   .. tab:: LDAP
      :tabid: ldap

      Retrieve one database user that |service| authenticates using
      |ldap| and the **$external** database.

      .. include:: /includes/extracts/fact-api-requirements-modify.rst

      .. code-block:: sh

         curl --user "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest \
              --header "Accept: application/json" \
              --include \
              --request GET "https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794dee37132bb7b/databaseUsers/\$external/CN=ellen@example.com,OU=users,DC=example,DC=com"

   .. tab:: AWS IAM
      :tabid: aws-iam

      Retrieve one database user that |service| authenticates using
      |aws| |iam| and the **$external** database.

      .. note::

         |aws| |iam| usernames include characters which must be |url| encoded.

         - Replace all ``:`` characters with ``%3A``.
         - Replace all ``/`` characters with ``%2F``.

      .. include:: /includes/extracts/fact-api-requirements-modify.rst

      .. code-block:: sh

         curl --user "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest \
              --header "Accept: application/json" \
              --include \
              --request GET "https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794dee37132bb7b/databaseUsers/\$external/arn%3Aaws%3Aiam%3A%3A358363220050%3Auser%2Fmongodb-aws-iam-auth-test-user"

Example Response
----------------

Response Header
~~~~~~~~~~~~~~~

.. include:: /includes/api/api-headers/401.rst

.. include:: /includes/api/api-headers/200.rst

Response Body
~~~~~~~~~~~~~

.. tabs::
   :hidden:

   .. tab:: SCRAM-SHA
      :tabid: scram

      .. code-block:: json
         :linenos:
         :copyable: false

         {
           "ldapAuthType" : "NONE",
           "x509Type" : "NONE",
           "awsIAMType" : "NONE",
           "databaseName" : "admin",
           "groupId" : "5356823b3794dee37132bb7b",
           "links" : [ ... ],
           "labels": [],
           "roles" : [ {
             "databaseName" : "admin",
             "roleName" : "readAnyDatabase"
           }, {
             "databaseName" : "marketing",
             "roleName" : "readWrite"
           }, {
             "databaseName" : "marketing",
             "roleName" : "backup"
           } ],
           "scopes": [{
             "name": "myCluster",
             "type": "CLUSTER"
           }],
           "username" : "ellen"
         }

   .. tab:: X.509
      :tabid: x509

      .. code-block:: json
         :linenos:
         :copyable: false

         {
           "databaseName" : "$external",
           "ldapAuthType" : "USER",
           "x509Type" : "NONE",
           "awsIAMType" : "NONE",
           "groupId" : "5356823b3794dee37132bb7b",
           "links" : [ ... ],
           "labels": [],
           "roles" : [ {
             "databaseName" : "admin",
             "roleName" : "readAnyDatabase"
           }, {
             "databaseName" : "marketing",
             "roleName" : "readWrite"
           }, {
             "databaseName" : "marketing",
             "roleName" : "backup"
           } ],
           "scopes": [{
             "name": "myCluster",
             "type": "CLUSTER"
           }],
           "username" : "CN=ellen@example.com,OU=users,DC=example,DC=com"
         }

   .. tab:: LDAP
      :tabid: ldap

      .. code-block:: json
         :linenos:
         :copyable: false

         {
           "databaseName" : "$external",
           "ldapAuthType" : "USER",
           "x509Type" : "NONE",
           "awsIAMType" : "NONE",
           "groupId" : "5356823b3794dee37132bb7b",
           "links" : [ ... ],
           "labels": [],
           "roles" : [ {
             "databaseName" : "admin",
             "roleName" : "readAnyDatabase"
           }, {
             "databaseName" : "marketing",
             "roleName" : "readWrite"
           }, {
             "databaseName" : "marketing",
             "roleName" : "backup"
           } ],
           "scopes": [{
             "name": "myCluster",
             "type": "CLUSTER"
           }],
           "username" : "CN=ellen@example.com,OU=users,DC=example,DC=com"
         }

   .. tab:: AWS IAM
      :tabid: aws-iam

      .. code-block:: json
         :linenos:
         :copyable: false

         {
           "awsIAMType" : "USER",
           "databaseName" : "$external",
           "groupId" : "5356823b3794dee37132bb7b",
           "links" : [ ... ],
           "labels": [],
           "ldapAuthType" : "NONE",
           "x509Type" : "NONE",
           "roles" : [ {
             "databaseName" : "admin",
             "roleName" : "readAnyDatabase"
           }, {
             "databaseName" : "marketing",
             "roleName" : "readWrite"
           }, {
             "databaseName" : "marketing",
             "roleName" : "backup"
           } ],
           "scopes": [{
             "name": "myCluster",
             "type": "CLUSTER"
           }],
           "username" : "arn:aws:iam::358363220050:user/mongodb-aws-iam-auth-test-user"
         }
