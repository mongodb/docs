.. _kotlin-sync-connect-to-mongodb:
.. _kotlin-sync-run-sample-query:

==================
Run a Sample Query
==================

.. procedure::
   :style: connected

   .. step:: Create the Application File
    
      Create a file called ``DemoDataClassExample.kt`` in your project.

      Copy the following sample code into the file and replace the value of
      the ``<connection URI string>`` placeholder with your MongoDB
      Atlas connection string that you saved in the preceding step.

      .. literalinclude:: /includes/get-started/DemoDataClassExample.kt
         :language: kotlin
         :caption: DemoDataClassExample.kt

      .. note::
      
         This example uses a {+language+} data class to model MongoDB data.

   .. step:: Run the Application

      When you run the application, it prints the details
      of a movie document that matches the query, as shown in the
      following output:

      .. code-block:: none
         :copyable: false
         
         Movie(title=Before Sunrise, year=1995, directors=[Richard Linklater])

      If you don't see any output or receive an error, check whether you
      included the proper connection string in your application. Also, confirm
      that you successfully loaded the sample dataset into your MongoDB Atlas cluster.

      After completing this step, you have a working application that uses
      the {+driver-short+} to connect to your MongoDB cluster, run a query on the
      sample data, and print out the result.

   .. step:: Use the Document Class to Model Data (Alternative)

      The preceding step demonstrates how to run a query on a sample
      collection to retrieve data by using a {+language+} data class. This section
      shows how to use the `Document <https://mongodb.github.io/mongo-java-driver/{+version-number+}/apidocs/bson/org/bson/Document.html>`__
      class to store and retrieve data from MongoDB.

      In a file called ``DemoDocumentExample.kt``, paste the following sample
      code to run a query on your sample dataset in MongoDB Atlas. Replace the
      value of the ``<connection URI string>`` placeholder with your
      MongoDB Atlas connection string:

      .. literalinclude:: /includes/get-started/DemoDocumentExample.kt
         :caption: DemoDocumentExample.kt
         :language: kotlin

      When you run the application, it prints the details
      of a movie document that matches the query, as shown in the
      following output:

      .. code-block:: none
         :copyable: false
      
         Document{{_id=..., plot=A young man and woman ..., genres=[Drama, Romance], ...}}

      If you don't see any output or receive an error, check whether you
      included the proper connection string in your application. Also, confirm
      that you successfully loaded the sample dataset into your MongoDB
      Atlas cluster.

After you complete these steps, you have a working application that
uses the driver to connect to your MongoDB deployment, runs a query on
the sample data, and prints out the result.

.. include:: /includes/get-started/quickstart-troubleshoot.rst

.. TODO add after output .. tip:: Data Classes
.. 
..    To learn more about using data classes to store and retrieve data,
..    see the :ref:`fundamentals-data-classes` guide.