.. _mongotop:

============
``mongotop``
============

.. default-domain:: mongodb

.. |tool-binary| replace:: mongotop

Synopsis
--------

:program:`mongotop` provides a method to track the amount of time a
MongoDB instance spends reading and writing data. :program:`mongotop`
provides statistics on a per-collection level. By default,
:program:`mongotop` returns values every second.

.. seealso::

   For more information about monitoring MongoDB, see
   :doc:`/administration/monitoring`.

   For additional background on various other MongoDB status outputs
   see:

   - :doc:`/reference/command/serverStatus`
   - :doc:`/reference/command/replSetGetStatus`
   - :doc:`/reference/command/dbStats`
   - :doc:`/reference/command/collStats`

   For an additional utility that provides MongoDB metrics
   see :doc:`mongostat </reference/program/mongostat>`.

.. _mongotop-options:

Options
-------

.. binary:: mongotop

.. program:: mongotop

.. include:: /includes/options-mongotop.rst

.. option:: <sleeptime>

   The final argument is the length of time, in seconds, that
   :program:`mongotop` waits in between calls. By default
   :program:`mongotop` returns data every second.

.. _mongotop-fields:

Fields
------

:program:`mongotop` returns time values specified in milliseconds
(ms.)

:program:`mongotop` only reports active namespaces or databases,
depending on the :option:`--locks` option. If you don't see a database
or collection, it has received no recent activity. You can issue a
simple operation in the :program:`mongo` shell to generate activity to
affect the output of :program:`mongotop`.

.. data:: mongotop.ns

   Contains the database namespace, which combines the database name
   and collection.

   .. versionchanged:: 2.2
      If you use the :option:`--locks`, the :data:`~mongotop.ns` field does not
      appear in the :program:`mongotop` output.

.. data:: mongotop.db

   .. versionadded:: 2.2

   Contains the name of the database. The database named ``.`` refers
   to the global lock, rather than a specific database.

   This field does not appear unless you have invoked
   :program:`mongotop` with the :option:`--locks` option.

.. data:: mongotop.total

   Provides the total amount of time that this :program:`mongod` spent
   operating on this namespace.

.. data:: mongotop.read

   Provides the amount of time that this :program:`mongod` spent
   performing read operations on this namespace.

.. data:: mongotop.write

   Provides the amount of time that this :program:`mongod` spent
   performing write operations on this namespace.

.. data:: mongotop.<timestamp>

   Provides a time stamp for the returned data.

Use
---

By default :program:`mongotop` connects to the MongoDB instance
running on the localhost port ``27017``. However, :program:`mongotop` can optionally
connect to remote :program:`mongod`
instances. See the :ref:`mongotop options <mongotop-options>` for more
information.

To force :program:`mongotop` to return less frequently specify a number, in
seconds at the end of the command. In this example, :program:`mongotop` will
return every 15 seconds.

.. code-block:: sh

   mongotop 15

This command produces the following output:

.. code-block:: sh

   connected to: 127.0.0.1

                       ns       total        read       write           2012-08-13T15:45:40
   test.system.namespaces         0ms         0ms         0ms
     local.system.replset         0ms         0ms         0ms
     local.system.indexes         0ms         0ms         0ms
     admin.system.indexes         0ms         0ms         0ms
                   admin.         0ms         0ms         0ms

                       ns       total        read       write           2012-08-13T15:45:55
   test.system.namespaces         0ms         0ms         0ms
     local.system.replset         0ms         0ms         0ms
     local.system.indexes         0ms         0ms         0ms
     admin.system.indexes         0ms         0ms         0ms
                   admin.         0ms         0ms         0ms


To return a :program:`mongotop` report every 5 minutes, use the
following command:

.. code-block:: sh

   mongotop 300

To report the use of per-database locks, use :option:`mongotop --locks`,
which produces the following output:

.. code-block:: sh

   $ mongotop --locks
   connected to: 127.0.0.1

                     db       total        read       write          2012-08-13T16:33:34
                  local         0ms         0ms         0ms
                  admin         0ms         0ms         0ms
                      .         0ms         0ms         0ms
