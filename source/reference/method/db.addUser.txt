============
db.addUser()
============

.. default-domain:: mongodb

.. versionchanged:: 2.5.3

Definition
----------

.. method:: db.addUser(document)

   Adds a new user on the database where you run the method. The
   :method:`db.addUser()` method returns a *duplicate user* error if the user
   exists.

   The :method:`db.addUser()` method takes a user document as its argument:

   .. code-block:: javascript

      db.addUser(<user document>)

   The :method:`db.addUser()` user document has the following form:

   .. code-block:: javascript

      { user: "<name>",
        pwd: "<cleartext password>",
        customData: { <any information> },
        roles: [
          { role: "<role>", db: "<database>" } | "<role>",
          ...
        ],
        writeConcern: { <write concern> }
      }

   The :method:`db.addUser()` user document has the following fields:

   .. include:: /reference/method/db.addUser-param.rst

   :method:`db.addUser()` 
   sends password to the MongoDB instance as cleartext.  To encrypt
   the password in transit use:doc:`SSL </tutorial/configure-ssl>`.

   Users created on the ``$external`` database should have credentials stored
   externally to MongoDB, as, for example, with :doc:`MongoDB Enterprise
   installations that use Kerberos
   </tutorial/control-access-to-mongodb-with-kerberos-authentication>`.

   .. |local-cmd-name| replace:: :method:`db.addUser()`
   .. include:: /includes/fact-roles-array-contents.rst

.. note::

   In 2.5.3, MongoDB introduced a new model for user
   credentials and privileges, as described in
   :doc:`/reference/user-privileges`. To use :method:`db.addUser()` on MongoDB
   2.4, see :v2.4:`db.addUser() in the v2.4 Manual
   </reference/method/db.addUser>`.

Example
-------

The following :method:`db.addUser()` method creates a user ``Carlos`` on the
database where the command runs. The command gives ``Carlos`` the
``clusterAdmin`` and ``readAnyDatabase`` roles on the ``admin`` database
and the ``readWrite`` role on the current database:

.. code-block:: javascript

   { user: "Carlos",
     pwd: "cleartext password",
     customData: { employeeId: 12345 },
     roles: [
       { role: "clusterAdmin", db: "admin" },
       { role: "readAnyDatabase", db: "admin" },
       "readWrite"
     ],
     writeConcern: { w: "majority" , wtimeout: 5000 }
   }
