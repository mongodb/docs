========================================================
Release Notes for MongoDB 4.4 (Development Series 4.3.x)
========================================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: twocols


.. include:: /includes/in-dev.rst

.. _4.4-rel-notes-agg:

Aggregation
-----------

Union All (``$unionWith`` Stage)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 4.4 adds the :pipeline:`$unionWith` aggregation stage,
providing the ability to combines pipeline results from multiple
collections into a single result set.

For details, see :pipeline:`$unionWith`.

New Aggregation Operators
~~~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1
   :widths: 20 80
   
   * - Operator
     - Description

   * - :group:`$accumulator`
     
     - Returns the result of a user-defined
       :ref:`accumulator operator <agg-operators-group-accumulators>`.

   * - :expression:`$binarySize`
    
     - Returns the size of a given string or binary data value's
       content in bytes.

   * - :expression:`$bsonSize`
     - Returns the size in bytes of a given document (i.e. bsontype
       ``Object``) when encoded as :term:`BSON`.
     
   * - :expression:`$first`

     - Returns the first element in an array.

   * - :expression:`$last`

     - Returns the last element in an array.

   * - :expression:`$isNumber`

     - Returns boolean ``true`` if the specified expression resolves
       to an :bsontype:`integer <Int32>`, :bsontype:`decimal
       <Decimal128>`, :bsontype:`double <Double>`, or :bsontype:`long
       <Int64>`.  
       
       Returns boolean ``false`` if the expression resolves to any other
       :doc:`BSON type </reference/mongodb-extended-json>`, ``null``, or
       a missing field

   * - :expression:`$replaceOne`

     - Replaces the first instance of a matched string in a given input.

   * - :expression:`$replaceAll`

     - Replaces all instances of a matched string in a given input.

General Aggregation Improvements
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

``$indexStats``
```````````````

Starting in MongoDB 4.4 (also available starting in 4.2.4),
:pipeline:`$indexStats` includes the following fields in its output:

.. container::

   .. list-table::
      :header-rows: 1
      :widths: 35 65
   
      * - Field
        - Description

      * - :ref:`shard <indexStats-output-shard>`

        - Name of the shard, if applicable.

      * - :ref:`spec <indexStats-output-spec>`
        - Index specification document

      * - :ref:`building <indexStats-output-building>`
        - A boolean flag that indicates if the index is currently being built.


``$merge``
``````````

.. include:: /includes/fact-merge-same-collection-behavior.rst

.. include:: /includes/fact-merge-same-collection-warning.rst

.. _4.4-agg-planCachesStats-changes:

``$planCacheStats`` Changes
```````````````````````````

.. include:: /includes/extracts/4.4-changes-planCache-changes.rst
   
.. _4.4-background-validation:

Background Validation
---------------------

Support for Background Validation
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/extracts/4.4-validate-options.rst

.. |background| replace:: background

.. |foreground| replace:: foreground

For details, see the :dbcommand:`validate` command and the
:method:`db.collection.validate()` helper.

``maxValidateMBperSec`` Parameter
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 4.4 adds the :parameter:`maxValidateMBperSec` parameter to
limit the I/O and CPU usage when running background validation. See
:parameter:`maxValidateMBperSec` for details.

.. seealso:: :ref:`4.4-validate-method-signature`

.. _4.4-removed-commands:

Removed Commands
----------------

.. include:: /includes/extracts/4.4-changes-removed-commands.rst

.. _4.4-rel-notes-networking:

Networking
----------

.. _4.4-rel-notes-tcp-fast-open:

Support for TCP Fast Open
~~~~~~~~~~~~~~~~~~~~~~~~~

Starting with MongoDB 4.4, :binary:`~bin.mongod` and
:binary:`~bin.mongos` support TCP Fast Open (TFO) connections by
default. TFO requires both the client and the ``mongod/mongos``
host machines support and enable TFO:

Windows
  The following Windows operating systems support TFO:

  - Microsoft Windows Server 2016 or later.
  - Microsoft Windows 10 Update 1607 or later.

macOS
  macOS 10.11 (El Capitan) and later support TFO

Linux
  Linux operating systems running Linux Kernel 3.7 or later can
  support inbound TFO connections.

  Linux operating systems running Linux Kernel 4.11 or later can
  support both inbound and outbound TFO connections.

  Set the value of ``/proc/sys/net/ipv4/tcp_fastopen`` to enable 
  support for inbound and/or outbound TFO connections:

  - Set to ``1`` to enable only outbound TFO connections
  - Set to ``2`` to enable only inbound TFO connections
  - Set to ``3`` to enable inbound and outbound TFO connections.

MongoDB 4.4 adds the following parameters for controlling 
TFO:

.. list-table::
   :header-rows: 1
   :widths: 30 70

   * - Parameter
     - Description

   * - :parameter:`tcpFastOpenServer` 
     - *Default*: ``true`` (Enabled)
     
       Enables or disables support for inbound TFO connections to the
       ``mongod/mongos``

   * - :parameter:`tcpFastOpenClient`
     - *Default*: ``true`` (Enabled)

       *Linux Operating System Only* 
       
       Enables or disables support for outbound TFO connections
       from the ``mongod/mongos``.

   * - :parameter:`tcpFastOpenQueueSize`
     - *Default*: ``1024``

       Control the size of the queue of pending TFO connections.

MongoDB 4.4 adds the following counters to the output of 
:dbcommand:`serverStatus` and :method:`db.serverStatus()`:

.. list-table::
   :header-rows: 1
   :widths: 30 70

   * - Counter
     - Description

   * - :serverstatus:`network.tcpFastOpen.kernelSetting` 
     - *Linux only* 
     
       Indicates kernel support for TFO.

   * - :serverstatus:`network.tcpFastOpen.serverSupported` 
     - Indicates operating system support for incoming TFO connections.

   * - :serverstatus:`network.tcpFastOpen.clientSupported` 
     - Indicates operating system support for outgoing TFO connections.

   * - :serverstatus:`network.tcpFastOpen.accepted` 
     - Indicates the total number of accepted incoming TFO connections 
       to the :binary:`~bin.mongod`/:binary:`~bin.mongos` since the
       ``mongod/mongos`` last started.

A complete discussion of TFO is outside the scope of this documentation.
For more information on TFO, start with the following external 
resources:

- `RFC7413 TCP Fast Open <https://tools.ietf.org/html/rfc7413>`__
- `TCP Fast Open (en.wikipedia.org) <https://en.wikipedia.org/w/index.php?title=TCP_Fast_Open&oldid=922380898>`__

Security Improvements
---------------------

.. _4.4-rel-notes-certificate-expiration-warning:

x.509 Certificates Nearing Expiry Trigger Warnings
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 4.4, :binary:`~bin.mongod`/:binary:`~bin.mongos`
logs a warning on connection if the presented x.509 certificate
expires within ``30`` days of the ``mongod/mongos`` system clock.
Specifically, the following connections to a ``mongod`` or ``mongos`` 
can trigger x.509 certificate expiry warnings:

- A :binary:`~bin.mongo` shell or an application using a 
  :ecosystem:`MongoDB driver </drivers>` establishing a 
  :ref:`TLS connection <ssl-clients>` *or* performing 
  :ref:`x.509 client authentication <x509-client-authentication>` with
  a certificate expiring in less than 30 days. (i.e. 
  the certificate specified to :option:`mongo --tlsCertificateKeyFile 
  <mongo --tlsCertificateKeyFile>` or 
  :urioption:`tlsCertificateKeyFile`).

- A :binary:`~bin.mongod` cluster member performing 
  :ref:`x.509 membership authentication <x509-internal-authentication>`
  with a certificate expiring in less than 30 days. (i.e. the 
  certificate specified to 
  :setting:`net.tls.clusterFile`,
  :setting:`net.tls.clusterCertificateSelector`,
  :option:`mongod --tlsClusterFile <mongod --tlsClusterFile>` or
  :option:`mongod --tlsClusterCertificateSelector 
  <mongod --tlsClusterCertificateSelector>`).

- A :binary:`~bin.mongos` cluster member performing
  :ref:`x.509 membership authentication <x509-internal-authentication>`
  with a certificate expiring within 30 days. (i.e. the certificate 
  specified to
  (i.e. the 
  certificate specified to 
  :setting:`net.tls.clusterFile`,
  :setting:`net.tls.clusterCertificateSelector`,
  :option:`mongos --tlsClusterFile <mongos --tlsClusterFile>` or
  :option:`mongos --tlsClusterCertificateSelector`).

The warning log message resembles the following:

.. code-block:: text
   :copyable: false

   <Timestamp> W NETWORK [connection] Peer certificate <Certificate Subject Name> expires...

Consider proactively renewing client x.509 certificates nearing
expiration to ensure continued connectivity to the cluster.

MongoDB 4.4 adds the :parameter:`tlsX509ExpirationWarningThresholdDays`
parameter for controlling certificate expiration warning threshold. Set
the parameter to ``0`` to disable the warning. For complete
documentation, see :parameter:`tlsX509ExpirationWarningThresholdDays`.

Replica Sets
------------

Rollback Directory
~~~~~~~~~~~~~~~~~~

.. include:: /includes/extracts/4.4-changes-rollback-directory.rst

Sharded Clusters
----------------

Missing Shard Keys
~~~~~~~~~~~~~~~~~~

Starting in version 4.4, documents in a sharded collection can be
missing the shard key fields. In earlier versions, shard key fields
must exist in every document for a sharded collection.

For details, see :ref:`shard-key-missing`.

Hedged Reads
~~~~~~~~~~~~

To minimize latencies, :binary:`~bin.mongos` instances, by default, can
use :ref:`hedge reads <mongos-hedged-reads>`. With hedged reads, the
:binary:`~bin.mongos` instances can route read operations to multiple
members per each queried shard and return results from the first
respondent per shard. By default, :binary:`~bin.mongos` instances
support using hedged reads. To turn off a :binary:`~bin.mongos`
instance's support for hedged reads, set the
:parameter:`readHedgingMode` parameter for the :binary:`~bin.mongos`.

Hedged reads are specified per operation as part of the read
preference. Non-``primary`` :doc:`read preferences
</core/read-preference>` support hedged reads. Read preference
:readmode:`nearest` specifies hedged read by default.

For more information, see:

- :ref:`mongos-hedged-reads`

- :ref:`replica-set-read-preference-behavior-mongos`

Hedged Read Parameters
``````````````````````

.. list-table::
   :widths: 20 80
   :header-rows: 1

   * - Parameter
     - Description

   * - :parameter:`readHedgingMode`

     - Enables or disables :binary:`~bin.mongos` instance's support for
       hedged reads.

   * - :parameter:`maxTimeMSForHedgedReads`

     - Specifies the maximimum time limit (in milliseconds) for the
       additional read sent to :ref:`hedge a read operation
       <mongos-hedged-reads>`.

Hedged Read Metrics
```````````````````

The command :dbcommand:`serverStatus` and its corresponding
:binary:`~bin.mongo` shell method :method:`db.serverStatus()` return
:serverstatus:`hedgingMetrics`.

``balancerCollectionStatus`` Command
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 4.4 provides the command :dbcommand:`balancerCollectionStatus`
and the :binary:`~bin.mongo` shell helper method
:method:`sh.balancerCollectionStatus()` that return information about
whether the chunks of a sharded collection are balanced (i.e. do not
need to be moved) as of the time the command is run or need to be
moved. With the command, users can verify that initial chunk creation
and migration has finished.

Improved ``mongos`` Startup Procedure
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting with MongoDB 4.4, :binary:`~bin.mongos` adds the following new
default startup behavior:

- :binary:`~bin.mongos` will now preload a sharded cluster's routing
  table on startup, rather than doing so on-demand for the first
  incoming client connection.

- :binary:`~bin.mongos` will now prewarm its connection pool to shard
  hosts on startup, rather than doing so on-demand for incoming
  client connections.

This behavior results in faster servicing of initial client
connections after a :binary:`~bin.mongos` instance is started or
restarted. In particular, this allows sites that employ multiple
:binary:`~bin.mongos` instances to restart them as necessary, or add new
ones, without initial client requests to those instances needing to wait
on connection establishment.

Both routing table preloading and connection pool prewarming are enabled
by default.

MongoDB 4.4 adds the following parameters for controlling this behavior:

- :parameter:`loadRoutingTableOnStartup` 

  - *Default*: ``true`` (Enabled)
  - Enables or disables support for preloading the routing table on
    startup for the :binary:`~bin.mongos`.

- :parameter:`warmMinConnectionsInShardingTaskExecutorPoolOnStartup`

  - *Default*: ``true`` (Enabled) 
  - Enables or disables support for prewarming the connection pool on
    startup for the :binary:`~bin.mongos`.

- :parameter:`warmMinConnectionsInShardingTaskExecutorPoolOnStartupWaitMS`

  - *Default*: ``2000`` (2 seconds)
  - Sets the timeout in milliseconds before client connections
    to the :binary:`~bin.mongos` are allowed regardless of established
    connection pool size.

Platform Support
----------------

- MongoDB 4.4 removes support for:

  - Windows 7 / Server 2008 R2

  - Windows 8 / Server 2012

  - Windows 8.1 / Server 2012 R2
  
See :ref:`prod-notes-supported-platforms`.

Tools
-----

Migration to MongoDB Database Tools Project
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 4.4, the documentation for the following
tools have been migrated to the `MongoDB Database Tools project 
<https://docs.mongodb.com/database-tools>`__:

- :binary:`~bin.mongoimport`
- :binary:`~bin.mongoexport`
- :binary:`~bin.mongodump`
- :binary:`~bin.mongorestore`
- :binary:`~bin.mongotop`
- :binary:`~bin.mongostat`
- :binary:`~bin.bsondump`

The MongoDB Database Tools use Apache License, Version 2.0. See
`mongodb/mongo-tools <https://github.com/mongodb/mongo-tools/>`__ for
the source code.

.. note::

   For documentation on previous versions of the listed tools, reference
   that version of the MongoDB server manual.

   *Quick links to older documentation*
   
   - :v4.2:`MongoDB 4.2 Tools </reference/program/>`
   - :v4.0:`MongoDB 4.0 Tools </reference/program/>`
   - :v3.6:`MongoDB 3.6 Tools </reference/program/>`

``mongoreplay`` Removed from MongoDB Packaging
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 4.4, ``mongoreplay`` is removed from MongoDB
packaging. ``mongoreplay`` and its related documentation are migrated to
the `mongodb-labs <https://github.com/mongodb-labs/mongoreplay>`__
github project. Projects in ``mongodb-labs`` are experimental and not
officially supported by MongoDB.

*Quick links to older documentation*

- :v4.2:`mongoreplay 4.2 </reference/program/mongoreplay>`
- :v4.0:`mongoreplay 4.0 </reference/program/mongoreplay>`
- :v3.6:`mongoreplay 3.6 </reference/program/mongoreplay>`


General Improvements
--------------------

.. _4.4-rel-notes-sort-memory-limit:

Blocking Sort Limit Increased
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If MongoDB cannot use an index or indexes to obtain the sort order for a
given :method:`cursor.sort()` operation, MongoDB must perform a blocking
sort on the data. A blocking sort indicates that MongoDB must consume
and process all input documents to the sort before returning results.
Blocking sorts do not block concurrent operations on the
collection or database.

Prior to MongoDB 4.4, MongoDB returned an error if a blocking sort
operations required more than 32 megabytes of system memory. Starting in
MongoDB 4.4, blocking sort operations increase the limit on system
memory to use for the sort operation to 100 megabytes. For blocking sort
operations which require more than 100 megabytes of system memory,
MongoDB returns an error *unless* the query specifies
:method:`cursor.allowDiskUse()` (*New in MongoDB 4.4*).

For more information on sorting and index use, see
:ref:`sort-index-use`.

.. seealso:: 

   | :method:`cursor.allowDiskUse()`
   | :limit:`Memory Limits on Sort Operations <Sort Operations>`

``allowDiskUse()`` Support for Queries with Large In-Memory Sorts
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If MongoDB cannot use an index or indexes to obtain the sort order,
MongoDB must perform a blocking sort operation on the data. A blocking
sort indicates that MongoDB must consume and process all input documents
to the sort before returning results. Blocking sorts do not block
concurrent operations on the collection or database.

.. versionadded:: 4.4

If MongoDB requires using more than 100 megabytes of system memory for
the blocking sort operation, MongoDB returns an error *unless* the query
specifies :method:`cursor.allowDiskUse()` (*New in MongoDB 4.4*).
:method:`~cursor.allowDiskUse()` allows MongoDB to use temporary files
on disk to store data exceeding the 100 megabyte system memory limit
while processing a blocking sort operation.
:method:`cursor.allowDiskUse()` has no effect on sort operations
resolved using an index *or* blocking sort operations which require less
than 100 megabytes of system memory.

If using the :dbcommand:`find` database command, specify the optional
parameter ``allowDiskUse: true`` to allow MongoDB to use temporary files
on disk to store data exceeding the 100 megabyte system memory limit
while processing a blocking sort operation

For instructions on enabling :method:`~cursor.allowDiskUse` for queries
issued through a MongoDB driver, defer to the documentation for your
preferred :ecosystem:`MongoDB 4.4-compatible driver </drivers>`. 

.. seealso:: 

   | :limit:`Memory Limits On Sort Operations <Sort Operations>`
   | :ref:`sort-index-use`

Collection Namespace Limit
~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 4.4,

.. include:: /includes/fact-collection-namespace-limit.rst

``serverStatus`` Output Change
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

:dbcommand:`serverStatus` returns
:serverstatus:`flowControl.locksPerKiloOp` instead of
:serverstatus:`flowControl.locksPerOp`.

:dbcommand:`serverStatus` returns the following new fields
in its :serverstatus:`network` object:

- :serverstatus:`network.numSlowDNSOperations`

- :serverstatus:`network.numSlowSSLOperations`

:dbcommand:`serverStatus` returns the following new fields
in its :serverstatus:`metrics.repl` metrics:

- :serverstatus:`metrics.repl.network.replSetUpdatePosition.num`

- :serverstatus:`metrics.repl.syncSource.numSelections`

- :serverstatus:`metrics.repl.syncSource.numTimesChoseSame`

- :serverstatus:`metrics.repl.syncSource.numTimesChoseDifferent`

- :serverstatus:`metrics.repl.syncSource.numTimesCouldNotFind`

``replSetGetStatus`` Output Change
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

:dbcommand:`replSetGetStatus` returns the following new fields:

- :data:`~replSetGetStatus.votingMembersCount`

- :data:`~replSetGetStatus.writableVotingMembersCount`

- :data:`initialSyncStatus.syncSourceUnreachableSince <replSetGetStatus.initialSyncStatus.syncSourceUnreachableSince>`

- :data:`initialSyncStatus.currentOutageDurationMillis <replSetGetStatus.initialSyncStatus.currentOutageDurationMillis>`

- :data:`initialSyncStatus.totalTimeUnreachableMillis <replSetGetStatus.initialSyncStatus.totalTimeUnreachableMillis>`

- :data:`initialSyncAttempts.rollBackId <replSetGetStatus.initialSyncStatus.initialSyncAttempts>`

- :data:`initialSyncAttempts.operationsRetried <replSetGetStatus.initialSyncStatus.initialSyncAttempts>`

- :data:`initialSyncAttempts.totalTimeUnreachableMillis <replSetGetStatus.initialSyncStatus.initialSyncAttempts>`

.. _4.4-rel-notes-db-auth-passwordPrompt:

db.auth() Can Prompt for Password
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 4.4, the :binary:`~bin.mongo` shell method
:ref:`db-auth-syntax-username-password` prompts for the password if
you do not pass in the password or the :method:`passwordPrompt()`
method for the ``<password>``.

Support for ``$natural`` Sort on Views
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/extracts/4.4-changes-natural-sort-views.rst

Validation Changes for ``$meta``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/extracts/4.4-changes-projection-sort-meta.rst

Support for Diagnostic Backtrace Generation
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 4.4, :binary:`~bin.mongod` and :binary:`~bin.mongos`
processes running on Linux will now log a backtrace for each of their
running threads upon receipt of a ``SIGUSR2`` signal. This backtrace can
be analyzed for diagnostic information or provided to MongoDB support as
needed. This functionality is currently available only on the ``x86_64``
architecture. For more information on using this feature, see
:ref:`sigusr2-diagnostic-backtrace`.

Updated ``ulimit`` Startup Warning
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 4.4, :binary:`~bin.mongod` will log a startup
warning if a platform's configured ``ulimit`` value for number of open
files is under ``64000``. Previously, a warning would only be
logged if this value was under ``1000``. See
:ref:`recommended-ulimit-settings` for more information.

``dbStats`` and ``collStats`` Output
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The :dbcommand:`dbStats` command and its :binary:`~bin.mongo` shell
helper :method:`db.stats()` return:

- :data:`~dbStats.totalSize`, which is the sum of
  :data:`~dbStats.storageSize` and :data:`~dbStats.indexSize`.

The :dbcommand:`collStats` command, its :binary:`~bin.mongo` shell
helper :method:`db.collection.stats()`, and the :pipeline:`$collStats`
aggregation stage return:

- :data:`~collStats.totalSize`, which is the sum of
  :data:`~collStats.storageSize` and :data:`~collStats.totalIndexSize`.

- :data:`~collStats.freeStorageSize`, which is the amount of storage
  available for reuse.

``dropIndexes`` Can Abort In-Progress Index Builds
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If an index specified to :dbcommand:`dropIndexes` is still building,
:dbcommand:`dropIndexes` attempts to abort the in-progress build.
Aborting an index build has the same effect as dropping the built index.
Prior to MongoDB 4.4, :dbcommand:`dropIndexes` would return an error if
the collection had any in-progress index builds. This behavior also
applies to the shell helpers :method:`db.collection.dropIndex()` and
:method:`db.collection.dropIndexes()`.

- The indexes specified to :dbcommand:`dropIndexes` /
  :method:`~db.collection.dropIndexes()` must be the entire set of
  in-progress builds associated to a given index builder, i.e. the
  indexes built by a single :dbcommand:`createIndexes` or
  :method:`db.collection.createIndexes()` operation.

- The index specified to :method:`~db.collection.dropIndex()` must be
  the only index associated to the index builder, i.e. the indexes built
  by a single :dbcommand:`createIndexes` or
  :method:`db.collection.createIndexes()` operation.

To drop a specific index out of a set of related in-progress builds,
wait until the index builds complete and specify that index to
:dbcommand:`dropIndexes` or its shell helpers.

For more complete documentation, see:

- :ref:`dropIndexes-cmd-index-builds` for the :dbcommand:`dropIndexes` command.
- :ref:`dropIndexes-method-index-builds` for the :method:`~db.collection.dropIndexes()` method.
- :ref:`dropIndex-method-index-builds` for the :method:`~db.collection.dropIndex()` method.

``drop()`` Can Abort In-Progress Index Builds
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/extracts/4.4-changes-drop-in-progress-indexes.rst

.. seealso:: :ref:`index-operations`.

:doc:`Changes Affecting Compatibility </release-notes/4.4-compatibility>`
-------------------------------------------------------------------------

Some changes can affect compatibility and may require user actions. For
a detailed list of compatibility changes, see
:doc:`/release-notes/4.4-compatibility`.

.. _4.4-upgrade:

Upgrade Procedures
------------------

.. admonition:: Feature Compatibility Version

   To upgrade from 4.2 deployment, the 4.2 deployment must have
   ``featureCompatibilityVersion`` set to ``4.2``. To check the version:

   .. code-block:: javascript

      db.adminCommand( { getParameter: 1, featureCompatibilityVersion: 1 } )

   For specific details on verifying and setting the
   ``featureCompatibilityVersion`` as well as information on other
   prerequisites/considerations for upgrades, refer to the individual
   upgrade instructions:

   - :doc:`/release-notes/4.4-upgrade-standalone`

   - :doc:`/release-notes/4.4-upgrade-replica-set`

   - :doc:`/release-notes/4.4-upgrade-sharded-cluster`

If you need guidance on upgrading to 4.4, `MongoDB offers major version
upgrade services
<https://www.mongodb.com/products/consulting?tck=docs_server>`_
to help ensure a smooth transition without interruption to your MongoDB application.

Report an Issue
---------------

To report an issue, see
https://github.com/mongodb/mongo/wiki/Submit-Bug-Reports for
instructions on how to file a JIRA ticket for the MongoDB server or one
of the related projects.

.. class:: hidden

   .. toctree::

      /release-notes/4.4-compatibility
      /release-notes/4.4-upgrade-standalone
      /release-notes/4.4-upgrade-replica-set
      /release-notes/4.4-upgrade-sharded-cluster
      /release-notes/4.4-downgrade
