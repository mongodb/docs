=====
$near
=====

.. default-domain:: mongodb

.. operator:: $near

   .. versionchanged:: 2.4

   Specifies a point for which a :term:`geospatial` query returns the
   closest documents first. The query sorts the documents from nearest
   to farthest.

   The :operator:`$near` operator can query for a :term:`GeoJSON`
   point or for a point defined by legacy coordinate pairs.

   The optional :operator:`$maxDistance` operator limits a
   :operator:`$near` query to return only those documents that fall
   within a maximum distance of a point. If you query for a GeoJSON
   point, specify :operator:`$maxDistance` in meters. If you query for
   legacy coordinate pairs, specify :operator:`$maxDistance` in radians.

   The :operator:`$near` operator requires a geospatial index: a
   ``2dsphere`` index for GeoJSON points; a ``2d`` index for legacy
   coordinate pairs. Queries that use a ``2d`` index return a limit of
   100 documents.

   .. TODO remove the following "include" statement in 2.6

   .. include:: /includes/note-special-indexes-and-near.rst

   For queries on GeoJSON data, use the following syntax:

   .. code-block:: javascript

      db.<collection>.find( { <location field> :
                               { $near :
                                  { $geometry :
                                      { type : "Point" ,
                                        coordinates : [ <longitude> , <latitude> ] } },
                                    $maxDistance : <distance in meters>
                            } } )

   .. important:: Specify coordinates in this order: **"longitude, latitude."**

   The following example selects the documents with coordinates
   nearest to ``[ 40 , 5 ]`` and limits the maximum distance to 500
   meters from the specified GeoJSON point:

   .. code-block:: javascript

      db.places.find( { loc : { $near :
                                 { $geometry :
                                     { type : "Point" ,
                                       coordinates: [ 40 , 5 ] } },
                                   $maxDistance : 500
                      } } )

   For queries on legacy coordinate pairs, use the following syntax:

   .. code-block:: javascript

      db.<collection>.find( { <location field> :
                               { $near : [ <x> , <y> ] ,
                                 $maxDistance: <distance>
                          } } )

   .. important:: If you use longitude and latitude, specify **longitude first**.

   The following example selects the 100 documents with coordinates
   nearest to ``[ 40 , 5 ]``:

   .. code-block:: javascript

      db.places.find( { loc :
                         { $near : [ 40 , 5 ] ,
                           $maxDistance : 10
                      } } )

   .. note::

      You can further limit the number of results using
      :method:`cursor.limit()`.

      Specifying a batch size (i.e. :method:`batchSize()
      <cursor.batchSize()>`) in conjunction with queries that use the
      :operator:`$near` is not defined. See :issue:`SERVER-5236` for
      more information.
