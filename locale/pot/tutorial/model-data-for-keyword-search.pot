# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/model-data-for-keyword-search.txt:3
# f4ca4fbf018647eb8cd9052ea233df46
msgid "Model Data to Support Keyword Search"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:9
# c67d4d903d96458a8529ec4eb2462065
msgid "Keyword search is *not* the same as text search or full text search, and does not provide stemming or other text-processing features. See the :ref:`limit-keyword-indexes` section for more information."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:14
# 62a764ad2d6f479aa9ed4d00549045aa
msgid "In 2.4, MongoDB provides a text search feature. See :doc:`/core/index-text` for more information."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:17
# 10c039b5fa884b6ebe00b775cd1c08eb
msgid "If your application needs to perform queries on the content of a field that holds text you can perform exact matches on the text or use :query:`$regex` to use regular expression pattern matches. However, for many operations on text, these methods do not satisfy application requirements."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:23
# 4b9e56b902f84661911b993dae3737ba
msgid "This pattern describes one method for supporting keyword search using MongoDB to support application search functionality, that uses keywords stored in an array in the same document as the text field. Combined with a :ref:`multi-key index <index-type-multikey>`, this pattern can support application's keyword search operations."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:30
# 3f80ddc791ca48588a1b901fad05f19c
msgid "Pattern"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:32
# 0974db5a93764981bfd71e3cdd2d82ae
msgid "To add structures to your document to support keyword-based queries, create an array field in your documents and add the keywords as strings in the array. You can then create a :ref:`multi-key index <index-type-multi-key>` on the array and create queries that select values from the array."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:0
# 534cab82af43473d8981bfd1744503c0
msgid "Example"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:40
# 228ea7f3faab454292cc701a81dafca7
msgid "Given a collection of library volumes that you want to provide topic-based search. For each volume, you add the array ``topics``, and you add as many keywords as needed for a given volume."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:44
# cf3e24e0094643d8bad9b95b687c6a8c
msgid "For the ``Moby-Dick`` volume you might have the following document:"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:56
# ce1dc4eb6df14591968851389ad5dcb1
msgid "You then create a multi-key index on the ``topics`` array:"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:62
# f575c040a8c547bfae7be844d647a84a
msgid "The multi-key index creates separate index entries for each keyword in the ``topics`` array. For example the index contains one entry for ``whaling`` and another for ``allegory``."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:66
# e9ec1df01a524e8982e6860e505828f1
msgid "You then query based on the keywords. For example:"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:72
# 8ef8f54f395141619e8dfa79440d3e69
msgid "An array with a large number of elements, such as one with several hundreds or thousands of keywords will incur greater indexing costs on insertion."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:79
# acfaabf90e574a94a524fae420145065
msgid "Limitations of Keyword Indexes"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:81
# 9344fe1f1bda4948bc685ea7709cf429
msgid "MongoDB can support keyword searches using specific data models and :ref:`multi-key indexes <index-type-multikey>`; however, these keyword indexes are not sufficient or comparable to full-text products in the following respects:"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:86
# 31657754c6c0429188bcfa06b9bb8dd8
msgid "*Stemming*. Keyword queries in MongoDB can not parse keywords for root or related words."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:89
# d3cac2943a314ad78bdd66f5611ea318
msgid "*Synonyms*. Keyword-based search features must provide support for synonym or related queries in the application layer."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:92
# f33a240a271941699ee4322bed2e0ee8
msgid "*Ranking*. The keyword look ups described in this document do not provide a way to weight results."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:95
# dedc49c8dcf54b109292a4cf1820d364
msgid "*Asynchronous Indexing*. MongoDB builds indexes synchronously, which means that the indexes used for keyword indexes are always current and can operate in real-time. However, asynchronous bulk indexes may be more efficient for some kinds of content and workloads."
msgstr ""

