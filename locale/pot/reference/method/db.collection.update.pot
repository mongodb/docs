# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/db.collection.update.txt:3
# 24b78e70a87646e0a2868ea9e422acf2
msgid "db.collection.update()"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:8
# b191d9ae17294367a360ce4314a2e4c4
msgid "Definition"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:12
# b0dc0268e76f410aa577e72bcc64cb6b
msgid "Modifies an existing document or documents in a collection. The method can modify specific fields of an existing document or documents or replace an existing document entirely, depending on the :ref:`update parameter <update-parameter>`."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:17
# 5c5e4a034f974e9b9d33fbc98a061fee
msgid "By default, the :method:`~db.collection.update()` method updates a **single** document. Set the :ref:`multi-parameter` to update all documents that match the query criteria."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:21
# 20a0800c361248c9953951c886df370e
msgid "The :method:`~db.collection.update()` method has the following form:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:37
# 6b8c9656308d4b0b840fd9632fa92ae8
msgid "The :method:`~db.collection.update()` method takes the following parameters:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:42
# 5e57a5489c5a4f019f976f18b2770d34
msgid "The :method:`~db.collection.update()` method returns an object that contains the status of the operation."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:46
# 4642727e7cd245c196ea7e1486f44b2f
msgid "A :ref:`writeresults-update` object that contains the status of the operation."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:50
# 23bb49643c4d4ac6b9351edb08a6b96a
msgid "Behavior"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:55
# 51da21ff5b2748f68f2bbeb1c9c6f92a
msgid "Safe Writes"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:59
# 20a8b8de06554b9897ba81fbbf359df5
msgid "The :method:`~db.collection.update()` method uses the :dbcommand:`update` command, which uses the default write concern. To specify a different write concern, include the ``writeConcern`` option in the options parameter. See :ref:`example-update-write-concern` for an example."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:68
# ce994f006054445e92bb45fef63062e6
msgid "Update Parameter"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:70
# d8903f0aebbc44828546e39ab6cad97b
msgid "The :method:`~db.collection.update()` method either modifies specific fields in existing documents or replaces an existing document entirely."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:74
#: ../source/reference/method/db.collection.update.txt:220
# c7e0457ef28241459d487742e0e628c5
# ae0dee7e743346e78afb1ccbbac75482
msgid "Update Specific Fields"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:76
# 09ed2a99d42447b78760ecb2af069f24
msgid "If the ``<update>`` document contains :ref:`update operator <update-operators>` modifiers, such as those using the :update:`$set` modifier, then:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:80
# 2e6a16098d89457e8be93ad0ea229a8e
msgid "The ``<update>`` document must contain *only* :ref:`update operator <update-operators>` expressions."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:83
# 028e480c983b434e829a31ecc9d3f4a2
msgid "The :method:`~db.collection.update()` method updates only the corresponding fields in the document."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:86
# 38a9eb1f50f0427e955a4cc32e61c738
msgid "To update an embedded document or an array as a whole, specify the replacement value for the field. To update particular fields in an embedded document or in an array, use :ref:`dot notation <document-dot-notation>` to specify the field."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:92
# 53cd7ed8adbe4d2a87eb4db669f48448
msgid "Replace a Document Entirely"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:94
# 3d6bfbe69c41464b988cf506d070073b
msgid "If the ``<update>`` document contains *only* ``field:value`` expressions, then:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:97
# f6892d431d5f42049573a48d5a3a514b
msgid "The :method:`~db.collection.update()` method *replaces* the matching document with the ``<update>`` document. The :method:`~db.collection.update()` method *does not* replace the ``_id`` value. For an example, see :ref:`example-update-replace-fields`."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:103
# a6097189fd464830ae9fde721b42f87a
msgid ":method:`~db.collection.update()` *cannot* :ref:`update multiple documents <multi-parameter>`."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:109
# d8664dce2c434165858b71461bf1d5fc
msgid "Upsert Option"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:112
# 47498b48f59242299a5436635d7b96f3
msgid "Upsert Behavior"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:114
# 11ff38f3d4b04672b39aab9c1bc7d9a3
msgid "If ``upsert`` is ``true`` and no document matches the query criteria, :method:`~db.collection.update()` inserts a *single* document. The update creates the new document with either:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:118
# 005d02dd017549d684a5e9a22db0fa5f
msgid "The fields and values of the ``<update>`` parameter if the ``<update>`` parameter contains only field and value pairs, or"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:121
# 7fe5afaa68f9477cba932acf23fc47e9
msgid "The fields and values of both the ``<query>`` and ``<update>`` parameters if the ``<update>`` parameter contains :ref:`update operator <update-operators>` expressions. The update creates a base document from the equality clauses in the ``<query>`` parameter, and then applies the update expressions from the ``<update>`` parameter."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:127
# 19e2ee610612413db481a68483f325c2
msgid "If ``upsert`` is ``true`` and there are documents that match the query criteria, :method:`~db.collection.update()` performs an update."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:130
# a3049c4375c8465d9ed4aea6951dbae6
msgid ":update:`$setOnInsert`"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:135
# b2ad1b83a23a4bc082aa93d0021114a4
msgid "Use Unique Indexes"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:137
# 99b8cd9b6b8748658276b5b43439db6a
msgid "To avoid inserting the same document more than once, only use ``upsert: true`` if the ``query`` field is uniquely indexed."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:141
# 89288782264c4be494c1a149f618d496
msgid "Given a collection named ``people`` where no documents have a ``name`` field that holds the value ``Andy``. Consider when multiple clients issue the following *update* with ``upsert: true`` at the same time:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:158
# 9fa3f72670314136866825ad89f8977b
msgid "If all :method:`~db.collection.update()` operations complete the ``query`` portion before any client successfully inserts data, **and** there is no unique index on the ``name`` field, then each update operation may result in an insert."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:163
# 3605a2a2e666418ba319ee0cbf1f3290
msgid "To prevent MongoDB from inserting the same document more than once, create a :ref:`unique index <index-type-unique>` on the ``name`` field. With a unique index, if multiple applications issue the same update with ``upsert: true``, *exactly one* :method:`~db.collection.update()` would successfully insert a new document."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:170
# 9621a7a1c68c49a9a9311a4a471ace87
msgid "The remaining operations would either:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:172
# 5907fed2c9124411a9a7af14e32d03b3
msgid "update the newly inserted document, or"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:174
# ec7f0cc26c214393bd291d88ae9b61cd
msgid "fail when they attempted to insert a duplicate."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:176
# 4259e5e3f93d49f6a0a23742411d6750
msgid "If the operation fails because of a duplicate index key error, applications may retry the operation which will succeed as an update operation."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:183
# c75f9950a27c4ec79325edc7ac23310c
msgid "Multi Parameter"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:185
# 273e8897af8245faba6c504c8cb7c380
msgid "If ``multi`` is set to ``true``, the :method:`~db.collection.update()` method updates all documents that meet the ``<query>`` criteria. The ``multi`` update operation may interleave with other operations, both read and/or write operations. For unsharded collections, you can override this behavior with the :update:`$isolated` operator, which isolates the update operation and disallows yielding during the operation. This isolates the update so that no client can see the updated documents until they are all processed, or an error stops the update operation."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:195
# c1a2847e177e4f7f8d57b149fac75e32
msgid "If the :ref:`\\<update\\> <update-parameter>` document contains *only* ``field:value`` expressions, then :method:`~db.collection.update()` *cannot* update multiple documents."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:199
# 4ea3914957df4d6285e146f296e9e765
msgid "For an example, see :ref:`example-update-multi`."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:202
# 9daf0c3db46c4406b0591f2525b4ff25
msgid "Sharded Collections"
msgstr ""

#: ../source/includes/fact-single-modification-in-sharded-collections.rst:1
# 41f47b5a1661417d831e1686f397dbc0
msgid "All |single-modification-operation-names| operations for a sharded collection that specify the |single-modification-operation-option| option must include the :term:`shard key` *or* the ``_id`` field in the query specification. |single-modification-operation-names| operations specifying |single-modification-operation-option| in a sharded collection without the :term:`shard key` *or* the ``_id`` field return an error."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:210
# c9cc223df46e4cef83e11d27ffc561b9
msgid ":method:`~db.collection.findAndModify()`"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:215
# c2ca4f02e4c94c1690d44df15c68a3d8
msgid "Examples"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:222
# 7d4c5cb3f167402682b9ac0b925a988f
msgid "To update specific fields in a document, use :ref:`update operators <update-operators>` in the ``<update>`` parameter."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:225
# d07ff64078e444719d128e04db562d4c
msgid "For example, given a ``books`` collection with the following document:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:239
# 03d990d0220a488c98238a1a556d512e
msgid "The following operation uses:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:241
# d0e242aaef114fe784d8817b978edc85
msgid "the :update:`$inc` operator to increment the ``stock`` field; and"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:243
# d120d78a7f414e26864a588788fc4bdd
msgid "the :update:`$set` operator to replace the value of the ``item`` field, the ``publisher`` field in the ``info`` embedded document, the ``tags`` field, and the second element in the ``ratings`` array."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:262
# 853cc13887e94ff7a344e5b645869621
msgid "The updated document is the following:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:276
# 1149ea62c07649b08c786246df19c272
msgid ":update:`$set`, :update:`$inc`, :doc:`/reference/operator/update`, :ref:`dot notation <document-dot-notation>`"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:281
# 5baacf905950421cb7663cfaeb0b1db1
msgid "Remove Fields"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:283
# 11d42873c3004162aa1803c8ad18520b
msgid "The following operation uses the :update:`$unset` operator to remove the ``tags`` field:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:290
# 3804a3d95cd446099d4b6b54fb7be924
msgid ":update:`$unset`, :update:`$rename`, :doc:`/reference/operator/update`"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:295
# 85b9e21686c84f8eb11b99580fcdb046
msgid "Replace All Fields"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:297
# ee1fd976c9d84a168995331b2cd3cb17
msgid "Given the following document in the ``books`` collection:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:311
# a298d8e7835347f7b8fb0cf5da96512d
msgid "The following operation passes an ``<update>`` document that contains only field and value pairs. The ``<update>`` document completely replaces the original document except for the ``_id`` field."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:327
# d8d1b668092a4d4ea60607a3150293f3
msgid "The updated document contains *only* the fields from the replacement document and the ``_id`` field. That is, the fields ``ratings`` and ``reorder`` no longer exist in the updated document since the fields were not in the replacement document."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:345
# a49c3f426c794b458c4fd8aec9b8fb1a
msgid "Insert a New Document if No Match Exists"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:348
# 8bc205be1fb348fb9490e0f680d67bf5
msgid "The following update sets the :ref:`upsert <upsert-parameter>` option to ``true`` so that :method:`~db.collection.update()` creates a new document in the ``books`` collection if no document matches the ``<query>`` parameter:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:365
# 90390ef6666c4ea98b9692f1732d6ad5
msgid "If no document matches the ``<query>`` parameter, the update operation inserts a document with *only* the fields and values of the ``<update>`` document and a new unique ``ObjectId`` for the ``_id`` field:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:379
#: ../source/reference/method/db.collection.update.txt:497
# 7df524cb2b5844d0b51b46bfcb474f8c
# 91f58e809e3b4b318bfbc88a6c116db8
msgid "For more information on ``upsert`` option and the inserted document, :ref:`upsert-parameter`."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:385
# 8abebe7950ea4620be031dcd48f80440
msgid "Update Multiple Documents"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:387
# 548ca262a5d24e4aacc115e872d630c2
msgid "To update multiple documents, set the ``multi`` option to ``true``. For example, the following operation updates all documents where ``stock`` is less than or equal to ``10``:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:399
# 6b11d79f74b64e3c99ad37a54caf2be0
msgid "If the ``reorder`` field does not exist in the matching document(s), the :update:`$set` operator will add the field with the specified value. See :update:`$set` for more information."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:406
# 28d981654f3d41fd81c40557ffc6ed6e
msgid "Override Default Write Concern"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:408
# cdba50591f9e48efb79f6882e017a35e
msgid "The following operation on a replica set specifies a :doc:`write concern </reference/write-concern>` of ``\"w: majority\"`` with a ``wtimeout`` of 5000 milliseconds such that the method returns after the write propagates to a majority of the voting replica set members or the method times out after 5 seconds."
msgstr ""

#: ../source/includes/fact-majority-write-concern-change.rst:1
# 0d8c9dc7cb314b3eb6cbb8f50baa6dbb
msgid "In previous versions, ``majority`` referred to the majority of all members of the replica set."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:428
# 4504097482ef4cf7a67b8d90840bf08d
msgid "Combine the ``upsert`` and ``multi`` Options"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:430
# 11414b8794b149319545ab532d426265
msgid "Given a ``books`` collection that includes the following documents:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:449
# 7d1e4af8a6784993a345085d366994df
msgid "The following operation specifies both the ``multi`` option and the ``upsert`` option. If matching documents exist, the operation updates all matching documents. If no matching documents exist, the operation inserts a new document."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:462
# 7388080e6e52444d8be30b971239bc61
msgid "The operation updates all matching documents and results in the following:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:484
# 23b11199e6b04ab6844599b8645eed4c
msgid "If the collection had *no* matching document, the operation would result in the insertion of a document using the fields from both the ``<query>`` and the ``<update>`` specifications:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:503
# c621d2154166477c8716aed734602582
msgid "WriteResult"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:508
# 87f4e2a23a204684b03f5c83ac374ddb
msgid "Successful Results"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:510
# 7daf55826a0940c38fa86a7c5ee8394c
msgid "The :method:`~db.collection.update()` method returns a :method:`WriteResult` object that contains the status of the operation. Upon success, the :method:`WriteResult` object contains the number of documents that matched the query condition, the number of documents inserted by the update, and the number of documents modified:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:0
# 74a96940ca2e4e69abac5ccd0bcde027
msgid "See"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:524
# b0eb01cdb83a4d5197457eb21c1db307
msgid "Write Concern Errors"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:526
# bd8b4b5dce4f49eea36b8285d606e850
msgid "If the :method:`~db.collection.update()` method encounters write concern errors, the results include the :data:`WriteResult.writeConcernError` field:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:542
# 7b974b8f63234bfea9a54aae666bc156
msgid ":method:`WriteResult.hasWriteConcernError()`"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:545
# 86fd5ad5f9134be283a8b7086d46fcf6
msgid "Errors Unrelated to Write Concern"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:547
# bed0ec1f01a0410fa9b243481671b4c7
msgid "If the :method:`~db.collection.update()` method encounters a non-write concern error, the results include the :data:`WriteResult.writeError` field:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:563
# a9138fe2301f428fbea9df19ced31d08
msgid ":method:`WriteResult.hasWriteError()`"
msgstr ""

