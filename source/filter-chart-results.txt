.. _charts-filter-documents:

====================
Filter Chart Results
====================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Filters display a subset of results that match a given criteria.
|charts| provides two ways to filter the data for a single chart. You can either use:

- The :ref:`Filter Tab's <filter-tab>` numeric, string, date, or boolean fields to handle most of your data 
  filtering needs.

- The :ref:`Query Bar <query-bar>` to filter your data using more complex queries, such as logical operator 
  queries, or process raw data by using the aggregation pipeline. 

To learn how to filter results across multiple charts on your dashboard, see
:ref:`<dashboard-filtering>`.

.. _filter-tab:

Create Filters for Your Data
----------------------------

The chart builder contains a filter tab where you can drag and drop
fields to specify filters for your data. To filter data using the filter tab:


1. Click the center tab in the chart builder:

   .. figure:: /images/charts/filter-tab.png
      :figwidth: 300px
      :alt: Image showing how to access filter tab

   |

#. Drag a field from the :guilabel:`Fields` on the left to the
   :guilabel:`Chart Filters` section of the tab.

The data type of the selected field determines the available filtering
options. You can filter fields with the following data types:


.. tabs::

   .. tab:: Filter Numeric Fields
      :tabid: numeric-fields

      When you drag a numeric field to the filter panel, you
      can filter based on minimum and/or maximum values for that field.

      .. list-table::
         :header-rows: 1

         * - To specify a minimum value:
           - To specify a maximum value:

         * - 1. Toggle :guilabel:`Min` to :guilabel:`On`.

             #. Specify the desired minimum value.
             
             #. Select whether this is an inclusive minimum value.

           - 1. Toggle :guilabel:`Max` to :guilabel:`On`.

             #. Specify the desired maximum value.
             
             #. Select whether this is an inclusive maximum value.

      .. example::

         If you have a minimum value of ``5`` with the :guilabel:`Inclusive`
         setting on, |charts| shows documents where the field is greater than
         or equal to ``5``.

         Alternatively, if :guilabel:`Inclusive` is off, |charts| shows
         documents where the field is greater than ``5``.

   .. tab:: Filter String and ObjectId Fields
      :tabid: string-objectid

      When you drag a string or
      :manual:`ObjectId </reference/bson-types/#objectid>` field to the filter
      panel, |charts| displays a list of up to 20 distinct field values. If
      more than 20 distinct values exist, |charts| displays 20 randomly
      selected values.

      The list also includes:

      - :guilabel:`NULL / MISSING` for documents with ``null`` values for
        the field or are missing the field.

      - :guilabel:`Empty String` for documents with
        ``""`` values for the string field. (*String fields only.*)

      Select the values to display in the chart. By default, all
      values are selected.

      .. tip::

         If all values are selected, you can click :guilabel:`Deselect All` 
         at the top of the list to hide all values.
         
         If not all values are selected, you can click :guilabel:`Select All`
         to return to the default state of having all values displayed.

      Display Strings and ObjectIds Not in the List
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      To display a specific value not included in the list, add the value by
      clicking :guilabel:`Add Value`.

      .. important::

         For :manual:`ObjectId </reference/bson-types/#objectid>` fields, the 
         value you input must be a well-formed ObjectId, or else
         |charts| does not accept the value.

      To display *all* other values not included in the list, check
      :guilabel:`All other values`.

      - If :guilabel:`All other values` is checked, |charts| filters out
        any unchecked list items by using a :query:`$nin` query.
        
      - If :guilabel:`All other values` is unchecked, |charts| only
        includes the checked list items by using an :query:`$in` query.

   .. tab:: Filter Date Fields
      :tabid: date-fields

      When you drag a date field to the filter panel, you can filter based
      on a specified date range. This range can either be:

      - A relative date range, which specifies a range
        relative to the time the chart is rendered (e.g., the last six
        months).

      - A date range based on the current time when the chart is rendered,
        with a choice of periods.

      - An absolute date range, which is a range
        between specific begin and end dates.

      Select the appropriate tab for more information on the date filter:

      .. tabs::

         .. tab:: Relative
            :tabid: relative-date

            Relative date filters specify a range relative to the 
            time the chart is rendered. To define the date range, specify a period
            of time in the past and/or a period of time in the future relative to
            the current date. :guilabel:`Relative` is the default date filtering
            option.

            .. list-table::
               :header-rows: 1

               * - To set a lower bound for the date filter:
                 - To set an upper bound for the date filter:

               * - 1. Turn on the :guilabel:`From` toggle.

                   #. Set the lower bound for your relative date. This
                      timespan is relative to the current date.

                 - 1. Turn on the :guilabel:`Until` toggle.

                   #. Set the upper bound for your relative date. This
                      timespan is relative to the current date.

            .. example::

               The following relative date filter only shows documents
               with a ``Workout Date (As Date)`` field that is more recent than one year
               ago from the current date:

               .. figure:: /images/charts/relative-date.png
                  :scale: 70%
                  :alt: Image showing relative date filter

         .. tab:: Period
            :tabid: period-date

            Period date filters specify a range relative to the current
            time when the chart renders. To define a period date range,
            select :guilabel:`Period` at the top of your date filter card.

            Period options include:
        
            - :guilabel:`Hour` from the top of the hour
            - :guilabel:`Day` from midnight
            - :guilabel:`Week` from midnight Sunday
            - :guilabel:`Month` from midnight on the 1st of the month
            - :guilabel:`Year` from midnight on the 1st of January
    
            The Period date filter also has usage options. Together with the
            period, the usage options let you define an exact window of time in
            the past, present, or future.

            Period usage options include:
    
            - **Direction**. You can select :guilabel:`Previous` to show past
              periods or :guilabel:`Next` to show future periods.
            - **Count**. You can set the number of periods to display. 
            - **Include Current Period**. You can include the current period in
              the specified time window.

            Period usage options work together. The data that |charts| displays
            for the :guilabel:`Month` period depends on the direction, count,
            and :guilabel:`Include current period` selection.
            
            |charts| counts the number of periods you specify backwards (for :guilabel:`Previous`) or
            forwards (for :guilabel:`Next`). Counting starts at the beginning of
            the current period (with :guilabel:`Include current period` selected),
            or the beginning of the last completed period (without
            :guilabel:`Include current period` selected). |charts| displays the
            data from the beginning of the selected period(s) through the end of
            the selected period(s).
   
            .. example::

               If today is December 8 and you set a period date filter on
               ``released`` with the following selections:

               - :guilabel:`Previous`
               - ``3``
               - :guilabel:`Months`, and
               - :guilabel:`Include current period` selected

               |charts| would show documents with a released date from
               October  1 of this year to December 31 of this year, including
               the start and end dates.

               .. figure:: /images/charts/period-date.png
                  :figwidth: 300px
                  :alt: Image showing period date filter

               However, if you set the same filter without selecting
               :guilabel:`Include current period`, |charts| would show documents
               with a released date from
               September 1 of this year to November 30 of this year, including
               the start and end dates.

            
            To set a Period date filter:

            1. Select a period direction from the first dropdown
               menu.
            #. Enter a numeric value for the period count in the text entry field. You
               can enter whole numbers or decimal values.
            #. Choose a period the next dropdown menu.
            #. (Optional) Deselect :guilabel:`Include current period` to exclude the current
               period. :guilabel:`Include current period` is the default selection.
      

         .. tab:: Absolute
            :tabid: absolute-date

            Absolute date filters use absolute dates to define their upper and lower
            bounds. To define an absolute date range, select :guilabel:`Absolute`
            at the top of your date filter card. By default, the dates specified in the filter
            are assumed to be in :abbr:`UTC (Coordinated Universal Time)`, matching
            the raw data in the collection. You can
            specify a timezone for your filter to adjust the date values as
            desired.

            .. list-table::
               :header-rows: 1

               * - To set a lower bound for the date filter:
                 - To set an upper bound for the date filter:

               * - 1. Turn on the :guilabel:`From` toggle.

                   #. Enter a date for your lower bound, or
                      select a date from the calendar below the input field.

                   #. Enter a time for your lower bound, or select a time
                      from the list below the input field.

                   #. Set :guilabel:`Inclusive` to determine whether to include
                      the specified date.

                 - 1. Turn on the :guilabel:`To` toggle.

                   #. Enter a date for your upper bound, or
                      select a date from the calendar below the input field.

                   #. Enter a time for your upper bound, or select a time
                      from the list below the input field.

                   #. Set :guilabel:`Inclusive` to determine whether to include
                      the specified date.

            .. note::

               The date and time formats used in your bounds depend
               on your location, as determined from your browser settings.

            .. example::

               The following absolute date filter only shows documents
               with a ``Workout Date (As Date)`` field from the year
               ``2018``:

               .. figure:: /images/charts/absolute-date.png
                  :scale: 70%
                  :alt: Image showing absolute date filter

               |

               The filter returns all documents with a
               ``Workout Date (As Date)`` field from ``January 1, 2018 12:00:00
               AM`` inclusively, to ``January 1, 2019 12:00:00 AM`` exclusively.

            Specify a Time Zone
            ~~~~~~~~~~~~~~~~~~~

            Use the :guilabel:`Time Zone` dropdown at the bottom of the
            filter card to specify a time zone for your absolute date filter.
            
            By default, MongoDB stores date values in
            :abbr:`UTC (Coordinated Universal Time)`. When you change the
            time zone, |charts-short| modifies your date values with respect
            to the selected time zone. As a result, different documents may be
            returned by your absolute date filter depending on the time
            zone selected.

            .. example::

               Consider an absolute date filter which spans from
               January 1, 2018 12:00:00 AM inclusively to 
               January 1, 2019 12:00:00 AM exclusively. By default, a
               document with a UTC date of January 1, 2019 2:00:00 AM
               would not be included in this date range. However, if we
               adjust the time zone to
               :guilabel:`Central America (UTC-06:00)`, this document
               would be returned because the adjusted date is
               December 31, 2018 8:00:00 PM.


   .. tab:: Filter Boolean Fields
      :tabid: boolean-fields

      You can filter the chart data based on the boolean value of a specific
      field. Drag a boolean field to the filter panel to view the available
      options:

      - :guilabel:`True` displays documents where the field value is ``true``.

      - :guilabel:`False` displays documents where the field value is
        ``false``.

      - :guilabel:`NULL / MISSING` displays documents where the field is
        ``null`` or does not exist.

      All options are selected by default. The chart preview updates as you
      modify the selected options. Deselecting all options renders a blank
      chart.

      .. example::

         A chart using the following filter only displays documents where the
         ``passed`` field is ``true``. The chart does not display documents
         where the ``passed`` field is ``false``, ``null``, or does not
         exist.

         .. figure:: /images/charts/boolean-filter.png
            :scale: 100%
            :alt: Image showing boolean filter

.. note::

   You cannot use the same field in multiple filters.

Enable or Disable a Filter
~~~~~~~~~~~~~~~~~~~~~~~~~~

You can toggle whether a filter in the :guilabel:`Filter` tab
is enabled or disabled. Disabled filters do not affect the documents
which appear in the chart. Disabled filters are grayed out and cannot
be edited until they are enabled.

To toggle whether a filter is enabled, hover over a filter and
set the toggle that appears at the top of the filter to the desired
setting.

.. figure:: /images/charts/filter-tab-disable-toggle.png
   :figwidth: 300px
   :alt: Image showing filter toggle

Expand or Collapse a Filter
~~~~~~~~~~~~~~~~~~~~~~~~~~~

You can expand or collapse chart filter cards by clicking 
:guilabel:`Show` or :guilabel:`Hide` on that card.

Disabled filters are automatically collapsed.

Enabled, collapsed filters are still applied to your charts.

.. _query-bar:

Filter Your Data Using the Query Bar
------------------------------------

The :guilabel:`Query` bar above the chart display supports more complex queries than
the filter panel. Additionally, you can use the query bar to create
:manual:`aggregation pipelines </core/aggregation-pipeline/>` to
process your data before it is rendered.
  
To filter data using the :guilabel:`Query` bar:

1. In the :guilabel:`Query` bar, input a filter document. Use the
   same syntax used in the query portion of the
   :manual:`db.collection.find()
   </reference/method/db.collection.find/>` method. Your filter document
   must be in curly brackets.
   
#. Click :guilabel:`Apply`.

The following tabs show how to construct queries with the following operators:

- ``$or`` logical operator to match documents where at least one clause is true
- ``$exists`` query operator to match documents with an element that exists
- ``$regex`` query operator to match documents with a regular expression
- ``Date`` field to match documents with specific dates

.. tabs::

   .. tab:: Logical Operator
      :tabid: logical-operator-query

      The following chart shows the top 5 countries (:guilabel:`Limit Results` under the :guilabel:`X Axis` was enabled and set to 5) in terms of the 
      number of directors who have made either a documentary **or** a biography film. 

      .. figure:: /images/charts/query-bar-example-or.png
         :figwidth: 720px
         :alt: Example logical operator query

      The chart uses the following query:

      .. code-block:: javascript

         {
            $or: [
            {
              genres: "Documentary"
            },
            {
              genres: "Biography"
            } ]
         } 

      ``genres`` is an array where each element is a film genre. This filter ensures that only directors who 
      have made either a documentary or a biography film are included in the total count of directors for a 
      particular country.

   .. tab:: Existing Element
      :tabid: element-query


      The following chart shows the average Metacritic ratings of movies
      over time :ref:`binned <charts-bin-data>` by 5 year periods.

      .. figure:: /images/charts/query-bar-comparison.png
         :figwidth: 720px
         :alt: Example query comparison

      The chart uses the following query:

      .. code-block:: javascript

         { 'writers.1': { $exists: true }}
         
      ``writers`` is an array where each element is a writer who
      contributed to the movie. This filter ensures that only documents with
      at least two writers are factored into the mean Metacritic rating by
      checking that the second array element exists.

   .. tab:: RegEx
      :tabid: regex-query

      .. _`regular expression`: :manual:`


      Use the :query:`$regex` query operator to filter using a
      regular expression:

      .. code-block:: javascript

         { <field>: { $regex: "pattern", $options: "<options>" } }

      For example, to find all documents where the ``jobs`` field begins with
      the letter ``A``, you would write the following in the
      :guilabel:`Query` bar:

      .. code-block:: javascript

         { "jobs" : { $regex : "^A" } }

      To find all documents where the ``jobs`` field begins with the
      letter ``A`` or ``a``, you would write the following in the
      :guilabel:`Query` bar:

      .. code-block:: javascript

         { "jobs" : { $regex : "^A", $options : "i" } }

   
   .. tab:: Date
      :tabid: data-query

      The following chart shows total sale amounts from an office supply
      company, categorized by purchase method:

      .. figure:: /images/charts/query-bar-date.png
         :figwidth: 720px
         :alt: Example date query

      The chart uses the following query:

      .. code-block:: javascript

         { 
           $and: [ 
           { 
             saleDate: { $gte: new Date("2017-01-01") } 
           }, 
           { 
             'items.4': { $exists: true } 
           } ] 
         }

      Each document in the collection represents a single sale. ``items`` is
      an array where each element is an item purchased during a sale.

      This query restricts the documents shown to only those with
      a ``saleDate`` equal to or more recent than ``January 1, 2017`` with at
      least 5 elements in the ``items`` array.

Address Query Errors
~~~~~~~~~~~~~~~~~~~~~

If your query is invalid, |charts-short| displays the
:icon-fa4:`exclamation-triangle` icon in the :guilabel:`Query` bar.

Click the :guilabel:`Query` bar if it is not already displayed to view
error details. |charts-short| displays error details for:

- Client-side errors, such as malformed JSON, and
- Server-side errors, such as invalid :abbr:`MQL (MongoDB Query
  Language)`.

.. figure:: /images/charts/filter-error.png
   :figwidth: 720px
   :alt: Example Filter Error

Review the error details, then adjust your query accordingly.

Considerations
--------------

- Filters on large collections may encounter performance issues if
  the collection is not appropriately :manual:`indexed </indexes>`.

- The date functions used in the |charts| query bar are
  consistent and compatible with the date functions used in the
  :manual:`mongo shell </mongo>`. As a result, you can use:

  - ``new Date()``,
  - ``ISODate()``, or
  - ``new ISODate()``.

  The ``Date()`` function (as opposed to the ``new Date()``
  constructor) returns the current date as a string, so it cannot be
  used for querying dates in |charts-short|.

