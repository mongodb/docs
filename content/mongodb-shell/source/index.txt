:template: product-landing
:hidefeedback: header
:noprevnext:

.. facet::
   :name: genre
   :values: reference

.. meta:: 
   :description: Use the MongoDB Shell to test queries and interact with the data in your MongoDB database.

.. program:: mongosh

.. binary:: mongosh

.. _mdb-shell-overview:

======================================
Welcome to MongoDB Shell (``mongosh``)
======================================

.. introduction::

   The |mdb-shell|, ``mongosh``, is a JavaScript and Node.js |repl| 
   environment for interacting with MongoDB deployments in 
   `Atlas <https://www.mongodb.com/docs/atlas/>`__, locally,
   or on another remote host. Use the |mdb-shell| to test queries and 
   interact with the data in your MongoDB database.

   .. button:: Download mongosh
      :uri: https://www.mongodb.com/try/download/shell?jmp=docs

.. image:: /images/mongosh-plp/Technical_SOFTWARE_Terminal(3)_Spot.png
   :alt: Abstract illustration showing a terminal interacting with different systems

.. kicker:: What You Can Do

Access MongoDB From Your Shell
------------------------------

.. tabs::

   .. tab:: Connect to MongoDB
      :tabid: connect

      .. procedure::

         .. step:: Find Your Connection String

            Find your connection string. The connection string varies 
            depending on the type of deployment you're connecting to.

            Learn how to find your connection string for
            `Atlas <https://www.mongodb.com/docs/manual/reference/connection-string/#find-your-connection-string>`__.

            Or connect to a
            `self-hosted <https://www.mongodb.com/docs/manual/reference/connection-string/#find-your-self-hosted-deployment-s-connection-string>`__
            deployment.

         .. step:: Connect to MongoDB

            Connect to a MongoDB deployment using the
            connection string. 
            
            The following connection string connects to 
            an Atlas deployment:

            .. code-block:: sh

               mongosh "mongodb+srv://mycluster.abcd1.mongodb.net/myFirstDatabase" --apiVersion 1 --username <username>

         .. step:: Interact with Your Data

            Use your chosen connection type to view your data, import 
            documents, and run queries.

            For more information, refer to :ref:`mdb-shell-crud`.

      .. image:: /images/mongosh-plp/atlas_plp.gif
         :alt: MongoDB Atlas Connect to your Database image

   .. tab:: Perform CRUD and Aggregation
      :tabid: crud

      .. procedure::

         .. step:: Insert Documents

            :binary:`~bin.mongosh` supports common insert opererations, 
            including:

            - :method:`db.collection.insertOne()`
            - :method:`db.collection.insertMany()`

            For more information and examples, refer to :ref:`mongosh-insert`.

         .. step:: Read Documents

            Use the :method:`db.collection.find()` method to query documents
            in a collection. For more information and examples, refer to 
            :ref:`mongosh-read`.

         .. step:: Update Documents

            :binary:`~bin.mongosh` supports common update operations, 
            including:

            - :method:`db.collection.updateOne()`
            - :method:`db.collection.updateMany()`
            - :method:`db.collection.replaceOne()`

            For more information and examples, refer to :ref:`mongosh-update`.

         .. step:: Delete Documents

            :binary:`~bin.mongosh` supports common delete operations, 
            including:

            - :method:`db.collection.deleteMany()`
            - :method:`db.collection.deleteOne()`

            For more information and examples, refer to :ref:`mongosh-delete`.

         .. step:: Run Aggregation Pipelines

            You can run aggregation pipelines in :binary:`~bin.mongosh` 
            using the :method:`db.collection.aggregate()` method. 
            Aggregation pipelines transform your documents into 
            aggregated results based on the stages you specify. For more 
            information and examples, refer to :ref:`mdb-shell-aggregation`.

      .. image:: /images/mongosh-plp/Technical_ACTION_SearchDocument_Thumbnail_BS_Mist.png
         :alt: Abstract illustration showing CRUD and aggregation operations

   .. tab:: Administer and Manage
      :tabid: administer

      .. procedure::

         .. step:: Manage Databases and Collections

            View information about databases, create collections or views,
            or drop databases - all from your shell. See all 
            :ref:`Database Methods <mongosh-database-methods>`.

            Perform collection operations, create or delete indexes, or 
            explain queries with :ref:`Collection Methods 
            <mongosh-collection-methods>`.

         .. step:: Administer Servers

            Manage :ref:`replication <mongosh-replication-methods>` or 
            :ref:`sharding <mongosh-sharding-methods>` conveniently in 
            your shell.

            Check server status with a variety of :ref:`Server Status Methods 
            <mongosh-server-status-methods>`.

         .. step:: Manage Users and Roles

            Create or update roles, define and update privileges, or drop 
            roles using :ref:`Role Management Methods 
            <mongosh-role-management-methods>`.

            Create and update users, authenticate users, and manage user
            roles with :ref:`User Management Methods 
            <mongosh-user-management-methods>`. 

      .. image:: /images/mongosh-plp/Technical_SOFTWARE_Terminal(1)_Spot.png
         :alt: Abstract illustration showing a terminal performing operations

   .. tab:: Automate with Scripts
      :tabid: scripts

      .. procedure::

         .. step:: Run Scripts for CRUD or Administrative Tasks

            Write scripts to run with the |mdb-shell| that perform CRUD or 
            administrative operations in MongoDB.

            For example, if you have a JS file that seeds synthetic or
            mock data into MongoDB in your development or staging 
            environment, run the file with:

            .. code-block:: sh

               mongosh YOUR_JS_FILENAME.js

            Explore a tutorial that uses the |mdb-shell| with JavaScript to
            access MongoDB: :ref:`mdb-shell-write-scripts`.

         .. step:: Create Custom Helper Functions with .mongoshrc

            Repeatedly writing large helper functions in the Shell? Store 
            them in a :ref:`.mongoshrc config file <mongoshrc-js>`. For 
            example, if you often find yourself converting date strings to 
            ISO format for queries, create a function in ``.mongoshrc`` to 
            handle it:

            .. code-block:: JavaScript

               function toISO(dateString) { 
                  return new Date(dateString).toISOString(); 
               }

            Then, call the function in ``mongosh``:

            .. code-block:: sh

               db.clientConnections.find( { connectTime: toISO("06/07/2017") } )

            For more information, refer to :ref:`mongosh-write-scripts-config-file`.

         .. step:: Use or Publish Snippets

            :ref:`Pull existing snippets <snip-install-packages>` into 
            your codebase for convenient reuse. Or :ref:`create and share 
            snippets <snip-create>` for your custom use case.

            For example, you might have a snippet that validates the data
            you import daily as a cron job. You can publish this snippet, 
            so your development team can access it. Publish to a community
            registry or configure a private registry. 
            
            For more information, refer to :ref:`snip-reg-config`.

      .. image:: /images/mongosh-plp/Technical_SOFTWARE_Terminal(4)_Spot.png
         :alt: Abstract illustration implying a terminal executing scripts

.. kicker:: Learn More

Other Powerful Features
-----------------------

.. card-group::
   :columns: 3
   :style: compact

   .. card::
      :cta: Unlock the Power of Editor Mode
      :url: https://www.mongodb.com/docs/mongodb-shell/reference/editor-mode/
      :icon: /images/mongosh-plp/icons/Technical_REALM_CLI10x.png
      :icon-dark: /images/mongosh-plp/icons/Technical_REALM_CLI_inverse10x.png
      :icon-alt: CLI Icon

      Use an external or built-in editor to work with multiline
      functions. Go beyond the line-oriented ``mongosh`` 
      default console.

   .. card::
      :cta: Access Session Logs
      :url: https://www.mongodb.com/docs/mongodb-shell/logs/
      :icon: mdb_shell
      :icon-alt: MongoDB Shell Icon

      Access session logs for any session within the last 30 days. Find 
      the command syntax you can't quite remember, or look for common
      commands you can script.

   .. card::
      :cta: View Available Methods
      :url: https://www.mongodb.com/docs/mongodb-shell/reference/methods/
      :icon: general_action_develop
      :icon-alt: Terminal Icon in a circle

      Find out which methods ``mongosh`` supports. Get example
      syntax and parameter details for supported methods.

.. toctree::
   :titlesonly:

   Install </install>
   Connect </connect>
   Configure </configure-mongosh>
   Run Commands </run-commands>
   Perform CRUD Operations </crud>
   Run Aggregation Pipelines </run-agg-pipelines>
   Client-Side Field Level Encryption </field-level-encryption>
   Write Scripts </write-scripts>
   Snippets </snippets>
   Reference </reference>
   Release Notes </changelog>
   Help </reference/access-mdb-shell-help.txt>
