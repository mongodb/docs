=======================
Administration Overview
=======================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. include:: /includes/styles/corrections.rst

If you have administrative privileges for the |onprem| deployment,
click the :guilabel:`Admin` link in the top right corner of |onprem|
to access the system administration tool. This page describes the
system administration interface. For configuration settings, see
:doc:`/reference/configuration`.

General Tab
-----------

The :guilabel:`General` tab gives access to system topology, users,
messages, and other information.

:guilabel:`Overview` Page
~~~~~~~~~~~~~~~~~~~~~~~~~

This page displays the |onprem| network topology and provides reports
on system use and activity.

:guilabel:`Ops Manager Config` Page
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The :guilabel:`General` tab's :guilabel:`Ops Manager Config` page lets
you update your |onprem| settings. For information on each field, see
:doc:`/reference/configuration`.

:guilabel:`Users` Page
~~~~~~~~~~~~~~~~~~~~~~

This page displays a list of user information for all people with
permission to use the |onprem| application as well as provides an
interface to manage users. Use the search box on the upper right corner
to find a user record. The :guilabel:`Last Access` column displays the
date and time of the last access event.

Edit a User Record
``````````````````

.. include:: /includes/steps/admin-user-edit.rst

Delete a User Record
````````````````````

.. include:: /includes/steps/admin-user-delete.rst

.. _api-key-page-admin-ui:

:guilabel:`API Keys` Page
~~~~~~~~~~~~~~~~~~~~~~~~~

This page lists the available Global |api| Keys for this |onprem|
instance. You can:

- Search for an |api| Key,
- Add new |api| Keys,
- Edit existing |api| Keys, or
- Delete existing |api| Keys.

.. note::

   |mms| limits all actions in this section to users or Global |api|
   Keys that were granted the :authrole:`Global Owner` role.

.. _add-global-api-key:

Add a Global |api| Key
``````````````````````
1. Click :guilabel:`Create API Key` to open the :guilabel:`Add API Key`
   page.

#. At the :guilabel:`Enter API Key Information` step, set both required
   values in the Global |api| Key form:

   .. list-table::
      :widths: 20 80
      :stub-columns: 1

      * - Description
        - Type the purpose this Global |api| Key serves. This
          description can't be longer than 250 characters.
      * - Global Permissions
        - Select the :ref:`new role or roles <global-roles>` to be
          assigned to the |api| Key.

   |mms| generates the Public Key at this step.

#. Click :guilabel:`Next`.

#. At the :guilabel:`Private Key` step, click the :guilabel:`Copy`
   button to add the Private Key to the clipboard. Save and secure this
   Private Key as you would any other password. To use your Global
   |api| Key with the |mms| |api|, you need both the public key, which
   serves as a username, and the private key, which serves as a
   password.

   .. warning::

      Copy your full private key at this point. Store it in a secure
      location. |mms| doesn't and can't display the full private key
      after you leave this page.

#. To :ref:`add a whitelist entry <add-global-whitelist-entry>`, click
   :guilabel:`Go to Global Whitelist`.

#. Click :guilabel:`Done`.

.. _edit-global-api-key:

Edit a Global |api| Key
```````````````````````
.. warning::

   Once saved, any changes to these permissions impact applications
   that use this Global |api| Key.

1. To the right of the Global |api| Key that you want to edit, click
   :icon-mms:`ellipsis` then select :guilabel:`Edit API Key` to open
   the :guilabel:`Edit Global API Key` modal. |mms| displays the
   Public Key in this modal.

#. Change the values in the Global |api| Key form as needed:

   .. list-table::
      :widths: 20 80
      :stub-columns: 1

      * - Description
        - Type the purpose this Global |api| Key serves. This
          description can't be longer than 250 characters.
      * - Global Permissions
        - Select the :ref:`new role or roles <global-roles>` to be
          assigned to the |api| Key.

#. Click :guilabel:`Save` if you made changes to your Global |api|
   Key. Click :guilabel:`Cancel` to close the page without editing the
   Global |api| Key.

.. _delete-global-api-key:

Delete a Global |api| Key
`````````````````````````
.. warning::

   Deleting a Global |api| Key might impact applications that use that
   key.

1. To the right of the Global |api| Key that you want to delete, click
   :icon-mms:`ellipsis` then select :guilabel:`Delete API Key` to open
   the :guilabel:`Delete Global API Key` modal.

#. Type the public key for the Global |api| Key in the box to confirm
   that you want to delete this key.

#. Click :guilabel:`Delete` to delete your Global |api|
   Key. Click :guilabel:`Cancel` to close the modal without deleting
   the Global |api| Key.

.. _whitelist-page-admin-ui:

:guilabel:`Global Whitelist` Page
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This page lists the Global Whitelist Entries configured for the
|onprem| instance. Each entry represents a host IP or |cidr| block from
which |onprem| accepts incoming |api| requests. You can search for a
whitelist entry, add whitelist entries, and edit or delete existing
whitelist entries.

.. note::

   |mms| limits all actions in this section to users or Global |api|
   Keys that were granted the :authrole:`Global Owner` role.

.. _add-global-whitelist-entry:

Add a Whitelist Entry
`````````````````````

1. Click :guilabel:`Add Whitelist Entry` to open the
   :guilabel:`Add Global Whitelist Entry` modal.

#. Set all values in the whitelist form:

   .. list-table::
      :widths: 20 80
      :stub-columns: 1

      * - Whitelist Entry
        - Type the |ipv4| address, |ipv6| address, or |cidr| block that
          you want to allow to use the |onprem| |api|.

          .. note::
             You can click :guilabel:`Use Current IP Address` to add
             the public IP address of the host you are using to access
             |onprem|.

      * - Description
        - Type the purpose this IP address serves.

#. Click :guilabel:`Add Entry` if this global whitelist entry is
   correct. Click :guilabel:`Cancel` to close the modal without adding
   a new whitelist entry.

.. _edit-global-whitelist-entry:

Edit a Whitelist Entry
``````````````````````

.. warning::

   Once saved, any changes to this value impact applications that
   require the previous whitelist entry.

1. To the right of the whitelist entry that you want to edit, click
   :icon-mms:`ellipsis` then select :guilabel:`Edit Whitelist Entry` to
   open the :guilabel:`Edit Global Whitelist Entry` modal. |mms|
   displays the |ipv4| address, |ipv6| address, or |cidr| block for
   this whitelist entry in the modal.

#. Change the values in the whitelist form as needed:

   .. list-table::
      :widths: 20 80
      :stub-columns: 1

      * - Whitelist Entry
        - Type the  |ipv4| address, |ipv6| address, or |cidr| block
          that you want to allow to use the |onprem| |api|.

          .. note::
             You can click :guilabel:`Use Current IP Address` to add
             the public IP address of the host you are using to access
             |onprem|.


      * - Description
        - Type the purpose this IP address serves.

#. Click :guilabel:`Save Entry` if you made changes to your global
   whitelist entry. Click :guilabel:`Cancel` to close the modal without
   editing the whitelist entry.

.. _delete-global-whitelist-entry:

Delete a Whitelist Entry
````````````````````````

.. warning::

   Deleting a Global Whitelist Entry impacts applications that require
   that whitelist entry, unless another whitelist entry includes that
   address. If no entries cover the application address, the
   application cannot access the |api|.

1. To the right of the whitelist entry that you want to delete, click
   :icon-mms:`ellipsis` then select :guilabel:`Delete Whitelist Entry`.

   The :guilabel:`Delete Global Whitelist Entry` modal displays.

#. Type the entry's  |ipv4| address, |ipv6| address, or |cidr| block in
   the box to confirm that you want to delete this entry.

#. Click :guilabel:`Delete` if you want to delete your global
   whitelist entry. Click :guilabel:`Cancel` to close the modal without
   deleting the whitelist entry.

.. _projects-page-admin-ui:
.. _groups-page-admin-ui:

:guilabel:`Projects` Page
~~~~~~~~~~~~~~~~~~~~~~~~~

This page in the :guilabel:`Admin` interface lists
:term:`projects <project>`, their creation dates, and their last pings
from agents.

.. list-table::
   :header-rows: 1
   :widths: 30 70

   * - Task

     - Procedure

   * - To view a project's details:

     - Click the project's name.

   * - To edit a project's metric data retention policy:

     - 1. In the :guilabel:`Actions` column for a project, click the 
          ellipsis button (``...``), then click 
          :guilabel:`Monitoring Data Retention`.

       2. Change the retention levels as desired. Increasing the
          retention period for a granularity level requires more
          storage on the :ref:`Ops Manager Application Database
          <mms-application-database>`. To learn more about monitoring
          data retention, see the default monitoring data retention
          values per
          :setting:`day <Default Monitoring Data Retention 1 Day>`,
          :setting:`hour <Default Monitoring Data Retention 1 Hour>`,
          and
          :setting:`minute <Default Monitoring Data Retention 1 Minute>`.

   * - To edit a project's tags:

     - In the :guilabel:`Actions` column for a project, click the 
       ellipsis button (``...``), then click :guilabel:`Edit Tags`.

       .. include:: /includes/requirements-tag-names.rst          

   * - To edit the LDAP groups that correspond to a project's roles:

     - `Associate LDAP groups with project roles 
       <../tutorial/configure-for-ldap-authentication.html#associate-ldap-groups-with-project-roles>`__.

       .. note::

          You can perform this procedure only if you enabled |ldap|
          authentication for |mms|.

:guilabel:`Logs` Page
~~~~~~~~~~~~~~~~~~~~~

This page lists backup logs by job and class with messages
grouped and counted by last hour, 6 hours, and last 2 days. Click a
count number to see all messages in the group.

:guilabel:`Version Manifest` Page
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This page lists all released MongoDB versions. |onprem| requires this
list to run in local mode. See the :doc:`/tutorial/configure-local-mode`
tutorial for more information.

:guilabel:`Messages` Page
~~~~~~~~~~~~~~~~~~~~~~~~~

This page displays messages you have added to the |onprem| interface.
You can add a message to any page of the |onprem| interface to notify
users of information and events, such as impending maintenance windows.
To add messages, see :doc:`/tutorial/add-message-to-interface`

:guilabel:`Audits` Page
~~~~~~~~~~~~~~~~~~~~~~~

This page displays all events tracked by |onprem|. This includes the
group events as well as internal and system events, which are not
tracked at a group level.

.. Automation tab: internal

.. _mongodb-usage-page:

:guilabel:`MongoDB Usage` Page
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. admonition:: Enable MongoDB Usage UI and MongoDB Usage Data Collection
   :class: important

   If :setting:`MongoDB Usage UI` is set to ``true``, this page
   displays information about the MongoDB Usage collected via daily
   snapshots.

   If this page contains no data, you can populate it with data with one of two methods:

   - Set :setting:`MongoDB Usage Data Collection` to ``true`` and wait
     for the daily usage snapshot to generate within 24 hours.

   - Request the
     :doc:`Daily Usage Snapshot API resource </reference/api/usage/generate-daily-usage-snapshot>`.


Sections of the Page
````````````````````

This page has two parts: a usage summary and a table of MongoDB deployments.

Usage Summary
+++++++++++++

This card contains a section for each server type that your |onprem| deployment between the dates selected.

Each server type section contains three headings:

.. list-table::
   :header-rows: 1
   :widths: 20 80

   * - Heading
     - Description
   * - :guilabel:`RAM Used`
     - Greatest amount of RAM used on the date with the greatest use.
   * - :guilabel:`Total Nodes`
     - Count of nodes used on the date with the greatest use.
   * - :guilabel:`Date`
     - When this server type had its greatest use.

The *date of greatest use* depends on the server type:

.. list-table::
   :header-rows: 1
   :widths: 20 80

   * - Server Type
     - Date of Greatest Use Measured
   * - RAM Pool
     - When the greatest amount of RAM was used for all hosts running
       that server type.
   * - All other server types
     - When the greatest number of all hosts of that server type were
       running.

Deployments Table
+++++++++++++++++

This table contains each server and describes the server type associated, as well as important information about the server's processes and their deployments.


Actions
```````

From this page, you can:

Determine Server Type Usage over Time
+++++++++++++++++++++++++++++++++++++

To review which server types were in use for your MongoDB Enterprise
installations during a given time period:

1. Select a start date from the :guilabel:`From` box.

2. Select an end date from the :guilabel:`To` box.

The Usage Summary updates automatically with the applicable values.
This usage summary covers all hosts, organizations, and projects.

Apply New Server Type to Multiple Hosts
+++++++++++++++++++++++++++++++++++++++

To change the server type of multiple hosts at once:

1. Check the box at the left the columns containing the hosts to which
   you wish to apply the new server type.

2. Select the desired server type from the
   :guilabel:`Apply a Server Type` dropdown.

This action updates these hosts to have that server type for all
*existing* and *future* usage snapshots. The new server type does not
apply to the timeframe you specified using the date selectors.

Apply New Server Type to Specific Host
++++++++++++++++++++++++++++++++++++++

To change the server type of one host, use the dropdown in its row
under the :guilabel:`Server Type` column.

This action updates this host to have that server type for all
*existing* and *future* usage snapshots. The new server type does not
apply to the timeframe you specified using the date selectors.

Download a Usage Report
+++++++++++++++++++++++

To report on your MongoDB Enterprise usage:

1. Click :guilabel:`Download Report` to generate a copy of this data.

#. Attach this report to the MongoDB email displayed on the
   :guilabel:`MongoDB Usage` page.

.. _backup-tab:

Backup Tab
----------

The :guilabel:`Admin` interface's :guilabel:`Backup` tab provides
information on Backup resources, including :term:`jobs <backup job>`,
:term:`daemons <Backup Daemon>`, and :term:`blockstores <blockstore>`.
For an overview of Backup and Backup resources, see
:doc:`/core/backup-overview`.

.. _jobs-page:

:guilabel:`Jobs` Page
~~~~~~~~~~~~~~~~~~~~~

This page lets you manage Backup jobs and Backup resources for
each group. The top part of the page displays :guilabel:`Active Jobs`
and the bottom part displays :guilabel:`Stopped Jobs`.
The following fields on the page have a yellow background if delayed:

- :guilabel:`Last Agent Conf`, if older than 1 hour.

- :guilabel:`Last Oplog`, if older than 1 hour before the
  :guilabel:`Last Agent Conf`.

- :guilabel:`Head Time`, if older than 1 hour before
  :guilabel:`Last Oplog`.

- :guilabel:`Last Snapshot`, if older than the snapshot interval
  multiplied by 1.5.

.. _manage-backup-jobs:

Manage Backup Jobs
``````````````````

From the :guilabel:`Jobs` page, you can do the following:

.. list-table::
   :header-rows: 1

   * - Task

     - Procedure

   * - Assign a group to particular set of
       :term:`Backup Daemons <Backup Daemon>` or
       :term:`blockstores <blockstore>`.

     - Click the group, select the daemons or :term:`blockstores
       <blockstore>`, and select :guilabel:`Save Changes`.

   * - View a job's log.

     - Click the name of the job and then click the :guilabel:`Logs`
       link. Contact MongoDB Support if you need help interpreting the
       error message.

   * - View information about a job.

     - Click the job. From the job's page you can access logs, conf
       calls, and other information, and you can download diagnostics.

   * - Move a job to a new Backup Daemon.

     - Click the job. On the job's page, click the
       :guilabel:`Move head`
       link, select the new :term:`head <head database>`, and click the
       :guilabel:`Move Head` button.

   * - Filter the page to display the jobs assigned to a particular
       daemon or blockstore.

     - Click the name of the daemon or blockstore.

   * - Toggle whether a job :term:`journals <journal>` its
       :term:`head database`.

     - Select or clear :guilabel:`Journal Head` to turn on or off
       journaling for your head database.

       .. note::
          Changing this setting at the job level overrides the
          deployment-wide setting.

       See :setting:`mms.backup.journal.heads` for how to enable or
       disable journaling for all head databases in your group.

Manage Backup Resources
```````````````````````

From the :guilabel:`Jobs` page, you can assign backup resources to a
particular :term:`group`.

You can make these changes for existing backups, but only new
:term:`backup jobs <backup job>` will follow the new rules. Making
these changes does not affect existing deployments. For additional
procedural information, see
:doc:`/tutorial/move-jobs-to-new-backup-daemon`.

.. list-table::
   :header-rows: 1

   * - Task

     - Procedure

   * - Assign a group to particular :term:`daemons <Backup Daemon>`,
       :term:`blockstores <blockstore>`
       or :term:`oplog stores <Oplog Store Database>`.

     - Click the group to open the group's assignment page; make the
       assignments; select :guilabel:`Save Changes`.

   * - Assign a group to a labelled set of daemons, blockstores,
       and oplog stores.

     - First assign the label on the Admin page for each resource. See
       :ref:`daemons-interface`, :ref:`blockstores-page`,
       and :ref:`oplog-stores-page`.

       Then, on the :guilabel:`Jobs` page:

       1. Click the group name to open the group's assignment page.

       2. In the :guilabel:`Assignment Labels` list box, click
          :guilabel:`Select Labels`.

       3. Select the label. Each selected label must exist on at least
          one daemon, one blockstore, and one oplog store. If you
          select multiple labels, the resource must meet all selected
          labels.

          Keep in mind that the resource must also meet any other
          selected criteria on this page. For example, for a daemon to
          match, it must also meet any selections you have made in the
          :guilabel:`Backup Daemon` field.

       4. Click :guilabel:`Save Changes`.

:guilabel:`Job Timeline` Page
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This page displays a graphical representation of information found on
other :guilabel:`Admin` pages, in particular the :guilabel:`Jobs`
page. The :guilabel:`Job Timeline` page displays critical timestamps
(:term:`head <head database>`, last snapshot, next snapshot) and
offers a way to assign a :term:`daemon <Backup Daemon>` to a given job.

Click the :guilabel:`Auto refresh` checkbox to update the list
automatically every 10 seconds. Click the :guilabel:`Refresh` button
to refresh data manually.

To view the backup job |json|, click the :guilabel:`Show JSON` link
under the :guilabel:`Project` heading for any backup job. When the
|json| displays, click the :guilabel:`View raw runtime data` link
under the code to view the raw data. To hide the daemon |json|, click
the :guilabel:`Hide JSON` link.

To move the job to a new Backup Daemon, click the :guilabel:`Move head`
link under the :guilabel:`Machine` heading for a backup job. Select the
location and click the :guilabel:`Move head` button to move the job to
a new Backup Daemon. |onprem| does not automatically move jobs between
daemons.

:guilabel:`Logs` Page
~~~~~~~~~~~~~~~~~~~~~

This page lists backup logs by job and class with messages grouped and
counted by last 2 hours, last day, and last 3 days. Click a count
number to see all messages in the group.

:guilabel:`Restores` Page
~~~~~~~~~~~~~~~~~~~~~~~~~

This page displays the last 300 requested restores and their progress.
To show all restores ever requested, click :guilabel:`Show All`.

.. _resource-usage-page:

:guilabel:`Resource Usage` Page
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This page provides key size and throughput statistics on a per-job
basis for all groups for which Backup is enabled. The page displays
the size of the data set, how active it is, and how much space is
being used on the snapshot store.

To export the information, click :guilabel:`Export as CSV`.

.. _grooms-page:

:guilabel:`Grooms` Page
~~~~~~~~~~~~~~~~~~~~~~~

This page lists active and recent :term:`groom` jobs. Groom jobs
remove unused :term:`blocks <block>` on
:term:`blockstores <blockstore>` and
:term:`S3 Snapshot Stores <S3 Snapshot Store>` to reclaim storage
space. If no existing :term:`snapshots <snapshot>` reference a given
block, it is considered *unused*. |onprem| grooms blockstores at least
once a year and :abbr:`S3 (Simple Storage Service)` snapshot stores at
least every two weeks.

A groom job forces the backup process to:

1. Write all new data to a new location,

#. Copy all existing, needed data from the old location to the new one,

#. Update references to maintain data relationships, and

#. Drop the old database.


.. admonition:: File Size Changes during Grooming
   :class: note

   During grooming operations, you may notice that the file sizes of
   blockstores and :abbr:`S3 (Simple Storage Service)` snapshot stores
   fluctuate, sometimes dramatically. This is normal during these
   operations.

You can manually direct |onprem| to move blocks between blockstores
through the :ref:`groom-priority-page`.

You can also :doc:`/tutorial/configure-block-size`.

.. _groom-priority-page:

:guilabel:`Groom Priority` Page
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This page displays a list of the status of all of the backup jobs and
their blockstores. There are three types of jobs that run to maintain
a blockstore:

Tracking jobs
  Scheduled to run every three days unless a previously scheduled
  blockstore job has not finished in that time. Tracking jobs also are
  scheduled to run immediately after a groom job. Tracking jobs
  determine the current ratio of living to dead blocks
  in blockstores.

Groom jobs
  Scheduled to run when the ratio of living to dead
  bytes drops below ``0.45``. To learn more about grooming, see
  :ref:`Groom page <grooms-page>`

Integrity Check Jobs
  Scheduled to run every seven days unless a previously scheduled
  blockstore job has not finished in that time. These checks make sure
  that the blockstore has no data integrity issues.

Each blockstore can run only one blockstore job (groom, track, or
integrity check) at a time unless you change its
:ref:`Load Factor <edit-blockstore>`. The :guilabel:`Load Factor` sets
how many jobs that a blockstore can run at the same time. It is set to
``1`` by default.

To learn how to change the :guilabel:`Load Factor`, see
:ref:`Edit a Blockstore <edit-blockstore>`.

Each row in this table lists a backup job. Its background color
indicates if the state of its associated blockstore is accurate and
current.

.. list-table::
   :header-rows: 1
   :widths: 15 85

   * - Color
     - Blockstore Storage Usage Status

   * - Blue
     - Amount of blockstore storage usage is changing. Blockstore groom
       job is in progress.

   * - Green
     - Amount of blockstore storage usage is accurate. Blockstore has
       run a tracking job since last groom job ran.

   * - Red
     - Amount of blockstore storage usage is stale. Blockstore has run
       a groom job since its last tracking job ran.

Manual Blockstore Maintenance
`````````````````````````````

From this page, you can also perform three kinds of blockstore
maintenance manually:

Move Blocks to a Different Blockstore
  To move a backup's chunks to a different blockstore, select the
  destination blockstore in the backup's :guilabel:`Blockstore List`
  column. You might want to do this if you add a new blockstore and
  would like to balance data.

Groom a Blockstore
  To initiate a groom job, click :guilabel:`Schedule` in the
  :guilabel:`Groom Action` column for the blockstore
  :term:`replica set` you want to groom. You should not need to
  manually schedule groom jobs. |onprem|
  :ref:`runs the jobs automatically <grooms-page>`.

Check Blockstore Integrity
  To initiate an integrity check, click :guilabel:`IntegCheck` in the
  :guilabel:`Integrity Action` column for the blockstore
  :term:`replica set` you want to check. The
  :guilabel:`Integrity Schedule Result` modal appears and displays the
  status of the blockstore.

.. seealso:: :doc:`/tutorial/configure-block-size`.

.. _daemons-interface:

:guilabel:`Daemons` Page
~~~~~~~~~~~~~~~~~~~~~~~~

This page lists all active :term:`Backup Daemons <Backup Daemon>` and
provides configuration options. |onprem| automatically detects Backup
Daemons and displays them here. You can reconfigure daemons from this
page. Changes can take up to 5 minutes to take effect.

Click :guilabel:`Pre-Configure New Daemon` at the bottom of the page if
you want to add a daemon but do not want it to take new jobs. Type the
``<machine>:<roothead path>`` in the text field above
:guilabel:`Pre-Configure New Daemon`. Click the button to configure the
new Backup Daemon.

For each daemon, the page lists the server name, configuration,
:term:`head <head database>` space used, head space free, the number of
replica sets backed up, the percentage of time the Backup Daemon
Service was busy, and job runtime counts by 1 minute, 10 minutes,
60 minutes, less than or equal to 180 minutes, and greater than 180
minutes.

The page includes the following fields and links to manage and
configure daemons:

.. These table fields are internal only:
   Queryable Restore Jobs, Archive Jobs, Git Commit Hash: internal

.. list-table::
   :header-rows: 1
   :stub-columns: 1
   :widths: 20 80

   * - Field
     - Description

   * - :guilabel:`Show Detailed JSON`
     - Displays the Backup Daemon JSON. When the JSON displays, the
       :guilabel:`View raw runtime data` link appears under the code,
       allowing you to view the raw data.

   * - :guilabel:`Move all heads`
     - Moves all the Backup Daemon jobs that live on this daemon to a
       new daemon location.

       #. Click the link.
       #. Click the location.
       #. Click :guilabel:`Move all heads`.

   * - :guilabel:`Delete Daemon`
     - Deletes a Backup Daemon.

   * - :guilabel:`Assignment`
     - Allows the daemon to process more jobs. If the daemon's disk
       fills, clear this so the host is not overloaded.

   * - :guilabel:`Backup Jobs`
     - Allows the daemon to process more backup jobs. Clear this when
       performing maintenance on a daemon's host.

   * - :guilabel:`Resource Usage`
     - Collects information on :term:`blockstore` use (i.e., which
       snapshots still reference how many blocks). |onprem| uses this
       information to generate the :ref:`resource-usage-page` page and
       to prioritize garbage collection.

       .. note::

          If this |onprem| instance is running as a dedicated restore
          daemon host, you may want to clear this checkbox to ensure
          the fastest possible restore time.

   * - :guilabel:`Garbage Collection`
     - Allows the daemon to schedule :term:`groom` jobs to remove
       unused blocks and expired snapshots.

       .. note::

          If this |onprem| instance is running as a dedicated restore
          daemon host, you may want to clear this checkbox to ensure
          the fastest possible restore time.

   * - :guilabel:`Head Disk Type`
     - Indicates whether the disk type is SSD or HDD. If you change a
       daemon to SSD, then only jobs with an :term:`oplog` greater than
       1GB/hour will go to this daemon unless no HDD daemon is
       available. Jobs with an oplog less than 1GB/hour can go to this
       daemon only if no HDD daemon is available.

       .. warning::
          If you run |onprem| 2.0.3 or earlier, jobs with an oplog less
          than 1GB/hour *cannot* be bound to an to SSD-backed daemon.

   * - :guilabel:`Assignment Labels`
     - Creates one or more labels that can be used to assign the daemon
       to a specific group.

   * - :guilabel:`Number of Workers`
     - Number of concurrent backup tasks processed at a time.

       .. include:: /includes/extracts/queryable-backup-workers.rst

.. _blockstores-page:

:guilabel:`Snapshot Storage` Page
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB database backups called *snapshots* and they are stored in
containers called *snapshot stores*. This page lists existing snapshot
stores and allows you to create or modify snapshot stores.

|mms| supports the following snapshot stores:

- On a File System,
- In a MongoDB database (:term:`blockstore`), or
- In an S3 Bucket (S3 blockstore)

.. list-table::
   :header-rows: 1
   :stub-columns: 1
   :widths: 20 20 60

   * - Storage Method
     - Name
     - Description

   * - File System
     - File System Store
     - Snapshots are stored in a directory on a file system. Each
       snapshot is found in its own sub-directory. The snapshot files
       can be compressed individually based upon its
       :setting:`setting:: File System Store Gzip Compression Level`.
       To create or edit a file system store, see
       :doc:`/tutorial/manage-filestore-storage`.

   * - Database Storage
     - Blockstore
     - Snapshots are stored in a managed MongoDB database in a
       compressed, de-duplicated format. Depending on data usage
       patterns the :term:`deduplication` can provide significant
       storage savings without the need for any specialized hardware or
       other software. To create or edit a blockstore, see
       :doc:`/tutorial/manage-blockstore-storage`

   * - |aws| |s3| Bucket
     - |s3| Blockstore
     - Snapshot data is stored as blocks in an
       |aws| `S3 <https://aws.amazon.com/s3/>`_ bucket. Snapshot
       metadata is stored in a managed MongoDB database. The metadata
       database tracks which blocks comprise each snapshot. The blocks
       are compressed and de-duplicated. To create or edit an S3
       blockstore, see :doc:`/tutorial/manage-s3-blockstore-storage`

You can add, edit or delete any snapshot store listed.

Additional Information
``````````````````````

For additional information on managing snapshots, see:

- :doc:`/tutorial/manage-blockstore-storage`

- :doc:`/tutorial/manage-s3-blockstore-storage`

- :doc:`/tutorial/manage-filestore-storage`

- :doc:`/tutorial/assign-snapshot-stores-to-data-center`

- :doc:`/tutorial/configure-block-size`

- :ref:`groom-priority-page`, to manually direct |onprem| to move
  blocks between blockstores

.. _oplog-stores-page:

:guilabel:`Oplog Stores` Page
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This page configures the backing replica sets that store oplog slices.
Oplog slices are compressed batches of the entries in the tailed
:term:`oplogs <oplog>` of your backed-up deployments.

.. warning::

   Do not modify the oplog store’s connection string to point to a
   different replica set. Existing data will not be copied and a resync
   will be required.

From this page you can:

- Add a member to a replica set by adding the host to the replica set
  connection string in the :guilabel:`<hostname>:<port>` field. Do
  **not** modify the connection string to point to a different replica
  set.

- Change the authentication credentials or connection options for a
  oplog store by modifying the appropriate fields.

- Add an additional oplog store by clicking the :guilabel:`Add New
  Oplog Store` button at the bottom of the page.

- Enable and disable new assignments to oplog stores using the
  checkboxes in the :guilabel:`Assignment Enabled` column.

- Assign labels that can be used to assign the oplog store to a
  specific group. Enter labels in :guilabel:`Assignment Labels`.
  Separate multiple labels with commas.

After saving changes to the oplog store’s values, you must restart all
the |onprem| instances, including those running activated Backup
Daemons, for the changes to take effect.

Alerts Tab
----------

The :guilabel:`Admin` interface's :guilabel:`Alerts` tab sets and
displays global and system alerts.
:doc:`Global alerts </tutorial/manage-global-alerts>` apply a
group-level alert condition to multiple groups.
:doc:`System alerts </core/system-alerts>` monitor the health of
|onprem|.

Control Panel Tab
-----------------

:guilabel:`Message History` Page
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This page displays alert messages sent and the
recipients. To filter the list, click :guilabel:`Filter by Recipient`.

Send Test Message
~~~~~~~~~~~~~~~~~

Use this page to send messages to users to test validity of their
addresses.

.. _admin-server-pool:

Server Pool
-----------

This page allows for the administration of the
:doc:`server pool </tutorial/server-pool>`.

.. include:: /includes/fact-server-pools-deprecated.rst

.. _server-pool-servers:

``Servers``
~~~~~~~~~~~

The :guilabel:`Servers` tab allows Administators to view information
regarding servers in the pool, such as availability, as well as cancel
pending requests and recycle servers that have been terminated but
*not* returned to the pool. The :guilabel:`Servers` tab provides three
views:

.. list-table::
   :header-rows: 1
   :widths: 20 80

   * - View
     - Description

   * - :guilabel:`Server List`

     - Lists servers in the pool and their availability (i.e. whether
       they are bound to a specific |mms| group or unbound). From this
       list, Administrators can terminate unbound servers.

       For servers bound to a group, owners of the group can terminate
       the servers from their :guilabel:`Deployment` view.

   * - :guilabel:`Pending Requests`
     - Lists the pending :doc:`requests
       </tutorial/request-servers-from-pool>`. Administrator can cancel
       pending requests from this view.

   * - :guilabel:`Recycle Bin`

     - Lists terminated servers that have not been returned to the
       pool. From this view, Administrator can recycle terminated
       servers to return them to the pool.

       If the list of terminated servers exceed the list displayed on
       the current page, :guilabel:`Recycle All` recycles *all*
       terminated servers in the recycle bin, not just the servers
       displayed on the current page.

.. seealso:: :ref:`server-pool-manage-server-pool`

.. _server-pool-server-request-options:

Servers Request Options
~~~~~~~~~~~~~~~~~~~~~~~

The :guilabel:`Servers Request Options` tab allows Administrators to
control which server options are displayed to the users when users make
a server request. These options are the properties and values specified
in the :asetting:`serverPoolPropertiesFile` file.

.. seealso:: :ref:`server-pool-manager-server-request-options`

.. _server-pool-agent-configuration:

Agent Configuration
~~~~~~~~~~~~~~~~~~~

The :guilabel:`Agent Configuration` tab displays the
:asetting:`serverPoolKey` needed to configure the {+aagent+} for
a server to be added to the server pool.
