# man page support, uses sphinx `man` builder output.
manpages := $(wildcard $(branch-output)/man/*.1)
compressed-manpages := $(subst .1,.1.gz,$(manpages))
manpages:$(manpages) $(branch-output)/manpages.tar.gz
compressed-manpages:$(compressed-manpages)
$(compressed-manpages):$(manpages)
$(manpages):man
	@bin/fix-manpage-url "$(SED_ARGS_FILE)" $@
$(branch-output)/man/%.1.gz: $(branch-output)/man/%.1
	@gzip $< -c > $@
	@echo [man]: compressing $< -- $@
$(branch-output)/manpages.tar.gz:man
	@touch $@.log
	@$(TARBIN) -C $(branch-output)/ --transform=s/man/mongodb-manpages/ \
		   -czvf $@ $(subst $(branch-output)/,,$(manpages)) >> $@.log
	@echo [man]: created $@ archive of all manpages

$(rst-include)/manpage-options-auth-mongo.rst:$(rst-include)/manpage-options-auth.rst
	@cp $< $@
	@sed $(SED_ARGS_FILE) -e 's/fact-authentication-source-tool/fact-authentication-source-mongo/' $@
	@-git update-index --assume-unchanged
	@echo "[generator]: generated the '$@' file."
manpage-auto += $(rst-include)/manpage-options-auth-mongo.rst

$(rst-include)/manpage-options-ssl-settings.rst:$(rst-include)/manpage-options-ssl.rst
	@cp $< $@
	@sed $(SED_ARGS_FILE) -e 's/\.\. option:: --/.. setting:: /' \
			      -e 's/setting:: (.*) .*/setting:: \1/' \
			      -e 's/:option:`--/:setting:`/g' $@
	@echo "[generator]: generated the '$@' file."
manpage-auto += $(rst-include)/manpage-options-ssl-settings.rst

generate-manpages:$(manpage-auto)
.PHONY:$(manpages) $(manpage-auto) generate-manpages
