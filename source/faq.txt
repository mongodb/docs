.. meta::
   :robots: noindex, nosnippet 

.. _k8s-faq:

==========================
Frequently Asked Questions
==========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol


.. _faq-k8s-run-mongo:

What is an Operator?
--------------------

An operator is a standard mechanism that extends the control plane of
|k8s| to managing custom |k8s| resources. Because each operator is
built for its own Custom Resources (CRs), it can contain logic that
addresses the type of service that the operator is built for. For the
|k8s-op-short|, the operator includes the logic for the deployment of
MongoDB Server and Ops Manager instances.

Each CR used by the |k8s-op-short| represents an element of a MongoDB 
Server deployment in |k8s|, and has options for customizing that part
of the deployment. Once you configure these objects in the |k8s| 
deployment, the operator builds native |k8s| objects, such as Stateful 
Sets that are necessary to create Pods according to your specified 
requirements for MongoDB Servers. The |k8s-op-short| also facilitates
configuration of MongoDB Server features, such as database backups, 
through interaction with |cloud| or |onprem|.

.. _faq-k8s-advanced:

Why run MongoDB Enterprise Advanced on |k8s|?
--------------------------------------------------

Running MongoDB on |k8s| simplifies the setup and management of self-hosting MongoDB. 

The |k8s-op-short| works with MongoDB and |mms| to automate configuration using 
custom resource files that you create to define your setup. This allows you to 
manage the configuration using whatever tools you already have for managing 
applications in |k8s|, including tools that enable a GitOps workflow where 
configuration is managed in a Git repository. The high level of automation and 
abstraction from complexity makes |k8s| and the |k8s-op-short| especially well 
suited to running MongoDB as a service, either for internal users or external customers.

|k8s| allows MongoDB to take advantage of the scalability and automated resilience 
that |k8s| offers, like the automated replacement of a lost Pod making up 
a replica set or sharded cluster. This allows MongoDB to be highly scalable and 
resilient when running in |k8s|.

.. _faq-k8s-scalability:

How scalable is MongoDB in |k8s|?
--------------------------------------

MongoDB within |k8s| is as scalable as MongoDB on bare metal or VMs. For many 
customers, scalability is easier to achieve within |k8s|. The |k8s-op-short| and |k8s| 
work seamlessly together to enable easy horizontal scaling, including the ability 
to span MongoDB deployments across multiple |k8s| clusters for multi-cluster and 
multi-site resilience. 

Vertical scaling is as easy as changing the resources for a deployment in the 
custom resource that defines it.

All of this allows MongoDB to scale to meet any demands.

.. _faq-k8s-downsides:

Are there any downsides to running MongoDB within |k8s|?
-------------------------------------------------------------

There are no downsides from a technical perspective. MongoDB within |k8s| is as 
performant and scalable as MongoDB running on any hardware or infrastructure. 

But, as with any infrastructure, there is an inherent requirement for customers 
to have familiarity and expertise with the technology, in this case |k8s|. 
While the |k8s-op-short| simplifies and automates the setup of MongoDB within |k8s|, 
there is still a dependency on the underlying resources and capabilities that are 
part of the |k8s| cluster, things like stateful storage, networking, security, 
and compute. This means that customers still need to ensure that those 
services and resources are available and configured correctly to support MongoDB, 
much as this would be needed if running on bare metal or virtual machines.

Which |k8s| platforms are supported for MongoDB Server deployments?
--------------------------------------------------------------------------------

MongoDB Server supports any platform that builds upon native |k8s| without
changing the default logic or behavior. In practice, this means that
MongoDB Server supports any |k8s| platform
`certified by the Cloud Native Computing Foundation <https://www.cncf.io/certification/software-conformance/>`__.
To learn more, see :ref:`MongoDB Kubernetes Operator Compatibility <k8s-compatibility>`.

How many deployments can |k8s-op-full| support?
--------------------------------------------------------------

|k8s-op-short| can support hundreds of deployments. 
To facilitate parallel reconciliation operations and avoid prolonged 
reconciliation times, :ref:`increase thread count of your Kubernetes Operator instance <increase-thread-count-ops-manager>`.

Should I run MongoDB Server in |k8s| in the same cluster as the application using it?
----------------------------------------------------------------------------------------------

To help minimize latency, consider colocating your database and applications on
the same |k8s| cluster if your deployment architecture allows this.

Can I deploy MongoDB Server across multiple |k8s| clusters?
-----------------------------------------------------------------------

Yes. To learn more, see :ref:`Deploy MongoDB Resources on Multiple Kubernetes Clusters <multi-cluster>`.
For help, contact |mdb-support|.

What is the difference between using the |k8s-op-short| for managing |multi-clusters| and  managing a single |k8s| cluster?
-----------------------------------------------------------------------------------------------------------------------------------

To use the |k8s-op-short| for managing a |multi-cluster|, you must set up a specific set of 
|k8s| :k8sdocs:`Roles, ClusterRoles </reference/access-authn-authz/rbac/#role-and-clusterrole>`, 
:k8sdocs:`RoleBindings, ClusterRoleBindings </reference/access-authn-authz/rbac/#rolebinding-and-clusterrolebinding>`,
and :k8sdocs:`ServiceAccounts </tasks/configure-pod-container/configure-service-account/>`.

The |k8s-op-short| used for a |multi-cluster| can also reconcile a single |k8s| cluster resource.
To learn more, see :ref:`faq-many-operators`.

.. _faq-many-operators:

Does MongoDB support running more than one |k8s-op-short| instance?
--------------------------------------------------------------------------------

If possible, we recommend that you set up a single |k8s-op-short| instance to
watch one, many, or all namespaces within your |k8s| cluster. By default,
the |k8s-op-short| watches all |k8s-custom-resource| types that you choose
to deploy, and you don't need to configure it to watch specific resource types.

However, once you reach a :ref:`performance limit <deploy_recommended-number-sets>`
for the number of deployments a single |k8s-op-short| instance can support,
you can set up an additional |k8s-op-short| instance. At this point,
consider how you want to divide up management of resources in the |k8s| cluster.
Use the following recommendations listed in the order of priority:

- Ensure that each |k8s-op-short| instance is watching different and non-overlapping
  namespaces within the |k8s| cluster.
- Alternatively, configure different instances of the |k8s-op-short| to watch
  different resource types, either in different namespaces or overlapping namespaces.
  
  If you choose to use overlapping namespaces, ensure that each |k8s-op-short|
  instance watches different types of resources to avoid conflict that would
  result in two instances of the |k8s-op-short| attempting to manage
  the same resources.

.. note::

   Before you configure another |k8s-op-short| instance, verify that none of its
   namespaces are included in the subset of namespaces for the existing |k8s-op-short| instance.
