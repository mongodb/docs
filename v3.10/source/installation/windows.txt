.. _cpp-installation-windows:

=======================
Installation on Windows
=======================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. facet::
   :name: genre
   :values: reference

Step 1: Choose a C++17 polyfill
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

First, :ref:`choose a C++17 polyfill library <cpp-polyfill-selection>`.

Step 2: Download the latest version of the mongocxx driver
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The most reliable starting point for building the mongocxx driver is the latest
release tarball.

The `mongocxx releases <https://github.com/mongodb/mongo-cxx-driver/releases>`__
page will have links to the release tarball for the version you wish you install.  For
example, to download version {+full-version+}:

.. code-block:: bash

   curl -OL https://github.com/mongodb/mongo-cxx-driver/releases/download/r{+full-version+}/mongo-cxx-driver-r{+full-version+}.tar.gz
   tar -xzf mongo-cxx-driver-r{+full-version+}.tar.gz
   cd mongo-cxx-driver-r{+full-version+}/build

Make sure you change to the ``build`` directory of whatever source tree you
obtain.

Step 3: Configure the driver
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

On Windows, the C++ driver is configured as follows (adjusting the path of the CMake executable as appropriate to your system):

.. code-block:: bash

   'C:\Program Files (x86)\CMake\bin\cmake.exe' .. \
        -G "Visual Studio 14 2015" -A "x64"        \
       -DBOOST_ROOT=C:\local\boost_1_60_0          \
       -DCMAKE_INSTALL_PREFIX=C:\mongo-cxx-driver

The example above assumes:

- Boost is found in ``C:\local\boost_1_60_0``.
- ``mongocxx`` is to be installed into ``C:\mongo-cxx-driver``.

To build with Visual Studio 2017 without a C++17 polyfill, configure as follows:

.. code-block:: bash

   'C:\Program Files (x86)\CMake\bin\cmake.exe' .. \
       -G "Visual Studio 15 2017" -A "x64"         \
       -DCMAKE_CXX_STANDARD=17                     \
       -DCMAKE_INSTALL_PREFIX=C:\mongo-cxx-driver  \

Configuring with ``mongocxx`` 3.7.0 and Older
`````````````````````````````````````````````

To build versions 3.7.0 and older without a C++17 polyfill, it is necessary to
configure with additional options:

- ``/Zc:__cplusplus`` to opt into the correct definition of ``__cplusplus`` (`problem described here <https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-__cplusplus/>`__)
- ``/EHsc`` to enable recommended `exception handling behavior <https://learn.microsoft.com/en-us/cpp/build/reference/eh-exception-handling-model?view=msvc-170>`__.

.. code-block:: bash

   'C:\Program Files (x86)\CMake\bin\cmake.exe' .. \
       -G "Visual Studio 15 2017" -A "x64"         \
       -DCMAKE_CXX_STANDARD=17                     \
       -DCMAKE_CXX_FLAGS="/Zc:__cplusplus /EHsc"   \
       -DCMAKE_INSTALL_PREFIX=C:\mongo-cxx-driver  \

Configuring with ``mongocxx`` 3.1.x or 3.0.x
`````````````````````````````````````````````

.. code-block:: bash

   cmake ..                                            \
       -DLIBMONGOC_DIR=C:\mongo-c-driver               \
       -DCMAKE_INSTALL_PREFIX=C:\mongo-cxx-driver

Step 4: Build and install the driver
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Build and install the driver. Use ``--config`` to select a build configuration (e.g. ``Debug``, ``RelWithDebInfo``, ``Release``):

.. code-block:: bash

   cmake --build . --config RelWithDebInfo
   cmake --build . --target install --config RelWithDebInfo

The driver can be uninstalled at a later time in one of two ways.  First,
the uninstall target can be called:

.. code-block:: bash

   cmake --build . --target uninstall

Second, the uninstall script can be called:

.. code-block:: none

   C:\opt\mongo-cxx-driver\share\mongo-cxx-driver\uninstall.cmd
