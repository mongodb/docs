=========
moveChunk
=========

.. default-domain:: mongodb

.. dbcommand:: moveChunk

   :dbcommand:`moveChunk` is an internal administrative command that
   moves :term:`chunks <chunk>` between :term:`shards <shard>`.  You
   must issue the :dbcommand:`moveChunk` command via a
   :program:`mongos` instance while using the :term:`admin database`
   in the following form:

   .. code-block:: javascript

      db.runCommand( { moveChunk : <namespace> ,
                       find : <query> ,
                       to : <destination>,
                       <options> } )

   :param string moveChunk:

      The name of the :term:`collection` where the :term:`chunk`
      exists. Specify the collection's full namespace, including the
      database name.

   :param document find:

      A document that specifies an equality match on the shard key
      that will move the chunk that contains the specified shard-key
      value. 

      You may specify either ``bounds`` or ``find`` but not both.

   :param array bounds:

      Specify the bounds of a specific chunk to move.  The array must
      consist of two documents specifying the lower and upper shard key
      values of a chunk to move. 

      You may specify either ``bounds`` or ``find`` but not both.

      Use ``bounds`` to move chunks in collections partitioned using
      a :term:`hashed shard key`.

   :param string to:

      The name of the destination shard for the chunk.

   :param boolean _secondaryThrottle:

      Optional; ``true`` by default.  When ``true``, the
      balancer waits for replication to :term:`secondaries
      <secondary>` while copying and deleting data during
      migrations. For details, see
      :ref:`sharded-cluster-config-secondary-throttle`.

   The :ref:`chunk migration <sharding-chunk-migration>` section
   describes how chunks move between shards on MongoDB.

   :dbcommand:`moveChunk` returns the following message if another
   metadata operation is in progress :data:`~config.chunks` collection:

   .. code-block:: none

      errmsg: "The collection's metadata lock is already taken."

   If another process, such as a balancer process, changes meta data
   while :dbcommand:`moveChunk` is running, you may see this
   error. You may retry the :dbcommand:`moveChunk` operation without
   side effects. 

   .. note::

      Only use the :dbcommand:`moveChunk` in special circumstances
      such as preparing your :term:`sharded cluster` for an initial
      ingestion of data, or a large bulk import operation.
      In most cases allow the balancer to create and balance chunks
      in sharded clusters.
      See
      :ref:`sharding-administration-create-chunks` for more information.

   .. admin-only

   .. seealso:: :dbcommand:`split`, :method:`sh.moveChunk()`,
      :method:`sh.splitAt()`, and :method:`sh.splitFind()`.

