.. _vsce-settings:

=======================
|vscode-short| Settings
=======================

.. meta::
   :description: Explore configurable settings for the VS Code Extension, including shell selection, view options, problem limits, and connection saving preferences.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

This document lists the configurable settings for |vsce|.

Configure Settings
------------------

To configure |vsce| settings:

.. include:: /includes/steps/configure-settings.rst

Settings
--------

The following table lists the available settings for 
|vsce|:

.. list-table::
   :widths: 25 45 30
   :header-rows: 1
   
   * - Setting
     - Description
     - Default

   * - :guilabel:`Shell`
     - MongoDB shell to use. Choose either:
       
       - ``mongo`` (the legacy MongoDB shell), or

       - ``mongosh`` (the new MongoDB shell)

       .. include:: /includes/admonitions/warn-configure-path.rst

     - ``mongosh``

   * - :guilabel:`Show`
     - If enabled, shows the MongoDB view in the Visual Studio Code 
       left navigation panel.
     - Enabled

   * - :guilabel:`Max Number of Problems`
     - The maximum number of problems |vsce| will generate 
       in the Visual Studio Code :guilabel:`Problems` view.
     - ``100``

   * - :guilabel:`Trace: Server`
     - MongoDB language server logging settings. 
     
       Edit this setting through the 
       ``mongodbLanguageServer.trace.server`` property in your project's
       ``settings.json`` file. 

       Within the ``mongodbLanguageServer.trace.server`` object, you 
       can specify:

       - ``format``, and

       - ``verbosity``
       
       Output logs are viewable by selecting 
       :guilabel:`MongoDB Language Server` from the dropdown in the 
       :guilabel:`Output` view, or with the 
       `Language Server Protocol Inspector <https://github.com/Microsoft/language-server-protocol-inspector>`__.

     - .. code-block:: json

          {
            "format": "json",
            "verbosity": "verbose"
          }

   * - :guilabel:`Confirm Run All`
     - If enabled, shows a confirmation message before running 
       commands in a playground.
     - Enabled

   * - :guilabel:`Default Connection Saving Location`
     - Sets if and where new connections are saved.

       You can select:
       
       .. include:: /includes/connection-location-table.rst

     - ``Global``

   * - :guilabel:`Hide Option To Choose Where To Save New Connections`
     - If disabled, you are prompted to choose where to save each new 
       connection. 
       
       If enabled, new connections are automatically saved to the 
       :guilabel:`Default Connection Saving Location` without prompt.
     - Enabled

   * - :guilabel:`Default Limit`
     - Number of documents to fetch when viewing documents from a 
       collection. Does not affect playground operations.
     - ``10``

   * - :guilabel:`Preset Connections`
     - Specifies a preset list of connections. Use this setting to share 
       connection configurations in a workspace or global scope.
     
       Edit the ``mdb.presetConnection`` property in your project's 
       ``settings.json`` file. 

       Within the ``mdb.presetConnections`` object, you 
       can specify:

       - A ``name`` for the connection.
       - A ``connectionString`` for your deployment.

       :red:`WARNING:` Do not store sensitive credentials in this setting. 
       Connection strings are stored in plain text, so they can be easily 
       accessed.

     - .. code-block:: json
      
          [
             {
                "name": "Preset Connection",
                "connectionString": "mongodb://localhost:27017"
             }
          ]

   * - :guilabel:`Send Telemetry`
     - If enabled, allows the collection of anonymous diagnostic and 
       usage telemetry data to help improve |vsce|.
     - Enabled

   * - :guilabel:`Use Default Template For Playground`
     - If enabled, playground files load with a template containing
       sample commands.

       If disabled, playground files load with an empty playground
       editor.
     - Enabled

   * - :guilabel:`MCP: Server`

       .. _vsce-setting-mcp-server:

     - Controls whether the :ref:`MongoDB MCP server <vsce-mcp-server>` starts
       automatically when VS Code opens and connects to the active connection.

       - If set to ``ask``, the extension starts the MCP server automatically
         and then asks if you want to keep this behavior. If the setting remains
         as ``ask``, this notification appears each time you start VS Code.
       - If enabled, the server starts automatically when VS Code opens.
       - If disabled, the server does not start automatically and 
         you must start the server manually by using the
         :ref:`Start MCP Server <vsce-cmd-mcp-start>` command.

       .. note::

          The first time the server starts automatically, VS Code displays
          a notification asking if you want to keep this behavior. Your
          choice automatically updates this setting.

          When the MCP server is not running, use 
          the :ref:`MongoDB: Start MCP Server <vsce-cmd-mcp-start>`
          command to start the MCP server immediately.

     - ``ask``

   * - :guilabel:`MCP: Api Base URL`
     - If you're using a custom Atlas deployment, specify the API URL
       used by the MongoDB MCP server that enables Atlas MCP tools.
     - ``https://cloud.mongodb.com/``

   * - :guilabel:`MCP: Api Client ID`
     - Atlas API client ID for authenticating against the Atlas API. Use a
       Service Account for programmatic access to Atlas APIs. Required
       for enabling Atlas tools in MongoDB MCP server.
       Store your ID securely and do not commit it to version control.
       
       To learn more, see :ref:`mcp-server-configuration-atlas-api-credentials`.

     - Empty

   * - :guilabel:`MCP: Api Client Secret`
     - Atlas API client secret for authenticating against the Atlas API. Use a
       Service Account for programmatic access to Atlas APIs. Required
       for enabling Atlas tools in MongoDB MCP server.
       Store this securely and do not commit to version control.

       To learn more, see :ref:`mcp-server-configuration-atlas-api-credentials`.

     - Empty

   * - :guilabel:`MCP: Disabled Tools`
     - Tool names, operation types (``create``, ``update``, ``delete``,
       ``read``, ``metadata``), or categories (``atlas``, ``mongodb``)
       to disable when using the MongoDB MCP server.
     - Empty
     
   * - :guilabel:`MCP Export Cleanup Interval Ms`
     - How often (in milliseconds) the MongoDB MCP server runs the export cleanup
       process to remove expired files. Default is 2
       minutes (120000ms).
     - ``120000``


   * - :guilabel:`MCP Exports Path`
     - The directory where the MongoDB MCP server exports data when
       using the export tool. Ensure that the path is available for
       writes or leave this setting empty to use the default path
       based on your operating system.

       Default paths:

       - Windows: ``%LOCALAPPDATA%\mongodb\mongodb-mcp\exports``
       - macOS and Linux: ``~/.mongodb/mongodb-mcp/exports``
       
     - Empty

   * - :guilabel:`MCP Export Timeout Ms`
     - The maximum time in milliseconds an export operation can run 
       before MongoDB MCP server terminates it. Default is 5 minutes (300000ms).
     - ``300000``

   * - :guilabel:`MCP Index Check`
     - When enabled, the MongoDB MCP server enforces that query operations must
       use an index, and rejects queries that perform a collection scan. This
       helps prevent performance issues in production environments.
     - Disabled

   * - :guilabel:`MCP: Read Only`
     - When enabled, the MongoDB MCP server only allows read, connect,
       and metadata operation types. Create, update, and delete operations are disabled.
     - Disabled
