=====
$near
=====

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. query:: $near

   Specifies a point for which a :term:`geospatial` query returns the
   documents from nearest to farthest. The :query:`$near` operator can
   specify either a :term:`GeoJSON` point or legacy coordinate point.

   :query:`$near` requires a geospatial index:

   - :doc:`2dsphere </core/2dsphere>` index if specifying a
     :term:`GeoJSON` point,

   - :doc:`2d </core/2d>` index if specifying a point using legacy
     coordinates.

   To specify a :term:`GeoJSON` point, :query:`$near` operator requires
   a :doc:`2dsphere </core/2dsphere>` index and has the following
   syntax:

   .. code-block:: javascript

      {
         <location field>: {
           $near: {
             $geometry: {
                type: "Point" ,
                coordinates: [ <longitude> , <latitude> ]
             },
             $maxDistance: <distance in meters>,
             $minDistance: <distance in meters>
           }
         }
      }

   .. include::  /includes/extracts/geospatial-long-lat-values.rst

   When specifying a :term:`GeoJSON` point, you can use the *optional*
   :query:`$minDistance` and :query:`$maxDistance` specifications to
   limit the :query:`$near` results by distance in *meters*:

   - :query:`$minDistance` limits the results to those documents that
     are *at least* the specified distance from the center point.

   - :query:`$maxDistance` limits the results to those documents that
     are *at most* the specified distance from the center point.

   To specify a point using legacy coordinates, :query:`$near` requires
   a :doc:`2d </core/2d>` index and has the following syntax:

   .. code-block:: javascript

      {
        $near: [ <x>, <y> ],
        $maxDistance: <distance in radians>
      }

   When specifying a legacy coordinate, you can use the *optional*
   :query:`$maxDistance` specification to limit the :query:`$near`
   results by distance in *radians*. :query:`$maxDistance` limits the
   results to those documents that are *at most* the specified distance
   from the center point.

Behavior
--------

Special Indexes Restriction
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-geo-near-special-indexes.rst

Sharded Collections
~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-near-sharded-cluster.rst

Sort Operation
~~~~~~~~~~~~~~

.. include:: /includes/fact-geo-near-returns-sorted-results.rst

.. |geo-operation| replace:: :query:`$near`

.. seealso::

   :ref:`3.0-geo-near-compatibility`


Examples
--------

Query on GeoJSON Data
~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/example-near-minDistance.rst

Query on Legacy Coordinates
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. important::
   .. include::  /includes/extracts/geospatial-long-lat-values.rst

Consider a collection ``legacy2d`` that has a ``2d`` index.

The following example returns documents that are at most ``0.10``
radians from the specified legacy coordinate pair, sorted from nearest
to farthest:

.. code-block:: javascript

   db.legacy2d.find(
      { location : { $near : [ -73.9667, 40.78 ], $maxDistance: 0.10 } }
   )
