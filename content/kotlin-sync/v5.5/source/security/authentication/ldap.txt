.. _kotlin-sync-auth-ldap:

===========================
LDAP (PLAIN) Authentication
===========================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: ldap, enterprise, plain, authentication

Overview
--------

You can authenticate to a Lightweight Directory Access Protocol (LDAP)
server by using your directory server username and password.

.. tip:: PLAIN Authentication

   The authentication mechanism is named ``PLAIN`` instead of ``LDAP`` because
   the driver authenticates by using the ``PLAIN`` Simple Authentication and Security Layer
   (SASL) defined in `RFC-4616 <https://tools.ietf.org/html/rfc4616>`_.

Specify LDAP Authentication
---------------------------

The examples in this section show how to specify ``LDAP`` authentication
by using either a connection string or the ``MongoCredential`` class. Replace
the following placeholder values:

- ``<LDAP username>``: Your LDAP username.
- ``<password>``: Your LDAP password.
- ``<hostname>``: The network address of your MongoDB deployment, accessible by your client.
- ``<port>``: The port number of your MongoDB deployment. If you omit this parameter,
  the driver uses the default port number (``27017``).

Select the :guilabel:`Connection String` or the :guilabel:`MongoCredential`
tab below for instructions and sample code for specifying this authentication
mechanism:

.. tabs::

   .. tab:: Connection String
      :tabid: connection-string

      To specify the ``LDAP`` authentication mechanism by using a connection
      string:

      - Assign the ``authMechanism`` URL parameter to the value ``PLAIN``
      - *(Optional)* Assign the ``authSource`` URL parameter to the value ``$external``

      .. note::

         If you specify the ``PLAIN`` mechanism, you cannot assign
         ``authSource`` to any value other than ``$external``.

      The following code specifies the authentication mechanism in
      a connection string:

      .. literalinclude:: /includes/security/enterprise-auth.kt
         :language: kotlin
         :dedent:
         :start-after: start-ldap-connect-string 
         :end-before: end-ldap-connect-string

   .. tab:: MongoCredential
      :tabid: mongo-credential

      To specify the ``LDAP`` authentication mechanism by using the
      ``MongoCredential`` class, use the ``createPlainCredential()``
      method as shown in the following example:

      .. literalinclude:: /includes/security/enterprise-auth.kt
         :language: kotlin
         :dedent:
         :start-after: start-ldap-mongo-cred
         :end-before: end-ldap-mongo-cred

Additional Information
----------------------

To learn more about authenticating to MongoDB, see
:manual:`Authentication </core/authentication/>` in the {+mdb-server+} manual.

To learn more about creating a ``MongoClient`` object by using the
{+driver-short+}, see the :ref:`kotlin-sync-mongoclient` guide.

API Documentation
-----------------

To learn more about the classes and methods for authenticating your application 
with {+driver-short+}, see the following API documentation:

- `MongoClient.create() <{+driver-api+}/-mongo-client/-factory/index.html>`__
- `MongoClient <{+driver-api+}/-mongo-client/index.html>`__
- `MongoClientSettings.Builder <{+core-api+}/MongoClientSettings.Builder.html>`__
- `MongoCredential <{+core-api+}/MongoCredential.html>`__
