# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: 2013-12-16 23:05+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/reference/operator/update/max.txt:3
msgid "$max"
msgstr ""

#: ../source/reference/operator/update/max.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/operator/update/max.txt:18
msgid ""
"The :update:`$max` operator updates the value of the field to a specified"
" value *if* the specified value is **greater than** the current value of "
"the field. The :update:`$max` operator can compare values of different "
"types, using the :ref:`BSON comparison order <faq-dev-compare-order-for-"
"BSON-types>`."
msgstr ""

#: ../source/reference/operator/update/max.txt:24
msgid "The :update:`$max` operator expression has the form:"
msgstr ""

#: ../source/includes/use-dot-notation.rst:1
msgid ""
"To specify a ``<field>`` in an embedded document or in an array, use "
":ref:`dot notation <document-dot-notation>`."
msgstr ""

#: ../source/reference/operator/update/max.txt:33
msgid "Behavior"
msgstr ""

#: ../source/reference/operator/update/max.txt:35
msgid ""
"If the field does not exists, the :update:`$max` operator sets the field "
"to the specified value."
msgstr ""

#: ../source/reference/operator/update/max.txt:39
msgid "Examples"
msgstr ""

#: ../source/reference/operator/update/max.txt:42
msgid "Use ``$max`` to Compare Numbers"
msgstr ""

#: ../source/reference/operator/update/max.txt:44
msgid "Consider the following document in the collection ``scores``:"
msgstr ""

#: ../source/reference/operator/update/max.txt:50
msgid ""
"The ``highScore`` for the document currently has the value ``800``. The "
"following operation uses :operator:`$max` to compare the ``800`` and the "
"specified value ``950`` and updates the value of ``highScore`` to ``950``"
" since ``950`` is greater than ``800``:"
msgstr ""

#: ../source/reference/operator/update/max.txt:59
msgid "The ``scores`` collection now contains the following modified document:"
msgstr ""

#: ../source/reference/operator/update/max.txt:65
msgid ""
"The next operation has no effect since the current value of the field "
"``highScore``, i.e. ``950``, is greater than ``870``:"
msgstr ""

#: ../source/reference/operator/update/max.txt:72
msgid "The document remains unchanged in the ``scores`` collection:"
msgstr ""

#: ../source/reference/operator/update/max.txt:79
msgid "Use ``$max`` to Compare Dates"
msgstr ""

#: ../source/reference/operator/update/max.txt:81
msgid "Consider the following document in the collection ``tags``:"
msgstr ""

#: ../source/reference/operator/update/max.txt:92
msgid ""
"The following operation compares the current value of the ``dateExpired``"
" field, i.e. ``ISODate(\"2013-10-01T16:38:16.163Z\")``, with the "
"specified date ``new Date(\"2013-09-30\")`` to determine whether to "
"update the field:"
msgstr ""

#: ../source/reference/operator/update/max.txt:105
msgid "The operation does *not* update the ``dateExpired`` field:"
msgstr ""

#: ../source/reference/operator/update/max.txt:117
msgid ":method:`db.collection.update()`, :method:`db.collection.findAndModify()`"
msgstr ""

# 15f4a061e6674b23b563a2704ff16795
#~ msgid ""
#~ "The :update:`$max` operator updates the "
#~ "value of the field to a specified"
#~ " value *if* the specified value is"
#~ " **greater than** the current value "
#~ "of the field. If the field does"
#~ " not exists, the :update:`$max` operator"
#~ " sets the field to the specified "
#~ "value. The :update:`$max` operator can "
#~ "compare values of different types, using"
#~ " the :ref:`BSON comparison order <faq-"
#~ "dev-compare-order-for-BSON-types>`."
#~ msgstr ""

