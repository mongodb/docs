.. _restore-http-point:

====================================================
Restore from a Specific Point-in-Time using ``HTTP``
====================================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

To restore a snapshot using ``HTTP``, the :term:`Backup Daemon` creates
and displays a download link in |mms| to the appropriate snapshot in
snapshot storage.

After clicking the download link, |mms| streams the snapshot archive to
the target snapshot host.

.. note::
   PIT restores include points in time, oplog timestamps, and
   checkpoints.

.. include:: /images/restore-pit-http.rst

1. The user selects a timestamp:

   - Through the |mms| application:

     1. Click on a timestamp.
     #. Submit their request.

   - Through the :doc:`API </reference/api/restorejobs/get-one-single-restore-job-for-one-cluster>`:

     1. Find the cluster to restore.
     #. :doc:`Create new Restore Job </reference/api/restorejobs/create-one-restore-job-for-one-cluster>`
        for that cluster.

#. |mms| creates a RestoreJob document.

#. The :term:`Backup Daemon` service picks up the RestoreJob document
   and adds certain fields to that job document including a pull
   verification key.

#. The :term:`Backup Daemon` service sets the status of this Restore
   Job to :guilabel:`Waiting for Customer...`.

#. With this key in place and the status set to
   :guilabel:`Waiting for Customer...`, |mms| creates a URL.

#. The user clicks the :guilabel:`get link` link, then
   :guilabel:`Download` in the |mms| application to download the
   :term:`snapshot`.

#. |mms| sets the RestoreJob status to :guilabel:`Transferring...` and
   starts streaming the :term:`snapshot` in the requested format from
   the Snapshot Store to the target snapshot host.

   a. The :term:`Blockstore <Backup Blockstore Database>` streams the
      Blocks that comprise the snapshot through |mms|.
   #. The :term:`S3 Snapshot Store` streams the Blocks that comprise the
      snapshot through |mms|.
   #. The :term:`File System Store` streams the Files that comprise the
      snapshot through |mms|.

#. The user downloads the MongoDB Backup Restore Utility from the |mms|
   application to the target snapshot host.

   .. note::
      The :abbr:`MBRU (MongoDB Backup Restore Utility)` is not unique to
      each restore. If the utility is installed on the host where the
      snapshot will be restored, the user does not need to download it
      again.

#. The user starts a temporary MongoDB instance on the target snapshot
   host. The fetched :term:`oplog` will be applied to the snapshot
   restored to this instance.

#. The user runs the :abbr:`MBRU (MongoDB Backup Restore Utility)` to
   request the :term:`oplog`.

#. The :abbr:`MBRU (MongoDB Backup Restore Utility)` fetches the oplog
   for the point-in-time snapshot.

#. The :abbr:`MBRU (MongoDB Backup Restore Utility)` applies the oplog
   to snapshot in the temporary MongoDB instance.

#. The user exports the restored database from the temporary MongoDB
   instance.
