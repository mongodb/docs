=========
$addToSet
=========

.. default-domain:: mongodb

Definition
----------

.. update:: $addToSet

   The :update:`$addToSet` operator adds a value to an array only *if* the
   value is *not* already in the array. If the value *is* in the
   array, :update:`$addToSet` does not modify the
   array.

   .. code-block:: javascript

      db.collection.update( <query>, { $addToSet: { <field>: <value> } } );

   For example, if a collection ``inventory`` has the following document:

   .. code-block:: javascript

      { _id: 1, item: "filter", tags: [ "electronics", "camera" ] }

   The following operation adds the element ``"accessories"`` to the ``tags``
   array since ``"accessories"`` does not exist in the array:

   .. code-block:: javascript

      db.inventory.update(
                           { _id: 1 },
                           { $addToSet: { tags: "accessories"  } }
                         )


   However, the following operation has no effect as ``"camera"`` is already
   an element of the ``tags`` array:

   .. code-block:: javascript

      db.inventory.update(
                           { _id: 1 },
                           { $addToSet: { tags: "camera"  } }
                         )

Behavior
--------

- :update:`$addToSet` only ensures that there are no duplicate
  items *added* to the set and does not affect existing duplicate
  elements. :update:`$addToSet` does not guarantee a particular
  ordering of elements in the modified set.

- If the field is absent in the document to update,
  :update:`$addToSet` adds the array field with the value as
  its element.

- If the field is **not** an array, the operation will fail.

- If the value is an array, :update:`$addToSet` appends the whole
  array as a *single* element. To add each element of the value
  separately, use :update:`$addToSet` with the :update:`$each`
  modifier. See :ref:`addToSet-modifiers` for details.

- If the value is an object, MongoDB will perform a deep comparison of
  the object against the elements in the array to determine whether the
  object is a duplicate or not; i.e. you cannot specify that MongoDB
  compare only a subset of the fields in the document to determine
  whether to add the object to the array.

.. _addToSet-modifiers:

Modifiers
---------

You can use the :update:`$addToSet` operator with the
:update:`$each` modifier. The :update:`$each` modifier allows to
:update:`$addToSet` operator to add multiple values to the array
field.

.. include:: /includes/example-addToSet-each.rst

.. seealso:: :update:`$push`
