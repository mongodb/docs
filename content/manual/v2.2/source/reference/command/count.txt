=====
count
=====

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. dbcommand:: count

   The :dbcommand:`count` command counts the number of documents in a
   collection. The command returns a document that contains the count
   as well as the command status. The :dbcommand:`count` command takes
   the following prototype form:

   .. code-block:: javascript

      { count: <collection>, query: <query>, limit: <limit>, skip: <skip> }

   The command fields are as follows:

   :field String count:

          The name of the collection to count.

   :field document query:

          Optional. Specifies the selection query to determine which
          documents in the collection to count.

   :field integer limit:

          Optional. Specifies the limit for the documents matching the
          selection ``query``.

   :field integer skip:
          Optional. Specifies the number of matching documents to skip.

   Consider the following examples of the :dbcommand:`count` command:

   - Count the number of all documents in the ``orders`` collection:

     .. code-block:: javascript

        db.runCommand( { count: 'orders' } )

     In the result, the ``n``, which represents the count, is ``26``
     and the command status ``ok`` is ``1``:

     .. code-block:: javascript

        { "n" : 26, "ok" : 1 }

   - Count the number of the documents in the ``orders`` collection
     with the field ``ord_dt`` greater than ``new Date('01/01/2012')``:

     .. code-block:: javascript

        db.runCommand( { count:'orders',
                         query: { ord_dt: { $gt: new Date('01/01/2012') } }
                       } )

     In the result, the ``n``, which represents the count, is ``13``
     and the command status ``ok`` is ``1``:

     .. code-block:: javascript

        { "n" : 13, "ok" : 1 }

   - Count the number of the documents in the ``orders`` collection
     with the field ``ord_dt`` greater than ``new Date('01/01/2012')``
     skipping the first ``10`` matching records:

     .. code-block:: javascript

        db.runCommand( { count:'orders',
                         query: { ord_dt: { $gt: new Date('01/01/2012') } },
                         skip: 10 }  )

     In the result, the ``n``, which represents the count, is ``3`` and
     the command status ``ok`` is ``1``:

     .. code-block:: javascript

        { "n" : 3, "ok" : 1 }

   .. note::

      MongoDB also provides the :method:`cursor.count()`
      method and the shell wrapper :method:`db.collection.count()`
      method.

   .. read-lock
