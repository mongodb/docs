.. _bson-data-types-geo:

============================
How to Index GeoJSON Objects 
============================

.. default-domain:: mongodb

.. meta::
   :description: Use the Atlas Search geo field type to include GeoJSON polygon, MultiPolygon, LineString shape or point values in the search index.

.. :keywords: geo, geo field type, atlas search field type, GeoJSON object, index GeoJSON objects, index GeoJSON polygon shape, index GeoJSON multipolygon shape, index GeoJSON linestring, index GeoJSON Point

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. |data-type| replace:: GeoJSON object
.. |fts-ui-field-type| replace:: :guilabel:`Geo`
.. |fts-field-type| replace:: ``geo``
.. |properties-link| replace:: :ref:`Field Properties <fts-field-types-geo-options>` 
.. |sample-collection| replace:: :ref:`sample_airbnb.listingsAndReviews <sample-airbnb>`

You can use the |fts| ``geo`` type to index geographic points and shape
coordinates. For this type, the indexed field must be a :manual:`GeoJSON
</reference/geojson/>` object. You can use the :ref:`geoshape-ref` and
:ref:`geowithin-ref` operators to query indexed fields of type ``geo``.

.. include:: /includes/fts/extracts/fts-ib-static-mappings.rst

.. _fts-field-types-geo-vib-jsonib:

Define the Index for the |fts-field-type| Type  
----------------------------------------------

.. include:: /includes/fts/extracts/fts-index-definition-intro.rst  

.. tabs:: 

   .. tab:: Visual Editor 
      :tabid: vib

      .. include:: /includes/fts/extracts/fts-vib-index-definition-advanced.rst  

   .. tab:: JSON Editor 
      :tabid: jsonib

      .. include:: /includes/fts/extracts/fts-jsonib-index-definition.rst  

      .. code-block:: json 
         :emphasize-lines: 6-7

         {
           "mappings": {
             "dynamic": false,
             "fields": {
               "<field-name>": {
                 "indexShapes": true|false,
                 "type": "geo"
               }
             }
           }
         }

.. _fts-field-types-geo-options:

Configure |fts-field-type| Field Properties 
-------------------------------------------

The |fts| ``geo`` type takes the following parameters:

.. list-table::
   :widths: 15 10 10 55 10
   :header-rows: 1

   * - Option
     - Type 
     - Necessity
     - Description
     - Default

   * - ``type``
     - string 
     - Required
     - Human-readable label that identifies this field type.
       UI value must be ``Geo`` and |json| value must be ``geo``. 
     - 

   * - ``indexShapes`` 
     - boolean 
     - Optional
     - Flag that indicates whether to index shapes. By default, |fts|: 

       - Indexes points, even when nested.
       - Doesn't index shape geometries such as lines and polygons.

       Value can be: 

       - ``true`` to index shapes and points 
       - ``false`` to index only points

     - ``false``

.. _fts-field-types-geo-egs:

Try an Example for the |fts-field-type| Type  
--------------------------------------------

.. include:: /includes/fts/extracts/fts-index-definition-egs-intro.rst

The following index definition indexes the ``address.location`` field as
the ``geo`` type to support queries against that field using the |fts|
:ref:`geoshape-ref` and :ref:`geowithin-ref` operators. 

.. tabs::

   .. tab:: Visual Editor 
      :tabid: vib

      1. In the :guilabel:`Add Field Mapping` window, select
         :guilabel:`address.location` from the :guilabel:`Field Name`
         dropdown. 
      #. Click the :guilabel:`Data Type` dropdown and select
         :guilabel:`Geo`.
      #. Modify the :guilabel:`Geo Properties` to set the value for 
         :guilabel:`Index Shapes` to ``true``.
      #. Click :guilabel:`Add`. 

   .. tab:: JSON Editor 
      :tabid: jsonib

      Replace the default index definition with the following index
      definition. 

      .. code-block:: json
         :linenos:

         {
           "mappings": {
             "fields": {
               "address": {
                 "type": "document",
                 "fields": {
                   "location": {
                     "indexShapes": true,
                     "type": "geo"
                   }
                 }
               }
             }
           }
         }

Learn More
----------

To learn more about the operators you can use to query the ``geo`` type, see the following operator reference pages:

- :ref:`geoshape-ref`
- :ref:`geowithin-ref`

