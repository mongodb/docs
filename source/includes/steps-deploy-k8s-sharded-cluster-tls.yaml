---
title: "Copy the following example :term:`sharded cluster` |k8s| |k8s-obj| specification."
stepnum: 1
level: 4
ref: copy-k8s-example-tls-sc
content: |

   This is a |yaml| file that you can modify to meet your desired
   configuration. Change the highlighted settings to match your desired
   :term:`sharded cluster` configuration.

   .. literalinclude:: /reference/k8s/example-sharded-cluster-tls.yaml
      :language: yaml
      :emphasize-lines: 5-7,9-16,19-27

---
stepnum: 2
level: 4
ref: paste-k8s-example-tls-sc
source:
  file: steps-deploy-k8s-sharded-cluster.yaml
  ref: paste-k8s-example
---
title: "Configure the settings highlighted in the preceeding step as follows."
stepnum: 3
level: 4
ref: change-k8s-values-tls-sc
source:
  file: steps-deploy-k8s-sharded-cluster.yaml
  ref: change-k8s-values
---
title: "If you wish to enable TLS on your sharded cluster, add the TLS settings to the ConfigMap."
stepnum: 4
level: 4
ref: add-tls-settings-sc
source:
  file: steps-deploy-k8s-replica-set-tls.yaml
  ref: add-tls-settings
replacement:
  example: |
    The following example |k8s-configmap| configures a replica set to use
    |tls|:

    .. literalinclude:: /reference/k8s/example-sharded-cluster-tls.yaml
       :language: yaml
       :emphasize-lines: 19-25
---
title: "Add any additional accepted settings for a :term:`sharded cluster` deployment."
stepnum: 5
level: 4
ref: add-k8s-values-tls-sc
source:
  file: steps-deploy-k8s-sharded-cluster.yaml
  ref: add-k8s-values
---
stepnum: 6
level: 4
ref: save-object-spec-tls-sc
source:
  file: steps-deploy-k8s-sharded-cluster.yaml
  ref: save-object-spec
---
title: "Start your :term:`sharded cluster` deployment."
stepnum: 7
level: 4
ref: start-k8s-sharded-cluster-tls-sc
content: |

   Invoke the following |k8s| command to create your
   :term:`sharded cluster`:

   .. code-block:: sh

      kubectl apply -f <sharded-cluster-conf>.yaml

---
title: "Check the status of your deployment."
stepnum: 8
level: 4
ref: check-k8s-deployment-tls-sc
source:
  file: steps-deploy-k8s-replica-set-tls.yaml
  ref: check-k8s-deployment-tls-rs
---
title: "Approve the certificate for each host in your deployment."
stepnum: 9
level: 4
ref: approve-certificates-tls
content: |

  Retrieve the |csrs| for each host by running the following command:

  .. code-block:: sh

     kubectl get csr

  The output of the command and number of certificates to approve
  depend on whether X.509 internal cluster authentication is enabled by
  setting :setting:`spec.security.authentication.internalCluster` to
  ``x509`` in step 4.

  .. tabs::

     tabs:
       - id: x509disabled
         name: X.509 Disabled
         content: |
           The command's output resembles the following:

           .. code-block:: sh

              NAME                                       AGE       REQUESTOR                                                   CONDITION
              my-secure-sc-0-0.mongodb                   30s       system:serviceaccount:mongodb:mongodb-enterprise-operator   Pending
              my-secure-sc-0-1.mongodb                   28s       system:serviceaccount:mongodb:mongodb-enterprise-operator   Pending
              my-secure-sc-0-2.mongodb                   27s       system:serviceaccount:mongodb:mongodb-enterprise-operator   Pending
              my-secure-sc-1-0.mongodb                   22s       system:serviceaccount:mongodb:mongodb-enterprise-operator   Pending
              my-secure-sc-1-1.mongodb                   13s       system:serviceaccount:mongodb:mongodb-enterprise-operator   Pending
              my-secure-sc-1-2.mongodb                   6s        system:serviceaccount:mongodb:mongodb-enterprise-operator   Pending
              my-secure-sc-config-0.mongodb              36s       system:serviceaccount:mongodb:mongodb-enterprise-operator   Pending
              my-secure-sc-config-1.mongodb              34s       system:serviceaccount:mongodb:mongodb-enterprise-operator   Pending
              my-secure-sc-config-2.mongodb              32s       system:serviceaccount:mongodb:mongodb-enterprise-operator   Pending
              my-secure-sc-mongos-0.mongodb              49s       system:serviceaccount:mongodb:mongodb-enterprise-operator   Pending
              my-secure-sc-mongos-1.mongodb              42s       system:serviceaccount:mongodb:mongodb-enterprise-operator   Pending

           Using the ``NAME`` field above, approve each certificate from the
           previous command's output using the following command:

           .. code-block:: sh

              kubectl certificate approve <NAME>

           .. example::

              The following commands approve the certificates for the
              replica set example in the previous step:

              .. code-block:: sh
                 :copyable: false

                 kubectl certificate approve my-secure-sc-0-0.mongodb
                 kubectl certificate approve my-secure-sc-0-1.mongodb
                 kubectl certificate approve my-secure-sc-0-2.mongodb
                 kubectl certificate approve my-secure-sc-1-0.mongodb
                 kubectl certificate approve my-secure-sc-1-1.mongodb
                 kubectl certificate approve my-secure-sc-1-2.mongodb
                 kubectl certificate approve my-secure-sc-config-0.mongodb
                 kubectl certificate approve my-secure-sc-config-1.mongodb
                 kubectl certificate approve my-secure-sc-config-2.mongodb
                 kubectl certificate approve my-secure-sc-mongos-0.mongodb
                 kubectl certificate approve my-secure-sc-mongos-1.mongodb

           |kubectl| prints a message to the console when a certificate
           is approved.

       - id: x509enabled
         name: X.509 Enabled
         content: |

           The command's output resembles the following:

           .. code-block:: sh

              NAME                                       AGE       REQUESTOR                                                   CONDITION
              mms-automation-agent.mongodb               20m       system:serviceaccount:mongodb:mongodb-enterprise-operator   Approved,Issued
              mms-backup-agent.mongodb                   20m       system:serviceaccount:mongodb:mongodb-enterprise-operator   Approved,Issued
              mms-monitoring-agent.mongodb               20m       system:serviceaccount:mongodb:mongodb-enterprise-operator   Approved,Issued
              my-secure-sc-0-0.mongodb                   30s       system:serviceaccount:mongodb:mongodb-enterprise-operator   Pending
              my-secure-sc-0-1.mongodb                   28s       system:serviceaccount:mongodb:mongodb-enterprise-operator   Pending
              my-secure-sc-0-2.mongodb                   27s       system:serviceaccount:mongodb:mongodb-enterprise-operator   Pending
              my-secure-sc-1-0.mongodb                   22s       system:serviceaccount:mongodb:mongodb-enterprise-operator   Pending
              my-secure-sc-1-1.mongodb                   13s       system:serviceaccount:mongodb:mongodb-enterprise-operator   Pending
              my-secure-sc-1-2.mongodb                   6s        system:serviceaccount:mongodb:mongodb-enterprise-operator   Pending
              my-secure-sc-config-0.mongodb              36s       system:serviceaccount:mongodb:mongodb-enterprise-operator   Pending
              my-secure-sc-config-1.mongodb              34s       system:serviceaccount:mongodb:mongodb-enterprise-operator   Pending
              my-secure-sc-config-2.mongodb              32s       system:serviceaccount:mongodb:mongodb-enterprise-operator   Pending
              my-secure-sc-mongos-0.mongodb              49s       system:serviceaccount:mongodb:mongodb-enterprise-operator   Pending
              my-secure-sc-mongos-1.mongodb              42s       system:serviceaccount:mongodb:mongodb-enterprise-operator   Pending

           Using the ``NAME`` field above, approve each certificate from the
           previous command's output using the following command:

           .. code-block:: sh

              kubectl certificate approve <NAME>

           .. example::

              The following commands approve the certificates for the
              replica set example in the previous step:

              .. code-block:: sh
                 :copyable: false

                 kubectl certificate approve my-secure-sc-0-0.mongodb
                 kubectl certificate approve my-secure-sc-0-1.mongodb
                 kubectl certificate approve my-secure-sc-0-2.mongodb
                 kubectl certificate approve my-secure-sc-1-0.mongodb
                 kubectl certificate approve my-secure-sc-1-1.mongodb
                 kubectl certificate approve my-secure-sc-1-2.mongodb
                 kubectl certificate approve my-secure-sc-config-0.mongodb
                 kubectl certificate approve my-secure-sc-config-1.mongodb
                 kubectl certificate approve my-secure-sc-config-2.mongodb
                 kubectl certificate approve my-secure-sc-mongos-0.mongodb
                 kubectl certificate approve my-secure-sc-mongos-1.mongodb

           |kubectl| prints a message to the console when a certificate
           is approved.

           When :setting:`spec.security.authentication.internalCluster` is set to
           ``x509`` an additional |csr| will be generated per host for the
           clusterfile.

           After the first batch of certificates are approved, run the
           command to retrieve the |csrs| again:

           .. code-block:: sh

              kubectl get csr

           The clusterfile |csrs| are now present in the output:

           .. code-block:: sh

              NAME                                        AGE       REQUESTOR                                                   CONDITION
              mms-automation-agent.mongodb                22m       system:serviceaccount:mongodb:mongodb-enterprise-operator   Approved,Issued
              mms-backup-agent.mongodb                    22m       system:serviceaccount:mongodb:mongodb-enterprise-operator   Approved,Issued
              mms-monitoring-agent.mongodb                22m       system:serviceaccount:mongodb:mongodb-enterprise-operator   Approved,Issued
              my-secure-sc-0-0-clusterfile.mongodb        40s       system:serviceaccount:mongodb:mongodb-enterprise-operator   Pending
              my-secure-sc-0-0.mongodb                    2m22s     system:serviceaccount:mongodb:mongodb-enterprise-operator   Approved,Issued
              my-secure-sc-0-1-clusterfile.mongodb        36s       system:serviceaccount:mongodb:mongodb-enterprise-operator   Pending
              my-secure-sc-0-1.mongodb                    2m20s     system:serviceaccount:mongodb:mongodb-enterprise-operator   Approved,Issued
              my-secure-sc-0-2-clusterfile.mongodb        32s       system:serviceaccount:mongodb:mongodb-enterprise-operator   Pending
              my-secure-sc-0-2.mongodb                    2m19s     system:serviceaccount:mongodb:mongodb-enterprise-operator   Approved,Issued
              my-secure-sc-1-0-clusterfile.mongodb        27s       system:serviceaccount:mongodb:mongodb-enterprise-operator   Pending
              my-secure-sc-1-0.mongodb                    2m14s     system:serviceaccount:mongodb:mongodb-enterprise-operator   Approved,Issued
              my-secure-sc-1-1-clusterfile.mongodb        23s       system:serviceaccount:mongodb:mongodb-enterprise-operator   Pending
              my-secure-sc-1-1.mongodb                    2m5s      system:serviceaccount:mongodb:mongodb-enterprise-operator   Approved,Issued
              my-secure-sc-1-2-clusterfile.mongodb        20s       system:serviceaccount:mongodb:mongodb-enterprise-operator   Pending
              my-secure-sc-1-2.mongodb                    118s      system:serviceaccount:mongodb:mongodb-enterprise-operator   Approved,Issued
              my-secure-sc-config-0-clusterfile.mongodb   10s       system:serviceaccount:mongodb:mongodb-enterprise-operator   Pending
              my-secure-sc-config-0.mongodb               2m28s     system:serviceaccount:mongodb:mongodb-enterprise-operator   Approved,Issued
              my-secure-sc-config-1-clusterfile.mongodb   5s        system:serviceaccount:mongodb:mongodb-enterprise-operator   Pending
              my-secure-sc-config-1.mongodb               2m26s     system:serviceaccount:mongodb:mongodb-enterprise-operator   Approved,Issued
              my-secure-sc-config-2-clusterfile.mongodb   2s        system:serviceaccount:mongodb:mongodb-enterprise-operator   Pending
              my-secure-sc-config-2.mongodb               2m24s     system:serviceaccount:mongodb:mongodb-enterprise-operator   Approved,Issued
              my-secure-sc-mongos-0-clusterfile.mongodb   18s       system:serviceaccount:mongodb:mongodb-enterprise-operator   Pending
              my-secure-sc-mongos-0.mongodb               2m41s     system:serviceaccount:mongodb:mongodb-enterprise-operator   Approved,Issued
              my-secure-sc-mongos-1-clusterfile.mongodb   12s       system:serviceaccount:mongodb:mongodb-enterprise-operator   Pending
              my-secure-sc-mongos-1.mongodb               2m34s     system:serviceaccount:mongodb:mongodb-enterprise-operator   Pending

           Approve the clusterfile |csrs| using the same command:

           .. code-block:: sh

              kubectl certificate approve <NAME>

           .. example::

              The following commands approve the clusterfile
              certificates:

              .. code-block:: sh
                 :copyable: false

                 kubectl certificate approve my-secure-sc-0-0-clusterfile.mongodb
                 kubectl certificate approve my-secure-sc-0-1-clusterfile.mongodb
                 kubectl certificate approve my-secure-sc-0-2-clusterfile.mongodb
                 kubectl certificate approve my-secure-sc-1-0-clusterfile.mongodb
                 kubectl certificate approve my-secure-sc-1-1-clusterfile.mongodb
                 kubectl certificate approve my-secure-sc-1-2-clusterfile.mongodb
                 kubectl certificate approve my-secure-sc-config-0-clusterfile.mongodb
                 kubectl certificate approve my-secure-sc-config-1-clusterfile.mongodb
                 kubectl certificate approve my-secure-sc-config-2-clusterfile.mongodb
                 kubectl certificate approve my-secure-sc-mongos-0-clusterfile.mongodb
                 kubectl certificate approve my-secure-sc-mongos-1-clusterfile.mongodb

---
title: "Track the status of your :term:`sharded cluster` deployment."
stepnum: 10
level: 4
ref: track-k8s-deployment-tls-sc
content: |

  .. include:: /includes/check-resource-status.rst

...
