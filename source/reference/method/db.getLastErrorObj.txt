====================
db.getLastErrorObj()
====================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. method:: db.getLastErrorObj(w, wtimeout, j)

   .. include:: /includes/extracts/db.getLastErrorObj-definition.rst

   .. include:: /includes/extracts/fact-2.6-wc-gle-change-method-db.getLastErrorObj.rst

   The :method:`db.getLastErrorObj()` can accept the following
   parameters:


   .. list-table::
      :header-rows: 1
      :widths: 20 20 80
   
      * - Parameter
   
        - Type
   
        - Description
   
      * - ``w``
   
        - int or string
   
        - Optional. The write concern's ``w`` value.
          
          
   
      * - ``wtimeout``
   
        - int
   
        - Optional. The time limit in milliseconds.
          
          
      * - ``j``
   
        - boolean
   
        - If ``true``, wait for the next journal commit before returning, rather
          than waiting for a full disk flush. If :binary:`~bin.mongod` does not have
          journaling enabled, this option has no effect. If this option is
          enabled for a write operation, :binary:`~bin.mongod` will wait *no more*
          than 1/3 of the current :setting:`~storage.journal.commitIntervalMs` before
          writing data to the journal.



Behavior
--------

.. include:: /includes/extracts/db.getLastErrorObj-behavior.rst

Example
-------

The following example issues a :method:`db.getLastErrorObj()` operation
that verifies that the preceding write operation, issued over the same
connection, has propagated to at least two members of the replica set.

.. code-block:: javascript

   db.getLastErrorObj(2)

If the last error object is a duplicate key error, the method returns
a document similar to the following:

.. code-block:: javascript

   {
      "err" : "E11000 duplicate key error collection: test.foobar index: x_1 dup key: { x: 1.0 }",
      "ns" : "test.foobar",         // New in 4.4
      "index" : "x_1",              // New in 4.4
      "code" : 11000,
      "codeName" : "DuplicateKey",
      "n" : 0,
      "singleShard" : "m1.example.net:27017",
      "ok" : 1,
      "operationTime" : Timestamp(1584654273, 1),
      "$clusterTime" : {
         "clusterTime" : Timestamp(1584654274, 1),
         "signature" : {
            "hash" : BinData(0,"Z3L9FdEIYQ2MwLg6X/4sDWacqzM="),
            "keyId" : NumberLong("6806025526243754005")
         }
      }
   }

.. seealso::

   :doc:`/reference/write-concern`.

