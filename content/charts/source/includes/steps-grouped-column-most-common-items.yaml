title: Select the dashboard.
ref: grouped-column-chart-select-dashboard
level: 4
content: |  
  From the :guilabel:`Dashboards` page, select the dashboard 
  where you want to add a new chart. For instructions on setting 
  up a dashboard, see :doc:`Dashboards </dashboards>`.

---
title: At the top-right corner of the dashboard, click
       :guilabel:`Add Chart`.
ref: add-chart
level: 4
---
ref: age-dist-select-source
inherit:
  file: steps-source-select-data-source.yaml
  ref: sample-supplies-sales-data-source


---
title: Select the Chart Type
ref: click-grouped-column
level: 4
content: |

   a. In the :guilabel:`Chart Type` dropdown, select
      :guilabel:`Column`.

   b. Click :guilabel:`Grouped` below the dropdown.
---
title: Add the desired fields to the proper encoding channels.
ref: grouped-column-add-fields
level: 4
content: |

   a. Drag the ``storeLocation`` field to the :guilabel:`X Axis`
      encoding channel. The :guilabel:`X Axis` encoding channel
      dictates which field to use when creating the column groups.

      .. example:: X Axis Encoding Channel

         Using ``storeLocation`` for this encoding channel allows us
         to visualize a group of items per store location.

   #. In the :guilabel:`Fields` section click the ``items`` field to
      expand the ``items`` object and view its properties.

   #. Drag the ``items.name`` field to the :guilabel:`Y Axis`
      encoding channel. The :guilabel:`Y Axis` encoding channel
      determines which field to use for the chart's
      :manual:`aggregation </aggregation>`.

      .. example:: Y Axis Encoding Channel

         Using ``items.name`` for this encoding channel allows us to
         aggregate and count the items sold in each location.

   #. In the :guilabel:`Array Reductions` dropdown, select
      :guilabel:`Unwind array`.

   #. In the :guilabel:`Aggregate` dropdown, select :guilabel:`count`.

      .. example:: Count

         The :guilabel:`count` option counts the occurrences of each
         item name after unwinding the ``items`` array and displays
         them in the chart grouped by store location.

         For more information on the ``$count`` aggregation command,
         refer to the
         :manual:`count aggregation documentation </reference/operator/aggregation/count/>`.

   #. Drag the ``items.name`` field to the :guilabel:`Series` encoding
      channel.

      .. example:: Series Encoding Channel

         The :guilabel:`Series` encoding channel dictates how to
         split each group of the chart. Each member of the series
         becomes a column within the group, so each item name becomes a
         column within the store location group.

   #. In the :guilabel:`Series Array Reductions` dropdown, select
      :guilabel:`Unwind array`.

   Your chart should now look something like this:

   .. figure:: /images/charts/tutorial-grouped-column-in-progress-2.png
      :figwidth: 750px
      :alt: Grouped Column Chart Builder

   The item sales look to be fairly evenly distributed by store
   location. Notice based on this chart that ``notepads`` are
   the most common item sold at all store locations, which is
   useful information when stocking each store with its
   inventory.
---
title: Title your chart.
ref: grouped-column-add-title
level: 4
content: |

   a. Hover over your chart title and click the
      pencil icon.

   #. Copy the following into the title input:

      .. code-block:: none

         Most Common Items Sold by Store Location

   #. Click the check mark to save your title.
---
title: Click :guilabel:`Save and Close` at the top-left of the chart
       builder view.
ref: grouped-column-save-and-close
level: 4
content: |

   Your dashboard should now look something like this:

   .. figure:: /images/charts/order-tutorial-dashboard-stage3.png
      :figwidth: 750px
      :alt: Order Tutorial Dashboard Stage 3
...
