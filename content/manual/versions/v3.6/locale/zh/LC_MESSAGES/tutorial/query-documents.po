#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/tutorial/query-documents.txt:9
msgid "Query Documents"
msgstr ""

#: ../source/tutorial/query-documents.txt:26
msgid "Select All Documents in a Collection"
msgstr ""

#: ../source/tutorial/query-documents.txt:32
#: ../source/tutorial/query-documents.txt:109
msgid "This operation corresponds to the following SQL statement:"
msgstr ""

#: ../source/tutorial/query-documents.txt:100
msgid "Specify Equality Condition"
msgstr ""

#: ../source/tutorial/query-documents.txt:104
msgid ""
"The following example selects from the ``inventory`` collection all "
"documents where the ``status`` equals ``\"D\"``:"
msgstr ""

#: ../source/tutorial/query-documents.txt:127
msgid "Specify Conditions Using Query Operators"
msgstr ""

#: ../source/tutorial/query-documents.txt:131
msgid ""
"The following example retrieves all documents from the ``inventory`` "
"collection where ``status`` equals either ``\"A\"`` or ``\"D\"``:"
msgstr ""

#: ../source/tutorial/query-documents.txt:138
msgid ""
"Although you can express this query using the :query:`$or` operator, use "
"the :query:`$in` operator rather than the :query:`$or` operator when "
"performing equality checks on the same field."
msgstr ""

#: ../source/tutorial/query-documents.txt:142
#: ../source/tutorial/query-documents.txt:165
#: ../source/tutorial/query-documents.txt:188
#: ../source/tutorial/query-documents.txt:208
msgid "The operation corresponds to the following SQL statement:"
msgstr ""

#: ../source/tutorial/query-documents.txt:148
msgid ""
"Refer to the :doc:`/reference/operator/query` document for the complete "
"list of MongoDB query operators."
msgstr ""

#: ../source/tutorial/query-documents.txt:152
msgid "Specify ``AND`` Conditions"
msgstr ""

#: ../source/tutorial/query-documents.txt:154
msgid ""
"A compound query can specify conditions for more than one field in the "
"collection's documents. Implicitly, a logical ``AND`` conjunction "
"connects the clauses of a compound query so that the query selects the "
"documents in the collection that match all the conditions."
msgstr ""

#: ../source/tutorial/query-documents.txt:159
msgid ""
"The following example retrieves all documents in the ``inventory`` "
"collection where the ``status`` equals ``\"A\"`` **and** ``qty`` is less "
"than (:query:`$lt`) ``30``:"
msgstr ""

#: ../source/tutorial/query-documents.txt:171
msgid ""
"See :ref:`comparison operators <query-selectors-comparison>` for other "
"MongoDB comparison operators."
msgstr ""

#: ../source/tutorial/query-documents.txt:175
msgid "Specify ``OR`` Conditions"
msgstr ""

#: ../source/tutorial/query-documents.txt:177
msgid ""
"Using the :query:`$or` operator, you can specify a compound query that "
"joins each clause with a logical ``OR`` conjunction so that the query "
"selects the documents in the collection that match at least one "
"condition."
msgstr ""

#: ../source/tutorial/query-documents.txt:182
msgid ""
"The following example retrieves all documents in the collection where the"
" ``status`` equals ``\"A\"`` **or** ``qty`` is less than (:query:`$lt`) "
"``30``:"
msgstr ""

#: ../source/tutorial/query-documents.txt:195
msgid ""
"Queries which use :ref:`comparison operators <query-selectors-"
"comparison>` are subject to :ref:`type-bracketing`."
msgstr ""

#: ../source/tutorial/query-documents.txt:199
msgid "Specify ``AND`` as well as ``OR`` Conditions"
msgstr ""

#: ../source/tutorial/query-documents.txt:201
msgid ""
"In the following example, the compound query document selects all "
"documents in the collection where the ``status`` equals ``\"A\"`` **and**"
" *either* ``qty`` is less than (:query:`$lt`) ``30`` *or* ``item`` starts"
" with the character ``p``:"
msgstr ""

#: ../source/tutorial/query-documents.txt:216
msgid ""
"MongoDB supports regular expressions :query:`$regex` queries to perform "
"string pattern matches."
msgstr ""

#: ../source/tutorial/query-documents.txt:220
msgid "Additional Query Tutorials"
msgstr ""

#: ../source/tutorial/query-documents.txt:222
msgid "For additional query examples, see:"
msgstr ""

#: ../source/tutorial/query-documents.txt:224
msgid ":doc:`/tutorial/query-embedded-documents`"
msgstr ""

#: ../source/tutorial/query-documents.txt:226
msgid ":doc:`/tutorial/query-arrays`"
msgstr ""

#: ../source/tutorial/query-documents.txt:228
msgid ":doc:`/tutorial/query-array-of-documents`"
msgstr ""

#: ../source/tutorial/query-documents.txt:230
msgid ":doc:`/tutorial/project-fields-from-query-results`"
msgstr ""

#: ../source/tutorial/query-documents.txt:232
msgid ":doc:`/tutorial/query-for-null-fields`"
msgstr ""

#: ../source/tutorial/query-documents.txt:235
msgid "Behavior"
msgstr ""

#: ../source/tutorial/query-documents.txt:238
msgid "Cursor"
msgstr ""

#: ../source/tutorial/query-documents.txt:323
msgid "Read Isolation"
msgstr ""

#: ../source/tutorial/query-documents.txt:327
msgid ""
"For reads to :doc:`replica sets </replication>` and replica set "
":doc:`shards </sharding>`, read concern allows clients to choose a level "
"of isolation for their reads. For more information, see :doc:`/reference"
"/read-concern`."
msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid "Embedded Documents"
#~ msgstr ""

#~ msgid "Arrays"
#~ msgstr ""

#~ msgid ":doc:`/tutorial/project-fields-from-query-results`"
#~ msgstr ""

#~ msgid ""
#~ "In the following example, the compound"
#~ " query document selects all documents "
#~ "in the collection where the``status`` "
#~ "equals ``\"A\"`` **and** *either* ``age`` "
#~ "is less than than (:query:`$lt`) ``30``"
#~ " *or* ``type`` equals ``1``:"
#~ msgstr ""

#~ msgid "The following methods can also delete documents from a collection:"
#~ msgstr ""

# c8aec2a71c514913842cc92af1ac69ac
#~ msgid "On this page"
#~ msgstr ""

# a45fad270054492fb4d38ebea6a6915e
#~ msgid "Query Method"
#~ msgstr ""

# 917d47ef0e274a429de4f9ecaa1983f2
#~ msgid ""
#~ "MongoDB provides the :method:`db.collection.find()`"
#~ " method to read documents from a "
#~ "collection. The :method:`db.collection.find()` "
#~ "method returns a :doc:`cursor "
#~ "</tutorial/iterate-a-cursor>` to the matching "
#~ "documents."
#~ msgstr ""

# 47ad12da58354480b88e4e57e2e0426d
#~ msgid ""
#~ "For the :method:`db.collection.find()` method, "
#~ "you can specify the following optional"
#~ " fields:"
#~ msgstr ""

# f0d5ca28b222427ebd63c7f0ffabd99b
#~ msgid ""
#~ "a :ref:`query filter <document-query-"
#~ "filter>` to specify which documents to"
#~ " return."
#~ msgstr ""

# 10f59c01ef3b4d24a72038e08b9c37e0
#~ msgid ""
#~ "a query projection to specifies which"
#~ " fields from the matching documents "
#~ "to return. The projection limits the "
#~ "amount of data that MongoDB returns "
#~ "to the client over the network."
#~ msgstr ""

# 1adeb9ec2923415699e011ae5797ee58
#~ msgid ""
#~ "You can optionally add a cursor "
#~ "modifier to impose limits, skips, and"
#~ " sort orders. The order of documents"
#~ " returned by a query is not "
#~ "defined unless you specify a "
#~ ":method:`~cursor.sort()`."
#~ msgstr ""

# 1a4902c98b4248b0ad15ef24845b21e4
#~ msgid "Example Collection"
#~ msgstr ""

# 4939a3728a8e4e4bbc4df60e63303581
#~ msgid ""
#~ "The examples on this page use the"
#~ " :method:`db.collection.find()` method in the "
#~ ":program:`mongo` shell. In the "
#~ ":program:`mongo` shell, if the returned "
#~ "cursor is not assigned to a "
#~ "variable using the ``var`` keyword, then"
#~ " the cursor is automatically iterated "
#~ "up to 20 times [#set-shell-"
#~ "batch-size]_ to print up to the "
#~ "first 20 documents in the results."
#~ msgstr ""

# ee9ef08a9acb4bfd9a87a1c47d80f0a1
#~ msgid ""
#~ "To populate the ``users`` collection "
#~ "referenced in the examples, run the "
#~ "following in :program:`mongo` shell:"
#~ msgstr ""

# 5fa2499e520f472681cbc8a7b33e8e73
#~ msgid ""
#~ "If the ``users`` collection already "
#~ "contains documents with the same ``_id``"
#~ " values, you need to :method:`drop "
#~ "<db.collection.drop()>` the collection "
#~ "(``db.users.drop()``) before inserting the "
#~ "example documents."
#~ msgstr ""

# 4a4e80f0a8bf4a6a8c36fb7bf7d8701c
#~ msgid ""
#~ "An empty :ref:`query filter <document-"
#~ "query-filter>` document (``{}``) selects "
#~ "all documents in the collection:"
#~ msgstr ""

# 24ad28db935740e7b36c8e427680c821
#~ msgid ""
#~ "Omitting a query filter document to "
#~ "the :method:`db.collection.find()` is equivalent "
#~ "to specifying an empty query document."
#~ " As such, the following operation is"
#~ " equivalent to the previous operation:"
#~ msgstr ""

# 49bce4722f7b45338e10089d5810f7ee
#~ msgid "Specify Query Filter Conditions"
#~ msgstr ""

# 0468bd33dd734f8187e5f151065c0917
#~ msgid ""
#~ "A :ref:`query filter document <document-"
#~ "query-filter>` can specify equality "
#~ "condition with ``<field>:<value>`` expressions "
#~ "to select all documents that contain "
#~ "the ``<field>`` with the specified "
#~ "``<value>``:"
#~ msgstr ""

# 70c59e36fced4a1798ef6f3a4bbb67d2
#~ msgid ""
#~ "The following example retrieves from the"
#~ " ``users`` collection all documents where"
#~ " the ``status`` field has the value"
#~ " ``\"A\"``:"
#~ msgstr ""

# e7fbdd74039c49e1848bbe9a3ed89c16
#~ msgid ""
#~ "A :ref:`query filter document <document-"
#~ "query-filter>` can use the :ref:`query "
#~ "operators <query-selectors>` to specify "
#~ "conditions in the following form:"
#~ msgstr ""

# fde0fb763aee4ddbb4a0de34b03aa7c6
#~ msgid ""
#~ "The following example retrieves all "
#~ "documents from the ``users`` collection "
#~ "where ``status`` equals either ``\"P\"`` "
#~ "or ``\"D\"``:"
#~ msgstr ""

# 9c724173e52948758fc79548f81808a8
#~ msgid ""
#~ "Refer to the :doc:`/reference/operator/query` "
#~ "document for the complete list of "
#~ "query operators."
#~ msgstr ""

# 570993d7dbd548339324842ce7435015
#~ msgid ""
#~ "The following example retrieves all "
#~ "documents in the ``users`` collection "
#~ "where the ``status`` equals ``\"A\"`` "
#~ "**and** ``age`` is less than "
#~ "(:query:`$lt`) ``30``:"
#~ msgstr ""

# 71ea773081704122a077ed4b10b9949e
#~ msgid ""
#~ "See :ref:`comparison operators <query-"
#~ "selectors-comparison>` for other comparison "
#~ "operators."
#~ msgstr ""

# 264531ba67104cf3b3c0bf47e75f4a95
#~ msgid ""
#~ "The following example retrieves all "
#~ "documents in the collection where the"
#~ " ``status`` equals ``\"A\"`` **or** ``age``"
#~ " is less than (:query:`$lt`) ``30``:"
#~ msgstr ""

# 8043c18840cf4b47a4f00085afa3fa4b
#~ msgid ""
#~ "With additional clauses, you can specify"
#~ " precise conditions for matching documents."
#~ msgstr ""

# 069e117992c94322993597cd32d48517
#~ msgid ""
#~ "In the following example, the compound"
#~ " query document selects all documents "
#~ "in the collection where the ``status``"
#~ " equals ``\"A\"`` **and** *either* ``age``"
#~ " is less than than (:query:`$lt`) "
#~ "``30`` *or* ``type`` equals ``1``:"
#~ msgstr ""

# 027faca550514dc7a0aaa6f2b824322a
#~ msgid "Query on Embedded Documents"
#~ msgstr ""

# f39e8894a1d24198b04dfb8855b642dc
#~ msgid ""
#~ "When the field holds an embedded "
#~ "document, a query can either specify "
#~ "an exact match on the embedded "
#~ "document or specify a match by "
#~ "individual fields in the embedded "
#~ "document using the :term:`dot notation`."
#~ msgstr ""

# a93034ee5ca64882a732533dcf26e04f
#~ msgid "Exact Match on the Embedded Document"
#~ msgstr ""

# f8285a5f0d2048d29e17ff5bb948fd7d
#~ msgid ""
#~ "To specify an exact equality match "
#~ "on the whole embedded document, use "
#~ "the query document ``{ <field>: <value>"
#~ " }`` where ``<value>`` is the "
#~ "document to match. Equality matches on"
#~ " an embedded document require an "
#~ "*exact* match of the specified "
#~ "``<value>``, including the field order."
#~ msgstr ""

# e25786930a654888ba7e441718a1935b
#~ msgid ""
#~ "In the following example, the query "
#~ "matches all documents where the "
#~ "``favorites`` field is an embedded "
#~ "document that contains only the fields"
#~ " ``artist`` equal to ``\"Picasso\"`` and"
#~ " ``food`` equal to ``\"pizza\"``, in "
#~ "that order:"
#~ msgstr ""

# 8a8ad681ca6f49d4bede038d76730d60
#~ msgid "Equality Match on Fields within an Embedded Document"
#~ msgstr ""

# d37065a3002342c592bf947ece964d68
#~ msgid ""
#~ "Use the :term:`dot notation` to match"
#~ " by specific fields in an embedded"
#~ " document. Equality matches for specific"
#~ " fields in an embedded document will"
#~ " select documents in the collection "
#~ "where the embedded document contains the"
#~ " specified fields with the specified "
#~ "values. The embedded document can "
#~ "contain additional fields."
#~ msgstr ""

# a9459a3c622b4a5686220d1e6b5a7b51
#~ msgid ""
#~ "In the following example, the query "
#~ "uses the :term:`dot notation` to match"
#~ " all documents where the ``favorites`` "
#~ "field is an embedded document that "
#~ "includes the field ``artist`` equal to"
#~ " ``\"Picasso\"`` and may contain other "
#~ "fields:"
#~ msgstr ""

# d078b771e1c749988fdf1f45709bd13e
#~ msgid "Query on Arrays"
#~ msgstr ""

# f179d0c4ea924e1f89df5e1d39701aaa
#~ msgid ""
#~ "When the field holds an array, you"
#~ " can query for an exact array "
#~ "match or for specific values in "
#~ "the array. If the array holds "
#~ "embedded documents, you can query for"
#~ " specific fields in the embedded "
#~ "documents using :term:`dot notation`."
#~ msgstr ""

# 015b381fac374c649451f5d89f3164b8
#~ msgid ""
#~ "If you specify multiple conditions using"
#~ " the :query:`$elemMatch` operator, the "
#~ "array must contain at least one "
#~ "element that satisfies all the "
#~ "conditions. See :ref:`single-element-"
#~ "satisfies-criteria`."
#~ msgstr ""

# e48b30622f4b414184c3d3047fbc62f1
#~ msgid ""
#~ "If you specify multiple conditions "
#~ "without using the :query:`$elemMatch` "
#~ "operator, then some combination of the"
#~ " array elements, not necessarily a "
#~ "single element, must satisfy all the "
#~ "conditions; i.e. different elements in "
#~ "the array can satisfy different parts"
#~ " of the conditions. See :ref"
#~ ":`combination-of-elements-satisfies-criteria`."
#~ msgstr ""

# 2212341ea60240f08a8b553da8540d1f
#~ msgid "Exact Match on an Array"
#~ msgstr ""

# 6815b32d41bd48fabcd90c96287a12e7
#~ msgid ""
#~ "To specify equality match on an "
#~ "array, use the query document ``{ "
#~ "<field>: <value> }`` where ``<value>`` "
#~ "is the array to match. Equality "
#~ "matches on the array require that "
#~ "the array field match *exactly* the "
#~ "specified ``<value>``, including the element"
#~ " order."
#~ msgstr ""

# 63c6d05a6c634d1ab67d7c1e2e8f3c7e
#~ msgid ""
#~ "The following example queries for all"
#~ " documents where the field ``badges`` "
#~ "is an array that holds exactly two"
#~ " elements, ``\"blue\"``, and ``\"black\"``, "
#~ "in this order:"
#~ msgstr ""

# a95fae9e23b145ac96506983b5f80275
#~ msgid "The query matches the following document:"
#~ msgstr ""

# 505aaa98165546a7a17539dbd283344d
#~ msgid "Match an Array Element"
#~ msgstr ""

# bd615ddab2e045ebb8ff489b2358a878
#~ msgid ""
#~ "Equality matches can specify a single"
#~ " element in the array to match. "
#~ "These specifications match if the array"
#~ " contains at least *one* element with"
#~ " the specified value."
#~ msgstr ""

# 66a3e0a755b940299ebd3fc4faa4350d
#~ msgid ""
#~ "The following example queries for all"
#~ " documents where ``badges`` is an "
#~ "array that contains ``\"black\"`` as one"
#~ " of its elements:"
#~ msgstr ""

# 7baeaaaafa2c45b283063be5544a9f7f
#~ msgid "The query matches the following documents:"
#~ msgstr ""

# da5670b0cb9a492790bc3f09fb50f83a
#~ msgid "Match a Specific Element of an Array"
#~ msgstr ""

# c3ce1ab253c54e1d924f34bdc3cfabe6
#~ msgid ""
#~ "Equality matches can specify equality "
#~ "matches for an element at a "
#~ "particular index or position of the "
#~ "array using the :term:`dot notation`."
#~ msgstr ""

# 0f00aa0018a4433fb8a54e23c136c4b5
#~ msgid ""
#~ "In the following example, the query "
#~ "uses the :term:`dot notation` to match"
#~ " all documents where the ``badges`` "
#~ "is an array that contains ``\"black\"``"
#~ " as the first element:"
#~ msgstr ""

# a120c803650842c398c3b20c2bfda646
# 1aa893cdcd524e9ead40a265aafe330b
#~ msgid "The operation returns the following document:"
#~ msgstr ""

# d87bcc5d838d4a6598b4eb278f2e75ef
#~ msgid "Specify Multiple Criteria for Array Elements"
#~ msgstr ""

# bbcb92e8ecc34601bdc081d9c57edf6a
# 50f3360f717144d18aa5f3f6f71fdf2a
#~ msgid "Single Element Satisfies the Criteria"
#~ msgstr ""

# 73e3e707cf86462d99d53bdfa2a5b644
#~ msgid ""
#~ "Use :query:`$elemMatch` operator to specify"
#~ " multiple criteria on the elements of"
#~ " an array such that at least "
#~ "one array element satisfies all the "
#~ "specified criteria."
#~ msgstr ""

# dcef6708cbf14e84ac84564e17342f19
#~ msgid ""
#~ "The following example queries for "
#~ "documents where the ``finished`` array "
#~ "contains at least one element that "
#~ "is greater than (:query:`$gt`) ``15`` "
#~ "and less than (:query:`$lt`) ``20``:"
#~ msgstr ""

# a401a5bec18248dbbeda0a0695629932
#~ msgid ""
#~ "The operation returns the following "
#~ "documents, whose ``finished`` array contains"
#~ " at least one element which meets "
#~ "both criteria:"
#~ msgstr ""

# ad3d620cb3cf4a138cb373ac7e446f9c
# f9116bc1afa2431288ece2a8987c321a
#~ msgid "Combination of Elements Satisfies the Criteria"
#~ msgstr ""

# 764ae09524e14ff996e496ad647c0eb1
#~ msgid ""
#~ "The following example queries for "
#~ "documents where the ``finished`` array "
#~ "contains elements that in some "
#~ "combination satisfy the query conditions; "
#~ "e.g., one element can satisfy the "
#~ "greater than ``15`` condition and "
#~ "another element can satisfy the less "
#~ "than ``20`` condition, or a single "
#~ "element can satisfy both:"
#~ msgstr ""

# 90eb08c0c66048539cfc67545516387f
# ec48c66193264a73883ffdbcfd65f7b5
# a2879169800f48a6943f9cdbe4e5b5a9
#~ msgid "The operation returns the following documents:"
#~ msgstr ""

# 945faf9278f34bd4b311015801a0fe87
#~ msgid "Array of Embedded Documents"
#~ msgstr ""

# c4482c0eb61f4d1490b3ae3db328d4b9
#~ msgid "Match a Field in the Embedded Document Using the Array Index"
#~ msgstr ""

# 22ed2e6919694e6caec6784623c17d1f
#~ msgid ""
#~ "If you know the array index of "
#~ "the embedded document, you can specify"
#~ " the document using the embedded "
#~ "document's position using the :term:`dot "
#~ "notation`."
#~ msgstr ""

# 2ad245aad20545f5ae1d7d096ad874f0
#~ msgid ""
#~ "The following example selects all "
#~ "documents where the ``points`` contains "
#~ "an array whose first element (i.e. "
#~ "index is ``0``) is a document that"
#~ " contains the field ``points`` whose "
#~ "value is less than or equal to "
#~ "``55``:"
#~ msgstr ""

# 965e21f2e54d4b7aaf46b369de5da61e
#~ msgid "Match a Field Without Specifying Array Index"
#~ msgstr ""

# 02cd1bf348304231865872cf44199b8c
#~ msgid ""
#~ "If you do not know the index "
#~ "position of the document in the "
#~ "array, concatenate the name of the "
#~ "field that contains the array, with "
#~ "a dot (``.``) and the name of "
#~ "the field in the embedded document."
#~ msgstr ""

# 5a90e3ed05eb4567bb3031130ad30495
#~ msgid ""
#~ "The following example selects all "
#~ "documents where the ``points`` is an "
#~ "array with at least one embedded "
#~ "document that contains the field "
#~ "``points`` whose value is less than "
#~ "or equal to ``55``:"
#~ msgstr ""

# 77756eb9c2cc4f46a1e9a88bcae91fdb
#~ msgid "Specify Multiple Criteria for Array of Documents"
#~ msgstr ""

# 67146d355b264724b228d480e34eb9ff
#~ msgid ""
#~ "Use :query:`$elemMatch` operator to specify"
#~ " multiple criteria on an array of "
#~ "embedded documents such that at least"
#~ " one embedded document satisfies all "
#~ "the specified criteria."
#~ msgstr ""

# fc92192f5dc24401a8f7bb2fea4a24e2
#~ msgid ""
#~ "The following example queries for "
#~ "documents where the ``points`` array has"
#~ " at least one embedded document that"
#~ " contains both the field ``points`` "
#~ "less than or equal to ``70`` and"
#~ " the field ``bonus`` equal to ``20``:"
#~ msgstr ""

# 8fd5298c9bf449419ddc4328699560a8
#~ msgid ""
#~ "The following example queries for "
#~ "documents where the ``points`` array "
#~ "contains elements that in some "
#~ "combination satisfy the query conditions; "
#~ "e.g. one element satisfies the "
#~ "``points`` less than or equal to "
#~ "``70`` condition and another element "
#~ "satisfies the ``bonus`` equal to ``20``"
#~ " condition, or a single element "
#~ "satisfies both criteria:"
#~ msgstr ""

# 8bb4a172eac44e00953eb3b5d8959a3d
#~ msgid "The query returns the following documents:"
#~ msgstr ""

# bceb930c7b0644619ce6821e943e4ee3
#~ msgid "Additional Methods"
#~ msgstr ""

# 95079492b9d04dd8a32733c7273d8c5e
#~ msgid "The following methods can also read documents from a collection:"
#~ msgstr ""

# 10f46f594d19413eb1c498aabc57d90e
#~ msgid ":method:`db.collection.findOne` [#findOne]_"
#~ msgstr ""

# 3bec350c897d4a6b9eca49baaae6c8c0
#~ msgid ""
#~ "In :doc:`aggregation pipeline </core/aggregation-"
#~ "pipeline>`, the :pipeline:`$match` pipeline "
#~ "stage provides access to MongoDB "
#~ "queries."
#~ msgstr ""

# 7abb35e836dc43548bf9a4331247f40f
#~ msgid ""
#~ "The :method:`db.collection.findOne()` method also"
#~ " performs a read operation to return"
#~ " a single document. Internally, the "
#~ ":method:`db.collection.findOne()` method is the "
#~ ":method:`db.collection.find()` method with a "
#~ "limit of 1."
#~ msgstr ""

# 8fa4e1efbde145ac8b1ddb2ed70552b8
#~ msgid ""
#~ "For reads to :doc:`replica sets "
#~ "</replication>` and replica set :doc:`shards"
#~ " </sharding>`, read concern allows clients"
#~ " to choose a level of isolation "
#~ "for their reads."
#~ msgstr ""

# b6e36ee3245b40d09ab6bcc394df0d22
#~ msgid "For more information, see :doc:`/reference/read-concern`."
#~ msgstr ""

# a6df1ce9d4be47aaa58310dba444b7e5
#~ msgid ""
#~ "You can use the ``DBQuery.shellBatchSize`` "
#~ "to change the number of iteration "
#~ "from the default value ``20``. See "
#~ ":ref:`mongo-shell-executing-queries` for "
#~ "more information."
#~ msgstr ""

