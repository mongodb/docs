==============================
Get One Full Text Search Index
==============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. include:: /includes/api-requirements.rst

.. include:: /includes/fact-projects-groups-synonyms.rst

.. include:: /includes/api-base-url-new.rst

Syntax
------

.. code-block:: none

   GET /groups/{GROUP-ID}/clusters/{CLUSTER-NAME}/fts/indexes/{INDEX-ID}

Request Parameters
------------------

Request Path Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1
   :widths: 15 10 75

   * - Path Element
     - Required/Optional
     - Description

   * - ``GROUP-ID``
     - Required
     - The unique identifier for the :ref:`project <projects>`
       that contains the specified cluster.

   * - ``CLUSTER-NAME``
     - Required
     - The name of the cluster containing the collection with one
       or more |fts| indexes.

   * - ``INDEX-ID``
     - Required
     - The unique identifier of the |fts| index. Use the
       :doc:`fts-indexes-get-all` API endpoint to find the IDs
       of all |fts| indexes.

Request Query Parameters
~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/no-query-parameters-list.rst

Request Body Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/no-body-parameters.rst

Response Elements
-----------------

The HTTP response returns a JSON document with an
:ref:`index definition <ref-index-definitions>` for the specified
index. An index definition contains the following elements:

.. include:: /includes/list-table-index-defs-response.rst

Example
-------

Example Request
~~~~~~~~~~~~~~~

.. code-block:: sh

   curl -i -u "{username}:{apikey}" \
     --digest "https://cloud.mongodb.com/api/atlas/v1.0/groups/{GROUP-ID}/clusters/{CLUSTER-NAME}/fts/indexes/{INDEX-ID}?pretty=true"

Example Response
~~~~~~~~~~~~~~~~

The following example response contains an index
definition for an index named ``SearchIndex1``. It is a custom
definition with static mappings for two fields named ``genres`` and
``plot``.

.. code-block:: json
   :copyable: false

   {
     "collectionName" : "movies",
     "database" : "sample_mflix",
     "indexID" : "5d1268a980eef518dac0cf41",
     "mappings" : {
       "dynamic" : false,
       "fields" : {
         "genres" : {
           "analyzer" : "lucene.standard",
           "type" : "string"
         },
         "plot" : {
           "analyzer" : "lucene.standard",
           "type" : "string"
         }
       }
     },
    "name" : "SearchIndex1"
   } 
