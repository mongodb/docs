# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/write-concern.txt:7
msgid "Write Concern"
msgstr ""

#: ../source/includes/introduction-write-concern.rst:1
msgid ""
":term:`Write concern` describes the guarantee that MongoDB provides when "
"reporting on the success of a write operation. The strength of the write "
"concerns determine the level of guarantee. When inserts, updates and deletes"
" have a *weak* write concern, write operations return quickly. In some "
"failure cases, write operations issued with weak write concerns may not "
"persist. With *stronger* write concerns, clients wait after sending a write "
"operation for MongoDB to confirm the write operations."
msgstr ""

#: ../source/includes/introduction-write-concern.rst:10
msgid ""
"MongoDB provides different levels of write concern to better address the "
"specific needs of applications. Clients may adjust write concern to ensure "
"that the most important operations persist successfully to an entire MongoDB"
" deployment. For other less critical operations, clients can adjust the "
"write concern to ensure faster performance rather than ensure persistence to"
" the entire deployment."
msgstr ""

#: ../source/core/write-concern.txt:13
msgid ""
"A new protocol for :ref:`write operations <rel-notes-write-operations>` "
"integrates write concern with the write operations."
msgstr ""

#: ../source/core/write-concern.txt:18
msgid ""
"For details on write concern configurations, see :doc:`/reference/write-"
"concern`."
msgstr ""

#: ../source/core/write-concern.txt:22
msgid "Considerations"
msgstr ""

#: ../source/core/write-concern.txt:25
msgid "Default Write Concern"
msgstr ""

#: ../source/core/write-concern.txt:27
msgid ""
"The :program:`mongo` shell and the MongoDB drivers use :ref:`write-concern-"
"acknowledged` as the default write concern."
msgstr ""

#: ../source/core/write-concern.txt:30
msgid ""
"See :ref:`write-concern-acknowledged` for more information, including when "
"this write concern became the default."
msgstr ""

#: ../source/core/write-concern.txt:34
msgid "Timeouts"
msgstr ""

#: ../source/core/write-concern.txt:36
msgid ""
"Clients can set a :ref:`wtimeout <wc-wtimeout>` value as part of a "
":ref:`replica acknowledged <replica-set-write-concern>` write concern. If "
"the write concern is not satisfied in the specified interval, the operation "
"returns an error, even if the write concern will eventually succeed."
msgstr ""

#: ../source/core/write-concern.txt:42
msgid ""
"MongoDB does not \"rollback\" or undo modifications made before the "
"``wtimeout`` interval expired."
msgstr ""

#: ../source/core/write-concern.txt:46
msgid "Write Concern Levels"
msgstr ""

#: ../source/core/write-concern.txt:48
msgid ""
"MongoDB has the following levels of conceptual write concern, listed from "
"weakest to strongest:"
msgstr ""

#: ../source/core/write-concern.txt:54
msgid "Unacknowledged"
msgstr ""

#: ../source/core/write-concern.txt:56
msgid ""
"With an *unacknowledged* write concern, MongoDB does not acknowledge the "
"receipt of write operations. *Unacknowledged* is similar to *errors "
"ignored*; however, drivers will attempt to receive and handle network errors"
" when possible. The driver's ability to detect network errors depends on the"
" system's networking configuration."
msgstr ""

#: ../source/core/write-concern.txt:62
msgid ""
"Before the releases outlined in :ref:`driver-write-concern-change`, this was"
" the default write concern."
msgstr ""

#: ../source/core/write-concern.txt:70
msgid "Acknowledged"
msgstr ""

#: ../source/core/write-concern.txt:72
msgid ""
"With a receipt *acknowledged* write concern, the :program:`mongod` confirms "
"that it received the write operation and applied the change to the in-memory"
" view of data. *Acknowledged* write concern allows clients to catch network,"
" duplicate key, and other errors."
msgstr ""

#: ../source/core/write-concern.txt:77
msgid ""
"MongoDB uses the *acknowledged* write concern by default starting in the "
"driver releases outlined in :ref:`write-concern-change-releases`."
msgstr ""

#: ../source/core/write-concern.txt:80
msgid ""
"The :program:`mongo` shell write methods now incorporates the :doc:`write "
"concern </core/write-concern>` in the write methods and provide the default "
"write concern whether run interactively or in a script. See :ref:`write-"
"methods-incompatibility` for details."
msgstr ""

#: ../source/core/write-concern.txt:88
msgid ""
"*Acknowledged* write concern does *not* confirm that the write operation has"
" persisted to the disk system."
msgstr ""

#: ../source/core/write-concern.txt:94
msgid "Journaled"
msgstr ""

#: ../source/core/write-concern.txt:96
msgid ""
"With a *journaled* write concern, the MongoDB acknowledges the write "
"operation only after committing the data to the :term:`journal`. This write "
"concern ensures that MongoDB can recover the data following a shutdown or "
"power interruption."
msgstr ""

#: ../source/core/write-concern.txt:101
msgid "You must have journaling enabled to use this write concern."
msgstr ""

#: ../source/core/write-concern.txt:103
msgid ""
"With a *journaled* write concern, write operations must wait for the next "
"journal commit. To reduce latency for these operations, MongoDB also "
"increases the frequency that it commits operations to the journal. See "
":setting:`storage.mmapv1.journal.commitIntervalMs` for more information."
msgstr ""

#: ../source/includes/note-write-concern-journaled-replication.rst:1
#: ../source/includes/note-write-concern-journaled-replication.rst:1
msgid ""
"Requiring *journaled* write concern in a replica set only requires a journal"
" commit of the write operation to the :term:`primary` of the set regardless "
"of the level of *replica acknowledged* write concern."
msgstr ""

#: ../source/core/write-concern.txt:116
msgid "Replica Acknowledged"
msgstr ""

#: ../source/core/write-concern.txt:118
msgid ""
":term:`Replica sets <replica set>` present additional considerations with "
"regards to write concern. The default write concern only requires "
"acknowledgement from the primary."
msgstr ""

#: ../source/core/write-concern.txt:122
msgid ""
"With *replica acknowledged* write concern, you can guarantee that the write "
"operation propagates to additional members of the replica set. See "
":doc:`Write Concern for Replica Sets <replica-set-write-concern>` for more "
"information."
msgstr ""

#: ../source/core/write-concern.txt:131
msgid ":doc:`/reference/write-concern`"
msgstr ""

#: ../source/core/write-concern.txt:1
msgid "write concern"
msgstr ""
