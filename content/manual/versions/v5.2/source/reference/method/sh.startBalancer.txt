==================
sh.startBalancer()
==================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. method:: sh.startBalancer(timeout, interval)

   .. versionchanged:: 4.2
      
   Starts the balancer in a sharded cluster. Starting in MongoDB 4.2,
   :method:`sh.startBalancer()` also enables auto-splitting for the
   sharded cluster.
   
   The method can take the following options:


   .. list-table::
      :header-rows: 1
      :widths: 20 20 80
   
      * - Parameter
   
        - Type
   
        - Description
   
      * - ``timeout``
   
        - integer
   
        - Optional. Time limit for enabling the balancer.
          
          Defaults to 60000 milliseconds.
          
          .. versionchanged:: 3.4
          
             If using the 3.4 :binary:`~bin.mongo` shell with earlier version
             sharded clusters, the parameter specifies the amount of time to
             wait for the balancing round to start.
          
          
   
      * - ``interval``
   
        - integer
   
        - Optional. The frequency (in milliseconds) at which to check if a balancing
          round has started.
          
          .. versionchanged:: 3.4
             
             Only applicable when using version 3.4 :binary:`~bin.mongo` shell
             with earlier version sharded clusters.s
          
          
   


   You can only run :method:`sh.startBalancer()` on a
   :binary:`~bin.mongos` instance. :method:`sh.startBalancer()` errors
   if run on :binary:`~bin.mongod` instance.

Behavior
--------

Starting in MongoDB 3.4, the :binary:`~bin.mongo` shell method
:method:`sh.startBalancer()` is a wrapper around the
:dbcommand:`balancerStart` command. As such, the method does not
wait for balancing to start.

In earlier versions, the method waited for the balancing to start.

.. seealso::

   - :method:`sh.enableBalancing()`
   - :method:`sh.disableBalancing()`
   - :method:`sh.getBalancerHost()`
   - :method:`sh.getBalancerState()`
   - :method:`sh.isBalancerRunning()`
   - :method:`sh.setBalancerState()`
   - :method:`sh.stopBalancer()`
   - :method:`sh.waitForBalancer()`
   - :method:`sh.waitForBalancerOff()`
