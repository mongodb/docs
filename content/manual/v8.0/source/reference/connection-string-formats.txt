.. _connection-string-formats:

=========================
Connection String Formats
=========================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

You can specify the MongoDB connection string by using one
of the following formats:

- :ref:`connections-dns-seedlist`: A connection string with a hostname
  that corresponds to a DNS SRV record. Your driver or
  :binary:`~bin.mongosh` queries the record to determine which hosts
  are running the :binary:`~bin.mongod` or :binary:`~bin.mongos`
  instances.

- :ref:`connections-standard-connection-string-format`: A connection
  string that specifies all hosts that are running the 
  :binary:`~bin.mongod` or :binary:`~bin.mongos` instances.

{+atlas+} clusters use SRV connection format unless you connect to an
:atlas:`online archive </online-archive/manage-online-archive/>`.

To connect directly to a host and port specified in a connection string,
set the :urioption:`directConnection` option to ``true``. For full
details about ``directConnection`` and the other connection string
options, see :ref:`connections-connection-options`. 

.. _connections-dns-seedlist:

SRV Connection Format
---------------------

MongoDB supports a
:abbr:`DNS (Domain Name Service)`-constructed :term:`seed list`. Using 
DNS to construct the available servers list allows more flexibility of
deployment and the ability to change the servers in rotation without
reconfiguring clients.

The SRV URI connection scheme has the following form:

.. code-block:: none

   mongodb+srv://[username:password@]host[/[defaultauthdb][?options]]

For more examples, see these pages:

- :ref:`connections-connection-examples-atlas`
- :ref:`connections-connection-examples-self-managed`

.. include:: /includes/list-table-connection-string-components.rst

To use the DNS seed list, use the same syntax as a :ref:`standard
connection string <connections-standard-connection-string-format>` with
a prefix of ``mongodb+srv`` rather than the standard ``mongodb``. The
``+srv`` indicates to the client that the hostname that follows
corresponds to a DNS SRV record. The driver or :binary:`~bin.mongosh`
queries the DNS for the record to determine which hosts are
running the :binary:`~bin.mongod` or :binary:`~bin.mongos` instances.

.. note::

   When you use the ``+srv`` connection string modifier, the connection
   automatically sets the :urioption:`tls` (or the equivalent
   :urioption:`ssl`) option to ``true``. To override this behavior,
   explicitly set the :urioption:`tls` (or the equivalent
   :urioption:`ssl`) option to ``false`` in the connection query string.

When using the ``+srv`` format, you must specify the ``hostname``, 
``domain``, and ``top-level domain (TLD)`` in the following format: 
``<hostname>.<domain>.<TLD>.`` This table shows how the placeholders
correspond to example values:

.. list-table::
   :header-rows: 1
   :widths: 50 50 

   * - Placeholder
     - Example

   * - ``<hostname>``
     - ``server``

   * - ``<domain>``
     - ``example``

   * - ``<TLD>``
     - ``com``

   * - ``<hostname>.<domain>.<TLD>``
     - ``server.example.com``

This example shows a DNS :term:`seed list` connection string that 
correctly uses the ``<hostname>.<domain>.<TLD>`` format. It
authenticates as user ``myDatabaseUser`` with the password
``D1fficultP%40ssw0rd``:

.. code-block:: none

   mongodb+srv://myDatabaseUser:D1fficultP%40ssw0rd@server.example.com/

The corresponding DNS configuration resembles:

.. code-block:: none

   Record                            TTL   Class    Priority Weight Port  Target
   _mongodb._tcp.server.example.com. 86400 IN SRV   0        5      27317 mongodb1.example.com.
   _mongodb._tcp.server.example.com. 86400 IN SRV   0        5      27017 mongodb2.example.com.

Individual SRV records must be in 
``_mongodb._tcp.<hostname>.<domain>.<TLD>`` format.

When a client connects to a member of the :term:`seed list`, the client 
retrieves a list of replica set members it can connect to. Clients 
often use DNS aliases in their seed lists, which means the host may
return a server list that differs from the original seed list. If this
happens, clients use the hostnames provided by the replica set 
rather than the hostnames listed in the seed list to ensure that 
replica set members can be reached via the hostnames in the resulting
replica set config. 

.. important::

   The hostnames returned in SRV records must share the same parent
   domain (in this example, ``example.com``) as the given hostname. If
   the parent domains and hostname do not match, you can't connect. 

Like the standard connection string, the DNS seed list connection string
supports specifying options as a query string. With a DNS seed list
connection string, you can also specify the following options via a TXT
record:

- ``replicaSet``
- ``authSource``

You can only specify one TXT record per :binary:`~bin.mongod` instance.
If multiple TXT records appear in the DNS or if the TXT record contains
an option other than ``replicaSet`` or ``authSource``, the client
returns an error.

The TXT record for the ``server.example.com`` DNS entry resembles the
following example:

.. code-block:: none

   Record              TTL   Class    Text
   server.example.com. 86400 IN TXT   "replicaSet=mySet&authSource=authDB"

Taken together, the DNS SRV records and the options specified in the TXT
record resolve to the following standard format connection string:

.. code-block:: none

   mongodb://myDatabaseUser:D1fficultP%40ssw0rd@mongodb1.example.com:27317,mongodb2.example.com:27017/?replicaSet=mySet&authSource=authDB

To override the options specified in a TXT record, specify the option in
the query string. For example, the following query string overrides the
``authSource`` option configured in the TXT record of the previous DNS
entry.

.. code-block:: none

   mongodb+srv://myDatabaseUser:D1fficultP%40ssw0rd@server.example.com/?connectTimeoutMS=300000&authSource=aDifferentAuthDB

Given the override for the ``authSource``, the equivalent connection
string in the standard format would resemble the following example:

.. code-block:: none

   mongodb://myDatabaseUser:D1fficultP%40ssw0rd@mongodb1.example.com:27317,mongodb2.example.com:27017/?connectTimeoutMS=300000&replicaSet=mySet&authSource=aDifferentAuthDB

.. note::

   The ``mongodb+srv`` option fails if there is no available DNS
   with records that correspond to the hostname identified in the
   connection string. If you use the ``+srv`` connection string modifier,
   the :urioption:`tls` (or the equivalent :urioption:`ssl`) option is 
   set to ``true`` for the connection. You can override this behavior by 
   explicitly setting the :urioption:`tls` 
   (or the equivalent :urioption:`ssl`) option to ``false`` with
   ``tls=false`` (or ``ssl=false``) in the query string.

   For an example that connects :binary:`~bin.mongosh` to a replica set using 
   the DNS seed list connection format, see :ref:`mongosh Connection Options 
   <example-connect-mongosh-using-srv>`.

.. _connections-standard-connection-string-format:

Standard Connection String Format
---------------------------------

This section describes the standard format of the MongoDB connection
URI used to connect to a self-hosted MongoDB standalone deployment,
replica set, or sharded cluster.

The standard URI connection scheme has the form:

.. code-block:: none

   mongodb://[username:password@]host1[:port1][,...hostN[:portN]][/[defaultauthdb][?options]]

Connection String Database Options
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You can specify a default database in the ``[/defaultauthdb]`` field of the 
connection string. The client uses the specified ``[/defaultauthdb]`` database 
as the default database. If unspecified by the connection string,
MongoDB uses the ``test`` database as the default.

You can specify the authentication database in your connection string
using the :urioption:`authSource` connection option. If specified, the
client uses this database to verify your user identity and credentials.
If :urioption:`authSource` is unspecified, it defaults to the
``[/defaultauthdb]`` database. If both :urioption:`authSource` and 
``[/defaultauthdb]`` are unspecified, :urioption:`authSource` 
defaults to the ``admin`` database.

The following example connection string sets the default database to
``myDefaultDB`` and the authentication database to ``admin``:

.. code-block:: bash

   mongodb://myDatabaseUser:D1fficultP%40ssw0rd@mongodb0.example.com:27017/myDefaultDB?authSource=admin

.. include:: /includes/list-table-connection-string-components.rst
