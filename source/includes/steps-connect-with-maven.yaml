level: 4
stepnum: 1
ref: jdbc-driver-config-maven
title: "Configure the driver for your Maven application."
content: |
  
  To connect with your Maven application, copy the dependency snippet from the
  `Maven Central Repository <https://central.sonatype.com/artifact/org.mongodb/mongodb-jdbc>`__. 
  Edit the version number in the dependency snippet to match your JDBC driver version.
  For example:

  .. code-block:: xml
     
     <dependency>
        <groupId>org.mongodb</groupId>
        <artifactId>mongodb-jdbc</artifactId>
        <version>2.1.0</version>
     </dependency>

---
level: 4
stepnum: 2
ref: maven-project-config
title: "Add the dependency to your Maven project."  
content: |

    In the ``pom.xml`` file for your project, paste the snippet into 
    the dependencies list as follows:

    .. code-block:: xml
       :emphasize-lines: 2-6

       <dependencies>
           <dependency>
               <groupId>org.mongodb</groupId>
               <artifactId>mongodb-jdbc</artifactId>
               <version>2.1.0</version>
           </dependency>
       </dependencies>

---
level: 4
stepnum: 3
ref: maven-connection-string
title: "Connect to your {+fdi+}."  
content: |

   To connect to your {+fdi+}, create a connection string and
   open a connection from your application. The connection string
   for the JDBC driver follows the format of the standard MongoDB
   connection string, except with the ``jdbc:`` prefix:

   .. code-block::
      
      jdbc:mongodb://[username:password@]host1[:port1][,...hostN[:portN]][/[defaultauthdb][?option1=value1[&option2=value2]...]

   The following example demonstrates how to open a connection.
   In addition to the connection string, you must also specify 
   the database to use through a ``Properties`` object parameter.
   To learn more, see :manual:`Connection Strings
   </reference/connection-string/#std-label-connections-connection-options>`
   and :github:`Connection Properties </mongodb/mongo-jdbc-driver#connection-properties>`.

   .. code-block:: java

      java.util.Properties p = new java.util.Properties();
      p.setProperty("database", "<databaseName>");
      Connection conn = DriverManager.getConnection("<connectionString>", p);

   .. note:: 

      The driver can only connect to |service| and not to a ``mongod`` 
      instance. Any special characters in the connection string 
      for the JDBC driver must be URL encoded.

...
