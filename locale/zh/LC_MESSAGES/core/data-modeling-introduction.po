#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/data-modeling-introduction.txt:3
msgid "Data Modeling Introduction"
msgstr "数据模型设计介绍"

#: ../source/core/data-modeling-introduction.txt:13
msgid ""
"Data in MongoDB has a *flexible schema*. Unlike SQL databases, where you "
"must determine and declare a table's schema before inserting data, MongoDB's"
" :term:`collections <collection>` do not enforce :term:`document` structure."
" This flexibility facilitates the mapping of documents to an entity or an "
"object. Each document can match the data fields of the represented entity, "
"even if the data has substantial variation. In practice, however, the "
"documents in a collection share a similar structure."
msgstr ""
"MongoDB 的数据模式是一种 *灵活模式* 。关系型数据库要求你在插入数据之前必须先定义好一个"
"表的模式结构，而MongoDB的 :term:`集合 <collection>` 则并不限制 :term:`document` 结构。"
"这种灵活性让对象和数据库文档之间的映射变得很容易。 即使数据记录之间有很大的变化，每个文档也"
"可以很好的映射到各条不同的记录。 当然在实际使用中，同一个集合中的文档往往都有一个比较类似的结构。"

#: ../source/core/data-modeling-introduction.txt:22
msgid ""
"The key challenge in data modeling is balancing the needs of the "
"application, the performance characteristics of the database engine, and the"
" data retrieval patterns. When designing data models, always consider the "
"application usage of the data (i.e. queries, updates, and processing of the "
"data) as well as the inherent structure of the data itself."
msgstr ""
"数据模型设计中最具挑战性的是在应用程序需求，数据库引擎性能要求和数据读写模式之间做权衡考量。"
"当设计数据模型的时候，一定要考虑应用程序对数据的使用模式（如查询，更新和处理）以及数据"
"本身的天然结构。"

#: ../source/core/data-modeling-introduction.txt:30
msgid "Document Structure"
msgstr "文档结构"


#: ../source/core/data-modeling-introduction.txt:34
msgid ""
"The key decision in designing data models for MongoDB applications revolves "
"around the structure of documents and how the application represents "
"relationships between data. There are two tools that allow applications to "
"represent these relationships: *references* and *embedded documents*."
msgstr ""
"设计基于MongoDB的应用程序的数据模型时的关键就是选择合适的文档结构以及确定应用程序如何"
"描述数据之间的关系。有两种方式可以用来描述这些关系： *引用* 及 *内嵌* 。"

#: ../source/core/data-modeling-introduction.txt:41
msgid "References"
msgstr "References - 引用"

#: ../source/core/data-modeling-introduction.txt:43
msgid ""
"References store the relationships between data by including links or "
"*references* from one document to another. Applications can resolve these "
":doc:`references </reference/database-references>` to access the related "
"data. Broadly, these are *normalized* data models."
msgstr ""
"引用方式通过存储链接或者 *引用* 信息来实现两个不同文档之间的关联。应用程序可以通过解析"
"这些 :doc:`数据库引用 </reference/database-references>` 来访问相关数据。"
"简单来讲，这就是 *规范化* 的数据模型。 "

#: ../source/core/data-modeling-introduction.txt:50
msgid ""
"See :ref:`data-modeling-referencing` for the strengths and weaknesses of "
"using references."
msgstr ""
"关于使用引用方式的利弊分析，请参见 :ref:`data-modeling-referencing` 。"

#: ../source/core/data-modeling-introduction.txt:54
msgid "Embedded Data"
msgstr "Embedded Data - 内嵌"

#: ../source/core/data-modeling-introduction.txt:56
msgid ""
"Embedded documents capture relationships between data by storing related "
"data in a single document structure. MongoDB documents make it possible to "
"embed document structures in a field or array within a document. These "
"*denormalized* data models allow applications to retrieve and manipulate "
"related data in a single database operation."
msgstr ""
"内嵌方式指的是把相关联的数据保存在同一个文档结构之内。MongoDB的文档结构允许一个字段"
"或者一个数组内的值为一个嵌套的文档。这种 *冗余* 的数据模型可以让应用程序在一个"
"数据库操作内完成对相关数据的读取或修改。"

#: ../source/core/data-modeling-introduction.txt:65
msgid ""
"See :ref:`data-modeling-embedding` for the strengths and weaknesses of "
"embedding documents."
msgstr ""
"关于使用内嵌方式的利弊分析，请参见 :ref:`data-modeling-embedding` 。"


#: ../source/core/data-modeling-introduction.txt:71
msgid "Atomicity of Write Operations"
msgstr "写操作的原子性"

#: ../source/core/data-modeling-introduction.txt:73
msgid ""
"In MongoDB, write operations are atomic at the :term:`document` level, and "
"no single write operation can atomically affect more than one document or "
"more than one collection. A denormalized data model with embedded data "
"combines all related data for a represented entity in a single document. "
"This facilitates atomic write operations since a single write operation can "
"insert or update the data for an entity. Normalizing the data would split "
"the data across multiple collections and would require multiple write "
"operations that are not atomic collectively."
msgstr ""

#: ../source/core/data-modeling-introduction.txt:83
msgid ""
"However, schemas that facilitate atomic writes may limit ways that "
"applications can use the data or may limit ways to modify applications. The "
":ref:`Atomicity Considerations <data-model-atomicity>` documentation "
"describes the challenge of designing a schema that balances flexibility and "
"atomicity."
msgstr ""
"但是要指出的是， 这种对原子性写操作利好的内嵌数据模型会限制应用程序对数据的使用场景。"
"这篇文档 :ref:`关于原子性 <data-model-atomicity>` 讨论了一些在模式设计时候 "
"权衡数据模式的灵活性和原子性的要做的考量。"

#: ../source/core/data-modeling-introduction.txt:90
msgid "Document Growth"
msgstr "文档的增长"

#: ../source/core/data-modeling-introduction.txt:92
msgid ""
"Some updates, such as pushing elements to an array or adding new fields, "
"increase a :term:`document's <document>` size."
msgstr ""
"有一些文档的更新操作，例如在数组里增加元素或者增加一个新字段， 会导致文档的大小变大。"
"如果文档的大小超出分配给文档的原空间大小， 那么MongoDB就需要把文档从磁盘上的现有位置"
"移动到一个新的位置以存放更多的数据。 这种数据增长的情况也会影响到是否要使用规范化"
"或是非规范模式 - 内嵌 。 文章 :ref:`关于文档增长<data-model-document-growth>` "
"讲述了一些比较具体的管理文档增长问题的讨论。" 
 

#: ../source/core/data-modeling-introduction.txt:95
msgid ""
"For the MMAPv1 storage engine, if the document size exceeds the allocated "
"space for that document, MongoDB relocates the document on disk. When using "
"the MMAPv1 storage engine, growth consideration can affect the decision to "
"normalize or denormalize data. See :ref:`Document Growth Considerations "
"<data-model-document-growth>` for more about planning for and managing "
"document growth for MMAPv1."
msgstr ""

#: ../source/core/data-modeling-introduction.txt:103
msgid "Data Use and Performance"
msgstr ""

#: ../source/core/data-modeling-introduction.txt:105
msgid ""
"When designing a data model, consider how applications will use your "
"database. For instance, if your application only uses recently inserted "
"documents, consider using :doc:`/core/capped-collections`. Or if your "
"application needs are mainly read operations to a collection, adding indexes"
" to support common queries can improve performance."
msgstr ""
"设计文档模型时，一定要考虑应用程序会如何使用你的数据。例如，假如你的应用程序通常只会"
"使用最近插入的文档，那么可以考虑使用 :doc:`/core/capped-collections` 。"
"或者如果你的应用会做大量的读操作，那么可以通过加多一些索引的方法来提升常见查询的性能。"



#: ../source/core/data-modeling-introduction.txt:111
msgid ""
"See :doc:`/core/data-model-operations` for more information on these and "
"other operational considerations that affect data model designs."
msgstr ""

#: ../source/includes/extracts/additional-resources-data-modeling-introduction.rst:4
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-data-modeling-introduction.rst:6
msgid ""
"`Thinking in Documents Part 1 (Blog Post) <https://www.mongodb.com/blog/post"
"/thinking-documents-part-1?jmp=docs>`_"
msgstr ""

#: ../source/core/data-modeling-introduction.txt:0
msgid "On this page"
msgstr ""
