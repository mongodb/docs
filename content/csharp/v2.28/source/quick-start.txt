.. _csharp-quickstart:

===========
Quick Start
===========

.. facet::
   :name: genre
   :values: tutorial

.. meta::
   :keywords: set up, runnable app, initialize, connect

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. include:: /includes/quick-start/overview.rst

Create a MongoDB Cluster
------------------------

Set Up a Free Tier Cluster in Atlas
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To set up your Atlas Free Tier Cluster required for this guide, complete the guide on 
:guides:`MongoDB Atlas Setup </atlas/account>`.

After completing the steps in the Atlas guide, you have a new MongoDB
cluster deployed in Atlas, a new database user, and
:atlas:`sample datasets loaded </sample-data/>` into your cluster. You also have
a connection string similar to the following in your copy buffer:

.. code-block:: bash

   "mongodb+srv://<db_username>:<db_password>@cluster0.abc.mongodb.net/?retryWrites=true&w=majority"

Set Your Connection String
~~~~~~~~~~~~~~~~~~~~~~~~~~

Run the following code at the command prompt to save your MongoDB
:ref:`connection string <csharp-connect-to-mongodb>` to an 
environment variable. This method is safer than including your credentials in your source 
code. 

.. code-block:: bash

   export MONGODB_URI="<your MongoDB URI>"

.. note:: PowerShell Environment Variables

   If you are using Microsoft PowerShell, run the following command to
   save your connection string in an environment variable:
   
   .. code-block:: bash
   
      set MONGODB_URI="<your MongoDB URI>"

.. important::

   Make sure to replace the ``<db_username>`` and ``<db_password>`` sections of the connection 
   string with the username and password of your Atlas database user.

For more information about connection strings, see :manual:`Connection Strings </reference/connection-string/#connection-strings>`.

Set Up Your Project
-------------------

Create the Project
~~~~~~~~~~~~~~~~~~

Create a new directory and initialize your project with the ``dotnet new`` command, as follows:

.. code-block:: shell

   mkdir csharp-quickstart
   cd csharp-quickstart
   dotnet new console

.. _csharp-add-mongodb-dependency:

Add MongoDB as a Dependency
~~~~~~~~~~~~~~~~~~~~~~~~~~~

Use the ``dotnet add`` command to add the {+driver-short+} to your project as a dependency.

.. code-block:: shell

   dotnet add package MongoDB.Driver

Query Your MongoDB Cluster from Your Application
------------------------------------------------

In this step, you'll use the {+driver-short+} 
to connect to your MongoDB cluster and run a query on the sample data. You'll need your
preferred text editor or :wikipedia:`integrated development environment (IDE) <w/index.php?title=Integrated_development_environment&oldid=1220874232>`
installed and running.

Open the file named ``Program.cs`` in the base directory of your project. Copy the
following sample code into ``Program.cs`` 

.. literalinclude:: /includes/quick-start/Program.cs
   :language: csharp
   :dedent:

This sample code runs a query against your sample dataset in MongoDB Atlas. Run it
from your command line by using the following command:

.. code-block:: bash

   dotnet run csharp-quickstart.csproj

.. include:: /includes/quick-start/query-output.rst

.. tip::

   If your output is empty, ensure you have loaded the
   :atlas:`sample datasets </sample-data/>` into your cluster.

After completing this step, you should have a working application that uses
the {+driver-short+} to connect to your MongoDB cluster, run a query on the
sample data, and print out the result.

To learn more about connecting to Atlas with the {+driver-short+}, see
the :atlas:`Atlas driver connection </driver-connection>` guide
and select :guilabel:`{+language+}` from the :guilabel:`Select your language` dropdown.

Next steps
----------

Learn how to read and modify data using the {+driver-short+} in the CRUD Operations 
guide or how to perform common operations in Usage Examples.
