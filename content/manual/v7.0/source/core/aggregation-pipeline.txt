.. _aggregation-pipeline:

====================
Aggregation Pipeline
====================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. dismissible-skills-card::
   :skill: Fundamentals of Data Transformation
   :url: https://learn.mongodb.com/skills?openTab=aggregation

.. include:: /includes/aggregation-pipeline-introduction.rst

.. |page-topic| replace:: :atlas:`run aggregation pipelines in the UI </atlas-ui/agg-pipeline>`

.. cta-banner::
   :url: https://www.mongodb.com/docs/atlas/atlas-ui/agg-pipeline
   :icon: Cloud

   .. include:: /includes/fact-atlas-compatible.rst

When you run aggregation pipelines on {+atlas+} deployments in the
{+atlas+} UI, you can preview the results at each stage.

.. _aggregation-pipeline-examples:

Complete Aggregation Pipeline Examples
--------------------------------------

The :ref:`aggregation-complete-examples` section contains complete
tutorials that provide detailed explanations of common aggregation tasks
in a step-by-step format. The tutorials include examples for MongoDB
Shell and each of the :driver:`official MongoDB drivers </>`.

.. _aggregation-pipeline-stages-details:

Additional Aggregation Pipeline Stage Details
---------------------------------------------

An aggregation pipeline consists of one or more :ref:`stages
<aggregation-pipeline-operator-reference>` that process documents:
 
- A stage does not have to output one document for every input
  document. For example, some stages may produce new documents or
  filter out documents.

- The same stage can appear multiple times in the pipeline with these
  stage exceptions: :pipeline:`$out`, :pipeline:`$merge`, and
  :pipeline:`$geoNear`.

- To calculate averages and perform other calculations in a stage, use
  :ref:`aggregation expressions <aggregation-expressions>` that specify
  :ref:`aggregation operators <aggregation-expression-operators>`. You
  will learn more about aggregation expressions in the next section.

For all aggregation stages, see
:ref:`aggregation-pipeline-operator-reference`.

.. _aggregation-pipeline-expressions:

Aggregation Expressions and Operators
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some aggregation pipeline stages accept :term:`expressions
<expression>`. Operators calculate values based on input expressions.

.. include:: /includes/expression-components.rst

.. _agg-quick-ref-field-paths:

Field Paths
~~~~~~~~~~~

:term:`Field path <field path>` expressions are used to access fields in
input documents. To specify a field path, prefix the field name or the
:ref:`dotted field path <document-dot-notation>` (if the field is in an
embedded document) with a dollar sign ``$``. For example, ``"$user"`` to
specify the field path for the ``user`` field or ``"$user.name"`` to
specify the field path to the embedded ``"user.name"`` field.

``"$<field>"`` is equivalent to ``"$$CURRENT.<field>"`` where the
:variable:`CURRENT` is a system variable that defaults to the root of
the current object, unless stated otherwise in specific stages.

For more information and examples, see :ref:`agg-field-paths`. 

Run an Aggregation Pipeline
---------------------------

To run an aggregation pipeline, use:

- :method:`db.collection.aggregate()` or

- :dbcommand:`aggregate`

.. _aggregation-update-documents:

Update Documents Using an Aggregation Pipeline
----------------------------------------------

To update documents with an aggregation pipeline, use:

.. include:: /includes/table-update-with-aggregation-availability.rst

Other Considerations
--------------------

Aggregation Pipeline Limitations
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

An aggregation pipeline has limitations on the value types and the
result size. See :doc:`/core/aggregation-pipeline-limits`.

Aggregation Pipelines and Sharded Collections
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

An aggregation pipeline supports operations on sharded collections.
See :ref:`aggregation-pipeline-sharded-collection`.

Aggregation Pipelines as an Alternative to Map-Reduce
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-use-aggregation-not-map-reduce.rst

Learn More
----------

To learn more about aggregation pipelines, see:

- :ref:`aggregation-expression-operators`

- :ref:`aggregation-pipeline-operator-reference`

.. toctree::
   :titlesonly:
   :hidden:

   Field Paths </core/field-paths>
   Optimization </core/aggregation-pipeline-optimization>
   Limits </core/aggregation-pipeline-limits>
   Sharded Collections </core/aggregation-pipeline-sharded-collections>
   Complete Pipeline Examples </tutorial/aggregation-complete-examples>
