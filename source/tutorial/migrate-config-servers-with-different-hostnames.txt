===============================================
Migrate Config Servers with Different Hostnames
===============================================

.. default-domain:: mongodb

This procedure migrates a :ref:`config server <sharding-config-server>`
in a :doc:`sharded cluster </core/sharding>`
to a new server that uses a different hostname. Use this procedure only
if the config server *will not* be accessible via the same hostname.
If possible, avoid changing the hostname so that you can instead use the
procedure to :doc:`migrate a config server and use the same hostname
<migrate-config-servers-with-same-hostname>`.

#. Disable the cluster balancer process temporarily. See
   :ref:`sharding-balancing-disable-temporarily` for more information.

#. Shut down the :ref:`config server <sharding-config-server>` you are moving.

   This will render all config data for your cluster "read only:"

   .. code-block:: sh

      rsync -az /data/configdb mongodb.config2.example.net:/data/configdb

#. Start the config instance on the new system. The default invocation
   is:

   .. code-block:: sh

      mongod --configsvr

#. Shut down all existing MongoDB processes. This includes:

   - all :program:`mongod` instances or :term:`replica sets <replica set>`
     that provide your shards.

   - the :program:`mongod` instances that provide your existing
     :ref:`config databases <config-database>`.

   - all :program:`mongos` instances in your cluster.

#. Restart all :program:`mongod` processes that provide the shard
   servers.

#. Update the :option:`--configdb <mongos --configdb>` parameter (or
   :setting:`configdb`) for all :program:`mongos` instances and
   restart all :program:`mongos` instances.

#. Re-enable the balancer to allow the cluster to resume normal
   balancing operations. See the
   :ref:`sharding-balancing-disable-temporarily` section for more
   information on managing the balancer process.
