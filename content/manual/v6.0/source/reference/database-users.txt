.. meta::
   :robots: noindex, nosnippet 

.. _security-database-users:

==============
Database Users
==============

.. meta::
   :keywords: on-prem, atlas

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

MongoDB uses database users to authenticate clients and grant varying levels of 
access to your deployment. You can assign :ref:`roles <authorization>` to 
database users based on the required level of access and specific tasks they 
need to perform. 

Use Cases 
---------

For example, you can create database users to: 

- Allow reads and writes to the database but restrict administrative access. 

- Assign administrative privileges to manage the database, perform 
  backups, and configure settings. 

- Grant read-only access for reporting and analytics purposes.

Behavior 
--------

Database users and their permissions are governed by the roles that are 
assigned to them. You can use MongoDB's built-in roles or create custom 
roles.

.. _db-users-self-managed:

Database Users in Self-Managed Deployments
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You can grant database users in self-managed deployments one or more roles. 
Roles grant users :ref:`privileges <security-user-actions>` to perform actions 
on specified :ref:`resources <resource-document>`. Users can perform actions on 
the following resources:

- Collections
- Databases
- Clusters

For more information, see :ref:`built-in-roles`.

To create and manage users in your self-managed deployment, use the 
:dbcommand:`createUser` command or the :method:`db.createUser()` method.

.. _db-users-atlas:

Database Users in {+atlas+} 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Database users in {+atlas+} have different built-in roles than self-managed
deployments. When you create a database user in {+atlas+}, Atlas built-in roles 
apply to all databases in your project. To learn more, see 
:atlas:`Altas Built-In Roles and Privileges </mongodb-users-roles-and-privileges/>`.

.. note:: 

   Database users are separate from Atlas users. Database users have access to 
   MongoDB databases, while Atlas users have access to the Atlas application 
   itself. 

You can create database users, assign built-in roles, and create custom roles in 
the :ref:`atlas-cli`, :ref:`atlas-admin-api-overview`, or the :ref:`Atlas UI 
<atlas-ui>`. To learn more, see 
:atlas:`Add Database Users </security-add-mongodb-users/#add-database-users>`.

Get Started
----------- 

To create and manage database users, see:  

- :ref:`manage-users-and-roles`.
- :ref:`Configure Database Users on Atlas <mongodb-users>`.

Details
-------

Authentication
~~~~~~~~~~~~~~

When you create a user, you can specify the authentication mechanism that the
user uses to authenticate to the database. MongoDB supports the following 
authentication mechanisms:

.. include:: /includes/fact-authentication-compat-table.rst

To learn more, see: 

- :ref:`authentication`.
- :atlas:`Configure Cluster Authentication and Authorization on Atlas </security/config-db-auth/>`.

Authorization 
~~~~~~~~~~~~~

MongoDB uses Role-Based Access Control (RBAC) to verify a user's access to 
resources and operations in the database. Although database users in {+atlas+} 
have different built-in roles than self-hosted deployments, the built-in roles 
for each type of deployment are built from the same set of 
:ref:`privilege actions <security-user-actions>`. 

To learn more, see: 

- :ref:`authorization`.
- :ref:`Built-In Roles and Privileges on Atlas <mongodb-users-roles-and-privileges>`.

.. toctree::
   :titlesonly:
   :hidden:

   Built-In Roles </reference/built-in-roles>
   Privilege Actions </reference/privilege-actions>
   Non-Root User Permissions </reference/non-root-user-permissions>
