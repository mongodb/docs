#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"


#: ../source/core/authorization.txt:15

msgid ""
"MongoDB employs Role-Based Access Control (RBAC) to govern access to a "
"MongoDB system. A user is granted one or more :ref:`roles <roles>` that "
"determine the user's access to database resources and operations. Outside of "
"role assignments, the user has no access to the system."
msgstr ""
"MongoDB支持基于角色的访问控制（RBAC）来管理对MongoDB系统的访问。一个用户可以被"
"授权一个或者多个:ref:`角色 <roles>` 以决定该用户对数据库资源和操作的访问权限。"
"在权限以外，用户是无法访问系统的。"


#: ../source/core/authorization.txt:35

msgid "Roles"
msgstr "角色"


#: ../source/core/authorization.txt:45

msgid "Privileges"
msgstr "权限"

#: ../source/core/authorization.txt:47
msgid ""
"A privilege consists of a specified resource and the actions permitted on the "
"resource."
msgstr "每个权限包括一些 *操作*以及这些操作所适用的资源。"


#: ../source/core/authorization.txt:63

msgid "Inherited Privileges"
msgstr "继承的权限"

#: ../source/core/authorization.txt:65
msgid ""
"A role can include one or more existing roles in its definition, in which "
"case the role inherits all the privileges of the included roles."
msgstr ""
"一个角色的定义中可以包含一个或者多个角色，这种情况下这个角色会继承所有其包含的"
"角色的所有权限。"

#: ../source/core/authorization.txt:68
msgid ""
"A role can inherit privileges from other roles in its database. A role "
"created on the ``admin`` database can inherit privileges from roles in any "
"database."
msgstr ""
"一个角色可以继承其数据库中其他角色的权限。一个在``admin``数据库中建立的角色可"
"以继承任意数据库角色中的权限。"


#: ../source/core/authorization.txt:5
msgid "Role-Based Access Control"
msgstr ""

#: ../source/core/authorization.txt:0
msgid "On this page"
msgstr ""

#: ../source/core/authorization.txt:21
msgid "Enable Access Control"
msgstr ""


#: ../source/core/authorization.txt:23
msgid ""
"MongoDB does not enable access control by default. You can enable "
"authorization using the :option:`--auth` or the "
":setting:`security.authorization` setting. Enabling :doc:`internal "
"authentication </core/security-internal-authentication>` also enables client"
" authorization."
msgstr ""

#: ../source/core/authorization.txt:29
msgid ""
"Once access control is enabled, users must :doc:`authenticate "
"</core/authentication>` themselves."
msgstr ""

#: ../source/core/authorization.txt:37
msgid ""
"A role grants privileges to perform the specified :ref:`actions <security-"
"user-actions>` on :doc:`resource </reference/resource-document>`. Each "
"privilege is either specified explicitly in the role or inherited from "
"another role or both."
msgstr ""

#: ../source/core/authorization.txt:50
msgid ""
"A :doc:`resource </reference/resource-document>` is a database, collection, "
"set of collections, or the cluster. If the resource is the cluster, the "
"affiliated actions affect the state of the system rather than a specific "
"database or collection. For information on the resource documents, see "
":doc:`/reference/resource-document`."
msgstr ""

#: ../source/core/authorization.txt:56
msgid ""
"An :doc:`action </reference/privilege-actions>` specifies the operation "
"allowed on the resource. For available actions see :doc:`/reference"
"/privilege-actions`."
msgstr ""


#: ../source/core/authorization.txt:72
msgid "View Role's Privileges"
msgstr ""


#: ../source/core/authorization.txt:74
msgid ""

"You can view the privileges for a role by issuing the :dbcommand:`rolesInfo`"
" command with the ``showPrivileges`` and ``showBuiltinRoles`` fields both "
"set to ``true``."
msgstr ""

#: ../source/core/authorization.txt:79
msgid "Users and Roles"

msgstr ""
"MongoDB将每个用户局限于其所生成的数据库中。MongoDB讲所有用户的定义都储存在 "
"``admin`` 数据库中，无论该用户适用于哪个数据库。所有MongoDB将用户储存于 "
"``admin``数据库 :doc:`system.users 集合 </reference/system-users-collection>` "
"中。请务必不要直接访问该集合，而使用 :ref:`角色管理命令 <role-management-"
"commands>` 查看和编辑角色。"

#: ../source/core/authorization.txt:81
msgid ""

"You can assign roles to users during the user creation. You can also update "
"existing users to grant or revoke roles. For a full list of user management "
"methods, see :ref:`user-management-methods`"

msgstr ""
"数据库中第一个被指定的用户应当是:authrole:`userAdmin` 或者 :authrole:"
"`userAdminAnyDatabase`。这个用户之后可以用来建立系统中所有其他用户。参见 :doc:"
"`/tutorial/add-user-administrator`。"


#: ../source/core/authorization.txt:85
msgid ""
"A user assigned a role receives all the privileges of that role. A user can "
"have multiple roles. By assigning to the user roles in various databases, a "
"user created in one database can have permissions to act on other databases."

msgstr ""
"MongoDB将用户和角色信息储存在受保护的 :data:`admin.system.roles` 和 :data:"
"`admin.system.users` 集合。使用 :ref:`用户管理方法 <user-management-methods>` "
"查看或编辑这些信息。"

#: ../source/core/authorization.txt:92
msgid ""

"The first user created in the database should be a user administrator who "
"has the privileges to manage other users. See :doc:`/tutorial/enable-"
"authentication`."

msgstr ""
"如果你关闭访问控制，**请勿**使用 :method:`~db.collection.insert()` 和 :method:"
"`~db.collection.update()` 等常规操作手段编辑 :data:`admin.system.roles` 和 :"
"data:`admin.system.users` 集合"


#: ../source/core/authorization.txt:97
msgid "Built-In Roles and User-Defined Roles"
msgstr ""


#: ../source/core/authorization.txt:99
msgid ""

"MongoDB provides :doc:`built-in roles </core/security-built-in-roles>` that "
"provide set of privileges commonly needed in a database system."
msgstr ""


#: ../source/core/authorization.txt:102
msgid ""
"If these built-in-roles cannot provide the desired set of privileges, "
"MongoDB provides methods to create and modify :doc:`user-defined roles "
"</core/security-user-defined-roles>`."
msgstr ""

#~ msgid "Authorization"
#~ msgstr ""

#~ msgid ""
#~ "MongoDB does not enable authorization by default. You can enable "
#~ "authorization using the :option:`--auth` or the :option:`--keyFile` options,"
#~ " or if using a configuration file, with the "
#~ ":setting:`security.authorization` or the :setting:`security.keyFile` "
#~ "settings."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB provides :doc:`built-in roles </reference/built-in-roles>`, each "
#~ "with a dedicated purpose for a common use case. Examples include the "
#~ ":authrole:`read`, :authrole:`readWrite`, :authrole:`dbAdmin`, and "
#~ ":authrole:`root` roles."
#~ msgstr ""

#~ msgid ""
#~ "Administrators also can create new roles and privileges to cater to "
#~ "operational needs. Administrators can assign privileges scoped as granularly"
#~ " as the collection level."
#~ msgstr ""

#~ msgid ""
#~ "When granted a role, a user receives all the privileges of that role. A user"
#~ " can have several roles concurrently, in which case the user receives the "
#~ "union of all the privileges of the respective roles."
#~ msgstr ""

#~ msgid ""
#~ "A role consists of privileges that pair resources with allowed operations. "
#~ "Each privilege is specified explicitly in the role or inherited from another"
#~ " role or both."
#~ msgstr ""

#~ msgid ""
#~ "Except for roles created in the ``admin`` database, a role can only include "
#~ "privileges that apply to its database and can only inherit from other roles "
#~ "in its database."
#~ msgstr ""

#~ msgid ""
#~ "A role created in the ``admin`` database can include privileges that apply "
#~ "to the ``admin`` database, other databases or to the :ref:`cluster "
#~ "<resource-cluster>` resource, and can inherit from roles in other databases "
#~ "as well as the ``admin`` database."
#~ msgstr ""

#~ msgid ""
#~ "A user assigned a role receives all the privileges of that role. The user "
#~ "can have multiple roles and can have different roles on different databases."
#~ msgstr ""

#~ msgid ""
#~ "Roles always grant privileges and never limit access. For example, if a user"
#~ " has both :authrole:`read` *and* :authrole:`readWriteAnyDatabase` roles on a"
#~ " database, the greater access prevails."
#~ msgstr ""

#~ msgid ""
#~ "A privilege :doc:`resource </reference/resource-document>` is either a "
#~ "database, collection, set of collections, or the cluster. If the cluster, "
#~ "the affiliated actions affect the state of the system rather than a specific"
#~ " database or collection."
#~ msgstr ""

#~ msgid ""
#~ "An :doc:`action </reference/privilege-actions>` is a command or method the "
#~ "user is allowed to perform on the resource. A resource can have multiple "
#~ "allowed actions. For available actions see :doc:`/reference/privilege-"
#~ "actions`."
#~ msgstr ""

#~ msgid ""
#~ "For example, a privilege that includes the :authaction:`update` action "
#~ "allows a user to modify existing documents on the resource. To additionally "
#~ "grant the user permission to create documents on the resource, the "
#~ "administrator would add the :authaction:`insert` action to the privilege."
#~ msgstr ""

#~ msgid "For privilege syntax, see :data:`admin.system.roles.privileges`."
#~ msgstr ""

#~ msgid "User-Defined Roles"
#~ msgstr ""

#~ msgid ""
#~ "User administrators can create custom roles to ensure collection-level and "
#~ "command-level granularity and to adhere to the policy of :term:`least "
#~ "privilege`. Administrators create and edit roles using the :ref:`role "
#~ "management commands <role-management-commands>`."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB scopes a user-defined role to the database in which it is created "
#~ "and uniquely identifies the role by the pairing of its name and its "
#~ "database. MongoDB stores the roles in the ``admin`` database's "
#~ ":doc:`system.roles </reference/system-roles-collection>` collection. Do not "
#~ "access this collection directly but instead use the :ref:`role management "
#~ "commands <role-management-commands>` to view and edit custom roles."
#~ msgstr ""

#~ msgid "Collection-Level Access Control"
#~ msgstr ""

#~ msgid ""
#~ "By creating a role with :ref:`privileges <privileges>` that are scoped to a "
#~ "specific collection in a particular database, administrators can implement "
#~ "collection-level access control."
#~ msgstr ""

#~ msgid "See :doc:`/core/collection-level-access-control` for more information."
#~ msgstr ""

#~ msgid "Users"
#~ msgstr ""

#~ msgid ""
#~ "MongoDB stores user credentials in the protected :data:`admin.system.users`."
#~ " Use the :ref:`user management methods <user-management-methods>` to view "
#~ "and edit user credentials."
#~ msgstr ""

#~ msgid "Role Assignment to Users"
#~ msgstr ""

#~ msgid ""
#~ "User administrators create the users that access the system's databases. "
#~ "MongoDB's :ref:`user management commands <user-management-commands>` let "
#~ "administrators create users and assign them roles."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB scopes a user to the database in which the user is created. MongoDB "
#~ "stores all user definitions in the ``admin`` database, no matter which "
#~ "database the user is scoped to. MongoDB stores users in the ``admin`` "
#~ "database's :doc:`system.users collection </reference/system-users-"
#~ "collection>`. Do not access this collection directly but instead use the "
#~ ":ref:`user management commands <user-management-commands>`."
#~ msgstr ""

#~ msgid ""
#~ "The first role assigned in a database should be either :authrole:`userAdmin`"
#~ " or :authrole:`userAdminAnyDatabase`. This user can then create all other "
#~ "users in the system. See :doc:`/tutorial/add-user-administrator`."
#~ msgstr ""

#~ msgid "Protect the User and Role Collections"
#~ msgstr ""

#~ msgid ""
#~ "MongoDB stores role and user data in the protected "
#~ ":data:`admin.system.roles` and :data:`admin.system.users` collections, which"
#~ " are only accessible using the :ref:`user management methods <user-"
#~ "management-methods>`."
#~ msgstr ""

#~ msgid ""
#~ "If you disable access control, **do not** modify the "
#~ ":data:`admin.system.roles` and :data:`admin.system.users` collections using "
#~ "normal :method:`~db.collection.insert()` and "
#~ ":method:`~db.collection.update()` operations."
#~ msgstr ""

#~ msgid "Additional Information"
#~ msgstr ""

#~ msgid ""
#~ "See the reference section for documentation of all :doc:`built-in-roles "
#~ "</reference/built-in-roles>` and all available :doc:`privilege actions "
#~ "</reference/privilege-actions>`. Also consider the reference for the form of"
#~ " the :doc:`resource documents </reference/resource-document>`."
#~ msgstr ""

#~ msgid ""
#~ "To create users see the :doc:`/tutorial/add-user-administrator` and "
#~ ":doc:`/tutorial/manage-users-and-roles` tutorials."
#~ msgstr ""
