=========================
Get All API Keys for User
=========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. include:: /includes/fact-personal-apikeys-deprecated-api.rst

.. include:: /includes/api/base-api-uri.rst

.. cond:: onprem

   This endpoint retrieves the personal |api| keys for a specific |mms| user. You
   must be one of the following users to successfully call this
   endpoint:

   * The |mms| user specified in the digest authentication

   * The |mms| user with the :authrole:`GLOBAL_OWNER` role

.. cond:: cloud

   This endpoint retrieves the personal |api| keys for a specific |mms| user. You
   must be the Cloud Manager user specified in the digest
   authentication to successfully use this endpoint.

.. include:: /includes/fact-api-key-intro.rst

Resource
--------

.. code-block:: http

   GET /users/{USER-ID}/keys

Request Parameters
------------------

Request Path Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1
   :widths: 15 10 75

   * - Path Element
     - Necessity
     - Description

   * - ``USER-ID``
     - Required
     - Unique identifier for your |mms| user.

       Use the :doc:`/users/byName/{USER-NAME} </reference/api/user-get-by-name>`
       endpoint to retrieve your user ID. Your user ID corresponds to
       the ``id`` field returned in the response from that endpoint.

Request Query Parameters
~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/api/no-query-list-parameters.rst

Request Body Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/api/no-body-parameters.rst

Response
--------

.. include:: /includes/api/get-all-note.rst

Each element in the ``results`` array is one personal |api| key.

.. list-table::
   :widths: 10 10 80
   :header-rows: 1
   :stub-columns: 1

   * - Name
     - Type
     - Description

   * - ``createdAt``
     - timestamp
     - |iso8601-time| when the personal |api| key was created.

   * - ``description``
     - string
     - Description of the personal |api| key.

   * - ``enabled``
     - boolean
     - Flag that indicates whether the personal |api| key is enabled.

   * - ``id``
     - string
     - Unique identifier of the personal |api| key.

   * - ``lastUsed``
     - string
     - |iso8601-time| when the personal |api| key was last used.

   * - ``obfuscatedKey``
     - string
     - Obfuscated |api| key. |mms| displays the full personal |api| key
       immediately after key creation only.

   * - ``usedCount``
     - number
     - Number of times that the personal |api| key has been used by the
       associated user.

   * - ``userId``
     - string
     - Unique identifer of the user associated with the personal |api|
       key.

Example Request
---------------

.. cond:: onprem

   .. code-block:: sh

      curl --digest --user "{PUBLIC-KEY}:{PRIVATE-KEY}" \
           --header "Content-Type: application/json" \
           --header "Accept: application/json" \
           --request GET "https://{+opsmgr-url+}/api/public/v1.0/users/{USER-ID}/keys/"

.. cond:: cloud

   .. code-block:: sh

      curl --digest --user "{PUBLIC-KEY}:{PRIVATE-KEY}" \
           --header "Content-Type: application/json" \
           --header "Accept: application/json" \
           --request GET "https://{+cloudmgr-url+}/api/public/v1.0/users/{USER-ID}/keys/"

Example Response
----------------

Response Header
~~~~~~~~~~~~~~~

.. include:: /includes/api/api-headers/401.rst

.. include:: /includes/api/api-headers/200.rst

Response Body
~~~~~~~~~~~~~

.. cond:: onprem

  .. code-block:: json
     :linenos:

     {
       "links": [
         {
           "href": "https://{ops-manager-host}:{port}/api/public/v1.0/users/{USER-ID}/keys?pageNum=1&itemsPerPage=100",
           "rel": "self"
         }
       ],
       "results": [
         {
           "createdAt": "2018-05-14T14:45:22Z",
           "description": "Staging Application",
           "enabled": true,
           "id": "5af9a1d29cc0cdb6acdca6d5",
           "lastUsed": "2018-05-14T14:45:23Z",
           "obfuscatedKey": "********-****-****-92732876eeae",
           "usedCount": 7,
           "userId": "{USER-ID}"
         },
         {
           "createdAt": "2017-02-02T21:35:06Z",
           "description": "Production Application",
           "enabled": true,
           "id": "5af9a1d29cc0cdb6acce1c30",
           "lastUsed": "2018-05-14T14:45:47Z",
           "obfuscatedKey": "********-****-****-4c5d3fc98d30",
           "usedCount": 69,
           "userId": "{USER-ID}"
         }
       ],
       "totalCount": 2
     }

.. cond:: cloud

  .. code-block:: json
     :linenos:

     {
       "links": [
         {
           "href": "https://cloud.mongodb.com/api/public/v1.0/users/{USER-ID}/keys?pageNum=1&itemsPerPage=100",
           "rel": "self"
         }
       ],
       "results": [
         {
           "createdAt": "2018-05-14T14:45:22Z",
           "description": "Staging Application",
           "enabled": true,
           "id": "5af9a1d29cc0cdb6acdca6d5",
           "lastUsed": "2018-05-14T14:45:23Z",
           "obfuscatedKey": "********-****-****-92732876eeae",
           "usedCount": 7,
           "userId": "{USER-ID}"
         },
         {
           "createdAt": "2017-02-02T21:35:06Z",
           "description": "Production Application",
           "enabled": true,
           "id": "5af9a1d29cc0cdb6acce1c30",
           "lastUsed": "2018-05-14T14:45:47Z",
           "obfuscatedKey": "********-****-****-4c5d3fc98d30",
           "usedCount": 69,
           "userId": "{USER-ID}"
         }
       ],
       "totalCount": 2
     }
