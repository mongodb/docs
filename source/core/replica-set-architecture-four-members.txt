======================================
Replica Sets with Four or More Members
======================================

.. default-domain:: mongodb

Although the standard replica set configuration has three members you
can deploy larger sets. Add additional members to a set to increase
redundancy or to add capacity for distributing secondary read
operations.

When adding members, ensure that:

- The set has an odd number of voting members. If you have an *even*
  number of voting members, deploy an :ref:`arbiter
  <replica-set-arbiters>` so that the set has an odd number.

  The following replica set needs an arbiter to have an odd number of
  voting members.

  .. include:: /images/replica-set-four-members-add-arbiter.rst

- A replica set can have up to 12 members, [#master-slave]_ but only 7
  voting members. See :ref:`non-voting members
  <replica-set-non-voting-members>` for more information.

  The following 9 member replica set has 7 voting members and 2
  non-voting members.

  .. include:: /images/replica-set-only-seven-voting-members.rst

- Members that cannot become primary in a :term:`failover` have
  :ref:`priority 0 configuration
  <replica-set-secondary-only-members>`.

  For instance, some members that have limited resources or networking
  constraints and should never be able to become primary. Configure
  members that should not become primary to have :ref:`priority 0
  <replica-set-secondary-only-members>`. In following replica set, the
  secondary member in the third data center has a priority of 0:

  .. include:: /images/replica-set-three-data-centers.rst

- A majority of the set's members should be in your applications main
  data center.

.. seealso:: :doc:`/tutorial/deploy-replica-set`,
  :doc:`/tutorial/add-replica-set-arbiter`, and
  :doc:`/tutorial/expand-replica-set`.

.. [#master-slave]
   .. include:: /includes/fact-master-slave-workaround.rst
