ref: views-behavior
content: |

   Views exhibit the following behavior:

   Read Only
   ~~~~~~~~~

   Views are read-only; write operations on views will error.

   Index Use and Sort Operations
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   
   - Views use indexes of the underlying collection.
 
   - .. include:: /includes/extracts/views-unsupported-natural-sort.rst
   
   Projection Restrictions
   ~~~~~~~~~~~~~~~~~~~~~~~

   .. include:: /includes/extracts/views-unsupported-projection-operators.rst

   Immutable Name
   ~~~~~~~~~~~~~~

   .. include:: /includes/extracts/views-unsupported-rename.rst

   View Creation
   ~~~~~~~~~~~~~
   
   - Views are computed on demand during read operations, and MongoDB
     executes read operations on views as part of the underlying
     aggregation pipeline. As such, views do not support operations
     such as:

     - :method:`db.collection.mapReduce()`,

     - :query:`$text` operator, since ``$text`` operation in
       aggregation is valid only for the first stage,

     - :dbcommand:`geoNear` command and :pipeline:`$geoNear` pipeline stage.

   - If the aggregation pipeline used to create the view suppresses the
     ``_id`` field, documents in the view do not have the ``_id`` field.

   Sharded View
   ~~~~~~~~~~~~
   
   Views are considered sharded if their underlying collection is
   sharded. As such, you cannot specify a sharded view for the ``from``
   field in :pipeline:`$lookup` and :pipeline:`$graphLookup` operations.

   For example, the following operation is *invalid*:
        
   .. code-block:: javascript

      db.view.find().sort({$natural: 1})

   Views and Collation
   ~~~~~~~~~~~~~~~~~~~

   .. include:: /includes/extracts/views-collation-behavior.rst

---
ref: views-unsupported-natural-sort
content: |
   You cannot specify a :operator:`$natural` sort on a view.
---
ref: views-unsupported-text-search
content: |
   :doc:`Views </core/views>` do not support text search.
---
ref: views-unsupported-mapReduce
content: |
   :doc:`Views </core/views>` do not support map-reduce operations.
---
ref: views-unsupported-rename
content: |
   You cannot rename :doc:`views </core/views>`.
---
ref: views-unsupported-geoNear
content: |
   :doc:`Views </core/views>` do not support geoNear operations (i.e.
   :dbcommand:`geoNear` command and :pipeline:`$geoNear` pipeline stage)
---
ref: views-unsupported-projection-operators
content: |
   :method:`~db.collection.find()` operations on views do not support
   the following :doc:`projection </reference/operator/projection>`
   operators:

   - :projection:`$`
   - :projection:`$elemMatch`
   - :projection:`$slice`
   - :projection:`$meta`
---
ref: _views-unsupported-projection
content: |
   :method:`db.collection.find()` operations on :doc:`views </core/views>` do not support {{projection}} projection operator.
---
ref: views-unsupported-projection-$
inherit:
   ref: _views-unsupported-projection
   file: extracts-views.yaml
replacement:
   projection: ":projection:`$`"
---
ref: views-unsupported-projection-$elemMatch
inherit:
   ref: _views-unsupported-projection
   file: extracts-views.yaml
replacement:
   projection: ":projection:`$elemMatch`"
---
ref: views-unsupported-projection-$slice
inherit:
   ref: _views-unsupported-projection
   file: extracts-views.yaml
replacement:
   projection: ":projection:`$slice`"
---
ref: views-unsupported-projection-$meta
inherit:
   ref: _views-unsupported-projection
   file: extracts-views.yaml
replacement:
   projection: ":projection:`$meta`"
---
ref: views-collation-behavior
content: |

   - You can specify a default :doc:`collation </reference/collation>`
     for a view at creation time. If no collation is specified, the
     view's default collation is the "simple" binary comparison
     collator. That is, the view does not inherit the collection's
     default collation.

   - String comparisons on the view use the view's default collation.
     An operation that attempts to change or override a view's default
     collation will fail with an error.

   - If creating a view from another view, you cannot specify a
     collation that differs from the source view's collation.

   - .. include:: /includes/extracts/views-collation-agg.rst
---
ref: views-collation-agg
content: |

   If performing an aggregation that involves multiple views, such as
   with :pipeline:`$lookup` or :pipeline:`$graphLookup`, the views must
   have the same :doc:`collation  </reference/collation>`.
---
ref: views-public-definition
content: |
   The view definition is public; i.e. :method:`db.getCollectionInfos()`
   and ``explain`` operations on the view will include the pipeline that
   defines the view. As such, avoid referring directly to sensitive fields
   and values in view definitions.
...
