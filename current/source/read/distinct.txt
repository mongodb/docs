.. _c-distinct:

==============================
Retrieve Distinct Field Values
==============================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. facet::
   :name: genre
   :values: reference
 
.. meta::
   :keywords: read, unique, code example

Overview
--------

In this guide, you can learn how to use the {+driver-short+} to retrieve the distinct
values of a specified field across a collection.

Within a collection, different documents might contain different values for a single field.
For example, one document in the ``restaurant`` collection has a ``borough`` value of ``"Manhattan"``, and
another has a ``borough`` value of ``"Queens"``. By using the {+driver-short+}, you can
retrieve all the distinct values that a field contains across multiple documents
in a collection.

Sample Data
~~~~~~~~~~~

The examples in this guide use the ``restaurants`` collection in the ``sample_restaurants``
database from the :atlas:`Atlas sample datasets </sample-data>`. To learn how to create a
free MongoDB Atlas cluster and load the sample datasets, see the
:atlas:`Get Started with Atlas </getting-started>` guide.

Distinct Command
----------------

To retrieve the distinct values for a specified field, call the ``mongoc_collection_read_command_with_opts()``
function and direct it to use the ``distinct`` command. You must also specify the collection
and field to retrieve data from.

Retrieve Distinct Values Across a Collection
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following example retrieves the distinct values of the ``borough`` field in
the ``restaurants`` collection:

.. io-code-block::
   :copyable:

   .. input:: /includes/read/distinct.c
      :start-after: start-distinct
      :end-before: end-distinct
      :language: c
      :dedent:

   .. output::
      :visible: false

      { "values" : [ "Bronx", "Brooklyn", "Manhattan", "Missing", "Queens", "Staten Island" ], ... }

The results show every distinct value that appears in the ``borough`` field
across all documents in the collection. Although several documents have the same
value in the ``borough`` field, each value appears in the results only once.

Retrieve Distinct Values Across Specified Documents
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You can provide a **query filter** to the ``distinct`` command to find the distinct
field values across a subset of documents in a collection. A query filter is an expression that specifies search
criteria used to match documents in an operation.

To learn more about creating query filters, see :ref:`c-specify-query`.

The following example retrieves the distinct values of the ``borough`` field for
all documents that have a ``cuisine`` field value of ``"Italian"``:

.. io-code-block::
   :copyable:

   .. input:: /includes/read/distinct.c
      :start-after: start-distinct-query
      :end-before: end-distinct-query
      :language: c
      :dedent:

   .. output::
      :visible: false

      { "values" : [ "Bronx", "Brooklyn", "Manhattan", "Queens", "Staten Island" ], ... }

Modify Distinct Behavior
~~~~~~~~~~~~~~~~~~~~~~~~

The ``distinct`` command can be modified by passing options to the ``mongoc_collection_read_command_with_opts()``
function. If you don't specify any options, the driver does not customize the operation.

The following table describes some options you can use to customize the
``distinct`` operation:

.. list-table::
   :widths: 30 70
   :header-rows: 1

   * - Option
     - Description

   * - ``collation``
     - | Specifies the kind of language collation to use when sorting
         results. For more information, see :manual:`Collation </reference/collation/#std-label-collation>`
         in the {+mdb-server+} manual.

   * - ``comment``
     - | Specifies a comment to attach to the operation.

For a complete list of options you can use to modify the ``distinct`` operation, see
the :manual:`Distinct </reference/command/distinct>` documentation in the
{+mdb-server+} manual.

The following example retrieves the distinct values of the ``name`` field for
all documents that have a ``borough`` field value of ``"Bronx"`` and a
``cuisine`` field value of ``"Pizza"``. It also uses
the ``comment`` option to add a comment to the operation.

.. io-code-block::
   :copyable:

   .. input:: /includes/read/distinct.c
      :start-after: start-distinct-comment
      :end-before: end-distinct-comment
      :language: c
      :dedent:

   .. output:: 
      :visible: false

      { "values" : [ "$1.25 Pizza", "18 East Gunhill Pizza", "2 Bros", "Aenos Pizza", "Alitalia Pizza Restaurant", ... ], ... }

Additional Information
----------------------

To learn more about the distinct command, see the :manual:`Distinct
</reference/command/distinct/>` page in the MongoDB Server Manual.

API Documentation
~~~~~~~~~~~~~~~~~

To learn more about the ``mongoc_collection_read_command_with_opts()`` function, see the
`API documentation <{+api-libmongoc+}/mongoc_collection_read_command_with_opts.html>`__.