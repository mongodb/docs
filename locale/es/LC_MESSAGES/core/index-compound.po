# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: 2014-04-08 19:28+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# 341d0832b63e4439960f826093a35e53
#: ../source/core/index-compound.txt:7
msgid "Compound Indexes"
msgstr ""

# 5dc424f1473c45dbb0a2b52655d77311
#: ../source/core/index-compound.txt
msgid "On this page"
msgstr ""

# 267da0e0051b4f969e1653a421c4ff8b
#: ../source/core/index-compound.txt:17
msgid ""
"MongoDB supports *compound indexes*, where a single index structure holds"
" references to multiple fields [#compound-index-field-limit]_ within a "
"collection's documents. The following diagram illustrates an example of a"
" compound index on two fields:"
msgstr ""

# 763a0cc69cbc469097ccc3c89c03355d
#: ../source/core/index-compound.txt:25
msgid ""
"MongoDB imposes a :limit:`limit of 31 fields for any compound index "
"<Number of Indexed Fields in a Compound Index>`."
msgstr ""

# 685bf5ec03bf40ddacc733e205d4b301
#: ../source/core/index-compound.txt:28
msgid "Compound indexes can support queries that match on multiple fields."
msgstr ""

# 8fd21d4bb3f640a09324662651dbaabd
#: ../source/core/index-compound.txt:31
msgid "Create a Compound Index"
msgstr ""

# 06b7f64a423344f699db5446b15378a5
#: ../source/core/index-compound.txt:33
msgid ""
"To create a :ref:`compound index <index-type-compound>` use an operation "
"that resembles the following prototype:"
msgstr ""

# 7824dbee02aa4398a984ee657f11a9f7
#: ../source/includes/fact-index-specification-field-value.rst:1
msgid ""
"The value of the field in the index specification describes the kind of "
"index for that field. For example, a value of ``1`` specifies an index "
"that orders items in ascending order. A value of ``-1`` specifies an "
"index that orders items in descending order. For additional index types, "
"see :ref:`index types <index-types>`."
msgstr ""

# dcfd79ab8a3047758d5bf9323774098a
#: ../source/core/index-compound.txt:42
msgid ""
"You may not create compound indexes that have ``hashed`` index type. You "
"will receive an error if you attempt to create a compound index that "
"includes :doc:`a hashed index field </core/index-hashed>`."
msgstr ""

# af91b195ff9744058e34f3256fb446e1
#: ../source/core/index-compound.txt:47
msgid ""
"Consider a collection named ``products`` that holds documents that "
"resemble the following document:"
msgstr ""

# 677a66352413406f8682dd87939e5ad6
#: ../source/core/index-compound.txt:61
msgid ""
"The following operation creates an ascending index on the ``item`` and "
"``stock`` fields:"
msgstr ""

# e61e3b7a7a9d423388ec666bf070c059
#: ../source/core/index-compound.txt:68
msgid ""
"The order of the fields listed in a compound index is important. The "
"index will contain references to documents sorted first by the values of "
"the ``item`` field and, within each value of the ``item`` field, sorted "
"by values of the stock field. See :ref:`index-ascending-and-descending` "
"for more information."
msgstr ""

# 383c4c9ab36d4fdabc954f62523f6846
#: ../source/core/index-compound.txt:74
msgid ""
"In addition to supporting queries that match on all the index fields, "
"compound indexes can support queries that match on the prefix of the "
"index fields. That is, the index supports queries on the ``item`` field "
"as well as both ``item`` and ``stock`` fields:"
msgstr ""

# 3030eeba2bb34613bef4ce6cd1a8e2de
#: ../source/core/index-compound.txt:84
msgid "For details, see :ref:`compound-index-prefix`."
msgstr ""

# 46e34a4b8c0c40cd8fe8315519ad3132
#: ../source/core/index-compound.txt:90
msgid "Sort Order"
msgstr ""

# 3574c7657ae6412882c9d259b3ad686e
#: ../source/core/index-compound.txt:92
msgid ""
"Indexes store references to fields in either ascending (``1``) or "
"descending (``-1``) sort order. For single-field indexes, the sort order "
"of keys doesn't matter because MongoDB can traverse the index in either "
"direction. However, for :ref:`compound indexes <index-type-compound>`, "
"sort order can matter in determining whether the index can support a sort"
" operation."
msgstr ""

# 7cd638659129444d8d67ac6e60cb106f
#: ../source/core/index-compound.txt:99
msgid ""
"Consider a collection ``events`` that contains documents with the fields "
"``username`` and ``date``. Applications can issue queries that return "
"results sorted first by ascending ``username`` values and then by "
"descending (i.e. more recent to last) ``date`` values, such as:"
msgstr ""

# d08549e614504563a8ed4a205f8ad971
#: ../source/core/index-compound.txt:108
msgid ""
"or queries that return results sorted first by descending ``username`` "
"values and then by ascending ``date`` values, such as:"
msgstr ""

# ae91001251de4383bb2a1aa628011adf
#: ../source/core/index-compound.txt:115
msgid "The following index can support both these sort operations:"
msgstr ""

# 8c5df15f44a244f995a0cd284f1435e3
#: ../source/core/index-compound.txt:121
msgid ""
"However, the above index **cannot** support sorting by ascending "
"``username`` values and then by ascending ``date`` values, such as the "
"following:"
msgstr ""

# a395df4f096d4e4ab03e8d3344cb4fdd
#: ../source/core/index-compound.txt:129
msgid ""
"For more information on sort order and compound indexes, see "
":doc:`/tutorial/sort-results-with-indexes`."
msgstr ""

# 78584ae5701a4c3f9e467d3244d0b4c9
#: ../source/core/index-compound.txt:135
msgid "Prefixes"
msgstr ""

# 9f44932417d946cca1a72b0f88e19028
#: ../source/core/index-compound.txt:137
msgid ""
"Index prefixes are the *beginning* subsets of indexed fields. For "
"example, consider the following compound index:"
msgstr ""

# 6eba7f51f94145c3a3391e2bd54767f9
#: ../source/core/index-compound.txt:144
msgid "The index has the following index prefixes:"
msgstr ""

# befaa772b5834e00b4ba22a6597606da
#: ../source/core/index-compound.txt:146
msgid "``{ item: 1 }``"
msgstr ""

# f528757c0b8a463184b64979382d1c5b
#: ../source/core/index-compound.txt:148
msgid "``{ item: 1, location: 1 }``"
msgstr ""

# 1f4586a2b4044d988458d70b275ece3d
#: ../source/core/index-compound.txt:150
msgid ""
"For a compound index, MongoDB can use the index to support queries on the"
" index prefixes. As such, MongoDB can use the index for queries on the "
"following fields:"
msgstr ""

# d13d2065e1a443edbd5a517775cc2adb
#: ../source/core/index-compound.txt:154
msgid "the ``item`` field,"
msgstr ""

# e562bb06768b432aabe0c33188dd4d29
#: ../source/core/index-compound.txt:155
msgid "the ``item`` field *and* the ``location`` field,"
msgstr ""

# ab0e74b62b234b6686fcfe149e368d4c
#: ../source/core/index-compound.txt:156
msgid "the ``item`` field *and* the ``location`` field *and* the ``stock`` field."
msgstr ""

# b382011ad0984a17bb2073ba0f92223e
#: ../source/core/index-compound.txt:158
msgid ""
"MongoDB can also use the index to support a query on ``item`` and "
"``stock`` fields since ``item`` field corresponds to a prefix. However, "
"the index would not be as efficient in supporting the query as would be "
"an index on only ``item`` and ``stock``."
msgstr ""

# fbfc67947f474dff9be82227becadd81
#: ../source/core/index-compound.txt:163
msgid ""
"However, MongoDB cannot use the index to support queries that include the"
" following fields since without the ``item`` field, none of the listed "
"fields correspond to a prefix index:"
msgstr ""

# b2a29d5badad4da1b4876acc8fac9ace
#: ../source/core/index-compound.txt:167
msgid "the ``location`` field,"
msgstr ""

# 558c96ca352b4f14a705a71c806627f7
#: ../source/core/index-compound.txt:169
msgid "the ``stock`` field, or"
msgstr ""

# 2569e701a2f341b8ba1715662f5ad720
#: ../source/core/index-compound.txt:171
msgid "the ``location`` and ``stock`` fields."
msgstr ""

# ddd0cc068d3d43cc9560064f3cfeb37e
#: ../source/core/index-compound.txt:173
msgid ""
"If you have a collection that has both a compound index and an index on "
"its prefix (e.g. ``{ a: 1, b: 1 }`` and ``{ a: 1 }``), if neither index "
"has a sparse or unique constraint, then you can remove the index on the "
"prefix (e.g. ``{ a: 1 }``). MongoDB will use the compound index in all of"
" the situations that it would have used the prefix index."
msgstr ""

# dabd58e1346346a68ae0357f9b239b03
#: ../source/core/index-compound.txt:180
msgid "Index Intersection"
msgstr ""

# e7b5a149504c4ac29e498d354ee6faf5
#: ../source/includes/fact-index-intersection-vs-compound-indexes.rst:1
msgid ""
"Starting in version 2.6, MongoDB can use :doc:`index intersection </core"
"/index-intersection>` to fulfill queries. The choice between creating "
"compound indexes that support your queries or relying on index "
"intersection depends on the specifics of your system. See :ref:`index-"
"intersection-compound-indexes` for more details."
msgstr ""

# 949c6d0098a44f7eba988238ce93386d
#: ../source/core/index-compound.txt:185
msgid "Additional Considerations"
msgstr ""

# ad4b5ae6ebdd454a82a4c647f1b65a27
#: ../source/includes/index-tutorials-considerations.rst:1
msgid ""
"If your collection holds a large amount of data, and your application "
"needs to be able to access the data while building the index, consider "
"building the index in the background, as described in :ref:`index-"
"creation-background`."
msgstr ""

# b31bcacd82c54c99973eb635d4a1d44b
#: ../source/includes/note-build-indexes-on-replica-sets.rst:1
msgid ""
"To build or rebuild indexes for a :term:`replica set`, see :ref:`index-"
"building-replica-sets`."
msgstr ""

# 1d7f034d43ad43cb8d7cab7f9d6f66c8
#: ../source/includes/index-tutorials-considerations.rst:8
msgid ""
"Some drivers may specify indexes, using ``NumberLong(1)`` rather than "
"``1`` as the specification. This does not have any affect on the "
"resulting index."
msgstr ""

# 7acb7ac0323e4e7bb7ade52e0979502a
# 00658d97b1264de48a72b9a03769a5e9
#: ../source/core/index-compound.txt:1 ../source/core/index-compound.txt:86
msgid "index"
msgstr ""

# 7acb7ac0323e4e7bb7ade52e0979502a
#: ../source/core/index-compound.txt:1
msgid "compound"
msgstr ""

# d032d28992a64901acce30704bf194fb
#: ../source/core/index-compound.txt:2
msgid "compound index"
msgstr ""

# 00658d97b1264de48a72b9a03769a5e9
#: ../source/core/index-compound.txt:86
msgid "sort order"
msgstr ""

# 33ca76732ad34f14a017c414e04d84f3
#~ msgid "Example"
#~ msgstr ""

# 0313b11210d741ef9be9fc7da1c04038
#~ msgid ""
#~ "If applications query on the ``item``"
#~ " field as well as query on both"
#~ " the ``item`` field and the ``stock``"
#~ " field, you can specify a single "
#~ "compound index to support both of "
#~ "these queries:"
#~ msgstr ""

# 6b320cb6e6eb45408ed333f6320799fa
#~ msgid ""
#~ "You may not create compound indexes "
#~ "that have ``hashed`` index fields. You"
#~ " will receive an error if you "
#~ "attempt to create a compound index "
#~ "that includes :doc:`a hashed index "
#~ "</core/index-hashed>`."
#~ msgstr ""

# 5a91f8d898b3467c86ee4c22d1d32b6b
#~ msgid ""
#~ "The order of the fields in a "
#~ "compound index is very important. In "
#~ "the previous example, the index will "
#~ "contain references to documents sorted "
#~ "first by the values of the "
#~ "``item`` field and, within each value"
#~ " of the ``item`` field, sorted by "
#~ "values of the ``stock`` field. See "
#~ ":ref:`index-ascending-and-descending` for "
#~ "more information."
#~ msgstr ""

# c243f57a5d9d4ac3a56f441ad5817344
#~ msgid ""
#~ "In addition to supporting queries that"
#~ " match on all the index fields, "
#~ "compound indexes can support queries "
#~ "that match on the prefix of the"
#~ " index fields. For details, see :ref"
#~ ":`compound-index-prefix`."
#~ msgstr ""

# 17592ce8a1474851872b6dbf8f8efb5a
#~ msgid ""
#~ "Compound indexes support queries on any"
#~ " prefix of the index fields. Index"
#~ " prefixes are the beginning subset of"
#~ " indexed fields. For example, given "
#~ "the index ``{ a: 1, b: 1, c:"
#~ " 1 }``, both ``{ a: 1 }`` "
#~ "and ``{ a: 1, b: 1 }`` are"
#~ " prefixes of the index."
#~ msgstr ""

# d34ebcaf948c487e8a09cfa7fdc51280
#~ msgid ""
#~ "If you have a collection that has"
#~ " a compound index on ``{ a: 1,"
#~ " b: 1 }``, as well as an "
#~ "index that consists of the prefix "
#~ "of that index, i.e. ``{ a: 1 "
#~ "}``, assuming none of the index "
#~ "has a sparse or unique constraints, "
#~ "then you can drop the ``{ a: "
#~ "1 }`` index. MongoDB will be able"
#~ " to use the compound index in "
#~ "all of situations that it would "
#~ "have used the ``{ a: 1 }`` "
#~ "index."
#~ msgstr ""

# ef7c8d69a8c0464da19628a927fef246
#~ msgid "For example, given the following index:"
#~ msgstr ""

# 4fd6391c45754496ac4d62effb7cc021
#~ msgid "MongoDB **can** use this index to support queries that include:"
#~ msgstr ""

# 7cd3aac028d44602abfd5c284de5c562
#~ msgid ""
#~ "the ``item`` field *and* the "
#~ "``location`` field *and* the ``stock`` "
#~ "field, or"
#~ msgstr ""

# 28e293043dce47a9a98eb38854086aa3
#~ msgid ""
#~ "only the ``item`` *and* ``stock`` "
#~ "fields; however, this index would be "
#~ "less efficient than an index on "
#~ "only ``item`` and ``stock``."
#~ msgstr ""

# 65e4adf7f25740e19b5c0a81eb2a7b6c
#~ msgid "MongoDB **cannot** use this index to support queries that include:"
#~ msgstr ""

# 144d12d566324c0c95d01f5fd5a0d268
#~ msgid "only the ``location`` field,"
#~ msgstr ""

# 36c121095f18426ea1fc01427894feb6
#~ msgid "only the ``stock`` field, or"
#~ msgstr ""

# 9a4c82817d10453fa5fd6a3fa84f32aa
#~ msgid "only the ``location`` *and* ``stock`` fields."
#~ msgstr ""

