ref: run-date-range-query-python
stepnum: 1
title: "Run a |fts| ``compound`` query with two clauses on the
       ``movies`` collection."
content: |

  a. Create a file named ``date-range.py``. 
  #. Copy and paste the following code into the ``date-range.py`` 
     file.

     The following code example:

     - Imports ``pymongo``, MongoDB's Python driver, and the ``dns``
       module, which is required to connect ``pymongo`` to ``Atlas`` 
       using a |dns| seed list connection string. 

     - Creates an instance of the ``MongoClient`` class to establish a 
       connection to your |service| cluster.

     - Uses the following ``compound`` operator clauses to query the collection:

       .. include:: /includes/fts/extracts/fts-date-range-clauses.rst

       .. include:: /includes/fts/extracts/fts-date-range-stages.rst

     - Iterates over the cursor to print the documents that match the 
       query.

     .. literalinclude:: /includes/fts/date-range/tutorial.py
        :language: python
        :linenos:
        :dedent:
        :emphasize-lines: 5

  #. .. include:: /includes/fts/facts/fact-fts-driver-connection-string.rst
  #. Run the following command to query your collection: 
  
     .. io-code-block::
        
        .. input::
           :language: bash
     
           python date-range.py

        .. output::
           :language:  python
           :visible: true

           {'genres': ['Action', 'Adventure', 'Sci-Fi'], 'title': 'Terminator Genisys', 'released': datetime.datetime(2015, 7, 1, 0, 0), 'score': 2.0}
           {'genres': ['Comedy', 'Drama', 'Music'], 'title': 'Magic Mike XXL', 'released': datetime.datetime(2015, 7, 1, 0, 0), 'score': 2.0}
           {'genres': ['Documentary', 'Biography', 'Drama'], 'title': 'Mala Mala', 'released': datetime.datetime(2015, 7, 1, 0, 0), 'score': 2.0}
           {'genres': ['Comedy', 'Drama'], 'title': 'Home Care', 'released': datetime.datetime(2015, 7, 1, 0, 0), 'score': 2.0}
           {'genres': ['Documentary', 'News'], 'title': 'Bitcoin: The End of Money as We Know It', 'released': datetime.datetime(2015, 7, 1, 0, 0), 'score': 2.0}
           {'genres': ['Drama', 'Mystery', 'Sci-Fi'], 'title': 'Pig', 'released': datetime.datetime(2015, 7, 2, 0, 0), 'score': 1.9681909084320068}

  .. include:: /includes/fts/extracts/fts-date-range-results.rst

---
ref: run-date-range-complex-query-python
stepnum: 2
title: "Run a |fts| ``compound`` query with three clauses on the
       ``movies`` collection."
content: |

  a. Create a file named ``date-range-complex.py``. 
  #. Copy and paste the following code into the ``date-range-complex.py`` 
     file.

     The following code example:

     - Imports ``pymongo``, MongoDB's Python driver, and the ``dns``
       module, which is required to connect ``pymongo`` to ``Atlas`` 
       using a |dns| seed list connection string. 

     - Creates an instance of the ``MongoClient`` class to establish a 
       connection to your |service| cluster.

     - Adds on to the previous example.

       .. include:: /includes/fts/extracts/fts-date-range-complex-clauses.rst

     - Iterates over the cursor to print the documents that match the 
       query.

     .. literalinclude:: /includes/fts/date-range/complex-tutorial.py
        :language: python
        :linenos:
        :dedent:
        :emphasize-lines: 5

  #. .. include:: /includes/fts/facts/fact-fts-driver-connection-string.rst
  #. Run the following command to query your collection: 
  
     .. io-code-block::
        
        .. input::
           :language: bash
     
           python date-range-complex.py

        .. output::
           :language:  python
           :visible: true

           {'genres': ['Action', 'Adventure', 'Sci-Fi'], 'title': 'Terminator Genisys', 'released': datetime.datetime(2015, 7, 1, 0, 0), 'score': 2.0}
           {'genres': ['Comedy', 'Drama', 'Music'], 'title': 'Magic Mike XXL', 'released': datetime.datetime(2015, 7, 1, 0, 0), 'score': 2.0}
           {'genres': ['Comedy', 'Drama'], 'title': 'Home Care', 'released': datetime.datetime(2015, 7, 1, 0, 0), 'score': 2.0}
           {'genres': ['Drama', 'Mystery', 'Sci-Fi'], 'title': 'Pig', 'released': datetime.datetime(2015, 7, 2, 0, 0), 'score': 1.9681909084320068}
           {'genres': ['Drama', 'History', 'Romance'], 'title': 'Gold Coast', 'released': datetime.datetime(2015, 7, 2, 0, 0), 'score': 1.9681909084320068}
           {'genres': ['Animation', 'Family'], 'title': 'Zarafa', 'released': datetime.datetime(2015, 7, 3, 0, 0), 'score': 1.9383430480957031}

  .. include:: /includes/fts/extracts/fts-date-range-results.rst
...
