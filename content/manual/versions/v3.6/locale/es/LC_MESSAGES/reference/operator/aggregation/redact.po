# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: 2014-04-08 18:51+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/reference/operator/aggregation/redact.txt:3
msgid "$redact (aggregation)"
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:20
msgid ""
"Restricts the contents of the documents based on information stored in "
"the documents themselves."
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:25
msgid "The :pipeline:`$redact` stage has the following prototype form:"
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:31
msgid ""
"The argument can be any valid :ref:`expression <aggregation-expressions>`"
" as long as it resolves to `$$DESCEND`_, `$$PRUNE`_, or `$$KEEP`_ system "
"variables. For more information on expressions, see :ref:`aggregation-"
"expressions`."
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:40
msgid "System Variable"
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:42
msgid "Description"
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:44
msgid "_`$$DESCEND`"
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:46
msgid ""
":pipeline:`$redact` returns the fields at the current document level, "
"excluding embedded documents. To include embedded documents and embedded "
"documents within arrays, apply the :expression:`$cond` expression to the "
"embedded documents to determine access for these embedded documents."
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:52
msgid "_`$$PRUNE`"
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:54
msgid ""
":pipeline:`$redact` excludes all fields at this current document/embedded"
" document level, **without** further inspection of any of the excluded "
"fields. This applies even if the excluded field contains embedded "
"documents that may have different access levels."
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:60
msgid "_`$$KEEP`"
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:62
msgid ""
":pipeline:`$redact` returns or keeps all fields at this current "
"document/embedded document level, **without** further inspection of the "
"fields at this level. This applies even if the included field contains "
"embedded documents that may have different access levels."
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:69
msgid "Examples"
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:71
msgid ""
"The examples in this section use the :method:`db.collection.aggregate()` "
"helper provided in the 2.6 version of the :binary:`~bin.mongo` shell."
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:76
msgid "Evaluate Access at Every Document Level"
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:78
msgid ""
"A ``forecasts`` collection contains documents of the following form where"
" the ``tags`` field lists the different access values for that "
"document/embedded document level; i.e. a value of ``[ \"G\", \"STLW\" ]``"
" specifies either ``\"G\"`` or ``\"STLW\"`` can access the data:"
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:112
msgid ""
"A user has access to view information with either the tag ``\"STLW\"`` or"
" ``\"G\"``. To run a query on all documents with year ``2014`` for this "
"user, include a :pipeline:`$redact` stage as in the following:"
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:133
#: ../source/reference/operator/aggregation/redact.txt:226
msgid "The aggregation operation returns the following \"redacted\" document:"
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:156
msgid ":expression:`$size`, :expression:`$setIntersection`"
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:159
msgid "Exclude All Fields at a Given Level"
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:161
msgid "A collection ``accounts`` contains the following document:"
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:195
msgid ""
"In this example document, the ``level`` field determines the access level"
" required to view the data."
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:198
msgid ""
"To run a query on all documents with status ``A`` and exclude *all* "
"fields contained in a document/embedded document at level ``5``, include "
"a :pipeline:`$redact` stage that specifies the system variable "
"``\"$$PRUNE\"`` in the ``then`` field:"
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:220
msgid ""
"The :pipeline:`$redact` stage evaluates the ``level`` field to determine "
"access. If the ``level`` field equals ``5``, then exclude all fields at "
"that level, even if the excluded field contains embedded documents that "
"may have different ``level`` values, such as the ``shipping_addr`` field."
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:237
msgid ""
"The result set shows that the :pipeline:`$redact` stage excluded the "
"field ``cc`` as a whole, including the ``shipping_addr`` field which "
"contained embedded documents that had ``level`` field values equal to "
"``3`` and not ``5``."
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:242
msgid ""
":doc:`/tutorial/implement-field-level-redaction` for steps to set up "
"multiple combinations of access for the same data."
msgstr ""

#~ msgid ""
#~ "The :pipeline:`$redact` pipeline operator "
#~ "takes an expression that evaluates to"
#~ " `$$DESCEND`_, `$$PRUNE`_, or `$$KEEP`_."
#~ msgstr ""

#~ msgid ""
#~ "For example, the following :pipeline:`$redact`"
#~ " pipeline uses the :expression:`$cond` "
#~ "expression [#cond-syntax]_:"
#~ msgstr ""

#~ msgid ""
#~ "In the example :expression:`$cond` expression,"
#~ " the ``<boolean-expression>`` uses a "
#~ "field or fields in the document to"
#~ " specify the conditions for either "
#~ "returning or omitting content."
#~ msgstr ""

#~ msgid "Tip"
#~ msgstr ""

#~ msgid ":expression:`$cond`."
#~ msgstr ""

#~ msgid ""
#~ "The :expression:`$cond` expression supports an"
#~ " alternate syntax that accepts an "
#~ "array instead of a document form. "
#~ "See :expression:`$cond` for details."
#~ msgstr ""

#~ msgid ""
#~ ":doc:`/tutorial/implement-redaction-with-"
#~ "multiple-tags` for steps to set up"
#~ " multiple combinations of access for "
#~ "the same data."
#~ msgstr ""

# 88d2c11d02b74703a9baf57beadb3df6
#~ msgid ""
#~ ":pipeline:`$redact` returns the *non-"
#~ "subdocument* fields at the current "
#~ "document/subdocument level. For subdocuments "
#~ "or subdocuments in arrays, apply the "
#~ ":expression:`$cond` expression to the "
#~ "subdocuments to determine access for "
#~ "these subdocuments."
#~ msgstr ""

# c03cc33b4e074d43838582c13afc8314
#~ msgid ""
#~ ":pipeline:`$redact` excludes all fields at "
#~ "this current document/subdocument level, "
#~ "**without** further inspection of any of"
#~ " the excluded fields. This applies "
#~ "even if the excluded field contains "
#~ "subdocuments that may have different "
#~ "access levels."
#~ msgstr ""

# 5efd9ae29ce14c27a45938736b489f34
#~ msgid ""
#~ ":pipeline:`$redact` returns or keeps all "
#~ "fields at this current document/subdocument"
#~ " level, **without** further inspection of"
#~ " the fields at this level. This "
#~ "applies even if the included field "
#~ "contains subdocuments that may have "
#~ "different access levels."
#~ msgstr ""

# d4dde1bb669945be92e4c6c301f115d3
#~ msgid ""
#~ "The examples in this section use "
#~ "the :method:`db.collection.aggregate()` helper "
#~ "provided in the 2.6 version of the"
#~ " :program:`mongo` shell."
#~ msgstr ""

# 1dbcb59f134743e7b3b2740df7722364
#~ msgid "Evaluate Access at Every Document/Sub-document Level"
#~ msgstr ""

# 630adc19236c423f84d6b2234bd85439
#~ msgid ""
#~ "A ``forecasts`` collection contains documents"
#~ " of the following form where the "
#~ "``tags`` field lists the different "
#~ "access values for that document/subdocument"
#~ " level; i.e. a value of ``[ "
#~ "\"G\", \"STLW\" ]`` specifies either "
#~ "``\"G\"`` or ``\"STLW\"`` can access the"
#~ " data:"
#~ msgstr ""

# 654c3434f97c47beb1a95bc37258c887
#~ msgid ""
#~ "To run a query on all documents"
#~ " with status ``A`` and exclude *all*"
#~ " fields contained in a document/subdocument"
#~ " at level ``5``, include a "
#~ ":pipeline:`$redact` stage that specifies the"
#~ " system variable ``\"$$PRUNE\"`` in the "
#~ "``then`` field:"
#~ msgstr ""

# fbeb980237ff4df0b9f9a642df6bc61e
#~ msgid ""
#~ "The :pipeline:`$redact` stage evaluates the"
#~ " ``level`` field to determine access. "
#~ "If the ``level`` field equals ``5``, "
#~ "then exclude all fields at that "
#~ "level, even if the excluded field "
#~ "contains subdocuments that may have "
#~ "different ``level`` values, such as the"
#~ " ``shipping_addr`` field."
#~ msgstr ""

# b35e7af87aaf4fd1a5bbe383700ee9e6
#~ msgid ""
#~ "The result set shows that the "
#~ ":pipeline:`$redact` stage excluded the field"
#~ " ``cc`` as a whole, including the "
#~ "``shipping_addr`` field which contained "
#~ "subdocuments that had ``level`` field "
#~ "values equal to ``3`` and not "
#~ "``5``."
#~ msgstr ""

