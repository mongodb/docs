.. _php-auth:

=========================
Authentication Mechanisms
=========================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. facet::
   :name: genre
   :values: reference
 
.. meta::
   :keywords: authorize, secure, connect, code example

.. toctree::
   :caption: Authentication

   SCRAM </security/authentication/scram>
   X.509 </security/authentication/x509>
   AWS IAM </security/authentication/aws-iam>

Overview
--------

This guide describes the mechanisms you can use in the {+library-short+} to authenticate
users.

.. important:: Percent-Encoding

   You must :wikipedia:`percent-encode <Percent-encoding>` a username and password before
   you include them in a MongoDB URI. You can use the ``rawurlencode()`` method to encode 
   these values according to the URI syntax specified in RFC 3986. Don't percent-encode the
   username or password when passing them in an options array parameter to the ``MongoDB\Client``
   constructor.

   To learn more, see the following resources:

   - `RFC 3986 <http://www.faqs.org/rfcs/rfc3986.html>`__
   - :php:`rawurlencode <rawurlencode>` in the PHP manual

MongoDB Edition Compatibility
-----------------------------

The following table lists the authentication mechanisms supported by MongoDB and
the {+mdb-server+} editions that each mechanism is compatible with. Click the name of
a mechanism to learn more about how to use it with your application.

.. list-table::
   :header-rows: 1
   :stub-columns: 1

   * - Authentication Mechanism
     - Atlas
     - Enterprise Advanced
     - Community
   * - :ref:`<php-authentication-scram>`
     - Yes
     - Yes
     - Yes
   * - :ref:`<php-authentication-x509>`
     - Yes
     - Yes
     - Yes
   * - :ref:`<php-authentication-aws>`
     - Yes
     - No
     - No
