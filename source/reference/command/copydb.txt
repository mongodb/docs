======
copydb
======

.. default-domain:: mongodb

Definition
----------

.. dbcommand:: copydb

   Copies a database from a remote host to the current host or copies a
   database to another database within the current host. Run
   :dbcommand:`copydb` in the ``admin`` database of the destination
   server with the following syntax:

   .. code-block:: javascript

      { copydb: 1,
        fromhost: <hostname>,
        fromdb: <database>,
        todb: <database>,
        slaveOk: <bool>,
        username: <username>,
        nonce: <nonce>,
        key: <key> }

   :dbcommand:`copydb` accepts the following options:

   .. include:: /reference/command/copydb-fields.rst

   The :program:`mongo` shell provides the :method:`db.copyDatabase()`
   wrapper for the :dbcommand:`copydb` command.

Behavior
--------

.. |copydb| replace:: :dbcommand:`copydb`

.. include:: /includes/fact-copydb-behavior.rst

Required Access
---------------

.. versionchanged:: 2.6

On systems running with :setting:`~security.authorization`, the :dbcommand:`copydb`
command requires the following authorization on the target and source
databases.

Source Database (``fromdb``)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Source is non-``admin`` Database
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. include:: /includes/access-copydb.rst
   :start-after: .. source-not-admin
   :end-before: .. source-admin

Source is ``admin`` Database
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. include:: /includes/access-copydb.rst
   :start-after: .. source-admin

Source Database is on a Remote Server
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If copying from a remote server and the remote server has
authentication enabled, you must authenticate to the remote host as a
user with the proper authorization. See
:ref:`copydb-authentication`.

Target Database (``todb``)
~~~~~~~~~~~~~~~~~~~~~~~~~~

Copy from non-``admin`` Database
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.. include:: /includes/access-copydb.rst
   :start-after: .. target-non-admin-source
   :end-before: .. target-admin-source

Copy from ``admin`` Database
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. include:: /includes/access-copydb.rst
   :start-after: .. target-admin-source
   :end-before: .. source-not-admin

.. _copydb-authentication:

Authentication
--------------

If copying from a remote server and the remote server has
authentication enabled, then you must include a ``username``,
``nonce``, and ``key``.

The ``nonce`` is a one-time password that you request from the remote
server using the :dbcommand:`copydbgetnonce` command, as in the following:

.. code-block:: javascript

   use admin
   mynonce = db.runCommand( { copydbgetnonce : 1, fromhost: <hostname> } ).nonce

If running the :dbcommand:`copydbgetnonce` command directly on the
remote host, you can omit the ``fromhost`` field in the
:dbcommand:`copydbgetnonce` command.

The ``key`` is a hash generated as follows:

.. code-block:: javascript

   hex_md5(mynonce + username + hex_md5(username + ":mongo:" + password))

Replica Sets
------------

With :term:`read preference` configured to set the ``slaveOk`` option
to ``true``, you may run :dbcommand:`copydb` on a :term:`secondary`
member of a :term:`replica set`.

Sharded Clusters
----------------

- Do not use :dbcommand:`copydb` from a :program:`mongos` instance.

- Do not use :dbcommand:`copydb` to copy databases that contain sharded
  collections.

Examples
--------

Copy on the Same Host
~~~~~~~~~~~~~~~~~~~~~

To copy from the same host, omit the ``fromhost`` field.

The following command copies the ``test`` database to a new ``records``
database on the current :program:`mongod` instance:

.. code-block:: javascript

   use admin
   db.runCommand({
      copydb: 1,
      fromdb: "test",
      todb: "records"
   })

Copy from a Remote Host to the Current Host
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To copy from a remote host, include the ``fromhost`` field.

The following command copies the ``test`` database from the remote host
``example.net`` to a new ``records`` database on the current
:program:`mongod` instance:

.. code-block:: javascript

   use admin
   db.runCommand({
      copydb: 1,
      fromdb: "test",
      todb: "records",
      fromhost: "example.net"
   })

Copy Databases from Remote ``mongod`` Instances that Enforce Authentication
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To copy from a remote host that enforces authentication, include the
``fromhost``, ``username``, ``nonce`` and ``key`` fields.

The following command copies the ``test`` database from a remote host
``example.net`` that runs with :setting:`~security.authorization` to a new ``records``
database on the local :program:`mongod` instance. Because the
``example.net`` has :setting:`~security.authorization` enabled, the command includes the
``username``, ``nonce`` and ``key`` fields:

.. code-block:: javascript

   use admin
   db.runCommand({
      copydb: 1,
      fromdb: "test",
      todb: "records",
      fromhost: "example.net",
      username: "reportingAdmin",
      nonce: "<nonce>",
      key: "<passwordhash>"
   })

.. seealso::

   - :method:`db.copyDatabase()`

   - :dbcommand:`clone` and :method:`db.cloneDatabase()`

   - :doc:`/core/backups` and :doc:`/core/import-export`
