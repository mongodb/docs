title: Connect as a user with privileges to manage users and roles.
stepnum: 1
ref: connect-as-user-admin
pre: |
  Connect to the :binary:`~bin.mongod` or :binary:`~bin.mongos` with privileges
  to manage users and roles, such as a user with
  :authrole:`userAdminAnyDatabase` role. The following procedure uses the
  ``myUserAdmin`` created in :doc:`/tutorial/enable-authentication`.
action:
  language: javascript
  code: |
     mongo --port 27017 -u myUserAdmin -p  --authenticationDatabase 'admin'
  post: |
     If you do not specify the password to the :option:`-p <mongo -p>`
     command-line option, the :binary:`~bin.mongo` shell prompts for the
     password.
---
stepnum: 2
title: Create a role with appropriate privileges.
ref: create-role
pre: |
  In the ``admin`` database, :method:`create <db.createRole()>` a new
  role with :authaction:`changeOwnPassword` and
  :authaction:`changeOwnCustomData`.
action:
  language: javascript
  code: |
    use admin
    db.createRole(
       { role: "changeOwnPasswordCustomDataRole",
         privileges: [
            { 
              resource: { db: "", collection: ""},
              actions: [ "changeOwnPassword", "changeOwnCustomData" ]
            }
         ],
         roles: []
       }
    )
---
stepnum: 3
title: Add a user with this role.
ref: add-user
pre: |
  In the ``test`` database, :method:`create <db.createUser()>` a new user with
  the created ``"changeOwnPasswordCustomDataRole"`` role. For example, the following
  operation creates a user with both the built-in role :authrole:`readWrite` and
  the user-created ``"changeOwnPasswordCustomDataRole"``.

  .. tip::

     .. include:: /includes/extracts/4.2-changes-passwordPrompt.rst

action:
  language: javascript
  code: |
    use test
    db.createUser(
       {
         user:"user123",
         pwd: passwordPrompt(),  // or cleartext password
         roles:[ "readWrite", { role:"changeOwnPasswordCustomDataRole", db:"admin" } ] 
       }
    )
post: |
  To grant an existing user the new role, use
  :method:`db.grantRolesToUser()`.
...
