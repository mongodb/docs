.. _ak8so-import-projects:

======================================
Import |service| Projects into |ak8so|
======================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2 
   :class: singlecol

If you have existing |k8s| deployments and wish to start using |ak8so|, 
you can use the |service| CLI to export |service| projects, 
deployments, and database users with the new 
``atlas kubernetes config generate`` command.

With this command, you can export your configuration in an 
|ak8so|-compatible format. Once exported, you can import this 
configuration into the |k8s| or Openshift cluster on which |ak8so| 
runs.

Overview
--------

The ``atlas kubernetes config generate`` command outputs a ``.yaml``
configuration to ``stdout`` which includes the following |ak8so| 
resources:

- An :ref:`atlasdeployment-custom-resource`
- An :ref:`atlasbackupschedule-custom-resource`
- An :ref:`atlasbackuppolicy-custom-resource`
- An :ref:`atlasproject-custom-resource`
- An :ref:`atlasdatabaseuser-custom-resource`
- Optionally with ``--includeSecretsData``, an |service| credentials
  secret. These credentials will be imported as plain text. 

The command takes the following parameters:

.. list-table::
   :widths: 30 70
   :header-rows: 1

   * - Parameter
     - Description

   * - ``--projectId``
     - The ID of the |service| project to export. If you do not set 
       this explicitly, it will default to the ``projectId`` value in 
       your ``atlascli`` configuration file. Required.

   * - ``--clusterName``
     - A comma-separated list of names of the clusters to export. These
       must be clusters in the project specified in the ``projectId`` 
       parameter. If you don't pass in this parameter, the command
       exports all clusters in the specified project. Optional.

   * - ``--includeSecrets``
     - Populates an entry in the configuration file for an |service| 
       credentials secret. If you don't pass in this parameter, the 
       command creates a secret, but does not populate it with data.

   * - ``--targetNamespace``
     - The Kubernetes namespace to export resources to. The command
       fills the ``metadata.namespace`` field of each exported |service| 
       entity with the value of this parameter. Required.

Compatibility
-------------

``atlascli`` exports configurations from Atlas in a format that is
version-dependent on |ak8so|. The following table describes which 
versions of ``atlascli`` support which versions of |ak8so|:

.. list-table::
   :widths: 40 60
   :header-rows: 1

   * - ``atlascli`` version
     - |ak8so| versions

   * - 1.4.0
     - 1.5.0

Examples
--------

The following examples assume a project named ``sampleProject``,
with clusters named ``sample1``, ``sample2``, and ``sample3``, a 
Project ID of 63500d1139dd494b92fe4376, and a
target namespace of ``sampleNamespace``.

To export the entire project, including all |service| deployments and 
secrets with credentials, run the following command:

.. code-block:: sh

   atlas kubernetes config generate --projectId=63500d1139dd494b92fe4376 \
   --includeSecrets --targetNamespace=sampleNamespace

To export two specific |service| deployments from the project without
secret credentials, run the following command:

.. code-block:: sh

   atlas kubernetes config generate --projectId=63500d1139dd494b92fe4376 \
   --clusterName=sample1,sample2 --targetNamespace=sampleNamespace

In either of the above examples, you can apply the generated 
configuration to your |k8s| or Openshift cluster by piping the output
into the ``kubectl apply`` command. The following example illustrates 
this with the above command:

.. code-block:: sh

   atlas kubernetes config generate --projectId=63500d1139dd494b92fe4376 \
   --clusterName=sample1,sample2 --targetNamespace=sampleNamespace \
   | kubectl apply -f -

Alternatively, you can save the generated configuration by redirecting 
``stdout`` to a ``.yaml`` file. The following command imports a single 
|service| deployment from the project without secret credentials and saves the
output to ``myAtlasProject.yaml``.

.. code-block:: sh

   atlas kubernetes config generate --projectId=63500d1139dd494b92fe4376 \
   --clusterName=sample3 --targetNamespace=sampleNamespace \
   > myAtlasProject.yaml

Applying the Configuration
--------------------------

To apply the generated configuration to your |k8s| or Openshift 
cluster in this scenario, pass the ``.yaml`` file as an argument to
the ``kubectl apply`` command.

.. code-block:: sh

   kubectl apply -f myAtlasProject.yaml