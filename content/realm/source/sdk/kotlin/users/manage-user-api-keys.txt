.. meta::
   :robots: noindex, nosnippet

.. _kotlin-manage-user-api-keys:

=================================
Manage User API Keys - Kotlin SDK
=================================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

You can use the Kotlin SDK to create and manage :ref:`User API keys
<api-key-authentication-user-api-key>` that allow devices or services to 
communicate with Realm on behalf of an existing user without requiring the user
to re-authenticate.

User API keys are associated with a user object created by another
non-anonymous authentication provider. Each user can associate up to 20
user keys with their account. 

You can manage keys through the
`user.apiKeyAuth <{+kotlin-sync-prefix+}io.realm.kotlin.mongodb.auth/-api-key-auth/index.html>`__
interface.

.. tip::

   User API keys are not the same as **server API keys**, which allow a
   user or service to directly authenticate with Realm using the
   :ref:`API Key authentication provider <kotlin-login-api-key>`. To learn
   more about server API keys, refer to :ref:`API Key Authentication
   <api-key-authentication>`.


.. _kotlin-create-user-key:

Create a User API Key
---------------------

To create a new user API key, pass a unique key name to `ApiKeyAuth.create()
<{+kotlin-sync-prefix+}io.realm.kotlin.mongodb.auth/-api-key-auth/create.html>`__. 
The created key will be associated with the logged-in user
and can be used to interact with Realm on their behalf. You cannot
create user API keys for anonymous users.

.. include:: /includes/note-store-user-api-key-value.rst

.. literalinclude:: /examples/generated/kotlin/UserAPIKeysTest.snippet.create-api-key.kt
    :language: kotlin

.. _kotlin-look-up-user-key:

Look up a User API Key
----------------------

To get a list of all user API keys associated with the logged-in user,
call  
`ApiKeyAuth.fetchAll() <{+kotlin-sync-prefix+}io.realm.kotlin.mongodb.auth/-api-key-auth/fetch-all.html>`__.

To find a specific user API key for the logged-in user, pass the key's ``id`` 
to 
`ApiKeyAuth.fetch() <{+kotlin-sync-prefix+}io.realm.kotlin.mongodb.auth/-api-key-auth/fetch.html>`__.

.. literalinclude:: /examples/generated/kotlin/UserAPIKeysTest.snippet.fetch-api-key.kt
    :language: kotlin

.. _kotlin-enable-disable-user-key:

Enable or Disable a User API Key
--------------------------------

You can enable or disable a key by calling 
`ApiKeyAuth.enable() <{+kotlin-sync-prefix+}io.realm.kotlin.mongodb.auth/-api-key-auth/enable.html>`__ 
or 
`ApiKeyAuth.disable() <{+kotlin-sync-prefix+}io.realm.kotlin.mongodb.auth/-api-key-auth/disable.html>`__
with the key's ``id``.
You cannot use disabled keys to log in on behalf of the user.

.. literalinclude:: /examples/generated/kotlin/UserAPIKeysTest.snippet.enable-api-key.kt
    :language: kotlin

.. _kotlin-delete-user-key:

Delete a User API Key
---------------------

To permanently remove a specific user API key, pass the
key's ``id`` to   
`ApiKeyAuth.delete() <{+kotlin-sync-prefix+}io.realm.kotlin.mongodb.auth/-api-key-auth/delete.html>`__.
You cannot recover deleted keys or use them to log in on behalf of the user.

.. literalinclude:: /examples/generated/kotlin/UserAPIKeysTest.snippet.delete-api-key.kt
    :language: kotlin

