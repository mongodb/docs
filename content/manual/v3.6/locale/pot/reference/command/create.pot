# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/command/create.txt:3
msgid "create"
msgstr ""

#: ../source/reference/command/create.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/command/create.txt:20
msgid "Added support for the creation of views and the specification of :ref:`collation`."
msgstr ""

#: ../source/reference/command/create.txt:23
msgid "Explicitly creates a collection or view. :dbcommand:`create` has the following form:"
msgstr ""

#: ../source/reference/command/create.txt:46
msgid ":dbcommand:`create` has the following fields:"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:7
msgid "Field"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:9
msgid "Type"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:11
#: ../source/includes/extracts/table-validationLevel-values.rst:6
#: ../source/includes/extracts/table-validationAction-values.rst:7
#: ../source/includes/extracts/table-validationLevel-values.rst:6
#: ../source/includes/extracts/table-validationAction-values.rst:7
msgid "Description"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:13
msgid "``create``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:15
#: ../source/includes/apiargs/dbcommand-create-field.rst:148
#: ../source/includes/apiargs/dbcommand-create-field.rst:161
#: ../source/includes/apiargs/dbcommand-create-field.rst:202
msgid "string"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:17
#: ../source/includes/apiargs/dbcommand-create-field.rst:282
msgid "The name of the new collection."
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:21
msgid "``capped``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:23
#: ../source/includes/apiargs/dbcommand-create-field.rst:33
msgid "boolean"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:25
#: ../source/includes/apiargs/dbcommand-create-field.rst:288
msgid "Optional. To create a :term:`capped collection`, specify ``true``. If you specify ``true``, you must also set a maximum size in the ``size`` field."
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:31
msgid "``autoIndexId``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:35
#: ../source/includes/apiargs/dbcommand-create-field.rst:296
msgid "Optional. Specify ``false`` to disable the automatic creation of an index on the ``_id`` field."
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:40
#: ../source/includes/apiargs/dbcommand-create-field.rst:301
msgid "For replica sets, do not set ``autoIndexId`` to ``false``."
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:46
msgid "``size``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:48
#: ../source/includes/apiargs/dbcommand-create-field.rst:59
#: ../source/includes/apiargs/dbcommand-create-field.rst:73
msgid "integer"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:50
#: ../source/includes/apiargs/dbcommand-create-field.rst:309
msgid "Optional. Specify a maximum size in bytes for a capped collection. Once a capped collection reaches its maximum size, MongoDB removes the older documents to make space for the new documents. The ``size`` field is required for capped collections and ignored for other collections."
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:57
msgid "``max``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:61
#: ../source/includes/apiargs/dbcommand-create-field.rst:318
msgid "Optional. The maximum number of documents allowed in the capped collection. The ``size`` limit takes precedence over this limit. If a capped collection reaches the ``size`` limit before it reaches the maximum number of documents, MongoDB removes old documents. If you prefer to use the ``max`` limit, ensure that the ``size`` limit, which is required for a capped collection, is sufficient to contain the maximum number of documents."
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:71
msgid "``flags``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:75
#: ../source/includes/apiargs/dbcommand-create-field.rst:330
msgid "Optional. Available for the MMAPv1 storage engine only to set the :collflag:`usePowerOf2Sizes` and the :collflag:`noPadding` flags. To set, specify one of the following values:"
msgstr ""

#: ../source/includes/list-collection-user-flags.rst:1
#: ../source/includes/list-collection-user-flags.rst:1
msgid "``0`` corresponds to :collflag:`usePowerOf2Sizes` flag set to ``false`` and :collflag:`noPadding` flag set to ``false``."
msgstr ""

#: ../source/includes/list-collection-user-flags.rst:4
#: ../source/includes/list-collection-user-flags.rst:4
msgid "``1`` corresponds to :collflag:`usePowerOf2Sizes` flag set to ``true`` and :collflag:`noPadding` flag set to ``false``."
msgstr ""

#: ../source/includes/list-collection-user-flags.rst:7
#: ../source/includes/list-collection-user-flags.rst:7
msgid "``2`` corresponds to :collflag:`usePowerOf2Sizes` flag set to ``false`` and :collflag:`noPadding` flag set to ``true``."
msgstr ""

#: ../source/includes/list-collection-user-flags.rst:10
#: ../source/includes/list-collection-user-flags.rst:10
msgid "``3`` corresponds to :collflag:`usePowerOf2Sizes` flag set to ``true`` and :collflag:`noPadding` flag set to ``true``."
msgstr ""

#: ../source/includes/list-collection-user-flags.rst:14
#: ../source/includes/list-collection-user-flags.rst:14
msgid "MongoDB 3.0 ignores the :collflag:`usePowerOf2Sizes` flag. See :dbcommand:`collMod` and :method:`db.createCollection()` for more information."
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:81
#: ../source/includes/apiargs/dbcommand-create-field.rst:336
msgid "Defaults to ``1``."
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:85
#: ../source/includes/apiargs/dbcommand-create-field.rst:340
msgid "Add support for setting the new :collflag:`noPadding` flag."
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:89
#: ../source/includes/apiargs/dbcommand-create-field.rst:344
msgid "Do not set ``noPadding`` if the workload includes removes or any updates that may cause documents to grow. For more information, see :ref:`exact-fit-allocation`."
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:95
msgid "``storageEngine``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:97
#: ../source/includes/apiargs/dbcommand-create-field.rst:120
#: ../source/includes/apiargs/dbcommand-create-field.rst:179
#: ../source/includes/apiargs/dbcommand-create-field.rst:269
msgid "document"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:99
#: ../source/includes/apiargs/dbcommand-create-field.rst:352
msgid "Optional. Available for the WiredTiger storage engine only."
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:103
#: ../source/includes/apiargs/dbcommand-create-field.rst:356
msgid "Allows users to specify configuration to the storage engine on a per-collection basis when creating a collection. The value of the ``storageEngine`` option should take the following form:"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:111
#: ../source/includes/apiargs/dbcommand-create-field.rst:364
msgid "Storage engine configuration specified when creating collections are validated and logged to the :term:`oplog` during replication to support replica sets with members that use different storage engines."
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:118
msgid "``validator``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:122
#: ../source/includes/apiargs/dbcommand-create-field.rst:373
msgid "Optional. Allows users to specify :doc:`validation rules or expressions </core/schema-validation>` for the collection. For more information, see :doc:`/core/schema-validation`."
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:128
#: ../source/includes/apiargs/dbcommand-create-field.rst:379
msgid "The ``validator`` option takes a document that specifies the validation rules or expressions. You can specify the expressions using the same operators as the :ref:`query operators <query-selectors>` with the exception of :query:`$geoNear`, :query:`$near`, :query:`$nearSphere`, :query:`$text`, and :query:`$where`."
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:136
#: ../source/includes/apiargs/dbcommand-create-field.rst:387
msgid "Validation occurs during updates and inserts. Existing documents do not undergo validation checks until modification."
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:139
#: ../source/includes/apiargs/dbcommand-create-field.rst:390
msgid "You cannot specify a validator for collections in the ``admin``, ``local``, and ``config`` databases."
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:142
#: ../source/includes/apiargs/dbcommand-create-field.rst:393
msgid "You cannot specify a validator for ``system.*`` collections."
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:146
#: ../source/includes/extracts/table-validationLevel-values.rst:4
#: ../source/includes/extracts/table-validationLevel-values.rst:4
msgid "``validationLevel``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:150
#: ../source/includes/apiargs/dbcommand-create-field.rst:399
msgid "Optional. Determines how strictly MongoDB applies the validation rules to existing documents during an update."
msgstr ""

#: ../source/includes/extracts/table-validationLevel-values.rst:8
#: ../source/includes/extracts/table-validationLevel-values.rst:8
msgid "``\"off\"``"
msgstr ""

#: ../source/includes/extracts/table-validationLevel-values.rst:10
#: ../source/includes/extracts/table-validationLevel-values.rst:10
msgid "No validation for inserts or updates."
msgstr ""

#: ../source/includes/extracts/table-validationLevel-values.rst:12
#: ../source/includes/extracts/table-validationLevel-values.rst:12
msgid "``\"strict\"``"
msgstr ""

#: ../source/includes/extracts/table-validationLevel-values.rst:14
#: ../source/includes/extracts/table-validationLevel-values.rst:14
msgid "**Default** Apply validation rules to all inserts and all updates."
msgstr ""

#: ../source/includes/extracts/table-validationLevel-values.rst:18
#: ../source/includes/extracts/table-validationLevel-values.rst:18
msgid "``\"moderate\"``"
msgstr ""

#: ../source/includes/extracts/table-validationLevel-values.rst:20
#: ../source/includes/extracts/table-validationLevel-values.rst:20
msgid "Apply validation rules to inserts and to updates on existing *valid* documents. Do not apply rules to updates on existing *invalid* documents."
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:159
#: ../source/includes/extracts/table-validationAction-values.rst:5
#: ../source/includes/extracts/table-validationAction-values.rst:5
msgid "``validationAction``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:163
#: ../source/includes/apiargs/dbcommand-create-field.rst:410
msgid "Optional. Determines whether to ``error`` on invalid documents or just ``warn`` about the violations but allow invalid documents to be inserted."
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:170
#: ../source/includes/apiargs/dbcommand-create-field.rst:417
msgid "Validation of documents only applies to those documents as determined by the ``validationLevel``."
msgstr ""

#: ../source/includes/extracts/table-validationAction-values.rst:9
#: ../source/includes/extracts/table-validationAction-values.rst:9
msgid "``\"error\"``"
msgstr ""

#: ../source/includes/extracts/table-validationAction-values.rst:11
#: ../source/includes/extracts/table-validationAction-values.rst:11
msgid "**Default** Documents must pass validation before the write occurs. Otherwise, the write operation fails."
msgstr ""

#: ../source/includes/extracts/table-validationAction-values.rst:15
#: ../source/includes/extracts/table-validationAction-values.rst:15
msgid "``\"warn\"``"
msgstr ""

#: ../source/includes/extracts/table-validationAction-values.rst:17
#: ../source/includes/extracts/table-validationAction-values.rst:17
msgid "Documents do not have to pass validation. If the document fails validation, the write operation logs the validation failure."
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:177
msgid "``indexOptionDefaults``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:181
#: ../source/includes/apiargs/dbcommand-create-field.rst:426
msgid "Optional. Allows users to specify a default configuration for indexes when creating a collection."
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:184
#: ../source/includes/apiargs/dbcommand-create-field.rst:429
msgid "The ``indexOptionDefaults`` option accepts a ``storageEngine`` document, which should take the following form:"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:191
#: ../source/includes/apiargs/dbcommand-create-field.rst:436
msgid "Storage engine configuration specified when creating indexes are validated and logged to the :term:`oplog` during replication to support replica sets with members that use different storage engines."
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:200
msgid "``viewOn``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:204
#: ../source/includes/apiargs/dbcommand-create-field.rst:447
msgid "The name of the source collection or view from which to create the view. The name is not the full namespace of the collection or view; i.e. does not include the database name and implies the same database as the view to create. You must create views in the same database as the source collection."
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:211
#: ../source/includes/apiargs/dbcommand-create-field.rst:229
#: ../source/includes/apiargs/dbcommand-create-field.rst:454
#: ../source/includes/apiargs/dbcommand-create-field.rst:470
msgid "See also :method:`db.createView()`."
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:218
msgid "``pipeline``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:220
msgid "array"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:222
#: ../source/includes/apiargs/dbcommand-create-field.rst:463
msgid "An array that consists of the :ref:`aggregation pipeline stage <aggregation-pipeline>`.  :dbcommand:`create` creates the view by applying the specified ``pipeline`` to the ``viewOn`` collection or view."
msgstr ""

#: ../source/includes/extracts/views-public-definition.rst:1
#: ../source/includes/extracts/views-public-definition.rst:1
#: ../source/includes/extracts/views-public-definition.rst:1
msgid "The view definition is public; i.e. :method:`db.getCollectionInfos()` and ``explain`` operations on the view will include the pipeline that defines the view. As such, avoid referring directly to sensitive fields and values in view definitions."
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:236
msgid "``collation``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:240
#: ../source/includes/apiargs/dbcommand-create-field.rst:479
msgid "Specifies the default :ref:`collation <collation>` for the collection or the view."
msgstr ""

#: ../source/includes/extracts/collation-description.rst:1
#: ../source/includes/extracts/collation-description.rst:1
msgid ":doc:`Collation </reference/collation>` allows users to specify language-specific rules for string comparison, such as rules for lettercase and accent marks."
msgstr ""

#: ../source/includes/extracts/collation-option-specification.rst:2
#: ../source/includes/extracts/collation-option-specification.rst:2
msgid "The collation option has the following syntax:"
msgstr ""

#: ../source/includes/extracts/collation-option-specification.rst:17
#: ../source/includes/extracts/collation-option-specification.rst:17
msgid "When specifying collation, the ``locale`` field is mandatory; all other collation fields are optional. For descriptions of the fields, see :ref:`collation-document-fields`."
msgstr ""

#: ../source/includes/extracts/collation-collection-level.rst:1
#: ../source/includes/extracts/collation-collection-level.rst:1
msgid "If you specify a collation at the collection level:"
msgstr ""

#: ../source/includes/extracts/collation-collection-level.rst:3
#: ../source/includes/extracts/collation-collection-level.rst:3
msgid "Indexes on that collection will be created with that collation unless the index creation operation explicitly specify a different collation."
msgstr ""

#: ../source/includes/extracts/collation-collection-level.rst:6
#: ../source/includes/extracts/collation-collection-level.rst:6
msgid "Operations on that collection use the collection's default collation unless they explicitly specify a different collation."
msgstr ""

#: ../source/includes/extracts/collation-single-per-operation.rst:2
#: ../source/includes/extracts/collation-single-per-operation.rst:2
msgid "You cannot specify multiple collations for an operation. For example, you cannot specify different collations per field, or if performing a find with a sort, you cannot use one collation for the find and another for the sort."
msgstr ""

#: ../source/includes/extracts/collation-unspecified.rst:1
#: ../source/includes/extracts/collation-unspecified.rst:1
msgid "If no collation is specified for the collection or for the operations, MongoDB uses the simple binary comparison used in prior versions for string comparisons."
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:251
#: ../source/includes/apiargs/dbcommand-create-field.rst:490
msgid "For a view, if no collation is specified, the view's default collation is the \"simple\" binary comparison collator. For a view on a collection, the view does not inherit the collection's collation settings. For a view on another view, the to be created view must specify the same collation settings."
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:257
#: ../source/includes/apiargs/dbcommand-create-field.rst:496
msgid "After you create the collection or the view, you cannot update its default collation."
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:260
#: ../source/includes/apiargs/dbcommand-create-field.rst:499
msgid "For an example that specifies the default collation during the creation of a collection, see :ref:`create-collation-example`."
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:267
msgid "``writeConcern``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:271
#: ../source/includes/apiargs/dbcommand-create-field.rst:508
msgid "Optional. A document that expresses the :doc:`write concern </reference/write-concern>` for the operation. Omit to use the default write concern."
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:0
msgid "field string create"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:0
msgid "field boolean capped"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:0
msgid "field boolean autoIndexId"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:0
msgid "field integer size"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:0
msgid "field integer max"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:0
msgid "field integer flags"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:0
msgid "field document storageEngine"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:0
msgid "field document validator"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:0
msgid "field string validationLevel"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:0
msgid "field string validationAction"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:0
msgid "field document indexOptionDefaults"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:0
msgid "field string viewOn"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:0
msgid "field array pipeline"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:0
msgid "field collation"
msgstr ""

#: ../source/includes/apiargs/dbcommand-create-field.rst:0
msgid "field document writeConcern"
msgstr ""

#: ../source/reference/command/create.txt:50
msgid "The :method:`db.createCollection()` method and the :method:`db.createView()` method wrap the :dbcommand:`create` command."
msgstr ""

#: ../source/reference/command/create.txt:55
msgid "Considerations"
msgstr ""

#: ../source/reference/command/create.txt:57
msgid "The :dbcommand:`create` command obtains a write lock on the affected database and will block other operations until it has completed. The write lock for this operation is typically short lived. However, allocations for large capped collections may take longer."
msgstr ""

#: ../source/reference/command/create.txt:64
msgid "Access Control"
msgstr ""

#: ../source/reference/command/create.txt:66
msgid "If the deployment enforces authentication/authorization, you must have the following privilege to run the :dbcommand:`create` command:"
msgstr ""

#: ../source/reference/command/create.txt:74
msgid "Required Privileges"
msgstr ""

#: ../source/reference/command/create.txt:76
msgid "Create a non-capped collection"
msgstr ""

#: ../source/reference/command/create.txt:78
msgid ":authaction:`createCollection` in the database, **or**"
msgstr ""

#: ../source/reference/command/create.txt:80
msgid ":authaction:`insert` in the collection to create"
msgstr ""

#: ../source/reference/command/create.txt:82
msgid "Create a capped collection"
msgstr ""

#: ../source/reference/command/create.txt:84
msgid ":authaction:`convertToCapped` for the collection"
msgstr ""

#: ../source/reference/command/create.txt:87
msgid ":authaction:`createCollection` in the database"
msgstr ""

#: ../source/reference/command/create.txt:89
msgid "Create a view"
msgstr ""

#: ../source/reference/command/create.txt:91
msgid ":authaction:`createCollection` in the database and either:"
msgstr ""

#: ../source/reference/command/create.txt:93
msgid "no :authaction:`find` on the view to create, **or**"
msgstr ""

#: ../source/reference/command/create.txt:95
msgid "both :authaction:`find` on the view to create and :authaction:`find` on the source collection/view."
msgstr ""

#: ../source/reference/command/create.txt:98
msgid "The built-in role :authrole:`readWrite` provides the required privileges."
msgstr ""

#: ../source/reference/command/create.txt:101
msgid "Examples"
msgstr ""

#: ../source/reference/command/create.txt:104
msgid "Create a Capped Collection"
msgstr ""

#: ../source/reference/command/create.txt:106
msgid "To create a :term:`capped collection` limited to 64 kilobytes, issue the command in the following form:"
msgstr ""

#: ../source/reference/command/create.txt:114
msgid "Create a View"
msgstr ""

#: ../source/reference/command/create.txt:118
msgid "To create a :doc:`view </core/views>` using the :dbcommand:`create` command, use the following syntax:"
msgstr ""

#: ../source/reference/command/create.txt:125
msgid "or if specifying a collation:"
msgstr ""

#: ../source/reference/command/create.txt:131
msgid "For example, given a collection ``survey`` with the following documents:"
msgstr ""

#: ../source/reference/command/create.txt:139
msgid "The following operation creates a ``managementRatings`` view with the ``_id``, ``feedback.management``, and ``department`` fields:"
msgstr ""

#: ../source/reference/command/create.txt:154
msgid ":method:`db.createView()`"
msgstr ""

#: ../source/reference/command/create.txt:159
msgid "Specify Collation"
msgstr ""

#: ../source/reference/command/create.txt:161
msgid "You can specify :ref:`collation <collation>` at the collection or :ref:`view <3.4-reference-views>` level. For example, the following operation creates a collection, specifying a collation for the collection (See :ref:`collation-document-fields` for descriptions of the collation fields):"
msgstr ""

#: ../source/reference/command/create.txt:174
msgid "This collation will be used by indexes and operations that support collation unless they explicitly specify a different collation. For example, insert the following documents into ``myColl``:"
msgstr ""

#: ../source/reference/command/create.txt:184
msgid "The following operation uses the collection's collation:"
msgstr ""

#: ../source/reference/command/create.txt:190
msgid "The operation returns documents in the following order:"
msgstr ""

#: ../source/reference/command/create.txt:198
msgid "The same operation on a collection that uses simple binary collation (i.e. no specific collation set) returns documents in the following order:"
msgstr ""

#: ../source/reference/command/create.txt:207
msgid ":ref:`create-view-w-collation`, :ref:`ref-collation-and-views`"
msgstr ""

#: ../source/reference/command/create.txt:210
msgid "Specify Storage Engine Options"
msgstr ""

#: ../source/reference/command/create.txt:214
msgid "You can specify collection-specific storage engine configuration options when you create a collection with :method:`db.createCollection()`. Consider the following operation:"
msgstr ""

#: ../source/reference/command/create.txt:225
msgid "This operation creates a new collection named ``users`` with a specific configuration string that MongoDB will pass to the ``wiredTiger`` storage engine. See the :wtdocs:`WiredTiger documentation of collection level options </struct_w_t___s_e_s_s_i_o_n.html>` for specific ``wiredTiger`` options."
msgstr ""

