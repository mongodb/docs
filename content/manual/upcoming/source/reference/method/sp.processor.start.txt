=====================================
sp.processor.start() (mongosh method)
=====================================

.. meta::
   :description: Start a named Stream Processor on a Stream Processing Workspace using `sp.processor.start()`.

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Definition 
-----------

.. method:: sp.processor.start()

.. versionadded:: 7.0

   Starts a named
   :atlas:`Stream Processor
   </atlas-sp/overview/#mongodb-expression-exp.Stream-Processor>` on
   the current :atlas:`Stream Processing Workspace
   </atlas-sp/overview/#mongodb-expression-exp.Stream-Processing-Instance>`.

Compatibility
-------------

.. include:: /includes/fact-environments-atlas-support-stream-processing-only.rst

Syntax
-----------
   
The :method:`sp.processor.start()` method has the following syntax:

.. code-block:: json

   sp.processor.start(
     {
       <options>
     }
   )


Command Fields
---------------------------

``sp.processor.start()`` takes these fields:

.. list-table::
   :header-rows: 1
   :widths: 20 20 20 40

   * - Field
     - Type
     - Necessity	  
     - Description

   * - ``startAfter``
     - token
     - Conditional
     - See :ref:`<atlas-sp-agg-source-syntax-coll>`

   * - ``startAtOperationTime``
     - timestamp
     - Conditional
     - See :ref:`<atlas-sp-agg-source-syntax-coll>`

   * - ``tier``
     - string
     - Optional
     - The tier to which {+atlas-sp+} assigns the
       processor. If you do not declare this option,
       {+atlas-sp+} assigns the processor to the
       {+spw+}'s tier. Must be one of the following:

       - ``SP2``
       - ``SP5``
       - ``SP10``
       - ``SP30``
       - ``SP50``

       To learn more, see :atlas:`Tiers <atlas-sp-architecture-tiers>`.

Behavior
---------------

``sp.processor.start()`` starts a named stream processor on the
current stream processing workspace. The stream processor must be in a
``STOPPED`` state. If you invoke ``sp.processor.start()`` for a
stream processor that is not ``STOPPED``, ``mongosh`` will return an error. 

Access Control
------------------------

The user running ``sp.processor.start()`` must have the
:atlasrole:`atlasAdmin` role.

Example
----------------

The following example starts a stream processor named ``solarDemo``.

.. code-block:: sh

   sp.solarDemo.start()

Learn More
------------------

- :atlas:`Manage Stream Processors </atlas-sp/manage-stream-processor>`
