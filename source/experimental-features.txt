.. _charts-experimental-features:

=====================
Experimental Features
=====================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

This page lists |charts| current preview features. A preview feature is
when a |charts| feature is available for evaluation purpose and not
recommended for production deployments. The feature and its
corresponding documentation can change at any time.

.. _nlc:

Natural Language Charts
-----------------------

Natural language charts simplifies the chart creation process. 
It supports the following chart types built with :ref:`series
<charts-series-encoding>` and :ref:`aggregation
<building-charts-aggregation>` :ref:`encoding channels
<encoding-channels>`:

- Grouped Bar
- Stacked Bar
- 100% Stacked Bar
- Grouped Column
- Stacked Column
- 100% Stacked Column
- Area Discrete 
- 100% Stacked Area
- Line Discrete
- Donut
- Table

This chart type supports boolean and number :ref:`filtering
<interactive-filtering>`, :ref:`sorting <charts-sort-data>`, :ref:`binning
<charts-bin-data>`, and :ref:`limiting <charts-limit-data>`.

After you enter a prompt about a chart you would like to see, the AI
model creates the chart.

To use this feature, you can sign up at :website:`the Atlas Charts
product page </products/charts>`. 

To learn more, see :website:`New Intelligent Developer Experiences
Compass Atlas Charts Relational Migrator
</blog/post/new-intelligent-developer-experiences-compass-atlas-charts-relational-migrator>`.

Procedure
~~~~~~~~~

.. procedure:: 
   :style: normal 

   .. step:: Add a natural language chart. 

      .. procedure::
         :style: connected

         .. step:: From the :guilabel:`Dashboards` page, select the dashboard 
            where you want to add a new chart. For instructions on setting 
            up a dashboard, see :doc:`Dashboards </dashboards>`.

         .. step:: Click the :guilabel:`Add Chart` button.

         .. step:: In the :guilabel:`Select Data Source` modal, click the 
            :guilabel:`Project` tab. 

         .. step:: In the cluster where you loaded the 
            sample data, select the ``listingsAndReviews`` collection 
            in the ``sample_airbnb`` database.

         .. step:: Toggle the switch on the top navigation from :guilabel:`Classic` to :guilabel:`Natural Language`.

            When you toggle this, you must click the :guilabel:`Use
            Natural Language Mode` button in the :guilabel:`Natural
            Language Mode` modal to accept the `MongoDB Acceptable
            Use Policy
            <https://www.mongodb.com/legal/acceptable-use-policy>`__ and
            `Privacy Policy
            <https://www.mongodb.com/legal/privacy-policy>`__.

            .. figure:: /images/charts/nl-mode-modal.png
               :figwidth: 300px
               :alt: Natural Language Mode Modal

            If you click :guilabel:`Back to Classic Mode`, |charts|
            switches you back to :guilabel:`Classic` mode.

   .. step:: Describe the chart you want to create.

      In the :guilabel:`Prompt` box, specify the chart you want |charts|
      to create.

      .. note::

         Your prompt cannot exceed 500 characters.

      If you're unsure of what chart you would like to see, you can
      choose one of the :guilabel:`Suggested Prompts` and click
      :guilabel:`Select`.

      .. tip:: 
         
         If your :guilabel:`Suggested Prompts` section does not load,
         click :guilabel:`Retry`.

         .. figure:: /images/charts/nlc-suggested-prompts.png
            :figwidth: 508px
            :alt: Natural Language Charts Suggested Prompts Load Error

   .. step:: Click :guilabel:`Generate chart`.
       
      |charts| displays your chart and also generates a title based 
      on your prompt.
    
   .. step:: (Optional) Customize your chart.
       
      To :ref:`customize your chart <customize-charts>`, toggle the
      switch on the top navigation from :guilabel:`Natural Language`
      to :guilabel:`Classic`.

   .. step:: Click :guilabel:`Save and Close`.
