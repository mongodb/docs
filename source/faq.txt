.. _k8s-faq:

==========================
Frequently Asked Questions
==========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol


.. _faq-k8s-run-mongo:

What is an Operator?
--------------------

An operator is a standard mechanism that extends the control plane of
|k8s| to managing custom |k8s| resources. Because each operator is
built for its own Custom Resources (CRs), it can contain logic that
addresses the type of service that the operator is built for. For the
|k8s-op-short|, the operator includes the logic for the deployment of
MongoDB Server and Ops Manager instances.

Each CR used by the |k8s-op-short| represents an element of a MongoDB 
Server deployment in |k8s|, and has options for customizing that part
of the deployment. Once you configure these objects in the |k8s| 
deployment, the operator builds native |k8s| objects, such as Stateful 
Sets that are necessary to create Pods according to your specified 
requirements for MongoDB Servers. The |k8s-op-short| also facilitates
configuration of MongoDB Server features, such as database backups, 
through interaction with |cloud| or |onprem|.

Why should I run MongoDB Server and MongoDB Enterprise Advanced in |k8s|?
------------------------------------------------------------------------------------

When you deploy MongoDB Server or MongoDB Enterprise Advanced in |k8s| 
through the |k8s-op-full|, your deployments can benefit from the 
resilience and simple orchestration that |k8s| provides.

The only supported way to deploy MongoDB Enterprise Advanced in |k8s| is
through the |k8s-op-full|. The |k8s-op-full| simplifies your daily workflows
and makes it easier for MongoDB technical support staff to assist you when needed.

Which |k8s| platforms are supported for MongoDB Server deployments?
--------------------------------------------------------------------------------

MongoDB Server supports any platform that builds upon native |k8s| without
changing the default logic or behavior. In practice, this means that
MongoDB Server supports any |k8s| platform
`certified by the Cloud Native Computing Foundation <https://www.cncf.io/certification/software-conformance/>`__.
To learn more, see :ref:`MongoDB Kubernetes Operator Compatibility <k8s-compatibility>`.

How many deployments can |k8s-op-full| support?
--------------------------------------------------------------

|k8s-op-short| can support up to 50 deployments. However, changes made to
large numbers of deployments at the same time result in long reconciliation times.
To avoid prolonged reconciliation times, limit a given |k8s-op-short| instance
to 20 deployments. To learn more, see the :ref:`Deploy the Recommended Number of MongoDB Replica Sets <deploy_recommended-number-sets>`.

Should I run MongoDB Server in |k8s| in the same cluster as the application using it?
----------------------------------------------------------------------------------------------

To help minimize latency, consider colocating your database and applications on
the same |k8s| cluster if your deployment architecture allows this.

Can I deploy MongoDB Server across multiple |k8s| clusters?
-----------------------------------------------------------------------

Yes. To learn more, see :ref:`Deploy MongoDB Resources on Multiple Kubernetes Clusters <multi-cluster>`.
For help, contact |mdb-support|.

What is the difference between using the |k8s-op-short| for managing |multi-clusters| and  managing a single |k8s| cluster?
-----------------------------------------------------------------------------------------------------------------------------------

To use the |k8s-op-short| for managing a |multi-cluster|, you must set up a specific set of 
|k8s| :k8sdocs:`Roles, ClusterRoles </reference/access-authn-authz/rbac/#role-and-clusterrole>`, 
:k8sdocs:`RoleBindings, ClusterRoleBindings </reference/access-authn-authz/rbac/#rolebinding-and-clusterrolebinding>`,
and :k8sdocs:`ServiceAccounts </tasks/configure-pod-container/configure-service-account/>`.

The |k8s-op-short| used for a |multi-cluster| can also reconcile a single |k8s| cluster resource.
To learn more, see :ref:`faq-many-operators`.

.. _faq-many-operators:

Does MongoDB support running more than one |k8s-op-short| instance?
--------------------------------------------------------------------------------

If possible, we recommend that you set up a single |k8s-op-short| instance to
watch one, many, or all namespaces within your |k8s| cluster. By default,
the |k8s-op-short| watches all |k8s-custom-resource| types that you choose
to deploy, and you don't need to configure it to watch specific resource types.

However, once you reach a :ref:`performance limit <deploy_recommended-number-sets>`
for the number of deployments a single |k8s-op-short| instance can support,
you can set up an additional |k8s-op-short| instance. At this point,
consider how you want to divide up management of resources in the |k8s| cluster.
Use the following recommendations listed in the order of priority:

- Ensure that each |k8s-op-short| instance is watching different and non-overlapping
  namespaces within the |k8s| cluster.
- Alternatively, configure different instances of the |k8s-op-short| to watch
  different resource types, either in different namespaces or overlapping namespaces.
  
  If you choose to use overlapping namespaces, ensure that each |k8s-op-short|
  instance watches different types of resources to avoid conflict that would
  result in two instances of the |k8s-op-short| attempting to manage
  the same resources.

.. note::

   Before you configure another |k8s-op-short| instance, verify that none of its
   namespaces are included in the subset of namespaces for the existing |k8s-op-short| instance.
