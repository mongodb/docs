# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/faq/indexes.txt:3
# 919dfe4271f3442ea88888b825e69867
msgid "FAQ: Indexes"
msgstr ""

#: ../source/faq/indexes.txt:7
# a3e717009fc34686a52dd7132d141c3e
msgid "This document addresses common questions regarding MongoDB indexes."
msgstr ""

#: ../source/faq/indexes.txt:9
# 5bf1285a16a14b329a076556981d5e80
msgid "If you don't find the answer you're looking for, check the :doc:`complete list of FAQs </faq>` or post your question to the `MongoDB User Mailing List <https://groups.google.com/forum/?fromgroups#!forum/mongodb-user>`_. See also :doc:`/administration/indexes`."
msgstr ""

#: ../source/faq/indexes.txt:15
# fc32299a4f7148da9a57056ba47c3b2d
msgid "Should you run ``createIndex()`` after every insert?"
msgstr ""

#: ../source/faq/indexes.txt:17
# 563be52dad11404f912600159f2b3da6
msgid "No. You only need to create an index once for a single collection. After initial creation, MongoDB automatically updates the index as data changes."
msgstr ""

#: ../source/faq/indexes.txt:21
# 0d3efccf5ed2473195b317717ba6ff04
msgid "While running :method:`~db.collection.createIndex()` is usually ok, if an index doesn't exist because of ongoing administrative work, a call to :method:`~db.collection.createIndex()` may disrupt database availability. Running :method:`~db.collection.createIndex()` can render a replica set inaccessible as the index creation is happening. See :ref:`index-building-replica-sets`."
msgstr ""

#: ../source/faq/indexes.txt:29
# b42adfa50dc54299a793f9aeabb2c6d0
msgid "How do you know what indexes exist in a collection?"
msgstr ""

#: ../source/faq/indexes.txt:31
# c8c10f9aa18c4da88806f014238e019e
msgid "To list a collection's indexes, use the :method:`db.collection.getIndexes()` method or a similar :api:`method for your driver <>`."
msgstr ""

#: ../source/faq/indexes.txt:36
# 395e12b102794a11a796cc37c099f9fd
msgid "How do you determine the size of an index?"
msgstr ""

#: ../source/faq/indexes.txt:38
# 9254cfd7eb7043d89564d101db0068d9
msgid "To check the sizes of the indexes on a collection, use :method:`db.collection.stats()`."
msgstr ""

#: ../source/faq/indexes.txt:43
# 0b44ad1d8643469e997d208f1e8b1d92
msgid "What happens if an index does not fit into RAM?"
msgstr ""

#: ../source/faq/indexes.txt:45
# a7635135481746f3b7ba03abc086d7c3
msgid "When an index is too large to fit into RAM, MongoDB must read the index from disk, which is a much slower operation than reading from RAM. Keep in mind an index fits into RAM when your server has RAM available for the index combined with the rest of the :term:`working set`."
msgstr ""

#: ../source/faq/indexes.txt:50
# 23abe77ffed94c1683eb3d8809e7d261
msgid "In certain cases, an index does not need to fit *entirely* into RAM. For details, see :ref:`indexing-right-handed`."
msgstr ""

#: ../source/faq/indexes.txt:56
# b97572463f744dcf908f2972e32bbdfc
msgid "How do you know what index a query used?"
msgstr ""

#: ../source/faq/indexes.txt:58
# 158e693e85524443a05c859aa18c1288
msgid "To inspect how MongoDB processes a query, use the :method:`~cursor.explain()` method in the :program:`mongo` shell, or in your application driver."
msgstr ""

#: ../source/faq/indexes.txt:63
# 587e107d0c794bb4aba26df95ef294a1
msgid "How do you determine what fields to index?"
msgstr ""

#: ../source/faq/indexes.txt:65
# 8a3d910a4ef945e4adfb832a19e86142
msgid "A number of factors determine what fields to index, including :ref:`selectivity <index-selectivity>`, fitting indexes into RAM, reusing indexes in multiple queries when possible, and creating indexes that can support all the fields in a given query. For detailed documentation on choosing which fields to index, see :doc:`/administration/indexes`."
msgstr ""

#: ../source/faq/indexes.txt:81
# fb18dd2390c94e009f1686cbb81d0572
msgid "How do write operations affect indexes?"
msgstr ""

#: ../source/faq/indexes.txt:83
# 3bd1b54ea6b444f9afbc7243372a9f2c
msgid "Any write operation that alters an indexed field requires an update to the index in addition to the document itself. If you update a document that causes the document to grow beyond the allotted record size, then MongoDB must update all indexes that include this document as part of the update operation."
msgstr ""

#: ../source/faq/indexes.txt:89
# 9bd19ce4559e44d5a79dce4a12b6550c
msgid "Therefore, if your application is write-heavy, creating too many indexes might affect performance."
msgstr ""

#: ../source/faq/indexes.txt:93
# e53d60938d4f4cea900871743a79f2c2
msgid "Will building a large index affect database performance?"
msgstr ""

#: ../source/faq/indexes.txt:95
# 8b5a5fb0aa07470f83fdc8624bb24ad3
msgid "Building an index can be an IO-intensive operation, especially if you have a large collection. This is true on any database system that supports secondary indexes, including MySQL. If you need to build an index on a large collection, consider building the index in the background. See :ref:`index-creation-operations`."
msgstr ""

#: ../source/faq/indexes.txt:101
# 07610d9a23654affb178f2b15eec3ff4
msgid "If you build a large index without the background option, and if doing so causes the database to stop responding, do one of the following:"
msgstr ""

#: ../source/faq/indexes.txt:105
# bcd13dcb2a0e4982a50ad74ad6ebae00
msgid "Wait for the index to finish building."
msgstr ""

#: ../source/faq/indexes.txt:107
# b161b71458414383a77a736343c32993
msgid "Kill the current operation (see :method:`db.killOp()`). The partial index will be deleted."
msgstr ""

#: ../source/faq/indexes.txt:113
# 2b2fb059554f43f4baaa600740869722
msgid "Can I use index keys to constrain query matches?"
msgstr ""

#: ../source/faq/indexes.txt:115
# 50e548de0bcf41deb93fe37de9f00e64
msgid "You can use the :method:`~cursor.min()` and :method:`~cursor.max()` methods to constrain the results of the cursor returned from :method:`~db.collection.find()` by using index keys."
msgstr ""

#: ../source/faq/indexes.txt:120
# 44a8d605616f4a6d870c61944585cf89
msgid "Using ``$ne`` and ``$nin`` in a query is slow. Why?"
msgstr ""

#: ../source/faq/indexes.txt:122
# f6ec853e7843419db3d7b08ec7cd5d2b
msgid "The :query:`$ne` and :query:`$nin` operators are not selective. See :ref:`index-selectivity`. If you need to use these, it is often best to make sure that an additional, more selective criterion is part of the query."
msgstr ""

#: ../source/faq/indexes.txt:128
# d6994674808640b386a9176d947dfaf0
msgid "Can I use a multi-key index to support a query for a whole array?"
msgstr ""

#: ../source/faq/indexes.txt:130
# 42b321cdc7b34eaa859ee4b0bf0de818
msgid "Not entirely. The index can partially support these queries because it can speed the selection of the first element of the array; however, comparing all subsequent items in the array cannot use the index and must scan the documents individually."
msgstr ""

#: ../source/faq/indexes.txt:136
# c766cf20d99c440d8d436eab79cd2f81
msgid "How can I effectively use indexes strategy for attribute lookups?"
msgstr ""

#: ../source/faq/indexes.txt:138
# c36655a911c74ba69dbfa3693768463e
msgid "For simple attribute lookups that don't require sorted result sets or range queries, consider creating a field that contains an array of documents where each document has a field (e.g. ``attrib`` ) that holds a specific type of attribute. You can index this ``attrib`` field."
msgstr ""

#: ../source/faq/indexes.txt:144
# 17a11282779f46eb99458e0c7084dae4
msgid "For example, the ``attrib`` field in the following document allows you to add an unlimited number of attributes types:"
msgstr ""

#: ../source/faq/indexes.txt:158
# 7c453dc948814ed88645b9305d769882
msgid "*Both* of the following queries could use the same ``{ \"attrib.k\": 1, \"attrib.v\": 1 }`` index:"
msgstr ""

