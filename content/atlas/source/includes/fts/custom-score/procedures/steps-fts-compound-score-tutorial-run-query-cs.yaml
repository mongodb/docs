ref: run-compound-constant-query-cs
level: 4
stepnum: 1
title: "Run a |fts| compound query that alters the score using the 
       :ref:`scoring-constant` option."
content: |
  a. Create a new directory called ``compound-constant-example`` and
     initialize your project with the ``dotnet new`` command.

     .. code-block:: bash

        mkdir compound-constant-example
        cd compound-constant-example
        dotnet new console

  #. Add the .NET/C# Driver to your project as a dependency.

     .. code-block:: bash

        dotnet add package MongoDB.Driver

  #. Replace the contents of the ``Program.cs``  file with the
     following code.

     The code example performs the following tasks:

     - Imports ``mongodb`` packages and dependencies.
     - Establishes a connection to your cluster.
     - Uses the following compound clauses to query the collection: 

       .. include:: /includes/fts/extracts/fts-compound-constant-desc.rst

     - .. include:: /includes/fts/extracts/fts-compound-highlight-desc.rst

     - Uses the following pipeline stages:

       .. include:: /includes/fts/extracts/fts-compound-score-stages.rst

     - Iterates over the cursor to print the documents that match the 
       query.

     .. literalinclude:: /includes/fts/custom-score/compound-constant-query.cs
        :language: csharp
        :linenos:
        :dedent:
        :emphasize-lines: 9

  #. .. include:: /includes/fts/facts/fact-fts-driver-connection-string.rst
  #. Compile and run the ``Program.cs`` file.

     .. io-code-block::
        :copyable: true

        .. input::
           :language: bash

           dotnet run compound-constant-example.csproj

        .. output::
           :language: json
           :visible: true

           { 
             "title" : "Snow in Paradise", 
             "year" : 2014, 
             "highlights" : [{ 
               "path" : "title", 
               "score" : 1.3828467130661011, 
               "texts" : [{ "type" : "Hit", "value" : "Snow" }, { "type" : "Text", "value" : " in Paradise" }] 
             }], 
             "score" : 5.0 
           }
           { 
             "title" : "Dead Snow 2: Red vs. Dead", 
             "year" : 2014, 
             "highlights" : [{ 
               "path" : "title", 
               "score" : 1.3924485445022583, 
               "texts" : [{ "type" : "Text", "value" : "Dead " }, { "type" : "Hit", "value" : "Snow" }, { "type" : "Text", "value" : " 2: Red vs. " }]
             }], 
             "score" : 5.0 
           }
           { 
             "title" : "The Snow White Murder Case", 
             "year" : 2014, 
             "highlights" : [{ 
               "path" : "title", 
               "score" : 1.3525336980819702, 
               "texts" : [{ "type" : "Text", "value" : "The " }, { "type" : "Hit", "value" : "Snow" }, { "type" : "Text", "value" : " White Murder Case" }] 
             }], 
             "score" : 5.0 
           }
           { 
             "title" : "Snow on the Blades", 
             "year" : 2014, 
             "highlights" : [{ 
               "path" : "title", 
               "score" : 1.3766303062438965, 
               "texts" : [{ "type" : "Hit", "value" : "Snow" }, { "type" : "Text", "value" : " on the Blades" }] 
             }], 
             "score" : 5.0 
           }
           { "title" : "The Secret Life of Walter Mitty", "year" : 2013, "highlights" : [], "score" : 0.0 }
           { "title" : "Jurassic World", "year" : 2015, "highlights" : [], "score" : 0.0 }
           { "title" : "Action Jackson", "year" : 2014, "highlights" : [], "score" : 0.0 }
           { "title" : "In Secret", "year" : 2013, "highlights" : [], "score" : 0.0 }
           { "title" : "The Stanford Prison Experiment", "year" : 2015, "highlights" : [], "score" : 0.0 }
           { "title" : "The Giver", "year" : 2014, "highlights" : [], "score" : 0.0 }
         
     .. include:: /includes/fts/extracts/fts-compound-constant-score-desc.rst

---
ref: run-compound-boost-query-cs
level: 4
stepnum: 2
title: "Run |fts| compound queries that alter the score using the 
       :ref:`scoring-boost` option."
content: |
  a. Create a new directory called ``compound-boost-example`` and
     initialize your project with the ``dotnet new`` command.

     .. code-block:: bash

        mkdir compound-boost-example
        cd compound-boost-example
        dotnet new console

  #. Add the .NET/C# Driver to your project as a dependency.

     .. code-block:: bash

        dotnet add package MongoDB.Driver

  #. Replace the contents of the ``Program.cs``  file with the
     following code.

     The code example performs the following tasks:

     - Imports ``mongodb`` packages and dependencies.
     - Establishes a connection to your cluster.
     - Iterates over the cursor to print the documents that match the 
       query.

     .. tabs:: 

        .. tab:: Simple Example
           :tabid: simple

           The query uses the following pipeline stages:

           - :pipeline:`$search` stage to query the collection. The 
             query:

             - Uses the following ``compound`` operator clauses:

               .. include:: /includes/fts/extracts/fts-compound-boost-desc.rst

             .. include:: /includes/fts/extracts/fts-compound-highlight-desc.rst
       
           .. include:: /includes/fts/extracts/fts-compound-score-stages.rst

           .. literalinclude:: /includes/fts/custom-score/compound-boost-query.cs
              :language: csharp
              :linenos:
              :dedent:
              :emphasize-lines: 9

        .. tab:: Multiple Weights Example
           :tabid: multi

           This query uses the following ``compound`` operator clauses 
           with the ``boost`` option to prioritize some fields more 
           than other fields: 
        
           .. include:: /includes/fts/extracts/fts-compound-boost-advanced-desc.rst
   
           .. literalinclude:: /includes/fts/custom-score/boost-multi-query.cs
              :language: csharp
              :linenos:
              :dedent:
              :emphasize-lines: 9

  #. .. include:: /includes/fts/facts/fact-fts-driver-connection-string.rst
  #. Compile and run the ``Program.cs`` file.

     .. tabs:: 
        :hidden:

        .. tab:: Simple Example
           :tabid: simple

           .. io-code-block::
              :copyable: true

              .. input::
                 :language: bash

                 dotnet run compound-boost-example.csproj

              .. output::
                 :language: json
                 :visible: true

                 { 
                   "title" : "Snow in Paradise", 
                   "year" : 2014, 
                   "highlights" : [{ 
                     "path" : "title", 
                     "score" : 1.3828467130661011, 
                     "texts" : [{ "type" : "Hit", "value" : "Snow" }, { "type" : "Text", "value" : " in Paradise" }] 
                   }], 
                   "score" : 6.7722930908203125 
                 }
                 { 
                   "title" : "Snow on the Blades", 
                   "year" : 2014, 
                   "highlights" : [{ 
                     "path" : "title", 
                     "score" : 1.3766303062438965, 
                     "texts" : [{ "type" : "Hit", "value" : "Snow" }, { "type" : "Text", "value" : " on the Blades" }] 
                   }], 
                   "score" : 6.0634455680847168 
                 }
                 { 
                   "title" : "The Snow White Murder Case", 
                   "year" : 2014, 
                   "highlights" : [{ 
                     "path" : "title", 
                     "score" : 1.3525336980819702, 
                     "texts" : [{ "type" : "Text", "value" : "The " }, { "type" : "Hit", "value" : "Snow" }, { "type" : "Text", "value" : " White Murder Case" }] 
                   }], 
                   "score" : 5.5096521377563477 
                 }
                 { 
                   "title" : "Dead Snow 2: Red vs. Dead", 
                   "year" : 2014, 
                   "highlights" : [{ 
                     "path" : "title", 
                     "score" : 1.3924485445022583, 
                     "texts" : [{ "type" : "Text", "value" : "Dead " }, { "type" : "Hit", "value" : "Snow" }, { "type" : "Text", "value" : " 2: Red vs. " }] 
                   }], 
                   "score" : 5.0650539398193359 
                 }
                 { "title" : "The Secret Life of Walter Mitty", "year" : 2013, "highlights" : [], "score" : 1.0 }
                 { "title" : "Jurassic World", "year" : 2015, "highlights" : [], "score" : 1.0 }
                 { "title" : "Action Jackson", "year" : 2014, "highlights" : [], "score" : 1.0 }
                 { "title" : "In Secret", "year" : 2013, "highlights" : [], "score" : 1.0 }
                 { "title" : "The Stanford Prison Experiment", "year" : 2015, "highlights" : [], "score" : 1.0 }
                 { "title" : "The Giver", "year" : 2014, "highlights" : [], "score" : 1.0 }

           .. include:: /includes/fts/extracts/fts-compound-boost-score-desc.rst

        .. tab:: Multiple Weights Example
           :tabid: multi

           .. io-code-block::
              :copyable: true

              .. input::
                 :language: bash

                 dotnet run compound-boost-example.csproj

              .. output::
                 :language: json
                 :visible: true

                 { "genres" : ["Comedy", "Horror"], "title" : "Dead Snow", "year" : 2009, "score" : 21.872983932495117 }
                 { "genres" : ["Adventure", "Comedy", "Family"], "title" : "Snow Day", "year" : 2000, "score" : 21.043487548828125 }
                 { "genres" : ["Adventure", "Comedy", "Family"], "title" : "Snow Dogs", "year" : 2002, "score" : 21.043487548828125 }
                 { "genres" : ["Comedy", "Romance"], "title" : "Let It Snow", "year" : 1999, "score" : 19.523927688598633 }
                 { "genres" : ["Action", "Comedy", "Horror"], "title" : "Dead Snow 2: Red vs. Dead", "year" : 2014, "score" : 17.426334381103516 }
                 { "genres" : ["Comedy", "Drama"], "title" : "Snow White and Russian Red", "year" : 2009, "score" : 16.367326736450195 }
                 { "genres" : ["Comedy", "Drama", "Romance"], "title" : "The Tiger and the Snow", "year" : 2005, "score" : 15.537829399108887 }
                 { "genres" : ["Adventure", "Comedy", "Family"], "title" : "Snow White and the Three Stooges", "year" : 1961, "score" : 14.426333427429199 }

---
ref: run-compound-function-query-cs
level: 4
stepnum: 3
title: "Run a |fts| compound query that alters the score using the 
       :ref:`scoring-function` option."
content: |
  a. Create a new directory called ``compound-function-example`` and
     initialize your project with the ``dotnet new`` command.

     .. code-block:: bash

        mkdir compound-function-example
        cd compound-function-example
        dotnet new console

  #. Add the .NET/C# Driver to your project as a dependency.

     .. code-block:: bash

        dotnet add package MongoDB.Driver

  #. Replace the contents of the ``Program.cs``  file with the
     following code.

     The code example performs the following tasks:

     - Imports ``mongodb`` packages and dependencies.
     - Establishes a connection to your cluster.
     - Uses the following pipeline stages to query the collection:

       .. include:: /includes/fts/extracts/fts-compound-function-desc.rst

     - Uses the following pipeline stages: 
       
       .. include:: /includes/fts/extracts/fts-compound-score-stages.rst

     - .. include:: /includes/fts/extracts/fts-compound-highlight-desc.rst

     - Iterates over the cursor to print the documents that match the 
       query.

     .. literalinclude:: /includes/fts/custom-score/compound-function-query.cs
        :language: csharp
        :linenos:
        :dedent:
        :emphasize-lines: 9

  #. .. include:: /includes/fts/facts/fact-fts-driver-connection-string.rst
  #. Compile and run the ``Program.cs`` file.

     .. io-code-block::
        :copyable: true

        .. input::
           :language: bash

           dotnet run compound-function-example.csproj

        .. output::
           :language: json
           :visible: true

           { "genres" : ["Drama", "Mystery"], "title" : "The Snow White Murder Case", "year" : 2014, "highlights" : [{ "path" : "title", "score" : 1.3525336980819702, "texts" : [{ "type" : "Text", "value" : "The " }, { "type" : "Hit", "value" : "Snow" }, { "type" : "Text", "value" : " White Murder Case" }] }], "score" : 10.454826354980469 }
           { "genres" : ["Action", "Drama", "History"], "title" : "Snow on the Blades", "year" : 2014, "highlights" : [{ "path" : "title", "score" : 1.3766303062438965, "texts" : [{ "type" : "Hit", "value" : "Snow" }, { "type" : "Text", "value" : " on the Blades" }] }], "score" : 10.331723213195801 }
           { "genres" : ["Action", "Comedy", "Horror"], "title" : "Dead Snow 2: Red vs. Dead", "year" : 2014, "highlights" : [{ "path" : "title", "score" : 1.3924485445022583, "texts" : [{ "type" : "Text", "value" : "Dead " }, { "type" : "Hit", "value" : "Snow" }, { "type" : "Text", "value" : " 2: Red vs. " }] }], "score" : 10.032526969909668 }
           { "genres" : ["Thriller"], "title" : "Snow in Paradise", "year" : 2014, "highlights" : [{ "path" : "title", "score" : 1.3828467130661011, "texts" : [{ "type" : "Hit", "value" : "Snow" }, { "type" : "Text", "value" : " in Paradise" }] }], "score" : 8.3861465454101562 }
           { "genres" : ["Adventure", "Comedy", "Drama"], "title" : "The Secret Life of Walter Mitty", "year" : 2013, "highlights" : [], "score" : 1.0 }
           { "genres" : ["Action", "Adventure", "Sci-Fi"], "title" : "Jurassic World", "year" : 2015, "highlights" : [], "score" : 1.0 }
           { "genres" : ["Action", "Comedy", "Drama"], "title" : "Action Jackson", "year" : 2014, "highlights" : [], "score" : 1.0 }
           { "genres" : ["Crime", "Drama", "Thriller"], "title" : "In Secret", "year" : 2013, "highlights" : [], "score" : 1.0 }
           { "genres" : ["Drama", "Thriller"], "title" : "The Stanford Prison Experiment", "year" : 2015, "highlights" : [], "score" : 1.0 }
           { "genres" : ["Drama", "Sci-Fi"], "title" : "The Giver", "year" : 2014, "highlights" : [], "score" : 1.0 }

     .. include:: /includes/fts/extracts/fts-compound-function-score-desc.rst

...
