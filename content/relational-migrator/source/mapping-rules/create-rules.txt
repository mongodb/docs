.. _rm-create-rule:
.. _create-rule-relational:
.. _create-rule-mongodb:

====================
Create Mapping Rules
====================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

You can create mapping rules to translate your relational tables into
MongoDB collections. You can create mapping rules from either the 
:guilabel:`Relational` or :guilabel:`MongoDB` headers of the schema model pane.

Steps
-----

Complete the following steps to create a mapping rule.

.. procedure::
   :style: normal

   .. step:: Open a {+rel-mig+} project.

   .. step:: Open the :guilabel:`Mappings` pane.

      You can do this from the :guilabel:`Schema model` pane by clicking
      on a collection under the :guilabel:`Relational` or :guilabel:`MongoDB`
      headers.

   .. step:: Click :guilabel:`+ Add` to create a new mapping rule.

      If you opened this pane from the :guilabel:`Relational` header, 
      this button is next to :guilabel:`Mappings to MongoDB Model`. If you
      opened the pane from the :guilabel:`MongoDB` header, this button is
      next to :guilabel:`Mappings from relational tables`.

   .. step:: Define how you want to migrate the source table.

      Options available on the :guilabel:`Add mapping` pane depend on the type of 
      mapping rule you are adding. For a full overview of each mapping rule 
      option see:

      - :ref:`rm-new-documents`

      - :ref:`rm-embedded-array`

      - :ref:`rm-embedded-documents`

   .. step:: Select the name of the source table or target collection.

      If you opened this pane from the :guilabel:`Relational` header, input
      the name of the target collection. If you opened the pane from 
      the :guilabel:`MongoDB` header, select the name of the source table
      from the drop-down menu.

   .. step:: Define options for the new mapping rule.

      When you define the mapping rule, you can:

      - Change the collection name. 
     
        To change the collection name, click the :guilabel:`Name` text box and enter 
        the new name. Click outside of the text box to save the change. If the name 
        is already in use, you receive a validation error. 

      - Change field names.
      - Include or exclude a field from your migration job by clicking the
        :icon-fa5:`check-square` icon next to the field name.

   .. step:: (Optional) Select a BSON type or set null handling rules for your mapping rule.

      a. Click the :icon-fa5:`chevron-left` icon next to the field 
         you want to customize.

      #. Select a :guilabel:`BSON type`.

      #. Select a :guilabel:`Null handling` option.

         - :guilabel:`Insert as null`: preserves null values, and nulls 
           are inserted into your destination collection.
         - :guilabel:`Omit`: skips any null values, and nulls are not 
           inserted into the destination collection.

      You can view a field's :guilabel:`Original name` and 
      :guilabel:`Original type` in the expanded customized field menu.

      .. note::

         For more details on field customization and data type conversions,
         see :ref:`field customizations <rm-field-customizations>`.

   .. step:: Click :guilabel:`Save and close`.

Learn More
----------

To learn more about managing mapping rules, see:

- :ref:`Edit mapping rules <mapping-rules-edit>`

- :ref:`Delete mapping rules <delete-rules>`

- :ref:`View mapping rules <view-rules>`

