.. _mcli-atlas-dbuser-create-command:

============================
mongocli atlas dbuser create
============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

The ``dbuser create`` command creates a MongoDB database user 
to access the specified |service| cluster. You can also 
create a MongoDB database user through the |service| :atlas:`UI 
</tutorial/create-mongodb-user-for-cluster/>` or 
:atlas:`API </reference/api/database-users-create-a-user/>`.

.. _dbuser-create-syntax:

Syntax
------

.. code-block:: text

   mongocli atlas dbuser create 
        [ --awsIAMType <NONE|USER|ROLE> ]
        [ --deleteAfter <date-of-deletion> ]
        [ --ldapType <NONE|USER|GROUP>]
        [ --output|-o <output-format> ]
        [ --password|-p <password-of-user> ]
        [ --profile|-P <profile-name> ]
        [ --projectId <project-ID> ]
        --role <name-of-role>
        --username|-u <name-of-user> 
        [ --x509Type <NONE|MANAGED|CUSTOMER> ]


.. include:: /includes/fact-command-line-help.rst

.. _dbuser-create-options:

Options
-------

.. list-table::
   :header-rows: 1
   :widths: 20 10 60 10

   * - Option 
     - Type
     - Description
     - Required?

   * - ``--awsIAMType``
     - string
     - Authenticates the new database user with
       |aws| IAM credentials. If omitted, |service| uses the default 
       value of ``NONE``.

       Accepted values are:

       .. list-table::
          :stub-columns: 1
          :widths: 20 80

          * - ``NONE``
            - User doesn't authenticate with AWS IAM credentials.
         
              If ``--ldapType`` and ``--x509Type`` are ``NONE`` or
              omitted, |service| authenticates this user through
              :manual:`SCRAM-SHA </core/security-scram>`.
          * - ``USER``
            - User authenticates with :atlas:`AWS IAM user credentials
              </security-add-mongodb-users/#database-user-authentication>`.
            
              You do not need to provide a ``--password`` for the 
              user. 
          * - ``ROLE``
            - User authenticates with :atlas:`AWS IAM role credentials
              </security-add-mongodb-users/#database-user-authentication>`.
              
              You do not need to provide a ``--password`` for the user.

       If you set ``--awsIAMType`` to ``USER`` or ``ROLE``, you can't
       set ``--x509Type`` or ``--ldapType`` to any value other than
       ``NONE``.
       
     - no

   * - ``--ldapType``
     - string
     - Authenticates the new database user with |ldap|. If
       omitted, |service| uses the default value of ``NONE``.

       Accepted values include:

       .. list-table::
          :stub-columns: 1
          :widths: 20 80

          * - ``NONE``
            - User doesn't authenticate with |ldap|. 
            
              If ``--awsIAMType`` and ``--x509Type`` are ``NONE`` or
              omitted, |service| authenticates this user through
              :manual:`SCRAM-SHA </core/security-scram>`. 
          * - ``USER``
            - |ldap| server authenticates this user through the user's
              |ldap| user.

              The name you specify with ``--username`` must also be a
              fully qualified distinguished name, as defined in
              :rfc:`2253`.

          * - ``GROUP``
            - |ldap| server authenticates this user using their
              |ldap| user and authorizes this user using their |ldap|
              group. To learn more about |ldap| security, see
              :atlas:`Set up User Authentication and Authorization with
              LDAP </security-ldaps>`.

              The name you specify with ``--username`` must also be a
              fully qualified distinguished name, as defined in
              :rfc:`2253`.

       If you set ``--ldapType`` to ``USER`` or ``GROUP``, you can't
       set ``--awsIAMType`` or ``--x509Type`` to any value other than
       ``NONE``.
     - no

   * - ``--deleteAfter``
     - date
     - |iso8601-time| after which |service| deletes the user. The 
       specified date must be in the future and within one week of the 
       time you make the API request.

       .. note::
          You may include an |iso8601| time zone designator to ensure 
          that the expiration date occurs with respect to the local 
          time in the specified time zone. Time zones are represented 
          as an offset from |utc|.

       .. example::
          To delete a database user on August 1st, 2020, at 12:30pm in 
          New York (Eastern Daylight Time), use the option:

          .. code-block:: sh
             :copyable: true

             --deleteAfter 2020-08-01T12:30-04:00
     - no

   * - ``--output``, ``-o``
     - string 
     - .. include:: /includes/extracts/fact-basic-options-output.rst
     - no

   * - ``--password``, ``-p``
     - string
     - Password for authenticating the user to MongoDB. 
       Required if ``--awsIAMType``, ``--ldapType``, and ``--x509Type``
       are omitted or ``NONE``, which means that the database user
       authenticates with ``SCRAM-SHA``.

     - no

   * - ``--profile``, ``-P``
     - string
     - Name of the profile where the public and private 
       keys for the project are saved. If omitted, uses the 
       {+default-profile+}. To learn more about creating a 
       profile, see :ref:`mcli-configure`.
     - no

   * - ``--projectId``
     - string
     - .. include:: /includes/extracts/fact-basic-options-project-id.rst
     - no

   * - ``--role``
     - string or array of strings
     - Comma-separated list of user's roles and the databases 
       or collections on which the roles apply. A role allows the 
       user to perform particular actions on the specified database 
       or collection. To learn more about the list of 
       default roles, see :atlas:`MongoDB Database User Privileges 
       </security-add-mongodb-users/index.html#mongodb-database-user-privileges>`.
     - yes

   * - ``--username``, ``-u``
     - string
     - Username for authenticating the user to MongoDB. 

       - Must be a fully qualified distinguished name, as defined in   
         `RFC 2253 <https://tools.ietf.org/html/rfc2253.html>`__, if:

         - ``--ldapType`` is ``USER`` or ``GROUP``.
         - ``--x509Type`` is ``CUSTOMER``.

       - Must be an `Amazon Resource Name (ARN)
         <https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html>`__
         if ``--awsIAMType`` is ``USER`` or ``ROLE``.
       
     - yes

   * - ``--x509Type``
     - string
     - Authenticates the new database user with X.509. If omitted, 
       |service| uses the default value of ``NONE``. 

       Accepted values are:

       .. list-table::
          :stub-columns: 1
          :widths: 20 80

          * - ``NONE``
            - User doesn't authenticate with X.509. 
       
              If ``--awsIAMType`` and ``--ldapType`` are ``NONE`` or
              omitted, |service| authenticates this user through
              :manual:`SCRAM-SHA </core/security-scram>`.
          * - ``MANAGED``
            - User authenticates with |service|-managed X.509.
              You do not need to provide a ``--password`` for the user. 
          * - ``CUSTOMER``
            - User authenticates with :atlas:`self-managed
              X.509 </security-self-managed-x509/#self-managed-x509>`.
              You do not need to provide a ``--password`` for the user.
              You must include a fully qualified Distinguished Name (DN)
              as the ``--username`` for users who authenticate with
              self-managed X.509.
       
       If you set ``--x509Type`` to ``MANAGED`` or ``CUSTOMER``, you
       can't set ``--awsIAMType`` or ``--ldapType`` to any value other 
       than ``NONE``.
       
     - no



.. _dbuser-create-command-output:

Output
------
.. include:: /includes/command-output-intro.rst

.. include:: /includes/atlas-dbuser-output-fields.rst

.. _dbuser-create-examples:

Examples 
--------

The examples below use the ``mongocli atlas dbuser create`` command to 
create a MongoDB database user to access the |service| cluster. When the 
command is run, it prints the :ref:`Output Fields 
<dbuser-create-command-output>` to the terminal.
 
.. _dbuser-create-eg-1:

Example 1 
~~~~~~~~~~

The following command creates a user with the following attributes:

- Username: ``user1`` 
- Password: ``ChangeThisToAStrongPassword`` 
- Role: ``atlasAdmin`` 

The command uses the {+default-profile+} to access |service| and create the
user.

.. code-block:: sh
   :copyable: false

   mongocli atlas dbuser create --username user1 --password 
   ChangeThisToAStrongPassword --role atlasAdmin@admin --output json 
   --projectId 5e2211c17a3e5a48f5497de3

The previous command prints the following fields
to the terminal. To learn more about these fields, see 
:ref:`Output <dbuser-create-command-output>`.

.. code-block:: json
   :copyable: false

   {
   	"roles": [{
   		"roleName": "atlasAdmin",
   		"databaseName": "admin"
   	}],
   	"groupId": "5e2211c17a3e5a48f5497de3",
   	"username": "user1",
   	"databaseName": "admin",
   	"ldapAuthType": "NONE",
   	"x509Type": "NONE",
   	"awsIAMType": "NONE"
   }

.. _dbuser-create-eg-2:

Example 2
~~~~~~~~~

The following commands show two ways to create a user with 
``readWriteAnyDatabase`` and ``clusterMonitor`` privileges. The 
command uses the {+default-profile+} to access the project, which contains
the |api| keys for accessing |service|.

The following command shows the ``--role`` option with 
two privileges separated by a comma. 

.. code-block:: sh
   :copyable: false

   mongocli atlas dbuser create --username egUser --password ChangeThisToAStrongPassword --role readWriteAnyDatabase@admin,clusterMonitor@admin --projectId 5e2211c17a3e5a48f5497de3

The following command specifies the ``--role`` option twice, 
once for each privilege.

.. code-block:: sh
   :copyable: false

   mongocli atlas dbuser create --username egUser --password ChangeThisToAStrongPassword --role readWriteAnyDatabase@admin --role clusterMonitor@admin --output json --projectId 5e2211c17a3e5a48f5497de3

The commands print the following fields to the terminal. 
To learn more about these fields, see :ref:`Output 
<dbuser-create-command-output>`. 

.. code-block:: json
   :copyable: false

   {
   	"roles": [{
   			"roleName": "readWriteAnyDatabase",
   			"databaseName": "admin"
   		},
   		{
   			"roleName": "clusterMonitor",
   			"databaseName": "admin"
   		}
   	],
   	"groupId": "5e2211c17a3e5a48f5497de3",
   	"username": "egUser",
   	"databaseName": "admin",
   	"ldapAuthType": "NONE",
   	"x509Type": "NONE",
   	"awsIAMType": "NONE"
   }

.. _dbuser-create-eg-3:

Example 3
~~~~~~~~~

The following command creates a temporary user with credentials that 
expire in one week.

- Username: ``tempUser`` 
- Password: ``ChangeThisToAStrongPassword`` 
- Role: ``clusterMonitor``
- Credential expiry date: ``2020-07-31``

The command uses the {+default-profile+} to access |service| and create 
the user.

.. code-block:: sh
   :copyable: false

   mongocli atlas dbuser create --username tempUser --password ChangeThisToAStrongPassword --role clusterMonitor@admin --deleteAfter 2020-07-31 --output json --projectId 5e2211c17a3e5a48f5497de3

The previous command prints the following fields
to the terminal. To learn more about these fields, see 
:ref:`Output <dbuser-create-command-output>`.

.. code-block:: json
   :copyable: false

   {
   	"roles": [{
   		"roleName": "clusterMonitor",
   		"databaseName": "admin"
   	}],
   	"groupId": "5e2211c17a3e5a48f5497de3",
   	"username": "tempUser",
   	"databaseName": "admin",
   	"ldapAuthType": "NONE",
   	"x509Type": "NONE",
   	"awsIAMType": "NONE",
   	"deleteAfterDate": "2020-07-31T00:00:00Z"
   }
