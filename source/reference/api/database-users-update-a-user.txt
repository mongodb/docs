======================
Update a Database User
======================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. include:: /includes/fact-projects-groups-synonyms.rst

.. include:: /includes/extracts/fact-api-requirements-owner.rst

.. include:: /includes/api/tabsets/db-auth-mech.rst

Send only those parameters that you want to change.

Resource
--------

.. include:: /includes/api/base-api-uri.rst

.. code-block:: http

   PATCH /groups/{GROUP-ID}/databaseUsers/{databaseName}/{USERNAME}

Behavior
~~~~~~~~

- For permanent database users, you can change their roles and password.
  You can't change their name, their :ref:`authentication database
  <authentication-database>`, or their user status to temporary.

- For temporary database users, you can change their expiration date,
  their user status to permanent, or both.

Request Path Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1
   :stub-columns: 1
   :widths: 20 14 11 55

   * - Parameter
     - Type
     - Necessity
     - Description

   * - GROUP-ID
     - string
     - Required
     - Unique 24-hexadecimal string that identifies the
       :ref:`project <group-id>`.

   * - DATABASE-NAME
     - string
     - Required
     - :ref:`Database <authentication-database>` against which the
       database user authenticates. Database users must provide both a
       username and authentication database to log into MongoDB.

       You may set this parameter value as:

       .. include:: /includes/api/tabsets/db-name.rst

   * - USERNAME
     - string
     - Required
     - Username that this resource updates in the MongoDB database. This
       username should be formatted as:

       .. include:: /includes/api/tabsets/db-username.rst

Request Query Parameters
~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/api/no-query-single-parameters.rst

Request Body Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1
   :stub-columns: 1
   :widths: 20 14 11 55

   * - Name
     - Type
     - Necessity
     - Description

   * - deleteAfterDate
     - string
     - Optional
     - :wikipedia:`ISO-8601 <ISO_8601>`-formatted |utc| date after
       which |service| deletes the user. The specified date must be in
       the future and within one week of the time you make the |api|
       request. To update a  temporary user to be permanent, set the
       value of this field to ``null``.

       .. note::

          You may include an ISO-8601 time zone designator to ensure
          that the expiration date occurs with respect to the local
          time in the specified time zone.

       .. important::

          You can only modify the expiration date for a user if an
          expiration date was specified when creating the user. You
          cannot assign a ``deleteAfterDate`` to a permanent user.

   * - labels
     - array
     - Optional
     - List that contains key-value pairs that tag and categorize the
       database user.

       Each key and value has a maximum length of 255 characters.

       .. literalinclude:: /includes/cluster-settings/example-labels.json

   * - roles
     - array
     - Required
     - .. include:: /includes/fact-database-user-role.rst

       .. include:: /includes/fact-subset-privilege-actions.rst

       .. important::

          If a user is assigned a :ref:`custom role <mongodb-roles>`,
          they cannot be assigned any other roles.

   * - roles.databaseName
     - string
     - Optional
     - Database on which the user has the specified role. A role on the
       ``admin`` database can include privileges that apply to the
       other databases.

   * - roles.collectionName
     - string
     - Optional
     - Collection for which the role applies.

       You can specify a collection for the ``read`` and ``readWrite``
       roles. If you do not specify a collection for ``read`` and
       ``readWrite``, the role applies to all collections in the
       database (excluding some collections in the ``system.``
       database).

       .. note::

          .. include:: /includes/fact-read-read-write-actions.rst

   * - roles.roleName
     - string
     - Required
     - .. include:: /includes/api/facts/db-user-role-list.rst

   * - scopes
     - array
     - Optional
     - List of clusters and {+data-lake+}\s that this user can access.
       Returns an empty array if the database user has access to all
       the clusters and {+data-lake+}\s in the project. |service|
       grants database users access to all resources by default.

       .. include:: /includes/fact-dbuser-scopes-format.rst

   * - scopes.name
     - string
     - Required
     - Name of the cluster or {+data-lake+} that this user can access.

   * - scopes.type
     - string
     - Required
     - Type of resource that this user has access to. Valid values are:

       - ``CLUSTER``
       - ``DATA_LAKE``

   * - password
     - string
     - Required
     - Alphanumeric string that authenticates the database user
       against the database specified in **databaseName**.

Response Elements
~~~~~~~~~~~~~~~~~

If you set the query element ``"envelope" : true``, this resource wraps
the response in a ``content`` object.

.. include:: /includes/api/list-tables/database-users-get-response.rst

Example Request
---------------

.. tabs::

   .. tab:: SCRAM-SHA
      :tabid: scram

      Update one database user that |service| authenticates using
      :manual:`SCRAM-SHA </core/security-scram>` and the ``admin``
      database.

      .. include:: /includes/extracts/fact-api-requirements-modify.rst

      .. code-block:: sh
         :linenos:

         curl --user "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest \
              --header "Accept: application/json" \
              --header "Content-Type: application/json" \
              --include \
              --request PATCH "https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794dee37132bb7b/databaseUsers/admin/david" \
              --data '{
                       "roles" : [ {
                         "databaseName" : "service",
                         "roleName" : "read"
                       } ]
                     }'

   .. tab:: X.509
      :tabid: x509

      Update one database user that |service| authenticates using
      X.509 and the **$external** database.

      .. include:: /includes/extracts/fact-api-requirements-modify.rst

      .. code-block:: sh
         :linenos:

         curl --user "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest \
              --header "Accept: application/json" \
              --header "Content-Type: application/json" \
              --include \
              --request PATCH "https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794dee37132bb7b/databaseUsers/\$external/CN=david@example.com,OU=users,DC=example,DC=com" \
              --data '{
                       "roles" : [ {
                         "databaseName" : "service",
                         "roleName" : "read"
                       } ]
                     }'

   .. tab:: LDAP
      :tabid: ldap

      Update one database user that |service| authenticates using
      X.509 or |ldap| and the **$external** database.

      .. include:: /includes/extracts/fact-api-requirements-modify.rst

      .. code-block:: sh
         :linenos:

         curl --user "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest \
              --header "Accept: application/json" \
              --header "Content-Type: application/json" \
              --include \
              --request PATCH "https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794dee37132bb7b/databaseUsers/\$external/CN=david@example.com,OU=users,DC=example,DC=com" \
              --data '{
                       "roles" : [ {
                         "databaseName" : "service",
                         "roleName" : "read"
                       } ]
                     }'

   .. tab:: AWS IAM
      :tabid: aws-iam

      Update one database user that |service| authenticates using
      |aws| |iam| credentials and the **$external** database.

      .. note::

         The ``/`` character must be replaced with ``%2F`` in the
         |aws| |arn|.

      .. include:: /includes/extracts/fact-api-requirements-modify.rst

      .. code-block:: sh
         :linenos:

         curl --user "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest \
              --header "Accept: application/json" \
              --header "Content-Type: application/json" \
              --include \
              --request PATCH "https://cloud.mongodb.com/api/atlas/v1.0/groups/5dd5a6b8f10fab1d71a58495/databaseUsers/\$external/arn:aws:iam::358363220050:user%2Fmongodb-aws-iam-auth-test-user" \
              --data '{
                       "roles": [ { "databaseName": "admin",   "roleName": "read" } ]
                     }'

Example Response
----------------

Response Header
~~~~~~~~~~~~~~~

.. include:: /includes/api/api-headers/401.rst

.. include:: /includes/api/api-headers/200.rst

Response Body
~~~~~~~~~~~~~

.. tabs::
   :hidden:

   .. tab:: SCRAM-SHA
      :tabid: scram

      .. code-block:: json
         :linenos:
         :copyable: false

         {
           "databaseName" : "admin",
           "groupId" : "5356823b3794dee37132bb7b",
           "labels" [],
           "links" : [ ... ],
           "roles" : [ {
             "databaseName" : "service",
             "roleName" : "read"
           } ],
           "scopes": [{
             "name": "myCluster",
             "type": "CLUSTER"
           }],
           "username" : "david",
           "awsIAMType" : "NONE",
           "x509Type" : "NONE",
           "ldapAuthType" : "NONE"
         }

   .. tab:: X.509 and LDAP
      :tabid: ldap

      .. code-block:: json
         :linenos:
         :copyable: false

         {
           "awsIAMType" : "NONE",
           "databaseName" : "$external",
           "groupId" : "5356823b3794dee37132bb7b",
           "labels" [],
           "links" : [ ... ],
           "roles" : [ {
             "databaseName" : "service",
             "roleName" : "read"
           } ],
           "scopes": [{
             "name": "myCluster",
             "type": "CLUSTER"
           }],
           "username" : "CN=david@example.com,OU=users,DC=example,DC=com"
         }

   .. tab:: AWS IAM
      :tabid: aws-iam

      .. code-block:: json
         :linenos:
         :copyable: false

         {
           "awsIAMType" : "USER",
           "databaseName" : "$external",
           "groupId" : "5356823b3794dee37132bb7b",
           "labels" [],
           "links" : [ ... ],
           "roles" : [ {
             "databaseName" : "admin",
             "roleName" : "read"
           } ],
           "scopes": [{
             "name": "myCluster",
             "type": "CLUSTER"
           }],
           "username" : "arn:aws:iam::358363220050:user/mongodb-aws-iam-auth-test-user",
           "ldapAuthType" : "NONE",
           "x509Type" : "NONE"
         }
