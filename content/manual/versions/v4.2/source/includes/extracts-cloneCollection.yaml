ref: _cloneCollection-behavior
content: |
   :binary:`~bin.mongos` does not support {{cloneCollection}}.

   {{cloneCollection}} cannot be used if the `from` server has
   :doc:`authorization </core/authorization>` enabled.

   If the given :term:`namespace` already exists in the destination
   :binary:`~bin.mongod` instance, {{cloneCollection}} will return an
   error.
---
ref: cloneCollection-behavior-dbcommand
content: |

   ``mongos``
   ~~~~~~~~~~
   
   :binary:`~bin.mongos` does not support {{cloneCollection}}.

   Authorization
   ~~~~~~~~~~~~~
   
   {{cloneCollection}} cannot be used if the `from` server has
   :doc:`authorization </core/authorization>` enabled.

   Namespace
   ~~~~~~~~~

   If the given :term:`namespace` already exists in the destination
   :binary:`~bin.mongod` instance, {{cloneCollection}} will return an
   error.

   FeatureCompatibilityVersion
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~

   .. include:: /includes/3.6-featureCompatibility-copy-data.rst

replacement:
  cloneCollection: :dbcommand:`cloneCollection`
---
ref: cloneCollection-behavior-method
content: |

   ``mongos``
   ~~~~~~~~~~

   :binary:`~bin.mongos` does not support {{cloneCollection}}.

   Namespace
   ~~~~~~~~~

   When copying the specified collection, {{cloneCollection}} uses the same
   database name in the ``from`` server as the destination database.  If the
   collection does not exist in the source database, {{cloneCollection}} fails.

   If the given :term:`collection` already exists in the destination
   :binary:`~bin.mongod` instance, {{cloneCollection}} returns an
   error.

   Authorization
   ~~~~~~~~~~~~~

   {{cloneCollection}} cannot be used if the ``from`` server has
   :doc:`authorization </core/authorization>` enabled.

   FeatureCompatibilityVersion
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~

   .. include:: /includes/3.6-featureCompatibility-copy-data.rst


replacement:
  cloneCollection: :method:`db.cloneCollection()`
...
