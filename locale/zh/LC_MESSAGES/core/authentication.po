#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/authentication.txt:5
msgid "Authentication"
msgstr "认证"


#: ../source/core/authentication.txt:20

msgid ""
"Although authentication and :doc:`authorization </core/authorization>` are "
"closely connected, authentication is distinct from authorization. "
"Authentication verifies the identity of a user; authorization determines the "
"verified user's access to resources and operations."
msgstr ""
"虽然认证和 :doc:`授权 </core/authorization>` 关系非常紧密，认证和授权是两个不同"
"的概念。认证是用来识别用户的身份，授权控制已经认证的用户使用资源和行为的权限。"


#: ../source/core/authentication.txt:68

msgid ""
"In addition to verifying the identity of a client, MongoDB can require members "
"of replica sets and sharded clusters to :ref:`authenticate their membership "
"<inter-process-auth>` to their respective replica set or sharded cluster. See :"
"ref:`inter-process-auth` for more information."
msgstr ""
"除了认证客户端的身份，MongoDB也可以要求复制集和分片集的成员向他们所在的集  :"
"ref:`认证他们的成员身份 <inter-process-auth>` 。 参见 :ref:`inter-process-"
"auth` 了解详情。"


#: ../source/core/authentication.txt:37

msgid "Authentication Mechanisms"
msgstr "认证机构"


#: ../source/core/authentication.txt:75
msgid "Authentication on Sharded Clusters"

msgstr ""

#: ../source/core/authentication.txt:0
msgid "On this page"
msgstr ""

#: ../source/core/authentication.txt:15
msgid ""
"Authentication is the process of verifying the identity of a client. When "
"access control, i.e. :doc:`authorization </core/authorization>`, is enabled,"
" MongoDB requires all clients to authenticate themselves in order to "
"determine their access."
msgstr ""

#: ../source/core/authentication.txt:26
msgid "Authentication Methods"
msgstr ""

#: ../source/core/authentication.txt:28
msgid ""

"To authenticate a :doc:`user </core/security-users>`, MongoDB provides the "
":method:`db.auth()` method."

msgstr ""
"参见:doc:`/tutorial/generate-key-file` 如何生成密钥文件并且开启使用密钥文件认证"
"成员。例如使用密钥文件进行分片集认证。参见 :doc:`/tutorial/enable-"
"authentication-in-sharded-cluster`。"

#: ../source/core/authentication.txt:31
msgid ""

"For the :program:`mongo` shell and the MongoDB tools, you can also "
"authenticate a user by passing in the user authentication information from "
"the command line."

msgstr ""
"在分片集中，应用程序可以直接使用:term:`config servers <config server>`服务器"
"``admin``数据库中的用户身份凭证向 :program:`mongos` 实例认证。分片集中的分片也"
"存有用户身份凭证，客户端在维护服务器时可以直接向分片认证。一般来讲，应用程序或"
"者客户端应该通过:program:`mongos`连接到分片集。"

#: ../source/core/authentication.txt:39
msgid ""
"MongoDB supports a number of :ref:`authentication mechanisms <security-"
"authentication-mechanisms>` that clients can use to verify their identity. "
"These mechanisms allow MongoDB to integrate into your existing "
"authentication system."
msgstr ""
"在之前版本里，用户向一个集中的数据库认证的身份凭证是存在该数据库的 :ref:"
"`primary shard <primary-shard>` 里。"


#: ../source/core/authentication.txt:44
msgid "MongoDB supports multiple authentication mechanisms:"
msgstr ""


#: ../source/core/authentication.txt:46
msgid ":ref:`SCRAM-SHA-1 <authentication-scram-sha-1>`"
msgstr ""

#: ../source/core/authentication.txt:48
msgid ""
":ref:`MongoDB Challenge and Response (MONGODB-CR) <authentication-mongodb-"
"cr>`"
msgstr ""

#: ../source/core/authentication.txt:51
msgid ""
"New challenge-response users created in 3.0 will use ``SCRAM-SHA-1``. If "
"using 2.6 user data, MongoDB 3.0 will continue to use the ``MONGODB-CR``."
msgstr ""
"你可以使用本地主机例外在系统中建立第一个用户。在被开启时，本地主机例外允许所有"
"来自本地主机接口的所有连接都对该实例有完全的访问权限。本地主机例外只有在MongoDB"
"实例中没有任何用户时才适用。"


#: ../source/core/authentication.txt:56
msgid ":ref:`x.509 Certificate Authentication <security-auth-x509>`."
msgstr ""


#: ../source/core/authentication.txt:58
msgid ""
"In addition to supporting the aforementioned mechanisms, MongoDB Enterprise "
"also supports the following mechanisms:"
msgstr ""

#: ../source/core/authentication.txt:61
msgid ":ref:`LDAP proxy authentication <security-auth-ldap>`, and"
msgstr ""

#: ../source/core/authentication.txt:63
msgid ":ref:`Kerberos authentication <security-auth-kerberos>`."
msgstr ""

#: ../source/core/authentication.txt:66
msgid "Internal Authentication"
msgstr ""

#: ../source/core/authentication.txt:77
msgid ""
"In sharded clusters, clients generally authenticate directly to the "
":program:`mongos` instances. However, some maintenance operations may "
"require authenticating directly to a specific shard. For more information on"
" authentication and sharded clusters, see :ref:`sharding-security`."
msgstr ""

#~ msgid ""
#~ "Authentication is the process of verifying the identity of a client. When "
#~ "access control, i.e. :doc:`authorization </core/authorization>`, is enabled,"
#~ " MongoDB requires all clients to authenticate themselves first in order to "
#~ "determine the access for the client."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB supports a number of :ref:`authentication mechanisms <security-"
#~ "authentication-mechanisms>` that clients can use to verify their identity. "
#~ "These mechanisms allow MongoDB to integrate into your existing "
#~ "authentication system. See :ref:`security-authentication-mechanisms` for "
#~ "details."
#~ msgstr ""

#~ msgid "Client Users"
#~ msgstr ""

#~ msgid ""
#~ "To authenticate a client in MongoDB, you must add a corresponding user to "
#~ "MongoDB. When adding a user, you create the user in a specific database. "
#~ "This database is the :ref:`authentication database <mongo-shell-"
#~ "authentication-options>` for the user."
#~ msgstr ""

#~ msgid ""
#~ "Together, the user's name and database serve as a unique identifier for that"
#~ " user. That is, if two users have the same name but are created in different"
#~ " databases, they are two separate users. To authenticate, the client must "
#~ "authenticate the user against the user's :ref:`authentication database "
#~ "<mongo-shell-authentication-options>`. For instance, if using the "
#~ ":program:`mongo` shell as a client, you can specify the authentication "
#~ "database for the user with the :ref:`--authenticationDatabase <mongo-shell-"
#~ "authentication-options>` option."
#~ msgstr ""

#~ msgid ""
#~ "To add and manage user information, MongoDB provides the "
#~ ":method:`db.createUser()` method as well as other :ref:`user management "
#~ "methods <user-management-methods>`. For examples of user management in "
#~ "MongoDB, see :doc:`/tutorial/manage-users-and-roles`."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB stores all user information, including :data:`name "
#~ "<admin.system.users.user>`, :data:`password "
#~ "<admin.system.users.credentials>`, and the :data:`user's database "
#~ "<admin.system.users.db>`, in the :doc:`system.users </reference/system-"
#~ "users-collection>` collection in the ``admin`` database."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB supports multiple authentication mechanisms. MongoDB's default "
#~ "authentication method is a :ref:`challenge and response mechanism (SCRAM-"
#~ "SHA-1) <authentication-scram-sha-1>`. Previously, MongoDB used :ref:`MongoDB"
#~ " Challenge and Response (MONGODB-CR) <authentication-mongodb-cr>` as the "
#~ "default."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB also supports :ref:`x509 certificate authentication <security-"
#~ "auth-x509>`, :ref:`LDAP proxy authentication <security-auth-ldap>`, and "
#~ ":ref:`Kerberos authentication <security-auth-kerberos>`."
#~ msgstr ""

#~ msgid "This section introduces the mechanisms available in MongoDB."
#~ msgstr ""

#~ msgid ""
#~ "To specify the authentication mechanism to use, see "
#~ ":parameter:`authenticationMechanisms`."
#~ msgstr ""

#~ msgid "``SCRAM-SHA-1`` Authentication"
#~ msgstr ""

#~ msgid ""
#~ "``SCRAM-SHA-1`` is an IETF standard, `RFC 5802 "
#~ "<https://tools.ietf.org/html/rfc5802>`_, that defines best practice methods "
#~ "for implementation of challenge-response mechanisms for authenticating users"
#~ " with passwords."
#~ msgstr ""

#~ msgid ""
#~ "``SCRAM-SHA-1`` verifies supplied user credentials against the user's "
#~ ":data:`name <admin.system.users.user>`, :data:`password "
#~ "<admin.system.users.credentials>` and :data:`database "
#~ "<admin.system.users.db>`. The user's database is the database where the user"
#~ " was created, and the user's database and the user's name together serves to"
#~ " identify the user."
#~ msgstr ""

#~ msgid ""
#~ "A driver upgrade is **necessary** to use the ``SCRAM-SHA-1`` authentication "
#~ "mechanism if your current driver version does not support ``SCRAM-SHA-1``. "
#~ "See :ref:`required driver versions <considerations-scram-sha-1-drivers>` for"
#~ " details."
#~ msgstr ""

#~ msgid ""
#~ "`Blog Post: Improved Password-Based Authentication in MongoDB 3.0: SCRAM "
#~ "Explained (Part 1) <https://www.mongodb.com/blog/post/improved-password-"
#~ "based-authentication-mongodb-30-scram-explained-part-1?jmp=docs>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Blog Post: Improved Password-Based Authentication in MongoDB 3.0: SCRAM "
#~ "Explained (Part 2) <https://www.mongodb.com/blog/post/improved-password-"
#~ "based-authentication-mongodb-30-scram-explained-part-2?jmp=docs>`_"
#~ msgstr ""

#~ msgid "``SCRAM-SHA-1`` Advantages"
#~ msgstr ""

#~ msgid ""
#~ "MongoDB's implementation of ``SCRAM-SHA-1`` represents an improvement in "
#~ "security over the previously-used ``MONGODB-CR``, providing:"
#~ msgstr ""

#~ msgid "A tunable work factor (``iterationCount``),"
#~ msgstr ""

#~ msgid "Per-user random salts rather than server-wide salts,"
#~ msgstr ""

#~ msgid ""
#~ "A cryptographically stronger hash function (``SHA-1`` rather than ``MD5``), "
#~ "and"
#~ msgstr ""

#~ msgid ""
#~ "Authentication of the server to the client as well as the client to the "
#~ "server."
#~ msgstr ""

#~ msgid "``SCRAM-SHA-1`` and Existing User Credentials"
#~ msgstr ""

#~ msgid ""
#~ "``SCRAM-SHA-1`` is the default mechanism for MongoDB versions beginning with"
#~ " the 3.0 series. However, if you are upgrading a MongoDB 2.6 instances that "
#~ "already have users credentials, MongoDB will continue to use ``MONGODB-CR`` "
#~ "for challenge-response authentication until you upgrade the authentication "
#~ "schema. Even when using the ``MONGODB-CR`` authentication mechanism, clients"
#~ " and drivers that support MongoDB 3.0 features (see :ref:`compatibility-"
#~ "driver-versions`) will use the ``SCRAM`` communication protocol."
#~ msgstr ""

#~ msgid ""
#~ "For details on upgrading the authentication schema model to ``SCRAM-SHA-1``,"
#~ " see :doc:`/release-notes/3.0-scram`."
#~ msgstr ""

#~ msgid ""
#~ "The procedure to upgrade to ``SCRAM-SHA-1`` **discards** the ``MONGODB-CR`` "
#~ "credentials used by 2.6. As such, the procedure is **irreversible**, short "
#~ "of restoring from backups."
#~ msgstr ""

#~ msgid ""
#~ "The procedure also disables ``MONGODB-CR`` as an authentication mechanism."
#~ msgstr ""

#~ msgid "``MONGODB-CR`` Authentication"
#~ msgstr ""

#~ msgid ""
#~ "``MONGODB-CR`` is a challenge-response mechanism that authenticates users "
#~ "through passwords."
#~ msgstr ""

#~ msgid ""
#~ "As of version 3.0, MongoDB no longer defaults to ``MONGODB-CR`` and instead "
#~ "uses ``SCRAM-SHA-1`` as the default authentication mechanism."
#~ msgstr ""

#~ msgid ""
#~ "``MONGODB-CR`` verifies supplied user credentials against the user's "
#~ ":data:`name <admin.system.users.user>`, :data:`password "
#~ "<admin.system.users.credentials>` and :data:`database "
#~ "<admin.system.users.db>`. The user's database is the database where the user"
#~ " was created, and the user's database and the user's name together serve to "
#~ "identify the user."
#~ msgstr ""

#~ msgid ""
#~ "Using :setting:`key files <security.keyFile>`, you can also use ``MONGODB-"
#~ "CR`` authentication for the :ref:`internal member authentication <inter-"
#~ "process-auth>` of replica set members and sharded cluster members. The "
#~ "contents of the key files serve as the shared password for the members. You "
#~ "must store the key file on each :program:`mongod` or :program:`mongos` "
#~ "instance for that replica set or sharded cluster. The content of the key "
#~ "file is arbitrary but must be the same on all :program:`mongod` and "
#~ ":program:`mongos` instances that connect to each other."
#~ msgstr ""

#~ msgid ""
#~ "See :doc:`/tutorial/generate-key-file` for instructions on generating a key "
#~ "file and turning on key file authentication for members."
#~ msgstr ""

#~ msgid "x.509 Certificate Authentication"
#~ msgstr ""

#~ msgid ""
#~ "MongoDB supports x.509 certificate authentication for use with a secure "
#~ ":doc:`TLS/SSL connection </tutorial/configure-ssl>`."
#~ msgstr ""

#~ msgid ""
#~ "To authenticate to servers, clients can use x.509 certificates instead of "
#~ "usernames and passwords. See :ref:`x509-client-authentication` for more "
#~ "information."
#~ msgstr ""

#~ msgid ""
#~ "For membership authentication, members of sharded clusters and replica sets "
#~ "can use x.509 certificates instead of key files. See :ref:`x509-internal-"
#~ "authentication` for more information."
#~ msgstr ""

#~ msgid "Kerberos Authentication"
#~ msgstr ""

#~ msgid ""
#~ "`MongoDB Enterprise <http://www.mongodb.com/products/mongodb-"
#~ "enterprise?jmp=docs>`_ supports authentication using a Kerberos service. "
#~ "Kerberos is an industry standard authentication protocol for large "
#~ "client/server systems."
#~ msgstr ""

#~ msgid ""
#~ "To use MongoDB with Kerberos, you must have a properly configured Kerberos "
#~ "deployment, configured :ref:`Kerberos service principals <kerberos-service-"
#~ "principal>` for MongoDB, and added :ref:`Kerberos user principal <kerberos-"
#~ "user-principal>` to MongoDB."
#~ msgstr ""

#~ msgid ""
#~ "See :doc:`/core/kerberos` for more information on Kerberos and MongoDB. To "
#~ "configure MongoDB to use Kerberos authentication, see :doc:`/tutorial"
#~ "/control-access-to-mongodb-with-kerberos-authentication` and :doc:`/tutorial"
#~ "/control-access-to-mongodb-windows-with-kerberos-authentication`."
#~ msgstr ""

#~ msgid "LDAP Proxy Authority Authentication"
#~ msgstr ""

#~ msgid ""
#~ "`MongoDB Enterprise <http://www.mongodb.com/products/mongodb-"
#~ "enterprise?jmp=docs>`_ supports proxy authentication through a Lightweight "
#~ "Directory Access Protocol (LDAP) service. See :doc:`/tutorial/configure-"
#~ "ldap-sasl-openldap` and :doc:`/tutorial/configure-ldap-sasl-"
#~ "activedirectory`."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB Enterprise for Windows does **not** include LDAP support for "
#~ "authentication. However, MongoDB Enterprise for Linux supports using LDAP "
#~ "authentication with an ActiveDirectory server."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB does **not** support LDAP authentication in mixed sharded cluster "
#~ "deployments that contain both version 2.4 and version 2.6 shards."
#~ msgstr ""

#~ msgid "Authentication Behavior"
#~ msgstr ""

#~ msgid "Client Authentication"
#~ msgstr ""

#~ msgid ""
#~ "Clients can authenticate using the :ref:`challenge and response "
#~ "<authentication-mongodb-cr>`, :ref:`x.509 <security-auth-x509>`, :ref:`LDAP "
#~ "Proxy <security-auth-ldap>` and :ref:`Kerberos <security-auth-kerberos>` "
#~ "mechanisms."
#~ msgstr ""

#~ msgid ""
#~ "Each client connection should authenticate as exactly one user. If a client "
#~ "authenticates to a database as one user and later authenticates to the same "
#~ "database as a different user, the second authentication invalidates the "
#~ "first. While clients can authenticate as multiple users if the users are "
#~ "defined on different databases, we recommend authenticating as one user at a"
#~ " time, providing the user with appropriate privileges on the databases "
#~ "required by the user."
#~ msgstr ""

#~ msgid "See :doc:`/tutorial/authenticate-as-client` for more information."
#~ msgstr ""

#~ msgid "Authentication Between MongoDB Instances"
#~ msgstr ""

#~ msgid ""
#~ "You can authenticate members of :term:`replica sets <replica set>` and "
#~ ":term:`sharded clusters <sharded cluster>`. To authenticate members of a "
#~ "single MongoDB deployment to each other, MongoDB can use the "
#~ ":setting:`~security.keyFile` and :ref:`x.509 <security-auth-x509>` "
#~ "mechanisms. Using :setting:`~security.keyFile` authentication for members "
#~ "also enables authorization."
#~ msgstr ""

#~ msgid ""
#~ "Always run replica sets and sharded clusters in a trusted networking "
#~ "environment. Ensure that the network permits only trusted traffic to reach "
#~ "each :program:`mongod` and :program:`mongos` instance."
#~ msgstr ""

#~ msgid ""
#~ "Use your environment's firewall and network routing to ensure that traffic "
#~ "*only* from clients and other members can reach your :program:`mongod` and "
#~ ":program:`mongos` instances. If needed, use virtual private networks (VPNs) "
#~ "to ensure secure connections over wide area networks (WANs)."
#~ msgstr ""

#~ msgid "Always ensure that:"
#~ msgstr ""

#~ msgid ""
#~ "Your network configuration will allow every member of the replica set or "
#~ "sharded cluster to contact every other member."
#~ msgstr ""

#~ msgid ""
#~ "If you use MongoDB's authentication system to limit access to your "
#~ "infrastructure, ensure that you configure a :setting:`~security.keyFile` on "
#~ "all members to permit authentication."
#~ msgstr ""

#~ msgid ""
#~ "See :doc:`/tutorial/generate-key-file` for instructions on generating a key "
#~ "file and turning on key file authentication for members. For an example of "
#~ "using key files for sharded cluster authentication, see :doc:`/tutorial"
#~ "/enable-authentication-in-sharded-cluster`."
#~ msgstr ""

#~ msgid ""
#~ "In sharded clusters, applications authenticate to directly to "
#~ ":program:`mongos` instances, using credentials stored in the ``admin`` "
#~ "database of the :term:`config servers <config server>`. The shards in the "
#~ "sharded cluster also have credentials, and clients can authenticate directly"
#~ " to the shards to perform maintenance directly on the shards. In general, "
#~ "applications and clients should connect to the sharded cluster through the "
#~ ":program:`mongos`."
#~ msgstr ""

#~ msgid ""
#~ "Previously, the credentials for authenticating to a database on a cluster "
#~ "resided on the :ref:`primary shard <primary-shard>` for that database."
#~ msgstr ""

#~ msgid ""
#~ "Some maintenance operations, such as :dbcommand:`cleanupOrphaned`, "
#~ ":dbcommand:`compact`, :method:`rs.reconfig()`, require direct connections to"
#~ " specific shards in a sharded cluster. To perform these operations with "
#~ "authentication enabled, you must connect directly to the shard and "
#~ "authenticate as a *shard local* administrative user. To create a *shard "
#~ "local* administrative user, connect directly to the shard and create the "
#~ "user. MongoDB stores *shard local* users in the ``admin`` database of the "
#~ "shard itself. These *shard local* users are completely independent from the "
#~ "users added to the sharded cluster via :program:`mongos`. *Shard local* "
#~ "users are local to the shard and are inaccessible by :program:`mongos`. "
#~ "Direct connections to a shard should only be for shard-specific maintenance "
#~ "and configuration."
#~ msgstr ""

#~ msgid "Localhost Exception"
#~ msgstr ""

#~ msgid ""
#~ "The localhost exception allows you to enable authorization *before* creating"
#~ " the first user in the system. When active, the localhost exception allows "
#~ "connections from the localhost interface to create the first user on the "
#~ "``admin`` database. The exception applies only when there are no users "
#~ "created in the MongoDB instance."
#~ msgstr ""

#~ msgid ""
#~ "The localhost exception changed so that these connections *only* have access"
#~ " to create the first user on the ``admin`` database. In previous versions, "
#~ "connections that gained access using the localhost exception had "
#~ "unrestricted access to the MongoDB instance."
#~ msgstr ""

#~ msgid ""
#~ "If you use the localhost exception when deploying a new MongoDB system, the "
#~ "first user you create must be in the ``admin`` database with privileges to "
#~ "create other users, such as a user with the :authrole:`userAdmin` or "
#~ ":authrole:`userAdminAnyDatabase` role. See :doc:`/tutorial/enable-"
#~ "authentication` and :doc:`/tutorial/add-user-administrator` for more "
#~ "information."
#~ msgstr ""

#~ msgid ""
#~ "In the case of a sharded cluster, the localhost exception applies to each "
#~ "shard individually as well as to the cluster as a whole. Once you create a "
#~ "sharded cluster and add an administrator to the :program:`mongos` instance, "
#~ "you must still prevent unauthorized access to the individual shards. Follow "
#~ "one of the following steps for each shard in your cluster:"
#~ msgstr ""

#~ msgid "Create an administrative user, or"
#~ msgstr ""

#~ msgid ""
#~ "Disable the localhost exception at startup.  To disable the localhost "
#~ "exception, use :setting:`setParameter` in your :doc:`configuration file "
#~ "</reference/configuration-options>`, or :option:`--setParameter` on the "
#~ "command line to set the :parameter:`enableLocalhostAuthBypass` parameter to "
#~ "``0``."
#~ msgstr ""

#~ msgid "sharding"
#~ msgstr ""

#~ msgid "localhost"
#~ msgstr ""
