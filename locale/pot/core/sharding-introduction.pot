# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/sharding-introduction.txt:5
# 1b59d21cbbf0430996600bef9f57a6e5
msgid "Sharding Introduction"
msgstr ""

#: ../source/core/sharding-introduction.txt:11
# d47b07bd6b2e460a9b020c98c937393c
msgid "Sharding is a method for storing data across multiple machines. MongoDB uses sharding to support deployments with very large data sets and high throughput operations."
msgstr ""

#: ../source/core/sharding-introduction.txt:16
# 831a5ed61adf45909f1ad541e8ae33a0
msgid "Purpose of Sharding"
msgstr ""

#: ../source/core/sharding-introduction.txt:18
# b4d6251cda1a4e7c852a593301acfacf
msgid "Database systems with large data sets and high throughput applications can challenge the capacity of a single server. High query rates can exhaust the CPU capacity of the server. Larger data sets exceed the storage capacity of a single machine. Finally, working set sizes larger than the system's RAM stress the I/O capacity of disk drives."
msgstr ""

#: ../source/core/sharding-introduction.txt:24
# c0051f1bd2304bdaa831d01885b2e828
msgid "To address these issues of scales, database systems have two basic approaches: **vertical scaling** and **sharding**."
msgstr ""

#: ../source/core/sharding-introduction.txt:27
# 0896863f2af6494c82e0924a2f04bb54
msgid "**Vertical scaling** adds more CPU and storage resources to increase capacity. Scaling by adding capacity has limitations: high performance systems with large numbers of CPUs and large amount of RAM are disproportionately *more expensive* than smaller systems. Additionally, cloud-based providers may only allow users to provision smaller instances.  As a result there is a *practical maximum* capability for vertical scaling."
msgstr ""

#: ../source/core/sharding-introduction.txt:35
# 1a76fb2abed34178b4104608a27115ba
msgid "**Sharding**, or *horizontal scaling*, by contrast, divides the data set and distributes the data over multiple servers, or **shards**. Each shard is an independent database, and collectively, the shards make up a single logical database."
msgstr ""

#: ../source/core/sharding-introduction.txt:42
# 2015e5175a994b4192b241f0f9dca32a
msgid "Sharding addresses the challenge of scaling to support high throughput and large data sets:"
msgstr ""

#: ../source/core/sharding-introduction.txt:45
# 2c79b557e1114846b36e12992e6ca4cb
msgid "Sharding reduces the number of operations each shard handles. Each shard processes fewer operations as the cluster grows. As a result, a cluster can increase capacity and throughput *horizontally*."
msgstr ""

#: ../source/core/sharding-introduction.txt:49
# 3f86010832514ab9aa734ab726a266f2
msgid "For example, to insert data, the application only needs to access the shard responsible for that record."
msgstr ""

#: ../source/core/sharding-introduction.txt:52
# 616e03bf91794ab9ac4186374a7e4b1a
msgid "Sharding reduces the amount of data that each server needs to store. Each shard stores less data as the cluster grows."
msgstr ""

#: ../source/core/sharding-introduction.txt:55
# 8ed4f701a7d44936804bb5ef3a1cb0cf
msgid "For example, if a database has a 1 terabyte data set, and there are 4 shards, then each shard might hold only 256GB of data. If there are 40 shards, then each shard might hold only 25GB of data."
msgstr ""

#: ../source/core/sharding-introduction.txt:60
# 1fb89b38647a49d89512304df8247a3c
msgid "Sharding in MongoDB"
msgstr ""

#: ../source/core/sharding-introduction.txt:62
# 5ec8b279119547e1a52f88f480243e52
msgid "MongoDB supports sharding through the configuration of a :term:`sharded clusters <sharded cluster>`."
msgstr ""

#: ../source/core/sharding-introduction.txt:67
# 67f56257f96a4a499f304423a6c15c8e
msgid "Sharded cluster has the following components: :term:`shards <shard>`, :term:`query routers <mongos>` and :term:`config servers <config server>`."
msgstr ""

#: ../source/core/sharding-introduction.txt:70
# 35100311cfdf4264a573ab9133b42d39
msgid "**Shards** store the data. To provide high availability and data consistency, in a production sharded cluster, each shard is a :term:`replica set` [#dev-only-shard-deployment]_. For more information on replica sets, see :doc:`Replica Sets </core/replication>`."
msgstr ""

#: ../source/core/sharding-introduction.txt:76
# 7a6da5e786ce45e38477d5a218842d01
msgid "**Query Routers**, or :program:`mongos` instances, interface with client applications and direct operations to the appropriate shard or shards. The query router processes and targets operations to shards and then returns results to the clients. A sharded cluster can contain more than one query router to divide the client request load. A client sends requests to one query router. Most sharded clusters have many query routers."
msgstr ""

#: ../source/core/sharding-introduction.txt:83
# 2b5ce0ac082940e5a232af3241786122
msgid "**Config servers** store the cluster's metadata. This data contains a mapping of the cluster's data set to the shards. The query router uses this metadata to target operations to specific shards. Production sharded clusters have *exactly* 3 config servers."
msgstr ""

#: ../source/core/sharding-introduction.txt:88
# 3d0e14ac74474398880dffe494813f39
msgid "For development and testing purposes only, each **shard** can be a single :program:`mongod` instead of a replica set. Do **not** deploy production clusters without 3 config servers."
msgstr ""

#: ../source/core/sharding-introduction.txt:96
# 61f8b2d573e541cc9558b81684f3c7c8
msgid "Data Partitioning"
msgstr ""

#: ../source/core/sharding-introduction.txt:98
# ec1638af046f432f94bb3e30a270cf55
msgid "MongoDB distributes data, or shards, at the collection level. Sharding partitions a collection's data by the **shard key**."
msgstr ""

#: ../source/core/sharding-introduction.txt:102
# f9e32cb271494389b3ac64e474e30b7b
msgid "Shard Keys"
msgstr ""

#: ../source/core/sharding-introduction.txt:104
# 9f7aec84e8064b01bbf78276607e4e05
msgid "To shard a collection, you need to select a **shard key**. A :term:`shard key` is either an indexed field or an indexed compound field that exists in every document in the collection. MongoDB divides the shard key values into **chunks** and distributes the :term:`chunks <chunk>` evenly across the shards. To divide the shard key values into chunks, MongoDB uses either **range based partitioning** or **hash based partitioning**. See the :doc:`Shard Key </core/sharding-shard-key>` documentation for more information."
msgstr ""

#: ../source/core/sharding-introduction.txt:114
# 655bb86956cc45ba8c32c9a7a8f0a801
msgid "Range Based Sharding"
msgstr ""

#: ../source/core/sharding-introduction.txt:116
# 17809fd4a5a84d5796bd93bae1773b47
msgid "For *range-based sharding*, MongoDB divides the data set into ranges determined by the shard key values to provide **range based partitioning**. Consider a numeric shard key: If you visualize a number line that goes from negative infinity to positive infinity, each value of the shard key falls at some point on that line. MongoDB partitions this line into smaller, non-overlapping ranges called **chunks** where a chunk is range of values from some minimum value to some maximum value."
msgstr ""

#: ../source/core/sharding-introduction.txt:125
# 5b24b72077c64396a4f320a6a27cd511
msgid "Given a range based partitioning system, documents with \"close\" shard key values are likely to be in the same chunk, and therefore on the same shard."
msgstr ""

#: ../source/core/sharding-introduction.txt:132
# 29c541ea335e49e69298b057fc80f024
msgid "Hash Based Sharding"
msgstr ""

#: ../source/core/sharding-introduction.txt:134
# f08d93d41f9a44bcb7878ca1fa944cd9
msgid "For *hash based partitioning*, MongoDB computes a hash of a field's value, and then uses these hashes to create chunks."
msgstr ""

#: ../source/core/sharding-introduction.txt:137
# 997fbec1ca2b4407aefbab87a347e9b8
msgid "With hash based partitioning, two documents with \"close\" shard key values are *unlikely* to be part of the same chunk. This ensures a more random distribution of a collection in the cluster."
msgstr ""

#: ../source/core/sharding-introduction.txt:144
# a3325db34ecf4526a36e9d99114f6272
msgid "Performance Distinctions between Range and Hash Based Partitioning"
msgstr ""

#: ../source/core/sharding-introduction.txt:146
# 914bdc071c8d4cd9bb03cf52662ccacf
msgid "Range based partitioning supports more efficient range queries. Given a range query on the shard key, the query router can easily determine which chunks overlap that range and route the query to only those shards that contain these chunks."
msgstr ""

#: ../source/core/sharding-introduction.txt:151
# 2a167b4a265c4072905cf0cc487faab7
msgid "However, range based partitioning can result in an uneven distribution of data, which may negate some of the benefits of sharding. For example, if the shard key is a linearly increasing field, such as time, then all requests for a given time range will map to the same chunk, and thus the same shard. In this situation, a small set of shards may receive the majority of requests and the system would not scale very well."
msgstr ""

#: ../source/core/sharding-introduction.txt:159
# e6bbc3f0b905478089131b22fe04ac13
msgid "Hash based partitioning, by contrast, ensures an even distribution of data at the expense of efficient range queries. Hashed key values results in random distribution of data across chunks and therefore shards. But random distribution makes it more likely that a range query on the shard key will not be able to target a few shards but would more likely query every shard in order to return a result."
msgstr ""

#: ../source/core/sharding-introduction.txt:167
# 5682d6be0f0541b7b0b92d2e93061fc8
msgid "Customized Data Distribution with Tag Aware Sharding"
msgstr ""

#: ../source/core/sharding-introduction.txt:169
# 2611af0579d54ea6af959dbf72b8af89
msgid "MongoDB allows administrators to direct the balancing policy using **tag aware sharding**. Administrators create and associate tags with ranges of the shard key, and then assign those tags to the shards. Then, the balancer migrates tagged data to the appropriate shards and ensures that the cluster always enforces the distribution of data that the tags describe."
msgstr ""

#: ../source/core/sharding-introduction.txt:176
# 3939fb12351a4a8799b81181ddc79875
msgid "Tags are the primary mechanism to control the behavior of the balancer and the distribution of chunks in a cluster.  Most commonly, tag aware sharding serves to improve the locality of data for sharded clusters that span multiple data centers."
msgstr ""

#: ../source/core/sharding-introduction.txt:181
# 8cd6eaf4fd034e11940cf244e4cfea5f
msgid "See :doc:`/core/tag-aware-sharding` for more information."
msgstr ""

#: ../source/core/sharding-introduction.txt:184
# 49b429e6cae645cb8fe45bfbc80f9004
msgid "Maintaining a Balanced Data Distribution"
msgstr ""

#: ../source/core/sharding-introduction.txt:186
# 8f2ce895bcd843a7b10872a0ece86080
msgid "The addition of new data or the addition of new servers can result in data distribution imbalances within the cluster, such as a particular shard contains significantly more chunks than another shard or a size of a chunk is significantly greater than other chunk sizes."
msgstr ""

#: ../source/core/sharding-introduction.txt:191
# ffb68263732b47c19c8c24e18e4b7d18
msgid "MongoDB ensures a balanced cluster using two background process: splitting and the balancer."
msgstr ""

#: ../source/core/sharding-introduction.txt:195
# 71c0773a24704a1c8f30f9c54cf02591
msgid "Splitting"
msgstr ""

#: ../source/core/sharding-introduction.txt:197
# 3a6d8df502da418e92c24bd72d67e52f
msgid "Splitting is a background process that keeps chunks from growing too large. When a chunk grows beyond a :ref:`specified chunk size <sharding-chunk-size>`, MongoDB splits the chunk in half. Inserts and updates triggers splits. Splits are an efficient meta-data change. To create splits, MongoDB does *not* migrate any data or affect the shards."
msgstr ""

#: ../source/core/sharding-introduction.txt:207
# c37b80348eb047af96126f4282309cf7
msgid "Balancing"
msgstr ""

#: ../source/core/sharding-introduction.txt:209
# f6389479d4a448959177720dddf69f54
msgid "The :ref:`balancer <sharding-balancing-internals>` is a background process that manages chunk migrations. The balancer can run from any the query routers in a cluster."
msgstr ""

#: ../source/core/sharding-introduction.txt:213
# b1ddbea6a80d450b94e743b7852df8b1
msgid "When the distribution of a sharded collection in a cluster is uneven, the balancer process migrates chunks from the shard that has the largest number of chunks to the shard with the least number of chunks until the collection balances. For example: if collection ``users`` has 100 chunks on *shard 1* and 50 chunks on *shard 2*, the balancer will migrate chunks from *shard 1* to *shard 2* until the collection achieves balance."
msgstr ""

#: ../source/core/sharding-introduction.txt:221
# c2ebc02f9a524096b91a6db51d366d71
msgid "The shards manage *chunk migrations* as a background operation between an *origin shard* and a *destination shard*.  During a chunk migration, the *destination shard* is sent all the current documents in the chunk from the *origin shard*. Next, the destination shard captures and applies all changes made to the data during the migration process. Finally, the metadata regarding the location of the chunk on *config server* is updated."
msgstr ""

#: ../source/core/sharding-introduction.txt:229
# b88144b325854492a1f2077a9572289f
msgid "If there's an error during the migration, the balancer aborts the process leaving the chunk unchanged on the origin shard. MongoDB removes the chunk's data from the origin shard **after** the migration completes successfully."
msgstr ""

#: ../source/core/sharding-introduction.txt:237
# 4094478c788f4c298f006b9f6e8cba2b
msgid "Adding and Removing Shards from the Cluster"
msgstr ""

#: ../source/core/sharding-introduction.txt:239
# 9c2b9e6bb4b04b31bc360652f402ba16
msgid "Adding a shard to a cluster creates an imbalance  since the new shard has no chunks. While MongoDB begins migrating data to the new shard immediately, it can take some time before the cluster balances."
msgstr ""

#: ../source/core/sharding-introduction.txt:243
# d7df23af4d3c472292bb243a3c7aaac0
msgid "When removing a shard, the balancer migrates all chunks from a shard to other shards. After migrating all data and updating the meta data, you can safely remove the shard."
msgstr ""

#: ../source/includes/extracts/additional-resources-sharding-introduction.rst:4
# eeee66977d36437e9926c80fe58e69d8
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-sharding-introduction.rst:6
# 0340510f7a90485b9ee63e64998eeacb
msgid "`Sharding Methods for MongoDB (Presentation) <http://www.mongodb.com/presentations/webinar-sharding-methods-mongodb>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-sharding-introduction.rst:7
# 7a7b27aaa282481ea7f1ee2c6aadd05d
msgid "`Everything You Need to Know About Sharding (Presentation) <http://www.mongodb.com/presentations/webinar-everything-you-need-know-about-sharding>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-sharding-introduction.rst:8
# c190dafbdbcb465ebea71be1f8b46a58
msgid "`MongoDB for Time Series Data: Sharding <http://www.mongodb.com/presentations/mongodb-time-series-data-part-3-sharding>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-sharding-introduction.rst:9
# ab17029c2aeb4a2ba781a5172a475c6f
msgid "`MongoDB Operations Best Practices White Paper <http://www.mongodb.com/lp/white-paper/ops-best-practices>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-sharding-introduction.rst:10
# 2a95411476bf4f19b718427035e86187
msgid "`Talk to a MongoDB Expert About Scaling <http://www.mongodb.com/lp/contact/planning-for-scale>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-sharding-introduction.rst:11
# 2626ccc6396e423f9ec2c43623e7a86b
msgid "`MongoDB Deployment Topology Consulting Package <https://www.mongodb.com/products/consulting#deployment_topology>`_"
msgstr ""

