title: "Open the :guilabel:`Add New Database User` dialog."
level: 4
ref: go-users-view
content: |
   a. In the :guilabel:`Security` section of the left navigation, click
      :guilabel:`Database Access`. The :guilabel:`Database Users` tab
      displays.

   #. Click :icon-fa5:`plus` :guilabel:`Add New Database User`.
---
title: "Select an authentication method."
level: 4
ref: select-auth-method
content: |
  
  A project can have users with different authentication methods.

  You cannot change a user's authentication method after creating that
  user. To use an alternative authentication method, you must create a
  new user.

  .. list-table::
     :widths: 20 80
     :header-rows: 1

     * - Method

       - Description

     * - :guilabel:`Password Authentication`

       - :ref:`SCRAM <authentication-scram>` is MongoDB's default
         authentication method. SCRAM requires a password for each
         user. Select this authentication method by clicking
         :guilabel:`PASSWORD`.

     * - :guilabel:`X.509 Certificates`

       - :manual:`X.509 Certificates </core/security-x.509/>` allow for
         passwordless authentication by using a trusted certificate.
         Select this authentication method by clicking
         :guilabel:`CERTIFICATE`. To download the certificate upon
         saving, you must provide a certificate expiration date and
         check :guilabel:`Download certificate when user is added`.

         X.509 certificates expire and are invalid after the
         certificate expiration date you set. A user will not be able 
         to log in with an expired X.509 certificate and must be issued 
         a new certificate.

         To help manage this, |service| automatically creates a
         project-level alert when you create a new user with X.509
         authentication enabled. This alert sends a notification 30 days
         before that user's latest certificate expires, repeating every
         24 hours. You can view and edit this alert from |service|'s
         :guilabel:`Alert Settings` page. For more information on
         configuring alerts, see
         :doc:`Configure Alert Settings </configure-alerts>`.

         .. important::

            If a user loses their certificate, they will need a new
            certificate to be generated for them before they can log in
            again.

         .. important::
            
            You cannot revoke X.509 certificates. To revoke an X.509
            certificate-authenticated user's access to your project,
            you must delete that user.

         .. include:: /includes/fact-atlas-free-tier-limits.rst

         If you prefer to manage your own X.509 certificates, you 
         can upload a PEM-encoded certificate authority through
         :ref:`Self-Managed X.509 Certificates <self-managed-x509>`.
---
title: "Enter user information."
level: 4
ref: enter-user-info
content: |
  .. list-table::
     :widths: 20 80
     :header-rows: 1

     * - Field

       - Description

     * - :guilabel:`User Name`

       - The user's login name.

         SCRAM-authenticated users are associated with the ``admin`` 
         database; i.e. their
         :ref:`authentication database <user-authentication-database>`
         is ``admin``.

         X.509-authenticated users are associated with the 
         ``$external`` database; i.e. their authentication database 
         is ``$external``.
         
         To access MongoDB, a user provides a username
         and the name of the authentication database, as well as a
         password or X.509 certificate. The authentication database
         does not determine the user's roles. You can assign a user
         different roles in different database namespaces.

         .. example::

            You can create a user to have the ``readWrite`` role on
            the ``test`` database but only the ``read`` role on the
            ``production`` database. For a SCRAM-authenticated user,
            the authentication database would still be ``admin``.

     * - :guilabel:`User Privileges`

       - You can assign roles in one of the following ways:

         - Select :atlasrole:`Atlas admin`, which provides the user
           with :atlasrole:`readWriteAnyDatabase` as well as a number
           of administrative privileges.

         - Select :atlasrole:`Read and write to any database`, which
           provides the user with privileges to read and write to any
           database.

         - Select :atlasrole:`Only read any database` which provides
           the user with privileges to read any database.

         - Select :guilabel:`Select Custom Role` to select a custom 
           role previously created in |service|. You can create custom 
           roles for database users in cases where the 
           :manual:`built-in database user roles </reference/built-in-roles/#database-user-roles>` 
           cannot describe the desired set of 
           privileges. For more information on custom roles, see 
           :ref:`mongodb-roles`.

         - Click :guilabel:`Add Default Privileges`. When you
           click this option, you can select
           individual roles and specify the database on which the
           roles apply. Optionally, for the ``read`` and ``readWrite``
           roles, you can also specify a collection. If you do not
           specify a collection for ``read`` and ``readWrite``, the
           role applies to all non-``system`` collections in the
           database.

           .. note::

              .. include:: /includes/fact-read-read-write-actions.rst

         For information on the built-in |service| privileges, see
         :ref:`atlas-user-privileges`.

         For more information on authorization, see :manual:`Role-Based
         Access Control </core/authorization>` and :manual:`Built-in
         Roles </core/security-built-in-roles>` in the MongoDB manual.

     * - :guilabel:`Save as temporary user`

       - Check this option to specify a time after which |service| will
         delete the user. You can select one of the following time
         periods for the user to exist:

         - 6 hours

         - 1 day

         - 1 week

         In the :guilabel:`Database Users` tab, temporary users display
         the time remaining until |service| will delete the user. Once
         |service| deletes the user, any client or application
         attempting to authenticate with the user loses access to
         the database.

         .. note::

            X.509 certificate-authenticated users cannot be made temporary users.
---
title: "Click :guilabel:`Add User`."
level: 4
ref: save-user
...
