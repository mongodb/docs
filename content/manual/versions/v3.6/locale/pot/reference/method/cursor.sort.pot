# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/cursor.sort.txt:3
msgid "cursor.sort()"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:18
msgid "Specifies the order in which the query returns matching documents. You must apply :method:`~cursor.sort()` to the cursor before retrieving any documents from the database."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:22
msgid "The :method:`~cursor.sort()` method has the following parameter:"
msgstr ""

#: ../source/includes/apiargs/method-cursor.sort-param.rst:7
msgid "Parameter"
msgstr ""

#: ../source/includes/apiargs/method-cursor.sort-param.rst:9
msgid "Type"
msgstr ""

#: ../source/includes/apiargs/method-cursor.sort-param.rst:11
msgid "Description"
msgstr ""

#: ../source/includes/apiargs/method-cursor.sort-param.rst:13
msgid "``sort``"
msgstr ""

#: ../source/includes/apiargs/method-cursor.sort-param.rst:15
msgid "document"
msgstr ""

#: ../source/includes/apiargs/method-cursor.sort-param.rst:17
#: ../source/includes/apiargs/method-cursor.sort-param.rst:26
msgid "A document that defines the sort order of the result set."
msgstr ""

#: ../source/includes/apiargs/method-cursor.sort-param.rst:0
msgid "param document sort"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:26
msgid "The ``sort`` parameter contains field and value pairs, in the following form:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:33
msgid "The sort document can specify :ref:`ascending or descending sort on existing fields <sort-asc-desc>` or :ref:`sort on computed metadata <sort-metadata>`."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:38
msgid "Behaviors"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:41
msgid "Result Ordering"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:43
msgid "Unless you specify the :method:`~cursor.sort()` method or use the :query:`$near` operator, MongoDB does **not** guarantee the order of query results."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:50
msgid "Ascending/Descending Sort"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:52
msgid "Specify in the sort parameter the field or fields to sort by and a value of ``1`` or ``-1`` to specify an ascending or descending sort respectively."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:56
msgid "The following sample document specifies a descending sort by the ``age`` field and then an ascending sort by the ``posts`` field:"
msgstr ""

#: ../source/includes/fact-sort-order.rst:1
msgid "When comparing values of different :ref:`BSON types <bson-types>`, MongoDB uses the following comparison order, from lowest to highest:"
msgstr ""

#: ../source/includes/fact-sort-order.rst:4
msgid "MinKey (internal type)"
msgstr ""

#: ../source/includes/fact-sort-order.rst:5
msgid "Null"
msgstr ""

#: ../source/includes/fact-sort-order.rst:6
msgid "Numbers (ints, longs, doubles, decimals)"
msgstr ""

#: ../source/includes/fact-sort-order.rst:7
msgid "Symbol, String"
msgstr ""

#: ../source/includes/fact-sort-order.rst:8
msgid "Object"
msgstr ""

#: ../source/includes/fact-sort-order.rst:9
msgid "Array"
msgstr ""

#: ../source/includes/fact-sort-order.rst:10
msgid "BinData"
msgstr ""

#: ../source/includes/fact-sort-order.rst:11
msgid "ObjectId"
msgstr ""

#: ../source/includes/fact-sort-order.rst:12
msgid "Boolean"
msgstr ""

#: ../source/includes/fact-sort-order.rst:13
msgid "Date"
msgstr ""

#: ../source/includes/fact-sort-order.rst:14
msgid "Timestamp"
msgstr ""

#: ../source/includes/fact-sort-order.rst:15
msgid "Regular Expression"
msgstr ""

#: ../source/includes/fact-sort-order.rst:16
msgid "MaxKey (internal type)"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:65
msgid "For details on the comparison/sort order for specific types, see :ref:`bson-types-comparison-order`."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:71
msgid "Metadata Sort"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:73
msgid "Specify in the sort parameter a new field name for the computed metadata and specify the :projection:`$meta` expression as its value."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:77
msgid "The following sample document specifies a descending sort by the ``\"textScore\"`` metadata:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:84
msgid "The specified metadata determines the sort order. For example, the ``\"textScore\"`` metadata sorts in descending order. See :projection:`$meta` for details."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:89
msgid "Restrictions"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:91
msgid "When unable to obtain the sort order from an index, MongoDB will sort the results in memory, which requires that the result set being sorted is less than 32 megabytes."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:95
msgid "When the sort operation consumes more than 32 megabytes, MongoDB returns an error. To avoid this error, either create an index supporting the sort operation (see :ref:`sort-index-use`) or use :method:`~cursor.sort()` in conjunction with :method:`~cursor.limit()` (see :ref:`sort-limit-results`)."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:104
msgid "Sort and Index Use"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:106
msgid "The sort can sometimes be satisfied by scanning an index in order. If the query plan uses an index to provide the requested sort order, MongoDB does not perform an in-memory sorting of the result set. For more information, see :doc:`/tutorial/sort-results-with-indexes`."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:114
msgid "Limit Results"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:116
msgid "You can use :method:`~cursor.sort()` in conjunction with :method:`~cursor.limit()` to return the first (in terms of the sort order) ``k`` documents, where ``k`` is the specified limit."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:120
msgid "If MongoDB cannot obtain the sort order via an index scan, then MongoDB uses a top-k sort algorithm. This algorithm buffers the first ``k`` results (or last, depending on the sort order) seen so far by the underlying index or collection access. If at any point the memory footprint of these ``k`` results exceeds 32 megabytes, the query will fail."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:130
msgid "Interaction with :term:`Projection`"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:132
msgid "When a set of results are both sorted and projected, the MongoDB query engine will always apply the sorting **first**."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:136
msgid "Examples"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:138
msgid "A collection ``orders`` contain the following documents:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:149
msgid "The following query, which returns all documents from the ``orders`` collection, does not specify a sort order:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:156
msgid "The query returns the documents in indeterminate order:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:167
msgid "The following query specifies a sort on the ``amount`` field in descending order."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:174
msgid "The query returns the following documents, in descending order of ``amount``:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:186
msgid "The following query specifies the sort order using the fields from an embedded document ``item``. The query sorts first by the ``category`` field in ascending order, and then within each ``category``, by the ``type`` field in ascending order."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:195
msgid "The query returns the following documents, ordered first by the ``category`` field, and within each category, by the ``type`` field:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:211
msgid "Return in Natural Order"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:213
msgid "The :operator:`$natural` parameter returns items according to their :term:`natural order` within the database. This ordering is an internal implementation feature, and you should not rely on any particular structure within it."
msgstr ""

#: ../source/includes/extracts/views-unsupported-natural-sort.rst:1
msgid "You cannot specify a :operator:`$natural` sort on a view."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:223
msgid "Index Use"
msgstr ""

#: ../source/includes/fact-natural-parameter.rst:1
msgid "Queries that include a sort by :operator:`$natural` order do **not** use indexes to fulfill the query predicate with the following exception: If the query predicate is an equality condition on the ``_id`` field ``{ _id: <value> }``, then the query with the sort by :operator:`$natural` order can use the ``_id`` index."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:228
msgid "MMAPv1"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:230
msgid "Typically, the natural order reflects insertion order with the following exception for the MMAPv1 storage engine. For the MMAPv1 storage engine, the natural order does not reflect insertion order if the documents relocate because of :ref:`document growth <data-model-document-growth>` or remove operations free up space which are then taken up by newly inserted documents."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:237
msgid "Consider to following example which uses the MMAPv1 storage engine."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:239
msgid "The following sequence of operations inserts documents into the ``trees`` collection:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:249
msgid "The following query returns the documents in the natural order:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:255
msgid "The documents return in the following order:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:264
msgid "Update a document such that the document outgrows its current allotted space:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:274
msgid "Rerun the query to returns the documents in natural order:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:280
msgid "For MongoDB instances using MMAPv1, the documents return in the following natural order, which no longer reflects the insertion order:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:290
msgid ":operator:`$natural`"
msgstr ""

