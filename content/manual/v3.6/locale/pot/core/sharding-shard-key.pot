# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/sharding-shard-key.txt:10
msgid "Shard Keys"
msgstr ""

#: ../source/core/sharding-shard-key.txt:20
msgid "The shard key determines the distribution of the collection's :term:`documents <document>` among the cluster's :term:`shards <shard>`. The shard key is either an indexed :term:`field` or indexed :term:`compound <compound index>` fields that exists in every document in the collection."
msgstr ""

#: ../source/core/sharding-shard-key.txt:25
msgid "MongoDB :term:`partitions <data partition>` data in the collection using ranges of shard key values. Each range defines a non-overlapping range of shard key values and is associated with a :term:`chunk`."
msgstr ""

#: ../source/core/sharding-shard-key.txt:29
msgid "MongoDB attempts to distribute chunks evenly among the shards in the cluster. The shard key has a direct relationship to the effectiveness of chunk distribution. See :ref:`sharding-shard-key-selection`."
msgstr ""

#: ../source/includes/limits-sharding-shardkey-document-immutable.rst:1
msgid "Once you shard a collection, the shard key and the shard key values are immutable; i.e."
msgstr ""

#: ../source/includes/limits-sharding-shardkey-document-immutable.rst:4
msgid "You cannot select a different shard key for that collection."
msgstr ""

#: ../source/includes/limits-sharding-shardkey-document-immutable.rst:6
msgid "You cannot update the values of the shard key fields."
msgstr ""

#: ../source/core/sharding-shard-key.txt:45
msgid "Shard Key Specification"
msgstr ""

#: ../source/core/sharding-shard-key.txt:47
msgid "To shard a collection, you must specify the target collection and the shard key to the :method:`sh.shardCollection()` method:"
msgstr ""

#: ../source/core/sharding-shard-key.txt:54
msgid "The ``namespace`` parameter consists of a string ``<database>.<collection>`` specifying the full :term:`namespace` of the target collection."
msgstr ""

#: ../source/core/sharding-shard-key.txt:58
msgid "The ``key`` parameter consists of a document containing a field and the index traversal direction for that field."
msgstr ""

#: ../source/core/sharding-shard-key.txt:61
msgid "For instructions specific to sharding a collection using the :ref:`hashed sharding <sharding-hashed>` strategy, see :ref:`deploy-hashed-sharded-cluster-shard-collection`"
msgstr ""

#: ../source/core/sharding-shard-key.txt:65
msgid "For instructions specific to sharding a collection using the :ref:`ranged sharding <sharding-ranged>` strategy, see :ref:`deploy-ranged-sharded-cluster-shard-collection`."
msgstr ""

#: ../source/core/sharding-shard-key.txt:73
msgid "Shard Key Indexes"
msgstr ""

#: ../source/core/sharding-shard-key.txt:75
msgid "All sharded collections **must** have an index that supports the :term:`shard key`; i.e. the index can be an index on the shard key or a :term:`compound index` where the shard key is a :ref:`prefix <compound-index-prefix>` of the index."
msgstr ""

#: ../source/core/sharding-shard-key.txt:80
msgid "If the collection is empty, :method:`sh.shardCollection()` creates the index on the shard key if such an index does not already exists."
msgstr ""

#: ../source/core/sharding-shard-key.txt:83
#: ../source/includes/extracts/shard-collection-unique-restriction-method.rst:5
msgid "If the collection is not empty, you must create the index first before using :method:`sh.shardCollection()`."
msgstr ""

#: ../source/core/sharding-shard-key.txt:86
msgid "If you drop the last valid index for the shard key, recover by recreating an index on just the shard key."
msgstr ""

#: ../source/core/sharding-shard-key.txt:92
msgid "Unique Indexes"
msgstr ""

#: ../source/core/sharding-shard-key.txt:94
msgid "You cannot specify a unique constraint on a :ref:`hashed index <index-type-hashed>`."
msgstr ""

#: ../source/core/sharding-shard-key.txt:97
msgid "For a ranged sharded collection, only the following indexes can be :doc:`unique </core/index-unique>`:"
msgstr ""

#: ../source/core/sharding-shard-key.txt:100
msgid "the index on the shard key"
msgstr ""

#: ../source/core/sharding-shard-key.txt:102
msgid "a :term:`compound index` where the shard key is a :ref:`prefix <compound-index-prefix>`"
msgstr ""

#: ../source/core/sharding-shard-key.txt:105
msgid "the default ``_id`` index; **however**, the ``_id`` index only enforces the uniqueness constraint per shard **if** the ``_id`` field is **not** the shard key or the prefix of the shard key."
msgstr ""

#: ../source/core/sharding-shard-key.txt:109
msgid "Uniqueness and the ``_id`` Index"
msgstr ""

#: ../source/core/sharding-shard-key.txt:112
msgid "If the ``_id`` field is not the shard key or the prefix of the shard key, ``_id`` index only enforces the uniqueness constraint per shard and **not** across shards."
msgstr ""

#: ../source/core/sharding-shard-key.txt:116
msgid "For example, consider a sharded collection (with shard key ``{x: 1}``) that spans two shards A and B. Because the ``_id`` key is not part of the shard key, the collection could have a document with ``_id`` value ``1`` in shard A and another document with ``_id`` value ``1`` in shard B."
msgstr ""

#: ../source/core/sharding-shard-key.txt:122
msgid "If the ``_id`` field is not the shard key nor the prefix of the shard key, MongoDB expects applications to enforce the uniqueness of the ``_id`` values across the shards."
msgstr ""

#: ../source/core/sharding-shard-key.txt:126
msgid "The unique index constraints mean that:"
msgstr ""

#: ../source/core/sharding-shard-key.txt:128
msgid "For a to-be-sharded collection, you cannot shard the collection if the collection has other unique indexes."
msgstr ""

#: ../source/core/sharding-shard-key.txt:131
msgid "For an already-sharded collection, you cannot create unique indexes on other fields."
msgstr ""

#: ../source/core/sharding-shard-key.txt:134
msgid "Through the use of the unique index on the shard key, MongoDB *can* enforce uniqueness on the shard key values. MongoDB enforces uniqueness on the *entire* key combination, and not individual components of the shard key. To enforce uniqueness on the shard key values, pass the ``unique`` parameter as ``true`` to the :method:`sh.shardCollection()` method:"
msgstr ""

#: ../source/includes/extracts/shard-collection-unique-restriction-method.rst:2
msgid "If the collection is empty, :method:`sh.shardCollection()` creates the unique index on the shard key if such an index does not already exists."
msgstr ""

#: ../source/includes/extracts/shard-collection-unique-restriction-method.rst:8
msgid "Although you can have a unique :term:`compound index` where the shard key is a :ref:`prefix <compound-index-prefix>`, if using ``unique`` parameter, the collection must have a unique index that is on the shard key."
msgstr ""

#: ../source/core/sharding-shard-key.txt:152
msgid "Choosing a Shard Key"
msgstr ""

#: ../source/core/sharding-shard-key.txt:154
msgid "The choice of shard key affects how the :term:`sharded cluster` :term:`balancer` creates and distributes :term:`chunks<chunk>` across the available :term:`shards <shard>`. This affects the overall efficiency and performance of operations within the sharded cluster."
msgstr ""

#: ../source/core/sharding-shard-key.txt:159
msgid "The shard key affects the performance and efficiency of the :ref:`sharding strategy <sharding-strategy>` used by the sharded cluster."
msgstr ""

#: ../source/core/sharding-shard-key.txt:162
msgid "The ideal shard key allows MongoDB to distribute documents evenly throughout the cluster."
msgstr ""

#: ../source/core/sharding-shard-key.txt:167
msgid "At minimum, consider the consequences of the :ref:`cardinality<shard-key-range>`, :ref:`frequency<shard-key-frequency>`, and rate of :ref:`change<shard-key-monotonic>` of a potential shard key."
msgstr ""

#: ../source/core/sharding-shard-key.txt:172
msgid "Restrictions"
msgstr ""

#: ../source/core/sharding-shard-key.txt:174
msgid "For restrictions on shard key, see :ref:`limits-shard-keys`."
msgstr ""

#: ../source/core/sharding-shard-key.txt:177
msgid "Collection Size"
msgstr ""

#: ../source/core/sharding-shard-key.txt:179
msgid "When sharding a collection that is not empty, the shard key can constrain the maximum supported collection size for the initial sharding operation only. See :limit:`Sharding Existing Collection Data Size`."
msgstr ""

#: ../source/core/sharding-shard-key.txt:186
msgid "A sharded collection can grow to any size after successful sharding."
msgstr ""

#: ../source/core/sharding-shard-key.txt:193
msgid "Shard Key Cardinality"
msgstr ""

#: ../source/core/sharding-shard-key.txt:195
msgid "The :term:`cardinality` of a shard key determines the maximum number of chunks the balancer can create. This can reduce or remove the effectiveness of horizontal scaling in the cluster."
msgstr ""

#: ../source/core/sharding-shard-key.txt:199
msgid "A unique shard key value can exist on no more than a single chunk at any given time. If a shard key has a cardinality of ``4``, then there can be no more than ``4`` chunks within the sharded cluster, each storing one unique shard key value. This constrains the number of effective shards in the cluster to ``4`` as well - adding additional shards would not provide any benefit."
msgstr ""

#: ../source/core/sharding-shard-key.txt:206
msgid "The following image illustrates a sharded cluster using the field ``X`` as the shard key. If ``X`` has low cardinality, the distribution of inserts may look similar to the following:"
msgstr ""

#: ../source/core/sharding-shard-key.txt:212
msgid "The cluster in this example would *not* scale horizontally, as incoming writes would only route to a subset of shards."
msgstr ""

#: ../source/core/sharding-shard-key.txt:215
msgid "A shard key with high cardinality does not guarantee even distribution of data across the sharded cluster, though it does better facilitate horizontal scaling. The :ref:`frequency <shard-key-frequency>` and :ref:`rate of change <shard-key-monotonic>` of the shard key also contributes to data distribution. Consider each factor when choosing a shard key."
msgstr ""

#: ../source/core/sharding-shard-key.txt:221
msgid "If your data model requires sharding on a key that has low cardinality, consider using a :term:`compound index` using a field that has higher relative cardinality."
msgstr ""

#: ../source/core/sharding-shard-key.txt:228
msgid "Shard Key Frequency"
msgstr ""

#: ../source/core/sharding-shard-key.txt:230
msgid "Consider a set representing the range of shard key values - the ``frequency`` of the shard key represents how often a given value occurs in the data. If the majority of documents contain only a subset of those values, then the chunks storing those documents become a bottleneck within the cluster. Furthermore, as those chunks grow, they may become :ref:`indivisible chunks <jumbo-chunks>` as they cannot be split any further. This reduces or removes the effectiveness of horizontal scaling within the cluster."
msgstr ""

#: ../source/core/sharding-shard-key.txt:238
msgid "The following image illustrates a sharded cluster using the field ``X`` as the shard key. If a subset of values for ``X`` occur with high frequency, the distribution of inserts may look similar to the following:"
msgstr ""

#: ../source/core/sharding-shard-key.txt:244
msgid "A shard key with low frequency does not guarantee even distribution of data across the sharded cluster. The :ref:`cardinality <shard-key-cardinality>` and :ref:`rate of change <shard-key-monotonic>` of the shard key also contributes to data distribution. Consider each factor when choosing a shard key."
msgstr ""

#: ../source/core/sharding-shard-key.txt:249
msgid "If your data model requires sharding on a key that has high frequency values, consider using a :term:`compound index` using a unique or low frequency value."
msgstr ""

#: ../source/core/sharding-shard-key.txt:256
msgid "Monotonically Changing Shard Keys"
msgstr ""

#: ../source/core/sharding-shard-key.txt:258
msgid "A shard key on a value that increases or decreases monotonically is more likely to distribute inserts to a single shard within the cluster."
msgstr ""

#: ../source/core/sharding-shard-key.txt:261
msgid "This occurs because every cluster has a chunk that captures a range with an upper bound of :bsontype:`maxKey<data_maxkey>`. ``maxKey`` always compares as higher than all other values. Similarly, there is a chunk that captures a range with a lower bound of :bsontype:`minKey<data_minkey>`. ``minKey`` always compares as lower than all other values."
msgstr ""

#: ../source/core/sharding-shard-key.txt:267
msgid "If the shard key value is always increasing, all new inserts are routed to the chunk with ``maxKey`` as the upper bound. If the shard key value is always decreasing, all new inserts are routed to the chunk with ``minKey`` as the lower bound. The shard containing that chunk becomes the bottleneck for write operations."
msgstr ""

#: ../source/core/sharding-shard-key.txt:273
msgid "The following image illustrates a sharded cluster using the field ``X`` as the shard key. If the values for ``X`` are monotonically increasing, the distribution of inserts may look similar to the following:"
msgstr ""

#: ../source/core/sharding-shard-key.txt:279
msgid "If the shard key value was monotonically decreasing, then all inserts would route to ``Chunk A`` instead."
msgstr ""

#: ../source/core/sharding-shard-key.txt:282
msgid "A shard key that does not change monotonically does not guarantee even distribution of data across the sharded cluster. The :ref:`cardinality<shard-key-cardinality>` and :ref:`frequency<shard-key-frequency>` of the shard key also contributes to data distribution. Consider each factor when choosing a shard key."
msgstr ""

#: ../source/core/sharding-shard-key.txt:288
msgid "If your data model requires sharding on a key that changes monotonically, consider using :doc:`/core/hashed-sharding`."
msgstr ""

