=================================
Add Shards to an Existing Cluster
=================================

.. default-domain:: mongodb

Synopsis
--------

This document describes how to add a :term:`shard` to an
existing :term:`sharded cluster`. As your
data set grows you must add additional shards to a cluster to provide
additional capacity. For additional sharding
procedures, see :doc:`/administration/sharding`.

Concerns
--------

Distributing :term:`chunks <chunk>` among your cluster requires some
capacity to support the migration process. When adding a shard to your
cluster, you should always ensure that your cluster has enough
capacity to support the migration without affecting legitimate
production traffic.

In production environments, all shards should be :term:`replica sets
<replica set>`. Furthermore, *all* interaction with your sharded
cluster should pass through a :program:`mongos` instance. This
tutorial assumes that you already have a :program:`mongo` shell
connection to a :program:`mongos` instance.

Process
-------

Tell the cluster where to find the individual
shards. You can do this using the :dbcommand:`addShard` command:

.. code-block:: javascript

   db.runCommand( { addShard: mongodb0.example.net, name: "mongodb0" } )

Or you can use the :method:`sh.addShard()` helper in the
:program:`mongo` shell:

.. code-block:: javascript

   sh.addShard( "[hostname]:[port]" )

Replace ``[hostname]`` and ``[port]`` with the hostname and TCP
port number of where the shard is accessible.

.. warning::

   Do not use ``localhost`` for the hostname unless your
   :term:`configuration server <config database>`
   is also running on ``localhost``.

For example:

.. code-block:: javascript

   sh.addShard( "mongodb0.example.net:27027" )

If ``mongodb0.example.net:27027`` is a member of a replica
set, call the :method:`sh.addShard()` method with an argument that
resembles the following:

.. code-block:: javascript

   sh.addShard( "<setName>/mongodb0.example.net:27027" )

Replace, ``<setName>`` with the name of the replica set, and
MongoDB will discover all other members of the replica set.

.. note:: In production deployments, all shards should be replica sets.

   .. versionchanged:: 2.0.3

   Before version 2.0.3, you must specify the shard in the following
   form:

   .. code-block:: sh

      replicaSetName/<seed1>,<seed2>,<seed3>

   For example, if the name of the replica set is ``repl0``, then
   your :method:`sh.addShard` command would be:

   .. code-block:: javascript

      sh.addShard( "repl0/mongodb0.example.net:27027,mongodb1.example.net:27017,mongodb2.example.net:27017" )

Repeat this step for each shard in your cluster.

.. optional::

   You may specify a "name" as an argument to the
   :dbcommand:`addShard`, follows:

   .. code-block:: javascript

      db.runCommand( { addShard: mongodb0.example.net, name: "mongodb0" } )

   You cannot specify a name for a shard using the
   :method:`sh.addShard()` helper in the :program:`mongo` shell. If
   you use the helper or do not specify a shard name, then MongoDB
   will assign a name upon creation.

.. note::

   It may take some time for :term:`chunks <chunk>` to migrate to the new
   shard because the system must copy data from one :program:`mongod`
   instance to another while maintaining data consistency.

   For an overview of the balancing operation,
   see the :ref:`Balancing and Distribution <sharding-balancing>`
   section.

   For additional information on balancing, see the
   :ref:`Balancing Internals <sharding-balancing-internals>` section.
