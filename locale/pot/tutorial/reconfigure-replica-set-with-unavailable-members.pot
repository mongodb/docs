# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:3
# 2ca5e12df1b84273971d63f3fd85e359
msgid "Reconfigure a Replica Set with Unavailable Members"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:7
# 3e0da427282c4b3baa3d13aaa9e4269d
msgid "To reconfigure a :term:`replica set` when a **majority** of members are available, use the :method:`rs.reconfig()` operation on the current :term:`primary`, following the example in the :ref:`Replica Set Reconfiguration Procedure <replica-set-reconfiguration-usage>`."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:14
# c0c2b1673f9e438bb33555395f03998c
msgid "This document provides the following options for re-configuring a replica set when *only* a **minority** of members are accessible:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:17
# 2d98935451e84a8b9a8df511709f3f1b
msgid ":ref:`replica-set-force-reconfiguration`"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:18
# 2363f55db38c4149a4602719695281f5
msgid ":ref:`replica-set-reconfigure-by-replacing`"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:20
# b070eb65c81042e29ccc1fcf44ff3f59
msgid "You may need to use one of these procedures, for example, in a geographically distributed replica set, where *no* local group of members can reach a majority. See :ref:`replica-set-elections` for more information on this situation."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:29
# 3db1e7082bab491b83c7a41236e2f5bd
msgid "Reconfigure by Forcing the Reconfiguration"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:33
# 8f3420237cce46f2b57efb2d66c58a7b
msgid "This procedure lets you recover while a majority of :term:`replica set` members are down or unreachable. You connect to any surviving member and use the ``force`` option to the :method:`rs.reconfig()`  method."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:37
# f383a26c711d4147bb459e1d03a1343e
msgid "The ``force`` option forces a new configuration onto the member. Use this procedure only to recover from catastrophic interruptions. Do not use ``force`` every time you reconfigure. Also, do not use the ``force`` option in any automatic scripts and do not use ``force`` when there is still a :term:`primary`."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:42
# 4310f96396aa477d9ac9266e289ebe42
msgid "To force reconfiguration:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:44
# f2a1d6104e80400facfa5577bfc5de37
msgid "Back up a surviving member."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:46
# 2a89405ec02d4e138ba6e2c7a839d966
msgid "Connect to a surviving member and save the current configuration. Consider the following example commands for saving the configuration:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:55
# b353d9636482477694c963b41de4b70f
msgid "On the same member, remove the down and unreachable members of the replica set from the :data:`~replSetGetConfig.members` array by setting the array equal to the surviving members alone. Consider the following example, which uses the ``cfg`` variable created in the previous step:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:65
# 4c99f1414e9548a687510d1dacd21234
msgid "On the same member, reconfigure the set by using the :method:`rs.reconfig()` command with the ``force`` option set to ``true``:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:73
# d287976cc3cc49ce9929e6b6a2a91690
msgid "This operation forces the secondary to use the new configuration. The configuration is then propagated to all the surviving members listed in the ``members`` array. The replica set then elects a new primary."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:79
# e98f2c6e24034702957e76578dcf9290
msgid "When you use ``force : true``, the version number in the replica set configuration increases significantly, by tens or hundreds of thousands. This is normal and designed to prevent set version collisions if you accidentally force re-configurations on both sides of a network partition and then the network partitioning ends."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:86
# a44a0a5b3ddc45b8ba13f92f51910a98
msgid "If the failure or partition was only temporary, shut down or decommission the removed members as soon as possible."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:92
# d5fec92fcac54ba7909c5bdfc2039d49
msgid "Reconfigure by Replacing the Replica Set"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:94
# 230d2ab8f9f84cef9e5361893eb2016a
msgid "Use the following procedure **only** for versions of MongoDB prior to version 2.0. If you're running MongoDB 2.0 or later, use the above procedure, :ref:`replica-set-force-reconfiguration`."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:98
# 742cf29cdac047c38f50be7022c7e2e5
msgid "These procedures are for situations where a *majority* of the :term:`replica set` members are down or unreachable. If a majority is *running*, then skip these procedures and instead use the :method:`rs.reconfig()` command according to the examples in :ref:`replica-set-reconfiguration-usage`."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:104
# 21cb36375b4b4239aa4790885be5c7b6
msgid "If you run a pre-2.0 version and a majority of your replica set is down, you have the two options described here. Both involve replacing the replica set."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:109
# 2724ef7e75dc4f72b38ab1c4ff8046e5
msgid "Reconfigure by Turning Off Replication"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:111
# fb169d6c376140089c2c2ef8d8e67a62
msgid "This option replaces the :term:`replica set` with a :term:`standalone` server."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:113
#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:151
# 3787dc29a0b848a593b5473c17084047
# 21a9dfa7c25940549f6b5ef2a97b1d13
msgid "Stop the surviving :program:`mongod` instances. To ensure a clean shutdown, use an existing :term:`control script` or use the :method:`db.shutdownServer()` method."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:116
#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:155
# a3a87ccb87a64747a6e0df26afeb90d1
# a8b2c815f62f4852a7bd5cf7490fbfce
msgid "For example, to use the :method:`db.shutdownServer()` method, connect to the server using the :program:`mongo` shell and issue the following sequence of commands:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:125
# 6b63bbad098d461a8f3cf93e797630d8
msgid "Create a backup of the data directory (i.e. :setting:`~storage.dbPath`) of the surviving members of the set."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:0
# e4491c14e3bf4adda58455a41cbd588d
msgid "Optional"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:131
# 6eb7c59ac421437b835423293c5338b4
msgid "Restart one of the :program:`mongod` instances *without* the :option:`--replSet <mongod --replSet>` parameter."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:134
# bc9173121aa94249a9d55242c9bfedc3
msgid "The data is now accessible and provided by a single server that is not a replica set member. Clients can use this server for both reads and writes."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:138
# ebc69720136b45419f1ca4739956c6db
msgid "When possible, re-deploy a replica set to provide redundancy and to protect your deployment from operational interruption."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:144
# 94006f80eda5442fb8cada388be1556b
msgid "Reconfigure by \"Breaking the Mirror\""
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:146
# e277a4f6ccb94626864c2d20c1143e64
msgid "This option selects a surviving :term:`replica set` member to be the new :term:`primary` and to \"seed\" a new replica set. In the following procedure, the new primary is ``db0.example.net``. MongoDB copies the data from ``db0.example.net`` to all the other members."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:164
# a130d3299be2495a91dcbc01eadd3bab
msgid "Move the data directories (i.e. :setting:`~storage.dbPath`) for all the members except ``db0.example.net``, so that all the members except ``db0.example.net`` have empty data directories. For example:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:173
# 23316177ff7a4530847fef122604414d
msgid "Move the data files for ``local`` database (i.e. ``local.*``) so that ``db0.example.net`` has no local database. For example"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:181
# 5f08cd4b8e984c4f948e361440726304
msgid "Start each member of the replica set normally."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:183
# 61d638985fce4d7c98aafffb6df434c7
msgid "Connect to ``db0.example.net`` in a :program:`mongo` shell and run :method:`rs.initiate()` to initiate the replica set."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:186
# c8a6b5145d3949e8af28008e143d83a4
msgid "Add the other set members using :method:`rs.add()`. For example, to add a member running on ``db1.example.net`` at port ``27017``, issue the following command:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:194
# b657ae7ff4114e74b6ffff56e95f0690
msgid "MongoDB performs an initial sync on the added members by copying all data from ``db0.example.net`` to the added members."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:197
# cee43415c4bd41a09a2aab99eac583eb
msgid ":doc:`/tutorial/resync-replica-set-member`"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:25
# 121bd484e3614266a24f8016d44630b6
msgid "replica set"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:25
# 121bd484e3614266a24f8016d44630b6
msgid "reconfiguration"
msgstr ""

