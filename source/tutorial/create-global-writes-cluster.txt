.. _create-new-global-write-cluster:

=======================
Create a Global Cluster
=======================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

This tutorial covers creating and configuring a new
|service| |global-write-cluster| for using |global-write|.

Once deployed, you cannot convert a |global-write-cluster| to a standard
sharded cluster. Thoroughly familiarize yourself with the 
:doc:`/global-clusters` documentation before creating a 
|global-write-cluster|. 

.. include:: /includes/extracts/fact-vpc-per-project-m30.rst 

.. _create-global-write-cluster-open-dialog:

A. Open the :guilabel:`Create New Cluster` Dialog
-------------------------------------------------

.. container:: admonition

   .. note::

      Before creating a cluster, check that you have the correct
      organization and project selected. Click the :guilabel:`Context`
      drop down in the top left corner to select a specific organization
      or project. For more information on creating and managing
      organizations and projects, see 
      :doc:`/tutorial/manage-organizations` and 
      :doc:`/tutorial/manage-projects`.

      .. include:: /includes/fact-cluster-project-limit.rst

   Go to the :guilabel:`Clusters` view and click the :guilabel:`Add New
   Cluster` or :guilabel:`Build a New Cluster` button to display the
   :guilabel:`Create New Cluster` dialog. As you build your cluster,
   |service| displays the associated costs at the bottom of the screen.
   You can hover over the displayed cost for additional estimates.

.. _create-global-write-cluster-enable:

B. Set up your :guilabel:`Global Cluster Configuration`.
--------------------------------------------------------

.. container:: admonition

   Click :guilabel:`Global Cluster Configuration` to expand the
   section. Toggle :guilabel:`Enable Global Writes (M30 and Up)` to
   :guilabel:`On` to display the |global-write-cluster| configuration.

   Select your preferred cloud provider. Each cloud provider has 
   a selection of global regions to which |service| can deploy a zone. 
   The choice of cloud provider may support or constrict your 
   ability to deploy a zone to specific geographic locations. The 
   configuration options available and the cost for running the cluster 
   may also vary depending on cloud provider selection. 

   Once you select your cloud service provider, you must configure
   your |global-write-cluster| zones.

.. _create-global-write-cluster-zones:

C. Configure your |global-write-cluster| Zones.
-----------------------------------------------

.. container:: admonition

   |service| provides three options for configuring your
   |global-write-cluster| zones:

   - :ref:`create-global-write-cluster-zone-templates`
   - :ref:`create-global-write-cluster-single-region-zone`
   - :ref:`create-global-write-cluster-multi-region-zone`

.. _create-global-write-cluster-zone-templates:

Configure |global-write| Zones Using a Template
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. container:: admonition

   |service| provides two templates for configuring |global-write| 
   zones for the cluster, each with a description of the purpose
   of its underlying configuration. Click on a template to view the 
   Zone Map for that template. The Zone Map provides a visual 
   description of the cluster zone configuration, including estimates 
   of geographic latency and coverage. 

   Click :guilabel:`Zone configuration summary` below the zone map 
   to view a summary of each zone in the |global-write-cluster|. 
   |service| provides the the following validations for each zone:

   .. list-table::
      :header-rows: 1
      :widths: 40 60

      * - Validation
        - Guidance

      * - :guilabel:`Low latency reads and writes in <geography>`
        - Indicates the geographic locale for which the zone supports 
          low latency reads and writes. The exact geographic locale 
          specified depends on the preferred :guilabel:`Region` for that
          zone. You can modify the zone's preferred region in the 
          :guilabel:`Zone Configuration` section. 

      * - :guilabel:`Local reads in all other zones`
        - Indicates whether data in this zone is replicated to every 
          other zone for local secondary reads by clients in those 
          zones.

          Click the :guilabel:`Configure Local Reads in All Zones` 
          button in the :guilabel:`Zone configuration summary` to 
          automatically configure every zone in the cluster for local 
          reads. 

      * - :guilabel:`(Not) Available during partial region outage`
        - Indicates whether the zone supports high availability, such 
          that a majority of electable nodes remain healthy
          and reachable in the event of a partial region outage. 
          :guilabel:`Regions` marked as :guilabel:`Recommended` in the 
          |service| UI support high availability during partial regional
          outages.

          For complete documentation on how |service| ensures high 
          availability in a single region, see
 
          - :ref:`amazon-aws-availability-zones`. 
          - :ref:`google-gcp-availability-zones`.
          - :ref:`microsoft-azure-availability-zones`.

      * - :guilabel:`(Not) Available during full region outage`
        - Indicates whether the zone supports high availability, such
          that a majority of electable nodes remain healthy and
          rechable in the event of a complete regional outage.

   By default each template deploys a series of single-region zones and
   builds a map of country and subdivision locations geographically 
   near each zone. MongoDB uses this location-zone map to route
   read and write operations which contain location data to the
   shard or shards in the corresponding zone. For complete documentation
   on |global-write-cluster| read and write operation routing, see
   :ref:`global-writes-write-operations` and 
   :ref:`global-writes-read-operations`.

   Click the :guilabel:`Configure Location Mappings` in the Zone Map to
   view the list of location-zone mappings. To customize the
   location-zone mapping, click the :guilabel:`Zone` dropdown for a
   given :guilabel:`Location Name` and select a new zone. Click the
   :guilabel:`Reset` button to reset a custom mapping for any given
   location. Click the :guilabel:`Reset All Zone mappings` button to
   reset all custom mappings for the cluster.

   You can make :ref:`additional configuration changes to each zone
   <create-global-write-cluster-single-region-zone>` after selecting
   a zone template.

   You can also create :ref:`Multi-region zones
   <create-global-write-cluster-multi-region-zone>`. Clicking
   :guilabel:`Configure Local Reads in All Zones` converts all zones
   to multi-region.

   Click :guilabel:`View Zone Templates` in the Zone Map to return to
   the template selection.

.. _create-global-write-cluster-single-region-zone:

Configure a |global-write| Single Region Zone
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. container:: admonition

   The :guilabel:`Zone Configuration` section allows you to configure
   each zone in your cluster. |service| displays a drop-down box 
   directly above the :guilabel:`Zone Configuration` that indicates the 
   currently selected zone. Click the :guilabel:`+ Add a Zone` button to 
   add additional zones to the |global-write-cluster|, up to a maximum 
   of nine (9) zones.

   The Zone Map updates as you modify each zone. If the Zone Map
   currently displays the template selection menu, click
   :guilabel:`Configure Zones Myself` to view the Zone map.

   Click the :guilabel:`Select the preferred region for your zone`
   drop-down box and select a region as the :guilabel:`Preferred Region`
   for each shard assigned to the zone. |service| builds a map of
   countries and subdivisions geographically near the selected region.
   MongoDB uses this location-zone map to route read and write 
   operations which contain location data to the shard or shards in the 
   corresponding zone. For complete documentation on 
   |global-write-cluster| read and write operation routing, see
   :ref:`global-writes-write-operations` and 
   :ref:`global-writes-read-operations`.

   Click the :guilabel:`Configure Location Mappings` 
   in the Zone Map to view the list of location-zone mappings. To 
   customize the location-zone mapping, click the :guilabel:`Zone` 
   dropdown for a given :guilabel:`Location Name` and select a new zone.
   Click the :guilabel:`Reset` button to reset a custom mapping for any 
   given location. Click the :guilabel:`Reset All Zone mappings` button 
   to reset all custom mappings for the cluster.

   For each shard in the zone, |service| distributes the shard nodes 
   with respect to the :guilabel:`Zone Configuration`. You can add 
   additional shards to the zone by clicking 
   :guilabel:`Additional Options` in the :guilabel:`Zone Configuration`
   section and selecting the total number of shards in the zone
   from the drop-down box. By default |service| deploys one shard per 
   zone. |service| recommends creating additional zones to support
   heavy write load in a geographic region instead of adding multiple 
   shards to a single zone. |service| supports no more than 12 shards
   per |global-write-cluster|.

   .. important::

      Selecting a 
      :ref:`zone template <create-global-write-cluster-zone-templates>` 
      resets any configuration changes made in the 
      :guilabel:`Zone Configuration` section to the default for the 
      selected template.

.. _create-global-write-cluster-multi-region-zone:

Configure a |global-write| Multi Region Zone
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
.. container:: admonition

   The :guilabel:`Zone Configuration` section allows you to configure
   each zone in your cluster. |service| displays a drop-down box 
   directly above the :guilabel:`Zone Configuration` that indicates the 
   currently selected zone. Click the :guilabel:`+ Add a Zone` button to 
   add additional zones to the |global-write-cluster|, up to a maximum 
   of nine (9) zones.

   The Zone Map updates as you modify each zone. If the Zone Map
   currently displays the template selection menu, click
   :guilabel:`Configure Zones Myself` to view the Zone map.

   Click the :guilabel:`Add secondary and read-only regions`
   button to display the multi-region configuration controls. 
   Zones for which you toggled the 
   :guilabel:`Configure Local Reads in All Zones` in the
   :guilabel:`Zone configuration summary` display the multi-region
   zone controls by default.

   :guilabel:`Deploy across multiple regions`
      Configure the :guilabel:`Preferred` and :guilabel:`Electable` 
      nodes in the zone. For more information on the 
      :guilabel:`Node Types`, see :ref:`global-writes-zones`.

      Each row represents one :guilabel:`Region` where |service| deploys
      the configured :guilabel:`Number of Nodes` of the listed 
      :guilabel:`Node Type`. |service| builds a map of countries and 
      subdivisions geographically near the selected region for the 
      :guilabel:`Preferred` :guilabel:`Node Type`. MongoDB uses this 
      location-zone map to route read and write operations which contain
      location data to the shard or shards in the corresponding zone. 
      For complete documentation on |global-write-cluster| read
      and write operation routing, see
      :ref:`global-writes-write-operations` and 
      :ref:`global-writes-read-operations`.

      Click the :guilabel:`Configure Location Mappings` in the Zone Map
      to view the list of location-zone mappings. To customize the
      location-zone mapping, click the :guilabel:`Zone` dropdown for a
      given :guilabel:`Location Name` and select a new zone. Click the
      :guilabel:`Reset` button to reset a custom mapping for any given
      location. Click the :guilabel:`Reset All Zone mappings` button to
      reset all custom mappings for the cluster.

      Click :guilabel:`Add a node` to add additional 
      :guilabel:`Electable` rows. The total number of 
      :guilabel:`Electable` and :guilabel:`Preferred` nodes across all 
      regions must be 3, 5, or 7. Consider distributing your nodes such 
      that the loss of an entire region leaves a majority of healthy 
      electable nodes available.

   :guilabel:`Deploy read-only-replicas`
      Configure the :guilabel:`Read-only` nodes in the zone. Each row 
      represents one :guilabel:`Region` where |service| deploys the 
      configured :guilabel:`Number of Nodes` of the 
      :guilabel:`Read-only` :guilabel:`Node Type`. 

      Click :guilabel:`Add a node` to add additional 
      :guilabel:`Read-only` rows. You can have any 
      number of :guilabel:`Read-only` nodes in the zone. Consider
      adding :guilabel:`Read-only` nodes in each region where you 
      want to facilitate local secondary read operations.

   For each shard in the zone, |service| distributes the shard nodes 
   with respect to the :guilabel:`Zone Configuration`. You can add 
   additional shards to the zone by clicking 
   :guilabel:`Additional Options` in the :guilabel:`Zone Configuration`
   section and selecting the total number of shards in the zone
   from the drop-down box. By default |service| deploys one shard per 
   zone. |service| recommends creating additional zones to support
   heavy write load in a geographic region instead of adding multiple 
   shards to a single zone.  |service| supports no more than 12 shards
   per |global-write-cluster|.

   .. important::

      Selecting a 
      :ref:`zone template <create-global-write-cluster-zone-templates>` 
      resets any configuration changes made in the 
      :guilabel:`Zone Configuration` section to the default for the 
      selected template.

.. _create-global-write-cluster-instance:

C. Select the :guilabel:`Cluster Tier`
--------------------------------------

.. container:: admonition

   You must select an ``M30`` or greater cluster instance for
   |global-write-clusters|. All shard nodes deploy with the selected
   instance size. 

   From the :guilabel:`Cluster Tier` section, you can also 
   :ref:`create-cluster-storage`.

.. _create-global-write-cluster-storage:

:guilabel:`Customize Your Storage`
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. container:: admonition
   
   .. include:: /includes/extracts/cluster-option-customizeStorage.rst

.. _create-global-write-cluster-additional-settings:

D. Select any :guilabel:`Additional Settings`
---------------------------------------------

.. container:: admonition

   From the :guilabel:`Additional Settings` section, you can

   - :ref:`create-cluster-version`,
   - :ref:`create-cluster-backups`,
   - :ref:`create-cluster-enable-bi`.

.. _create-global-write-cluster-version:

Select the MongoDB Version of the Cluster
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. container:: admonition

   Select the MongoDB version for |service| to deploy the cluster
   with from the :guilabel:`Select a version` dropdown. 
   |service| always deploys the cluster with the latest stable
   release of the specified version.

   You can upgrade an existing |service| cluster to a newer major
   MongoDB version, if available, when you 
   :ref:`scale a cluster <scale-cluster-version>`. However, you 
   cannot downgrade a cluster's MongoDB version.

.. _create-global-write-cluster-backups:

Enable Backup for the Cluster
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. container:: admonition

   To enable backups for the |service| cluster, toggle 
   :guilabel:`Turn on Backup (M10 and up)` to ``Yes``.
   If enabled, |service| takes snapshots of your databases at 
   regular intervals and retains them according to your project's 
   :ref:`retention policy <retention-policy>`. |service|
   |global-write-clusters| support :ref:`backup-continuous` **only**.

   The backup option chosen for the first cluster in a project
   dictates the backup option for all other subsequent clusters in the
   project. If the project has other clusters deployed using 
   :ref:`backup-cloud-provider`, you cannot enable backups for your
   |global-write-cluster|. Consider deploying your 
   |global-write-cluster| to a project that permits
   :ref:`backup-continuous`.

.. _create-global-write-cluster-enable-bi:

Enable |bic|
~~~~~~~~~~~~

.. container:: admonition

   .. include:: /includes/extracts/cluster-option-bi.rst

.. _create-global-write-cluster-name:

E. Enter the :guilabel:`Cluster Name`
-------------------------------------

.. container:: admonition

   This is the cluster name as it appears in |service|. You cannot 
   change the cluster name once |service| deploys the cluster.

.. _create-global-write-cluster-payment:

F. Enter your Payment Information and Deploy your Cluster
---------------------------------------------------------

.. container:: admonition

   Click :guilabel:`Confirm & Deploy` to enter payment information. For
   |service| ``M0`` Free Tier cluster, |service| does not require payment
   information to deploy the cluster.

   See :ref:`billing-overview` for more information on |service|
   billing and payments.

.. _create-global-write-cluster-security:

G. (Optional) Create a MongoDB Administrative User
--------------------------------------------------

.. container:: admonition

   .. include:: /includes/extracts/cluster-option-clusterSecurity.rst

   .. note::

      To shard a collection via the :binary:`~bin.mongo` shell,
      you must authenticate as a user with the 
      :authrole:`Atlas admin` role, such as the administrative user
      created for this step.

.. _create-global-write-cluster-connect:

H. Connect to your cluster
--------------------------

.. container:: admonition

   Once |service| deploys your cluster, click :guilabel:`Connect` on the
   cluster to open the :guilabel:`Connect` dialog. Follow the instructions to
   connect to your cluster. See :doc:`/connect-to-cluster` for more information.

.. seealso:: :doc:`/tutorial/view-all-clusters`

