.. _stream-aggregation:
.. _atlas-sp-aggregation:

=====================================
Supported Aggregation Pipeline Stages
=====================================

.. default-domain:: mongodb

.. meta::
   :keywords: atlas stream processing, $source aggregation pipeline stage, $tumblingWindow aggregation pipeline stage, $hoppingWindow aggregation pipeline stage, $merge aggregation pipeline stage, $emit aggregation pipeline stage, $validate aggregation pipeline stage, 
   :description: Learn how to use the extensions to the aggregation pipeline syntax provided by Atlas Stream Processing.

.. facet::
   :name: genre
   :values: reference

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

{+atlas-sp+} extends the :manual:`aggregation pipeline 
</aggregation>` with stages for processing continuous data streams.
These stages combine with existing aggregation stages built in 
to the default :binary:`mongod <bin.mongod>` process, enabling you to 
perform many of the same operations on continuous data as you can 
perform on data-at-rest. An {+atlas-sp+} pipeline definition cannot 
exceed 16 MB.

The following table lists the aggregation pipeline stages unique to
{+atlas-sp+} and those which exist in modified form in {+atlas-sp+}.
   
.. note::

   For details on a specific operator, including syntax and examples, 
   click on the link to the operator's reference page.

.. list-table::
   :header-rows: 1
   :widths: 40 60
   
   * - Aggregation Pipeline Stage
     - Purpose 

   * - :ref:`$source <atlas-sp-agg-source>`
     - Specifies a streaming data source to consume messages from.

   * - :ref:`$validate <streams-agg-pipeline-validate>`
     - Validates the documents of a stream against a user-defined 
       schema.

   * - :ref:`$https <atlas-sp-agg-https>`
     - Supports ``curl``-like calls to arbitrary REST API endpoints
       within your stream processor.

   * - :ref:`$lookup <streams-agg-pipeline-lookup>`
     - Performs a left outer join to a specified collection to filter
       in documents from the "joined" collection for processing.
     
       This version of the existing :pipeline:`$lookup` stage requires
       that you specify a {+service+} collection in the 
       :ref:`Connection Registry <atlas-sp-manage-connections>` as the
       value for the ``from`` field.

   * - :ref:`$hoppingWindow <streams-agg-pipeline-hopping>`
     - Assigns documents from a stream to 
       :ref:`windows <atlas-sp-windows>` with user-defined
       durations and intervals between start times.

   * - :ref:`$tumblingWindow <streams-agg-pipeline-tumbling>`
     - Assigns documents from a stream to non-overlapping, continuous 
       :ref:`windows <atlas-sp-windows>` with user-defined
       durations.

   * - :ref:`$emit <streams-agg-pipeline-emit>`
     - Specifies a stream or time series collection in the connection
       registry to emit messages to.

   * - :ref:`$merge <streams-agg-pipeline-merge>`
     - A version of the existing :ref:`adf-merge-stage` stage where 
       the value of the ``connectionName`` field must always be the 
       name of a remote collection in the
       :ref:`Connection Registry <atlas-sp-manage-connections>`.
   
   * - :ref:`$sessionWindow <streams-agg-pipeline-session>`
     - Runs a pipeline on each "session" of activity in an input stream. 
       Each document is assigned to a session window based on its partition and 
       timestamp.

.. The following can be uncommented once this stage is supported.
   * - :pipeline:`$validatedSource`
     - Similar to :pipeline:`$validate`, but is bound to a specific
       source, allowing you to define one stage in place of both
       :pipeline:`$source` and :pipeline:`$validate`.

.. toctree::
   :titlesonly:

   $source </atlas-stream-processing/sp-agg-source>
   $validate </atlas-stream-processing/sp-agg-validate>
   $https </atlas-stream-processing/sp-agg-https>
   $lookup </atlas-stream-processing/sp-agg-lookup>
   $hoppingWindow </atlas-stream-processing/sp-agg-hopping>
   $tumblingWindow </atlas-stream-processing/sp-agg-tumbling>
   $emit </atlas-stream-processing/sp-agg-emit>
   $merge </atlas-stream-processing/sp-agg-merge>
   $externalFunction </atlas-stream-processing/sp-agg-externalFunction>
   $sessionWindow </atlas-stream-processing/sp-agg-session>

.. _atlas-sp-aggregation-support:

Supported Aggregation Pipeline Stages
-------------------------------------

{+atlas-sp+} provides a number of extensions to the core MongoDB 
:manual:`Aggregation Pipeline </core/aggregation-pipeline>` syntax. To learn 
more about these extensions, see
:ref:`Supported Aggregation Pipeline Stages <stream-aggregation>`.

Certain core aggregation pipeline stages are only supported when nested 
within other pipeline stages. The following table shows which aggregation pipeline stages are 
supported for use within the main pipeline or when nested within the specified aggregation pipeline stages.

.. list-table::
   :widths: 25 25 25 25
   :header-rows: 1

   * - Aggregation Stage
     - Supported in Main Pipeline
     - Supported in :pipeline:`$tumblingWindow`, :pipeline:`$hoppingWindow`, and :pipeline:`$sessionWindow`
     - Supported in :pipeline:`$https` and :pipeline:`$externalFunction`
   
   * - :pipeline:`$addFields`
     - √
     - √
     - √
   * - :pipeline:`$project`
     - √
     - √
     - √
   * - :pipeline:`$replaceRoot`
     - √
     - √
     - √
   * - :pipeline:`$set`
     - √
     - √
     - √
   * - :pipeline:`$redact`
     - √
     - √
     - 
   * - :pipeline:`$match` 
     - √
     - √
     -
   * - :pipeline:`$replaceWith` 
     - √
     - √
     - 
   * - :pipeline:`$unset`
     - √
     - √
     - 
   * - :pipeline:`$unwind`
     - √
     - √
     - 
   * - :pipeline:`$validate`
     - √
     - √
     - 
   * - :pipeline:`$https`
     - √
     - √
     - 
   * - :pipeline:`$externalFunction`
     - √
     - √
     - 
   * - :pipeline:`$lookup` [#modified-syntax]_
     - √
     - √
     - 
   * - :pipeline:`$merge` [#modified-syntax]_
     - √
     - 
     -
   * - :pipeline:`$tumblingWindow`
     - √
     -
     -
   * - :pipeline:`$hoppingWindow`
     - √
     - 
     -
   * - :pipeline:`$sessionWindow`
     - √
     - 
     -
   * - :ref:`$emit <atlas-sp-agg-emit>`
     - √
     - 
     - 
   * - :pipeline:`$group`
     - 
     - √
     - 
   * - :pipeline:`$sort`
     - 
     - √
     - 
   * - :pipeline:`$count`
     - 
     - √
     - 
   * - :pipeline:`$limit`
     -
     - √
     - 



.. [#modified-syntax]
   Supported with modified syntax.
