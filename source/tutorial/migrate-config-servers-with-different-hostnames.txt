===============================================
Migrate Config Servers with Different Hostnames
===============================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. important::

   This procedure applies to migrating config servers when using three
   mirrored :program:`mongod` instances as config servers.

   .. versionchanged:: 3.2
      Starting in MongoDB 3.2, config servers can be deployed as
      :doc:`replica set </replication>`.
      MongoDB 3.2 deprecates the use of three mirrored :program:`mongod`
      instances for config servers.

   For replacing config servers deployed as
   members of a replica set, see :doc:`/tutorial/replace-config-server`.

Overview
--------

For a :doc:`sharded cluster </core/sharding>` that uses three mirrored
config servers, all three config servers must be available in order to
support operations that result in cluster metadata changes, e.g. chunk
splits and migrations. If one of the config servers is unavailable or
inoperable, you must replace it as soon as possible.

For a :doc:`sharded cluster </core/sharding>` that uses three mirrored
config servers, this procedure migrates a :ref:`config server
<sharding-config-server>` to a new server that uses a different hostname.
Use this procedure only if the config server *will not* be accessible via
the same hostname. If possible, avoid changing the hostname so that you
can instead use the procedure to :doc:`migrate a config server and use
the same hostname </tutorial/migrate-config-servers-with-same-hostname>`.

Considerations
--------------

With three mirrored config servers, changing a :ref:`config server's
<sharding-config-server>` hostname **requires downtime** and requires
restarting every process in the sharded cluster.

While migrating config servers, always make sure that
all :program:`mongos` instances have three config servers specified in
the :setting:`~sharding.configDB` setting at all times. Also ensure that
you specify the config servers in the same order for each
:program:`mongos` instance's :setting:`~sharding.configDB` setting.

Procedure
---------

.. important::

   This procedure applies to migrating config servers when using three
   mirrored :program:`mongod` instances as config servers. For replacing
   config servers deployed as members of a replica set, see
   :doc:`/tutorial/replace-config-server`.

1. Disable the cluster balancer process temporarily. See
   :ref:`sharding-balancing-disable-temporarily` for more information.

#. Shut down the config server to migrate.

   This renders all config data for the sharded cluster "read only."

#. Copy the contents of :setting:`~storage.dbPath` from the old config server to
   the new config server. For example, to copy the contents of
   :setting:`~storage.dbPath` to a machine named
   ``mongodb.config2.example.net``, use a command that resembles the
   following:

   .. code-block:: sh

      rsync -az /data/configdb mongodb.config2.example.net:/data/configdb

#. Start the config server instance on the new system. The default
   invocation is:

   .. code-block:: sh

      mongod --configsvr

#. Shut down all existing MongoDB processes. This includes:

   - the :program:`mongod` instances for the shards.

   - the :program:`mongod` instances for the existing
     :ref:`config databases <config-database>`.

   - the :program:`mongos` instances.

#. Restart all shard :program:`mongod` instances.

#. Restart the :program:`mongod` instances for the two existing non-migrated
   config servers.

#. Update the :setting:`~sharding.configDB` setting for each :program:`mongos`
   instances.

#. Restart the :program:`mongos` instances.

#. Re-enable the balancer to allow the cluster to resume normal
   balancing operations. See the
   :ref:`sharding-balancing-disable-temporarily` section for more
   information on managing the balancer process.

.. COMMENT per Randolph, we probably can remove the shutdown existing
   config servers in step 5 and the restart of these config servers
