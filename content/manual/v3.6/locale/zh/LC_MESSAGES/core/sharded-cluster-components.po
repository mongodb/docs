#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/core/sharded-cluster-components.txt:9
msgid "Sharded Cluster Components"
msgstr ""

#: ../source/core/sharded-cluster-components.txt:19
msgid "A MongoDB :term:`sharded cluster` consists of the following components:"
msgstr ""

#: ../source/core/sharded-cluster-components.txt:21
msgid ""
":doc:`shard </core/sharded-cluster-shards>`: Each shard contains a subset"
" of the sharded data. As of MongoDB 3.6, shards must be deployed as a "
":term:`replica set`."
msgstr ""

#: ../source/core/sharded-cluster-components.txt:25
msgid ""
":doc:`/core/sharded-cluster-query-router`: The ``mongos`` acts as a query"
" router, providing an interface between client applications and the "
"sharded cluster."
msgstr ""

#: ../source/core/sharded-cluster-components.txt:29
msgid ""
":doc:`config servers </core/sharded-cluster-config-servers>`: Config "
"servers store metadata and configuration settings for the cluster. As of "
"MongoDB 3.4, config servers must be deployed as a replica set (CSRS)."
msgstr ""

#: ../source/core/sharded-cluster-components.txt:36
msgid "Production Configuration"
msgstr ""

#: ../source/core/sharded-cluster-components.txt:38
msgid ""
"In a production cluster, ensure that data is redundant and that your "
"systems are highly available. Consider the following for a production "
"sharded cluster deployment:"
msgstr ""

#: ../source/core/sharded-cluster-components.txt:42
msgid "Deploy Config Servers as a 3 member :term:`replica set`"
msgstr ""

#: ../source/core/sharded-cluster-components.txt:43
msgid "Deploy each Shard as a 3 member :term:`replica set`"
msgstr ""

#: ../source/core/sharded-cluster-components.txt:44
msgid "Deploy one or more :binary:`~bin.mongos` routers"
msgstr ""

#: ../source/core/sharded-cluster-components.txt:47
msgid "Replica Set Distribution"
msgstr ""

#: ../source/core/sharded-cluster-components.txt:49
msgid ""
"Where possible, consider deploying one member of each replica set in a "
"site suitable for being a disaster recovery location."
msgstr ""

#: ../source/includes/note-csrs-distribution.rst:3
msgid ""
"Distributing replica set members across two data centers provides benefit"
" over a single data center. In a two data center distribution,"
msgstr ""

#: ../source/includes/note-csrs-distribution.rst:7
msgid ""
"If one of the data centers goes down, the data is still available for "
"reads unlike a single data center distribution."
msgstr ""

#: ../source/includes/note-csrs-distribution.rst:10
msgid ""
"If the data center with a minority of the members goes down, the replica "
"set can still serve write operations as well as read operations."
msgstr ""

#: ../source/includes/note-csrs-distribution.rst:14
msgid ""
"However, if the data center with the majority of the members goes down, "
"the replica set becomes read-only."
msgstr ""

#: ../source/includes/note-csrs-distribution.rst:17
msgid ""
"If possible, distribute members across at least three data centers. For "
"config server replica sets (CSRS), the best practice is to distribute "
"across three (or more depending on the number of members) centers. If the"
" cost of the third data center is prohibitive, one distribution "
"possibility is to evenly distribute the data bearing members across the "
"two data centers and store the remaining member (either a data bearing "
"member or an arbiter to ensure odd number of members) in the cloud if "
"your company policy allows."
msgstr ""

#: ../source/core/sharded-cluster-components.txt:55
msgid "Number of Shards"
msgstr ""

#: ../source/core/sharded-cluster-components.txt:57
msgid ""
"Sharding requires at least two shards to distribute sharded data. Single "
"shard sharded clusters may be useful if you plan on enabling sharding in "
"the  near future, but do not need to at the time of deployment."
msgstr ""

#: ../source/core/sharded-cluster-components.txt:62
msgid "Number of ``mongos`` and Distribution"
msgstr ""

#: ../source/core/sharded-cluster-components.txt:64
msgid ""
"Deploying multiple :binary:`~bin.mongos` routers supports high "
"availability and scalability. A common pattern is to place a "
":binary:`~bin.mongos` on each application server. Deploying one "
":binary:`~bin.mongos` router on each application server reduces network "
"latency between the application and the router."
msgstr ""

#: ../source/core/sharded-cluster-components.txt:70
msgid ""
"Alternatively, you can place a :binary:`~bin.mongos` router on dedicated "
"hosts. Large deployments benefit from this approach because it decouples "
"the number of client application servers from the number of "
":binary:`~bin.mongos` instances. This gives greater control over the "
"number of connections the :binary:`~bin.mongod` instances serve."
msgstr ""

#: ../source/core/sharded-cluster-components.txt:76
msgid ""
"Installing :binary:`~bin.mongos` instances on their own hosts allows "
"these instances to use greater amounts of memory. Memory would not be "
"shared with a :binary:`~bin.mongod` instance. It is possible to use "
"primary shards to host :binary:`~bin.mongos` routers but be aware that "
"memory contention may become an issue on large deployments."
msgstr ""

#: ../source/core/sharded-cluster-components.txt:82
msgid ""
"There is no limit to the number of :binary:`~bin.mongos` routers you can "
"have in a deployment. However, as :binary:`~bin.mongos` routers "
"communicate frequently with your config servers, monitor config server "
"performance closely as you increase the number of routers. If you see "
"performance degradation, it may be beneficial to cap the number of "
":binary:`~bin.mongos` routers in your deployment."
msgstr ""

#: ../source/core/sharded-cluster-components.txt:92
msgid "Development Configuration"
msgstr ""

#: ../source/core/sharded-cluster-components.txt:94
msgid ""
"For testing and development, you can deploy a sharded cluster with a "
"minimum number of components. These **non-production** clusters have the "
"following components:"
msgstr ""

#: ../source/core/sharded-cluster-components.txt:98
msgid ""
"A replica set :ref:`config server <sharding-config-server>` with one "
"member."
msgstr ""

#: ../source/core/sharded-cluster-components.txt:101
msgid "At least one shard as a single-member :term:`replica set`."
msgstr ""

#: ../source/core/sharded-cluster-components.txt:103
msgid "One :binary:`~bin.mongos` instance."
msgstr ""

#: ../source/core/sharded-cluster-components.txt:107
msgid "Use the test cluster architecture for testing and development only."
msgstr ""

#: ../source/core/sharded-cluster-components.txt:110
msgid ":doc:`/tutorial/deploy-shard-cluster/`"
msgstr ""

#~ msgid "**Shards**"
#~ msgstr ""

#~ msgid "**Config Servers**"
#~ msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid "**Routing Instances**"
#~ msgstr ""

#~ msgid "Deploy a sharded cluster, see :doc:`/tutorial/deploy-shard-cluster`."
#~ msgstr ""

#~ msgid ""
#~ ":term:`Sharded clusters <sharded cluster>` "
#~ "implement :term:`sharding`. A sharded cluster"
#~ " consists of the following components:"
#~ msgstr ""

#~ msgid ""
#~ "A shard is a MongoDB instance that"
#~ " holds a subset of a collectionâ€™s "
#~ "data. Each shard is either a "
#~ "single :program:`mongod` instance or a "
#~ ":term:`replica set`. In production, all "
#~ "shards are replica sets. For more "
#~ "information see :doc:`/core/sharded-cluster-"
#~ "shards`."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB 3.2 deprecates the use of "
#~ "master-slave replication for components of"
#~ " sharded clusters."
#~ msgstr ""

#~ msgid "Shards"
#~ msgstr ""

#~ msgid "Config Servers"
#~ msgstr ""

#~ msgid ""
#~ ":ref:`Config servers <sharding-config-server>`"
#~ " hold metadata about the sharded "
#~ "cluster. The metadata maps :term:`chunks "
#~ "<chunk>` to shards."
#~ msgstr ""

#~ msgid ""
#~ "Starting in MongoDB 3.2, config servers"
#~ " for sharded clusters can be deployed"
#~ " as a :doc:`replica set </core"
#~ "/replication-introduction>`. The replica set "
#~ "config servers must run the "
#~ ":doc:`WiredTiger storage engine </core/wiredtiger>`."
#~ " MongoDB 3.2 deprecates the use of"
#~ " three mirrored :program:`mongod` instances "
#~ "for config servers."
#~ msgstr ""

#~ msgid "For more information, see :doc:`/core/sharded-cluster-config-servers`."
#~ msgstr ""

#~ msgid "``mongos`` Instances"
#~ msgstr ""

#~ msgid ""
#~ ":program:`mongos` instances route the reads"
#~ " and writes from applications to the"
#~ " shards.  Applications do not access "
#~ "the shards directly. For more "
#~ "information see :doc:`/core/sharded-cluster-"
#~ "query-router`."
#~ msgstr ""

#~ msgid "To deploy a sharded cluster, see :doc:`/tutorial/deploy-shard-cluster`."
#~ msgstr ""

# b07ff5eb058841738e9ae1158a06ad20
#~ msgid "On this page"
#~ msgstr ""

# 5c762bbef2114adc9ccc9a9b863b4d60
#~ msgid ""
#~ ":doc:`shard </core/sharded-cluster-shards>`: "
#~ "Each shard contains a subset of "
#~ "the sharded data. Each shard can "
#~ "be deployed as a :term:`replica set`."
#~ msgstr ""

# f7b43861ffcf4dc487323d76cb3081c0
#~ msgid "Deploy one or more :program:`mongos` routers"
#~ msgstr ""

# 9a5b18bdff8342ad8968705ba939f6bb
#~ msgid ""
#~ "Sharding requires at least two shards"
#~ " to distribute sharded data. Single "
#~ "shard sharded clusters may be useful "
#~ "if you plan on enabling sharding "
#~ "in the near future, but do not "
#~ "need to at the time of deployment."
#~ msgstr ""

# c0f650d6aac14dd984ac19d44f0cdf16
#~ msgid ""
#~ "You can deploy a :program:`mongos` "
#~ "router on each application server to "
#~ "ensure each server has consistent access"
#~ " to the sharded cluster. Alternatively, "
#~ "deploy a group of :program:`mongos` "
#~ "routers and use a proxy or load"
#~ " balancer between the application and "
#~ "the :program:`mongos` group. In these "
#~ "deployments, you *must* configure the "
#~ "load balancer for *client affinity* such"
#~ " that every connection from a single"
#~ " client reaches the same :program:`mongos`."
#~ msgstr ""

# 3e89a829f32b4a228243d71fbe3f8c4a
#~ msgid "One :program:`mongos` instance."
#~ msgstr ""

# eab6e3e12ff64a13b1212b01c9a3d909
#~ msgid "sharding"
#~ msgstr ""

# eab6e3e12ff64a13b1212b01c9a3d909
# 308b7b3c2bec4dc7afde65e1f246b1da
#~ msgid "shards"
#~ msgstr ""

