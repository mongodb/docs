title: Download the Backup Daemon package.
stepnum: 1
ref: backup-package-download
content: |
  On **server 2**, download the latest version of the Backup Daemon
  package by issuing ``curl -OL`` with the URL for the latest version. If
  the **server 2** does not have Internet access, download the package to
  another server and ``scp`` it to **server 2**.

  To download the Backup Daemon package:

  a. In a browser, go to `http://www.mongodb.com/download <http://www.mongodb.com/download>`_.

  b. Submit the subscription form.

  c. On the :guilabel:`MongoDB Enterprise Downloads` page, go to the :guilabel:`MongoDB Ops Manager` section and click the :guilabel:`here` link.

  d. On the :guilabel:`Ops Manager Download` page, acknowledge the recommendation to contact MongoDB for production installs.

  e. On the :guilabel:`MongoDB Ops Manager Downloads` page, copy the link address of the "Backup" :guilabel:`RPM` link.

  f. Open a system prompt.

  g. Download the Backup Daemon package by issuing a ``curl`` command that uses the copied link address:

     .. code-block:: none

        curl -OL <link-address-for-backup-rpm>

     The downloaded package is named ``mongodb-mms-backup-daemon-<version>.x86_64.rpm``,
     where ``<version>`` is replaced by the version number.

---
title: Install the Backup Daemon package.
stepnum: 2
ref: backup-package-install
pre: |
  Issue ``rpm --install`` with root privileges and specify the name of the
  downloaded package:
action:
  language: sh
  code: |
    sudo rpm --install <downloaded-package>
post: |
  The software is installed to ``/opt/mongodb/mms-backup-daemon``.
---
title: "Point the Backup Daemon to the |application| database."
stepnum: 3
ref: point-to-app-db
pre: |
  Open the ``/opt/mongodb/mms-backup-daemon/conf/conf-daemon.properties`` file
  with root privileges and set the :setting:`mongo.mongoUri` value to the
  servers and ports hosting the |application| database. For example:
action:
  language: cfg
  code: |
    mongo.mongoUri=mongodb://mongodb1.example.net:27017,mongodb2.example.net:27017,mongodb3.example.net:27017
---
title: "Use ``scp`` to copy the ``gen.key`` file from the |application| server, **server 1**."
stepnum: 4
ref: copy-gen-key
content: |
  Use ``scp`` to copy the ``/etc/mongodb-mms/gen.key`` from the |application|
  server to the ``/etc/mongodb-mms`` directory on the Backup
  Daemon server, **server 2**.

  For example, if you are running the command from the |application|
  server:

  .. code-block:: sh

     scp -i .ssh/<key> /etc/mongodb-mms/gen.key <username>@<backup-daemon-hostname>:/etc/mongodb-mms

  .. note::

     If it is inconvenient to use ``scp`` to copy ``gen.key``, you may
     encode the file and copy its contents, provided you have a graphical
     user interface with terminals open to both **server 1** and **server
     2**. As ``gen.key`` is a binary file, you must first encode the file
     into text via ``base64``. On the console connected to **server 1**,
     type:

     ``sudo base64 /etc/mongodb-mms/gen.key``

     The command encodes the text and prints it to the terminal. For example:

     ``/LETVVl9rA1aFsY7masSLYJmlKValKbu``

     Copy it to your clipboard. Then, on the console connected to **server
     2**, enter the following, replacing ``<encoded-text>`` by pasting in
     the copied text:

     ``echo "<encoded-text>" > gen.key.txt``

     On **server 2**, issue the following to convert the key back into
     binary and save it as ``/etc/mongodb-mms/gen.key``:

     ``sudo base64 -d gen.key.txt > /etc/mongodb-mms/gen.key``

     Check that the key was converted properly by issuing the following
     ``sum`` command on both **server 1** and **server 2** and ensuring
     that the outputs match:

     ``sum /etc/mongodb-mms/gen.key``

     Once you have verified ``/etc/mongodb-mms/gen.key`` on **server 2**,
     issue the following to remove the temporary file:

     ``rm gen.key.txt``

---
title: "Set permissions and ownership of the ``gen.key`` file on the Backup Daemon server, **server 2**."
stepnum: 5
ref: chown-chmod
pre: |
  Once you have copied ``gen.key`` to **server 2**, ensure that the file's
  permissions are set to ``600`` and that the owner and group are both set
  to ``mongodb-mms``. If they are not, issue the following:
action:
  language: sh
  code: |
    chown mongodb-mms:mongodb-mms /etc/mongodb-mms/gen.key
    chmod 600 /etc/mongodb-mms/gen.key
---
title: Start the Backup Daemon.
stepnum: 6
ref: mms-backup-start
pre: |
  Issue the following command on **server 2**:
action:
  language: sh
  code: |
    sudo service mongodb-mms-backup-daemon start
post: |
  If you run into any problems, the log files are at ``<install_dir>/logs``.
---
title: "Open |onprem| and access the Backup configuration page."
stepnum: 7
ref: access-backup-config
content: |
  Open the |onprem| home page and log in as the user you first registered
  when installing the |application|. (This user is the :ref:`global owner
  <global-owner-role>`.) Then click the :guilabel:`Admin` link at the top
  right of the page. Then click the :guilabel:`Backup` tab.
---
title: "Enter configuration information for the Backup database."
stepnum: 8
ref: configure-backup-database-uri
content: |
  Enter the configuration information described below, and then click
  :guilabel:`Save`. |onprem| uses this information to create the
  :manual:`connection string URI </reference/connection-string>` used to
  connect to the database.

  :guilabel:`<hostname>:<port>`: Enter a comma-separated list of the fully
  qualified domain names and port numbers for all :term:`replica set` members
  for the Backup database.

  :guilabel:`MongoDB Auth Username` and :guilabel:`MongoDB Auth Password`:
  Enter the user credentials if the database uses authentication.

  :guilabel:`Encrypted Credentials`: Check this if the user credentials use
  the |onprem| ``credentialstool``. For more information, see
  :ref:`encrypt-mongodb-user-credentials`.

  :guilabel:`Use SSL`: Check this if the MongoDB database uses SSL. If you
  select this, you must configure SSL settings for both the |application| and
  Backup Daemon. See :doc:`/reference/configuration`.

  :guilabel:`Connection Options`: To add additional connection options, enter
  them using the MongoDB :manual:`Connection String URI Format
  </reference/connection-string>`.
...
