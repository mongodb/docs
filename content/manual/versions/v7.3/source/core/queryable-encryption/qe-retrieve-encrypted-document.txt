.. facet::
   :name: genre
   :values: tutorial

.. facet::
   :name: programming_language
   :values: javascript/typescript

.. meta::
   :keywords: queryable encryption, in-use encryption, code example, node.js

.. _qe-query-encrypted-document:

=======================================
Query a Document with Encrypted Fields
=======================================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Overview
--------

This guide shows you how to use a {+qe+}-enabled application to retrieve
a document that has encrypted fields.

After you complete the steps in this guide, you should be able to use
your application to query data in encrypted fields, and to decrypt those 
fields as an authorized user.

Before You Start
----------------

:ref:`Create an encrypted collection and insert documents
<qe-create-encrypted-collection>` before continuing.

.. tabs-selector:: drivers

Procedure
---------

.. procedure::

   .. step:: Query an Encrypted Field

      The following code sample executes a find query on an encrypted field and
      prints the decrypted data:

      .. tabs-drivers::

         .. tab::
            :tabid: shell

            .. literalinclude:: /includes/qe-tutorials/mongosh/queryable-encryption-tutorial.js
               :start-after: start-find-document
               :end-before: end-find-document
               :language: javascript
               :dedent:

         .. tab::
            :tabid: nodejs

            .. literalinclude:: /includes/qe-tutorials/node/queryable-encryption-tutorial.js
               :start-after: start-find-document
               :end-before: end-find-document
               :language: javascript
               :dedent:

         .. tab::
            :tabid: python

            .. literalinclude:: /includes/qe-tutorials/python/queryable_encryption_tutorial.py
               :start-after: start-find-document
               :end-before: end-find-document
               :language: python
               :dedent:

         .. tab::
            :tabid: java-sync

            .. literalinclude:: /includes/qe-tutorials/java/src/main/java/com/mongodb/tutorials/qe/QueryableEncryptionTutorial.java
               :start-after: start-find-document
               :end-before: end-find-document
               :language: java
               :dedent:

         .. tab::
            :tabid: go

            .. literalinclude:: /includes/qe-tutorials/go/queryable_encryption_tutorial.go
               :start-after: start-find-document
               :end-before: end-find-document
               :language: go
               :dedent:

         .. tab::
            :tabid: csharp

            .. literalinclude:: /includes/qe-tutorials/csharp/QueryableEncryptionTutorial.cs
               :start-after: start-find-document
               :end-before: end-find-document
               :language: csharp
               :dedent:

      The output of the preceding code sample should look similar to the
      following:

      .. literalinclude:: /includes/qe-tutorials/encrypted-document.json
         :language: json
         :copyable: false
         :dedent:

      .. include:: /includes/queryable-encryption/safe-content-warning.rst