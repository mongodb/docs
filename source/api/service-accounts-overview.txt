.. _service-accounts-overview:

=========================
Service Accounts Overview
=========================

.. default-domain:: mongodb

.. facet::
   :name: genre
   :values: reference

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Service Accounts (currently available as a `Preview feature <https://www.mongodb.com/resources/beta-programs>`__) 
introduce a new way to authenticate to |service| by using the industry standard 
{+oauth-2+} protocol with the 
`Client Credentials flow <https://www.oauth.com/oauth2-servers/access-tokens/client-credentials/>`__.

A service account comes with a client ID and secret, comparable to a username and 
password, that you use to generate access tokens for |api| requests. These tokens 
are valid for one hour to prevent replay attacks, where a leaked access token 
could be used without a time restriction.
To learn how to construct an |api| request using an access token, see :ref:`example-api-request`.

|service| :ref:`roles <user-roles>` determine what operations a service account 
can perform. Assign roles to service accounts as you would for users to ensure 
the access token has the necessary permissions for the desired |api| calls. 

A service account is scoped to one organization and can access multiple projects 
within that organization. To give an organization-level service account access 
to a project, see :ref:`invite-org-app-api-keys`. 

You can't use a service account or its access token to log into |service| through the {+atlas-ui+}.
To learn more about the limitations of service accounts, see :ref:`server-limits-thresholds`.

Next Steps
----------

To use and manage service accounts, see 
any of the following procedures:

- :ref:`atlas-admin-api-access`
- :ref:`atlas-admin-api-access-org`
- :ref:`atlas-admin-api-access-project`
- :ref:`prog-access-mult-orgs`
- :ref:`generate-oauth2-token-atlas`
- :ref:`revoke-oauth2-token-atlas`
