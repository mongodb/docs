=======================================
Prevent Secondary from Becoming Primary
=======================================

.. default-domain:: mongodb

Overview
--------

In a replica set, by default all :term:`secondary` members are eligible to
become primary through the election process. You can use the
:data:`priority <local.system.replset.members[n].priority>` to effect the
outcome of these elections by making some members more likely to become
primary and other members less likely or unable to become primary.

Secondaries that cannot become primary are also unable to trigger
elections. In all other respects these secondaries are identical to other
secondaries.

To prevent a :term:`secondary` member from ever becoming a :term:`primary`
in a :term:`failover`, assign the secondary a priority of ``0``, as
described here. For a detailed description of secondary-only members and their purposes,
see :doc:`/core/replica-set-priority-0-member`.

Considerations
--------------

.. include:: /includes/fact-rs-conf-array-index.rst

.. note::

   MongoDB does not permit the current :term:`primary` to have a priority
   of ``0``. To prevent the current primary from again becoming a primary,
   you must first step down the current primary using
   :method:`rs.stepDown()`.

Procedure
---------

.. include:: /includes/warning-rs-reconfig.rst

.. include:: /includes/steps/configure-secondary-only-rs-member.rst

Related Documents
-----------------

- :data:`~local.system.replset.members[n].priority`

- :doc:`/tutorial/adjust-replica-set-member-priority`

- :ref:`Replica Set Reconfiguration <replica-set-reconfiguration-usage>`

- :doc:`/core/replica-set-elections`