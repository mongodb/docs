.. _enable-access-control:

=====================
Enable Access Control
=====================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Enabling access control on a MongoDB deployment enforces authentication.
With access control enabled, users are required to identify themselves
and can only perform actions that adhere to the permissions granted by
the roles assigned to their user.

The following tutorial enables access control for a standalone
:binary:`~bin.mongod` instance and uses the :ref:`default
authentication mechanism <authentication-mechanism-default>`. For more
information about other authentication mechanisms, see
:ref:`available-authentication-mechanisms`.

If you would like to enable access control for a :doc:`replica set
</replication>` or a :doc:`sharded cluster </sharding>`, please refer to
one of the following resources:

- :doc:`/tutorial/deploy-replica-set-with-keyfile-access-control`
- :doc:`/tutorial/enforce-keyfile-access-control-in-existing-replica-set`
- :doc:`/tutorial/enforce-keyfile-access-control-in-existing-replica-set-without-downtime`
- :doc:`/tutorial/deploy-sharded-cluster-with-keyfile-access-control`
- :doc:`/tutorial/enforce-keyfile-access-control-in-existing-sharded-cluster`
- :doc:`/tutorial/enforce-keyfile-access-control-in-existing-sharded-cluster-no-downtime`

.. _enable-auth-procedure:

Enable Access Control for a Standalone ``mongod`` Instance
----------------------------------------------------------

.. seealso::

   :ref:`available-authentication-mechanisms`

.. include:: /includes/steps/create-admin-then-enable-authentication.rst

Next Steps
----------

To create additional users, see :doc:`/tutorial/create-users`.

To manage users, assign roles, and create custom roles, see
:doc:`/tutorial/manage-users-and-roles`.
