# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/data-model-design.txt:5
# cefbb5573fa94a9fab8535fdd11b1b86
msgid "Data Model Design"
msgstr ""

#: ../source/core/data-model-design.txt:9
# a1cac1cc8566489cbc75f82a4c7f9732
msgid "Effective data models support your application needs. The key consideration for the structure of your documents is the decision to :ref:`embed <data-modeling-embedding>` or to :ref:`use references <data-modeling-referencing>`."
msgstr ""

#: ../source/core/data-model-design.txt:17
# d6c0f93d3c14431d803dcfc500e61049
msgid "Embedded Data Models"
msgstr ""

#: ../source/core/data-model-design.txt:19
# 8f73734edddc4f11b33a1102a43125cf
msgid "With MongoDB, you may embed related data in a single structure or document. These schema are generally known as \"denormalized\" models, and take advantage of MongoDB's rich documents. Consider the following diagram:"
msgstr ""

#: ../source/core/data-model-design.txt:26
# c7a94e4915694da5a8a57125c20a89f3
msgid "Embedded data models allow applications to store related pieces of information in the same database record. As a result, applications may need to issue fewer queries and updates to complete common operations."
msgstr ""

#: ../source/core/data-model-design.txt:30
# 50b0730e66fd4bb99f748922896956f7
msgid "In general, use embedded data models when:"
msgstr ""

#: ../source/core/data-model-design.txt:32
# 15aad50e989e4e06b57291b578800dca
msgid "you have \"contains\" relationships between entities. See :ref:`data-modeling-example-one-to-one`."
msgstr ""

#: ../source/core/data-model-design.txt:35
# d2aa7b40bf594080b081cfc2bfb4e32e
msgid "you have one-to-many relationships between entities. In these relationships the \"many\" or child documents always appear with or are viewed in the context of the \"one\" or parent documents.  See :ref:`data-modeling-example-one-to-many`."
msgstr ""

#: ../source/core/data-model-design.txt:40
# 9f7509ee90b147f980a433e24fad59f4
msgid "In general, embedding provides better performance for read operations, as well as the ability to request and retrieve related data in a single database operation. Embedded data models make it possible to update related data in a single atomic write operation."
msgstr ""

#: ../source/core/data-model-design.txt:45
# 441d9e339cb7488d8d5f59d4150835fc
msgid "However, embedding related data in documents may lead to situations where documents grow after creation. With the MMAPv1 storage engine, document growth can impact write performance and lead to data fragmentation."
msgstr ""

#: ../source/core/data-model-design.txt:50
# 1e3e18b2ac694a8fb227a1b65eee03f6
msgid "In version 3.0.0, MongoDB uses :ref:`power-of-2-allocation` as the default allocation strategy for MMAPv1 in order to account for document growth, minimizing the likelihood of data fragmentation. See :ref:`power-of-2-allocation` for details. Furthermore, documents in MongoDB must be smaller than the :limit:`maximum BSON document size <BSON Document Size>`. For bulk binary data, consider :doc:`GridFS </core/gridfs>`."
msgstr ""

#: ../source/core/data-model-design.txt:58
# ee8ffa7ecaf74871bd857cc33ba0199d
msgid "To interact with embedded documents, use :term:`dot notation` to \"reach into\" embedded documents. See :ref:`query for data in arrays <read-operations-arrays>` and :ref:`query data in embedded documents <read-operations-embedded-documents>` for more examples on accessing data in arrays and embedded documents."
msgstr ""

#: ../source/core/data-model-design.txt:67
# 1025a5a608154c1ab0399b533327360d
msgid "Normalized Data Models"
msgstr ""

#: ../source/core/data-model-design.txt:69
# df34b60f0ed64d1f9fc48afb633ac30f
msgid "Normalized data models describe relationships using :doc:`references </reference/database-references>` between documents."
msgstr ""

#: ../source/core/data-model-design.txt:74
# 915be8a402bc48b98254515bcecfa91a
msgid "In general, use normalized data models:"
msgstr ""

#: ../source/core/data-model-design.txt:76
# ddec3568da0f4bdbb1ec6397e13cd802
msgid "when embedding would result in duplication of data but would not provide sufficient read performance advantages to outweigh the implications of the duplication."
msgstr ""

#: ../source/core/data-model-design.txt:80
# 15907756d32049498c7407bedc685dee
msgid "to represent more complex many-to-many relationships."
msgstr ""

#: ../source/core/data-model-design.txt:82
# 5d69af198d1a44deba0be21beb54fa86
msgid "to model large hierarchical data sets."
msgstr ""

#: ../source/core/data-model-design.txt:84
# 86e04534d8cc4d589d608c3f7569ab9d
msgid "References provides more flexibility than embedding. However, client-side applications must issue follow-up queries to resolve the references. In other words, normalized data models can require more round trips to the server."
msgstr ""

#: ../source/core/data-model-design.txt:89
# 9e2545719ae84508aa153552f203d091
msgid "See :ref:`data-modeling-publisher-and-books` for an example of referencing. For examples of various tree models using references, see :doc:`/applications/data-models-tree-structures`."
msgstr ""

#: ../source/includes/extracts/additional-resources-data-model-design.rst:4
# 4828986a84d14d46aa238bf15adb3521
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-data-model-design.rst:6
# 55d506387dea4d13ab031402fd779243
msgid "`Thinking in Documents (Presentation) <http://www.mongodb.com/presentations/webinar-back-basics-1-thinking-documents>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-data-model-design.rst:7
# 6278a5044eb64f089e081638dd854580
msgid "`Schema Design for Time Series Data (Presentation) <http://www.mongodb.com/presentations/webinar-time-series-data-mongodb>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-data-model-design.rst:8
# 69976667854443b7a191074a896b7611
msgid "`Socialite, the Open Source Status Feed - Storing a Social Graph (Presentation) <http://www.mongodb.com/presentations/socialite-open-source-status-feed-part-2-managing-social-graph>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-data-model-design.rst:9
# a04ef05a707d488da72c84c323a53193
msgid "`MongoDB Schema Design Consultation Services <https://www.mongodb.com/products/consulting#schema_design>`_"
msgstr ""

