#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/release-notes/2.0.txt:3
msgid "Release Notes for MongoDB 2.0"
msgstr ""

#: ../source/release-notes/2.0.txt:14
msgid "Upgrading"
msgstr ""

#: ../source/release-notes/2.0.txt:16
msgid ""
"Although the major version number has changed, MongoDB 2.0 is a standard,"
" incremental production release and works as a drop-in replacement for "
"MongoDB 1.8."
msgstr ""

#: ../source/release-notes/2.0.txt:21
msgid "Preparation"
msgstr ""

#: ../source/release-notes/2.0.txt:23
msgid ""
"Read through all release notes before upgrading, and ensure that no "
"changes will affect your deployment."
msgstr ""

#: ../source/release-notes/2.0.txt:26
msgid ""
"If you create new indexes in 2.0, then downgrading to 1.8 is possible but"
" you must reindex the new collections."
msgstr ""

#: ../source/release-notes/2.0.txt:29
msgid ""
":binary:`~bin.mongoimport` and :binary:`~bin.mongoexport` now correctly "
"adhere to the CSV spec for handling CSV input/output. This may break "
"existing import/export workflows that relied on the previous behavior. "
"For more information see :issue:`SERVER-1097`."
msgstr ""

#: ../source/release-notes/2.0.txt:34
msgid ""
":doc:`Journaling </core/journaling/>` is **enabled by default** in 2.0 "
"for 64-bit builds. If you still prefer to run without journaling, start "
":binary:`~bin.mongod` with the :option:`--nojournal <mongod --nojournal>`"
" run-time option. Otherwise, MongoDB creates journal files during "
"startup. The first time you start :binary:`~bin.mongod` with journaling, "
"you will see a delay as :binary:`~bin.mongod` creates new files. In "
"addition, you may see reduced write throughput."
msgstr ""

#: ../source/release-notes/2.0.txt:41
msgid ""
"2.0 :binary:`~bin.mongod` instances are interoperable with 1.8 "
":binary:`~bin.mongod` instances; however, for best results, upgrade your "
"deployments using the following procedures:"
msgstr ""

#: ../source/release-notes/2.0.txt:48
msgid "Upgrading a Standalone ``mongod``"
msgstr ""

#: ../source/release-notes/2.0.txt:50
msgid "Download the v2.0.x binaries from the `MongoDB Download Page`_."
msgstr ""

#: ../source/release-notes/2.0.txt:52
msgid ""
"Shutdown your :binary:`~bin.mongod` instance. Replace the existing binary"
" with the 2.0.x :binary:`~bin.mongod` binary and restart MongoDB."
msgstr ""

#: ../source/release-notes/2.0.txt:60
msgid "Upgrading a Replica Set"
msgstr ""

#: ../source/release-notes/2.0.txt:62
msgid ""
"Upgrade the :term:`secondary` members of the set one at a time by "
"shutting down the :binary:`~bin.mongod` and replacing the 1.8 binary with"
" the 2.0.x binary from the `MongoDB Download Page`_."
msgstr ""

#: ../source/release-notes/2.0.txt:66
msgid ""
"To avoid losing the last few updates on failover you can temporarily halt"
" your application (failover should take less than 10 seconds), or you can"
" set :ref:`write concern <write-concern>` in your application code to "
"confirm that each update reaches multiple servers."
msgstr ""

#: ../source/release-notes/2.0.txt:71
msgid ""
"Use the :method:`rs.stepDown()` to step down the primary to allow the "
"normal :ref:`failover <replica-set-failover>` procedure."
msgstr ""

#: ../source/release-notes/2.0.txt:74
msgid ""
":method:`rs.stepDown()` and :dbcommand:`replSetStepDown` provide for "
"shorter and more consistent failover procedures than simply shutting down"
" the primary directly."
msgstr ""

#: ../source/release-notes/2.0.txt:78
msgid ""
"When the primary has stepped down, shut down its instance and upgrade by "
"replacing the :binary:`~bin.mongod` binary with the 2.0.x binary."
msgstr ""

#: ../source/release-notes/2.0.txt:86
msgid "Upgrading a Sharded Cluster"
msgstr ""

#: ../source/release-notes/2.0.txt:88
msgid ""
"Upgrade all :term:`config server <config database>` instances *first*, in"
" any order. Since config servers use two-phase commit, :term:`shard` "
"configuration metadata updates will halt until all are up and running."
msgstr ""

#: ../source/release-notes/2.0.txt:93
msgid "Upgrade :binary:`~bin.mongos` routers in any order."
msgstr ""

#: ../source/release-notes/2.0.txt:96
msgid "Changes"
msgstr ""

#: ../source/release-notes/2.0.txt:99
msgid "Compact Command"
msgstr ""

#: ../source/release-notes/2.0.txt:101
msgid ""
"A :dbcommand:`compact` command is now available for compacting a single "
"collection and its indexes. Previously, the only way to compact was to "
"repair the entire database."
msgstr ""

#: ../source/release-notes/2.0.txt:106
msgid "Concurrency Improvements"
msgstr ""

#: ../source/release-notes/2.0.txt:108
msgid ""
"When going to disk, the server will yield the write lock when writing "
"data that is not likely to be in memory. The initial implementation of "
"this feature now exists:"
msgstr ""

#: ../source/release-notes/2.0.txt:112
msgid "See :issue:`SERVER-2563` for more information."
msgstr ""

#: ../source/release-notes/2.0.txt:114
msgid "The specific operations yield in 2.0 are:"
msgstr ""

#: ../source/release-notes/2.0.txt:116
msgid "Updates by ``_id``"
msgstr ""

#: ../source/release-notes/2.0.txt:118
msgid "Removes"
msgstr ""

#: ../source/release-notes/2.0.txt:120
msgid "Long cursor iterations"
msgstr ""

#: ../source/release-notes/2.0.txt:123
msgid "Default Stack Size"
msgstr ""

#: ../source/release-notes/2.0.txt:125
msgid ""
"MongoDB 2.0 reduces the default stack size. This change can reduce total "
"memory usage when there are many (e.g., 1000+) client connections, as "
"there is a thread per connection. While portions of a thread's stack can "
"be swapped out if unused, some operating systems do this slowly enough "
"that it might be an issue. The default stack size is lesser of the system"
" setting or 1MB."
msgstr ""

#: ../source/release-notes/2.0.txt:135
msgid "Index Performance Enhancements"
msgstr ""

#: ../source/release-notes/2.0.txt:137
#, python-format
msgid ""
"v2.0 includes significant improvements to the :v2.2:`index </tutorial"
"/roll-back-to-v1.8-index>`. Indexes are often 25% smaller and 25% faster "
"(depends on the use case). When upgrading from previous versions, the "
"benefits of the new index type are realized only if you create a new "
"index or re-index an old one."
msgstr ""

#: ../source/release-notes/2.0.txt:143
msgid ""
"Dates are now signed, and the max index key size has increased slightly "
"from 819 to 1024 bytes."
msgstr ""

#: ../source/release-notes/2.0.txt:146
msgid ""
"All operations that create a new index will result in a 2.0 index by "
"default. For example:"
msgstr ""

#: ../source/release-notes/2.0.txt:149
msgid ""
"Reindexing results on an older-version index results in a 2.0 index. "
"However, reindexing on a secondary does *not* work in versions prior to "
"2.0. Do not reindex on a secondary. For a workaround, see "
":issue:`SERVER-3866`."
msgstr ""

#: ../source/release-notes/2.0.txt:154
msgid "The :dbcommand:`repairDatabase` command converts indexes to a 2.0 indexes."
msgstr ""

#: ../source/release-notes/2.0.txt:157
msgid ""
"To convert all indexes for a given collection to the :ref:`2.0 type <2.0"
"-new-index-format>`, invoke the :dbcommand:`compact` command."
msgstr ""

#: ../source/release-notes/2.0.txt:160
msgid ""
"Once you create new indexes, downgrading to 1.8.x will require a re-index"
" of any indexes created using 2.0. See :v2.2:`/tutorial/roll-back-"
"to-v1.8-index`."
msgstr ""

#: ../source/release-notes/2.0.txt:165
msgid "Sharding Authentication"
msgstr ""

#: ../source/release-notes/2.0.txt:167
msgid ""
"Applications can now use authentication with :term:`sharded clusters "
"<sharded cluster>`."
msgstr ""

#: ../source/release-notes/2.0.txt:170
msgid "Replica Sets"
msgstr ""

#: ../source/release-notes/2.0.txt:173
msgid "Hidden Nodes in Sharded Clusters"
msgstr ""

#: ../source/release-notes/2.0.txt:175
msgid ""
"In 2.0, :binary:`~bin.mongos` instances can now determine when a member "
"of a replica set becomes \"hidden\" without requiring a restart. In 1.8, "
":binary:`~bin.mongos` if you reconfigured a member as hidden, you *had* "
"to restart :binary:`~bin.mongos` to prevent queries from reaching the "
"hidden member."
msgstr ""

#: ../source/release-notes/2.0.txt:182
msgid "Priorities"
msgstr ""

#: ../source/release-notes/2.0.txt:184
msgid ""
"Each :term:`replica set` member can now have a priority value consisting "
"of a floating-point from 0 to 1000, inclusive. Priorities let you control"
" which member of the set you prefer to have as :term:`primary` the member"
" with the highest priority that can see a majority of the set will be "
"elected primary."
msgstr ""

#: ../source/release-notes/2.0.txt:190
msgid ""
"For example, suppose you have a replica set with three members, ``A``, "
"``B``, and ``C``, and suppose that their priorities are set as follows:"
msgstr ""

#: ../source/release-notes/2.0.txt:193
msgid "``A``'s priority is ``2``."
msgstr ""

#: ../source/release-notes/2.0.txt:195
msgid "``B``'s priority is ``3``."
msgstr ""

#: ../source/release-notes/2.0.txt:197
msgid "``C``'s priority is ``1``."
msgstr ""

#: ../source/release-notes/2.0.txt:199
msgid ""
"During normal operation, the set will always chose ``B`` as primary. If "
"``B`` becomes unavailable, the set will elect ``A`` as primary."
msgstr ""

#: ../source/release-notes/2.0.txt:202
msgid ""
"For more information, see the "
":data:`~local.system.replset.members[n].priority` documentation."
msgstr ""

#: ../source/release-notes/2.0.txt:206
msgid "Data-Center Awareness"
msgstr ""

#: ../source/release-notes/2.0.txt:208
msgid ""
"You can now \"tag\" :term:`replica set` members to indicate their "
"location. You can use these tags to design custom :ref:`write rules "
"<write-concern>` across data centers, racks, specific servers, or any "
"other architecture choice."
msgstr ""

#: ../source/release-notes/2.0.txt:213
msgid ""
"For example, an administrator can define rules such as \"very important "
"write\" or ``customerData`` or \"audit-trail\" to replicate to certain "
"servers, racks, data centers, etc. Then in the application code, the "
"developer would say:"
msgstr ""

#: ../source/release-notes/2.0.txt:222
msgid ""
"which would succeed if it fulfilled the conditions the DBA defined for "
"\"very important write\"."
msgstr ""

#: ../source/release-notes/2.0.txt:225
msgid "For more information, see :doc:`/data-center-awareness`."
msgstr ""

#: ../source/release-notes/2.0.txt:227
msgid ""
"Drivers may also support tag-aware reads. Instead of specifying "
"``slaveOk``, you specify ``slaveOk`` with tags indicating which data-"
"centers to read from. For details, see the :ecosystem:`Drivers "
"</drivers>` documentation."
msgstr ""

#: ../source/release-notes/2.0.txt:233
msgid "``w`` : ``majority``"
msgstr ""

#: ../source/release-notes/2.0.txt:235
msgid ""
"You can also set ``w`` to ``majority`` to ensure that the write "
"propagates to a majority of nodes, effectively committing it. The value "
"for \"majority\" will automatically adjust as you add or remove nodes "
"from the set."
msgstr ""

#: ../source/release-notes/2.0.txt:240
msgid "For more information, see :doc:`/reference/write-concern`."
msgstr ""

#: ../source/release-notes/2.0.txt:243
msgid "Reconfiguration with a Minority Up"
msgstr ""

#: ../source/release-notes/2.0.txt:245
msgid ""
"If the majority of servers in a set has been permanently lost, you can "
"now force a reconfiguration of the set to bring it back online."
msgstr ""

#: ../source/release-notes/2.0.txt:248
msgid ""
"For more information see :doc:`/tutorial/reconfigure-replica-set-with-"
"unavailable-members`."
msgstr ""

#: ../source/release-notes/2.0.txt:251
msgid "Primary Checks for a Caught up Secondary before Stepping Down"
msgstr ""

#: ../source/release-notes/2.0.txt:253
msgid ""
"To minimize time without a :term:`primary`, the :method:`rs.stepDown()` "
"method will now fail if the primary does not see a :term:`secondary` "
"within 10 seconds of its latest optime. You can force the primary to step"
" down anyway, but by default it will return an error message."
msgstr ""

#: ../source/release-notes/2.0.txt:258
msgid "See also :doc:`/tutorial/force-member-to-be-primary`."
msgstr ""

#: ../source/release-notes/2.0.txt:261
msgid "Extended Shutdown on the Primary to Minimize Interruption"
msgstr ""

#: ../source/release-notes/2.0.txt:263
msgid ""
"When you call the :dbcommand:`shutdown` command, the :term:`primary` will"
" refuse to shut down unless there is a :term:`secondary` whose optime is "
"within 10 seconds of the primary. If such a secondary isn't available, "
"the primary will step down and wait up to a minute for the secondary to "
"be fully caught up before shutting down."
msgstr ""

#: ../source/release-notes/2.0.txt:269
msgid ""
"Note that to get this behavior, you must issue the :dbcommand:`shutdown` "
"command explicitly; sending a signal to the process will not trigger this"
" behavior."
msgstr ""

#: ../source/release-notes/2.0.txt:273
msgid ""
"You can also force the primary to shut down, even without an up-to-date "
"secondary available."
msgstr ""

#: ../source/release-notes/2.0.txt:277
msgid "Maintenance Mode"
msgstr ""

#: ../source/release-notes/2.0.txt:279
msgid ""
"When :dbcommand:`repair` or :dbcommand:`compact` runs on a "
":term:`secondary`, the secondary will automatically drop into "
"\"recovering\" mode until the operation finishes. This prevents clients "
"from trying to read from it while it's busy."
msgstr ""

#: ../source/release-notes/2.0.txt:285
msgid "Geospatial Features"
msgstr ""

#: ../source/release-notes/2.0.txt:288
msgid "Multi-Location Documents"
msgstr ""

#: ../source/release-notes/2.0.txt:290
msgid ""
"Indexing is now supported on documents which have multiple location "
"objects, embedded either inline or in embedded documents. Additional "
"command options are also supported, allowing results to return with not "
"only distance but the location used to generate the distance."
msgstr ""

#: ../source/release-notes/2.0.txt:295
msgid "For more information, see :ref:`geospatial-indexes-multi-location`."
msgstr ""

#: ../source/release-notes/2.0.txt:298
msgid "Polygon searches"
msgstr ""

#: ../source/release-notes/2.0.txt:300
msgid ""
"Polygonal :query:`$within` queries are also now supported for simple "
"polygon shapes. For details, see the :query:`$within` operator "
"documentation."
msgstr ""

#: ../source/release-notes/2.0.txt:304
msgid "Journaling Enhancements"
msgstr ""

#: ../source/release-notes/2.0.txt:306
msgid ""
"Journaling is now enabled by default for 64-bit platforms. Use the "
"``--nojournal`` command line option to disable it."
msgstr ""

#: ../source/release-notes/2.0.txt:309
msgid "The journal is now compressed for faster commits to disk."
msgstr ""

#: ../source/release-notes/2.0.txt:311
msgid ""
"A new :option:`--journalCommitInterval <mongod --journalCommitInterval>` "
"run-time option exists for specifying your own group commit interval. The"
" default settings do not change."
msgstr ""

#: ../source/release-notes/2.0.txt:315
msgid ""
"A new :dbcommand:`{ getLastError: { j: true } } <getLastError>` option is"
" available to wait for the group commit. The group commit will happen "
"sooner when a client is waiting on ``{j: true}``. If journaling is "
"disabled, ``{j: true}`` is a no-op."
msgstr ""

#: ../source/release-notes/2.0.txt:321
msgid "New ``ContinueOnError`` Option for Bulk Insert"
msgstr ""

#: ../source/release-notes/2.0.txt:323
msgid ""
"Set the ``continueOnError`` option for bulk inserts, in the "
":ecosystem:`driver </drivers>`, so that bulk insert will continue to "
"insert any remaining documents even if an insert fails, as is the case "
"with  duplicate key exceptions or network interruptions. The "
":dbcommand:`getLastError` command will report whether any inserts have "
"failed, not just the last one. If multiple errors occur, the client will "
"only receive the most recent :dbcommand:`getLastError` results."
msgstr ""

#: ../source/includes/note-bulk-inserts-on-sharded-clusters.rst:3
msgid ""
"For bulk inserts on sharded clusters, the :dbcommand:`getLastError` "
"command alone is insufficient to verify success. Applications should must"
" verify the success of bulk inserts in application logic."
msgstr ""

#: ../source/release-notes/2.0.txt:334
msgid "Map Reduce"
msgstr ""

#: ../source/release-notes/2.0.txt:337
msgid "Output to a Sharded Collection"
msgstr ""

#: ../source/release-notes/2.0.txt:339
msgid ""
"Using the new ``sharded`` flag, it is possible to send the result of a "
"map/reduce to a sharded collection. Combined with the ``reduce`` or "
"``merge`` flags, it is possible to keep adding data to very large "
"collections from map/reduce jobs."
msgstr ""

#: ../source/release-notes/2.0.txt:344
msgid ""
"For more information, see :doc:`/core/map-reduce/` and the "
":dbcommand:`mapReduce` reference."
msgstr ""

#: ../source/release-notes/2.0.txt:348
msgid "Performance Improvements"
msgstr ""

#: ../source/release-notes/2.0.txt:350
msgid "Map/reduce performance will benefit from the following:"
msgstr ""

#: ../source/release-notes/2.0.txt:352
msgid ""
"Larger in-memory buffer sizes, reducing the amount of disk I/O needed "
"during a job"
msgstr ""

#: ../source/release-notes/2.0.txt:355
msgid "Larger javascript heap size, allowing for larger objects and less GC"
msgstr ""

#: ../source/release-notes/2.0.txt:358
msgid ""
"Supports pure JavaScript execution with the ``jsMode`` flag. See the "
":dbcommand:`mapReduce` reference."
msgstr ""

#: ../source/release-notes/2.0.txt:362
msgid "New Querying Features"
msgstr ""

#: ../source/release-notes/2.0.txt:365
msgid "Additional regex options: ``s``"
msgstr ""

#: ../source/release-notes/2.0.txt:367
msgid ""
"Allows the dot (``.``) to match all characters including new lines. This "
"is in addition to the currently supported ``i``, ``m`` and ``x``. See "
":query:`$regex`."
msgstr ""

#: ../source/release-notes/2.0.txt:371
msgid "$and"
msgstr ""

#: ../source/release-notes/2.0.txt:373
msgid "A special boolean :query:`$and` query operator is now available."
msgstr ""

#: ../source/release-notes/2.0.txt:376
msgid "Command Output Changes"
msgstr ""

#: ../source/release-notes/2.0.txt:378
msgid ""
"The output of the :dbcommand:`validate` command and the documents in the "
"``system.profile`` collection have both been enhanced to return "
"information as BSON objects with keys for each value rather than as free-"
"form strings."
msgstr ""

#: ../source/release-notes/2.0.txt:384
msgid "Shell Features"
msgstr ""

#: ../source/release-notes/2.0.txt:387
msgid "Custom Prompt"
msgstr ""

#: ../source/release-notes/2.0.txt:389
msgid ""
"You can define a custom prompt for the :binary:`~bin.mongo` shell. You "
"can change the prompt at any time by setting the prompt variable to a "
"string or a custom JavaScript function returning a string. For examples, "
"see :ref:`shell-use-a-custom-prompt`."
msgstr ""

#: ../source/release-notes/2.0.txt:395
msgid "Default Shell Init Script"
msgstr ""

#: ../source/release-notes/2.0.txt:397
msgid ""
"On startup, the shell will check for a ``.mongorc.js`` file in the user's"
" home directory. The shell will execute this file after connecting to the"
" database and before displaying the prompt."
msgstr ""

#: ../source/release-notes/2.0.txt:401
msgid ""
"If you would like the shell not to run the ``.mongorc.js`` file "
"automatically, start the shell with :option:`--norc <mongo --norc>`."
msgstr ""

#: ../source/release-notes/2.0.txt:404
msgid "For more information, see the :binary:`~bin.mongo` reference."
msgstr ""

#: ../source/release-notes/2.0.txt:407
msgid "Most Commands Require Authentication"
msgstr ""

#: ../source/release-notes/2.0.txt:409
msgid ""
"In 2.0, when running with authentication (e.g. "
":setting:`~security.authorization`) *all* database commands require "
"authentication, *except* the following commands."
msgstr ""

#: ../source/release-notes/2.0.txt:413
msgid ":dbcommand:`isMaster`"
msgstr ""

#: ../source/release-notes/2.0.txt:415
msgid ":dbcommand:`authenticate`"
msgstr ""

#: ../source/release-notes/2.0.txt:417
msgid ":dbcommand:`getnonce`"
msgstr ""

#: ../source/release-notes/2.0.txt:419
msgid ":dbcommand:`buildInfo`"
msgstr ""

#: ../source/release-notes/2.0.txt:421
msgid ":dbcommand:`ping`"
msgstr ""

#: ../source/release-notes/2.0.txt:423
msgid ":dbcommand:`isdbgrid`"
msgstr ""

#: ../source/release-notes/2.0.txt:426
msgid "Resources"
msgstr ""

#: ../source/release-notes/2.0.txt:428
msgid "`MongoDB Downloads <http://mongodb.org/downloads>`_"
msgstr ""

#: ../source/release-notes/2.0.txt:429
msgid ""
"`All JIRA Issues resolved in 2.0 "
"<https://jira.mongodb.org/secure/IssueNavigator.jspa?mode=hide&requestId=11002>`_"
msgstr ""

#: ../source/release-notes/2.0.txt:430
#, python-format
msgid ""
"`All Backward Incompatible Changes "
"<https://jira.mongodb.org/issues/?filter=11023&jql=project%20%3D%20SERVER%20AND%20fixVersion%20in%20(10889%2C%2010886%2C%2010784%2C%2010596%2C%2010380%2C%2010261%2C%2010232)%20AND%20%22Backwards%20Compatibility%22%20in%20%20(%22Major%20Change%22%2C%20%22Minor%20Change%22)%20ORDER%20BY%20votes%20DESC%2C%20issuetype%20DESC%2C%20key%20DESC>`_"
msgstr ""

#~ msgid ""
#~ "v2.0 includes significant improvements to "
#~ "the :doc:`index </tutorial/roll-back-"
#~ "to-v1.8-index>`. Indexes are often 25% "
#~ "smaller and 25% faster (depends on "
#~ "the use case). When upgrading from "
#~ "previous versions, the benefits of the"
#~ " new index type are realized only "
#~ "if you create a new index or "
#~ "re-index an old one."
#~ msgstr ""

#~ msgid ""
#~ "Once you create new indexes, downgrading"
#~ " to 1.8.x will require a re-"
#~ "index of any indexes created using "
#~ "2.0. See :doc:`/tutorial/roll-back-"
#~ "to-v1.8-index`."
#~ msgstr ""

#~ msgid "For more information, see :doc:`/core/write-concern`."
#~ msgstr ""

#~ msgid ""
#~ ":program:`mongoimport` and :program:`mongoexport` "
#~ "now correctly adhere to the CSV "
#~ "spec for handling CSV input/output. This"
#~ " may break existing import/export workflows"
#~ " that relied on the previous "
#~ "behavior. For more information see "
#~ ":issue:`SERVER-1097`."
#~ msgstr ""

#~ msgid ""
#~ ":doc:`Journaling </core/journaling/>` is **enabled"
#~ " by default** in 2.0 for 64-bit "
#~ "builds. If you still prefer to run"
#~ " without journaling, start :program:`mongod` "
#~ "with the :option:`--nojournal <mongod "
#~ "--nojournal>` run-time option. Otherwise, "
#~ "MongoDB creates journal files during "
#~ "startup. The first time you start "
#~ ":program:`mongod` with journaling, you will"
#~ " see a delay as :program:`mongod` "
#~ "creates new files. In addition, you "
#~ "may see reduced write throughput."
#~ msgstr ""

#~ msgid ""
#~ "2.0 :program:`mongod` instances are "
#~ "interoperable with 1.8 :program:`mongod` "
#~ "instances; however, for best results, "
#~ "upgrade your deployments using the "
#~ "following procedures:"
#~ msgstr ""

#~ msgid ""
#~ "Shutdown your :program:`mongod` instance. "
#~ "Replace the existing binary with the "
#~ "2.0.x :program:`mongod` binary and restart "
#~ "MongoDB."
#~ msgstr ""

#~ msgid ""
#~ "Upgrade the :term:`secondary` members of "
#~ "the set one at a time by "
#~ "shutting down the :program:`mongod` and "
#~ "replacing the 1.8 binary with the "
#~ "2.0.x binary from the `MongoDB Download"
#~ " Page`_."
#~ msgstr ""

#~ msgid ""
#~ "When the primary has stepped down, "
#~ "shut down its instance and upgrade "
#~ "by replacing the :program:`mongod` binary "
#~ "with the 2.0.x binary."
#~ msgstr ""

#~ msgid "Upgrade :program:`mongos` routers in any order."
#~ msgstr ""

#~ msgid ""
#~ "In 2.0, :program:`mongos` instances can "
#~ "now determine when a member of a"
#~ " replica set becomes \"hidden\" without "
#~ "requiring a restart. In 1.8, "
#~ ":program:`mongos` if you reconfigured a "
#~ "member as hidden, you *had* to "
#~ "restart :program:`mongos` to prevent queries"
#~ " from reaching the hidden member."
#~ msgstr ""

#~ msgid ""
#~ "Set the ``continueOnError`` option for "
#~ "bulk inserts, in the :doc:`driver "
#~ "</applications/drivers>`, so that bulk insert"
#~ " will continue to insert any "
#~ "remaining documents even if an insert"
#~ " fails, as is the case with  "
#~ "duplicate key exceptions or network "
#~ "interruptions. The :dbcommand:`getLastError` command"
#~ " will report whether any inserts have"
#~ " failed, not just the last one. "
#~ "If multiple errors occur, the client "
#~ "will only receive the most recent "
#~ ":dbcommand:`getLastError` results."
#~ msgstr ""

#~ msgid ""
#~ "You can define a custom prompt for"
#~ " the :program:`mongo` shell. You can "
#~ "change the prompt at any time by"
#~ " setting the prompt variable to a "
#~ "string or a custom JavaScript function"
#~ " returning a string. For examples, "
#~ "see :ref:`shell-use-a-custom-prompt`."
#~ msgstr ""

#~ msgid "For more information, see the :program:`mongo` reference."
#~ msgstr ""

#~ msgid "On this page"
#~ msgstr ""

