========================
revokePrivilegesFromRole
========================

.. default-domain:: mongodb

Definition
----------

.. dbcommand:: revokePrivilegesFromRole

   Removes the specified privileges from the role. The command applies
   to the database on which you run the command. To revoke a privilege
   you must have the :authaction:`revokeAnyRole` action on the database
   the privilege targets. If the privilege targets multiple databases
   or the ``cluster`` resource, you must have the
   :authaction:`revokeAnyRole` action on the ``admin`` database.

   The :dbcommand:`revokePrivilegesFromRole` command uses the following syntax:

   .. code-block:: javascript

      { revokePrivilegesFromRole: "<role>",
        privileges: [
          { resource: { <resource> }, actions: [ "<action>", ... ] },
          ...
        ],
        writeConcern: <write concern document>
      }

   The :dbcommand:`revokePrivilegesFromRole` command has the following fields:

   .. include:: /reference/command/revokePrivilegesFromRole-field.rst

Examples
--------

The following are examples of the :dbcommand:`revokePrivilegesFromRole`
command:

.. example:: Resource patterns must match

   Consider a role ``myRole`` with the following privilege:

   .. code-block:: javascript

      { resource: { db: "products", collection: "" }, actions: [ "find",  "update" ] }

   You cannot revoke ``find`` from just one collection in the
   ``products`` database. Trying to remove the following would result in
   no change:

   .. code-block:: javascript

      db.runCommand ( {
                        revokePrivilegesFromRole: "myRole",
                        privileges: [
                                     { resource: { db: "products", collection: "gadgets" }, actions: [ "find" ] }
                                    ],
                        writeConcern: { w: "majority" , wtimeout: 5000 }
                    } )

   To revoke ``find`` from the role ``myRole``, you must match the
   resource exactly:

   .. code-block:: javascript

      db.runCommand ( { revokePrivilegesFromRole: "myRole",
                        privileges: [
                                      { resource: { db: "products", collection: "" }, actions: [ "find" ] }
                                    ],
                        writeConcern: { w: "majority" , wtimeout: 5000 }
                    } )

.. example:: ``revokePrivilegesFromRole`` command

   The following example of :dbcommand:`revokePrivilegesFromRole`
   removes ``find`` from the ``products`` database as well as from
   the ``system.indexes`` collections in all databases:

   .. code-block:: javascript

      { revokePrivilegesFromRole: "associate",
        privileges: [
          { resource: { db: "products", collection: "" }, actions: [ "find" ] },
          { resource: { db: "", collection: "system.indexes" }, actions: [ "find" ] }
        ],
        writeConcern: { w: "majority" , wtimeout: 5000 }
      }
