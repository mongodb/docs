.. _n8n:

===========================
Integrate MongoDB with n8n
===========================

.. default-domain:: mongodb

.. facet::
   :name: genre
   :values: reference

.. meta::
   :description: Integrate MongoDB with n8n to build agentic workflows without any code.
   :keywords: n8n, automation, workflow, vector database, vector search, AI agent, chat memory, automation platform, integration

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

You can integrate MongoDB with `n8n <https://n8n.io/>`__ to build automations 
and agentic workflows using their no-code visual interface. This page provides an 
overview of the integration and describes the different types of 
`nodes <https://docs.n8n.io/workflows/components/nodes/>`__  that you can use in your workflows.

Get Started with n8n
--------------------

To install n8n, refer to the `n8n documentation <https://docs.n8n.io/hosting/>`__
or run the following command using `npm <https://docs.n8n.io/hosting/installation/npm>`__
to quickly get started: 

.. code-block::

   npx n8n

To learn how to build a basic AI agent using n8n and MongoDB, 
see :ref:`n8n-get-started`.

.. important::

   All MongoDB n8n nodes require you to configure your MongoDB credentials
   in n8n. To learn more, see `MongoDB Credentials <https://docs.n8n.io/integrations/builtin/credentials/mongodb/>`__.

.. _n8n-mongodb-node:

MongoDB Node
------------

The MongoDB node allows you to automate work in MongoDB and integrate
MongoDB with other nodes in your n8n workflows.

Usage
~~~~~

Use the MongoDB node in any of your custom n8n workflows.

Operations
~~~~~~~~~~

The MongoDB node supports the following operations:

.. list-table::
   :widths: 20 20 60
   :stub-columns: 1
   :header-rows: 1
   
   * - Category
     - Operation
     - Description
    
   * - **Document Operations**
     - Aggregate Documents
     - Perform aggregation operations to process and transform data using 
       MongoDB aggregation pipelines.

   * -
     - Find Documents
     - Query and retrieve documents from your MongoDB collections with
       flexible filtering options.

   * -
     - Insert Documents
     - Add new documents to your MongoDB collections.

   * -
     - Update Documents
     - Modify existing documents in your collections.

   * -
     - Delete Documents
     - Remove documents from your collections.

   * -
     - Find and Replace Documents
     - Search for documents and replace them with new content.

   * -
     - Find and Update Documents
     - Search for documents and update specific fields.

   * - **Search Index Operations**
     - Create Search Indexes
     - Create new search and vector search indexes on your collections.

   * -
     - List Search Indexes
     - Retrieve information about existing search indexes.

   * -
     - Update Search Indexes
     - Modify existing search index configurations.

   * -
     - Drop Search Indexes
     - Remove search indexes that are no longer needed.

.. tip::

   To learn more, see 
   `n8n MongoDB node documentation <https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.mongodb/>`__

.. _n8n-vector-store:

MongoDB Atlas Vector Store Node
-------------------------------

The MongoDB Atlas Vector Store node enables you to
use :ref:`{+avs+} <avs-overview>` in your agentic workflows.

.. note::
   
   Before you can start using this node, configure the 
   :ref:`{+avs+} Index <avs-types-vector-search>`.

Usage
~~~~~

Use the MongoDB Vector Store node in the following 
workflow patterns:

.. tabs::

   .. tab:: AI Agent Tool
      :tabid: ai-agent

      Connect directly to an AI agent as a tool to perform 
      :ref:`agentic RAG <agentic-rag>`.

      .. code-block:: text

         AI Agent (tools connector) → MongoDB Vector Store

      For a tutorial, see :ref:`n8n-get-started`.

      To learn more about AI agents in n8n, see 
      `AI agent node <https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.agent/>`__.

   .. tab:: Regular Node
      :tabid: regular

      Use the MongoDB Atlas Vector Store as a regular node to insert or retrieve
      documents in your custom workflows:

      .. code-block:: text

         Trigger → MongoDB Vector Store (Insert/Get) → Next Node

      To learn more, see `Nodes <https://docs.n8n.io/workflows/components/nodes/>`__.

   .. tab:: As Retriever
      :tabid: retriever

      Use the node as a retriever in a question-answering chain:

      .. code-block:: text

         Question and Answer Chain → Vector Store Retriever → MongoDB Vector Store

      To learn more about Q&A in n8n, see `Question and Answer Chain node 
      <https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.chainretrievalqa/>`__.

   .. tab:: As Question-Answering Tool
      :tabid: qa-tool

      Use the node as a question-answering tool for an AI agent:

      .. code-block:: text

         AI Agent → Vector Store Question Answer Tool → MongoDB Vector Store

      To learn more about the question-answering tool in n8n, see 
      `Vector Store Question Answer Tool node <https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.toolvectorstore/>`__.

Operation Modes
~~~~~~~~~~~~~~~

The MongoDB Vector Store node supports the following operation modes.
The retrieve document mode is only available in certain workflow patterns.

.. list-table::
   :widths: 30 70
   :header-rows: 1
   :stub-columns: 1

   * - Operation Mode
     - Description

   * - Get Many
     - Retrieve multiple documents using similarity search based on a prompt.
       Returns documents with similarity scores.

   * - Insert Documents
     - Add new documents with vector embeddings to your collection.

   * - Retrieve Documents (As Vector Store for Chain/Tool)
     - Only available when you use the node as a retriever or a tool. 
       Must be connected to a retriever node or root node.

   * - Retrieve Documents (As Tool for AI Agent)
     - Only available when you use the node as a tool for an AI agent.
       The agent uses this vector store
       when the name and description are relevant to the prompt.

Parameters
~~~~~~~~~~

.. collapsible:: 
   :heading: MongoDB Vector Store Node Parameters
   :sub_heading: Configure the MongoDB Vector Store node with the following parameters.
   :expanded: false

   .. list-table::
      :widths: 20 20 20 40
      :stub-columns: 1
      :header-rows: 1

      * - Category
        - Setting
        - Operation Mode
        - Description

      * - **Common Parameters**
        - :guilabel:`MongoDB Collection`
        - All
        - Name of the MongoDB collection to use.

      * -
        - :guilabel:`Vector Index Name`
        - All
        - Name of the Vector Search index in your MongoDB collection.

      * -
        - :guilabel:`Embedding Field`
        - All
        - Field name in your documents that contains the vector embeddings.

      * -
        - :guilabel:`Metadata Field`
        - All
        - Field name in your documents that contains the text metadata.

      * - **Mode-Specific Parameters**
        - :guilabel:`Name`
        - Retrieve Documents (As Tool for AI Agent)
        - Name of the vector store tool for the AI agent.

      * -
        - :guilabel:`Description`
        - Retrieve Documents (As Tool for AI Agent)
        - Explanation for the LLM about what this tool does.

      * -
        - :guilabel:`Limit`
        - Retrieve Documents (As Tool for AI Agent)
        - Number of results to retrieve from the vector store.

      * - **Additional Options**
        - :guilabel:`Metadata Filter`
        - Get Many, Retrieve Documents (As Tool for AI Agent), Retrieve Documents (As Vector Store for Chain/Tool)
        - Filter results based on metadata criteria.

      * -
        - :guilabel:`Rerank Results`
        - Get Many, Retrieve Documents (As Tool for AI Agent), Retrieve Documents (As Vector Store for Chain/Tool)
        - Enable result reranking (requires connecting a reranker node).

.. tip::

   To learn more, see 
   `n8n MongoDB Vector Store node documentation <https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstoremongodbatlas/>`__

.. _n8n-chat-memory:

MongoDB Chat Memory Node
------------------------

The MongoDB Chat Memory node allows you to use MongoDB as a 
:ref:`memory store <avs-agent-memory>` for storing chat history in your AI workflows. 
This enables persistent conversation context across workflow executions.

Usage
~~~~~

You must use the MongoDB Chat Memory node as a `sub-node <https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/>`__
by adding it to the :guilabel:`Memory` section of an AI agent node. For a tutorial, see :ref:`n8n-get-started`.

.. note::

   If you add multiple MongoDB Chat Memory nodes to your workflow, all nodes
   access the same memory instance by default. For separate memory instances,
   use different session IDs in each memory node.

Parameters
~~~~~~~~~~

.. collapsible:: 
   :heading: MongoDB Chat Memory Node Parameters
   :sub_heading: Configure the MongoDB Chat Memory node with these parameters.
   :expanded: false

   .. list-table::
      :widths: 30 70
      :header-rows: 1

      * - Parameter
        - Description


      * - Session ID
        - Method for determining how the session key is identified.
          You can define the session key through a connected trigger, or you can define the key manually.

      * - Session Key
        - Unique identifier for the chat session.

      * - Collection Name
        - Name of the collection to store chat history. MongoDB creates the
          collection if it doesn't exist. Defaults to ``n8n_chat_histories``.

      * - Database Name
        - Name of the database to store chat history. If not provided, n8n uses
          the database from credentials.

      * - Context Window Length
        - Number of previous interactions to consider for context.

.. tip::

   To learn more, see 
   `n8n MongoDB Chat Memory node documentation <https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.memorymongochat/#node-parameters>`__
 
Additional n8n Resources
------------------------

To learn more about n8n, use the following resources:

- `n8n Documentation <https://docs.n8n.io/ai/>`__
- `n8n Integrations <https://n8n.io/integrations/>`__

.. toctree::
   :titlesonly:
   :hidden:

   Build an Agent </ai-integrations/n8n/build-ai-agent>
