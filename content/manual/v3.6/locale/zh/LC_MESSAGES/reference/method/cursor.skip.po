#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/reference/method/cursor.skip.txt:3
msgid "cursor.skip()"
msgstr ""

#: ../source/reference/method/cursor.skip.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/method/cursor.skip.txt:18
msgid ""
"Call the :method:`cursor.skip()` method on a cursor to control where "
"MongoDB begins returning results. This approach may be useful in "
"implementing paginated results."
msgstr ""

#: ../source/reference/method/cursor.skip.txt:24
msgid ""
"You must apply :method:`cursor.skip()` to the cursor before retrieving "
"any documents from the database."
msgstr ""

#: ../source/reference/method/cursor.skip.txt:27
msgid "The :method:`cursor.skip()` method has the following parameter:"
msgstr ""

#: ../source/includes/apiargs/method-cursor.skip-param.rst:7
msgid "Parameter"
msgstr ""

#: ../source/includes/apiargs/method-cursor.skip-param.rst:9
msgid "Type"
msgstr ""

#: ../source/includes/apiargs/method-cursor.skip-param.rst:11
msgid "Description"
msgstr ""

#: ../source/includes/apiargs/method-cursor.skip-param.rst:13
msgid "``offset``"
msgstr ""

#: ../source/includes/apiargs/method-cursor.skip-param.rst:15
msgid "number"
msgstr ""

#: ../source/includes/apiargs/method-cursor.skip-param.rst:17
#: ../source/includes/apiargs/method-cursor.skip-param.rst:26
msgid "The number of documents to skip in the results set."
msgstr ""

#: ../source/includes/apiargs/method-cursor.skip-param.rst
msgid "param number offset"
msgstr ""

#: ../source/reference/method/cursor.skip.txt:32
msgid "Pagination Example"
msgstr ""

#: ../source/reference/method/cursor.skip.txt:35
msgid "Using :method:`cursor.skip()`"
msgstr ""

#: ../source/reference/method/cursor.skip.txt:37
msgid ""
"The following JavaScript function uses :method:`cursor.skip()` to "
"paginate a collection in :term:`natural order`:"
msgstr ""

#: ../source/reference/method/cursor.skip.txt:52
msgid ""
"The :method:`cursor.skip()` method requires the server to scan from the "
"beginning of the input results set before beginning to return results. As"
" the offset increases, :method:`cursor.skip()` will become slower."
msgstr ""

#: ../source/reference/method/cursor.skip.txt:57
msgid "Using Range Queries"
msgstr ""

#: ../source/reference/method/cursor.skip.txt:59
msgid ""
"Range queries can use :ref:`indexes <indexes>` to avoid scanning unwanted"
" documents, typically yielding better performance as the offset grows "
"compared to using :method:`cursor.skip()` for pagination."
msgstr ""

#: ../source/reference/method/cursor.skip.txt:64
msgid "Descending Order"
msgstr ""

#: ../source/reference/method/cursor.skip.txt:66
msgid "Use this procedure to implement pagination with range queries:"
msgstr ""

#: ../source/reference/method/cursor.skip.txt:68
msgid ""
"Choose a field such as ``_id`` which generally changes in a consistent "
"direction over time and has a :ref:`unique index <index-type-unique>` to "
"prevent duplicate values,"
msgstr ""

#: ../source/reference/method/cursor.skip.txt:71
msgid ""
"Query for documents whose field is less than the start value using the "
":query:`$lt` and :method:`cursor.sort()` operators, and"
msgstr ""

#: ../source/reference/method/cursor.skip.txt:73
msgid "Store the last-seen field value for the next query."
msgstr ""

#: ../source/reference/method/cursor.skip.txt:75
msgid ""
"For example, the following function uses the above procedure to print "
"pages of student names from a collection, sorted approximately in order "
"of newest documents first using the ``_id`` field (that is, in "
"*descending* order):"
msgstr ""

#: ../source/reference/method/cursor.skip.txt:95
msgid ""
"You may then use the following code to print all student names using this"
" pagination function, using :bsontype:`MaxKey <data_maxkey>` to start "
"from the largest possible key:"
msgstr ""

#: ../source/includes/fact-ObjectId-timestamp-order.rst:1
msgid ""
"While :ref:`objectid` values should increase over time, they are not "
"necessarily monotonic. This is because they:"
msgstr ""

#: ../source/includes/fact-ObjectId-timestamp-order.rst:4
msgid ""
"Only contain one second of temporal resolution, so :ref:`objectid` values"
" created within the same second do not have a guaranteed ordering, and"
msgstr ""

#: ../source/includes/fact-ObjectId-timestamp-order.rst:7
msgid "Are generated by clients, which may have differing system clocks."
msgstr ""

#: ../source/reference/method/cursor.skip.txt:111
msgid "Ascending Order"
msgstr ""

#: ../source/reference/method/cursor.skip.txt:113
msgid ""
"Returning paginated results in ascending order is similar to the "
"previous, but uses :query:`$gt` with an *ascending* sort order:"
msgstr ""

#: ../source/reference/method/cursor.skip.txt:131
msgid ""
"Using this function is likewise similar, but with :bsontype:`MinKey "
"<data_minkey>` as the starting key:"
msgstr ""

# 267575062171488db44eaefa6c740780
#~ msgid "On this page"
#~ msgstr ""

# 1326bcb6e78147558966f01d66c73830
#~ msgid ""
#~ "Call the :method:`cursor.skip()` method on "
#~ "a cursor to control where MongoDB "
#~ "begins returning results. This approach "
#~ "may be useful in implementing \"paged\""
#~ " results."
#~ msgstr ""

# 4d7d221ddb8c4fcea8e3d90cce6d28b0
#~ msgid "You must specify a numeric value for :method:`~cursor.skip()`."
#~ msgstr ""

# 46a0db1460674288923921e4172ee531
#~ msgid "Behavior"
#~ msgstr ""

# f09ad40b947d44cc9165addf7ccd3e15
#~ msgid ""
#~ "Consider the following JavaScript function "
#~ "as an example of the skip "
#~ "function:"
#~ msgstr ""

# 0454e053c4de4359ab1e9a82648895bb
#~ msgid ""
#~ "The :method:`cursor.skip()` method is often"
#~ " expensive because it requires the "
#~ "server to walk from the beginning "
#~ "of the collection or index to get"
#~ " the offset or skip position before"
#~ " beginning to return results. As the"
#~ " offset (e.g. ``pageNumber`` above) "
#~ "increases, :method:`cursor.skip()` will become "
#~ "slower and more CPU intensive. With "
#~ "larger collections, :method:`cursor.skip()` may "
#~ "become IO bound."
#~ msgstr ""

# 6f0b627da3e143db9b38a9c729769d5c
#~ msgid ""
#~ "Consider using range-based pagination "
#~ "for these kinds of tasks. That is,"
#~ " query for a range of objects, "
#~ "using logic within the application to"
#~ " determine the pagination rather than "
#~ "the database itself. This approach "
#~ "features better index utilization, if "
#~ "you do not need to easily jump "
#~ "to a specific page."
#~ msgstr ""

