===================================
Security and MongoDB API Interfaces
===================================

.. default-domain:: mongodb

The following section contains strategies to limit risks related to
MongoDB's available interfaces including JavaScript, HTTP, and REST
interfaces.

JavaScript and the Security of the ``mongo`` Shell
--------------------------------------------------

The following JavaScript evaluation behaviors of the :program:`mongo`
shell represents risk exposures.

JavaScript Expression or JavaScript File
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The :program:`mongo` program can evaluate JavaScript expressions using
the command line :option:`--eval <mongo --eval>` option. Also, the
:program:`mongo` program can evaluate a JavaScript file (``.js``)
passed directly to it (e.g. ``mongo someFile.js``).

Because the :program:`mongo` program evaluates the JavaScript directly,
inputs should only come from trusted sources.

``.mongorc.js`` File
~~~~~~~~~~~~~~~~~~~~

If a ``.mongorc.js`` file exists [#mongorc-location]_, the :program:`mongo` shell will
evaluate a ``.mongorc.js`` file before starting. You can disable this
behavior by passing the :option:`mongo --norc` option.

.. [#mongorc-location] On Linux and Unix systems, :program:`mongo`
   reads the :file:`.mongorc.js` file from :file:`{$HOME}/.mongorc.js`
   (i.e. :file:`~/.mongorc.js`). On Windows, :program:`mongo.exe` reads
   the :file:`.mongorc.js` file from :file:`{%HOME%}\.mongorc.js` or
   :file:`{%HOMEDRIVE%}\{%HOMEPATH%}\.mongorc.js`.

HTTP Status Interface
---------------------

The HTTP status interface provides a web-based interface that includes
a variety of operational data, logs, and status reports regarding the
:program:`mongod` or :program:`mongos` instance. The HTTP interface is
always available on the port numbered ``1000`` greater than the primary
:program:`mongod` port. By default, the HTTP interface port is
``28017``, but is indirectly set using the :setting:`~net.port` option which
allows you to configure the primary :program:`mongod` port.

Without the :setting:`net.http.RESTInterfaceEnabled` setting, this interface is entirely
read-only, and limited in scope; nevertheless, this interface may
represent an exposure. To disable the HTTP interface, set the
:setting:`nohttpinterface` run time option or the
:option:`--nohttpinterface <mongod --nohttpinterface>` command line
option. See also :ref:`security-port-numbers`.

.. _rest-api:

REST API
--------

The REST API to MongoDB provides additional information and write
access on top of the HTTP Status interface. While the REST API does not
provide any support for insert, update, or remove operations, it does
provide administrative access, and its accessibility represents a
vulnerability in a secure environment. The REST interface is *disabled*
by default, and is not recommended for production use.

If you must use the REST API, please control and limit access to the
REST API. The REST API does not include any support for
authentication, even when running with :setting:`~security.authorization`
enabled.

See the following documents for instructions on restricting access to
the REST API interface:

- :doc:`/tutorial/configure-linux-iptables-firewall`
- :doc:`/tutorial/configure-windows-netsh-firewall`
