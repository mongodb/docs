.. _compression:
.. _network-compression:

===================
Network Compression
===================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

The {+driver-long+} provides a connection option to compress messages,
This reduces the amount of data passed over the network between MongoDB
and your application.

The driver supports the following algorithms:

1. `Snappy <https://google.github.io/snappy/>`__: available in MongoDB 3.4 and later.
#. `Zlib <https://zlib.net/>`__: available in MongoDB 3.6 and later.
#. `Zstandard <https://github.com/facebook/zstd/>`__: available in MongoDB 4.2 and later.

The driver tests against the following versions of these libraries:

- ``{+snappyVersion+}``
- ``{+zstdVersion+}``

If you specify multiple compression algorithms, the driver selects the
first one that is supported by the MongoDB instance that the driver is
connected to.

.. note::

   If your application requires Snappy or Zstandard compression, you must add
   :ref:`explicit dependencies <compression-dependencies>` for those algorithms.

.. _enable-compression:

Specify Compression Algorithms
------------------------------

You can enable compression on your connection by specifying the
algorithms in the following ways:

- Adding the ``compressors`` parameter to your ``ConnectionString`` instance
- Calling the ``compressorList()`` method from the ``MongoClientSettings`` builder

.. tabs::

   .. tab:: ConnectionString
      :tabid: specify compressors in connection string

      To enable compression on your connection in a `ConnectionString
      <{+core-api+}/ConnectionString.html>`__
      instance, specify the ``compressors`` parameter. You can specify
      one or more of the following values for the ``compressors`` parameter:

      - ``"snappy"`` for `Snappy <https://google.github.io/snappy/>`__ compression
      - ``"zlib"`` for `Zlib <https://zlib.net/>`__ compression
      - ``"zstd"`` for `Zstandard <https://github.com/facebook/zstd/>`__ compression

      The following example shows how to specify Snappy, Zlib, and
      Zstandard as the compression algorithms for a connection:

      .. literalinclude:: /examples/generated/NetworkCompressionTest.snippet.connection-string-compression-example.kt
         :language: kotlin
         :emphasize-lines: 2

   .. tab:: MongoClientSettings
      :tabid: specify compressors in MongoClientSettings

      To enable compression using within your `MongoClientSettings <{+core-api+}/MongoClientSettings.html>`__,
      call the `compressorList() <{+core-api+}/MongoClientSettings.Builder.html#compressorList(java.util.List)>`__
      builder method and pass one or more `MongoCompressor <{+core-api+}/MongoCompressor.html>`__
      instances as a parameter.

      You can specify compression algorithms by calling the following
      methods from ``MongoCompressor``:

      - ``createSnappyCompressor()`` for `Snappy <https://google.github.io/snappy/>`__ compression
      - ``createZlibCompressor()`` for `Zlib <https://zlib.net/>`__ compression
      - ``createZstdCompressor()`` for `Zstandard <https://github.com/facebook/zstd/>`__ compression

      The following example shows how to specify Snappy, Zlib, and
      Zstandard as the compression algorithms for a connection:

      .. literalinclude:: /examples/generated/NetworkCompressionTest.snippet.mongoclientsettings-compression-example.kt
         :language: kotlin
         :emphasize-lines: 8-10

.. _compression-dependencies:

Compression Algorithm Dependencies
----------------------------------

The JDK supports `Zlib <https://zlib.net/>`__ compression natively, but
`Snappy <https://google.github.io/snappy/>`__ and
`Zstandard <https://github.com/facebook/zstd/>`__ depend on open source
implementations. See
`snappy-java <https://github.com/xerial/snappy-java>`__ and
`zstd-java <https://github.com/luben/zstd-jni>`__ for details.
