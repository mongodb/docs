.. meta::
   :robots: noindex, nosnippet

.. _realminteger:

=======================
RealmInteger - .NET SDK
=======================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

Realm offers 
:dotnet-sdk:`RealmInteger <reference/Realms.RealmInteger-1.html>` as a 
special integer type you can use as a logical counter. ``RealmInteger<T>`` 
exposes an additional API that can more clearly express intent and generate 
better conflict resolution steps when using Synchronized Realms. The type 
argument ``<T>`` can be of type ``byte``, ``short``, ``int``, or ``long``. The 
following example shows how to use a ``RealmInteger`` property that maps to 
an ``int``:

.. literalinclude:: /examples/generated/dotnet/DataTypesSectionExamples.snippet.realmint-class.cs
   :language: csharp

Implementing a Counter
----------------------
Traditionally, you would implement a counter by reading a value, incrementing 
it, and then setting it (``myObject.Counter += 1``). This does not work well in 
an asynchronous situation like when two clients are offline. Consider 
the following scenario:

- The realm object has a ``counter`` property of type ``int``. It is currently 
  set to a value of ``10``.

- Clients 1 and 2 both read the ``counter`` property (``10``) and each increments 
  the value by ``1``.

- When each client regains connectivity and merges their changes, they expect a 
  value of 11, and there is no conflict. However, the counter value should be 
  ``12``!

When using a ``RealmInteger``, however, you can call the ``Increment()`` and 
``Decrement()`` methods, and to reset the counter, you set it to ``0``, just as 
you would an ``int``:

.. literalinclude:: /examples/generated/dotnet/DataTypesSectionExamples.snippet.realmint-use.cs
   :language: csharp

.. important::

   When you reset a ``RealmInteger``, you may run into the offline merge issue 
   described above.

A ``RealmInteger`` is backed by traditional ``integer`` type, so no schema 
migration is required when changing a property type from ``T`` to 
``RealmInteger<T>``.

