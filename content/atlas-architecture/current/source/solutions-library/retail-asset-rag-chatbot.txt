.. _arch-center-is-rag-chatbot:

========================================================
Launch an Agentic RAG Chatbot with MongoDB and Dataworkz
========================================================

.. facet::
   :name: genre
   :values: tutorial

.. meta::
   :keywords: document model, retail, chatbot, rag architecture, gen AI 
   :description: Discover how to leverage agentic AI using MongoDB and Dataworkz to enhance retail experiences.
   
.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Leverage agentic RAG using MongoDB and Dataworkz to enhance customers’
shopping experiences with a personalized chatbot.

**Use cases:** `Gen AI
<https://www.mongodb.com/use-cases/artificial-intelligence>`__,
`Personalization
<https://www.mongodb.com/solutions/use-cases/personalization>`__ 

**Industries:** `Retail
<https://www.mongodb.com/solutions/industries/retail>`__

**Products:** `MongoDB Atlas <http://mongodb.com/atlas>`__, `MongoDB Atlas
Vector Search
<https://www.mongodb.com/products/platform/atlas-vector-search>`__

**Partners:** `Dataworkz
<https://cloud.mongodb.com/ecosystem/dataworkz>`__, `NextJS <https://nextjs.org/>`__

Solution Overview
-----------------

With the rise of innovative technologies like generative AI and agents, 
retailers are adopting these solutions for various use cases. Examples include 
real-time customer assistance, personalized recommendations, and improved search
functionality. These advancements are transforming the way brands connect with 
customers in meaningful ways.

Recent studies reveal that `AI-powered chatbots boost online sales in
the United States by nearly 4% year-over-year
<https://www.reuters.com/business/retail-consumer/ai-influenced-shopping-boosts-online-holiday-sales-salesforce-data-shows-2025-01-06/>`__,
reinforcing the idea that AI is not just a trend, but a lasting driver of
growth in retail. :abbr:`RAG (Retrieval Augmented Generation)` is a cutting-edge 
technology that can further revolutionize the retail space. Building on this 
idea, this article presents a solution that uses MongoDB and Dataworkz to unify 
operational and unstructured data, resulting in better customer experiences.

What Is an Agent?
~~~~~~~~~~~~~~~~~

An agent is an artificial computational entity with an awareness of
its environment and associated data within the context. These agents
can interact in the case of ecommerce or perform a portion of
complex tasks as needed.

Retrieval-Augmented Generation
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

`RAG
<https://www.mongodb.com/resources/basics/artificial-intelligence/retrieval-augmented-generation>`__
is an approach that augments :abbr:`LLMs (Large Language Models)` with 
proprietary data so that they can generate more accurate and
context-aware responses while also reducing hallucinations. 

.. figure:: /includes/images/industry-solutions/rag-chatbot-conventional.svg
   :figwidth: 1200px
   :alt: Description of a conventional RAG architecture
   
   Figure 1. Conventional RAG

Agentic RAG
~~~~~~~~~~~

Agentic RAG introduces an AI agent-based implementation of RAG. In this model, 
the agent can access different tools and functions, enabling it to go 
beyond information retrieval and generation—it allows it to plan. Agents can 
determine if they need to retrieve specific information or not, decide which 
tool to use for the retrieval, and formulate queries. These capabilities are 
crucial as it enables the agent to pull information from multiple data sources,
and to handle complex queries that require more than one source to formulate
the response. Agentic RAG can enhance customer interactions and streamline 
processes across industries.

.. figure:: /includes/images/industry-solutions/rag-chatbot-agentic.svg
   :figwidth: 1200px
   :alt: Description of an agentic RAG architecture
   
   Figure 2. Agentic RAG

For more details see `Dataworkz Agentic RAG
<https://www.dataworkz.com/agentic-rag/>`__.

.. figure:: /includes/images/industry-solutions/rag-chatbot-table.svg
   :figwidth: 1200px
   :alt: Comparison between a conventional and an agentic RAG architecture
   
   Figure 3. Conventional vs agentic RAG comparison

Impact on the Retail Industry
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The retail industry quickly adopted generative AI. In 2024, `one
quarter of consumers used AI in their shopping experience <https://www.capgemini.com/wp-content/uploads/2025/01/Consumer-trends14012025.pdf>`__,
representing a 4% increase over the previous year.

Some generative AI use cases across retail include: 

- **Customer-support chatbots:** Gen AI-powered chatbots that provide real-time 
  assistance and are context-aware of business policies, user history, and 
  preferences.

- **Personalized product recommendations:** Customer
  recommendations based on their specific likes, needs,
  and past orders. These personalized recommendations make shopping more 
  enjoyable for customers and increase the chances of a successful purchase.

- **Dynamic marketing content:** Gen AI applications can generate personalized 
  promotions, emails, and messages for each customer, boosting engagement, 
  sales, and retention.

Reference Architectures
-----------------------

Introducing Dataworkz
~~~~~~~~~~~~~~~~~~~~~

Dataworkz is a RAG-as-a-service platform that
transforms how organizations build and deploy AI applications. Its agent-based 
architecture and graph-optimized retrieval help large enterprises to launch
sophisticated RAG applications in hours instead of months.

The platform eliminates the need for specialized AI teams through an
intuitive no-code builder that automatically implements best practices
in RAG development. Unlike traditional approaches that lock you into
early architectural decisions, Dataworkz enables rapid
experimentation—you can test different retrieval strategies, prompt
variations, and model combinations in a controlled environment before
committing to production.


Dataworkz delivers production-ready RAG applications without the traditional 
overhead of building and maintaining complex AI infrastructure.

This architecture consists of the following key components:

- Graph-optimized knowledge retrieval for complex relationships.
- Agent-based architecture for sophisticated reasoning.
- No-code builder with built-in best practices.
- Full lifecycle support from experimentation to production.
- :abbr:`BYO (Bring Your Own)` flexibility—LLM, embedding model, and vector database.
- Enterprise-grade security and scalability.

Leveraging MongoDB with Dataworkz
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Dataworkz streamlines the process of creating RAG pipelines by providing
a friendly experience to extract unstructured data,
configure a chunking strategy, and create vector embeddings. Dataworkz
RAG builder also allows developers to choose different retrieval
mechanisms—lexical, semantic, or graph, with different thresholds to
build the context for answering a user question.

The integration also enables real-time data processing and analytics, ensuring 
AI models use the most current data for accurate and relevant responses.

Agentic RAG Architecture
~~~~~~~~~~~~~~~~~~~~~~~~

To build transformational results, conventional RAG systems, which
primarily utilize vector search techniques, must integrate with
up-to-date information from operational databases. 

`MongoDB Atlas Vector Search
<https://www.mongodb.com/products/platform/atlas-search>`__ provides
built-in support for vector embeddings, which eliminates the need for a
separate vector database, simplifying the architecture and reducing
complexity.

With Dataworkz agents, retailers can offer controlled access to MongoDB 
collections by configuring them as tools. In many cases, customers have an API 
layer that abstracts the underlying collections. Dataworkz can integrate with 
REST API or GraphQL. 

Additionally, any RAG pipeline configured in Dataworkz can be a tool to an 
agent. This capability gives agents the ability to understand unstructured data in a 
SharePoint site, a confluence wiki page, or markdown depending on the user’s 
question.

Existing retailers with applications that leverage MongoDB as their data
platform can benefit from Dataworkz’s close integration with MongoDB
and their AI adoption can incorporate agentic RAG into their
solutions. 

Dataworkz agents can access multiple data sources and use reasoning LLMs
to decide which tool to use to answer a user’s question. 
An agent can access and switch between different MongoDB collections or 
databases to retrieve structured data like shipping status, customer profiles, 
preferences, and order histories. Additionally,
third party solutions like ERP (Epicor), and CRM (Salesforce) can
integrate through APIs exposed via the providers. Together,
these tools enable the agent to understand user questions in context and provide
personalized, relevant responses.

The following steps explain how a Dataworkz agent works: 

1. The Dataworkz agent framework organizes use cases into scenarios, such as 
   answering questions about store policies, searching an order, or providing 
   customer support.

2. The agent uses a reasoning LLM to plan how to answer a question based on the 
   user's query, conversation context, memory, and available tools, such as 
   access to MongoDB collections. The LLM determines a sequence of steps to 
   gather the necessary information. This process is iterative; after each step,
   the agent checks if it has enough context to provide an answer or if further
   retrieval and planning are needed.

3. Finally, the agent uses the gathered context to generate a response, take 
   action, or ask the user a clarifying question if needed.

.. figure:: /includes/images/industry-solutions/rag-chatbot-architecture.svg
   :figwidth: 1200px
   :alt: Dataworkz and MongoDB Agentic RAG architecture
   
   Figure 4. Dataworkz and MongoDB agentic RAG architecture

.. video:: https://www.youtube.com/watch?v=hPSEG6QYHkA

Build the Solution
------------------

See the ``README`` in the `GitHub repository
<https://github.com/mongodb-industry-solutions/retail-store-v2>`__ for full 
implementation details. The following steps explains how to create the application:

.. procedure::
   :style: normal

   .. step:: Replicate the demo database

      You can either use a publicly hosted, pre-populated cluster or
      provision your own cluster within your Atlas account and populate
      your database with the required data for the demo. If you choose
      to bring your own MongoDB, find a data dump `inside the
      repository
      <https://github.com/mongodb-industry-solutions/retail-store-v2/tree/main/dump/leafy_popup_store>`__
      to quickly replicate the database with all the necessary data and
      metadata with one quick `mongorestore
      <https://www.mongodb.com/docs/database-tools/mongorestore/>`__
      command.

   .. step:: Create Dataworkz RAG application

      Sign up to Dataworkz and create a RAG app for the e-commerce
      policies. You can use the PDF `inside the repository
      <https://github.com/mongodb-industry-solutions/retail-store-v2/blob/main/resources/LeafyCorpPolicy.pdf>`__
      to use as the e-commerce policy document. You can use this unstructured
      data as a tool for the Dataworkz agent.

   .. step:: Create the Dataworkz agent

      Connect to your MongoDB cluster from the previous step.
      Use `this guide
      <https://github.com/mongodb-industry-solutions/retail-store-v2/blob/main/resources/chatbot/README.md>`__
      to configure Dataworkz for MongoDB access.

   .. step:: Configure your application frontend

      For complete implementation details, including code samples,
      configuration files, and tutorial videos, visit the
      `GitHub repository <https://github.com/mongodb-industry-solutions/retail-store-v2>`__.

Key Learnings
-------------

- **Understand agentic RAG:** Agents broaden the
  possibilities of what can be done with the conventional RAG
  architecture. Adding a layer of decision-making enables agents to plan,
  take action and utilize their tools to improve
  context awareness and operational efficiency.

- **Integrate different technologies:** By combining the strengths of MongoDB 
  and Dataworkz, you can create 
  personalized experiences, deliver real-time assistance, streamline development
  processes and build distinctive features for your applications.

- **Create the future of retail with AI:** Use a RAG architecture to provide 
  customers with personalized content and context-aware support throughout their
  shopping experience.

- **Prototype and iterate quickly:** Agentic RAG relies on fast prototyping and 
  iterative validation. Choose a platform that lets you quickly configure 
  components, assess their impact, and securely deploy to production.

Authors
-------

- Angie Guemes, MongoDB
- Sachin Hejip, Engineering at Dataworkz

Learn More
----------

- :ref:`arch-center-is-ai-driven-realtime-pricing`
- :ref:`arch-center-is-product-description`
- :ref:`arch-center-is-rfid-retail`
