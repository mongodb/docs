# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: 2013-12-16 23:55+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/core/read-preference-mechanics.txt:6
msgid "Server Selection Algorithm"
msgstr ""

#: ../source/core/read-preference-mechanics.txt:16
msgid ""
"MongoDB drivers use a Server Selection algorithm to choose which replica "
"set member to use or, when connected to multiple :binary:`~bin.mongos` "
"instances, which :binary:`~bin.mongos` instance to use."
msgstr ""

#: ../source/core/read-preference-mechanics.txt:20
msgid "Server selection occurs once per operation."
msgstr ""

#: ../source/core/read-preference-mechanics.txt:30
msgid "Read Preference for Replica Sets"
msgstr ""

#: ../source/core/read-preference-mechanics.txt:32
msgid ""
"Server selection occurs once per operation and is governed by the "
":doc:`read preference </core/read-preference>` and ``localThresholdMS`` "
"settings."
msgstr ""

#: ../source/core/read-preference-mechanics.txt:36
#: ../source/core/read-preference-mechanics.txt:74
msgid "The read preference is re-evaluated for each operation."
msgstr ""

#: ../source/includes/fact-3.4-added-maxStalenessSeconds.rst:1
msgid ""
"MongoDB 3.4 adds the ``maxStalenessSeconds`` read preference option "
"``maxStalenessSeconds`` specifies the maximum replication lag, or "
"\"staleness\", that a :term:`secondary` can suffer and still be eligible "
"for read operations."
msgstr ""

#: ../source/includes/fact-important-maxStalenessSeconds-intended-use.rst:2
msgid ""
"The ``maxStalenessSeconds`` read preference option is intended for "
"applications that read from secondaries and want to avoid reading from a "
"secondary that has fallen overly far behind in replicating the primary's "
"writes. For example, a secondary might stop replicating due to a network "
"outage between itself and the primary. In that case, the client should "
"stop reading from the secondary until an administrator resolves the "
"outage and the secondary catches up."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-replica-sets.rst:5
#: ../source/includes/extracts/server-selection-read-preference-sharded-clusters.rst:5
msgid "Read Preference"
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-replica-sets.rst:6
#: ../source/includes/extracts/server-selection-read-preference-sharded-clusters.rst:6
msgid "Selection Process"
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-replica-sets.rst:8
#: ../source/includes/extracts/server-selection-read-preference-sharded-clusters.rst:8
msgid ":readmode:`primary` (Default)"
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-replica-sets.rst:10
msgid "The driver selects the primary."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-replica-sets.rst:12
#: ../source/includes/extracts/server-selection-read-preference-sharded-clusters.rst:12
msgid ":readmode:`secondary`"
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-replica-sets.rst:14
msgid ""
"The driver assembles a list of eligible secondary members. "
":ref:`maxStalenessSeconds <replica-set-read-preference-max-staleness>` "
"and :doc:`tag sets </tutorial/configure-replica-set-tag-sets>` can "
"further restrict the eligibility of the members."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-replica-sets.rst:20
msgid ""
"If the list of eligible members is not empty, the driver determines which"
" eligible member is the \"closest\" (i.e. the member with the lowest "
"average network round-trip-time) and calculates a latency window by "
"adding the average round-trip-time of this \"closest\" server and the "
"``localThresholdMS``. The  driver uses this latency window to pare down "
"the list of eligible members to those members that fall within this "
"window."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-replica-sets.rst:29
msgid ""
"From this list of eligible members that fall within the latency window, "
"the  driver randomly chooses an eligible member."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-replica-sets.rst:32
#: ../source/includes/extracts/server-selection-read-preference-sharded-clusters.rst:32
msgid ":readmode:`nearest`"
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-replica-sets.rst:34
msgid ""
"The driver assembles a list of eligible members (primary and "
"secondaries). :ref:`maxStalenessSeconds <replica-set-read-preference-max-"
"staleness>` and :doc:`tag sets </tutorial/configure-replica-set-tag-"
"sets>` can further limit the eligibility of the members."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-replica-sets.rst:41
msgid ""
"If the list of eligible members is not empty, the driver determines which"
" eligible member is the \"closest\" (i.e. the member with the lowest "
"average network round-trip-time) and calculates a latency window by "
"adding the average round-trip-time of this \"closest\" server and the "
"``localThresholdMS`` [#default-threshold]_. The driver uses this latency "
"window to pare down the list of eligible members to those members that "
"fall within this window."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-replica-sets.rst:50
msgid ""
"From this list of eligible members that fall within the latency window, "
"the driver randomly chooses an eligible member."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-replica-sets.rst:54
#: ../source/includes/extracts/server-selection-read-preference-sharded-clusters.rst:54
msgid ":readmode:`primaryPreferred`"
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-replica-sets.rst:56
msgid "If the primary is available, driver selects the primary."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-replica-sets.rst:58
#: ../source/includes/extracts/server-selection-read-preference-sharded-clusters.rst:58
msgid ""
"Otherwise, server selection follows the process for the read preference "
"``secondary``."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-replica-sets.rst:61
#: ../source/includes/extracts/server-selection-read-preference-sharded-clusters.rst:61
msgid ":readmode:`secondaryPreferred`"
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-replica-sets.rst:63
msgid ""
"Following the server selection process for the read preference "
"``secondary``, if a list of eligible secondary members is non-empty, "
"driver chooses an eligible secondary member."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-replica-sets.rst:67
msgid "Otherwise, if the list is empty, driver selects the primary."
msgstr ""

#: ../source/core/read-preference-mechanics.txt:48
msgid "Read Preference for Sharded Clusters"
msgstr ""

#: ../source/core/read-preference-mechanics.txt:51
msgid "Load Balancing"
msgstr ""

#: ../source/core/read-preference-mechanics.txt:53
msgid ""
"If there is more than one :binary:`~bin.mongos` instance in the "
"connection seed list, the driver determines which :binary:`~bin.mongos` "
"is the \"closest\" (i.e. the member with the lowest average network "
"round-trip-time) and calculates the latency window by adding the average "
"round-trip-time of this \"closest\" :binary:`~bin.mongos` instance and "
"the ``localThresholdMS``. The driver will load balance randomly across "
"the :binary:`~bin.mongos` instances that fall within the latency window."
msgstr ""

#: ../source/core/read-preference-mechanics.txt:63
msgid "Read Preference and Shards"
msgstr ""

#: ../source/core/read-preference-mechanics.txt:65
msgid ""
"For sharded clusters that have replica set shards, :binary:`~bin.mongos` "
"applies the read preference when reading from the shards. Server "
"selection is governed by the :doc:`read preference </core/read-"
"preference>` and :setting:`replication.localPingThresholdMs` settings."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-sharded-clusters.rst:10
msgid "The :binary:`~bin.mongos` selects the primary."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-sharded-clusters.rst:14
msgid ""
"The :binary:`~bin.mongos` assembles a list of eligible secondary members."
" :ref:`maxStalenessSeconds <replica-set-read-preference-max-staleness>` "
"and :doc:`tag sets </tutorial/configure-replica-set-tag-sets>` can "
"further restrict the eligibility of the members."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-sharded-clusters.rst:20
msgid ""
"If the list of eligible members is not empty, the :binary:`~bin.mongos` "
"determines which eligible member is the \"closest\" (i.e. the member with"
" the lowest average network round-trip-time) and calculates a latency "
"window by adding the average round-trip-time of this \"closest\" server "
"and the :setting:`replication.localPingThresholdMs` (or "
":option:`--localThreshold <mongos --localThreshold>` command line "
"option). The  :binary:`~bin.mongos` uses this latency window to pare down"
" the list of eligible members to those members that fall within this "
"window."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-sharded-clusters.rst:29
msgid ""
"From this list of eligible members that fall within the latency window, "
"the  :binary:`~bin.mongos` randomly chooses an eligible member."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-sharded-clusters.rst:34
msgid ""
"The :binary:`~bin.mongos` assembles a list of eligible members (primary "
"and secondaries). :ref:`maxStalenessSeconds <replica-set-read-preference-"
"max-staleness>` and :doc:`tag sets </tutorial/configure-replica-set-tag-"
"sets>` can further limit the eligibility of the members."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-sharded-clusters.rst:41
msgid ""
"If the list of eligible members is not empty, the :binary:`~bin.mongos` "
"determines which eligible member is the \"closest\" (i.e. the member with"
" the lowest average network round-trip-time) and calculates a latency "
"window by adding the average round-trip-time of this \"closest\" server "
"and the :setting:`replication.localPingThresholdMs` (or "
":option:`--localThreshold <mongos --localThreshold>` command line option)"
" [#default-threshold]_. The :binary:`~bin.mongos` uses this latency "
"window to pare down the list of eligible members to those members that "
"fall within this window."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-sharded-clusters.rst:50
msgid ""
"From this list of eligible members that fall within the latency window, "
"the :binary:`~bin.mongos` randomly chooses an eligible member."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-sharded-clusters.rst:56
msgid "If the primary is available, :binary:`~bin.mongos` selects the primary."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-sharded-clusters.rst:63
msgid ""
"Following the server selection process for the read preference "
"``secondary``, if a list of eligible secondary members is non-empty, "
":binary:`~bin.mongos` chooses an eligible secondary member."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-sharded-clusters.rst:67
msgid ""
"Otherwise, if the list is empty, :binary:`~bin.mongos` selects the "
"primary."
msgstr ""

#: ../source/core/read-preference-mechanics.txt:78
msgid "The default threshold value is 15 milliseconds."
msgstr ""

#~ msgid ""
#~ "Applications can configure the threshold "
#~ "used in this stage. The default "
#~ "\"acceptable latency\" is 15 milliseconds, "
#~ "which you can override in the "
#~ "drivers with their own "
#~ "``secondaryAcceptableLatencyMS`` option. For "
#~ ":program:`mongos` you can use the "
#~ ":option:`--localThreshold <mongos --localThreshold>` "
#~ "or :setting:`localThreshold` runtime options "
#~ "to set this value."
#~ msgstr ""

#~ msgid ""
#~ "The client should attempt to prefer "
#~ "current results, and any connection "
#~ "should read from the same member "
#~ "of the replica set as much as "
#~ "possible."
#~ msgstr ""

#~ msgid ""
#~ "Reuse a connection to specific "
#~ ":program:`mongod` for as long as "
#~ "possible after establishing a connection "
#~ "to that instance. This connection is "
#~ "*pinned* to this :program:`mongod`."
#~ msgstr ""

# b69856d1bd79421d970da75c435e2640
#~ msgid "Read Preference Processes"
#~ msgstr ""

# a1ee50c171bc40d78fe2557ee9cdb8f2
#~ msgid ""
#~ "MongoDB drivers use the following "
#~ "procedures to direct operations to "
#~ "replica sets and sharded clusters. To"
#~ " determine how to route their "
#~ "operations, applications periodically update "
#~ "their view of the replica set's "
#~ "state, identifying which members are up"
#~ " or down, which member is "
#~ ":term:`primary`, and verifying the latency "
#~ "to each :program:`mongod` instance."
#~ msgstr ""

# 207c2a7f86aa4d939b2f8fd0735878bf
#~ msgid "Member Selection"
#~ msgstr ""

# 98c4600613d14ee3815595536df24600
#~ msgid ""
#~ "Clients, by way of their drivers, "
#~ "and :program:`mongos` instances for sharded"
#~ " clusters, periodically update their view"
#~ " of the replica set's state."
#~ msgstr ""

# 15568f80270b461badd16faf99461598
#~ msgid ""
#~ "When you select non-:readmode:`primary` read"
#~ " preference, the driver will determine "
#~ "which member to target using the "
#~ "following process:"
#~ msgstr ""

# ba1007ac81fc428cb6bf68be9b31dcef
#~ msgid ""
#~ "Assembles a list of suitable members,"
#~ " taking into account member type "
#~ "(i.e. secondary, primary, or all "
#~ "members)."
#~ msgstr ""

# 30aee2ff1bb04538afc014bbe57fba97
#~ msgid "Excludes members not matching the tag sets, if specified."
#~ msgstr ""

# bd3acf0868b64d4daf2a1995a48102c1
#~ msgid ""
#~ "Determines which suitable member is the"
#~ " closest to the client in absolute"
#~ " terms."
#~ msgstr ""

# a882fe62a02c433da5a04d57f3c7f328
#~ msgid ""
#~ "Builds a list of members that are"
#~ " within a defined ping distance (in"
#~ " milliseconds) of the \"absolute nearest\""
#~ " member."
#~ msgstr ""

# 33bd30458f2e427d9d719262ccd632c0
#~ msgid ""
#~ "Selects a member from these hosts "
#~ "at random. The member receives the "
#~ "read operation."
#~ msgstr ""

# f65b61ba2d1b4f07925f453dd9a8b41f
#~ msgid ""
#~ "Drivers can then associate the thread"
#~ " or connection with the selected "
#~ "member. This :ref:`request association "
#~ "<replica-set-read-preference-behavior-"
#~ "requests>` is configurable by the "
#~ "application. See your :doc:`driver "
#~ "</applications/drivers>` documentation about request"
#~ " association configuration and default "
#~ "behavior."
#~ msgstr ""

# 1ad04b80efd14f2e9e6583a2ca51a92c
#~ msgid "Request Association"
#~ msgstr ""

# c538d7727d0744aa97c36eeb108de060
#~ msgid ""
#~ "*Request association* is configurable by "
#~ "the application. See your :doc:`driver "
#~ "</applications/drivers>` documentation about request"
#~ " association configuration and default "
#~ "behavior."
#~ msgstr ""

# b210af1dd2e54666a991f6608b7e2fda
#~ msgid ""
#~ "Because :term:`secondary` members of a "
#~ ":term:`replica set` may lag behind the"
#~ " current :term:`primary` by different "
#~ "amounts, reads for :term:`secondary` members"
#~ " may reflect data at different points"
#~ " in time. To prevent sequential reads"
#~ " from jumping around in time, the "
#~ "driver **can** associate application threads"
#~ " to a specific member of the "
#~ "set after the first read, thereby "
#~ "preventing reads from other members. The"
#~ " thread will continue to read from"
#~ " the same member until:"
#~ msgstr ""

# 4a1f3abc648f4488ab20c1f3217816bc
#~ msgid "The application performs a read with a different read preference,"
#~ msgstr ""

# 730397d8215e4916baca98ce03210869
#~ msgid "The thread terminates, or"
#~ msgstr ""

# 135d6d8029124c2bad660c53cf1b853a
#~ msgid ""
#~ "The client receives a socket exception,"
#~ " as is the case when there's a"
#~ " network error or when the "
#~ ":program:`mongod` closes connections during a"
#~ " :term:`failover`.  This triggers a "
#~ ":ref:`retry <replica-set-read-preference-"
#~ "behavior-retry>`, which may be "
#~ "transparent to the application."
#~ msgstr ""

# d18b79eac5fb4df1984a8b523edc8e86
#~ msgid ""
#~ "When using request association, if the"
#~ " client detects that the set has "
#~ "elected a new :term:`primary`, the "
#~ "driver will discard all associations "
#~ "between threads and members."
#~ msgstr ""

# 76c5bd51bc9842748b5643ce4a0e4bb0
#~ msgid "Auto-Retry"
#~ msgstr ""

# c281e3127c7e4c00b2ff824fb1b11609
#~ msgid ""
#~ "Connections between MongoDB drivers and "
#~ ":program:`mongod` instances in a "
#~ ":term:`replica set` must balance two "
#~ "concerns:"
#~ msgstr ""

# 413051bbfab14f5b90109f0db59a7570
#~ msgid ""
#~ "The client should minimize the amount"
#~ " of time that the database is "
#~ "inaccessible as the result of a "
#~ "connection issue, networking problem, or "
#~ ":term:`failover` in a replica set."
#~ msgstr ""

# f36449d60bbb43a388517aa3925a0165
#~ msgid "As a result, MongoDB drivers and :program:`mongos`:"
#~ msgstr ""

# 4cda32d3a870412c80c014e668b2d295
#~ msgid ""
#~ "Attempt to reconnect to a new "
#~ "member, obeying existing :ref:`read preference"
#~ " modes <replica-set-read-preference-"
#~ "modes>`, if the connection to "
#~ ":program:`mongod` is lost."
#~ msgstr ""

# 877de38de85b486cbdadc41a0acecf74
#~ msgid ""
#~ "Reconnections are transparent to the "
#~ "application itself. If the connection "
#~ "permits reads from :term:`secondary` members,"
#~ " after reconnecting, the application can"
#~ " receive two sequential reads returning "
#~ "from different secondaries. Depending on "
#~ "the state of the individual secondary"
#~ " member's replication, the documents can"
#~ " reflect the state of your database"
#~ " at different moments."
#~ msgstr ""

# e72153fe579f4977aa5a6d66d2358776
#~ msgid ""
#~ "Return an error *only* after attempting"
#~ " to connect to three members of "
#~ "the set that match the :ref:`read "
#~ "preference mode <replica-set-read-"
#~ "preference-modes>` and :ref:`tag set "
#~ "<replica-set-read-preference-tag-sets>`."
#~ "  If there are fewer than three "
#~ "members of the set, the client "
#~ "will error after connecting to all "
#~ "existing members of the set."
#~ msgstr ""

# 59b2414b2a594391866ea4e0465df57c
#~ msgid ""
#~ "After this error, the driver selects "
#~ "a new member using the specified "
#~ "read preference mode. In the absence "
#~ "of a specified read preference, the "
#~ "driver uses :readmode:`primary`."
#~ msgstr ""

# ff4cb3ccae944cc9965b75fc40e84a59
#~ msgid ""
#~ "After detecting a failover situation, "
#~ "[#fn-failover]_ the driver attempts to "
#~ "refresh the state of the replica "
#~ "set as quickly as possible."
#~ msgstr ""

# 330a2d7832d84930b6d645fc8a4d459a
#~ msgid ""
#~ "When a :term:`failover` occurs, all "
#~ "members of the set close all "
#~ "client connections that produce a socket"
#~ " error in the driver. This behavior"
#~ " prevents or minimizes :term:`rollback`."
#~ msgstr ""

# 55a0e38404224f5d9a55a7773ddaccb9
#~ msgid "Read Preference in Sharded Clusters"
#~ msgstr ""

# ab0ca3254c16405b8c11732fa3c05956
#~ msgid ""
#~ "Before version 2.2, :program:`mongos` did "
#~ "not support the :ref:`read preference "
#~ "mode semantics <replica-set-read-"
#~ "preference-modes>`."
#~ msgstr ""

# 12a269ed5e0746aaaf95fbb4857475e5
#~ msgid ""
#~ "In most :term:`sharded clusters <sharded "
#~ "cluster>`, each shard consists of a "
#~ ":term:`replica set`. As such, read "
#~ "preferences are also applicable. With "
#~ "regard to read preference, read "
#~ "operations in a sharded cluster are "
#~ "identical to unsharded replica sets."
#~ msgstr ""

# d86ba8d80df5484fbf5b34d86d5602d1
#~ msgid ""
#~ "Unlike simple replica sets, in sharded"
#~ " clusters, all interactions with the "
#~ "shards pass from the clients to "
#~ "the :program:`mongos` instances that are "
#~ "actually connected to the set members."
#~ " :program:`mongos` is then responsible for"
#~ " the application of read preferences, "
#~ "which is transparent to applications."
#~ msgstr ""

# e00e745a984a49c2a30869f09ddba740
#~ msgid ""
#~ "There are no configuration changes "
#~ "required for full support of read "
#~ "preference modes in sharded environments, "
#~ "as long as the :program:`mongos` is "
#~ "at least version 2.2. All "
#~ ":program:`mongos` maintain their own "
#~ "connection pool to the replica set "
#~ "members. As a result:"
#~ msgstr ""

# c3545ab14782427c9a3305febd49f82a
#~ msgid ""
#~ "A request without a specified preference"
#~ " has :readmode:`primary`, the default, "
#~ "unless, the :program:`mongos` reuses an "
#~ "existing connection that has a different"
#~ " mode set."
#~ msgstr ""

# 9895729a04174c21aeb9a52aa4445ca9
#~ msgid "To prevent confusion, always explicitly set your read preference mode."
#~ msgstr ""

# b6e1b876a81c4134ad150002807375fc
#~ msgid ""
#~ "All :readmode:`nearest` and latency "
#~ "calculations reflect the connection between"
#~ " the :program:`mongos` and the "
#~ ":program:`mongod` instances, not the client"
#~ " and the :program:`mongod` instances."
#~ msgstr ""

# d97c50873b934bf7858bf57d9ee7afe9
#~ msgid ""
#~ "This produces the desired result, "
#~ "because all results must pass through"
#~ " the :program:`mongos` before returning to"
#~ " the client."
#~ msgstr ""

# 8b165b96a75640809e27adb29b5c3541
# 6389e86e18b74b28b97814bbb5ac0318
# eae91c80c24c4ea181a5b58ebbe70556
# 44c516885f7f435ebc6e124a4bc31cff
# dc34fec7c2524392b2b66372138f1903
# 06e8230500dd4075a5b65c54dae7e231
#~ msgid "read preference"
#~ msgstr ""

# 8b165b96a75640809e27adb29b5c3541
#~ msgid "behavior"
#~ msgstr ""

# 6389e86e18b74b28b97814bbb5ac0318
#~ msgid "ping time"
#~ msgstr ""

# eae91c80c24c4ea181a5b58ebbe70556
#~ msgid "nearest"
#~ msgstr ""

# 44c516885f7f435ebc6e124a4bc31cff
#~ msgid "member selection"
#~ msgstr ""

# dc34fec7c2524392b2b66372138f1903
#~ msgid "sharding"
#~ msgstr ""

# 06e8230500dd4075a5b65c54dae7e231
#~ msgid "mongos"
#~ msgstr ""

#~ msgid ""
#~ "Applications can configure the threshold "
#~ "used in this stage. The default "
#~ "\"acceptable latency\" is 15 milliseconds, "
#~ "which you can override in the "
#~ "drivers with their own "
#~ "``secondaryAcceptableLatencyMS`` option. For "
#~ ":program:`mongos` you can use the "
#~ ":option:`--localThreshold <mongos --localThreshold>` "
#~ "or :setting:`~replication.localPingThresholdMs` runtime"
#~ " options to set this value."
#~ msgstr ""

#~ msgid ""
#~ "The client should attempt to prefer "
#~ "current results, and any connection "
#~ "should read from the same member "
#~ "of the replica set as much as "
#~ "possible. Requests should prefer :ref:`request"
#~ " association <replica-set-read-"
#~ "preference-behavior-requests>` (e.g. *pinning*)."
#~ msgstr ""

#~ msgid ""
#~ "Reuse a connection to a specific "
#~ ":program:`mongod` for as long as "
#~ "possible after establishing a connection "
#~ "to that instance. This connection is "
#~ "*pinned* to this :program:`mongod`."
#~ msgstr ""

