---
stepnum: 1
level: 4
ref: add-mongodb-user-to-db
title: "Add the CA certificate of the webhook into the Ops Manager HTTP server."
content: |

  After adding the absolute path to your webhook trust store to the following command, 
  run it to add your CA certificate to the Ops Manager Java trust store. 

  .. code-block:: sh

    sudo /opt/mongodb/mms/jdk/bin/keytool -noprompt -storepass changeit -import -trustcacerts -alias Webhook_CA -file <AbsolutePathofWebhookTrustStore> -keystore /opt/mongodb/mms/jdk/lib/security/cacerts

---
stepnum: 2
level: 4
ref: nav-add-credentials-automation
title: "Confirm that the webhook CA certificate has been added."
content: |

  Run the following command to confirm that the CA certificate has been added successfully.

  .. code-block:: sh

    sudo /opt/mongodb/mms/jdk/bin/keytool -noprompt -storepass changeit -list -v -keystore /opt/mongodb/mms/jdk/lib/security/cacerts | grep -i Webhook_CA

---
stepnum: 3
level: 4
ref: restart-ops-manager
title: "Restart Ops Manager."
content: |

  Restart the |onprem| server in order for the certificates to reload and the
  change to take effect. 

  .. code-block:: sh

    sudo systemctl restart mongodb-mms

---
stepnum: 4
level: 4
ref: add-credentials-automation-click-credentials
title: "Test an HTTPS request to Ops Manager to confirm connectivity."
content: |
  
  a. Convert your Java keystore file into PEM format.

     Java keystores are stored in either JKS (Java KeyStore) or PKCS12 format. These formats
     are incompatible with the curl ``--cacert`` option.

     Use a tool of your choosing, such as ``openssl``, to convert your Java keystore file.

  #. Replace the placeholder text in the following command with the path to your PEM certificate
     and your webhook URL: 
  
     .. code-block:: sh

        sudo curl -vvvv --cacert </path/to/cacerts.pem> <WebhookURL>

  #. Run the command to test your webhook's HTTPS connectivity with Ops Manager.
...
