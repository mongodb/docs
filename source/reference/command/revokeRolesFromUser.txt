===================
revokeRolesFromUser
===================

.. default-domain:: mongodb

Definition
----------

.. dbcommand:: revokeRolesFromUser

   Removes a one or more roles from a user. To use this command you must
   have the :authaction:`revokeAnyRole` action on *the role's* database.

   The :dbcommand:`revokeRolesFromUser` command uses the following syntax:

   .. code-block:: javascript

      { revokeRolesFromUser: "<user>",
        roles: [
          { role: "<role>", db: "<database>" } | "<role>",
          ...
        ],
        writeConcern: { <write concern> }
      }

   The command has the following fields:

   .. include:: /reference/command/revokeRolesFromUser-field.rst

Example
-------

Given a user ``Erin`` with the following roles:

.. code-block:: javascript

   "roles" : [
       { "role" : "assetsReader",
         "db" : "assets"
       },
       { "role" : "read",
         "db" : "stock"
       },
       { "role" : "readWrite",
         "db" : "products"
       }
   ]

The following :dbcommand:`revokeRolesFromUser` command removes the
:authrole:`read` role on the ``stock`` database and the
:authrole:`readWrite` role from the ``products`` database, which is the
database on which the command is run:

.. code-block:: javascript

   db.runCommand( { revokeRolesFromUser: "Erin",
                    roles: [
                       { role: "read", db: "stock"},
                       "readWrite"
                    ],
                    writeConcern: { w: "majority" }
                } )

The user ``Erin`` now has only one role:

.. code-block:: javascript

   "roles" : [
       { "role" : "assetsReader",
         "db" : "assets"
       }
   ]
