:noprevnext:
:orphan:

.. meta::
   :robots: noindex, nosnippet

.. _k8s-fts-vs-install:

==============================================
Install and use With MongoDB Community Edition
==============================================

.. meta::
   :description: Install the MongoDB Search and Vector Search using the MongoDB Controllers for Kubernetes Operator to run with MongoDB Community Edition in the Kubernetes cluster.

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol


You can use the |k8s-op-short| and deploy the ``mongot`` process
resources to run with MongoDB Community Edition v8.2.0 or higher on a
|k8s| cluster. The ``mongot`` process supports both |text-search| search
|vector-search|. The following procedure demonstrates how to deploy and
configure |text-search| and |vector-search| to run with a new or
existing replica set in your |k8s| cluster.

Prerequisites 
-------------

To deploy |text-search| and |vector-search|, you must have the
following: 

- A running |k8s| cluster.
- |k8s| command-line tool, ``kubectl``, configured to communicate with
  your cluster.
- |helm|, the package manager for |k8s|, to install the |k8s-op-short|.
- Bash v5.1 or higher for running the commands in this tutorial. 

Procedure 
---------

.. procedure:: 
   :style: normal 

   .. step:: Required. Set the environment variables. 

      To set the environment variables for use in the subsequent steps
      in this procedure, copy the following, set the values for the
      environment variables, and then load the environment variables: 

      .. literalinclude:: /includes/code-examples/search/01-search-community-deploy/env_variables.sh
         :language: yaml 
         :copyable: true 
         :linenos: 

   .. step:: Conditional. Add the MongoDB Helm repository. 

      |helm| automates the deployment and management of MongoDB
      instances on |k8s|. If you already have the Helm repository
      that contains the Helm chart for installing the |k8s-op-short|
      operator, or skip this step. Otherwise, add the Helm repository. 

      To add the Helm repository, copy, paste, and run the following: 

      .. io-code-block:: 
         :copyable: true 
         
         .. input:: /includes/code-examples/search/01-search-community-deploy/code_snippets/01_0090_helm_add_mogodb_repo.sh 
            :language: shell 
            :linenos:

         .. output:: /includes/code-examples/outputs/test_kind_search_community_snippets/01_0090_helm_add_mogodb_repo.out
            :language: shell 
            :linenos:
            :visible: false    

   .. step:: Conditional. Install the |k8s-op|. 

      The |k8s-op-short| watches ``MongoDBCommunity`` and
      ``MongoDBSearch`` custom resources and manages the lifecycle of
      your MongoDB deployments. If you already installed the |k8s-op|,
      skip this step. Otherwise, install the |k8s-op| from the Helm
      repository you added in the previous step. 

      To install the |k8s-op| in the ``mongodb`` namespace, copy, paste,
      and run the following commands: 

      .. io-code-block:: 
         :copyable: true 
         
         .. input:: /includes/code-examples/search/01-search-community-deploy/code_snippets/01_0100_install_operator.sh
            :language: shell 
            :linenos:

         .. output:: /includes/code-examples/outputs/test_kind_search_community_snippets/01_0100_install_operator.out
            :language: shell 
            :linenos:
            :visible: false 

   .. step:: Required. Create and load the MongoDB user secrets. 

      MongoDB requires authentication for secure access. In this step,
      you create three |k8s| secrets: 
      
      - ``mdb-admin-user-password``: Credentials for the  MongoDB
        administrator.
      - ``mdb-user-password``: Credentials for the user authorized to
        perform search queries.
      - ``mdbc-rs-search-sync-source-password``: Credentials for a
        dedicated search user used internally by the ``mongot`` 
        process to synchronize data and manage indexes. 
      
      |k8s-op-short| uses passwords from those secrets to automatically
      create the users in the MongoDB database.  

      To create the secrets, copy, paste, and run the following command: 

      .. io-code-block:: 
         :copyable: true 
         
         .. input:: /includes/code-examples/search/01-search-community-deploy/code_snippets/01_0305_create_mongodb_community_user_secrets.sh
            :language: shell 
            :linenos:

         .. output:: 
            :linenos:
            :visible: false 

            secret/mdb-admin-user-password created
            secret/mdbc-rs-search-sync-source-password created
            secret/mdb-user-password created

   .. step:: Conditional. Create and deploy the MongoDB Community resource. 

      If you've already deployed the MongoDB Community Edition, skip this
      step. Otherwise, deploy the MongoDB Community Edition.
      
      To deploy the MongoDB Community Edition, complete the following steps:
    
      a. Create a ``MongoDBCommunity`` custom resource named ``mdb-rs``. 
         
         The resource defines CPU and memory resources for the ``mongod``
         and ``mongodb-agent`` containers, and sets up the following three
         users: 

         .. list-table:: 
            :stub-columns: 1 
            :widths: 25 75

            * - ``mdb-user`` 
              - User that can restore database and run search queries. This
                user uses the ``mdb-user-password`` secret to perform
                these operations. 

            * - ``search-sync-source`` 
              - User that |text-search| uses to connect to MongoDB database
                in order to manage and build indexes. This user uses
                ``searchCoordinator`` role that the |k8s| operator creates.
                This uses uses the ``mdbc-rs-search-sync-source-password``
                secret to connect ``mongot`` to ``mongod``.

            * - ``admin-user``
              - Database admin user.

         The |k8s-op-short| uses this resource to configure a MongoDB 
         replica set with 3 members. 

         To create the secrets, copy, paste, and run the following
         commands: 

         .. literalinclude:: /includes/code-examples/search/01-search-community-deploy/code_snippets/01_0310_create_mongodb_community_resource.sh
            :language: shell 
            :copyable: true 
            :linenos:
     
      #. Wait for the ``MongoDBCommunity`` resource deployment to
         complete.

         When you apply the ``MongoDBCommunity`` custom resource, the
         |k8s| operator begins deploying the MongoDB nodes (pods). This
         step pauses the execution until the ``mdbc-rs`` resource's
         status phase is ``Running``, which indicates that the
         MongoDB Community replica set is operational.

         .. io-code-block:: 
            :copyable: true 
         
            .. input:: /includes/code-examples/search/01-search-community-deploy/code_snippets/01_0315_wait_for_community_resource.sh
               :language: shell 
               :linenos:

            .. output:: 
               :language: shell 
               :linenos:
               :visible: false 

               Waiting for MongoDBCommunity resource to reach Running phase...
               mongodbcommunity.mongodbcommunity.mongodb.com/mdbc-rs condition met

               MongoDBCommunity resource
               NAME      PHASE     VERSION
               mdbc-rs   Running   8.0.10

               Pods running in cluster minikube
               NAME                                           READY   STATUS    RESTARTS   AGE
               mdbc-rs-0                                      2/2     Running   0          2m30s
               mdbc-rs-1                                      2/2     Running   0          82s
               mdbc-rs-2                                      2/2     Running   0          38s
               mongodb-kubernetes-operator-5776c8b4df-cppnf   1/1     Running   0          7m37s

   .. step:: Required. Create and deploy the resource for |text-search| and |vector-search|.

      You can deploy one instance of the search node without any load
      balancing. To deploy, complete the following steps: 

      a. Create a ``MongoDBSearch`` custom resource named ``mdbc-rs``.

         This resource specifies the CPU and memory resource
         requirements for the search nodes. To learn more about the
         settings in this custom resource, see :ref:`k8s-fts-vs-settings`.

         .. literalinclude:: /includes/code-examples/search/01-search-community-deploy/code_snippets/01_0320_create_mongodb_search_resource.sh
            :language: shell 
            :copyable: true 
            :linenos:

      #. Wait for the ``MongoDBSearch`` resource deployment to
         complete.

         When you apply the ``MongoDBSearch`` custom resource, the
         |k8s| operator begins deploying the search nodes (pods). This
         step pauses the execution until the ``mdbc-rs``
         ``MongoDBSearch`` resource's status phase is ``Running``, which
         indicates that the MongoDB Search is operational.

         .. literalinclude:: /includes/code-examples/search/01-search-community-deploy/code_snippets/01_0325_wait_for_search_resource.sh
            :language: shell 
            :copyable: true 
            :linenos:

   .. step:: Optional. Verify the MongoDB Community resource status. 

      Ensure that the ``MongoDBCommunity`` resource deployment with
      ``MongoDBSearch`` was successful.

      .. literalinclude:: /includes/code-examples/search/01-search-community-deploy/code_snippets/01_0330_wait_for_community_resource.sh
         :language: javascript 
         :copyable: true 
         :linenos:

   .. step:: Optional. View all the running pods in your namespace. 

      View all the running pods in your namespace pods for the MongoDB
      replica set members, the |k8s-op|, and the Search nodes. 

      .. io-code-block:: 
         :copyable: true 
    
         .. input:: /includes/code-examples/search/01-search-community-deploy/code_snippets/01_0335_show_running_pods.sh
            :language: shell 
            :linenos:

         .. output:: /includes/code-examples/outputs/test_kind_search_community_snippets/01_0335_show_running_pods.out
            :language: shell 
            :linenos:
            :visible: false 

Next Steps 
----------

Now that you've successfully deployed |text-search| and |vector-search|
to use with MongoDB Community Edition, proceed to add data into your
MongoDB cluster, create |text-search| and |vector-search| indexes, and
run queries agaist your data. To learn more, see :ref:`k8s-use-fts-vs`.
