.. _arch-center-is-rocket-launch:

=====================================
App-Driven Intelligence with IoT data
=====================================

.. facet::
   :name: genre
   :values: tutorial

.. meta:: 
   :keywords: Internet of Things, IoT, Manufacturing, Analytics
   :description: Create real-time analysis on IoT data on the MongoDB developer data platform

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Monitoring a rocket launch using MongoDB Atlas and real-time IoT data.

**Use cases:** `Analytics <https://www.mongodb.com/solutions/use-cases/analytics>`__,
`IoT <https://www.mongodb.com/solutions/use-cases/internet-of-things>`__

**Industries:** `Manufacturing and Mobility <https://www.mongodb.com/solutions/industries/manufacturing>`__,
`Retail <https://www.mongodb.com/solutions/industries/retail>`__

**Products:** `MongoDB Atlas <http://mongodb.com/atlas>`__, 
`MongoDB Aggregation Pipeline <https://www.mongodb.com/docs/v7.0/core/aggregation-pipeline/>`__,
`MongoDB Time Series <https://www.mongodb.com/products/capabilities/time-series>`__,
`MongoDB Atlas Charts <https://www.mongodb.com/products/platform/atlas-charts>`__,
`MongoDB Atlas Database <https://www.mongodb.com/products/platform/atlas-database>`__,
`MongoDB Atlas Data Federation <https://www.mongodb.com/products/platform/atlas-data-federation>`__,
`MongoDB Atlas Search <https://www.mongodb.com/products/platform/atlas-search>`__,
`MongoDB Atlas SQL Interface <https://www.mongodb.com/products/platform/atlas-sql-interface>`__,
`MongoDB Atlas Triggers <https://www.mongodb.com/docs/atlas/atlas-ui/triggers/>`__

**Partners:** `Amazon S3 <https://www.mongodb.com/products/platform/atlas-cloud-providers/aws>`__,
`Tableau <https://www.mongodb.com/try/download/tableau-connector>`__

Solution Overview
-----------------

This solution uses MongoDB's multi-cloud database platform to analyze 
IoT data from a rocket launch. It uses an open-source data
set from a Blue Origin rocket launch, along with fictional data. 

A typical rocket launch spans an eight-hour period from when the
initial countdown begins to when the rocket payload is in orbit. During
this window, approximately one million datapoints are generated per second
by sensors that capture the rocket's performance. 

While the metrics from the rocket make up the bulk of the data in this 
use case, there are two other sources of data:

- **Notes** are created by rocket engineers and an automated system.
  Rocket engineers create notes when they want to mark anything to remember
  after launch. Additionally, an automated system watches metrics as they
  stream in and creates notes whenever values are outside of their
  expected threshold.

- **Weather data** is retrieved from a third party, stored in an Amazon S3
  bucket, and analyzed in combination with the launch data post-launch.

Other Applicable Industries and Use Cases
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The ability to perform real-time analysis on live IoT data is valuable
across many industries, such as:

- **Manufacturing:** Manufacturing machinery is loaded with IoT sensors that
  operate for hours at a time, similar to a rocket launch. Analysis must be done
  both during and after the machinery operates.

- **Supply chain logistics:** IoT sensors enable supply chain optimization
  in-transit and post-transit, from modes of transportation to the packages
  themselves.

- **E-commerce:** In addition to warehouses and shipping logistics, retailers
  use real-time insights to drive personalization or improve business
  processes.

Reference Architectures
-----------------------

The following diagram displays this solution's architecture. MongoDB's
flexible document model and Atlas tools streamline how you can store and
interact with your data. Real-time sensor data, engineer observations,
and real-time weather data can all be combined in MongoDB Atlas.

.. figure:: /includes/images/industry-solutions/rocket-launch-with-MongoDB.svg
   :figwidth: 1200px
   :alt: reference architecture with MongoDB

   Figure 1. Reference architecture with MongoDB

Data Model Approach
-------------------

This solution stores launch data in two Atlas collections: ``launchData``
and ``notes``. 

Initially, the rockets produce metrics as 4-element tuples
with the following structure: ``(device, timestamp, metric, value)``. These
values are then aggregated and written to the ``launchData`` collection
as a single document that represents metrics from a specific device at a
specific time, like in the following example document:

.. code-block:: javascript  
   :copyable: true  

   {
      _id: ObjectId("62f2f8b5800b621ee724bb94"),
      time: ISODate("2020-10-13T13:33:30.219Z"),
      meta: { device: 'truth' },
      TIME_NANOSECONDS_TAI: Long("1602596010219040000"),
      truth_pos_CON_ECEF_ECEF_M2: -5268929.31643981,
      truth_pos_CON_ECEF_ECEF_M1: -1387897.36558835,
      truth_pos_CON_ECEF_ECEF_M3: 3306577.65409484,
      truth_vel_CON_ECEF_ECEF_MpS2: -0.00810950305119273,
      truth_vel_CON_ECEF_ECEF_MpS3: 0.00414972080992211,
      truth_quat_CON2ECEF1: -0.458400879273711,
      truth_quat_CON2ECEF2: -0.176758395646534,
      truth_quat_CON2ECEF3: 0.511475024782863,
      truth_vel_CON_ECEF_ECEF_MpS1: 0.00220006484335229,
      truth_quat_CON2ECEF4: 0.7049953208872
   }

This document model also works with MongoDB time series collections. 

This data can be found in the `aerospace.archive.gz
<https://github.com/mongodb-developer/rocket-analytics/blob/main/data-Atlas/aerospace.archive.gz>`__
file in the solution GitHub repository.

Build the Solution
------------------

The solution's `GitHub <https://github.com/jayrunkel/rocketLivestream>`__ 
repository provides the data and code necessary for you to get started. Additionally,
the repository includes links to a three-part livestream recording that goes
over this solution in detail.

To get started with this solution, perform the following steps.

.. procedure::
   :style: normal

   .. step:: Set up your development environment

      Follow the setup steps listed in the GitHub repository's ``README``.
      This helps you get started with an Atlas free tier account and download
      Compass. 

   .. step:: Set up rocket launch and queries pre-launch
      
      The `first livestream recording <https://www.youtube.com/live/RUTsdqehWjo>`__
      walks you through the data captured in a rocket launch and how to write
      basic aggregation queries with the MongoDB query API. Then, you can perform
      basic analytics on the IoT sensor data with Atlas Charts.

   .. step:: Analyze data during launch
      
      The `second livestream recording <https://www.youtube.com/live/-jSQhlkaBCc>`__
      shows you how to embed charts into a React app for real-time analytics,
      and how to search for specific notes.

   .. step:: Find insights post-launch
      
      Finally, the `third livestream recording <https://www.youtube.com/watch?v=VOxy5VRk4g0>`__
      shows you how to combine rocket launch data and weather data to
      create post-launch insights and analyze them in Tableau.

Key Learnings
-------------

MongoDB's flexible database platform enables
application-driven IoT analytics by providing the following
capabilities:

- **Modeling data across multiple data types:** MongoDB's flexible document
  model allows you to store multiple types of data in one document, collection,
  or database, streamlining how you interact with your data and reducing the need
  for different tables.

- **Integrating functions to react to real-time data:** MongoDB's fast query
  capability allows you to analyze data in real-time.

- **Minimizing ETL processes with in-place aggregation:** MongoDB's aggregation 
  pipelines enable you to transform your data into computed results and store 
  them in a new collection.

Authors
-------

- Jay Runkel, MongoDB

Learn More
----------

- :ref:`arch-center-is-manufacturing-iot-data-hub-solution`
- :ref:`arch-center-is-power-smart-meter-analysis`
- :ref:`arch-center-is-audio-based-ai-diagnostics`