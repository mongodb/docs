.. _custom-role-api-enum:

===================
Custom Role Actions
===================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

This document lists the possible
:manual:`privilege actions </reference/privilege-actions/>`
you can assign to custom roles via the {+atlas-admin-api+}. Specify one
of these actions in the ``actions.action`` request body parameter when
you :doc:`create </reference/api/custom-roles-create-a-role>` or
:doc:`update </reference/api/custom-roles-create-a-role>` a custom role.

.. note::

   .. include:: /includes/fact-role-subset.rst

Query and Write Actions
-----------------------

- :authaction:`FIND <find>`

- :authaction:`INSERT <insert>`

- :authaction:`REMOVE <remove>`

- :authaction:`UPDATE <update>`

- :authaction:`BYPASS_DOCUMENT_VALIDATION <bypassDocumentValidation>`

- :authaction:`USE_UUID <useUUID>`

Database Management Actions
---------------------------

- :authaction:`CREATE_COLLECTION <createCollection>`

- :authaction:`CREATE_INDEX <createIndex>`

- :authaction:`DROP_COLLECTION <dropCollection>`

- :authaction:`ENABLE_PROFILER <enableProfiler>`

Change Stream Actions
---------------------

- :authaction:`CHANGE_STREAM <changeStream>`

Server Administration Actions
-----------------------------

- :authaction:`COLL_MOD <collMod>`

- :authaction:`COMPACT <compact>`

- :authaction:`CONVERT_TO_CAPPED <convertToCapped>`

- :authaction:`DROP_DATABASE <dropDatabase>`

- :authaction:`DROP_INDEX <dropIndex>`

- :authaction:`RE_INDEX <reIndex>`

- :authaction:`RENAME_COLLECTION_SAME_DB <renameCollectionSameDB>`

- :authaction:`SET_USER_WRITE_BLOCK <setUserWriteBlockMode>`

- :authaction:`BYPASS_USER_WRITE_BLOCK <bypassWriteBlockingMode>`

Session Actions
---------------

- :authaction:`LIST_SESSIONS <listSessions>`

- :authaction:`KILL_ANY_SESSION <killAnySession>`

Global Actions
---------------

Diagnostic Actions
~~~~~~~~~~~~~~~~~~

- :authaction:`COLL_STATS <collStats>`

- :authaction:`CONN_POOL_STATS <connPoolStats>`

- :authaction:`DB_HASH <dbHash>`

- :authaction:`DB_STATS <dbStats>`

- :authaction:`GET_CMD_LINE_OPTS <getCmdLineOpts>`

- :authaction:`GET_LOG <getLog>`

- :authaction:`GET_PARAMETER <getParameter>`

- :authaction:`GET_SHARD_MAP <getShardMap>`

- :authaction:`HOST_INFO <hostInfo>`

- :authaction:`IN_PROG <inprog>`

- :authaction:`LIST_DATABASES <listDatabases>`

- :authaction:`LIST_COLLECTIONS <listCollections>`

- :authaction:`LIST_SHARDS <listShards>`

- :authaction:`LIST_INDEXES <listIndexes>`

- :authaction:`NETSTAT <netstat>`

- ``REPLSET_GET_CONFIG``, see :manual:`Replication Actions </reference/privilege-actions/#replication-actions>`

- ``REPLSET_GET_STATUS``, see :manual:`Replication Actions </reference/privilege-actions/#replication-actions>`

- :authaction:`SERVER_STATUS <serverStatus>`

- :authaction:`SHARDING_STATE <shardingState>`

- :authaction:`VALIDATE <validate>`

- :authaction:`TOP <top>`

Deployment Management Actions
-----------------------------

- :authaction:`KILL_OP <killop>`

Sharding Actions
----------------

- ``ADD_SHARD_TO_ZONE``
- ``REMOVE_SHARD_FROM_ZONE``
- ``UPDATE_ZONE_KEY_RANGE``
- :authaction:`FLUSH_ROUTER_CONFIG <flushRouterConfig>`

To learn more, see :manual:`Sharding Actions </reference/privilege-actions#sharding-actions>`

{+adf+} Actions 
------------------------------

- :authaction:`SQL_GET_SCHEMA <sqlGetSchema>`

- :authaction:`SQL_SET_SCHEMA <sqlSetSchema>`

- :authaction:`VIEW_ALL_HISTORY <viewAllHistory>`

- :authaction:`OUT_TO_S3 <outToS3>` 

- :authaction:`STORAGE_GET_CONFIG <storageGetConfig>` 

- :authaction:`STORAGE_SET_CONFIG <storageSetConfig>` 
