---
title: "{{method}}"
level: 4
ref: upgrade-master-version
replacement:
  om: |
    - Set :opsmgrkube:`spec.version` to the new |onprem| version. 
    - If you upgraded your :ref:`application database <appdb-om-arch>`, set 
      :opsmgrkube:`spec.applicationDatabase.version` to the compatible MongoDB 
      version. 
    - *(Optional)* If you might need to downgrade, set 
      :setting:`spec.featureCompatibilityVersion`.

    For example, the following resource updates |onprem| from 4.0 to 5.0 and the 
    application database to MongoDB ``4.2.11-ent``. 

    .. literalinclude:: /reference/k8s/example-ops-manager.yaml
      :language: yaml
      :linenos:
  
  mdb: |
    - Set :setting:`spec.version` to the desired MongoDB version.
    - Set :setting:`spec.featureCompatibilityVersion` to the current
      working MongoDB version:

    .. code-block:: yaml

      ---
      apiVersion: mongodb.com/v1
      kind: MongoDB
      metadata:
        name: my-standalone-downgrade
      spec:
        version: "4.2.2-ent"
        featureCompatibilityVersion: "4.0"
        type: Standalone
        project: my-project
        credentials: my-credentials
        persistent: false
      ...

    .. include:: /includes/admonitions/fact-featureCompatibilityVersion.rst

---
title: Reapply the configuration to |k8s|.
stepnum: 2
level: 4
ref: apply-k8s-config
replacement: 
  om: | 
    .. code-block:: none

       kubectl apply -f <om-resource-specification>.yaml

    |k8s| automatically reconfigures your deployment with the new 
    specifications. You can see these changes reflected in your |mms| or 
    :cloudmgr:`Cloud Manager </>` application.

  mdb: |
    .. code-block:: none

       kubectl apply -f <standalone-config>.yaml

    |k8s| automatically reconfigures your deployment with the new 
    specifications. You can see these changes reflected in your |mms| or 
    :cloudmgr:`Cloud Manager </>` application.

...
