======================
Get All Database Users
======================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. include:: /includes/fact-projects-groups-synonyms.rst

.. include:: /includes/api-base-url.rst

.. include:: /includes/api-requirements.rst

Syntax
------

.. code-block:: sh

   GET /api/atlas/v1.0/groups/{GROUP-ID}/databaseUsers

Request Path Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1

   * - Parameter
     - Required/Optional
     - Description

   * - ``GROUP-ID``

     - Required.

     - Unique identifier for the :ref:`project <group-id>`.

Request Query Parameters
~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/no-query-parameters-list.rst

Request Body Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/no-body-parameters.rst

Response Elements
~~~~~~~~~~~~~~~~~

If you set the query element ``envelope`` to ``true``, the response is
wrapped by the ``content`` object.

The HTTP response returns a JSON document that includes the following objects:

``results``
+++++++++++

An array of documents, each representing one database user.

.. include:: /includes/api/list-tables/database-users-get-response.rst

``links``
+++++++++

An array of documents, representing a :ref:`link <atlas-api-linking>` to one or more
sub-resources and/or related resources such as :ref:`list pagination
<atlas-api-lists>`. See :ref:`api-linking` for more information.

``totalCount``
++++++++++++++

The total number of items in the result set. This value may be higher than the
number of objects in the ``results`` array if the entire result set is
paginated.

Example Request
---------------

Request
~~~~~~~

.. include:: /includes/extracts/fact-api-requirements-modify.rst



.. code-block:: none

   curl -i -u "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest "https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794dee37132bb7b/databaseUsers?pretty=true"

Response
~~~~~~~~

.. code-block:: none

   HTTP/1.1 200 OK

   {
     "links" : [ ... ],
     "results" : [
       {
         "databaseName" : "admin",
         "groupId" : "5356823b3794dee37132bb7b",
         "labels" : [],
         "links" : [ ... ],
         "roles" : [ {
           "databaseName" : "staging",
           "roleName" : "readWrite"
         }, {
           "databaseName" : "production",
           "roleName" : "read"
         } ],
         "scopes": [],
         "username" : "susan"
       },
       ...
     ],
     "totalCount" : 4
   }
