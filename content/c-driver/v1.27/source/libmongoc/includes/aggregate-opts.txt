:orphan:

..
   Generated with build/generate-opts.py
   DO NOT EDIT THIS FILE

``opts`` may be NULL or a BSON document with additional command options:

* ``readConcern``: Construct a `mongoc_read_concern_t <{+api-libmongoc+}/mongoc_read_concern_t.html>`__ and use `mongoc_read_concern_append <{+api-libmongoc+}/mongoc_read_concern_append.html>`__ to add the read concern to ``opts``. See the example code for `mongoc_client_read_command_with_opts <{+api-libmongoc+}/mongoc_client_read_command_with_opts.html>`__. Read concern requires MongoDB 3.2 or later, otherwise an error is returned.
* ``writeConcern``: Construct a `mongoc_write_concern_t <{+api-libmongoc+}/mongoc_write_concern_t.html>`__ and use `mongoc_write_concern_append <{+api-libmongoc+}/mongoc_write_concern_append.html>`__ to add the write concern to ``opts``. See the example code for `mongoc_client_write_command_with_opts <{+api-libmongoc+}/mongoc_client_write_command_with_opts.html>`__.
* ``sessionId``: First, construct a `mongoc_client_session_t <{+api-libmongoc+}/mongoc_client_session_t.html>`__ with `mongoc_client_start_session <{+api-libmongoc+}/mongoc_client_start_session.html>`__. You can begin a transaction with `mongoc_client_session_start_transaction <{+api-libmongoc+}/mongoc_client_session_start_transaction.html>`__, optionally with a `mongoc_transaction_opt_t <{+api-libmongoc+}/mongoc_transaction_opt_t.html>`__ that overrides the options inherited from opts-source, and use `mongoc_client_session_append <{+api-libmongoc+}/mongoc_client_session_append.html>`__ to add the session to ``opts``. See the example code for `mongoc_client_session_t <{+api-libmongoc+}/mongoc_client_session_t.html>`__.
* ``bypassDocumentValidation``: Set to ``true`` to skip server-side schema validation of the provided BSON documents.
* ``collation``: Configure textual comparisons. See :ref:`Setting Collation Order <setting_collation_order>`, and `the MongoDB Manual entry on Collation <https://www.mongodb.com/docs/manual/reference/collation/>`_. Collation requires MongoDB 3.2 or later, otherwise an error is returned.
* ``serverId``: To target a specific server, include an int32 "serverId" field. Obtain the id by calling `mongoc_client_select_server <{+api-libmongoc+}/mongoc_client_select_server.html>`__, then `mongoc_server_description_id <{+api-libmongoc+}/mongoc_server_description_id.html>`__ on its return value.
* ``batchSize``: An ``int32`` representing number of documents requested to be returned on each call to `mongoc_cursor_next <{+api-libmongoc+}/mongoc_cursor_next.html>`__
* ``let``: A BSON document consisting of any number of parameter names, each followed by definitions of constants in the MQL Aggregate Expression language.
* ``comment``: A `bson_value_t <{+api-libbson+}/bson_value_t.html>`__ specifying the comment to attach to this command. The comment will appear in log messages, profiler output, and currentOp output. Only string values are supported prior to MongoDB 4.4.
* ``hint``: A document or string that specifies the index to use to support the query predicate.
