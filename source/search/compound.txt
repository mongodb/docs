:template: guide

.. _guide-search-compound:

===================================
Querying with the Compound Operator
===================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Overview
--------

.. short-description::

   Retrieve documents in MongoDB with a query on multiple fields.

In this guide, you will learn how to use multiple search operators in
a compound query using the aggregation pipeline.

.. time:: 15

What You'll Need
----------------

- A MongoDB account. See :ref:`guides-create-atlas-account`.
- An Atlas cluster. See :ref:`guides-create-a-cluster`.
- Sample datasets :ref:`loaded into your cluster <guides-load-sample-data>`.
- A search index with default settings and dynamic indexing. See 
  :ref:`guides-search-dynamic`. 

Procedure
---------

.. procedure::
   :style: normal

   .. include:: /includes/navigate_to_collections.rst

   .. step:: In the right-hand pane, click ``sample_supplies``, 
      then click the ``sales`` collection.

   .. step:: Run a query on your index using the Aggregation Pipeline.

      .. procedure::
         :style: connected

         .. step:: Click 
            the :guilabel:`Aggregation` tab.

         .. step:: If you do not see a pipeline with an initial
            stage window in the right pane, click 
            :guilabel:`Create New` and select :guilabel:`Pipeline`.

         .. step:: In the stage window, click on the dropdown menu
            labeled :guilabel:`Select...` and select the 
            :guilabel:`$search` stage.

         .. step:: Replace the placeholder code with the following
            ``compound`` operator:

            .. code-block:: json

               {
               "compound": {
                  "filter": [{
                     "text": {
                     "query": "Online",
                        "path": "purchaseMethod"
                     }
                  }],
                  "should": [{
                     "text": {
                     "query": "notepad",
                        "path": "items"
                     }
                  }]
               }
               }

         .. step:: Review the results of the compound search in the
            right-hand pane. Your results should include the fields listed 
            in the following sample document. 
            
            .. note:: 
               
               The fields will not always appear in the same order 
               for every returned document.

            .. code-block:: json
               :copyable: false

               items: Array
               storeLocation: "Denver"
               customer: Object
               couponUsed: false
               purchaseMethod: "Online"
               _id: ObjectID('5bd761dcae323e45a93cd06e')
               saleDate: 2013-11-22T18:49:45.212+00:00

            You can expand ``Array`` and ``Object`` fields to view their 
            contents by clicking on them.

            Due to the ``filter`` operator, only records with a 
            ``purchaseMethod`` value of ``Online`` appear. 
            Additionally, due to the ``should`` operator, 
            records with an ``items`` value of ``notepad`` score
            higher than those without.

         You now have a ``$search`` aggregation stage with a compound
         search definition. 

Summary
-------

If you successfully completed the procedure in this guide, you have
created an Atlas Search aggregation stage with a compound operator,
and have seen how different clauses in the operator interact to 
focus your search results across multiple axes. In the next guide, you
will learn how to group search results using facets.

.. guide-next::