========================
MMS Automation Checklist
========================

.. default-domain:: mongodb

.. include:: /includes/admonition-automation-is-beta.rst

MMS Automation allows you to deploy, configure, and manage MongoDB
deployments with the MMS UI.  MMS Automation relies on an Automation
Agent, which must be installed on every server in the deployment.  The
Automation Agents periodically poll the MMS service to determine the
current goal, and continually report their status to MMS.

There are two ways to install the Automation Agent on your servers.
First, you can simply install the Automation Agent on all
existing hardware.  Second, you can use MMS Provisioning to
automatically create Amazon Web Services (AWS) EC2 instances that have
the Automation Agent pre-installed.

Using Own Hardware
------------------

- If you deploy Automation manually, ensure that you have one
  Automation Agent on every server.

- If you deploy the agent manually, you must create MongoDB's
  :setting:`dbpath` and the directory for the MongoDB binaries and
  ensure that the user running the agent has ``Write`` permissions on these
  directories.

  If you install using the ``rpm`` or ``deb`` packages, the Automation
  Agent runs as the ``mongod`` user. If you install using the ``tar.gz``
  you can run the agent as any user.

Using MMS Provisioning (Amazon Web Services)
--------------------------------------------

- When you deploy with MMS Provisioning, you must choose an AWS
  Security Group. Please ensure that the Security Group that you
  choose allows inbound traffic on all MongoDB ports within the
  Security Group, and SSH access from all IPs.

- Ensure that you provide MMS with the correct AWS security
  credentials (i.e. the Access Key ID and Secret Access Key).

- You must have at least one security group configured before
  deploying. If you are deploying into a VPC the VPC must exist before
  provisioning.

- If you attempt to provision larger instances, be aware that Amazon
  often has a limited number of these instances in any given region
  which may prevent provisioning. If you reach this limit MMS will
  provide an error message in the :guilabel:`Provision Machines
  Table` in the :guilabel:`Provisioning` tab.

- AWS accounts have restrictions that limit the number of
  instances you can deploy. if you reach this limit, you must contact
  AWS support to raise this limit. If you reach this limit MMS will
  provide an error message in the :guilabel:`Provision Machines
  Table` in the :guilabel:`Provisioning` tab.

All Deployments
---------------

Networking
~~~~~~~~~~

All hosts must be able to allow communication between MongoDB
ports. The default is ``27017``, but you can configure alternate port
ranges in the MMS interface.

.. only:: saas

   The Automation Agent *must* be able to connect to
   ``mms.mongodb.com`` on port ``443`` (i.e. ``https``.)

.. _automation-agent-directories:

Directory and File Permissions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The Automation Agent directories and files require the permissions
describe here. Paths and filenames vary depending on the operating system.

Automation Agent Directory
``````````````````````````

The agent directory and the agent configuration file require *Read* and
*Execute* permissions for the user that runs the Automation Agent.

On RHEL, CentOS, Amazon Linux, & Ubuntu, the agent directory is
``/etc/mongodb-mms``. The agent stores its configuration in the
``automation-agent.config`` file in that directory:

On other Linux systems and on OS X, you will define the agent
directory during installation. The agent stores its configuration in
the ``local.config`` file in that directory.

Supporting Files
````````````````

Supporting files include the Monitoring Agent, the MongoDB binaries, and a
backup copy of the JSON cluster configuration file. The directory that
stores these requires ``Read``, ``Write``, and ``Execute`` permissions for the user
that runs the Automation Agent. The agent requires write permissions
are so that the agent can write to the cluster configuration file.

On RHEL, CentOS, Amazon Linux, & Ubuntu, Automation stores these in the
same directory as the Automation Agent.

On other Linux operating systems and on OS X, Automation stores these in
the ``/var/lib/mongodb-mms-automation`` directory.

Log File
````````

The log file requires ``Write`` permission for the user that runs the
Automation Agent. By default, the agent logs events in the following log
file:

.. code-block:: none

   /var/log/mongodb-mms-automation/automation-agent.log

The Automation Agent's configuration file specifies the location of the
log file, as well as the  log level and log-rotation settings.

Cluster Configuration
~~~~~~~~~~~~~~~~~~~~~

After completing the cluster configuration, always ensure that the
cluster deployment plan satisfies the needs of your
deployment. Always double check hostnames and ports before
confirming the cluster deployment.

Sizing
~~~~~~

- Ensure that you provision machines with enough space to run MongoDB
  and support the requirements of your data set.

- Ensure that you provision sufficient machines to run your
  deployment. Each :program:`mongod` should run on its own host.

Operating System
~~~~~~~~~~~~~~~~

The Automation Agent only supports Linux and OS X hosts. The
Automation Agent does not support Windows.
