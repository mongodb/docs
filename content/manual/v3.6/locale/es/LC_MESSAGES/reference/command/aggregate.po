# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: 2014-04-08 19:02+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/reference/command/aggregate.txt:3
msgid "aggregate"
msgstr ""

#: ../source/reference/command/aggregate.txt:15
msgid ""
"Performs aggregation operation using the :doc:`aggregation pipeline "
"</reference/operator/aggregation-pipeline>`. The pipeline allows users to"
" process data from a collection or other source with a sequence of stage-"
"based manipulations."
msgstr ""

#: ../source/reference/command/aggregate.txt:20
msgid "The command has following syntax:"
msgstr ""

#: ../source/reference/command/aggregate.txt:41
msgid ""
"The :dbcommand:`aggregate` command takes the following fields as "
"arguments:"
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:7
msgid "Field"
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:9
msgid "Type"
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:11
msgid "Description"
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:13
msgid "``aggregate``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:15
#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:143
msgid "string"
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:17
#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:168
msgid ""
"The name of the collection or view that acts as the input for the "
"aggregation pipeline. Use ``1`` for collection agnostic commands."
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:22
msgid "``pipeline``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:24
msgid "array"
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:26
#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:175
msgid ""
"An array of :doc:`aggregation pipeline stages </reference/operator"
"/aggregation-pipeline>` that process and transform the document stream as"
" part of the aggregation pipeline."
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:32
msgid "``explain``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:34
#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:44
#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:85
msgid "boolean"
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:36
#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:183
msgid ""
"Optional. Specifies to return the information on the processing of the "
"pipeline."
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:42
msgid "``allowDiskUse``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:46
#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:191
msgid ""
"Optional. Enables writing to temporary files. When set to ``true``, "
"aggregation stages can write data to the :file:`_tmp` subdirectory in the"
" :setting:`~storage.dbPath` directory."
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:54
msgid "``cursor``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:56
#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:102
#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:114
#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:154
msgid "document"
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:58
#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:201
msgid ""
"Specify a document that contains options that control the creation of the"
" cursor object."
msgstr ""

#: ../source/includes/deprecation-aggregate-wo-cursor.rst:1
msgid ""
"MongoDB 3.6 removes the use of :dbcommand:`aggregate` command **without**"
" the ``cursor`` option unless the command includes the ``explain`` "
"option. Unless you include the ``explain`` option, you must specify the "
"cursor option."
msgstr ""

#: ../source/includes/deprecation-aggregate-wo-cursor.rst:6
msgid "To indicate a cursor with the default batch size, specify ``cursor: {}``."
msgstr ""

#: ../source/includes/deprecation-aggregate-wo-cursor.rst:9
msgid ""
"To indicate a cursor with a non-default batch size, use ``cursor: { "
"batchSize: <num> }``."
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:67
msgid "``maxTimeMS``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:69
msgid "non-negative integer"
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:71
#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:212
msgid ""
"Optional. Specifies a time limit in milliseconds for processing "
"operations on a cursor. If you do not specify a value for maxTimeMS, "
"operations will not time out. A value of ``0`` explicitly specifies the "
"default unbounded behavior."
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:76
#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:217
msgid ""
"MongoDB terminates operations that exceed their allotted time limit using"
" the same mechanism as :method:`db.killOp()`. MongoDB only terminates an "
"operation at one of its designated :term:`interrupt points <interrupt "
"point>`."
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:83
msgid "``bypassDocumentValidation``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:87
#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:226
msgid ""
"Optional. Available only if you specify the :pipeline:`$out` aggregation "
"operator."
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:92
#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:231
msgid ""
"Enables :samp:`aggregate` to bypass document validation during the "
"operation. This lets you insert documents that do not meet the validation"
" requirements."
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:100
msgid "``readConcern``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:104
#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:241
msgid "Optional. Specifies the :term:`read concern`."
msgstr ""

#: ../source/includes/fact-readConcern-syntax.rst:1
msgid "The readConcern option has the following syntax:"
msgstr ""

#: ../source/includes/fact-readConcern-option-description.rst:1
msgid "Possible read concern levels are:"
msgstr ""

#: ../source/includes/fact-readConcern-option-description.rst:3
msgid ":readconcern:`\"local\"`. This is the default read concern level."
msgstr ""

#: ../source/includes/fact-readConcern-option-description.rst:5
msgid ""
":readconcern:`\"available\"`. This is the default for reads against "
"secondaries when :ref:`afterClusterTime` and `\"level\"` are unspecified."
"  The query returns the instance's most recent data."
msgstr ""

#: ../source/includes/fact-readConcern-option-description.rst:9
msgid ""
":readconcern:`\"majority\"`. Available for replica sets that use "
":ref:`WiredTiger storage engine <storage-wiredtiger>`."
msgstr ""

#: ../source/includes/fact-readConcern-option-description.rst:12
msgid ""
":readconcern:`\"linearizable\"`. Available for read operations on the "
":replstate:`primary <PRIMARY>` only."
msgstr ""

#: ../source/includes/fact-readConcern-option-description.rst:15
msgid ""
"For more formation on the read concern levels, see :ref:`read-concern-"
"levels`."
msgstr ""

#: ../source/includes/fact-readConcern-option-description.rst:18
msgid ""
"For :readconcern:`\"local\"` (default) or :readconcern:`\"majority\"` "
"read concern level, you can specify the ``afterClusterTime`` option to "
"have the read operation return data that meets the level requirement and "
"the specified after cluster time requirement. For more information, see "
":ref:`afterClusterTime`."
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:112
msgid "``collation``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:116
#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:251
msgid "Optional."
msgstr ""

#: ../source/includes/extracts/collation-option.rst:1
msgid "Specifies the :ref:`collation <collation>`  to use for the operation."
msgstr ""

#: ../source/includes/extracts/collation-description.rst:1
msgid ""
":doc:`Collation </reference/collation>` allows users to specify language-"
"specific rules for string comparison, such as rules for lettercase and "
"accent marks."
msgstr ""

#: ../source/includes/extracts/collation-option-specification.rst:2
msgid "The collation option has the following syntax:"
msgstr ""

#: ../source/includes/extracts/collation-option-specification.rst:17
msgid ""
"When specifying collation, the ``locale`` field is mandatory; all other "
"collation fields are optional. For descriptions of the fields, see :ref"
":`collation-document-fields`."
msgstr ""

#: ../source/includes/extracts/collation-option.rst:7
msgid ""
"If the collation is unspecified but the collection has a default "
"collation (see :method:`db.createCollection()`), the operation uses the "
"collation specified for the collection."
msgstr ""

#: ../source/includes/extracts/collation-unspecified.rst:1
msgid ""
"If no collation is specified for the collection or for the operations, "
"MongoDB uses the simple binary comparison used in prior versions for "
"string comparisons."
msgstr ""

#: ../source/includes/extracts/collation-single-per-operation.rst:2
msgid ""
"You cannot specify multiple collations for an operation. For example, you"
" cannot specify different collations per field, or if performing a find "
"with a sort, you cannot use one collation for the find and another for "
"the sort."
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:122
msgid "``hint``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:124
msgid "string or document"
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:126
#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:259
msgid ""
"Optional. The index to use for the aggregation. The index is on the "
"initial collection/view against which the aggregation is run."
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:129
#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:262
msgid ""
"Specify the index either by the index name or by the index specification "
"document."
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:134
#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:267
msgid ""
"The ``hint`` does not apply to :pipeline:`$lookup` and "
":pipeline:`$graphLookup` stages."
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:141
msgid "``comment``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:145
#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:276
msgid ""
"Optional. Users can specify an arbitrary string to help trace the "
"operation through the database profiler, currentOp, and logs."
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:152
msgid "``writeConcern``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:156
#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:285
msgid ""
"Optional. A document that expresses the :doc:`write concern </reference"
"/write-concern>` to use with :pipeline:`$out` stage."
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:159
#: ../source/includes/apiargs/dbcommand-aggregate-field.rst:288
msgid "Omit to use the default write concern with the :pipeline:`$out` stage."
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst
msgid "field string aggregate"
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst
msgid "field array pipeline"
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst
msgid "field boolean explain"
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst
msgid "field boolean allowDiskUse"
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst
msgid "field document cursor"
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst
msgid "field non-negative integer maxTimeMS"
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst
msgid "field boolean bypassDocumentValidation"
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst
msgid "field document readConcern"
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst
msgid "field document collation"
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst
msgid "field string or document hint"
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst
msgid "field string comment"
msgstr ""

#: ../source/includes/apiargs/dbcommand-aggregate-field.rst
msgid "field document writeConcern"
msgstr ""

#: ../source/reference/command/aggregate.txt:52
msgid ""
":doc:`aggregation pipeline </reference/operator/aggregation-pipeline>` "
"introduces the :pipeline:`$out` operator to allow :dbcommand:`aggregate` "
"command to store results to a collection."
msgstr ""

#: ../source/reference/command/aggregate.txt:56
msgid ""
"For more information about the aggregation pipeline :doc:`/core"
"/aggregation-pipeline`, :doc:`/reference/aggregation`, and :doc:`/core"
"/aggregation-pipeline-limits`."
msgstr ""

#: ../source/reference/command/aggregate.txt:61
msgid "Example"
msgstr ""

#: ../source/reference/command/aggregate.txt:67
msgid ""
"Rather than run the :dbcommand:`aggregate` command directly, most users "
"should use the :method:`db.collection.aggregate()` helper provided in the"
" :binary:`~bin.mongo` shell or the equivalent helper in their driver. In "
"2.6 and later, the :method:`db.collection.aggregate()` helper always "
"returns a cursor."
msgstr ""

#: ../source/reference/command/aggregate.txt:73
msgid ""
"Except for the first two examples which demonstrate the command syntax, "
"the examples in this page use the :method:`db.collection.aggregate()` "
"helper."
msgstr ""

#: ../source/reference/command/aggregate.txt:78
msgid "Aggregate Data with Multi-Stage Pipeline"
msgstr ""

#: ../source/reference/command/aggregate.txt:80
msgid "A collection ``articles`` contains documents such as the following:"
msgstr ""

#: ../source/reference/command/aggregate.txt:91
msgid ""
"The following example performs an :dbcommand:`aggregate` operation on the"
" ``articles`` collection to calculate the count of each distinct element "
"in the ``tags`` array that appears in the collection."
msgstr ""

#: ../source/reference/command/aggregate.txt:107
msgid ""
"In the :binary:`~bin.mongo` shell, this operation can use the "
":method:`db.collection.aggregate()` helper as in the following:"
msgstr ""

#: ../source/reference/command/aggregate.txt:119
msgid "Use $currentOp on an Admin Database"
msgstr ""

#: ../source/reference/command/aggregate.txt:121
msgid ""
"The following example runs a pipeline with two stages on the admin "
"database. The first stage runs the :pipeline:`$currentOp` operation and "
"the second stage filters the results of that operation."
msgstr ""

#: ../source/reference/command/aggregate.txt:139
msgid ""
"The :dbcommand:`aggregate` command does not specify a collection and "
"instead takes the form `{aggregate: 1}`. This is because the initial "
":pipeline:`$currentOp` stage does not draw input from a collection. It "
"produces its own data that the rest of the pipeline uses."
msgstr ""

#: ../source/reference/command/aggregate.txt:144
msgid ""
"The new :method:`db.aggregate()` helper has been added to assist in "
"running collectionless aggregations such as this. The above aggregation "
"could also be run like :ref:`this <admin-pipeline-currentOp>` example."
msgstr ""

#: ../source/reference/command/aggregate.txt:150
msgid "Return Information on the Aggregation Operation"
msgstr ""

#: ../source/reference/command/aggregate.txt:152
msgid ""
"The following aggregation operation sets the optional field ``explain`` "
"to ``true`` to return information about the aggregation operation."
msgstr ""

#: ../source/reference/command/aggregate.txt:165
msgid "The ``explain`` output is subject to change between releases."
msgstr ""

#: ../source/reference/command/aggregate.txt:167
msgid ":method:`db.collection.aggregate()` method"
msgstr ""

#: ../source/reference/command/aggregate.txt:170
msgid "Aggregate Data using External Sort"
msgstr ""

#: ../source/reference/command/aggregate.txt:172
msgid ""
"Aggregation pipeline stages have :ref:`maximum memory use limit <agg-"
"memory-restrictions>`. To handle large datasets, set ``allowDiskUse`` "
"option to ``true`` to enable writing data to temporary files, as in the "
"following example:"
msgstr ""

#: ../source/reference/command/aggregate.txt:186
#: ../source/reference/command/aggregate.txt:302
msgid ":method:`db.collection.aggregate()`"
msgstr ""

#: ../source/reference/command/aggregate.txt:189
msgid "Aggregate Data Specifying Batch Size"
msgstr ""

#: ../source/reference/command/aggregate.txt:191
msgid ""
"To specify an *initial* batch size, specify the ``batchSize`` in the "
"``cursor`` field, as in the following example:"
msgstr ""

#: ../source/reference/command/aggregate.txt:205
msgid ""
"The ``{batchSize: 0 }`` document specifies the size of the *initial* "
"batch size only. Specify subsequent batch sizes to :ref:`OP_GET_MORE "
"<wire-op-get-more>` operations as with other MongoDB cursors. A "
"``batchSize`` of ``0`` means an empty first batch and is useful if you "
"want to quickly get back a cursor or failure message, without doing "
"significant server-side work."
msgstr ""

#: ../source/reference/command/aggregate.txt:213
msgid "Specify a Collation"
msgstr ""

#: ../source/reference/command/aggregate.txt:217
msgid "A collection ``myColl`` has the following documents:"
msgstr ""

#: ../source/reference/command/aggregate.txt:225
msgid "The following aggregation operation includes the :ref:`collation` option:"
msgstr ""

#: ../source/reference/command/aggregate.txt:235
msgid ""
"For descriptions on the collation fields, see :ref:`collation-document-"
"fields`."
msgstr ""

#: ../source/reference/command/aggregate.txt:239
msgid "Hint an Index"
msgstr ""

#: ../source/reference/command/aggregate.txt:243
msgid "Create a collection ``foodColl`` with the following documents:"
msgstr ""

#: ../source/reference/command/aggregate.txt:254
msgid "Create the following indexes:"
msgstr ""

#: ../source/reference/command/aggregate.txt:261
msgid ""
"The following aggregation operation includes the ``hint`` option to force"
" the usage of the specified index:"
msgstr ""

#: ../source/reference/command/aggregate.txt:272
msgid "Override Default Read Concern"
msgstr ""

#: ../source/reference/command/aggregate.txt:274
msgid ""
"To override the default read concern level of :readconcern:`\"local\"`, "
"use the ``readConcern`` option. The :dbcommand:`getMore` command uses the"
" ``readConcern`` level specified in the originating "
":dbcommand:`aggregate` command.s"
msgstr ""

#: ../source/reference/command/aggregate.txt:279
msgid ""
"The following operation on a replica set specifies a :doc:`read concern "
"</reference/read-concern>` of :readconcern:`\"majority\"` to read the "
"most recent copy of the data confirmed as having been written to a "
"majority of the nodes."
msgstr ""

#: ../source/includes/fact-enable-majority-readConcern.rst:1
msgid ""
"To use :term:`read concern` level of :readconcern:`\"majority\"`, replica"
" sets must use :ref:`WiredTiger storage engine <storage-wiredtiger>` and "
"election :rsconf:`protocol version 1 <protocolVersion>`."
msgstr ""

#: ../source/includes/fact-enable-majority-readConcern.rst:5
msgid ""
"Starting in MongoDB 3.6, support for read concern "
":readconcern:`\"majority\"` is enabled by default. For MongoDB 3.6.1 - "
"3.6.x, you can disable read concern :readconcern:`\"majority\"`. For more"
" information, see :ref:`3.6-disable-read-concern-majority`."
msgstr ""

#: ../source/includes/fact-aggregate-readConcern.rst:1
msgid ""
"To use a :doc:`read concern </reference/read-concern>` level of "
":readconcern:`\"majority\"`, you cannot include the :pipeline:`$out` "
"stage."
msgstr ""

#: ../source/includes/fact-readConcern-most-recent-data-in-node.rst:1
msgid ""
"Regardless of the :term:`read concern` level, the most recent data on a "
"node may not reflect the most recent version of the data in the system."
msgstr ""

#: ../source/includes/usage-read-concern-majority.rst:1
msgid ""
"To ensure that a single thread can read its own writes, use "
":readconcern:`\"majority\"` read concern and :writeconcern:`\"majority\"`"
" write concern against the primary of the replica set."
msgstr ""

# 7b5d380b052e4bb7b6398bcf1eb947cd
#~ msgid ""
#~ "Performs aggregation operation using the "
#~ ":doc:`aggregation pipeline </reference/operator"
#~ "/aggregation-pipeline>`. The pipeline allows "
#~ "users to process data from a "
#~ "collection with a sequence of stage-"
#~ "based manipulations."
#~ msgstr ""

# 9de1c7e03b924d569be518183db7be92
#~ msgid ""
#~ "The :dbcommand:`aggregate` command adds "
#~ "support for returning a cursor, supports"
#~ " the ``explain`` option, and enhances "
#~ "its sort operations with an external "
#~ "sort facility."
#~ msgstr ""

# 631811689ddf482bb036afc5f7587d97
#~ msgid ""
#~ "In the :program:`mongo` shell, this "
#~ "operation can use the "
#~ ":method:`~db.collection.aggregate()` helper as in"
#~ " the following:"
#~ msgstr ""

# 20a8bb297ae848b1861c34d577ceaa29
#~ msgid ""
#~ "In 2.6 and later, the "
#~ ":method:`~db.collection.aggregate()` helper always "
#~ "returns a cursor."
#~ msgstr ""

# 4869974dc9cf4431b0affa5f5558cd09
#~ msgid ""
#~ "If an error occurs, the "
#~ ":method:`~db.collection.aggregate()` helper throws "
#~ "an exception. In previous versions, the"
#~ " helper returned a document with the"
#~ " error message and code, and ``ok``"
#~ " status field not equal to ``1``, "
#~ "same as the :dbcommand:`aggregate` command."
#~ msgstr ""

# 5905a6ebd0cd4a2aa6894f602c2406c2
#~ msgid ""
#~ "The intended readers of the ``explain``"
#~ " output document are humans, and not"
#~ " machines, and the output format is"
#~ " subject to change between releases."
#~ msgstr ""

# f499972aa7df4400b54cbe2746e7b7e1
#~ msgid "Aggregate Command Returns a Cursor"
#~ msgstr ""

# 9b3aac53c67c40eb9375f55afcff374f
#~ msgid ""
#~ "Using the :dbcommand:`aggregate` command to"
#~ " return a cursor is a low-level"
#~ " operation, intended for authors of "
#~ "drivers. Most users should use the "
#~ ":method:`db.collection.aggregate()` helper provided "
#~ "in the :program:`mongo` shell or in "
#~ "their driver. In 2.6 and later, "
#~ "the :method:`~db.collection.aggregate()` helper "
#~ "always returns a cursor."
#~ msgstr ""

# 43d565f749364cb2818e5051d748da34
#~ msgid ""
#~ "The following command returns a document"
#~ " that contains results with which to"
#~ " instantiate a cursor object."
#~ msgstr ""

