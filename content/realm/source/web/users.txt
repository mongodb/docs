.. _web-manage-users:

======================
Manage Users - Web SDK
======================

.. toctree::
   :titlesonly:

   Create & Delete Users </web/create-delete-user>
   Authenticate Users <web/authenticate>
   Manage Email/Password Users </web/manage-email-password-users>
   Work with Multiple Users </web/work-with-multiple-users>
   Access Custom User Data </web/access-custom-user-data>
   Link User Identities </web/link-identities>
   Create & Manage User API Keys </web/create-manage-api-keys>

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

You must use App Services in the context of a user.
Users are associated with one or more authentication providers.
You can also assign data access rules to users to constrain what data they access.
Use Realm Web SDK to perform the following authentication and user management actions:

- Creation of new user accounts
- User log-in and log-out
- Multiple users logged on at the same time on the same device
- Linking user accounts from different providers
- Providing custom user data

When you have a logged-in user, SDK methods enable you to:

- :ref:`Query MongoDB Atlas <web-query-mongodb>`
- :ref:`Run a backend function <web-call-a-function>` as the logged-in user

.. _web-create-and-delete-users:

Create and Delete Users
-----------------------

For all authentication providers other than email/password authentication,
App Services automatically :ref:`creates a user <web-create-user>`
the first time a user authenticates. If a user authenticates via more than
one method, you can :ref:`link these user identities <web-link-user-identities>`
to a single user.

You can :ref:`delete users <web-delete-user>`. Deleting a user
deletes metadata attached to the user, but does not delete user-created
data from the backend.

.. _web-access-the-app-client:

Log Users In and Out
--------------------

Use one or more :ref:`authentication providers <auth-providers>` to log
users in and out of your client app. You can:

- Log users in with an existing social account, such as Apple, Facebook,
  or Google.
- Create new user accounts with App Services email/password management,
  your own custom function, or custom JWT user management.
- Enable anonymous users to let users access your App Services App without persisting
  user data.

For further information, see :ref:`Authenticate Users <web-authenticate>`.


User Sessions
~~~~~~~~~~~~~

.. include:: /includes/manage-user-sessions.rst

The Web SDK stores these tokens in the browser storage.

.. _web-app-work-with-custom-user-data:

Read and Update Custom User Data
--------------------------------

You can :ref:`associate custom data <custom-user-data>` with a user,
such as a preferred language or local timezone, and read it from your client
application. A user has a ``customData`` property that you can use
to :ref:`access custom user data <web-read-custom-user-data>`.

To :ref:`create and update <web-modify-custom-user-data>` custom user data,
you must access your MongoDB data source directly.
