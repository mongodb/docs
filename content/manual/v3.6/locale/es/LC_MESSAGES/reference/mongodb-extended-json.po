# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: 2014-04-08 18:45+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/reference/mongodb-extended-json.txt:3
msgid "MongoDB Extended JSON"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:13
msgid ""
":term:`JSON` can only represent a subset of the types supported by "
":term:`BSON`. To preserve type information, MongoDB adds the following "
"extensions to the JSON format:"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:17
msgid ""
"*Strict mode*. Strict mode representations of BSON types conform to the "
"`JSON RFC <http://www.json.org>`_. Any JSON parser can parse these strict"
" mode representations as key/value pairs; however, only the MongoDB "
"internal JSON parser recognizes the type information conveyed by the "
"format."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:23
msgid ""
"``mongo`` *Shell mode*. The MongoDB internal JSON parser and the "
":binary:`~bin.mongo` shell can parse this mode."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:26
msgid ""
"The representation used for the various data types depends on the context"
" in which the JSON is parsed."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:30
msgid "Parsers and Supported Format"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:33
msgid "Input in Strict Mode"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:35
msgid ""
"The following can parse representations in strict mode *with* recognition"
" of the type information."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:38
#: ../source/reference/mongodb-extended-json.txt:56
msgid ":ecosystem:`REST Interfaces </tools/http-interfaces>`"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:40
#: ../source/reference/mongodb-extended-json.txt:58
msgid ":binary:`~bin.mongoimport`"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:42
#: ../source/reference/mongodb-extended-json.txt:60
msgid "``--query`` option of various MongoDB tools"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:44
msgid ":products:`MongoDB Compass </compass>`"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:46
msgid ""
"Other JSON parsers, including :binary:`~bin.mongo` shell and "
":method:`db.eval()`, can parse strict mode representations as key/value "
"pairs, but *without* recognition of the type information."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:51
msgid "Input in ``mongo`` Shell Mode"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:53
msgid ""
"The following can parse representations in ``mongo`` shell mode *with* "
"recognition of the type information."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:62
msgid ":binary:`~bin.mongo` shell"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:65
msgid "Output in Strict mode"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:67
msgid ""
":binary:`~bin.mongoexport` and :ecosystem:`REST and HTTP Interfaces "
"</tools/http-interfaces>` output data in *Strict mode*."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:71
msgid "Output in ``mongo`` Shell Mode"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:73
msgid ":binary:`~bin.bsondump` outputs in ``mongo`` *Shell mode*."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:76
msgid "BSON Data Types and Associated Representations"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:78
msgid ""
"The following presents the BSON data types and the associated "
"representations in *Strict mode* and ``mongo`` *Shell mode*."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:82
msgid "Binary"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:90
#: ../source/reference/mongodb-extended-json.txt:121
#: ../source/reference/mongodb-extended-json.txt:161
#: ../source/reference/mongodb-extended-json.txt:191
#: ../source/reference/mongodb-extended-json.txt:231
#: ../source/reference/mongodb-extended-json.txt:258
#: ../source/reference/mongodb-extended-json.txt:287
#: ../source/reference/mongodb-extended-json.txt:338
#: ../source/reference/mongodb-extended-json.txt:368
#: ../source/reference/mongodb-extended-json.txt:400
#: ../source/reference/mongodb-extended-json.txt:448
msgid "Strict Mode"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:94
#: ../source/reference/mongodb-extended-json.txt:125
#: ../source/reference/mongodb-extended-json.txt:165
#: ../source/reference/mongodb-extended-json.txt:195
#: ../source/reference/mongodb-extended-json.txt:235
#: ../source/reference/mongodb-extended-json.txt:262
#: ../source/reference/mongodb-extended-json.txt:291
#: ../source/reference/mongodb-extended-json.txt:342
#: ../source/reference/mongodb-extended-json.txt:372
#: ../source/reference/mongodb-extended-json.txt:404
#: ../source/reference/mongodb-extended-json.txt:452
msgid ":binary:`~bin.mongo` Shell Mode"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:106
msgid "``<bindata>`` is the base64 representation of a binary string."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:108
msgid ""
"``<t>`` is a representation of a single byte indicating the data type. In"
" *Strict mode* it is a hexadecimal string, and in *Shell mode* it is an "
"integer. See the extended bson documentation. "
"http://bsonspec.org/spec.html"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:113
msgid "Date"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:137
msgid ""
"In *Strict mode*, ``<date>`` is an ISO-8601 date format with a mandatory "
"time zone field following the template ``YYYY-MM-"
"DDTHH:mm:ss.mmm<+/-Offset>``."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:140
msgid ""
"The MongoDB JSON parser currently does not support loading ISO-8601 "
"strings representing dates prior to the :term:`Unix epoch`. When "
"formatting pre-epoch dates and dates past what your system's ``time_t`` "
"type can hold, the following format is used:"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:149
msgid ""
"In *Shell mode*, ``<date>`` is the JSON representation of a 64-bit signed"
" integer giving the number of milliseconds since epoch UTC."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:153
msgid "Timestamp"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:177
msgid ""
"``<t>`` is the JSON representation of a 32-bit unsigned integer for "
"seconds since epoch."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:180
msgid "``<i>`` is a 32-bit unsigned integer for the increment."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:183
msgid "Regular Expression"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:207
msgid "``<sRegex>`` is a string of valid JSON characters."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:209
msgid ""
"``<jRegex>`` is a string that may contain valid JSON characters and "
"unescaped double quote (``\"``) characters, but may not contain unescaped"
" forward slash (``/``) characters."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:213
msgid ""
"``<sOptions>`` is a string containing the regex options represented by "
"the letters of the alphabet."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:216
msgid ""
"``<jOptions>`` is a string that may contain only the characters 'g', 'i',"
" 'm' and 's' (added in v1.9). Because the ``JavaScript`` and ``mongo "
"Shell`` representations support a limited range of options, any "
"nonconforming options will be dropped when converting to this "
"representation."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:223
msgid "OID"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:247
msgid "``<id>`` is a 24-character hexadecimal string."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:250
msgid "DB Reference"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:274
msgid "``<name>`` is a string of valid JSON characters."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:276
msgid "``<id>`` is any valid extended JSON type."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:279
msgid "Undefined Type"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:303
msgid "The representation for the JavaScript/BSON undefined type."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:305
msgid ""
"You *cannot* use ``undefined`` in query documents. Consider the following"
" document inserted into the ``people`` collection:"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:312
msgid "The following queries return an error:"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:319
msgid "However, you can query for undefined values using :query:`$type`, as in:"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:326
msgid ""
"This query returns all documents for which the ``age`` field has value "
"``undefined``."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:330
msgid "MinKey"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:354
msgid ""
"The representation of the MinKey BSON data type that compares lower than "
"all other types. See :ref:`faq-dev-compare-order-for-BSON-types` for more"
" information on comparison order for BSON types."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:360
msgid "MaxKey"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:384
msgid ""
"The representation of the MaxKey BSON data type that compares higher than"
" all other types. See :ref:`faq-dev-compare-order-for-BSON-types` for "
"more information on comparison order for BSON types."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:390
msgid "NumberLong"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:416
msgid ""
"``NumberLong`` is a 64 bit signed integer. You must include quotation "
"marks or it will be interpreted as a floating point number, resulting in "
"a loss of accuracy."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:420
msgid ""
"For example, the following commands insert ``9223372036854775807`` as a "
"``NumberLong`` with and without quotation marks around the integer value:"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:428
msgid ""
"When you retrieve the documents, the value of ``longUnQuoted`` has "
"changed, while ``longQuoted`` retains its accuracy:"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:438
msgid "NumberDecimal"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:464
msgid ""
"``NumberDecimal`` is a `high-precision decimal "
"<https://github.com/mongodb/specifications/blob/master/source/bson-de "
"cimal128/decimal128.rst>`_. You must include quotation marks, or the "
"input number will be treated as a double, resulting in data loss."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:469
msgid ""
"For example, the following commands insert ``123.40`` as a "
"``NumberDecimal`` with and without quotation marks around the value:"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:477
msgid ""
"When you retrieve the documents, the value of ``decimalUnQuoted`` has "
"changed, while ``decimalQuoted`` retains its specified precision:"
msgstr ""

#~ msgid ""
#~ "``<t>`` is the hexadecimal representation "
#~ "of a single byte that indicates "
#~ "the data type."
#~ msgstr ""

# 51e3582659e145adabdd443348618f39
#~ msgid ""
#~ "*Strict mode*. Strict mode representations "
#~ "of BSON types conform to the `JSON"
#~ " RFC <http://www.json.org>`_. Any JSON "
#~ "parser can parse these strict mode "
#~ "representations as key/value pairs; however,"
#~ " only the MongoDB's internal JSON "
#~ "parser also recognizes the type "
#~ "information conveyed by the format."
#~ msgstr ""

# e55a216e44664a7794f20962f305581d
#~ msgid ""
#~ "``mongo`` *Shell mode*. The MongoDB's "
#~ "internal JSON parser and the "
#~ ":program:`mongo` shell can parse this "
#~ "mode."
#~ msgstr ""

# aa48205ed4104e6aac3fc8708b4d77d1
# 5282b6896ed94920ba86f5812479dd3f
#~ msgid ":program:`mongoimport`"
#~ msgstr ""

# 6ea79b48f930466ca49dee9f8056b0d1
#~ msgid ""
#~ "Other JSON parsers, including :program:`mongo`"
#~ " shell and :method:`db.eval()`, can parse"
#~ " strict mode representations as key/value"
#~ " pairs, but *without* recognition of "
#~ "the type information."
#~ msgstr ""

# dce6fdb5cb014937b260114a375f21cf
#~ msgid ":program:`mongo` shell"
#~ msgstr ""

# 7dccba34f7994aa385ac48d43dd43f3d
#~ msgid ""
#~ ":program:`mongoexport` and :ecosystem:`REST and "
#~ "HTTP Interfaces </tools/http-interfaces>` "
#~ "output data in *Strict mode*."
#~ msgstr ""

# 9f159845908b42f4a2f50ae917d8e669
#~ msgid ":program:`bsondump` outputs in ``mongo`` *Shell mode*."
#~ msgstr ""

# ff4400bd7f074cd08123dd1dacb193be
# b4a276dc8d9843209ae34a00d9fae3d6
# 1e76bba9ac22406193cb210b6cb4a33a
# 8ac7e9a239184eea8f34a21a7ab566cd
# 2335a1e45aea4595bc30ffd69cb720a3
# 6a4eac283fcd44ae908446b36d60dade
# b5595d38a31b45c9a045099c48cecaa2
# be2f43e62bde4113bb919fbf17658f69
# 5f1dd9fe93cd4966be2931a3abe6beaa
# 1981ad8518ab4352aa2b12df9b5691d7
#~ msgid "mongo Shell Mode"
#~ msgstr ""

# 36b70ae3ea1e46459348702481d20641
#~ msgid ""
#~ "``<date>`` is the JSON representation of"
#~ " a 64-bit signed integer for "
#~ "milliseconds since epoch UTC (unsigned "
#~ "before version 1.9.1)."
#~ msgstr ""

#~ msgid ""
#~ "``<t>`` is the hexadecimal representation "
#~ "of a single byte that indicates "
#~ "the data type.  See the extended "
#~ "bson documentation. http://bsonspec.org/spec.html"
#~ msgstr ""

#~ msgid "Number long is a 64 bit signed integer."
#~ msgstr ""

