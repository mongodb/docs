===================
$locf (aggregation)
===================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. |linear-interpolation| replace:: :wikipedia:`linear interpolation <Linear_interpolation>`

Definition
----------

.. group:: $locf

   .. versionadded:: 5.2

   .. include:: /includes/fact-locf-description.rst

   :group:`$locf` is only available in the :pipeline:`$setWindowFields`
   stage.

Syntax
------

The :group:`$locf` expression has this syntax:

.. code-block:: none

   { $locf: <expression> }

For more information on expressions, see 
:ref:`aggregation-expressions`.

.. _locf-behavior:

Behavior
--------

If a field being filled contains both ``null`` and non-null values,
:group:`$locf` sets the ``null`` and missing values to the field's
last known non-null value according to the sort order specified in
:pipeline:`$setWindowFields`.

``null`` and missing field values that appear before non-null values
in the sort order remain ``null``.

If a field being filled contains only ``null`` or missing values in a
:ref:`partition <setWindowFields-partitionBy>`, :group:`$locf` sets the
field value to ``null`` for that partition.

Comparison of :pipeline:`$fill` and :group:`$locf`
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To fill missing field values based on the last observed value in a
sequence, you can use:

- The :pipeline:`$fill` stage  with ``{ method: "locf" }``.

  When you use the :pipeline:`$fill` stage, the field you specify in the
  output is the same field used as the source data. See
  :ref:`fill-example-locf`.

- The :group:`$locf` operator inside of a
  :pipeline:`$setWindowFields` stage.

  When you use the :group:`$locf` operator, you can set values
  for a different field than the field used as the source data. See
  :ref:`locf-example-multiple-methods`.

Examples
--------

The examples on this page use a ``stock`` collection that contains
tracks a single company's stock price at hourly intervals:

.. code-block:: javascript

   db.stock.insertMany( [ 
      {
         time: ISODate("2021-03-08T09:00:00.000Z"),
         price: 500
      },
      {
         time: ISODate("2021-03-08T10:00:00.000Z"),
      },
      { 
         time: ISODate("2021-03-08T11:00:00.000Z"),
         price: 515
      },
      {
         time: ISODate("2021-03-08T12:00:00.000Z")
      },
      {
         time: ISODate("2021-03-08T13:00:00.000Z")
      },
      {
         time: ISODate("2021-03-08T14:00:00.000Z"),
         price: 485
      }
   ] )

The ``price`` field is missing for some of the documents in the
collection.

Fill Missing Values with the Last Observed Value
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following example uses the :group:`$locf` operator to set missing
fields to the value from the last-observed non-``null`` value:

.. code-block:: javascript
   :emphasize-lines: 7-8

   db.stock.aggregate( [
      {
         $setWindowFields: {
           sortBy: { time: 1 },
           output: {
              price: { $locf: "$price" }
           }
         }
       }
   ] )

In the example:

- ``sortBy: { time: 1 }`` :ref:`sorts
  <setWindowFields-sortBy>` the documents in each partition by
  ``time`` in ascending order (``1``), so the earliest
  ``time`` is first.

- For documents where the ``price`` field is missing, the :group:`$locf`
  operator sets the ``price`` to the last-observed value in the
  sequence.

Example output:

.. code-block:: javascript
   :copyable: false
   :emphasize-lines: 10,20,25

   [
     {
       _id: ObjectId("62169b65394d47411658b5f5"),
       time: ISODate("2021-03-08T09:00:00.000Z"),
       price: 500
     },
     {
       _id: ObjectId("62169b65394d47411658b5f6"),
       time: ISODate("2021-03-08T10:00:00.000Z"),
       price: 500
     },
     {
       _id: ObjectId("62169b65394d47411658b5f7"),
       time: ISODate("2021-03-08T11:00:00.000Z"),
       price: 515
     },
     {
       _id: ObjectId("62169b65394d47411658b5f8"),
       time: ISODate("2021-03-08T12:00:00.000Z"),
       price: 515
     },
     {
       _id: ObjectId("62169b65394d47411658b5f9"),
       time: ISODate("2021-03-08T13:00:00.000Z"),
       price: 515
     },
     {
       _id: ObjectId("62169b65394d47411658b5fa"),
       time: ISODate("2021-03-08T14:00:00.000Z"),
       price: 485
     }
   ]

.. _locf-example-multiple-methods:

Use Multiple Fill Methods in a Single Stage
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/example-multiple-fill-methods.rst
