# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/authorization.txt:5
# 521dd7932bc148d7849c4a79259c0a6d
msgid "Authorization"
msgstr ""

#: ../source/core/authorization.txt:9
# ba4b837b5c604b10ad52ab87ae8dee0b
msgid "MongoDB employs Role-Based Access Control (RBAC) to govern access to a MongoDB system. A user is granted one or more :ref:`roles <roles>` that determine the user's access to database resources and operations. Outside of role assignments, the user has no access to the system."
msgstr ""

#: ../source/core/authorization.txt:14
# e005fe8854bb45c2adf86b5704439c0e
msgid "MongoDB does not enable authorization by default. You can enable authorization using the :option:`--auth` or the :option:`--keyFile` options, or if using a configuration file, with the :setting:`security.authorization` or the :setting:`security.keyFile` settings."
msgstr ""

#: ../source/core/authorization.txt:20
# 0ce90d2604984054bf7cb0cb32adbbbb
msgid "MongoDB provides :doc:`built-in roles </reference/built-in-roles>`, each with a dedicated purpose for a common use case. Examples include the :authrole:`read`, :authrole:`readWrite`, :authrole:`dbAdmin`, and :authrole:`root` roles."
msgstr ""

#: ../source/core/authorization.txt:25
# 665eca7308da4e2aa9e4a1b0399efefc
msgid "Administrators also can create new roles and privileges to cater to operational needs. Administrators can assign privileges scoped as granularly as the collection level."
msgstr ""

#: ../source/core/authorization.txt:29
# f8b621b276da4116819cd723eeb44be6
msgid "When granted a role, a user receives all the privileges of that role. A user can have several roles concurrently, in which case the user receives the union of all the privileges of the respective roles."
msgstr ""

#: ../source/core/authorization.txt:36
# 8c70edec78a84790b3c507340ed3f644
msgid "Roles"
msgstr ""

#: ../source/core/authorization.txt:38
# 801967a70ae54b808104427bfe958032
msgid "A role consists of privileges that pair resources with allowed operations. Each privilege is defined directly in the role or inherited from another role."
msgstr ""

#: ../source/core/authorization.txt:42
# 6509bbd8b75a4ce7a2a29c930363e93c
msgid "A role's privileges apply to the database where the role is created. A role created on the ``admin`` database can include privileges that apply to all databases or to the :ref:`cluster <resource-cluster>`."
msgstr ""

#: ../source/core/authorization.txt:46
# dff2a445a1754e96ba24c8dc85b062a2
msgid "A user assigned a role receives all the privileges of that role. The user can have multiple roles and can have different roles on different databases."
msgstr ""

#: ../source/core/authorization.txt:49
# 9887a9fd5e44477dbd02f63ebb80d72b
msgid "Roles always grant privileges and never limit access. For example, if a user has both :authrole:`read` *and* :authrole:`readWriteAnyDatabase` roles on a database, the greater access prevails."
msgstr ""

#: ../source/core/authorization.txt:56
# a54b58dbacf24f0c9fec45d7c3e729d9
msgid "Privileges"
msgstr ""

#: ../source/core/authorization.txt:58
# 0bc089ba043b4d868fd9d0577cefdda4
msgid "A privilege consists of a specified resource and the actions permitted on the resource."
msgstr ""

#: ../source/core/authorization.txt:61
# c0574eb1ae38478f8ffd407107d0b0e7
msgid "A privilege :doc:`resource </reference/resource-document>` is either a database, collection, set of collections, or the cluster. If the cluster, the affiliated actions affect the state of the system rather than a specific database or collection."
msgstr ""

#: ../source/core/authorization.txt:66
# 2f033a6cb5e542b8adb23d1541ae8f8a
msgid "An :doc:`action </reference/privilege-actions>` is a command or method the user is allowed to perform on the resource. A resource can have multiple allowed actions. For available actions see :doc:`/reference/privilege-actions`."
msgstr ""

#: ../source/core/authorization.txt:71
# 440de934d06645c29b6a19fd6b869e7d
msgid "For example, a privilege that includes the :authaction:`update` action allows a user to modify existing documents on the resource. To additionally grant the user permission to create documents on the resource, the administrator would add the :authaction:`insert` action to the privilege."
msgstr ""

#: ../source/core/authorization.txt:77
# 14b2867398404930bf8ea623c62564a0
msgid "For privilege syntax, see :data:`admin.system.roles.privileges`."
msgstr ""

#: ../source/core/authorization.txt:82
# b640019e5051487a96eea291283d0e15
msgid "Inherited Privileges"
msgstr ""

#: ../source/core/authorization.txt:84
# 44097c2c72514831ac94d70a7531ac80
msgid "A role can include one or more existing roles in its definition, in which case the role inherits all the privileges of the included roles."
msgstr ""

#: ../source/core/authorization.txt:87
# 86c2f8f850c64acbbf6215e36ca1fca3
msgid "A role can inherit privileges from other roles in its database. A role created on the ``admin`` database can inherit privileges from roles in any database."
msgstr ""

#: ../source/core/authorization.txt:93
# f78deb35ad8d40029fdbe9c8e8c90648
msgid "User-Defined Roles"
msgstr ""

#: ../source/core/authorization.txt:97
# e3981a67d8a0446cac1a367c5db44f03
msgid "User administrators can create custom roles to ensure collection-level and command-level granularity and to adhere to the policy of :term:`least privilege`. Administrators create and edit roles using the :ref:`role management commands <role-management-commands>`."
msgstr ""

#: ../source/core/authorization.txt:102
# cc3a937db1b942dc89c11143274a9d22
msgid "MongoDB scopes a user-defined role to the database in which it is created and uniquely identifies the role by the pairing of its name and its database. MongoDB stores the roles in the ``admin`` database's :doc:`system.roles </reference/system-roles-collection>` collection. Do not access this collection directly but instead use the :ref:`role management commands <role-management-commands>` to view and edit custom roles."
msgstr ""

#: ../source/core/authorization.txt:110
# 332ff46d812e4d5e85c82bcae94d85b1
msgid "Collection-Level Access Control"
msgstr ""

#: ../source/core/authorization.txt:112
# dbb08aba2e3d4c3c87797a47d5b5634c
msgid "By creating a role with :ref:`privileges <privileges>` that are scoped to a specific collection in a particular database, administrators can implement collection-level access control."
msgstr ""

#: ../source/core/authorization.txt:116
# 4bce8172ce074e368196e86241bb1cd9
msgid "See :doc:`/core/collection-level-access-control` for more information."
msgstr ""

#: ../source/core/authorization.txt:121
# a13a90ec364d4f59b18db433b9a4b434
msgid "Users"
msgstr ""

#: ../source/core/authorization.txt:123
# 47eeb306a2374540871152344016d5db
msgid "MongoDB stores user credentials in the protected :data:`admin.system.users`. Use the :ref:`user management methods <user-management-methods>` to view and edit user credentials."
msgstr ""

#: ../source/core/authorization.txt:129
# 3f05b15b8068487cadb017984851f44e
msgid "Role Assignment to Users"
msgstr ""

#: ../source/core/authorization.txt:131
# d32127af09884d79ab8c579dfe671e2c
msgid "User administrators create the users that access the system's databases. MongoDB's :ref:`user management commands <user-management-commands>` let administrators create users and assign them roles."
msgstr ""

#: ../source/core/authorization.txt:135
# 2188ac6d8ceb4b039d10b06f13392fc2
msgid "MongoDB scopes a user to the database in which the user is created. MongoDB stores all user definitions in the ``admin`` database, no matter which database the user is scoped to. MongoDB stores users in the ``admin`` database's :doc:`system.users collection </reference/system-users-collection>`. Do not access this collection directly but instead use the :ref:`user management commands <user-management-commands>`."
msgstr ""

#: ../source/core/authorization.txt:143
# 77c9659b4a1b4eecba5b43814d1ceefa
msgid "The first role assigned in a database should be either :authrole:`userAdmin` or :authrole:`userAdminAnyDatabase`. This user can then create all other users in the system. See :doc:`/tutorial/add-user-administrator`."
msgstr ""

#: ../source/core/authorization.txt:148
# 0e2afa7ccfae4ad1b26ac29a6dd4e65b
msgid "Protect the User and Role Collections"
msgstr ""

#: ../source/core/authorization.txt:150
# c605ea46f02a44cb8cab130391c8daa7
msgid "MongoDB stores role and user data in the protected :data:`admin.system.roles` and :data:`admin.system.users` collections, which are only accessible using the :ref:`user management methods <user-management-methods>`."
msgstr ""

#: ../source/core/authorization.txt:155
# c3ed448f257c41b7a9706d420bd59eec
msgid "If you disable access control, **do not** modify the :data:`admin.system.roles` and :data:`admin.system.users` collections using normal :method:`~db.collection.insert()` and :method:`~db.collection.update()` operations."
msgstr ""

#: ../source/core/authorization.txt:161
# 471b18a4ef6b44538af793e9652eedf9
msgid "Additional Information"
msgstr ""

#: ../source/core/authorization.txt:163
# a2169e63f1854bf58123d2803910d82e
msgid "See the reference section for documentation of all :doc:`built-in-roles </reference/built-in-roles>` and all available :doc:`privilege actions </reference/privilege-actions>`. Also consider the reference for the form of the :doc:`resource documents </reference/resource-document>`."
msgstr ""

#: ../source/core/authorization.txt:168
# fa720ef0d669462f9ea1b08ebbdea9b2
msgid "To create users see the :doc:`/tutorial/add-user-administrator` and :doc:`/tutorial/add-user-to-database` tutorials."
msgstr ""

