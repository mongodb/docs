.. _rm-rest-api:

============================
{+rel-mig+} REST API
============================

.. facet::
   :name: genre 
   :values: tutorial

.. meta:: 
   :description: Learn about the MongoDB Relational Migrator REST API and how to use it.
   :keywords: data migration, rest api, open api

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

The {+rel-mig+} REST API provides you with programmatic access 
to Relation Migrator with HTTPS endpoints. The REST API is a 
{+rel-mig+} service between your application and your source and 
destination databases that you can send requests to manage your migration jobs.

You don't need to install any additional extensions or packages to use 
the {+rel-mig+} REST API. The functionality is part of the 
{+rel-mig+} product. The REST API runs on the same port that 
you access the application on (either ``8278``, ``8080``, or ``443``).

How the REST API Works
----------------------

The {+rel-mig+} REST API runs on the client computer or server
that has {+rel-mig+} installed. By default, {+rel-mig+}
does not expose the API to any remote computers. If you use the default
security settings, you must make all calls to the API on the same
computer that you are running {+rel-mig+} on. 

If you want to remotely access the REST API, configure the
``unattended`` profile by :ref:`installing {+rel-mig+} on an
unattended server <unattended-server>`. 

.. warning::

   The REST API does not support authentication. If you enable remote
   access, users do not need to authenticate to call the API which may
   cause security vulnerabilities.

When to Use REST API
--------------------

Use the {+rel-mig+} REST API when:

- You want to use a task scheduler such as 
  `CRON <https://en.wikipedia.org/wiki/Cron>`__ and define dynamic 
  :ref:`table filters <rm-table-filters>` within a project. For example, 
  using a table filter with 
  ``WHERE DATEDIFF(CURDATE(), last_modified) <= 1`` to batch migrate 
  data on a cadence from your relational database to MongoDB. 

- You want to programmatically create {+rel-mig+} migration jobs 
  dynamically. For example, using connection strings from 
  multiple databases without manually configuring them in the GUI.

- You generally prefer scripting your workflows instead of using a GUI.

Learn More
----------

For {+rel-mig+} REST API endpoints, example 
requests, and responses, see :ref:`Endpoints <rm-api-resources-spec>`.

.. toctree::
   :titlesonly:
   
   {+migrator-api-endpoints+} </api-docs/rest-api-spec>