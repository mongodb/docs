:noprevnext:

:orphan:

.. this does actually appear in the unified toc. the orphan tag is to suppress Snooty parser warnings as it still uses toctrees and we removed the drawer page that referenced this page.

.. _vercel:

=====================
Integrate with Vercel
=====================


.. default-domain:: mongodb

.. meta::
   :keywords: vercel
   :description: Provision and use MongoDB Atlas as your application's database directly from Vercel Marketplace using a simplified setup process and integrated billing through Vercel.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

|vercel| is a development platform that simplifies application deployments.
Vercel has a marketplace for developers to discover software packages
and provision applications. 

Use the instructions on this page to:

- Get started with Vercel and |service-fullname| and build your next project with |service-fullname|.
- Choose from Free, Dedicated, and Flex MongoDB clusters, with options for every use case.

Native Integration and Connectable Accounts
-------------------------------------------

You can integrate with |vercel| in the following ways:

- **Native Integration**

  In this mode, you locate |service-fullname| in Vercel Marketplace, and
  create a new MongoDB |service| account with billing conducted through Vercel. 
  A Native Integration of |service-fullname| in Vercel allows you to:

  - Provision |service| resources directly from the Vercel dashboard, with
    billing managed through your Vercel account. You can also directly
    access resources in |service| through a provisioned linked account.

  - Deploy MongoDB |service| clusters for new and existing Vercel applications.

  After you create MongoDB |service| clusters, Vercel adds your |service|
  cluster credentials and other settings to your Vercel environments.
  To learn more about the Native Integration, see :ref:`Vercel Native Integration <vercel-native-integration>`.

- **Connectable Accounts Integration**

  This mode guides you through setting up an account in |service| to connect
  your existing Vercel projects.

  The Connectable Accounts Integration mode allows you to link an existing
  |service| account to your Vercel account, but requires that you manage
  your |service| account, billing, and creation of resources outside of
  the Vercel UI. By comparison, the Native Integration mode allows you to
  create and manage |service| resources directly from the Vercel UI,
  with billing managed through your Vercel account.

  .. important::

     While the Connectable Accounts Integration continues to be supported,
     we recommend that you use it only to connect existing Atlas resources to Vercel.
     To use Vercel and |service-fullname| together for new Atlas resources,
     and for the best developer experience, use the :ref:`Vercel Native Integration <vercel-native-integration>`.

Find |service| in Vercel
~~~~~~~~~~~~~~~~~~~~~~~~

If you are a Vercel user with any role, you can discover |service| through the following methods:

.. procedure::
   :style: normal

   .. step:: Log into the |vercel| UI.
   
      Under the :guilabel:`Overview` tab locate the :guilabel:`Add new`
      button in the upper right corner and from the drop-down, select :guilabel:`Integration`.
      
   .. step:: Search for MongoDB |service| in Vercel Marketplace.
   
      In the left-side list, select :guilabel:`Any Type` and :guilabel:`Any Category`.
      Use the :guilabel:`Search` panel at the top of the page to search for ``MongoDB``
      and then select :guilabel:`MongoDB Atlas` in the list of Native Integrations.

   .. step:: Alternatively, locate MongoDB |service| under :guilabel:`Storage`.

      In the left-side list of all integrations in Vercel Marketplace,
      select :guilabel:`Categories` > :guilabel:`Storage`
      and then select :guilabel:`MongoDB Atlas` in the list of Native Integrations.

.. _considerations-vercel:

Considerations
---------------

- :ref:`Accounts in Vercel (Personal or Team) <vercel-personal-team-accounts>`
- :ref:`Vercel Projects <vercel-projects>`
- :ref:`IP Access Lists in Atlas and IP Allow Lists in Vercel <vercel-access-lists>`

.. _vercel-personal-team-accounts:

Accounts in Vercel (Personal or Team)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The integration with Vercel requires that you:

- `Create a new personal account <https://vercel.com/new>`__ or
  `create a new team <https://vercel.com/docs/concepts/teams/overview>`__
  in Vercel.
- Use an existing personal or team account in Vercel.

.. _vercel-projects:

Projects in Vercel
~~~~~~~~~~~~~~~~~~~

You can link one |service| {+cluster+} to more than one project in Vercel.

- If you create a Native Integration of |service| in Vercel, |service|
  creates a new Vercel-managed organization and project in |service| for you.

- If you use a Connectable Accounts Integration of |service| with Vercel,
  you must have one or more projects in your personal or team Vercel account
  before you can link them to |service| {+clusters+}.

The list of Vercel projects that you can choose for the integration
depends on the user or team scope.

.. _vercel-access-lists:

IP Access Lists in |service| and IP Allow Lists in Vercel
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Vercel deployments use |vercel-dynamic|.

To connect to |a-service| {+cluster+}, the :doc:`IP access list
</security/ip-access-list/>` of your |service| {+cluster+} must allow all
IP addresses (0.0.0.0/0).
If |service| doesn't find an entry for 0.0.0.0/0 in your |service|
project's IP access list, |service| adds it on your behalf, as part of
the integration workflow.

- If you use a Native Integration of |service| with Vercel, |service| creates
  a database user in the following format: ``Vercel-Admin-[name of resource]``
  in the admin database and grants the built-in :manual:`readWriteAnyDatabase </reference/built-in-roles/#mongodb-authrole-readWriteAnyDatabase>`
  MongoDB database role to all other non system databases in the |service| cluster.
  For example, if your Vercel resource is named ``my-first-atlas-cluster``,
  the database user that |service| creates is ``Vercel-Admin-my-first-atlas-cluster``.

- If you set up the Connectable Accounts Integration of |service| with Vercel,
  |service| secures your Vercel connections to the {+cluster+} as follows:
  |service| creates a ``MONGODB_URI`` environment variable that serves as
  the |service| {+cluster+}\'s connection string for all Vercel projects
  that you link this {+cluster+} to.

  When your application doesn't specify a database, the ``MONGODB_URI``
  variable uses ``/myFirstDatabase`` as the default database name.
  Replace this name with your database name, or if you use a library to
  interface with MongoDB, ensure that your application's code specifies
  your database name.

  |service| creates a database user, ``vercel-admin-user``, in the admin database
  and grants the built-in :manual:`readWriteAnyDatabase
  </reference/built-in-roles/#mongodb-authrole-readWriteAnyDatabase>`
  MongoDB database role to all other non system databases in the |service| cluster.

.. _vercel-native-integration:

Vercel Native Integration
-------------------------

You can create a Native Integration of |service| in |vercel| Marketplace
to provision |service| resources directly from the Vercel dashboard, with
billing managed through your Vercel account. You can also directly
access resources in |service| through a provisioned linked account.

|service| provisions the account for you if you don't have one.
The |service| account is linked to the Vercel installation.
You have separate credentials for logging into |service|.

Considerations: Native Integration
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following considerations apply to the Native Integration of |service| in Vercel.
In addition, see :ref:`Considerations <considerations-vercel>` that apply to
both integration modes.

- **Resource Mapping**
  
  A "team installation" in Vercel maps to an organization in |service|.
  An installed product (resource) in Vercel maps to a project and cluster in |service|.

- **API Access**
  
  Vercel requires programmatic access to |service| APIs to create and manage
  resources on behalf of users and to propagate environmental changes.

- **User Provisioning and Account Linking** 

  |service| provisions new |service| user accounts for Vercel users, links
  existing accounts, and sends a password reset email if you don't configure
  |service| credentials. User authentication requires |service| credentials
  to access |service|. 
  
  The user who initially installs the |service| Native Integration for
  the Vercel team becomes the |service| :authrole:`Organization Owner`.

- **Accessing |service| from Vercel**

  You can navigate to {+atlas-ui+} from Vercel via an :guilabel:`Open in Atlas`
  button. After logging in with your |service| credentials, |service| redirects
  you to the corresponding |service| resource. 

  - Users with existing |service| accounts. When accessing |service| from Vercel,
    Vercel prompts users with existing |service| accounts to confirm linking their
    |service| account to their Vercel installation. After the users confirm the
    linkage and log in with |service| credentials to prove their identity,
    |service| links the users' |service| accounts to their Vercel installation. 
  
  - New users. |service| provisions an account for new users and sends a
    password reset email so that users can configure their passwords and
    prove their identity. Once |service| obtains the user's credentials,
    |service| links the user's |service| account to their Vercel installation
    and grants this user the :authrole:`Organization Owner` role in |service|.
    |service| keeps organization's permissions in line with the permissions
    in Vercel. Vercel's "Admin" and "User" roles map to :authrole:`Organization Owner`
    and :authrole:`Organization Read Only` roles in |service|, respectively.

  If any user in the Vercel team installs additional |service| clusters using
  the Native Integration, |service| doesn't automatically add these users to
  the |service| organization created for the Vercel team. The |service|
  organization owner must ensure that all Vercel team users who need access
  to the |service| organization have it. This also applies to new Vercel
  team users who join the Vercel team after the initial installation of
  the Native Integration.

  Use one of the following methods to ensure that |service| adds additional
  Vercel team's users to the |service| Organization:

  - Vercel team users can access the |service| organization in the {+atlas-ui+} through the Vercel UI.
    if they're not already |service| users, |service| provisions accounts
    for them, with assignment to the |service| organization for the Native Integration.
  - The |service| Organization owner can invite |service| users to the |service| Organization.

- **Environment Variables**

  The Native Integration automatically configures the ``MONGODB_URI``
  environment variable for secure database connections. For the full list
  of environment variables, see the Vercel UI for the Native Integration of |service|.

- **Billing**

  The Vercel Native Integration creates a new |service| Organization from the Vercel UI
  which is automatically connected to a Vercel Marketplace billing plan
  as the active payment method for the |service| Organization. Billing occurs
  per one |service| organization and includes a collective bill for all
  MongoDB |service| clusters and services in the Organization. In Vercel
  and |service|, you can see a confirmation of Vercel Marketplace billing
  for the |service| Organization, as well as daily usage costs.

- **Security**
  
  |service| ensures secure connections via SCRAM authentication with IP allowlists
  for |service| clusters that you create through the Native Integration in Vercel.

- **Deletion or Uninstallation of the Native Integration**
  
  After uninstalling a Vercel integration, we recommend that the |service|
  Organization owner ensures that access assignments and billing methods
  are up-to-date, and removes stale or unwanted access to prevent automated
  reminders from MongoDB regarding overdue billing payments. |service| submits
  a final Vercel invoice for the |service| to Vercel, and removes the
  Vercel Marketplace payment method from the |service| Organization.
  
  This invoice is not a final |service| invoice, as there might still be
  additional charges incurred by the Organization after uninstallation
  for the most recent usage that might not have been billed for yet.
  You are responsible for adding a new payment method to the Organization
  to ensure any outstanding usage can be paid for.
  
  You can't uninstall or unlink the Native Integration from the {+atlas-ui+},
  although you can always delete your resources in |service|. If you delete a
  Vercel-linked cluster, this is reflected in the Vercel UI.

- **Getting Started in Vercel UI for Next.js**

  The Vercel UI for the Native Integration includes instructions for getting
  started with Next.js and |service|.

- **Deployment templates**

  The Vercel UI for the Native Integration includes deployment templates.
  These templates include example code and configuration files to help you
  get started with your |service| projects in Vercel.

.. _vercel-add-native-integration:

Add a Native Integration
-------------------------

To add the MongoDB |service| Native Integration in Vercel:

.. procedure::
   :style: normal

   .. step:: Install the MongoDB |service| Native Integration.

      a. Go to Vercel Marketplace and use search or left-side category filter
         for :guilabel:`Storage` to locate :guilabel:`MongoDB Atlas` in the list of Native Integrations.

      b. Click :guilabel:`Install` in the MongoDB |service| page for
         the integration, or click :guilabel:`Install` in the upper right
         corner of the Vercel UI page for the integration.

   .. step:: Accept :guilabel:`Terms and Conditions`.
   
      Click :guilabel:`Accept and Create`.

   .. step:: Choose a cluster tier.

      Choose a Free, Flex, or Dedicated |service| cluster:

      - Free ($0, Storage: 512 MB, RAM: Shared, vCPU: Shared)
      - Flex ($0.011/hour, Storage: Up to 5 GB, RAM: Shared, vCPU: Shared)
      - Dedicated ($0.08/hour, Storage: 10 GB, RAM: 2 GB, vCPU: 2xCPUs)

      .. important::

         Free clusters are available on all installation plans.
         Flex and Dedicated clusters are available only on Paid installation plans.

   .. step:: Choose a cluster region.

      A list of `Vercel regions <https://vercel.com/docs/edge-network/regions#region-list>`__
      displays. These regions map to MongoDB |service| regions in most cases.
      If you choose a Vercel region that doesn't have a corresponding
      |service| region, |service| chooses the closest region to the
      Vercel region that you selected.

   .. step:: Select an installation plan: Free or Paid. 

      - **Free plan $0** 
  
        No credit card is required. You can only create Free MongoDB Atlas clusters with this plan.
      - **Paid plan**

        Credit card is required. You can create Free, Flex, and Dedicated clusters
        with this plan. You'll only be billed for Flex and Dedicated clusters.

      If you choose a Flex or Dedicated |service| cluster, the Free plan is grayed out.
      If any member of your Vercel team uses this Native Integration with a Free plan
      and chooses to create a Flex or Dedicated cluster, the plan changes to a
      Paid plan. Even if you uninstall a MongoDB |service| cluster that isn't
      free, the plan remains as a Paid plan. To change the plan to a Free plan,
      uninstall the Native Integration and then install it again choosing a
      Free cluster and a Free plan. To learn how to uninstall any Native Integration,
      see the `Vercel documentation <https://vercel.com/docs/integrations/install-an-integration/product-integration#uninstall-an-integration>`__.

   .. step:: Choose the database name. 
   
      Vercel generates a name that you can choose or you can enter your own name.

   .. step:: Review your selections.

   .. step::  Click :guilabel:`Create MongoDB Atlas Cluster`.

      Vercel UI shows :guilabel:`Initializing` and then :guilabel:`Available`.
      This means that your MongoDB |service| cluster is ready to use.

Now you can use the Native Integration of |service| in Vercel to:

- Connect to a Vercel project.
- Pull your latest environment variables.

If you no longer need this MongoDB |service| cluster, you can uninstall
the Native Integration and by doing so delete a MongoDB |service| database.
For instructions, see the `Vercel documentation
<https://vercel.com/docs/integrations/install-an-integration/product-integration#uninstall-an-integration>`__. 

You can also delete the database (the resource), without uninstalling the whole
integration. This is useful in cases when you want to keep the integration
around to create other resources in the future, or if you have other resources
in the same integration.

If you delete a Vercel-linked |service| cluster, any projects that you linked to this
cluster in Vercel will no longer have access to this database cluster.
Before proceeding with the uninstallation and deletion of the |service| cluster,
ensure that this |service| cluster is no longer in use by any projects or application.

Contact Support
~~~~~~~~~~~~~~~

If you run into issues while using a Vercel Native Integration with MongoDB |service|,
contact Vercel Integration Support at MongoDB `vercel-integation-support@mongodb.com <mailto:vercel-integation-support@mongodb.com>`__.

.. _vercel-add-connectable-accounts-integration:

Add a Connectable Accounts Integration
---------------------------------------

.. include:: /includes/fact-vercel-use-native-integration.rst

This procedure allows you to use an existing |service| account, organization,
project, and |service| {+cluster+} for integration with Vercel.

.. include:: /includes/fact-vercel-serverless-functions.rst

To integrate Vercel applications with |service| {+clusters+}, you begin 
in the |vercel| UI.

.. note::

   You can add a Vercel integration as a personal account user and then
   add another Vercel integration as a team user. You can't change the
   scope of an existing integration from a personal account to a team
   level account in Vercel.
   
   To switch from a MongoDB Connectable Accounts Integration for a personal
   Vercel account to an integration with a team scope in the same |service| organization,
   :ref:`disconnect an existing integration <disconnect-vercel>` in |service|,
   and :ref:`add a new integration with a team scope <vercel-add-connectable-accounts-integration>`.

.. procedure::
   style: normal

   .. step:: Navigate to the MongoDB |service| integration.

      Go to |vercel-mdb| and click :guilabel:`Add integration`.

   .. step:: Choose the scope of your integration (user or team).

      a. Choose one of the Vercel scopes from the drop-down menu:

         - :guilabel:`Personal Account`
         - :guilabel:`Team`

         After you set the scope for your integration, you can't change
         it. To switch to a scope that differs from your chosen scope,
         :ref:`disconnect <disconnect-vercel>` one integration and create
         another one using this procedure.

      #. Click :guilabel:`Continue`.

   .. step:: Select Vercel projects to link to |a-service| {+cluster+}.

      You can choose specific projects or all projects. You can later edit
      the integration to change the projects. The project list depends on
      the user or team scope that you specified in the previous step.

      Select one of the following options:

      - :guilabel:`All Projects`
      - :guilabel:`Specific Projects`

   #. Click :guilabel:`Add Integration`.

   .. step:: Create your MongoDB Account, if you don't already have one.

      a. Choose one of the following options:

         - If you're using your :ref:`Google Accounts <google-accounts>`,
           follow the steps for signing into it, or create a new Google account.
         - If you're using your email, it's already filled in and grayed out.
         - If your company uses :doc:`federated authentication
           </security/federated-authentication>`, use your company's
           email address. Proceed with the verification steps required
           for your federated user access.
         - If you already have |a-service| account, click :guilabel:`Log in now`.
           See :ref:`Log in to Your Atlas Account <atlas-account-login>`.

      #. Enter your first and last names, and choose a password. A password
         must contain at least 8 characters, contain unique characters,
         numbers, or symbols, and not contain your email address.
         See :ref:`Register a new Atlas Account <atlas-register-account>`.

      #. Click the checkbox :guilabel:`I accept the Privacy Policy and the Terms of Service`.

         Review the :website:`Terms of Service </cloud-terms-and-conditions>`
         and the :legal:`Privacy Policy </privacy-policy>`.

   .. step:: Select |a-service| organization to integrate with Vercel.

      a. Select |a-service| organization from the drop-down, or
         :ref:`create a new Atlas organization <create-organization>`.

      #. Click :guilabel:`Continue`.

      #. Confirm access to your |service| organization.

         |service| creates an organization for you. Click
         :guilabel:`I Acknowledge` to confirm that you grant Vercel
         access to your |service| organization.

         To remove access from this Vercel integration to your MongoDB
         |service| organization, you must :ref:`disconnect <disconnect-vercel>`
         this integration.

      #. Select |a-service| project to integrate with Vercel from the
         drop-down, or :ref:`create a new project <create-project>`.

   .. step:: Create a new Free tier {+cluster+}, or link an existing {+cluster+} to one or more Vercel projects.
      
      .. tabs::

         .. tab:: Link an existing {+cluster+}
            :tabid: link-existing

            If you already have |a-service| account, you can choose an existing
            organization and project, and then choose an existing {+cluster+}.

            Ensure that you have the |service| :authrole:`Project Owner`
            role.

            a. Choose |a-service| {+cluster+} from the drop-down on the
               left side of the mapping.

            #. Choose one or more Vercel projects from the drop-down on
               the right side. You can map one |service| {+cluster+} to
               one or more Vercel projects.
               The drop-down menu shows one project, or all projects,
               depending on what you chose for this integration earlier
               in this procedure. You can later
               :ref:`link more Vercel projects <edit-remove-links-vercel>`
               to the same |service| {+cluster+} in this integration.

            If the selected project doesn't have the 0.0.0.0./0 entry in
            the |service| access list, |service| asks you to acknowledge
            that you are creating |a-service| {+cluster+} with full access
            due to |vercel-dynamic| in Vercel. |service| sends you an
            email with this information.

         .. tab:: Create a new free tier {+cluster+}
            :tabid: create-new

            a. :doc:`Create a new cluster </tutorial/create-new-cluster>`
               if you don't have |a-service| {+cluster+}. You can later
               :ref:`modify the cluster that you created <scale-cluster>`.

               Ensure that you have the |service| :authrole:`Project Owner`
               role.

               |service| creates a new free tier {+cluster+}, and links it
               to the Vercel projects you selected. You can later
               :ref:`link more Vercel projects <edit-remove-links-vercel>`
               to the same |service| {+cluster+}.

            #. Click :icon-fa5:`check` to acknowledge these statements:
         
               - The IP Access list contains 0.0.0.0/0, which opens inbound
                 access to |service| {+clusters+} within selected |service|
                 projects to all IP addresses.

               - Your Vercel deployment requires this access because it
                 uses |vercel-dynamic| to connect to |service|.

   .. step:: Click :guilabel:`Return to Vercel` and review the integration's details.

      |service| sends you a confirmation email with the details of your
      integration. The integration window closes and you return to the
      Vercel UI where you can update the Vercel projects in this
      integration.

Manage a Connectable Accounts Integration
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-vercel-use-native-integration.rst

To manage the Connectable Accounts integration with Vercel:

.. procedure::
   style: normal

   .. include:: /includes/nav/steps-org-settings.rst

   .. include:: /includes/nav/steps-org-integrations.rst

   .. step:: Select :guilabel:`Vercel`.

      From here, you can perform these tasks:

      - :ref:`Link additional Atlas {+clusters+} with projects in Vercel
        <add-links-vercel>`
      - :ref:`Edit or remove the linking from your Atlas {+cluster+} to
        one or all projects in Vercel <edit-remove-links-vercel>`
      - :ref:`Disconnect your Vercel integration <disconnect-vercel>`

.. _add-links-vercel:

Link Another |service| Cluster to the Connectable Accounts Integration
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-vercel-use-native-integration.rst

To link additional {+clusters+} in your organization to projects in Vercel:

.. note::
   
   Use this procedure for an already configured Connectable Accounts integration.

.. procedure::
   style:: normal

   .. include:: /includes/nav/steps-org-settings.rst

   .. include:: /includes/nav/steps-org-integrations.rst

   .. step:: Go to your Vercel integration.
   
      Select :guilabel:`Vercel`.

   .. step:: Link another |service| {+cluster+} to one or more Vercel projects.
   
      Click :guilabel:`Link Clusters`.
      
      The :guilabel:`Add Another Cluster Link with Vercel` window opens
      and shows your |service| organization.

      #. Select |a-service| project.
      
      #. In the left drop-down list, select a {+cluster+} not linked to Vercel.
         If your project doesn't have another |service| {+cluster+}, you
         can :doc:`create one </tutorial/create-new-cluster>`.

      #. In the right drop-down list, select one or more Vercel projects.

      #. Click :guilabel:`Save`.

      You receive a confirmation email from |service| with the details
      of your integration.

      A new linked |service| {+cluster+} appears in the linked {+clusters+} list.

To link a {+cluster+} from another |service| project in your organization
to Vercel, repeat this procedure for that project.

.. _edit-remove-links-vercel:

Edit or Remove Links to |service| {+Clusters+}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-vercel-use-native-integration.rst

You can add or remove Vercel projects that you linked to |a-service| {+cluster+}.

.. procedure::
   style:: normal

   .. include:: /includes/nav/steps-org-settings.rst

   .. include:: /includes/nav/steps-org-integrations.rst

   .. step:: Go to your Vercel integration.
   
      Select :guilabel:`Vercel`.

   .. step:: To add or remove some Vercel projects, click :icon-fa5:`pencil-alt` :guilabel:`Edit` next to the linked |service| project.

      |service| displays existing linked Vercel projects.

      a. Edit existing links, in the right-side list, choosing a project
         from the drop-down. You can:

         - Click :icon-fa5:`check` next to a Vercel project in the list
           to add it to this {+cluster+}'s integration.

         - Click :icon-fa5:`times-circle` to remove some Vercel projects
           from this integration.

   .. step:: To remove links to all Vercel projects, click :icon-fa5:`unlink` :guilabel:`Unlink` next to the linked |service| project.

      |service| asks you to confirm that you want to unlink the {+cluster+}
      from the projects. To confirm, click  :guilabel:`Unlink`.
      |service| removes the environment variables for Vercel projects
      that it created when you linked the projects to |a-service| {+cluster+}.

      If you unlink all projects, |service| behaves as follows. It:
      
      - Doesn't remove your data, database users,
        or IP access lists that you created for this integration.

      - Doesn't delete the {+cluster+}, or the integration, even though
        the {+atlas-ui+} might show that you have no linked {+clusters+}
        in your integration. To disable the integration,
        you must :ref:`disconnect Vercel <disconnect-vercel>`.

   .. step:: Click :guilabel:`Save`.

.. _disconnect-vercel:

Disconnect a Vercel Integration
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-vercel-use-native-integration.rst

Before you disconnect Vercel projects from |service| {+clusters+},
to avoid downtime to any applications connected to the same |service|
{+clusters+}, verify that the {+cluster+}\'s users and network access
rules don't share other projects and applications connected to this
|service| {+cluster+}.

.. procedure::
   style:: normal

   .. include:: /includes/nav/steps-org-settings.rst

   .. include:: /includes/nav/steps-org-integrations.rst

   .. step:: Go to your Vercel integration in the {+atlas-ui+}.

      Select :guilabel:`Vercel`.

   .. step:: Click :guilabel:`Disconnect Vercel`.

      In this step, click :icon-fa5:`check` to request |service| to do
      these optional tasks for you:
      
      - :guilabel:`Delete the database users created as part of this
        integration`
      - :guilabel:`Delete the network access rules created as part of this
        integration`

   .. step:: Confirm that you want to disconnect this Vercel integration.

      |service| asks you to confirm that you want to disconnect your
      |service| organization from Vercel.

      Disconnecting the integration may result in downtime for your Vercel
      applications and any other applications connecting to the |service|
      {+clusters+} that you linked to Vercel.
      
      To confirm, enter the words ``Disconnect Vercel`` in capital
      letters and then click :guilabel:`Disconnect Vercel`.

      |service| removes the integration by removing the environment
      variables for Vercel projects that it created when you linked the
      projects to |a-service| {+cluster+}.

      Vercel also removes the integration and it no longer displays in
      the Vercel UI.

      After you disconnect the Vercel integration, if you haven't deleted
      users or access lists, you can:

      - :ref:`Delete database users <delete-mongodb-users>`
      - :ref:`Delete IP access lists <delete-ip-access-list-entry-ui>`

      .. note::

         When you remove an integration in the Vercel UI, |service| also
         removes the integration and you don't need to
         :ref:`disconnect the integration <disconnect-vercel>` in the
         {+atlas-ui+}.









