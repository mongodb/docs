==========================================
Install MongoDB Community Edition on macOS
==========================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Overview
--------

The following tutorial uses 
`Homebrew <https://brew.sh/?jmp=mongodb-docs>`_ to install MongoDB 
{+version+} Community Edition on macOS systems. To install a different 
version of MongoDB, please refer to that versionâ€™s documentation.

Platform Support
----------------

MongoDB 4.2+ only supports macOS versions 10.12+ on
Intel x86-64. See :ref:`mongodb-supported-platforms` for more
information.

.. _install-with-homebrew:

Install MongoDB Community Edition
---------------------------------

.. _osx-prereq:

Prerequisites
~~~~~~~~~~~~~

If you have the Homebrew ``brew`` package installed on your OSX host 
*and* you have previously tapped the official 
`MongoDB Homebrew Tap <https://github.com/mongodb/homebrew-brew>`_, 
skip to the prerequisites and go to the :ref:`install` step.

Install Homebrew
````````````````

.. container::

   OSX does not include the Homebrew ``brew`` package by default.
   Install ``brew`` using the 
   `official instructions <https://brew.sh/#install>`_.

Tap the MongoDB Homebrew Tap
````````````````````````````

.. container::
   
   Issue the following from the terminal to
   tap the official 
   `MongoDB Homebrew Tap <https://github.com/mongodb/homebrew-brew>`_:

   .. code-block:: sh

      brew tap mongodb/brew 

.. _install:

Install MongoDB
~~~~~~~~~~~~~~~

.. container::

   From a terminal, issue the following:

   .. code-block:: sh

      brew install mongodb-community@{+version+}

   In addition to the :doc:`binaries </reference/program>`, the install
   creates:

   - the :doc:`configuration file </reference/configuration-options>`
     (:file:`/usr/local/etc/mongod.conf`)

   - the  :setting:`log directory path <systemLog.path>` (``/usr/local/var/log/mongodb``)

   - the :setting:`data directory path <storage.dbPath>` (``/usr/local/var/mongodb``)

Run MongoDB
~~~~~~~~~~~

.. container::

   From a terminal, issue the following to run MongoDB (i.e.
   the :binary:`~bin.mongod` process) in the foreground.

   .. code-block:: sh

      mongod --config /usr/local/etc/mongod.conf

   Alternatively, to run MongoDB as a macOS service, issue the
   following (the process uses the :file:`/usr/local/etc/mongod.conf`
   file created during the install):

   .. code-block:: sh

      brew services start mongodb-community@{+version+}

Connect and Use MongoDB
~~~~~~~~~~~~~~~~~~~~~~~

.. container::

   To begin using MongoDB, connect a :binary:`~bin.mongo` shell to the
   running instance. From a new terminal, issue the following:

   .. code-block:: sh

      mongo

   For information on CRUD (Create,Read,Update,Delete) operations, see:

   - :doc:`/tutorial/insert-documents`
   - :doc:`/tutorial/query-documents`
   - :doc:`/tutorial/update-documents`
   - :doc:`/tutorial/remove-documents`

Additional Considerations
-------------------------

Localhost Binding
~~~~~~~~~~~~~~~~~

Starting with MongoDB 3.6, MongoDB binaries, :binary:`mongod
<bin.mongod>` and :binary:`mongos <bin.mongos>`, bind to
``localhost`` by default.

When bound only to the localhost, these binaries can only accept
connections from clients that are running on the same machine. Remote
clients cannot connect to the binaries bound only to localhost. For
more information, including how to override and bind to other ip
addresses, see :ref:`3.6-bind_ip-compatibility`.

.. toctree::
   :hidden:
   :titlesonly:

   Install using .tgz Tarball </tutorial/install-mongodb-on-os-x-tarball>
