.. _atlas-app-secret:

=========================
Define and Manage Secrets
=========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

A **Secret** is a private value that is stored on the
|service| backend and hidden from users. Secrets are useful for storing sensitive
information such as an API key or an internal identifier.

You cannot directly read the value of a Secret after
defining it. Instead, you link the Secret to another :ref:`Value <atlas-define-value>`, then
access the value from a Trigger :ref:`Function <atlas-functions>`.

.. _atlas-create-secret:
.. _atlas-define-secret:

Define a Secret
---------------

You can define a new Secret from the UI or using the App Services CLI.

.. tabs::

   .. tab:: {+atlas-ui+}
      :tabid: ui

      .. procedure::

         Note that the UI refers to creating a new Value when defining a Secret.
         This is because a Secret is a special Value type, whose value is
         hidden after you create it.

         .. step:: Navigate to the :guilabel:`Values` Page

            a. Navigate to the :guilabel:`Triggers` page:

               .. include:: /includes/nav/list-triggers.rst

            #. Click the :guilabel:`Linked App Service: Triggers` link.

            #. In the sidebar, click :guilabel:`Values` under the :guilabel:`Build` heading.

            #. Click :guilabel:`Create a Value`.

         .. step:: Name the Secret Value

            Enter a name for the Secret. This name is how you refer to
            the Secret in Functions and must be unique within the project.

            .. note:: Secret Name Restrictions

               Value names cannot exceed 64 characters and may only contain
               ASCII letters, numbers, underscores, and hyphens. The first
               character must be a letter or number.

         .. step:: Define the Secret Value

            a. Select :guilabel:`Secret` type.

            #. Enter the new Secret's value in the :guilabel:`Add Content` input box.

               Secret values may not exceed 500 characters.

            .. warning::

               You cannot directly read the value of a Secret after saving it.

         .. step:: Save and Deploy

            After you've defined the Secret, click :guilabel:`Save`. If deployment drafts 
            are enabled for your application, click :guilabel:`Review & Deploy` to deploy the changes.

   .. tab:: App Services CLI
      :tabid: cli

      .. procedure::

         .. step:: Authenticate a MongoDB |service| User

            .. include:: /includes/triggers/app-services/cli-login.rst

         .. step:: Pull Your App's Latest Configuration Files

            .. include:: /includes/triggers/app-services/cli-pull-latest.rst

         .. step:: Create a New Secret

            Run the following command to define a new Secret:

            .. code-block:: shell

               appservices secrets create --app=<Your App ID> \
                 --name="<Secret Name>" \
                 --value="<Secret Value>"

         .. step:: Deploy Your Changes

            .. include:: /includes/triggers/app-services/cli-deploy.rst

.. _atlas-list-secrets:
.. _atlas-view-secrets:

View Secrets
------------

You can view a list of all Secrets in an app from the UI or using the App Services CLI.

.. tabs::

   .. tab:: {+atlas-ui+}
      :tabid: ui

      a. From the :guilabel:`Triggers` page, click the :guilabel:`Linked App
         Service: Triggers` link.

      #. In the sidebar, click :guilabel:`Values` under the :guilabel:`Build` heading.

      The table lists all Values, including Secrets, and indicates each
      Value's type in its row.

   .. tab:: App Services CLI
      :tabid: cli

      To list the names and IDs of all Secrets, run the following command:

      .. code-block:: shell

         appservices secrets list --app=<Your App ID>

.. _atlas-update-secret:

Update a Secret
---------------

You can update a Secret from the UI or using the App Services CLI.

.. tabs::

   .. tab:: {+atlas-ui+}
      :tabid: ui

      To update a Secret from the {+atlas-ui+}:

      a. From the :guilabel:`Triggers` page, click the :guilabel:`Linked App
         Service: Triggers` link.

      #. In the sidebar, click :guilabel:`Values` under the :guilabel:`Build`
         heading.

      #. Find the Value that you want to update in the table, open its
         :guilabel:`Actions` menu, and select :guilabel:`Edit Secret`.

      #. You can change both the name and value for the Secret.

      #. Click :guilabel:`Save` and then, if needed, deploy your changes.

   .. tab:: App Services CLI
      :tabid: cli

      To update the value of a Secret using the App Services CLI, run the
      following command:

      .. code-block:: shell

         appservices secrets update --app=<Your App ID> \
           --secret="<Secret ID or Name>" \
           --name="<Updated Secret Name>" \
           --value="<Updated Value>"

.. _atlas-access-secret:

Use a Secret
------------

You *cannot* directly read the value of a Secret after defining it.

To use a Secret in a Triggers Function:

a. :ref:`Create a new Value <atlas-define-value>` that links to the Secret.
#. Use the :ref:`context.values <atlas-context-values>` module to access the Secret's value in your Function.

.. _atlas-delete-secret:

Delete a Secret
---------------

You can delete a Secret from the UI or using the App Services CLI.

.. tabs::

   .. tab:: {+atlas-ui+}
      :tabid: ui

      To delete a Secret from the {+atlas-ui+}:

      a. From the :guilabel:`Triggers` page, click the :guilabel:`Linked App
         Service: Triggers` link.

      #. In the sidebar, click :guilabel:`Values` under the :guilabel:`Build`
         heading.

      #. Find the Value that you want to delete in the table, open its
         :guilabel:`Actions` menu, and select :guilabel:`Delete Secret`.

      #. Confirm that you want to delete the Secret.

   .. tab:: App Services CLI
      :tabid: cli

      To delete a Secret using the App Services CLI, run the following command:

      .. code-block:: shell

         appservices secrets delete --app=<Your App ID> --secret=<Secret ID>

      .. tip::

         You can delete multiple Secrets with a single command by specifying
         their ``name`` or ``id`` values as a comma-separated list.

         .. code-block:: bash

            appservices secrets delete --app=<Your App ID> \
            --secret=some-api-key,609af850b78eca4a8db4303f,another-key
