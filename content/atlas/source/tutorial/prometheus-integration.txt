.. _prometheus-integration:

=========================
Integrate with Prometheus
=========================

.. meta::
   :description: Integrate Atlas with Prometheus to monitor deployment metrics, configure service discovery, and visualize data using Grafana.

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

|prometheus| collects metrics from configured targets at given
intervals, evaluates rule expressions, displays the results, and can
trigger alerts when it observes specific conditions. 

Our integration allows you to configure |service| to send metric data
about your deployment to your |prometheus| instance.

Limitations
~~~~~~~~~~~

|service| for Government does not support the |prometheus| integration.

Prerequisites
~~~~~~~~~~~~~

- |prometheus| integration is available only on ``M10+`` clusters.

- Have a working Prometheus instance. To set up a working instance, see
  their `Installation Guide <https://prometheus.io/docs/prometheus/latest/installation/>`__.

- Add the IP of the device hosting your Prometheus instance to the
  :ref:`IP Access List <access-list>`.

  .. note::

     If you add ``0.0.0.0/0`` to the IP Access List, which allows cluster
     access from anywhere in the public internet, |service| disables the
     Prometheus integration.

     If ``0.0.0.0/0`` is already on the IP Access List, |service|
     stops you from configuring the Prometheus integration.

- (Optional) Use `Grafana
  <https://prometheus.io/docs/visualization/grafana/>`__ to visualize your
  Prometheus metrics.

Procedure
~~~~~~~~~

To configure an |service| integration with |prometheus|:

.. include:: /includes/steps-configure-prometheus-integration.rst

.. _example-prometheus-configurations:

Example Configurations
~~~~~~~~~~~~~~~~~~~~~~

The following shows examples of the `configuration file
<https://prometheus.io/docs/prometheus/latest/configuration/configuration/#configuration-file>`__
when you use the :ref:`HTTP SD <httpsd-prometheus-config>` or :ref:`File
Service Discovery <filesd-prometheus-config>` method.

The configuration file in both methods contains the following fields:

.. list-table::
   :widths: 25 75
   :header-rows: 1

   * - Field
     - Description

   * - ``scrape_interval``
     - Time that indicates how frequently to scrape targets. This setting supports a minimum time of 10s.

   * - ``job_name``
     - Human-readable label assigned to scraped metrics.

   * - ``metrics_path``
     - HTTP resource path that indicates where to fetch metrics from targets.

   * - ``scheme``
     - Protocol scheme that you want to configure for requests.

   * - ``basic_auth``
     - Authorization header to use on every scrape request.
  
.. _httpsd-prometheus-config:

HTTP Service Discovery
`````````````````````````

The HTTP Service Discovery method also contains the ``http_sd_configs`` field
with the following sub-fields:

.. list-table::
   :widths: 25 75
   :header-rows: 1

   * - Field
     - Description

   * - ``url``
     - URL from which Prometheus fetches the targets.

   * - ``refresh_interval``
     - Time that indicates when to re-query the endpoint.

   * - ``basic_auth``
     - Credentials to use for authenticating to the API server.

.. code-block:: yaml

   global:
     scrape_interval: 15s

   scrape_configs:

     - job_name: "Cloud-Testing-mongo-metrics"
       scrape_interval: 10s
       metrics_path: /metrics
       scheme : https
       basic_auth:
         username: prom_user_618d48e05277a606ed2496fe
         password: fSIMUngfTmOTVEB4
       http_sd_configs:
         - url: https://cloud.mongodb.com/prometheus/v1.0/groups/618d48e05277a606ed2496fe/discovery
           refresh_interval: 60s
           basic_auth:
             username: prom_user_618d48e05277a606ed2496fe
             password: fSIMUngfTmOTVEB4

AWS PrivateLink
````````````````

The HTTP Service Discovery method for AWS PrivateLink also contains the 
``url`` field with the following variables that you should define with 
your values:

.. note::

   Each private endpoint handles metric scraping for a single region. 
   For multi-region clusters, you must specify different scrape 
   configurations for the Prometheus instances in each regions.

.. list-table::
   :widths: 25 75
   :header-rows: 1

   * - Field
     - Description

   * - ``group_id``
     - Unique string that identifies the |service| project. For 
       example, ``5f4a8b9c1d2e3f4a5b6c7d8e``.

   * - ``endpoint_id``
     - AWS PrivateLink Endpoint ID (format: ``vpce-xxxxxxxxxxxxx``). 
       For example, ``vpce-0a1b2c3d4e5f6g7h8``. To find your endpoint 
       ID, do one of the following steps:

       - In the {+atlas-ui+}, go to the :guilabel:`Network Access` tab, 
         :guilabel:`Private Endpoint` section, and copy the 
         :guilabel:`Endpoint ID` value.

       - In the AWS Console, go to the VPC service, 
         :guilabel:`Endpoints` section, and copy the
         :guilabel:`VPC Endpoint ID` value for your |service| endpoint.

.. code-block:: yaml

   global:
     scrape_interval: 10s
     evaluation_interval: 10s

   scrape_configs:
     - job_name: "Cloud-Testing-mongo-metrics"
       scrape_interval: 10s
       scrape_timeout: 10s
       metrics_path: /metrics
       scheme : https
       basic_auth:
         username: prom_user_618d48e05277a606ed2496fe
         password: fSIMUngfTmOTVEB4
       http_sd_configs:
         - url: https://cloud.mongodb.com/prometheus/v1.0/groups/{group_id}/discovery?targetScheme=PRIVATE_ENDPOINT&endpointId={endpoint_id}
           refresh_interval: 60s
           basic_auth:
             username: prom_user_618d48e05277a606ed2496fe
             password: fSIMUngfTmOTVEB4
       relabel_configs:
         - source_labels: [__metrics_path__]
           target_label: __metrics_path__
         - source_labels: [__instance__]
           target_label: instance

.. _filesd-prometheus-config:

File Service Discovery
``````````````````````

The File Service Discovery method also contains the
``file_sd_configs`` field with the following sub-field:

.. list-table::
   :widths: 25 75
   :header-rows: 1

   * - Field
     - Description

   * - ``files``
     - List that contains the files from which to extract the metrics scraping targets.

.. code-block:: yaml

   global:
     scrape_interval: 15s
 
   scrape_configs:

     - job_name: "Cloud-Testing-mongo-metrics"
       scrape_interval: 10s
       metrics_path: /metrics
       scheme : https
       basic_auth:
         username: prom_user_618d48e05277a606ed2496fe
         password: fSIMUngfTmOTVEB4
       file_sd_configs:
         - files:
           - /usr/local/etc/targets.json

Import a Sample Grafana Dashboard
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To import a sample Grafana dashboard:

.. procedure::
   :style: normal
  
   .. step:: Navigate to the Import screen.
    
      In the Grafana UI, click the :icon-fa5:`plus` button, and then click :guilabel:`Import`.

   .. step:: Click :guilabel:`Upload JSON File`.
   
   .. step:: Copy over the ``mongo-metrics.json`` or the ``hardware-metrics.json`` file to create a dashboard.

      .. collapsible::
         :heading: mongo-metrics.json

         .. include:: /includes/prometheus-mongo-metrics.rst

      The ``monogo-metrics.json`` file generates `this dashboard
      <https://grafana.com/grafana/dashboards/19654-mongodb-atlas-system-metrics/>`__.

      .. collapsible::
         :heading: hardware-metrics.json

         .. include:: /includes/prometheus-hardware-metrics.rst

      The ``hardware-metrics.json`` file generates `this dashboard
      <https://grafana.com/grafana/dashboards/19655-mongodb-atlas-hardware-metrics/>`__.

To learn more about importing Grafana dashboards, see `the Grafana
documentation <https://grafana.com/docs/grafana/latest/dashboards/build-dashboards/import-dashboards/>`__.

Performance Metrics Available to Prometheus
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following metrics are available when you use the Prometheus
integration with your |service| cluster:

- :ref:`prometheus-metric-labels`

  - :manual:`serverStatus </reference/command/serverStatus/>` metrics
  - :manual:`replSetGetStatus </reference/command/replSetGetStatus/>`
    metrics

- :ref:`prometheus-mongodb-info-metrics`
- :ref:`prometheus-hardware-metrics`

.. _prometheus-metric-labels:

MongoDB Metric Labels
~~~~~~~~~~~~~~~~~~~~~

Each MongoDB metric contains the following labels:

.. list-table::
   :widths: 30 70
   :header-rows: 1

   * - Label
     - Description

   * - ``availability_zone``
     - |aws| availability zone ID, |gcp| fully-qualified name for a 
       zone, or |azure| zone number.

       |azure| supports availability zones only in a subset of 
       regions. |service| provides pre-defined availability zone 
       tags for |azure| only for regions that support availability 
       zones. To learn more, see :ref:`microsoft-azure`.

       For more information about the possible ``availabilityZone`` 
       values for each cloud provider, see the :aws:`AWS
       </ram/latest/userguide/working-with-az-ids.html>`, :gcp:`GCP
       </compute/docs/regions-zones>`, or :azure:`Azure
       </reliability/availability-zones-overview>`
       documentation.

   * - ``cl_name``
     - Human-readable label that identifies the cluster.

   * - ``cl_role``
     - Human readable label that defines the cluster role.

   * - ``group_id``
     - Unique hexadecimal digit string that identifies the project.

   * - ``group_name``
     - Label that uniquely identifies the project.

   * - ``org_id``
     - Unique hexadecimal digit string that identifies the organization.

   * - ``node_type``
     - Node type.

       Possible values are ``ELECTABLE``, ``READ_ONLY``, and ``ANALYTICS``.
       
       For more information, see :ref:`repl-set-node-types`.

   * - ``process_port``
     - Port on which the process runs.

   * - ``provider``
     - Cloud provider on which the node is provisioned.

       Possible values are ``AWS``, ``GCP``, and ``AZURE``.

   * - ``region``
     - Cloud region in which the node resides.

       For a complete list of possible ``region`` values,
       see the :ref:`AWS <amazon-aws>`, :ref:`GCP <google-gcp>`, or
       :ref:`Azure <microsoft-azure>` reference page.

   * - ``rs_nm``
     - Human-readable label that identifies the replica set.

   * - ``rs_state``
     - Number that indicates the :manual:`replica set state </reference/replica-states/>`.

.. _prometheus-mongodb-info-metrics:

MongoDB Information Metrics
~~~~~~~~~~~~~~~~~~~~~~~~~~~

``mongodb_info`` is a gauge that always has the value of ``1``. This
metric contains all the :ref:`prometheus-metric-labels` and
also the following labels:

.. list-table::
   :header-rows: 1
   :widths: 30 70

   * - Label
     - Description

   * - ``mongodb_version``
     - String that represents the major, minor, and patch versions.

   * - ``replica_state_name``
     - String that indicates the :manual:`replica set member status 
       </reference/replica-states/>`.

   * - ``process_type``
     - String that indicates the process running. Its values can be 
       ``mongod``, ``mongos``, or ``config``.

.. _prometheus-hardware-metrics:

Hardware Metrics
~~~~~~~~~~~~~~~~

.. note:: 

   You can also view descriptions of each hardware metric in the
   `Prometheus expression browser
   <https://prometheus.io/docs/visualization/browser/>`__.

.. include:: /includes/list-table-prometheus-metrics.rst

Hardware Metric Labels
~~~~~~~~~~~~~~~~~~~~~~

Each hardware metric contains the following labels:

.. list-table::
   :widths: 30 70
   :header-rows: 1

   * - Label
     - Description

   * - ``availability_zone``
     - |aws| availability zone ID, |gcp| fully-qualified name for a 
       zone, or |azure| zone number.

       |azure| supports availability zones only in a subset of 
       regions. |service| provides pre-defined availability zone 
       tags for |azure| only for regions that support availability 
       zones. To learn more, see :ref:`microsoft-azure`.

       For more information about the possible ``availabilityZone`` 
       values for each cloud provider, see the :aws:`AWS
       </ram/latest/userguide/working-with-az-ids.html>`, :gcp:`GCP
       </compute/docs/regions-zones>`, or :azure:`Azure
       </reliability/availability-zones-overview>`
       documentation.

   * - ``cl_name``
     - Label that uniquely identifies the cluster.

   * - ``disk_name``
     - Human-readable label that identifies the disk.

   * - ``group_id``
     - Unique hexadecimal digit string that identifies the project.

   * - ``group_name``
     - Label that uniquely identifies the project.

   * - ``org_id``
     - Unique hexadecimal digit string that identifies the organization.

   * - ``node_type``
     - Node type.

       Possible values are ``ELECTABLE``, ``READ_ONLY``, and ``ANALYTICS``.
       
       For more information, see :ref:`repl-set-node-types`.

   * - ``process_port``
     - Port on which the process runs.

   * - ``provider``
     - Cloud provider on which the node is provisioned.

       Possible values are ``AWS``, ``GCP``, and ``AZURE``.

   * - ``region``
     - Cloud region in which the node resides.

       For a complete list of possible ``region`` values,
       see the :ref:`AWS <amazon-aws>`, :ref:`GCP <google-gcp>`, or
       :ref:`Azure <microsoft-azure>` reference page.

   * - ``replica_set_name``
     - Label that uniquely identifies the replica set.
