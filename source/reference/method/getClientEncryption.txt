=====================
getClientEncryption()
=====================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. versionadded:: 4.2

.. method:: getClientEncryption()

   Returns the ``ClientEncryption`` object for the current database collection.
   The ``ClientEncryption`` object supports explicit (manual) encryption 
   and decryption of field values for 
   :doc:`Client-Side field level encryption 
   </core/security-client-side-encryption>`.

   :method:`getClientEncryption()` has the following syntax:

   .. code-block:: shell

      db.getMongo().getClientEncryption();

   :returns:

     The ``ClientEncryption`` object for current database connection.

Use the ``ClientEncryption`` object to access the following 
explicit encryption methods:

- :method:`~ClientEncryption.encrypt()` 
- :method:`~ClientEncryption.decrypt()`

Behavior
--------

Enable Client-Side Field Level Encryption on Database Connection
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/extracts/csfle-requires-enabling-encryption.rst

Example
-------

.. include:: /includes/extracts/csfle-keyvault-unique-index.rst

The following example uses a locally managed KMS for the client-side
field level encryption configuration.

.. include:: /includes/extracts/csfle-connection-boilerplate.rst

Use the :method:`getClientEncryption()` method to
retrieve the client encryption object:

.. code-block:: javascript

   clientEncryption = encryptedClient.getClientEncryption()

For complete documentation on initiating MongoDB connections with
client-side field level encryption enabled, see :method:`Mongo()`.
