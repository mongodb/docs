.. meta::
   :robots: noindex, nosnippet


.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol



Class RealmList
^^^^^^^^^^^^^^^

.. _io_realm_RealmList:



io.realm
========


 | `java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ 
 | 		`java.util.AbstractCollection <https://docs.oracle.com/javase/7/docs/api/java/util/AbstractCollection.html>`__ 
 | 					`java.util.AbstractList <https://docs.oracle.com/javase/7/docs/api/java/util/AbstractList.html>`__ 
 | 								io.realm.RealmList


**Implemented interfaces:**



- :ref:`io.realm.OrderedRealmCollection <io_realm_OrderedRealmCollection>` 
- `java.util.List <https://docs.oracle.com/javase/7/docs/api/java/util/List.html>`__ 
- :ref:`io.realm.RealmCollection <io_realm_RealmCollection>` 
- `java.util.Collection <https://docs.oracle.com/javase/7/docs/api/java/util/Collection.html>`__ 
- `java.lang.Iterable <https://docs.oracle.com/javase/7/docs/api/java/lang/Iterable.html>`__ 
- `java.util.Collection <https://docs.oracle.com/javase/7/docs/api/java/util/Collection.html>`__ 
- `java.lang.Iterable <https://docs.oracle.com/javase/7/docs/api/java/lang/Iterable.html>`__ 


RealmList is used to model one-to-many relationships in a :ref:`io.realm.RealmObject <io_realm_RealmObject>` . RealmList has two modes: A managed and unmanaged mode. In managed mode all objects are persisted inside a Realm, in unmanaged mode it works as a normal ArrayList.

Only Realm can create managed RealmLists. Managed RealmLists will automatically update the content whenever the underlying Realm is updated, and can only be accessed using the getter of a :ref:`io.realm.RealmObject <io_realm_RealmObject>` .



Unmanaged RealmLists can be created by the user and can contain both managed and unmanaged RealmObjects. This is useful when dealing with JSON deserializers like GSON or other frameworks that inject values into a class. Unmanaged elements in this list can be added to a Realm using the :ref:`Realm.copyToRealm(Iterable, ImportFlag...) <io_realm_Realm_copyToRealm_Iterable__ImportFlag____>`  method.



:ref:`RealmList <io_realm_RealmList>`  can contain more elements than ``Integer.MAX_VALUE`` . In that case, you can access only first ``Integer.MAX_VALUE``  elements in it.






Constructors
============

.. list-table::
   :header-rows: 1
   
   * - Constructor and Description
   
   * - | :ref:`RealmList <io_realm_RealmList>` ()
       | 
       
       
       Creates a RealmList in unmanaged mode, where the elements are not controlled by a Realm.
       
       
       
   
   * - | :ref:`RealmList <io_realm_RealmList>` (
       |  **E[]** objects
       | )
       
       
       Creates a RealmList in unmanaged mode with an initial list of elements.
       
       
       
   
   


Field Summary
=============

.. list-table::
   :header-rows: 1
   
   * - Modifier and Type
     - Field and Description
   
   * - public final **BaseRealm**
       
       
     - :ref:`baseRealm <io_realm_RealmList_baseRealm>` 
       
       The **BaseRealm** instance in which this list resides.
       
       Warning: This field is only exposed for internal usage, and should not be used.
       
       
       
   
   


Method Summary
==============

.. list-table::
   :header-rows: 1
   
   * - Modifier and Type
     - Method and Description
   
   * - public **boolean**
     - | :ref:`add <io_realm_RealmList_add>` (
       |  **E** object
       | )
       
       
       Adds the specified object at the end of this List.
       
       
       
   
   * - public **void**
     - | :ref:`add <io_realm_RealmList_add>` (
       |  **int** location, 
       |  **E** element
       | )
       
       
       Inserts the specified object into this List at the specified location.
       
       
       
   
   * - public **void**
     - | :ref:`addChangeListener <io_realm_RealmList_addChangeListener>` (
       |  :ref:`io.realm.RealmChangeListener\<io.realm.RealmList\<E>> <io_realm_RealmChangeListener>`  listener
       | )
       
       
       Adds a change listener to this :ref:`RealmList <io_realm_RealmList>` .
       
       
       
       
       
   
   * - public **void**
     - | :ref:`addChangeListener <io_realm_RealmList_addChangeListener>` (
       |  :ref:`io.realm.OrderedRealmCollectionChangeListener\<io.realm.RealmList\<E>> <io_realm_OrderedRealmCollectionChangeListener>`  listener
       | )
       
       
       Adds a change listener to this :ref:`RealmList <io_realm_RealmList>` .
       
       
       
       
       
   
   * - public **<any>**
     - | :ref:`asChangesetObservable <io_realm_RealmList_asChangesetObservable>` ()
       | 
       
       
       Returns an Rx Observable that monitors changes to this RealmList.
       
       
       
   
   * - public **<any>**
     - | :ref:`asFlowable <io_realm_RealmList_asFlowable>` ()
       | 
       
       
       Returns an Rx Flowable that monitors changes to this RealmList.
       
       
       
   
   * - public **double**
     - | :ref:`average <io_realm_RealmList_average>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       Returns the average of a given field.
       
       
       
   
   * - public **void**
     - | :ref:`clear <io_realm_RealmList_clear>` ()
       | 
       
       
       Removes all elements from this list, leaving it empty.
       
       
       
   
   * - public **boolean**
     - | :ref:`contains <io_realm_RealmList_contains>` (
       |  `Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__  object
       | )
       
       
       Returns ``true``  if the list contains the specified element when attached to a Realm.
       
       
       
       
       
   
   * - public :ref:`OrderedRealmCollectionSnapshot <io_realm_OrderedRealmCollectionSnapshot>` 
     - | :ref:`createSnapshot <io_realm_RealmList_createSnapshot>` ()
       | 
       
       
       Creates a snapshot from this :ref:`OrderedRealmCollection <io_realm_OrderedRealmCollection>` .
       
       
       
       
       
   
   * - public **boolean**
     - | :ref:`deleteAllFromRealm <io_realm_RealmList_deleteAllFromRealm>` ()
       | 
       
       
       This deletes all objects in the collection from the underlying Realm as well as from the collection.
       
       
       
   
   * - public **boolean**
     - | :ref:`deleteFirstFromRealm <io_realm_RealmList_deleteFirstFromRealm>` ()
       | 
       
       
       Deletes the first object from the Realm.
       
       
       
   
   * - public **void**
     - | :ref:`deleteFromRealm <io_realm_RealmList_deleteFromRealm>` (
       |  **int** location
       | )
       
       
       Deletes the object at the given index from the Realm.
       
       
       
   
   * - public **boolean**
     - | :ref:`deleteLastFromRealm <io_realm_RealmList_deleteLastFromRealm>` ()
       | 
       
       
       Deletes the last object from the Realm.
       
       
       
   
   * - public **E**
     - | :ref:`first <io_realm_RealmList_first>` (
       |  **E** defaultValue
       | )
       
       
       Gets the first object from the collection.
       
       
       
   
   * - public **E**
     - | :ref:`first <io_realm_RealmList_first>` ()
       | 
       
       
       Gets the first object from the collection.
       
       
       
   
   * - public :ref:`RealmList <io_realm_RealmList>` 
     - | :ref:`freeze <io_realm_RealmList_freeze>` ()
       | 
       
       
       
       
       
       
       
       
   
   * - public **E**
     - | :ref:`get <io_realm_RealmList_get>` (
       |  **int** location
       | )
       
       
       Returns the element at the specified location in this list.
       
       
       
   
   * - public :ref:`Realm <io_realm_Realm>` 
     - | :ref:`getRealm <io_realm_RealmList_getRealm>` ()
       | 
       
       
       Returns the :ref:`Realm <io_realm_Realm>`  instance to which this collection belongs.
       
       
       
       
       
   
   * - public **boolean**
     - | :ref:`isFrozen <io_realm_RealmList_isFrozen>` ()
       | 
       
       
       
       
       
       
       
       
   
   * - public **boolean**
     - | :ref:`isLoaded <io_realm_RealmList_isLoaded>` ()
       | 
       
       
       Checks if a collection has finished loading its data yet.
       
       
       
   
   * - public **boolean**
     - | :ref:`isManaged <io_realm_RealmList_isManaged>` ()
       | 
       
       
       Checks if the collection is managed by Realm.
       
       
       
   
   * - public **boolean**
     - | :ref:`isValid <io_realm_RealmList_isValid>` ()
       | 
       
       
       Checks if the collection is still valid to use, i.e., the :ref:`io.realm.Realm <io_realm_Realm>`  instance hasn't been closed.
       
       
       
       
       
   
   * - public `Iterator <https://docs.oracle.com/javase/7/docs/api/java/util/Iterator.html>`__ 
     - | :ref:`iterator <io_realm_RealmList_iterator>` ()
       | 
       
       
       
       
       
       
       
       
   
   * - public **E**
     - | :ref:`last <io_realm_RealmList_last>` (
       |  **E** defaultValue
       | )
       
       
       Gets the last object from the collection.
       
       
       
   
   * - public **E**
     - | :ref:`last <io_realm_RealmList_last>` ()
       | 
       
       
       Gets the last object from the collection.
       
       
       
   
   * - public `ListIterator <https://docs.oracle.com/javase/7/docs/api/java/util/ListIterator.html>`__ 
     - | :ref:`listIterator <io_realm_RealmList_listIterator>` (
       |  **int** location
       | )
       
       
       
       
       
       
       
       
   
   * - public `ListIterator <https://docs.oracle.com/javase/7/docs/api/java/util/ListIterator.html>`__ 
     - | :ref:`listIterator <io_realm_RealmList_listIterator>` ()
       | 
       
       
       
       
       
       
       
       
   
   * - public **boolean**
     - | :ref:`load <io_realm_RealmList_load>` ()
       | 
       
       
       Blocks the collection until all data are available.
       
       
       
   
   * - public `Number <https://docs.oracle.com/javase/7/docs/api/java/lang/Number.html>`__ 
     - | :ref:`max <io_realm_RealmList_max>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       Finds the maximum value of a field.
       
       
       
   
   * - public `Date <https://docs.oracle.com/javase/7/docs/api/java/util/Date.html>`__ 
     - | :ref:`maxDate <io_realm_RealmList_maxDate>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       Finds the maximum date.
       
       
       
   
   * - public `Number <https://docs.oracle.com/javase/7/docs/api/java/lang/Number.html>`__ 
     - | :ref:`min <io_realm_RealmList_min>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       Finds the minimum value of a field.
       
       
       
   
   * - public `Date <https://docs.oracle.com/javase/7/docs/api/java/util/Date.html>`__ 
     - | :ref:`minDate <io_realm_RealmList_minDate>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       Finds the minimum date.
       
       
       
   
   * - public **void**
     - | :ref:`move <io_realm_RealmList_move>` (
       |  **int** oldPos, 
       |  **int** newPos
       | )
       
       
       Moves an object from one position to another, while maintaining a fixed sized list.
       
       
       
   
   * - public **boolean**
     - | :ref:`remove <io_realm_RealmList_remove>` (
       |  `Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__  object
       | )
       
       
       Removes one instance of the specified object from this ``Collection``  if one is contained.
       
       
       
       
       
   
   * - public **E**
     - | :ref:`remove <io_realm_RealmList_remove>` (
       |  **int** location
       | )
       
       
       Removes the object at the specified location from this list.
       
       
       
   
   * - public **boolean**
     - | :ref:`removeAll <io_realm_RealmList_removeAll>` (
       |  `java.util.Collection\<?> <https://docs.oracle.com/javase/7/docs/api/java/util/Collection.html>`__  collection
       | )
       
       
       Removes all occurrences in this ``Collection``  of each object in the specified ``Collection`` .
       
       
       
       
       
   
   * - public **void**
     - | :ref:`removeAllChangeListeners <io_realm_RealmList_removeAllChangeListeners>` ()
       | 
       
       
       Removes all user-defined change listeners.
       
       
       
   
   * - public **void**
     - | :ref:`removeChangeListener <io_realm_RealmList_removeChangeListener>` (
       |  :ref:`io.realm.RealmChangeListener\<io.realm.RealmList\<E>> <io_realm_RealmChangeListener>`  listener
       | )
       
       
       Removes the specified change listener.
       
       
       
   
   * - public **void**
     - | :ref:`removeChangeListener <io_realm_RealmList_removeChangeListener>` (
       |  :ref:`io.realm.OrderedRealmCollectionChangeListener\<io.realm.RealmList\<E>> <io_realm_OrderedRealmCollectionChangeListener>`  listener
       | )
       
       
       Removes the specified change listener.
       
       
       
   
   * - public **E**
     - | :ref:`set <io_realm_RealmList_set>` (
       |  **int** location, 
       |  **E** object
       | )
       
       
       Replaces the element at the specified location in this list with the specified object.
       
       
       
   
   * - public **int**
     - | :ref:`size <io_realm_RealmList_size>` ()
       | 
       
       
       Returns the number of elements in this ``List`` .
       
       
       
       
       
   
   * - public :ref:`RealmResults <io_realm_RealmResults>` 
     - | :ref:`sort <io_realm_RealmList_sort>` (
       |  `java.lang.String[] <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldNames, 
       |  :ref:`io.realm.Sort[] <io_realm_Sort>`  sortOrders
       | )
       
       
       Sorts a collection based on the provided fields and sort orders.
       
       
       
   
   * - public :ref:`RealmResults <io_realm_RealmResults>` 
     - | :ref:`sort <io_realm_RealmList_sort>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName1, 
       |  :ref:`Sort <io_realm_Sort>`  sortOrder1, 
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName2, 
       |  :ref:`Sort <io_realm_Sort>`  sortOrder2
       | )
       
       
       Sorts a collection based on the provided fields and sort orders.
       
       
       
   
   * - public :ref:`RealmResults <io_realm_RealmResults>` 
     - | :ref:`sort <io_realm_RealmList_sort>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  :ref:`Sort <io_realm_Sort>`  sortOrder
       | )
       
       
       Sorts a collection based on the provided field and sort order.
       
       
       
   
   * - public :ref:`RealmResults <io_realm_RealmResults>` 
     - | :ref:`sort <io_realm_RealmList_sort>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       Sorts a collection based on the provided field in ascending order.
       
       
       
   
   * - public `Number <https://docs.oracle.com/javase/7/docs/api/java/lang/Number.html>`__ 
     - | :ref:`sum <io_realm_RealmList_sum>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       Calculates the sum of a given field.
       
       
       
   
   * - public `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ 
     - | :ref:`toString <io_realm_RealmList_toString>` ()
       | 
       
       
       
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`where <io_realm_RealmList_where>` ()
       | 
       
       
       Returns a RealmQuery, which can be used to query for specific objects of this class.
       
       
       
   
   


Inherited Methods
=================



- Methods inherited from class `java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ : ``getClass`` , ``hashCode`` , ``equals`` , ``clone`` , ``toString`` , ``notify`` , ``notifyAll`` , ``wait`` , ``wait`` , ``wait`` , ``finalize`` 
- Methods inherited from class `java.util.AbstractCollection <https://docs.oracle.com/javase/7/docs/api/java/util/AbstractCollection.html>`__ : ``iterator`` , ``size`` , ``isEmpty`` , ``contains`` , ``toArray`` , ``toArray`` , ``add`` , ``remove`` , ``containsAll`` , ``addAll`` , ``removeAll`` , ``retainAll`` , ``clear`` , ``toString`` 
- Methods inherited from class `java.util.AbstractList <https://docs.oracle.com/javase/7/docs/api/java/util/AbstractList.html>`__ : ``add`` , ``get`` , ``set`` , ``add`` , ``remove`` , ``indexOf`` , ``lastIndexOf`` , ``clear`` , ``addAll`` , ``iterator`` , ``listIterator`` , ``listIterator`` , ``subList`` , ``equals`` , ``hashCode`` , ``removeRange`` 




Field Detail
============

.. _io_realm_RealmList_baseRealm:



``baseRealm`` 
--------------

The **BaseRealm** instance in which this list resides.

Warning: This field is only exposed for internal usage, and should not be used.






Constructor Detail
==================

.. _RealmList:

.. _RealmList__:

.. _io_realm_RealmList:

.. _io_realm_RealmList__:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmList <io_realm_RealmList>` ()
       | 
       
       
       
   
   * - Creates a RealmList in unmanaged mode, where the elements are not controlled by a Realm. This effectively makes the RealmList function as a `java.util.ArrayList <https://docs.oracle.com/javase/7/docs/api/java/util/ArrayList.html>`__  and it is not possible to query the objects in this state.
       
       Use :ref:`io.realm.Realm.copyToRealm(Iterable, ImportFlag...) <io_realm_Realm_copyToRealm_Iterable__ImportFlag____>`  to properly persist its elements in Realm.
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _RealmList:

.. _RealmList__:

.. _io_realm_RealmList:

.. _io_realm_RealmList__:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmList <io_realm_RealmList>` (
       |  **E[]** objects
       | )
       
       
       
   
   * - Creates a RealmList in unmanaged mode with an initial list of elements. A RealmList in unmanaged mode function as a `java.util.ArrayList <https://docs.oracle.com/javase/7/docs/api/java/util/ArrayList.html>`__  and it is not possible to query the objects in this state.
       
       Use :ref:`io.realm.Realm.copyToRealm(Iterable, ImportFlag...) <io_realm_Realm_copyToRealm_Iterable__ImportFlag____>`  to properly persist all unmanaged elements in Realm.
       
       
       
       
       
       
       
       
       **Parameters**
       
       - ``objects`` - initial objects in the list.
          
          
          
       
       
       
       
       
   
   




Method Detail
=============

.. _add:

.. _add__:

.. _RealmList_add:

.. _RealmList_add__:

.. _io_realm_RealmList_add:

.. _io_realm_RealmList_add__:



add
----

.. _io_realm_RealmList_add_E_:

.. _add_E_:

.. _RealmList_add_E_:

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`add <io_realm_RealmList_add>` (
       |  **E** object
       | )
       
       
       
   
   * - Adds the specified object at the end of this List.
       
       1. **Unmanaged RealmLists**: It is possible to add both managed and unmanaged objects. If adding managed objects to an unmanaged RealmList they will not be copied to the Realm again if using :ref:`Realm.copyToRealm(RealmModel, ImportFlag...) <io_realm_Realm_copyToRealm_RealmModel__ImportFlag____>`  afterwards.
          
          
          
          
       #. **Managed RealmLists**: It is possible to add unmanaged objects to a RealmList that is already managed. In that case the object will transparently be copied to Realm using :ref:`Realm.copyToRealm(RealmModel, ImportFlag...) <io_realm_Realm_copyToRealm_RealmModel__ImportFlag____>`  or :ref:`Realm.copyToRealmOrUpdate(RealmModel, ImportFlag...) <io_realm_Realm_copyToRealmOrUpdate_RealmModel__ImportFlag____>`  if it has a primary key.
          
          
          
          
       
       
       
       
       
       
       
       **Parameters**
       
       - ``object`` - the object to add.
          
          
          
       
       
       
       
       **Returns**
       
       always ``true`` .
       
       
       
       
       
       
       **Throws**
       
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if Realm instance has been closed or parent object has been removed.
          
          
          
       
       
       
       
       **Overrides**
       
       ``add`` in class `AbstractList <https://docs.oracle.com/javase/7/docs/api/java/util/AbstractList.html>`__ 
       
       
   
   
.. _io_realm_RealmList_add_int_E_:

.. _io_realm_RealmList_add_int__E_:

.. _add_int_E_:

.. _add_int__E_:

.. _RealmList_add_int_E_:

.. _RealmList_add_int__E_:

.. list-table::
   :header-rows: 1
   
   * - | public **void** :ref:`add <io_realm_RealmList_add>` (
       |  **int** location, 
       |  **E** element
       | )
       
       
       
   
   * - Inserts the specified object into this List at the specified location. The object is inserted before any previous element at the specified location. If the location is equal to the size of this List, the object is added at the end.
       
       1. **Unmanaged RealmLists**: It is possible to add both managed and unmanaged objects. If adding managed objects to an unmanaged RealmList they will not be copied to the Realm again if using :ref:`Realm.copyToRealm(RealmModel, ImportFlag...) <io_realm_Realm_copyToRealm_RealmModel__ImportFlag____>`  afterwards.
          
          
          
          
       #. **Managed RealmLists**: It is possible to add unmanaged objects to a RealmList that is already managed. In that case the object will transparently be copied to Realm using :ref:`Realm.copyToRealm(RealmModel, ImportFlag...) <io_realm_Realm_copyToRealm_RealmModel__ImportFlag____>`  or :ref:`Realm.copyToRealmOrUpdate(RealmModel, ImportFlag...) <io_realm_Realm_copyToRealmOrUpdate_RealmModel__ImportFlag____>`  if it has a primary key.
          
          
          
          
       
       
       
       
       
       
       
       **Parameters**
       
       - ``location`` - the index at which to insert.
          
          
          
       - ``element`` - the element to add.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if Realm instance has been closed or container object has been removed.
          
          
          
       - `IndexOutOfBoundsException <https://docs.oracle.com/javase/7/docs/api/java/lang/IndexOutOfBoundsException.html>`__  - if ``location < 0 || location > size()`` .
          
          
          
          
          
       
       
       
       
       **Overrides**
       
       ``add`` in class `AbstractList <https://docs.oracle.com/javase/7/docs/api/java/util/AbstractList.html>`__ 
       
       
   
   


.. _addChangeListener:

.. _addChangeListener__:

.. _RealmList_addChangeListener:

.. _RealmList_addChangeListener__:

.. _io_realm_RealmList_addChangeListener:

.. _io_realm_RealmList_addChangeListener__:



addChangeListener
-----------------

.. _io_realm_RealmList_addChangeListener_io_realm_RealmChangeListener_:

.. _io_realm_RealmList_addChangeListener_RealmChangeListener_:

.. _addChangeListener_io_realm_RealmChangeListener_:

.. _addChangeListener_RealmChangeListener_:

.. _RealmList_addChangeListener_io_realm_RealmChangeListener_:

.. _RealmList_addChangeListener_RealmChangeListener_:

.. _io_realm_RealmList_addChangeListener_RealmChangeListener_RealmList_E___:

.. list-table::
   :header-rows: 1
   
   * - | public **void** :ref:`addChangeListener <io_realm_RealmList_addChangeListener>` (
       |  :ref:`io.realm.RealmChangeListener\<io.realm.RealmList\<E>> <io_realm_RealmChangeListener>`  listener
       | )
       
       
       
   
   * - Adds a change listener to this :ref:`RealmList <io_realm_RealmList>` .
       
       Registering a change listener will not prevent the underlying RealmList from being garbage collected. If the RealmList is garbage collected, the change listener will stop being triggered. To avoid this, keep a strong reference for as long as appropriate e.g. in a class variable.
       
        
       
       .. code-block:: java
       
          
           public class MyActivity extends Activity {
          
               private RealmList<Dog> dogs; // Strong reference to keep listeners alive
          
               @Override
               protected void onCreate(Bundle savedInstanceState) {
                 super.onCreate(savedInstanceState);
                 dogs = realm.where(Person.class).findFirst().getDogs();
                 dogs.addChangeListener(new RealmChangeListener<RealmList<Dog>>() {
                     @Override
                     public void onChange(RealmList<Dog> dogs) {
                         // React to change
                     }
                 });
               }
           }
           
       
       
        
       
       
       
       
       
       
       **Parameters**
       
       - ``listener`` - the change listener to be notified.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the change listener is ``null`` .
          
          
          
          
          
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if you try to add a listener from a non-Looper or `android.app.IntentService <https://developer.android.com/reference/android/app/IntentService>`__  thread.
          
          
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmList_addChangeListener_io_realm_OrderedRealmCollectionChangeListener_:

.. _io_realm_RealmList_addChangeListener_OrderedRealmCollectionChangeListener_:

.. _addChangeListener_io_realm_OrderedRealmCollectionChangeListener_:

.. _addChangeListener_OrderedRealmCollectionChangeListener_:

.. _RealmList_addChangeListener_io_realm_OrderedRealmCollectionChangeListener_:

.. _RealmList_addChangeListener_OrderedRealmCollectionChangeListener_:

.. _io_realm_RealmList_addChangeListener_OrderedRealmCollectionChangeListener_RealmList_E___:

.. list-table::
   :header-rows: 1
   
   * - | public **void** :ref:`addChangeListener <io_realm_RealmList_addChangeListener>` (
       |  :ref:`io.realm.OrderedRealmCollectionChangeListener\<io.realm.RealmList\<E>> <io_realm_OrderedRealmCollectionChangeListener>`  listener
       | )
       
       
       
   
   * - Adds a change listener to this :ref:`RealmList <io_realm_RealmList>` .
       
       Registering a change listener will not prevent the underlying RealmList from being garbage collected. If the RealmList is garbage collected, the change listener will stop being triggered. To avoid this, keep a strong reference for as long as appropriate e.g. in a class variable.
       
        
       
       .. code-block:: java
       
          
           public class MyActivity extends Activity {
          
               private RealmList<Dog> dogs; // Strong reference to keep listeners alive
          
               @Override
               protected void onCreate(Bundle savedInstanceState) {
                 super.onCreate(savedInstanceState);
                 dogs = realm.where(Person.class).findFirst().getDogs();
                 dogs.addChangeListener(new OrderedRealmCollectionChangeListener<RealmList<Dog>>() {
                     @Override
                     public void onChange(RealmList<Dog> dogs, OrderedCollectionChangeSet changeSet) {
                         // React to change
                     }
                 });
               }
           }
           
       
       
        
       
       
       
       
       
       
       **Parameters**
       
       - ``listener`` - the change listener to be notified.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the change listener is ``null`` .
          
          
          
          
          
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if you try to add a listener from a non-Looper or `android.app.IntentService <https://developer.android.com/reference/android/app/IntentService>`__  thread.
          
          
          
          
          
       
       
       
       
       
   
   


.. _asChangesetObservable:

.. _asChangesetObservable__:

.. _RealmList_asChangesetObservable:

.. _RealmList_asChangesetObservable__:

.. _io_realm_RealmList_asChangesetObservable:

.. _io_realm_RealmList_asChangesetObservable__:



asChangesetObservable
---------------------

.. list-table::
   :header-rows: 1
   
   * - | public **<any>** :ref:`asChangesetObservable <io_realm_RealmList_asChangesetObservable>` ()
       | 
       
       
       
   
   * - Returns an Rx Observable that monitors changes to this RealmList. It will emit the current RealmList when subscribed. For each update to the RealmList a pair consisting of the RealmList and the :ref:`OrderedCollectionChangeSet <io_realm_OrderedCollectionChangeSet>`  will be sent. The changeset will be ``null``  the first time an RealmList is emitted.
       
       RealmList will continually be emitted as the RealmList is updated - ``onComplete``  will never be called.
       
       
       
       Items emitted from Realm Observables are frozen (See :ref:`freeze() <io_realm_RealmList_freeze__>` . This means that they are immutable and can be read on any thread.
       
       
       
       Realm Observables always emit items from the thread holding the live Realm. This means that if you need to do further processing, it is recommend to observe the values on a computation scheduler:
       
       
       
       .. code-block:: java
       
          list.asChangesetObservable()
           .observeOn(Schedulers.computation())
           .map((rxList, changes) -> doExpensiveWork(rxList, changes))
           .observeOn(AndroidSchedulers.mainThread())
           .subscribe( ... );
           
       
       
       
       
       
       
       
       
       
       
       
       
       **Returns**
       
       RxJava Observable that only calls ``onNext`` . It will never call ``onComplete``  or ``OnError`` .
       
       
       
       
       
       
       **Throws**
       
       - `UnsupportedOperationException <https://docs.oracle.com/javase/7/docs/api/java/lang/UnsupportedOperationException.html>`__  - if the required RxJava framework is not on the classpath or the corresponding Realm instance doesn't support RxJava.
          
          
          
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if the Realm wasn't opened on a Looper thread.
          
          
          
       
       
       
       
       
       
       .. seealso::
       
       
          
          - `RxJava and Realm <https://github.com/realm/realm-java/tree/master/examples/rxJavaExample>`__ 
             
             
             
             
          
          
          
       
       
   
   


.. _asFlowable:

.. _asFlowable__:

.. _RealmList_asFlowable:

.. _RealmList_asFlowable__:

.. _io_realm_RealmList_asFlowable:

.. _io_realm_RealmList_asFlowable__:



asFlowable
----------

.. list-table::
   :header-rows: 1
   
   * - | public **<any>** :ref:`asFlowable <io_realm_RealmList_asFlowable>` ()
       | 
       
       
       
   
   * - Returns an Rx Flowable that monitors changes to this RealmList. It will emit the current RealmList when subscribed to. RealmList will continually be emitted as the RealmList is updated - ``onComplete``  will never be called.
       
       Items emitted from Realm Flowables are frozen (See :ref:`freeze() <io_realm_RealmList_freeze__>` . This means that they are immutable and can be read on any thread.
       
       
       
       Realm Flowables always emit items from the thread holding the live RealmList. This means that if you need to do further processing, it is recommend to observe the values on a computation scheduler:
       
       
       
       .. code-block:: java
       
          list.asFlowable()
           .observeOn(Schedulers.computation())
           .map(rxResults -> doExpensiveWork(rxResults))
           .observeOn(AndroidSchedulers.mainThread())
           .subscribe( ... );
           
       
       
       
       
       
       If you would like the ``asFlowable()``  to stop emitting items you can instruct RxJava to only emit only the first item by using the ``first()``  operator:
       
       
       
        
       
       .. code-block:: java
       
          
           list.asFlowable()
                .first()
                .subscribe( ... ) // You only get the results once
           
       
       
        
       
       
       
       
       
       
       
       
       **Returns**
       
       RxJava Observable that only calls ``onNext`` . It will never call ``onComplete``  or ``OnError`` .
       
       
       
       
       
       
       **Throws**
       
       - `UnsupportedOperationException <https://docs.oracle.com/javase/7/docs/api/java/lang/UnsupportedOperationException.html>`__  - if the required RxJava framework is not on the classpath or the corresponding Realm instance doesn't support RxJava.
          
          
          
       
       
       
       
       
       
       .. seealso::
       
       
          
          - `RxJava and Realm <https://github.com/realm/realm-java/tree/master/examples/rxJavaExample>`__ 
             
             
             
             
          
          
          
       
       
   
   


.. _average:

.. _average__:

.. _RealmList_average:

.. _RealmList_average__:

.. _io_realm_RealmList_average:

.. _io_realm_RealmList_average__:



average
-------

.. _io_realm_RealmList_average_java_lang_String_:

.. _io_realm_RealmList_average_String_:

.. _average_java_lang_String_:

.. _average_String_:

.. _RealmList_average_java_lang_String_:

.. _RealmList_average_String_:

.. list-table::
   :header-rows: 1
   
   * - | public **double** :ref:`average <io_realm_RealmList_average>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       
   
   * - Returns the average of a given field.
       
       
       
       
       
       
       **Returns**
       
       the average for the given field amongst objects in query results. This will be of type double for all types of number fields. If no objects exist or they all have ``null``  as the value for the given field, ``0``  will be returned. When computing the average, objects with ``null``  values are ignored.
       
       
       
       
       
       
       
       
       
   
   


.. _clear:

.. _clear__:

.. _RealmList_clear:

.. _RealmList_clear__:

.. _io_realm_RealmList_clear:

.. _io_realm_RealmList_clear__:



clear
-----

.. list-table::
   :header-rows: 1
   
   * - | public **void** :ref:`clear <io_realm_RealmList_clear>` ()
       | 
       
       
       
   
   * - Removes all elements from this list, leaving it empty. This method doesn't remove the objects from the Realm.
       
       
       
       
       
       
       
       
       **Throws**
       
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if Realm instance has been closed or parent object has been removed.
          
          
          
       
       
       
       
       **Overrides**
       
       ``clear`` in class `AbstractList <https://docs.oracle.com/javase/7/docs/api/java/util/AbstractList.html>`__ 
       
       
       
       .. seealso::
       
       
          
          - `List.isEmpty <https://docs.oracle.com/javase/7/docs/api/java/util/List/isEmpty.html>`__ 
             
             
             
          - `List.size <https://docs.oracle.com/javase/7/docs/api/java/util/List/size.html>`__ 
             
             
             
          - :ref:`deleteAllFromRealm() <io_realm_RealmList_deleteAllFromRealm__>` 
             
             
             
          
          
          
       
       
   
   


.. _contains:

.. _contains__:

.. _RealmList_contains:

.. _RealmList_contains__:

.. _io_realm_RealmList_contains:

.. _io_realm_RealmList_contains__:



contains
--------

.. _io_realm_RealmList_contains_java_lang_Object_:

.. _io_realm_RealmList_contains_Object_:

.. _contains_java_lang_Object_:

.. _contains_Object_:

.. _RealmList_contains_java_lang_Object_:

.. _RealmList_contains_Object_:

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`contains <io_realm_RealmList_contains>` (
       |  `Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__  object
       | )
       
       
       
   
   * - Returns ``true``  if the list contains the specified element when attached to a Realm. This method will query the native Realm underlying storage engine to quickly find the specified element.
       
       If the list is not attached to a Realm, the default `List.contains(Object) <https://docs.oracle.com/javase/7/docs/api/java/util/List/contains(Object).html>`__  implementation will occur.
       
       
       
       
       
       
       
       
       **Parameters**
       
       - ``object`` - the element whose presence in this list is to be tested.
          
          
          
       
       
       
       
       **Returns**
       
       ``true``  if this list contains the specified element otherwise ``false`` .
       
       
       
       
       
       
       
       
       **Overrides**
       
       ``contains`` in class `AbstractCollection <https://docs.oracle.com/javase/7/docs/api/java/util/AbstractCollection.html>`__ 
       
       
   
   


.. _createSnapshot:

.. _createSnapshot__:

.. _RealmList_createSnapshot:

.. _RealmList_createSnapshot__:

.. _io_realm_RealmList_createSnapshot:

.. _io_realm_RealmList_createSnapshot__:



createSnapshot
--------------

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`OrderedRealmCollectionSnapshot <io_realm_OrderedRealmCollectionSnapshot>`  :ref:`createSnapshot <io_realm_RealmList_createSnapshot>` ()
       | 
       
       
       
   
   * - Creates a snapshot from this :ref:`OrderedRealmCollection <io_realm_OrderedRealmCollection>` .
       
       
       
       
       
       
       
       
       **Returns**
       
       the snapshot of this collection.
       
       
       
       
       
       
       
   
   


.. _deleteAllFromRealm:

.. _deleteAllFromRealm__:

.. _RealmList_deleteAllFromRealm:

.. _RealmList_deleteAllFromRealm__:

.. _io_realm_RealmList_deleteAllFromRealm:

.. _io_realm_RealmList_deleteAllFromRealm__:



deleteAllFromRealm
------------------

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`deleteAllFromRealm <io_realm_RealmList_deleteAllFromRealm>` ()
       | 
       
       
       
   
   * - This deletes all objects in the collection from the underlying Realm as well as from the collection.
       
       
       
       
       
       
       **Returns**
       
       ``true``  if objects was deleted, ``false``  otherwise.
       
       
       
       
       
       
       
       
       
   
   


.. _deleteFirstFromRealm:

.. _deleteFirstFromRealm__:

.. _RealmList_deleteFirstFromRealm:

.. _RealmList_deleteFirstFromRealm__:

.. _io_realm_RealmList_deleteFirstFromRealm:

.. _io_realm_RealmList_deleteFirstFromRealm__:



deleteFirstFromRealm
--------------------

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`deleteFirstFromRealm <io_realm_RealmList_deleteFirstFromRealm>` ()
       | 
       
       
       
   
   * - Deletes the first object from the Realm. This also removes it from this collection.
       
       
       
       
       
       
       **Returns**
       
       ``true``  if an object was deleted, ``false``  otherwise.
       
       
       
       
       
       
       
       
       
   
   


.. _deleteFromRealm:

.. _deleteFromRealm__:

.. _RealmList_deleteFromRealm:

.. _RealmList_deleteFromRealm__:

.. _io_realm_RealmList_deleteFromRealm:

.. _io_realm_RealmList_deleteFromRealm__:



deleteFromRealm
---------------

.. _io_realm_RealmList_deleteFromRealm_int_:

.. _deleteFromRealm_int_:

.. _RealmList_deleteFromRealm_int_:

.. list-table::
   :header-rows: 1
   
   * - | public **void** :ref:`deleteFromRealm <io_realm_RealmList_deleteFromRealm>` (
       |  **int** location
       | )
       
       
       
   
   * - Deletes the object at the given index from the Realm. This also removes it from the collection.
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _deleteLastFromRealm:

.. _deleteLastFromRealm__:

.. _RealmList_deleteLastFromRealm:

.. _RealmList_deleteLastFromRealm__:

.. _io_realm_RealmList_deleteLastFromRealm:

.. _io_realm_RealmList_deleteLastFromRealm__:



deleteLastFromRealm
-------------------

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`deleteLastFromRealm <io_realm_RealmList_deleteLastFromRealm>` ()
       | 
       
       
       
   
   * - Deletes the last object from the Realm. This also removes it from this collection.
       
       
       
       
       
       
       **Returns**
       
       ``true``  if an object was deleted, ``false``  otherwise.
       
       
       
       
       
       
       
       
       
   
   


.. _first:

.. _first__:

.. _RealmList_first:

.. _RealmList_first__:

.. _io_realm_RealmList_first:

.. _io_realm_RealmList_first__:



first
-----

.. _io_realm_RealmList_first_E_:

.. _first_E_:

.. _RealmList_first_E_:

.. list-table::
   :header-rows: 1
   
   * - | public **E** :ref:`first <io_realm_RealmList_first>` (
       |  **E** defaultValue
       | )
       
       
       
   
   * - Gets the first object from the collection. If the collection is empty, the provided default will be used instead.
       
       
       
       
       
       
       **Returns**
       
       the first object or the provided default.
       
       
       
       
       
       
       
   
   
.. list-table::
   :header-rows: 1
   
   * - | public **E** :ref:`first <io_realm_RealmList_first>` ()
       | 
       
       
       
   
   * - Gets the first object from the collection.
       
       
       
       
       
       
       **Returns**
       
       the first object.
       
       
       
       
       
       
       
   
   


.. _freeze:

.. _freeze__:

.. _RealmList_freeze:

.. _RealmList_freeze__:

.. _io_realm_RealmList_freeze:

.. _io_realm_RealmList_freeze__:



freeze
------

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmList <io_realm_RealmList>`  :ref:`freeze <io_realm_RealmList_freeze>` ()
       | 
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _get:

.. _get__:

.. _RealmList_get:

.. _RealmList_get__:

.. _io_realm_RealmList_get:

.. _io_realm_RealmList_get__:



get
----

.. _io_realm_RealmList_get_int_:

.. _get_int_:

.. _RealmList_get_int_:

.. list-table::
   :header-rows: 1
   
   * - | public **E** :ref:`get <io_realm_RealmList_get>` (
       |  **int** location
       | )
       
       
       
   
   * - Returns the element at the specified location in this list.
       
       
       
       
       **Parameters**
       
       - ``location`` - the index of the element to return.
          
          
          
       
       
       
       
       **Returns**
       
       the element at the specified index.
       
       
       
       
       **Throws**
       
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if Realm instance has been closed or parent object has been removed.
          
          
          
       - `IndexOutOfBoundsException <https://docs.oracle.com/javase/7/docs/api/java/lang/IndexOutOfBoundsException.html>`__  - if ``location < 0 || location >= size()`` .
          
          
          
          
          
       
       
       
       
       **Overrides**
       
       ``get`` in class `AbstractList <https://docs.oracle.com/javase/7/docs/api/java/util/AbstractList.html>`__ 
       
       
   
   


.. _getRealm:

.. _getRealm__:

.. _RealmList_getRealm:

.. _RealmList_getRealm__:

.. _io_realm_RealmList_getRealm:

.. _io_realm_RealmList_getRealm__:



getRealm
--------

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`Realm <io_realm_Realm>`  :ref:`getRealm <io_realm_RealmList_getRealm>` ()
       | 
       
       
       
   
   * - Returns the :ref:`Realm <io_realm_Realm>`  instance to which this collection belongs.
       
       Calling **Realm.close()** on the returned instance is discouraged as it is the same as calling it on the original Realm instance which may cause the Realm to fully close invalidating the list.
       
       
       
       
       
       
       
       
       
       
       **Returns**
       
       :ref:`Realm <io_realm_Realm>`  instance this collection belongs to or ``null``  if the collection is unmanaged.
       
       
       
       
       
       
       **Throws**
       
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if the Realm is an instance of :ref:`DynamicRealm <io_realm_DynamicRealm>`  or the :ref:`Realm <io_realm_Realm>`  was already closed.
          
          
          
          
          
       
       
       
       
       
   
   


.. _isFrozen:

.. _isFrozen__:

.. _RealmList_isFrozen:

.. _RealmList_isFrozen__:

.. _io_realm_RealmList_isFrozen:

.. _io_realm_RealmList_isFrozen__:



isFrozen
--------

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`isFrozen <io_realm_RealmList_isFrozen>` ()
       | 
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _isLoaded:

.. _isLoaded__:

.. _RealmList_isLoaded:

.. _RealmList_isLoaded__:

.. _io_realm_RealmList_isLoaded:

.. _io_realm_RealmList_isLoaded__:



isLoaded
--------

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`isLoaded <io_realm_RealmList_isLoaded>` ()
       | 
       
       
       
   
   * - Checks if a collection has finished loading its data yet.
       
       
       
       
       
       
       **Returns**
       
       ``true``  if data has been loaded and is available, ``false``  if data is still being loaded.
       
       
       
       
       
       
       
       
       
   
   


.. _isManaged:

.. _isManaged__:

.. _RealmList_isManaged:

.. _RealmList_isManaged__:

.. _io_realm_RealmList_isManaged:

.. _io_realm_RealmList_isManaged__:



isManaged
---------

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`isManaged <io_realm_RealmList_isManaged>` ()
       | 
       
       
       
   
   * - Checks if the collection is managed by Realm. A managed collection is just a wrapper around the data in the underlying Realm file. On Looper threads, a managed collection will be live-updated so it always points to the latest data. Managed collections are thread confined so that they cannot be accessed from other threads than the one that created them.If this method returns ``false`` , the collection is unmanaged. An unmanaged collection is just a normal java collection, so it will not be live updated.
       
       
       
       
       
       
       
       
       
       
       **Returns**
       
       ``true``  if this is a managed :ref:`RealmCollection <io_realm_RealmCollection>` , ``false``  otherwise.
       
       
       
       
       
       
       
       
       
   
   


.. _isValid:

.. _isValid__:

.. _RealmList_isValid:

.. _RealmList_isValid__:

.. _io_realm_RealmList_isValid:

.. _io_realm_RealmList_isValid__:



isValid
-------

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`isValid <io_realm_RealmList_isValid>` ()
       | 
       
       
       
   
   * - Checks if the collection is still valid to use, i.e., the :ref:`io.realm.Realm <io_realm_Realm>`  instance hasn't been closed. It will always return ``true``  for an unmanaged collection.
       
       
       
       
       
       
       
       
       **Returns**
       
       ``true``  if it is still valid to use or an unmanaged collection, ``false``  otherwise.
       
       
       
       
       
       
       
       
       
   
   


.. _iterator:

.. _iterator__:

.. _RealmList_iterator:

.. _RealmList_iterator__:

.. _io_realm_RealmList_iterator:

.. _io_realm_RealmList_iterator__:



iterator
--------

.. list-table::
   :header-rows: 1
   
   * - | public `Iterator <https://docs.oracle.com/javase/7/docs/api/java/util/Iterator.html>`__  :ref:`iterator <io_realm_RealmList_iterator>` ()
       | 
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
       
       **Overrides**
       
       ``iterator`` in class `AbstractList <https://docs.oracle.com/javase/7/docs/api/java/util/AbstractList.html>`__ 
       
       
   
   


.. _last:

.. _last__:

.. _RealmList_last:

.. _RealmList_last__:

.. _io_realm_RealmList_last:

.. _io_realm_RealmList_last__:



last
----

.. _io_realm_RealmList_last_E_:

.. _last_E_:

.. _RealmList_last_E_:

.. list-table::
   :header-rows: 1
   
   * - | public **E** :ref:`last <io_realm_RealmList_last>` (
       |  **E** defaultValue
       | )
       
       
       
   
   * - Gets the last object from the collection. If the collection is empty, the provided default will be used instead.
       
       
       
       
       
       
       **Returns**
       
       the last object or the provided default.
       
       
       
       
       
       
       
   
   
.. list-table::
   :header-rows: 1
   
   * - | public **E** :ref:`last <io_realm_RealmList_last>` ()
       | 
       
       
       
   
   * - Gets the last object from the collection.
       
       
       
       
       
       
       **Returns**
       
       the last object.
       
       
       
       
       
       
       
   
   


.. _listIterator:

.. _listIterator__:

.. _RealmList_listIterator:

.. _RealmList_listIterator__:

.. _io_realm_RealmList_listIterator:

.. _io_realm_RealmList_listIterator__:



listIterator
------------

.. _io_realm_RealmList_listIterator_int_:

.. _listIterator_int_:

.. _RealmList_listIterator_int_:

.. list-table::
   :header-rows: 1
   
   * - | public `ListIterator <https://docs.oracle.com/javase/7/docs/api/java/util/ListIterator.html>`__  :ref:`listIterator <io_realm_RealmList_listIterator>` (
       |  **int** location
       | )
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
       
       **Overrides**
       
       ``listIterator`` in class `AbstractList <https://docs.oracle.com/javase/7/docs/api/java/util/AbstractList.html>`__ 
       
       
   
   
.. list-table::
   :header-rows: 1
   
   * - | public `ListIterator <https://docs.oracle.com/javase/7/docs/api/java/util/ListIterator.html>`__  :ref:`listIterator <io_realm_RealmList_listIterator>` ()
       | 
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
       
       **Overrides**
       
       ``listIterator`` in class `AbstractList <https://docs.oracle.com/javase/7/docs/api/java/util/AbstractList.html>`__ 
       
       
   
   


.. _load:

.. _load__:

.. _RealmList_load:

.. _RealmList_load__:

.. _io_realm_RealmList_load:

.. _io_realm_RealmList_load__:



load
----

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`load <io_realm_RealmList_load>` ()
       | 
       
       
       
   
   * - Blocks the collection until all data are available.
       
       
       
       
       
       
       **Returns**
       
       ``true``  if the data could be successfully loaded, ``false``  otherwise.
       
       
       
       
       
       
       
       
       
   
   


.. _max:

.. _max__:

.. _RealmList_max:

.. _RealmList_max__:

.. _io_realm_RealmList_max:

.. _io_realm_RealmList_max__:



max
----

.. _io_realm_RealmList_max_java_lang_String_:

.. _io_realm_RealmList_max_String_:

.. _max_java_lang_String_:

.. _max_String_:

.. _RealmList_max_java_lang_String_:

.. _RealmList_max_String_:

.. list-table::
   :header-rows: 1
   
   * - | public `Number <https://docs.oracle.com/javase/7/docs/api/java/lang/Number.html>`__  :ref:`max <io_realm_RealmList_max>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       
   
   * - Finds the maximum value of a field.
       
       
       
       
       
       
       **Returns**
       
       if no objects exist or they all have ``null``  as the value for the given field, ``null``  will be returned. Otherwise the maximum value is returned. When determining the maximum value, objects with ``null``  values are ignored.
       
       
       
       
       
       
       
       
       
   
   


.. _maxDate:

.. _maxDate__:

.. _RealmList_maxDate:

.. _RealmList_maxDate__:

.. _io_realm_RealmList_maxDate:

.. _io_realm_RealmList_maxDate__:



maxDate
-------

.. _io_realm_RealmList_maxDate_java_lang_String_:

.. _io_realm_RealmList_maxDate_String_:

.. _maxDate_java_lang_String_:

.. _maxDate_String_:

.. _RealmList_maxDate_java_lang_String_:

.. _RealmList_maxDate_String_:

.. list-table::
   :header-rows: 1
   
   * - | public `Date <https://docs.oracle.com/javase/7/docs/api/java/util/Date.html>`__  :ref:`maxDate <io_realm_RealmList_maxDate>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       
   
   * - Finds the maximum date.
       
       
       
       
       
       
       **Returns**
       
       if no objects exist or they all have ``null``  as the value for the given date field, ``null``  will be returned. Otherwise the maximum date is returned. When determining the maximum date, objects with ``null``  values are ignored.
       
       
       
       
       
       
       
       
       
   
   


.. _min:

.. _min__:

.. _RealmList_min:

.. _RealmList_min__:

.. _io_realm_RealmList_min:

.. _io_realm_RealmList_min__:



min
----

.. _io_realm_RealmList_min_java_lang_String_:

.. _io_realm_RealmList_min_String_:

.. _min_java_lang_String_:

.. _min_String_:

.. _RealmList_min_java_lang_String_:

.. _RealmList_min_String_:

.. list-table::
   :header-rows: 1
   
   * - | public `Number <https://docs.oracle.com/javase/7/docs/api/java/lang/Number.html>`__  :ref:`min <io_realm_RealmList_min>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       
   
   * - Finds the minimum value of a field.
       
       
       
       
       
       
       **Returns**
       
       if no objects exist or they all have ``null``  as the value for the given field, ``null``  will be returned. Otherwise the minimum value is returned. When determining the minimum value, objects with ``null``  values are ignored.
       
       
       
       
       
       
       
       
       
   
   


.. _minDate:

.. _minDate__:

.. _RealmList_minDate:

.. _RealmList_minDate__:

.. _io_realm_RealmList_minDate:

.. _io_realm_RealmList_minDate__:



minDate
-------

.. _io_realm_RealmList_minDate_java_lang_String_:

.. _io_realm_RealmList_minDate_String_:

.. _minDate_java_lang_String_:

.. _minDate_String_:

.. _RealmList_minDate_java_lang_String_:

.. _RealmList_minDate_String_:

.. list-table::
   :header-rows: 1
   
   * - | public `Date <https://docs.oracle.com/javase/7/docs/api/java/util/Date.html>`__  :ref:`minDate <io_realm_RealmList_minDate>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       
   
   * - Finds the minimum date.
       
       
       
       
       
       
       **Returns**
       
       if no objects exist or they all have ``null``  as the value for the given date field, ``null``  will be returned. Otherwise the minimum date is returned. When determining the minimum date, objects with ``null``  values are ignored.
       
       
       
       
       
       
       
       
       
   
   


.. _move:

.. _move__:

.. _RealmList_move:

.. _RealmList_move__:

.. _io_realm_RealmList_move:

.. _io_realm_RealmList_move__:



move
----

.. _io_realm_RealmList_move_int_int_:

.. _io_realm_RealmList_move_int__int_:

.. _move_int_int_:

.. _move_int__int_:

.. _RealmList_move_int_int_:

.. _RealmList_move_int__int_:

.. list-table::
   :header-rows: 1
   
   * - | public **void** :ref:`move <io_realm_RealmList_move>` (
       |  **int** oldPos, 
       |  **int** newPos
       | )
       
       
       
   
   * - Moves an object from one position to another, while maintaining a fixed sized list. RealmObjects will be shifted so no ``null``  values are introduced.
       
       
       
       
       
       
       **Parameters**
       
       - ``oldPos`` - index of RealmObject to move.
          
          
          
       - ``newPos`` - target position. If newPos < oldPos the object at the location will be shifted to the right. If oldPos < newPos, indexes > oldPos will be shifted once to the left.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if Realm instance has been closed or parent object has been removed.
          
          
          
       - `java.lang.IndexOutOfBoundsException <https://docs.oracle.com/javase/7/docs/api/java/lang/IndexOutOfBoundsException.html>`__  - if any position is outside [0, size()].
          
          
          
       
       
       
       
       
   
   


.. _remove:

.. _remove__:

.. _RealmList_remove:

.. _RealmList_remove__:

.. _io_realm_RealmList_remove:

.. _io_realm_RealmList_remove__:



remove
------

.. _io_realm_RealmList_remove_java_lang_Object_:

.. _io_realm_RealmList_remove_Object_:

.. _remove_java_lang_Object_:

.. _remove_Object_:

.. _RealmList_remove_java_lang_Object_:

.. _RealmList_remove_Object_:

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`remove <io_realm_RealmList_remove>` (
       |  `Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__  object
       | )
       
       
       
   
   * - Removes one instance of the specified object from this ``Collection``  if one is contained. This implementation iterates over this ``Collection``  and tests each element ``e``  returned by the iterator, whether ``e``  is equal to the given object. If ``object != null``  then this test is performed using ``object.equals(e)`` , otherwise using ``object == null`` . If an element equal to the given object is found, then the ``remove``  method is called on the iterator and ``true``  is returned, ``false``  otherwise. If the iterator does not support removing elements, an ``UnsupportedOperationException``  is thrown.
       
       
       
       
       
       
       **Parameters**
       
       - ``object`` - the object to remove.
          
          
          
       
       
       
       
       **Returns**
       
       ``true``  if this ``Collection``  is modified, ``false``  otherwise.
       
       
       
       
       
       
       **Throws**
       
       - `ClassCastException <https://docs.oracle.com/javase/7/docs/api/java/lang/ClassCastException.html>`__  - if the object passed is not of the correct type.
          
          
          
       - `NullPointerException <https://docs.oracle.com/javase/7/docs/api/java/lang/NullPointerException.html>`__  - if ``object``  is ``null`` .
          
          
          
          
          
       
       
       
       
       **Overrides**
       
       ``remove`` in class `AbstractCollection <https://docs.oracle.com/javase/7/docs/api/java/util/AbstractCollection.html>`__ 
       
       
   
   
.. _io_realm_RealmList_remove_int_:

.. _remove_int_:

.. _RealmList_remove_int_:

.. list-table::
   :header-rows: 1
   
   * - | public **E** :ref:`remove <io_realm_RealmList_remove>` (
       |  **int** location
       | )
       
       
       
   
   * - Removes the object at the specified location from this list.
       
       
       
       
       **Parameters**
       
       - ``location`` - the index of the object to remove.
          
          
          
       
       
       
       
       **Returns**
       
       the removed object.
       
       
       
       
       **Throws**
       
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if Realm instance has been closed or parent object has been removed.
          
          
          
       - `IndexOutOfBoundsException <https://docs.oracle.com/javase/7/docs/api/java/lang/IndexOutOfBoundsException.html>`__  - if ``location < 0 || location >= size()`` .
          
          
          
          
          
       
       
       
       
       **Overrides**
       
       ``remove`` in class `AbstractList <https://docs.oracle.com/javase/7/docs/api/java/util/AbstractList.html>`__ 
       
       
   
   


.. _removeAll:

.. _removeAll__:

.. _RealmList_removeAll:

.. _RealmList_removeAll__:

.. _io_realm_RealmList_removeAll:

.. _io_realm_RealmList_removeAll__:



removeAll
---------

.. _io_realm_RealmList_removeAll_java_util_Collection_:

.. _io_realm_RealmList_removeAll_Collection_:

.. _removeAll_java_util_Collection_:

.. _removeAll_Collection_:

.. _RealmList_removeAll_java_util_Collection_:

.. _RealmList_removeAll_Collection_:

.. _io_realm_RealmList_removeAll_Collection____:

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`removeAll <io_realm_RealmList_removeAll>` (
       |  `java.util.Collection\<?> <https://docs.oracle.com/javase/7/docs/api/java/util/Collection.html>`__  collection
       | )
       
       
       
   
   * - Removes all occurrences in this ``Collection``  of each object in the specified ``Collection`` . After this method returns none of the elements in the passed ``Collection``  can be found in this ``Collection``  anymore.
       
       This implementation iterates over the ``Collection``  and tests each element ``e``  returned by the iterator, whether it is contained in the specified ``Collection`` . If this test is positive, then the ``remove``  method is called on the iterator.
       
       
       
       
       
       
       
       
       **Parameters**
       
       - ``collection`` - the collection of objects to remove.
          
          
          
       
       
       
       
       **Returns**
       
       ``true``  if this ``Collection``  is modified, ``false``  otherwise.
       
       
       
       
       
       
       **Throws**
       
       - `ClassCastException <https://docs.oracle.com/javase/7/docs/api/java/lang/ClassCastException.html>`__  - if one or more elements of ``collection``  isn't of the correct type.
          
          
          
          
          
       - `NullPointerException <https://docs.oracle.com/javase/7/docs/api/java/lang/NullPointerException.html>`__  - if ``collection``  is ``null`` .
          
          
          
          
          
       
       
       
       
       **Overrides**
       
       ``removeAll`` in class `AbstractCollection <https://docs.oracle.com/javase/7/docs/api/java/util/AbstractCollection.html>`__ 
       
       
   
   


.. _removeAllChangeListeners:

.. _removeAllChangeListeners__:

.. _RealmList_removeAllChangeListeners:

.. _RealmList_removeAllChangeListeners__:

.. _io_realm_RealmList_removeAllChangeListeners:

.. _io_realm_RealmList_removeAllChangeListeners__:



removeAllChangeListeners
------------------------

.. list-table::
   :header-rows: 1
   
   * - | public **void** :ref:`removeAllChangeListeners <io_realm_RealmList_removeAllChangeListeners>` ()
       | 
       
       
       
   
   * - Removes all user-defined change listeners.
       
       
       
       
       
       
       
       
       **Throws**
       
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if you try to remove listeners from a non-Looper Thread.
          
          
          
       
       
       
       
       
       
       .. seealso::
       
       
          
          - :ref:`io.realm.RealmChangeListener <io_realm_RealmChangeListener>` 
             
             
             
          
          
          
       
       
   
   


.. _removeChangeListener:

.. _removeChangeListener__:

.. _RealmList_removeChangeListener:

.. _RealmList_removeChangeListener__:

.. _io_realm_RealmList_removeChangeListener:

.. _io_realm_RealmList_removeChangeListener__:



removeChangeListener
--------------------

.. _io_realm_RealmList_removeChangeListener_io_realm_RealmChangeListener_:

.. _io_realm_RealmList_removeChangeListener_RealmChangeListener_:

.. _removeChangeListener_io_realm_RealmChangeListener_:

.. _removeChangeListener_RealmChangeListener_:

.. _RealmList_removeChangeListener_io_realm_RealmChangeListener_:

.. _RealmList_removeChangeListener_RealmChangeListener_:

.. _io_realm_RealmList_removeChangeListener_RealmChangeListener_RealmList_E___:

.. list-table::
   :header-rows: 1
   
   * - | public **void** :ref:`removeChangeListener <io_realm_RealmList_removeChangeListener>` (
       |  :ref:`io.realm.RealmChangeListener\<io.realm.RealmList\<E>> <io_realm_RealmChangeListener>`  listener
       | )
       
       
       
   
   * - Removes the specified change listener.
       
       
       
       
       **Parameters**
       
       - ``listener`` - the change listener to be removed.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the change listener is ``null`` .
          
          
          
          
          
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if you try to remove a listener from a non-Looper Thread.
          
          
          
       
       
       
       
       
       
       .. seealso::
       
       
          
          - :ref:`io.realm.RealmChangeListener <io_realm_RealmChangeListener>` 
             
             
             
          
          
          
       
       
   
   
.. _io_realm_RealmList_removeChangeListener_io_realm_OrderedRealmCollectionChangeListener_:

.. _io_realm_RealmList_removeChangeListener_OrderedRealmCollectionChangeListener_:

.. _removeChangeListener_io_realm_OrderedRealmCollectionChangeListener_:

.. _removeChangeListener_OrderedRealmCollectionChangeListener_:

.. _RealmList_removeChangeListener_io_realm_OrderedRealmCollectionChangeListener_:

.. _RealmList_removeChangeListener_OrderedRealmCollectionChangeListener_:

.. _io_realm_RealmList_removeChangeListener_OrderedRealmCollectionChangeListener_RealmList_E___:

.. list-table::
   :header-rows: 1
   
   * - | public **void** :ref:`removeChangeListener <io_realm_RealmList_removeChangeListener>` (
       |  :ref:`io.realm.OrderedRealmCollectionChangeListener\<io.realm.RealmList\<E>> <io_realm_OrderedRealmCollectionChangeListener>`  listener
       | )
       
       
       
   
   * - Removes the specified change listener.
       
       
       
       
       **Parameters**
       
       - ``listener`` - the change listener to be removed.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the change listener is ``null`` .
          
          
          
          
          
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if you try to remove a listener from a non-Looper Thread.
          
          
          
       
       
       
       
       
       
       .. seealso::
       
       
          
          - :ref:`io.realm.RealmChangeListener <io_realm_RealmChangeListener>` 
             
             
             
          
          
          
       
       
   
   


.. _set:

.. _set__:

.. _RealmList_set:

.. _RealmList_set__:

.. _io_realm_RealmList_set:

.. _io_realm_RealmList_set__:



set
----

.. _io_realm_RealmList_set_int_E_:

.. _io_realm_RealmList_set_int__E_:

.. _set_int_E_:

.. _set_int__E_:

.. _RealmList_set_int_E_:

.. _RealmList_set_int__E_:

.. list-table::
   :header-rows: 1
   
   * - | public **E** :ref:`set <io_realm_RealmList_set>` (
       |  **int** location, 
       |  **E** object
       | )
       
       
       
   
   * - Replaces the element at the specified location in this list with the specified object.
       
       1. **Unmanaged RealmLists**: It is possible to add both managed and unmanaged objects. If adding managed objects to an unmanaged RealmList they will not be copied to the Realm again if using :ref:`Realm.copyToRealm(RealmModel, ImportFlag...) <io_realm_Realm_copyToRealm_RealmModel__ImportFlag____>`  afterwards.
          
          
          
          
       #. **Managed RealmLists**: It is possible to add unmanaged objects to a RealmList that is already managed. In that case the object will transparently be copied to Realm using :ref:`Realm.copyToRealm(RealmModel, ImportFlag...) <io_realm_Realm_copyToRealm_RealmModel__ImportFlag____>`  or :ref:`Realm.copyToRealmOrUpdate(RealmModel, ImportFlag...) <io_realm_Realm_copyToRealmOrUpdate_RealmModel__ImportFlag____>`  if it has a primary key.
          
          
          
          
       
       
       
       
       
       
       
       **Parameters**
       
       - ``location`` - the index at which to put the specified object.
          
          
          
       - ``object`` - the object to add.
          
          
          
       
       
       
       
       **Returns**
       
       the previous element at the index.
       
       
       
       
       **Throws**
       
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if Realm instance has been closed or parent object has been removed.
          
          
          
       - `IndexOutOfBoundsException <https://docs.oracle.com/javase/7/docs/api/java/lang/IndexOutOfBoundsException.html>`__  - if ``location < 0 || location >= size()`` .
          
          
          
          
          
       
       
       
       
       **Overrides**
       
       ``set`` in class `AbstractList <https://docs.oracle.com/javase/7/docs/api/java/util/AbstractList.html>`__ 
       
       
   
   


.. _size:

.. _size__:

.. _RealmList_size:

.. _RealmList_size__:

.. _io_realm_RealmList_size:

.. _io_realm_RealmList_size__:



size
----

.. list-table::
   :header-rows: 1
   
   * - | public **int** :ref:`size <io_realm_RealmList_size>` ()
       | 
       
       
       
   
   * - Returns the number of elements in this ``List`` .
       
       
       
       
       
       
       
       
       **Returns**
       
       the number of elements in this ``List`` .
       
       
       
       
       
       
       **Throws**
       
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if Realm instance has been closed or parent object has been removed.
          
          
          
       
       
       
       
       **Overrides**
       
       ``size`` in class `AbstractCollection <https://docs.oracle.com/javase/7/docs/api/java/util/AbstractCollection.html>`__ 
       
       
   
   


.. _sort:

.. _sort__:

.. _RealmList_sort:

.. _RealmList_sort__:

.. _io_realm_RealmList_sort:

.. _io_realm_RealmList_sort__:



sort
----

.. _io_realm_RealmList_sort_java_lang_String_io_realm_Sort_:

.. _io_realm_RealmList_sort_java_lang_String__io_realm_Sort_:

.. _io_realm_RealmList_sort_java_lang_String_Sort_:

.. _io_realm_RealmList_sort_java_lang_String__Sort_:

.. _io_realm_RealmList_sort_java_lang_String_Sort____:

.. _io_realm_RealmList_sort_java_lang_String__Sort____:

.. _io_realm_RealmList_sort_String_io_realm_Sort_:

.. _io_realm_RealmList_sort_String__io_realm_Sort_:

.. _io_realm_RealmList_sort_String_Sort_:

.. _io_realm_RealmList_sort_String__Sort_:

.. _io_realm_RealmList_sort_String_Sort____:

.. _io_realm_RealmList_sort_String__Sort____:

.. _io_realm_RealmList_sort_String____io_realm_Sort_:

.. _io_realm_RealmList_sort_String_____io_realm_Sort_:

.. _io_realm_RealmList_sort_String____Sort_:

.. _io_realm_RealmList_sort_String_____Sort_:

.. _io_realm_RealmList_sort_String____Sort____:

.. _io_realm_RealmList_sort_String_____Sort____:

.. _sort_java_lang_String_io_realm_Sort_:

.. _sort_java_lang_String__io_realm_Sort_:

.. _sort_java_lang_String_Sort_:

.. _sort_java_lang_String__Sort_:

.. _sort_java_lang_String_Sort____:

.. _sort_java_lang_String__Sort____:

.. _sort_String_io_realm_Sort_:

.. _sort_String__io_realm_Sort_:

.. _sort_String_Sort_:

.. _sort_String__Sort_:

.. _sort_String_Sort____:

.. _sort_String__Sort____:

.. _sort_String____io_realm_Sort_:

.. _sort_String_____io_realm_Sort_:

.. _sort_String____Sort_:

.. _sort_String_____Sort_:

.. _sort_String____Sort____:

.. _sort_String_____Sort____:

.. _RealmList_sort_java_lang_String_io_realm_Sort_:

.. _RealmList_sort_java_lang_String__io_realm_Sort_:

.. _RealmList_sort_java_lang_String_Sort_:

.. _RealmList_sort_java_lang_String__Sort_:

.. _RealmList_sort_java_lang_String_Sort____:

.. _RealmList_sort_java_lang_String__Sort____:

.. _RealmList_sort_String_io_realm_Sort_:

.. _RealmList_sort_String__io_realm_Sort_:

.. _RealmList_sort_String_Sort_:

.. _RealmList_sort_String__Sort_:

.. _RealmList_sort_String_Sort____:

.. _RealmList_sort_String__Sort____:

.. _RealmList_sort_String____io_realm_Sort_:

.. _RealmList_sort_String_____io_realm_Sort_:

.. _RealmList_sort_String____Sort_:

.. _RealmList_sort_String_____Sort_:

.. _RealmList_sort_String____Sort____:

.. _RealmList_sort_String_____Sort____:

.. _io_realm_RealmList_sort_String[]__Sort[]_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmResults <io_realm_RealmResults>`  :ref:`sort <io_realm_RealmList_sort>` (
       |  `java.lang.String[] <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldNames, 
       |  :ref:`io.realm.Sort[] <io_realm_Sort>`  sortOrders
       | )
       
       
       
   
   * - Sorts a collection based on the provided fields and sort orders.
       
       
       
       
       
       
       **Returns**
       
       a new sorted :ref:`RealmResults <io_realm_RealmResults>`  will be created and returned. The original collection stays unchanged.
       
       
       
       
       
       
       
       
       
   
   
.. _io_realm_RealmList_sort_java_lang_String_io_realm_Sort_java_lang_String_io_realm_Sort_:

.. _io_realm_RealmList_sort_java_lang_String__io_realm_Sort__java_lang_String__io_realm_Sort_:

.. _io_realm_RealmList_sort_java_lang_String_io_realm_Sort_java_lang_String_Sort_:

.. _io_realm_RealmList_sort_java_lang_String__io_realm_Sort__java_lang_String__Sort_:

.. _io_realm_RealmList_sort_java_lang_String_io_realm_Sort_String_io_realm_Sort_:

.. _io_realm_RealmList_sort_java_lang_String__io_realm_Sort__String__io_realm_Sort_:

.. _io_realm_RealmList_sort_java_lang_String_io_realm_Sort_String_Sort_:

.. _io_realm_RealmList_sort_java_lang_String__io_realm_Sort__String__Sort_:

.. _io_realm_RealmList_sort_java_lang_String_Sort_java_lang_String_io_realm_Sort_:

.. _io_realm_RealmList_sort_java_lang_String__Sort__java_lang_String__io_realm_Sort_:

.. _io_realm_RealmList_sort_java_lang_String_Sort_java_lang_String_Sort_:

.. _io_realm_RealmList_sort_java_lang_String__Sort__java_lang_String__Sort_:

.. _io_realm_RealmList_sort_java_lang_String_Sort_String_io_realm_Sort_:

.. _io_realm_RealmList_sort_java_lang_String__Sort__String__io_realm_Sort_:

.. _io_realm_RealmList_sort_java_lang_String_Sort_String_Sort_:

.. _io_realm_RealmList_sort_java_lang_String__Sort__String__Sort_:

.. _io_realm_RealmList_sort_String_io_realm_Sort_java_lang_String_io_realm_Sort_:

.. _io_realm_RealmList_sort_String__io_realm_Sort__java_lang_String__io_realm_Sort_:

.. _io_realm_RealmList_sort_String_io_realm_Sort_java_lang_String_Sort_:

.. _io_realm_RealmList_sort_String__io_realm_Sort__java_lang_String__Sort_:

.. _io_realm_RealmList_sort_String_io_realm_Sort_String_io_realm_Sort_:

.. _io_realm_RealmList_sort_String__io_realm_Sort__String__io_realm_Sort_:

.. _io_realm_RealmList_sort_String_io_realm_Sort_String_Sort_:

.. _io_realm_RealmList_sort_String__io_realm_Sort__String__Sort_:

.. _io_realm_RealmList_sort_String_Sort_java_lang_String_io_realm_Sort_:

.. _io_realm_RealmList_sort_String__Sort__java_lang_String__io_realm_Sort_:

.. _io_realm_RealmList_sort_String_Sort_java_lang_String_Sort_:

.. _io_realm_RealmList_sort_String__Sort__java_lang_String__Sort_:

.. _io_realm_RealmList_sort_String_Sort_String_io_realm_Sort_:

.. _io_realm_RealmList_sort_String__Sort__String__io_realm_Sort_:

.. _io_realm_RealmList_sort_String_Sort_String_Sort_:

.. _io_realm_RealmList_sort_String__Sort__String__Sort_:

.. _sort_java_lang_String_io_realm_Sort_java_lang_String_io_realm_Sort_:

.. _sort_java_lang_String__io_realm_Sort__java_lang_String__io_realm_Sort_:

.. _sort_java_lang_String_io_realm_Sort_java_lang_String_Sort_:

.. _sort_java_lang_String__io_realm_Sort__java_lang_String__Sort_:

.. _sort_java_lang_String_io_realm_Sort_String_io_realm_Sort_:

.. _sort_java_lang_String__io_realm_Sort__String__io_realm_Sort_:

.. _sort_java_lang_String_io_realm_Sort_String_Sort_:

.. _sort_java_lang_String__io_realm_Sort__String__Sort_:

.. _sort_java_lang_String_Sort_java_lang_String_io_realm_Sort_:

.. _sort_java_lang_String__Sort__java_lang_String__io_realm_Sort_:

.. _sort_java_lang_String_Sort_java_lang_String_Sort_:

.. _sort_java_lang_String__Sort__java_lang_String__Sort_:

.. _sort_java_lang_String_Sort_String_io_realm_Sort_:

.. _sort_java_lang_String__Sort__String__io_realm_Sort_:

.. _sort_java_lang_String_Sort_String_Sort_:

.. _sort_java_lang_String__Sort__String__Sort_:

.. _sort_String_io_realm_Sort_java_lang_String_io_realm_Sort_:

.. _sort_String__io_realm_Sort__java_lang_String__io_realm_Sort_:

.. _sort_String_io_realm_Sort_java_lang_String_Sort_:

.. _sort_String__io_realm_Sort__java_lang_String__Sort_:

.. _sort_String_io_realm_Sort_String_io_realm_Sort_:

.. _sort_String__io_realm_Sort__String__io_realm_Sort_:

.. _sort_String_io_realm_Sort_String_Sort_:

.. _sort_String__io_realm_Sort__String__Sort_:

.. _sort_String_Sort_java_lang_String_io_realm_Sort_:

.. _sort_String__Sort__java_lang_String__io_realm_Sort_:

.. _sort_String_Sort_java_lang_String_Sort_:

.. _sort_String__Sort__java_lang_String__Sort_:

.. _sort_String_Sort_String_io_realm_Sort_:

.. _sort_String__Sort__String__io_realm_Sort_:

.. _sort_String_Sort_String_Sort_:

.. _sort_String__Sort__String__Sort_:

.. _RealmList_sort_java_lang_String_io_realm_Sort_java_lang_String_io_realm_Sort_:

.. _RealmList_sort_java_lang_String__io_realm_Sort__java_lang_String__io_realm_Sort_:

.. _RealmList_sort_java_lang_String_io_realm_Sort_java_lang_String_Sort_:

.. _RealmList_sort_java_lang_String__io_realm_Sort__java_lang_String__Sort_:

.. _RealmList_sort_java_lang_String_io_realm_Sort_String_io_realm_Sort_:

.. _RealmList_sort_java_lang_String__io_realm_Sort__String__io_realm_Sort_:

.. _RealmList_sort_java_lang_String_io_realm_Sort_String_Sort_:

.. _RealmList_sort_java_lang_String__io_realm_Sort__String__Sort_:

.. _RealmList_sort_java_lang_String_Sort_java_lang_String_io_realm_Sort_:

.. _RealmList_sort_java_lang_String__Sort__java_lang_String__io_realm_Sort_:

.. _RealmList_sort_java_lang_String_Sort_java_lang_String_Sort_:

.. _RealmList_sort_java_lang_String__Sort__java_lang_String__Sort_:

.. _RealmList_sort_java_lang_String_Sort_String_io_realm_Sort_:

.. _RealmList_sort_java_lang_String__Sort__String__io_realm_Sort_:

.. _RealmList_sort_java_lang_String_Sort_String_Sort_:

.. _RealmList_sort_java_lang_String__Sort__String__Sort_:

.. _RealmList_sort_String_io_realm_Sort_java_lang_String_io_realm_Sort_:

.. _RealmList_sort_String__io_realm_Sort__java_lang_String__io_realm_Sort_:

.. _RealmList_sort_String_io_realm_Sort_java_lang_String_Sort_:

.. _RealmList_sort_String__io_realm_Sort__java_lang_String__Sort_:

.. _RealmList_sort_String_io_realm_Sort_String_io_realm_Sort_:

.. _RealmList_sort_String__io_realm_Sort__String__io_realm_Sort_:

.. _RealmList_sort_String_io_realm_Sort_String_Sort_:

.. _RealmList_sort_String__io_realm_Sort__String__Sort_:

.. _RealmList_sort_String_Sort_java_lang_String_io_realm_Sort_:

.. _RealmList_sort_String__Sort__java_lang_String__io_realm_Sort_:

.. _RealmList_sort_String_Sort_java_lang_String_Sort_:

.. _RealmList_sort_String__Sort__java_lang_String__Sort_:

.. _RealmList_sort_String_Sort_String_io_realm_Sort_:

.. _RealmList_sort_String__Sort__String__io_realm_Sort_:

.. _RealmList_sort_String_Sort_String_Sort_:

.. _RealmList_sort_String__Sort__String__Sort_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmResults <io_realm_RealmResults>`  :ref:`sort <io_realm_RealmList_sort>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName1, 
       |  :ref:`Sort <io_realm_Sort>`  sortOrder1, 
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName2, 
       |  :ref:`Sort <io_realm_Sort>`  sortOrder2
       | )
       
       
       
   
   * - Sorts a collection based on the provided fields and sort orders.
       
       
       
       
       
       
       **Returns**
       
       a new sorted :ref:`RealmResults <io_realm_RealmResults>`  will be created and returned. The original collection stays unchanged.
       
       
       
       
       
       
       
       
       
   
   
.. _io_realm_RealmList_sort_java_lang_String_io_realm_Sort_:

.. _io_realm_RealmList_sort_java_lang_String__io_realm_Sort_:

.. _io_realm_RealmList_sort_java_lang_String_Sort_:

.. _io_realm_RealmList_sort_java_lang_String__Sort_:

.. _io_realm_RealmList_sort_String_io_realm_Sort_:

.. _io_realm_RealmList_sort_String__io_realm_Sort_:

.. _io_realm_RealmList_sort_String_Sort_:

.. _io_realm_RealmList_sort_String__Sort_:

.. _sort_java_lang_String_io_realm_Sort_:

.. _sort_java_lang_String__io_realm_Sort_:

.. _sort_java_lang_String_Sort_:

.. _sort_java_lang_String__Sort_:

.. _sort_String_io_realm_Sort_:

.. _sort_String__io_realm_Sort_:

.. _sort_String_Sort_:

.. _sort_String__Sort_:

.. _RealmList_sort_java_lang_String_io_realm_Sort_:

.. _RealmList_sort_java_lang_String__io_realm_Sort_:

.. _RealmList_sort_java_lang_String_Sort_:

.. _RealmList_sort_java_lang_String__Sort_:

.. _RealmList_sort_String_io_realm_Sort_:

.. _RealmList_sort_String__io_realm_Sort_:

.. _RealmList_sort_String_Sort_:

.. _RealmList_sort_String__Sort_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmResults <io_realm_RealmResults>`  :ref:`sort <io_realm_RealmList_sort>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  :ref:`Sort <io_realm_Sort>`  sortOrder
       | )
       
       
       
   
   * - Sorts a collection based on the provided field and sort order.
       
       
       
       
       
       
       **Returns**
       
       a new sorted :ref:`RealmResults <io_realm_RealmResults>`  will be created and returned. The original collection stays unchanged.
       
       
       
       
       
       
       
       
       
   
   
.. _io_realm_RealmList_sort_java_lang_String_:

.. _io_realm_RealmList_sort_String_:

.. _sort_java_lang_String_:

.. _sort_String_:

.. _RealmList_sort_java_lang_String_:

.. _RealmList_sort_String_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmResults <io_realm_RealmResults>`  :ref:`sort <io_realm_RealmList_sort>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       
   
   * - Sorts a collection based on the provided field in ascending order.
       
       
       
       
       
       
       **Returns**
       
       a new sorted :ref:`RealmResults <io_realm_RealmResults>`  will be created and returned. The original collection stays unchanged.
       
       
       
       
       
       
       
       
       
   
   


.. _sum:

.. _sum__:

.. _RealmList_sum:

.. _RealmList_sum__:

.. _io_realm_RealmList_sum:

.. _io_realm_RealmList_sum__:



sum
----

.. _io_realm_RealmList_sum_java_lang_String_:

.. _io_realm_RealmList_sum_String_:

.. _sum_java_lang_String_:

.. _sum_String_:

.. _RealmList_sum_java_lang_String_:

.. _RealmList_sum_String_:

.. list-table::
   :header-rows: 1
   
   * - | public `Number <https://docs.oracle.com/javase/7/docs/api/java/lang/Number.html>`__  :ref:`sum <io_realm_RealmList_sum>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       
   
   * - Calculates the sum of a given field.
       
       
       
       
       
       
       **Returns**
       
       the sum. If no objects exist or they all have ``null``  as the value for the given field, ``0``  will be returned. When computing the sum, objects with ``null``  values are ignored.
       
       
       
       
       
       
       
       
       
   
   


.. _toString:

.. _toString__:

.. _RealmList_toString:

.. _RealmList_toString__:

.. _io_realm_RealmList_toString:

.. _io_realm_RealmList_toString__:



toString
--------

.. list-table::
   :header-rows: 1
   
   * - | public `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  :ref:`toString <io_realm_RealmList_toString>` ()
       | 
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       **Overrides**
       
       ``toString`` in class `AbstractCollection <https://docs.oracle.com/javase/7/docs/api/java/util/AbstractCollection.html>`__ 
       
       
   
   


.. _where:

.. _where__:

.. _RealmList_where:

.. _RealmList_where__:

.. _io_realm_RealmList_where:

.. _io_realm_RealmList_where__:



where
-----

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`where <io_realm_RealmList_where>` ()
       | 
       
       
       
   
   * - Returns a RealmQuery, which can be used to query for specific objects of this class.
       
       
       
       
       
       
       **Returns**
       
       a RealmQuery object.
       
       
       
       
       **Throws**
       
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if Realm instance has been closed or parent object has been removed.
          
          
          
       
       
       
       
       
       
       .. seealso::
       
       
          
          - :ref:`io.realm.RealmQuery <io_realm_RealmQuery>` 
             
             
             
          
          
          
       
       
   
   



