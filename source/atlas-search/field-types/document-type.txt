.. _bson-data-types-document:

============================================
How to Index Fields in Objects and Documents 
============================================

.. default-domain:: mongodb

.. meta::
   :description: Use the Atlas Search document field type to include fields in documents or objects in the search index.

.. :keywords: document, document field type, object field type, atlas search field type, document search, object search, field type for indexing documents and objects

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. |data-type| replace:: document 
.. |vib-field-name| replace:: :guilabel:`Add Child Field`
.. |fts-ui-field-type| replace:: :guilabel:`Document`
.. |fts-field-type| replace:: ``document``
.. |properties-link| replace:: :ref:`Field Properties <fts-field-types-document-options>` 
.. |sample-collection| replace:: :ref:`sample_mflix.movies <sample-mflix>`

You can use the |fts| ``document`` type to index fields in objects or
documents. 

.. include:: /includes/fts/extracts/fts-ib-enable-dynamic-mappings.rst 

Review ``document`` Type Limitations 
------------------------------------

You can't use the |fts| ``document`` type to index fields in objects or  
documents that are inside an array. Instead, use the |fts| 
:ref:`embeddedDocuments <bson-data-types-embedded-documents>` type to
index fields in objects or documents that are elements of an array. 

.. _fts-field-types-document-vib-jsonib:

Define the Index for the |fts-field-type| Type  
----------------------------------------------

.. include:: /includes/fts/extracts/fts-index-definition-intro.rst 

.. tabs:: 

   .. tab:: Visual Editor 
      :tabid: vib

      .. include:: /includes/fts/extracts/fts-vib-index-definition-objects.rst 

   .. tab:: JSON Editor 
      :tabid: jsonib

      .. include:: /includes/fts/extracts/fts-jsonib-index-definition.rst  

      .. code-block:: json
         :copyable: true 
         :linenos:
         :emphasize-lines: 6-12

         {
           "mappings": {
             "dynamic": true|false,
             "fields": {
               "<field-name>": {
                 "type": "document",
                 "dynamic": true|false,
                 "fields": {
                   "<field-name>": {
                     <field-mapping-definition>
                   }
                 }
               }
             }
           }
         }

.. _fts-field-types-document-options:

Configure |fts-field-type| Field Properties  
-------------------------------------------

The |fts| ``document`` type takes the following parameters:

.. list-table::
   :widths: 15 10 15 50 10
   :header-rows: 1

   * - Option
     - Type
     - Necessity
     - Description
     - Default

   * - ``type``
     - string
     - Required
     - Human-readable label that identifies the field type.
       Value must be ``document``.
     - 

   * - ``dynamic``
     - boolean
     - Optional
     - Flag that indicates whether |fts| recursively indexes all fields 
       and embedded documents. If set to ``true``, |fts| recursively 
       indexes all fields and embedded documents in the ``document`` 
       except fields of :ref:`certain data types <bson-data-chart>`.
       
       To index all fields in a document including fields that 
       |fts| doesn't dynamically index, define the fields 
       in the index definition.

       If omitted or set to ``false``, you must specify individual 
       fields to index.

       .. include:: /includes/admonitions/importants/dynamic-flag-considerations.rst

     - false

   * - ``fields``
     - document
     - Optional
     - Document that maps field names to field definitions. To learn 
       more, see an :ref:`example <index-config-example>`. This is 
       required if ``dynamic`` is omitted or set to ``false``. 
     - 

.. _fts-field-types-document-egs:

Try an Example for the |fts-field-type| Type  
--------------------------------------------

.. include:: /includes/fts/extracts/fts-index-definition-egs-intro.rst 

The index definition indexes the ``awards`` field as the ``document``
type. It also configures |fts| to automatically index all the
dynamically indexable fields inside the ``awards`` object.

.. tabs::

   .. tab:: Visual Editor 
      :tabid: vib

      1. In the :guilabel:`Add Field Mapping` window, select
         :guilabel:`awards` from the :guilabel:`Field Name` 
         dropdown. 
      #. Click the :guilabel:`Data Type` dropdown and select
         :guilabel:`Document`.
      #. Toggle the :guilabel:`Enable Dynamic Mapping` setting to
         enable dynamic indexing of all dynamically indexable fields in
         the document, if it isn't already enabled.
      #. Click :guilabel:`Add`. 

   .. tab:: JSON Editor 
      :tabid: jsonib

      Replace the default index definition with the following index
      definition. 

      .. code-block:: json
         :copyable: true 
         :linenos:

         {
           "mappings": {
             "dynamic": false,
             "fields": {
               "awards": {
                 "type": "document",
                 "dynamic": true
               }
             }
           }
         }

.. seealso:: Additional Index Definition Examples
   
   - :ref:`Combined Mapping Example <index-config-example>` 
