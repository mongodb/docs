========
dropRole
========

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. dbcommand:: dropRole

   Deletes a :ref:`user-defined <user-defined-roles>` role from the
   database on which you run the command.

   .. |method| replace:: :method:`db.dropRole` helper method
   .. include:: /includes/fact-dbcommand-tip

Compatibility
-------------

This command is available in deployments hosted in the following environments: 

.. include:: /includes/fact-environments-atlas-only.rst

.. include:: /includes/fact-environments-atlas-support-no-free-or-m10.rst

.. include:: /includes/fact-environments-onprem-only.rst

Syntax
------

The command has the following syntax:

.. code-block:: javascript

   db.runCommand(
      {
        dropRole: "<role>",
        writeConcern: { <write concern> },
        comment: <any>
      }
   )

Command Fields
--------------

The command has the following fields:

.. list-table::
   :header-rows: 1
   :widths: 20 20 80
 
   * - Field
     - Type
     - Description

   * - ``dropRole``
     - string
     - The name of the :ref:`user-defined role <user-defined-roles>` to remove
       from the database.

   * - ``writeConcern``
     - document
     - .. include:: /includes/fact-write-concern-spec-link.rst

   * - ``comment``
     - any
     - .. include:: /includes/extracts/comment-content.rst

Behavior
--------

Authentication
~~~~~~~~~~~~~~

.. include:: /includes/behavior-drop-role.rst

Required Access
---------------

.. include:: /includes/access-drop-role.rst

Example
-------

The following operations remove the ``readPrices`` role from the
``products`` database:

.. code-block:: javascript

   use products
   db.runCommand(
      {
        dropRole: "readPrices",
        writeConcern: { w: "majority" }
      }
   )
