=====================
Administer the System
=====================

.. default-domain:: mongodb

The *Administration* section of the |mms| application
provides a tool to view system status, set cron jobs, manage users and
groups, and perform other administrative functions.

If you have administrative privileges for the |mms| deployment, click
the :guilabel:`Admin` link in the top right corner of |mms| to access
the system administration tool.

This page describes the :guilabel:`Admin` section's tabs and pages.

General Tab
-----------

The :guilabel:`Admin` interface's :guilabel:`General` tab provides
overview information, messages, reports, and access to users.

.. _overview-page:

Overview Page
~~~~~~~~~~~~~

The :guilabel:`General` tab's
:guilabel:`Overview` page provides reports on system use and activity.

This page displays the summary table and :guilabel:`Total Pages Viewed`
and :guilabel:`Total Chart Requests` charts.

A summary table reports totals for:

- groups
- active groups
- active hosts
- users
- users active
- ping spillover queue
- increment spillover queue

Additionally two charts report:

- total page views
- total chart requests

.. _users-page:

Users Page
~~~~~~~~~~

The :guilabel:`General` tab's
:guilabel:`Users` page displays a list of user information for all
people with permission to use the |mms| application as well as provides
an interface to manage users. Use the search box on the upper right corner
to find a user record.

Users Information
``````````````````

For each user, the users table reports:

- the username

- the available :doc:`roles </reference/user-roles>`, if any

- the date and time of the last login.

- the date and time of the last access event.

- the total number of login.

- the user's configured timezone.

- the creation date and time.

Edit a User Record
``````````````````

To edit a user record:

#. Click the pencil icon at the far right of the user record.

#. In the :guilabel:`Edit User` interface, you can:

   - Edit the user's email.

   - Select the user's groups and :doc:`roles </reference/user-roles>`.

   - Lock or unlock the account.

   - Specify the user's global roles.

#. When finished, click the :guilabel:`Save` button to save any changes
   and exit.

.. _groups-page:

Groups Page
~~~~~~~~~~~

The :guilabel:`General` tab's
:guilabel:`Groups` page lists all groups created with their date
created and the last date and time an agent for the group pinged |mms|. At
the top right of the page is a search box to find a group by name.
Click a group name to view the group's details.

.. _logs-page-gernal-tab:

Logs Page
~~~~~~~~~

The :guilabel:`General` tab's
:guilabel:`Logs` page lists backup logs by job and class with messages
grouped and counted by last hour, 6 hours, and last 2 days. Click a
count number to see all messages in the group.

Version Manifest Page
~~~~~~~~~~~~~~~~~~~~~

When you run in local mode, you must provide |onprem| with the MongoDB
version manifest, which lists all released MongoDB versions. 

The :guilabel:`Version Manifest` page lists all released MongoDB
versions. |onprem| requires this list to run in local mode. See
:ref:`version-manifest` in the :doc:`/tutorial/configure-local-mode`
tutorial for more information.

.. Agent Dashboard: internal

.. _messages-page:

Messages Page
~~~~~~~~~~~~~

The :guilabel:`General` tab's
:guilabel:`Messages` page provides information on existing messages
and provides an interface to add new messages or manage existing messages.

You can display a short message on any page of the |mms| application to
notify or remind users, such as impending maintenance windows. Messages
may be *active*, i.e. visible, on all pages or a subset of pages.

UI Messages Table
`````````````````

The :guilabel:`UI Messages` table holds all available messages. Use the
search box on the top right to filter the list of messages.

For each message, the table reports:

- which page or page prefix the message will appear on.

- the text of the message.

- whether the message is active or inactive. Active messages are also
  highlighted in orange.

- the creation date and time for the message.

- the date and time of the last modification for the message.

Add a Message
`````````````

To add a message which appears on one page, or on all pages,

#. Click the:guilabel:`Add Message` button.

#. In the :guilabel:`Add Message` interface, enter

   - the message, and

   - the page URL or optionally, page prefix in the :guilabel:`Add
     Message` interface.

     The page prefix allows you to specify a path of a single page or
     the URL prefix of a group of pages. The prefix must begin with a
     ``/`` character.

     .. Is this example referring to the |mms| UI? |mms| no longer has a Settings tab.

        For example, entering the page prefix ``/settings/profile`` will
        display a message on the default :guilabel:`Settings` tab and
        :guilabel:`Profile` page but not on any other tab or page in the
        application.

#. Click the :guilabel:`Active` checkbox to make the message live.
   Optionally, you can leave the box unchecked to disable the message.

#. Click the :guilabel:`Add` button to add the message.

Once added, active messages take 60 seconds before they display.

Disable a Message
`````````````````

To disable a message, click the orange square button to the right of
any alert listed on the :guilabel:`Messages` page. The orange button
will change to a grey button.

To re-enable a disabled message, click the grey button; the grey button
will change to back to an orange button.

Delete a Message
````````````````

To delete a message, click the garbage can icon to the right of any alert
listed on the :guilabel:`Messages` page.

.. Reports page: internal

Audits Page
~~~~~~~~~~~

The :guilabel:`General` tab's
:guilabel:`Audits` page displays all events tracked by |mms|.
This includes the group events as well as internal and system events, which
are not tracked at a group level.

.. Automation tab: internal

.. _backup-tab:

Backup Tab
----------

The :guilabel:`Admin` interface's :guilabel:`Backup` tab provides
information on Backup resources, including jobs, daemons, and blockstores.
For an overview of Backup and Backup resources, see
:doc:`/core/backup-overview`.

.. _jobs-page:

Jobs Page
~~~~~~~~~

The :guilabel:`Backup` tab's
:guilabel:`Jobs` page lets you manage Backup jobs and Backup resources for
each group. The top part of the page displays :guilabel:`Active Jobs`; the
bottom part displays :guilabel:`Stopped Jobs`.
The following fields on the page have a yellow background if delayed:

- :guilabel:`Last Agent Conf`, if older than 1 hour.

- :guilabel:`Last Oplog`, if older than 1 hour before the :guilabel:`Last Agent Conf`.

- :guilabel:`Head Time`, if older than 1 hour before :guilabel:`Last Oplog`.

- :guilabel:`Last Snapshot`, if older than the snapshot interval multiplied by 1.5.

Manage Backup Jobs
``````````````````

From the :guilabel:`Jobs` page, you can do the following:

.. list-table::
   :header-rows: 1

   * - Task

     - Procedure

   * - View a job's log.

     - Click the name of the job and then click the :guilabel:`Logs` link.
       Contact MongoDB Support if you need help interpreting the error
       message.

   * - View information about a job.

     - Click the job. From the job's page you can access logs, conf calls,
       and other information, and you can download diagnostics.

   * - Move a job to a new Backup Daemon.

     - Click the job. On the job's page, click the :guilabel:`Move head`
       link, select the new head, and click the :guilabel:`Move Head`
       button.

   * - Filter the page to display the jobs assigned to a particular daemon or
       blockstore.

     - Click the name of the daemon or blockstore.

Manage Backup Resources
```````````````````````

The :guilabel:`Jobs` page lets you assign which backup resources can be
used by a particular group. You might do this, for example, for
data locality or for data that requires a certain hardware profile.

You can make these changes for existing backup resources, but only new
backup jobs will follow the new rules. Making these
changes does not affect existing deployments. For additional procedural
information, see :doc:`/tutorial/nav/backup-jobs`.

.. list-table::
   :header-rows: 1

   * - Task

     - Procedure

   * - Assign a group to particular daemons, blockstores, sync stores, or
       oplog stores.

     - Click the group to open the group's assignment page; make the
       assignments; select :guilabel:`Save Changes`.

   * - Assign a group to a labelled set of daemons, blockstores, sync
       stores, and oplog stores.

     - First assign the label on the Admin page for each resource. See
       :ref:`daemons-interface`, :ref:`blockstores-page`,
       :ref:`sync-stores-page`, and :ref:`oplog-stores-page`.

       Then, on the :guilabel:`Jobs` page:

       1. Click the group name to open the group's assignment page.

       2. In the :guilabel:`Assignment Labels` list box, click :guilabel:`Select Labels`.

       3. Select the label. Each selected label must exist on at least one
          daemon, one blockstore, one sync store, and one oplog store. If
          you select multiple labels, the resource must meet all selected
          labels.

          Keep in mind that the resource must also meet any other selected
          criteria on this page. For example, for a daemon to match, it
          must also meet any selections you have made in the
          :guilabel:`Backup Daemon` field.

       4. Click :guilabel:`Save Changes`.

Job Timeline Page
~~~~~~~~~~~~~~~~~

The :guilabel:`Backup` tab's
:guilabel:`Job Timeline` page displays a graphical representation of
information found on other :guilabel:`Admin` pages, in particular the
:guilabel:`Jobs` page. The :guilabel:`Job Timeline` page displays critical
timestamps (head, last snapshot, next snapshot) and offers a way to assign a
daemon to a given job.

Click the :guilabel:`Auto refresh` checkbox to update the list automatically
every 10 seconds. Click the :guilabel:`Refresh` button to refresh data
manually.

To view the backup job JSON, click the :guilabel:`Show JSON` link under
the :guilabel:`Group` heading for any backup job. When the JSON displays,
click the :guilabel:`View raw runtime data` link under the code to view
the raw data. To hide the daemon JSON, click the :guilabel:`Hide JSON` link.

To move the job to a new Backup Daemon, click the :guilabel:`Move head`
link under the :guilabel:`Machine` heading for a backup job. Select the
location and click the :guilabel:`Move head` button to move the job to a
new Backup Daemon. |mms| does not automatically move jobs between daemons.

You can bind a backup job to a head by clicking :guilabel:`Set binding`
under the :guilabel:`Machine` heading for a backup job. You can bind a job
to a preferred Backup Daemon during :ref:`initial sync
<backup-initial-sync>`. After initial sync completes, |mms| automatically
assigns jobs to Backup Daemons.

.. Break Job: internal

Logs Page
~~~~~~~~~

The :guilabel:`Backup` tab's
:guilabel:`Logs` page lists backup logs by job and class with messages
grouped and counted by last 2 hours, last day, and last 3 days. Click a
count number to see all messages in the group.

Restores Page
~~~~~~~~~~~~~

The :guilabel:`Backup` tab's
:guilabel:`Restores` page displays the last 100 requested restores and their
progress. To show all restores ever requested, click :guilabel:`Show All`.

.. _resource-usage-page:

Resource Usage Page
~~~~~~~~~~~~~~~~~~~

The :guilabel:`Backup` tab's
:guilabel:`Resource Usage` page provides key size and throughput
statistics on a per-job basis for all groups for which Backup is enabled. The
page displays such throughput statistics as the size of the data set, how
active it is, and how much space is being used on the blockstore.

To export the information, click :guilabel:`EXPORT AS CSV`.

.. _grooms-page:

Grooms Page
~~~~~~~~~~~

.. versionadded:: 1.4

The :guilabel:`Backup` tab's
:guilabel:`Grooms` page lists active and recent groom jobs.

|mms| performs periodic garbage collection on blockstores through groom
jobs that remove unused blocks to reclaim space. Unused blocks are those
that are no longer referenced by a live snapshot. A
scheduling process determines when grooms are necessary.

A groom job forces the backup process to:

- write all new data to a new location,

- copy all existing, needed data from the old location to the new one,

- update references, to maintain data relationships, and

- drop the old database.

During groom operations, you may notice that blockstore file size will
fluctuate, sometimes dramatically.

You can manually direct |mms| to move blocks between Blockstores through
the :ref:`groom-priority-page`.

.. _groom-priority-page:

Groom Priority
~~~~~~~~~~~~~~

.. versionadded:: 1.6

The :guilabel:`Backup` tab's
:guilabel:`Groom Priority` page allows you to manually schedule jobs to move a backup's blocks
to a different blockstore
and to manually schedule :ref:`grooms <grooms-page>`. The page lists
each backup by its replica set and highlights a backup in blue if a groom
is in progress.

To move a backup's chunks to a different blockstore, select the destination
blockstore in the backup's :guilabel:`Blockstore List` column.
You might want to do this, for example, if you add a new blockstore and would
like to balance data.

Typically, you should not need to manually schedule groom jobs. |mms|
:ref:`runs the jobs automatically <grooms-page>`. If you do need to
initiate a job, click the :guilabel:`Schedule` button for the backup's
replica set.

.. Provisioning page: internal

.. _daemons-interface:

Daemons Page
~~~~~~~~~~~~

The :guilabel:`Backup` tab's
:guilabel:`Daemons` page lists all active Backup Daemons and provides
configuration options. |mms| automatically detects Backup Daemons and
displays them here. You can reconfigure daemons from this page. Changes
can take up to 5 minutes to take effect.

Use the :guilabel:`Pre-Configure New Daemon` button at the bottom of the
page if you want to add a daemon but do not want it to take new jobs. Type
the ``<machine>:<roothead path>`` in the text field above the
:guilabel:`Pre-Configure New Daemon` button. Click the button to configure
the new Backup Daemon.

For each daemon, the page lists the server name, configuration, head space
used, head space free, the number of replica sets backed up, the
percentage of time the Backup Daemon Service was busy, and job runtime
counts by 1 minute, 10 minutes, 60 minutes, less than or equal to 180
minutes, and greater than 180 minutes.

The page includes the following fields and links to manage and configure
daemons:

.. These table fields are internal only:
   Queryable Restore Jobs, Archive Jobs, Git Commit Hash: internal

.. list-table::
   :header-rows: 1

   * - Field
     - Description

   * - :guilabel:`Show Detailed JSON`

     - Displays the Backup Daemon JSON. When the JSON displays, the
       :guilabel:`View raw runtime data` link appears under the code, allowing
       you to view the raw data.

   * - :guilabel:`Move all heads`

     - Moves all the Backup Daemon jobs that live on this daemon to a new daemon
       location. Click the link, then select the location, and then click the
       :guilabel:`Move all heads` button.

   * - :guilabel:`Delete Daemon`

     - Deletes a Backup Daemon.

   * - :guilabel:`Assignment`

     - Allows the daemon to take more jobs. If a disk fills on daemon server,
       you can deselect this so the server isn't overloaded.

   * - :guilabel:`Backup Jobs`

     - Allows the daemon to take more backup jobs. Deselect this, for example,
       when performing maintenance on a daemon's server.

   * - :guilabel:`Restore Jobs`

     - Allows the daemon to take more restore jobs.

   * - :guilabel:`Resource Usage`

     - Collects information on Blockstore use (i.e., on how many blocks
       are still referenced by snapshots). |onprem| uses this information
       to generate the :ref:`resource-usage-page` page and to prioritize
       garbage collection.

   * - :guilabel:`Garbage Collection`

     - Enables garbage collection.

   * - :guilabel:`Head Disk Type`

     - Indicates whether the disk type is SSD or HDD. If you change a
       daemon to SSD, then jobs with an oplog greater than 1GB/hour will
       go to SSDs and those with an oplog less than 1GB/hour will go to
       HDDs.

   * - :guilabel:`Assignment Labels`

     - Creates one or more labels that can be used to assign the daemon to
       a specific group.

.. _blockstores-page:

Blockstores Page
~~~~~~~~~~~~~~~~

The :guilabel:`Backup` tab's
:guilabel:`Blockstores` page lists all Backup blockstores and provides
the ability to add a new blockstore. You can use multiple blockstores
if your existing blockstores have reached capacity, for data locality,
or for regulatory reasons.

Edit an Existing Blockstore
```````````````````````````

To update an existing Blockstore, edit the :guilabel:`<hostname>:<port>`
field, :guilabel:`MongoDD Auth Username` field, and :guilabel:`MongoDB
Auth Password` field. If the username and password had used the
``credentialstool`` for encryption, click the :guilabel:`Encrypted
Credentials` checkbox.

.. _add-blockstore:

Add a Blockstore
````````````````

To add a blockstore, first :doc:`deploy the dedicated MongoDB instance(s)
</tutorial/prepare-backing-mongodb-instances>` to host the blockstore.

Then, on the :guilabel:`Blockstores` page, enter the ``<id>`` and
``<hostname:port>`` in the
text fields above the :guilabel:`Add New Blockstore` button. For replica
sets, enter a comma-separated list for ``<hostname:port>``. Finally, click the
button to save and add the blockstore. A newly configured blockstore
becomes active when you select the assignment checkbox.

.. seealso::

   :doc:`/tutorial/configure-backup-data-locality` describes how to
   configure multiple blockstores in different data centers.

.. _delete-blockstore:

Delete a Blockstore
```````````````````

To delete a blockstore, click the :guilabel:`Delete blockstore` link for
the blockstore.

To assign labels to assign the blockstore to a specific group, enter the
labels in :guilabel:`Assignment Labels`. Separate multiple labels with
commas.

.. _sync-stores-page:

Sync Stores Page
~~~~~~~~~~~~~~~~

The :guilabel:`Backup` tab's
:guilabel:`Sync Stores` page configures the backing replica sets that store sync slices.
Sync slices are temporary backups of your deployment batched into 10MB slices.
The Backup Agent creates sync slices during an :ref:`initial sync
<backup-initial-sync>`, and the Backup Daemon uses them to create the
permanent backup. |mms| deletes sync slices once the initial sync completes.

Do **not** modify a sync store's connection string to point to a different
replica set. Doing so requires all |mms| components to be restarted.
Existing data will not be copied automatically.

From this page you can:

- Add a member to a replica set by adding the host to the replica set
  connection string in the :guilabel:`<hostname>:<port>` field. Do **not**
  modify the connection string to point to a different replica set.

- Change the authentication credentials or connection options for a sync
  store by modifying the appropriate fields.

- Add an additional sync store by clicking the :guilabel:`Add New Sync
  Store` button at the bottom of the page.

- Enable and disable new assignments to sync stores using the checkboxes
  in the :guilabel:`Assignment Enabled` column.

- Assign labels that can be used to assign the sync store to a specific
  group. Enter labels in :guilabel:`Assignment Labels`. Separate multiple
  labels with commas.

.. _oplog-stores-page:

Oplog Stores Page
~~~~~~~~~~~~~~~~~

The :guilabel:`Backup` tab's
:guilabel:`Oplog Stores` page configures the backing replica sets that store oplog slices.
Oplog slices are compressed batches of the entries in the tailed oplogs of
your backed-up deployments.

Do **not** modify the oplog store's connection string to point to a
different replica set. Doing so requires all |mms| components to be
restarted. Existing data will not be copied automatically.

From this page you can:

- Add a member to a replica set by adding the host to the replica set
  connection string in the :guilabel:`<hostname>:<port>` field. Do **not**
  modify the connection string to point to a different replica set.

- Change the authentication credentials or connection options for a oplog
  store by modifying the appropriate fields.

- Add an additional oplog store by clicking the :guilabel:`Add New Oplog
  Store` button at the bottom of the page.

- Enable and disable new assignments to oplog stores using the checkboxes
  in the :guilabel:`Assignment Enabled` column.

- Assign labels that can be used to assign the oplog store to a specific
  group. Enter labels in :guilabel:`Assignment Labels`. Separate multiple
  labels with commas.

.. Analytics tab: internal

Alerts Tab
----------

The :guilabel:`Admin` interface's :guilabel:`Alerts` tab sets and displays
global and system alerts. Global alerts apply a group-level alert
condition to multiple groups. System alerts monitor the health of
|onprem|. To use global and system alerts, see
:doc:`/core/global-and-system-alerts`.

.. _control-panel:

Control Panel Tab
-----------------

The :guilabel:`Admin` interface's :guilabel:`Control Panel` tab provides
access to Cron jobs and email history.

Email History Page
~~~~~~~~~~~~~~~~~~

The :guilabel:`Control Panel` tab's
:guilabel:`Email History` page displays all alerts emails sent, the
subject, and the recipient. To view an email, click the subject link. To
filter the list, click :guilabel:`FILTER BY RECIPIENT`.

Cron Jobs Page
~~~~~~~~~~~~~~

The :guilabel:`Control Panel` tab's
:guilabel:`Cron Jobs` page displays all scheduled processes and their
statuses. To disable a job, uncheck its box in the :guilabel:`ENABLED` column.
To run a job, click :guilabel:`RUN NOW`.

.. Billing Tab: internal

.. Design Toolkit tab: internal
