.. _java-usage-find:

=======================
Find Multiple Documents
=======================



You can query for multiple documents in a collection by calling the ``find()``
method on a ``MongoCollection`` object. Pass a query filter to the
``find()`` method to query for and return documents that match the filter in
the collection. If you do not include a filter, MongoDB returns all the
documents in the collection.

For more information about querying MongoDB with the Java driver, see our
:doc:`guide on Querying Documents </fundamentals/crud/read-operations/retrieve/>`.

You can also chain methods to the ``find()`` method such as ``sort()`` which
organizes the matched documents in a specified order and
``projection()`` which configures the included fields in the
returned documents.

For more information about the ``sort()`` method, see our
:doc:`guide on Sorting </fundamentals/crud/read-operations/sort/>`.
For more information about the ``projection()`` method, see our
:doc:`guide on Projections </fundamentals/crud/read-operations/project/>`

The ``find()`` method returns an instance of ``FindIterable``, a class
that offers several methods to access, organize, and traverse the results.
``FindIterable`` also inherits methods from its parent class,
``MongoIterable`` which implements the core Java interface ``Iterable``.

You can call the ``iterator()`` method on the ``MongoIterable`` which
returns a ``MongoCursor`` instance that you can use to traverse the results.
You can call methods on the ``MongoCursor`` such as ``hasNext()`` to check
whether additional results exist, or ``next()`` to return the next document
in the collection. If no documents match the query, calling ``hasNext()``
returns ``false`` and therefore calling ``next()`` throws an exception.

If you call ``next()`` on the iterator either after it has returned the final
result or when no results exist, it throws an exception of type
``java.util.NoSuchElementException``. Always use ``hasNext()`` to check that
additional results exist before you call ``next()``.


Example
-------

The following snippet finds and prints all documents that match a query on
the ``movies`` collection. It uses the following objects and methods:

- A **query filter** that is passed to the ``find()`` method. The ``lt()``
  filter matches only movies with a runtime of less than 15 minutes.

- A **sort** that organizes returned documents in descending order by
  title ("Z" before "A").

- A **projection** that includes the objects in the ``title`` and ``imdb``
  fields and excludes the ``_id`` field using the helper method
  ``excludeId()``.

.. include:: /includes/connect-guide-note.rst

.. literalinclude:: /includes/usage-examples/code-snippets/Find.java
   :language: java


.. include:: /includes/legacy-redirect.rst

For additional information on the classes and methods mentioned on this
page, see the following API Documentation:

- `FindIterable <{+api+}/apidocs/mongodb-driver-sync/com/mongodb/client/FindIterable.html>`__
- `MongoIterable <{+api+}/apidocs/mongodb-driver-sync/com/mongodb/client/MongoIterable.html>`__
- `MongoCursor <{+api+}/apidocs/mongodb-driver-sync/com/mongodb/client/MongoCursor.html>`__
- `find() <{+api+}/apidocs/mongodb-driver-sync/com/mongodb/client/MongoCollection.html#find()>`__

