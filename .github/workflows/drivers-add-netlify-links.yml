name: Add Netlify Links To Changed Pages
on:
  pull_request_target:
    paths:
      - content/c-driver/**
      - content/cpp-driver/**
      - content/csharp/**
      - content/django-mongodb/**
      - content/drivers/**
      - content/entity-framework/**
      - content/golang/**
      - content/hibernate/**
      - content/java/**
      - content/java-rs/**
      - content/kotlin/**
      - content/kotlin-sync/**
      - content/laravel-mongodb/**
      - content/mongodb-analyzer/**
      - content/mongoid/**
      - content/node/**
      - content/php-library/**
      - content/pymongo-arrow-driver/**
      - content/pymongo-driver/**
      - content/ruby-driver/**
      - content/rust/**
      - content/scala-driver/**
      - content/spark-connector/**

jobs:
  get-pr-changes:
    name: Get Changed Files & Update PR Description
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: write
      pull-requests: write
      repository-projects: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Get Changed Files and Folders
        id: changed-files
        run: |
          # Get base commit for PR
          base_commit=$(git merge-base ${{ github.event.pull_request.head.sha }} origin/${{ github.base_ref }})
          # Get added, modified, and renamed files in content/
          changed_files=$(git diff --diff-filter=AMR --name-only $base_commit ${{ github.event.pull_request.head.sha }} | grep '^content/' | sed 's|^|/|')
          # Convert to comma-separated list
          changed_files_csv=$(echo "$changed_files" | tr '\n' ',')
          driver_folders=$(echo "$changed_files" | cut -d/ -f3 | sort -u | tr '\n' ',' | sed 's/,$//')
          echo "changed_files=$changed_files_csv" >> $GITHUB_OUTPUT
          echo "driver_folders=$driver_folders" >> $GITHUB_OUTPUT
      - name: Build Netlify Links for Changed Pages
        id: build-page-links
        env:
          CHANGED_FILES: ${{ steps.changed-files.outputs.changed_files }}
          DRIVER_FOLDERS: ${{ steps.changed-files.outputs.driver_folders }}
        run: |
          # Mapping from folder to link prefix
          declare -A url_segments
          url_segments["c-driver"]="languages/c/c-driver"
          url_segments["cpp-driver"]="languages/cpp/cpp-driver"
          url_segments["csharp"]="drivers/csharp"
          url_segments["drivers"]="drivers"
          url_segments["entity-framework"]="entity-framework"
          url_segments["golang"]="drivers/go"
          url_segments["hibernate"]="languages/java/mongodb-hibernate"
          url_segments["java"]="drivers/java/sync"
          url_segments["java-rs"]="languages/java/reactive-streams-driver"
          url_segments["kotlin"]="drivers/kotlin/coroutine"
          url_segments["kotlin-sync"]="languages/kotlin/kotlin-sync-driver"
          url_segments["node"]="drivers/node"
          url_segments["pymongo-driver"]="languages/python/pymongo-driver"
          url_segments["pymongo-arrow-driver"]="languages/python/pymongo-arrow-driver"
          url_segments["ruby-driver"]="ruby-driver"
          url_segments["mongodb-analyzer"]="mongodb-analyzer"
          url_segments["mongoid"]="mongoid"
          url_segments["rust"]="drivers/rust"
          url_segments["scala-driver"]="languages/scala/scala-driver"
          url_segments["spark-connector"]="spark-connector"
          url_segments["laravel-mongodb"]="drivers/php/laravel-mongodb"
          url_segments["php-library"]="php-library"
          url_segments["django-mongodb"]="languages/python/django-mongodb"

          # Remove trailing comma from CHANGED_FILES
          CHANGED_FILES=$(echo "$CHANGED_FILES" | sed 's/,$//')

          new_links=""
          # Build links for each driver folder
          for folder in $(echo "$DRIVER_FOLDERS" | tr ',' '\n'); do
            segment="${url_segments[$folder]}"
            # Skip if no matching URL segment
            if [ -z "$segment" ]; then
              continue
            fi
            base_link="https://deploy-preview-${{ github.event.number }}--mongodb-${folder}.netlify.app/docs/${segment}"
            for file in $(echo "$CHANGED_FILES" | tr ',' '\n'); do
              if [[ $file == "/content/$folder"* && $file == *.txt ]]; then
                if (! grep -s "includes/"  <<< "$file") && 
                    (! grep -s "images/"  <<< "$file") && 
                    (! grep -s "examples/"  <<< "$file"); then
                  file_path="${file#/content/$folder}"
                  file_path=$(echo "$file_path" | sed 's|/source||')
                  file_path="${file_path%.txt}"
                  final_link="${base_link}${file_path}"
                  new_links+="<li><a href=${final_link}>${folder}${file_path}</a></li>"
                fi
              fi
            done
          done
          if [ "$new_links" == "" ]; then
            new_links="No pages to preview"
          fi
          echo "staging_links=${new_links}" >> "$GITHUB_OUTPUT"
      - name: Update the PR Description
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pr_number=${{ github.event.number }}
          body=$(gh pr view $pr_number --json body -q ".body")
          # Limit to 50 links
          truncated_links=$(echo "${{ steps.build-page-links.outputs.staging_links }}" | sed 's/<li>/\n<li>/g' | awk 'BEGIN{count=0} /<li>/{if(count<50){print; count++}} !/<li>/{print}')
          new_body=$(echo "$body" | perl -0777 -pe "s|<!-- start insert-links -->.*<!-- end insert-links -->|<!-- start insert-links -->\n${truncated_links}\n<!-- end insert-links -->|is")
          gh pr edit $pr_number --body "$new_body"