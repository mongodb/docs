arg_name: field
description: |
  The collection to query.
interface: command
name: geoNear
operation: geoNear
optional: false
position: 1
type: string
---
arg_name: field
description: |
  The point for which to find the closest documents.

  If using a :doc:`2dsphere </core/2dsphere>` index, you can specify
  the point as either a GeoJSON point or legacy coordinate pair.

  If using a :doc:`2d </core/2d>` index, specify the point as a legacy
  coordinate pair.
interface: command
name: near
operation: geoNear
optional: false
position: 2
type:
- GeoJSON point
- :term:`legacy coordinate pair <legacy coordinate pairs>`
---
arg_name: field
description: |
  Required if using a ``2dsphere`` index. Determines how MongoDB
  calculates the distance. The default value is ``false``.

  If ``true``, then MongoDB uses spherical geometry to calculate
  distances in meters if the specified (``near``) point is a GeoJSON
  point and in radians if the specified (``near``) point is a legacy
  coordinate pair.

  If ``false``, then MongoDB uses 2d planar geometry to calculate
  distance between points.

  If using a :doc:`2dsphere </core/2dsphere>` index, ``spherical`` must
  be ``true``.
interface: command
name: spherical
operation: geoNear
optional: false
position: 3
type: boolean
---
arg_name: field
description: |
  The maximum number of documents to return. The default value is ``100``.
  See also the ``num`` option.
interface: command
name: limit
operation: geoNear
optional: true
position: 4
type: number
---
arg_name: field
description: |
  The ``num`` option provides the same function as the ``limit`` option.
  Both define the maximum number of documents to return. If both options
  are included, the ``num`` value overrides the ``limit`` value.
interface: command
name: num
operation: geoNear
optional: true
position: 5
type: number
---
arg_name: field
description: |
  The minimum distance from the center point that the documents *must*
  be. MongoDB filters the results to those documents that are *at
  least* the specified distance from the center point.

  Only available for use with :doc:`2dsphere </core/2dsphere>` index.

  Specify the distance in meters for :term:`GeoJSON` data and in
  radians for :term:`legacy coordinate pairs <legacy coordinate pairs>`.

  .. versionadded:: 2.6
interface: command
name: minDistance
operation: geoNear
optional: true
position: 6
type: number
---
arg_name: field
description: |
  The maximum distance from the center point that the documents *can*
  be. MongoDB limits the results to those documents that fall within
  the specified distance from the center point.

  Specify the distance in meters for :term:`GeoJSON` data and in
  radians for :term:`legacy coordinate pairs <legacy coordinate pairs>`.
interface: command
name: maxDistance
operation: geoNear
optional: true
position: 7
type: number
---
arg_name: field
description: |
  Limits the results to the documents that match the query. The query
  syntax is the usual MongoDB :ref:`read operation query
  <read-operations-query-argument>` syntax.

  .. include:: /includes/fact-geoNear-restrict-near-in-query.rst
interface: command
name: query
operation: geoNear
optional: true
position: 8
type: document
---
arg_name: field
description: |
  The factor to multiply all distances returned by the query. For
  example, use the ``distanceMultiplier`` to convert radians, as
  returned by a spherical query, to kilometers by multiplying by the
  radius of the Earth.
interface: command
name: distanceMultiplier
operation: geoNear
optional: true
position: 9
type: number
---
arg_name: field
description: |
  If this is ``true``, the query
  returns the location of the matching documents in the results. The
  default is ``false``. This option is useful when a location field
  contains multiple locations. To specify a field within an
  embedded document, use :term:`dot notation`.
interface: command
name: includeLocs
operation: geoNear
optional: true
position: 10
type: boolean
---
arg_name: field
description: |
  If this value is ``true``, the query returns a matching document once,
  even if more than one of the document's location fields match the
  query.

  .. include:: /includes/deprecation-uniqueDocs.rst
interface: command
name: uniqueDocs
operation: geoNear
optional: true
position: 11
type: boolean
---
name: readConcern
position: 12
type: document
description: |
   Specifies the :term:`read concern`.

   .. include:: /includes/fact-enable-majority-readConcern.rst

   .. versionadded:: 3.2
optional: true
operation: geoNear
arg_name: field
interface: dbcommand
...
