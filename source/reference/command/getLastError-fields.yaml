object:
  name: getLastError
  type: command
field:
  optional: false
  type: field
name: j
type: Boolean
position: 1
description: |
  If ``true``, wait for the next journal commit before returning, rather
  than waiting for a full disk flush. If :program:`mongod` does not have
  journaling enabled, this option has no effect. If this option is
  enabled for a write operation, :program:`mongod` will wait *no more*
  than 1/3 of the current :setting:`journalCommitInterval` before
  writing data to the journal.
---
object:
  name: getLastError
  type: command
field:
  optional: false
  type: field
name: w
type:
  - integer
  - string
position: 2
description: |
  When running with replication, this is the number of servers to
  replicate to before returning. A ``w`` value of 1 indicates the
  primary only. A ``w`` value of 2 includes the primary and at least one
  secondary, etc. In place of a number, you may also set ``w`` to
  ``majority`` to indicate that the command should wait until the latest
  write propagates to a majority of replica set members. If using ``w``,
  you should also use ``wtimeout``. Specifying a value for ``w`` without
  also providing a ``wtimeout`` may cause :dbcommand:`getLastError` to
  block indefinitely.
---
object:
  name: getLastError
  type: command
field:
  optional: false
  type: field
name: fsync
type: Boolean
position: 3
description: |
  If ``true``, wait for :program:`mongod` to write this data to disk
  before returning. Defaults to false. In most cases, use the ``j``
  option to ensure durability and consistency of the data set.
---
object:
  name: getLastError
  type: command
field:
  optional: true
  type: field
name: wtimeout
type: integer
position: 4
description: |
  Milliseconds. Specify a value in milliseconds to control how
  long to wait for write propagation to complete. If replication does
  not complete in the given timeframe, the :dbcommand:`getLastError`
  command will return with an error status.
...
