.. _k8s-container-images:

================
Container Images
================

.. meta::
   :description: Plan and manage Kubernetes Operator container images, including static and non-static container architectures, for MongoDB deployments.

.. default-domain:: mongodb

.. facet::
   :name: genre
   :values: tutorial

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

When you install the |k8s-op-short|, it pulls the images from the Quay.io
container registry. The |k8s-op-short| images are based on the
`Red Hat UBI 8 <https://www.redhat.com/en/topics/containers>`__
operating system. MongoDB rebuilds |k8s-op-short| images daily for the
latest operating system and supporting library updates.

Official images provide the following advantages:

- They are rebuilt daily for the latest upstream vulnerability fixes.
- MongoDB tests, maintains, and supports them.

To view all available versions for each image, see the following links.

.. list-table::
   :header-rows: 1
   :widths: 50 50

   * - Image Name
     - Description
   
   * - :qr-mdb:`mongodb-agent-ubi
       </mongodb-agent-ubi?tab=tags&tag=latest>`
     - {+mdbagent+} image.

   * - :qr-mdb:`mongodb-enterprise-server 
       </mongodb-enterprise-server?tab=tags&tag=latest>`
     - The Enterprise MongoDB image used for :ref:`static containers <static-containers>` 
       and the {+appdb+}.

   * - :qr-mdb:`mongodb-enterprise-init-appdb-ubi 
       </mongodb-enterprise-init-appdb-ubi?tab=tags&tag=latest>`
     - ``initContainer`` image that contains the {+appdb+} 
       start-up scripts and the readiness probe.

   * - :qr-mdb:`mongodb-enterprise-database-ubi 
       </mongodb-enterprise-database-ubi?tab=tags&tag=latest>`
     - MongoDB Database environment image used for non-static containers. 
       To learn about static and non-static containers, see  
       :ref:`static-containers`.

   * - :qr-mdb:`mongodb-enterprise-init-database-ubi
       </mongodb-enterprise-init-database-ubi?tab=tags&tag=latest>`
     - ``initContainer`` image that contains the {+mdbagent+} start-up
       scripts and the readiness probe.

   * - :qr-mdb:`mongodb-enterprise-ops-manager-ubi 
       </mongodb-enterprise-ops-manager-ubi?tab=tags&tag=latest>`
     - |onprem| image.

   * - :qr-mdb:`mongodb-enterprise-init-ops-manager-ubi
       </mongodb-enterprise-init-ops-manager-ubi?tab=tags&tag=latest>`
     - ``initContainer`` image that contains the |onprem| start-up
       scripts and the readiness probe.

.. _static-containers:

Static Containers
-----------------

.. include:: /includes/static-containers-description.rst

You can use the 
static containers instead of the existing non-static containers, which 
downloads the MongoDB binary from |com| or the Internet at runtime.
You can use the procedures on this page to enable or disable static
containers for all or individual MongoDB deployments. 

Static containers use the image from the :qr-mdb:`mongodb-enterprise-server 
</mongodb-enterprise-server?tab=tags&tag=latest>` Quay.io repository by
default, but you can use your own registry if you configured it for your
Kubernetes |k8s-nodes|. 

.. _arch-static-containers:

Architecture
~~~~~~~~~~~~

The architecture of static and non-static containers differs significantly and
requires several steps to migrate from one to the other. To learn more, see :ref:`migrate-to-static-containers` and :ref:`migrate-to-non-static-containers`.  

Non-Static Container Architecture
`````````````````````````````````

The default non-static container architecture assumes you bootstrap an empty-shell 
container, download and start the {+mdbagent+}, which then downloads the binaries 
for |mongod| and |mongosh| from |com|. 

.. figure:: /images/mdb-deployment.svg
   :alt: Diagram showing the high-level architecture of a MongoDB deployment with
         non-static containers configured using the MongoDB Controllers for Kubernetes.
   :figwidth: 600px

Static Container Architecture
`````````````````````````````

The static container architecture uses Kubernetes' :k8sdocs:`shared namespace feature </tasks/configure-pod-container/share-process-namespace/>`
to run the {+mdbagent+} as a separate process so it can control the full |mongod| lifecycle and avoid downloading files over a network.

.. figure:: /images/mdb-deployment-static.svg
   :alt: Diagram showing the high-level architecture of a MongoDB deployment with
         static containers configured using the MongoDB Controllers for Kubernetes.
   :figwidth: 600px

.. _local-remote-mode: 

Compatibility With Local or Remote Mode 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you use static containers, you don't need to configure |onprem| to
run in :ref:`Local Mode <deploy-om-container-local-mode>` or
:ref:`Remote Mode <deploy-om-container-remote-mode>`, unless you use
queryable backups. In static container architecture, the binaries
for the agent and ``mongod`` have their own container images and these
are not downloaded from |onprem|. 

Queryable backups are the exception because in the non-static container
architecture, by default, the Backup Daemon downloads and runs the
MongoDB Server binaries for all versions that are backed-up. This
default MongoDB behavior undermines the fully static nature of the
containers used to run the Backup Daemon. If you use queryable backups,
you must still host the relevant MongoDB Server binaries using local or
remote mode. To learn more, see :ref:`deploy-om-container-local-mode` or
:ref:`deploy-om-container-remote-mode`.  

If you used Remote or Local mode before and don't want to use queryable
backups, do the following to ensure that ``mongodb-enterprise-server``
`images <https://quay.io/repository/mongodb/mongodb-enterprise-server?tab=tags&tag=latest>`__  
can be downloaded on the |k8s-nodes| used by the pods: 

1. Configure an internal container registry for your Kubernetes nodes. 

   The |k8s-nodes| will download the images from `Quay.io
   <https://quay.io/repository/mongodb/mongodb-enterprise-server?tab=tags&tag=latest>`__ 
   unless you use a local container registry.

2. Download and add the ``mongodb-enterprise-server`` `images
   <https://quay.io/repository/mongodb/mongodb-enterprise-server?tab=tags&tag=latest>`__. 

.. _limitations-static-containers:

Limitations
~~~~~~~~~~~

If you enable static containers:

- You must :ref:`disable-queryable-backups` so the :ref:`backup-daemon`
  doesn't attempt to download the MongoDB binaries from |onprem|, which
  undermines the immutable nature of static containers.

- With |onprem|, only versions 6.0.24, 7.0.5, or later are compatible.
  The {+k8s-op-short+} automatically uses the correct version of the
  {+mdbagent+} container based on the |onprem| version 
  you select to manage a specific deployment. 

- With |cloud|, your {+mdbagent+} version could fall behind compatibility with the latest 
  version of |cloud| because the {+k8s-op-short+} can't call the ``agentVersion`` endpoint 
  in |cloud|. To ensure your {+mdbagent+} is up to date with |cloud|, you can perform one 
  of the following actions:

  - Specify a :ref:`compatible <mms-changelog>` {+mdbagent+} version in the 
    :ref:`MongoDB resource specification <k8s-specification>` by
    overriding the |k8s-statefulset| container image for the {+mdbagent+}. 
    For example:

    .. code-block:: yaml

       podSpec:
         podTemplate:
           spec:
             containers:
               - name: mongodb-agent-ubi
                 Image: 12.0.29.7785-1_1.24.0

  - :ref:`Upgrade the {+k8s-op-short+} <upgrade-k8s-operator>` to the latest version, 
    which automatically updates the {+mdbagent+}.

- :ref:`Upgrading a MongoDB version <meko-upgrade-mdb-version>` triggers a rolling restart
  of all Pods, in order of last to first, and could cause more :manual:`elections </core/replica-set-elections/#voting-members>`, up to the number of Pods. This is true of
  any updates that trigger a rolling restart. 

- You won't be able to determine whether a MongoDB database upgrade happened from 
  the :ref:`{+mdbagent+}'s status <view-agent-status>`. 
  When |k8s| rotates Pods following an upgrade, the {+mdbagent+} replaces the 
  health status file so you can't tell from the health status that a version change 
  happened, only the current health status.

FAQs  
~~~~

Do static containers support local or remote mode?
``````````````````````````````````````````````````

No, if you use static containers, you don't need to configure |onprem|
to run in :ref:`Local Mode <deploy-om-container-local-mode>` or
:ref:`Remote Mode <deploy-om-container-remote-mode>` unless you use
queryable backups. To learn more, see :ref:`Local and Remote Modes
<local-remote-mode>`. 

What are the changes for static containers?
```````````````````````````````````````````

Static containers don't download the MongoDB binary at runtime.
Instead, it uses the images from the :qr-mdb:`mongodb-enterprise-server
</mongodb-enterprise-server?tab=tags&tag=latest>` Quay.io repository. To
learn more about the changes, see :ref:`step 6 <migrate-to-static-containers>`. 

How can I verify if my deployment is running in static?
```````````````````````````````````````````````````````

There are many ways to determine if your deployment is using static
container. To learn more, see :ref:`step 7
<migrate-to-static-containers>`. 

.. _migrate-to-static-containers:

Migrate to Static Containers
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To migrate from non-static to static containers, set the {+mdbagent+} environment
variables and enable static containers by following the steps below.
You can also enable static containers during 
:ref:`installation <install-k8s>` or :ref:`upgrade <upgrade-k8s-operator>`. 

.. procedure::
   :style: normal

   .. step:: Review the :ref:`limitations <limitations-static-containers>`.

   .. step:: Disable queryable backups.
    
      Follow the procedure in :ref:`disable-queryable-backups`.

      If you want to use :ref:`queryable backups
      <configure-om-queryable-backups>`, you must configure |onprem|
      resource to use :ref:`Local Mode <deploy-om-container-local-mode>`
      or :ref:`Remote Mode <deploy-om-container-remote-mode>` so that
      the binaries for all versions in-use can be pulled from |onprem|.

   .. step:: Remove |k8s-statefulset| overrides for init containers, if any.
    
      There are no init containers used with the static container architecture.
      If an override for an init container is present, the migration from non-static to static containers fails.

      Remove any |k8s-statefulset| overrides for init containers from your 
      :ref:`MongoDB resource specification <k8s-specification>` or 
      :ref:`Ops Manager resource specification <k8s-om-specification>`. 
      For example, ensure none of the following settings have been configured for ``initContainers``:

      -  **Ops Manager:** :opsmgrkube:`spec.statefulSet.spec`
      -  **Application Database**: :opsmgrkube:`spec.applicationDatabase.podSpec <spec.applicationDatabase>`
      -  **Database:** :ref:`statefulset-settings`
      -  **Multi-cluster:** :ref:`spec.statefulSet.spec <multi-spec-statefulset-spec>`

   .. step:: Set environment variables for the {+mdbagent+} image.

      .. tabs::

         .. tab:: kubectl and oc
            :tabid: kubectl

            In your |k8s-op-short| 
            :ref:`configuration file <meko-op-install-settings-kubectl-oc>`, define the :ref:`MDB_AGENT_IMAGE_REPOSITORY <agent-image-repo>` environment variable to 
            specify the repository from which the |k8s-op-short| downloads the {+mdbagent+} 
            image for static containers.

         .. tab:: Helm
            :tabid: helm
            
            In your |k8s-op-short| :ref:`Helm chart <meko-op-install-settings-helm>`,
            define :ref:`agentRepo` and :ref:`agent-name-helm` to specify the repository from which 
            the |k8s-op-short| downloads the {+mdbagent+} image for static containers.

   .. step:: Save and apply the file.

      After saving the changes, reapply your configuration.

      .. tabs::
         :hidden:

         .. tab:: kubectl and oc
            :tabid: kubectl

            If you use |k8s| without OpenShift, run: 

            .. code-block:: sh

               kubectl apply -f mongodb-enterprise.yaml

            If you use |k8s| with OpenShift:

            .. code-block:: sh

               oc apply -f mongodb-enterprise-openshift.yaml

         .. tab:: Helm
            :tabid: helm

            .. code-block:: sh

               helm upgrade enterprise-operator mongodb/enterprise-operator \
                 --set registry.pullPolicy='IfNotPresent'
   
      This initiates a rolling restart of all Pods in your deployment.

   .. step:: Enable static containers. 
    
      Select the appropriate tab below to enable static containers for all your MongoDB 
      deployments at once, including existing deployments, or one deployment at a time.

      .. tabs::

         .. tab:: All Deployments
            :tabid: enable-static-all 
            
            In your |k8s-op-short| :ref:`configuration file <meko-operator-settings>`, 
            set :ref:`MDB_DEFAULT_ARCHITECTURE <mdb-default-architecture>` 
            or :ref:`operator.mdbDefaultArchitecture <mdb-default-architecture-helm>` to ``static``.

         .. tab:: Individual Deployments
            :tabid: enable-static-one

            In the :ref:`MongoDB resource specification <k8s-specification>` for 
            a specific deployment,
            set the :setting:`metadata.annotations.mongodb.com/v1.architecture` 
            annotation to ``static``.

   .. step:: Save and apply the file.

      After saving the changes, reapply your configuration.

      .. tabs::
         :hidden:

         .. tab:: kubectl and oc
            :tabid: kubectl

            If you use |k8s| without OpenShift, run: 

            .. code-block:: sh

               kubectl apply -f <my-config-file>.yaml

            If you use |k8s| with OpenShift:

            .. code-block:: sh

               oc apply -f <my-config-file>.yaml

         .. tab:: Helm
            :tabid: helm

            .. code-block:: sh

               helm upgrade enterprise-operator mongodb/enterprise-operator \
                --set <setting_1> --set <setting_2> --set operator.mdbDefaultArchitecture="static"

      The |k8s-op-short| updates the |k8s-statefulset| images for your MongoDB deployment, 
      transitioning from a single container that previously managed both the {+mdbagent+} 
      and MongoDB database, to a new configuration with two separate containers: one for 
      the {+mdbagent+} and another for the MongoDB database. This update initiates a 
      rolling restart.

      When you migrate to static containers, the following changes apply:
      
      - Kubernetes |k8s-nodes| use their configured container registry
        to perform the downloads. 
      - Monitoring agent and automation agent versions are aligned. 
      - |k8s-op-short|, instead of the agent, handles MongoDB upgrades.  
      - |k8s-op-short| replaces the existing images, which will cause a
        rolling restart. 

   .. step:: Verify that deployment is running in static. 

      - Check the value for one of the following variables, which you
        must've set to ``static``:   

        .. list-table:: 
           :widths: 60 30

           * - ``MDB_DEFAULT_ARCHITECTURE`` 
             - Variable for all deployments. 
           * - ``metadata.annotations[mongodb.com/v1.architecture]`` 
             - Per-deployment variable. 

      - Check the database deployment to verify the usage of two separate
        images, one for the agent and one for MongoDB, and ensure that no
        init containers are deployed.

.. _migrate-to-non-static-containers:

Migrate to Non-Static Containers
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To migrate from static to non-static containers, disable static containers by 
following the steps below.
You can also disable static containers during 
:ref:`installation <install-k8s>` or :ref:`upgrade <upgrade-k8s-operator>`.

.. procedure::
   :style: normal

   .. step:: Disable static containers. 
    
      Select the appropriate tab below to disable static containers for all your MongoDB 
      deployments at once, including existing deployments, or one deployment at a time.

      .. tabs::

         .. tab:: All Deployments
            :tabid: enable-static-all 
            
            In your |k8s-op-short| :ref:`configuration file <meko-operator-settings>`, 
            set :ref:`MDB_DEFAULT_ARCHITECTURE <mdb-default-architecture>` 
            or :ref:`operator.mdbDefaultArchitecture <mdb-default-architecture-helm>` to ``non-static``.

         .. tab:: Individual Deployments
            :tabid: enable-static-one

            In the :ref:`MongoDB resource specification <k8s-specification>` for 
            a specific deployment,
            set the :setting:`metadata.annotations.mongodb.com/v1.architecture` 
            annotation to ``non-static``.

   .. step:: Save and apply the file.

      After saving the changes, reapply your configuration.

      .. tabs::

         .. tab:: kubectl and oc
            :tabid: kubectl

            If you use |k8s| without OpenShift, run: 

            .. code-block:: sh

               kubectl apply -f <my-config-file>.yaml

            If you use |k8s| with OpenShift:

            .. code-block:: sh

               oc apply -f <my-config-file>.yaml

         .. tab:: Helm
            :tabid: helm

            .. code-block:: sh

               helm upgrade enterprise-operator mongodb/enterprise-operator \
                --set <setting_1> --set <setting_2> --set operator.mdbDefaultArchitecture="non-static"
      
      The |k8s-op-short| replaces the |k8s-statefulset| images of your MongoDB 
      deployment and initiates a rolling restart of all Pods in your deployment.
