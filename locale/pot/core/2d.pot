# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/2d.txt:3
# 028019476bdd48cbb0cad79b5db7b6a7
msgid "``2d`` Indexes"
msgstr ""

#: ../source/core/2d.txt:7
# 050eccc9ce384323a602bbffd46a6bf0
msgid "Use a ``2d`` index for data stored as points on a two-dimensional plane. The ``2d`` index is intended for legacy coordinate pairs used in MongoDB 2.2 and earlier."
msgstr ""

#: ../source/core/2d.txt:11
# e7569b13be5b4f86bce4a9a3f48bd307
msgid "Use a ``2d`` index if:"
msgstr ""

#: ../source/core/2d.txt:13
# 7e7d31a392fd42d7868f4d4fbf5105fd
msgid "your database has legacy location data from MongoDB 2.2 or earlier, *and*"
msgstr ""

#: ../source/core/2d.txt:15
# 8e6e092111734b86981fdc4deb602705
msgid "you do not intend to store any location data as :term:`GeoJSON` objects."
msgstr ""

#: ../source/core/2d.txt:17
# 87c6bc1b780048e28fb6710d126324ba
msgid "See the :doc:`/reference/operator/query-geospatial` for the query operators that support geospatial queries."
msgstr ""

#: ../source/core/2d.txt:21
# 94db3acda1044b85bac0bc67eac95fbf
msgid "Considerations"
msgstr ""

#: ../source/includes/fact-limitation-one-geo-index-per-collection.rst:1
# ba8a63a98ac340cdba378a5c79d3715c
msgid "The :dbcommand:`geoNear` command and the :pipeline:`$geoNear` pipeline stage require that a collection have *at most* only one |first-geo-index| and/or only one |second-geo-index| whereas :ref:`geospatial query operators <geospatial-query-selectors>` (e.g. :query:`$near` and :query:`$geoWithin`) permit collections to have multiple geospatial indexes."
msgstr ""

#: ../source/includes/fact-limitation-one-geo-index-per-collection.rst:8
# cb12dda0518346689136755cb498694c
msgid "The geospatial index restriction for the :dbcommand:`geoNear` command and the :pipeline:`$geoNear` pipeline stage exists because neither the :dbcommand:`geoNear` command nor the :pipeline:`$geoNear` pipeline stage syntax includes the location field. As such, index selection among multiple ``2d`` indexes or ``2dsphere`` indexes is ambiguous."
msgstr ""

#: ../source/includes/fact-limitation-one-geo-index-per-collection.rst:14
# d64c64ebbb194ed28a36f5de8e00925f
msgid "No such restriction applies for :ref:`geospatial query operators <geospatial-query-selectors>` since these operators take a location field, eliminating the ambiguity."
msgstr ""

#: ../source/core/2d.txt:27
# c3062bd21f1c4f8489df76e32481bdb0
msgid "Do not use a ``2d`` index if your location data includes GeoJSON objects. To index on both legacy coordinate pairs *and* GeoJSON objects, use a :doc:`2dsphere </core/2dsphere>` index."
msgstr ""

#: ../source/core/2d.txt:31
# 1c4e6f581ed64558b7a239f1f3dd1227
msgid "You cannot use a ``2d`` index as a shard key when sharding a collection. However, you can create and maintain a geospatial index on a sharded collection by using a different field as the shard key."
msgstr ""

#: ../source/core/2d.txt:36
# 201bb4b46aa34907a3405ebcb4d5a225
msgid "Behavior"
msgstr ""

#: ../source/core/2d.txt:38
# 658fa75e142542f7917a4f7da2ec3a24
msgid "The ``2d`` index supports calculations on a flat, Euclidean plane. The ``2d`` index also supports *distance-only* calculations on a sphere, but for *geometric* calculations (e.g. :query:`$geoWithin`) on a sphere, store data as GeoJSON objects and use the ``2dsphere`` index type."
msgstr ""

#: ../source/core/2d.txt:44
# 721a682984124495ad6208a05bfcc8e2
msgid "A ``2d`` index can reference two fields. The first must be the location field. A ``2d`` compound index constructs queries that select first on the location field, and then filters those results by the additional criteria. A compound ``2d`` index can cover queries."
msgstr ""

#: ../source/core/2d.txt:52
# f72191e9f45c4de3abd44fe584e22908
msgid "Points on a 2D Plane"
msgstr ""

#: ../source/core/2d.txt:56
# 19455edd29a74233a29973398d2147ec
msgid "To store location data as legacy coordinate pairs, use an array or an embedded document. When possible, use the array format:"
msgstr ""

#: ../source/core/2d.txt:63
# d1f6d1879a3f4527b65f43eb5bc90e18
msgid "Consider the embedded document form:"
msgstr ""

#: ../source/core/2d.txt:69
# ef65120919984012948f2734b19fa8f7
msgid "Arrays are preferred as certain languages do not guarantee associative map ordering."
msgstr ""

#: ../source/core/2d.txt:72
# 935e368c3107463590302d06de82a7fa
msgid "For all points, if you use longitude and latitude, store coordinates in **longitude, latitude** order."
msgstr ""

#: ../source/core/2d.txt:76
# 9957cfbd0a2e48a0aa0f52dd546fc7b0
msgid "``sparse`` Property"
msgstr ""

#: ../source/core/2d.txt:78
# 5692f44f5db140f9b4f01f3758c84be3
msgid "``2d`` indexes are :doc:`sparse </core/index-sparse>` by default and ignores the :doc:`sparse: true </core/index-sparse>` option. If a document lacks a ``2d`` index field (or the field is ``null`` or an empty array), MongoDB does not add an entry for the document to the ``2d`` index. For inserts, MongoDB inserts the document but does not add to the ``2d`` index."
msgstr ""

#: ../source/core/2d.txt:85
# aff0dce1787c403083879622e1aca2b2
msgid "For a compound index that includes a ``2d`` index key along with keys of other types, only the ``2d`` index field determines whether the index references a document."
msgstr ""

