arg_name: field
description: |
  To create a :term:`capped collection`,
  specify ``true``. If you specify ``true``, you must also set a maximum
  size in the ``size`` field.
interface: method
name: capped
operation: db.createCollection
optional: true
position: 1
type: boolean
---
arg_name: field
description: |
  Specify ``false`` to disable the automatic creation of an index on the
  ``_id`` field.

  .. important::

     For replica sets, all collections must have ``autoIndexId`` set to ``true``.
interface: method
name: autoIndexId
operation: db.createCollection
optional: true
position: 2
type: boolean
---
arg_name: field
description: |
  Specify a maximum size in bytes for a capped collection. Once a
  capped collection reaches its maximum size, MongoDB removes the older
  documents to make space for the new documents. The ``size`` field is
  required for capped collections and ignored for other collections.
interface: method
name: size
operation: db.createCollection
optional: true
position: 3
type: number
---
arg_name: field
description: |
  The maximum number of documents allowed in the capped collection. The
  ``size`` limit takes precedence over this limit. If a capped
  collection reaches the ``size`` limit before it reaches the maximum
  number of documents, MongoDB removes old documents. If you prefer to
  use the ``max`` limit, ensure that the ``size`` limit, which is
  required for a capped collection, is sufficient to contain the
  maximum number of documents.
interface: method
name: max
operation: db.createCollection
optional: true
position: 4
type: number
---
arg_name: field
description: |2
  Available for the MMAPv1 storage engine only.

  .. deprecated:: 3.0

     For the MMAPv1 storage engine, all collections use the :ref:`power
     of 2 sizes allocation <power-of-2-allocation>` unless the
     ``noPadding`` option is ``true``. The ``usePowerOf2Sizes`` option
     does not affect the allocation strategy.

interface: method
name: usePowerOf2Sizes
operation: db.createCollection
optional: true
position: 5
type: boolean
---
arg_name: field
description: |2
  Available for the MMAPv1 storage engine only.

  .. versionadded:: 3.0

     ``noPadding`` flag disables the :ref:`power of 2 sizes allocation
     <power-of-2-allocation>` for the collection. With ``noPadding``
     flag set to true, the allocation strategy does not include
     additional space to accommodate document growth, as such, document
     growth will result in new allocation. Use for collections with
     workloads that are insert-only or in-place updates (such as
     incrementing counters).

     Defaults to ``false``.

  .. warning::

     Do not set ``noPadding`` if the workload includes removes or any
     updates that may cause documents to grow. For more information,
     see :ref:`exact-fit-allocation`.

interface: method
name: noPadding
operation: db.createCollection
optional: true
position: 6
type: boolean
---
arg_name: field
description: |2
  Available for the WiredTiger storage engine only.

  .. versionadded:: 3.0

  Allows users to specify configuration to the storage engine on a
  per-collection basis when creating a collection. The value of the
  ``storageEngine`` option should take the following form:

  .. code-block:: javascript

     { <storage-engine-name>: <options> }

  Storage engine configuration specified when creating collections are
  validated and logged to the :term:`oplog` during replication to
  support replica sets with members that use different storage
  engines.
interface: method
name: storageEngine
operation: db.createCollection
optional: true
position: 7
type: document
---
arg_name: field
description: |
  Allows users to specify :doc:`validation rules or expressions
  </core/document-validation>` for the collection. For more information,
  see :doc:`/core/document-validation`.

  .. versionadded:: 3.2
  
  The ``validator`` option takes a document that specifies the
  validation rules or expressions. You can specify the expressions using
  the same operators as the :ref:`query operators <query-selectors>`
  with the exception of :query:`$geoNear`, :query:`$near`,
  :query:`$nearSphere`, :query:`$text`, and :query:`$where`.

  .. note::

     - Validation occurs during updates and inserts. Existing
       documents do not undergo validation checks until modification.

     - You cannot specify a validator for collections in the ``admin``,
       ``local``, and ``config`` databases.

     - You cannot specify a validator for ``system.*`` collections.

interface: method
name: validator
operation: db.createCollection
optional: true
position: 8
type: document
---
arg_name: field
description: |
   Determines how strictly MongoDB applies the
   validation rules to existing documents during an update.

   .. versionadded:: 3.2

   .. include:: /includes/table/validationLevel-values.rst

interface: method
name: validationLevel
operation: db.createCollection
optional: true
position: 9
type: string
---
arg_name: field
description: |
   Determines whether to ``error`` on invalid documents or just ``warn``
   about the violations but allow invalid documents to be inserted.
   
   .. versionadded:: 3.2

   .. important::

      Validation of documents only applies to those documents as
      determined by the ``validationLevel``.
  
   .. include:: /includes/table/validationAction-values.rst

interface: method
name: validationAction
operation: db.createCollection
optional: true
position: 10
type: string
---
name: indexOptionDefaults
arg_name: field
description: |
  Allows users to specify a default configuration for indexes when
  creating a collection.

  The ``indexOptionDefaults`` option accepts a ``storageEngine``
  document, which should take the following form:

  .. code-block:: javascript

     { <storage-engine-name>: <options> }

  Storage engine configuration specified when creating indexes are
  validated and logged to the :term:`oplog` during replication to
  support replica sets with members that use different storage
  engines.

  .. versionadded:: 3.2

interface: method
operation: db.createCollection
optional: true
position: 11
type: document
...
