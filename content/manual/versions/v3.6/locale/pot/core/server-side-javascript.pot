# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/server-side-javascript.txt:3
msgid "Server-side JavaScript"
msgstr ""

#: ../source/core/server-side-javascript.txt:16
msgid "Overview"
msgstr ""

#: ../source/core/server-side-javascript.txt:18
msgid "MongoDB provides the following commands, methods, and operator that perform server-side execution of JavaScript code:"
msgstr ""

#: ../source/core/server-side-javascript.txt:21
msgid ":dbcommand:`mapReduce` and the corresponding :binary:`~bin.mongo` shell method :method:`db.collection.mapReduce()`. ``mapReduce`` operations *map*, or associate, values to keys, and for keys with multiple values, *reduce* the values for each key to a single object. For more information, see :doc:`/core/map-reduce`."
msgstr ""

#: ../source/core/server-side-javascript.txt:27
msgid ":query:`$where` operator that evaluates a JavaScript expression or a function in order to query for documents."
msgstr ""

#: ../source/core/server-side-javascript.txt:30
msgid "You can also specify a JavaScript file to the :binary:`~bin.mongo` shell to run on the server. For more information, see :ref:`running-js-scripts-in-mongo-on-mongod-host`"
msgstr ""

#: ../source/includes/extracts/admonition-js-prevalence-methods.rst:3
msgid "JavaScript in MongoDB"
msgstr ""

#: ../source/includes/extracts/admonition-js-prevalence-methods.rst:5
msgid "Although these methods use JavaScript, most interactions with MongoDB do not use JavaScript but use an :ecosystem:`idiomatic driver </drivers>` in the language of the interacting application."
msgstr ""

#: ../source/core/server-side-javascript.txt:36
msgid "You can also disable server-side execution of JavaScript. For details, see :ref:`disable-server-side-js`."
msgstr ""

#: ../source/includes/fact-selinux-server-side-js.rst:3
msgid "If you are using SELinux, any MongoDB operation that requires :doc:`server-side JavaScript </core/server-side-javascript>` will result in segfault errors. :ref:`disable-server-side-js` describes how to disable execution of server-side JavaScript."
msgstr ""

#: ../source/core/server-side-javascript.txt:44
msgid "Running ``.js`` files via a ``mongo`` shell Instance on the Server"
msgstr ""

#: ../source/core/server-side-javascript.txt:46
msgid "You can specify a JavaScript (``.js``) file to a :binary:`~bin.mongo` shell instance to execute the file on the server. This is a good technique for performing batch administrative work. When you run :binary:`~bin.mongo` shell on the server, connecting via the localhost interface, the connection is fast with low latency."
msgstr ""

#: ../source/core/server-side-javascript.txt:53
msgid "Concurrency"
msgstr ""

#: ../source/core/server-side-javascript.txt:55
msgid "Refer to the individual method or operator documentation for any concurrency information. See also the :ref:`concurrency table <faq-concurrency-operations-locks>`."
msgstr ""

#: ../source/core/server-side-javascript.txt:62
msgid "Disable Server-Side Execution of JavaScript"
msgstr ""

#: ../source/includes/fact-disable-javascript-with-noscript.rst:1
msgid "You can disable all server-side execution of JavaScript, by passing the :option:`--noscripting <mongod --noscripting>` option on the command line or setting :setting:`security.javascriptEnabled` in a configuration file."
msgstr ""

