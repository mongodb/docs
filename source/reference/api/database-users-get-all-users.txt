======================
Get All Database Users
======================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. include:: /includes/fact-projects-groups-synonyms.rst

.. include:: /includes/api-base-url.rst

.. include:: /includes/api-requirements.rst

Syntax
------

.. code-block:: sh

   GET /api/atlas/v1.0/groups/{GROUP-ID}/databaseUsers

Request Path Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1

   * - Parameter
     - Required/Optional
     - Description

   * - ``GROUP-ID``

     - Required.

     - Unique identifier for the :ref:`project <group-id>`.

Request Query Parameters
~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/no-query-parameters-list.rst

Request Body Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/no-body-parameters.rst

Response Elements
~~~~~~~~~~~~~~~~~

If you set the query element ``envelope`` to ``true``, the response is
wrapped by the ``content`` object.

The HTTP response returns a JSON document that includes the following objects:

``results``
+++++++++++

An array of documents, each representing one MongoDB user.

.. list-table::
   :header-rows: 1
   :widths: 25 75

   * - Name
     - Description

   * - ``databaseName``
     - The user's :ref:`authentication database
       <authentication-database>`. A user must provide both a username
       and authentication database to log into MongoDB. In |service|
       deployments of MongoDB, the authentication database is always
       the ``admin`` database.

   * - ``deleteAfterDate``
     - `ISO-8601 <https://en.wikipedia.org/wiki/ISO_8601>`_-
       formatted date after which |service| deletes the user. This
       field is only present if an expiration date was specified
       when creating the entry.

   * - ``links``
     - One or more :ref:`links <api-linking>` to sub-resources and/or
       related resources.

   * - ``groupId``
     - ID of the |service| project the user belongs to.

   * - ``username``
     - Username for authenticating to MongoDB.

   * - ``roles``
     - .. include:: /includes/fact-database-user-role.rst

   * - ``roles.databaseName``
     - Database on which the user has the specified role. A role on the
       ``admin`` database can include privileges that apply to the
       other databases.

   * - ``roles.collectionName``
     - Collection on which the user has the specified role.

   * - ``roles.roleName``
     - Name of the role. The possible values are:

       - :atlasrole:`atlasAdmin <Atlas admin>`
       - :authrole:`readWriteAnyDatabase`
       - :authrole:`readAnyDatabase`
       - :authrole:`backup`
       - :authrole:`clusterMonitor`
       - :authrole:`dbAdmin`
       - :authrole:`dbAdminAnyDatabase`

       - ``enableSharding``

         This role is specific to MongoDB databases managed by |service|. The role
         allows the user to enable sharding on a database and to shard a collection.

       - :authrole:`read`
       - :authrole:`readWrite`
       - A name of a :ref:`custom MongoDB role <mongodb-roles>`

``links``
+++++++++

An array of documents, representing a :ref:`link <api-linking>` to one or more
sub-resources and/or related resources such as :ref:`list pagination
<api-lists>`. See :ref:`api-linking` for more information.

``totalCount``
++++++++++++++

The total number of items in the result set. This value may be higher than the
number of objects in the ``results`` array if the entire result set is
paginated.

Example Request
---------------

Request
~~~~~~~

.. include:: /includes/extracts/fact-api-requirements-modify.rst

.. class:: copyable-code

.. code-block:: none

   curl -i -u "username:apiKey" --digest "https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794dee37132bb7b/databaseUsers?pretty=true"

Response
~~~~~~~~

.. code-block:: none

   HTTP/1.1 200 OK

   {
     "links" : [ ... ],
     "results" : [
       {
         "databaseName" : "admin",
         "groupId" : "5356823b3794dee37132bb7b",
         "links" : [ ... ],
         "roles" : [ {
           "databaseName" : "staging",
           "roleName" : "readWrite"
         }, {
           "databaseName" : "production",
           "roleName" : "read"
         } ],
         "username" : "susan"
       },
       ...
     ],
     "totalCount" : 4
   }
