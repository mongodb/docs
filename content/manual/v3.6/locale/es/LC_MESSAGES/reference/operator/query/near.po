# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: 2013-12-16 23:07+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/reference/operator/query/near.txt:3
msgid "$near"
msgstr ""

#: ../source/reference/operator/query/near.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/operator/query/near.txt:18
msgid ""
"Specifies a point for which a :term:`geospatial` query returns the "
"documents from nearest to farthest. The :query:`$near` operator can "
"specify either a :term:`GeoJSON` point or legacy coordinate point."
msgstr ""

#: ../source/reference/operator/query/near.txt:22
msgid ":query:`$near` requires a geospatial index:"
msgstr ""

#: ../source/reference/operator/query/near.txt:24
msgid ""
":doc:`2dsphere </core/2dsphere>` index if specifying a :term:`GeoJSON` "
"point,"
msgstr ""

#: ../source/reference/operator/query/near.txt:27
msgid ":doc:`2d </core/2d>` index if specifying a point using legacy coordinates."
msgstr ""

#: ../source/reference/operator/query/near.txt:30
msgid ""
"To specify a :term:`GeoJSON` point, :query:`$near` operator requires a "
":doc:`2dsphere </core/2dsphere>` index and has the following syntax:"
msgstr ""

#: ../source/includes/extracts/geospatial-long-lat-values.rst:1
msgid ""
"If specifying latitude and longitude coordinates, list the **longitude** "
"first and then **latitude**:"
msgstr ""

#: ../source/includes/extracts/geospatial-valid-long-lat-values.rst:1
msgid "Valid longitude values are between ``-180`` and ``180``, both inclusive."
msgstr ""

#: ../source/includes/extracts/geospatial-valid-long-lat-values.rst:4
msgid "Valid latitude values are between ``-90`` and ``90`` (both inclusive)."
msgstr ""

#: ../source/reference/operator/query/near.txt:51
msgid ""
"When specifying a :term:`GeoJSON` point, you can use the *optional* "
":query:`$minDistance` and :query:`$maxDistance` specifications to limit "
"the :query:`$near` results by distance in *meters*:"
msgstr ""

#: ../source/reference/operator/query/near.txt:55
msgid ""
":query:`$minDistance` limits the results to those documents that are *at "
"least* the specified distance from the center point. "
":query:`$minDistance` is only available for use with :doc:`2dsphere "
"</core/2dsphere>` index."
msgstr ""

#: ../source/reference/operator/query/near.txt:62
msgid ""
":query:`$maxDistance` limits the results to those documents that are *at "
"most* the specified distance from the center point."
msgstr ""

#: ../source/reference/operator/query/near.txt:65
msgid ""
"To specify a point using legacy coordinates, :query:`$near` requires a "
":doc:`2d </core/2d>` index and has the following syntax:"
msgstr ""

#: ../source/reference/operator/query/near.txt:75
msgid ""
"When specifying a legacy coordinate, you can use the *optional* "
":query:`$maxDistance` specification to limit the :query:`$near` results "
"by distance in *radians*. :query:`$maxDistance` limits the results to "
"those documents that are *at most* the specified distance from the center"
" point."
msgstr ""

#: ../source/reference/operator/query/near.txt:82
msgid "Behavior"
msgstr ""

#: ../source/reference/operator/query/near.txt:85
msgid "Special Indexes Restriction"
msgstr ""

#: ../source/includes/fact-geo-near-special-indexes.rst:1
msgid ""
"You cannot combine the |geo-operation| operator, which requires a special"
" :ref:`geospatial index <index-feature-geospatial>`, with a query "
"operator or command that requires another special index. For example you "
"cannot combine |geo-operation| with the :query:`$text` query."
msgstr ""

#: ../source/reference/operator/query/near.txt:90
msgid "Sharded Collections Restrictions"
msgstr ""

#: ../source/includes/fact-near-sharded-cluster.rst:1
msgid ""
"For sharded collections, queries using |geo-operation| are not supported."
" You can instead use either the :dbcommand:`geoNear` command or the "
":pipeline:`$geoNear` aggregation stage."
msgstr ""

#: ../source/reference/operator/query/near.txt:95
msgid "Sort Operation"
msgstr ""

#: ../source/includes/fact-geo-near-returns-sorted-results.rst:1
msgid ""
"|geo-operation| sorts documents by distance. If you also include a "
":method:`~cursor.sort()` for the query, :method:`~cursor.sort()` re-"
"orders the matching documents, effectively overriding the sort operation "
"already performed by |geo-operation|. When using :method:`~cursor.sort()`"
" with geospatial queries, consider using :query:`$geoWithin` operator, "
"which does not sort documents, instead of |geo-operation|."
msgstr ""

#: ../source/reference/operator/query/near.txt:101
msgid ":ref:`3.0-geo-near-compatibility`"
msgstr ""

#: ../source/reference/operator/query/near.txt:104
msgid "Examples"
msgstr ""

#: ../source/reference/operator/query/near.txt:107
msgid "Query on GeoJSON Data"
msgstr ""

#: ../source/includes/example-near-minDistance.rst:4
msgid "Consider a collection ``places`` that has a ``2dsphere`` index."
msgstr ""

#: ../source/includes/example-near-minDistance.rst:6
msgid ""
"The following example returns documents that are at least ``1000`` meters"
" from and at most ``5000`` meters from the specified GeoJSON point, "
"sorted from nearest to farthest:"
msgstr ""

#: ../source/reference/operator/query/near.txt:112
msgid "Query on Legacy Coordinates"
msgstr ""

#: ../source/reference/operator/query/near.txt:117
msgid "Consider a collection ``legacy2d`` that has a ``2d`` index."
msgstr ""

#: ../source/reference/operator/query/near.txt:119
msgid ""
"The following example returns documents that are at most ``0.10`` radians"
" from the specified legacy coordinate pair, sorted from nearest to "
"farthest:"
msgstr ""

#~ msgid ""
#~ "Specifies a point for which a "
#~ ":term:`geospatial` query returns the closest"
#~ " documents first. The query sorts the"
#~ " documents from nearest to farthest."
#~ msgstr ""

#~ msgid ""
#~ "The :query:`$near` operator can query "
#~ "for a :term:`GeoJSON` point or for "
#~ "a point defined by legacy coordinate "
#~ "pairs."
#~ msgstr ""

#~ msgid ""
#~ "The optional :query:`$maxDistance` operator "
#~ "limits a :query:`$near` query to return"
#~ " only those documents that fall "
#~ "within a maximum distance of a "
#~ "point. If you query for a GeoJSON"
#~ " point, specify :query:`$maxDistance` in "
#~ "meters. If you query for legacy "
#~ "coordinate pairs, specify :query:`$maxDistance` "
#~ "in radians."
#~ msgstr ""

#~ msgid ""
#~ "The :query:`$near` operator requires a "
#~ "geospatial index: a ``2dsphere`` index "
#~ "for GeoJSON points; a ``2d`` index "
#~ "for legacy coordinate pairs. By default,"
#~ " queries that use a ``2d`` index "
#~ "return a limit of 100 documents; "
#~ "however you may use :method:`~cursor.limit()`"
#~ " to change the number of results."
#~ msgstr ""

#~ msgid ""
#~ "You cannot combine the :query:`$near` "
#~ "operator, which requires a special "
#~ ":ref:`geospatial index <index-feature-"
#~ "geospatial>`, with a query operator or"
#~ " command that uses a different type"
#~ " of special index. For example you"
#~ " cannot combine :query:`$near` with the "
#~ ":dbcommand:`text` command."
#~ msgstr ""

#~ msgid "For queries on GeoJSON data, use the following syntax:"
#~ msgstr ""

#~ msgid ""
#~ "The following example selects the "
#~ "documents with coordinates nearest to "
#~ "``[ 40 , 5 ]`` and limits "
#~ "the maximum distance to 500 meters "
#~ "from the specified GeoJSON point:"
#~ msgstr ""

#~ msgid "For queries on legacy coordinate pairs, use the following syntax:"
#~ msgstr ""

#~ msgid "If you use longitude and latitude, specify **longitude first**."
#~ msgstr ""

#~ msgid ""
#~ "The following example query returns "
#~ "documents with location values that are"
#~ " 10 or fewer units from the "
#~ "point ``[ 40 , 5 ]``."
#~ msgstr ""

#~ msgid ""
#~ "For GeoJSON point object, specify the"
#~ " $maxDistance in meters, not radians."
#~ msgstr ""

#~ msgid ""
#~ "You can further limit the number "
#~ "of results using :method:`cursor.limit()`."
#~ msgstr ""

#~ msgid ""
#~ "Specifying a batch size (i.e. "
#~ ":method:`batchSize() <cursor.batchSize()>`) in "
#~ "conjunction with queries that use the"
#~ " :query:`$near` is not defined. See "
#~ ":issue:`SERVER-5236` for more information."
#~ msgstr ""

# af948a1029d346a5b425322ef323b3f9
#~ msgid "Specify coordinates in this order: **\"longitude, latitude.\"**"
#~ msgstr ""

#~ msgid ""
#~ "If you use longitude and latitude "
#~ "for legacy coordinates, specify the "
#~ "longitude first, then latitude."
#~ msgstr ""

#~ msgid "Considerations"
#~ msgstr ""

#~ msgid ""
#~ ":query:`$near` queries that use a "
#~ ":doc:`2d </core/2d>` index return a "
#~ "limit of 100 documents."
#~ msgstr ""

#~ msgid ""
#~ "You cannot combine the :query:`$near` "
#~ "operator, which requires a special "
#~ ":ref:`geospatial index <index-feature-"
#~ "geospatial>`, with a query operator or"
#~ " command that uses a different type"
#~ " of special index. For example you"
#~ " cannot combine :query:`$near` with the "
#~ ":query:`$text` query."
#~ msgstr ""

#~ msgid ""
#~ "If using a ``2d`` index for "
#~ ":query:`$near`, specifying a batch size "
#~ "(i.e. :method:`~cursor.batchSize()`) in conjunction"
#~ " with :query:`$near` queries that use "
#~ "a :doc:`2d </core/2d>` index is "
#~ "undefined. See :issue:`SERVER-5236` for more"
#~ " information."
#~ msgstr ""

#~ msgid ""
#~ "For sharded collections, queries using "
#~ ":query:`$near` are not supported. You "
#~ "can instead use either the "
#~ ":dbcommand:`geoNear` command or the "
#~ ":pipeline:`$geoNear` aggregation stage."
#~ msgstr ""

#~ msgid ""
#~ "|geo-operation| always returns the "
#~ "documents sorted by distance. Any other"
#~ " sort order requires to sort the "
#~ "documents in memory, which can be "
#~ "inefficient. To return results in a "
#~ "different sort order, use the "
#~ ":operator:`$geoWithin` operator and the "
#~ ":method:`sort()` method."
#~ msgstr ""

#~ msgid "The result set contains at most 100 documents."
#~ msgstr ""

