========
$explain
========

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. EDITS to explain.txt must be carried over to the method
   cursor.explain.txt and vice versa

.. operator:: $explain

   The :operator:`$explain` operator provides information on the query
   plan. It returns a :doc:`document </reference/explain>` that describes
   the process and indexes used to return the query. This may provide
   useful insight when attempting to optimize a query.

   :binary:`~bin.mongo` shell also provides the :method:`explain()
   <cursor.explain()>` method:

   .. code-block:: javascript

      db.collection.find().explain()

   You can also specify the option in either of the following forms:

   .. code-block:: javascript

       db.collection.find()._addSpecial( "$explain", 1 )
       db.collection.find( { $query: {}, $explain: 1 } )

   For details on the output, see :doc:`/reference/explain`.

   :operator:`$explain` runs the actual query to determine the result.
   Although there are some differences between running the query with
   :operator:`$explain` and running without, generally, the performance
   will be similar between the two. So, if the query is slow, the
   :operator:`$explain` operation is also slow.

   Additionally, the :operator:`$explain` operation reevaluates a set
   of candidate query plans, which may cause the :operator:`$explain`
   operation to perform differently than a normal query. As a result,
   these operations generally provide an accurate account of *how*
   MongoDB would perform the query, but do not reflect the length of
   these queries.

   To determine the performance of a particular index, you can use
   :method:`hint() <cursor.hint()>`  and in conjunction with
   :method:`explain() <cursor.explain()>`, as in the following example:

   .. code-block:: javascript

      db.products.find().hint( { type: 1 } ).explain()

   When you run :method:`explain() <cursor.explain()>` with
   :method:`hint() <cursor.hint()>`, the query optimizer does not
   reevaluate the query plans.

   .. note::

      In some situations, the :method:`explain() <cursor.explain()>`
      operation may differ from the actual query plan used by MongoDB
      in a normal query.

      The :method:`explain() <cursor.explain()>` operation evaluates
      the set of query plans and reports on the winning plan for the
      query. In normal operations the query optimizer caches winning
      query plans and uses them for similar related queries in the
      future.  As a result MongoDB may sometimes select query plans
      from the cache that are different from the plan displayed using
      :method:`explain() <cursor.explain()>`.

   .. seealso::

      - :method:`cursor.explain()`

      - :doc:`/applications/optimization` page for information
        regarding optimization strategies.

      - :doc:`/tutorial/manage-the-database-profiler` tutorial for
        information regarding the database profile.

      - :doc:`Current Operation Reporting </reference/current-op>`
