.. _golang-update-one:

=================
Update a Document
=================

You can update a document in a collection by using the ``UpdateOne()``
method.

Example
-------

.. include:: /includes/usage-examples/run-example-tip.rst

The following example performs the following on the ``restaurants``
collection:

- Matches a document with a specific ``_id``
- Creates a new field in the matched document called ``avg_rating`` with a value of 4.4

.. literalinclude:: /includes/usage-examples/code-snippets/updateOne.go
   :start-after: begin updateone
   :end-before: end updateone
   :emphasize-lines: 9
   :language: go
   :dedent:

View a `fully runnable example. <{+example+}/updateOne.go>`__

Expected Result
---------------

After you run the full example, you can find the following updated
document in the ``restaurants`` collection:

.. code-block:: json
   :copyable: false

   // result truncated
   {
      "_id" : ObjectId("5eb3d668b31de5d588f42a7a"),
      ...
      "name" : "Green House Cafe",
      "restaurant_id" : "40372112",
      "avg_rating" : 4.4
   }

For an example on how to find a document, see :ref:`golang-find-one`.

Additional Information
----------------------

To learn more about replacing documents, specifying query filters, and
handling potential errors, see :ref:`golang-change-document`.

To learn more about update operators,
see the :manual:`MongoDB update operator reference documentation
</reference/operator/update/#update-operators>`.

API Documentation
~~~~~~~~~~~~~~~~~

`UpdateOne() <{+api+}/mongo#Collection.UpdateOne>`__
