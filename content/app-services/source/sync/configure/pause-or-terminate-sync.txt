.. meta::
   :robots: nosnippet

.. _pause-or-terminate-sync:
.. _terminating-and-reenabling-sync:

=======================
Pause or Terminate Sync
=======================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

If you want to disable Atlas Device Sync for your app, you can temporarily pause or 
permanently terminate it. You can also re-enable Device Sync after 
disabling it.

You can temporarily :ref:`pause <pause-sync>` Device Sync if 
you need to pause your cluster. With a temporary pause, you can 
:ref:`re-enable <re-enable-realm-sync>` without resetting your 
:ref:`Device Sync configuration <appconfig-sync>` or losing Device Sync 
metadata.

You can permanently :ref:`terminate <terminating-realm-sync>` and 
:ref:`re-enable <re-enable-realm-sync>` Device Sync for troubleshooting or
if you want to change your :ref:`Device Sync configuration <appconfig-sync>`.

Device Sync pauses automatically after {+sync-inactive-app-pause-time+} 
of inactivity.

.. _pause-sync:

Pause Sync
----------

You can pause Device Sync for a period of time without disabling
it entirely. When you pause Device Sync, you stop syncing changes between 
Atlas and your application. 

.. important::

   If you need to pause your cluster, pause Device Sync first. Otherwise, you
   must :ref:`terminate <terminating-realm-sync>` and :ref:`re-enable 
   <re-enable-realm-sync>` Device Sync and perform a client reset.

Pausing Device Sync rejects any incoming client connections. This
means that pausing Device Sync for your App stops syncing changes for
all clients.

.. tabs::

   .. tab:: UI
      :tabid: ui

      .. procedure::

        .. step:: Press the Pause Sync Button

            In the :guilabel:`Device Sync` tab of the App Services UI, press the
            :guilabel:`Pause Sync` button at the top of the screen.
            
            Then, confirm that you want to pause sync. 

   .. tab:: API
      :tabid: api

      You can use the App Services API to programmatically pause 
      Device Sync. 
      
      .. procedure::

         .. step:: Get an Authentication Token

            Every request to the App Services Admin API must include a valid 
            and current authorization token from the MongoDB Cloud API as a 
            bearer token in the ``Authorization`` header.

            For details on how to get an authentication token, refer to
            `Get Authentication Tokens
            <https://www.mongodb.com/docs/atlas/app-services/admin/api/v3/#section/Get-Authentication-Tokens>`__.

         .. step:: Get Group, App, and Service IDs

            - Get the :ref:`Group and App ID <app-metadata>`
              for your app.
            - Get the Service ID for your Sync service. You can programmatically
              get all services using the `adminListServices 
              <https://www.mongodb.com/docs/atlas/app-services/admin/api/v3/#tag/services/operation/adminListServices>`__
              endpoint. 
              
            Alternately, you can extract Group, App, and Service IDs from 
            the URL when you view the UI.

            1. Go to the App Services App where Device Sync is configured.
            #. Select :guilabel:`Linked Data Sources` in the sidebar under 
               :guilabel:`Manage`.
            #. Select the :guilabel:`mongodb-atlas CLUSTER`.
            
            The URL in your browser's toolbar should now resemble:

            ``https://services.cloud.mongodb.com/groups/$GROUP_ID/apps/$APP_ID/services/$SERVICE_ID/config``

         .. step:: Get the Sync Service Configuration

            Send a GET request to the 
            `adminGetServiceConfig 
            <https://www.mongodb.com/docs/atlas/app-services/admin/api/v3/#tag/services/operation/adminGetServiceConfig>`__ 
            endpoint to get the Device Sync service configuration. This returns
            a Service configuration object similar to:

            .. code-block:: json

                {
                  "clusterId": "<MY-CLUSTER-ID>",
                  "clusterName": "Cluster0",
                  "clusterType": "atlas",
                  "flexible_sync": {
                    "state": "enabled",
                    "database_name": "todo",
                    "permissions": {
                      "rules": {},
                      "defaultRoles": []
                    },
                    "client_max_offline_days": 30,
                    "is_recovery_mode_disabled": false
                  },
                  "groupName": "<MY-GROUP-NAME>",
                  "orgName": "<MY-ORG-NAME>",
                  "readPreference": "primary",
                  "wireProtocolEnabled": false
                }

            For details about the Sync configuration returned by this endpoint,
            refer to :ref:`sync-configuration-reference`.

         .. step:: Edit the Sync Service Configuration

            Remove just the ``flexible_sync`` part of the configuration to
            a new JSON object. This configuration contains a ``state`` field 
            that reflects the current state of the Sync protocol for the 
            application. Set this value to ``disabled``. This should
            now resemble a JSON blob similar to:

            .. code-block:: json
               :emphasize-lines: 3

                {
                  "flexible_sync": {
                    "state": "disabled",
                    "database_name": "todo",
                    "permissions": {
                      "rules": {},
                      "defaultRoles": []
                    },
                    "client_max_offline_days": 30,
                    "is_recovery_mode_disabled": false
                  }
                }

         .. step:: Update the Configuration on Atlas

            Send the updated Sync Service configuration as a payload in a 
            PATCH request to the `adminUpdateServiceConfig 
            <https://www.mongodb.com/docs/atlas/app-services/admin/api/v3/#tag/services/operation/adminUpdateServiceConfig>`__ 
            endpoint.

   .. tab:: Realm SDKs
      :tabid: sdk

      To pause Device Sync from the client side, using logic
      that situationally pauses Device Sync during a session, see your
      preferred SDK:

      - :ref:`Pause or resume a Device Sync session - Flutter SDK
        <flutter-pause-resume-sync>`
      - :ref:`Pause or resume a Device Sync session - Kotlin SDK 
        <kotlin-pause-resume-sync>`
      - :ref:`Pause or resume a Device Sync session - Java SDK
        <java-pause-or-resume-a-sync-session>`
      - :ref:`Pause or resume a Device Sync session - .Net SDK
        <dotnet-pause-or-resume-a-sync-session>`
      - :ref:`Pause or resume a Device Sync session - Node SDK
        <node-pause-or-resume-a-sync-session>`
      - :ref:`Pause or resume a Device Sync session - React Native SDK
        <react-native-pause-or-resume-a-sync-session>`
      - :ref:`Pause or resume a Device Sync session - Swift SDK
        <ios-suspend-or-resume-a-sync-session>`

After pausing Device Sync, you can :ref:`re-enable it <re-enable-realm-sync>`. 
Pausing Device Sync maintains the configuration settings and all of the 
Device Sync metadata, which contains the sync history. When you re-enable 
paused Device Sync, your clients can reconnect normally.

.. include:: /includes/warn-cannot-renable-paused-sync.rst

.. _terminating-realm-sync:

Terminate Sync
--------------

If you have :ref:`enabled Device Sync <enable-sync>`, you may have to
terminate and re-enable Device Sync under a few different circumstances:

- An upgrade from a Shared Tier Atlas Cluster to a Shared or Dedicated instance
- A move to an Atlas cluster that is distributed across regions/cloud providers
- An upgrade to NVMe Atlas clusters
- An :manual:`oplog </core/replica-set-oplog/>` rollover
- A paused Device Sync session on a shared tier cluster due to infrequent usage
- Troubleshooting, at the request of MongoDB Support
- Switching between Sync modes. For instance, if you are switching from Partition-Based Sync to Flexible Sync
- Dropping a collection you've used with Sync. For example, if you 
  have a ``Team`` collection that stores and syncs ``Team`` objects, and 
  then you drop that collection, you must terminate and re-enable Sync.

.. include:: /includes/warn-terminate-sync-client-reset.rst

.. tabs::

   .. tab:: UI
      :tabid: ui

      Terminate Device Sync in your App to stop syncing data across
      devices. 

      .. procedure::

         .. step:: Press the Terminate Sync Button

            In the :guilabel:`Sync` tab of the App Services UI, click the red
            :guilabel:`Terminate Sync` button at the top of the screen.

         .. step:: Confirm That You Want to Terminate Sync

            In the modal that appears, type "Terminate Sync" in the text
            entry, and then click the  :guilabel:`Terminate Sync` button.

            If you are using :ref:`UI deployment drafts <deployment-draft>`
            then you must deploy the draft to actually terminate Sync.

            You have now terminated Device Sync.

   .. tab:: API
      :tabid: api

      You can use the App Services API to programmatically terminate 
      Device Sync. 
      
      .. procedure::

         .. step:: Get an Authentication Token

            Every request to the App Services Admin API must include a valid 
            and current authorization token from the MongoDB Cloud API as a 
            bearer token in the ``Authorization`` header.

            For details on how to get an authentication token, refer to
            `Get Authentication Tokens
            <https://www.mongodb.com/docs/atlas/app-services/admin/api/v3/#section/Get-Authentication-Tokens>`__.

         .. step:: Get Group, App, and Service IDs

            - Get the :ref:`Group and App ID <app-metadata>`
              for your app.
            - Get the Service ID for your Sync service. You can programmatically
              get all services using the `adminListServices 
              <https://www.mongodb.com/docs/atlas/app-services/admin/api/v3/#tag/services/operation/adminListServices>`__
              endpoint.

            Alternately, you can extract Group, App, and Service IDs from 
            the URL when you view the UI:

            1. Go to the App Services App where Device Sync is configured.
            #. Select :guilabel:`Linked Data Sources` in the sidebar under 
               :guilabel:`Manage`.
            #. Select the :guilabel:`mongodb-atlas CLUSTER`.
            
            The URL in your browser's toolbar should now resemble:

            ``https://services.cloud.mongodb.com/groups/$GROUP_ID/apps/$APP_ID/services/$SERVICE_ID/config``

         .. step:: Get the Sync Service Configuration

            Send a GET request to the 
            `adminGetServiceConfig 
            <https://www.mongodb.com/docs/atlas/app-services/admin/api/v3/#tag/services/operation/adminGetServiceConfig>`__ 
            endpoint to get the Device Sync service configuration. This returns
            a Service configuration object similar to:

            .. code-block:: json

                {
                  "clusterId": "<MY-CLUSTER-ID>",
                  "clusterName": "Cluster0",
                  "clusterType": "atlas",
                  "flexible_sync": {
                    "state": "enabled",
                    "database_name": "todo",
                    "permissions": {
                      "rules": {},
                      "defaultRoles": []
                    },
                    "client_max_offline_days": 30,
                    "is_recovery_mode_disabled": false
                  },
                  "groupName": "<MY-GROUP-NAME>",
                  "orgName": "<MY-ORG-NAME>",
                  "readPreference": "primary",
                  "wireProtocolEnabled": false
                }

            For details about the Sync configuration returned by this endpoint,
            refer to :ref:`sync-configuration-reference`.

         .. step:: Edit the Sync Service Configuration

            This configuration contains a ``state`` field that reflects the current
            state of the Sync protocol for the application. Set this value to 
            an empty string ``""``. This should now resemble a JSON blob 
            similar to:

            .. code-block:: json
               :emphasize-lines: 3

                {
                  "flexible_sync": {
                    "state": "",
                    "database_name": "todo",
                    "permissions": {
                      "rules": {},
                      "defaultRoles": []
                    },
                    "client_max_offline_days": 30,
                    "is_recovery_mode_disabled": false
                  }
                }

         .. step:: Update the Configuration on Atlas

            Send the updated Sync Service configuration as a payload in a 
            PATCH request to the `adminUpdateServiceConfig 
            <https://www.mongodb.com/docs/atlas/app-services/admin/api/v3/#tag/services/operation/adminUpdateServiceConfig>`__ 
            endpoint.

After terminating Device Sync, you can :ref:`re-enable it <re-enable-realm-sync>`. 
Terminating Device Sync destroys the configuration settings and all of the 
Device Sync metadata, which contains the sync history. Re-enabling Sync
requires you to complete the Sync configuration steps again. Clients that 
have previously connected cannot reconnect until they perform a client 
reset.

.. _re-enable-realm-sync:
.. _resume-sync:

Re-Enable Sync
--------------

After you have paused or terminated Device Sync, you can re-enable it. 
Re-enabling Device Sync enables your App to begin syncing changes to Atlas 
again. After you re-enable Device Sync, your App begins accepting incoming
client connections again.

.. tabs::

   .. tab:: UI
      :tabid: ui

      When you pause Device Sync, App Services preserves your configuration
      settings, and you can skip the **Configure Sync** step. 
      When you terminate Device Sync, or when the :manual:`oplog 
      </core/replica-set-oplog/>` rolls past the time that you paused Device Sync, 
      you must specify the configuration settings again.

      To re-enable Device Sync, follow the steps in the :ref:`enable-sync` guide.

   .. tab:: API
      :tabid: api

      You can use the App Services API to programmatically re-enable 
      Device Sync. This procedure assumes you already have a Sync
      configuration for your cluster that you can use to re-enable Sync
      with the same settings.
      
      .. procedure::

         .. step:: Get an Authentication Token

            Every request to the App Services Admin API must include a valid 
            and current authorization token from the MongoDB Cloud API as a 
            bearer token in the ``Authorization`` header.

            For details on how to get an authentication token, refer to
            `Get Authentication Tokens
            <https://www.mongodb.com/docs/atlas/app-services/admin/api/v3/#section/Get-Authentication-Tokens>`__.

         .. step:: Get Group and App IDs

            Get the :ref:`Group and App ID <app-metadata>`
            for your app.

         .. step:: Edit the Sync Service Configuration

            This configuration contains a ``state`` field that reflects the current
            state of the Sync protocol for the application. Set this value to 
            ``enabled``. This should now resemble a JSON blob similar to:

            .. code-block:: json
               :emphasize-lines: 3

                {
                  "flexible_sync": {
                    "state": "enabled",
                    "database_name": "todo",
                    "permissions": {
                      "rules": {},
                      "defaultRoles": []
                    },
                    "client_max_offline_days": 30,
                    "is_recovery_mode_disabled": false
                  }
                }

         .. step:: Update the Configuration on Atlas

            Send the updated Sync Service configuration as a payload in a 
            PATCH request to the `adminUpdateServiceConfig 
            <https://www.mongodb.com/docs/atlas/app-services/admin/api/v3/#tag/services/operation/adminUpdateServiceConfig>`__ 
            endpoint.

Connect from the Client
~~~~~~~~~~~~~~~~~~~~~~~

Re-enabling Sync enables incoming client connections. However, under some
circumstances, your client app code may need to perform a 
:ref:`client reset <client-resets>` before clients can Sync again.

Your code must handle a client reset when a client has previously 
connected with Device Sync, and you terminate Device Sync. Terminating 
Device Sync for your App erases Device Sync metadata that the client
needs to reconnect.

This also applies to apps where Device Sync is paused longer than the 
:manual:`oplog </core/replica-set-oplog/>` you keep for your cluster. 
For example, if you only keep 12 hours of oplog for your cluster, and you 
pause Device Sync for longer than 12 hours, you must terminate and 
re-enable Device Sync.

For information on how to perform a client reset in the client, refer to
the SDK documentation:

- :ref:`Perform a client reset - Flutter SDK <flutter-client-reset>`
- :ref:`Perform a client reset - Java SDK <java-client-resets>`
- :ref:`Perform a client reset - Kotlin SDK <kotlin-client-reset>`
- :ref:`Perform a client reset - .NET SDK <dotnet-client-resets>`
- :ref:`Perform a client reset - Node SDK <node-client-resets>`
- :ref:`Perform a client reset - React Native SDK <react-native-client-resets>`
- :ref:`Perform a client reset - Swift SDK <ios-client-resets>`
