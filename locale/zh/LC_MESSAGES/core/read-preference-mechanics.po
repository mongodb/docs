#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/read-preference-mechanics.txt:6
msgid "Read Preference Processes"
msgstr "复制集读选项的生效流程"

#: ../source/core/read-preference-mechanics.txt:16
msgid ""
"MongoDB drivers use the following procedures to direct operations to replica "
"sets and sharded clusters. To determine how to route their operations, "
"applications periodically update their view of the replica set's state, "
"identifying which members are up or down, which member is :term:`primary`, "
"and verifying the latency to each :program:`mongod` instance."
msgstr ""
"MongoDB驱动通过下列的流程来管理复制集和分片集群中的操作。为了决定如何路由它的"
"操作，应用程序定期的获取复制集的状态视图，包括：节点是否活着，哪个节点是 :"
"term:`主节点 <primary>` ，检查每个 :program:`mongod` 实例的延时情况。"

#: ../source/core/read-preference-mechanics.txt:31
msgid "Member Selection"
msgstr "节点的选择"

#: ../source/core/read-preference-mechanics.txt:33
msgid ""
"Clients, by way of their drivers, and :program:`mongos` instances for "
"sharded clusters, periodically update their view of the replica set's state."
msgstr ""
"客户端经由他们的驱动或是分片集群中得 :program:`mongos` 实例来定期的获取复制集"
"的状态视图。"

#: ../source/core/read-preference-mechanics.txt:36
msgid ""
"When you select non-:readmode:`primary` read preference, the driver will "
"determine which member to target using the following process:"
msgstr ""
"当我们选择 non-:readmode:`primary` 模式的复制集读选项的时候，驱动将通过下列过"
"流程决定将操作的发送目标："

#: ../source/core/read-preference-mechanics.txt:39
msgid ""
"Assembles a list of suitable members, taking into account member type (i.e. "
"secondary, primary, or all members)."
msgstr ""
"收集可用的节点的名单，并按节点类型分类（如 从节点，主节点或是所有节点）。"

#: ../source/core/read-preference-mechanics.txt:42
msgid "Excludes members not matching the tag sets, if specified."
msgstr "如果制定了标签，则排除不符合标签的节点。"

#: ../source/core/read-preference-mechanics.txt:44
msgid ""
"Determines which suitable member is the closest to the client in absolute "
"terms."
msgstr "判断出最近的（绝对路径）可用的节点。"

#: ../source/core/read-preference-mechanics.txt:47
msgid ""
"Builds a list of members that are within a defined ping distance (in "
"milliseconds) of the \"absolute nearest\" member."
msgstr "将这些节点和其与网络延时列出。"

#: ../source/core/read-preference-mechanics.txt:51
msgid ""
"Applications can configure the threshold used in this stage. The default "
"\"acceptable latency\" is 15 milliseconds, which you can override in the "
"drivers with their own ``secondaryAcceptableLatencyMS`` option. For "
":program:`mongos` you can use the :option:`--localThreshold <mongos "
"--localThreshold>` or :setting:`~replication.localPingThresholdMs` runtime "
"options to set this value."
msgstr ""

#: ../source/core/read-preference-mechanics.txt:58
msgid ""
"Selects a member from these hosts at random. The member receives the read "
"operation."
msgstr "在这些节点中随机选取一个，并在其上进行读操作。"

#: ../source/core/read-preference-mechanics.txt:61
msgid ""
"Drivers can then associate the thread or connection with the selected "
"member. This :ref:`request association <replica-set-read-preference-behavior-"
"requests>` is configurable by the application. See your :doc:`driver </"
"applications/drivers>` documentation about request association configuration "
"and default behavior."
msgstr ""
"接下来驱动就会与其建立连接。应用程序可以设置 :ref:`请求绑定 <replica-set-"
"read-preference-behavior-requests>` 。参考你所用的 :doc:`驱动 </applications/"
"drivers>` 的文档来获得更多有关请求绑定的配置和默认状态。"

#: ../source/core/read-preference-mechanics.txt:71
msgid "Request Association"
msgstr "请求绑定"

#: ../source/core/read-preference-mechanics.txt:73
msgid ""
"*Request association* is configurable by the application. See your :doc:"
"`driver </applications/drivers>` documentation about request association "
"configuration and default behavior."
msgstr ""
" *请求绑定* 是可由应用程序配置的。参考你所用的 :doc:`驱动 </applications/"
"drivers>` 的文档来获得更多有关请求绑定的配置和默认状态。"

#: ../source/core/read-preference-mechanics.txt:78
msgid ""
"Because :term:`secondary` members of a :term:`replica set` may lag behind "
"the current :term:`primary` by different amounts, reads for :term:"
"`secondary` members may reflect data at different points in time. To prevent "
"sequential reads from jumping around in time, the driver **can** associate "
"application threads to a specific member of the set after the first read, "
"thereby preventing reads from other members. The thread will continue to "
"read from the same member until:"
msgstr ""
"由于 :term:`复制集 <replica set>` 中不同 :term:`从节点 <secondary>` 的数据可"
"能会比  :term:`主节点 <primary>`  有不同程度的延后，且读请求每次可能会被发送"
"在不同的 :term:`从节点 <secondary>` 上。为了防止读操作先后在不同从节点上进行"
"读取，我们可以通过驱动来在第一次读操作之后将该线程与该节点进行绑定，从而让此"
"后的读请求都发送到该节点上。该线程将会一直在这个节点上进行读操作直到："

#: ../source/core/read-preference-mechanics.txt:86
msgid "The application performs a read with a different read preference,"
msgstr "应用程序用不同的复制集读选项执行了一次读操作，"

#: ../source/core/read-preference-mechanics.txt:88
msgid "The thread terminates, or"
msgstr "该线程终止了，或者"

#: ../source/core/read-preference-mechanics.txt:90
msgid ""
"The client receives a socket exception, as is the case when there's a "
"network error or when the :program:`mongod` closes connections during a :"
"term:`failover`.  This triggers a :ref:`retry <replica-set-read-preference-"
"behavior-retry>`, which may be transparent to the application."
msgstr ""
"客户端接收到socket异常，比如：有网络错误或是 :program:`mongod` 进程在一次 :"
"term:`故障切换 <failover>` 中关闭了连接。这将触发 :ref:`retry <replica-set-"
"read-preference-behavior-retry>` ,对于应用程序来说这个过程是透明的"
"（transparent）。"

#: ../source/core/read-preference-mechanics.txt:96
msgid ""
"When using request association, if the client detects that the set has "
"elected a new :term:`primary`, the driver will discard all associations "
"between threads and members."
msgstr ""
"当使用请求绑定的时候，如果客户端发现复制集选举出了新的 :term:`主节点 "
"<primary>` ，那么驱动会解除所有线程与节点之间的关联。"

#: ../source/core/read-preference-mechanics.txt:103
msgid "Auto-Retry"
msgstr "自动重连"

#: ../source/core/read-preference-mechanics.txt:105
msgid ""
"Connections between MongoDB drivers and :program:`mongod` instances in a :"
"term:`replica set` must balance two concerns:"
msgstr ""
"MongoDB驱动与 :term:`复制集 <replica set>` 中得 :program:`mongod` 实例之间的"
"连接需要考虑以下两个平衡点："

#: ../source/core/read-preference-mechanics.txt:108
msgid ""
"The client should attempt to prefer current results, and any connection "
"should read from the same member of the replica set as much as possible. "
"Requests should prefer :ref:`request association <replica-set-read-"
"preference-behavior-requests>` (e.g. *pinning*)."
msgstr ""

#: ../source/core/read-preference-mechanics.txt:113
msgid ""
"The client should minimize the amount of time that the database is "
"inaccessible as the result of a connection issue, networking problem, or :"
"term:`failover` in a replica set."
msgstr ""
"客户端需要尽量减少因为连接、网络问题或是复制集的 :term:`故障切换 <failover>` "
"导致的无法连接数据库的时间。 "

#: ../source/core/read-preference-mechanics.txt:117
msgid "As a result, MongoDB drivers:"
msgstr ""

#: ../source/core/read-preference-mechanics.txt:119
msgid ""
"Reuse a connection to a specific :program:`mongod` for as long as possible "
"after establishing a connection to that instance. This connection is "
"*pinned* to this :program:`mongod`."
msgstr ""

#: ../source/core/read-preference-mechanics.txt:123
msgid ""
"Attempt to reconnect to a new member, obeying existing :ref:`read preference "
"modes <replica-set-read-preference-modes>`, if the connection to :program:"
"`mongod` is lost."
msgstr ""
"如果 :program:`mongod` 上的连接丢失了，应用程序会尝试重连到一个符合现有 :ref:"
"`复制集读选项 <replica-set-read-preference-modes>` 的新节点上。"

#: ../source/core/read-preference-mechanics.txt:127
msgid ""
"Reconnections are transparent to the application itself. If the connection "
"permits reads from :term:`secondary` members, after reconnecting, the "
"application can receive two sequential reads returning from different "
"secondaries. Depending on the state of the individual secondary member's "
"replication, the documents can reflect the state of your database at "
"different moments."
msgstr "对于应用程序本身来说，重连是透明的（transparent）。"

#: ../source/core/read-preference-mechanics.txt:134
msgid ""
"Return an error *only* after attempting to connect to three members of the "
"set that match the :ref:`read preference mode <replica-set-read-preference-"
"modes>` and :ref:`tag set <replica-set-read-preference-tag-sets>`.  If there "
"are fewer than three members of the set, the client will error after "
"connecting to all existing members of the set."
msgstr ""
" *只有* 在试图连接到符合 :ref:`复制集读选项 <replica-set-read-preference-"
"modes>`  与  :ref:`标签设定 <replica-set-read-preference-tag-sets>` 的拥有三"
"个成员的复制集的时候才会报错（Return an error *only* after attempting to "
"connect to three members of the set that match the :ref:`read preference "
"mode <replica-set-read-preference-modes>` and :ref:`tag set <replica-set-"
"read-preference-tag-sets>`.  ）。如果复制集中只有不到3个节点的时候，客户端将"
"会在连接所有现有的节点后报错。"

#: ../source/core/read-preference-mechanics.txt:141
msgid ""
"After this error, the driver selects a new member using the specified read "
"preference mode. In the absence of a specified read preference, the driver "
"uses :readmode:`primary`."
msgstr ""
"在报错后，驱动会根据指定的复制集读选项重新选择一个节点来连接。在没有指定复制"
"集读选项的时候，驱动会使用 :readmode:`primary` 模式。"

#: ../source/core/read-preference-mechanics.txt:145
msgid ""
"After detecting a failover situation, [#fn-failover]_ the driver attempts to "
"refresh the state of the replica set as quickly as possible."
msgstr ""
"在检测到发生了故障切换后， [#fn-failover]_  驱动会尽快刷新来获得最新的复制集"
"状态。"

#: ../source/core/read-preference-mechanics.txt:149
msgid ""
":program:`mongos` instances take a slightly different approach. "
":program:`mongos` instances return connections to secondaries to the "
"connection pool after every request. As a result, the :program:`mongos` "
"reevaluates read preference for every operation."
msgstr ""

#: ../source/core/read-preference-mechanics.txt:156
msgid ""
"When a :term:`failover` occurs, all members of the set close all client "
"connections that produce a socket error in the driver. This behavior "
"prevents or minimizes :term:`rollback`."
msgstr ""
"当发生了 :term:`故障切换<failover>` ，复制集的所有节点都会关闭所有现有连接并"
"返回一个报错。这样可以防止或者最小化 :term:`回滚 <rollback>` 的影响。 "

#: ../source/core/read-preference-mechanics.txt:166
msgid "Read Preference in Sharded Clusters"
msgstr "分片集群中的复制集读选项。"



#: ../source/core/read-preference-mechanics.txt:168
msgid ""
"In most :term:`sharded clusters <sharded cluster>`, each shard consists of "
"a :term:`replica set`. As such, read preferences are also applicable. With "
"regard to read preference, read operations in a sharded cluster are "
"identical to unsharded replica sets."
msgstr ""
"在大多数 :term:`分片集群 <sharded cluster>` 中，每个分片是由一个 :term:`复制"
"集 <replica set>` 构成的。 因此，复制集读选项对其也适用。就复制集读选项来说，"
"在分片集群中得复制集进行读操作与在单独的复制集上进行操作没有区别。"

#: ../source/core/read-preference-mechanics.txt:173
msgid ""
"Unlike simple replica sets, in sharded clusters, all interactions with the "
"shards pass from the clients to the :program:`mongos` instances that are "
"actually connected to the set members. :program:`mongos` is then responsible "
"for the application of read preferences, which is transparent to "
"applications."
msgstr ""
"与普通复制集不同的是，在分片集群中，所有分片之间的交互是通过客户端连接到 :"
"program:`mongos` 实例后再连接到各个复制集的。 :program:`mongos` 实例负责处理"
"应用程序传来的复制集读选项，且对应用程序来说是透明的（transparent）。"

#: ../source/core/read-preference-mechanics.txt:179
msgid ""
"There are no configuration changes required for full support of read "
"preference modes in sharded environments, as long as the :program:`mongos` "
"is at least version 2.2. All :program:`mongos` maintain their own connection "
"pool to the replica set members. As a result:"
msgstr ""
"在2.2版本后的分片集群架构中，复制集读选项的配置与复制集中完全一致。 所有的 :"
"program:`mongos` 实例都维护着连接到复制集的连接池，例如："

#: ../source/core/read-preference-mechanics.txt:185
msgid ""
"A request without a specified preference has :readmode:`primary`, the "
"default, unless, the :program:`mongos` reuses an existing connection that "
"has a different mode set."
msgstr ""
"没有指定复制集读选项的请求默认使用 :readmode:`primary` 模式，除非 :program:"
"`mongos` "

#: ../source/core/read-preference-mechanics.txt:189
msgid "To prevent confusion, always explicitly set your read preference mode."
msgstr "为了防止混淆，我们建议是要设置复制集读选项。"

#: ../source/core/read-preference-mechanics.txt:191
msgid ""
"All :readmode:`nearest` and latency calculations reflect the connection "
"between the :program:`mongos` and the :program:`mongod` instances, not the "
"client and the :program:`mongod` instances."
msgstr ""
" :readmode:`nearest` 状态和延时状态都影响着 :program:`mongos` 实例与  :"
"program:`mongod` 实例之间的链接，而不是客户端与 :program:`mongod` 实例之间的"
"链接。"

#: ../source/core/read-preference-mechanics.txt:195
msgid ""
"This produces the desired result, because all results must pass through the :"
"program:`mongos` before returning to the client."
msgstr ""
"这是显而易见的，因为所有的数据都必须通过 :program:`mongos` 实例传输到客户端"
"中。"

#: ../source/core/read-preference-mechanics.txt:1
#: ../source/core/read-preference-mechanics.txt:23
#: ../source/core/read-preference-mechanics.txt:24
#: ../source/core/read-preference-mechanics.txt:25
#: ../source/core/read-preference-mechanics.txt:160
#: ../source/core/read-preference-mechanics.txt:161
msgid "read preference"
msgstr "复制集读选项"

#: ../source/core/read-preference-mechanics.txt:1
msgid "behavior"
msgstr "状态"

#: ../source/core/read-preference-mechanics.txt:23
msgid "ping time"
msgstr "ping time"

#: ../source/core/read-preference-mechanics.txt:24
msgid "nearest"
msgstr "M"

#: ../source/core/read-preference-mechanics.txt:25
msgid "member selection"
msgstr "节点的选择"

#: ../source/core/read-preference-mechanics.txt:160
msgid "sharding"
msgstr "分片"

#: ../source/core/read-preference-mechanics.txt:161
msgid "mongos"
msgstr ""

#: ../source/core/read-preference-mechanics.txt:0
msgid "On this page"
msgstr ""

#~ msgid ""
#~ "Before version 2.2, :program:`mongos` did not support the :ref:`read "
#~ "preference mode semantics <replica-set-read-preference-modes>`."
#~ msgstr ""
