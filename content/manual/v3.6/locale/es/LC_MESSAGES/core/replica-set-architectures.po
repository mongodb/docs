# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: 2014-04-08 19:30+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/core/replica-set-architectures.txt:6
msgid "Replica Set Deployment Architectures"
msgstr ""

#: ../source/core/replica-set-architectures.txt:16
msgid ""
"The architecture of a :term:`replica set <replica set>` affects the set's"
" capacity and capability. This document provides strategies for replica "
"set deployments and describes common architectures."
msgstr ""

#: ../source/core/replica-set-architectures.txt:20
msgid ""
"The standard replica set deployment for production system is a three-"
"member replica set. These sets provide redundancy and fault tolerance. "
"Avoid complexity when possible, but let your application requirements "
"dictate the architecture."
msgstr ""

#: ../source/core/replica-set-architectures.txt:26
msgid "Strategies"
msgstr ""

#: ../source/core/replica-set-architectures.txt:29
msgid "Determine the Number of Members"
msgstr ""

#: ../source/core/replica-set-architectures.txt:31
msgid "Add members in a replica set according to these strategies."
msgstr ""

#: ../source/core/replica-set-architectures.txt:34
msgid "Maximum Number of Voting Members"
msgstr ""

#: ../source/core/replica-set-architectures.txt:36
msgid ""
"A replica set can have up to :limit:`50 members <Number of Members of a "
"Replica Set>`, but only :limit:`7 voting members <Number of Voting "
"Members of a Replica Set>`. [#master-slave]_ If the replica set already "
"has 7 voting members, additional members must be :ref:`non-voting members"
" <replica-set-non-voting-members>`."
msgstr ""

#: ../source/core/replica-set-architectures.txt:44
msgid "Deploy an Odd Number of Members"
msgstr ""

#: ../source/core/replica-set-architectures.txt:46
msgid ""
"Ensure that the replica set has an odd number of voting members. If you "
"have an *even* number of voting members, deploy an :ref:`arbiter "
"<replica-set-arbiters>` so that the set has an odd number of voting "
"members."
msgstr ""

#: ../source/core/replica-set-architectures.txt:51
msgid ""
"An :term:`arbiter <arbiter>` does not store a copy of the data and "
"requires fewer resources. As a result, you may run an arbiter on an "
"application server or other shared process. With no copy of the data, it "
"may be possible to place an arbiter into environments that you would not "
"place other members of the replica set. Consult your security policies."
msgstr ""

#: ../source/includes/extracts/arbiters-and-pvs-with-reference.rst:2
msgid ""
"For the following MongoDB versions, ``pv1`` increases the likelihood of "
":writeconcern:`w:1 <\\<number\\>>` rollbacks compared to ``pv0`` for "
"replica sets with arbiters:"
msgstr ""

#: ../source/includes/extracts/arbiters-and-pvs-with-reference.rst:6
msgid "MongoDB 3.4.1"
msgstr ""

#: ../source/includes/extracts/arbiters-and-pvs-with-reference.rst:8
msgid "MongoDB 3.4.0"
msgstr ""

#: ../source/includes/extracts/arbiters-and-pvs-with-reference.rst:10
msgid "MongoDB 3.2.11 or earlier"
msgstr ""

#: ../source/includes/extracts/arbiters-and-pvs-with-reference.rst:12
msgid "See :doc:`/reference/replica-set-protocol-versions`."
msgstr ""

#: ../source/includes/admonition-multiple-arbiters.rst:3
msgid "In general, avoid deploying more than one arbiter per replica set."
msgstr ""

#: ../source/core/replica-set-architectures.txt:65
msgid "Consider Fault Tolerance"
msgstr ""

#: ../source/core/replica-set-architectures.txt:67
msgid ""
"*Fault tolerance* for a replica set is the number of members that can "
"become unavailable and still leave enough members in the set to elect a "
"primary. In other words, it is the difference between the number of "
"members in the set and the majority of voting members needed to elect a "
"primary. Without a primary, a replica set cannot accept write operations."
" Fault tolerance is an effect of replica set size, but the relationship "
"is not direct. See the following table:"
msgstr ""

#: ../source/core/replica-set-architectures.txt:79
msgid "Number of Members"
msgstr ""

#: ../source/core/replica-set-architectures.txt:81
msgid "Majority Required to Elect a New Primary"
msgstr ""

#: ../source/core/replica-set-architectures.txt:83
msgid "Fault Tolerance"
msgstr ""

#: ../source/core/replica-set-architectures.txt:85
#: ../source/core/replica-set-architectures.txt:93
#: ../source/core/replica-set-architectures.txt:99
msgid "3"
msgstr ""

#: ../source/core/replica-set-architectures.txt:87
#: ../source/core/replica-set-architectures.txt:101
#: ../source/core/replica-set-architectures.txt:107
msgid "2"
msgstr ""

#: ../source/core/replica-set-architectures.txt:89
#: ../source/core/replica-set-architectures.txt:95
msgid "1"
msgstr ""

#: ../source/core/replica-set-architectures.txt:91
#: ../source/core/replica-set-architectures.txt:105
msgid "4"
msgstr ""

#: ../source/core/replica-set-architectures.txt:97
msgid "5"
msgstr ""

#: ../source/core/replica-set-architectures.txt:103
msgid "6"
msgstr ""

#: ../source/core/replica-set-architectures.txt:109
msgid ""
"Adding a member to the replica set does not *always* increase the fault "
"tolerance. However, in these cases, additional members can provide "
"support for dedicated functions, such as backups or reporting."
msgstr ""

#: ../source/core/replica-set-architectures.txt:114
msgid "Use Hidden and Delayed Members for Dedicated Functions"
msgstr ""

#: ../source/core/replica-set-architectures.txt:116
msgid ""
"Add :ref:`hidden <replica-set-hidden-members>` or :ref:`delayed <replica-"
"set-delayed-members>` members to support dedicated functions, such as "
"backup or reporting."
msgstr ""

#: ../source/core/replica-set-architectures.txt:121
msgid "Load Balance on Read-Heavy Deployments"
msgstr ""

#: ../source/core/replica-set-architectures.txt:123
msgid ""
"In a deployment with *very* high read traffic, you can improve read "
"throughput by distributing reads to secondary members. As your deployment"
" grows, add or move members to alternate data centers to improve "
"redundancy and availability."
msgstr ""

#: ../source/includes/note-csrs-distribution.rst:3
msgid ""
"Distributing replica set members across two data centers provides benefit"
" over a single data center. In a two data center distribution,"
msgstr ""

#: ../source/includes/note-csrs-distribution.rst:7
msgid ""
"If one of the data centers goes down, the data is still available for "
"reads unlike a single data center distribution."
msgstr ""

#: ../source/includes/note-csrs-distribution.rst:10
msgid ""
"If the data center with a minority of the members goes down, the replica "
"set can still serve write operations as well as read operations."
msgstr ""

#: ../source/includes/note-csrs-distribution.rst:14
msgid ""
"However, if the data center with the majority of the members goes down, "
"the replica set becomes read-only."
msgstr ""

#: ../source/includes/note-csrs-distribution.rst:17
msgid ""
"If possible, distribute members across at least three data centers. For "
"config server replica sets (CSRS), the best practice is to distribute "
"across three (or more depending on the number of members) centers. If the"
" cost of the third data center is prohibitive, one distribution "
"possibility is to evenly distribute the data bearing members across the "
"two data centers and store the remaining member (either a data bearing "
"member or an arbiter to ensure odd number of members) in the cloud if "
"your company policy allows."
msgstr ""

#: ../source/core/replica-set-architectures.txt:130
msgid "Always ensure that the main facility is able to elect a primary."
msgstr ""

#: ../source/core/replica-set-architectures.txt:133
msgid "Add Capacity Ahead of Demand"
msgstr ""

#: ../source/core/replica-set-architectures.txt:135
msgid ""
"The existing members of a replica set must have spare capacity to support"
" adding a new member. Always add new members before the current demand "
"saturates the capacity of the set."
msgstr ""

#: ../source/core/replica-set-architectures.txt:142
msgid "Distribute Members Geographically"
msgstr ""

#: ../source/core/replica-set-architectures.txt:144
msgid ""
"To protect your data in case of a data center failure, keep at least one "
"member in an alternate data center. If possible, use an odd number of "
"data centers, and choose a distribution of members that maximizes the "
"likelihood that even with a loss of a data center, the remaining replica "
"set members can form a majority or at minimum, provide a copy of your "
"data."
msgstr ""

#: ../source/core/replica-set-architectures.txt:154
msgid ""
"To ensure that the members in your main data center be elected primary "
"before the members in the alternate data center, set the "
":rsconf:`members[n].priority` of the members in the alternate data center"
" to be lower than that of the members in the primary data center."
msgstr ""

#: ../source/core/replica-set-architectures.txt:159
msgid ""
"For more information, see :doc:`/core/replica-set-architecture-"
"geographically-distributed`"
msgstr ""

#: ../source/core/replica-set-architectures.txt:163
msgid "Target Operations with Tag Sets"
msgstr ""

#: ../source/core/replica-set-architectures.txt:165
msgid ""
"Use :ref:`replica set tag sets <replica-set-configuration-tag-sets>` to "
"target read operations to specific members or to customize write concern "
"to request acknowledgement from specific members."
msgstr ""

#: ../source/core/replica-set-architectures.txt:169
msgid ":doc:`/data-center-awareness` and :doc:`/core/workload-isolation`."
msgstr ""

#: ../source/core/replica-set-architectures.txt:173
msgid "Use Journaling to Protect Against Power Failures"
msgstr ""

#: ../source/core/replica-set-architectures.txt:175
msgid ""
"MongoDB enables :doc:`journaling </core/journaling>` by default. "
"Journaling protects against data loss in the event of service "
"interruptions, such as power failures and unexpected reboots."
msgstr ""

#: ../source/core/replica-set-architectures.txt:180
msgid "Replica Set Naming"
msgstr ""

#: ../source/includes/fact-unique-replica-set-names.rst:1
msgid ""
"If your application connects to more than one replica set, each set "
"should have a distinct name. Some drivers group replica set connections "
"by replica set name."
msgstr ""

#: ../source/core/replica-set-architectures.txt:185
msgid "Deployment Patterns"
msgstr ""

#: ../source/core/replica-set-architectures.txt:187
msgid ""
"The following documents describe common replica set deployment patterns. "
"Other patterns are possible and effective depending on the application's "
"requirements. If needed, combine features of each architecture in your "
"own deployment:"
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-architectures.rst:5
msgid ":doc:`/core/replica-set-architecture-three-members`"
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-architectures.rst:4
msgid ""
"Three-member replica sets provide the minimum recommended architecture "
"for a replica set."
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-architectures.rst:9
msgid ":doc:`/core/replica-set-architecture-geographically-distributed`"
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-architectures.rst:8
msgid ""
"Geographically distributed sets include members in multiple locations to "
"protect against facility-specific failures, such as power outages."
msgstr ""

#: ../source/includes/fact-master-slave-workaround.rst:1
msgid ""
"While replica sets are the recommended solution for production, a replica"
" set can support up to :limit:`50 members <Number of Members of a Replica"
" Set>` in total. If your deployment requires more than 50 members, you’ll"
" need to use :doc:`master-slave </core/master-slave>` replication. "
"However, master-slave replication lacks the automatic failover "
"capabilities."
msgstr ""

#~ msgid ""
#~ "The following documents describe common "
#~ "replica set deployment patterns. Other "
#~ "patterns are possible and effective "
#~ "depending on the the application's "
#~ "requirements. If needed, combine features "
#~ "of each architecture in your own "
#~ "deployment:"
#~ msgstr ""

# c462b67ebb1344fe8e95e4c4534c711e
#~ msgid ""
#~ "An odd number of members ensures "
#~ "that the replica set is always "
#~ "able to elect a primary. If you"
#~ " have an even number of members, "
#~ "add an arbiter to get an odd "
#~ "number. :term:`Arbiters <arbiter>` do not "
#~ "store a copy of the data and "
#~ "require fewer resources. As a result,"
#~ " you may run an arbiter on an"
#~ " application server or other shared "
#~ "process."
#~ msgstr ""

# 8023bed3fbb5464eb95bbddc83ab237d
#~ msgid ""
#~ "*Fault tolerance* for a replica set "
#~ "is the number of members that can"
#~ " become unavailable and still leave "
#~ "enough members in the set to elect"
#~ " a primary. In other words, it "
#~ "is the difference between the number "
#~ "of members in the set and the "
#~ "majority needed to elect a primary. "
#~ "Without a primary, a replica set "
#~ "cannot accept write operations. Fault "
#~ "tolerance is an effect of replica "
#~ "set size, but the relationship is "
#~ "not direct. See the following table:"
#~ msgstr ""

# c7e5df82199e40e39b028d64f99381de
#~ msgid "Number of Members."
#~ msgstr ""

# bde31ab6ff2d42b3863df0a74e38d248
#~ msgid "Majority Required to Elect a New Primary."
#~ msgstr ""

# 2b6666552ddc420ea73d276b544b2794
#~ msgid "Fault Tolerance."
#~ msgstr ""

# cb8606771abd471b957868f764942291
#~ msgid "Determine the Distribution of Members"
#~ msgstr ""

# ca691d16fb44420ca97cdb130e4a5540
#~ msgid ""
#~ "To protect your data if your main"
#~ " data center fails, keep at least "
#~ "one member in an alternate data "
#~ "center. Set these members' "
#~ ":data:`~local.system.replset.members[n].priority` to 0 "
#~ "to prevent them from becoming primary."
#~ msgstr ""

# 0124f0f16304464baaebc75c6da2be66
#~ msgid "Keep a Majority of Members in One Location"
#~ msgstr ""

# 9c2741c13b68427eb3275434152702bb
#~ msgid ""
#~ "When a replica set has members in"
#~ " multiple data centers, network partitions"
#~ " can prevent communication between data "
#~ "centers. To replicate data, members must"
#~ " be able to communicate to other "
#~ "members."
#~ msgstr ""

# a3a9e4b59d9d4f44aec2426e13749e2c
#~ msgid ""
#~ "In an election, members must see "
#~ "each other to create a majority. "
#~ "To ensure that the replica set "
#~ "members can confirm a majority and "
#~ "elect a primary, keep a majority "
#~ "of the set’s members in one "
#~ "location."
#~ msgstr ""

# 9e1bd2cf512f40a1a9a88e3ec0a1a6d0
#~ msgid "Target Operations with Tags"
#~ msgstr ""

# ba1733c1137e4c39b9c96e65f57db423
#~ msgid ""
#~ "Use :ref:`replica set tags <replica-"
#~ "set-configuration-tag-sets>` to ensure "
#~ "that operations replicate to specific "
#~ "data centers. Tags also support "
#~ "targeting read operations to specific "
#~ "machines."
#~ msgstr ""

# c9d39a45107f495ea1e2a155ebd13999
#~ msgid ":doc:`/data-center-awareness` and :doc:`/core/operational-segregation`."
#~ msgstr ""

# 29c5fd358eac4b248812426d81dfbaba
#~ msgid ""
#~ "Enable journaling to protect data "
#~ "against service interruptions. Without "
#~ "journaling MongoDB cannot recover data "
#~ "after unexpected shutdowns, including power"
#~ " failures and unexpected reboots."
#~ msgstr ""

# 75295f1eebc74e13ba8f47fca477155f
#~ msgid ""
#~ "All 64-bit versions of MongoDB after "
#~ "version 2.0 have journaling enabled by"
#~ " default."
#~ msgstr ""

# 4f2f2495c2ab427883ffe88fc56bd57d
#~ msgid ":doc:`/core/replica-set-architecture-four-members`"
#~ msgstr ""

# 3015bc84fab34ccd9c29cdc626e7faab
#~ msgid ""
#~ "Four or more member replica sets "
#~ "provide greater redundancy and can "
#~ "support greater distribution of read "
#~ "operations and dedicated functionality."
#~ msgstr ""

