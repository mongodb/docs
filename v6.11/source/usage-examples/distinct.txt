.. _node-usage-distinct:

===================================
Retrieve Distinct Values of a Field
===================================

.. default-domain:: mongodb

You can retrieve a list of distinct values for a field across a collection by using
the `collection.distinct() <{+api+}/classes/Collection.html#distinct>`__
method. Call the ``distinct()`` method on a ``Collection`` object with a document
field name parameter as a ``String`` to produce a list that contains one of each
of the different values found in the specified document field as shown below:

.. code-block:: javascript

   const distinctValues = myColl.distinct("countries", query);

You can specify a document field within an *embedded document* using
:manual:`dot notation </core/document/#embedded-documents>`. If you call
``distinct()`` on an document field that contains an array, the method
treats each element as a separate value. See the following example of
a method call to the ``wins`` field in the ``awards`` subdocument:

.. code-block:: javascript

   const distinctValues = myColl.distinct("awards.wins", query);

You can specify more query options using the ``options`` object passed
as the third parameter to the ``distinct()`` method. For details on the
query parameters, see the
`distinct() method in the API documentation <{+api+}/classes/Collection.html#distinct>`__.

If you specify a value for the document field name that is not of type
``String`` such as a ``Document``, ``Array``, ``Number``, or ``null``,
the method does not execute and returns a ``TypeMismatch`` error with a
message that resembles the following:

.. blockquote::

   "key" had the wrong type. Expected string, found <non-string type>

Visit :ref:`node-fundamentals-distinct` for more information about the ``distinct()``
method.

Example
-------

The following snippet retrieves a list of distinct values for the ``year``
document field from the ``movies`` collection. It uses a query document to
match movies that include "Barbara Streisand" as a ``director``.

.. include:: /includes/connect-guide-note.rst

.. tabs::

  .. tab:: JavaScript
     :tabid: javascript

     .. literalinclude:: /code-snippets/usage-examples/distinct.js
        :language: javascript
        :linenos:

  .. tab:: TypeScript
     :tabid: typescript

     .. literalinclude:: /code-snippets/usage-examples/distinct.ts
        :language: typescript
        :linenos:

Running the preceding example, you see the following output:

.. code-block:: json
   :copyable: false

   [ 1983, 1991, 1996 ]

