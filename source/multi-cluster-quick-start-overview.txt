.. _multi-cluster-quick-start-overview:

======================
Multi-Cluster Overview
======================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. important::
   Use the beta release of the |multi-clusters| only in development
   environments.

Overview
--------

Using |multi-clusters|, you can deploy |k8s-op-full| to manage
MongoDB deployments that span more than one |k8s| cluster.

This tutorial demonstrates how you can use the |k8s-op-short| to deploy
a MongoDB replica set across three |k8s| member clusters, using |gke|
and |istio| service mesh.

.. note::

   The procedure in this Quick Start relies on Istio, but you can use
   another service mesh solution as long as you ensure that
   cross-cluster service FQDNs are resolvable.

The beta release of the |multi-clusters| offers you different layers of
availability, depending on the needs of your enterprise application. You
can use this tutorial to deploy:

- **Single Region, Multi AZ**. One or more |k8s| clusters where each
  cluster has nodes deployed in different zones in the same region.
  Such deployments protect MongoDB instances backing your enterprise
  applications against failures and offer increased availability,
  disaster recovery, and data distribution within one cloud region.

- **Multi Region**. One or more |k8s| clusters where you:

  - Deploy each cluster in a different region, and
  - Within each region, deploy cluster nodes in different availability
    zones.

  Such deployments allow you to add MongoDB instances in global clusters
  that span multiple geographic regions for increased availability and
  global distribution of data.

.. _central-and-member-clusters:

Central Cluster and Member Clusters
-----------------------------------

|istio| or another service mesh manages the discovery of MongoDB nodes
deployed in different |k8s| member clusters. Each |multi-cluster| that
uses |istio| or another service mesh comprises one |k8s| central cluster
and one or more member clusters.

- **Central cluster** in |k8s| contains:

  - |k8s-op-full|
  - |onprem|, if you deploy it with the |k8s-op-short|
  - |k8s-op-short| ``MongoDBMulti`` CustomResource spec for the MongoDB
    replica set.

- **Member clusters** in |k8s| host the MongoDB replica sets.

You can host your application on any of the member clusters inside the
|istio| service mesh, either on |k8s| clusters outside of the ones that
you deploy with the |k8s-op-short|, or on the member clusters that you
deploy as part of this tutorial.

To learn more, see the :ref:`multi-cluster-diagram`.

.. _multi-cluster-services-tools-ref:

Services and Tools
------------------

This tutorial relies on the following services, tools, and their
documentation:

- |k8s| clusters. This tutorial uses |gke| to provision multiple
  |k8s| clusters. Each |k8s| member cluster hosts a MongoDB replica set
  deployment and represents a data center that serves your application.

- :github:`MongoDB Enterprise Kubernetes Operator repository
  </mongodb/mongodb-enterprise-kubernetes>` with configuration
  files that the |k8s-op-short| needs to deploy a |k8s| cluster.

- :mdb-github:`MongoDB Helm Charts for Kubernetes </helm-charts>` with
  charts for |multi-clusters|.

- |istio| service mesh. This tutorial uses |istio| to facilitate
  `DNS resolution <https://istio.io/latest/docs/ops/configuration/traffic-management/dns-proxy/>`__
  for MongoDB replica sets deployed in different |k8s| clusters. You can
  use another service mesh solution as long as you ensure that
  cross-cluster service FQDNs are resolvable.

- Documentation from |istio| to `Install Multicluster <https://istio.io/latest/docs/setup/install/multicluster/>`__.

- :github:`install_istio_separate_network script </mongodb/mongodb-enterprise-kubernetes/blob/master/tools/multicluster/install_istio_separate_network.sh>`
  that is based on Istio documentation and provides an example
  installation that uses the `multi-primary mode on different networks
  <https://istio.io/latest/docs/setup/install/multicluster/multi-primary_multi-network/>`__.
  If you use another service mesh solution, create your own script for
  configuring separate networks to facilitate DNS resolution.

- :github:`multi-cluster kubeconfig creator </mongodb/mongodb-enterprise-kubernetes/blob/master/tools/multicluster/main.go>`
  tool that performs the following actions:

  - Creates a single ``mongodb`` namespace in the central cluster and
    each member cluster.
  - Creates Service Accounts, Roles, and RoleBindings in the central
    cluster and each member cluster.
  - Puts Service Account token secrets from each member cluster into a
    single ``kubeconfig`` file and saves the file in the central cluster.
    This enables authorized access from the |k8s-op-short| installed in
    the central cluster to the member clusters.

