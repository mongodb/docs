title: Stop the |application| if not yet running in local mode.
stepnum: 1
ref: stop-ops-manager
pre: |
  Use the command appropriate to your operating system.
action:
  - pre: |
      **On a Linux system installed with a package manager:**
    language: sh
    code: |
      sudo service mongodb-mms stop
  - pre: |
      **On a Linux system installed with a .tar file:**
    language: sh
    code: |
      <install_dir>/bin/mongodb-mms stop
---
title: "Edit the ``conf-mms.properties`` configuration file to enable local mode and to specify the local directory for MongoDB binaries."
stepnum: 2
ref: edit-config-file
pre: |
  Open :ref:`conf-mms.properties` with root privileges and set the
  following :ref:`automation.versions values
  <automation-versions-settings>`:
action:
  - pre: |
      Set the :setting:`automation.versions.source` setting to the value ``local``:
    language: cfg
    code: |
      automation.versions.source=local
  - pre: |
      Set :setting:`automation.versions.directory` to the directory on the
      |application| server where you will store ``.tgz`` archives of the MongoDB
      binaries for access by the Automation Agent.

      For example:
    language: cfg
    code: |
      automation.versions.directory=/opt/mongodb/mms/mongodb-releases/
---
title: Start the |application|.
stepnum: 3
ref: start-ops-manager
pre: |
  Use the command appropriate to your operating system.
action:
  - pre: |
      **On a Linux system installed with a package manager:**
    language: sh
    code: |
      sudo service mongodb-mms start
  - pre: |
      **On a Linux system installed with a .tar file:**
    language: sh
    code: |
      <install_dir>/bin/mongodb-mms start
---
title: "Populate the |application| server directory with the ``.tgz`` files for the MongoDB binaries."
stepnum: 4
ref: populate-with-binaries
content: |
  Populate the directory you specified in the ``automation.versions.directory``
  setting with the necessary versions of MongoDB as determined by the
  :ref:`local-mode-determine-versions` topic on this page.

  .. important::

     If you have not yet read the :ref:`local-mode-determine-versions` topic
     on this page, please do so before continuing with this procedure.

  For example, to download MongoDB Enterprise 3.0 on Amazon Linux, issue a
  command similar to the following, replacing ``<download-url.tgz>`` with
  the download url for the archive:

  .. code-block:: sh

     sudo curl -OL <download-url.tgz>

---
title: Ensure that the "mongodb-mms" user can read the MongoDB binaries.
stepnum: 5
ref: mongodb-mms-as-owner
pre: |
  The "mongodb-mms" user must be able to read the ``.tgz`` files placed in the
  directory you specified in the ``automation.versions.directory``.
action:
  pre: |
    For example, if on a Linux platform you place the ``.tgz`` files in the
    ``/opt/mongodb/mms/mongodb-releases/`` directory, you could use the
    following sequence of commands to change ownership for **all** files
    in that directory to "mongodb-mms":
  language: sh
  code: |
    cd /opt/mongodb/mms/mongodb-releases/
    sudo chown mongodb-mms:mongodb-mms ./*
---
title: "Open |onprem|."
stepnum: 6
ref: open-ops-manager
content: |
  If you have not yet registered a user, click the :guilabel:`Register`
  link and follow the prompts to register a user and create the first
  group. The first registered user is automatically assigned the
  :ref:`global-owner-role` role.
---
title: "Copy the version manifest to |onprem|."
stepnum: 7
ref: enter-version-manifest
content: |

  a. Click the :guilabel:`Admin` link in the upper right corner of the page to display to the system-wide Administration settings.

  b. Click the :guilabel:`General` tab if it is not already selected.

  c. Click the :guilabel:`Version Manifest` menu to open the :guilabel:`MongoDB Version Manifest` page.

  d. Click the guilabel:`Update the MongoDB Version Manifest` button to update the manifest.

     - If you cannot access the Internet, follow the instructions on the :guilabel:`MongoDB Version Manifest` page for an alternative solution.

---
title: "Specify which versions are available for download by Automation Agents associated with each group."
stepnum: 8
ref: select-versions
content: |
  a. Click :guilabel:`Ops Manager` in the upper left to leave the system-wide Administration settings.

  b. Click :guilabel:`Deployment` and then click :guilabel:`Version Manager`.

  c. Select the checkboxes for the versions of MongoDB that you have made available on the |application| server.

  d. Click :guilabel:`Review Changes` at the top of the page.

  e. Click :guilabel:`Confirm & Deploy`.
---
title: "Install the Automation Agent on each server on which you will manage MongoDB processes."
stepnum: 9
ref: install-automation-agent
content: |

  a. Click :guilabel:`Settings` and then :guilabel:`Agents`.

  b. In the :guilabel:`Automation` section of the page, click the link for the operating system to which you will install. Following the installation instructions.

  c. Install the MongoDB Enterprise dependencies.

     .. include:: /includes/extracts/fact-enterprise-dependencies-vanilla.rst

...
