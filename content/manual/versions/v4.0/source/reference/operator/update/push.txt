=====
$push
=====

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. update:: $push

   The :update:`$push` operator appends a specified value to an array.

   The :update:`$push` operator has the form:

   .. code-block:: javascript

      { $push: { <field1>: <value1>, ... } }

   .. include:: /includes/use-dot-notation.rst

Behavior
---------

If the field is absent in the document to update, :update:`$push` adds
the array field with the value as its element.

If the field is **not** an array, the operation will fail.

If the value is an array, :update:`$push` appends the whole array as a
*single* element. To add each element of the value separately, use the
:update:`$each` modifier with :update:`$push`. For an example, see
:ref:`example-push-each`. For a list of modifiers available for
:update:`$push`, see :ref:`push-modifiers`.

.. _push-modifiers:

Modifiers
---------

You can use the :update:`$push` operator with the following modifiers:

.. list-table::
   :header-rows: 1
   :widths: 20 80

   * - Modifier
     - Description

   * - :update:`$each`

     - Appends multiple values to the array field.

   * - :update:`$slice`

     - Limits the number of array elements. Requires the use of the
       :update:`$each` modifier.

   * - :update:`$sort`

     - Orders elements of the array. Requires the use of the
       :update:`$each` modifier.

   * - :update:`$position`

     - Specifies the location in the array at which to insert the new
       elements. Requires the use of the :update:`$each` modifier.
       Without the :update:`$position` modifier, the :update:`$push`
       appends the elements to the end of the array.

When used with modifiers, the :update:`$push` operator has the form:

.. code-block:: javascript

   { $push: { <field1>: { <modifier1>: <value1>, ... }, ... } }

The processing of the :update:`push` operation with modifiers occur
in the following order, regardless of the order in which the modifiers
appear:

#. Update array to add elements in the correct position.

#. Apply sort, if specified.

#. Slice the array, if specified.

#. Store the array.

Examples
--------

Append a Value to an Array
~~~~~~~~~~~~~~~~~~~~~~~~~~

The following example appends ``89`` to the ``scores`` array:

.. code-block:: javascript

   db.students.update(
      { _id: 1 },
      { $push: { scores: 89 } }
   )

.. _example-push-each:

Append Multiple Values to an Array
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Use :update:`$push` with the :update:`$each` modifier to append
multiple values to the array field.

.. include:: /includes/example-push-each.rst

Use ``$push`` Operator with Multiple Modifiers
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/example-push-with-multiple-modifiers.rst

.. seealso:: :method:`db.collection.update()`,
   :method:`db.collection.findAndModify()`
