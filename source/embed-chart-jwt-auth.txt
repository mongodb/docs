.. _jwt-sdk-tutorial:

========================================================
Embed an Authenticated Chart using a Custom JWT Provider
========================================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Many websites use authentication systems that generate |jwt|\s to 
represent a signed-in user. If your website produces |jwt|\s, you can 
configure |charts-short| to validate the existing tokens to authorize 
the rendering of embedded charts. Alternatively, if your site does not 
already use |jwt|\s as a part of the authentication process, you can 
write code to generate |jwt|\s explicitly for the purpose of authorizing
chart renders. 

This tutorial shows the latter approach. The example shows you how to 
generate a simple |jwt| for a logged in user and send it to 
|charts-short|.

|charts-short| uses the details you provided when you configure a 
provider to validate |jwt|\s it receives with requests to render 
embedded charts. If the token is invalid or does not conform to the 
details you provided, |charts-short| doesn't render the authenticated 
chart view.

Prerequisites
-------------

- You must be an |service|
  :atlas:`Project Owner </reference/user-roles/#project-roles>` to
  configure embedding authentication providers for your linked 
  |charts-short| instance.
- :ref:`add-data-source`
- :ref:`create-new-dashboard`
- :ref:`create-new-chart`

Procedures
----------

Enable Authenticated Embedding for a Chart
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To embed an authenticated chart, see the 
**Authenticated Embedding** tab in :ref:`embedding-procedure`.

Configure |charts-short| to use your Custom JWT Provider
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/steps/add-auth-jwt-tutorial.rst

Create a Web App to Display your Chart
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you already have an app in which to display your chart, youâ€™re all 
set. If not, proceed with the remaining steps.

MongoDB offers a pre-built sample that shows you how to use the 
Embedding SDK to authenticate an embedded chart using a |jwt|.

Clone the :gh:`GitHub repository 
</mongodb-js/charts-embed-sdk/tree/master/examples/authenticated-custom-jwt>`
and follow the instructions in the **Readme** file to begin using the 
app. You can customize it to use the chart you created earlier.

Customize the Node.js App
~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/steps/embed-chart-sdk-jwt.rst
