.. _rm-create-jobs:

======================
Create a Migration Job
======================

.. meta::
   :description: Create a migration job to transfer data and schemas from a relational database to MongoDB, with options for snapshot or continuous migration.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Migration jobs are the worker processes responsible for transferring your 
data and schemas from a relational database to MongoDB. Create a new 
migration job from the :guilabel:`Data Migration` tab.

.. include:: /includes/fact-kafka-supported-task.rst

About this Task
---------------

- The URI credentials you provide when creating a migration job do not 
  need to be the same as the credentials you used when creating your project.

- You can use an existing :ref:`Relational Database Connection
  <rm-database-connections>`, or create one when you create the migration job.

.. include:: /includes/fact-kafka-additional-time.rst

- .. include:: /includes/fact-cdc-cleanup.rst

- .. include:: /includes/fact-cdc-recoverable.rst

Before you Begin
----------------

- :ref:`Create one or more mapping rules <create-rule-relational>` in your 
  {+rel-mig+} project.
- For both Atlas and on-premises deployments, create a separate
  :ref:`MongoDB user <rm-mongodb-service-user>` for {+rel-mig+} with
  :authrole:`readWrite` access to your MongoDB database.

- If you're using a :ref:`JDBC driver <jdbc-databases>` to perform a snapshot
  migration, contact your MongoDB representative for configuration information.


Steps
-----

.. procedure::

  .. step:: On the :guilabel:`Data Migration` tab, click :guilabel:`Create Migration Job`
 
    {+rel-mig+} only runs one migration job at a time. If a job is in 
    progress, this button is disabled.

  .. step:: Enter the relational database connection details

     On the :guilabel:`Connect to your source database` form, enter the
     connection details to create the JDBC URI for your relational database. 
      
     To use a saved :ref:`relational database connection <rm-database-connections>`, 
     click :guilabel:`Use a saved connection`
     and select it from the drop-down, then enter credentials if required.
      
     To create a new connection:

     .. include:: /includes/steps-create-relational-connection-short.rst

  .. step:: Enter MongoDB connection details 

     To use a saved :ref:`MongoDB connection <rm-save-mongodb-connection>`,
     click :guilabel:`Use a saved connection` and select it from the 
     drop-down, then enter credentials if required.
      
     To create a new connection:

     .. include:: /includes/steps-create-mongodb-connection-short.rst

  .. step:: On the :guilabel:`Migration Options` form, select :guilabel:`Migration Options`:

      .. list-table::
        :header-rows: 1

        * - Migration Option
          - Description
        * - Mode 
          - :guilabel:`Snapshot` or :guilabel:`Continuous` migration.

            For databases connected through a :ref:`JDBC driver <jdbc-databases>`, 
            Relational Migrator only supports snapshot migration. The
            :guilabel:`Continuous` option is disabled for these databases.

        * - Drop destination collections before migration
          - Boolean. Indicates whether {+rel-mig+} drops a 
            destination collection before transferring data. 

        * - Stop after errors 
          - Integer. Indicates the number of errors after which Relational 
            Migrator stops the migration job.  

        * - Verify migrated data 
          - Boolean. If true, the sync engine verifies migrated data 
            against the source database. Only supported for snapshot mode.

      When you set the :guilabel:`Mode`, {+rel-mig+} checks if 
      the database is configured correctly. If it finds issues, it displays a 
      warning banner and a :guilabel:`Generate Script` button to download an 
      SQL script. This script includes the required configuration statements, 
      and any additional instructions as comments.

      .. warning:: 

        Before starting a migration job:

        1. Download the script. 
        2. Carefully review its contents.
        3. Execute the statements.
        4. Follow any commented manual steps.

  .. step:: Review and start your migration job

      On the :guilabel:`Review Summary` form, you can see details about 
      your migration job. These details include the type, the number of 
      tables and rows affected, and the estimated data size of the 
      migration job. To start your migration job, click :guilabel:`Start`. 
         
      To view deployment details for Kafka migration jobs, select the 
      job in the :guilabel:`History` pane on the 
      :guilabel:`Data Migration` screen and hover
      over the icon next to the :guilabel:`Create Migration Job`
      button.

      .. important::

        For large migration jobs to an Atlas cluster, the Review Summary may 
        include :guilabel:`Atlas Performance Suggestions` that recommend 
        higher cluster tiers. Upgrading is optional, but reduces migration time.
        
        Click :guilabel:`Upgrade on Atlas` to open Atlas in a new browser 
        tab or window. If you want to upgrade, but don't have the necessary 
        permissions, please contact your administrator.

Next Steps
----------

- :ref:`rm-monitor-jobs`
- :ref:`rm-data-Verification`

Learn More
----------

For detailed information regarding the configuration requirements for 
each database, see the following:

* `MySQL <https://debezium.io/documentation/reference/stable/connectors/mysql.html#setting-up-mysql>`__
* `Oracle <https://debezium.io/documentation/reference/stable/connectors/oracle.html#_preparing_the_database>`__
* `PostgreSQL <https://debezium.io/documentation/reference/stable/connectors/postgresql.html#setting-up-postgresql>`__
* `SQL Server <https://debezium.io/documentation/reference/stable/connectors/sqlserver.html#setting-up-sqlserver>`__
