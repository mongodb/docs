==============
enableSharding
==============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. dbcommand:: enableSharding

   The :dbcommand:`enableSharding` command enables :doc:`sharding
   </sharding>` on the specified database. Once you enabled sharding
   for a database, you can use the :dbcommand:`shardCollection` command
   to shard collections in that database.

   .. |method| replace:: :method:`sh.enableSharding` 
      helper method
   .. include:: /includes/fact-dbcommand-tip

Compatibility
-------------

This command is available in deployments hosted in the following environments: 

.. include:: /includes/fact-environments-atlas-only.rst

.. include:: /includes/fact-environments-atlas-support-no-serverless.rst

.. include:: /includes/fact-environments-onprem-only.rst

Syntax
------

The :dbcommand:`enableSharding` command has the following syntax:

- *Recommended*.  Specify just the database for which to enable sharding.

  .. code-block:: javascript

     db.adminCommand( { 
        enableSharding: "<database name>"
     } )


- Optionally, you can include the primary shard specification in the command, 
  although this is not recommended:

  .. code-block:: javascript

     db.adminCommand( 
        { 
          enableSharding: "<database name>",
          primaryShard: "<shard name>"  
        } 
     )

You can only run :dbcommand:`enableSharding` in the ``admin`` database
from a :binary:`~bin.mongos` instance.

Fields
~~~~~~

The command takes the following fields:

.. list-table::
   :header-rows: 1
   :widths: 20 20 60

   * - Field
     - Type
     - Description

   * - :ref:`enableSharding <cmd-enableSharding-db>`

     - String

     - .. _cmd-enableSharding-db:

       The database for which you wish to enable sharding.

   * - :ref:`primaryShard <cmd-enableSharding-primaryShard>`

     - String

     - .. _cmd-enableSharding-primaryShard:

       Optional. The :ref:`primary shard <primary-shard>` for the
       database; the primary shard contains the unsharded collection
       for this database. In general, rather than explicitly specifying
       the primary shard, it is recommended to let the balancer select
       the primary shard instead.

       .. warning:: Tip


          In general, you should not need to specify the primary shard. Allow
          the balancer to select the primary shard instead.

Returns
~~~~~~~

The command returns a document that contains status of the operation.

Behavior
--------

Write Concern
~~~~~~~~~~~~~~

.. include:: /includes/extracts/mongos-operations-wc-enable-sharding.rst


Primary Shard
~~~~~~~~~~~~~

In general, you should not need to specify the :ref:`primaryShard
<cmd-enableSharding-primaryShard>` in the command. Instead, allow the
balancer to select the primary shard. 

However, if you do specify the :ref:`primaryShard
<cmd-enableSharding-primaryShard>` in the command for a :ref:`database
<cmd-enableSharding-db>` and the database is already sharding enabled
with a different primary shard, the operation returns an error and the
primary shard for the database remains as before. To change the primary
shard for a database, use :dbcommand:`movePrimary` instead.

Example
-------

The following command, run from a :binary:`~bin.mongos`, enables
sharding for the ``test`` database:

.. code-block:: javascript

   db.adminCommand( { enableSharding: "test" } )

To verify, run :method:`sh.status()`.

.. seealso::

   - :doc:`/tutorial/deploy-shard-cluster`
   - :method:`sh.shardCollection()`


