===============
Storage Engines
===============

.. default-domain:: mongodb

The :term:`storage engine` is the component of the database that is
responsible for managing how data is stored, both in memory and on disk.
MongoDB supports multiple storage engines, as different engines perform
better for specific workloads. Choosing the appropriate storage engine
for your use case can significantly impact the performance of your
applications.

:doc:`WiredTiger </core/wiredtiger>` is the default storage engine
starting in MongoDB 3.2. It is well-suited for most workloads and is
recommended for new deployments. WiredTiger provides a document-level
concurrency model, checkpointing, and compression, among other features.
In MongoDB Enterprise, WiredTiger also supports
:doc:`/core/security-encryption-at-rest`.

:doc:`MMAPv1 </core/mmapv1>` is the original MongoDB storage engine and
is the default storage engine for MongoDB versions before 3.2. It
performs well on workloads with high volumes of reads and writes, as
well as in-place updates.

The :doc:`In-Memory Storage Engine </core/inmemory>` is available in
MongoDB Enterprise. Rather than storing documents on-disk, it retains
them in-memory for more predictable data latencies. This storage engine
is in **beta** -- do **not** use in production.

.. include:: /includes/toc/storage-engines.rst
