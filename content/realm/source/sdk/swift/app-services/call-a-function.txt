.. meta::
   :robots: noindex, nosnippet

.. _ios-call-a-function:

===========================
Call a Function - Swift SDK
===========================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. _ios-call-a-function-by-name:

Call a Function by Name
-----------------------

.. include:: /includes/important-sanitize-client-data-in-functions.rst

Consider an :ref:`Atlas App Services Function <functions>` named 
``concatenate`` that takes two arguments, concatenates them, and returns 
the result:

.. code-block:: javascript

   // concatenate: concatenate two strings
   exports = function(a, b) {
     return a + b;
   };

To execute a function from the Swift SDK, use the ``functions``
object on the currently logged-in user.

The ``functions`` object has dynamic members corresponding to functions.
In this case, ``functions.concatenate()`` refers to the ``concatenate`` 
function. Pass a ``BSONArray`` of arguments. The trailing closure is the 
completion handler to call when the function call is complete. This handler 
is executed on a non-main global ``DispatchQueue``.

.. tabs-realm-languages::
   
   .. tab::
      :tabid: swift

      .. literalinclude:: /examples/generated/code/start/Functions.snippet.call-a-function.swift
         :language: swift

   .. tab::
      :tabid: objective-c

      .. literalinclude:: /examples/generated/code/start/Functions.snippet.call-a-function.m
         :language: objectivec

.. _ios-async-await-call-function:

Async/Await Call a Function
---------------------------

.. versionadded:: 10.16.0

The Realm Swift SDK offers async/await versions of the ``User.function`` 
methods.

.. literalinclude:: /examples/generated/code/start/Functions.snippet.async-call-a-function.swift
   :language: swift

.. include:: /includes/swift-async-await-support.rst
