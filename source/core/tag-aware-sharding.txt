.. _tag-aware-sharding:

==================
Tag Aware Sharding
==================

.. default-domain:: mongodb

MongoDB supports tagging a range of :term:`shard key` values to
associate that range with a shard or group of shards. Those shards
receive all inserts within the tagged range.

The balancer obeys tagged range associations, which enables the
following deployment patterns:

- isolate a specific subset of data on a specific set of shards.

- ensure that the most relevant data reside on shards that are
  geographically closest to the application servers.

This document describes the behavior, operation, and use of tag aware
sharding in MongoDB deployments.

.. note::

   :term:`Shard key` range tags are distinct from :ref:`replica set
   member tags <replica-set-read-preference-tag-sets>`.

.. important::

   :term:`Hash-based sharding <hashed shard key>` does not support
   tag-aware sharding.

.. _shards-tag-sets:

Behavior and Operations
-----------------------

The balancer migrates chunks to shards associated with a tag that has a
:term:`shard key` range with an *upper* bound *greater* than the chunk's
*lower* bound.

.. note::

   If the chunks on a given shard are already balanced, then the
   balancer does not rebalance them. If they are unbalanced, the
   balancer migrates chunks in tagged ranges to shards associated with
   those tags.

After configuring tags with a :term:`shard key` range, and associating
it with a shard or shards, the cluster may take some time to balance the
data among the shards. This depends on the division of chunks and the
current distribution of data in the cluster.

Once configured, the balancer respects tag ranges during future
:ref:`balancing rounds <sharding-internals-balancing>`.

.. seealso:: 

   :doc:`/tutorial/administer-shard-tags`

Chunks that Span Multiple Tag Ranges
------------------------------------

A single chunk may contain some data with a :term:`shard key` value
that falls within range of one tag, and some data with a :term:`shard
key` value that falls within range of another tag. Because of this the
balancer may migrate chunks to shards that contain :term:`shard key`
values that exceed the upper bound of the selected tag range.

.. example::

   Given a sharded collection with two configured tag ranges:

   - :term:`Shard key` values between ``100`` and ``200`` have tags to
     direct corresponding chunks to shards tagged ``NYC``.

   - :term:`Shard key` values between ``200`` and ``300`` have tags to
     direct corresponding chunks to shards tagged ``SFO``.

   In this cluster, the balancer will migrate a chunk with :term:`shard
   key` values ranging between ``150`` and ``220`` to a shard tagged
   ``NYC``, since ``150`` is closer to ``200`` than ``300``.

To ensure that your collection has no potentially ambiguous
chunks, :doc:`create splits on your tag boundaries
</tutorials/split-chunks-in-sharded-cluster>`. You can manually
migrate chunks to the appropriate shards, or wait for the balancer to
automatically migrate these chunks.

