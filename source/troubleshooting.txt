.. _troubleshooting:

===============
Troubleshooting
===============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: twocols

This document provides advice for troubleshooting problems with |mms|.

For resolutions to alert conditions, see also :doc:`/tutorial/nav/alert-resolutions`.

Getting Started Checklist
-------------------------

To begin troubleshooting, complete these tasks to check for common, easily
fixed problems:

#. :ref:`troubleshooting-auth-creds`
#. :ref:`troubleshooting-check-logs`
#. :ref:`troubleshooting-host-connectivity`
#. :ref:`troubleshooting-mms-connectivity`
#. :ref:`troubleshooting-discover-hosts`

.. _troubleshooting-auth-creds:

Authentication Errors
~~~~~~~~~~~~~~~~~~~~~

If your MongoDB instances run with authentication enabled, ensure |mms| has the
MongoDB credentials. See :doc:`/tutorial/edit-host-authentication-credentials`.

.. _troubleshooting-check-logs:

Check Agent Output or Log
~~~~~~~~~~~~~~~~~~~~~~~~~

If you continue to encounter problems, check the agent's output for errors.
See :ref:`Agent Logs <agent-logs>` for more information.

.. _troubleshooting-host-connectivity:

Ensure Connectivity Between Agent and Monitored Hosts
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Ensure the system running the agent can resolve and connect to the
:program:`mongod` processes. If you install multiple Monitoring Agents,
ensure that **each** Monitoring Agent can reach every :program:`mongod`
process in the deployment.

To confirm, log into the system where the agent
is running and issue a command in the following form:

.. code-block:: sh

   mongo [hostname]:[port]

Replace ``[hostname]`` with the hostname and ``[port]`` with the
port that the database is listening on.

.. include:: /includes/fact-port-forwarding-unsupported.rst

.. _troubleshooting-mms-connectivity:

Ensure Connectivity Between Agent and |mms| Server
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. only:: onprem

   Verify that the Monitoring Agent can connect on TCP port 8443
   (outbound) to the |mms| server (i.e. ``api-agents.mongodb.com``.)

.. only:: cloud

   Verify that the Monitoring Agent can connect on TCP port 443
   (outbound) to the |mms| server (i.e. ``api-agents.mongodb.com``.)

.. _troubleshooting-discover-hosts:

Allow Agent to Discover Hosts and Collect Initial Data
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Allow the agent to run for 5-10 minutes to allow host discovery and initial
data collection.

.. "Ops Manager Installation:"

.. include:: /includes/extracts/troubleshooting-onprem-installation.rst

Monitoring
----------

Alerts
~~~~~~

For resolutions to alert conditions, see also :doc:`/tutorial/nav/alert-resolutions`.

For information on creating and managing alerts, see
:doc:`/tutorial/manage-alert-configurations` and
:doc:`/tutorial/manage-alerts-and-events`.

Cannot Turn Off Email Notifications
+++++++++++++++++++++++++++++++++++

There are at least two ways to turn off alert notifications:

- Remove the deployment from your |mms| account. See :doc:`/tutorial/unmanage-deployment`.

- Disable or delete the alert configuration. See
  :doc:`/tutorial/manage-alert-configurations`.

- Turn off alerts for a specific host. See
  :ref:`manage-host-alerts`.

Receive Duplicate Alerts
++++++++++++++++++++++++

If the notification email list contains multiple email-groups, one or more
people may receive multiple notifications of the same alert.

.. _open-file-limits:

Receive "Host has low open file limits" or "Too many open files" error messages
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

These error messages appear on the :guilabel:`Deployment` page,
under a host's name. They appear if the number of
available connections does not meet the |mms|-defined minimum value. These errors
are not generated by the :program:`mongos` instance and, therefore, will not
appear in :program:`mongos` log files.

On a host by host basis, the Monitoring Agent compares the number of open
file descriptors and connections to the maximum connections limit. The max open
file descriptors ulimit parameter directly affects the number of available
server connections. The agent calculates whether or not enough connections
exist to meet the |mms|-defined minimum value.

In ping documents, for each node and its ``serverStatus.connections`` values,
if the sum of the ``current`` value plus the ``available`` value is less than
the ``maxConns`` configuration value set for a monitored host, the Monitoring
Agent will send a :guilabel:`Host has low open file limits` or :guilabel:`Too
many open files` message to |mms|.

Ping documents are data sent by Monitoring Agents to |mms|. To view ping
documents, click the :guilabel:`Deployment` page, then click the host's
name, and then click :guilabel:`Last Ping`.

To prevent this error, we recommend you set ``ulimit`` open files to 64000. We
also recommend setting the ``maxConns`` command in the mongo shell to at least
the recommended settings.

See :manual:`the MongoDB ulimit reference page </reference/ulimit>` and the
:manual:`the MongoDB maxConns reference page
</reference/configuration-options/#maxConns>` for details.

Deployments
~~~~~~~~~~~

Deployment Hangs in ``In Progress``
+++++++++++++++++++++++++++++++++++

If you have added or restarted a deployment and the deployment remains
in the ``In Progress`` state for several minutes, click :guilabel:`View
Agent Logs` and look for any errors.

If you diagnose an error and need to correct the deployment
configuration:

1. Click :guilabel:`Edit Configuration` and then click :guilabel:`Edit
   Configuration` again.

2. Reconfigure the deployment.

3. When you complete your changes, click :guilabel:`Review Changes`
   and then :guilabel:`Confirm & Deploy`.

If you shut down the deployment and still cannot find a solution,
:doc:`remove the deployment </tutorial/unmanage-deployment>` from |mms|.

.. "Monitoring Agent Fails to Collect Data:"

.. include:: /includes/extracts/troubleshooting-monitoring-agent-fails-to-collect-data.rst

.. "Hosts:"

.. include:: /includes/extracts/troubleshooting-faq-hosts-legacy.rst

Groups
~~~~~~

Additional Information on Groups
++++++++++++++++++++++++++++++++

Create a group to monitor additional segregated systems or environments for
servers, agents, users, and other resources. For example, your deployment might
have two or more environments separated by firewalls. In this case, you would
need two or more separate |mms| groups.

API and shared secret keys are unique to each group. Each group requires its
own agent with the appropriate API and shared secret keys. Within each group,
the agent needs to be able to connect to all hosts it monitors in the group.

For information on creating and managing groups, see :doc:`/tutorial/create-group`.

.. _troubleshooting-munin:

Munin
~~~~~

.. important::

   As of Automation Agent 2.7.0, hardware monitoring using ``munin-
   node`` is deprecated.

   ``munin-node`` is a third-party package. For problems related to 
   installing ``munin-node``, see the 
   `Munin Wiki <http://munin-monitoring.org/wiki>`_.

Install and configure the ``munin-node`` service on the MongoDB
server(s) to be monitored before starting |mms| monitoring. The |mms|
agent's ``README`` file provides guidelines to install ``munin-node``.

.. seealso::
   See :doc:`/tutorial/configure-monitoring-munin-node/` for details
   about monitoring hardware with ``munin-node``.

Red Hat Enterprise Linux (RHEL 6, 7) can generate the following error
messages.

:guilabel:`No package munin-node is available` Error
++++++++++++++++++++++++++++++++++++++++++++++++++++

To correct this error:

1. Follow the instructions on the `Extra Packages for Enterprise Linux
   repository <https://fedoraproject.org/wiki/EPEL/FAQ #How_can_I
   _install_the_packages_from_the_EPEL_software_repository.3F>`_ wiki page to
   install the ``epel-release rpm`` for your version of your
   enterprise Linux.
   
2. After the package is installed, type this command to install ``munin-node``
   and all of its dependencies:

   .. code-block:: sh

      sudo yum install munin-node

3. After the ``munin-node`` is installed, check to see if the ``munin-node``
   service is running. If it is not, type these commands to start the ``munin-
   node`` service.

   .. code-block:: sh

      service munin-node status
      service munin-node start

Non-localhost IP Addresses are Blocked
++++++++++++++++++++++++++++++++++++++

By default, munin blocks incoming connections from non-localhost IP addresses.
The ``/var/log/munin/munin-node.log`` file will display a
"Denying connection" error for your non-localhost IP address.

To fix this error, open the ``munin-node.conf`` configuration file and comment
out these two lines:

.. code-block:: sh

   allow ^127\.0\.0\.1$
   allow ^::1$

Then add this line to the ``munin-node.conf`` configuration file with a pattern
that matches your subnet:

.. code-block:: sh

   cidr_allow 0.0.0.0/0

Restart ``munin-node`` after editing the configuration file for changes to take effect.

Verifying iostat and Other Plugins/Services Returns "# Unknown service" Error
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

The first step is to confirm there is a problem. Open a telnet session and
connect to ``iostat``, ``iostat_ios``, and ``cpu``:

.. code-block:: sh

   telnet HOSTNAME 4949 <default/required munin port>
   fetch iostat
   fetch iostat_ios
   fetch cpu

The ``iostat_ios`` plugin creates the ``iotime`` chart, and the ``cpu``
plugin creates the ``cputime`` chart.

If any of these telnet ``fetch`` commands returns an "# Unknown Service" error,
create a link to the plugin or service in /etc/munin/plugins/ by typing these
commands:

.. code-block:: sh

   cd /etc/munin/plugins/
   sudo ln -s /usr/share/munin/plugins/<service> <service>

Replace ``<service>`` with the name of the service that generates the error.

Disk names are not listed by Munin
++++++++++++++++++++++++++++++++++

In some cases, Munin will omit disk names with a dash between the name and a
numerical prefix, for example, ``dm-0`` or ``dm-1``. There is `a documented fix`_ for
Munin's iostat plugin.

.. _`a documented fix`: https://bugs.launchpad.net/ubuntu/+source/munin/+bug/493982


Authentication
--------------

Two-Factor Authentication
~~~~~~~~~~~~~~~~~~~~~~~~~

Missed SMS Authentication Tokens
++++++++++++++++++++++++++++++++

Unfortunately SMS is not a 100% reliable delivery mechanism for messages,
especially across international borders. The Google authentication option is
100% reliable. Unless you must use SMS for authentication, use the
Google Authenticator application for two-factor authentication.

If you do not receive the SMS authentication tokens:

1. Refer to the :doc:`Settings </tutorial/nav/account-management>`
   page for more details about using two-factor authentication. This
   page includes any limitations which may affect SMS delivery times.

2. Enter the SMS phone number with country code first followed by the
   area code and the phone number. Also try 011 first followed by
   the country code, then area code, and then the phone number.

.. only:: cloud

   If you do not receive the authentication token in a reasonable amount
   of time `contact Support <https://cloud.mongodb.com/links/support>`_ to
   rule out SMS message delivery delays.

.. only:: onprem

   If you do not receive the authentication token in a reasonable amount
   of time, contact your |mms| system administrator.

.. "Delete or Reset Two-Factor Authentication:"

.. include:: /includes/extracts/troubleshooting-reset-2fa.rst

.. "LDAP:"

.. include:: /includes/extracts/troubleshooting-ldap.rst

.. "Backup:"

.. include:: /includes/extracts/troubleshooting-backup.rst

.. "System:"

.. include:: /includes/extracts/troubleshooting-system.rst

.. _automation-checklist:

Automation Checklist
--------------------

|mms| Automation allows you to deploy, configure, and manage MongoDB
deployments with the |mms| UI.  |mms| Automation relies on an Automation
Agent, which must be installed on every server in the deployment.  The
Automation Agents periodically poll the |mms| service to determine the
current goal, and continually report their status to |mms|.

To use Automation, you must install the Automation Agent on each
server that you want |mms| to manage.


Automation Runs Only on 64-bit Architectures
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

|mms| provides only 64-bit downloads of the Automation Agent.

Using Own Hardware
~~~~~~~~~~~~~~~~~~

- If you deploy Automation manually, ensure that you have one
  Automation Agent on every server.

- If you deploy the agent manually, you must create MongoDB's
  :setting:`dbpath` and the directory for the MongoDB binaries and
  ensure that the user running the agent owns these
  directories.

  If you install using the ``rpm`` package, the agent runs as the
  ``mongod`` user; if using the ``deb`` package, the agent runs as the
  ``mongodb`` user. If you install using the ``tar.gz`` archive file,
  you can run the agent as any user.


Networking
~~~~~~~~~~

All hosts must be able to allow communication between MongoDB
ports. The default is ``27017``, but you can configure alternate port
ranges in the |mms| interface.

.. only:: cloud

   The Automation Agent *must* be able to connect to
   ``cloud.mongodb.com`` on port ``443`` (i.e. ``https``).
   For more information on access to ports and IP addresses, see
   :doc:`/core/security`.

.. only:: onprem

   The Automation Agent *must* be able to connect to
   |onprem| on port ``8443`` (i.e. ``https``).
   For more information on access to ports and IP addresses, see
   :doc:`/core/security`.

Automation Configuration
~~~~~~~~~~~~~~~~~~~~~~~~

After completing the automation configuration, always ensure that the
deployment plan satisfies the needs of your
deployment. Always double check hostnames and ports before
confirming the deployment.

Sizing
~~~~~~

- Ensure that you provision machines with enough space to run MongoDB
  and support the requirements of your data set.

- Ensure that you provision sufficient machines to run your
  deployment. Each :program:`mongod` should run on its own host.

Frequent Connection Timeouts
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The Automation Agent may frequently time out of connections if your |mms|
deployment experiences high network latencies. By default, connections
time out after 40 seconds. However, deployments spread across multiple
geographic regions or that require lengthy SSL network handshakes may 
require more time. MongoDB recommends increasing the value of the 
:setting:`dialTimeoutSeconds` Automation Agent configuration setting 
to prevent frequent connection timeouts. See :setting:`dialTimeoutSeconds`
in Connection Settings at :doc:`Automation Agent Configuration </reference/automation-agent>`
for more information. 
