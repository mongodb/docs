=================================
FAQ: The MongoDB Connector for BI
=================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

How do I authenticate with the |bi|?
------------------------------------

.. versionchanged:: 2.0

   Prior to version 2.0, the |bi| stored its own separate set of
   credentials.

   .. include:: /includes/fact-upgrade.rst

When connecting to a MongoDB deployment using
:manual:`authentication </tutorial/enable-authentication>`, you can
authenticate as the users and roles configured in that deployment.

See :ref:`client-authentication` for details on how to specify
your authentication source and mechanism.

Does the |bi| store any data?
-----------------------------

The |bi| instance only transforms SQL queries into
MongoDB queries. It does not store any data itself.

When starting :program:`mongosqld`, you provide it a
:doc:`DRDL </schema-configuration>` file describing the schema of your
data.

How are queries processed?
--------------------------

The |bi| constructs an :ref:`aggregation <aggregation-framework>`
pipeline that allows the MongoDB server to execute many SQL
expressions.

:program:`mongosqld` always enables the
:manual:`aggregate </reference/command/aggregate>` ``allowDiskUse``
option.

The |bi| cannot map some supported SQL constructs into an
aggregation equivalent. In this case, the |bi| will execute those
constructs in memory.

.. _bi-skip-incompatible-types:

How do I skip data incompatible with my DRDL type definition?
-------------------------------------------------------------

Using MongoDB 3.4 Views
~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-pipeline-views.rst

Using a DRDL Filter
~~~~~~~~~~~~~~~~~~~

If documents in a collection contain different data types for a field,
you may filter for a specific data type. To accomplish this, you can
include a :pipeline:`$match` stage at the beginning of the pipeline in
your :ref:`DRDL <drdl>` table definition.

For example, to match only documents containing a number in the ``grade`` field,
use the following pipeline stage:

.. code-block:: javascript

   "$match": { "grade": { "$type": "number" } }

If you are :pipeline:`unwinding <$unwind>` an array field that contains
different data types, then to filter the array for a specific data type, put
the :pipeline:`$match` stage after the :pipeline:`$unwind`.

.. seealso::

   :ref:`Heterogeneous data types <drdl-heterogeneous>`

Is there any syntax validation tool for DRDL?
---------------------------------------------

:ref:`DRDL <drdl>` files use the `YAML <http://yaml.org/>`_ syntax. Any
YAML validator such as `<https://yaml-online-parser.appspot.com/>`_ can help you
check your DRDL files.

How does the |bi| process dates?
--------------------------------

The |bi| will correctly process :ref:`BSON date <document-bson-type-date>` data
by mapping it to the :term:`SQL` ``datetime`` type. For example:

.. code-block:: javascript

   db.data.save({ date: new Date() })

If you store date data as a string, the |bi| treats it as a string
rather than as a date. For example, |bi| treats the following as a
string:

.. code-block:: javascript

   db.data.save({ date: '32-FEB-2015' })

How do I use TLS/SSL with the |bi|?
-----------------------------------

The connection between :program:`mongosqld` and your MongoDB deployment
has TLS/SSL configured separately from the connection between your MySQL
client and :program:`mongosqld`.

Connecting ``mongosqld`` to MongoDB
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If the MongoDB instance you are connecting to uses
:manual:`TLS/SSL </core/security-transport-encryption>`, provide
the :option:`--mongo-ssl` option to :program:`mongosqld`.

For example:

.. code-block:: sh

   mongosqld --schema=schema.drdl --mongo-ssl

To specify a TLS/SSL CA root certificate, use the :option:`--mongo-sslCAFile`
option. To specify a client certificate, use the :option:`--mongo-sslPEMKeyFile`
option. For example:

.. code-block:: sh

   mongosqld --schema=schema.drdl \
             --mongo-ssl \
             --mongo-sslCAFile=/certs/ca.pem \
             --mongo-sslPEMKeyFile=/certs/mongodb_client.pem

Connecting a client to ``mongosqld``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To specify a TLS/SSL CA root certificate, use the :option:`--sslCAFile`
option. To specify a client certificate, use the :option:`--sslPEMKeyFile`
option. For example:

.. code-block:: sh

   mongosqld --schema=schema.drdl \
             --sslCAFile=/certs/ca.pem \
             --sslPEMKeyFile=/certs/mysql_client.pem
