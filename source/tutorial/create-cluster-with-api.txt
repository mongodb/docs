================================
Deploy a Cluster through the API
================================

.. default-domain:: mongodb

.. _create-cluster-with-api-overview:

Overview
--------

This tutorial manipulates the :doc:`Public API's </core/api>` automation
configuration to deploy a :term:`sharded cluster` to be owned by another
user. The tutorial first
creates a new group, then a new user as owner of the group, and then a
sharded cluster owned by the new user. You can create a script to automate
these procedures for use in routine operations.

To perform these steps, you must have access to |mms| as a user with the
:ref:`global-owner-role` role.

The procedures install a cluster with two :term:`shards <shard>`. Each
shard comprises a three-member :term:`replica set`. The tutorial installs
one :program:`mongos` and three :term:`config servers <config server>`.
Each component of the cluster resides on its own server, requiring a total
of 10 servers.

The tutorial installs the :doc:`Automation Agent
</tutorial/nav/install-automation-agent>` on each server.

.. _create-cluster-with-api-prerequisites:

Prerequisites
-------------

|mms| must have an existing user with :ref:`global-owner-role` role. The
first user you create after you :doc:`install <installation>` |mms| has
this role. Global owners can perform any |mms| action, both through the
|mms| interface and through the API.

You must have the URL of the |mms| Web Server, as set in the
``mmsBaseUrl`` setting of the :doc:`Monitoring Agent configuration
file </reference/monitoring-agent>`.

You must provision 10 servers to host the components of the :term:`sharded
cluster`. For hardware considerations, see the :manual:`Production Notes
</administration/production-notes>` in the MongoDB manual.

Each server must provide its :doc:`Automation Agent
</tutorial/nav/install-automation-agent>` with full networking access to
the hostnames and ports of the Automation Agents on all the other servers.
Each agent runs the command ``hostname -f`` to self-identify its hostname
and port and report them to the |application|.

.. tip::

   To ensure agents can reach each other, provision the servers using MMS
   Cloud's auto-provisioning feature, if you have access. This installs
   the Automation Agents with correct network access. Then use this
   tutorial to reinstall the Automation Agents on those machines.

Procedures
----------

Retrieve API Key
++++++++++++++++

This procedure displays the full API key **just once**. You must record
the API key when it is displayed.

Note that this API key for the Public API is different from the API key
for a group, which is always visible in |mms| through the :guilabel:`Group
Settings` tab.

.. include:: /includes/steps/retrieve-api-key.rst

Create the Group and the User through the API
+++++++++++++++++++++++++++++++++++++++++++++

.. include:: /includes/steps/create-group-through-api.rst

Install the Automation Agent on each Provisioned Server
+++++++++++++++++++++++++++++++++++++++++++++++++++++++

Your servers must have the networking access described in the
:ref:`create-cluster-with-api-prerequisites`.

.. include:: /includes/steps/install-automation-agent-to-provisioned-servers.rst

Deploy the New Cluster
++++++++++++++++++++++

To add or update a deployment, copy the configuration stored in the
``mms-cluster-config-backup.json`` file found on the host
machines, make changes as needed, and send the updated configuration
though the API to the |application|.

The |application| updates its version of the configuration and deploys the
MongoDB instances according to the new plan. The |application| also
downloads the new configuration to the ``mms-cluster-config-backup.json``
files stored on the MongoDB hosts.

For a description of the ``mms-cluster-config-backup.json`` file, see
:doc:`/reference/api/automation-config`.

.. tip:: You can also learn about the configuration file by viewing 
   an existing deployment in |onprem|. Select the :guilabel:`Deployment`
   tab and then select :guilabel:`Raw AutomationConfig` to view and
   download an existing configuration.

The following procedure deploys an updated automation configuration
through the Public API:

.. include:: /includes/steps/create-cluster-through-api.rst

Next Steps
----------

To make an additional version of MongoDB available in the cluster, follow
the steps in :doc:`update-mongodb-version-of-deployment-via-api`.
