.. facet::
   :name: programming_language
   :values: csharp, go, java, javascript/typescript, python

.. meta::
   :keywords: code example, node.js, compass, java sync

.. _csfle-install:
.. _csfle-implementation:

=========================
Installation Requirements
=========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

Learn about the applications and libraries you must install to use
{+csfle+} ({+csfle-abbrev+}).

What You Need
-------------

Before you can use {+csfle-abbrev+}, you must set up the following items
in your development environment:

- (Optional) Download the :ref:`{+shared-library+} <csfle-reference-shared-library-download>`. 
  The {+shared-library+} is a preferred alternative to :ref:`mongocryptd <csfle-reference-mongocryptd>` and
  does not require spawning a new process. ``mongocryptd`` is still supported.
- Install :manual:`MongoDB Enterprise Edition </installation/#mongodb-enterprise-edition-installation-tutorials>`.
- Install a :ref:`MongoDB Driver Compatible with CSFLE <csfle-driver-compatibility>`.
- Start a
  :manual:`MongoDB instance </tutorial/manage-mongodb-processes/#start-mongod-processes>`
  or
  :atlas:`Atlas Cluster </getting-started?jmp=docs>`.
- Install specific driver dependencies. To see the list of
  dependencies for your driver, select the tab corresponding to the language you
  would like to use to complete this guide:

.. _csfle-quick-start-driver-dependencies:

.. tabs-drivers::

   .. tab::
      :tabid: java-sync

      .. include:: /includes/set-up/java.rst

   .. tab::
      :tabid: nodejs

      .. include:: /includes/set-up/node.rst

   .. tab::
      :tabid: python

      .. include:: /includes/set-up/python.rst

   .. tab::
      :tabid: csharp

      .. include:: /includes/set-up/csharp.rst

   .. tab::
      :tabid: go

      .. include:: /includes/set-up/go.rst

Learn More
----------

To start using {+csfle-abbrev+}, see :ref:`csfle-quick-start`.

To learn how to use {+csfle-abbrev+} with a remote {+kms-long+}
provider, see :ref:`csfle-tutorial-automatic-encryption`.
