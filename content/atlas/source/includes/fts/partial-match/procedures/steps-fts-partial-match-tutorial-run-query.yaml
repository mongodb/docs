stepnum: 1
ref: fts-partial-match-tutorial-step1
inherit:
  file: steps-fts-tutorial-run-query.yaml
  ref: connect-to-database-deployment-fts
---
stepnum: 2
ref: fts-partial-match-tutorial-step2
inherit:
  file: steps-fts-tutorial-run-query.yaml
  ref: use-sample-mflix
---
stepnum: 3
ref: fts-partial-match-tutorial-step3
title: "Run the following |fts| query using the operator for 
       which you created the index."
content: |
  The following query uses the operator to query the ``plot`` field of 
  the ``sample_mflix.movies`` collection. The query includes a:
  
  - :pipeline:`$limit` stage to limit the output to 5 results
  - :pipeline:`$project` stage to exclude all fields except ``title`` 
    and ``plot``

  .. tabs:: 

     .. tab:: autocomplete
        :tabid: autocomplete 

        .. include:: /includes/fts/extracts/fts-partial-match-autocomplete-query-desc.rst

        .. io-code-block::
           :copyable: true

           .. input::
              :language: js
              :linenos:

              db.movies.aggregate([
                {
                  "$search": {
                    "index": "partial-match-tutorial",
                    "autocomplete": {
                      "path": "plot",
                      "query": "new purchase",
                      "tokenOrder": "any",
                      "fuzzy": {
                        "maxEdits": 2,
                        "prefixLength": 1,
                        "maxExpansions": 256
                      }
                    },
                    "highlight": { 
                        "path": "plot"
                    }
                  }
                },
                {
                  "$limit": 5
                },
                {
                  "$project": {
                    "_id": 0,
                    "title": 1,
                    "plot": 1,
                    "highlights": { "$meta": "searchHighlights" }
                  }
                }
              ])

           .. output:: /includes/fts/partial-match/autocomplete-query-shell-compass-results.js
              :language: json
              :visible: true

     .. tab:: phrase
        :tabid: phrase 

        .. include:: /includes/fts/extracts/fts-partial-match-phrase-query-desc.rst

        .. io-code-block::
           :copyable: true

           .. input::
              :language: js
              :linenos:

              db.movies.aggregate([
                {
                  "$search": {
                    "index": "partial-match-tutorial",
                    "phrase": {
                      "path": "plot",
                      "query": "new purpose",
                      "slop": 5
                    },
                    "highlight": {
                      "path": "plot"
                    }
                  }
                },
                { 
                  "$limit": 5 
                },
                {
                  "$project": {
                    "_id": 0,
                    "plot": 1,
                    "title": 1,
                    "highlights": { "$meta": "searchHighlights" }
                  }
                }
              ])

           .. output:: /includes/fts/partial-match/phrase-query-shell-compass-results.js
              :language: json
              :visible: true

     .. tab:: regex
        :tabid: regex 

        .. include:: /includes/fts/extracts/fts-partial-match-regex-query-desc.rst

        .. io-code-block::
           :copyable: true

           .. input::
              :language: js
              :linenos:

              db.movies.aggregate([
                {
                  "$search": {
                    "index": "partial-match-tutorial",
                    "regex": {
                      "path": "plot",
                      "query": "(.*)new(.*) pur(.*)"
                    }
                  }
                },
                {
                  $limit: 5
                },
                {
                  $project: {
                    "_id": 0,
                    "plot": 1,
                    "title": 1
                  }
                }
              ])

           .. output:: /includes/fts/partial-match/regex-query-shell-compass-results.js
              :language: json
              :visible: true

     .. tab:: wildcard
        :tabid: wildcard 

        .. include:: /includes/fts/extracts/fts-partial-match-wildcard-query-desc.rst

        .. io-code-block::
           :copyable: true

           .. input::
              :language: js
              :linenos:

              db.movies.aggregate([
                {
                  "$search": {
                    "index": "partial-match-tutorial",
                    "wildcard": {
                      "path": "plot",
                      "query": "*new* pur*"
                    }
                  }
                },
                {
                  "$limit": 5
                },
                {
                  "$project": {
                    "_id": 0,
                    "plot": 1
                  }
                }
              ])

           .. output:: /includes/fts/partial-match/wildcard-query-shell-compass-results.js
              :language: json
              :visible: true

...
