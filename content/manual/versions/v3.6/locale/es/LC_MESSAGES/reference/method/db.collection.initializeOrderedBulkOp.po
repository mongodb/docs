# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: 2014-04-08 19:39+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:3
msgid "db.collection.initializeOrderedBulkOp()"
msgstr ""

#: ../source/includes/fact-bulkwrite.rst:3
msgid ""
"Starting in version 3.2, MongoDB also provides the "
":method:`db.collection.bulkWrite()` method for performing bulk write "
"operations."
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:16
msgid "Definition"
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:20
msgid ""
"Initializes and returns a new :method:`Bulk()` operations builder for a "
"collection. The builder constructs an ordered list of write operations "
"that MongoDB executes in bulk."
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt
msgid "Returns"
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:24
msgid "new :method:`Bulk()` operations builder object."
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:27
msgid "Behavior"
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:30
msgid "Order of Operation"
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:32
msgid ""
"With an *ordered* operations list, MongoDB executes the write operations "
"in the list serially."
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:36
msgid "Execution of Operations"
msgstr ""

#: ../source/includes/fact-bulk-operation-ordered-list.rst:1
msgid ""
"When executing an :method:`ordered "
"<db.collection.initializeOrderedBulkOp()>` list of operations, MongoDB "
"groups the operations by the :data:`operation type <batchType>` and "
"contiguity; i.e. *contiguous* operations of the same type are grouped "
"together. For example, if an ordered list has two insert operations "
"followed by an update operation followed by another insert operation, "
"MongoDB groups the operations into three separate groups: first group "
"contains the two insert operations, second group contains the update "
"operation, and the third group contains the last insert operation. This "
"behavior is subject to change in future versions."
msgstr ""

#: ../source/includes/fact-bulk-operation-batches.rst:1
msgid ""
"Each group of operations can have at most :limit:`1000 operations <Write "
"Command Operation Limit Size>`. If a group exceeds this :limit:`limit "
"<Write Command Operation Limit Size>`, MongoDB will divide the group into"
" smaller groups of 1000 or less. For example, if the bulk operations list"
" consists of 2000 insert operations, MongoDB creates 2 groups, each with "
"1000 operations."
msgstr ""

#: ../source/includes/fact-bulk-operation-batches.rst:7
msgid ""
"The sizes and grouping mechanics are internal performance details and are"
" subject to change in future versions."
msgstr ""

#: ../source/includes/fact-bulk-operation-batches.rst:10
msgid ""
"To see how the operations are grouped for a bulk operation execution, "
"call :method:`Bulk.getOperations()` *after* the execution."
msgstr ""

#: ../source/includes/fact-bulk-operation-sharded-cluster.rst:1
msgid ""
"Executing an :method:`ordered <db.collection.initializeOrderedBulkOp()>` "
"list of operations on a sharded collection will generally be slower than "
"executing an :method:`unordered "
"<db.collection.initializeUnorderedBulkOp()>` list since with an ordered "
"list, each operation must wait for the previous operation to finish."
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:45
msgid "Error Handling"
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:47
msgid ""
"If an error occurs during the processing of one of the write operations, "
"MongoDB will return without processing any remaining write operations in "
"the list."
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:52
msgid "Examples"
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:54
msgid ""
"The following initializes a :method:`Bulk()` operations builder on the "
"``users`` collection, adds a series of write operations, and executes the"
" operations:"
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:70
msgid ":method:`db.collection.initializeUnorderedBulkOp()`"
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:72
msgid ":method:`Bulk.find()`"
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:74
msgid ":method:`Bulk.find.removeOne()`"
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:76
msgid ":method:`Bulk.execute()`"
msgstr ""

#~ msgid ""
#~ "Initializes and returns a new "
#~ ":method:`Bulk()` operations builder for a "
#~ "collection. The builder constructs an "
#~ "ordered list of write operations that"
#~ " MongoDB executes in bulk. With an"
#~ " *ordered* operations list, MongoDB "
#~ "executes the write operations in the "
#~ "list serially. If an error occurs "
#~ "during the processing of one of "
#~ "the write operations, MongoDB will "
#~ "return without processing any remaining "
#~ "write operations in the list."
#~ msgstr ""

