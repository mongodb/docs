.. _collection-method:

==================
Collection Methods
==================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. note:: ``mongosh`` Methods

   .. include:: /includes/fact-mongosh-shell-method-toc.rst

.. include:: /includes/extracts/methods-toc-explanation.rst

.. list-table::
   :widths: 30,70
   :header-rows: 1

   * - Name

     - Description

   * - :method:`db.collection.analyzeShardKey()`

     - Calculates metrics for evaluating a shard key.

   * - :method:`db.collection.aggregate()`

     - Provides access to the :ref:`aggregation pipeline <aggregation-pipeline>`.

   * - :method:`db.collection.bulkWrite()`

     - Provides bulk write operation functionality.

   * - :method:`db.collection.configureQueryAnalyzer()`

     - Configures query sampling for a collection.

   * - :method:`db.collection.count()`

     - Wraps :dbcommand:`count` to return a count of the number of documents in a collection or a view.

   * - :method:`db.collection.countDocuments()`

     - Wraps the :pipeline:`$group` aggregation stage with a :group:`$sum`
       expression to return a count of the number of documents in a
       collection or a view.
   
   * - :method:`db.collection.createIndex()`

     - Builds an index on a collection.

   * - :method:`db.collection.createIndexes()`

     - Builds one or more indexes on a collection.

   * - :method:`db.collection.dataSize()`

     - Returns the size of the collection. Wraps the :data:`~collStats.size` field in the output of the :dbcommand:`collStats`.

   * - :method:`db.collection.deleteOne()`

     - Deletes a single document in a collection.

   * - :method:`db.collection.deleteMany()`

     - Deletes multiple documents in a collection.

   * - :method:`db.collection.distinct()`

     - Returns an array of documents that have distinct values for the specified field.

   * - :method:`db.collection.drop()`

     - Removes the specified collection from the database.

   * - :method:`db.collection.dropIndex()`

     - Removes a specified index on a collection.

   * - :method:`db.collection.dropIndexes()`

     - Removes all indexes on a collection.

   * - :method:`db.collection.ensureIndex()`

     - Removed. Use :method:`db.collection.createIndex()`.

   * - :method:`db.collection.estimatedDocumentCount()`

     - Wraps :dbcommand:`count` to return an approximate count of the documents in a collection or a view.

   * - :method:`db.collection.explain()`

     - Returns information on the query execution of various methods.

   * - :method:`db.collection.find()`

     - Performs a query on a collection or a view and returns a cursor object.

   * - :method:`db.collection.findAndModify()`

     - Atomically modifies and returns a single document.

   * - :method:`db.collection.findOne()`

     - Performs a query and returns a single document.

   * - :method:`db.collection.findOneAndDelete()`

     - Finds a single document and deletes it.

   * - :method:`db.collection.findOneAndReplace()`

     - Finds a single document and replaces it.

   * - :method:`db.collection.findOneAndUpdate()`

     - Finds a single document and updates it.

   * - :method:`db.collection.getIndexes()`

     - Returns an array of documents that describe the existing indexes on a collection.

   * - :method:`db.collection.getShardDistribution()`

     - For collections in sharded clusters, :method:`db.collection.getShardDistribution()` reports data of :term:`chunk` distribution.

   * - :method:`db.collection.getShardVersion()`

     - Internal diagnostic method for sharded cluster.

   * - :method:`db.collection.hideIndex()`

     - Hides an index from the query planner.

   * - :method:`db.collection.insertOne()`

     - Inserts a new document in a collection.

   * - :method:`db.collection.insertMany()`

     - Inserts several new document in a collection.

   * - :method:`db.collection.isCapped()`

     - Reports if a collection is a :term:`capped collection`.

   * - :method:`db.collection.latencyStats()`

     - Returns latency statistics for a collection.

   * - :method:`db.collection.mapReduce()`

     - Performs map-reduce style data aggregation.

   * - :method:`db.collection.reIndex()`

     - Rebuilds all existing indexes on a collection.

   * - :method:`db.collection.remove()`

     - Deletes documents from a collection.

   * - :method:`db.collection.renameCollection()`

     - Changes the name of a collection.

   * - :method:`db.collection.replaceOne()`

     - Replaces a single document in a collection.

   * - :method:`db.collection.stats()`

     - Reports on the state of a collection. Provides a wrapper around the :dbcommand:`collStats`.

   * - :method:`db.collection.storageSize()`

     - Reports the total size used by the collection in bytes. Provides a wrapper around the :data:`~collStats.storageSize` field of the :dbcommand:`collStats` output.

   * - :method:`db.collection.totalIndexSize()`

     - Reports the total size used by the indexes on a collection. Provides a wrapper around the :data:`~collStats.totalIndexSize` field of the :dbcommand:`collStats` output.

   * - :method:`db.collection.totalSize()`

     - Reports the total size of a collection, including the size of all documents and all indexes on a collection.

   * - :method:`db.collection.unhideIndex()`

     - Unhides an index from the query planner.

   * - :method:`db.collection.updateOne()`

     - Modifies a single document in a collection.

   * - :method:`db.collection.updateMany()`

     - Modifies multiple documents in a collection.

   * - :method:`db.collection.watch()`

     - Establishes a Change Stream on a collection.

   * - :method:`db.collection.validate()`

     - Performs diagnostic operations on a collection.

.. seealso:: 
  
  To manage :atlas:`{+fts+} indexes </atlas-search/atlas-search-overview/#fts-indexes>`, 
  see :ref:`atlas-search-index-methods`.


.. toctree::
   :titlesonly: 
   :hidden: 

   db.collection.aggregate </reference/method/db.collection.aggregate>
   db.collection.analyzeShardKey </reference/method/db.collection.analyzeShardKey>
   db.collection.bulkWrite </reference/method/db.collection.bulkWrite>
   db.collection.compactStructuredEncryptionData </reference/method/db.collection.compactStructuredEncryptionData>
   db.collection.configureQueryAnalyzer </reference/method/db.collection.configureQueryAnalyzer>
   db.collection.count </reference/method/db.collection.count>
   db.collection.countDocuments </reference/method/db.collection.countDocuments>
   db.collection.createIndex </reference/method/db.collection.createIndex>
   db.collection.createIndexes </reference/method/db.collection.createIndexes>
   db.collection.dataSize </reference/method/db.collection.dataSize>
   db.collection.deleteMany </reference/method/db.collection.deleteMany>
   db.collection.deleteOne </reference/method/db.collection.deleteOne>
   db.collection.distinct </reference/method/db.collection.distinct>
   db.collection.drop </reference/method/db.collection.drop>
   db.collection.dropIndex </reference/method/db.collection.dropIndex>
   db.collection.dropIndexes </reference/method/db.collection.dropIndexes>
   db.collection.ensureIndex </reference/method/db.collection.ensureIndex>
   db.collection.estimatedDocumentCount  </reference/method/db.collection.estimatedDocumentCount>
   db.collection.explain </reference/method/db.collection.explain>
   db.collection.find </reference/method/db.collection.find>
   db.collection.findAndModify </reference/method/db.collection.findAndModify>
   db.collection.findOne </reference/method/db.collection.findOne>
   db.collection.findOneAndDelete </reference/method/db.collection.findOneAndDelete>
   db.collection.findOneAndReplace </reference/method/db.collection.findOneAndReplace>
   db.collection.findOneAndUpdate </reference/method/db.collection.findOneAndUpdate>
   db.collection.getIndexes </reference/method/db.collection.getIndexes>
   db.collection.getShardDistribution </reference/method/db.collection.getShardDistribution>
   db.collection.getShardVersion </reference/method/db.collection.getShardVersion>
   db.collection.hideIndex </reference/method/db.collection.hideIndex>
   db.collection.insert </reference/method/db.collection.insert>
   db.collection.insertMany </reference/method/db.collection.insertMany>
   db.collection.insertOne </reference/method/db.collection.insertOne>
   db.collection.isCapped </reference/method/db.collection.isCapped>
   db.collection.latencyStats </reference/method/db.collection.latencyStats>
   db.collection.mapReduce </reference/method/db.collection.mapReduce>
   db.collection.reIndex </reference/method/db.collection.reIndex>
   db.collection.remove </reference/method/db.collection.remove>
   db.collection.renameCollection </reference/method/db.collection.renameCollection>
   db.collection.replaceOne </reference/method/db.collection.replaceOne>
   db.collection.stats </reference/method/db.collection.stats>
   db.collection.storageSize </reference/method/db.collection.storageSize>
   db.collection.totalIndexSize </reference/method/db.collection.totalIndexSize>
   db.collection.totalSize </reference/method/db.collection.totalSize>
   db.collection.unhideIndex </reference/method/db.collection.unhideIndex>
   db.collection.update </reference/method/db.collection.update>
   db.collection.updateMany </reference/method/db.collection.updateMany>
   db.collection.updateOne </reference/method/db.collection.updateOne>
   db.collection.validate </reference/method/db.collection.validate>
   db.collection.watch </reference/method/db.collection.watch>
