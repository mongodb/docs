.. _analyzers-ref:

===========================
Process Data with Analyzers
===========================

.. default-domain:: mongodb

.. meta::
   :keywords: analyzers, atlas search analyzer, combine tokenizer with filter, built in analyzer, standard analyzer, simple analyzer, whitespace analyzer, language analyzer, keyword analyzer, custom analyzer, multi analyzer, create an index
   :description: Learn about the different Atlas Search analyzers and how each one controls the way Atlas Search returns the contents of a string field.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

You can control how |fts| turns a ``string`` field's contents into searchable
terms using *analyzers*. Analyzers are policies that combine a tokenizer, which
extracts tokens from text, with filters that you define. |fts|
applies your filters to the tokens to create indexable terms that correct for differences
in punctuation, capitalization, filler words, and more.

To control how |fts| creates search terms,
use an |fts| analyzer in the :ref:`index definition <ref-index-definitions>`.
You may specify an analyzer when creating an index, executing a query, or both.

.. _ref-built-in-analyzers:

Analyzers 
---------

|fts| provides the following built-in analyzers:

.. list-table::
   :header-rows: 1
   :widths: 20 80

   * - Analyzer
     - Description

   * - :ref:`Standard <ref-standard-analyzer>`
     - Uses the default analyzer for all |fts| indexes and queries.

   * - :ref:`Simple <ref-simple-analyzer>`
     - Divides text into searchable terms wherever it finds a
       non-letter character.

   * - :ref:`Whitespace <ref-whitespace-analyzer>`
     - Divides text into searchable terms wherever it finds a
       whitespace character.

   * - :ref:`Language <ref-language-analyzers>`
     - Provides a set of language-specific text analyzers.

   * - :ref:`Keyword <ref-keyword-analyzer>`
     - Indexes text fields as single terms.

You can also create your own :ref:`custom analyzer <custom-analyzers>`. 
You can specify alternate analyzers using :ref:`multi analyzer 
<ref-multi-analyzers>`.

If you don't specify an analyzer, MongoDB uses the default
:ref:`standard <ref-standard-analyzer>` analyzer.

To learn more about analyzers, see
`Analyzing Analyzers to Build The Right Search Index For Your App <https://www.mongodb.com/developer/products/atlas/analyzing-analyzers-build-search-index-app/>`__
in the MongoDB Developer Center.

.. _ref-built-in-normalizers:

Normalizers 
-----------

Normalizers produce only a single token at the end of analysis. You can
configure normalizers only in the field definition for the |fts|
:ref:`token <bson-data-types-token>` type. |fts| provides the following
normalizers:  

.. list-table::
   :header-rows: 1
   :widths: 20 80

   * - Normalizer
     - Description

   * - ``lowercase``
     - Transforms text in string fields to lowercase and creates a
       single token for the whole string.

   * - ``none``
     - Doesn't perform any transformation, but still creates a single
       token.  

.. toctree::
   :titlesonly:

   Standard </atlas-search/analyzers/standard>
   Simple </atlas-search/analyzers/simple>
   Whitespace </atlas-search/analyzers/whitespace>
   Keyword </atlas-search/analyzers/keyword>
   Language </atlas-search/analyzers/language>
   Multi </atlas-search/analyzers/multi>
   Custom </atlas-search/analyzers/custom>
