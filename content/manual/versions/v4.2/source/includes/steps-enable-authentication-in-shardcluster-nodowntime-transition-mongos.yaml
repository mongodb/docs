stepnum: 1
level: 4
title: "Create a new ``mongos`` configuration file."
ref: modify-config-files
pre: |

  For each :binary:`~bin.mongos`:

  #. Copy the existing {{program}} configuration file, giving it a
     distinct name such as ``<filename>-secure.conf`` (or ``.cfg`` if
     using Windows). You will use this new configuration file to
     transition the {{program}} to enforce authentication in the
     sharded cluster. Retain the original configuration file for backup
     purposes.

  #. To the new configuration file, add the following settings:

     - :setting:`security.transitionToAuth` set to ``true``

     - :setting:`security.keyFile` set to the keyfile path.

       If using a different internal authentication mechanism, specify
       settings appropriate for the mechanism.

     .. code-block:: yaml

        security:
           transitionToAuth: true
           keyFile: <path-to-keyfile>

     The new configuration file should contain all of the configuration
     settings previously used by the {{program}} as well as the new
     security settings.

replacement:
  program: :binary:`~bin.mongos`
---
stepnum: 2
level: 4
ref: restart-mongos
title: "One at a time, restart the ``mongos`` with the new configuration file."
pre: |

   .. note::

      If your cluster has only one :binary:`~bin.mongos`, this step results
      in downtime while the :binary:`~bin.mongos` is offline.

   Follow the procedure to restart the :binary:`~bin.mongos` instance, one
   :binary:`~bin.mongos` at a time:

   #. Connect to the :binary:`~bin.mongos` to shutdown.

   #. Use the :method:`db.shutdownServer()`
      method against the ``admin`` database to safely shut down the
      :binary:`~bin.mongos`.

      .. code-block:: javascript

         db.getSiblingDB("admin").shutdownServer()

   #. Restart :binary:`~bin.mongos` with the {{status}} configuration file, 
      specifying the path to the config file using
      :option:`--config <mongos --config>`. For example, if the {{status}} configuration file
      were named ``mongos-secure.conf``:

      .. code-block:: shell

         mongos --config <path>/mongos-secure.conf

      where ``<path>`` represents the system path to the folder
      containing the new configuration file.

   Repeat the restart process for the next :binary:`~bin.mongos` instance
   until all :binary:`~bin.mongos` instances in the sharded cluster have
   been restarted.

replacement:
  status: "new"
...
