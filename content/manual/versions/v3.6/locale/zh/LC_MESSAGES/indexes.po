#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/indexes.txt:5
msgid "Indexes"
msgstr ""

#: ../source/indexes.txt:15
msgid ""
"Indexes support the efficient execution of queries in MongoDB. Without "
"indexes, MongoDB must perform a *collection scan*, i.e. scan every "
"document in a collection, to select those documents that match the query "
"statement. If an appropriate index exists for a query, MongoDB can use "
"the index to limit the number of documents it must inspect."
msgstr ""

#: ../source/indexes.txt:22
msgid ""
"Indexes are special data structures [#b-tree]_ that store a small portion"
" of the collection's data set in an easy to traverse form. The index "
"stores the value of a specific field or set of fields, ordered by the "
"value of the field. The ordering of the index entries supports efficient "
"equality matches and range-based query operations. In addition, MongoDB "
"can return sorted results by using the ordering in the index."
msgstr ""

#: ../source/indexes.txt:30
msgid ""
"The following diagram illustrates a query that selects and orders the "
"matching documents using an index:"
msgstr ""

#: ../source/indexes.txt:35
msgid ""
"Fundamentally, indexes in MongoDB are similar to indexes in other "
"database systems. MongoDB defines indexes at the :term:`collection` level"
" and supports indexes on any field or sub-field of the documents in a "
"MongoDB collection."
msgstr ""

#: ../source/indexes.txt:47
msgid "Default ``_id`` Index"
msgstr ""

#: ../source/indexes.txt:49
msgid ""
"MongoDB creates a :ref:`unique index <index-type-unique>` on the "
":ref:`_id <document-id-field>` field during the creation of a collection."
" The ``_id`` index prevents clients from inserting two documents with the"
" same value for the ``_id`` field. You cannot drop this index on the "
"``_id`` field."
msgstr ""

#: ../source/indexes.txt:57
msgid ""
"In :term:`sharded clusters <sharded cluster>`, if you do *not* use the "
"``_id`` field as the :term:`shard key`, then your application **must** "
"ensure the uniqueness of the values in the ``_id`` field to prevent "
"errors.  This is most-often done by using a standard auto-generated "
":term:`ObjectId`."
msgstr ""

#: ../source/indexes.txt:64
msgid "Create an Index"
msgstr ""

#: ../source/indexes.txt:68
msgid "MongoDB indexes use a B-tree data structure."
msgstr ""

#: ../source/indexes.txt:73
msgid "Index Types"
msgstr ""

#: ../source/indexes.txt:75
msgid ""
"MongoDB provides a number of different index types to support specific "
"types of data and queries."
msgstr ""

#: ../source/indexes.txt:81
msgid "Single Field"
msgstr ""

#: ../source/indexes.txt:83
msgid ""
"In addition to the MongoDB-defined ``_id`` index, MongoDB supports the "
"creation of user-defined ascending/descending indexes on a :doc:`single "
"field of a document </core/index-single>`."
msgstr ""

#: ../source/indexes.txt:89
msgid ""
"For a single-field index and sort operations, the sort order (i.e. "
"ascending or descending) of the index key does not matter because MongoDB"
" can traverse the index in either direction."
msgstr ""

#: ../source/indexes.txt:93
msgid ""
"See :doc:`/core/index-single` and :ref:`sort-results-single-field` for "
"more information on single-field indexes."
msgstr ""

#: ../source/indexes.txt:97
msgid "Compound Index"
msgstr ""

#: ../source/indexes.txt:99
msgid ""
"MongoDB also supports user-defined indexes on multiple fields, i.e. "
":doc:`compound indexes </core/index-compound>`."
msgstr ""

#: ../source/indexes.txt:102
msgid ""
"The order of fields listed in a compound index has significance. For "
"instance, if a compound index consists of ``{ userid: 1, score: -1 }``, "
"the index sorts first by ``userid`` and then, within each ``userid`` "
"value, sorts by ``score``."
msgstr ""

#: ../source/indexes.txt:109
msgid ""
"For compound indexes and sort operations, the sort order (i.e. ascending "
"or descending) of the index keys can determine whether the index can "
"support a sort operation. See :ref:`index-ascending-and-descending` for "
"more information on the impact of index order on results in compound "
"indexes."
msgstr ""

#: ../source/indexes.txt:115
msgid ""
"See :doc:`/core/index-compound` and :ref:`sort-on-multiple-fields` for "
"more information on compound indexes."
msgstr ""

#: ../source/indexes.txt:119
msgid "Multikey Index"
msgstr ""

#: ../source/indexes.txt:121
msgid ""
"MongoDB uses :doc:`multikey indexes </core/index-multikey>` to index the "
"content stored in arrays. If you index a field that holds an array value,"
" MongoDB creates separate index entries for *every* element of the array."
" These :doc:`multikey indexes </core/index-multikey>` allow queries to "
"select documents that contain arrays by matching on element or elements "
"of the arrays. MongoDB automatically determines whether to create a "
"multikey index if the indexed field contains an array value; you do not "
"need to explicitly specify the multikey type."
msgstr ""

#: ../source/indexes.txt:132
msgid ""
"See :doc:`/core/index-multikey` and :doc:`/core/multikey-index-bounds` "
"for more information on multikey indexes."
msgstr ""

#: ../source/indexes.txt:136
msgid "Geospatial Index"
msgstr ""

#: ../source/indexes.txt:138
msgid ""
"To support efficient queries of geospatial coordinate data, MongoDB "
"provides two special indexes: :doc:`2d indexes </core/2d>` that uses "
"planar geometry when returning results and :doc:`2dsphere indexes "
"</core/2dsphere>` that use spherical geometry to return results."
msgstr ""

#: ../source/indexes.txt:143
msgid ""
"See :doc:`/core/geospatial-indexes` for a high level introduction to "
"geospatial indexes."
msgstr ""

#: ../source/indexes.txt:147
msgid "Text Indexes"
msgstr ""

#: ../source/indexes.txt:149
msgid ""
"MongoDB provides a ``text`` index type that supports searching for string"
" content in a collection. These text indexes do not store language-"
"specific *stop* words (e.g. \"the\", \"a\", \"or\") and *stem* the words "
"in a collection to only store root words."
msgstr ""

#: ../source/indexes.txt:154
msgid ""
"See :doc:`/core/index-text` for more information on text indexes and "
"search."
msgstr ""

#: ../source/indexes.txt:158
msgid "Hashed Indexes"
msgstr ""

#: ../source/indexes.txt:160
msgid ""
"To support :ref:`hash based sharding <sharding-hashed-sharding>`, MongoDB"
" provides a :doc:`hashed index </core/index-hashed>` type, which indexes "
"the hash of the value of a field. These indexes have a more random "
"distribution of values along their range, but *only* support equality "
"matches and cannot support range-based queries."
msgstr ""

#: ../source/indexes.txt:167
msgid "Index Properties"
msgstr ""

#: ../source/indexes.txt:172
msgid "Unique Indexes"
msgstr ""

#: ../source/indexes.txt:174
msgid ""
"The :doc:`unique </core/index-unique>` property for an index causes "
"MongoDB to reject duplicate values for the indexed field. Other than the "
"unique constraint, unique indexes are functionally interchangeable with "
"other MongoDB indexes."
msgstr ""

#: ../source/indexes.txt:182
msgid "Partial Indexes"
msgstr ""

#: ../source/indexes.txt:186
msgid ""
":doc:`Partial indexes </core/index-partial>` only index the documents in "
"a collection that meet a specified filter expression. By indexing a "
"subset of the documents in a collection, partial indexes have lower "
"storage requirements and reduced performance costs for index creation and"
" maintenance."
msgstr ""

#: ../source/indexes.txt:192
msgid ""
"Partial indexes offer a superset of the functionality of sparse indexes "
"and should be preferred over sparse indexes."
msgstr ""

#: ../source/indexes.txt:196
msgid "Sparse Indexes"
msgstr ""

#: ../source/indexes.txt:198
msgid ""
"The :doc:`sparse </core/index-sparse>` property of an index ensures that "
"the index only contain entries for documents that have the indexed field."
" The index skips documents that *do not* have the indexed field."
msgstr ""

#: ../source/indexes.txt:202
msgid ""
"You can combine the sparse index option with the unique index option to "
"reject documents that have duplicate values for a field but ignore "
"documents that do not have the indexed key."
msgstr ""

#: ../source/indexes.txt:209
msgid "TTL Indexes"
msgstr ""

#: ../source/indexes.txt:211
msgid ""
":doc:`TTL indexes </core/index-ttl>` are special indexes that MongoDB can"
" use to automatically remove documents from a collection after a certain "
"amount of time. This is ideal for certain types of information like "
"machine generated event data, logs, and session information that only "
"need to persist in a database for a finite amount of time."
msgstr ""

#: ../source/indexes.txt:217
msgid "See: :doc:`/tutorial/expire-data` for implementation instructions."
msgstr ""

#: ../source/indexes.txt:220
msgid "Index Use"
msgstr ""

#: ../source/indexes.txt:222
msgid ""
"Indexes can improve the efficiency of read operations. The "
":doc:`/tutorial/analyze-query-plan` tutorial provides an example of the "
"execution statistics of a query with and without an index."
msgstr ""

#: ../source/indexes.txt:226
msgid ""
"For information on how MongoDB chooses an index to use, see :ref:`query "
"optimizer <read-operations-query-optimization>`."
msgstr ""

#: ../source/indexes.txt:230
msgid "Indexes and Collation"
msgstr ""

#: ../source/includes/extracts/collation-description.rst:1
msgid ""
":doc:`Collation </reference/collation>` allows users to specify language-"
"specific rules for string comparison, such as rules for lettercase and "
"accent marks."
msgstr ""

#: ../source/includes/fact-collation-driver.rst:3
msgid ""
"The following examples illustrate indexes and collation in the "
":doc:`Mongo Shell </mongo/>`."
msgstr ""

#: ../source/includes/fact-collation-driver.rst:6
msgid ""
"Refer to your `driver documentation <api.mongodb.com>`_ for instructions "
"on creating indexes with collation in your specific driver."
msgstr ""

#: ../source/includes/extracts/collation-index-use.rst:1
msgid ""
"To use an index for string comparisons, an operation must also specify "
"the same collation. That is, an index with a collation cannot support an "
"operation that performs string comparisons on the indexed fields if the "
"operation specifies a different collation."
msgstr ""

#: ../source/includes/extracts/collation-index-use.rst:6
msgid ""
"For example, the collection ``myColl`` has an index on a string field "
"``category`` with the collation locale ``\"fr\"``."
msgstr ""

#: ../source/includes/extracts/collation-index-use.rst:13
msgid ""
"The following query operation, which specifies the same collation as the "
"index, can use the index:"
msgstr ""

#: ../source/includes/extracts/collation-index-use.rst:20
msgid ""
"However, the following query operation, which by default uses the "
"\"simple\" binary collator, cannot use the index:"
msgstr ""

#: ../source/includes/extracts/collation-index-use.rst:27
msgid ""
"For a compound index where the index prefix keys are not strings, arrays,"
" and embedded documents, an operation that specifies a different "
"collation can still use the index to support comparisons on the index "
"prefix keys."
msgstr ""

#: ../source/includes/extracts/collation-index-use.rst:32
msgid ""
"For example, the collection ``myColl`` has a compound index on the "
"numeric fields ``score`` and ``price`` and the string field ``category``;"
" the index is created with the  collation locale ``\"fr\"`` for string "
"comparisons:"
msgstr ""

#: ../source/includes/extracts/collation-index-use.rst:43
msgid ""
"The following operations, which use ``\"simple\"`` binary collation for "
"string comparisons, can use the index:"
msgstr ""

#: ../source/includes/extracts/collation-index-use.rst:51
msgid ""
"The following operation, which uses ``\"simple\"`` binary collation for "
"string comparisons on the indexed ``category`` field, can use the index "
"to fulfill only the ``score: 5`` portion of the query:"
msgstr ""

#: ../source/indexes.txt:238
msgid ""
"For more information on collation, see the :doc:`collation reference page"
" </reference/collation/>`."
msgstr ""

#: ../source/includes/extracts/collation-index-type-restrictions.rst:2
msgid ""
"The following indexes only support simple binary comparison and do not "
"support :ref:`collation <collation>`:"
msgstr ""

#: ../source/includes/extracts/collation-index-type-restrictions.rst:5
msgid ":doc:`text </core/index-text>` indexes,"
msgstr ""

#: ../source/includes/extracts/collation-index-type-restrictions.rst:7
msgid ":doc:`2d </core/2d>` indexes, and"
msgstr ""

#: ../source/includes/extracts/collation-index-type-restrictions.rst:9
msgid ":doc:`geoHaystack </core/geohaystack>` indexes."
msgstr ""

#: ../source/indexes.txt:244
msgid "Covered Queries"
msgstr ""

#: ../source/indexes.txt:246
msgid ""
"When the query criteria and the :term:`projection` of a query include "
"*only* the indexed fields, MongoDB returns results directly from the "
"index *without* scanning any documents or bringing documents into memory."
" These covered queries can be *very* efficient."
msgstr ""

#: ../source/indexes.txt:253
msgid ""
"For more information on covered queries, see :ref:`read-operations-"
"covered-query`."
msgstr ""

#: ../source/indexes.txt:257
msgid "Index Intersection"
msgstr ""

#: ../source/indexes.txt:261
msgid ""
"MongoDB can use the :doc:`intersection of indexes </core/index-"
"intersection>` to fulfill queries. For queries that specify compound "
"query conditions, if one index can fulfill a part of a query condition, "
"and another index can fulfill another part of the query condition, then "
"MongoDB can use the intersection of the two indexes to fulfill the query."
" Whether the use of a compound index or the use of an index intersection "
"is more efficient depends on the particular query and the system."
msgstr ""

#: ../source/indexes.txt:270
msgid "For details on index intersection, see :doc:`/core/index-intersection`."
msgstr ""

#: ../source/indexes.txt:273
msgid "Restrictions"
msgstr ""

#: ../source/indexes.txt:275
msgid ""
"Certain restrictions apply to indexes, such as the length of the index "
"keys or the number of indexes per collection. See :ref:`Index Limitations"
" <index-limitations>` for details."
msgstr ""

#: ../source/indexes.txt:280
msgid "Additional Considerations"
msgstr ""

#: ../source/indexes.txt:282
msgid ""
"Although indexes can improve query performances, indexes also present "
"some operational considerations. See :ref:`Operational Considerations for"
" Indexes <data-model-indexes>` for more information."
msgstr ""

#: ../source/includes/index-tutorials-considerations.rst:1
msgid ""
"If your collection holds a large amount of data, and your application "
"needs to be able to access the data while building the index, consider "
"building the index in the background, as described in :ref:`index-"
"creation-background`."
msgstr ""

#: ../source/includes/note-build-indexes-on-replica-sets.rst:1
msgid ""
"To build or rebuild indexes for a :term:`replica set`, see :ref:`index-"
"building-replica-sets`."
msgstr ""

#: ../source/includes/index-tutorials-considerations.rst:8
msgid ""
"Some drivers may specify indexes, using ``NumberLong(1)`` rather than "
"``1`` as the specification. This does not have any affect on the "
"resulting index."
msgstr ""

#: ../source/includes/extracts/additional-resources-quick-reference.rst:4
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-quick-reference.rst:6
msgid ""
"`Quick Reference Cards <https://www.mongodb.com/lp/misc/quick-reference-"
"cards?jmp=docs>`_"
msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid ":doc:`/core/indexes-introduction`"
#~ msgstr ""

#~ msgid "An introduction to indexes in MongoDB."
#~ msgstr ""

#~ msgid ":doc:`/core/indexes`"
#~ msgstr ""

#~ msgid ":doc:`/core/index-types`"
#~ msgstr ""

#~ msgid ":doc:`/core/index-properties`"
#~ msgstr ""

#~ msgid "The properties you can specify when building indexes."
#~ msgstr ""

#~ msgid ":doc:`/core/index-creation`"
#~ msgstr ""

#~ msgid "The options available when creating indexes."
#~ msgstr ""

#~ msgid ":doc:`/core/index-intersection`"
#~ msgstr ""

#~ msgid "The use of index intersection to fulfill a query."
#~ msgstr ""

#~ msgid ":doc:`/administration/indexes`"
#~ msgstr ""

#~ msgid ":doc:`/reference/indexes`"
#~ msgstr ""

#~ msgid "Reference material for indexes in MongoDB."
#~ msgstr ""

#~ msgid ""
#~ "To support efficient queries of "
#~ "geospatial coordinate data, MongoDB provides"
#~ " two special indexes: :doc:`2d indexes "
#~ "</core/2d>` that uses planar geometry "
#~ "when returning results and :doc:`2sphere "
#~ "indexes </core/2dsphere>` that use spherical"
#~ " geometry to return results."
#~ msgstr ""

# 3da327c399ae409f8f6cfec4aab5a4cc
#~ msgid "On this page"
#~ msgstr ""

# 37b1f4124697426e80fe6a537eebd8c7
#~ msgid ""
#~ "To create an index, use "
#~ ":method:`db.collection.createIndex()` or a similar"
#~ " :api:`method from your driver <>`."
#~ msgstr ""

# 22fe82b0c3314c3089ae520b8e4f1234
#~ msgid ""
#~ "The :method:`db.collection.createIndex()` method "
#~ "only creates an index if an index"
#~ " of the same specification does not"
#~ " already exist."
#~ msgstr ""

# 2e8c8e6abaa64b93b01ddc19fd2fac88
#~ msgid ""
#~ "When the query criteria and the "
#~ ":term:`projection` of a query include "
#~ "*only* the indexed fields, MongoDB will"
#~ " return results directly from the "
#~ "index *without* scanning any documents "
#~ "or bringing documents into memory. These"
#~ " covered queries can be *very* "
#~ "efficient."
#~ msgstr ""

# dd5c42e952ff4840976c8814009d768e
#~ msgid "_id index"
#~ msgstr ""

# c0a2a2901dfb431f8953bfa55691ce67
# 0b412da03c894d9ba2cd5a85af9e312a
#~ msgid "_id"
#~ msgstr ""

# 0b412da03c894d9ba2cd5a85af9e312a
#~ msgid "index"
#~ msgstr ""

# 0223582727b747e59e372d0e59fa08be
#~ msgid "index types"
#~ msgstr ""

# 0223582727b747e59e372d0e59fa08be
#~ msgid "primary key"
#~ msgstr ""

