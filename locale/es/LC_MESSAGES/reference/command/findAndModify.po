# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: 2013-12-16 23:20+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# 02dd03ee8917458987edefac50c7f6bf
#: ../source/reference/command/findAndModify.txt:3
msgid "findAndModify"
msgstr ""

# 1798affc56e448b08469afea75b6d310
#: ../source/reference/command/findAndModify.txt
msgid "On this page"
msgstr ""

# f8570a2015a5431ea50b90cf7ea87489
#: ../source/reference/command/findAndModify.txt:18
msgid "Definition"
msgstr ""

# 9c2e9942560f4eb384f30cbcc1036097
#: ../source/reference/command/findAndModify.txt:22
msgid ""
"The :dbcommand:`findAndModify` command modifies and returns a single "
"document. By default, the returned document does not include the "
"modifications made on the update. To return the document with the "
"modifications made on the update, use the ``new`` option."
msgstr ""

# d50084dbca884cb29e7a802310a86659
#: ../source/reference/command/findAndModify.txt:27
msgid "The command has the following syntax:"
msgstr ""

# 56b82834115747f59f6c9440decc8a59
#: ../source/reference/command/findAndModify.txt:45
msgid "The :dbcommand:`findAndModify` command takes the following fields:"
msgstr ""

# a6427b164e4b4e9682890575d6b11ee6
#: ../source/reference/command/findAndModify.txt:53
msgid "Output"
msgstr ""

# 3416160b575a46fa95d4e201185f2f58
#: ../source/reference/command/findAndModify.txt:55
msgid ""
"The :dbcommand:`findAndModify` command returns a document with the "
"following fields:"
msgstr ""

# db2c633146884285b8c8f7e6992f4af6
#: ../source/reference/command/findAndModify.txt:63
msgid "``lastErrorObject``"
msgstr ""

# 7f7b299ce2c74c0eb7ac1584677d38ea
#: ../source/reference/command/findAndModify.txt:65
msgid "The ``lastErrorObject`` embedded document contains the following fields:"
msgstr ""

# f5707b71e4b5484ebb996661183f4b6b
#: ../source/reference/command/findAndModify.txt:72
msgid "``value``"
msgstr ""

# 44fa38ffac1f4c9e87fd381470d5452d
#: ../source/reference/command/findAndModify.txt:74
msgid ""
"For ``remove`` operations, ``value`` contains the removed document if the"
" query matches a document. If the query does not match a document to "
"remove, ``value`` contains ``null``."
msgstr ""

# 8681ef513ddf4d7fa878f0eb83cb1ed9
#: ../source/reference/command/findAndModify.txt:78
msgid ""
"For ``update`` operations, the ``value`` embedded document contains the "
"following:"
msgstr ""

# b10560a8854c4b32a93189e60c76156e
#: ../source/includes/extracts/fact-findandmodify-command-return.rst:1
msgid "If the ``new`` parameter is not set or is ``false``:"
msgstr ""

# c25507b5241a4b56833aa008537b1893
#: ../source/includes/extracts/fact-findandmodify-command-return.rst:3
msgid "the pre-modification document if the query matches a document;"
msgstr ""

# 6ecb1705d1c24e45aa5e166abceb15cc
# 32afab0431e04765b9ed48a8600d6f3f
#: ../source/includes/extracts/fact-findandmodify-command-return.rst:5
#: ../source/includes/extracts/fact-findandmodify-command-return.rst:13
msgid "otherwise, ``null``."
msgstr ""

# da5047a83c0b43c5965a986554e2b806
#: ../source/includes/extracts/fact-findandmodify-command-return.rst:7
msgid "If ``new`` is ``true``:"
msgstr ""

# 4884ffb711f54a05be60b6d7a39aa043
#: ../source/includes/extracts/fact-findandmodify-command-return.rst:9
msgid "the modified document if the query returns a match;"
msgstr ""

# bd4385bc25264d8ebbd464f302736063
#: ../source/includes/extracts/fact-findandmodify-command-return.rst:11
msgid ""
"the inserted document if ``upsert: true`` and no document matches the "
"query;"
msgstr ""

# 0ac0fee1a3b94e118c3e7c2fe49e208b
#: ../source/includes/extracts/fact-findandmodify-command-return.rst:17
msgid ""
"In previous versions, if for the update, ``sort`` is specified, and "
"``upsert: true``, and the ``new`` option is not set or ``new: false``, "
":dbcommand:`findAndModify` returns an empty document ``{}`` in the  "
"``value`` field instead of ``null``."
msgstr ""

# 182b3a6cd6a749be9634bfdc66948292
#: ../source/reference/command/findAndModify.txt:84
msgid "Behavior"
msgstr ""

# 0296f2580e41457ebe316b80afa8d3d4
#: ../source/reference/command/findAndModify.txt:87
msgid "Upsert and Unique Index"
msgstr ""

# 380245c5c4bc410198bce2fc9c91749a
#: ../source/reference/command/findAndModify.txt:89
msgid ""
"When the :dbcommand:`findAndModify` command includes the ``upsert: true``"
" option **and** the query field(s) is not uniquely indexed, the command "
"could insert a document multiple times in certain circumstances."
msgstr ""

# 5d659400ed8d4f0b9c1950e3ecff2e2d
#: ../source/reference/command/findAndModify.txt:93
msgid ""
"Consider an example where no document with the name ``Andy`` exists and "
"multiple clients issue the following command:"
msgstr ""

# 8518132a00cb41f6a13c21e765a82064
#: ../source/reference/command/findAndModify.txt:108
msgid ""
"If all the commands finish the ``query`` phase before any command starts "
"the ``modify`` phase, **and** there is no unique index on the ``name`` "
"field, the commands may each perform an upsert, creating multiple "
"duplicate documents."
msgstr ""

# f1f81f8f26884b198cb9d9322889d209
#: ../source/reference/command/findAndModify.txt:113
msgid ""
"To prevent the creation of multiple duplicate documents, create a "
":ref:`unique index <index-type-unique>` on the ``name`` field. With the "
"unique index in place, then the multiple :dbcommand:`findAndModify` "
"commands will exhibit one of the following behaviors:"
msgstr ""

# f3dccedd51c74a2cbf262a1272b0fde0
#: ../source/reference/command/findAndModify.txt:119
msgid ""
"Exactly one :dbcommand:`findAndModify` successfully inserts a new "
"document."
msgstr ""

# 350245b81b014206baed1e32c7f8bbdf
#: ../source/reference/command/findAndModify.txt:122
msgid ""
"Zero or more :dbcommand:`findAndModify` commands update the newly "
"inserted document."
msgstr ""

# 042507b8e1a34d5ca63c9d75537a361f
#: ../source/reference/command/findAndModify.txt:125
msgid ""
"Zero or more :dbcommand:`findAndModify` commands fail when they attempt "
"to insert a duplicate. If the command fails due to a unique index "
"constraint violation, you can retry the command. Absent a delete of the "
"document, the retry should not fail."
msgstr ""

# bfa5fb9b244847c78aa8f035254d31bf
#: ../source/reference/command/findAndModify.txt:131
msgid "Sharded Collections"
msgstr ""

# 7462913b646c4d20b4d922de54f02859
#: ../source/reference/command/findAndModify.txt:133
msgid ""
"When using :dbcommand:`findAndModify` in a :term:`sharded <sharding>` "
"environment, the ``query`` must contain the :term:`shard key` for all "
"operations against the shard cluster. :dbcommand:`findAndModify` "
"operations issued against :program:`mongos` instances for non-sharded "
"collections function normally."
msgstr ""

# fd7bcedcac454bac8b7640368d4f94de
#: ../source/reference/command/findAndModify.txt:141
msgid "Document Validation"
msgstr ""

# 32a096b611e840c4a1157e8755d9367b
#: ../source/includes/extracts/bypassDocumentValidation-findAndModify.rst:1
msgid ""
"The :dbcommand:`findAndModify` command adds support for the "
"``bypassDocumentValidation`` option, which lets you bypass :ref:`document"
" validation <3.2-rel-notes-document-validation>` when inserting or "
"updating documents in a collection with validation rules."
msgstr ""

# d2742fa2d4404b28a793523e21d823ff
#: ../source/reference/command/findAndModify.txt:148
msgid "Comparisons with the ``update`` Method"
msgstr ""

# f207b0d8e92b44009b0bda734999d65b
#: ../source/includes/fact-findAndModify-update-comparison.rst:1
msgid ""
"When updating a document, |operation| and the "
":method:`~db.collection.update()` method operate differently:"
msgstr ""

# e8f7cee94d224b95a580d91226ae41d2
#: ../source/includes/fact-findAndModify-update-comparison.rst:4
msgid ""
"By default, both operations modify a single document. However, the "
":method:`~db.collection.update()` method with its ``multi`` option can "
"modify more than one document."
msgstr ""

# e2d41a92eca84bc0bce4e6caec0b6631
#: ../source/includes/fact-findAndModify-update-comparison.rst:8
msgid ""
"If multiple documents match the update criteria, for |operation|, you can"
" specify a ``sort`` to provide some measure of control on which document "
"to update."
msgstr ""

# 6392435e8d2c4617a64bf771b527e60a
#: ../source/includes/fact-findAndModify-update-comparison.rst:12
msgid ""
"With the default behavior of the :method:`~db.collection.update()` "
"method, you cannot specify which single document to update when multiple "
"documents match."
msgstr ""

# e28b07275c0b459997590f43d9e85ff8
#: ../source/includes/fact-findAndModify-update-comparison.rst:16
msgid ""
"By default, |operation| returns |return-object|. To obtain the updated "
"document, use the ``new`` option."
msgstr ""

# bec08d37123f4e53a5e519aab45cef07
#: ../source/includes/fact-findAndModify-update-comparison.rst:19
msgid ""
"The :method:`~db.collection.update()` method returns a "
":method:`WriteResult` object that contains the status of the operation. "
"To return the updated document, use the :method:`~db.collection.find()` "
"method. However, other updates may have modified the document between "
"your update and the document retrieval. Also, if the update modified only"
" a single document but multiple documents matched, you will need to use "
"additional logic to identify the updated document."
msgstr ""

# af0b968cbdb34b549c76fc6bc3923855
#: ../source/includes/fact-findAndModify-update-comparison.rst:27
msgid ""
"When modifying a *single* document, both |operation| and the "
":method:`~db.collection.update()` method *atomically* update the "
"document. See :doc:`/core/write-operations-atomicity` for more details "
"about interactions and order of operations of these methods."
msgstr ""

# 921454d9b2f44859a1b455c77f2e1c60
#: ../source/reference/command/findAndModify.txt:157
msgid "Examples"
msgstr ""

# b7c52450d3e24dc491fb74e4915cbc70
#: ../source/reference/command/findAndModify.txt:160
msgid "Update and Return"
msgstr ""

# 5314ce7a432b430f80954c824f255fba
#: ../source/reference/command/findAndModify.txt:162
msgid ""
"The following command updates an existing document in the ``people`` "
"collection where the document matches the ``query`` criteria:"
msgstr ""

# 142de0564dbc46148d94225c85308eed
#: ../source/reference/command/findAndModify.txt:176
msgid "This command performs the following actions:"
msgstr ""

# 7fedbde2a4e84be5a39a39597762ed94
#: ../source/reference/command/findAndModify.txt:178
msgid ""
"The ``query`` finds a document in the ``people`` collection where the "
"``name`` field has the value ``Tom``, the ``state`` field has the value "
"``active`` and the ``rating`` field has a value :operator:`greater than "
"<$gt>` 10."
msgstr ""

# 4941f09aedae4a179ea6e50de57186a9
#: ../source/reference/command/findAndModify.txt:183
msgid ""
"The ``sort`` orders the results of the query in ascending order. If "
"multiple documents meet the ``query`` condition, the command will select "
"for modification the first document as ordered by this ``sort``."
msgstr ""

# c0513440c7e941b98c7b574688f12e68
#: ../source/reference/command/findAndModify.txt:188
msgid ""
"The ``update`` :operator:`increments <$inc>` the value of the ``score`` "
"field by 1."
msgstr ""

# 433da3c111aa4014a6f0c4b916e18deb
#: ../source/reference/command/findAndModify.txt:191
msgid "The command returns a document with the following fields:"
msgstr ""

# f7e149d551dd4ad7894d9eb23aed2f9f
#: ../source/reference/command/findAndModify.txt:193
msgid ""
"The ``lastErrorObject`` field that contains the details of the command, "
"including the field ``updatedExisting`` which is ``true``, and"
msgstr ""

# 317f1a482bc84e58b24de83acac26efe
#: ../source/reference/command/findAndModify.txt:197
msgid ""
"The ``value`` field that contains the original (i.e. pre-modification) "
"document selected for this update:"
msgstr ""

# fefe4487dda84816beda081482f5aacb
#: ../source/reference/command/findAndModify.txt:222
msgid ""
"To return the modified document in the ``value`` field, add the "
"``new:true`` option to the command."
msgstr ""

# 88f69a1f65cc4d3c827c9b31e42a51b8
#: ../source/reference/command/findAndModify.txt:225
msgid ""
"If no document match the ``query`` condition, the command returns a "
"document that contains ``null`` in the ``value`` field:"
msgstr ""

# 4868b3ba735e4d4a87321116731380a4
#: ../source/reference/command/findAndModify.txt:233
msgid ""
"The :program:`mongo` shell and many :term:`drivers <driver>` provide a "
":method:`~db.collection.findAndModify()` helper method. Using the shell "
"helper, this previous operation can take the following form:"
msgstr ""

# 57bad05f9d7944aead3396ae79928d52
#: ../source/reference/command/findAndModify.txt:246
msgid ""
"However, the :method:`~db.collection.findAndModify()` shell helper method"
" returns only the unmodified document, or if ``new`` is ``true``, the "
"modified document."
msgstr ""

# 775899df13fc4e689b227159b89bdc60
#: ../source/reference/command/findAndModify.txt:261
msgid "``upsert: true``"
msgstr ""

# 4f8368fe926c481ba88dcca68f87ca52
#: ../source/reference/command/findAndModify.txt:263
msgid ""
"The following :dbcommand:`findAndModify` command includes the ``upsert: "
"true`` option for the ``update`` operation to either update a matching "
"document or, if no matching document exists, create a new document:"
msgstr ""

# afdc9bf1324d4a2caacad821259ce983
#: ../source/reference/command/findAndModify.txt:279
msgid "If the command finds a matching document, the command performs an update."
msgstr ""

# c8b6a1d160004129bf111feeda4ce79e
#: ../source/reference/command/findAndModify.txt:281
msgid ""
"If the command does **not** find a matching document, the ``update`` with"
" :term:`upsert: true <upsert>` operation results in an insertion and "
"returns a document with the following fields:"
msgstr ""

# 046358a883b6498983076576b8a3bc3e
#: ../source/reference/command/findAndModify.txt:285
msgid ""
"The ``lastErrorObject`` field that contains the details of the command, "
"including the field ``upserted`` that contains the ``ObjectId`` of the "
"newly inserted document, and"
msgstr ""

# fc75cd5457364b54af57dddd5e276815
#: ../source/reference/command/findAndModify.txt:289
msgid "The ``value`` field containing ``null``."
msgstr ""

# 01cdb734d2d04546877be5f2f9497237
#: ../source/reference/command/findAndModify.txt:304
msgid "Return New Document"
msgstr ""

# bfb9eed896b74156bad2bc26c7d20c1a
#: ../source/reference/command/findAndModify.txt:306
msgid ""
"The following :dbcommand:`findAndModify` command includes both ``upsert: "
"true`` option and the ``new:true`` option. The command either updates a "
"matching document and returns the updated document or, if no matching "
"document exists, inserts a document and returns the newly inserted "
"document in the ``value`` field."
msgstr ""

# b1d0b5d8e70c4230a115c6df66c80ad9
#: ../source/reference/command/findAndModify.txt:312
msgid ""
"In the following example, no document in the ``people`` collection "
"matches the ``query`` condition:"
msgstr ""

# eb9a1b70697f468db526f5c595723175
#: ../source/reference/command/findAndModify.txt:328
msgid "The command returns the newly inserted document in the ``value`` field:"
msgstr ""

# 7535dcda02564f46afc24dc75740acd6
#: ../source/reference/command/findAndModify.txt:354
msgid "Sort and Remove"
msgstr ""

# d375809826264cbfb859744dcec42a3f
#: ../source/reference/command/findAndModify.txt:356
msgid ""
"By including a ``sort`` specification on the ``rating`` field, the "
"following example removes from the ``people`` collection a single "
"document with the ``state`` value of ``active`` and the lowest ``rating``"
" among the matching documents:"
msgstr ""

# 0576ef6f3fac4cfeb09e45c16c3c5343
#: ../source/reference/command/findAndModify.txt:372
msgid "The command returns the deleted document:"
msgstr ""

# d1a5df0f88814900af713b8d905a91e7
#: ../source/reference/command/findAndModify.txt:396
msgid "Specify Collation"
msgstr ""

# 98e1c6fa5bff4a9d8ea3f5c80f2a89c9
#: ../source/includes/extracts/collation-description.rst:1
msgid ""
":doc:`Collation </reference/collation>` allows users to specify language-"
"specific rules for string comparison, such as rules for lettercase and "
"accent marks."
msgstr ""

# 32723bea8be34bd8a3e182bc21156b2d
#: ../source/reference/command/findAndModify.txt:400
msgid "A collection ``myColl`` has the following documents:"
msgstr ""

# c1351a117981402ab9efb14ce724f900
#: ../source/reference/command/findAndModify.txt:408
msgid "The following operation includes the :ref:`collation <collation>` option:"
msgstr ""

# 3e5efbaffd7e40618db269873ac295df
#: ../source/reference/command/findAndModify.txt:423
msgid "The operation returns the following document:"
msgstr ""

# 8ac1c9603fbb48c99bd1acce50767332
#: ../source/reference/command/findAndModify.txt:440
msgid ":ref:`perform-findAndModify-linearizable-reads`"
msgstr ""

#~ msgid ""
#~ "The :dbcommand:`findAndModify` command atomically"
#~ " modifies and returns a single "
#~ "document. By default, the returned "
#~ "document does not include the "
#~ "modifications made on the update. To "
#~ "return the document with the "
#~ "modifications made on the update, use"
#~ " the ``new`` option."
#~ msgstr ""

#~ msgid "Required. The collection against which to run the command."
#~ msgstr ""

#~ msgid ""
#~ "Optional. Specifies the selection criteria "
#~ "for the modification. The ``query`` "
#~ "field employs the same :ref:`query "
#~ "selectors <query-selectors>` as used in"
#~ " the :method:`~db.collection.find()` method. "
#~ "Although the query may match multiple"
#~ " documents, :dbcommand:`findAndModify` will only"
#~ " select one document to modify."
#~ msgstr ""

#~ msgid ""
#~ "Optional. Determines which document the "
#~ "operation will modify if the query "
#~ "selects multiple documents. "
#~ ":dbcommand:`findAndModify` will modify the "
#~ "first document in the sort order "
#~ "specified by this argument."
#~ msgstr ""

#~ msgid ""
#~ "Must specify either the ``remove`` or"
#~ " the ``update`` field in the "
#~ ":dbcommand:`findAndModify` command. When ``true``,"
#~ " removes the selected document. The "
#~ "default is ``false``."
#~ msgstr ""

#~ msgid ""
#~ "Must specify either the ``remove`` or"
#~ " the ``update`` field in the "
#~ ":dbcommand:`findAndModify` command. The ``update``"
#~ " field employs the same :ref:`update "
#~ "operators <update-operators>` or ``field: "
#~ "value`` specifications to modify the "
#~ "selected document."
#~ msgstr ""

#~ msgid ""
#~ "Optional. When ``true``, returns the "
#~ "modified document rather than the "
#~ "original. The :dbcommand:`findAndModify` method "
#~ "ignores the ``new`` option for "
#~ "``remove`` operations. The default is "
#~ "``false``."
#~ msgstr ""

#~ msgid ""
#~ "Optional. A subset of fields to "
#~ "return. The ``fields`` document specifies "
#~ "an inclusion of a field with "
#~ "``1``, as in the following:  .. "
#~ "code-block:: javascript     fields: { "
#~ "<field1>: 1, <field2>: 1, ... }  "
#~ "See :ref:`projection <read-operations-"
#~ "projection>`."
#~ msgstr ""

#~ msgid ""
#~ "Optional. A subset of fields to "
#~ "return. The ``fields`` document specifies "
#~ "an inclusion of a field with "
#~ "``1``, as in the following:"
#~ msgstr ""

#~ msgid "See :ref:`projection <read-operations-projection>`."
#~ msgstr ""

#~ msgid ""
#~ "Optional. Used in conjunction with the"
#~ " ``update`` field. When ``true``, the "
#~ ":dbcommand:`findAndModify` command creates a "
#~ "new document if the ``query`` returns"
#~ " no documents. The default is "
#~ "``false``."
#~ msgstr ""

#~ msgid ""
#~ "The :dbcommand:`findAndModify` command returns "
#~ "a document, similar to the following:"
#~ msgstr ""

#~ msgid ""
#~ "The ``updatedExisting`` field **only** appears"
#~ " if the command is either an "
#~ "``update`` or an ``upsert``."
#~ msgstr ""

#~ msgid ""
#~ "The ``upserted`` field **only** appears "
#~ "if the command is an ``upsert``."
#~ msgstr ""

#~ msgid ""
#~ "for an ``upsert`` operation that "
#~ "performs an insert, when ``new`` is "
#~ "``false``, **and** includes a ``sort`` "
#~ "option, the return document has "
#~ "``lastErrorObject``, ``value``, and ``ok`` "
#~ "fields, but the ``value`` field holds"
#~ " an empty document ``{}``."
#~ msgstr ""

#~ msgid ""
#~ "for an ``upsert`` that performs an "
#~ "insert, when ``new`` is ``false`` "
#~ "**without** a specified ``sort`` the "
#~ "return document has ``lastErrorObject``, "
#~ "``value``, and ``ok`` fields, but the"
#~ " ``value`` field holds a ``null``."
#~ msgstr ""

#~ msgid ""
#~ "Previously, the command returned an "
#~ "empty document (e.g. ``{}``) in the "
#~ "``value`` field. See :ref:`the 2.2 "
#~ "release notes <2.2-findandmodify-returns-"
#~ "null>` for more information."
#~ msgstr ""

#~ msgid "Consider the following examples:"
#~ msgstr ""

#~ msgid ""
#~ "However, the :method:`~db.collection.findAndModify()` "
#~ "shell helper method returns just the "
#~ "unmodified document, or the modified "
#~ "document when ``new`` is ``true``."
#~ msgstr ""

#~ msgid ""
#~ "The following :dbcommand:`findAndModify` command "
#~ "includes the ``upsert: true`` option to"
#~ " insert a new document if no "
#~ "document matches the ``query`` condition:"
#~ msgstr ""

#~ msgid ""
#~ "If the command does **not** find a"
#~ " matching document, the command performs"
#~ " an upsert and returns a document "
#~ "with the following fields:"
#~ msgstr ""

#~ msgid ""
#~ "The following :dbcommand:`findAndModify` command "
#~ "includes both ``upsert: true`` option "
#~ "and the ``new:true`` option to return"
#~ " the newly inserted document in the"
#~ " ``value`` field if a document "
#~ "matching the ``query`` is not found:"
#~ msgstr ""

#~ msgid ""
#~ "When the :dbcommand:`findAndModify` command "
#~ "includes the ``upsert: true`` option "
#~ "**and** the query field(s) is not "
#~ "uniquely indexed, the method could "
#~ "insert a document multiple times in "
#~ "certain circumstances. For instance, if "
#~ "multiple clients issue the "
#~ ":dbcommand:`findAndModify` command and these "
#~ "commands complete the ``find`` phase "
#~ "before any one starts the ``modify`` "
#~ "phase, these commands could insert the"
#~ " same document."
#~ msgstr ""

#~ msgid ""
#~ "If all the commands finish the "
#~ "``query`` phase before any command "
#~ "starts the ``modify`` phase, **and** "
#~ "there is no unique index on the"
#~ " ``name`` field, the commands may all"
#~ " perform an upsert. To prevent this"
#~ " condition, create a :ref:`unique index "
#~ "<index-type-unique>` on the ``name`` "
#~ "field. With the unique index in "
#~ "place, then the multiple "
#~ ":dbcommand:`findAndModify` commands would observe"
#~ " one of the following behaviors:"
#~ msgstr ""

# 1c6f0187877141d99bf2f589578891f4
#~ msgid "The return document contains the following fields:"
#~ msgstr ""

# c8133c37b8d747f688e43085110b695c
#~ msgid "The ``lastErrorObject`` field that returns the details of the command:"
#~ msgstr ""

# cbd010ce1836487bad6d1b3f1c2a2f89
#~ msgid "The ``value`` field that returns either:"
#~ msgstr ""

# 256c37ffc47e496e827e8dbde582648d
#~ msgid "the original (i.e. pre-modification) document if ``new`` is false, or"
#~ msgstr ""

# a1e99191874a4fc09033ebe9589360f6
#~ msgid "the modified or inserted document if ``new: true``."
#~ msgstr ""

# 606882dcbc0e46e1ba55b32229f94312
#~ msgid "The ``ok`` field that returns the status of the command."
#~ msgstr ""

# 9318a9054ef640578c4753180a0d404e
#~ msgid "If the :dbcommand:`findAndModify` finds no matching document, then:"
#~ msgstr ""

# a9a5a9561f0046cf8d1aabc0ff47365f
#~ msgid ""
#~ "for ``update`` or ``remove`` operations, "
#~ "``lastErrorObject`` does not appear in "
#~ "the return document and the ``value``"
#~ " field holds a ``null``."
#~ msgstr ""

# 54fc54ae99384cec9a8dc4c801c33af3
#~ msgid ""
#~ "The ``value`` field that contains an "
#~ "empty document ``{}`` as the original"
#~ " document because the command included "
#~ "the ``sort`` option:"
#~ msgstr ""

# 9c4983e2b7f14f078aa4968255c16cdd
#~ msgid ""
#~ "If the command did **not** include "
#~ "the ``sort`` option, the ``value`` field"
#~ " would contain ``null``:"
#~ msgstr ""

# bda4184b1c8a4714807028bcb85d1115
#~ msgid ""
#~ "Exactly one :dbcommand:`findAndModify` would "
#~ "successfully insert a new document."
#~ msgstr ""

# 9b0d2b75e3134702a84bb478463cc962
#~ msgid ""
#~ "Zero or more :dbcommand:`findAndModify` "
#~ "commands would update the newly inserted"
#~ " document."
#~ msgstr ""

# 7c80c991239f4e85a7db20d91982cd3e
#~ msgid ""
#~ "Zero or more :dbcommand:`findAndModify` "
#~ "commands would fail when they attempted"
#~ " to insert a duplicate. If the "
#~ "command fails due to a unique "
#~ "index constraint violation, you can "
#~ "retry the command. Absent a delete "
#~ "of the document, the retry should "
#~ "not fail."
#~ msgstr ""

# 1dde5d9a3bab447e9a891f8f5218cc08
#~ msgid ""
#~ "This command obtains a write lock "
#~ "on the affected database and will "
#~ "block other operations until it has "
#~ "completed; however, typically the write "
#~ "lock is short lived and equivalent "
#~ "to other similar :method:`~db.collection.update()`"
#~ " operations."
#~ msgstr ""

#~ msgid ""
#~ "The ``updatedExisting`` field **only** appears"
#~ " if the command specifies an "
#~ "``update`` or an ``update`` with "
#~ "``upsert: true``; i.e. the field does"
#~ " not appear for a ``remove``."
#~ msgstr ""

#~ msgid ""
#~ "The ``upserted`` field **only** appears "
#~ "if the ``update`` with the ``upsert: "
#~ "true`` operation results in an "
#~ "insertion."
#~ msgstr ""

#~ msgid ""
#~ "for ``update`` with ``upsert: true`` "
#~ "operation that results in an insertion,"
#~ " if the command also specifies "
#~ "``new`` is ``false`` **and** specifies a"
#~ " ``sort``, the return document has a"
#~ " ``lastErrorObject``, ``value``, and ``ok`` "
#~ "fields, but the ``value`` field holds"
#~ " an empty document ``{}``."
#~ msgstr ""

#~ msgid ""
#~ "for ``update`` with ``upsert: true`` "
#~ "operation that results in an insertion,"
#~ " if the command also specifies "
#~ "``new`` is ``false`` but does **not**"
#~ " specify a ``sort``, the return "
#~ "document has a ``lastErrorObject``, ``value``,"
#~ " and ``ok`` fields, but the ``value``"
#~ " field holds a ``null``."
#~ msgstr ""

#~ msgid ""
#~ "When the :dbcommand:`findAndModify` command "
#~ "includes the ``upsert: true`` option "
#~ "**and** the query field(s) is not "
#~ "uniquely indexed, the command could "
#~ "insert a document multiple times in "
#~ "certain circumstances. For instance, if "
#~ "multiple clients issue the "
#~ ":dbcommand:`findAndModify` command and these "
#~ "commands complete the ``find`` phase "
#~ "before any one starts the ``modify`` "
#~ "phase, these commands could insert the"
#~ " same document."
#~ msgstr ""

#~ msgid ""
#~ "If all the commands finish the "
#~ "``query`` phase before any command "
#~ "starts the ``modify`` phase, **and** "
#~ "there is no unique index on the"
#~ " ``name`` field, the commands may all"
#~ " result in an insert. To prevent "
#~ "this condition, create a :ref:`unique "
#~ "index <index-type-unique>` on the "
#~ "``name`` field. With the unique index"
#~ " in place, then the multiple "
#~ ":dbcommand:`findAndModify` commands would observe"
#~ " one of the following behaviors:"
#~ msgstr ""

#~ msgid "Concurrency"
#~ msgstr ""

#~ msgid ""
#~ "By default, |operation| method returns "
#~ "|return-object|. To obtain the updated "
#~ "document, use the ``new`` option."
#~ msgstr ""

#~ msgid ""
#~ "You cannot specify a :doc:`write concern"
#~ " </core/write-concern>` to |operation| to"
#~ " override the default write concern "
#~ "whereas, starting in MongoDB 2.6, you"
#~ " can specify a write concern to "
#~ "the :method:`~db.collection.update()` method."
#~ msgstr ""

#~ msgid ""
#~ "When modifying a *single* document, both"
#~ " |operation| and the "
#~ ":method:`~db.collection.update()` method *atomically* "
#~ "update the document. See :doc:`/tutorial"
#~ "/isolate-sequence-of-operations` for more"
#~ " details about interactions and order "
#~ "of operations of these methods."
#~ msgstr ""

