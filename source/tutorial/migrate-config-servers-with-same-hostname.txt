=============================================
Migrate Config Servers with the Same Hostname
=============================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. important::

   This procedure applies to migrating config servers when using three
   mirrored :program:`mongod` instances as config servers.

   Starting in MongoDB 3.2, config servers can be deployed as :doc:`replica
   set </replication>`. MongoDB 3.2
   deprecates the use of three mirrored :program:`mongod` instances for
   config servers.

   For replacing config servers deployed as members of a replica set, see
   :doc:`/tutorial/replace-config-server`.

For a :doc:`sharded cluster </core/sharding>` that uses 3 mirrored config
servers, use the following procedure migrates a :ref:`config server
<sharding-config-server>` to a new system that uses *the same* hostname.

To migrate all three mirrored config servers, perform this procedure for
each config server separately and migrate the config servers in reverse
order from how they are listed in the :program:`mongos` instances'
:setting:`~sharding.configDB` string. Start with the last config server
listed in the :setting:`~sharding.configDB` string.

.. start-migrate-config-server-with-same-hostname

#. Shut down the config server.

   This renders all config data for the sharded cluster "read only."

#. Change the DNS entry that points to the system that provided the old
   config server, so that the *same* hostname points to the new
   system.
   How you do this depends on how you organize your DNS and
   hostname resolution services.

#. Copy the contents of :setting:`~storage.dbPath` from the old config server to
   the new config server.

   For example, to copy the contents of :setting:`~storage.dbPath` to a machine
   named ``mongodb.config2.example.net``, you might issue a command
   similar to the following:

   .. code-block:: sh

      rsync -az /data/configdb/ mongodb.config2.example.net:/data/configdb

#. Start the config server instance on the new system. The default
   invocation is:

   .. code-block:: sh

      mongod --configsvr

.. end-migrate-config-server-with-same-hostname

When you start the third config server, your cluster will become
writable and it will be able to create new splits and migrate chunks
as needed.
