---
stepnum: 0
level: 4
ref: verify-om-appdb-tls-certs
title: "Verify your new |tls| certificates."
content: |

  Verify that each member of the Replica Set has one |tls| certificate named with the following format:

  ``<resource-name>-db-<index>-pem``

  Where ``<index>`` is a 0-based index number to the total amount of
  members minus one. (``0`` to ``n-1``)

---
stepnum: 0
level: 4
ref: create-om-appdb-secret
title: "Create a Secret with your new |tls| certificates."
content: |

  Create a new Secret from these files:

  .. code-block:: sh

     kubectl create secret generic appdb-cert \
             --from-file=om-appdb-tls-enabled-db-0-pem \
             --from-file=om-appdb-tls-enabled-db-1-pem \
             --from-file=om-appdb-tls-enabled-db-2-pem

  ``kubectl`` creates one Secret containing the three certificates.

---
stepnum: 0
level: 4
ref: create-om-appdb-configmap
title: "Create a ConfigMap containing the Certificate Authority."
optional: true
content: |

  You must provide a |certauth| certificate when the |certauth| that
  signed the certificates might be not "recognized" as an official
  authority. You can create recognized and valid certificates with
  `cert-manager <https://cert-manager.io/docs/>`__ or `HashiCorp Vault
  <https://www.vaultproject.io/>`__.

  If you signed the certificates using a |k8s| certificate management
  tool, such as `cert-manager <https://cert-manager.io/docs/>`__ or
  `HashiCorp Vault <https://www.vaultproject.io/>`__, you must create a
  |k8s-configmap| containing the |certauth|\'s certificate file.

  If you output the certificate as a file, name this file ``ca-pem``.
  This simplifies creating the |k8s-configmap|.

  .. include:: /includes/admonitions/warning-concatenate-download-certs.rst

  a. Obtain the entire |tls| certificate chain from
     ``downloads.mongodb.com``. The following ``openssl`` command
     outputs each certificate in the chain to your current working
     directory, in ``.crt`` format:

     .. code-block:: sh

        openssl s_client -showcerts -verify 2 \ 
        -connect downloads.mongodb.com:443 -servername downloads.mongodb.com < /dev/null \ 
        | awk '/BEGIN/,/END/{ if(/BEGIN/){a++}; out="cert"a".crt"; print >out}'

  #. Concatenate your |certauth|\'s certificate file with the
     entire |tls| certificate chain from ``downloads.mongodb.com`` that
     you obtained in the previous step:

     .. code-block:: sh

        cat cert1.crt cert2.crt cert3.crt cert4.crt  >> ca-pem

  #. Create the |k8s-configmap|:

     .. code-block:: sh

        kubectl create configmap ca --from-file="ca-pem"

  This creates a |k8s-configmap| named ``ca``. This
  |k8s-configmap| contains one entry called ``ca-pem`` with the
  contents of the |certauth| file and the certificate chain for
  ``downloads.mongodb.com``.

---
stepnum: 0
level: 4
ref: create-om-appdb-set-secret
title: "Specify the Secret with certificates to the |onprem| yaml definition."
content: |

  .. literalinclude:: /includes/code-examples/yaml-files/example-opsmgr.yaml
     :language: yaml
     :linenos:
     :copyable: false
     :start-after: START-secure-appdb-full
     :end-before: END-secure-appdb-full

  .. note::

     The |k8s-op-short| mounts the |certauth| you add using the
     :opsmgrkube:`spec.applicationDatabase.security.tls.ca` setting to
     both the |onprem| and the Application Database pods.
...
