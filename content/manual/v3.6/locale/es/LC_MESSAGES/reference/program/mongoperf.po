# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: 2014-04-08 19:10+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/reference/program/mongoperf.txt:5
msgid "``mongoperf``"
msgstr ""

#: ../source/reference/program/mongoperf.txt:16
msgid "Synopsis"
msgstr ""

#: ../source/reference/program/mongoperf.txt:18
msgid ""
":binary:`~bin.mongoperf` is a utility to check disk I/O performance "
"independently of MongoDB."
msgstr ""

#: ../source/reference/program/mongoperf.txt:21
msgid ""
"It times tests of random disk I/O and presents the results. You can use "
":binary:`~bin.mongoperf` for any case apart from MongoDB. The "
":setting:`~mongoperf.mmf` ``true`` mode is completely generic. In that "
"mode it is somewhat analogous to tools such as `bonnie++ "
"<http://sourceforge.net/projects/bonnie/>`_ (albeit mongoperf is "
"simpler)."
msgstr ""

#: ../source/reference/program/mongoperf.txt:28
msgid "Specify options to :binary:`~bin.mongoperf` using a JavaScript document."
msgstr ""

#: ../source/includes/extracts/require-cmd-line-mongoperf.rst:1
msgid ""
"Run :binary:`~bin.mongoperf` from the system command line, not the "
":binary:`~bin.mongo` shell."
msgstr ""

#: ../source/reference/program/mongoperf.txt:34
msgid "`bonnie <http://www.textuality.com/bonnie/>`_"
msgstr ""

#: ../source/reference/program/mongoperf.txt:35
msgid "`bonnie++ <http://sourceforge.net/projects/bonnie/>`_"
msgstr ""

#: ../source/reference/program/mongoperf.txt:36
msgid "`Output from an example run <https://gist.github.com/1694664>`_"
msgstr ""

#: ../source/reference/program/mongoperf.txt:41
msgid "Options"
msgstr ""

#: ../source/includes/option/option-mongoperf-help.rst:3
msgid "Returns information on the options and use of :program:`mongoperf`."
msgstr ""

#: ../source/includes/option/option-mongoperf-<jsonconfig>.rst:3
msgid ""
":binary:`~bin.mongoperf` accepts configuration options in the form of a "
"file that holds a :term:`JSON` document. You must stream the content of "
"this file into :binary:`~bin.mongoperf`, as in the following operation:"
msgstr ""

#: ../source/includes/option/option-mongoperf-<jsonconfig>.rst:12
msgid ""
"In this example ``config`` is the name of a file that holds a JSON "
"document that resembles the following example:"
msgstr ""

#: ../source/includes/option/option-mongoperf-<jsonconfig>.rst:28
msgid ""
"See the :ref:`mongoperf-fields` section for documentation of each of "
"these fields."
msgstr ""

#: ../source/reference/program/mongoperf.txt:54
msgid "Configuration Fields"
msgstr ""

#: ../source/reference/program/mongoperf.txt:58
#: ../source/reference/program/mongoperf.txt:68
#: ../source/reference/program/mongoperf.txt:76
#: ../source/reference/program/mongoperf.txt:130
#: ../source/reference/program/mongoperf.txt:138
msgid "*Type:* Integer."
msgstr ""

#: ../source/reference/program/mongoperf.txt:60
msgid "*Default:* 1"
msgstr ""

#: ../source/reference/program/mongoperf.txt:62
msgid ""
"Defines the number of threads :binary:`~bin.mongoperf` will use in the "
"test. To saturate your system's storage system you will need multiple "
"threads. Consider setting :setting:`~mongoperf.nThreads` to ``16``."
msgstr ""

#: ../source/reference/program/mongoperf.txt:70
msgid "*Default:* 1 megabyte (i.e. 1024\\ :sup:`2` bytes)"
msgstr ""

#: ../source/reference/program/mongoperf.txt:72
msgid "Test file size."
msgstr ""

#: ../source/reference/program/mongoperf.txt:78
#: ../source/reference/program/mongoperf.txt:140
msgid "*Default:* 0"
msgstr ""

#: ../source/reference/program/mongoperf.txt:80
msgid ""
":binary:`~bin.mongoperf` will pause for the number of specified "
":setting:`~mongoperf.sleepMicros` divided by the "
":setting:`~mongoperf.nThreads` between each operation."
msgstr ""

#: ../source/reference/program/mongoperf.txt:86
#: ../source/reference/program/mongoperf.txt:106
#: ../source/reference/program/mongoperf.txt:117
msgid "*Type:* Boolean."
msgstr ""

#: ../source/reference/program/mongoperf.txt:88
#: ../source/reference/program/mongoperf.txt:108
#: ../source/reference/program/mongoperf.txt:119
msgid "*Default:* ``false``"
msgstr ""

#: ../source/reference/program/mongoperf.txt:90
msgid ""
"Set :setting:`~mongoperf.mmf` to ``true`` to use memory mapped files for "
"the tests."
msgstr ""

#: ../source/reference/program/mongoperf.txt:93
msgid "Generally:"
msgstr ""

#: ../source/reference/program/mongoperf.txt:95
msgid ""
"when :setting:`~mongoperf.mmf` is ``false``, :binary:`~bin.mongoperf` "
"tests direct, physical, I/O, without caching. Use a large file size to "
"test heavy random I/O load and to avoid I/O coalescing."
msgstr ""

#: ../source/reference/program/mongoperf.txt:99
msgid ""
"when :setting:`~mongoperf.mmf` is ``true``, :binary:`~bin.mongoperf` runs"
" tests of the caching system, and can use normal file system cache. Use "
":setting:`~mongoperf.mmf` in this mode to test file system cache behavior"
" with memory mapped files."
msgstr ""

#: ../source/reference/program/mongoperf.txt:110
msgid ""
"Set :setting:`~mongoperf.r` to ``true`` to perform reads as part of the "
"tests."
msgstr ""

#: ../source/reference/program/mongoperf.txt:113
#: ../source/reference/program/mongoperf.txt:124
msgid ""
"Either :setting:`~mongoperf.r` or :setting:`~mongoperf.w` must be "
"``true``."
msgstr ""

#: ../source/reference/program/mongoperf.txt:121
msgid ""
"Set :setting:`~mongoperf.w` to ``true`` to perform writes as part of the "
"tests."
msgstr ""

#: ../source/reference/program/mongoperf.txt:132
msgid "*Default:* 4 kb"
msgstr ""

#: ../source/reference/program/mongoperf.txt:134
msgid "The size of each write operation."
msgstr ""

#: ../source/reference/program/mongoperf.txt:142
msgid ""
"Seconds between disk flushes. :setting:`mongoperf.syncDelay` is similar "
"to :option:`--syncdelay <mongod --syncdelay>` for :binary:`~bin.mongod`."
msgstr ""

#: ../source/reference/program/mongoperf.txt:145
msgid ""
"The :setting:`~mongoperf.syncDelay` controls how frequently "
":binary:`~bin.mongoperf` performs an asynchronous disk flush of the "
"memory mapped file used for testing. By default, :binary:`~bin.mongod` "
"performs this operation every 60 seconds. Use "
":setting:`~mongoperf.syncDelay` to test basic system performance of this "
"type of operation."
msgstr ""

#: ../source/reference/program/mongoperf.txt:152
msgid ""
"Only use :setting:`~mongoperf.syncDelay` in conjunction with "
":setting:`~mongoperf.mmf` set to ``true``."
msgstr ""

#: ../source/reference/program/mongoperf.txt:155
msgid "The default value of ``0`` disables this."
msgstr ""

#: ../source/reference/program/mongoperf.txt:158
msgid "Use"
msgstr ""

#: ../source/reference/program/mongoperf.txt:164
msgid ""
"Replace ``jsonconfigfile`` with the path to the :binary:`~bin.mongoperf` "
"configuration. You may also invoke :binary:`~bin.mongoperf` in the "
"following form:"
msgstr ""

#: ../source/reference/program/mongoperf.txt:172
msgid "In this operation:"
msgstr ""

#: ../source/reference/program/mongoperf.txt:174
msgid ""
":binary:`~bin.mongoperf` tests direct physical random read and write "
"io's, using 16 concurrent reader threads."
msgstr ""

#: ../source/reference/program/mongoperf.txt:177
msgid ":binary:`~bin.mongoperf`  uses a 10 gigabyte test file."
msgstr ""

#: ../source/reference/program/mongoperf.txt:179
msgid ""
"Consider using ``iostat``, as invoked in the following example to monitor"
" I/O performance during the test."
msgstr ""

# 41086d38a75b4c999b3b718ec0d653f1
#~ msgid ""
#~ ":program:`mongoperf` is a utility to "
#~ "check disk I/O performance independently "
#~ "of MongoDB."
#~ msgstr ""

# c7c0b258629a43d7b7426dabcb8aed14
#~ msgid ""
#~ "It times tests of random disk I/O"
#~ " and presents the results. You can"
#~ " use :program:`mongoperf` for any case "
#~ "apart from MongoDB. The "
#~ ":setting:`~mongoperf.mmf` ``true`` mode is "
#~ "completely generic. In that mode it "
#~ "is somewhat analogous to tools such "
#~ "as `bonnie++ <http://sourceforge.net/projects/bonnie/>`_"
#~ " (albeit mongoperf is simpler)."
#~ msgstr ""

# 18b4a48c7d014fc796d912b0b27d8bd1
#~ msgid "Specify options to :program:`mongoperf` using a JavaScript document."
#~ msgstr ""

# 7b2a696ec8a84a84bfce4df462e5697f
#~ msgid ""
#~ "`Checking Disk Performance with the "
#~ "mongoperf Utility "
#~ "<http://blog.mongodb.org/post/40769806981/checking-disk-"
#~ "performance-with-the-mongoperf-utility>`_"
#~ msgstr ""

# ea7ed4bfc8c74240894cea09676dc4be
#~ msgid ""
#~ ":program:`mongoperf` accepts configuration options"
#~ " in the form of a file that "
#~ "holds a :term:`JSON` document. You must"
#~ " stream the content of this file "
#~ "into :program:`mongoperf`, as in the "
#~ "following operation:"
#~ msgstr ""

# 44420846483649ffbd1730b2f3601c1c
#~ msgid ""
#~ "Defines the number of threads "
#~ ":program:`mongoperf` will use in the "
#~ "test. To saturate your system's storage"
#~ " system you will need multiple "
#~ "threads. Consider setting "
#~ ":setting:`~mongoperf.nThreads` to ``16``."
#~ msgstr ""

# 811c8b0b88034bf98fabaf7a9a4e8cf0
#~ msgid ""
#~ ":program:`mongoperf` will pause for the "
#~ "number of specified "
#~ ":setting:`~mongoperf.sleepMicros` divided by the "
#~ ":setting:`~mongoperf.nThreads` between each "
#~ "operation."
#~ msgstr ""

# d0651ad2018c43379a893b0a7c80919e
#~ msgid ""
#~ "when :setting:`~mongoperf.mmf` is ``false``, "
#~ ":program:`mongoperf` tests direct, physical, "
#~ "I/O, without caching. Use a large "
#~ "file size to test heavy random I/O"
#~ " load and to avoid I/O coalescing."
#~ msgstr ""

# 002622b1bb774330a5ef3823635652ee
#~ msgid ""
#~ "when :setting:`~mongoperf.mmf` is ``true``, "
#~ ":program:`mongoperf` runs tests of the "
#~ "caching system, and can use normal "
#~ "file system cache. Use "
#~ ":setting:`~mongoperf.mmf` in this mode to "
#~ "test file system cache behavior with "
#~ "memory mapped files."
#~ msgstr ""

# 1511dd443f974233814062be29b5a0ca
#~ msgid ""
#~ "Seconds between disk flushes. "
#~ ":setting:`mongoperf.syncDelay` is similar to "
#~ ":option:`--syncdelay <mongod --syncdelay>` for "
#~ ":program:`mongod`."
#~ msgstr ""

# fc15060ca6334a2eae02a7af339dc005
#~ msgid ""
#~ "The :setting:`~mongoperf.syncDelay` controls how "
#~ "frequently :program:`mongoperf` performs an "
#~ "asynchronous disk flush of the memory"
#~ " mapped file used for testing. By "
#~ "default, :program:`mongod` performs this "
#~ "operation every 60 seconds. Use "
#~ ":setting:`~mongoperf.syncDelay` to test basic "
#~ "system performance of this type of "
#~ "operation."
#~ msgstr ""

# 2055f09e1611435aa455d6852c665743
#~ msgid ""
#~ "Replace ``jsonconfigfile`` with the path "
#~ "to the :program:`mongoperf` configuration. You"
#~ " may also invoke :program:`mongoperf` in"
#~ " the following form:"
#~ msgstr ""

# f4cb42ad8e6b468498fd9e0425d2ee13
#~ msgid ""
#~ ":program:`mongoperf` tests direct physical "
#~ "random read io's, using 16 concurrent"
#~ " reader threads."
#~ msgstr ""

# d0eb0e92f469437cac4e7e5c2f4a61bd
#~ msgid ":program:`mongoperf`  uses a 1 gigabyte test file."
#~ msgstr ""

