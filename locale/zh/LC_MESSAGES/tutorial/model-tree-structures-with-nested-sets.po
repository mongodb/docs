#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: TJWORKS <evertang@gmail.com>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/model-tree-structures-with-nested-sets.txt:3
msgid "Model Tree Structures with Nested Sets"
msgstr "树结构建模： 嵌套集合"

#: ../source/tutorial/model-tree-structures-with-nested-sets.txt:14
msgid "Overview"
msgstr "概述"

#: ../source/tutorial/model-tree-structures-with-nested-sets.txt:16
msgid ""
"Data in MongoDB has a *flexible schema*. :term:`Collections <collection>` do"
" not enforce :term:`document` structure. Decisions that affect how you model"
" data can affect application performance and database capacity. See "
":doc:`/core/data-models` for a full high level overview of data modeling in "
"MongoDB."
msgstr ""
"MongoDB的数据具有 *灵活的模式* 。 :term:`集合 <collection>` 本身没有"
"对文档结构的规则性校验。 但是你建模时所作的决定会影响到应用程序的性能和数据库的处理能力。" 
"参见 :doc:`/core/data-models` 以更多的了解一些关于MongoDB数据建模全面介绍。"

#: ../source/tutorial/model-tree-structures-with-nested-sets.txt:22
msgid ""
"This document describes a data model that describes a tree like structure "
"that optimizes discovering subtrees at the expense of tree mutability."
msgstr ""
"这篇文章讲述一种对子树查询优化的树结构建模方式。这种方式是以牺牲树结构的更新性能作为代价的。"

#: ../source/tutorial/model-tree-structures-with-nested-sets.txt:27
msgid "Pattern"
msgstr "范式"

#: ../source/tutorial/model-tree-structures-with-nested-sets.txt:31
msgid ""
"The *Nested Sets* pattern identifies each node in the tree as stops in a "
"round-trip traversal of the tree. The application visits each node in the "
"tree twice; first during the initial trip, and second during the return "
"trip. The *Nested Sets* pattern stores each tree node in a document; in "
"addition to the tree node, document stores the id of node's parent, the "
"node's initial stop in the ``left`` field, and its return stop in the "
"``right`` field."
msgstr ""
"*嵌套集合* 模式对整个树结构进行一次深度优先的遍历。遍历时候对每个节点的压栈和出栈"
"作为两个不同的步骤记录下来。然后每一个节点就是一个文档，除了节点信息外，文档还保存"
"父节点的id以及遍历的两个步骤编号。压栈时的步骤编号保存到 ``left`` 字段里， "
"而出栈时的步骤编号则保存到 ``right`` 字段里。"

#: ../source/tutorial/model-tree-structures-with-nested-sets.txt:39
msgid "Consider the following hierarchy of categories:"
msgstr "让我们看一下下图表示的树形分类结构："

#: ../source/tutorial/model-tree-structures-with-nested-sets.txt:43
msgid "The following example models the tree using *Nested Sets*:"
msgstr "下面是一个使用 *嵌套集合* 来建模的例子："

#: ../source/tutorial/model-tree-structures-with-nested-sets.txt:54
msgid "You can query to retrieve the descendants of a node:"
msgstr "你可以查询某个节点的子代节点："

#: ../source/tutorial/model-tree-structures-with-nested-sets.txt:61
msgid ""
"The *Nested Sets* pattern provides a fast and efficient solution for finding"
" subtrees but is inefficient for modifying the tree structure. As such, this"
" pattern is best for static trees that do not change."
msgstr ""


#: ../source/tutorial/model-tree-structures-with-nested-sets.txt:0
msgid "On this page"
msgstr ""

