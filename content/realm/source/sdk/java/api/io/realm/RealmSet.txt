.. meta::
   :robots: noindex, nosnippet


.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol



Class RealmSet
^^^^^^^^^^^^^^

.. _io_realm_RealmSet:



io.realm
========


 | `java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ 
 | 		io.realm.RealmSet


**Implemented interfaces:**



- `java.util.Set <https://docs.oracle.com/javase/7/docs/api/java/util/Set.html>`__ 
- :ref:`io.realm.RealmCollection <io_realm_RealmCollection>` 
- `java.util.Collection <https://docs.oracle.com/javase/7/docs/api/java/util/Collection.html>`__ 
- `java.lang.Iterable <https://docs.oracle.com/javase/7/docs/api/java/lang/Iterable.html>`__ 
- `java.util.Collection <https://docs.oracle.com/javase/7/docs/api/java/util/Collection.html>`__ 
- `java.lang.Iterable <https://docs.oracle.com/javase/7/docs/api/java/lang/Iterable.html>`__ 


RealmSet is a collection that contains no duplicate elements.Similarly to :ref:`RealmList <io_realm_RealmList>` s, a RealmSet can operate in managed and unmanaged modes. In managed mode a RealmSet persists all its contents inside a Realm whereas in unmanaged mode it functions like a `HashSet <https://docs.oracle.com/javase/7/docs/api/java/util/HashSet.html>`__ .



Managed RealmSets can only be created by Realm and will automatically update their content whenever the underlying Realm is updated. Managed RealmSet can only be accessed using the getter that points to a RealmSet field of a :ref:`RealmObject <io_realm_RealmObject>` .



Unmanaged elements in this set can be added to a Realm using the :ref:`Realm.copyToRealm(Iterable, ImportFlag...) <io_realm_Realm_copyToRealm_Iterable__ImportFlag____>`  method.



**Warning: **the following methods are not supported for classes containing set fields yet:



- :ref:`Realm.insert(RealmModel) <io_realm_Realm_insert_RealmModel_>` 
   
   
   
   
- :ref:`Realm.insert(Collection) <io_realm_Realm_insert_Collection_>` 
   
   
   
   
- :ref:`Realm.insertOrUpdate(RealmModel) <io_realm_Realm_insertOrUpdate_RealmModel_>` 
   
   
   
   
- :ref:`Realm.insertOrUpdate(Collection) <io_realm_Realm_insertOrUpdate_Collection_>` 
   
   
   
   
- **Realm.createAllFromJson(Class, String)**
   
   
   
   
- :ref:`Realm.createAllFromJson(Class, JSONArray) <io_realm_Realm_createAllFromJson_Class__JSONArray_>` 
   
   
   
   
- **Realm.createAllFromJson(Class, InputStream)**
   
   
   
   
- **Realm.createObjectFromJson(Class, String)**
   
   
   
   
- :ref:`Realm.createObjectFromJson(Class, JSONObject) <io_realm_Realm_createObjectFromJson_Class__JSONObject_>` }
   
   
   
   
- **Realm.createObjectFromJson(Class, InputStream)**}
   
   
   
   
- **Realm.createOrUpdateAllFromJson(Class, String)**
   
   
   
   
- :ref:`Realm.createOrUpdateAllFromJson(Class, JSONArray) <io_realm_Realm_createOrUpdateAllFromJson_Class__JSONArray_>` 
   
   
   
   
- **Realm.createOrUpdateAllFromJson(Class, InputStream)**
   
   
   
   
- **Realm.createOrUpdateObjectFromJson(Class, String)**
   
   
   
   
- :ref:`Realm.createOrUpdateObjectFromJson(Class, JSONObject) <io_realm_Realm_createOrUpdateObjectFromJson_Class__JSONObject_>` 
   
   
   
   
- **Realm.createOrUpdateObjectFromJson(Class, InputStream)**
   
   
   
   





Constructors
============

.. list-table::
   :header-rows: 1
   
   * - Constructor and Description
   
   * - | :ref:`RealmSet <io_realm_RealmSet>` ()
       | 
       
       
       Instantiates a RealmSet in unmanaged mode.
       
       
       
   
   * - | :ref:`RealmSet <io_realm_RealmSet>` (
       |  `java.util.Collection\<E> <https://docs.oracle.com/javase/7/docs/api/java/util/Collection.html>`__  collection
       | )
       
       
       Instantiates a RealmSet in unmanaged mode with another collection.
       
       
       
   
   * - | :ref:`RealmSet <io_realm_RealmSet>` (
       |  **BaseRealm** baseRealm, 
       |  **OsSet** osSet, 
       |  `java.lang.Class\<E> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  valueClass
       | )
       
       
       Instantiates a RealmSet in managed mode.
       
       
       
   
   * - | :ref:`RealmSet <io_realm_RealmSet>` (
       |  **BaseRealm** baseRealm, 
       |  **OsSet** osSet, 
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  className
       | )
       
       
       Instantiates a RealmSet in managed mode.
       
       
       
   
   


Method Summary
==============

.. list-table::
   :header-rows: 1
   
   * - Modifier and Type
     - Method and Description
   
   * - public **boolean**
     - | :ref:`add <io_realm_RealmSet_add>` (
       |  **E** e
       | )
       
       
       
       
       
       
       
       
   
   * - public **boolean**
     - | :ref:`addAll <io_realm_RealmSet_addAll>` (
       |  `java.util.Collection\<? extends E> <https://docs.oracle.com/javase/7/docs/api/java/util/Collection.html>`__  c
       | )
       
       
       
       
       
       
       
       
   
   * - public **void**
     - | :ref:`addChangeListener <io_realm_RealmSet_addChangeListener>` (
       |  :ref:`io.realm.SetChangeListener\<E> <io_realm_SetChangeListener>`  listener
       | )
       
       
       Adds a change listener to this :ref:`RealmSet <io_realm_RealmSet>` .
       
       
       
       
       
   
   * - public **void**
     - | :ref:`addChangeListener <io_realm_RealmSet_addChangeListener>` (
       |  :ref:`io.realm.RealmChangeListener\<io.realm.RealmSet\<E>> <io_realm_RealmChangeListener>`  listener
       | )
       
       
       Adds a change listener to this :ref:`RealmSet <io_realm_RealmSet>` .
       
       
       
       
       
   
   * - public **double**
     - | :ref:`average <io_realm_RealmSet_average>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       Returns the average of a given field.
       
       
       
   
   * - public **void**
     - | :ref:`clear <io_realm_RealmSet_clear>` ()
       | 
       
       
       
       
       
       
       
       
   
   * - public **boolean**
     - | :ref:`contains <io_realm_RealmSet_contains>` (
       |  `Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__  o
       | )
       
       
       Tests whether this ``Collection``  contains the specified object.
       
       
       
       
       
   
   * - public **boolean**
     - | :ref:`containsAll <io_realm_RealmSet_containsAll>` (
       |  `java.util.Collection\<?> <https://docs.oracle.com/javase/7/docs/api/java/util/Collection.html>`__  c
       | )
       
       
       
       
       
       
       
       
   
   * - public **boolean**
     - | :ref:`deleteAllFromRealm <io_realm_RealmSet_deleteAllFromRealm>` ()
       | 
       
       
       This deletes all objects in the collection from the underlying Realm as well as from the collection.
       
       
       
   
   * - public :ref:`RealmSet <io_realm_RealmSet>` 
     - | :ref:`freeze <io_realm_RealmSet_freeze>` ()
       | 
       
       
       
       
       
       
       
       
   
   * - public `Class <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__ 
     - | :ref:`getValueClass <io_realm_RealmSet_getValueClass>` ()
       | 
       
       
       
       
       
       
   
   * - public `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ 
     - | :ref:`getValueClassName <io_realm_RealmSet_getValueClassName>` ()
       | 
       
       
       
       
       
       
   
   * - public **boolean**
     - | :ref:`isEmpty <io_realm_RealmSet_isEmpty>` ()
       | 
       
       
       
       
       
       
       
       
   
   * - public **boolean**
     - | :ref:`isFrozen <io_realm_RealmSet_isFrozen>` ()
       | 
       
       
       
       
       
       
       
       
   
   * - public **boolean**
     - | :ref:`isLoaded <io_realm_RealmSet_isLoaded>` ()
       | 
       
       
       Checks if a collection has finished loading its data yet.
       
       
       
   
   * - public **boolean**
     - | :ref:`isManaged <io_realm_RealmSet_isManaged>` ()
       | 
       
       
       Checks if the collection is managed by Realm.
       
       
       
   
   * - public **boolean**
     - | :ref:`isValid <io_realm_RealmSet_isValid>` ()
       | 
       
       
       Checks if the collection is still valid to use, i.e., the :ref:`io.realm.Realm <io_realm_Realm>`  instance hasn't been closed.
       
       
       
       
       
   
   * - public `Iterator <https://docs.oracle.com/javase/7/docs/api/java/util/Iterator.html>`__ 
     - | :ref:`iterator <io_realm_RealmSet_iterator>` ()
       | 
       
       
       
       
       
       
       
       
   
   * - public **boolean**
     - | :ref:`load <io_realm_RealmSet_load>` ()
       | 
       
       
       Blocks the collection until all data are available.
       
       
       
   
   * - public `Number <https://docs.oracle.com/javase/7/docs/api/java/lang/Number.html>`__ 
     - | :ref:`max <io_realm_RealmSet_max>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       Finds the maximum value of a field.
       
       
       
   
   * - public `Date <https://docs.oracle.com/javase/7/docs/api/java/util/Date.html>`__ 
     - | :ref:`maxDate <io_realm_RealmSet_maxDate>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       Finds the maximum date.
       
       
       
   
   * - public `Number <https://docs.oracle.com/javase/7/docs/api/java/lang/Number.html>`__ 
     - | :ref:`min <io_realm_RealmSet_min>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       Finds the minimum value of a field.
       
       
       
   
   * - public `Date <https://docs.oracle.com/javase/7/docs/api/java/util/Date.html>`__ 
     - | :ref:`minDate <io_realm_RealmSet_minDate>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       Finds the minimum date.
       
       
       
   
   * - public **boolean**
     - | :ref:`remove <io_realm_RealmSet_remove>` (
       |  `Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__  o
       | )
       
       
       
       
       
       
       
       
   
   * - public **boolean**
     - | :ref:`removeAll <io_realm_RealmSet_removeAll>` (
       |  `java.util.Collection\<?> <https://docs.oracle.com/javase/7/docs/api/java/util/Collection.html>`__  c
       | )
       
       
       
       
       
       
       
       
   
   * - public **void**
     - | :ref:`removeAllChangeListeners <io_realm_RealmSet_removeAllChangeListeners>` ()
       | 
       
       
       Removes all user-defined change listeners.
       
       
       
   
   * - public **void**
     - | :ref:`removeChangeListener <io_realm_RealmSet_removeChangeListener>` (
       |  :ref:`io.realm.SetChangeListener\<E> <io_realm_SetChangeListener>`  listener
       | )
       
       
       Removes the specified change listener.
       
       
       
   
   * - public **void**
     - | :ref:`removeChangeListener <io_realm_RealmSet_removeChangeListener>` (
       |  :ref:`io.realm.RealmChangeListener\<io.realm.RealmSet\<E>> <io_realm_RealmChangeListener>`  listener
       | )
       
       
       Removes the specified change listener.
       
       
       
   
   * - public **boolean**
     - | :ref:`retainAll <io_realm_RealmSet_retainAll>` (
       |  `java.util.Collection\<?> <https://docs.oracle.com/javase/7/docs/api/java/util/Collection.html>`__  c
       | )
       
       
       
       
       
       
       
       
   
   * - public **int**
     - | :ref:`size <io_realm_RealmSet_size>` ()
       | 
       
       
       
       
       
       
       
       
   
   * - public `Number <https://docs.oracle.com/javase/7/docs/api/java/lang/Number.html>`__ 
     - | :ref:`sum <io_realm_RealmSet_sum>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       Calculates the sum of a given field.
       
       
       
   
   * - public **T**
     - | :ref:`toArray <io_realm_RealmSet_toArray>` <**T** >(
       |  **T[]** a
       | )
       
       
       
       
       
       
       
       
   
   * - public `Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ 
     - | :ref:`toArray <io_realm_RealmSet_toArray>` ()
       | 
       
       
       
       
       
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`where <io_realm_RealmSet_where>` ()
       | 
       
       
       Returns a RealmQuery, which can be used to query for specific objects of this class.
       
       
       
   
   


Inherited Methods
=================



- Methods inherited from class `java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ : ``getClass`` , ``hashCode`` , ``equals`` , ``clone`` , ``toString`` , ``notify`` , ``notifyAll`` , ``wait`` , ``wait`` , ``wait`` , ``finalize`` 




Constructor Detail
==================

.. _RealmSet:

.. _RealmSet__:

.. _io_realm_RealmSet:

.. _io_realm_RealmSet__:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmSet <io_realm_RealmSet>` ()
       | 
       
       
       
   
   * - Instantiates a RealmSet in unmanaged mode.
       
       
       
       
       
       
       
   
   


.. _RealmSet:

.. _RealmSet__:

.. _io_realm_RealmSet:

.. _io_realm_RealmSet__:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmSet <io_realm_RealmSet>` (
       |  `java.util.Collection\<E> <https://docs.oracle.com/javase/7/docs/api/java/util/Collection.html>`__  collection
       | )
       
       
       
   
   * - Instantiates a RealmSet in unmanaged mode with another collection.
       
       
       
       
       **Parameters**
       
       - ``collection`` - the collection with which the set will be initially populated.
          
          
          
       
       
       
       
       
   
   


.. _RealmSet:

.. _RealmSet__:

.. _io_realm_RealmSet:

.. _io_realm_RealmSet__:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmSet <io_realm_RealmSet>` (
       |  **BaseRealm** baseRealm, 
       |  **OsSet** osSet, 
       |  `java.lang.Class\<E> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  valueClass
       | )
       
       
       
   
   * - Instantiates a RealmSet in managed mode. This constructor is used internally by Realm.
       
       
       
       
       **Parameters**
       
       - ``baseRealm`` - 
          
          
          
       - ``osSet`` - 
          
          
          
       - ``valueClass`` - 
          
          
          
       
       
       
       
       
   
   


.. _RealmSet:

.. _RealmSet__:

.. _io_realm_RealmSet:

.. _io_realm_RealmSet__:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmSet <io_realm_RealmSet>` (
       |  **BaseRealm** baseRealm, 
       |  **OsSet** osSet, 
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  className
       | )
       
       
       
   
   * - Instantiates a RealmSet in managed mode. This constructor is used internally by a Dynamic Realm.
       
       
       
       
       **Parameters**
       
       - ``baseRealm`` - 
          
          
          
       - ``osSet`` - 
          
          
          
       - ``className`` - 
          
          
          
       
       
       
       
       
   
   




Method Detail
=============

.. _add:

.. _add__:

.. _RealmSet_add:

.. _RealmSet_add__:

.. _io_realm_RealmSet_add:

.. _io_realm_RealmSet_add__:



add
----

.. _io_realm_RealmSet_add_E_:

.. _add_E_:

.. _RealmSet_add_E_:

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`add <io_realm_RealmSet_add>` (
       |  **E** e
       | )
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _addAll:

.. _addAll__:

.. _RealmSet_addAll:

.. _RealmSet_addAll__:

.. _io_realm_RealmSet_addAll:

.. _io_realm_RealmSet_addAll__:



addAll
------

.. _io_realm_RealmSet_addAll_java_util_Collection_:

.. _io_realm_RealmSet_addAll_Collection_:

.. _io_realm_RealmSet_addAll_Collection___extends_E__:

.. _addAll_java_util_Collection_:

.. _addAll_Collection_:

.. _addAll_Collection___extends_E__:

.. _RealmSet_addAll_java_util_Collection_:

.. _RealmSet_addAll_Collection_:

.. _RealmSet_addAll_Collection___extends_E__:

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`addAll <io_realm_RealmSet_addAll>` (
       |  `java.util.Collection\<? extends E> <https://docs.oracle.com/javase/7/docs/api/java/util/Collection.html>`__  c
       | )
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _addChangeListener:

.. _addChangeListener__:

.. _RealmSet_addChangeListener:

.. _RealmSet_addChangeListener__:

.. _io_realm_RealmSet_addChangeListener:

.. _io_realm_RealmSet_addChangeListener__:



addChangeListener
-----------------

.. _io_realm_RealmSet_addChangeListener_io_realm_SetChangeListener_:

.. _io_realm_RealmSet_addChangeListener_SetChangeListener_:

.. _addChangeListener_io_realm_SetChangeListener_:

.. _addChangeListener_SetChangeListener_:

.. _RealmSet_addChangeListener_io_realm_SetChangeListener_:

.. _RealmSet_addChangeListener_SetChangeListener_:

.. _io_realm_RealmSet_addChangeListener_SetChangeListener_E__:

.. list-table::
   :header-rows: 1
   
   * - | public **void** :ref:`addChangeListener <io_realm_RealmSet_addChangeListener>` (
       |  :ref:`io.realm.SetChangeListener\<E> <io_realm_SetChangeListener>`  listener
       | )
       
       
       
   
   * - Adds a change listener to this :ref:`RealmSet <io_realm_RealmSet>` .
       
       Registering a change listener will not prevent the underlying RealmSet from being garbage collected. If the RealmSet is garbage collected, the change listener will stop being triggered. To avoid this, keep a strong reference for as long as appropriate e.g. in a class variable.
       
        
       
       .. code-block:: java
       
          
           public class MyActivity extends Activity {
          
               private RealmSet<Dog> dogs; // Strong reference to keep listeners alive
          
               @Override
               protected void onCreate(Bundle savedInstanceState) {
                 super.onCreate(savedInstanceState);
                 dogs = realm.where(Person.class).findFirst().getDogs();
                 dogs.addChangeListener(new SetChangeListener<Dog>() {
                     @Override
                     public void onChange(RealmSet<Dog> set, SetChangeSet changeSet) {
                         // React to change
                     }
                 });
               }
           }
           
       
       
        
       
       
       
       
       
       
       **Parameters**
       
       - ``listener`` - the listener to be notified.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the change listener is ``null`` .
          
          
          
          
          
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if you try to add a listener from a non-Looper or `android.app.IntentService <https://developer.android.com/reference/android/app/IntentService>`__  thread.
          
          
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmSet_addChangeListener_io_realm_RealmChangeListener_:

.. _io_realm_RealmSet_addChangeListener_RealmChangeListener_:

.. _addChangeListener_io_realm_RealmChangeListener_:

.. _addChangeListener_RealmChangeListener_:

.. _RealmSet_addChangeListener_io_realm_RealmChangeListener_:

.. _RealmSet_addChangeListener_RealmChangeListener_:

.. _io_realm_RealmSet_addChangeListener_RealmChangeListener_RealmSet_E___:

.. list-table::
   :header-rows: 1
   
   * - | public **void** :ref:`addChangeListener <io_realm_RealmSet_addChangeListener>` (
       |  :ref:`io.realm.RealmChangeListener\<io.realm.RealmSet\<E>> <io_realm_RealmChangeListener>`  listener
       | )
       
       
       
   
   * - Adds a change listener to this :ref:`RealmSet <io_realm_RealmSet>` .
       
       Registering a change listener will not prevent the underlying RealmSet from being garbage collected. If the RealmSet is garbage collected, the change listener will stop being triggered. To avoid this, keep a strong reference for as long as appropriate e.g. in a class variable.
       
        
       
       .. code-block:: java
       
          
           public class MyActivity extends Activity {
          
               private RealmSet<Dog> dogs; // Strong reference to keep listeners alive
          
               @Override
               protected void onCreate(Bundle savedInstanceState) {
                 super.onCreate(savedInstanceState);
                 dogs = realm.where(Person.class).findFirst().getDogs();
                 dogs.addChangeListener(new RealmChangeListener<RealmSet<Dog>>() {
                     @Override
                     public void onChange(RealmSet<Dog> map) {
                         // React to change
                     }
                 });
               }
           }
           
       
       
        
       
       
       
       
       
       
       **Parameters**
       
       - ``listener`` - the listener to be notified.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the change listener is ``null`` .
          
          
          
          
          
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if you try to add a listener from a non-Looper or `android.app.IntentService <https://developer.android.com/reference/android/app/IntentService>`__  thread.
          
          
          
          
          
       
       
       
       
       
   
   


.. _average:

.. _average__:

.. _RealmSet_average:

.. _RealmSet_average__:

.. _io_realm_RealmSet_average:

.. _io_realm_RealmSet_average__:



average
-------

.. _io_realm_RealmSet_average_java_lang_String_:

.. _io_realm_RealmSet_average_String_:

.. _average_java_lang_String_:

.. _average_String_:

.. _RealmSet_average_java_lang_String_:

.. _RealmSet_average_String_:

.. list-table::
   :header-rows: 1
   
   * - | public **double** :ref:`average <io_realm_RealmSet_average>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       
   
   * - Returns the average of a given field.
       
       
       
       
       
       
       **Returns**
       
       the average for the given field amongst objects in query results. This will be of type double for all types of number fields. If no objects exist or they all have ``null``  as the value for the given field, ``0``  will be returned. When computing the average, objects with ``null``  values are ignored.
       
       
       
       
       
       
       
       
       
   
   


.. _clear:

.. _clear__:

.. _RealmSet_clear:

.. _RealmSet_clear__:

.. _io_realm_RealmSet_clear:

.. _io_realm_RealmSet_clear__:



clear
-----

.. list-table::
   :header-rows: 1
   
   * - | public **void** :ref:`clear <io_realm_RealmSet_clear>` ()
       | 
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _contains:

.. _contains__:

.. _RealmSet_contains:

.. _RealmSet_contains__:

.. _io_realm_RealmSet_contains:

.. _io_realm_RealmSet_contains__:



contains
--------

.. _io_realm_RealmSet_contains_java_lang_Object_:

.. _io_realm_RealmSet_contains_Object_:

.. _contains_java_lang_Object_:

.. _contains_Object_:

.. _RealmSet_contains_java_lang_Object_:

.. _RealmSet_contains_Object_:

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`contains <io_realm_RealmSet_contains>` (
       |  `Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__  o
       | )
       
       
       
   
   * - Tests whether this ``Collection``  contains the specified object. Returns ``true``  if and only if at least one element ``elem``  in this ``Collection``  meets following requirement: ``(object==null ? elem==null : object.equals(elem))`` .
       
       
       
       
       
       
       
       
       **Returns**
       
       ``true``  if object is an element of this ``Collection`` , ``false``  otherwise.
       
       
       
       
       
       
       
       
       
   
   


.. _containsAll:

.. _containsAll__:

.. _RealmSet_containsAll:

.. _RealmSet_containsAll__:

.. _io_realm_RealmSet_containsAll:

.. _io_realm_RealmSet_containsAll__:



containsAll
-----------

.. _io_realm_RealmSet_containsAll_java_util_Collection_:

.. _io_realm_RealmSet_containsAll_Collection_:

.. _containsAll_java_util_Collection_:

.. _containsAll_Collection_:

.. _RealmSet_containsAll_java_util_Collection_:

.. _RealmSet_containsAll_Collection_:

.. _io_realm_RealmSet_containsAll_Collection____:

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`containsAll <io_realm_RealmSet_containsAll>` (
       |  `java.util.Collection\<?> <https://docs.oracle.com/javase/7/docs/api/java/util/Collection.html>`__  c
       | )
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _deleteAllFromRealm:

.. _deleteAllFromRealm__:

.. _RealmSet_deleteAllFromRealm:

.. _RealmSet_deleteAllFromRealm__:

.. _io_realm_RealmSet_deleteAllFromRealm:

.. _io_realm_RealmSet_deleteAllFromRealm__:



deleteAllFromRealm
------------------

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`deleteAllFromRealm <io_realm_RealmSet_deleteAllFromRealm>` ()
       | 
       
       
       
   
   * - This deletes all objects in the collection from the underlying Realm as well as from the collection.
       
       
       
       
       
       
       **Returns**
       
       ``true``  if objects was deleted, ``false``  otherwise.
       
       
       
       
       
       
       
       
       
   
   


.. _freeze:

.. _freeze__:

.. _RealmSet_freeze:

.. _RealmSet_freeze__:

.. _io_realm_RealmSet_freeze:

.. _io_realm_RealmSet_freeze__:



freeze
------

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmSet <io_realm_RealmSet>`  :ref:`freeze <io_realm_RealmSet_freeze>` ()
       | 
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _getValueClass:

.. _getValueClass__:

.. _RealmSet_getValueClass:

.. _RealmSet_getValueClass__:

.. _io_realm_RealmSet_getValueClass:

.. _io_realm_RealmSet_getValueClass__:



getValueClass
-------------

.. list-table::
   :header-rows: 1
   
   * - | public `Class <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  :ref:`getValueClass <io_realm_RealmSet_getValueClass>` ()
       | 
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _getValueClassName:

.. _getValueClassName__:

.. _RealmSet_getValueClassName:

.. _RealmSet_getValueClassName__:

.. _io_realm_RealmSet_getValueClassName:

.. _io_realm_RealmSet_getValueClassName__:



getValueClassName
-----------------

.. list-table::
   :header-rows: 1
   
   * - | public `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  :ref:`getValueClassName <io_realm_RealmSet_getValueClassName>` ()
       | 
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _isEmpty:

.. _isEmpty__:

.. _RealmSet_isEmpty:

.. _RealmSet_isEmpty__:

.. _io_realm_RealmSet_isEmpty:

.. _io_realm_RealmSet_isEmpty__:



isEmpty
-------

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`isEmpty <io_realm_RealmSet_isEmpty>` ()
       | 
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _isFrozen:

.. _isFrozen__:

.. _RealmSet_isFrozen:

.. _RealmSet_isFrozen__:

.. _io_realm_RealmSet_isFrozen:

.. _io_realm_RealmSet_isFrozen__:



isFrozen
--------

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`isFrozen <io_realm_RealmSet_isFrozen>` ()
       | 
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _isLoaded:

.. _isLoaded__:

.. _RealmSet_isLoaded:

.. _RealmSet_isLoaded__:

.. _io_realm_RealmSet_isLoaded:

.. _io_realm_RealmSet_isLoaded__:



isLoaded
--------

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`isLoaded <io_realm_RealmSet_isLoaded>` ()
       | 
       
       
       
   
   * - Checks if a collection has finished loading its data yet.
       
       
       
       
       
       
       **Returns**
       
       ``true``  if data has been loaded and is available, ``false``  if data is still being loaded.
       
       
       
       
       
       
       
       
       
   
   


.. _isManaged:

.. _isManaged__:

.. _RealmSet_isManaged:

.. _RealmSet_isManaged__:

.. _io_realm_RealmSet_isManaged:

.. _io_realm_RealmSet_isManaged__:



isManaged
---------

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`isManaged <io_realm_RealmSet_isManaged>` ()
       | 
       
       
       
   
   * - Checks if the collection is managed by Realm. A managed collection is just a wrapper around the data in the underlying Realm file. On Looper threads, a managed collection will be live-updated so it always points to the latest data. Managed collections are thread confined so that they cannot be accessed from other threads than the one that created them.If this method returns ``false`` , the collection is unmanaged. An unmanaged collection is just a normal java collection, so it will not be live updated.
       
       
       
       
       
       
       
       
       
       
       **Returns**
       
       ``true``  if this is a managed :ref:`RealmCollection <io_realm_RealmCollection>` , ``false``  otherwise.
       
       
       
       
       
       
       
       
       
   
   


.. _isValid:

.. _isValid__:

.. _RealmSet_isValid:

.. _RealmSet_isValid__:

.. _io_realm_RealmSet_isValid:

.. _io_realm_RealmSet_isValid__:



isValid
-------

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`isValid <io_realm_RealmSet_isValid>` ()
       | 
       
       
       
   
   * - Checks if the collection is still valid to use, i.e., the :ref:`io.realm.Realm <io_realm_Realm>`  instance hasn't been closed. It will always return ``true``  for an unmanaged collection.
       
       
       
       
       
       
       
       
       **Returns**
       
       ``true``  if it is still valid to use or an unmanaged collection, ``false``  otherwise.
       
       
       
       
       
       
       
       
       
   
   


.. _iterator:

.. _iterator__:

.. _RealmSet_iterator:

.. _RealmSet_iterator__:

.. _io_realm_RealmSet_iterator:

.. _io_realm_RealmSet_iterator__:



iterator
--------

.. list-table::
   :header-rows: 1
   
   * - | public `Iterator <https://docs.oracle.com/javase/7/docs/api/java/util/Iterator.html>`__  :ref:`iterator <io_realm_RealmSet_iterator>` ()
       | 
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _load:

.. _load__:

.. _RealmSet_load:

.. _RealmSet_load__:

.. _io_realm_RealmSet_load:

.. _io_realm_RealmSet_load__:



load
----

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`load <io_realm_RealmSet_load>` ()
       | 
       
       
       
   
   * - Blocks the collection until all data are available.
       
       
       
       
       
       
       **Returns**
       
       ``true``  if the data could be successfully loaded, ``false``  otherwise.
       
       
       
       
       
       
       
       
       
   
   


.. _max:

.. _max__:

.. _RealmSet_max:

.. _RealmSet_max__:

.. _io_realm_RealmSet_max:

.. _io_realm_RealmSet_max__:



max
----

.. _io_realm_RealmSet_max_java_lang_String_:

.. _io_realm_RealmSet_max_String_:

.. _max_java_lang_String_:

.. _max_String_:

.. _RealmSet_max_java_lang_String_:

.. _RealmSet_max_String_:

.. list-table::
   :header-rows: 1
   
   * - | public `Number <https://docs.oracle.com/javase/7/docs/api/java/lang/Number.html>`__  :ref:`max <io_realm_RealmSet_max>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       
   
   * - Finds the maximum value of a field.
       
       
       
       
       
       
       **Returns**
       
       if no objects exist or they all have ``null``  as the value for the given field, ``null``  will be returned. Otherwise the maximum value is returned. When determining the maximum value, objects with ``null``  values are ignored.
       
       
       
       
       
       
       
       
       
   
   


.. _maxDate:

.. _maxDate__:

.. _RealmSet_maxDate:

.. _RealmSet_maxDate__:

.. _io_realm_RealmSet_maxDate:

.. _io_realm_RealmSet_maxDate__:



maxDate
-------

.. _io_realm_RealmSet_maxDate_java_lang_String_:

.. _io_realm_RealmSet_maxDate_String_:

.. _maxDate_java_lang_String_:

.. _maxDate_String_:

.. _RealmSet_maxDate_java_lang_String_:

.. _RealmSet_maxDate_String_:

.. list-table::
   :header-rows: 1
   
   * - | public `Date <https://docs.oracle.com/javase/7/docs/api/java/util/Date.html>`__  :ref:`maxDate <io_realm_RealmSet_maxDate>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       
   
   * - Finds the maximum date.
       
       
       
       
       
       
       **Returns**
       
       if no objects exist or they all have ``null``  as the value for the given date field, ``null``  will be returned. Otherwise the maximum date is returned. When determining the maximum date, objects with ``null``  values are ignored.
       
       
       
       
       
       
       
       
       
   
   


.. _min:

.. _min__:

.. _RealmSet_min:

.. _RealmSet_min__:

.. _io_realm_RealmSet_min:

.. _io_realm_RealmSet_min__:



min
----

.. _io_realm_RealmSet_min_java_lang_String_:

.. _io_realm_RealmSet_min_String_:

.. _min_java_lang_String_:

.. _min_String_:

.. _RealmSet_min_java_lang_String_:

.. _RealmSet_min_String_:

.. list-table::
   :header-rows: 1
   
   * - | public `Number <https://docs.oracle.com/javase/7/docs/api/java/lang/Number.html>`__  :ref:`min <io_realm_RealmSet_min>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       
   
   * - Finds the minimum value of a field.
       
       
       
       
       
       
       **Returns**
       
       if no objects exist or they all have ``null``  as the value for the given field, ``null``  will be returned. Otherwise the minimum value is returned. When determining the minimum value, objects with ``null``  values are ignored.
       
       
       
       
       
       
       
       
       
   
   


.. _minDate:

.. _minDate__:

.. _RealmSet_minDate:

.. _RealmSet_minDate__:

.. _io_realm_RealmSet_minDate:

.. _io_realm_RealmSet_minDate__:



minDate
-------

.. _io_realm_RealmSet_minDate_java_lang_String_:

.. _io_realm_RealmSet_minDate_String_:

.. _minDate_java_lang_String_:

.. _minDate_String_:

.. _RealmSet_minDate_java_lang_String_:

.. _RealmSet_minDate_String_:

.. list-table::
   :header-rows: 1
   
   * - | public `Date <https://docs.oracle.com/javase/7/docs/api/java/util/Date.html>`__  :ref:`minDate <io_realm_RealmSet_minDate>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       
   
   * - Finds the minimum date.
       
       
       
       
       
       
       **Returns**
       
       if no objects exist or they all have ``null``  as the value for the given date field, ``null``  will be returned. Otherwise the minimum date is returned. When determining the minimum date, objects with ``null``  values are ignored.
       
       
       
       
       
       
       
       
       
   
   


.. _remove:

.. _remove__:

.. _RealmSet_remove:

.. _RealmSet_remove__:

.. _io_realm_RealmSet_remove:

.. _io_realm_RealmSet_remove__:



remove
------

.. _io_realm_RealmSet_remove_java_lang_Object_:

.. _io_realm_RealmSet_remove_Object_:

.. _remove_java_lang_Object_:

.. _remove_Object_:

.. _RealmSet_remove_java_lang_Object_:

.. _RealmSet_remove_Object_:

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`remove <io_realm_RealmSet_remove>` (
       |  `Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__  o
       | )
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _removeAll:

.. _removeAll__:

.. _RealmSet_removeAll:

.. _RealmSet_removeAll__:

.. _io_realm_RealmSet_removeAll:

.. _io_realm_RealmSet_removeAll__:



removeAll
---------

.. _io_realm_RealmSet_removeAll_java_util_Collection_:

.. _io_realm_RealmSet_removeAll_Collection_:

.. _removeAll_java_util_Collection_:

.. _removeAll_Collection_:

.. _RealmSet_removeAll_java_util_Collection_:

.. _RealmSet_removeAll_Collection_:

.. _io_realm_RealmSet_removeAll_Collection____:

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`removeAll <io_realm_RealmSet_removeAll>` (
       |  `java.util.Collection\<?> <https://docs.oracle.com/javase/7/docs/api/java/util/Collection.html>`__  c
       | )
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _removeAllChangeListeners:

.. _removeAllChangeListeners__:

.. _RealmSet_removeAllChangeListeners:

.. _RealmSet_removeAllChangeListeners__:

.. _io_realm_RealmSet_removeAllChangeListeners:

.. _io_realm_RealmSet_removeAllChangeListeners__:



removeAllChangeListeners
------------------------

.. list-table::
   :header-rows: 1
   
   * - | public **void** :ref:`removeAllChangeListeners <io_realm_RealmSet_removeAllChangeListeners>` ()
       | 
       
       
       
   
   * - Removes all user-defined change listeners.
       
       
       
       
       
       
       
       
       **Throws**
       
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if you try to remove listeners from a non-Looper Thread.
          
          
          
       
       
       
       
       
       
       .. seealso::
       
       
          
          - :ref:`io.realm.RealmChangeListener <io_realm_RealmChangeListener>` 
             
             
             
          
          
          
       
       
   
   


.. _removeChangeListener:

.. _removeChangeListener__:

.. _RealmSet_removeChangeListener:

.. _RealmSet_removeChangeListener__:

.. _io_realm_RealmSet_removeChangeListener:

.. _io_realm_RealmSet_removeChangeListener__:



removeChangeListener
--------------------

.. _io_realm_RealmSet_removeChangeListener_io_realm_SetChangeListener_:

.. _io_realm_RealmSet_removeChangeListener_SetChangeListener_:

.. _removeChangeListener_io_realm_SetChangeListener_:

.. _removeChangeListener_SetChangeListener_:

.. _RealmSet_removeChangeListener_io_realm_SetChangeListener_:

.. _RealmSet_removeChangeListener_SetChangeListener_:

.. _io_realm_RealmSet_removeChangeListener_SetChangeListener_E__:

.. list-table::
   :header-rows: 1
   
   * - | public **void** :ref:`removeChangeListener <io_realm_RealmSet_removeChangeListener>` (
       |  :ref:`io.realm.SetChangeListener\<E> <io_realm_SetChangeListener>`  listener
       | )
       
       
       
   
   * - Removes the specified change listener.
       
       
       
       
       **Parameters**
       
       - ``listener`` - the change listener to be removed.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the change listener is ``null`` .
          
          
          
          
          
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if you try to remove a listener from a non-Looper Thread.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmSet_removeChangeListener_io_realm_RealmChangeListener_:

.. _io_realm_RealmSet_removeChangeListener_RealmChangeListener_:

.. _removeChangeListener_io_realm_RealmChangeListener_:

.. _removeChangeListener_RealmChangeListener_:

.. _RealmSet_removeChangeListener_io_realm_RealmChangeListener_:

.. _RealmSet_removeChangeListener_RealmChangeListener_:

.. _io_realm_RealmSet_removeChangeListener_RealmChangeListener_RealmSet_E___:

.. list-table::
   :header-rows: 1
   
   * - | public **void** :ref:`removeChangeListener <io_realm_RealmSet_removeChangeListener>` (
       |  :ref:`io.realm.RealmChangeListener\<io.realm.RealmSet\<E>> <io_realm_RealmChangeListener>`  listener
       | )
       
       
       
   
   * - Removes the specified change listener.
       
       
       
       
       **Parameters**
       
       - ``listener`` - the change listener to be removed.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the change listener is ``null`` .
          
          
          
          
          
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if you try to remove a listener from a non-Looper Thread.
          
          
          
       
       
       
       
       
   
   


.. _retainAll:

.. _retainAll__:

.. _RealmSet_retainAll:

.. _RealmSet_retainAll__:

.. _io_realm_RealmSet_retainAll:

.. _io_realm_RealmSet_retainAll__:



retainAll
---------

.. _io_realm_RealmSet_retainAll_java_util_Collection_:

.. _io_realm_RealmSet_retainAll_Collection_:

.. _retainAll_java_util_Collection_:

.. _retainAll_Collection_:

.. _RealmSet_retainAll_java_util_Collection_:

.. _RealmSet_retainAll_Collection_:

.. _io_realm_RealmSet_retainAll_Collection____:

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`retainAll <io_realm_RealmSet_retainAll>` (
       |  `java.util.Collection\<?> <https://docs.oracle.com/javase/7/docs/api/java/util/Collection.html>`__  c
       | )
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _size:

.. _size__:

.. _RealmSet_size:

.. _RealmSet_size__:

.. _io_realm_RealmSet_size:

.. _io_realm_RealmSet_size__:



size
----

.. list-table::
   :header-rows: 1
   
   * - | public **int** :ref:`size <io_realm_RealmSet_size>` ()
       | 
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _sum:

.. _sum__:

.. _RealmSet_sum:

.. _RealmSet_sum__:

.. _io_realm_RealmSet_sum:

.. _io_realm_RealmSet_sum__:



sum
----

.. _io_realm_RealmSet_sum_java_lang_String_:

.. _io_realm_RealmSet_sum_String_:

.. _sum_java_lang_String_:

.. _sum_String_:

.. _RealmSet_sum_java_lang_String_:

.. _RealmSet_sum_String_:

.. list-table::
   :header-rows: 1
   
   * - | public `Number <https://docs.oracle.com/javase/7/docs/api/java/lang/Number.html>`__  :ref:`sum <io_realm_RealmSet_sum>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       
   
   * - Calculates the sum of a given field.
       
       
       
       
       
       
       **Returns**
       
       the sum. If no objects exist or they all have ``null``  as the value for the given field, ``0``  will be returned. When computing the sum, objects with ``null``  values are ignored.
       
       
       
       
       
       
       
       
       
   
   


.. _toArray:

.. _toArray__:

.. _RealmSet_toArray:

.. _RealmSet_toArray__:

.. _io_realm_RealmSet_toArray:

.. _io_realm_RealmSet_toArray__:



toArray
-------

.. _io_realm_RealmSet_toArray_T_:

.. _io_realm_RealmSet_toArray_T____:

.. _toArray_T_:

.. _toArray_T____:

.. _RealmSet_toArray_T_:

.. _RealmSet_toArray_T____:

.. _io_realm_RealmSet_toArray_T[]_:

.. list-table::
   :header-rows: 1
   
   * - | public **T** :ref:`toArray <io_realm_RealmSet_toArray>` <**T** >(
       |  **T[]** a
       | )
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
       
       
   
   
.. list-table::
   :header-rows: 1
   
   * - | public `Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__  :ref:`toArray <io_realm_RealmSet_toArray>` ()
       | 
       
       
       
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _where:

.. _where__:

.. _RealmSet_where:

.. _RealmSet_where__:

.. _io_realm_RealmSet_where:

.. _io_realm_RealmSet_where__:



where
-----

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`where <io_realm_RealmSet_where>` ()
       | 
       
       
       
   
   * - Returns a RealmQuery, which can be used to query for specific objects of this class.
       
       
       
       
       
       
       **Returns**
       
       a RealmQuery object.
       
       
       
       
       **Throws**
       
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if Realm instance has been closed or parent object has been removed.
          
          
          
       
       
       
       
       
       
       .. seealso::
       
       
          
          - :ref:`io.realm.RealmQuery <io_realm_RealmQuery>` 
             
             
             
          
          
          
       
       
   
   



