==============================
$allElementsTrue (aggregation)
==============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. expression:: $allElementsTrue

   Evaluates an array as a set and returns ``true`` if *no* element in
   the array is ``false``. Otherwise, returns ``false``. An empty array
   returns ``true``.

   :expression:`$allElementsTrue` has the following syntax:

   .. code-block:: javascript

      { $allElementsTrue: [ <expression> ] }

   The ``<expression>`` itself must resolve to an array, separate from
   the outer array that denotes the argument list. For more information
   on expressions, see :ref:`aggregation-expressions`.

Behavior
--------

.. include:: /includes/extracts/fact-agg-top-level-expressions-allElementsTrue.rst

.. include:: /includes/extracts/fact-agg-boolean-allElementsTrue.rst

.. list-table::
   :header-rows: 1
   :widths: 70, 15, 15

   * - Example

     -

     - Result

   * - ``{ $allElementsTrue: [ [ true, 1, "someString" ] ] }``

     -

     - ``true``

   * - ``{ $allElementsTrue: [ [ [ false ] ] ] }``

     -

     - ``true``

   * - ``{ $allElementsTrue: [ [ ] ] }``

     -

     - ``true``

   * - ``{ $allElementsTrue: [ [ null, false, 0 ] ] }``

     -

     - ``false``

Example
-------

Create an example collection named ``survey`` with the following
documents:

.. code-block:: javascript

   db.survey.insertMany([
      { "_id" : 1, "responses" : [ true ] },
      { "_id" : 2, "responses" : [ true, false ] },
      { "_id" : 3, "responses" : [ ] },
      { "_id" : 4, "responses" : [ 1, true, "seven" ] },
      { "_id" : 5, "responses" : [ 0 ] },
      { "_id" : 6, "responses" : [ [ ] ] },
      { "_id" : 7, "responses" : [ [ 0 ] ] },
      { "_id" : 8, "responses" : [ [ false ] ] },
      { "_id" : 9, "responses" : [ null ] },
      { "_id" : 10, "responses" : [ undefined ] }
   ])

The following operation uses the :expression:`$allElementsTrue`
operator to determine if the ``responses`` array only contains values
that evaluate to ``true``:

.. code-block:: javascript

   db.survey.aggregate(
      [
        { $project: { responses: 1, isAllTrue: { $allElementsTrue: [ "$responses" ] }, _id: 0 } }
      ]
   )

The operation returns the following results:

.. code-block:: javascript

   { "responses" : [ true ], "isAllTrue" : true }
   { "responses" : [ true, false ], "isAllTrue" : false }
   { "responses" : [ ], "isAllTrue" : true }
   { "responses" : [ 1, true, "seven" ], "isAllTrue" : true }
   { "responses" : [ 0 ], "isAllTrue" : false }
   { "responses" : [ [ ] ], "isAllTrue" : true }
   { "responses" : [ [ 0 ] ], "isAllTrue" : true }
   { "responses" : [ [ false ] ], "isAllTrue" : true }
   { "responses" : [ null ], "isAllTrue" : false }
   { "responses" : [ undefined ], "isAllTrue" : false }
