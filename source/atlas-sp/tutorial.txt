.. _atlas-sp-tutorial:

========================================
Get Started with {+atlas-sp+}
========================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol
   
.. include:: includes/atlas-sp/private-preview.rst

This tutorial takes you through the steps of setting up {+atlas-sp+}
and running your first stream processing query.

Prerequisites
-------------

To complete this tutorial you need:

- An |service| project
- :manual:`mongosh </mongodb-shell/install/>`
- |service| :authrole:`Project Owner` privileges
- An |service| {+cluster+} with no data

Procedure
---------

.. procedure::
   :style: normal

   .. step:: Navigate to the Stream Processing page for your project.

      .. procedure::
         :style: connected

         .. step:: If it's not already displayed, select the 
            organization that contains your project from the
            |ui-org-menu| in the navigation bar.

         .. step:: If it's not already displayed, select your project 
            from the :guilabel:`Projects` menu in the navigation bar.

         .. step:: In the left-hand menu, 
            click :guilabel:`Stream Processing` under the 
            :guilabel:`SERVICES` heading.

   .. step:: Create a {+SPI+}.
             
             Click :guilabel:`Get Started` in the lower-right corner.
             After displaying a brief explanation of the core 
             {+atlas-sp+} components, {+atlas-sp+} creates an instance 
             and displays the name and cloud provider region in a modal 
             window.

   .. step:: Get the {+spi+} connection string.

      .. procedure::
         :style: connected

         .. step:: Locate the overview panel of your 
            {+spi+} and click :guilabel:`Connect`. 
            
         .. step:: Select 
            :guilabel:`I have the MongoDB shell installed`.

         .. step:: From the 
            :guilabel:`Select your mongo shell version` dropdown
            menu, select the latest version of ``mongosh``.

         .. step:: Copy the connection string provided under 
            :guilabel:`Run your connection string in your command line`.
            You will need this in a later step.

         .. step:: Click 
            :guilabel:`Close`.

   .. step:: Add the sample stream connection to the connection 
      registry.

      This connection serves as your streaming data source.

      .. procedure::
         :style: connected

         .. step:: In the pane for your {+spi+}, click
            :guilabel:`Configure`.

         .. step:: Click :guilabel:`Add sample connection.` This 
            creates a ``sample_stream_solar`` connection of type 
            ``Sample Stream``. Click on the 
            :guilabel:`Connection Registry` tab to verify that the
            connection exists.

   .. step:: Add a MongoDB |service| connection to the connection 
      registry.

      This connection serves as our streaming data sink.

      .. procedure::
         :style: connected

         .. step:: In the pane for your {+spi+}, click
            :guilabel:`Configure`.

         .. step:: In the :guilabel:`Connection Registry` tab, click
            :guilabel:`+ Add Connection` in the upper right.

         .. step:: Click :guilabel:`Atlas Database`. In the 
            :guilabel:`Connection Name` field, enter ``mongodb1``.
            From the :guilabel:`Atlas Cluster` drop down, select an
            |service| {+cluster+} without any data stored on it.

         .. step:: Click :guilabel:`Add connection`.

   .. step:: Verify that your streaming data source emits messages.

      To do this, create a minimal stream query.

      .. procedure::
         :style: connected

         .. step:: Open a terminal
            application of your choice.

         .. step:: Connect to your {+spi+} 
            with ``mongosh``.
            
            Paste the ``mongosh`` connection string that you copied
            in a previous step into your terminal, where 
            ``<atlas-stream-processing-url>`` is the URL of your {+spi+}
            and ``<username>`` is a user with the 
            :authrole:`Project Owner` role.
            
            .. code-block:: sh

               mongosh "mongodb://<atlas-stream-processing-url>/" 
               --tls --authenticationDatabase admin --username <username>

            Enter your password when prompted.

         .. step:: Create the stream 
            query.
         
            Copy the following code into your ``mongosh`` prompt:

            .. code-block::
               :copyable: true

               sp.process([{"$source": {
                  "connectionName": "sample_stream_solar"
               }}])

            Verify that data from the ``sample_stream_solar`` 
            connection displays to the console, and terminate 
            the process.

   .. step:: Create a persistent stream processor.
      
      Copy the following code into your ``mongosh`` prompt:

      .. code-block:: sh
         :copyable: true

         var pipeline = [{
            $source: {
            connectionName: "sample_stream_solar",
               timeField: {
                  $dateFromString: {
                  dateString: '$timestamp'
                  }
            }
            }
         },
         {
            $tumblingWindow: {
            interval: {
               size: NumberInt(1),
               unit: "hour"
               },
            pipeline: [{
               $unwind: {
                  path: "$obs"
               }
            },
            {
               $group: {
                  _id: "$group_id",
                  max: {
                  $max: "$obs.watts"
                  },
                  avg: {
                  $avg: "$obs.watts"
                  }
               }
            }]
            }
         }]

         var m= {
            $merge: {
            into: {
               connectionName: "mongodb1",
               db: "MySolar",
               coll: "solar"
            }
            }
         }

         sp.createStreamProcessor("avgWatts", [...pipeline, m])

      This creates a stream processor named ``avgWatts`` that
      applies the previously defined query and writes the 
      processed data to the ``solar`` collection of the 
      ``MySolar`` database on the {+cluster+} you connected to. 
      
      It returns the average and peak wattage of all 
      observed solar panels over 1 hour intervals.

   .. step:: Start the stream processor. 

      Run the following command in ``mongosh``:

      .. code-block:: sh

         sp.avgWatts.start()

   .. step:: Verify the output of the stream processor.

      To verify that the processor is active, run the following
      command in ``mongosh``:

      .. code-block:: sh

         sp.StreamProcessor.stats("avgWatts")

      This command reports operational statistics of the 
      ``avgWatts`` stream processor.

      To verify that the stream processor is writing data to your
      |service| {+cluster+}, navigate to the :guilabel:`Collections`
      tab of the {+cluster+} and view the ``MySolar`` collection.

   .. step:: Stop the stream processor.

      Run the following command in ``mongosh``:

      .. code-block:: shell
         :copyable: true

         sp.avgWatts.stop()
      
   .. step:: Drop the stream processor.

      Run the following command in ``mongosh``:

      .. code-block:: shell
         :copyable: true

         sp.avgWatts.drop()

      To confirm that you have dropped ``avgWatts``, list
      all your available stream processors:

      .. code-block:: shell
         :copyable: true

         sp.listStreamProcessors()

Next Steps
----------

Learn how to:

- :ref:`streams-manage-processor`
- :ref:`manage-spi`
