.. meta::
   :keywords: atlas cli, atlas ui
   :description: Manage programmatic access to a project using API keys or service accounts, including viewing, editing, and revoking access.

.. _atlas-admin-api-access-project:

=======================================
Manage Programmatic Access to a Project
=======================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Use the following procedures to manage programmatic access to 
a project. To learn more, see :ref:`about-project-api-keys`.

Required Access
---------------

To perform any of the following actions, you must have
:authrole:`Project Owner` access to the project.

.. _view-project-api-key:

View Programmatic Access to a Project
-------------------------------------

You can view the details of all service accounts or |api| keys that have access 
to your project.

.. tabs::

   .. tab:: Service Account
      :tabid: serviceaccount

      .. tabs::

         .. tab:: {+atlas-ui+}
            :tabid: ui

            To view the details of a service account in a project using the 
            {+atlas-ui+}:

            .. procedure:: 
               :style: normal

               .. include:: /includes/nav/steps-project-access-manager.rst

               .. step:: Click the :guilabel:`Applications` tab.

               .. step:: Click :guilabel:`Service Accounts`.

                  All the service accounts with access to your project are listed.

                  Click the name of a service account to view its details, including:

                  - The obfuscated client secret for the service account
                  - The date the client secret was last used
                  - The date the client secret was created
                  - The |ipaddr| addresses from which the service account can access the |api|
                  - The :ref:`roles <project-roles>` the service account has been assigned    

         .. tab:: {+atlas-admin-api+}
            :tabid: api

            You can use the {+atlas-admin-api+} to :oas-bump-atlas-op:`list the names
            and details of the service accounts that have access to your 
            project <listprojectserviceaccounts>`.

   .. tab:: |api| Key
      :tabid: apikey

      .. tabs::

         .. tab:: {+atlas-cli+}
            :tabid: atlascli

            .. include:: /includes/extracts/atlas-projects-apiKeys-list.rst

            You can view the |api| access list entries for a project 
            |api| key using an ``atlas organizations`` command.

            .. include:: /includes/extracts/atlas-organizations-apiKeys-accessLists-list.rst

         .. tab:: {+atlas-ui+}
            :tabid: ui

            To view the details of an |api| key in a project using the 
            {+atlas-ui+}:

            .. include:: /includes/steps-app-api-key-view-details-in-project.rst

.. _change-project-api-key-roles:

Change Programmatic Access Roles for a Project
----------------------------------------------

.. tabs::

   .. tab:: Service Account
      :tabid: serviceaccount

      .. tabs::

         .. tab:: {+atlas-ui+}
            :tabid: ui

            .. procedure:: 
               :style: normal 

               .. include:: /includes/nav/steps-project-access-manager.rst

               .. step:: Click the :guilabel:`Applications` tab.

               .. step:: Click :guilabel:`Service Accounts`.
               
               .. step:: Click the name of a service account.

               .. step:: Edit the :guilabel:`Project Permissions`.

                  a. Click :guilabel:`Edit Permissions`.

                  #. From the :guilabel:`Project Permissions` menu, select the
                     :ref:`new role or roles <project-roles>` for the
                     service account.

                  #. Click :guilabel:`Save and next`.

                  .. important::

                     The service account credentials remain active until they expire
                     or are revoked.

         .. tab:: {+atlas-admin-api+}
            :tabid: api

            You can use the {+atlas-admin-api+} to :oas-bump-atlas-op:`update 
            service account details for a project <updateprojectserviceaccount>`.

   .. tab:: API Key
      :tabid: apikey

      .. include:: /includes/steps-app-api-key-change-roles-in-project.rst

.. _edit-project-api-key-access-list:

Edit Project Access List
------------------------

.. tabs::

   .. tab:: Service Account
      :tabid: serviceaccount

      .. tabs::

         .. tab:: {+atlas-ui+}
            :tabid: ui

            .. procedure:: 
               :style: normal 

               .. include:: /includes/nav/steps-project-access-manager.rst

               .. step:: Click the :guilabel:`Applications` tab.

               .. step:: Click :guilabel:`Service Accounts`.
               
               .. step:: Click the name of a service account.

               .. step:: Edit the :guilabel:`API Access List`.

                  a. To add an |ipaddr| address or |cidr| block from which you want
                     |service| to accept |api| requests for this service account, click
                     :guilabel:`Add Access List Entry` and type an |ipaddr| address.

                     You can also click :guilabel:`Use Current IP Address` if the host
                     you are using to access |service| also will make |api| requests
                     using this service account.

                  #. To remove an |ipaddr| address from the access list, click
                     :icon:`trash-alt` to the right of the |ipaddr| address.
  
                  #. Click :guilabel:`Save`.   

         .. tab:: {+atlas-admin-api+}
            :tabid: api

            You can use the {+atlas-admin-api+} to :oas-bump-atlas-op:`update 
            service account details for a project <updateprojectserviceaccount>`.

   .. tab:: API Key
      :tabid: apikey

      .. tabs::

         .. tab:: {+atlas-cli+}
            :tabid: atlascli

            You can edit the |api| access list entries for a project |api|
            key using ``atlas organizations`` commands.

            Add an |api| Access List Entry for the |api| Key
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

            .. include:: /includes/extracts/atlas-organizations-apiKeys-accessLists-create.rst

            Delete an |api| Access List Entry for the |api| Key
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

            .. include:: /includes/extracts/atlas-organizations-apiKeys-accessLists-delete.rst

         .. tab:: {+atlas-ui+}
            :tabid: ui

            .. include:: /includes/steps-app-api-key-edit-access-list-in-project.rst

.. _delete-project-api-key:

.. _delete-project-app-api-key:

Revoke Programmatic Access to a Project
---------------------------------------

.. tabs::

   .. tab:: Service Account
      :tabid: serviceaccount

      .. tabs::

         .. tab:: {+atlas-ui+}
            :tabid: ui

            .. procedure:: 
               :style: normal 

               .. include:: /includes/nav/steps-project-access-manager.rst

               .. step:: Click the :guilabel:`Applications` tab.

               .. step:: Click :guilabel:`Service Accounts`.
               
               .. step:: Remove the service account.
                  
                  a. Click the :icon-lg:`Trash` icon under :guilabel:`Actions` 
                     to the right of the service account you want to remove from
                     the project.

                  #. Click :guilabel:`Remove from this project`.

                  .. include:: /includes/fact-deleted-project-service-account-remains-in-org.rst

         .. tab:: {+atlas-admin-api+}
            :tabid: api

            You can use the {+atlas-admin-api+} to :oas-bump-atlas-op:`remove
            a service account from a project <deleteprojectserviceaccount>`.  

   .. tab:: API Key
      :tabid: apikey

      .. tabs::

         .. tab:: {+atlas-cli+}
            :tabid: atlascli

            .. include:: /includes/extracts/atlas-projects-apiKeys-delete.rst

         .. tab:: {+atlas-ui+}
            :tabid: ui

            To delete an |api| key from a project using the {+atlas-ui+}:

            .. include:: /includes/steps-app-api-key-delete-from-project.rst