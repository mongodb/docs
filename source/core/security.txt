========
Security
========

.. default-domain:: mongodb

Overview
--------

.. only:: cloud

   |mms| provides encryption, authentication and authorization to
   ensure the security of your |mms| agents and MongoDB deployments.

.. only:: classic

   |mms| provides configurable encryption, authentication, and
   authorization to ensure the security of your |mms| agents and
   MongoDB deployments. |mms| supports :ref:`SSL <security-ssl>`,
   :ref:`security-mongodb-cr`, :ref:`security-ldap`, and
   :ref:`security-kerberos`.

.. only:: onprem

   |onprem| provides configurable encryption, authentication, and
   authorization to ensure the security of your |onprem| agents, |onprem|
   servers, and MongoDB deployments. |onprem| supports :ref:`SSL
   <security-ssl>`, :ref:`security-mongodb-cr`, :ref:`security-ldap`, and
   :ref:`security-kerberos`.

.. _security-ssl:

SSL Encryption
--------------

.. only:: cloud or classic

   |mms| can use SSL for encrypting communications for the following
   Monitoring Agent and Backup Agent connections:

   - Connections to |mms|.

   - Connections to MongoDB instances that use SSL. You must set
     each MongoDB host's :guilabel:`Use SSL` setting in |mms| and must
     configure the agents' SSL settings. See
     :doc:`/tutorial/configure-monitoring-agent-for-ssl` and
     :doc:`/tutorial/configure-backup-agent-for-ssl`.

.. only:: onprem

   |onprem| can use SSL for encrypting communications for the
   following connections:

   Connections to Backing MongoDB Instances
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   To encrypt connections from |onprem| to the backing MongoDB instances
   that hold the |application| database and Backup Blockstore database, see
   :doc:`/tutorial/configure-ssl-connection-to-backing-mongodb`.

   Connections from Agents and Clients to |onprem|
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   You can encrypt connections from the Monitoring and Backup Agents to
   |onprem| and from website clients to the |onprem| web interface. You can
   encrypt connections in either of two ways:

   - Set up an HTTPs proxy in front of |onprem|.

   - Run the |application| over HTTPS. See
     :doc:`/tutorial/configure-ssl-connection-to-web-interface`

   Connections from Agents to Monitored MongoDB Instances
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   To encrypt connections from the Monitoring and Backup Agents to monitored
   MongoDB instances that use SSL:

   - Set each MongoDB host's :guilabel:`Use SSL` setting in |onprem|.

   - Configure the agents' SSL settings. See
     :doc:`/tutorial/configure-monitoring-agent-for-ssl` and
     :doc:`/tutorial/configure-backup-agent-for-ssl`.

.. _security-access-control-authentication:

Access Control and Authentication
---------------------------------

MongoDB uses Role-Based Access Control (RBAC) to determine access to a
MongoDB system. When run with access control, MongoDB requires users to
authenticate themselves to determine their access.

.. only:: cloud

   If you :ref:`enable authentication <enable-authentication>` for your
   deployments, the |mms| agents authenticate to the deployments as MongoDB
   users with appropriate privileges.

.. only:: onprem

   If a backing MongoDB instance runs with access control, the |application|
   must authenticate to the backing instances as a MongoDB user with
   appropriate access. The user must have the following roles:
   :authrole:`readWriteAnyDatabase`, :authrole:`clusterAdmin`, and
   :authrole:`dbAdminAnyDatabase`.

.. only:: onprem or classic

   If a MongoDB deployment runs with access control, the Monitoring and
   Backup Agents must authenticate to the deployment as MongoDB users with
   appropriate access. See the following:

   - :doc:`/reference/required-access-monitoring-agent`
   - :doc:`/reference/required-access-backup-agent`

   For an overview on authenticating with the supported mechanisms, see
   :ref:`security-mongodb-cr`, :ref:`security-ldap`, and
   :ref:`security-kerberos`.

.. _security-mongodb-cr:

MONGODB-CR
----------

.. only:: classic or cloud

   |mms| can use the MongoDB Challenge-Response, i.e. ``MONGODB-CR``,
   authentication mechanism to authenticate to a MongoDB deployment.
   For more information, see the ``MONGODB-CR`` section on the
   :manual:`Authentication page </core/authentication>` in the MongoDB manual.

.. only:: onprem

   Application Configuration Settings
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   The |application| can use MongoDB Challenge-Response, i.e.
   ``MONGODB-CR``, to authenticate to the backing MongoDB instances.
   See :setting:`mongo.mongoUri`.

.. only:: classic or onprem

   Agent Configuration
   ~~~~~~~~~~~~~~~~~~~

   If your MongoDB deployment uses ``MONGODB-CR`` for authentication, you
   must create a MongoDB user for the |mms| agents as well as specify the
   host's authentication settings.

   .. include:: /includes/ref-mongodb-cr-configuration.rst

.. only:: classic or onprem

   .. _security-ldap:

   LDAP
   ----

   .. only:: classic

      |mms| agents can use the LDAP authentication mechanism to
      authenticate to the MongoDB deployment.

   .. only:: onprem

      |mms| agents can use the LDAP authentication mechanism to connect
      to the MongoDB deployment. Additionally, and independently, the
      |application| can also use LDAP to authenticate to its
      backing MongoDB instances.

   .. only:: onprem

      Application Configuration Settings
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      To configure LDAP authentication between the |application|
      and the backing MongoDB instances, see
      :doc:`/tutorial/configure-for-ldap-authentication`. See also the
      :setting:`mongo.mongoUri` setting and the :ref:`LDAP settings
      <ldap-settings>`.

   Agent Configuration
   ~~~~~~~~~~~~~~~~~~~

   If your MongoDB deployment uses LDAP for authentication, you must
   create a MongoDB user for the |mms| agents as well as specify the
   host's authentication settings.

   .. include:: /includes/ref-ldap-configuration.rst

.. only:: classic or onprem

   .. _security-kerberos:

   Kerberos
   --------

   .. only:: onprem

      Application Configuration Settings
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      To enable Kerberos authentication between the |application| and
      its :doc:`backing database
      </tutorial/prepare-backing-mongodb-instances>`, see
      :ref:`configuration-kerberos-settings` and see the
      :setting:`mongo.mongoUri` setting.

   Agent Configuration
   ~~~~~~~~~~~~~~~~~~~

   If your MongoDB deployment uses Kerberos for authentication, you must
   create the Kerberos Principal for the |mms| agents, create a MongoDB
   user for that Kerberos Principal, edit the agent's configuration file,
   and specify the host's authentication settings.

   If you are running both the Monitoring Agent and the Backup Agent on
   the same server, then both agents must connect as the same Kerberos
   Principal.

   .. include:: /includes/ref-kerberos-configuration.rst

Two-Factor Authentication
-------------------------

.. only:: classic or cloud

   To activate two-factor authentication, which users and
   administrators use to authenticate to the |mms| interface, see
   :doc:`/core/two-factor-authentication`.

.. only:: onprem

   To activate and manage two-factor authentication, which users and
   administrators use to authenticate to the |mms| interface, see
   :doc:`/core/two-factor-authentication` and
   :doc:`/tutorial/manage-two-factor-authentication`.

.. only:: classic or cloud

   Required Ports and IP Addresses
   -------------------------------

   Required Outbound Access
   ~~~~~~~~~~~~~~~~~~~~~~~~

   .. only:: cloud

      The agents connect to |mms| on port ``443``. Whether you provision
      your servers on AWS or on your own network, configure your network
      infrastructure to allow outbound connections on port ``443``.

   .. only:: classic

      The agents connect to |mms| on port ``443``. Configure your network
      infrastructure to allow outbound connections on port ``443``.

   If you wish to restrict outbound access on port ``443``
   to specific IP addresses, you must keep open the following addresses to
   allow connection to the ``mms.mongodb.com`` and
   ``api-backup.mongodb.com`` servers:

   - ``54.173.82.137``

   - ``54.175.147.155``

   The |mms| Agents will ``GET`` AND ``POST`` to these IPs on port ``443``.

   .. only:: cloud

      Additionally, the Automation Agents require outbound access on port ``443`` to
      download MongoDB binaires from the ``fastdl.mongodb.org`` domain, provided
      by Amazon Cloudfront.  The IP ranges for Cloudfront change frequently.
      See `the current list of IP ranges for Cloudfront
      <http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/LocationsOfEdgeServers.html>`_.

      Required Inbound Access
      ~~~~~~~~~~~~~~~~~~~~~~~

      If you are *not* using :doc:`|mms| provisioning
      </tutorial/provision-aws-servers>`, you do *not* need to keep any
      inbound ports open.

      If you *are* using :doc:`|mms| provisioning
      </tutorial/provision-aws-servers>`, you must, at minimum, grant SSH
      access to the following ranges:

      - ``4.71.186.128/25``

      - ``4.35.16.128/25``

      .. important::

         MongoDB reserves the right to change these IP addresses at any time
         without user notice.

      For information specific to AWS access, see
      :ref:`ssh-access-to-aws`.

   Required Ports on Your Network
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   .. only:: cloud

      All MongoDB processes must be accessible to all |mms| Agents.  Therefore, all
      MongoDB ports must be open to every server that hosts an Automation, Monitoring
      or Backup Agent. For example, if you are running MongoDB processes on ``27000``,
      ``27017`` and ``27020``, then those three ports must be open from all servers
      that are hosting an |mms| Agent.

   .. only:: classic

      All MongoDB processes must be accessible to the Monitoring and Backup Agents.
      Therefore, all MongoDB ports must be open to every server that hosts a Monitoring
      or Backup Agent. For example, if you are running MongoDB processes on ``27000``,
      ``27017`` and ``27020``, then those three ports must be open from all servers
      that are hosting a Monitoring or Backup Agent.
