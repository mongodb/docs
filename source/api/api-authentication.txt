.. _api-authentication:

========================================
{+atlas-admin-api+} Authentication
========================================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. _HTTP Digest Authentication: http://en.wikipedia.org/wiki/Digest_access_authentication

The {+atlas-admin-api+} uses |http| Digest Authentication to authenticate
requests. Digest authentication requires a username and a password, where 
the |api| public key serves as the username and its corresponding |api| private key 
serves as the password. |service| hashes these values by using a unique value 
called a **nonce**. The details of digest authentication are beyond the scope of 
this document. For more information, see `HTTP Digest Authentication`_.

.. include:: /includes/fact-api-authentication.rst

.. seealso::

   `Configure Digest Authentication for Node, Python, and Ruby  
   <https://www.mongodb.com/developer/products/atlas/nodejs-python-ruby-atlas-api/>`_

Considerations
--------------

Review the following:

- The |service|-generated nonce is used by the client to hash the
  username and password before sending them back to the |service| to
  authenticate a request. The nonce is only valid for a short amount of
  time as per the digest authentication specification. This is to
  prevent replay attacks, so you can't cache a nonce and use it
  forever.

- Using digest authentication with |https| adds an extra layer of
  security. The |api| request never sends the password to the
  |service|.

- Some resources require additional security. These resources deny
  access to any request not made from an IP address on an |api| access
  list. Each organization may have one or more |api| keys, each with
  their own |api| access list. An |api| key can access an |api|
  resource only from an IP address on its |api| access list.

- |service| roles limit which operations an |api| key can perform. The
  |api| resources enforce the same privileges. The resources and
  methods that an |api| key use the same roles as |a-service| user.

- |service| binds many resources to a project. Many |api| resource
  |url|\s follow the format of ``/api/atlas/<version>/groups/<GROUP-ID>/``.
  For these resources, the |api| key must be a member of the
  organization that hosts the project. Otherwise, the |service|
  responds with a `401 <https://httpstatuses.com/401>`__ error.
