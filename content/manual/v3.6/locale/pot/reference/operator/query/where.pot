# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/query/where.txt:3
msgid "$where"
msgstr ""

#: ../source/reference/operator/query/where.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/operator/query/where.txt:18
msgid "Use the :query:`$where` operator to pass either a string containing a JavaScript expression or a full JavaScript function to the query system. The :query:`$where` provides greater flexibility, but requires that the database processes the JavaScript expression or function for *each* document in the collection. Reference the document in the JavaScript expression or function using either ``this`` or ``obj`` ."
msgstr ""

#: ../source/reference/operator/query/where.txt:27
msgid "The :query:`$expr` operator allows the use of :ref:`aggregation expressions <aggregation-framework>` within the query language. :query:`$expr` is faster than :query:`$where` because it does not execute JavaScript and should be preferred where possible."
msgstr ""

#: ../source/reference/operator/query/where.txt:35
msgid "Behavior"
msgstr ""

#: ../source/reference/operator/query/where.txt:38
msgid "Restrictions"
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:1
msgid ":dbcommand:`map-reduce operations <mapReduce>`, the :dbcommand:`group` command, and :query:`$where` operator expressions **cannot** access certain global functions or properties, such as ``db``, that are available in the :binary:`~bin.mongo` shell."
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:6
msgid "The following JavaScript functions and properties **are available** to :dbcommand:`map-reduce operations <mapReduce>`, the :dbcommand:`group` command, and :query:`$where` operator expressions:"
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:13
msgid "Available Properties"
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:14
msgid "Available Functions"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``args``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``MaxKey``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``MinKey``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``assert()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``BinData()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``DBPointer()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``DBRef()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``doassert()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``emit()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``gc()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``HexData()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``hex_md5()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``isNumber()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``isObject()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``ISODate()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``isString()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``Map()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``MD5()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``NumberInt()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``NumberLong()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``ObjectId()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``print()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``printjson()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``printjsononeline()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``sleep()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``Timestamp()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``tojson()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``tojsononeline()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``tojsonObject()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``UUID()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``version()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:43
msgid "``elemMatch``"
msgstr ""

#: ../source/reference/operator/query/where.txt:45
msgid "Only apply the :query:`$where` query operator to top-level documents. The :query:`$where` query operator will not work inside a nested document, for instance, in an :query:`$elemMatch` query."
msgstr ""

#: ../source/reference/operator/query/where.txt:50
msgid "Considerations"
msgstr ""

#: ../source/reference/operator/query/where.txt:52
msgid "Do not use global variables."
msgstr ""

#: ../source/reference/operator/query/where.txt:54
msgid ":query:`$where` evaluates JavaScript and cannot take advantage of indexes. Therefore, query performance improves when you express your query using the standard MongoDB operators (e.g., :query:`$gt`, :query:`$in`)."
msgstr ""

#: ../source/reference/operator/query/where.txt:59
msgid "In general, you should use :query:`$where` only when you can't express your query using another operator. If you must use :query:`$where`, try to include at least one other standard query operator to filter the result set. Using :query:`$where` alone requires a collection scan."
msgstr ""

#: ../source/reference/operator/query/where.txt:65
msgid "Using normal non\\-:query:`$where` query statements provides the following performance advantages:"
msgstr ""

#: ../source/reference/operator/query/where.txt:68
msgid "MongoDB will evaluate non\\-:query:`$where` components of query before :query:`$where` statements. If the non\\-:query:`$where` statements match no documents, MongoDB will not perform any query evaluation using :query:`$where`."
msgstr ""

#: ../source/reference/operator/query/where.txt:73
msgid "The non\\-:query:`$where` query statements may use an :term:`index`."
msgstr ""

#: ../source/reference/operator/query/where.txt:77
msgid "Example"
msgstr ""

#: ../source/reference/operator/query/where.txt:79
msgid "Consider the following documents in the ``users`` collection:"
msgstr ""

#: ../source/reference/operator/query/where.txt:96
msgid "The following example uses :query:`$where` and the ``hex_md5()`` JavaScript function to compare the value of the ``name`` field to an MD5 hash and returns any matching document."
msgstr ""

#: ../source/reference/operator/query/where.txt:106
msgid "The operation returns the following result:"
msgstr ""

