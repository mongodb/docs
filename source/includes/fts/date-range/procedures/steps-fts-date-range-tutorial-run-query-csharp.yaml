stepnum: 1
ref: setup-date-range-query-csharp
level: 4
stepnum: 1
title: "Set up and initialize the .NET/C# project for the query."
content: |
  a. Create a new directory called ``date-range-example`` and
     initialize your project with the ``dotnet new`` command.

     .. code-block:: bash

        mkdir date-range-example
        cd date-range-example
        dotnet new console

  #. Add the .NET/C# Driver to your project as a dependency.

     .. code-block:: bash

        dotnet add package MongoDB.Driver

---
ref: create-date-range-query-csharp
level: 4
stepnum: 2
title: "Create and run an |fts| queries with the ``compound`` operator with two
       clauses in the ``Program.cs`` file."
content: |
  a. Replace the contents of the ``Program.cs``  file with the
     following code.

     The code example performs the following tasks:

     - Imports ``mongodb`` packages and dependencies.
     - Establishes a connection to your |service| cluster.
     - Uses the following ``compound`` operator clauses to query the collection: 
       
       .. include:: /includes/fts/extracts/fts-date-range-clauses.rst

       .. include:: /includes/fts/extracts/fts-date-range-stages.rst

     - Iterates over the cursor to print the documents that match the 
       query.
     
     .. literalinclude:: /includes/fts/date-range/tutorial.cs
        :language: cs
        :linenos:
        :dedent:
        :emphasize-lines: 9

  #. .. include:: /includes/fts/facts/fact-fts-driver-connection-string.rst
  #. Compile and run the ``Program.cs`` file.

     .. io-code-block::
        :copyable: true

        .. input::
           :language: bash

           dotnet run date-range-example.csproj

        .. output::
           :language: json
           :visible: true

           { "genres" : ["Action", "Adventure", "Sci-Fi"], "released" : ISODate("2015-07-01T00:00:00Z"), "title" : "Terminator Genisys", "score" : 2.0 }
           { "genres" : ["Comedy", "Drama", "Music"], "released" : ISODate("2015-07-01T00:00:00Z"), "title" : "Magic Mike XXL", "score" : 2.0 }
           { "genres" : ["Documentary", "Biography", "Drama"], "released" : ISODate("2015-07-01T00:00:00Z"), "title" : "Mala Mala", "score" : 2.0 }
           { "genres" : ["Comedy", "Drama"], "released" : ISODate("2015-07-01T00:00:00Z"), "title" : "Home Care", "score" : 2.0 }
           { "genres" : ["Documentary", "News"], "released" : ISODate("2015-07-01T00:00:00Z"), "title" : "Bitcoin: The End of Money as We Know It", "score" : 2.0 }
           { "genres" : ["Drama", "Mystery", "Sci-Fi"], "released" : ISODate("2015-07-02T00:00:00Z"), "title" : "Pig", "score" : 1.9681909084320068 }


  .. include:: /includes/fts/extracts/fts-date-range-results.rst
---
stepnum: 3
ref: fts-date-range-tutorial-step3
title: "Create and run an |fts| queries with the ``compound`` operator with three
       clauses in the ``Program.cs`` file."
content: |

  a. Replace the contents of the ``Program.cs``  file with the
     following code.

     The code example performs the following tasks:

     - Imports ``mongodb`` packages and dependencies.
     - Establishes a connection to your |service| cluster.
     - Adds on to the previous example.
       
       .. include:: /includes/fts/extracts/fts-date-range-complex-clauses.rst

     - Iterates over the cursor to print the documents that match the 
       query.
     
     .. literalinclude:: /includes/fts/date-range/complex-tutorial.cs
        :language: cs
        :linenos:
        :dedent:
        :emphasize-lines: 10

  #. .. include:: /includes/fts/facts/fact-fts-driver-connection-string.rst
  #. Compile and run the ``Program.cs`` file.

     .. io-code-block::
        :copyable: true

        .. input::
           :language: bash

           dotnet run date-range-example.csproj

        .. output::
           :language: json
           :visible: true

           { "genres" : ["Action", "Adventure", "Sci-Fi"], "released" : ISODate("2015-07-01T00:00:00Z"), "title" : "Terminator Genisys", "score" : 2.0 }
           { "genres" : ["Comedy", "Drama", "Music"], "released" : ISODate("2015-07-01T00:00:00Z"), "title" : "Magic Mike XXL", "score" : 2.0 }
           { "genres" : ["Comedy", "Drama"], "released" : ISODate("2015-07-01T00:00:00Z"), "title" : "Home Care", "score" : 2.0 }
           { "genres" : ["Drama", "Mystery", "Sci-Fi"], "released" : ISODate("2015-07-02T00:00:00Z"), "title" : "Pig", "score" : 1.9681909084320068 }
           { "genres" : ["Drama", "History", "Romance"], "released" : ISODate("2015-07-02T00:00:00Z"), "title" : "Gold Coast", "score" : 1.9681909084320068 }
           { "genres" : ["Animation", "Family"], "released" : ISODate("2015-07-03T00:00:00Z"), "title" : "Zarafa", "score" : 1.9383430480957031 }

  .. include:: /includes/fts/extracts/fts-date-range-results.rst

...
