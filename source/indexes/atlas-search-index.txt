.. _pymongo-atlas-search-index:

======================================
Atlas Search and Vector Search Indexes
======================================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: index, query, optimization, efficiency

Overview
--------

You can manage your :atlas:`Atlas Search </atlas-search>` and 
:atlas:`Atlas Vector Search </atlas-vector-search/vector-search-overview/>`
indexes by using {+driver-short+}. The indexes specify the behavior of
the search and which fields to index.

Atlas Search enables you to perform full-text searches on
collections hosted on MongoDB Atlas. Atlas Search indexes specify the behavior of
the search and which fields to index.

Atlas Vector Search enables you to perform semantic searches on vector
embeddings stored in MongoDB Atlas. Vector Search indexes define the
indexes for the vector embeddings that you want to query and the boolean,
date, objectId, numeric, string, or UUID values that you want to use to
pre-filter your data.

You can call the following methods on a collection to manage your Atlas Search
and Vector Search indexes:

- ``create_search_index()``
- ``create_search_indexes()``
- ``list_search_indexes()``
- ``update_search_index()``
- ``drop_search_index()``

.. note::

   The Atlas Search Index management methods run asynchronously. The
   driver methods can return before confirming that they ran
   successfully. To determine the current status of the indexes, call the
   ``list_search_indexes()`` method.

The following sections provide code examples that demonstrate how to use
each of the preceding methods.

.. _pymongo-atlas-search-index-create:

Create a Search Index
---------------------

You can use the `create_search_index() <{+api-root+}pymongo/collection.html#pymongo.collection.Collection.create_search_index>`__
and the
`create_search_indexes() <{+api-root+}pymongo/collection.html#pymongo.collection.Collection.create_search_indexes>`__
methods to create Atlas Search indexes or Atlas Vector Search indexes.

The following code example shows how to create a single Atlas Search index:

.. literalinclude:: /includes/indexes/indexes.py
   :language: python
   :start-after: start-create-search-index
   :end-before: end-create-search-index

The following code example shows how to create a single Atlas Vector Search index
by using the `SearchIndexModel <{+api-root+}pymongo/operations.html#pymongo.operations.SearchIndexModel>`__
object:

.. literalinclude:: /includes/indexes/indexes.py
   :language: python
   :start-after: start-create-vector-search-index
   :end-before: end-create-vector-search-index

You can use the `create_search_indexes() <{+api-root+}pymongo/collection.html#pymongo.collection.Collection.create_search_indexes>`__
method to create multiple indexes. These indexes can be Atlas Search or
Vector Search indexes. The ``create_search_indexes()`` method takes a list of
``SearchIndexModel`` objects that correspond to each index you want to create.

The following code example shows how to create an Atlas Search index and an Atlas
Vector Search index:

.. literalinclude:: /includes/indexes/indexes.py
   :language: python
   :start-after: start-create-search-indexes
   :end-before: end-create-search-indexes

.. _pymongo-atlas-search-index-list:

List Search Indexes
-------------------

You can use the
`list_search_indexes() <{+api-root+}pymongo/collection.html#pymongo.collection.Collection.list_search_indexes>`__
method to get information about the Atlas Search and Vector Search indexes 
of a collection.

The following code example shows how to print a list of the search indexes of
a collection:

.. literalinclude:: /includes/indexes/indexes.py
   :language: python
   :dedent:
   :start-after: start-list-search-indexes
   :end-before: end-list-search-indexes

.. _pymongo-atlas-search-index-update:

Update a Search Index
---------------------

You can use the
`update_search_index() <{+api-root+}pymongo/collection.html#pymongo.collection.Collection.update_search_index>`__
method to update an Atlas Search or Vector Search index.

The following code example shows how to update an Atlas Search index:

.. literalinclude:: /includes/indexes/indexes.py
   :language: python
   :dedent:
   :start-after: start-update-search-indexes
   :end-before: end-update-search-indexes

The following code example shows how to update an Atlas Vector Search index:

.. literalinclude:: /includes/indexes/indexes.py
   :language: python
   :dedent:
   :start-after: start-update-vector-search-indexes
   :end-before: end-update-vector-search-indexes

.. _pymongo-atlas-search-index-drop:

Delete a Search Index
---------------------

You can use the
`drop_search_index() <{+api-root+}pymongo/collection.html#pymongo.collection.Collection.drop_search_index>`__
method to remove an Atlas Search or Vector Search index.

The following code shows how to delete a search index from a collection:

.. literalinclude:: /includes/indexes/indexes.py
   :language: python
   :dedent:
   :start-after: start-delete-search-indexes
   :end-before: end-delete-search-indexes
