.. _java-sync-quickstart:

=======================
Java Driver Quick Start
=======================

.. facet::
   :name: genre
   :values: tutorial

.. meta::
   :keywords: java sync, set up, runnable app

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Introduction
------------

.. include:: /includes/quick-start/overview.rst

Set up Your Project
-------------------

Install the Java Development Kit (JDK)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/quick-start/install-jdk.rst

Create the Project
~~~~~~~~~~~~~~~~~~~

.. include:: /includes/quick-start/create-project.rst

.. _add-mongodb-dependency:

Add MongoDB as a Dependency
~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you are using `Maven <https://maven.apache.org/>`__, add the following to
your ``pom.xml`` dependencies list:

.. include:: /includes/quick-start/maven-versioned.rst

If you are using `Gradle <https://gradle.org/>`__, add the following to your
``build.gradle`` dependencies list:

.. include:: /includes/quick-start/gradle-versioned.rst

.. note::
   
   We recommend that you use a build tool, such as Maven or Gradle, to install the
   {+driver-short+}. However, if you must download the driver
   and dependencies, you can find the JAR files in the `MongoDB
   Group Maven repository <https://mvnrepository.com/artifact/org.mongodb/>`__.
   The {+driver-short+} requires downloading the JAR files for
   the ``bson``, ``mongodb-driver-core``, and ``slf4j-api`` dependencies.

Once you configure your dependencies, ensure they are available to your
project by running your dependency manager and refreshing
the project in your IDE.

Create a MongoDB Cluster
------------------------

.. include:: /includes/quick-start/atlas-setup.rst


Query Your MongoDB Cluster from Your Application
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Next, create a file to contain your application called ``QuickStart.java``
in the base package directory of your project. Use the following sample
code to run a query on your sample dataset in MongoDB Atlas, replacing the
value of the ``uri`` variable with your MongoDB Atlas connection string.

.. literalinclude:: /includes/quick-start/code-snippets/QuickStart.java
   :start-after: begin QuickStart
   :end-before: end QuickStart
   :language: java
   :dedent:

.. include:: /includes/quick-start/query-output.rst

.. include:: /includes/quick-start/jdk-tls-issue.rst

After completing this step, you should have a working application that uses
the Java driver to connect to your MongoDB cluster, run a query on the
sample data, and print out the result.

Working with POJOs (Optional)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In the previous section, you ran a query on a sample collection to retrieve
data in the map-like class ``Document``. In this section, you can learn to
use your own Plain Old Java Object (POJO) to store and retrieve data from
MongoDB.

Create a file called ``Movie.java`` in the base package directory of your
project and add the following code for a class that includes the following
fields, setters, and getters:

.. literalinclude:: /includes/quick-start/code-snippets/Movie.java
   :start-after: begin moviePojo
   :end-before: end moviePojo
   :language: java
   :dedent:

Create a new file ``QuickStartPojoExample.java`` in the same package
directory as your ``Movie`` file in your project. Use the following sample
code to run a query on your sample dataset in MongoDB Atlas, replacing the
value of the ``uri`` variable with your MongoDB Atlas connection string.
Ensure you replace the "<db_password>" section of the connection string with
the password you created for your user that has **atlasAdmin** permissions:

.. literalinclude:: /includes/quick-start/code-snippets/QuickStartPojoExample.java
   :start-after: begin PojoQuickstart
   :end-before: end PojoQuickstart
   :language: java
   :dedent:

.. include:: /includes/quick-start/pojo-query-output.rst

See the following links For more information about using POJOs to store and
retrieve data:

- :doc:`Guide on using POJOs to store and retrieve data</fundamentals/data-formats/document-data-format-pojo>`
- :doc:`Guide on custom serialization of POJOs </fundamentals/data-formats/pojo-customization>`

Next steps
----------

.. include:: /includes/quick-start/next-steps.rst
