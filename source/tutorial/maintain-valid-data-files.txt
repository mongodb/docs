=========================
Maintain Valid Data Files
=========================

.. default-domain:: mongodb

.. contents::
   :backlinks: none
   :local:

Overview
--------

MongoDB provides features to protect your data in the event of hardware
failure, power failure, network failure, or other unforeseen events that
affect data. Use the features described here to ensure that data is
routinely copied to multiple servers and that damaged servers recover
quickly.

Enable Journaling
-----------------

Always use :ref:`durability journaling <setting-journal>`. The journal
stores recent data changes, with the primary aim of recovering from
database invalidity. By default, MongoDB updates its journal ten
times per second. In the worst case, with journaling enabled,
``1/10`` of a second of data may be lost.

If a :program:`mongod` instance without journaling shuts down
unexpectedly for *any* reason, always assume that your database is
in an invalid state.

For 64-bit builds of :program:`mongod`, MongoDB enables journaling by
default. For more information see :doc:`/core/journaling` and
:doc:`/tutorial/manage-journaling`.

Run All Deployments as Replica Sets
-----------------------------------

Certain recovery options are much simpler if the :program:`mongod`
instance runs as a member of a replica set. The primary goal of
replica sets in MongoDB is to ensure availability and prevent data loss. In
the event of database invalidity, recovery may be as simple as syncing
from a fellow replica set member.

For more information see :doc:`/core/replication`.

Shut Down Cleanly
-----------------

A clean shutdown means that all ongoing MongoDB operations are
complete and :program:`mongod` has flushed and closed all data files.
An unclean shutdown, however, can leave the database in an invalid state.
To ensure a clean shutdown, use one of the shutdown procedures
described in :doc:`/tutorial/manage-mongodb-processes`.

Related Documents
-----------------

- :doc:`detect-invalid-data-files`

- :doc:`/tutorial/recover-data`

- :doc:`/core/backups`

- :doc:`/administration/backup`
