===================================
Configure Automation Agent for LDAP
===================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. include:: /includes/extracts/intro-configure-automation-agent-ldap.rst

.. include:: /includes/extracts/note-manage-agent-auth-with-automation-ldap.rst

Prerequisites
-------------

Configure LDAP Authentication per Agent
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You *must* configure |ldap| authentication separately for each agent.
For configuration instructions for the Backup Agent, see
:doc:`/tutorial/configure-automation-agent-for-ldap`.

You *can* configure |ldap| authentication when adding a host or by
editing an existing host. See
:doc:`/tutorial/enable-ldap-authentication-for-group` for instructions.

Configure Deployments to Use Authentication
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-access-control-host-settings.rst

Create User in MongoDB
----------------------

To automate MongoDB instances that use |ldap| authentication,
add a user that possess the required roles to the ``$external``
database in MongoDB. The ``$external`` database allows
:program:`mongod` to consult an external source, such as an |ldap|
server, to authenticate.

Use the following commands to create the users from a |mongo| shell
connected to your MongoDB deployment:

.. code-block:: javascript

   db.getSiblingDB("$external").createUser(
     {
       user : "<username>",
       roles: [ 
         { role: "clusterAdmin", db: "admin" },
         { role: "readWriteAnyDatabase", db: "admin" },
         { role: "userAdminAnyDatabase", db: "admin" },
         { role: "dbAdminAnyDatabase", db: "admin" },
         { role: "backup", db: "admin" },
         { role: "restore", db: "admin" }
       ]
     }
   )

To learn more about the required access, see
:doc:`/reference/required-access-automation-agent`.

