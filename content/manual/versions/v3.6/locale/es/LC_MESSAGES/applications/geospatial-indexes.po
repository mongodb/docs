# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: 2014-04-08 16:25+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# caa64fd896844af495b451ebaf423897
#: ../source/applications/geospatial-indexes.txt:5
msgid "Geospatial Indexes and Queries"
msgstr ""

# 8a3eece6f2c44f9da03a81c719a3aac7
#: ../source/applications/geospatial-indexes.txt
msgid "On this page"
msgstr ""

# e3ecdd6b2f2940069730d59ff6d1dd8a
#: ../source/applications/geospatial-indexes.txt:15
msgid ""
"MongoDB offers a number of indexes and query mechanisms to handle "
"geospatial information. This section introduces MongoDB's geospatial "
"features."
msgstr ""

# a67c38574d1a4dc48a220c5d7f27f4ee
#: ../source/applications/geospatial-indexes.txt:20
msgid "Surfaces"
msgstr ""

# 73d3fc40bf52443a839a225a7d83ef54
#: ../source/applications/geospatial-indexes.txt:22
msgid ""
"Before storing your location data and writing queries, you must decide "
"the type of surface to use to perform calculations. The type you choose "
"affects how you store data, what type of index to build, and the syntax "
"of your queries."
msgstr ""

# 959d17098f554093bac280cc13e6dd3d
#: ../source/applications/geospatial-indexes.txt:27
msgid "MongoDB offers two surface types:"
msgstr ""

# 95d8f3a43d2b42c18e193db5c97af0c0
#: ../source/applications/geospatial-indexes.txt:30
msgid "Spherical"
msgstr ""

# e953c4874e864320a689be4f0a325654
#: ../source/applications/geospatial-indexes.txt:32
msgid ""
"To calculate geometry over an Earth-like sphere, store your location data"
" on a spherical surface and use :doc:`2dsphere </core/2dsphere>` index."
msgstr ""

# 35cc445fa1cd4b51be1d273ac91a615c
#: ../source/applications/geospatial-indexes.txt:36
msgid ""
"Store your location data as GeoJSON objects with this coordinate-axis "
"order: **longitude, latitude**. The coordinate reference system for "
"GeoJSON uses the :term:`WGS84` datum."
msgstr ""

# 56d6655315bb40e08cbea030f162ca14
#: ../source/applications/geospatial-indexes.txt:41
msgid "Flat"
msgstr ""

# 60e0eda190fa4421987c465e8084c5c4
#: ../source/applications/geospatial-indexes.txt:43
msgid ""
"To calculate distances on a Euclidean plane, store your location data as "
"legacy coordinate pairs and use a :doc:`2d </core/2d>` index."
msgstr ""

# 161d28bd5e524759b0dcdd94d3010a23
#: ../source/applications/geospatial-indexes.txt:49
msgid "Location Data"
msgstr ""

# 237eef83864341ca8ed449a86552a6d5
#: ../source/applications/geospatial-indexes.txt:51
msgid ""
"If you choose spherical surface calculations, you store location data as "
"either:"
msgstr ""

# 4f9774aaee7249f5a344730fa68e36e5
#: ../source/applications/geospatial-indexes.txt:55
msgid "GeoJSON Objects"
msgstr ""

# 8d53e1936726455d9645ecfbff0b973e
#: ../source/applications/geospatial-indexes.txt:57
msgid ""
"Queries on :term:`GeoJSON` objects always calculate on a sphere. The "
"default coordinate reference system for GeoJSON uses the :term:`WGS84` "
"datum."
msgstr ""

# 84d60bb201d2458ab2482801f46891e5
#: ../source/applications/geospatial-indexes.txt:61
msgid ""
"Support for GeoJSON storage and queries is new in version 2.4. Prior to "
"version 2.4, all geospatial data used coordinate pairs."
msgstr ""

# abf4829759f44843ab53555fbe353ee7
#: ../source/applications/geospatial-indexes.txt:66
msgid ""
"Support for additional GeoJSON types: MultiPoint, MultiLineString, "
"MultiPolygon, GeometryCollection."
msgstr ""

# 65d9de83992943a39cd2135d03d19503
#: ../source/applications/geospatial-indexes.txt:70
msgid "MongoDB supports the following GeoJSON objects:"
msgstr ""

# 41717538e17f492c89e9e18cd3a6ac58
#: ../source/applications/geospatial-indexes.txt:72
msgid "Point"
msgstr ""

# 4493ab3421a74ef0b2fbe3084dd66f10
#: ../source/applications/geospatial-indexes.txt:74
msgid "LineString"
msgstr ""

# a42e005d963044319dc6d02d7787f907
#: ../source/applications/geospatial-indexes.txt:76
msgid "Polygon"
msgstr ""

# 82e2f73fd16c429a830a10b1e737fa7b
#: ../source/applications/geospatial-indexes.txt:78
msgid "MultiPoint"
msgstr ""

# 6fcf82f30d204cc6b907e3dc57451262
#: ../source/applications/geospatial-indexes.txt:80
msgid "MultiLineString"
msgstr ""

# 69c08d6b37e74cddb44093326d0e9f21
#: ../source/applications/geospatial-indexes.txt:82
msgid "MultiPolygon"
msgstr ""

# 56753171f1054ec88593aa1d9a5c7e54
#: ../source/applications/geospatial-indexes.txt:84
msgid "GeometryCollection"
msgstr ""

# 8679794556c648768f7cd43b6357ce50
#: ../source/applications/geospatial-indexes.txt:88
msgid "Legacy Coordinate Pairs"
msgstr ""

# 890b2b32a4e644a8b5c777986da02cd5
#: ../source/applications/geospatial-indexes.txt:90
msgid ""
"MongoDB supports spherical surface calculations on :term:`legacy "
"coordinate pairs` using a ``2dsphere`` index by converting the data to "
"the GeoJSON Point type."
msgstr ""

# aec31982afad4bdeb269867012e72d65
#: ../source/applications/geospatial-indexes.txt:94
msgid ""
"If you choose flat surface calculations via a ``2d`` index, you can store"
" data only as :term:`legacy coordinate pairs`."
msgstr ""

# 12717c644fd44fec8a0263027ef443dd
#: ../source/applications/geospatial-indexes.txt:98
msgid "Query Operations"
msgstr ""

# 089fbf5b25c04967a1197037e243a97e
#: ../source/applications/geospatial-indexes.txt:100
msgid "MongoDB's geospatial query operators let you query for:"
msgstr ""

# 9a71988fd4824c228d1d1500565fd35d
#: ../source/applications/geospatial-indexes.txt:103
msgid "Inclusion"
msgstr ""

# fdfee680d30149bab946ba7327f1e687
#: ../source/applications/geospatial-indexes.txt:105
msgid ""
"MongoDB can query for locations contained entirely within a specified "
"polygon. Inclusion queries use the :query:`$geoWithin` operator."
msgstr ""

# 80615c7f98354c7aab57088b28932cbc
#: ../source/applications/geospatial-indexes.txt:109
msgid ""
"Both ``2d`` and ``2dsphere`` indexes can support inclusion queries. "
"MongoDB does not require an index for inclusion queries; however, such "
"indexes will improve query performance."
msgstr ""

# a5801185893747fb95e3af9877d3d63a
#: ../source/applications/geospatial-indexes.txt:114
msgid "Intersection"
msgstr ""

# ab54b34473784c2e9154d649ac4c4295
#: ../source/applications/geospatial-indexes.txt:116
msgid ""
"MongoDB can query for locations that intersect with a specified geometry."
" These queries apply only to data on a spherical surface. These queries "
"use the :query:`$geoIntersects` operator."
msgstr ""

# 2c16b830071d4f96a7be2e7114afffe0
#: ../source/applications/geospatial-indexes.txt:120
msgid "Only ``2dsphere`` indexes support intersection."
msgstr ""

# 5eff62674a7d4cfb825bffd8055df9e7
#: ../source/applications/geospatial-indexes.txt:123
msgid "Proximity"
msgstr ""

# 89dfc757a8434afdbd4d826e9b697057
#: ../source/applications/geospatial-indexes.txt:125
msgid ""
"MongoDB can query for the points nearest to another point. Proximity "
"queries use the :query:`$near` operator. The :query:`$near` operator "
"requires a ``2d`` or ``2dsphere`` index."
msgstr ""

# e5fb163928df416dac46849d36b5d9ad
#: ../source/applications/geospatial-indexes.txt:132
msgid "Geospatial Indexes"
msgstr ""

# e10afcbe06f9441d87f5151681ec9003
#: ../source/applications/geospatial-indexes.txt:134
msgid ""
"MongoDB provides the following geospatial index types to support the "
"geospatial queries."
msgstr ""

# a59896161eb24b2394505573797d1feb
#: ../source/applications/geospatial-indexes.txt:138
msgid "``2dsphere``"
msgstr ""

# ce1a0d04d4604cf1885dc4a0afd12eb9
#: ../source/applications/geospatial-indexes.txt:140
msgid ":doc:`2dsphere </core/2dsphere>` indexes support:"
msgstr ""

# 805341ec0a164eb187719150e82ed0e4
#: ../source/applications/geospatial-indexes.txt:142
msgid "Calculations on a sphere"
msgstr ""

# 4dc1673c6bb248d4a517158a78767cf7
#: ../source/applications/geospatial-indexes.txt:144
msgid ""
"GeoJSON objects and include backwards compatibility for legacy coordinate"
" pairs"
msgstr ""

# ecd58b604e7847b0b69bfbc6fdca4972
#: ../source/applications/geospatial-indexes.txt:147
msgid ""
"Compound indexes with scalar index fields (i.e. ascending or descending) "
"as a prefix or suffix of the ``2dsphere`` index field"
msgstr ""

# d1c9b34263664a9c95fb9a58c36bc6e8
#: ../source/applications/geospatial-indexes.txt:150
msgid "``2dsphere`` indexes are not available before version 2.4."
msgstr ""

# 377e9dc038154a768e68c1c56b037772
#: ../source/applications/geospatial-indexes.txt:153
msgid ":doc:`/tutorial/query-a-2dsphere-index`"
msgstr ""

# 37a58fe0e2cf46d8902512ec85df5ffd
#: ../source/applications/geospatial-indexes.txt:156
msgid "``2d``"
msgstr ""

# 59495c32462a4835a88bd26c4ca05b25
#: ../source/applications/geospatial-indexes.txt:158
msgid ":doc:`2d </core/2d>` indexes support:"
msgstr ""

# 814e28ec9fa1465bb5936ee141eabfd8
#: ../source/applications/geospatial-indexes.txt:160
msgid "Calculations using flat geometry"
msgstr ""

# cdbeec061d284690870133acb56200e0
#: ../source/applications/geospatial-indexes.txt:162
msgid ""
"Legacy coordinate pairs (i.e., geospatial points on a flat coordinate "
"system)"
msgstr ""

# 8621b86a5978445899f1bb94aab1401d
#: ../source/applications/geospatial-indexes.txt:165
msgid ""
"Compound indexes with only one additional field, as a suffix of the "
"``2d`` index field"
msgstr ""

# cf50039c47254a18a0b324ad5b2a45b2
#: ../source/applications/geospatial-indexes.txt:168
msgid ":doc:`/tutorial/query-a-2d-index`"
msgstr ""

# 7af0cdabd86f4b75842d07df2fe48fbd
#: ../source/applications/geospatial-indexes.txt:171
msgid "Geospatial Indexes and Sharding"
msgstr ""

# 5d64bbc1f478452aa4eeb0d0e6f8a4c2
#: ../source/applications/geospatial-indexes.txt:173
msgid "You *cannot* use a geospatial index as the :term:`shard key` index."
msgstr ""

# e86b72e5179146e3bbe517f73e3de817
#: ../source/applications/geospatial-indexes.txt:177
msgid ""
"You can create and maintain a geospatial index on a sharded collection if"
" it uses fields other than the shard key fields."
msgstr ""

# c1d8c02b89134c33968a81c608e9fd47
#: ../source/includes/fact-near-sharded-cluster.rst:1
msgid ""
"For sharded collections, queries using |geo-operation| are not supported."
" You can instead use either the :dbcommand:`geoNear` command or the "
":pipeline:`$geoNear` aggregation stage."
msgstr ""

# a60da578b7fa4ec28e39c7e03ee82a98
#: ../source/applications/geospatial-indexes.txt:182
msgid "You can also query for geospatial data using :query:`$geoWithin`."
msgstr ""

# 43f8bddef4aa4784a95825efccedf804
#: ../source/applications/geospatial-indexes.txt:185
msgid "Additional Resources"
msgstr ""

# 31cf7c4646234300a0a750995ab170b7
#: ../source/applications/geospatial-indexes.txt:187
msgid ""
"The following pages provide complete documentation for geospatial indexes"
" and queries:"
msgstr ""

# a62614f059224b798e12687f49c00ebe
#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:6
msgid ":doc:`/core/2dsphere`"
msgstr ""

# ac78391eb1aa4a9aa3152d7cfadd5743
#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:4
msgid ""
"A ``2dsphere`` index supports queries that calculate geometries on an "
"earth-like sphere. The index supports data stored as both GeoJSON objects"
" and as legacy coordinate pairs."
msgstr ""

# 1cda29b8ed7d4f7988a69413e582e870
#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:10
msgid ":doc:`/core/2d`"
msgstr ""

# daf83258bfb64445a2f9604c1e1614b7
#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:9
msgid ""
"The ``2d`` index supports data stored as legacy coordinate pairs and is "
"intended for use in MongoDB 2.2 and earlier."
msgstr ""

# 6b9f51745604426da96d5694f3dd4b73
#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:15
msgid ":doc:`/core/geohaystack`"
msgstr ""

# 531c14dd5aab404b89ae9add8dfbf467
#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:13
msgid ""
"A haystack index is a special index optimized to return results over "
"small areas. For queries that use spherical geometry, a ``2dsphere`` "
"index is a better option than a haystack index."
msgstr ""

# 6a5a183acb1c440db22547ef61fe2edc
#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:20
msgid ":doc:`/core/geospatial-indexes`"
msgstr ""

# d1f7285d725d4620a2d57df657c7bbe6
#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:18
msgid ""
"Provides a more in-depth explanation of the internals of geospatial "
"indexes. This material is not necessary for normal operations but may be "
"useful for troubleshooting and for further understanding."
msgstr ""

#~ msgid ""
#~ "Queries using :query:`$near` are not "
#~ "supported for sharded collections. Use "
#~ ":dbcommand:`geoNear` instead. You also can "
#~ "query for geospatial data using "
#~ ":query:`$geoWithin`."
#~ msgstr ""

# e00f46daedc147e6800ee8f59934a6d4
#~ msgid ""
#~ "MongoDB offers a number of indexes "
#~ "and query mechanisms to handle "
#~ "geospatial information. This section "
#~ "introduces MongoDB's geospatial features. For"
#~ " complete examples of geospatial queries"
#~ " in MongoDB, see :doc:`/administration"
#~ "/indexes-geo`."
#~ msgstr ""

# 5147c41b325e4167bd44de32f0d41bed
#~ msgid ""
#~ "If you choose flat surface calculations,"
#~ " and use a ``2d`` index you can"
#~ " store data only as :term:`legacy "
#~ "coordinate pairs`."
#~ msgstr ""

# 1eb46d93a7f6421ba9c37857755edbeb
#~ msgid ""
#~ "Both ``2d`` and ``2dsphere`` indexes can"
#~ " support inclusion queries. MongoDB does"
#~ " not require an index for inclusion"
#~ " queries after 2.2.3; however, these "
#~ "indexes will improve query performance."
#~ msgstr ""

# 6cc8aca3bdfb428996f868521a4f168c
#~ msgid ""
#~ "GeoJSON objects and include backwards "
#~ "compatibility for legacy coordinate pairs."
#~ msgstr ""

# 6fbfaabadd0c49eba85afe66926bd535
#~ msgid ""
#~ "A compound index with scalar index "
#~ "fields (i.e. ascending or descending) as"
#~ " a prefix or suffix of the "
#~ "``2dsphere`` index field"
#~ msgstr ""

# 8787d8ac13694b88b807a7236801ad44
#~ msgid ""
#~ "A compound index with only one "
#~ "additional field, as a suffix of "
#~ "the ``2d`` index field"
#~ msgstr ""

# 77ab0908d7f74d848402553b2087ca17
#~ msgid ""
#~ "You can create and maintain a "
#~ "geospatial index on a sharded collection"
#~ " if using fields other than shard "
#~ "key."
#~ msgstr ""

# 82b994843a7545d88f83010343665689
#~ msgid ":ref:`geospatial-query-compatibility-chart`"
#~ msgstr ""

#~ msgid ""
#~ "For sharded collections, queries using "
#~ ":query:`$near` are not supported. You "
#~ "can instead use either the "
#~ ":dbcommand:`geoNear` command or the "
#~ ":pipeline:`$geoNear` aggregation stage."
#~ msgstr ""

#~ msgid "You also can query for geospatial data using :query:`$geoWithin`."
#~ msgstr ""

