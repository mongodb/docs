# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/aggregation/reverseArray.txt:3
msgid "$reverseArray (aggregation)"
msgstr ""

#: ../source/reference/operator/aggregation/reverseArray.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/operator/aggregation/reverseArray.txt:20
msgid "Accepts an array expression as an argument and returns an array with the elements in reverse order."
msgstr ""

#: ../source/reference/operator/aggregation/reverseArray.txt:23
msgid ":expression:`$reverseArray` has the following :ref:`operator expression syntax <agg-quick-ref-operator-expressions>`:"
msgstr ""

#: ../source/reference/operator/aggregation/reverseArray.txt:30
msgid "The argument can be any valid :ref:`expression <aggregation-expressions>` as long as it resolves to an array."
msgstr ""

#: ../source/reference/operator/aggregation/reverseArray.txt:34
msgid "Behavior"
msgstr ""

#: ../source/includes/extracts/agg-expression-null-operand-reverseArray.rst:1
msgid "If  the argument resolves to a value of ``null`` or refers to a missing field, :expression:`$reverseArray` returns ``null``."
msgstr ""

#: ../source/includes/extracts/agg-expression-null-operand-reverseArray.rst:4
msgid "If the argument does not resolve to an array or ``null`` nor refers to a missing field, :expression:`$reverseArray` returns an error."
msgstr ""

#: ../source/reference/operator/aggregation/reverseArray.txt:38
msgid "``$reverseArray`` returns an empty array when the argument is an empty array."
msgstr ""

#: ../source/reference/operator/aggregation/reverseArray.txt:40
msgid "If the argument contains subarrays, ``$reverseArray`` only operates on the top level array elements and will not reverse the contents of subarrays."
msgstr ""

#: ../source/reference/operator/aggregation/reverseArray.txt:47
msgid "Example [#literal]_"
msgstr ""

#: ../source/reference/operator/aggregation/reverseArray.txt:48
msgid "Results"
msgstr ""

#: ../source/reference/operator/aggregation/reverseArray.txt:54
msgid "``[ 3, 2, 1 ]``"
msgstr ""

#: ../source/reference/operator/aggregation/reverseArray.txt:62
msgid "``[ \"baz\", \"bar\" ]``"
msgstr ""

#: ../source/reference/operator/aggregation/reverseArray.txt:69
msgid "``null``"
msgstr ""

#: ../source/reference/operator/aggregation/reverseArray.txt:76
msgid "``[ ]``"
msgstr ""

#: ../source/reference/operator/aggregation/reverseArray.txt:82
msgid "``[ [ 4, 5, 6 ], [ 1, 2, 3 ] ]``"
msgstr ""

#: ../source/reference/operator/aggregation/reverseArray.txt:86
msgid "The examples in the table take a literal argument. To avoid parsing ambiguity if the literal argument is an array, you must wrap the literal array in a :expression:`$literal` expression or keep the outer array that designates the argument list (e.g. ``[ [ 1, 2, 3 ] ]`` ) to pass in the literal array ``[1, 2, 3]``."
msgstr ""

#: ../source/reference/operator/aggregation/reverseArray.txt:93
msgid "Example"
msgstr ""

#: ../source/reference/operator/aggregation/reverseArray.txt:95
msgid "A collection named ``users`` contains the following documents:"
msgstr ""

#: ../source/reference/operator/aggregation/reverseArray.txt:104
msgid "The following example returns an array containing the elements of the ``favorites`` array in reverse order:"
msgstr ""

#: ../source/reference/operator/aggregation/reverseArray.txt:119
msgid "The operation returns the following results:"
msgstr ""

