=================================
Add or Remove Tags from One Group
=================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. include:: /includes/api/base-api-uri.rst

This API method adds and removes tags from the given group. The ``tags`` array
replaces and overwrites the group's current ``tags`` array.


Syntax
------

.. code-block:: http

   PATCH /api/public/v1.0/groups/{GROUP-ID}

Request Parameters
------------------

Request Path Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Parameter
     - Required/Optional
     - Description

   * - ``GROUP-ID``
     - Required.
     - The unique identifier for the group.

Request Query Parameters
~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/api/no-query-parameters.rst

Request Body Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :widths: 10 10 80
   :header-rows: 1

   * - Name
     - Type
     - Description

   * - ``id``
     - string
     - The unique identifier for the group.

   * - ``tags``
     - string array

     - The tags assigned to the group for use in programmatically identifying
       the group. To view tags you must have either the :ref:`Global Read Only
       <global-read-only-role>` or :ref:`Global Owner <global-owner-role>`
       :doc:`role </reference/user-roles>`. To create or edit tags, you must
       be a :ref:`Global Owner <global-owner-role>`.
       
       .. include:: /includes/requirements-tag-names.rst

Response Elements
-----------------

.. only:: cloud

   .. list-table::
      :widths: 10 10 80
      :header-rows: 1
   
      * - Name
        - Type
        - Description
 
      * - ``id``
        - string
        - The unique identifier for the group.
 
      * - ``name``
        - string
        - The display name for the group.
 
      * - ``hostCounts``
        - object
        - The total number of hosts by type. The embedded fields should be
          self-explanatory.
 
      * - ``lastActiveAgent``
        - date
        - The time |mms| last updated the ``activeAgentCount`` total for the
          group. |mms| runs a job every 30 minutes to record the number of active
          agents of any type (Monitoring, Backup, Automation).
 
      * - ``activeAgentCount``
        - number
        - The number of active agents of any type (Monitoring, Backup, Automation)
          sending regular pings to |mms|.
 
          The value is refreshed every 30 minutes. If you start a new agent or
          stop an existing one, the change can take up to 30 minutes to show up
          in the ``activeAgentCount`` field.
 
      * - ``replicaSetCount``
        - number
        - The total number of replica sets for this group.
 
      * - ``shardCount``
        - number
        - The total number of shards for this group.
 
      * - ``publicApiEnabled``
        - boolean
        - Indicates that the Public API is enabled for this group. This is a
          read-only field that will always be true.
 
      * - ``agentApiKey``
        - string
        - The :term:`agent API key` for the group.
 
          You must have the :ref:`Owner <owner-role>` or :ref:`Global Read Only <global-read-only-role>` :doc:`role
          </reference/user-roles>` to view this field.

      * - ``links``
        - string array
        - See `Response Links`_. 

.. only:: onprem

   .. list-table::
      :widths: 10 10 80
      :header-rows: 1

      * - Name
        - Type
        - Description
 
      * - ``id``
        - string
        - The unique identifier for the group.
 
      * - ``name``
        - string
        - The display name for the group.
 
      * - ``hostCounts``
        - object
        - The total number of hosts by type. The embedded fields should be
          self-explanatory.
 
      * - ``lastActiveAgent``
        - date
        - The time |mms| last updated the ``activeAgentCount`` total for the
          group. |mms| runs a job every 30 minutes to record the number of active
          agents of any type (Monitoring, Backup, Automation).
 
      * - ``activeAgentCount``
        - number
        - The number of active agents of any type (Monitoring, Backup, Automation)
          sending regular pings to |mms|.
 
          The value is refreshed every 30 minutes. If you start a new agent or
          stop an existing one, the change can take up to 30 minutes to show up
          in the ``activeAgentCount`` field.
 
      * - ``replicaSetCount``
        - number
        - The total number of replica sets for this group.
 
      * - ``shardCount``
        - number
        - The total number of shards for this group.
 
      * - ``publicApiEnabled``
        - boolean
        - The indicator that the Public API is enabled for this group. This is a
          read-only field that is always ``true``.
 
      * - ``agentApiKey``
        - string
        - The :term:`agent API key` for the group.
 
          You must have the :ref:`Owner <owner-role>` or 
          :ref:`Global Read Only <global-read-only-role>` 
          :doc:`role </reference/user-roles>` to view this field.

      * - ``tags``
        - string array
        - The tags assigned to the group for use in programmatically identifying
          the group. 

          - To view tags you must have either the 
            :ref:`Global Read Only <global-read-only-role>` or 
            :ref:`Global Owner <global-owner-role>` :doc:`role </reference/user-roles>`.
          - To create or edit tags, you must be a 
            :ref:`Global Owner <global-owner-role>`.
 
          .. include:: /includes/requirements-tag-names.rst
 
      * - ``ldapGroupMappings``
        - object array
        - For LDAP-backed |onprem|, the mappings of 
          :doc:`LDAP groups </tutorial/enable-ldap-authentication-for-group>` 
          to |onprem| roles. Only present for LDAP-backed |onprem|.
 
      * - ``ldapGroupMappings.roleName``
        - string
        - The |onprem| user role. The mapping of 
          :doc:`User Role </reference/user-roles>` to ``roleName`` follows:

          .. list-table::
             :widths: 40 80
             :header-rows: 1

             * - User Role
               - ``roleName`` Value
             * - Group Automation Admin
               - ``GROUP_AUTOMATION_ADMIN``
             * - Group Backup Admin
               - ``GROUP_BACKUP_ADMIN``
             * - Group Monitoring Admin
               - ``GROUP_MONITORING_ADMIN``
             * - Group Owner
               - ``GROUP_OWNER``
             * - Group Read Only
               - ``GROUP_READ_ONLY``
             * - Group User Admin
               - ``GROUP_USER_ADMIN``
             * - Global Automation Admin
               - ``GLOBAL_AUTOMATION_ADMIN``
             * - Global Backup Admin
               - ``GLOBAL_BACKUP_ADMIN``
             * - Global Monitoring Admin
               - ``GLOBAL_MONITORING_ADMIN``
             * - Global Owner
               - ``GLOBAL_OWNER``
             * - Global Read Only
               - ``GLOBAL_READ_ONLY``
             * - Global User Admin
               - ``GLOBAL_USER_ADMIN``
 
      * - ``ldapGroupMappings.ldapGroups``
        - string array
        - The LDAP group(s) that map to the |onprem| role.

      * - ``links``
        - string array
        - See `Response Links`_.

_`Response Links`
~~~~~~~~~~~~~~~~~

.. only:: cloud

   .. list-table::
      :header-rows: 1
      :widths: 60 40

      * - Relation
        - Description
      * - ``self``
        - Me
      * - ``http://cloud.mongodb.com/hosts``
        - All hosts in the group.
      * - ``http://cloud.mongodb.com/users``
        - All users in the group.
      * - ``http://cloud.mongodb.com/clusters``
        - All clusters in the group.
      * - ``http://cloud.mongodb.com/alerts``
        - All open alerts for the group.
      * - ``http://cloud.mongodb.com/alertConfigs``
        - All alert configurations for the group.
      * - ``http://cloud.mongodb.com/backupConfigs``
        - All backup configurations for the group.
      * - ``http://cloud.mongodb.com/agents``
        - All agents for the group.

.. only:: onprem

   .. list-table::
      :header-rows: 1
      :widths: 60 40

      * - Relation
        - Description
      * - ``self``
        - Me
      * - ``http://{opsManagerHost}:{port}/hosts``
        - All hosts in the group.
      * - ``http://{opsManagerHost}:{port}/users``
        - All users in the group.
      * - ``http://{opsManagerHost}:{port}/clusters``
        - All clusters in the group.
      * - ``http://{opsManagerHost}:{port}/alerts``
        - All open alerts for the group.
      * - ``http://{opsManagerHost}:{port}/alertConfigs``
        - All alert configurations for the group.
      * - ``http://{opsManagerHost}:{port}/backupConfigs``
        - All backup configurations for the group.
      * - ``http://{opsManagerHost}:{port}/agents``
        - All agents for the group.

Examples
--------

Example Request
~~~~~~~~~~~~~~~

.. only:: cloud

   .. cssclass:: copyable-code
   .. code-block:: sh
      :emphasize-lines: 6-9

      curl --user "{username}:{apiKey}" --digest \
       --header "Accept: application/json" \
       --header "Content-Type: application/json" \
       --include \
       --request PATCH "https://cloud.mongodb.com/api/public/v1.0/groups/{GROUP-ID}?pretty=true" \
       --data '
       {
         "tags": [ "DEV", "PRODUCT" ],
       }'

.. only:: onprem

   .. cssclass:: copyable-code
   .. code-block:: sh
      :emphasize-lines: 6-9

      curl --user "{username}:{apiKey}" --digest \
       --header "Accept: application/json" \
       --header "Content-Type: application/json" \
       --include \
       --request PATCH "https://{opsManagerHost}:{port}/api/public/v1.0/groups/{GROUP-ID}?pretty=true" \
       --data '
       {
         "tags": [ "DEV", "PRODUCT" ],
       }'

Example Response
~~~~~~~~~~~~~~~~

Response Header
+++++++++++++++

.. include:: /includes/api/api-headers/401.rst

.. include:: /includes/api/api-headers/200.rst

Response Body
+++++++++++++

.. only:: cloud

   .. code-block:: json
      :emphasize-lines: 19
   
      {
        "id": "{GROUP-ID}",
        "name": "My Group",
        "hostCounts": {
          "arbiter": 2,
          "config": 1,
          "primary": 4,
          "secondary": 8,
          "mongos": 2.
          "master": 0,
          "slave": 0
        },
        "lastActiveAgent": ISODate("2016-08-05T07:23:34Z"),
        "activeAgentCount": 1,
        "replicaSetCount": 3,
        "shardCount": 2,
        "publicApiEnabled": true,
        "agentApiKey": "cbd728abd6a6d6c6b6d7826345dbcff0e",
        "links": [ ... ]
      }

.. only:: onprem

   .. code-block:: json
      :emphasize-lines: 19
   
      {
        "id": "{GROUP-ID}",
        "name": "My Group",
        "hostCounts": {
          "arbiter": 2,
          "config": 1,
          "primary": 4,
          "secondary": 8,
          "mongos": 2.
          "master": 0,
          "slave": 0
        },
        "lastActiveAgent": ISODate("2016-08-05T07:23:34Z"),
        "activeAgentCount": 1,
        "replicaSetCount": 3,
        "shardCount": 2,
        "publicApiEnabled": true,
        "agentApiKey": "cbd728abd6a6d6c6b6d7826345dbcff0e",
        "tags": [ "DEV", "PRODUCT" ],
        "ldapGroupMappings" : [ {
           "roleName": "GROUP_OWNER",
           "ldapGroups": [ "group-owner" ]
        }, ... ],
        "links": [ ... ]
      }
