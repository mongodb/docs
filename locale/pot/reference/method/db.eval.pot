# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/db.eval.txt:3
# b620056f6dcb42d8ac962d0a5d2b4b8a
msgid "db.eval()"
msgstr ""

#: ../source/reference/method/db.eval.txt:11
# 33f5b01842454d2c803835b270286333
msgid "Definition"
msgstr ""

#: ../source/reference/method/db.eval.txt:17
# 14adcd8655f64f768659b8c8bd63ff15
msgid "Provides the ability to run JavaScript code on the MongoDB server."
msgstr ""

#: ../source/includes/fact-eval-helper-method.rst:1
# a4c05803ed4c4975ba5746e5abda2c15
msgid "The helper :method:`db.eval()` in the :program:`mongo` shell wraps the :dbcommand:`eval` command. Therefore, the helper method shares the characteristics and behavior of the underlying command with *one exception*: :method:`db.eval()` method does not support the ``nolock`` option."
msgstr ""

#: ../source/reference/method/db.eval.txt:23
# c7a577d412d64138b6e54bb383fec680
msgid "The method accepts the following parameters:"
msgstr ""

#: ../source/reference/method/db.eval.txt:27
# e71a579545304d698a5e7bf4e12c0a72
msgid "The JavaScript function need not take any arguments, as in the first example, or may optionally take arguments as in the second:"
msgstr ""

#: ../source/reference/method/db.eval.txt:43
# 9cfb56f903184b3394b0338b7069a017
msgid "Behavior"
msgstr ""

#: ../source/includes/admonitions-eval.rst:5
# c548459833924acc982275f6e4808869
msgid "Write Lock"
msgstr ""

#: ../source/includes/fact-eval-lock.rst:1
# e047dda7b6ca49c49a3506268a22a1ac
msgid "By default, |object| takes a global write lock while evaluating the JavaScript function. As a result, |object| blocks all other read and write operations to the database while the |object| operation runs."
msgstr ""

#: ../source/includes/fact-eval-lock.rst:5
# 4ab63176c0bf4f618ff39fb3f004ae02
msgid "To prevent the taking of the global write lock while evaluating the JavaScript code, use the |nolockobject| with ``nolock`` set to ``true``. ``nolock`` does not impact whether the operations within the JavaScript code take write locks."
msgstr ""

#: ../source/includes/admonitions-eval.rst:9
# 10d7124da4e74dff885c621082c9aa9f
msgid "For long running |object| operation, consider using either the :command:`eval` command with ``nolock: true`` or using :doc:`other server side code execution options </core/server-side-javascript>`."
msgstr ""

#: ../source/includes/admonitions-eval.rst:14
# 9b3b9850734f456ebc73b04833804815
msgid "Sharded Data"
msgstr ""

#: ../source/includes/admonitions-eval.rst:16
# 6d6c196de6c3479eb9bf8d5138f23ca1
msgid "You can not use |object| with :term:`sharded <sharding>` collections. In general, you should avoid using |object| in :term:`sharded clusters <sharded cluster>`; nevertheless, it is possible to use |object| with non-sharded collections and databases stored in a :term:`sharded cluster`."
msgstr ""

#: ../source/includes/admonitions-eval.rst:23
# 5cc6d45f218b4a8c8457a34ea4b263e8
msgid "Access Control"
msgstr ""

#: ../source/includes/extracts/access-eval-eval.rst:1
# ffa1ebbae14f4f29a5f2ba79ece5b750
msgid "If authorization is enabled, you must have access to all actions on all resources in order to run :dbcommand:`eval`. Providing such access is not recommended, but if your organization requires a user to run :dbcommand:`eval`, create a role that grants :authaction:`anyAction` on :ref:`resource-anyresource`. Do not assign this role to any other user."
msgstr ""

#: ../source/includes/admonitions-eval.rst:30
# c47947eb385a42e6b9edc3dac427751b
msgid "JavaScript Engine"
msgstr ""

#: ../source/includes/admonitions-eval.rst:34
# e04e902efec64c15b8c3b99a65bb627d
msgid "The V8 JavaScript engine, which became the default in 2.4, allows multiple JavaScript operations to execute at the same time. Prior to 2.4, |object| executed in a single thread."
msgstr ""

#: ../source/reference/method/db.eval.txt:50
# 597548d4d6924fc39343b84af8d582ab
msgid "Examples"
msgstr ""

#: ../source/reference/method/db.eval.txt:52
# cbe22a11f4a2469ca6a0b0096bfc352a
msgid "The following is an example of the :method:`db.eval()` method:"
msgstr ""

#: ../source/reference/method/db.eval.txt:57
# 824586de9fbb40cd858d3e8ba091d6fd
msgid "The ``db`` in the function refers to the current database."
msgstr ""

#: ../source/reference/method/db.eval.txt:59
# b38ada8005e440d9869f5244ea08b9f8
msgid "``\"eliot\"`` is the argument passed to the function, and corresponds to the ``name`` argument."
msgstr ""

#: ../source/reference/method/db.eval.txt:62
# 941c2c6de66b48e28025021969b2417e
msgid "``5`` is an argument to the function and corresponds to the ``incAmount`` field."
msgstr ""

#: ../source/reference/method/db.eval.txt:65
# 002ec3fe2dfc470599ce226e31e91450
msgid "If you want to use the server's interpreter, you must run :method:`db.eval()`. Otherwise, the :program:`mongo` shell's JavaScript interpreter evaluates functions entered directly into the shell."
msgstr ""

#: ../source/reference/method/db.eval.txt:69
# 15f07deed1f74f61a0b90237c0cb0c43
msgid "If an error occurs, :method:`db.eval()` throws an exception. The following is an example of an invalid function that uses the variable ``x`` without declaring it as an argument:"
msgstr ""

#: ../source/reference/method/db.eval.txt:77
# 97a15ea63649405e990437db67995fef
msgid "The statement results in the following exception:"
msgstr ""

#: ../source/reference/method/db.eval.txt:89
# f84f33fa802944bdb04e990da9b3de08
msgid ":doc:`/core/server-side-javascript`"
msgstr ""

