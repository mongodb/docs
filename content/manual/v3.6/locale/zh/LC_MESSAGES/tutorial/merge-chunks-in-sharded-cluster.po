#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/tutorial/merge-chunks-in-sharded-cluster.txt:3
msgid "Merge Chunks in a Sharded Cluster"
msgstr ""

#: ../source/tutorial/merge-chunks-in-sharded-cluster.txt:14
msgid "Overview"
msgstr ""

#: ../source/tutorial/merge-chunks-in-sharded-cluster.txt:18
msgid ""
"The :dbcommand:`mergeChunks` command allows you to combine continuous "
"chunks on the same shard into a single chunk. This tutorial explains how "
"to merge neighboring chunks in a sharded cluster."
msgstr ""

#: ../source/tutorial/merge-chunks-in-sharded-cluster.txt:23
msgid "Procedure"
msgstr ""

#: ../source/tutorial/merge-chunks-in-sharded-cluster.txt:27
msgid ""
"Examples in this procedure use a ``members`` :term:`collection` in the "
"``test`` :term:`database`, using the ``username`` field as the "
":term:`shard key`."
msgstr ""

#: ../source/tutorial/merge-chunks-in-sharded-cluster.txt:32
msgid "Identify Chunk Ranges"
msgstr ""

#: ../source/tutorial/merge-chunks-in-sharded-cluster.txt:34
msgid ""
"In the :binary:`~bin.mongo` shell, identify the :term:`chunk` ranges with"
" the following operation:"
msgstr ""

#: ../source/tutorial/merge-chunks-in-sharded-cluster.txt:41
msgid ""
"In the output, the chunk ranges appear after the chunk counts for each "
"sharded collection, as in the following example:"
msgstr ""

#: ../source/tutorial/merge-chunks-in-sharded-cluster.txt:98
msgid ""
"The chunk ranges appear after the chunk counts for each sharded "
"collection. For example, the following are the chunk ranges for the "
"``test.members`` collection:"
msgstr ""

#: ../source/tutorial/merge-chunks-in-sharded-cluster.txt:120
msgid "Merge Chunks"
msgstr ""

#: ../source/tutorial/merge-chunks-in-sharded-cluster.txt:122
msgid "Merge contiguous :term:`chunks <chunk>` on the same shard."
msgstr ""

#: ../source/tutorial/merge-chunks-in-sharded-cluster.txt:124
msgid "For example, consider the following chunk ranges on ``shardA``:"
msgstr ""

#: ../source/tutorial/merge-chunks-in-sharded-cluster.txt:128
msgid "The chunks to be merged are highlighted."
msgstr ""

#: ../source/tutorial/merge-chunks-in-sharded-cluster.txt:141
msgid ""
"To merge the highlighted contiguous chunks, issue the "
":dbcommand:`mergeChunks` command against the ``admin`` database:"
msgstr ""

#: ../source/tutorial/merge-chunks-in-sharded-cluster.txt:152
msgid "On success, :dbcommand:`mergeChunks` produces the following output:"
msgstr ""

#: ../source/tutorial/merge-chunks-in-sharded-cluster.txt:169
msgid ""
"On any failure condition, :dbcommand:`mergeChunks` returns a document "
"where the value of the ``ok`` field is ``0``."
msgstr ""

#: ../source/tutorial/merge-chunks-in-sharded-cluster.txt:173
msgid "View Merged Chunks Ranges"
msgstr ""

#: ../source/tutorial/merge-chunks-in-sharded-cluster.txt:175
msgid "After merging the identified chunks, confirm the new chunk, as follows:"
msgstr ""

#: ../source/tutorial/merge-chunks-in-sharded-cluster.txt:181
msgid "The output of :method:`sh.status()` should resemble:"
msgstr ""

#: ../source/tutorial/merge-chunks-in-sharded-cluster.txt:235
msgid ""
"After the merge, the :ref:`balancer <sharding-balancing>` may migrate "
"chunks across shards to ensure a more even distribution of chunks."
msgstr ""

#~ msgid ""
#~ "The :dbcommand:`mergeChunks` command requires "
#~ "at least one empty input chunk. In"
#~ " the :program:`mongo` shell, check the "
#~ "amount of data in a chunk using"
#~ " an operation that resembles:"
#~ msgstr ""

#~ msgid ""
#~ "The :dbcommand:`mergeChunks` command allows "
#~ "you to collapse empty chunks into "
#~ "neighboring chunks on the same shard."
#~ " A :term:`chunk` is empty if it "
#~ "has no documents associated with its "
#~ "shard key range."
#~ msgstr ""

#~ msgid ""
#~ "Empty :term:`chunks <chunk>` can make "
#~ "the :term:`balancer` assess the cluster "
#~ "as properly balanced when it is "
#~ "not."
#~ msgstr ""

#~ msgid "Empty chunks can occur under various circumstances, including:"
#~ msgstr ""

#~ msgid ""
#~ "If a :doc:`pre-split </tutorial/create-"
#~ "chunks-in-sharded-cluster>` creates too "
#~ "many chunks, the distribution of data"
#~ " to chunks may be uneven."
#~ msgstr ""

#~ msgid ""
#~ "If you delete many documents from "
#~ "a sharded collection, some chunks may"
#~ " no longer contain data."
#~ msgstr ""

#~ msgid ""
#~ "This tutorial explains how to identify"
#~ " chunks available to merge, and how"
#~ " to merge those chunks with "
#~ "neighboring chunks."
#~ msgstr ""

#~ msgid ""
#~ "Examples in this procedure use a "
#~ "``users`` :term:`collection` in the ``test``"
#~ " :term:`database`, using the ``username`` "
#~ "filed as a :term:`shard key`."
#~ msgstr ""

#~ msgid ""
#~ "In the :program:`mongo` shell, identify "
#~ "the :term:`chunk` ranges with the "
#~ "following operation:"
#~ msgstr ""

#~ msgid "The output of the :method:`sh.status()` will resemble the following:"
#~ msgstr ""

#~ msgid ""
#~ "The chunk ranges appear after the "
#~ "chunk counts for each sharded "
#~ "collection, as in the following "
#~ "excerpts:"
#~ msgstr ""

#~ msgid "**Chunk counts:**"
#~ msgstr ""

#~ msgid "**Chunk range:**"
#~ msgstr ""

#~ msgid "Verify a Chunk is Empty"
#~ msgstr ""

#~ msgid ""
#~ "If the input chunk to "
#~ ":dbcommand:`dataSize` is empty, "
#~ ":dbcommand:`dataSize` produces output similar "
#~ "to:"
#~ msgstr ""

#~ msgid ""
#~ "Merge two contiguous :term:`chunks <chunk>`"
#~ " on the same :term:`shard`, where at"
#~ " least one of the contains no "
#~ "data, with an operation that resembles"
#~ " the following:"
#~ msgstr ""

#~ msgid "After merging all empty chunks, confirm the new chunk, as follows:"
#~ msgstr ""

#~ msgid "On this page"
#~ msgstr ""

#~ msgid ""
#~ "The :dbcommand:`mergeChunks` command requires "
#~ "at least one empty input chunk. To"
#~ " check the size of a chunk, use"
#~ " the :dbcommand:`dataSize` command in the"
#~ " sharded collection's database. For "
#~ "example, the following checks the amount"
#~ " of data in the chunk for the"
#~ " ``users`` collection in the ``test`` "
#~ "database:"
#~ msgstr ""

#~ msgid ""
#~ "You must use the ``use <db>`` "
#~ "helper to switch to the database "
#~ "containing the sharded collection before "
#~ "running the :dbcommand:`dataSize` command."
#~ msgstr ""

