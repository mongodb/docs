==========================
Frequently Asked Questions
==========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

This document addresses common questions about |mms| and its use.

What versions of MongoDB does |mms| manage?
-------------------------------------------

For specific |mms| functions and supported MongoDB versions, see
:doc:`/reference/mongodb-compatibility`.

.. _faq-automation:

Automation FAQs
---------------

|mms| can automate management operations for your monitored MongoDB
processes, allowing you to reconfigure, stop, and restart MongoDB
through the |mms| interface.

|mms| Automation can run only on 64-bit architectures.

How does |mms| manage MongoDB deployments?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. TODO This information should be incorporated into the main content of
   the manual and not hidden in an FAQ.

.. only:: onprem

   After you deploy the Automation Agent in the environment of the
   MongoDB deployment, each agent periodically communicates with |mms|
   and performs any required work.
   
.. only:: cloud

   After you provision servers in |mms| or deploy the Automation Agent
   in the environment of the MongoDB deployment, each agent
   periodically communicates with |mms| and performs any required work.

Agents constantly reassess their environment to adapt their work as
necessary. If an agent encounters an issue, such as
network connectivity problems or |mms| failure, the agents adjust
their work to compensate and safely arrive at their goal state.

Agents create plans to move from their current state to a goal state. Plans
execute in steps, where each step is autonomous and independent of
other steps.

For example, for an installation, the plan involves downloading
MongoDB, starting the process with the appropriate command line
options, initializing the replica set, waiting for a healthy
majority. The configuration reaches goal state when the replica set is
active and has a healthy majority.

How many Automation Agents do I need?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To use Automation, you must have an agent running on every host where
a managed MongoDB instance runs.

Is any MongoDB data transferred by the Automation Agent?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Agents do *not* transmit any data records from a MongoDB deployment.
The agents only communicate deployment configuration information and
MongoDB logs.

Will |mms| handle failures during an upgrade, such as |mms| going down or a network partition?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Generally speaking, yes. The design of the management and automation
components of |mms| do not account for *all* possible failures; however
the architecture of the system can work around many types of failures.

What types of deployment can I create in |mms|?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/compatible-mongodb-deployment-types.rst

.. Cloud Provider questions:

.. include:: /includes/extracts/faq-cloud-providers.rst

What actions can Automation not complete in |mms|?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Advanced MongoDB options that modify how data is stored cannot be changed
using Automation.

You cannot enable encryption or change how data is stored on disk after the
deployment has been created. However, you can still select the advanced
options that would enable these options from the :doc:`Advanced Options
</reference/deployment-advanced-options>` section in the deployment sidebar.

Normally, if you add or change an advanced option and apply it, the members of
the :term:`replica set` or :term:`sharded cluster` restart to apply the new
settings. If certain advanced options are set and then applied, the
:term:`Automation Agent` restarts the member as it should, but the
:program:`mongod` does not start. The Automation Agent keeps trying to start
the :program:`mongod` until you :doc:`edit the configuration </tutorial/edit-deployment>` 
and revert the :doc:`Advanced Option </reference/deployment-advanced-options>`
that prevents the :program:`mongod` from starting.

The following advanced options cannot be enabled using Automation:

- At-rest-encryption with :abbr:`KMIP (Key Management Interoperability
  Protocol)` using one of the following settings:

  - :setting:`security.kmip.keyIdentifier`
  - :setting:`security.kmip.serverName`
  - :setting:`security.kmip.port`
  - :setting:`security.kmip.clientCertificateFile`
  - :setting:`security.kmip.clientCertificatePassword`
  - :setting:`security.kmip.serverCAFile`

- Directory per database by using the :setting:`storage.directoryPerDB` setting.
- Encrypted storage for a database using the
  :setting:`security.enableEncryption` setting.
- Small database files using the :setting:`storage.mmapv1.smallFiles` setting.

To change a setting Automation cannot change
++++++++++++++++++++++++++++++++++++++++++++

If you need to change one of the advanced options listed, you must make the
changes manually. This requires you to do the following tasks for each node in
a :term:`replica set` or :term:`sharded cluster`:

#. Shut down the node using |mms|.
#. Connect to the node using ``ssh`` or ``RDP``. 
#. Delete the data directory for the deployment on that node.
#. Start that node again. The node starts an :term:`initial sync`.
#. Wait for the initial sync to complete.
#. Repeat the previous steps on the next node until all nodes in the
   :term:`replica set` or :term:`sharded cluster` have the same settings.

.. note::
   You can use the seeding process outlined in :ref:`differences-backup-format` 
   in :doc:`/tutorial/use-restore-to-seed-secondary` to speed up this process.

.. _faq-monitoring:

Monitoring FAQs
---------------

Host Configuration
~~~~~~~~~~~~~~~~~~

How do I add a new host or server?
++++++++++++++++++++++++++++++++++

See :doc:`/tutorial/add-existing-mongodb-processes`.

.. "Can Ops Manager monitor itself":

.. include:: /includes/extracts/faq-monitor-backing-dbs.rst

Can I monitor Kerberos-enabled instances?
+++++++++++++++++++++++++++++++++++++++++

Yes. |mms| does support monitoring for
Kerberos-enabled MongoDB instances. See
:doc:`/tutorial/configure-monitoring-agent-for-kerberos`
for more information.

.. "Monitoring Agent":

.. include:: /includes/faq-agents.rst

Data Presentation
~~~~~~~~~~~~~~~~~

What are all those vertical bars in my charts?
++++++++++++++++++++++++++++++++++++++++++++++

A *red bar* indicates a server restart.

A *orange bar* indicates the server is now a primary.

A *brown bar* indicates the server is now a secondary.

Data Retention
~~~~~~~~~~~~~~

What is the data retention policy for |mms|?
++++++++++++++++++++++++++++++++++++++++++++

|mms| retains two distinct types of data: metrics, which describe usage;
and snapshots, which back up your data.

.. only:: cloud

   Data-retention policies, as defined in the `Terms of Service`_, are always
   subject to change.

   .. _`Terms of Service`: https://cloud.mongodb.com/links/terms-of-service

|mms| preserves:

- .. include:: /includes/extracts/metric-data-retention-faq.rst

- Snapshots according to their :ref:`retention policy
  <snapshot-frequency-and-retention>`.

.. _faq-backup:

Backup FAQs
-----------

|mms| creates backups of MongoDB replica sets and sharded
clusters. After an initial sync to MongoDB's data centers, |mms|
tails the operation log (:manual:`oplog </core/replica-set-oplog/>`)
to provide a continuous backup with point-in-time recovery of replica
sets and consistent snapshots of sharded clusters. For more
information, please review these frequently asked questions.

Requirements
~~~~~~~~~~~~

What version of MongoDB does the Backup feature require?
++++++++++++++++++++++++++++++++++++++++++++++++++++++++

For information on compatibility, see :doc:`/reference/mongodb-compatibility`.

What MongoDB permissions does the Backup Agent require?
+++++++++++++++++++++++++++++++++++++++++++++++++++++++

If you are backing up a MongoDB instance that has authentication enabled,
the Backup Agent requires elevated privileges, as described in
:ref:`required-permissions-mms-backup`.

.. seealso:: :manual:`User Privilege Roles in MongoDB </reference/user-privileges/>`.

Are there any limits to the types of deployments the Backup feature supports?
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Yes. Backup does not currently support standalone deployments.
Backup has full support for replica sets and sharded clusters.

Why doesn't the Backup feature support standalone deployments?
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

After an initial sync of your data, |mms| copies
data from the :term:`oplog` to provide a continuous backup with
point-in-time recovery. |mms| does not support backup of standalone servers,
which do not have an oplog. To support backup with a single
:program:`mongod` instance, you can run a one-member
replica set.

.. seealso:: :doc:`/tutorial/convert-standalone-to-replica-set`

How Does |mms| Measure Data Size?
+++++++++++++++++++++++++++++++++

|mms| uses the following conversions to measure snapshot size and to measure
how much oplog data has been processed:

- 1 MB = 1024\ :sup:`2` bytes

- 1 GB = 1024\ :sup:`3` bytes

- 1 TB = 1024\ :sup:`4` bytes

Operations
~~~~~~~~~~

How does the Backup Feature work?
+++++++++++++++++++++++++++++++++

You install the Backup Agent on a server in the same deployment with
your MongoDB infrastructure. The agent conducts an initial sync of
your data to |mms|. After the initial sync, the agent tails the
:manual:`oplog </core/replica-set-oplog/>` to provide a
continuous backup of your deployment.

Where should I run the Backup Agent?
++++++++++++++++++++++++++++++++++++

Run the Backup Agent on a host that:

- Is separate from your MongoDB instances. This avoids system resource contention.

- Can connect to your MongoDB instances. Check network settings for
  connections between the agent and MongoDB hosts. For a list of needed ports,
  see see :doc:`open ports for agents </reference/firewall-configuration>`.

- Has at least 2 CPU and 3 GB of RAM above platform requirements. With each
  backup job it runs, the Backup Agent further impacts host performance.

Can I run the Backup and Monitoring Agents on a Single System?
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

There is no technical restriction that prevents the Backup Agent and
the Monitoring Agent from running on a single system or host. However,
both agents have resource requirements, and running both on a single
system can affect the ability of these agents to support your deployment
in |mms|.

The resources required by the Backup Agent depend on rate and size
of new oplog entries (i.e. total oplog gigabyte/hour produced.)
The resources required by the Monitoring Agent depend on the number of
monitored :program:`mongod` instances and the total number of
:term:`databases <database>` provided by the :program:`mongod` instances.

Can I run multiple Backup Agents to achieve high availability?
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

You can run multiple Backup Agents for high availability. If you do, the
Backup Agents must run on different hosts.

When you run multiple Backup Agents, only one agent per group is the
**primary agent**. The primary agent performs the backups. The
remaining agents are completely idle, except to log their status as
standbys and to periodically ask |mms| whether they should become the
primary.

Does the Backup Agent modify my database?
+++++++++++++++++++++++++++++++++++++++++

The Backup Agent writes a small token called a “checkpoint" into the
oplog of the source database at a regular interval. These tokens
provide a heartbeat for backups and have no effect on the source
deployment. Each token is less than 100 bytes. See: :ref:`checkpoint`
for more information about checkpoints.

Will Backup impact my production databases?
+++++++++++++++++++++++++++++++++++++++++++

The Backup feature will typically have minimal impact on
production MongoDB deployments. This impact will be similar to that of
adding a new :term:`secondary` to a :term:`replica set`.

By default, the Backup Agent will perform its initial sync,
the most resource intensive operation for backups, against
a secondary member of the replica set to limit its impact.
You may optionally configure the Backup Agent to
perform the initial sync against the replica set's :term:`primary`,
although this will increase the impact of the initial sync operation.

.. "Is my data safe":

.. include:: /includes/extracts/faq-data-security.rst

.. "Is there a limit to Backup size":

.. include:: /includes/extracts/faq-backup-size-limit.rst

What is the load on the database during the initial Backup sync?
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

The impact of the initial backup synchronization should be similar to
syncing a new secondary replica set member. The Backup Agent does not
throttle its activity, and attempts to perform the sync as quickly as
possible.

How do I perform maintenance on a Replica Set with Backup enabled?
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Most operations in a replica set are replicated via the oplog and are
thus captured by the backup process. Some operations, however, make
changes that are *not* replicated: for these operations you *must*
have |mms| :doc:`resync from your current replica set
</tutorial/resync-backup>` to include the changes.

The following operations are not replicated and therefore require
resync:

- Renaming or deleting a database by deleting the data files in the data
  directory. As an alternative, remove databases using an operation
  that MongoDB will replicate, such as :method:`db.dropDatabase()` from
  the :program:`mongo` shell.

- Changing any data while the instance is running as a :term:`standalone`.

- Rolling index builds.

- Using :dbcommand:`compact` or :dbcommand:`repairDatabase` to reclaim
  a significant amount of space.
  
  .. only:: cloud
  
     Resync is not strictly necessary after :dbcommand:`compact` or
     :dbcommand:`repairDatabase` operations but will ensure that the
     |mms| copy of the data is resized, which means quicker restores
     and lower cost.

  .. only:: onprem

     Resync is not strictly necessary after :dbcommand:`compact` or
     :dbcommand:`repairDatabase` operations but will ensure that the
     |mms| copy of the data is resized, which means quicker restores.

.. seealso:: :manual:`Maintenance Operations for Replica Set Members </tutorial/perform-maintence-on-replica-set-members>`.

.. "Does the Backup Agent Support SSL":

.. include:: /includes/extracts/faq-backup-agent-and-ssl.rst

Configuration
~~~~~~~~~~~~~

How can I prevent |mms| from backing up a collection?
+++++++++++++++++++++++++++++++++++++++++++++++++++++

|mms| provides a :ref:`namespaces filter <namespaces-filter>` that
allows you to specify which collections or databases to back up.

How can I change which namespaces are backed up?
++++++++++++++++++++++++++++++++++++++++++++++++

To edit the filter, see :doc:`/tutorial/edit-backup`. Changing the
:ref:`namespaces filter <namespaces-filter>` might necessitate a resync.
If so, |mms| handles the resync.

.. "How can I use Backup if Backup jobs fail to bind":

.. include:: /includes/extracts/faq-backup-jobs-fail-to-bind.rst

.. "How do I resolve applyOps errors during backups":

.. include:: /includes/extracts/faq-applyops-errors.rst

Restoration
~~~~~~~~~~~

|mms| produces a copy of your data files that you can use to seed a
new deployment.

How does |mms| provide point-in-time restores?
++++++++++++++++++++++++++++++++++++++++++++++

|mms| first creates a local restore of a snapshot preceding the point
in time and then applies the stored oplog entries to reach the
specified point in time.

.. only:: onprem

   The ability of |mms| to provide a given point-in-time restore
   depends on the retention policy of the snapshots and the configured
   point-in-time window.

   For information on retention policy and the point-in-time window,
   see :ref:`edit-snapshot-schedule`.

.. only:: cloud

   |mms| can build a restore to any point in time within a 24-hour
   period by replaying the oplog to the desired time.

   For procedures on restoring replica sets and sharded clusters, see
   :doc:`/tutorial/nav/backup-restore-deployments`

Can I take snapshots more frequently than every 6 hours?
++++++++++++++++++++++++++++++++++++++++++++++++++++++++

No, |mms| does not support a snapshot schedule more frequent than every 6
hours. For more information, see :ref:`snapshot-frequency-and-retention`.

Can I set my own snapshot retention policy?
+++++++++++++++++++++++++++++++++++++++++++

Yes. You can change the schedule through the :guilabel:`Edit Snapshot
Schedule` menu option for a backed-up deployment.
Administrators can change the :ref:`snapshot frequency and retention
policy <snapshot-frequency-and-retention>` through the
:doc:`snapshotSchedule resource </reference/api/snapshot-schedule>` in the API.

.. include:: /includes/extracts/faq-backup-costs.rst

.. "How many copies of my data does Cloud Manager store":

.. include:: /includes/extracts/faq-copies-of-data.rst

How long does it take to create a restore?
++++++++++++++++++++++++++++++++++++++++++

|mms| transmits all backups in a compressed form from the |mms| server
to your infrastructure.

.. only:: cloud

   Within the US, |mms| sends snapshots at 50-100 Mbps. Assuming a
   compression factor of 4x and transmission speeds of 50 Mbps, a 250 GB
   snapshot will take 2.5 hours.

In addition, point-in-time restores that require creating a new
snapshot take additional time, which depends on the size of the
scheduled snapshot and the amount the oplog entries that |mms| must
apply to the preceding snapshot to roll forward to the requested
point-in-time of the backup.

Does the Backup feature perform any data validation?
++++++++++++++++++++++++++++++++++++++++++++++++++++

Backup conducts basic corruption checks and provides an alert if any
component (e.g. the agent) is down or broken, but does not perform
explicit data validation. When it detects corruption, |mms| errs on
the side of caution and invalidates the current backup and sends an
alert.

How do I restore? What do I get when I restore?
+++++++++++++++++++++++++++++++++++++++++++++++

You can request a restore via |mms|, where you can then choose which
snapshot to restore and how you want |mms| to deliver the restore. All
restores require 2-factor authentication. If you have SMS set up, |mms|
will send an authorization code via SMS. You must enter the
authorization code into the backup interface to begin the restore
process.

.. include:: /includes/fact-two-factor-auth-India-limit.rst

|mms| delivers restores as ``tar.gz`` archives of
MongoDB data files.

For more information, see
:doc:`/tutorial/nav/backup-restore-deployments`.

.. _backup-faq-scp-validation:

How do I know an SCP restore push has completed and is correct?
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

.. COMMENT  This should be a step in the /tutorial/restore-sharded-cluster

When you receive restoration files through an SCP push, |mms| sends SHA-1
hash files, also called checksum files, along with the restore files. The
hash files have the ``.sha1`` extension.

To ensure the restore files are complete and correct, use the Unix ``shasum``
utility:

.. code-block:: sh

   shasum -c <checksum file>

What is the SCP public key for |mms|?
+++++++++++++++++++++++++++++++++++++

|mms| generates an SSH public key on a per user basis to
use when delivering backups via SCP. To generate a public key, see
:doc:`/tutorial/generate-key-pair-for-scp-restores`.

How does |mms| handle a rollback of backed-up data?
+++++++++++++++++++++++++++++++++++++++++++++++++++

If your MongoDB deployment experiences a :manual:`rollback
</core/replica-set-rollbacks>`, then |mms| also rolls back
the backed-up data.

|mms| detects the rollback when a :term:`tailing cursor <tailable
cursor>` finds a mismatch in timestamps or hashes of write operations.
|mms| enters a rollback state and tests three points in the oplog of your
replica set's :term:`primary` to locate a common point in history. |mms| rollback differs
from MongoDB :term:`secondary` rollback in that the common point does not
necessarily have to be the most *recent* common point.

When |mms| finds a common point, the service invalidates oplog entries
and snapshots beyond that point and rolls back to the most recent snapshot
before the common point. |mms| then resumes normal backup operations.

If |mms| cannot find a common point, a :doc:`resync
</tutorial/resync-backup>` is required.

What conditions will require a resync?
++++++++++++++++++++++++++++++++++++++

If the Backup Agent's :term:`tailing cursor <tailable cursor>` cannot keep up
with your deployment's :term:`oplog`, then you must :doc:`resync your backups
</tutorial/resync-backup>`.

This scenario might occur, for example, if:

- Your application periodically generates a lot of data, shrinking the
  primary's oplog window to the point that data is written to the oplog faster
  than |mms| can consume it.

- If the Backup Agent is running on an under-provisioned or over-used machine
  and cannot keep up with the oplog activity.

- If the Backup Agent is down for a period of time longer than the oplog size
  allows. If you bring down your agents, such as for maintenance, restart them
  in a timely manner. For more information on oplog size, see :manual:`Replica
  Set Oplog </core/replica-set-oplog>` in the MongoDB manual.

- If you delete all replica set data and deploy a new replica set with the
  same name, as might happen in a test environment where deployments are
  regularly torn down and rebuilt.

- If there is a rollback, and |mms| cannot find a common point in the oplog.

- If an oplog event tries to update a document that does not exist in the
  backup of the replica set, as might happen if syncing from a secondary that has
  inconsistent data with respect to the primary.

.. "How much does it cost to use Backup":

.. include:: /includes/extracts/faq-pricing-backup.rst

.. _faq-administration:

Administration FAQs
-------------------

Can I reset my password?
~~~~~~~~~~~~~~~~~~~~~~~~

Yes, see :doc:`/tutorial/edit-your-user-account`.

How do I add a user to my company/group?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

For instructions on adding users to your company/group, see
:doc:`/tutorial/manage-users`.


How can I configure multiple Google Authenticator apps to use the same account?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

By selecting the :guilabel:`Can't scan the barcode?` option during the
procedure to :ref:`two-factor-google-authenticator`. The option provides a
common key that multiple Google Authenticator apps can use.

.. only:: cloud

   As an existing |mms| account holder, how do I create a new |service| group?
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   In |mms|, click on your user name in the upper-right hand corner and
   select :guilabel:`My Groups`. Click the :guilabel:`Add Group` button.

   The :guilabel:`Create a New Group` screen provides you the choice to
   create either an |service| group or a |mms| group. Select
   :guilabel:`MongoDB Atlas` to create a new |service| group and switch to
   the :guilabel:`Clusters` view in |service|.

.. _exposed-hosts-alert:

What do the alert conditions mean?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

For a reference on the alert conditions, see :doc:`/reference/alerts/`.

What alerts are configured by default?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

See :doc:`/tutorial/manage-alert-configurations` for the default alert
configurations as well as steps to add new alerts or modify existing
alerts, including modifying the alert frequency.

How do I close my |mms| group?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

A user with the Owner role can close a group on the :guilabel:`Billing/Subscriptions`
page. The operation cannot be undone.

.. note::

   |mms| logs out the user account that closed the group. However,
   the account is not deleted, and the user may log in again to create
   a new group.

Before closing a group, verify that the following conditions are
true:

* The group must not have any active backups, and

* The group must not have any unpaid bills.

To close your group:

#. Log into |mms|.

#. Click the :guilabel:`Settings` tab.

#. Click :guilabel:`Billing/Subscriptions`.

#. Click :guilabel:`Close Group <GroupName>` at the bottom of the page.

#. Click :guilabel:`Close Group`.

Miscellaneous
-------------

What open source projects does |mms| use?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Database: `MongoDB <http://mongodb.org>`_
- App framework: `Google Guice <http://code.google.com/p/google-guice/>`_
- Http server: `Jetty <http://jetty.codehaus.org/jetty/>`_
- Web framework: `Jersey <http://jersey.java.net/>`_
- Misc server libs: `Apache Commons <http://commons.apache.org/>`_
- UI lib: `jQuery <http://jquery.com/>`_ , `Bootstrap <http://twitter.github.io/bootstrap/>`_
- Charts: `dygraphs <http://dygraphs.com/>`_
- Graphics: `Font-Awesome <http://fortawesome.github.io/Font-Awesome/>`_
