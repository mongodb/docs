.. _rm-example-connect:

==============================
Connect to {+rel-mig+}
==============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

About this Task 
---------------


Steps 
-----

.. procedure:: 
   :style: normal

   .. step:: Create a new project in {+rel-mig+}

      Click :guilabel:`New Project` at the top-right of the {+rel-mig+} 
      home screen.

      If you already have a project in {+rel-mig+}, proceed to the next step.

   .. step:: Connect to your PostgreSQL database

      Click the :guilabel:`Connect Database` button and select 
      :guilabel:`PostgreSQL` in the drop-down menu. Enter the connection 
      details for your PostgreSQL instance, including the host, port, database,
      user, and password. 

      Ensure that you test your connection before you click 
      :guilabel:`Connect`. If you receive a ``no encryption`` error, click 
      on the :guilabel:`SSL` tab and enable :guilabel:`Use SSL`.
   
   .. step:: Select all tables from the OMG schema in the mongodb_insurance_model database 

      After you select all the tables in the database, click 
      :guilabel:`Next`.

   .. step:: Define your schema

      Under :guilabel:`Initial mappings`, ensure that you select 
      :guilabel:`Start with a MongoDB schema that matches your relational schema`
      and click :guilabel:`Next`. 

   .. step:: Name your project 

   .. step:: Click Done 

      This generates a schema where each collection corresponds to a table in 
      the original relational schema.

      By default, {+rel-mig+} displays a horizontally split view of the 
      :guilabel:`Relational` (top) and :guilabel:`MongoDB` (bottom) models. 

Next Steps
----------

After you connect to your PostgreSQL database, you can start :ref:`refactoring the
Party domain <rm-example-refactor-party-domain>`.

Learn More
----------

- :ref:`rm-database-connections`
- :ref:`rm-connect-to-postgres`
