.. _mql-support-diagnostic-cmd:

===================
Diagnostic Commands
===================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

``buildInfo`` 
-------------

For the :manual:`buildInfo </reference/command/buildInfo>` command, the 
response contains the following fields:

.. list-table::
   :header-rows: 1
   :widths: 30 70

   * - Field
     - Description

   * - ``ok``
     - Returns ``1`` for success or ``0`` for failure.

   * - ``version``
     - MongoDB client compatibility version. This is the earliest 
       version of the MongoDB client with which the {+df+} service 
       is compatible.

   * - ``versionArray``
     - MongoDB client compatibility version in array format.

   * - ``dataLake.version``
     - Version number of {+df+}.

   * - ``dataLake.gitVersion``
     - Git version of the {+df+} service.

   * - ``dataLake.date``
     - Build timestamp of the {+df+} service.

   * - ``dataLake.mongoSQLVersion``
     - ``mongoSQL`` version of the {+df+} service.

.. example::

   .. code-block:: json

      {
        "ok" : <return>,
        "version" : "<version-number>",
        "versionArray" : [
          <number>,
          <number>,
          <number>,
          <number>
        ],
        "dataLake" : {
          "version" : "<version-number>",
          "gitVersion" : "<version-number>",
          "date" : "<timestamp>",
          "mongoSQLVersion" : "<version-number>"
        }
      }

``collStats``
-------------

For the :manual:`collStats </reference/command/collStats>` command, 
{+adf+} omits the following fields in the response:

- ``avgObjSize``
- ``capped``
- ``max``
- ``maxSize``
- ``wiredTiger``
- ``nindexes``
- ``totalIndexSize``
- ``indexSizes``

{+adf+} includes the following fields in the response. You can use 
these fields to verify what partitions are used to populate a 
collection, understand how recently the stats were computed, and 
determine if {+adf+} truncated the output document.

.. list-table::
   :header-rows: 1
   :widths: 30 70

   * - Field
     - Description

   * - ``dataLake.partitionCount``
     - Number of partitions.

   * - ``dataLake.avgPartitionSize``
     - Average size of all partitions.

   * - ``dataLake.partitions.format``
     - File format of the partition.

   * - ``dataLake.partitions.attributes``
     - Filtering attributes of the partition.

   * - ``dataLake.partitions.count``
     - Number of documents in the partition.

   * - ``dataLake.partitions.size``
     - Size, in bytes, of the partition.

   * - ``dataLake.partitions.source``
     - |s3| URL or |service| cluster name, which contains the 
       backing data of the partition.

   * - ``dataLake.partitions.version``
     - MongoDB version of the |service| {+cluster+}. The ``collStats``
       command returns this only for :ref:`adf-configuration-file-atlas`
       data stores. The value has the following format:
     
       .. code-block:: 
          :copyable: false 

          <major-version-number>.<minor-version-number>.<patch-version-number>

       For example, ``7.0.1``.

   * - ``cacheMetadata``
     - Information about how recently {+adf+} computed the statistics. 

   * - ``cacheMetadata.computeTime`` 
     - Time in :manual:`ISODate 
       </reference/glossary/#term-isodate>` format when the computation 
       for the stats started.

   * - ``cacheMetadata.automaticRefreshInProgress``
     - Flag that indicates whether a background job is running now to 
       refresh the cache.

   * - ``truncated`` 
     - Flag that indicates whether {+adf+} enforced the maximum 
       document size limit of 16MiB. The flag value can be one of the 
       following: 

       - ``true`` - if the output document size exceeded the limit and 
         was therefore truncated to include only enough partitions that 
         allowed the document to comply with the size limit. If 
         ``true``, the ``partitionCount`` and ``avgPartitionSize`` 
         values that {+adf+} returns may be smaller than the actual 
         values.
       - ``false`` - if {+adf+} returns the entire document.

.. example::

   .. code-block:: json

      {
        ...
        "partitionCount": <number of partitions>,
        "avgPartitionSize": <average size of all partitions>,
        "partitions": [
          {
    	      "format": <file format>,
    	      "attributes": <filtering attributes>,
    	      "count": <number of documents in partition>,
    	      "source": <S3 url or Atlas cluster name>,
    	      "size": <size, in bytes, of the partition>
    	    }, 
          ...
        ],
        "truncated": false,
    	"cacheMetadata": {
          computeTime: ISODate("2021-07-25T15:10:33.513Z"),
          automaticRefreshInProgress: false
        },
        ...
      }

{+adf+} introduces an optional boolean parameter, ``sync``, to bypass 
the cache and fetch the most recent storage statistics for a given 
collection. The following values are valid for the ``sync`` parameter:

- ``true`` - to bypass the cache and return the most recent storage 
  statistics
- ``false`` - to return cached data 

If the ``sync`` parameter is omitted, defaults to ``false``.

.. example:: 

   .. code-block:: shell 
             
      db.runCommand( {collStats: "<string>", sync: true|false} )

To learn more about the parameters supported by this command, see 
:manual:`collStats </reference/command/collStats>`.

``connectionStatus`` 
--------------------

For :manual:`connectionStatus </reference/command/connectionStatus>` 
command, {+adf+} returns information about the current connection, 
specifically the state of authenticated users and their available
:atlas:`roles </reference/user-roles>`.

.. include:: /includes/data-federation/fact-connection-limitation.rst

``dbStats``
-----------

For :manual:`dbStats </reference/command/dbStats>` command, {+adf+} 
introduces an optional boolean parameter, ``sync``, to bypass the cache 
and fetch the most recent storage statistics for a given database. The 
following values are valid for the ``sync`` parameter:

- ``true`` - to bypass the cache and return the most recent storage 
  statistics
- ``false`` - to use the cached data also

If the ``sync`` parameter is omitted, defaults to ``false``.

.. example:: 

   .. code-block:: shell 
             
      db.runCommand( {dbStats: 1, sync: true|false} )

To learn more about the parameters supported by this command, see 
:manual:`dbStats </reference/command/dbStats>`. 

{+adf+} command omits the followig fields in the response: 

- ``object``
- ``avgObjSize``
- ``fsUsedSize``
- ``fsTotalSize``

The commands adds the following fields in the response. You can use 
these fields to determine whether the command returned stale data.

.. list-table::
   :header-rows: 1
   :widths: 30 70

   * - Field
     - Description

   * - ``cacheMetadata``
     - Contains information on how recently the stats were computed. 

   * - ``cacheMetadata.computeTime``
     - Time in :manual:`ISODate 
       </reference/glossary/#term-isodate>` format when the computation 
       for the stats started.

   * - ``cacheMetadata.automaticRefreshInProgress``
     - Flag that indicates whether a background job is running now to 
       refresh the cache.

``explain`` 
-----------

For :manual:`explain </reference/command/explain>` command, the data 
returned by ``explain`` documents the {+df+} query plan. The 
``explain`` output differs from MongoDB in that it provides information 
about the data partitions used to satisfy the query.

The following commands can be explained in {+df+}: 

- ``aggregate()``
- ``count()``
- ``find()``

{+adf+} supports the following ``verbosity`` modes: 

- ``queryPlanner`` - provides information on the query plan.
- ``queryPlannerExtended`` - provides detailed information on the query 
  plan including information about the |s3| objects, such as the |s3| 
  object names and sizes, that will be queried.
      
{+adf+} doesn't support ``executionStats`` and ``allPlansExecution`` 
modes.

.. example:: 

   The following example shows how to use the ``explain`` command to 
   get information about the :manual:`aggregate 
   </reference/command/aggregate>` command, including detailed 
   information on the query plan.
          
   .. code-block:: sh 
      :copyable: false 

      db.runCommand({ "explain": { "aggregate": "user", "verbosity": "queryPlannerExtended", "pipeline": [ ], "cursor": {} }})

When you run ``explain``, {+adf+} returns the following fields:

.. list-table:: 
   :header-rows: 1
   :widths: 30 70 

   * - Output Field Name
     - Description 

   * - ``stats``
     - Document that describes the number and total size of partitions 
       that {+adf+} might open for the query.

   * - ``stats.size``
     - Total size of partitions that {+adf+} might open for the query.

   * - ``stats.numberOfPartitions``
     - Number of partitions that {+adf+} might open for the query.

   * - ``plan``
     - Document that contains the query execution plan for the query.  
       The document contains nested execution plan nodes, each of which 
       is a document describing the plan node. The nested plan node 
       documents contain internal description of {+adf+}'s query 
       execution, and include various node kinds that are subject to 
       change. Contact MongoDB support if you need more help with 
       understanding the query plan.

.. tabs:: 

   .. tab:: Basic Example 
      :tabid: basiceg

      .. io-code-block::
         
         .. input::
            :language: shell

            db.runCommand({ "explain": { "aggregate": "user", "verbosity": "queryPlanner", "pipeline": [ ], "cursor": {} }})

         .. output::
            :linenos:

            {
              ok: 1,
              stats: { size: '42.06258487701416 MiB', numberOfPartitions: 1 },
              plan: {
                kind: 'region',
                region: 'AWS/us-east-1',
                node: {
                  kind: 'data',
                  size: '42.06258487701416 MiB',
                  numberOfPartitions: 1,
                  partitions: [ { source: 'sbx', provider: 'atlas', size: '42.06258487701416 MiB' } ]
                }
              }
            }

   .. tab:: find Example 
      :tabid: findeg

      .. io-code-block::
         
         .. input::
            :language: shell

            db.movies.explain().find({"type": "movie", "year": {$gt: 2010, $lt: 2015} }, {"title": 1, "year": 1 })

         .. output::
            :linenos:

            {
              ok: 1,
              stats: { size: '36.06258487701416 MiB', numberOfPartitions: 1 },
              plan: {
                kind: 'region',
                region: 'AWS/us-east-1',
                node: {
                  kind: 'data',
                  size: '36.06258487701416 MiB',
                  numberOfPartitions: 1,
                  partitions: [
                    {
                      source: 'sbx',
                      provider: 'atlas',
                      size: '36.06258487701416 MiB',
                      pipeline: [
                        {
                          '$match': {
                            '$and': [
                              { year: { '$lt': 2015 } },
                              { year: { '$gt': 2010 } },
                              { type: { '$eq': 'movie' } }
                            ]
                          }
                        },
                        { '$project': { title: 1, year: 1 } }
                      ]
                    }
                  ]
                }
              }
            }

``getLog``
----------

For :manual:`getLog </reference/command/getlog>` command, {+adf+}  
returns a successful response, but doesn't includes log data.

``getMore`` 
-----------

For :manual:`getMore </reference/command/getMore>` command, {+adf+} 
returns subsequent batches of documents currently pointed to by a cursor,
when used in conjunction with commands that return a cursor, e.g.
:manual:`find </reference/command/find>` and
:manual:`aggregate </reference/command/aggregate>`.

``hostInfo``
------------

For :manual:`hostInfo </reference/command/hostinfo>` command, {+adf+} 
returns only the following subset of fields from the standard MongoDB 
response:

.. code-block:: json

   {
     "ok" : <return>,
     "system" : {
       "currentTime" : ISODate("<timestamp>"),
       "hostname" : "<hostname>",
       "cpuAddrSize" : <number>,
       "memSizeMB" : <number>,
       "numCores" : <number>,
       "cpuArch" : "<identifier>",
     },
     "os" : {
       "type" : "<string>",
       "name" : "<string>",
     },
     "extra" : { }
   }

``ping``
--------

For :manual:`ping </reference/command/ping>` command, {+adf+} tests 
whether a server is responding to commands.

``whatsmyuri``
--------------

For :manual:`whatsmyuri </reference/command/whatsmyuri>` command, 
{+adf+} returns the client IP address.
