.. _atlas-cli-profiles:

========================
Save Connection Settings
========================

.. meta::
   :description: Save frequently-used connection settings as profiles in Atlas CLI to streamline future sessions by storing project IDs, organization IDs, and API keys.

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

You can save your frequently-used connection settings as profiles.
Profiles store the project IDs, organization
IDs, and, optionally, |api| keys to use in future {+atlas-cli+}
sessions. To save time, you can specify a profile instead of using the
``--projectId`` and ``--orgId`` flags with each command. The {+atlas-cli+}
stores your profiles in a :ref:`configuration file <config-toml-location>` 
called ``config.toml``. 

.. note:: 

   Any settings stored in :ref:`environment variables <atlas-cli-env-vars>`
   take precedence over settings stored in profiles. Any project or organization
   specified with the ``--projectId`` and ``--orgId`` flags take precedence over
   both the profile and the environment variables.

.. _config-toml-location:

Locate the Configuration File
-----------------------------

The {+atlas-cli+} saves the configuration file to the following
location depending on your operating system:

.. tabs-platforms::

   .. tab::
      :tabid: macos

      .. code-block::

         /Users/{username}/Library/Application Support/atlascli

   .. tab::
      :tabid: windows

      .. code-block::

         %AppData/atlascli

   .. tab::
      :tabid: linux

      .. code-block::

         $XDG_CONFIG_HOME/atlascli

      By default, {+atlas-cli+} saves the configuration file in the 
      path defined in the ``$XDG_CONFIG_HOME`` environment variable. 
      You can modify the path defined in the ``$XDG_CONFIG_HOME`` 
      variable to your preferred location. To learn more about 
      modifying the ``$XDG_CONFIG_HOME`` variable, see `XDG Base 
      Directory Specification <https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html>`__.
      
      If ``$XDG_CONFIG_HOME`` is not set, the {+atlas-cli+} uses:

      .. code-block::

         $HOME/.config/atlascli


The {+atlas-cli+} grants the user who ran the command read and write 
access to the file. 

.. _atlas-cli-set-profile:

Create a Profile
----------------

The first time you run the 
``atlas auth login`` or ``atlas config init`` command, the
{+atlas-cli+} automatically creates the ``config.toml`` file and a default
profile. If you run a command without specifying a profile, environment
variables, or ``--projectId`` and ``--orgId`` flags, the {+atlas-cli+} uses the
default profile for the command.

Select Your Use Case
~~~~~~~~~~~~~~~~~~~~

Select a connection method based on your use case:

.. include:: /includes/list-table-atlas-cli-auth.rst

To learn more, see :ref:`Select a Connection Method <connect-atlas-cli>`.

Complete the Prerequisites
~~~~~~~~~~~~~~~~~~~~~~~~~~

- :ref:`Install the {+atlas-cli+} <install-atlas-cli>`.
- Add your host's IP address to the :ref:`IP access list <access-list>`.
- If you select ``atlas config init`` as your connection method, you must 
  :ref:`Configure API keys <atlas-admin-api-access>`.
- If your {+atlas-cli+} installation is behind a 
  firewall and you want to use a proxy |url|, 
  set up the ``HTTP_PROXY`` or ``HTTPS_PROXY`` :ref:`environment 
  variable <atlas-cli-env-vars>`. 
  
  .. important:: 
   
     {+atlas-cli+} supports 
     ``http``, ``https``, and ``socks5`` schemes. You must specify 
     ``cloud.mongodb.com/`` as the main target URL 
     in the proxy service's access list. You must also specify the 
     username and password if your proxy configuration enables authentication. 

     To learn more, see `Proxy server 
     <https://en.wikipedia.org/wiki/Proxy_server>`__.

Follow These Steps
~~~~~~~~~~~~~~~~~~

Select a use case and follow the procedure to create a profile.

.. tabs::

   .. tab:: Non-programmatic Use
      :tabid: atlas-auth-login

      .. include:: /includes/fact-default-vs-named-profile.rst

      .. tabs:: 

         .. tab:: Default Profile
            :tabid: Default

            Follow these steps to create the default profile. If the default profile already
            exists, these commands update the default profile's values.

            .. procedure::
               :style: normal

               .. include:: /includes/steps-atlas-cli-auth-nonprog-default.rst

               .. include:: /includes/steps-atlas-cli-add-profile-nonprogrammatic.rst

         .. tab:: Named Profile
            :tabid: Named

            Follow these steps to create a profile with a custom name.

            .. procedure::
               :style: normal

               .. step:: Run the authentication command.

                  Run the ``atlas auth login`` command in your terminal with the
                  ``profile <profileName>`` flag. ``<profileName>`` should be
                  the desired name for your new profile.

                  .. code-block:: sh

                     atlas auth login --profile myProfile

                  The command opens a browser window and returns a one-time
                  activation code. This code expires after 10 minutes.

               .. include:: /includes/steps-atlas-cli-add-profile-nonprogrammatic.rst

   .. tab:: Programmatic Use
      :tabid: atlas-config-init

      .. include:: /includes/fact-default-vs-named-profile.rst

      .. tabs::

         .. tab:: Default Profile
            :tabid: Default

            Follow these steps to create the default profile. If the default profile already
            exists, these commands update the default profile's values.

            .. procedure::
               :style: normal

               .. include:: /includes/steps-atlas-cli-auth-prog-default.rst

               .. include:: /includes/steps-atlas-cli-add-profile-programmatic.rst

         .. tab:: Named Profile
            :tabid: Named

            Follow these steps to create a profile with a custom name.

            .. procedure::
               :style: normal

               .. step:: Run the authentication command.

                  Run the ``atlas config init`` command in your terminal with the
                  ``profile <profileName>`` flag. ``<profileName>`` should be
                  the desired name for your new profile.

                  .. code-block:: sh

                     atlas config init --profile myProfile

               .. include:: /includes/steps-atlas-cli-add-profile-programmatic.rst


.. _atlas-cli-profile-update:

Update a Profile
----------------

You can update the
settings stored in your configuration file in the following ways:

- Edit the ``config.toml`` file with a text editor.
- Run the ``atlas config set`` command for a setting. This edits an individual
  value in the ``config.toml`` file.

Run a Command with a Profile
----------------------------

To run an {+atlas-cli+} command using a profile:

- :ref:`<atlas-cli-set-profile>`.
- Append the ``--profile <profileName>`` flag to a command or omit the
  ``--profile <profileName>`` flag to use the default profile.

.. example::

   This command uses a profile named ``myProfile``:

   .. code-block::

      atlas <command> --profile myProfile

   This command uses the default profile:

   .. code-block::

      atlas <command>