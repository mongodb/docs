====
$and
====

.. default-domain:: mongodb

.. operator:: $and

   .. versionadded:: 2.0

   *Syntax*: ``{ $and: [ { <expression1> }, { <expression2> } , ... , { <expressionN> } ] }`` 
   
   :operator:`$and` performs a logical ``AND`` operation on an array of
   *two or more* expressions (e.g. ``<expression1>``,
   ``<expression2>``, etc.) and selects the documents that satisfy
   *all* the expressions in the array. With the :operator:`$and`
   operator, MongoDB performs a short-circuit evaluation of the
   expressions. If the first expression ``<expression1>`` evaluates to
   ``false``, MongoDB will skip the evaluation of the remaining
   expressions.

   Consider the following example: 
   
   .. code-block:: javascript
        
      db.inventory.find({ $and: [ { price: 1.99 }, { qty: { $lt: 20 } }, { sale: true } ] } )

   This query will select all documents in the ``inventory``
   collection where:
  
   - ``price`` field value equals ``1.99`` **and** 
   - ``qty`` field value is less than ``20`` **and**
   - ``sale`` field value is equal to ``true``.
   
   MongoDB provides an implicit ``AND`` operation when specifying a
   comma separated list of expressions. For example, you may write the
   above query as:
   
   .. code-block:: javascript
   
      db.inventory.find( { price: 1.99, qty: { $lt: 20 } , sale: true } )
   
   If, however, a query requires an ``AND`` operation on the same
   field, you *must* use the :operator:`$and` operator as in the
   following example:

   .. code-block:: javascript
 
      db.inventory.update( { $and: [ { price: { $ne: 1.99 } }, { price: { $exists: true } } ] }, { $set: { qty: 15 } } )

   This :method:`update() <db.collection.update()>` operation will set
   the value of the ``qty`` field in documents where: 

   -  the ``price`` field value does not equal ``1.99`` **and** 
   -  the ``price`` field exists.
   
   .. seealso:: 
   
      :method:`find() <db.collection.find()>`, :method:`update()
      <db.collection.update()>`, :operator:`$ne`, :operator:`$exists`,
      :operator:`$set`.
      