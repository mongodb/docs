====================
db.collection.find()
====================

.. default-domain:: mongodb

.. method:: db.collection.find(query,projection)

   The :method:`find() <db.collection.find()>` method selects
   documents in a collection and returns a
   :term:`cursor` to the selected documents.

   The :method:`find() <db.collection.find()>` method can take the
   following parameters:

   :param document query:

         Optional. A document that specifies
         the selection criteria using :doc:`query operators
         </reference/operators>`. Omit the ``query`` parameter or pass
         an empty ``{}`` document to return all documents in the
         collection.

   :param document projection:
          
          Optional. A document that controls the fields to return, or
          the :term:`projection`. The ``projection`` document has
          the following syntax:
          
          .. code-block:: javascript

              { field1: boolean, field2: boolean ... }

          The ``boolean`` can take the following include/exclude values:
          
          - ``1`` or ``true`` to include. The :method:`find()
            <db.collection.find()>` method always includes the
            :term:`_id` field even if the field is not explicitly
            stated to return in the :term:`projection` parameter. 

          - ``0`` or ``false`` to exclude.

          Currently, you cannot mix include and exclude fields in
          the projection document.

   :returns:

      A :term:`cursor` to the documents that match
      the ``query`` criteria and contain the ``projection`` fields.

   .. examples-begin

   Consider the following examples of the :method:`find()
   <db.collection.find()>` method.

   - To select all documents in a collection, call the
     :method:`find() <db.collection.find()>` method with no parameters:

     .. code-block:: javascript

        db.products.find()

     The query will return all the documents with all the fields from
     the collection ``products``. By default, in the :program:`mongo`
     shell, the cursor returns the first batch of 20 matching
     documents. In the :program:`mongo` shell, iterate through the next
     batch by typing ``it``. Use the appropriate cursor
     handling mechanism for your specific language driver.

   - To select the documents that match a selection criteria, call the
     :method:`find() <db.collection.find()>` method with the ``query``
     criteria:

     .. code-block:: javascript

        db.products.find( { qty: { $gt: 25 } } )

     The query will return all the documents from the collection
     ``products`` where ``qty`` is greater than ``25``. The resulting
     documents will contain all their respective fields.

   - To select the documents that match a selection criteria and return
     only certain fields, call the :method:`find()
     <db.collection.find()>` method with the ``query`` criteria and the
     ``projection`` parameter using the ``include`` syntax:

     .. code-block:: javascript

        db.products.find( { qty: { $gt: 25 } }, { item: 1, qty: 1 } )
    
     The query will return all the documents from the collection
     ``products`` where ``qty`` is greater than ``25``. The resulting
     documents will contain only the ``_id``, ``item``, and ``qty``
     fields. Note that the ``_id`` field is returned even without
     explicitly including it.

     .. code-block:: javascript

        { "_id" : 11, "item" : "pencil", "qty" : 50 }
        { "_id" : ObjectId("50634d86be4617f17bb159cd"), "item" : "bottle", "qty" : 30 }
        { "_id" : ObjectId("50634dbcbe4617f17bb159d0"), "item" : "paper", "qty" : 100 }

   - To select the documents that match a selection criteria and
     exclude certain fields from the resulting documents, call the
     :method:`find() <db.collection.find()>` method with the ``query``
     criteria and the ``projection`` parameter using the ``exclude`` syntax:

     .. code-block:: javascript

        db.products.find( { qty: { $gt: 25 } }, { _id: 0, qty: 0 } )
    
     The query will return all the documents from the collection
     ``products`` where ``qty`` is greater than ``25``. The resulting
     documents will contain all fields **except** the ``_id`` and
     ``qty`` fields. 
     
     .. code-block:: javascript
     
        { "item" : "pencil", "type" : "no.2" }
        { "item" : "bottle", "type" : "blue" }
        { "item" : "paper" }

   .. examples-end