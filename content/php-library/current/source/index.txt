===================
MongoDB PHP Library
===================

.. meta::
   :description: Explore the MongoDB PHP Library for high-level database operations, including installation, connection, data manipulation, and deployment on AWS Lambda.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1

.. toctree::
   :titlesonly:

   Getting Started </get-started>
   Connect </connect>
   Databases & Collections </databases-collections>
   CRUD Operations </crud>
   Aggregation </aggregation>
   Data Formats </data-formats>
   Indexes </indexes>
   Run a Database Command </run-command>
   Atlas Search </atlas-search>
   Atlas Vector Search </vector-search>
   Logging and Monitoring </monitoring-logging>
   Security </security>
   Reference </references>
   Compatibility <https://www.mongodb.com/docs/drivers/compatibility/>
   API Documentation </reference>
   Issues & Help </issues-and-help>

Overview
--------

Welcome to the documentation site for the official {+php-library+}.
The {+library-short+} provides a high-level abstraction around the lower-level
:php:`mongodb extension <mongodb>`.

The ``mongodb`` extension provides a limited API to connect to a MongoDB
database and execute generic commands, queries, and write operations. In
contrast, the {+library-short+} provides a full-featured API and models client,
database, and collection objects. If you are developing a PHP application with
MongoDB, consider using the {+library-short+} instead of the extension alone.

.. _php-driver-arch:

Driver Architecture
-------------------

This section describes how the components of the PHP driver work together.
These components fit into the following general categories:

- High-Level API, which includes the library and other integrations 
- Extension, which includes the extension that integrates the system libraries
- System, which includes the C Driver, BSON library, and encryption library

The following diagram illustrates the architecture of the PHP driver
components:

.. image:: /images/PHP_driver_architecture.svg
   :alt: PHP driver component architecture
   
The PHP library provides an API that is consistent with the other
MongoDB drivers. The library is continually updated to meet cross-driver
specifications. You must add the library as a dependency to access
MongoDB in most PHP applications.

The extension is distributed by using `PECL
<https://www.php.net/manual/en/mongodb.installation.php>`__, and
connects PHP to the system libraries. The extension's public API
provides the following functionality:

- Connection management
- BSON encoding and decoding
- Object document serialization
- Command execution
- Cursor management

To learn more about the system libraries, see the `C Driver
<https://www.mongodb.com/docs/languages/c/c-driver/current/>`__ documentation.

Get Started
-----------

Learn how to install the library and extension, establish a connection to MongoDB,
and begin working with data in the :ref:`php-get-started` tutorial.

Connect to MongoDB
------------------

Learn how to create and configure a connection to a MongoDB deployment
in the :ref:`php-connect` section.

Databases and Collections
-------------------------

Learn how to use the {+library-short+} to work with MongoDB databases and collections
in the :ref:`php-databases-collections` section.

Read and Write Data
-------------------

Learn how to find, update, and delete data in the :ref:`CRUD Operations <php-write-insert>` section.

Transform Your Data with Aggregation
------------------------------------

Learn how to use the {+library-short+} to perform aggregation operations in the
:ref:`php-aggregation` section.

Data Formats
------------

Learn how to work with specialized data formats and custom types in the
:ref:`Data Formats <php-custom-types>` section.

Optimize Queries with Indexes
-----------------------------

Learn how to work with common types of indexes in the :ref:`php-indexes`
section.

Run a Database Command
----------------------

Learn how to run a database command in the :ref:`php-run-command` section.

Atlas Search
------------

Learn how to run Atlas Search queries in the :ref:`<php-atlas-search>` section.

Atlas Vector Search
-------------------

Learn how to run Atlas Vector Search queries in the :ref:`<php-vector-search>` section.

Monitoring and Logging
----------------------

Learn how to monitor changes to your application and write them to logs in the
:ref:`Monitoring and Logging <php-monitoring>` section.

Secure Your Data
----------------

Learn about ways you can authenticate your application and encrypt your data in
the :ref:`php-security` section.

Reference
---------

Learn more about {+library-short+} versions, compatibility, and upgrade considerations in the
:ref:`Reference <php-release-notes>` section.

Issues & Help
-------------

Learn how to report bugs, contribute to the library, and find help in the
:ref:`Issues & Help <php-issues-and-help>` section.
