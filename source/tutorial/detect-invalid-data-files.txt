==========================
Detect Invalid Data Files
==========================

.. default-domain:: mongodb

.. contents::
   :backlinks: none
   :local:

Overview
--------

The most common causes of invalid data files are malfunctioning
network storage, and improper shutdowns without journaling enabled. If
you suspect that some of your data files might be invalid, use the
procedures described here and in :doc:`/tutorial/recover-data` to
help recover some of your data.

Considerations
--------------

Data recovery on a single unjournaled :program:`mongod` instance
is more difficult than data recovery on a journaled replica set,
and may recover less data.

The best way to avoid data loss and ensure the most
robust deployments is to follow the recommendations in
:doc:`maintain-valid-data-files`. See also :doc:`/core/backups`,
:doc:`/administration/backup`, :doc:`/faq/replica-sets`,
:doc:`/core/journaling`, and :doc:`/tutorial/manage-journaling`
for information on how to set up and safeguard a robust deployment.

Procedure
---------

With No Journal Enabled
~~~~~~~~~~~~~~~~~~~~~~~

When a :program:`mongod` instance does not run with journaling enabled
and shuts down uncleanly, you must assume the data files are in an
invalid state.

To confirm that a :program:`mongod` instance shut down uncleanly, look for the
following indicators:

- a ``mongod.lock`` non-zero-length file in the data directory.

- the following line in the :program:`mongod` log output:

  .. code-block:: none

     Unclean shutdown detected.

With a Journal Enabled
~~~~~~~~~~~~~~~~~~~~~~

When :program:`mongod` instance running with journaling enabled shuts down uncleanly,
or if you suspect invalid data files, test the integrity of a single
collection with the :method:`db.collection.validate()` method.

.. example::

   Test the integrity of the ``people`` collection using the following
   command from the :program:`mongo` shell:

   .. code-block:: javascript

      db.test.validate(true)

   A portion of the output shows that the ``test`` collection is valid:

   .. code-block:: javascript

      {
      ...

        "valid" : true,
        "errors" : [ ],
        "ok" : 1
      }


