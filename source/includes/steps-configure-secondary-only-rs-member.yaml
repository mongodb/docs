title: Retrieve the current replica set configuration.
stepnum: 1
ref: assign-rsconf
pre: |
  The :method:`rs.conf()` method returns a :doc:`replica set
  configuration document </reference/replica-configuration>` that
  contains the current configuration for a replica set.

  In a :binary:`~bin.mongo` shell connected to a primary, run the
  :method:`rs.conf()` method and assign the result to a variable:
action:
  language: javascript
  code: cfg = rs.conf()
post: |
  The returned document contains a
  :rsconf:`members` field which contains an array
  of member configuration documents, one document for each member of the
  replica set.
---
title: Assign priority value of ``0``.
stepnum: 2
ref: assign-priority-values
pre: |
  To prevent a secondary member from becoming a primary, update the
  secondary member's :rsconf:`members[n].priority`
  to ``0``.

  To assign a priority value to a member of the replica set, access the
  member configuration document using the array index. In this
  tutorial, the secondary member to change corresponds to the
  configuration document found at position ``2`` of the
  :rsconf:`members` array.
action:
  language: javascript
  code: |
     cfg.members[2].priority = 0
post: |
   The configuration change does not take effect until you reconfigure
   the replica set.
---
title: Reconfigure the replica set.
ref: update-replica-set-configuration
stepnum: 3
pre: |
  Use :method:`rs.reconfig()` method to reconfigure the replica set
  with the updated replica set configuration document.

  Pass the ``cfg`` variable to the :method:`rs.reconfig()` method:
action:
  language: javascript
  code: rs.reconfig(cfg)
...
