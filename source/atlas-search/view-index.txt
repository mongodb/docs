.. facet::
   :name: programming_language
   :values: c, cpp, csharp, java, javascript/typescript, python, shell

.. _ref-view-index:

==========================
View an Atlas Search Index
==========================

.. default-domain:: mongodb

.. meta:: 
   :keywords: index namespace, view mappings, code example, atlas cli, atlas ui, java sync, node.js, atlas api
   :description: Learn how to view your Atlas Search index through the Atlas UI, Atlas Search API, or Atlas CLI.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. include:: /includes/fts/facts/fact-fts-out-agg.rst

You can view an |fts| index definition in the :guilabel:`Index 
Overview` page. For each index, the :guilabel:`Index Overview` page 
shows the following: 

- :manual:`Namespace </reference/limits/#std-label-faq-dev-namespace>` 
  for the index.
- Index and search :ref:`analyzers <analyzers-ref>` specified in the 
  index definition.
- :ref:`Dynamic or static <static-dynamic-mappings>` mapping.
- Field mappings in the :ref:`index definition 
  <ref-index-definitions>`, if any, including field name, data type, 
  and whether dynamic mapping is enabled for the individual field.

This page describes how to view your index definition in the 
:guilabel:`Index Overview` page. You can also :ref:`ref-edit-index` 
with the visual or |json| editor in the :guilabel:`Index Overview` 
page. 

Required Access
---------------

.. include:: /includes/fts/facts/fact-fts-required-roles.rst

.. _ref-view-index-programmatically:

Procedure
---------

You can retrieve your |fts| indexes in the {+atlas-ui+}, or
programmatically by using {+mongosh+}, the {+atlas-cli+}, the |api|, or
a supported :driver:`MongoDB Driver </>` in your preferred language. 

.. |command-type| replace:: retrieve
.. |compatibility-table| replace:: :ref:`fts-index-supported-drivers`
.. |search-type| replace:: |fts|

.. include:: /includes/search-shared/fact-search-commands-cluster-tier.rst

You must have at least the 
:atlasrole:`readAnyDatabase` role or ``read`` access to
the database that contains the indexes. To learn more,
see :ref:`atlas-user-privileges` or :ref:`atlas-specific-privileges`.

----------

.. |arrow| unicode:: U+27A4

|arrow| Use the **Select your language** drop-down menu to set the 
language of the example in this section.

----------

.. tabs-selector:: drivers

.. tabs-drivers::

   .. tab::
      :tabid: atlas-cli

      Retrieve |fts| Indexes for a Cloud Deployment 
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      .. include:: /includes/extracts/atlas-clusters-search-indexes-list-and-describe.rst

      Retrieve |fts| Indexes for a Local Deployment 
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      .. include:: /includes/extracts/atlas-deployments-search-indexes-list-and-describe.rst

   .. tab::
      :tabid: atlas-api

      To retrieve an |fts| index through the |api|:
      
      .. procedure::
         :style: normal
         
         .. step:: Send a ``GET`` request.
      
            Send a ``GET`` request with either the unique ID or name of 
            the |fts| index that you wish to retrieve to the ``search/indexes/`` endpoint.

            .. code-block:: sh

               curl --user "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest \ --header "Accept: application/json" \
               --include \
               --request GET "https://cloud.mongodb.com/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/search/indexes/{indexId}"
            
            To learn more about the syntax and parameters for either 
            endpoint, see :oas-atlas-op:`Get One By Name 
            </getAtlasSearchIndexByName>` and
            :oas-atlas-op:`Get One By ID </getAtlasSearchIndex>`.

         .. step:: Review the response.

      To retrieve all |fts| indexes for a collection:
      
      .. procedure::
         :style: normal
         
         .. step:: Send a ``GET`` request.

            Send a ``GET`` request to the ``search/indexes/`` 
            :oas-atlas-op:`endpoint </listAtlasSearchIndexes>` with the 
            name of the collection whose indexes you want to retrieve.

            .. code-block:: sh

               curl --user "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest \ --header "Accept: application/json" \
               --include \
               --request GET "https://cloud.mongodb.com/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/search/indexes/{databaseName}/{collectionName}"

         .. step:: Review the response.

      To retrieve all |fts| indexes for a cluster:
      
      .. procedure::
         :style: normal
         
         .. step:: Send a ``GET`` request.
            
            Send a ``GET`` request to the ``search/indexes/`` 
            :oas-atlas-op:`endpoint </listAtlasSearchIndexesCluster>` 
            with the name of the cluster whose indexes you want to 
            retrieve.

            .. code-block:: sh

               curl --user "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest \ --header "Accept: application/json" \
               --include \
               --request GET "https://cloud.mongodb.com/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/search/indexes"

         .. step:: Review the response.

   .. tab::
      :tabid: atlas-ui

      .. include:: /includes/steps-view-fts-index.rst

   .. tab::
      :tabid: shell

      .. include:: /includes/fts/search-index-management/procedures/steps-fts-view-index-shell.rst

   .. tab::
      :tabid: nodejs

      .. include:: /includes/fts/search-index-management/procedures/steps-fts-view-index-node.rst

   .. tab::
      :tabid: csharp

      .. include:: /includes/fts/search-index-management/procedures/steps-fts-view-index-csharp.rst

   .. tab::
      :tabid: java-sync

      To retrieve |fts| indexes on a collection using the :driver:`Java
      Driver </java/sync/current/fundamentals/indexes/#atlas-search-indexes>`,
      use the ``listSearchIndexes()`` method. You must have
      :driver:`Java Driver </java/sync/current/>` v4.11.0 or higher.

      .. include:: /includes/fts/search-index-management/procedures/steps-fts-view-index-java.txt

      .. seealso:: 
      
         :driver:`Atlas Search Indexes </java/sync/current/fundamentals/indexes/#atlas-search-indexes>`
   
   .. tab::
      :tabid: cpp

      .. include:: /includes/fts/search-index-management/procedures/steps-fts-view-index-cxx.rst
         
   .. tab::
      :tabid: c

      .. include:: /includes/fts/search-index-management/procedures/steps-fts-view-index-c.rst

   .. tab::
      :tabid: python

      .. include:: /includes/fts/search-index-management/procedures/steps-fts-view-index-python.rst

.. _search-index-node-status:

Search Indexes
--------------

In the {+atlas-ui+}, the |fts| page displays information about |fts| indexes
for the collections. The page displays the following details for each
index on the {+cluster+}. 

.. include:: /includes/fts/list-tables/search-indexes.rst  

You can sort the indexes by the various columns. By default, |service|
sorts the indexes by first the database name and then the collection
name. To sort by multiple columns, press :kbd:`Shift` and click the
column names in the order in which you want to multi-sort the list of 
indexes. |service| doesn't save your preferred sorting order when you 
leave the page.

.. _search-index-statuses:

Review Index Statuses 
---------------------

For each index, the :guilabel:`Status` column shows the current state of
the index on the primary node of the {+cluster+}. The following table
describes the index statuses.       

.. list-table::
   :header-rows: 1
   :widths: 25 75

   * - Status
     - Description

   * - Pending 
     - |service| has not yet started building the index.

   * - Building 
     - |service| is building the index or re-building the 
       index after an edit. When the index is in this state:
       
       - For a new index, |fts| doesn't serve queries until the 
         index build is complete. 
       - For an existing index, you can continue to use the old index 
         for existing and new queries until the index rebuild 
         is complete.

   * - Ready
     - Index is ready to use.

   * - Stale
     - Index is stale because of any of the following reasons: 
       
       - Replication stopped due to high disk utilization. 
        
         The pause replication threshold is 90% and the resume
         replication threshold is 85% disk utilization. 
         
       - If replication stops for a long period, the |fts| ``mongot``
         process falls off the oplog. 
         
         This state commonly occurs when the current replication point
         is no longer available on the |mongod| oplog. |service|
         rebuilds index if the ``mongot`` process falls of the oplog.

       - Index reached the two billion document limit.

       - Replication failed due to an error.
       
       You can still query the existing index. However, the results for 
       queries against a stale index might contain stale data. You can
       upscale your search nodes for more disk space and delete existing
       indexes to release disk space. Alternatively, use the error in the
       :guilabel:`View status details` modal window to troubleshoot the
       issue. To learn more, see :ref:`atlas-search-alerts`.

   * - Failed 
     - |service| could not build the index. Use the error  
       in the :guilabel:`View status details` modal window to 
       troubleshoot the issue. To learn more, see 
       :ref:`atlas-search-alerts`.

   * - Deleting
     - |service| is deleting the index from the {+cluster+} nodes.

   * - Does not Exist
     - Index is invalid because the collection for the index no longer
       exists. You can't run queries on this index because there is no 
       corresponding collection for this index. |service| will
       eventually delete the index.

.. _search-index-details:

View Status Details 
-------------------

The :guilabel:`Status` column shows the current state of the index on
the primary node of the {+cluster+}. You can view detailed status in
one of the following ways:

- Click the :guilabel:`View status details` link below the status in the
  :guilabel:`Status` column.  
- Click the name of the index and then select :guilabel:`Status Details`
  from the menu on the left for the index. 

On this page, you can view the following details about the index:

.. _queryable-index:

Index Serving Queries
~~~~~~~~~~~~~~~~~~~~~

This section displays the index that is being used to serve queries. If
you have only one version of the index with this name for the
collection, the section contains a link to the :guilabel:`Index
Overview` where you can see the index definition for the index being
used. 

If you had other indexes with the same name on the collection, the
section shows the latest index definition and also shows prior valid
versions of the index that you can copy in different tabs. 

When you update an index, different nodes apply the updates at different
speeds. Therefore, some nodes might use the latest version and some might
use the prior version. |service| displays both versions of the index
until the changes are applied to all the nodes. 

If you attempt to update the index with an invalid index definition, the 
index build will fail and |service| displays only the previous valid
index definition. 

.. _node-status-ref:

Status Details by Node
~~~~~~~~~~~~~~~~~~~~~~

This section displays the status of the index on each node of the
{+cluster+}. You can see the following details about the index on each
node:

.. list-table:: 
   :stub-columns: 1 
   :widths: 25 75

   * - :guilabel:`Shard` 
     - Shard name. 

   * - :guilabel:`Node` 
     - Node information.
       
   * - :guilabel:`Status` 
     - Status of the index on the node in the shard. 

   * - :guilabel:`Queryable` 
     - Icon that indicates whether the index can serve queries. 

   * - :guilabel:`Message`
     - Reason for the index status. For indexes in ``Stale`` or
       ``Failed`` state, displays the reason why the index is stale or
       why the index build failed. 

   * - :guilabel:`Node Type` 
     - Type of node. Value can be one of the following types: 
       
       - Primary
       - Secondary 
       - Search Node

   * - :guilabel:`Region` 
     - Node region. 

   * - :guilabel:`Size` 
     - Size of the index on the node.

   * - :guilabel:`Documents` 
     - Number and percentage of indexed documents.  
         
   * - :guilabel:`Actions` 
     - Actions you can take on the index in the node. You can click the
       :icon-fa5:`ellipsis-h` and select one of the following options: 
       
       - :ref:`View metrics <review-atlas-search-metrics>`.
       - Copy the host name of the node. 

.. include:: /includes/fact-shardCollection-fts-indexes.rst

.. _search-node-migration-status:

Migration to Search Nodes
~~~~~~~~~~~~~~~~~~~~~~~~~

This section displays the status of the in-progress migration of your
|fts| and {+avs+} indexes to search nodes, if applicable. This is only
visible if you are currently migrating to search nodes.

Click the :guilabel:`View Migration Progress` link in the information
banner under the :guilabel:`Index Status by Search Node` section for 
details on the progress of the migration of the indexes to Search Nodes
(on a per node basis). 

The {+atlas-ui+} displays the following columns for each index on the
{+cluster+}.  

.. include:: /includes/fts/list-tables/node-migration-progress.rst 

The status column displays the status of the index on the Search Nodes.
The status can be one of the following:

.. list-table::
   :header-rows: 1
   :widths: 25 75

   * - Status
     - Description

   * - Building 
     - The index is currently building on the Search Node. Your queries
       can continue to use existing indexes while the new index is
       building.  

   * - On Deck
     - The index is successfully built on the Search Nodes, but the
       migration is not yet complete. Note that migration is complete
       only when |service| successfully builds all the indexes on the
       Search Nodes. 

   * - Ready 
     - The index on the Search Node is ready for use in your queries.
       This displays only when |service| successfully completes the
       migration to the Search Nodes.

   * - Failed 
     - The index build failed and the migration to separate Search Nodes
       is stalled. Your queries can continue to use the existing indexes.
       |service| will try to rebuild the index, but will timeout after 7
       days.  
       
       To migrate successfully, review error message for the index in
       the :ref:`node-status-ref` :guilabel:`Message` column or in the
       :guilabel:`Status Details` page for the index and address issues
       that are causing the index build to fail on the Search Nodes.

Your queries can continue to use existing indexes while the new indexes
are building on the Search Nodes. The migration to the Search Nodes
completes only when |service| successfully builds all the indexes
on the Search Nodes. Then, your queries will be automatically routed to
the use the indexes on the Search Nodes.
