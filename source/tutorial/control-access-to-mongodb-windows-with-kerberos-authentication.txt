=========================================================
Configure MongoDB with Kerberos Authentication on Windows
=========================================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Overview
--------

MongoDB Enterprise supports authentication using a :doc:`Kerberos
service </core/kerberos>`. Kerberos is an industry standard
authentication protocol for large client/server systems. Kerberos allows
MongoDB and applications to take advantage of existing authentication
infrastructure and processes. MongoDB Enterprise only supports the
`MIT implementation <https://kerberos.org/>`__
of Kerberos.

Prerequisites
-------------

Setting up and configuring a Kerberos deployment is beyond the scope of
this document. This tutorial assumes have configured a :ref:`Kerberos
service principal <kerberos-service-principal>` for each
:binary:`~bin.mongod.exe` and :binary:`~bin.mongos.exe` instance.

.. include:: /includes/fact-kerberos-FQDN-repica-sets.rst

Procedures
----------

.. include:: /includes/steps/control-access-to-mongodb-windows-with-kerberos-authentication.rst

Additional Considerations
-------------------------

Configure ``mongos.exe`` for Kerberos
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To start :binary:`~bin.mongos.exe` with Kerberos support, set the
:binary:`~bin.mongos.exe` parameter :parameter:`authenticationMechanisms`
to ``GSSAPI``. You must start :binary:`~bin.mongos.exe` as the
:ref:`service principal account <assign-service-principal-name>`:

.. code-block:: sh

   mongos.exe --setParameter authenticationMechanisms=GSSAPI <additional mongos options>

.. include:: /includes/extracts/default-bind-ip-security-additional-command-line.rst

For example, the following starts a :binary:`~bin.mongos` instance with
Kerberos support:

.. code-block:: sh

   mongos.exe --setParameter authenticationMechanisms=GSSAPI --configdb shard0.example.net, shard1.example.net,shard2.example.net --keyFile C:\<path>\mongos.keyfile --bind_ip localhost,<hostname(s)|ip address(es)>

Modify or include any additional :binary:`~bin.mongos.exe` options as required
for your configuration. For example, instead of using
:option:`--keyFile <mongos --keyFile>` for internal authentication of sharded cluster
members, you can use :ref:`x.509 member authentication
<x509-internal-authentication>` instead.

.. _assign-service-principal-name:

Assign Service Principal Name to MongoDB Windows Service
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Use ``setspn.exe`` to assign the service principal name (SPN) to the
account running the :binary:`~bin.mongod.exe` and the
:binary:`~bin.mongos.exe` service:

.. code-block:: sh

   setspn.exe -S <service>/<fully qualified domain name> <service account name>

.. example::

  If :binary:`~bin.mongod.exe` runs as a service named
  ``mongodb`` on ``testserver.mongodb.com`` with the service account
  name ``mongodtest``, assign the SPN as follows:

  .. code-block:: sh

     setspn.exe -S mongodb/testserver.mongodb.com mongodtest

.. _enable-mixed-kerberos-and-cr-windows:

Incorporate Additional Authentication Mechanisms
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Kerberos authentication (:ref:`GSSAPI <security-auth-kerberos>` (Kerberos))
can work alongside:

- MongoDB's SCRAM authentication mechanism:

  - :ref:`SCRAM-SHA-1 <authentication-scram>` 

  - :ref:`SCRAM-SHA-256 <authentication-scram>` (*Added in MongoDB 4.0*)
  
- MongoDB's authentication mechanism for LDAP:

  - :ref:`PLAIN <security-auth-ldap>` (LDAP SASL)
 
- MongoDB's authentication mechanism for x.509:

  - :ref:`MONGODB-X509 <security-auth-x509>`)

Specify the mechanisms as follows:

.. code-block:: sh

   --setParameter authenticationMechanisms=GSSAPI,SCRAM-SHA-256

Only add the other mechanisms if in use. This parameter setting does
not affect MongoDB's internal authentication of cluster members.

Testing and Verification
------------------------

After completing the configuration steps, you can validate your
configuration with the :binary:`~bin.mongokerberos` tool.

Introduced alongside MongoDB 4.4, :binary:`~bin.mongokerberos`
provides a convenient method to verify your platform's Kerberos
configuration for use with MongoDB, and to test that Kerberos
authentication from a MongoDB client works as expected. See the 
:binary:`~bin.mongokerberos` documentation for more information.

:binary:`~bin.mongokerberos` is available in MongoDB Enterprise only.
