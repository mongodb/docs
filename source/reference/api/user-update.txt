=========================
Update Roles for One User
=========================

.. default-domain:: mongodb

.. include:: /includes/styles/corrections.rst

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. include:: /includes/fact-groups-projects-synonyms.rst

Update a user's roles with an organization.

Resource
--------

.. include:: /includes/api/base-api-uri.rst

.. code-block:: http

   PATCH /users/{USER-ID}

Required Roles
--------------

You must have the appropriate Owner roles to use this |api| endpoint.

.. list-table::
   :widths: 60 40
   :header-rows: 1

   * - Level
     - Needed Role

   * - Organization
     - :authrole:`Organization Owner`

   * - Project
     - :authrole:`Project Owner`

.. important::

   You can always update your own user account.

   If you own an organization or project, you can update the
   :ref:`user roles <user-roles>` for any user with membership in that
   organization or project. You cannot modify any other user profile
   information.

Request Path Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :widths: 15 10 10 65
   :header-rows: 1
   :stub-columns: 1

   * - Name
     - Type
     - Necessity
     - Description

   * - ``USER-ID``
     - string
     - Required
     - Unique identifier of the user that you want to
       retrieve. To retrieve the ``USER-ID`` for a user, see
       :ref:`api-get-all-users-in-group`.

Request Query Parameters
~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/api/no-query-single-parameters.rst

Request Body Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :widths: 15 10 10 65
   :header-rows: 1
   :stub-columns: 1

   * - Name
     - Type
     - Necessity
     - Description

   * - ``roles``
     - array of objects
     - Required
     - Role assigned to the |mms| user.

   * - | ``roles``
       | ``.orgId``
     - string
     - Optional
     - Unique identifier of the organization in which the |mms| user
       has the specified role.

   * - | ``roles``
       | ``.groupId``
     - string
     - Optional
     - Unique identifier of the project in which the |mms| user has the
       specified role.

       .. cond:: onprem

          Roles that start with ``GLOBAL_`` don't require a ``groupId``.
          These roles aren't tied to a project.

   * - | ``roles``
       | ``.roleName``
     - string
     - Optional
     - Name of the role. Accepted values are:

       .. cond:: cloud

          .. include:: /includes/list-tables/api-user-roles-cloud.rst

       .. cond:: onprem

          .. include:: /includes/list-tables/api-user-roles-onprem.rst

Response
--------

The |json| document contains each of the following elements:

.. include:: /includes/api/list-tables/users/create-update-user-response.rst

Example Request
---------------

.. cond:: cloud

   .. code-block:: sh
      :linenos:
      :emphasize-lines: 7-12

      curl --user "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest \
           --header "Accept: application/json" \
           --header "Content-Type: application/json" \
           --include \
           --request PATCH "https://{+cloudmgr-url+}/api/public/v1.0/users/{USER-ID}" \
           --data '
             {
               "roles": [{
                 "groupId": "{GROUP-ID}",
                 "roleName": "{ROLE}"
               }]
             }'

.. cond:: onprem

   .. code-block:: sh
      :linenos:
      :emphasize-lines: 7-12

      curl --user "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest \
           --header "Accept: application/json" \
           --header "Content-Type: application/json" \
           --include \
           --request PATCH "https://{+opsmgr-url+}/api/public/v1.0/users/{USER-ID}" \
           --data '
             {
               "roles": [{
                 "groupId": "{GROUP-ID}",
                 "roleName": "{ROLE}"
               }]
             }'

Example Response
----------------

Response Header
~~~~~~~~~~~~~~~

.. include:: /includes/api/api-headers/401.rst

.. include:: /includes/api/api-headers/200.rst

Response Body
~~~~~~~~~~~~~

.. cond:: cloud

   .. code-block:: json
      :linenos:
      :emphasize-lines: 19-20

      {
        "id": "{USER-ID}",
        "username": "jane",
        "emailAddress": "jane@qa.example.com",
        "firstName": "Jane",
        "lastName": "D'oh",
        "links": [{
          "href": "https://{+cloudmgr-url+}/api/public/v1.0/users/{USER-ID}",
          "rel": "self"
        },
        {
          "href": "https://{+cloudmgr-url+}/api/public/v1.0/users/{USER-ID}/whitelist",
          "rel": "http://mms.mongodb.com/whitelist"
        }],
        "roles": [{
          "orgId": "{ORG-ID}",
          "roleName": "ORG_MEMBER"
        },{
          "groupId": "{PROJECT-ID}",
          "roleName": "GROUP_READ_ONLY"
        }],
        "teamIds": []
      }

.. cond:: onprem

   .. code-block:: json
      :linenos:
      :emphasize-lines: 19-20

      {
        "id": "{USER-ID}",
        "username": "jane",
        "emailAddress": "jane@qa.example.com",
        "firstName": "Jane",
        "lastName": "D'oh",
        "links": [{
          "href": "https://{+opsmgr-url+}/api/public/v1.0/users/{USER-ID}",
          "rel": "self"
        },
        {
          "href": "https://{+opsmgr-url+}/api/public/v1.0/users/{USER-ID}/whitelist",
          "rel": "http://mms.mongodb.com/whitelist"
        }],
        "roles": [{
          "orgId": "{ORG-ID}",
          "roleName": "ORG_MEMBER"
        },{
          "groupId": "{PROJECT-ID}",
          "roleName": "GROUP_READ_ONLY"
        }],
        "teamIds": []
      }
