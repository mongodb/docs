.. _ruby-get-started:

================================
Get Started with the Ruby Driver
================================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 3
   :class: singlecol

.. facet::
   :name: genre
   :values: tutorial
 
.. meta::
   :description: Learn how to create an app to connect to MongoDB deployment by using the Ruby driver.
   :keywords: quick start, tutorial, basics, installation, setup, code example, test connection, runnable

Overview
--------

The {+driver-long+} is a library that allows Ruby applications to interact with
MongoDB databases. You can use the {+driver-short+} to connect to MongoDB and perform
common data operations. This guide shows you how to create an application that uses the
{+driver-short+} to connect to a MongoDB cluster hosted on MongoDB Atlas
and query data in your cluster.

.. tip:: 

   MongoDB Atlas is a fully managed cloud database service that hosts your MongoDB
   deployments. You can create your own free (no credit card required) MongoDB Atlas 
   deployment by following the steps in this guide.

If you prefer to use a different driver or programming language to connect to
MongoDB, see our :driver:`list of official drivers <>`.

.. include:: /includes/get-started/troubleshoot.rst

.. _ruby-quick-start-download-and-install:

Download and Install
--------------------

.. procedure::
   :style: connected

   .. step:: Install dependencies

      Before you begin developing, ensure you install `Ruby
      <https://www.ruby-lang.org/en/downloads/>`__ version 2.7
      or later in your development environment. {+language+}
      is pre-installed on macOS and some Linux distributions,
      but you might need to update your version.

      .. important::

         The {+driver-short+} is not officially supported on Windows.

   .. step:: Create a project directory

      Run the following command in your shell to create a directory
      called ``ruby-quickstart`` for this project:

      .. code-block:: bash

         mkdir ruby-quickstart

      Then, run the following commands to create a ``quickstart.rb`` file in
      the ``ruby-quickstart`` directory:

      .. code-block:: bash

         cd ruby-quickstart
         touch quickstart.rb

   .. step:: Add the {+driver-short+} to your project

      Open the ``quickstart.rb`` file and add the following code:

      .. literalinclude:: /includes/get-started/quickstart.rb
         :language: ruby
         :dedent:
         :start-after: start-bundler
         :end-before: end-bundler

      This code adds the {+driver-short+} as a dependency by
      using the `Bundler <https://bundler.io/>`__ dependency management tool.

      .. important:: {+language+} 3.4+ Dependencies

         If you use {+language+} v3.4 or later, you must activate the 
         ``bigdecimal`` gem by including the following line
         in your code:

         .. code-block:: ruby
            :emphasize-lines: 4

            gemfile do
               source 'https://rubygems.org'
               gem 'mongo'
               gem 'bigdecimal'
            end

         Earlier {+language+} versions include this gem by default.

After you complete these steps, you have a new project directory with the driver
dependencies installed.

.. _ruby-get-started-create-deployment:

Create a MongoDB Deployment
---------------------------

You can create a free tier MongoDB deployment on MongoDB Atlas
to store and manage your data. MongoDB Atlas hosts and manages
your MongoDB database in the cloud.

.. procedure::
   :style: connected

   .. step:: Create a free MongoDB deployment on Atlas

      Complete the :atlas:`Get Started with Atlas </getting-started>`
      guide to set up a new Atlas account and load sample data into a new free
      tier MongoDB deployment.
      
   .. step:: Save your credentials

      After you create your database user, save that user's 
      username and password to a safe location for use in an upcoming step.
  
After you complete these steps, you have a new free tier MongoDB
deployment on Atlas, database user credentials, and sample data loaded
in your database.

.. _ruby-get-started-connection-string:

Create a Connection String 
--------------------------

You can connect to your MongoDB deployment by providing a
**connection URI**, also called a *connection string*, which
instructs the driver how to connect to a MongoDB deployment
and how to behave while connected.

The connection string includes the hostname or IP address and 
port of your deployment, the authentication mechanism, user credentials 
when applicable, and connection options.

To learn how to connect to an instance or deployment not hosted on
Atlas, see the :ref:`ruby-connection-targets` guide.

.. procedure::
   :style: connected

   .. step:: Find your MongoDB Atlas connection string

      To retrieve your connection string for the deployment that
      you created in the :ref:`previous step <ruby-get-started-create-deployment>`,
      log in to your Atlas account and navigate to the
      :guilabel:`Clusters` section. Then, click the :guilabel:`Connect` button
      for your new deployment.

      .. figure:: /includes/figures/atlas_connection_connect_cluster.png
         :alt: The connect button in the clusters section of the Atlas UI

      Proceed to the :guilabel:`Connect your application` section. Select
      "Ruby" from the :guilabel:`Driver` selection menu and the version
      that best matches your installed version from the :guilabel:`Version`
      selection menu.

   .. step:: Copy your connection string

      Click the copy button on the right of the connection string to copy it to
      your clipboard, as shown in the following screenshot:

      .. figure:: /includes/figures/atlas_connection_copy_string_ruby.png
         :alt: The connection string copy button in the Atlas UI

   .. step:: Update the placeholders

      Paste this connection string into a file in your preferred text editor
      and replace the ``<db_username>`` and ``<db_password>`` placeholders with
      your database user's username and password.
      
      Save this file to a safe location for use in the next step.

After completing these steps, you have a connection string that
contains your database username and password.

.. _ruby-get-started-connect-to-mongodb:

Connect to MongoDB
------------------

.. procedure::
   :style: connected

   .. step:: Edit your {+language+} application file

      Navigate to your ``quickstart.rb`` file in the ``ruby-quickstart``
      directory. Copy and paste the following code below the Bundler
      code from the :ref:`ruby-quick-start-download-and-install` step 
      of this tutorial. This code connects to MongoDB and queries the
      ``movies`` collection in the ``sample_mflix`` database.

      .. literalinclude:: /includes/get-started/quickstart.rb
         :language: ruby
         :dedent:
         :start-after: start-query
         :end-before: end-query

   .. step:: Assign the connection string

      Replace the ``<connection string>`` placeholder with the 
      connection string that you copied from the :ref:`ruby-get-started-connection-string`
      step of this tutorial.

   .. step:: Run your {+language+} application

      From your ``ruby-quickstart`` directory, run the following shell
      command to run the application:
      
      .. code-block:: none

         ruby quickstart.rb

      The command line output contains details about the retrieved movie
      document:

      .. code-block:: none
         :copyable: false

         {"_id"=>BSON::ObjectId('...'), "plot"=>"A young man is accidentally sent
         30 years into the past in a time-traveling DeLorean invented by his friend,
         Dr. Emmett Brown, and must make sure his high-school-age parents unite
         in order to save his own existence.", ...
         "title"=>"Back to the Future", ...

      If you encounter an error or see no output, ensure that you specified the
      correct connection string in the ``quickstart.rb`` file and that you loaded the
      sample data.

After you complete these steps, you have a working application that
uses the driver to connect to your MongoDB deployment, runs a query on
the sample data, and prints out the result.

.. _ruby-get-started-next-steps:

Next Steps
----------

Congratulations on completing the quick start tutorial!

In this tutorial, you created a {+language+} application that
connects to a MongoDB deployment hosted on MongoDB Atlas
and retrieves a document that matches a query.

Learn more about the {+driver-short+} from the following resources:

- Learn how to perform read operations in the :ref:`<ruby-read>` section.
- Learn how to perform write operations in the :ref:`<ruby-write>` section.
