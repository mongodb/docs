# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:3
msgid "Calculate Distance Using Spherical Geometry"
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:13
msgid "While basic queries using spherical distance are supported by the ``2d`` index, consider moving to a ``2dsphere`` index if your data is primarily longitude and latitude."
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:17
msgid "The ``2d`` index supports queries that calculate distances on a Euclidean plane (flat surface). The index also supports the following query operators and command that calculate distances using spherical geometry:"
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:22
msgid ":query:`$nearSphere`"
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:24
msgid ":query:`$centerSphere`"
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:26
msgid ":query:`$near`"
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:28
msgid ":dbcommand:`geoNear` command with the ``{ spherical: true }`` option."
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:30
msgid "These three queries use radians for distance. Other query types do not."
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:33
msgid "For spherical query operators to function properly, you must convert distances to radians, and convert from radians to the distances units used by your application."
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:37
msgid "To convert:"
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:39
msgid "*distance to radians*: divide the distance by the radius of the sphere (e.g. the Earth) in the same units as the distance measurement."
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:43
msgid "*radians to distance*: multiply the radian measure by the radius of the sphere (e.g. the Earth) in the units system that you want to convert the distance to."
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:47
msgid "The equatorial radius of the Earth is approximately ``3,963.2`` miles or ``6,378.1`` kilometers."
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:50
msgid "The following query would return documents from the ``places`` collection within the circle described by the center ``[ -74, 40.74 ]`` with a radius of ``100`` miles:"
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:59
msgid "You may also use the ``distanceMultiplier`` option to the :dbcommand:`geoNear` to convert radians in the :binary:`~bin.mongod` process, rather than in your application code. See :ref:`distance multiplier <geospatial-indexes-distance-multiplier>`."
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:64
msgid "The following spherical query, returns all documents in the collection ``places`` within ``100`` miles from the point ``[ -74, 40.74 ]``."
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:75
msgid "The output of the above command would be:"
msgstr ""

#: ../source/includes/extracts/geospatial-queries-longitude-values.rst:2
msgid "For spherical queries, use the ``2dsphere`` index result."
msgstr ""

#: ../source/includes/extracts/geospatial-queries-longitude-values.rst:4
msgid "The use of ``2d`` index for spherical queries may lead to incorrect results, such as the use of the ``2d`` index for spherical queries that wrap around the poles."
msgstr ""

#: ../source/includes/extracts/geospatial-long-lat-values.rst:1
msgid "If specifying latitude and longitude coordinates, list the **longitude** first and then **latitude**:"
msgstr ""

#: ../source/includes/extracts/geospatial-valid-long-lat-values.rst:1
msgid "Valid longitude values are between ``-180`` and ``180``, both inclusive."
msgstr ""

#: ../source/includes/extracts/geospatial-valid-long-lat-values.rst:4
msgid "Valid latitude values are between ``-90`` and ``90`` (both inclusive)."
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:112
msgid "Distance Multiplier"
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:114
msgid "The ``distanceMultiplier`` option of the :dbcommand:`geoNear` command returns distances only after multiplying the results by an assigned value. This allows MongoDB to return converted values, and removes the requirement to convert units in application logic."
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:119
msgid "Using ``distanceMultiplier`` in spherical queries provides results from the :dbcommand:`geoNear` command that do not need radian-to-distance conversion. The following example uses ``distanceMultiplier`` in the :dbcommand:`geoNear` command with a :doc:`spherical </tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes>` example:"
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:133
msgid "The output of the above operation would resemble the following:"
msgstr ""

