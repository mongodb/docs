.. _sharding-manage-shards:

==========================
View Cluster Configuration
==========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. _sharding-procedure-list-databases:

List Databases with Sharding Enabled
------------------------------------

To list the databases that have sharding enabled, query the
``databases`` collection in the :ref:`config-database`.
A database has sharding enabled if the value of the ``partitioned``
field is ``true``. Connect to a :binary:`~bin.mongos` instance with a
:binary:`~bin.mongo` shell, and run the following operation to get a full
list of databases with sharding enabled:

.. code-block:: javascript

   use config
   db.databases.find( { "partitioned": true } )

.. example:: You can use the following sequence of commands to
   return a list of all databases in the cluster:

   .. code-block:: javascript

      use config
      db.databases.find()

   If this returns the following result set:

   .. code-block:: javascript

      { "_id" : "test", "primary" : "shardB", "partitioned" : false }
      { "_id" : "animals", "primary" : "shardA", "partitioned" : true }
      { "_id" : "farms", "primary" : "shardA", "partitioned" : false }

   Then sharding is only enabled for the ``animals`` database.

.. _sharding-procedure-list-shards:

List Shards
-----------

To list the current set of configured shards, use the :dbcommand:`listShards`
command, as follows:

.. code-block:: javascript

   db.adminCommand( { listShards : 1 } )

.. _sharding-procedure-view-clusters:

View Cluster Details
--------------------

To view cluster details, issue :method:`db.printShardingStatus()` or
:method:`sh.status()`. Both methods return the same output.

.. example:: In the following example output from :method:`sh.status()`

   - ``sharding version`` displays the version number of the shard
     metadata.

   - ``shards`` displays a list of the :binary:`~bin.mongod` instances
     used as shards in the cluster.

   - ``databases`` displays all databases in the cluster,
     including database that do not have sharding enabled.

   - The ``chunks`` information for the ``foo`` database displays how
     many chunks are on each shard and displays the range of each chunk.

   .. code-block:: javascript

      --- Sharding Status ---
        sharding version: { 
          "_id" : 1,
          "minCompatibleVersion" : 5,
          "currentVersion" : 6,
          "clusterId" : ObjectId("59a4443c3d38cd8a0b40316d")
        }
        shards:
          {  "_id" : "shard0000",  "host" : "m0.example.net:27018" }
          {  "_id" : "shard0001",  "host" : "m3.example2.net:27018" }
          {  "_id" : "shard0002",  "host" : "m2.example.net:27018" }
        active mongoses:
          "3.4.7" : 1
        autosplit:
          Currently enabled: yes
         balancer:
          Currently enabled:  yes
          Currently running:  no
          Failed balancer rounds in last 5 attempts:  0
          Migration Results for the last 24 hours: 
             1 : Success
        databases:
          {  "_id" : "foo",  "partitioned" : true,  "primary" : "shard0000" }
              foo.contacts
                  shard key: { "zip" : 1 }
                  unique: false
                  balancing: true
                  chunks:
                      shard0001    2
                      shard0002    3
                      shard0000    2
                  { "zip" : { "$minKey" : 1 } } -->> { "zip" : "56000" } on : shard0001 { "t" : 2, "i" : 0 }
                  { "zip" : 56000 } -->> { "zip" : "56800" } on : shard0002 { "t" : 3, "i" : 4 }
                  { "zip" : 56800 } -->> { "zip" : "57088" } on : shard0002 { "t" : 4, "i" : 2 }
                  { "zip" : 57088 } -->> { "zip" : "57500" } on : shard0002 { "t" : 4, "i" : 3 }
                  { "zip" : 57500 } -->> { "zip" : "58140" } on : shard0001 { "t" : 4, "i" : 0 }
                  { "zip" : 58140 } -->> { "zip" : "59000" } on : shard0000 { "t" : 4, "i" : 1 }
                  { "zip" : 59000 } -->> { "zip" : { "$maxKey" : 1 } } on : shard0000 { "t" : 3, "i" : 3 }
          {  "_id" : "test",  "partitioned" : false,  "primary" : "shard0000" }
