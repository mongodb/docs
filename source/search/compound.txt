:template: guide

.. _guide-search-compound:

===================================
Querying with the Compound Operator
===================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Overview
--------

.. short-description::

   Retrieve documents in MongoDB with a query on multiple fields.

In this guide, you will learn how to use multiple search operators in
a compound query by using the aggregation pipeline.

.. time:: 5

What You'll Need
----------------

- A MongoDB account. See :ref:`guides-create-atlas-account`.
- An Atlas cluster. See :ref:`guides-create-a-cluster`.
- Sample datasets :ref:`loaded into your cluster <guides-load-sample-data>`.
- A search index with default settings and dynamic indexing. 
  To create a default dynamic index, see :ref:`guides-search-dynamic`. 

Procedure
---------

.. procedure::
   :style: normal

   .. include:: /includes/navigate_to_collections.rst

   .. step:: Click the ``sample_supplies`` database,
      then click the ``sales`` collection.

   .. step:: Run a compound query on your index in the :guilabel:`Aggregations` tab.

      .. procedure::
         :style: connected

         .. step:: Click 
            the :guilabel:`Aggregation` tab.

         .. step:: Click :guilabel:`+ Add Stage` to begin creating
            your aggregation pipeline.
            
         .. step:: In the stage window, click on the dropdown menu
            labeled :guilabel:`Select` and select the 
            :guilabel:`$search` stage.

         .. step:: Replace the placeholder code with the following
            query.

            .. code-block:: json

               {
                  "compound": {
                     "filter": [{
                        "text": {
                        "query": "Online",
                           "path": "purchaseMethod"
                        }
                     }],
                     "should": [{
                        "text": {
                        "query": "notepad",
                           "path": "items"
                        }
                     }]
                  }
               }

            This query uses the ``compound`` operator with:

            - The ``filter`` clause to return only documents
              with a ``purchaseMethod`` of ``Online``.
            - The ``should`` clause to return documents 
              with an ``items`` field that contains ``notepad`` to have
              a higher score than those without.

         .. step:: Review the results of the compound query.
            
            In the right-hand pane, your results should include a list 
            of documents that resemble the following sample document:

            .. code-block:: json
               :copyable: false

               items: Array
                  0: Object
                  1: Object
                  2: Object 
                     name: "notepad"
                  ...
               storeLocation: "Denver"
               customer: Object
               couponUsed: false
               purchaseMethod: "Online"
               _id: ObjectID('5bd761dcae323e45a93cd06e')
               saleDate: 2013-11-22T18:49:45.212+00:00

            .. note:: 
            
               The fields don't always appear in the same order 
               for every returned document.

            You can expand ``Array`` and ``Object`` fields to view their 
            contents by clicking on them.

Summary
-------

If you successfully completed the procedure in this guide, you have
created an Atlas Search aggregation stage with a compound operator,
and have seen how different clauses in the operator interact to 
focus your search results across multiple axes. In the next guide, you
will learn how to group search results using facets.

.. guide-next::