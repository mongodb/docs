# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: 2014-04-08 19:09+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# c480f1f6023a4a6da2cd12a236409111
#: ../source/reference/command/compact.txt:5
msgid "compact"
msgstr ""

# 3b8e797425e04e449b86b67b8b60d044
#: ../source/reference/command/compact.txt
msgid "On this page"
msgstr ""

# ff57480e15dd4248a5114541a3423a57
#: ../source/reference/command/compact.txt:16
msgid "Definition"
msgstr ""

# a3325ee213a0473387b2a27707dd2fa0
#: ../source/reference/command/compact.txt:20
msgid ""
"Rewrites and defragments all data and indexes in a collection. On "
":ref:`WiredTiger <storage-wiredtiger>` databases, this command will "
"release unneeded disk space to the operating system."
msgstr ""

# 6e5b3c230dc7461396858747f51592fa
#: ../source/reference/command/compact.txt:24
msgid ":dbcommand:`compact` has the following form:"
msgstr ""

# 3ec00be79d98403482f2ca8d4b78e8c5
#: ../source/reference/command/compact.txt:30
msgid ":dbcommand:`compact` takes the following fields:"
msgstr ""

# 7c44e293d54941e49c723aa402409f8d
#: ../source/reference/command/compact.txt:34
msgid ""
"Always have an up-to-date backup before performing server maintenance "
"such as the :dbcommand:`compact` operation."
msgstr ""

# 7126a4f29ded4c6aacf44a5bda1524b6
#: ../source/reference/command/compact.txt:40
msgid "paddingFactor"
msgstr ""

# 91e15039833c42238527aee293fe3791
#: ../source/reference/command/compact.txt:44
msgid ""
"Applicable for the MMAPv1 storage engine only; specifying "
"``paddingFactor`` has no effect when used with the WiredTiger storage "
"engine."
msgstr ""

# 90f62c7ec30e4852a5471cfedf69d207
#: ../source/reference/command/compact.txt:48
msgid "The ``paddingFactor`` field takes the following range of values:"
msgstr ""

# c8d8ebc90f6a4874b06e264ed8aeae4a
#: ../source/reference/command/compact.txt:50
msgid "Default: ``1.0``"
msgstr ""

# 0e96a32bbe164453ac852f17d92ab485
#: ../source/reference/command/compact.txt:52
msgid "Minimum: ``1.0`` (no padding)"
msgstr ""

# 73a26d2ba2b7441daecf1ce2644d67ed
#: ../source/reference/command/compact.txt:54
msgid "Maximum: ``4.0``"
msgstr ""

# b09f24e74f5940ae86bb52b9c6907e04
#: ../source/reference/command/compact.txt:56
msgid ""
"If your updates increase the size of the documents, padding will increase"
" the amount of space allocated to each document and avoid expensive "
"document relocation operations within the data files."
msgstr ""

# 7b3da26940f6414cb33a0f6b4af2b1e6
#: ../source/reference/command/compact.txt:60
msgid ""
"You can calculate the padding size by subtracting the document size from "
"the record size or, in terms of the ``paddingFactor``, by subtracting "
"``1`` from the ``paddingFactor``:"
msgstr ""

# 2e6a4e9b03744016aea14b06060c067a
#: ../source/reference/command/compact.txt:68
msgid ""
"For example, a ``paddingFactor`` of ``1.0`` specifies a padding size of "
"``0`` whereas a ``paddingFactor`` of ``1.2`` specifies a padding size of "
"``0.2`` or 20 percent (20%) of the document size."
msgstr ""

# 67d6f21b2c484dd6b4dfbda098ec5e8d
#: ../source/reference/command/compact.txt:72
msgid ""
"With the following command, you can use the ``paddingFactor`` option of "
"the :dbcommand:`compact` command to set the record size to ``1.1`` of the"
" document size, or a padding factor of 10 percent (10%):"
msgstr ""

# cb6c3c86b89440e29d642fb6ad0ffdc3
#: ../source/reference/command/compact.txt:80
msgid ""
":dbcommand:`compact` modifies existing documents, but does not set the "
"padding factor for future documents."
msgstr ""

# 139afe12d11447c4a6619d0b8b716a22
#: ../source/reference/command/compact.txt:86
msgid "paddingBytes"
msgstr ""

# 604d777469e6466ca896c41395fa9afe
#: ../source/reference/command/compact.txt:90
msgid ""
"Applicable for the MMAPv1 storage engine only; specifying "
"``paddingBytes`` has no effect when used with the WiredTiger storage "
"engine."
msgstr ""

# 5b4b813e534c4d099b53b4de58c4f58b
#: ../source/reference/command/compact.txt:94
msgid ""
"Specifying ``paddingBytes`` can be useful if your documents start small "
"but then increase in size significantly."
msgstr ""

# 3edcfa58791e4e3582c9cf8b2a8fd91c
#: ../source/reference/command/compact.txt:97
msgid ""
"For example, if your documents are initially 40 bytes long and you grow "
"them by 1 kB, using ``paddingBytes: 1024`` might be reasonable since "
"using ``paddingFactor: 4.0`` would specify a record size of 160 bytes "
"(``4.0`` times the initial document size), which would only provide a "
"padding of 120 bytes (i.e. record size of 160 bytes minus the document "
"size)."
msgstr ""

# 041505833e5e4192a974de1ac2c80165
#: ../source/reference/command/compact.txt:104
msgid ""
"The following command uses the ``paddingBytes`` option to set the padding"
" size to 100 bytes on the collection named by ``<collection>``:"
msgstr ""

# c6e0e16bd1564a8cb4319b04e407ea7d
#: ../source/reference/command/compact.txt:112
msgid "Behavior"
msgstr ""

# a877785e746640fe8c5879d951390483
#: ../source/reference/command/compact.txt:115
msgid "Blocking"
msgstr ""

# 56c04f99454642c88204abb4cfe75280
#: ../source/reference/command/compact.txt:117
msgid ""
":dbcommand:`compact` only blocks operations for the database it is "
"currently operating on. Only use :dbcommand:`compact` during scheduled "
"maintenance periods."
msgstr ""

# 0f91706a13be4693a2a82a974762c295
#: ../source/reference/command/compact.txt:121
msgid ""
"You may view the intermediate progress either by viewing the "
":program:`mongod` log file or by running the :method:`db.currentOp()` in "
"another shell instance."
msgstr ""

# fb17bcb524b4434e944df805d83a899b
#: ../source/reference/command/compact.txt:126
msgid "Operation Termination"
msgstr ""

# bf68ee2333354c5cb3ed5eb5155665b6
#: ../source/reference/command/compact.txt:128
msgid ""
"If you terminate the operation with the :method:`db.killOp() "
"<db.killOp()>` method or restart the server before the "
":dbcommand:`compact` operation has finished, be aware of the following:"
msgstr ""

# 77eedb8bf64e48a1a7920ab3cbc04611
#: ../source/reference/command/compact.txt:132
msgid ""
"If you have journaling enabled, the data remains valid and usable, "
"regardless of the state of the :dbcommand:`compact` operation. You may "
"have to manually rebuild the indexes."
msgstr ""

# 0f52bd6569094b388754a0e2a067a450
#: ../source/reference/command/compact.txt:136
msgid ""
"If you do not have journaling enabled and the :program:`mongod` or "
":dbcommand:`compact` terminates during the operation, it is impossible to"
" guarantee that the data is in a valid state."
msgstr ""

# 17d0d39691f7406dadbcb74ec363180a
#: ../source/reference/command/compact.txt:140
msgid ""
"In either case, much of the existing free space in the collection may "
"become un-reusable. In this scenario, you should rerun the compaction to "
"completion to restore the use of this free space."
msgstr ""

# 271145edeb204244a617abdaff93ee72
#: ../source/reference/command/compact.txt:145
msgid "Disk Space"
msgstr ""

# 85ef89aa485346bea790320d995d17af
#: ../source/reference/command/compact.txt:147
msgid ""
":dbcommand:`compact` has different impacts on available disk space "
"depending on which storage engine is in use."
msgstr ""

# ea80c9908e084ba981341424e58c4d2a
#: ../source/reference/command/compact.txt:150
msgid ""
"To see how the storage space changes for the collection, run the "
":dbcommand:`collStats` command before and after compaction."
msgstr ""

# 5603cb57a9a54edeb337f18d16aa8aef
#: ../source/reference/command/compact.txt:154
msgid "WiredTiger"
msgstr ""

# f2b430da1d4d4d459462d25960810c18
#: ../source/reference/command/compact.txt:156
msgid ""
"On :ref:`WiredTiger <storage-wiredtiger>`, :dbcommand:`compact` will "
"rewrite the collection and indexes to minimize disk space by releasing "
"unused disk space to the system. This is useful if you have removed a "
"large amount of data from the collection, and do not plan to replace it."
msgstr ""

# c078d4943c1c4e48b549158bbef55abb
#: ../source/reference/command/compact.txt:162
msgid "MMAPv1"
msgstr ""

# 8408fe1072114df09bf45a935d3e5c0b
#: ../source/reference/command/compact.txt:164
msgid ""
"On :ref:`MMAPv1 <storage-mmapv1>`, :dbcommand:`compact` defragments the "
"collection's data files and recreates its indexes. Unused disk space is "
"*not* released to the system, but instead retained for future data. If "
"you wish to reclaim disk space from a MMAPv1 database, you should perform"
" an :term:`initial sync`."
msgstr ""

# e8c6f898402b404ebabfebe06283997d
#: ../source/reference/command/compact.txt:170
msgid ""
":dbcommand:`compact` requires up to 2 gigabytes of additional disk space "
"to run on MMAPv1 databases."
msgstr ""

# 699fb6ca91464a1c959305188236b226
#: ../source/reference/command/compact.txt:174
msgid "Size and Number of Data Files"
msgstr ""

# 16010af0888540b0a0716878c3c07168
#: ../source/reference/command/compact.txt:176
msgid ""
":dbcommand:`compact` may increase the total size and number of your data "
"files, especially when run for the first time. However, this will not "
"increase the total collection storage space since storage size is the "
"amount of data allocated within the database files, and not the "
"size/number of the files on the file system."
msgstr ""

# a36825998c13403a83597cee6bcb4c6b
#: ../source/reference/command/compact.txt:183
msgid "Replica Sets"
msgstr ""

# 279ae0f6ec914cfd8e731cc857351c85
#: ../source/reference/command/compact.txt:185
msgid ""
":dbcommand:`compact` commands do not replicate to secondaries in a "
":term:`replica set`."
msgstr ""

# f8d1274ef25442fab72f8027908dd91b
#: ../source/reference/command/compact.txt:188
msgid "Compact each member separately."
msgstr ""

# 381c757938254ac39109eb515ee4ef78
#: ../source/reference/command/compact.txt:190
msgid ""
"Ideally run :dbcommand:`compact` on a secondary. See option "
"``force:true`` above for information regarding compacting the primary."
msgstr ""

# 54f2a72efa774baba90b1459f06c6821
#: ../source/includes/extracts/fact-command-puts-secondary-into-recovering-compact.rst:3
msgid ""
"On secondaries, the  command forces the secondary to enter "
":replstate:`RECOVERING` state. Read operations issued to an instance in "
"the :replstate:`RECOVERING` state will fail.  This prevents clients from "
"reading during the operation. When the operation completes, the secondary"
" returns to :replstate:`SECONDARY` state."
msgstr ""

# 1e450ced98b845d29f3c37fe1fac0f7d
#: ../source/includes/extracts/fact-command-puts-secondary-into-recovering-compact.rst:10
msgid ""
"See :doc:`/reference/replica-states/` for more information about replica "
"set member states."
msgstr ""

# 515e20453052440b85a9463e87ff3e8d
#: ../source/includes/extracts/fact-command-puts-secondary-into-recovering-compact.rst:13
msgid ""
"See :doc:`/tutorial/perform-maintence-on-replica-set-members` for an "
"example replica set maintenance procedure to maximize availability during"
" maintenance operations."
msgstr ""

# 4c9247779afe4405a22f925ad10106b9
#: ../source/reference/command/compact.txt:196
msgid "Sharded Clusters"
msgstr ""

# 1ede1bcf849c422d88739d9d1a21777c
#: ../source/reference/command/compact.txt:198
msgid ""
":dbcommand:`compact` only applies to :program:`mongod` instances. In a "
"sharded environment, run :dbcommand:`compact` on each shard separately as"
" a maintenance operation."
msgstr ""

# 8c88dc30e40d4cf2bad387891b2f107b
#: ../source/reference/command/compact.txt:202
msgid ""
"You cannot issue :dbcommand:`compact` against a :program:`mongos` "
"instance."
msgstr ""

# ce0c1a809fdb4e9287adb0ea52b1e617
#: ../source/reference/command/compact.txt:205
msgid "Capped Collections"
msgstr ""

# a0d82744bc82403facba1e7130629299
#: ../source/reference/command/compact.txt:207
msgid ""
"It is not possible or necessary to compact :term:`capped collections "
"<capped collection>` because they lack padding and their documents cannot"
" grow. As a result, they cannot become fragmented."
msgstr ""

# 4a3d72e2587c47eeb7c1c93c362f2bb3
#: ../source/reference/command/compact.txt:212
msgid "Index Building"
msgstr ""

# df28cc20c72c4238b0f1ec6c436663e5
#: ../source/reference/command/compact.txt:216
msgid ""
":program:`mongod` rebuilds all indexes in parallel following the "
":dbcommand:`compact` operation."
msgstr ""

#~ msgid "The :dbcommand:`compact` has the behaviors described here."
#~ msgstr ""

# d5bc5cb170a94550909d551142936c08
#~ msgid ""
#~ "Rewrites and defragments all data in "
#~ "a collection, as well as all of"
#~ " the indexes on that collection. "
#~ ":dbcommand:`compact` has the following form:"
#~ msgstr ""

# 8f49c8002ecf413cadcc5d784fd5cba7
#~ msgid ":dbcommand:`compact` has the following fields:"
#~ msgstr ""

# 51bcbf1739724f73a484dccfd0042e65
#~ msgid ""
#~ ":dbcommand:`compact` is similar to "
#~ ":dbcommand:`repairDatabase`; however, "
#~ ":dbcommand:`repairDatabase` operates on an "
#~ "entire database."
#~ msgstr ""

# a3ff349ead944be38ebd3546ddd25dbb
#~ msgid ""
#~ ":dbcommand:`compact` compacts existing documents "
#~ "but does not reset ``paddingFactor`` "
#~ "statistics for the collection. After the"
#~ " :dbcommand:`compact` MongoDB will use the"
#~ " existing ``paddingFactor`` when allocating "
#~ "new records for documents in this "
#~ "collection."
#~ msgstr ""

# dca2da6e20f64f1ab409ab348452a1b5
#~ msgid ""
#~ "Specifying ``paddingBytes`` can be useful "
#~ "if your documents start small but "
#~ "then increase in size significantly. For"
#~ " example, if your documents are "
#~ "initially 40 bytes long and you "
#~ "grow them by 1KB, using ``paddingBytes:"
#~ " 1024`` might be reasonable since "
#~ "using ``paddingFactor: 4.0`` would specify "
#~ "a record size of 160 bytes "
#~ "(``4.0`` times the initial document "
#~ "size), which would only provide a "
#~ "padding of 120 bytes (i.e. record "
#~ "size of 160 bytes minus the "
#~ "document size)."
#~ msgstr ""

# f70ff0a4f20e48d6851c02d47b9b87df
#~ msgid ""
#~ "With the following command, you can "
#~ "use the ``paddingBytes`` option of the"
#~ " :dbcommand:`compact` command to set the"
#~ " padding size to ``100`` bytes on "
#~ "the collection named by ``<collection>``:"
#~ msgstr ""

# b94be86186d843a4910f66ce6894b69b
#~ msgid "Behaviors"
#~ msgstr ""

# 6b4b067569204dd8958831eb0201b2c9
#~ msgid ""
#~ "In MongoDB 2.2, :dbcommand:`compact` blocks"
#~ " activities only for its database. "
#~ "Prior to 2.2, the command blocked "
#~ "all activities."
#~ msgstr ""

# 894e3f68c786485fbd3b8dc64cc12dab
#~ msgid ""
#~ "If you terminate the operation with "
#~ "the :method:`db.killOp() <db.killOp()>` method "
#~ "or restart the server before the "
#~ ":dbcommand:`compact` operation has finished:"
#~ msgstr ""

# e18310700672414bad24a0f60d8f3c76
#~ msgid ""
#~ ":dbcommand:`compact` generally uses less disk"
#~ " space than :dbcommand:`repairDatabase` and "
#~ "is faster. However, the :dbcommand:`compact`"
#~ " command is still slow and blocks "
#~ "other database use. Only use "
#~ ":dbcommand:`compact` during scheduled maintenance"
#~ " periods."
#~ msgstr ""

# 480ab7eb625641008b4d54da63019a17
#~ msgid ""
#~ ":dbcommand:`compact` requires up to 2 "
#~ "gigabytes of additional disk space while"
#~ " running. Unlike :dbcommand:`repairDatabase`, "
#~ ":dbcommand:`compact` does *not* free space "
#~ "on the file system."
#~ msgstr ""

# 7e1604e48c1448edb11fe5ef881606b0
#~ msgid ""
#~ ":dbcommand:`compact` commands do not replicate"
#~ " to secondaries in a :term:`replica "
#~ "set`:"
#~ msgstr ""

# c6d8855815804a4a9c4f97dcf802138f
#~ msgid ""
#~ "On secondaries, the |cmd-name| command"
#~ " forces the secondary to enter "
#~ ":replstate:`RECOVERING` state. Read operations "
#~ "issued to an instance in the "
#~ ":replstate:`RECOVERING` state will fail.  This"
#~ " prevents clients from reading during "
#~ "the operation. When the operation "
#~ "completes, the secondary returns "
#~ "to:replstate:`SECONDARY` state."
#~ msgstr ""

# d1e94d0f1dcc4cef856c51edea2ca4a1
#~ msgid ""
#~ ":dbcommand:`compact` is a command issued "
#~ "to a :program:`mongod`. In a sharded "
#~ "environment, run :dbcommand:`compact` on each"
#~ " shard separately as a maintenance "
#~ "operation."
#~ msgstr ""

# 7ffb2edd6cf9454ea99af1b64b1a2820
#~ msgid ""
#~ "It is not possible to compact "
#~ ":term:`capped collections <capped collection>` "
#~ "because they don't have padding, and "
#~ "documents cannot grow in these "
#~ "collections. However, the documents of a"
#~ " :term:`capped collection` are not subject"
#~ " to fragmentation."
#~ msgstr ""

