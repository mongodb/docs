.. _create-cluster-storage:

=============================
Customize {+Cluster+} Storage
=============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Each {+cluster+} tier comes with a default set of resources.
``M10+`` {+clusters+} provide the ability to customize
your storage capacity.

|service| provides the following storage configuration options,
depending on the selected cloud provider and cluster tier.

.. _storage-class-ui:

{+Cluster+} Class
-----------------

``M40+`` {+clusters+} offer multiple options, including:

- :guilabel:`Low CPU`
- :guilabel:`General`
- :guilabel:`Local NVM SSD`

All production environments can use the :guilabel:`General` option.

Select the :guilabel:`Class` box with your preferred speed.
Changes to cluster class affect :ref:`cost <instance-size-costs>`.

.. _storage-class-low-cpu-ui:

Low CPU Class
~~~~~~~~~~~~~

The :guilabel:`Low CPU` option offers a lower-cost alternative for 
applications that require more memory and fewer CPUs. This option 
includes half the vCPUs of an instance with the :guilabel:`General` 
option. For example, a :guilabel:`General` ``M40`` instance includes 4 
vCPUs, while a :guilabel:`Low CPU` ``M40`` instance includes 2 vCPUs. 
Depending on the cluster tier, this option may also include fewer max 
connections. To learn more, see :ref:`connection-limits`.

NVMe Storage on AWS
~~~~~~~~~~~~~~~~~~~

AWS-backed {+clusters+} have the added :guilabel:`Local NVMe SSD` 
storage option. Locally attached ephemeral :ref:`NVMe SSDs 
<nvme-storage>` offer the highest level of speed and performance.

.. _storage-capacity-ui:

Storage Capacity
----------------

To change the server data volume size, do one of the following tasks:

- Specify the exact disk size in the text box.

- Move the slide bar until the text box displays your preferred disk
  size.

For |azure|-specific instructions, see :ref:`<change-storage-capacity-azure>`.

Changes to storage capacity affect :ref:`cost <instance-size-costs>`.

.. note::

   MongoDB uses a small portion of your specified storage capacity for
   buffer files, journal files, and log files to ensure proper 
   {+cluster+} operation.

Oplog Scaling Behavior
~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/autoscale-oplog.rst

.. _change-storage-capacity-aws:

Change Storage Capacity or |iops| on |aws|
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

|service| handles changes differently based on whether you want to 
increase or decrease storage capacity or storage throughput
(|iops|) on |aws|.

Increase Capacity or Throughput
```````````````````````````````

|aws| allows you to increase storage capacity or |iops| every 
six hours as long as previous changes have completed. |service| supports
more changes within that six-hour window.

How |service| handles additional changes within a six-hour window 
depends on the size of your hosts' data volumes and the time when you 
make the change in the six-hour window.

- For the first change, |service| modifies data volumes in place without
  downtime.
- For later changes:

  .. list-table::
     :header-rows: 1
  
     * - Data Volume Size
       - Time Since Last Storage Change
       - Action |service| Takes

     * - Less than 1TB
       - Less than 5h30m
       - |service| provisions new volumes and syncs the data from
         the old volumes. If |service| provisions new volumes, 
         you can access your {+cluster+}. You can't access *nodes* 
         that |aws| modifies until |aws| attaches the new volume.

     * - Less than 1TB
       - More than 5h30m
       - |service| waits until the six-hour window closes, then
         modifies the hosts' data volumes in place without downtime.

     * - More than 1TB
       - Any
       - |service| waits until the six-hour window closes, then
         modifies the hosts' data volumes in place without downtime.
         This takes less time than provisioning new volumes and syncing
         data from the old to the new volumes.

Before you apply your storage capacity or |iops| increases, the
:guilabel:`Review Changes` page describes how |service| approaches the
increase.

The :guilabel:`Database Deployments` page displays a banner if |service|
waits until a six-hour window closes before modifying your {+cluster+}'s
storage capacity or |iops|.

These behaviors apply when |service| changes capacity during
:ref:`auto-scaling <cluster-autoscaling>`.

To learn more about |aws|\'s limitations, see the
:aws:`AWS documentation </AWSEC2/latest/UserGuide/modify-volume-requirements.html#elastic-volumes-limitations>`.

Decrease Capacity or Throughput
```````````````````````````````

- |aws| doesn't allow you to reduce storage *capacity* in place.

  |service| *can* reduce storage capacity in place. |service|
  provisions new volumes then syncs data from the old to the new
  volumes. This works around the |aws| limitation.

- |aws| *does* allow you to reduce |iops| without migrating data.

.. _change-storage-capacity-azure:

Change Storage Capacity on |azure|
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

For clusters deployed on |azure|, you can change storage
capacity in preset amounts only. To change server data volume size:

- Specify your preferred disk size in the text box. 
- Move the slide bar until the text box displays your preferred disk
  size.

.. note:: 
  
   |service| rounds the disk size to the nearest preset amount.

When you change a cluster's storage capacity, |service| modifies the 
size of the servers' data volumes in a rolling manner 
with zero downtime. |service| increases the storage capacity in place without copying data
or performing an :manual:`initial sync
</core/replica-set-sync/#initial-sync>`.

However, |azure| doesn't allow in-place storage capacity downgrades.
If you downgrade the storage capacity of a {+cluster+}, |service| 
replaces each node and performs an initial sync for each node in the 
{+cluster+}.

.. note::

   An initial sync copies data across the network and rebuilds all
   indexes.

During this time, you can still access your {+cluster+}, but each node 
that |azure| modifies remains unavailable until the initial sync for 
that node completes.

.. important::

   For large {+clusters+}, initial syncs for each node might take 
   several hours to complete.

Before you apply your storage capacity changes, the 
:guilabel:`Review Changes` page notifies you that |service| triggers a 
rolling restart of your {+cluster+} when you make this change.

.. _change-storage-capacity-gcp:

Change Storage Capacity on |gcp|
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

When you change a cluster's storage capacity, |service| modifies the
size of the servers' data volumes in a rolling manner with zero
downtime.

|service| increases the storage capacity in place without copying data
or performing an :manual:`initial sync
</core/replica-set-sync/#initial-sync>`.
However, |gcp| doesn't allow in-place storage capacity downgrades.

If you downgrade the storage capacity of a {+cluster+}, |service| 
provisions new volumes, and then syncs data from the old to the new 
volumes.

Before you apply your storage capacity changes, the
:guilabel:`Review Changes` page notifies you that |service| triggers a 
rolling restart of your {+cluster+} when you make this change.

.. _change-storage-capacity-multi:

Change Storage Capacity for Multi-Cloud Provider {+Clusters+}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

|service| selects the lowest common denominator across the three
cloud providers. This ensures consistency across the multi-cloud 
deployment.

The following limitations might apply: 

- You can't adjust the |iops| for your multi-cloud cluster.

- If your multi-cloud cluster includes |azure|, you can change storage 
  capacity in preset amounts only. See :ref:`change-storage-capacity-azure`.

.. _storage-iops-ui:

IOPS (AWS Only)
---------------

AWS-backed ``M30+`` {+clusters+} offer the option to provision |iops|.

Provisioned IOPS vs Standard IOPS in AWS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Provisioned |iops| let you customize the maximum |iops| rate for your
{+cluster+}. They also:

- Deliver their configured |iops| rate more consistently when compared 
  to standard |iops|.
- Lower your {+cluster+}'s p90 latency (measurement of the 
  server's response time). 90 percent of server requests have responses 
  faster than the p90 latency value, so a lower p90 latency value means 
  a generally faster response time.

To learn more about the merits of using provisioned vs standard |iops|,
see :aws:`Amazon EBS-optimized instances
</AWSEC2/latest/UserGuide/ebs-optimized.html>`. See the following 
summary:

- General Purpose SSD volumes are designed to deliver their baseline
  performance 99% of the time.

- Provisioned IOPS SSD volumes are designed to deliver their provisioned
  performance 99.9% of the time.

.. note:: 

   Changes to |iops| provisioning affects characteristics, performance,
   and :ref:`cost <instance-storage-speed>`. When you select
   :guilabel:`Provision IOPS`, the storage changes from
   **General Purpose SSD** volumes to **Provisioned IOPS SSD** volumes.

Configure the IOPS Rate
~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/cluster-settings/provision-iops-note.rst

.. _configuration-storage-considerations:

Minimum Disk Capacity to RAM Ratios
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/cluster-settings/minimum-iops.rst

|service| has a 4 TB disk capacity limit on a single replica set,
regardless of {+cluster+} tier. To expand the total {+cluster+} storage 
beyond 4 TB, enable :ref:`sharding <cluster-option-sharding>`.

.. seealso::

   To learn more about the default resources and available
   configuration options for each cloud service provider, see:

   - :ref:`AWS Configuration Options <amazon-aws-configuration-options>`
   - :ref:`GCP Configuration Options <google-gcp-configuration-options>`
   - :ref:`Azure Configuration Options 
     <microsoft-azure-configuration-options>`.

Auto-Scale {+Cluster+} Tier and Storage Capacity
------------------------------------------------

.. include:: /includes/fact-auto-scaling-availability.rst

For new clusters, |service| automatically enables {+cluster+} tier
auto-scaling and storage auto-scaling.

Use :guilabel:`Auto-scale` options to configure your {+cluster+} to
automatically scale your {+cluster tier+}, storage capacity, or both in
response to {+cluster+} usage.

.. include:: /includes/fact-auto-scaling-and-migration.rst

You can :ref:`opt out <opt-out-autoscaling>` of {+cluster+} tier and 
storage autoscaling. To learn more, see 
:ref:`howitworks-scale-cluster-tier` and 
:ref:`howitworks-scale-cluster-storage`.

.. seealso:: 

   - :ref:`cluster-autoscaling`
   - :ref:`connection-limits`
