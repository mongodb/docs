.. _rm-query-converter:

===============
Query Converter
===============

.. meta::
   :description: Convert SQL statements, views, and stored procedures to MongoDB syntax using Query Converter, considering mapping rules, and schema transformations.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Query Converter uses Generative AI to convert SQL statements, views, and stored
procedures to MongoDB syntax. {+rel-mig+} considers the mapping 
rules and schema transformations defined in your project when converting
your SQL code.

.. important::

   Query Converter is disabled by default. You must :ref:`opt-in and enable the
   feature <rm-enable-query-converter>` to use it.

.. toctree::
   :hidden:
   :titlesonly:

   AI & Data Usage </code-generation/query-converter/ai-and-data-usage-information>
   Set AI Provider and LLM </code-generation/query-converter/set-query-converter-llm>
   Enable Query Converter </code-generation/query-converter/enable-query-converter>
   Convert Queries </code-generation/query-converter/convert-queries>
   Convert Stored Procedures </code-generation/query-converter/convert-stored-procedures>
   Convert Oracle Packages </code-generation/query-converter/convert-oracle-packages>
   Convert Triggers </code-generation/query-converter/convert-triggers>
   Convert Views </code-generation/query-converter/convert-views>
   Bulk Conversion </code-generation/query-converter/bulk-conversion>
   Query Management </code-generation/query-converter/query-management>
   Refresh Database Objects </code-generation/query-converter/refresh-database-objects>
   Test Queries </code-generation/query-converter-test-queries>
   