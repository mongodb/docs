=====================
db.createCollection()
=====================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. method:: db.createCollection(name, [{capped: <boolean>, size: <value>, max <bytes>}] )

   :param string name: Specifies the name of a collection to create.

   :param document capped: Optional. If this :term:`document` is
                           present, this command creates a capped
                           collection. The capped argument is a
                           :term:`document` that contains the
                           following three fields:

   :param boolean capped: Enables a :term:`collection cap <capped
                          collection>`. False by default. If enabled,
                          you must specify a ``size`` parameter.

   :param bytes size: If ``capped`` is ``true``, ``size`` specifies a
                      maximum size in bytes for the capped collection.
                      When ``capped`` is false, you may use ``size`` to
                      preallocate space.

   :option autoIndexId: If ``capped`` is ``true`` you can specify
                        ``false`` to disable the automatic index
                        created on the ``_id`` field. Before 2.2, the
                        default value for ``autoIndexId`` was
                        ``false``. See :ref:`2.2-id-indexes-capped-collections`
                        for more information.

   :param int max: Optional. Specifies a maximum "cap," in number of
                   documents for capped collections. You must also
                   specify ``size`` when specifying ``max``.

   Explicitly creates a new collection. Because MongoDB creates
   collections implicitly when referenced, this command is primarily
   used for creating new capped collections. In some circumstances,
   you may use this command to pre-allocate space for an ordinary
   collection.

   Capped collections have maximum size or document counts that
   prevent them from growing beyond maximum thresholds. All capped
   collections must specify a maximum size, but may also specify a
   maximum document count. MongoDB will remove older documents
   if a collection reaches the maximum size limit before it reaches
   the maximum document count. Consider the following example:

   .. code-block:: javascript

      db.createCollection("log", { capped : true, size : 5242880, max : 5000 } )

   This command creates a collection named ``log`` with a maximum size of
   5 megabytes and a maximum of 5000 documents.

   The following command simply pre-allocates a 2 gigabyte, uncapped
   collection named ``people``:

   .. code-block:: javascript

      db.createCollection("people", { size: 2147483648 })

   This command provides a wrapper around the database command
   :dbcommand:`create`. See :doc:`/core/capped-collections` for more
   information about capped collections.
