.. facet::
   :name: programming_language
   :values: javascript/typescript, python, shell, go, java

.. _avs-types-vector-search:

=====================================
How to Index Fields for Vector Search 
=====================================

.. default-domain:: mongodb

.. meta::
   :description: Use the Atlas Vector Search type to index vector embeddings for vector search using the vectorSearch type.
   :keywords: atlas ui, node.js, code example, atlas api, atlas cli, java sync, go, python, mongodb shell, sample dataset

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

You can use the ``vectorSearch`` type to index fields for running 
:pipeline:`$vectorSearch` queries. You can define the index for the
vector embeddings that you want to query and the boolean, date, objectId, 
numeric, string, or UUID values that you want to use to pre-filter your
data. Filtering your data is useful to narrow the scope of your semantic
search and ensure that certain vector embeddings are not considered for 
comparison, such as in a multi-tenant environment.

You can use the {+atlas-ui+}, {+atlas-admin-api+}, 
{+atlas-cli+}, {+mongosh+}, or a supported :driver:`MongoDB Driver </>`
to :ref:`create <avs-create-index>` your {+avs+} index. 

.. note:: 

   You can't use the deprecated :ref:`knn-beta-ref` operator to query
   fields indexed using the ``vectorSearch`` type index definition. 

.. _avs-types-vector-search-considerations:

Considerations 
--------------

In a ``vectorSearch`` type index definition, you can index arrays with
only a single element. You can't index fields inside arrays of documents
or fields inside arrays of objects. You can index fields inside
documents using the dot notation. 

Before indexing your embeddings, we recommend converting your embeddings
to |bson| :manual:`BinData </reference/method/BinData/>` ``vector``
subtype ``float32`` or ``int8`` vectors for efficient storage and
ingestion of your vectors in your |service| {+cluster+}. To learn more,
see :ref:`how to convert your embeddings to BSON vectors
<avs-bindata-vector-subtype>`. 

.. _avs-index-supported-drivers:

Supported Clients 
-----------------

You can create and manage {+avs+} indexes through the {+atlas-ui+},
{+mongosh+}, {+atlas-cli+}, {+atlas-admin-api+}, and the following 
:driver:`MongoDB Drivers </>`:

.. include:: /includes/list-table-index-supported-drivers-avs.rst

Syntax 
------

The following syntax defines the ``vectorSearch`` index type:

.. code-block:: json
   :copyable: true 
   :linenos:

   {
     "fields":[ 
       {
         "type": "vector",
         "path": "<field-to-index>",
         "numDimensions": <number-of-dimensions>,
         "similarity": "euclidean | cosine | dotProduct"
       },
       {
         "type": "filter",
         "path": "<field-to-index>"
       },
       ...
     ]
   }

.. _avs-types-vector-search-options:

{+avs+} Index Fields
--------------------------------

The {+avs+} index definition takes the following fields:

.. list-table::
   :widths: 25 10 15 50
   :header-rows: 1

   * - Option
     - Type 
     - Necessity
     - Purpose

   * - ``fields``
     - array of documents 
     - Required 
     - Vector and filter fields to index, one per document. At least one
       document *must* contain the field definition for the vector
       field. You can optionally also index boolean, date, number, objectId,
       string, and UUID fields, one per document, for pre-filtering the data.

   * - ``fields.type``
     - string 
     - Required 
     - Field type to use to index fields for :pipeline:`$vectorSearch`.
       You can specify one of the following values:  
       
       - ``vector`` - for fields that contain vector embeddings.
       - ``filter`` - for fields that contain boolean, date, objectId, numeric, 
         string, or UUID values. 

   * - ``fields.path``
     - string 
     - Required 
     - Name of the field to index. For nested fields, use dot notation
       to specify path to embedded fields.
       
       You *cannot* index field names with two consecutive dots or field names
       ending with dots. For example, {+avs+} doesn't support indexing the
       following field names: ``foo..bar`` or ``foo_bar.``.

   * - ``fields.numDimensions``
     - int
     - Required
     - Number of vector dimensions that {+avs+} enforces at index-time and
       query-time. You must specify a value less than or equal to
       ``4096``. You can set this field only for ``vector`` type fields.

   * - ``fields.similarity``
     - string
     - Required
     - .. _fields-similarity:
      
       Vector similarity function to use to search for top K-nearest 
       neighbors. You can set this field only for ``vector`` type
       fields. Value can be one of the following: 

       - ``euclidean`` - measures the distance between ends of vectors. 
       - ``cosine`` - measures similarity based on the angle between 
         vectors. 
       - ``dotProduct`` - measures similarity like ``cosine``, but takes 
         into account the magnitude of the vector.  
         
       To learn more, see :ref:`avs-similarity-functions`.

.. _avs-types-vector:

About the ``vector`` Type 
~~~~~~~~~~~~~~~~~~~~~~~~~

Your index definition's ``vector`` field must contain an array of numbers of 
*one* of the following types: 

- |bson| ``double`` 
- |bson| :manual:`BinData </reference/method/BinData/>` ``vector``
  subtype ``float32``  
- |bson| :manual:`BinData </reference/method/BinData/>` ``vector``
  subtype ``int8`` 

.. note:: 

   To learn more about generating |bson| :manual:`BinData
   </reference/method/BinData/>` ``vector`` subtype ``float32``
   or ``vector`` subtype ``int8`` vectors for your data, see
   :ref:`avs-bindata-vector-subtype`.

You must index the vector field as the ``vector`` type inside the
``fields`` array.

The following syntax defines the ``vector`` field type: 

.. code-block:: json
   :copyable: true 
   :linenos:
   :emphasize-lines: 4-7

   {
     "fields":[ 
       {
         "type": "vector",
         "path": <field-to-index>,
         "numDimensions": <number-of-dimensions>,
         "similarity": "euclidean | cosine | dotProduct"
       },
       ...
     ]
   }

.. _avs-similarity-functions:

About the Similarity Functions 
``````````````````````````````

{+avs+} supports the following similarity functions: 

- ``euclidean`` - measures the distance between ends of vectors. This
  value allows you to measure similarity based on varying dimensions. To
  learn more, see :wikipedia:`Euclidean <Euclidean_distance>`.  
- ``cosine`` - measures similarity based on the angle between  vectors.
  This value allows you to measure similarity that isn't scaled by
  magnitude. You can't use zero magnitude vectors with ``cosine``. To
  measure cosine similarity, we recommend that you normalize your
  vectors and use ``dotProduct`` instead.  
- ``dotProduct`` - measures similarity like ``cosine``, but takes into
  account the magnitude of the vector. If you normalize the magnitude,
  ``cosine`` and ``dotProduct`` are almost identical in measuring
  similarity.   
         
  To use ``dotProduct``, you must normalize the vector to unit length at
  index-time and query-time.  

For best performance, check your embedding model to determine which
similarity function aligns with your embedding model's training
process. If you don't have any guidance, start with ``dotProduct``.
Setting ``fields.similarity`` to the ``dotProduct`` value allows you
to efficiently measure similarity based on both angle and magnitude.
``dotProduct`` consumes less computational resources than ``cosine``
and is efficient when vectors are of unit length. However, if your
vectors aren't normalized, evaluate the similarity scores in the
results of a sample query for ``euclidean`` distance and ``cosine``
similarity to determine which corresponds to reasonable results. 

.. _avs-types-filter:

About the ``filter`` Type 
~~~~~~~~~~~~~~~~~~~~~~~~~

You can optionally index boolean, date, number, objectId, string, and
UUID fields to pre-filter your data. Filtering your data is useful to
narrow the scope of your semantic search and ensure that not all vectors
are considered for comparison. It reduces the number of documents
against which to run similarity comparisons, which can decrease query
latency and increase the accuracy of search results. 

You must index the fields that you want to filter by using the
``filter`` type inside the ``fields`` array. 

The following syntax defines the ``filter`` field type: 

.. code-block:: json
   :copyable: true 
   :linenos:
   :emphasize-lines: 8-9

   {
     "fields":[ 
       {
         "type": "vector",
         ...
       },
       {
         "type": "filter",
         "path": "<field-to-index>"
       },
       ...
     ]
   }

.. include:: /includes/fact-avs-pre-filtering-score-impact.rst

.. tabs-selector:: drivers
   :default-tabid: python

.. _avs-create-index:

Create an {+avs+} Index
------------------------------------

.. include:: /includes/facts/fts-index-description.rst

You can create an {+avs+} index for all collections that contain vector
embeddings less than or equal to 4096 dimensions in length for any kind
of data along with other data on your |service| {+cluster+} through the
{+atlas-ui+}, {+atlas-admin-api+}, {+atlas-cli+}, {+mongosh+},
or a supported :driver:`MongoDB Driver </>`.

.. _avs-create-index-prerequisites:

Prerequisites
~~~~~~~~~~~~~

To create an {+avs+} index, you must have an |service| {+cluster+} with
the following prerequisites: 

- MongoDB version ``6.0.11``, ``7.0.2``, or higher
- A collection for which to create the {+avs+} index 

.. |command-type| replace:: create
.. |compatibility-table| replace:: :ref:`avs-index-supported-drivers`

.. include:: /includes/fact-search-commands-cluster-tier.rst

.. _avs-create-index-access:

Required Access
~~~~~~~~~~~~~~~

You need the :authrole:`Project Data Access Admin` or higher role to create
and manage {+avs+} indexes.

.. _avs-types-vector-search-egs:
.. _avs-create-index-supported-clients:
.. _avs-create-index-procedure:

Index Limitations
~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-fts-shared-tier-limitations.rst

Procedure 
~~~~~~~~~

----------

.. |arrow| unicode:: U+27A4

|arrow| Use the **Select your language** drop-down menu to select the
client you want to use to create your index.

----------

.. note::

   The procedure includes index definition examples for the 
   ``embedded_movies`` collection in the ``sample_mflix`` database. If
   you load the :ref:`sample data <mflix-embedded_movies>` on your
   {+cluster+} and create the example |fts| indexes for this collection,
   you can run the sample :pipeline:`$vectorSearch` queries against this
   collection. To learn more about the sample queries that you can run,
   see :ref:`$vectorSearch Examples <vectorSearch-agg-pipeline-egs>`. 

.. tabs-drivers:: 

   .. tab::  
      :tabid: atlas-ui 

      .. include:: /includes/steps-avs-create-index-atlas-ui.txt

   .. tab::  
      :tabid: atlas-api 

      To create an {+avs+} index for a collection using the
      {+atlas-admin-api+}, send a ``POST`` request to the |fts|
      ``indexes`` endpoint with the required parameters. 
      
      .. literalinclude:: /includes/avs-examples/index-management/create-index/create-index-api.sh 
         :language: shell
         :copyable:
         :linenos:
      
      To learn more about the syntax and parameters for the endpoint, see
      :oas-atlas-op:`Create One Atlas Search Index </createAtlasSearchIndex>`.  
      
      .. example:: 

         The following index definition indexes the ``plot_embedding``
         field as the ``vector`` type and the ``genres`` and ``year``
         fields as the ``filter`` type in an {+avs+} index. The
         ``plot_embedding`` field contains embeddings created using
         OpenAI's ``text-embedding-ada-002`` embeddings model. The index 
         definition specifies ``1536`` vector dimensions and measures
         similarity using ``euclidean`` distance. 

         .. tabs:: 

            .. tab:: Basic Example
               :tabid: basic

               The following index definition indexes only the vector
               embeddings field for performing vector search.
                  
               .. literalinclude:: /includes/avs-examples/index-management/create-index/basic-example-api.sh 
                  :language: shell
                  :copyable:
                  :linenos:

            .. tab:: Filter Example 
               :tabid: advanced

               This index definition indexes the following fields: 
         
               - A string field (``genres``) and a numeric field (``year``)
                 for pre-filtering the data. 
               - The vector embeddings field (``plot_embedding``) for
                 performing vector search against pre-filtered data.

               .. literalinclude:: /includes/avs-examples/index-management/create-index/filter-example-api.sh 
                  :language: shell
                  :copyable:
                  :linenos:

   .. tab::  
      :tabid: atlas-cli 

      To create an {+avs+} index for a collection using the
      {+atlas-cli+} v1.14.3 or later, perform the following steps: 

      .. include:: /includes/steps-avs-create-index-acli.rst 

   .. tab::
      :tabid: shell

      To create an {+avs+} index for a collection using {+mongosh+}
      v2.1.2 or later, perform the following steps:

      .. include:: /includes/steps-avs-create-index-mongosh.rst

   .. tab::
      :tabid: go

      To create an {+avs+} index for a collection using the
      :driver:`MongoDB Go driver </node/go/current/fundamentals/indexes/>` 
      v1.16.0 or later, perform the following steps:

      .. include:: /includes/steps-avs-create-index-go.rst

   .. tab::
      :tabid: java-sync

      To create an {+avs+} index for a collection using the
      :driver:`MongoDB Java driver </java/sync/current/fundamentals/indexes/>`
      v5.2.0 or later, perform the following steps:

      .. include:: /includes/steps-avs-create-index-java.rst

   .. tab::
      :tabid: nodejs

      To create an {+avs+} index for a collection using the
      :driver:`MongoDB Node driver </node/current/fundamentals/indexes/>`
      v6.6.0 or later, perform the following steps:

      .. include:: /includes/steps-avs-create-index-nodejs.rst

   .. tab::
      :tabid: python

      To create an {+avs+} index for a collection using the
      `PyMongo <https://www.mongodb.com/docs/languages/python/pymongo-driver/current/indexes/atlas-search-index/>`__
      driver v4.7 or later, perform the following steps: 

      .. include:: /includes/steps-avs-create-index-pymongo.rst

.. _avs-view-index:

View an {+avs+} Index
------------------------------------

You can view {+avs+} indexes for all collections from the
{+atlas-ui+}, {+atlas-admin-api+}, {+atlas-cli+}, {+mongosh+},
or a supported :driver:`MongoDB Driver </>`.

.. _avs-view-index-access:

Required Access
~~~~~~~~~~~~~~~

You need the :authrole:`Project Search Index Editor` or higher role to view
{+avs+} indexes. 

.. |command-type| replace:: retrieve

.. include:: /includes/fact-search-commands-cluster-tier.rst

.. _avs-view-index-procedure:

Procedure
~~~~~~~~~

----------

.. |arrow| unicode:: U+27A4

|arrow| Use the **Select your language** drop-down menu to set the 
language of the example in this section.

----------

.. tabs-drivers::

   .. tab::
      :tabid: atlas-ui 

      .. include:: /includes/steps-avs-view-index-atlas-ui.txt

      The page displays the following details for the indexes on the page: 

      .. list-table:: 
         :stub-columns: 1 
         :widths: 20 80

         * - Name 
           - Label that identifies the index. 

         * - Index Type
           - Label that indicates an |fts| or {+avs+} index. Values
             include:  
     
             - ``search`` for |fts| indexes.
             - ``vectorSearch`` for {+avs+} indexes.

         * - Index Fields
           - List that contains the fields that this index indexes.

         * - Status
           - Current state of the index on the primary node of the
             {+cluster+}. For valid values, see
             :ref:`avs-node-status-ref`. 

         * - Size
           - Size of the index on the primary node.

         * - Documents 
           - Number of indexed documents out of the total number of
             documents in the collection.

         * - Actions 
           - Actions that you can take on the index. You can:
     
             - :ref:`avs-edit-index`
             - :ref:`avs-delete-index`

             You can't run queries in the :guilabel:`Search Tester` UI
             against indexes of the ``vectorSearch`` type. If you click the
             :guilabel:`Query` button, {+avs+} displays a sample
             :pipeline:`$vectorSearch` that you can copy, modify, and run
             in {+atlas-ui+} and using other
             :ref:`supported clients <vectorSearch-agg-pipeline-clients>`. 

   .. tab:: 
      :tabid: atlas-api 

      To retrieve all the {+avs+} indexes for a collection using the
      {+atlas-admin-api+}, send a ``GET`` request to the |fts|
      ``indexes`` endpoint with the name of the database and collection. 

      .. literalinclude:: /includes/avs-examples/index-management/return-index/get-indexes-api.sh
         :language: shell
         :copyable:
         :linenos:

      To learn more about the syntax and parameters for the endpoint,
      see :oas-atlas-op:`Return All Atlas Search Indexes for One
      Collection </listAtlasSearchIndexes>`.

      To retrieve one {+avs+} index for a collection using the
      {+atlas-admin-api+}, send a ``GET`` request to the |fts|
      ``indexes`` endpoint with either the unique ID or name of the
      index (line 4) to retrieve. 
      
      .. literalinclude:: /includes/avs-examples/index-management/return-index/get-index-api.sh
         :language: shell
         :copyable:
         :linenos:

      To learn more about the syntax and parameters for the endpoint, 
      :oas-atlas-op:`Get One By Name </getAtlasSearchIndexByName>` and
      :oas-atlas-op:`Get One By ID </getAtlasSearchIndex>`.

   .. tab:: 
      :tabid: atlas-cli 

      To return {+avs+} indexes for a collection using {+atlas-cli+},
      perform the following steps: 

      .. include:: /includes/steps-avs-view-index-acli.rst

   .. tab::
      :tabid: shell

      To view an {+avs+} index for a collection using {+mongosh+},
      perform the following steps:

      .. include:: /includes/steps-avs-view-index-mongosh.rst

   .. tab::
      :tabid: go

      To view an {+avs+} index for a collection using 
      :driver:`MongoDB Go driver </go/current/fundamentals/indexes/>` 
      v1.16.0 or later, perform the following steps:

      .. include:: /includes/steps-avs-view-index-go.rst

   .. tab::
      :tabid: java-sync

      To view an {+avs+} index for a collection using the
      :driver:`MongoDB Java driver </java/sync/current/fundamentals/indexes/>`
      v5.2.0 or later, perform the following steps:

      .. include:: /includes/steps-avs-view-index-java.rst

   .. tab::
      :tabid: nodejs

      To view an {+avs+} index for a collection using 
      :driver:`MongoDB Node driver </node/current/fundamentals/indexes/>` 
      v6.6.0 or later, perform the following steps:

      .. include:: /includes/steps-avs-view-index-nodejs.rst

   .. tab::
      :tabid: python

      To view {+avs+} indexes for a collection using
      `PyMongo <https://www.mongodb.com/docs/languages/python/pymongo-driver/current/indexes/atlas-search-index/>`__
      driver v4.7 or later, perform the following steps:

      .. include:: /includes/steps-avs-view-index-pymongo.rst

.. _avs-edit-index:

Edit an {+avs+} Index
-----------------------------------

You can change the :ref:`index definition <avs-types-vector-search>`
of an existing {+avs+} index from the {+atlas-ui+}, {+atlas-admin-api+}, 
{+atlas-cli+}, {+mongosh+}, or a supported :driver:`MongoDB Driver </>`. 
You can't rename an index or change the index type. If you need to
change an index name or type, you must create a new index and delete the old one.

.. important::

   After you edit an index, {+avs+} rebuilds it. 
   While the index rebuilds, you can continue to run vector 
   search queries by using the old index definition. 
   When the index finishes rebuilding, the old index is automatically 
   replaced. This process follows the same process as standard 
   |fts| indexes.
  
   To learn more, see :ref:`index-create-and-update`.

Required Access 
~~~~~~~~~~~~~~~

You must have the :authrole:`Project Search Index Editor` or higher role to
edit an {+avs+} index.

.. |command-type| replace:: edit

.. include:: /includes/fact-search-commands-cluster-tier.rst

.. _avs-edit-index-procedure:

Procedure
~~~~~~~~~

----------

.. |arrow| unicode:: U+27A4

|arrow| Use the **Select your language** drop-down menu to select the
client you want to use to edit your index.

----------

.. tabs-drivers::

   .. tab::
      :tabid: atlas-ui 

      .. include:: /includes/steps-avs-edit-index-atlas-ui.txt

   .. tab:: Atlas Administration API 
      :tabid: atlas-api 

      To edit an {+avs+} index for a collection using the
      {+atlas-admin-api+}, send a ``PATCH`` request to the |fts|
      ``indexes`` endpoint with either the unique ID or name of the
      index (line 4) to edit. 

      .. literalinclude:: /includes/avs-examples/index-management/update-index/edit-index-api.sh 
         :language: shell
         :copyable:
         :linenos:
      
      To learn more about the syntax and parameters for the endpoints, see
      :oas-atlas-op:`Update One By Name </updateAtlasSearchIndexByName>` and
      :oas-atlas-op:`Update One By ID </updateAtlasSearchIndex>`.

   .. tab:: Atlas CLI 
      :tabid: atlas-cli 

      To edit an {+avs+} index for a collection using {+atlas-cli+},
      perform the following steps:

      .. include:: /includes/steps-avs-edit-index-acli.rst 

   .. tab::  
      :tabid: shell 

      To edit an {+avs+} index for a collection using {+mongosh+},
      perform the following steps: 

      .. include:: /includes/steps-avs-edit-index-mongosh.rst 

   .. tab::
      :tabid: go

      To update an {+avs+} index for a collection using the
      :driver:`MongoDB Go driver </go/current/fundamentals/indexes/>`
      v1.16.0 or later, perform the following steps:

      .. include:: /includes/steps-avs-edit-index-go.rst

   .. tab::
      :tabid: java-sync

      To edit an {+avs+} index for a collection using the
      :driver:`MongoDB Java driver </java/sync/current/fundamentals/indexes/>`
      v5.2.0 or later, perform the following steps:

      .. include:: /includes/steps-avs-edit-index-java.rst

   .. tab::
      :tabid: nodejs

      To update an {+avs+} index for a collection using the
      :driver:`MongoDB Node driver </node/current/fundamentals/indexes/>` 
      v6.6.0 or later, perform the following steps:

      .. include:: /includes/steps-avs-edit-index-nodejs.rst

   .. tab::
      :tabid: python

      To update an {+avs+} index for a collection using the
      `PyMongo <https://www.mongodb.com/docs/languages/python/pymongo-driver/current/indexes/atlas-search-index/>`__
      driver v4.7 or later, perform the following steps:

      .. include:: /includes/steps-avs-edit-index-pymongo.rst

.. _avs-delete-index:

Delete an {+avs+} Index
--------------------------------------

You can delete an {+avs+} index at any time from the 
{+atlas-ui+}, {+atlas-admin-api+}, {+atlas-cli+}, {+mongosh+},
or a supported :driver:`MongoDB Driver </>`.

Required Access
~~~~~~~~~~~~~~~

You must have the :authrole:`Project Search Index Editor` or higher role to 
delete an {+avs+} index.

.. |command-type| replace:: delete

.. include:: /includes/fact-search-commands-cluster-tier.rst

.. _avs-delete-index-procedure:

Procedure
~~~~~~~~~

----------

.. |arrow| unicode:: U+27A4

|arrow| Use the **Select your language** drop-down menu to select the
client you want to use to delete your index.

----------

.. tabs-drivers::

   .. tab:: 
      :tabid: atlas-ui 

      .. include:: /includes/steps-avs-delete-index-atlas-ui.txt

   .. tab::  
      :tabid: atlas-api 

      To delete an {+avs+} index for a collection using the
      {+atlas-admin-api+}, send a ``DELETE`` request to the |fts|
      ``indexes`` endpoint with either the unique ID or the name of the 
      index to delete. 
      
      .. literalinclude:: /includes/avs-examples/index-management/delete-index/delete-index-api.sh
         :language: shell
         :copyable:
         :linenos:

      To learn more about the syntax and parameters for the endpoint, see 
      :oas-atlas-op:`Remove One Search Index By Name </deleteAtlasSearchIndexByName>`
      and :oas-atlas-op:`Remove One Search Index By ID </deleteAtlasSearchIndex>`.

   .. tab::  
      :tabid: atlas-cli 

      To delete an {+avs+} index for a collection using {+atlas-cli+},
      perform the following steps: 

      .. include:: /includes/steps-avs-delete-index-acli.rst

   .. tab::
      :tabid: shell

      To delete an {+avs+} index for a collection using {+mongosh+},
      perform the following steps:

      .. include:: /includes/steps-avs-delete-index-mongosh.rst

   .. tab::
      :tabid: go

      To delete an {+avs+} index for a collection using 
      :driver:`MongoDB Go driver </go/current/fundamentals/indexes/>` 
      v1.16.0 or later, perform the following steps:

      .. include:: /includes/steps-avs-delete-index-go.rst

   .. tab::
      :tabid: java-sync

      To delete an {+avs+} index for a collection using the
      :driver:`MongoDB Java driver </java/sync/current/fundamentals/indexes/>`
      v5.2.0 or later, perform the following steps:

      .. include:: /includes/steps-avs-delete-index-java.rst

   .. tab::
      :tabid: nodejs

      To delete an {+avs+} index for a collection using
      :driver:`MongoDB Node driver </node/current/fundamentals/indexes/>`
      v6.6.0 or later, perform the following steps:

      .. include:: /includes/steps-avs-delete-index-nodejs.rst

   .. tab::
      :tabid: python

      To delete an {+avs+} index for a collection using 
      `PyMongo <https://www.mongodb.com/docs/languages/python/pymongo-driver/current/indexes/atlas-search-index/>`__
      driver v4.7 or later, perform the following steps: 

      .. include:: /includes/steps-avs-delete-index-pymongo.rst



.. _avs-node-status-ref:

Index Status
------------

When you create the {+avs+} index, the :guilabel:`Status` column shows 
the current state of the index on the primary node of the cluster. 
Click the :guilabel:`View status details` link below the status to view 
the state of the index on all the nodes of the cluster.

When the :guilabel:`Status` column reads :guilabel:`Active`, the index
is ready to use. In other states, queries against the index may return
incomplete results.

.. list-table::
   :header-rows: 1
   :widths: 25 75

   * - Status
     - Description

   * - Not Started 
     - |service| has not yet started building the index.

   * - Initial Sync 
     - |service| is building the index or re-building the 
       index after an edit. When the index is in this state:
       
       - For a new index, {+avs+} doesn't serve queries until the 
         index build is complete. 
       - For an existing index, you can continue to use the old index 
         for existing and new queries until the index rebuild 
         is complete.

   * - Active
     - Index is ready to use.

   * - Recovering
     - Replication encountered an error. This state commonly occurs 
       when the current replication point is no longer available on the 
       |mongod| oplog. You can still query the existing index until it 
       updates and its status changes to :guilabel:`Active`. Use the 
       error in the :guilabel:`View status details` modal window to 
       troubleshoot the issue. To learn more, see 
       :ref:`atlas-search-alerts`.

   * - Failed 
     - |service| could not build the index. Use the error  
       in the :guilabel:`View status details` modal window to 
       troubleshoot the issue. To learn more, see 
       :ref:`atlas-search-alerts`.

   * - Delete in Progress
     - |service| is deleting the index from the cluster nodes.

While |service| builds the index and after the build completes, the 
:guilabel:`Documents` column shows the percentage and number of 
documents indexed. The column also shows the total number of documents 
in the collection.
