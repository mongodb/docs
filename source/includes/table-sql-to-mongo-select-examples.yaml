# table structure. all content symbolic.
section: layout
header: [ meta.header1, meta.header2, meta.header3]
rows: 
  - 1: [ content.sql1, content.mongo1, content.ref1 ]
  - 2: [ content.sql2, content.mongo2, content.ref1  ]
  - 3: [ content.sql3, content.mongo3, content.ref1  ]
  - 4: [ content.sql4, content.mongo4, content.ref1 ]
  - 5: [ content.sql5, content.mongo5, content.ref1 ]
  - 6: [ content.sql6, content.mongo6, content.ref6 ]
  - 7: [ content.sql7, content.mongo7, content.ref7 ]
  - 8: [ content.sql8, content.mongo8, content.ref8 ]
  - 9: [ content.sql9, content.mongo9, content.ref9 ]
  - 10: [ content.sql10, content.mongo10, content.ref10 ]
  - 11: [ content.sql11, content.mongo11, content.ref11 ]
  - 12: [ content.sql12, content.mongo12, content.ref12 ]
  - 13: [ content.sql13, content.mongo13, content.ref12 ]
  - 14: [ content.sql14, content.mongo14, content.ref14 ]
  - 15: [ content.sql15, content.mongo15, content.ref14 ]
  - 16: [ content.sql16, content.mongo16, content.ref16 ]
  - 17: [ content.sql17, content.mongo17, content.ref17 ]
  - 18: [ content.sql18, content.mongo18, content.ref18 ]
  - 19: [ content.sql19, content.mongo19, content.ref19 ]
  - 20: [ content.sql20, content.mongo20, content.ref20 ]
  - 21: [ content.sql21, content.mongo21, content.ref21 ]
  - 22: [ content.sql22, content.mongo22, content.ref22 ]
---
# table metadata, as meta.<key>
section: meta
header1: "SQL SELECT Statements"
header2: "MongoDB find() Statements"
header3: "Reference"
---
# table content, as content.<key>
section: content
sql1: |
      .. code-block:: sql

         SELECT *
         FROM users
mongo1: |
        .. code-block:: javascript
           :emphasize-lines: 1

           db.users.find()
ref1: |
      See :method:`find() <db.collection.find()>`
      for more information.
sql2: |
      .. code-block:: sql

         SELECT id, user_id, status
         FROM users
mongo2: |
        .. code-block:: javascript
           :emphasize-lines: 1-4

           db.users.find( 
               { },
               { user_id: 1, status: 1 }
           )
sql3: |
      .. code-block:: sql

         SELECT user_id, status
         FROM users
mongo3: |
        .. code-block:: javascript
           :emphasize-lines: 1-4

           db.users.find(
               { },
               { user_id: 1, status: 1, _id: 0 }
           )
sql4: |
      .. code-block:: sql

         SELECT *
         FROM users
         WHERE status = "A"
mongo4: |
        .. code-block:: javascript
           :emphasize-lines: 1-3

           db.users.find(
               { status: "A" }
           )
sql5: |
      .. code-block:: sql

         SELECT user_id, status
         FROM users
         WHERE status = "A"
mongo5: |
        .. code-block:: javascript
           :emphasize-lines: 1-3

           db.users.find(
               { status: "A" },
               { user_id: 1, status: 1, _id: 0 }
           )
sql6: |
      .. code-block:: sql

         SELECT *
         FROM users
         WHERE status != "A"
mongo6: |
        .. code-block:: javascript
           :emphasize-lines: 1-3

           db.users.find(
               { status: { $ne: "A" } }
           )
ref6: | 
      See :method:`find() <db.collection.find()>`
      and :operator:`$ne` for more information.
sql7: |
      .. code-block:: sql

         SELECT *
         FROM users
         WHERE status = "A"
         AND age = 50
mongo7: |
        .. code-block:: javascript
           :emphasize-lines: 1-4

           db.users.find(
               { status: "A",
                 age: 50 }
           )
ref7: | 
      See :method:`find() <db.collection.find()>`
      and :operator:`$and` for more information.
sql8: |
      .. code-block:: sql

         SELECT *
         FROM users
         WHERE status = "A"
         OR age = 50
mongo8: |
        .. code-block:: javascript
           :emphasize-lines: 1-4

           db.users.find(
               { $or: [ { status: "A" } ,
                        { age: 50 } ] }
           )
ref8: | 
      See :method:`find() <db.collection.find()>`
      and :operator:`$or` for more information.
sql9: |
      .. code-block:: sql

         SELECT *
         FROM users
         WHERE age > 25
mongo9: |
        .. code-block:: javascript
           :emphasize-lines: 1-3

           db.users.find(
               { age: { $gt: 25 } }
           )
ref9: | 
      See :method:`find() <db.collection.find()>`
      and :operator:`$gt` for more information.
sql10: |
       .. code-block:: sql

          SELECT *
          FROM users
          WHERE age < 25
mongo10: |
         .. code-block:: javascript
            :emphasize-lines: 1-3

            db.users.find(
               { age: { $lt: 25 } }
            )
ref10: | 
       See :method:`find() <db.collection.find()>`
       and :operator:`$lt` for more information.
sql11: |
       .. code-block:: sql

          SELECT *
          FROM users
          WHERE age > 25
          AND   age <= 50
mongo11: |
         .. code-block:: javascript
            :emphasize-lines: 1-3

            db.users.find(
               { age: { $gt: 25, $lte: 50 } }
            )
ref11: | 
       See :method:`find() <db.collection.find()>`,
       :operator:`$gt`, and :operator:`$lte` for
       more information.
sql12: |
       .. code-block:: sql

          SELECT *
          FROM users
          WHERE user_id like "%bc%"
mongo12: |
         .. code-block:: javascript
            :emphasize-lines: 1-3

            db.users.find(
               { user_id: /bc/ }
            )
ref12: | 
       See :method:`find() <db.collection.find()>`
       and :operator:`$regex` for more information.

sql13: |
      .. code-block:: sql

         SELECT *
         FROM users
         WHERE user_id like "bc%"
mongo13: |
         .. code-block:: javascript
            :emphasize-lines: 1-3

            db.users.find(
               { user_id: /^bc/ }
            )
sql14: |
       .. code-block:: sql

          SELECT *
          FROM users
          WHERE status = "A"
          ORDER BY user_id ASC
mongo14: |
         .. code-block:: javascript
            :emphasize-lines: 1

            db.users.find( { status: "A" } ).sort( { user_id: 1 } )
ref14: | 
       See :method:`find() <db.collection.find()>`
       and :method:`sort() <cursor.sort()>`
       for more information.
sql15: |
       .. code-block:: sql

          SELECT *
          FROM users
          WHERE status = "A"
          ORDER BY user_id DESC
mongo15: |
         .. code-block:: javascript
            :emphasize-lines: 1

            db.users.find( { status: "A" } ).sort( { user_id: -1 } )
sql16: |
       .. code-block:: sql

          SELECT COUNT(*)
          FROM users
mongo16: |
         .. code-block:: javascript
            :emphasize-lines: 1

            db.users.count()

         *or*

         .. code-block:: javascript
            :emphasize-lines: 1

            db.users.find().count()
ref16: |
       See :method:`find() <db.collection.find()>`
       and :method:`count() <cursor.count()>` for
       more information.
sql17: |
       .. code-block:: sql

          SELECT COUNT(user_id)
          FROM users
mongo17: |
         .. code-block:: javascript
            :emphasize-lines: 1

            db.users.count( { user_id: { $exists: true } } )

         *or*

         .. code-block:: javascript
            :emphasize-lines: 1

            db.users.find( { user_id: { $exists: true } } ).count()
ref17: |
       See :method:`find() <db.collection.find()>`,
       :method:`count() <cursor.count()>`, and
       :operator:`$exists` for more information.
sql18: |
      .. code-block:: sql

         SELECT COUNT(*)
         FROM users
         WHERE age > 30
mongo18: |
         .. code-block:: javascript
            :emphasize-lines: 1

            db.users.count( { age: { $gt: 30 } } )

         *or*
        
         .. code-block:: javascript
            :emphasize-lines: 1

            db.users.find( { age: { $gt: 30 } } ).count()
ref18: |
       See :method:`find() <db.collection.find()>`,
       :method:`count() <cursor.count()>`, and
       :operator:`$gt` for more information.
sql19: |
       .. code-block:: sql

          SELECT DISTINCT(status)
          FROM users
mongo19: |
         .. code-block:: javascript
            :emphasize-lines: 1

            db.users.distinct( "status" )
ref19: |
       See :method:`find() <db.collection.find()>`
       and :method:`distinct() <db.collection.distinct()>`
       for more information.
sql20: |
      .. code-block:: sql

         SELECT *
         FROM users
         LIMIT 1
mongo20: |
         .. code-block:: javascript
            :emphasize-lines: 1

            db.users.findOne()

         *or*

         .. code-block:: javascript
            :emphasize-lines: 1

            db.users.find().limit(1)
ref20: |
       See :method:`find() <db.collection.find()>`,
       :method:`findOne() <db.collection.findOne()>`,
       and :method:`limit() <cursor.limit()>`
       for more information.
sql21: |
       .. code-block:: sql

          SELECT *
          FROM users
          LIMIT 5 
          SKIP 10
mongo21: |
         .. code-block:: javascript
            :emphasize-lines: 1

            db.users.find().limit(5).skip(10)
ref21: |
       See :method:`find() <db.collection.find()>`,
       :method:`limit() <cursor.limit()>`, and
       :method:`skip() <cursor.skip()>` for
       more information.
sql22: |
       .. code-block:: sql

          EXPLAIN SELECT * 
          FROM users 
          WHERE status = "A"
mongo22: |
         .. code-block:: javascript
            :emphasize-lines: 1

            db.users.find( { status: "A" } ).explain()
ref22: |
       See :method:`find() <db.collection.find()>`
       and :method:`explain() <cursor.explain()>`
       for more information.
...
