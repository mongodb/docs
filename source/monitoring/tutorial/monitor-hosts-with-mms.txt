.. _tutorial-monitoring:

=============
Monitor Hosts
=============

.. default-domain:: mongodb

.. start-content

The Monitoring agent automatically discovers MongoDB processes based on
existing cluster configuration. You'll have to manually seed at
least one of these hosts from the MMS console.

.. index:: adding hosts
   single: hosts; adding

To add a host to |monitoring|, click the :guilabel:`+ ADD HOST` button at the
top of the Hosts page. This displays the :guilabel:`New Host` interface. Enter
the hostname, port, and optionally an ``admin`` database username and
password. Then select :guilabel:`Add` to submit data.

If the host is only accessible by specific hostname or IP address, or
you need to specify the hostname to use for servers with multiple aliases, set up a
preferred hostname. See the :ref:`Preferred Hostnames
<group-settings-preferred-hostnames>` section for details.

.. index:: host discovery
   single: hosts; discovery

Once it has a seed host, the Monitoring agent will discover any other
nodes from associated clusters. These clusters, and their respective
seed hosts, include:

- Master databases, after adding slave databases.

- Shard clusters, after adding ``mongos`` instances.

- Replica sets, after adding any member of the set.

Once you add these seed nodes, the Monitoring agent will fetch this
information *from* the MMS servers. Thus, when configuring the
monitoring environment, you may need to wait for several update cycles
(e.g. 5-10 minutes) to complete the auto-discovery process and host
identification. During this period, you may see duplicate hosts in the
MMS web console. This is normal.

The Monitoring agent fetches configuration and reports to |monitoring| every
minute, so, again, there may be a delay of several minutes before data
and host information propagate to the MMS console.

.. include:: /images/mms-deployment.rst

You can find immediate evidence of a working installation in the agent output
or logs. For more information, check the MMS console's :guilabel:`Monitoring
Agent Log` tab on the :guilabel:`Hosts` page, as well as the :guilabel:`Last
Ping` and :guilabel:`Daily Pings` tabs visible when you click a hostname on the
:guilabel:`Hosts`, :guilabel:`Mongos`, and :guilabel:`Configs` tabs on the
:guilabel:`Hosts` page. Once |monitoring| has data, you can view and begin
using the statistics.

.. index:: agent timeout
   single: agent; timeout
   single: timeout

If the agent cannot collect information about a host for 24 hours, the
|monitoring| system deactivates the instance in the Monitoring agent and
console. Deactivated hosts must be manually reactivated from the MMS
console if you wish to collect data from these `hosts`.

.. end-content

.. _monitoring-architecture:

Monitoring Architecture
~~~~~~~~~~~~~~~~~~~~~~~

Only one Monitoring agent per group or environment will report to |monitoring|
at a time. If your monitoring agent can connect to all hosts in your
deployment, a single monitoring agent is sufficient and strongly recommended.
Multiple agents can cause unexpected problems.

However, you can run a second instance of the
agent to provide redundancy as a hot standby. To install secondary
agents, simply repeat the installation process in the
:doc:`installation guide </monitoring/install>` for each hot standby
agent.

You should never install the monitoring agent on the same server as a
:program:`mongod` instance. You may need to shut a host down, for example, or a
``mongod`` instance may become overloaded and stop other processes on the
server. Installing the monitoring agent on an arbiter under constant but light
load may work fine.

The decision to install a monitoring agent on an application server, a
``mongos``, or an arbiter depends on your deployment, as well as server load and
other operational factors.

If you stop the agent process, |monitoring| removes the agent from the
:guilabel:`Agents` tab within a day. If a Monitoring agent is unavailable, the
last ping times for that agent do not update.

.. note::

   When the Monitoring agent restarts, there is a five minute delay
   before that agent begins collecting data sending pings to
   |monitoring|. If you have multiple agents, this delay permits other
   agents in your infrastructure to become the primary agent and for
   |monitoring| to determine which agent will be primary.

   During this interval, the restarted Monitoring agent will not
   collect data.

.. _authentication-privileges:

Additional Considerations for MongoDB 2.4 Nodes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you are monitoring a MongoDB 2.4 instance with
authentication enabled, you must have elevated privileges
to collect complete performance data. At a minimum, the user will need
to possess:

- the ``clusterAdmin`` role, **and**

- the ``readAnyDatabase`` role.

If MMS is running with :ref:`DB Profiling <db-stats-warning>` enabled,
the user requires additional permissions. In addition to the
``clusterAdmin`` and ``readAnyDatabase`` roles, the user must possess
**either**:

- the ``dbAdminAnyDatabase role``, **or**

- the ``dbAdmin`` role on the specific databases being profiled.

However, if you do not have DB Profiling enabled *and* you are not
collecting :dbcommand:`dbStats` data, the agent only needs permissions
provided by the ``clusterAdmin`` role.

.. seealso:: `User Privilege Roles in MongoDB
   <http://docs.mongodb.org/manual/reference/user-privileges/>`_.
