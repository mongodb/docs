title: Stop a secondary.
stepnum: 1
ref: stop-a-secondary
pre: |
  In the :binary:`~bin.mongo` shell, shut down the :binary:`~bin.mongod` instance:
action:
  language: javascript
  code: db.shutdownServer()
---
title: Restart the secondary as a standalone on a different port.
stepnum: 2
ref: restart-diff-port
pre: |
  At the operating system shell prompt, restart :binary:`~bin.mongod`
  as a standalone instance running on a different port and *without*
  the :option:`--replSet <mongod --replSet>` parameter:
     
  .. include:: /includes/warning-bind-ip-security-considerations.rst

action:
  language: sh
  code: mongod --port 37017 --dbpath /srv/mongodb --bind_ip localhost,<ip address of the mongod host>
post: |
  Always start :binary:`~bin.mongod` with the same user, even when
  restarting a replica set member as a standalone instance.
---
title: Perform maintenance operations on the secondary.
stepnum: 3
ref: maintenance-on-secondary
pre: |
  While the member is a standalone, use the :binary:`~bin.mongo` shell to
  perform maintenance:
action:
  language: sh
  code: mongo --port 37017
---
title: Restart ``mongod`` as a member of the replica set.
stepnum: 4
ref: restart
pre: |
  After performing all maintenance tasks, use the following procedure
  to restart the :binary:`~bin.mongod` as a member of the replica set
  on its usual port.
action:
  - pre: |
      From the :binary:`~bin.mongo` shell, shut down the standalone
      server after completing the maintenance:
    language: javascript
    code: |
       use admin
       db.shutdownServer()
  - pre: |
      Restart the :binary:`~bin.mongod` instance as a member of
      the replica set using its normal command-line arguments or
      configuration file.

      When it has started, connect the :binary:`~bin.mongo` shell to the
      restarted instance.

  - pre: |
      The secondary takes time to :doc:`catch up to the primary
      </core/replica-set-sync>`. From the :binary:`~bin.mongo` shell, use the
      following command to verify that the member has caught up from the
      :replstate:`RECOVERING` state to the :replstate:`SECONDARY` state.
    language: javascript
    code: rs.status()
---
title: Perform maintenance on the primary last.
stepnum: 5
ref: maintenance-on-primary
pre: |
  To perform maintenance on the primary after completing maintenance
  tasks on all secondaries, use :method:`rs.stepDown()` in the
  :binary:`~bin.mongo` shell to step down the primary and allow one of
  the secondaries to be elected the new primary. Specify a 300 second
  waiting period to prevent the member from being elected primary again
  for five minutes:
action:
  language: javascript
  code: rs.stepDown(300)
post: |
  After the primary steps down, the replica set will elect a new
  primary. See :doc:`/core/replica-set-elections` for more
  information about replica set elections.
...
