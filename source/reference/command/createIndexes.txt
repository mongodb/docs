=============
createIndexes
=============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. versionadded:: 2.6

Definition
----------

.. dbcommand:: createIndexes

   Builds one or more indexes on a collection.

   .. versionchanged:: 3.2

      Starting in MongoDB 3.2, MongoDB disallows the creation of
      :ref:`version 0 <3.2-version-0-indexes>` indexes. To upgrade
      existing version 0 indexes, see :ref:`3.2-version-0-indexes`.

   The :dbcommand:`createIndexes` command takes the following form:

   .. code-block:: javascript

      db.runCommand(
        {
          createIndexes: <collection>,
          indexes: [
              {
                  key: {
                      <key-value_pair>,
                      <key-value_pair>,
                      ...
                  },
                  name: <index_name>,
                  <option1>,
                  <option2>,
                  ...
              },
              { ... },
              { ... }
          ]
        }
      )

   The :dbcommand:`createIndexes` command takes the following fields:

   .. include:: /includes/apiargs/dbcommand-createIndexes-field.rst

   Each document in the ``indexes`` array can take the following fields:

   .. include:: /includes/fact-remove-dropDups-option.rst

   .. include:: /includes/apiargs/dbcommand-createIndexes-indexes-field.rst

Considerations
--------------

An index name, including the :term:`namespace`, cannot be longer than
the :ref:`Index Name Length <limit-index-name-length>` limit.

Behavior
--------

Concurrency
~~~~~~~~~~~

Non-background indexing operations block all other operations on a
database.

Multiple Index Builds
~~~~~~~~~~~~~~~~~~~~~

.. versionchanged:: 3.0.0

If you specify multiple indexes to the :dbcommand:`createIndexes`
command, the operation only scans the collection once, and if at least
one index is to be built in the foreground, the operation will build
all the specified indexes in the foreground.

Index Options
~~~~~~~~~~~~~

With the exception of the :ref:`collation option
<createIndexes-collation-option>`, if you create an index with one set
of options and then issue :dbcommand:`createIndexes` with the same
index fields but different options, MongoDB will not change the options
nor rebuild the index. To change these index options, drop the existing
index with :method:`db.collection.dropIndex()` before running the new
:dbcommand:`createIndexes` with the new options.

.. _createIndexes-collation-option:

Collation Option
````````````````

.. include:: /includes/extracts/collation-index-options.rst

.. include:: /includes/extracts/collation-index-collection.rst

.. include:: /includes/extracts/collation-index-tip.rst

.. include:: /includes/extracts/collation-index-use.rst

Example
-------

The following command builds two indexes on the ``inventory`` collection of
the ``products`` database:

.. code-block:: javascript

   db.getSiblingDB("products").runCommand(
     {
       createIndexes: "inventory",
       indexes: [
           {
               key: {
                   item: 1,
                   manufacturer: 1,
                   model: 1
               },
               name: "item_manufacturer_model",
               unique: true
           },
           {
               key: {
                   item: 1,
                   supplier: 1,
                   model: 1
               },
               name: "item_supplier_model",
               unique: true
           }
       ]
     }
   )

When the indexes successfully finish building, MongoDB returns a results
document that includes a status of ``"ok" : 1``.

Output
------

The :dbcommand:`createIndexes` command returns a document that indicates
the success of the operation. The document contains some but not all of
the following fields, depending on outcome:

.. data:: createIndexes.createdCollectionAutomatically

   If ``true``, then the collection didn't exist and was created in the
   process of creating the index.

.. data:: createIndexes.numIndexesBefore

   The number of indexes at the start of the command.

.. data:: createIndexes.numIndexesAfter

   The number of indexes at the end of the command.

.. data:: createIndexes.ok

   A value of ``1`` indicates the indexes are in place. A value of
   ``0`` indicates an error.

.. data:: createIndexes.note

   This ``note`` is returned if an existing index or indexes already
   exist. This indicates that the index was not created or changed.

.. data:: createIndexes.errmsg

   Returns information about any errors.

.. data:: createIndexes.code

   The error code representing the type of error.
