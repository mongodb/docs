# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: 2013-12-16 23:18+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/reference/command/getLog.txt:3
msgid "getLog"
msgstr ""

#: ../source/reference/command/getLog.txt:15
msgid ""
":dbcommand:`getLog` is an administrative command that returns the most "
"recent 1024 logged :binary:`~bin.mongod` events. :dbcommand:`getLog` "
"*does not* read log data from the :binary:`~bin.mongod` log file. It "
"instead reads data from a RAM cache of logged :binary:`~bin.mongod` "
"events. To run :dbcommand:`getLog`, use the :method:`db.runCommand( { "
"command } ) <db.runCommand()>` method on the ``admin`` database."
msgstr ""

#: ../source/reference/command/getLog.txt:22
msgid "The :dbcommand:`getLog` command has the following syntax:"
msgstr ""

#: ../source/reference/command/getLog.txt:28
msgid "The possible values for :dbcommand:`getLog` are:"
msgstr ""

#: ../source/reference/command/getLog.txt:30
msgid "``global`` - returns the combined output of all recent log entries."
msgstr ""

#: ../source/reference/command/getLog.txt:33
msgid ""
"``rs`` - if the :binary:`~bin.mongod` is part of a :term:`replica set`, "
":dbcommand:`getLog` returns recent notices related to replica set "
"activity."
msgstr ""

#: ../source/reference/command/getLog.txt:37
msgid ""
"``startupWarnings`` - returns logs that *may* contain errors or warnings "
"from MongoDB's log from when the current process started. If "
":binary:`~bin.mongod` started without warnings, this filter may return an"
" empty array."
msgstr ""

#: ../source/reference/command/getLog.txt
msgid "Returns"
msgstr ""

#: ../source/reference/command/getLog.txt:42
msgid ""
"A document that contains an array of log events as ``log`` and the number"
" of log events as ``totalLinesWritten``."
msgstr ""

#: ../source/reference/command/getLog.txt:48
msgid "Behavior"
msgstr ""

#: ../source/reference/command/getLog.txt:50
msgid ""
"Specify ``*`` to :dbcommand:`getLog` to return a list of available log "
"filters for the :binary:`~bin.mongod`."
msgstr ""

#: ../source/reference/command/getLog.txt:53
msgid ""
":dbcommand:`getLog` truncates any event that contains more than 512 "
"characters."
msgstr ""

#: ../source/reference/command/getLog.txt:57
msgid "Examples"
msgstr ""

#: ../source/reference/command/getLog.txt:60
msgid "Retrieve Available Log Filters"
msgstr ""

#: ../source/reference/command/getLog.txt:62
msgid ""
"The following operation returns the available log filters for passing to "
":dbcommand:`getLog`"
msgstr ""

#: ../source/reference/command/getLog.txt:69
msgid "The operation returns the following document:"
msgstr ""

#: ../source/reference/command/getLog.txt:76
msgid "Retrieve Recent Events from Log"
msgstr ""

#: ../source/reference/command/getLog.txt:78
msgid ""
"The following operation retrieves the most recent ``global`` events for "
"the :binary:`~bin.mongod`"
msgstr ""

#: ../source/reference/command/getLog.txt:85
msgid "The operation returns a document similar to the following:"
msgstr ""

#: ../source/reference/command/getLog.txt:104
msgid "The highlighted line was truncated, as it exceeded 512 characters."
msgstr ""

# f43be77393744724ad2ac10b49f3ed2c
#~ msgid ""
#~ "The :dbcommand:`getLog` command returns a "
#~ "document with a ``log`` array that "
#~ "contains recent messages from the "
#~ ":program:`mongod` process log. The "
#~ ":dbcommand:`getLog` command has the following"
#~ " syntax:"
#~ msgstr ""

# a53dca7b65be477f988d0f2c55d930e2
#~ msgid "Replace ``<log>`` with one of the following values:"
#~ msgstr ""

# 5e85897936584769a26e586a180341e6
#~ msgid ""
#~ "``rs`` - if the :program:`mongod` is "
#~ "part of a :term:`replica set`, "
#~ ":dbcommand:`getLog` will return recent notices"
#~ " related to replica set activity."
#~ msgstr ""

# a28be896a1124305a411e85098f26eb3
#~ msgid ""
#~ "``startupWarnings`` - will return logs "
#~ "that *may* contain errors or warnings"
#~ " from MongoDB's log from when the "
#~ "current process started. If :program:`mongod`"
#~ " started without warnings, this filter "
#~ "may return an empty array."
#~ msgstr ""

# f9061059e8a944aaa4d7c00dd8f0e9fe
#~ msgid ""
#~ "You may also specify an asterisk "
#~ "(e.g. ``*``) as the ``<log>`` value "
#~ "to return a list of available log"
#~ " filters. The following interaction from"
#~ " the :program:`mongo` shell connected to"
#~ " a replica set:"
#~ msgstr ""

# aed7f4f59e044cd09801e70ece626c11
#~ msgid ""
#~ ":dbcommand:`getLog` returns events from a "
#~ "RAM cache of the :program:`mongod` "
#~ "events and *does not* read log "
#~ "data from the log file."
#~ msgstr ""

