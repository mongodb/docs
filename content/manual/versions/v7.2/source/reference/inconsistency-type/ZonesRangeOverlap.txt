#################
ZonesRangeOverlap
#################

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. |incon-type| replace:: ``ZonesRangeOverlap``

Description
===========

.. data:: ZonesRangeOverlap

   .. include:: /includes/inconsistency-type/ZonesRangeOverlap

Format
======

.. code-block:: json
   :copyable: false

   {
      type: "ZonesRangeOverlap",
      description: "<string>",
      details: {
         namespace: "<string>",
         collectionUUID: <string>,
         zoneA: {<document>},
         zoneB: {<document>}
      }
   }

|incon-type| inconsistency documents contain the following fields:

.. list-table::
   :header-rows: 1
   :widths: 20 20 60

   * - Field
     - Type
     - Description

   * - ``type``
     - string
     - .. include:: /includes/inconsistency-type/type


   * - ``description``
     - string
     - .. include:: /includes/inconsistency-type/descr


   * - ``details``
     - document
     - .. include:: /includes/inconsistency-type/details


   * - ``details.namespace``
     - string
     - .. include:: /includes/inconsistency-type/details.namespace

   * - ``details.collectionUUID``
     - UUID
     - .. include:: /includes/inconsistency-type/details.collectionUUID

   * - ``details.zoneA``
     - document
     - The first zone that overlaps with the second zone.

   * - ``details.zoneB``
     - document
     - The second zone that overlaps with the first zone.

Example
=======

.. include:: /includes/inconsistency-type/example

.. code-block:: json
   :emphasize-lines: 6-25
   :copyable: false

   {
      cursor: {
         id: Long("0"),
         ns: "test.$cmd.aggregate",
         firstBatch: [
            {
               type: "ZonesRangeOverlap",
               description: "Found two overlapping zones",
               details: {
                  namespace: "test.authors",
                  collectionUUID: new UUID("62ebdb7e-a7bb-4151-a620-49d44cef097f"),
                  zoneA: { 
                     ns: "test.authors", 
                     tag: "64ddec77e0d32b766bb8d5fe", 
                     min: { x: MinKey }, 
                     max: { x: 0 } 
                  },
                  zoneB: { 
                     ns: "test.authors", 
                     tag: "64ddec77e0d32b766bb8d5ff", 
                     min: { x: -10 }, 
                     max: { x: MaxKey }
                  }
                }
             }
         ],
      },
      ok: 1
   }
