================
db.setLogLevel()
================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. method:: db.setLogLevel()

   .. versionadded:: 3.0

   Sets a single verbosity level for :doc:`log messages
   </reference/log-messages>`.

   :method:`db.setLogLevel()` has the following form:

   .. code-block:: javascript

      db.setLogLevel(<level>, <component>)

   :method:`db.setLogLevel()` takes the following parameters:

   .. include:: /includes/apiargs/method-db.setLogLevel-param.rst

Behavior
--------

:method:`db.setLogLevel()` sets a *single* verbosity level. To set
multiple verbosity levels in a single operation, use either the
:dbcommand:`setParameter` command to set the
:parameter:`logComponentVerbosity` parameter. You can also specify the
verbosity settings in the :doc:`configuration file
</reference/configuration-options>`. See
:ref:`log-messages-configure-verbosity` for examples.

.. note::

   .. include:: /includes/extracts/4.2-changes-debug-log-message.rst

Examples
--------

Set Default Verbosity Level
~~~~~~~~~~~~~~~~~~~~~~~~~~~

Omit the ``<component>`` parameter to set the default verbosity for all
components; i.e. the :setting:`systemLog.verbosity` setting. The
operation sets the default verbosity to ``1``:

.. code-block:: javascript

   db.setLogLevel(1)

Set Verbosity Level for a Component
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Specify the ``<component>`` parameter to set the verbosity for the
component. The following operation updates the
:setting:`systemLog.component.storage.journal.verbosity` to ``2``:

.. code-block:: javascript

   db.setLogLevel(2, "storage.journal" )
