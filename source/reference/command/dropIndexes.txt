===========
dropIndexes
===========

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. dbcommand:: dropIndexes

   .. versionchanged:: 5.0
   
   The :dbcommand:`dropIndexes` command drops one or more indexes
   (except the index on the ``_id`` field and the last remaining shard
   key index, if one exists) from the specified collection.

   .. |method| replace:: :method:`db.collection.dropIndex()` and
      :method:`db.collection.dropIndexes()` helper methods.
   .. include:: /includes/fact-dbcommand-tip

Compatibility
-------------

This command is available in deployments hosted in the following environments: 

.. include:: /includes/fact-environments-atlas-only.rst

.. include:: /includes/fact-environments-atlas-support-all.rst

.. include:: /includes/fact-environments-onprem-only.rst

Syntax
------

The command has the following syntax:
   
.. code-block:: javascript

   { dropIndexes: <string>, index: <string|document|arrayofstrings>, writeConcern: <document>, comment: <any> }

Command Fields
--------------

The command takes the following fields:

.. list-table::
   :header-rows: 1
   :widths: 10 20 70
 
   * - Field
     - Type
     - Description
 
   * - dropIndexes
     - String
     - The name of the collection whose indexes to drop.
 
   * - index
     - string or document or array of strings
     - The index or indexes to drop.
 
       - To drop all indexes except the ``_id`` index and the last 
         remaining shard key index from the collection if one 
         exists, specify ``"*"``.
 
       - To drop a single index, specify either the index name,
         the index specification document (unless the index is a
         :ref:`text <index-type-text>` index), or an array of the
         index name. To drop a :ref:`text <index-type-text>` index,
         specify the index names instead of the index specification
         document. If this index is the last remaining shard key 
         index, ``dropIndexes`` raises an error.
 
       - To drop multiple indexes, specify an array of the index names.
 
   * - writeConcern
     - document
     - Optional. A document expressing the :doc:`write concern
       </reference/write-concern>` of the :dbcommand:`drop` command.
       Omit to use the default write concern.
 
   * - ``comment``
     - any
     - .. include:: /includes/extracts/comment-content.rst

Behavior
--------

.. |drop-index| replace:: :dbcommand:`dropIndexes`

.. include:: /includes/fact-drop-indexes-5.0.rst

Kill related queries only
~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/extracts/fact-command-dropIndexes-query-behavior.rst

Resource Locking
~~~~~~~~~~~~~~~~

.. include:: /includes/extracts/dropIndexes-resource-lock.rst

Index Names
~~~~~~~~~~~

If the method is passed an array of index names that includes a
non-existent index, the method errors without dropping any of the
specified indexes.

``_id`` Index
~~~~~~~~~~~~~

You cannot drop the default index on the ``_id`` field.

text Indexes
~~~~~~~~~~~~

To drop a :doc:`text </core/index-text>` index, specify the index name
instead of the index specification document.

.. _dropIndexes-cmd-index-builds:

Abort In-Progress Index Builds
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. versionadded:: 4.4

   If an index specified to :dbcommand:`dropIndexes` is still building,
   :dbcommand:`dropIndexes` attempts to abort the in-progress build.
   Aborting an index build has the same effect as dropping the built
   index. Prior to MongoDB 4.4, :dbcommand:`dropIndexes` would return an
   error if the collection had any in-progress index builds.

For replica sets, run :dbcommand:`dropIndexes` on the :term:`primary`.
The primary aborts the index build and creates an associated
"abortIndexBuild" oplog entry. Secondaries which replicate the
"abortIndexBuild" oplog entry abort the in-progress index build and
discard the build job. See :ref:`index-build-process` for detailed
documentation on the index build process and the specific timing for
terminating an in-progress index build.

The indexes specified to :dbcommand:`dropIndexes` must be the entire set
of in-progress builds associated to a single :dbcommand:`createIndexes`
or :method:`db.collection.createIndexes()` operation. To drop a specific
index out of a set of related in-progress builds, wait until the index
builds complete and specify that index to :dbcommand:`dropIndexes`.

For example, a :dbcommand:`createIndexes` /
:method:`~db.collection.createIndexes()` operation creates three
indexes. Assuming all three index builds are in-progress,
:dbcommand:`dropIndexes` must specify all three indexes to abort the
index builds.

Use :dbcommand:`currentOp` to identify the index builds associated to a
:dbcommand:`createIndexes` / :method:`~db.collection.createIndexes()`
operation. See :ref:`currentOp-cmd-index-creation` for an example.

Hidden Indexes
~~~~~~~~~~~~~~

.. include:: /includes/fact-hidden-indexes.rst

Examples
--------

- To drop all non-``_id`` indexes , specify ``"*"`` for the ``index``.

  .. code-block:: javascript

     db.runCommand( { dropIndexes: "collection", index: "*" } )

- To drop a single index, issue the command by specifying the name of
  the index you want to drop. For example, to drop the index named
  ``age_1``, use the following command:

  .. code-block:: javascript

     db.runCommand( { dropIndexes: "collection", index: "age_1" })

  :binary:`~bin.mongosh` provides the helper methods
  :method:`db.collection.dropIndex()` and
  :method:`db.collection.dropIndexes()`:

  .. code-block:: javascript

     db.collection.dropIndex("age_1");

- To drop multiple indexes, issue the command by specifying an array of
  the index names: 

  .. code-block:: javascript

     db.runCommand( { dropIndexes: "collection", index: [ "age_1", "age_1_status_1" ] } )

.. seealso::

   - :method:`db.collection.dropIndexes()`
   - :method:`db.collection.dropIndex()`

