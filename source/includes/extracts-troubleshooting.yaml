ref: troubleshooting-onprem-installation
edition: onprem
content: |

  Installation
  ------------

  The monitoring server does not start up successfully
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  Confirm the URI or IP address for the |mms| service is stored correctly
  in the :setting:`mongo.mongoUri` property in the
  ``<install_dir>/conf/conf-mms.properties`` file:

  .. code-block:: ini

     mongo.mongoUri=<SetToValidUri>

  If you don't set this property, |mms| will fail while trying to connect
  to the default 127.0.0.1:27017 URL.

  If the URI or IP address of your service changes, you must update the
  property with the new address. For example, update the address if you
  deploy on a system without a static IP address, or if you deploy on EC2
  without a fixed IP and then restart the EC2 instance.

  If the URI or IP address changes, then each user who access the service
  must also update the address in the URL used to connect and in the
  client-side ``monitoring-agent.config`` files.

  If you use the |mms| :program:`<install_dir>/bin/credentialstool` to
  encrypt the password used in the ``mongo.mongoUri`` value, also add the
  :setting:`mongo.encryptedCredentials` key to the
  ``<install_dir>/conf/conf-mms.properties`` file and set the value for
  this property to true:

  .. code-block:: ini

     mongo.encryptedCredentials=true

---
ref: troubleshooting-onprem-installation
edition: cloud
content: ""
---
ref: troubleshooting-monitoring-agent-fails-to-collect-data
edition: onprem
content: |

  {+magent+} Fails to Collect Data
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  Possible causes for this state:

  - If the {+magent+} can't connect to the server because of
    networking restrictions or issues (i.e. firewalls, proxies, routing.)

  - If your database is running with SSL. You must enable SSL either
    globally or on a per-host basis. See
    :doc:`/tutorial/configure-mongodb-agent-for-tls` and
    :doc:`/tutorial/enable-ssl-for-a-deployment` for more information.

  - If your database is running with authentication. You must supply |mms|
    with the authentication credentials for the host. See
    :doc:`/tutorial/edit-host-authentication-credentials`.
---
ref: troubleshooting-monitoring-agent-fails-to-collect-data
edition: cloud
content: ""
---
ref: troubleshooting-faq-hosts-legacy
edition: onprem
content: |

  Hosts
  ~~~~~

  .. This "Hosts" section is referring to what are now called "deployments." This section
     also needs updating per the new UI.

  Hosts are not Visible
  +++++++++++++++++++++

  Problems with the {+magent+} detecting hosts can be caused by a
  few factors.

  **Host not added**: In |mms|, click :guilabel:`Deployment`,
  then click the :guilabel:`Processes` tab, then click the :guilabel:`Add
  Host` button. In the :guilabel:`New Host` window, specify the host type,
  internal hostname, and port. If appropriate, add the database username
  and password and whether or not |mms| should use SSL to connect with
  your {+magent+}. Note it is not necessary to restart your
  {+magent+} when adding (or removing) a host.

  **Accidental duplicate mongods** If you add the host after a crash and
  restart the {+magent+}, you might not see the hostname on the
  |mms| :guilabel:`Deployment` page. |mms| detects the host as a duplicate
  and suppresses its data. To reset, click :guilabel:`Settings`, then
  :guilabel:`Project Settings`, then the :guilabel:`Reset
  Duplicates` button.

  **{+magent+}s cannot detect hosts**: If your hosts exist across
  multiple data centers, make sure that all of your hosts can be discovered by
  all of your {+magent+}s.

  Cannot Delete a Host
  ++++++++++++++++++++

  In rare cases, the :program:`mongod` is brought down and the replica set
  is reconfigured. The down host cannot be deleted and returns an error
  message, "This host cannot be deleted because it is enabled for backup."
  Contact MongoDB Support for help in
  deleting these hosts.

---
ref: troubleshooting-faq-hosts-legacy
edition: cloud
content: ""
---
ref: troubleshooting-reset-2fa
edition: cloud
content: |

  Delete or Reset Two-Factor Authentication
  +++++++++++++++++++++++++++++++++++++++++

  To delete or reset two-factor authentication, go to
  `<https://cloud.mongodb.com/user/mfa/reset>`_. The
  reset button deletes your existing two-factor authentication settings
  and provides the option to create new ones.

---
ref: troubleshooting-reset-2fa
edition: onprem
content: |

  Delete or Reset Two-Factor Authentication
  +++++++++++++++++++++++++++++++++++++++++

  Contact your system administrator to remove or reset two-factor
  authentication on your account.

  For administrative information on two-factor authentication, see
  :doc:`/tutorial/manage-two-factor-authentication`.

---
ref: troubleshooting-ldap
edition: onprem
content: |

  LDAP
  ~~~~

  Forgot to Change MONGODB-CR Error
  +++++++++++++++++++++++++++++++++

  If your MongoDB deployment uses LDAP for authentication, and you find
  the following error message:

  .. code-block:: none

     You forget to change "MONGODB-CR" to "LDAP (PLAIN)" since they both
     take username/password.

  Then make sure that you specified the ``LDAP (PLAIN)`` as is the
  authentication mechanism for the {+magent+}.

---
ref: troubleshooting-ldap
edition: cloud
content: ""
---
ref: troubleshooting-system
edition: onprem
content: |

  System
  ------

  Logs Display OutOfMemoryError
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  If your logs display ``OutOfMemoryError``, ensure you are running with
  sufficient ulimits and RAM.

  Increase Ulimits
  ++++++++++++++++

  For the recommended ulimit setting, see the FAQ on
  :ref:`open-file-limits`.

  |mms| infers the host's ``ulimit`` setting using the total number of
  available and current connections. For more information about ulimits
  in MongoDB, see the :manual:`UNIX ulimit Settings </reference/ulimit/>`
  reference page.

  Ensure Sufficient RAM for All Components
  ++++++++++++++++++++++++++++++++++++++++

  - Ensure that each server has enough RAM for the components it runs. If
    a server runs multiple components, its RAM must be at least the sum
    of the required amount of RAM for **each** component.

    For the individual RAM requirements for the |application| server,
    |application| Database, Backup Daemon server, and Backup
    Database, see :doc:`/core/requirements`.

  Obsolete Config Settings
  ~~~~~~~~~~~~~~~~~~~~~~~~

  |mms| will fail to start if there are obsolete configuration settings
  set in the :doc:`conf-mms.properties </reference/configuration>` file.
  If there is an obsolete setting, the log lists an "Obsolete Setting"
  error as in the following:

  .. code-block:: sh

     [OBSOLETE SETTING] Remove "mms.multiFactorAuth.require" or replace "mms.multiFactorAuth.require" with "mms.multiFactorAuth.level".

  You will need to remove or replace the obsolete property in the
  ``conf-mms.properties`` file before you can start |mms|.

  Logs Display java.lang.OutOfMemoryError
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  If your logs display ``java.lang.OutOfMemoryError: Java heap 
  space``, you can adjust the Java Heap memory settings. Repeat the 
  following steps for every host running |a-mms| instance except 
  dedicated Backup Daemon hosts.

  .. tabs::

     tabs:
       - id: linux
         name: Linux Hosts
         content: |

           1. Open ``mms.conf`` in your preferred text editor.
           2. Find this line:

              .. code-block:: ini

                 JAVA_MMS_UI_OPTS="${JAVA_MMS_UI_OPTS} -d64 -Xss228k -Xmx4352m -Xms4352m -XX:NewSize=600m -Xmn1500m -XX:ReservedCodeCacheSize=128m -XX:-OmitStackTraceInFastThrow"

              The key values in this line are:

              .. list-table::
                 :widths: 10 40 40
                 :header-rows: 1
                 :stub-columns: 1

                 * - Key
                   - Value
                   - Default

                 * - ``-Xmx``
                   - Java Heap Maximum Memory
                   - 4,352 :abbr:`MB (Megabytes)` (``4352m``)
                 * - ``-Xms``
                   - Java Heap Starting Memory
                   - 4,352 :abbr:`MB (Megabytes)` (``4352m``)
                 * - ``-Xmn``
                   - Java Heap Young Generation Memory
                   - 1,500 :abbr:`MB (Megabytes)` (``1500m``)

              .. admonition:: Do not change other Java options
                 :class: warning

                 Changing any option values other than ``-Xmx``, 
                 ``-Xms``, and ``-Xmn`` could have an unexpected impact 
                 on the |application|. Do not change other values 
                 without consulting MongoDB Support.

           
           3. Change the ``-Xmx``, ``-Xms``, and ``Xmn`` values:
   
              - Change the ``-Xmx`` and ``-Xms`` values to a larger
                value. You should set both parameters to the same value
                to remove any performance impact from the VM constantly
                reclaiming memory from the heap.

              - Change the ``-Xmn`` value to a quarter of the value 
                that you specified for the ``-Xmx`` and ``-Xms`` keys.
              
              Specify the values as ``#k|m|g``: a number followed 
              by:

              - ``k`` (kilobytes),
              - ``m`` (megabytes), or 
              - ``g`` (gigabytes)

              .. example::

                 To set the Java Heap to 12 :abbr:`GB (Gigabytes)`, 
                 set the values to: ``-Xmx12g -Xms12g -Xmn3g``.

       - id: windows
         name: Windows Hosts
         content: |

           a. Click :guilabel:`Run` from the :guilabel:`Start` menu.
           b. Type ``regedit``.
           c. Click :guilabel:`OK`.
           d. If User Access Control asks :guilabel:`Do you want to 
              allow this app to make changes to your device?`, click 
              :guilabel:`Yes`. 
           e. Edit the following registry value:
             
              .. code-block:: registry

                 HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Apache Software Foundation\Procrun 2.0\MMS\Parameters\Java\Options

           f. Change the ``-Xmx`` and ``-Xms`` values  in the 
              :guilabel:`Options` multi-line registry key to a larger 
              value. Both parameters should be set to the same value to
              remove any performance impact from the VM constantly 
              reclaiming memory from the heap. The value of the 
              :guilabel:`Options` key should include the following:

              .. code-block:: ini
                 :copyable: false

                 -d64
                 -Xss228k
                 -Xmx4352m
                 -Xms4352m
                 -XX:NewSize=600m
                 -Xmn1500m
                 -XX:ReservedCodeCacheSize=128m
                 -XX:-OmitStackTraceInFastThrow"

              The key values in this block are:

              .. list-table::
                 :widths: 40 60
                 :stub-columns: 1

                 * - ``-Xmx``
                   - Java Heap Maximum Memory
                 * - ``-Xms``
                   - Java Heap Starting Memory

              By default, these values are both set to 
              4,352 :abbr:`MB (Megabytes)` (``4352m``).

              .. admonition:: Do not change other Java options
                 :class: warning

                 Changing any option values other than ``-Xmx`` and 
                 ``-Xms`` could have an unexpected impact on the 
                 |application|. Do not change other values without 
                 consulting MongoDB Support.

              The value is specified as ``#k|m|g``: a number followed 
              by 

              - ``k`` (kilobytes),
              - ``m`` (megabytes), or 
              - ``g`` (gigabytes)

              .. example::

                 To set the Java Heap to 10 :abbr:`GB (Gigabytes)`, 
                 set this value to: ``-Xmx10g -Xms10g``

  The optimal value for your |onprem| installation depends upon your
  |onprem| hosts' architecture: platform, physical memory, etc.
  The goal of heap tuning is to balance the time the
  :abbr:`JVM (Java Virtual Machine)` spends reclaiming memory from
  objects that are no longer running, also known as garbage 
  collection, and the frequency of garbage collection.

  Large heap sizes mean less frequent and slower garbage collection.
  Small heap sizes mean more frequent and faster garbage collection.
  
  .. important::

     Your Java Heap size must not be set to a value greater than the
     amount of physical memory in the |onprem| host or less than the
     default value of ``4352m`` (4,352 :abbr:`MB (Megabytes)`).

---
ref: troubleshooting-system
edition: cloud
content: ""

...
