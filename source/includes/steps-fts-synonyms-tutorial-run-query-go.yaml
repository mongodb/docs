stepnum: 1
title: "Run simple |fts| queries on the the ``movies`` collection."
ref: run-simple-query-go
content: |
  These code examples perform the following tasks:

  - Imports ``mongodb`` packages and dependencies.
  - Establishes a connection to your |service| cluster.
  - Iterates over the cursor to print the documents that match the 
    query.

  |fts| query results vary based on the type of word mapping defined in 
  the synonyms source collection. 

  .. tabs:: 

     .. tab:: equivalent Mapping Type
        :tabid: equivalent

        a. Create a file named ``synonyms-equivalent-query.go``. 
        #. Copy and paste the code example into the 
           ``synonyms-equivalent-query.go`` file.

           The code example contains the following stages:
           
           - :pipeline:`$search` stage to search the ``title`` field 
             for the word ``automobile`` and uses the synonym mapping 
             definition named ``transportSynonyms`` to search for words 
             configured as synonyms of the query word ``automobile`` in 
             the synonyms source collection named 
             ``transport_synonyms``. 
           - :pipeline:`$limit` stage to limit the output to 10 
             results. 
           - :pipeline:`$project` stage to exclude all fields except 
             ``title`` and add a field named ``score``.

           .. literalinclude:: /includes/fts-tutorial/synonyms/synonyms-equivalent-query.go
              :language: go
              :linenos:
              :emphasize-lines: 20

        #. .. include:: /includes/fact-fts-driver-connection-string.rst

        #. Run the following command to query your collection: 
  
           .. code-block:: sh 

              go run synonyms-equivalent-query.go

           When you run ``synonyms-equivalent-query.go``, the program 
           prints the following documents to your terminal:

           .. code-block:: none 
              :copyable: false 

              [{title Cars} {score 4.197734832763672}]
              [{title Planes, Trains & Automobiles} {score 3.8511905670166016}]
              [{title Car Wash} {score 3.39473032951355}]
              [{title Used Cars} {score 3.39473032951355}]
              [{title Blue Car} {score 3.39473032951355}]
              [{title Cars 2} {score 3.39473032951355}]
              [{title Stealing Cars} {score 3.39473032951355}]
              [{title Cop Car} {score 3.39473032951355}]
              [{title The Cars That Eat People} {score 2.8496146202087402}]
              [{title Khrustalyov, My Car!} {score 2.8496146202087402}]


           .. include:: /includes/extracts/fts-synonyms-tutorial-equivalent-query-output.rst

     .. tab:: explicit Mapping Type
        :tabid: explicit

        a. Create a file named ``synonyms-explicit-query.go``. 
        #. Copy and paste the code example into the 
           ``synonyms-explicit-query.go`` file.

           The code example contains the following stages:
           
           - :pipeline:`$search` stage to search the ``title`` field 
             for the word ``boat`` and uses the synonym mapping 
             definition named ``transportSynonyms`` to search for words 
             configured as synonyms of the query word ``boat`` in the 
             synonyms source collection named ``transport_synonyms``. 
           - :pipeline:`$limit` stage to limit the output to 10 
             results. 
           - :pipeline:`$project` stage to exclude all fields except 
             ``title`` and add a field named ``score``.

           .. literalinclude:: /includes/fts-tutorial/synonyms/synonyms-explicit-query.go
              :language: go
              :linenos:
              :emphasize-lines: 20

        #. .. include:: /includes/fact-fts-driver-connection-string.rst

        #. Run the following command to query your collection: 
  
           .. code-block:: sh 

              go run synonyms-explicit-query.go

           When you run ``synonyms-explicit-query.go``, the program 
           prints the following documents to your terminal:

           .. code-block:: none 
              :copyable: false 

              [{title Vessel} {score 5.373150825500488}]
              [{title Boats} {score 4.589139938354492}]
              [{title And the Ship Sails On} {score 4.3452959060668945}]
              [{title Broken Vessels} {score 4.3452959060668945}]
              [{title Sailing to Paradise} {score 4.3452959060668945}]
              [{title Boat People} {score 3.711261749267578}]
              [{title Boat Trip} {score 3.711261749267578}]
             [{title Three Men in a Boat} {score 3.1153182983398438}]
              [{title The Glass Bottom Boat} {score 3.1153182983398438}]
              [{title Jack Goes Boating} {score 3.1153182983398438}]


           .. include:: /includes/extracts/fts-synonyms-tutorial-explicit-query-output.rst

---
stepnum: 2
title: "Run advanced |fts| queries if you created the index that 
       contains multiple synonym mappings."
ref: run-advanced-query-go
content: |
  These code examples perform the following tasks:

  - Imports ``mongodb`` packages and dependencies.
  - Establishes a connection to your |service| cluster.
  - Iterates over the cursor to print the documents that match the 
    query.

  |fts| query results vary based on the type of word mapping defined in 
  the synonyms source collection. 

  .. tabs:: 

     .. tab:: equivalent Mapping Type
        :tabid: equivalent

        a. Create a file named ``synonyms-equivalent-query.go``. 
        #. Copy and paste the code example into the 
           ``synonyms-equivalent-query.go`` file.

           The code example contains the following stages:
           
           - :pipeline:`$search` stage to search the ``title`` field 
             for the word ``automobile`` and uses the synonym mapping 
             definition named ``transportSynonyms`` to search for words 
             configured as synonyms of the query word ``automobile`` in 
             the synonyms source collection named 
             ``transport_synonyms``. The query searches the ``title`` 
             field for the word ``attire`` also and  uses the synonym 
             mapping definition named ``attireSynonyms`` to search for 
             words configured as synonyms of the query word ``attire`` 
             in the synonyms source collection named 
             ``attire_synonyms``. 
           - :pipeline:`$limit` stage to limit the output to 10 
             results. 
           - :pipeline:`$project` stage to exclude all fields except 
             ``title`` and add a field named ``score``.

           .. literalinclude:: /includes/fts-tutorial/synonyms/equivalent-advanced-query.go
              :language: go
              :linenos:
              :emphasize-lines: 20

        #. .. include:: /includes/fact-fts-driver-connection-string.rst

        #. Run the following command to query your collection: 
  
           .. code-block:: sh 

              go run synonyms-equivalent-query.go

           When you run ``synonyms-equivalent-query.go``, the program 
           prints the following documents to your terminal:

           .. code-block:: none 
              :copyable: false 

              [{title The Dress} {score 4.812004089355469}]
              [{title Cars} {score 4.197734832763672}]
              [{title Dressed to Kill} {score 3.891493320465088}]
              [{title 27 Dresses} {score 3.891493320465088}]
              [{title Planes, Trains & Automobiles} {score 3.8511905670166016}]
              [{title Car Wash} {score 3.39473032951355}]
              [{title Used Cars} {score 3.39473032951355}]
              [{title Blue Car} {score 3.39473032951355}]
              [{title Cars 2} {score 3.39473032951355}]
              [{title Stealing Cars} {score 3.39473032951355}]


           .. include:: /includes/extracts/fts-synonyms-tutorial-equivalent-advanced-query-output.rst

     .. tab:: explicit Mapping Type
        :tabid: explicit

        a. Create a file named ``synonyms-explicit-query.go``. 
        #. Copy and paste the code example into the 
           ``synonyms-explicit-query.go`` file.

           The code example contains the following stages:
           
           - :pipeline:`$search` stage to search the ``title`` field 
             for the word ``boat`` and uses the synonym mapping 
             definition named ``transportSynonyms`` to search for words 
             configured as synonyms of the query word ``boat`` in the 
             synonyms source collection named ``transport_synonyms``. 
             The query searches the ``title`` field for the word 
             ``hat`` also and uses the synonym mapping definition named 
             ``attireSynonyms`` to search for words configured as 
             synonyms of the query word ``hat`` in the synonyms source 
             collection named ``attire_synonyms``.
           - :pipeline:`$limit` stage to limit the output to 10 
             results. 
           - :pipeline:`$project` stage to exclude all fields except 
             ``title`` and add a field named ``score``.

           .. literalinclude:: /includes/fts-tutorial/synonyms/explicit-advanced-query.go
              :language: go
              :linenos:
              :emphasize-lines: 20

        #. .. include:: /includes/fact-fts-driver-connection-string.rst

        #. Run the following command to query your collection: 
  
           .. code-block:: sh 

              go run synonyms-explicit-query.go

           When you run ``synonyms-explicit-query.go``, the program 
           prints the following documents to your terminal:

           .. code-block:: none 
              :copyable: false 

              [{title Fedora} {score 5.673145294189453}]
              [{title Vessel} {score 5.373150825500488}]
              [{title Boats} {score 4.589139938354492}]
              [{title And the Ship Sails On} {score 4.3452959060668945}]
              [{title Broken Vessels} {score 4.3452959060668945}]
              [{title Sailing to Paradise} {score 4.3452959060668945}]
              [{title Top Hat} {score 4.066137313842773}]
              [{title A Hatful of Rain} {score 4.066137313842773}]
              [{title Boat People} {score 3.711261749267578}]
              [{title Boat Trip} {score 3.711261749267578}]


           .. include:: /includes/extracts/fts-synonyms-tutorial-explicit-advanced-query-output.rst

...
