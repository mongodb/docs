================================
MongoDB\\Collection::aggregate()
================================

.. meta::
   :description: Execute an aggregation framework pipeline operation on a collection with the MongoDB PHP Library, with various customizable options.


.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. phpmethod:: MongoDB\Collection::aggregate()

   Executes an :manual:`aggregation framework pipeline
   </core/aggregation-pipeline>` operation on the collection.

   .. code-block:: php

      function aggregate(
          array|Pipeline $pipeline,
          array $options = []
      ): Traversable

Parameters
----------

``$pipeline`` : array|Pipeline
  Specifies an :manual:`aggregation pipeline </core/aggregation-pipeline>`
  operation. You can include aggregation stages in a
  ``MongoDB\Builder\Pipeline`` instance or in an array.

``$options`` : array
  An array specifying the desired options.

  .. list-table::
     :header-rows: 1
     :widths: 20 20 80

     * - Name
       - Type
       - Description

     * - allowDiskUse
       - boolean
       - Enables writing to temporary files. When set to ``true``, aggregation
         stages can write data to the ``_tmp`` sub-directory in the ``dbPath``
         directory.

     * - batchSize
       - integer
       - Specifies the batch size for the cursor, which will apply to both the
         initial ``aggregate`` command and any subsequent ``getMore`` commands.
         This determines the maximum number of documents to return in each
         response from the server.

         A batchSize of ``0`` is special in that and will only apply to the
         initial ``aggregate`` command; subsequent ``getMore`` commands will use
         the server's default batch size. This may be useful for quickly
         returning a cursor or failure from ``aggregate`` without doing
         significant server-side work.

     * - bypassDocumentValidation
       - boolean
       - If ``true``, allows the write operation to circumvent document level
         validation. Defaults to ``false``.

         This only applies when using the :ref:`$out <agg-out>` and
         :ref:`$out <agg-merge>` stages.

     * - codec
       - MongoDB\\Codec\\DocumentCodec
       - .. include:: /includes/extracts/collection-option-codec.rst

         .. versionadded:: 1.17

     * - collation
       - array|object
       - .. include:: /includes/extracts/collection-option-collation.rst

     * - comment
       - mixed
       - .. include:: /includes/extracts/common-option-comment.rst

         .. include:: /includes/extracts/common-option-comment-string-before-6.0.rst

         .. versionadded:: 1.3

     * - explain
       - boolean
       - Specifies whether or not to return the information on the processing of
         the pipeline.

         .. versionadded:: 1.4

     * - hint
       - string|array|object
       - .. include:: /includes/extracts/common-option-hint.rst

         .. versionadded:: 1.3

     * - let
       - array|object
       - .. include:: /includes/extracts/common-option-let.rst

         .. versionadded:: 1.9

     * - maxTimeMS
       - integer
       - .. include:: /includes/extracts/common-option-maxTimeMS.rst

     * - readConcern
       - :php:`MongoDB\Driver\ReadConcern <class.mongodb-driver-readconcern>`
       - .. include:: /includes/extracts/collection-option-readConcern.rst

         .. include:: /includes/extracts/common-option-readConcern-transaction.rst

     * - readPreference
       - :php:`MongoDB\Driver\ReadPreference <class.mongodb-driver-readpreference>`
       - .. include:: /includes/extracts/collection-option-readPreference.rst

     * - session
       - :php:`MongoDB\Driver\Session <class.mongodb-driver-session>`
       - .. include:: /includes/extracts/common-option-session.rst

         .. versionadded:: 1.3

     * - typeMap
       - array
       - .. include:: /includes/extracts/collection-option-typeMap.rst

     * - writeConcern
       - :php:`MongoDB\Driver\WriteConcern <class.mongodb-driver-writeconcern>`
       - .. include:: /includes/extracts/collection-option-writeConcern.rst

         .. include:: /includes/extracts/common-option-writeConcern-transaction.rst

         This only applies when a :ref:`$out <agg-out>` or
         :ref:`$merge <agg-merge>` stage is specified.

Return Values
-------------

A :php:`MongoDB\Driver\Cursor <class.mongodb-driver-cursor>` or
:php:`ArrayIterator <arrayiterator>` object. In both cases, the return value
will be :php:`Traversable <traversable>`.

Errors/Exceptions
-----------------

.. include:: /includes/extracts/error-unexpectedvalueexception.rst
.. include:: /includes/extracts/error-unsupportedexception.rst
.. include:: /includes/extracts/error-invalidargumentexception.rst
.. include:: /includes/extracts/error-driver-runtimeexception.rst

.. _php-coll-agg-method-behavior:

Behavior
--------

:phpmethod:`MongoDB\Collection::aggregate()`'s returns a
:php:`MongoDB\Driver\Cursor <class.mongodb-driver-cursor>` object.

Examples
--------

The following aggregation example uses a collection called ``names`` and groups
the ``first_name`` field together, counts the total number of results in each
group, and sorts the results by name.

.. code-block:: php

   <?php

   $collection = (new MongoDB\Client)->test->names;

   $cursor = $collection->aggregate(
       [
           ['$group' => ['_id' => '$first_name', 'name_count' => ['$sum' => 1]]],
           ['$sort' => ['_id' => 1]],
       ]
   );

See Also
--------

- :ref:`php-aggregation`
- :phpmethod:`MongoDB\Database::aggregate()`
- :manual:`aggregate </reference/command/aggregate>` command reference in the
  MongoDB manual
- :manual:`Aggregation Pipeline </core/aggregation-pipeline>` documentation in
  the MongoDB Manual
