============================
$dateFromParts (aggregation)
============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol
   
Definition
----------

.. expression:: $dateFromParts

   .. versionadded:: 3.6

   Constructs and returns a date object in ISO format given the date's
   constituent properties.
   
   The :expression:`$dateFromParts` expression has the following syntax:
   
   .. code-block:: javascript

      { 
          $dateFromParts : {
              'year': <year>, 'month': <month>, 'day': <day>,
              'hour': <hour>, 'minute': <minute>, 'second': <second>,
              'milliseconds': <ms>, 'timezone': <tzExpression>
          }
      }

   You can also specify your constituent date fields in ISO format using
   the following syntax:
   
   .. code-block:: javascript
   
      {
          $dateFromParts : {
              'isoYear': <year>, 'isoWeekYear': <month>, 'isoDayOfWeek': <day>,
              'hour': <hour>, 'minute': <minute>, 'second': <second>,
              'milliseconds': <ms>, 'timezone': <tzExpression>
          }
      }
	  
   The :pipeline:`$dateFromParts` takes a document with the following fields:
   
   .. list-table::
      :header-rows: 1
      :widths: 20 20 50 10

      * - Field
        - Required/Optional
        - Description
        - Possible Values

      * - ``year``
        - Required if not using ``isoYear``
        - Year (4 digits, zero padded)
        - ``0000``-``9999``

      * - ``isoYear``
        - Required if not using ``year``
        - Year in ISO 8601 format
        - ``0000``-``9999``
		
      * - ``month``
        - Optional
        - Month (2 digits, zero padded). Defaults to ``01``.
        - ``01``-``12``
		
      * - ``isoWeekYear``
        - Optional
        - Week of year (2 digits, zero padded). Defaults to ``01``.
        - ``01``-``53``

      * - ``day``
        - Optional
        - Day of month (2 digits, zero padded) Defaults to ``01``.
        - ``01``-``31``

      * - ``isoDayOfWeek``
        - Optional
        - Day of week (1-Sunday, 7-Saturday). Defaults to ``1``.
        - ``1``-``7``

      * - ``hour``
        - Optional
        - Hour (2 digits, zero padded, 24-hour clock). Defaults to ``00``.
        - ``00``-``23``

      * - ``minute``
        - Optional
        - Minute (2 digits, zero padded). Defaults to ``00``.
        - ``00``-``59``

      * - ``second``
        - Optional
        - Second (2 digits, zero padded). Defaults to ``00``.
        - ``00``-``60``

      * - ``millisecond``
        - Optional
        - Millisecond (3 digits, zero padded). Defaults to ``000``.
        - ``000``-``999``

      * - ``timezone``
        - Optional
        - ``<timezone>`` can be any :ref:`expression
          <aggregation-expressions>` that evaluates to a string whose
          value is either:

          - an `Olson Timezone Identifier
            <https://en.wikipedia.org/wiki/List_of_tz_database_time_zones>`_, 
            such as ``"Europe/London"`` or ``"America/New_York"``, or

          - a UTC offset in the form:

            - ``+/-[hh]:[mm]``, e.g. ``"+04:45"``, or

            - ``+/-[hh][mm]``, e.g. ``"-0530"``, or

            - ``+/-[hh]``, e.g. ``"+03"``.

          For more information on expressions, see
          :ref:`aggregation-expressions`.
        - Timezone expression
		
   .. important::
       You cannot combine the use of ISO format and non-ISO format
       fields when constructing your :expression:`$dateFromParts` input
       document.

Example
-------
The following aggregation uses :expression:`$dateFromParts` to
construct three date objects from the provided input fields:

.. cssclass:: copyable-code

.. code-block:: javascript

   db.sales.aggregate( [
   {
      $project: {
         date: {
            $dateFromParts: {
               'year' : 2017, 'month' : 2, 'day': 8, 'hour' : 12
            }
         },
         date_iso: {
            $dateFromParts: {
               'isoYear' : 2017, 'isoWeekYear' : 6, 'isoDayOfWeek': 3, 'hour' : 12
            }
         },
         date_timezone: {
            $dateFromParts: {
               'year' : 2016, 'month' : 12, 'day': 31, 'hour' : 23,
               'minute': 46, 'second': 12, 'timezone': "America/New_York"
            }
         }
      }
   }
   ] )

The operation returns the following result for each document in the
``sales`` collection.

.. code-block:: javascript

   {
     "_id" : ObjectId("<id>"),
     "date" : ISODate("2017-02-08T12:00:00Z"),
     "date_iso" : ISODate("2017-02-08T12:00:00Z"),
     "date_timezone" : ISODate("2017-01-01T04:46:12Z")
   }
   
   