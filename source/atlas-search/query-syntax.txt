.. _query-syntax-ref:

====================================
Choose an Aggregation Pipeline Stage
====================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. important:: 

   Looking for ``$searchBeta``? Use ``$search`` instead, the official 
   aggregation stage for running search queries. 

|fts| queries take the form of an :manual:`aggregation pipeline stage 
</aggregation>`. This page describes the following pipeline stages: 

- :pipeline:`$search`
- :pipeline:`$searchMeta`

``$search``
-----------

Definition
~~~~~~~~~~

The :pipeline:`$search` stage performs a full-text search on the 
specified field or fields which must be covered by an |fts| index.

.. pipeline:: $search

   A ``$search`` pipeline stage has the following prototype form:

   .. code-block:: json

      {
        $search: {
          "index": "<index-name>",
          "<operator-name>"|"<collector-name>": {
            <operator-specification>|<collector-specification>
          },
          "highlight": {
            <highlight-options>
          },
          "count": {
            <count-options>
          },
          "returnStoredSource": true | false 
        }
      }

Fields
~~~~~~

The ``$search`` stage takes a document with the following fields: 

.. list-table:: 
   :header-rows: 1
   :widths: 10 15 15 70

   * - Field 
     - Type 
     - Necessity 
     - Description

   * - ``<collector-name>``
     - document 
     - Conditional
     - Name of the :ref:`collector <collectors-ref>` to use with the 
       query. You can provide a document that contains the 
       collector-specific options as the value for this field. Either 
       this or ``<operator-name>`` is required. 

   * - ``count``
     - document 
     - Optional
     - Document that specifies the :ref:`count <count-ref>` options for 
       retrieving a count of the results. To learn more, see 
       :ref:`count-ref`.

   * - ``highlight`` 
     - document 
     - Optional 
     - Document that specifies the :ref:`highlight-ref` options for 
       displaying search terms in their original context.

   * - ``index`` 
     - string 
     - Optional 
     - Name of the |fts| index to use. If omitted, defaults to 
       ``default``.

       .. include:: /includes/default-fts-index-name.rst

   * - ``<operator-name>``
     - document 
     - Conditional
     - Name of the :ref:`operator <operators-ref>` to search with. You 
       can provide a document that contains the operator-specific 
       options as the value for this field. Either this or 
       ``<collector-name>`` is required.

   * - ``returnStoredSource``
     - boolean 
     - Optional
     - .. note:: 

          .. include:: /includes/fact-fts-stored-source-preview.rst
     
       Flag that specifies whether to perform a full document lookup
       on the backend database or return only stored source fields  
       directly from |fts|. If omitted, defaults to ``false``. To learn 
       more, see :ref:`fts-return-stored-source-option`. 

Behavior
~~~~~~~~

:pipeline:`$search` must be the first stage of any pipeline it appears 
in. :pipeline:`$search` cannot be used in:

- a :manual:`view definition</core/views>`
- a :pipeline:`$lookup subpipeline <$lookup>`
- a :pipeline:`$facet` pipeline stage

Aggregation Variable 
~~~~~~~~~~~~~~~~~~~~

.. note:: Preview

   .. include:: /includes/fact-fts-facets-preview.rst

:pipeline:`$search` returns only the results of your query. The 
metadata results of your :pipeline:`$search` query are saved in the 
``$$SEARCH_META`` aggregation variable. You can use the 
``$$SEARCH_META`` variable to view the metadata results for your 
:pipeline:`$search` query. 
   
.. example:: 

   Suppose the following index on the ``sample_mflix.movies`` 
   collection.

   .. code-block:: json 

      {
        "mappings": {
          "dynamic": false,
          "fields": {
            "released": {
              "type": "date"
            }
          }
        }
      }

   The following query searches for movies released near September 
   01, 2011 using the :pipeline:`$search` stage. The query includes 
   a:
   
   - :pipeline:`$project` stage to exclude all fields in the documents 
     except ``title`` and ``released``. 
   - :pipeline:`$facet` stage that outputs a: 
   
     - ``docs`` field with an array of the top ``5`` search results
     - ``meta`` field with the value of ``$$SEARCH_META`` variable

   .. code-block:: json

      db.movies.aggregate([
        {
          "$search": {
            "near": {
              "path": "released",
              "origin": ISODate("2011-09-01T00:00:00.000+00:00"),
              "pivot": 7776000000
            }
          }
        },
        {
          $project: {
            "_id": 0,
            "title": 1,
            "released": 1
          }
        },
        { 
          "$facet": {
            "docs": [
              {"$limit": 5}
            ],
            "meta": [
              {"$replaceWith": "$$SEARCH_META"}, 
              {"$limit": 1}
            ] 
          }
        } 
      ])

   The query returns the following results:

   .. code-block:: json 
      :copyable: false 

      { 
        "docs" : [ 
          { 
            "title" : "Submarino", 
            "released" : ISODate("2011-09-01T00:00:00Z") 
          }, 
          { 
            "title" : "Devil's Playground", 
            "released" : ISODate("2011-09-01T00:00:00Z") 
          }, 
          { 
            "title" : "Bag It", 
            "released" : ISODate("2011-09-01T00:00:00Z") 
          }, 
          { 
            "title" : "Dos", 
            "released" : ISODate("2011-09-01T00:00:00Z") 
          }, 
          { 
            "title" : "We Were Here", 
            "released" : ISODate("2011-09-01T00:00:00Z") 
          }
        ], 
        "meta" : [ 
          { "count" : { "lowerBound" : NumberLong(17373) } } 
        ] 
      }

   To learn more about the ``$$SEARCH_META`` variable and its usage, 
   see: 

   - :ref:`facet <fts-facet-aggregation-variable>`
   - :ref:`count <fts-count-aggregation-variable>`

``$searchMeta``
---------------

.. note:: Preview

   .. include:: /includes/fact-fts-facets-preview.rst

Definition
~~~~~~~~~~

The :pipeline:`$searchMeta` stage returns different :ref:`types of 
metadata result <fts-metadata-results>` documents.

.. pipeline:: $searchMeta

   A ``$searchMeta`` pipeline stage has the following prototype form: 

   .. code-block:: json

      {
        $searchMeta: {
          "index": "<index-name>",
          "<collector-name>"|"<operator-name>": {
            <collector-specification>|<operator-specification>
          },
          "count": {
            <count-options>
          }
        }
      }
  
Fields
~~~~~~

The ``$searchMeta`` stage takes a document with the following fields: 

.. list-table:: 
   :header-rows: 1
   :widths: 10 15 15 70

   * - Field 
     - Type 
     - Necessity 
     - Description

   * - ``<collector-name>``
     - document 
     - Conditional
     - Name of the :ref:`collector <collectors-ref>` to use with the 
       query. You can provide a document that contains the 
       collector-specific options as the value for this field. Value 
       must be ``facet`` to retrieve a mapping of the defined facet 
       names to an array of buckets for that facet. To learn more, see  
       :ref:`fts-facet-ref`. You must specify this or 
       ``<operator-name>``.

   * - ``count``
     - document 
     - Optional
     - Document that specifies the :ref:`count <count-ref>` options for 
       retrieving a count of the results. To learn more, see 
       :ref:`count-ref`.

   * - ``index`` 
     - string 
     - Optional 
     - Name of the |fts| index to use. If omitted, defaults to 
       ``default``.

   * - ``<operator-name>``
     - document 
     - Conditional
     - Name of the :ref:`operator <operators-ref>` to search with. You 
       can provide a document that contains the operator-specific 
       options as the value for this field. You must specify 
       this or ``<collector-name>``. :pipeline:`$searchMeta` 
       returns the default ``count`` metadata only.

   .. _fts-metadata-results:

Metadata Result Types 
~~~~~~~~~~~~~~~~~~~~~

The structure of the metadata results document that is returned by 
the :pipeline:`$searchMeta` stage varies based on the type of 
results. |fts| supports the following result types:

.. list-table::
   :header-rows: 1 
   :widths: 20 80
   
   * - Type
     - Result Structure

   * - ``count``
     - The count result included in the results indicate whether the 
       count returned in the results is a total count of the search 
       results, or a lower bound. To learn more, see 
       :ref:`count-results`.

   * - ``facet``
     - The result to a facet query is a mapping of the defined facet 
       names to an array of buckets for that facet. To learn more, 
       see :ref:`fts-facet-results`.

Troubleshoot Errors 
-------------------

Initial Sync
~~~~~~~~~~~~

|fts| can't perform ``$search`` queries against an |service| {+cluster+} during
an initial sync process. An initial sync process occurs when you create a new
{+cluster+} or perform certain upgrades on a {+cluster+}. The process includes the
following steps:
    
1. The ``mongod`` performs an initial sync.
2. The ``mongot`` performs an initial sync, which rebuilds the search indexes.

As a result, you may receive an error when running a ``$search`` query against a
node that you recently created or upgraded. Try your query again
after the initial syncs complete and ``mongot`` rebuilds the indexes. You can
check the status of the ``mongot`` initial sync using the following steps:

1. Click the :guilabel:`Search` tab for your {+database-deployment+}.
2. In the index's ``Status`` column, click :guilabel:`View Status Details`. 
3. Check the state of the index for the node. During ``mongot`` initial sync, the status
   is ``INITIAL SYNC``. When ``mongot`` finishes rebuilding the index, the status
   is ``ACTIVE``.

``mongot`` Process Not Installed or Running
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following error is returned if you run ``$search`` queries when 
the |fts| ``mongot`` process isn't installed or running:

.. code-block:: shell 
   :copyable: false 

   MongoError: Remote error from mongot :: caused by :: Error connecting to localhost:28000.

The ``mongot`` process is installed only when the first |fts| index is 
defined. If you don't have any |fts| index in your |service| cluster, 
create at least one |fts| index to resolve this error. 

.. seealso:: 

   - :ref:`ref-index-definitions`
   - :ref:`ref-create-index`
   