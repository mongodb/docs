
#! /bin/bash

# Use colors in terminal messages: https://notesontech.com/bash-text-formatting/
### Text formatting ###

CLEAR="\x1B[0m"

# Text settings.
BOLD="\x1B[1m"

# Text color.
RED="\x1B[31m"
GREEN="\x1B[32m"
YELLOW="\x1B[33m"

# Background color with bold font.
RED_BG_BOLD="\x1B[1;41m"
GREEN_BG_BOLD="\x1B[1;42m"

### End of text formatting ###

### Work with flags ###
while getopts ":f:" option; do
  case $option in
    f)
      FILE_NAME="$OPTARG"
      ;;
    *)
      echo "Usage: $0 [-f FILE_NAME]"
      exit 1
      ;;
  esac
done

PROJECT=$(git rev-parse --show-toplevel)
OUTPUT_DIRECTORY=$PROJECT/source/examples/generated/dotnet
INPUT_FILE=$(find $PROJECT/examples/dotnet/Examples -type f -print | grep -i $FILE_NAME)
FILE_EXTENSION="${FILE_NAME##*.}"
BASE_FILE_NAME="${FILE_NAME%.*}"

if [[ -n $INPUT_FILE ]]
then
# Bluehawk a single file
echo "${GREEN_BG_BOLD} Bluehawk: ${CLEAR} ${GREEN}Generate samples from '$FILE_NAME' ${CLEAR}"

npx bluehawk snip $INPUT_FILE -o $OUTPUT_DIRECTORY

# TODO: There's probably a more idiomatic way to do this results filtering.
GENERATED_FILES=$(find $OUTPUT_DIRECTORY -type f | grep -i $BASE_FILE_NAME)
FILTERED_FILES=$(find $GENERATED_FILES -type f -not -name "*.rst")
FILES_TO_REMOVE=$(find $FILTERED_FILES -type f -name "*.$FILE_EXTENSION")

echo "
${YELLOW}Removing matching non-.rst snippet files generated by Bluehawk:${CLEAR}
$FILES_TO_REMOVE"
echo "
${YELLOW}From:${CLEAR} $OUTPUT_DIRECTORY"

# Delete matching non-.rst snippet file generated by Bluehawk.
find $FILTERED_FILES -type f -name "*.$FILE_EXTENSION" -delete

echo "
${GREEN_BG_BOLD} Bluehawk: ${CLEAR} Complete!"
else
echo -e "${RED_BG_BOLD} Couldn't find '${FILE_NAME}'."
fi
