---
ref: view-project-nav-old-backup-page-collection
stepnum: 1
inherit:
  file: steps-source-project-nav.yaml
  ref: project-nav-old-backup-page
---
ref: select-snapshot-query-collection
source:
  file: steps-restore-db-from-queryable-backup.yaml
  ref: select-snapshot-query

---
ref: open-backup-tunnel-collection
source:
  file: steps-restore-db-from-queryable-backup.yaml
  ref: open-backup-tunnel
---
title: Use ``mongodump`` to export a single collection from the queryable backup.
ref: dump-collection
content: |

   To export the data for a collection:
      Include the following options to connect to the tunnel:

      - ``--port`` set to the port for the tunnel.

      - ``--db`` set to the name of the database to export.

      - ``--collection`` set to the name of the
        collection to export.

      - ``--out`` set to an empty directory to
        output the data dump.

        .. important::

           Ensure that the user running
           :binary:`mongodump` can write
           to the specified directory.

      
      .. code-block:: none

         mongodump --port <port for tunnel> --db <single-database> --collection <collection-name> --out <data-dump-path>

      For example, to connect to a tunnel running on port ``27020`` to
      dump out data from the ``restaurants`` collection from ``test``
      database to :file:`/mydata/restoredata/` directory:

      .. code-block:: sh

         mongodump --port 27020 --db test --collection restaurants --out /mydata/restoredata/

      :binary:`mongodump` outputs the
      ``restaurants`` collection data into the
      :file:`/mydata/restoredata/test/restaurants.bson` file.
---
title: "Use ``mongorestore`` to restore the single collection."
ref: import-collection
content: |

   To restore a single collection:
      Include the following
      :binary:`mongorestore` options:

      .. note::

         To restore to an |service| cluster, we recommend you connect with a DNS seed list using the ``--uri`` option.

      - ``--uri`` set to the connection string for the destination cluster.

      - ``--db`` set to the name of the destination database.

      - ``--collection`` set to the name of the destination collection.

      Optionally, you can include the ``--drop`` option to drop the
      collection in the destination cluster if the collection already
      exists.

    
   .. code-block:: sh

      mongorestore --uri "mongodb+srv://username:password@cluster0.example.mongodb.net" --db <destination-database> --collection <destination-collection> <data-dump-path/dbname/collection.bson> --drop

   For example, to restore from the
   :file:`/mydata/restoredata/test/restaurants.bson` data file to a new
   collection ``rest2`` in the ``test2`` database:

   .. code-block:: sh

      mongorestore --uri "mongodb+srv://username:password@cluster0.example.mongodb.net" --db test2 --collection rest2 /mydata/restoredata/test/restaurants.bson --drop

---
ref: terminate-instance-collection
source:
  file: steps-restore-db-from-queryable-backup.yaml
  ref: terminate-instance

---
ref: restart-application-collection
source:
  file: steps-restore-db-from-queryable-backup.yaml
  ref: restart-application
...
