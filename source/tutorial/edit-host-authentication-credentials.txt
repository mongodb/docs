==================================================
Configure MongoDB Authentication and Authorization
==================================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Your MongoDB deployments can use the access control mechanisms 
described here. You specify the authentication settings when
:doc:`adding </tutorial/add-existing-mongodb-processes>` the
deployment. You can also edit the security settings after adding a
deployment, as described on this page.

If a deployment uses access control, the Monitoring and Backup Agents
must authenticate to the deployment as MongoDB users with appropriate
access. If you are using Automation to manage your MongoDB deployments,
you will enable and configure authentication through the |application|.

If you are not using Automation to manage your MongoDB deployments,
you must configure the Monitoring and Backup agents manually.

Considerations
--------------

With access control enabled, you must 
:doc:`create MongoDB users </tutorial/manage-mongodb-users>` so that
clients can access your databases.

If you are using Automation to manage your MongoDB deployments, |mms|
automatically creates users for the agents when you enable access
control. The user created for the {+aagent+} has privileges to
administrate and manage other users. As such, the first user you create
can have any role.

When you select an Authentication Mechanism for your |mms| group, this
enables access control for all the deployments in your |mms| group.

.. admonition:: Recommendation

   To avoid inconsistencies, use the |mms| interface to manage users
   and roles for MongoDB deployments.

For more information on MongoDB access control, see the
:manual:`Authentication </core/authentication>` and
:manual:`Authorization </core/authorization>` pages in the MongoDB
manual.

.. _enable-authentication:

Access Control Mechanisms
-------------------------

.. _mongodb-cr:

``SCRAM-SHA-1`` and ``SCRAM-SHA-256``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB supports the following implementations of challenge-response 
mechanisms for authenticating users with passwords.

In the following table, the default authentication mechanism for the 
release series is marked with :icon:`check-square` and acceptable 
authentication mechanisms are marked with :icon:`check-circle`.

.. list-table::
   :widths: 40 20 20 20
   :header-rows: 1

   * - MongoDB Release Series
     - :v3.6:`MONGODB-CR </core/security-mongodb-cr>`
     - :ref:`SCRAM-SHA-1 <scram-mechanisms>` 
     - :ref:`SCRAM-SHA-256 <scram-mechanisms>`

   * - 4.0.x
     - 
     - :icon:`check-circle`
     - :icon:`check-square`

   * - 3.6.x
     - :icon:`check-circle`
     - :icon:`check-square`
     - 

   * - 3.4.x
     - :icon:`check-circle`
     - :icon:`check-square`
     - 

   * - 3.2.x
     - :icon:`check-circle`
     - :icon:`check-square`
     - 

   * - 3.0.x
     - :icon:`check-circle`
     - :icon:`check-square`
     - 

   * - Pre-3.0
     - :icon:`check-square`
     - 
     - 

.. cond:: onprem

   .. include:: /includes/fact-no-support-for-scram-sha-256-on-backing-databases.rst

To enable ``SCRAM-SHA-1`` or ``SCRAM-SHA-256`` when using Automation,
see :doc:`/tutorial/enable-mongodbcr-authentication-for-group`.

To configure the agents to authenticate as users with the proper access
**without** Automation, see:

- :doc:`/tutorial/configure-monitoring-agent-for-cr`

- :doc:`/tutorial/configure-backup-agent-for-cr`

|ldap|
~~~~~~

:product:`MongoDB Enterprise <mongodb-enterprise>` supports proxy
authentication of users. This allows administrators to configure a
MongoDB cluster to authenticate users by proxying authentication
requests to a specified |ldap| service.

To enable |ldap| for your |mms| project when using Automation, see
:doc:`/tutorial/enable-ldap-authentication-for-group`.

To configure the agents to authenticate as users with the proper access
**without** Automation, see:

- :doc:`/tutorial/configure-monitoring-agent-for-ldap`

- :doc:`/tutorial/configure-backup-agent-for-ldap`

Kerberos
~~~~~~~~

:product:`MongoDB Enterprise <mongodb-enterprise>` supports
authentication using a Kerberos service. Kerberos is an |ietf|
(:rfc:`RFC 4120 <4120>`) standard authentication protocol for large
client/server systems.

To use MongoDB with Kerberos, you must have a properly configured
Kerberos deployment, configure *Kerberos service principals* for
MongoDB, and add the *Kerberos user principal*. 

If you are using Automation, see
:doc:`/tutorial/enable-kerberos-authentication-for-group`

To create a Kerberos Principal and the associated MongoDB user, and to
configure the Monitoring and Backup Agents to authenticate as users
with the proper access **without** Automation, see:

- :doc:`/tutorial/configure-monitoring-agent-for-kerberos`

- :doc:`/tutorial/configure-backup-agent-for-kerberos`

Specify Kerberos as the MongoDB process's authentication mechanism when
:doc:`adding </tutorial/add-existing-mongodb-processes>`
or :ref:`editing <edit-host-credentials>` the deployment.

x.509
~~~~~

MongoDB supports x.509 certificate authentication for use with a secure
:doc:`TLS/SSL connection </tutorial/enable-ssl-for-a-deployment>`. 
The x.509 client authentication allows clients to
authenticate to servers with certificates rather than with a username
and password.

To enable x.509 authentication for your |mms| project when using
Automation, see :doc:`/tutorial/enable-x509-authentication-for-group`.

.. TODO: add links to the manual tutorial once it's written

.. note:: 

   |mms| does **not** currently support :manual:`using x.509
   certificates for membership authentication
   </tutorial/configure-x509-member-authentication/>`.

.. _edit-host-credentials:

Edit Host Credentials
---------------------

If |mms| manages your deployment, you can configure the deployment to
use the authentication mechanism from the |mms| interface. The
:doc:`/tutorial/nav/access-control-mongodb` tutorials describe how to
configure an existing deployment to use each authentication mechanism.

If your deployment is *not* managed by |mms|, manually configure the
Monitoring and Backup agents with the proper credentials *before* you
edit the host's authentication credentials.

.. seealso:: 
   :doc:`/tutorial/nav/configure-monitoring-agent` and
   :doc:`/tutorial/nav/configure-backup-agent` describe how to
   configure the Monitoring and Backup agents for access control.

Once the Monitoring and Backup agents are correctly configured, you can
edit the deployment's authentication credentials using the following
procedures.

Edit Credentials for Monitoring a Host
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. important:: 
   Before editing these credentials, configure the Monitoring Agent
   with the proper credentials. See
   :doc:`/tutorial/nav/configure-monitoring-agent`.

To edit the credential for Monitoring:

.. include:: /includes/steps/monitoring-agent-edit-host-credentials.rst

Edit Credentials for Backing up a Host
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. important:: 
   Before editing these credentials, configure the Backup Agent with
   the proper credentials.
   See :doc:`/tutorial/nav/configure-backup-agent`.

To edit the credential for Backup:

.. include:: /includes/steps/backup-agent-edit-host-credentials.rst
