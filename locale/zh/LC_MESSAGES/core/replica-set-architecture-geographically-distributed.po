#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"


#: ../source/includes/extracts/additional-resources-multi-dc.rst:4
msgid "Additional Resource"
msgstr ""


#: ../source/includes/extracts/additional-resources-multi-dc.rst:6
msgid ""

"`Whitepaper: MongoDB Multi-Data Center Deployments "
"<http://www.mongodb.com/lp/white-paper/multi-dc?jmp=docs>`_"

msgstr ""

#: ../source/includes/extracts/additional-resources-multi-dc.rst:7
msgid ""

"`Webinar: Multi-Data Center Deployment "
"<https://www.mongodb.com/presentations/webinar-multi-data-center-"
"deployment?jmp=docs>`_"
msgstr ""

#: ../source/core/replica-set-architecture-geographically-distributed.txt:5
msgid "Replica Sets Distributed Across Two or More Data Centers"
msgstr ""

#: ../source/core/replica-set-architecture-geographically-distributed.txt:0
msgid "On this page"
msgstr ""

#: ../source/core/replica-set-architecture-geographically-distributed.txt:16
msgid "Overview"
msgstr ""

#: ../source/core/replica-set-architecture-geographically-distributed.txt:18
msgid ""
"While :term:`replica sets <replica set>` provide basic protection against "
"single-instance failure, replica sets whose members are all located in a "
"single data center are susceptible to data center failures. Power outages, "
"network interruptions, and natural disasters are all issues that can affect "
"replica sets whose members are located in a single facility."
msgstr ""


#: ../source/core/replica-set-architecture-geographically-distributed.txt:25
msgid ""
"Distributing replica set members across geographically distincts data "
"centers adds redundancy and provides fault tolerance if one of the data "
"centers is unavailable."
msgstr ""

#: ../source/core/replica-set-architecture-geographically-distributed.txt:30
msgid "Distribution of the Members"
msgstr ""
"一个 :term:`从节点 <secondary>` 在主数据中心。这个节点需随时准备成为新的主节"
"点。"

#: ../source/core/replica-set-architecture-geographically-distributed.txt:32
msgid ""
"To protect your data in case of a data center failure, keep at least one "
"member in an alternate data center. If possible, use an odd number of data "
"centers, and choose a distribution of members that maximizes the likelihood "
"that even with a loss of a data center, the remaining replica set members "
"can form a majority or at minimum, provide a copy of your data."
msgstr ""

#: ../source/core/replica-set-architecture-geographically-distributed.txt:40
msgid "Examples"
msgstr ""

#: ../source/core/replica-set-architecture-geographically-distributed.txt:43
msgid "Three-member Replica Set"
msgstr ""

#: ../source/core/replica-set-architecture-geographically-distributed.txt:45
msgid ""
"For example, for a three-member replica set, some possible distributions of "
"members include:"
msgstr ""

#: ../source/core/replica-set-architecture-geographically-distributed.txt:48
msgid ""

"Two data centers: two members to Data Center 1 and one member to Data Center"
" 2. If one of the members of the replica set is an arbiter, distribute the "
"arbiter to Data Center 1 with a data-bearing member."

msgstr ""
"当主节点不可用时，复制集将会选举出一个在 *数据中心1* 的新的主节点。如果2个数"
"据中心之间无法沟通， *数据中心2* 中的节点将不能升职为主节点。"

#: ../source/core/replica-set-architecture-geographically-distributed.txt:52
#: ../source/core/replica-set-architecture-geographically-distributed.txt:72
msgid "If Data Center 1 goes down, the replica set becomes read-only."
msgstr ""

#: ../source/core/replica-set-architecture-geographically-distributed.txt:54
msgid ""
"If Data Center 2 goes down, the replica set remains writeable as the members"
" in Data Center 1 can hold an election."
msgstr ""

#: ../source/core/replica-set-architecture-geographically-distributed.txt:57
msgid ""
"Three data centers: one members to Data Center 1, one member to Data Center "
"2, and one member to Data Center 3."
msgstr ""

#: ../source/core/replica-set-architecture-geographically-distributed.txt:60
#: ../source/core/replica-set-architecture-geographically-distributed.txt:80
msgid ""
"If any Data Center goes down, the replica set remains writeable as the "
"remaining members can hold an election."
msgstr ""

#: ../source/core/replica-set-architecture-geographically-distributed.txt:64
msgid "Five-member Replica Set"
msgstr ""

#: ../source/core/replica-set-architecture-geographically-distributed.txt:66
msgid ""
"For a replica set with 5 members, some possible distributions of members "
"include:"
msgstr ""

#: ../source/core/replica-set-architecture-geographically-distributed.txt:69
msgid ""
"Two data centers: three members to Data Center 1 and two members to Data "
"Center 2."
msgstr ""

#: ../source/core/replica-set-architecture-geographically-distributed.txt:74
msgid ""
"If Data Center 2 goes down, the replica set remains writeable as the members"
" in Data Center 1 can create a majority."
msgstr ""

#: ../source/core/replica-set-architecture-geographically-distributed.txt:77
msgid ""
"Three data centers: two member to Data Center 1, two members to Data Center "
"2, and one member to site Data Center 3."
msgstr ""

#: ../source/core/replica-set-architecture-geographically-distributed.txt:83
msgid ""
"For example, the following 5 member replica set distributes its members "
"across three data centers."
msgstr ""

#: ../source/core/replica-set-architecture-geographically-distributed.txt:89
msgid "Electability of Members"
msgstr ""

#: ../source/core/replica-set-architecture-geographically-distributed.txt:91
msgid ""
"Some members of the replica set, such as members that have networking "
"restraint or limited resources, should not be able to become primary in a "
":term:`failover`. Configure members that should not become primary to have "
":ref:`priority 0 <replica-set-secondary-only-members>`."
msgstr ""

#: ../source/core/replica-set-architecture-geographically-distributed.txt:96
msgid ""
"In some cases, you may prefer that the members in one data center be elected"
" primary before the members in the other data centers. You can modify the "
":rsconf:`~members[n].priority` of the members such that the members in the "
"one data center has higher :rsconf:`~members[n].priority` than the members "
"in the other data centers."
msgstr ""

#: ../source/core/replica-set-architecture-geographically-distributed.txt:103
msgid ""
"In the following example, the replica set members in Data Center 1 have a "
"higher priority than the members in Data Center 2 and 3; the members in Data"
" Center 2 have a higher priority than the member in Data Center 3:"
msgstr ""

#: ../source/core/replica-set-architecture-geographically-distributed.txt:111
msgid "Connectivity"
msgstr ""

#: ../source/core/replica-set-architecture-geographically-distributed.txt:113
msgid ""
"Verify that your network configuration allows communication among all "
"members; i.e. each member must be able to connect to every other member."
msgstr ""

#: ../source/core/replica-set-architecture-geographically-distributed.txt:117
msgid ""
":doc:`/tutorial/deploy-geographically-distributed-replica-set`, "
":doc:`/tutorial/deploy-replica-set`, :doc:`/tutorial/add-replica-set-"
"arbiter`, and :doc:`/tutorial/expand-replica-set`."
msgstr ""

#~ msgid "Geographically Distributed Replica Sets"
#~ msgstr ""

#~ msgid ""
#~ "Adding members to a replica set in multiple data centers adds redundancy and"
#~ " provides fault tolerance if one data center is unavailable. Members in "
#~ "additional data centers should have a :doc:`priority of 0 </core/replica-"
#~ "set-priority-0-member>` to prevent them from becoming primary."
#~ msgstr ""

#~ msgid ""
#~ "For example: the architecture of a geographically distributed replica set "
#~ "may be:"
#~ msgstr ""

#~ msgid "One :term:`primary <primary>` in the main data center."
#~ msgstr ""

#~ msgid ""
#~ "One :term:`secondary <secondary>` member in the main data center. This "
#~ "member can become primary at any time."
#~ msgstr ""

#~ msgid ""
#~ "One :doc:`priority 0 </core/replica-set-priority-0-member>` member in a "
#~ "second data center. This member cannot become primary."
#~ msgstr ""

#~ msgid ""
#~ "In the following replica set, the primary and one secondary are in *Data "
#~ "Center 1*, while *Data Center 2* has a :doc:`priority 0 </core/replica-set-"
#~ "priority-0-member>` secondary that cannot become a primary."
#~ msgstr ""

#~ msgid ""
#~ "If the primary is unavailable, the replica set will elect a new primary from"
#~ " *Data Center 1*. If the data centers cannot connect to each other, the "
#~ "member in *Data Center 2* will not become the primary."
#~ msgstr ""

#~ msgid ""
#~ "If *Data Center 1* becomes unavailable, you can manually recover the data "
#~ "set from *Data Center 2* with minimal downtime. With sufficient :ref:`write "
#~ "concern <write-concern>`, there will be no data loss."
#~ msgstr ""

#~ msgid ""
#~ "To facilitate elections, the main data center should hold a majority of "
#~ "members. Also ensure that the set has an odd number of members. If adding a "
#~ "member in another data center results in a set with an even number of "
#~ "members, deploy an :ref:`arbiter <replica-set-arbiters>`. For more "
#~ "information on elections, see :doc:`/core/replica-set-elections`."
#~ msgstr ""

#~ msgid ":doc:`/tutorial/deploy-geographically-distributed-replica-set`."
#~ msgstr ""
