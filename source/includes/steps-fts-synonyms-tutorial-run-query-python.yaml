stepnum: 1
title: "Run an |fts| query that uses the ``equivalent`` mapping type."
ref: run-equivalent-query-python
content: |

  a. Create a file named ``synonyms-equivalent-query.py``. 
  #. Copy and paste the code example into the 
     ``synonyms-equivalent.py`` file.

     The following code example:

     - Imports ``pymongo``, MongoDB's Python driver, and the ``dns``
       module, which is required to connect ``pymongo`` to ``Atlas`` using
       a |dns| seed list connection string. 
     - Creates an instance of the ``MongoClient`` class to establish a 
       connection to your |service| cluster.
     - Searches for the word ``automobile`` in the ``title`` field. It 
       includes the following stages: 
       
       - :manual:`$limit </reference/operator/aggregation/limit>` stage 
         to limit the output to 10 results 
       - :manual:`$project </reference/operator/aggregation/project>` 
         stage to exclude all fields except ``title`` and add a field 
         named ``score``

     - Iterates over the cursor to print the documents that match the 
       query.

     .. literalinclude:: /includes/fts-tutorial/synonyms-equivalent-query.py
        :language: python
        :linenos:
        :emphasize-lines: 4

  #. Before you run the sample, replace ``<connection-string>`` with
     your |service| connection string. Ensure that your connection
     string includes your database user's credentials.

  #. Run the following command to query your collection: 
  
     .. code-block:: sh 
     
        python synonyms-equivalent-query.py

  When you run ``synonyms-equivalent-query.py``, this file prints the 
  following documents to your terminal:

  .. code-block:: python
     :copyable: false

     {'title': 'Cars', 'score': 4.197734832763672}
     {'title': 'Planes, Trains & Automobiles', 'score': 3.8511905670166016}
     {'title': 'Car Wash', 'score': 3.39473032951355}
     {'title': 'Used Cars', 'score': 3.39473032951355}
     {'title': 'Blue Car', 'score': 3.39473032951355}
     {'title': 'Cars 2', 'score': 3.39473032951355}
     {'title': 'Stealing Cars', 'score': 3.39473032951355}
     {'title': 'Cop Car', 'score': 3.39473032951355}
     {'title': 'The Cars That Eat People', 'score': 2.8496146202087402}
     {'title': 'Khrustalyov, My Car!', 'score': 2.8496146202087402}

  .. include:: /includes/extracts/fts-synonyums-tutorial-equivalent-query-output.rst

---
stepnum: 2
title: "Run an |fts| query that uses the ``explicit`` mapping type."
ref: run-explicit-query-python
content: |

  a. Create a file named ``synonyms-explicit-query.py``. 
  #. Copy and paste the code example into the ``synonyms-explicit.py`` file.

     The following code example:

     - Imports ``pymongo``, MongoDB's Python driver, and the ``dns``
       module, which is required to connect ``pymongo`` to ``Atlas`` using
       a |dns| seed list connection string. 
     - Creates an instance of the ``MongoClient`` class to establish a 
       connection to your |service| cluster.
     - Searches for the word ``automobile`` in the ``title`` field. It 
       includes the following stages: 
       
       - :manual:`$limit </reference/operator/aggregation/limit>` stage 
         to limit the output to 10 results 
       - :manual:`$project </reference/operator/aggregation/project>` 
         stage to exclude all fields except ``title`` and add a field 
         named ``score``

     - Iterates over the cursor to print the documents that match the 
       query.

     .. literalinclude:: /includes/fts-tutorial/synonyms-explicit-query.py
        :language: python
        :linenos:
        :emphasize-lines: 4

  #. Before you run the sample, replace ``<connection-string>`` with
     your |service| connection string. Ensure that your connection
     string includes your database user's credentials.

  #. Run the following command to query your collection: 
  
     .. code-block:: sh 
     
        python synonyms-explicit-query.py

  When you run ``synonyms-explicit-query.py``, this file prints the 
  following documents to your terminal:

  .. code-block:: python
     :copyable: false

     {'title': 'Vessel', 'score': 5.373150825500488}
     {'title': 'Boats', 'score': 4.589139938354492}
     {'title': 'And the Ship Sails On', 'score': 4.3452959060668945}
     {'title': 'Broken Vessels', 'score': 4.3452959060668945}
     {'title': 'Sailing to Paradise', 'score': 4.3452959060668945}
     {'title': 'Boat People', 'score': 3.711261749267578}
     {'title': 'Boat Trip', 'score': 3.711261749267578}
     {'title': 'Three Men in a Boat', 'score': 3.1153182983398438}
     {'title': 'The Glass Bottom Boat', 'score': 3.1153182983398438}
     {'title': 'Jack Goes Boating', 'score': 3.1153182983398438}

  .. include:: /includes/extracts/fts-synonyums-tutorial-explicit-query-output.rst

...
