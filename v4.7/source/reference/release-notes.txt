.. _pymongo-release-notes:
.. _pymongo-whats-new:

=============
Release Notes
=============

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: update, new feature, deprecation, upgrade, driver v4.7

Learn what's new in:

* :ref:`Version 4.7 <version-4.7>`

.. _upcoming-breaking-changes:

.. _version-4.7:

What's New in 4.7
-----------------

.. warning:: Breaking Changes

   {+driver-short+} v4.7 contains breaking changes. For more information, see
   :ref:`version-4.7-breaking-changes`.

The {+driver-short+} v4.7 release includes the following new features:

- Added the ``Hello.connection_id``,
  `CommandStartedEvent.server_connection_id <https://pymongo.readthedocs.io/en/latest/api/pymongo/monitoring.html#pymongo.monitoring.CommandStartedEvent.server_connection_id>`__,
  `CommandSucceededEvent.server_connection_id <https://pymongo.readthedocs.io/en/latest/api/pymongo/monitoring.html#pymongo.monitoring.CommandSucceededEvent.server_connection_id>`__,
  and `CommandFailedEvent.server_connection_id <https://pymongo.readthedocs.io/en/latest/api/pymongo/monitoring.html#pymongo.monitoring.CommandFailedEvent.server_connection_id>`__
  properties.
- Added support for name suffixes for Key Management Service (KMS) providers for Client-Side Field
  Level Encryption (CSFLE). This feature requires ``pymongocrypt`` v1.9+ and
  ``libmongocrypt`` v1.9+. For more information, see the API documentation for the
  `AutoEncryptionOpts <https://pymongo.readthedocs.io/en/latest/api/pymongo/encryption_options.html#pymongo.encryption_options.AutoEncryptionOpts>`__
  class.
- Improved the performance of encoding BSON documents to JSON.
- The ``ClientEncryption.encrypt()`` and ``ClientEncryption.encrypt_expression()`` methods
  now allow the ``key_id`` argument to be passed in as a ``UUID`` Object.
- Inflating a ``RawBSONDocument`` object containing a ``Code`` value no longer causes an
  error.
- Fixed a bug in Python 3.12 where the error message
  ``RuntimeError: can't create new thread at interpreter shutdown``
  could be written to ``stderr`` when a ``MongoClient`` thread starts as the Python
  interpreter is shutting down.
- Fixed a bug where ``Int64`` instances could not always be encoded by
  `orjson <https://github.com/ijl/orjson>`__. Code like the following example now
  runs correctly:

.. code-block:: python

   >>> import orjson
   >>> from bson import json_util
   >>> orjson.dumps({'a': Int64(1)}, default=json_util.default, option=orjson.OPT_PASSTHROUGH_SUBCLASS)
