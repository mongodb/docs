========
Glossary
========

.. default-domain:: mongodb

.. glossary::
   :sorted: 

   alert      
      Notification sent by |service| when your database operations or
      server usage reach thresholds that affect cluster
      performance. To learn what conditions you can set to trigger
      alerts, see :ref:`alert-conditions`.

      .. seealso::
      
         :ref:`respond-to-alerts`
      
   analytics node
      Specialized read-only node that can isolate queries which you do not
      want to affect your operational workload. Analytics nodes are useful
      for handling analytic data such as reporting queries executed by BI
      tools. You can host analytics nodes in dedicated geographic regions
      to optimize read performance and reduce latency.
      
   API
      Communication protocol facilitating interaction between the client
      and |service-fullname|. You can use the |service| |api| to automate
      many of the tasks performed in the |service| UI.
      
      .. seealso::
      
         - :ref:`atlas-api`
         - :ref:`api-resources`
      
   Atlas user
      Account used to access the |service| application. You can grant
      |service| users access to |service| organizations, projects, or both,
      with certain permissions defined by :ref:`user roles <user-roles>`.
      |service| users are different than :term:`database users
      <Database user>`. |service| users do not provide access to any
      MongoDB
      databases.
      
      .. seealso::
      
         :ref:`atlas_users`
      
   Atlas user role
      Set of permissions granted to an :term:`Atlas user`. You can grant
      permissions at the :term:`organization` or :term:`project` level.
      
      .. seealso::
      
         :ref:`user-roles`
      
   auto-scaling      
      Configurable option to have your cluster automatically increase or
      decrease its cluster tier, storage capacity, or both in response to
      cluster usage.
      
      .. seealso::
      
         :ref:`cluster-autoscaling`
      
   backup      
      Copy of your data that encapsulates the state of your cluster at a
      given time. Backups provide a safety measure in the case of data loss
      events.
      
      |service| provides the following fully-managed methods for backups:
      
      - :term:`Cloud Backups <cloud backups>`
      - :term:`Legacy Backups <legacy backups>`
      
   cloud backups      
      Localized cluster :term:`backup` storage using the native
      :term:`snapshot` functionality of the cluster's cloud service
      provider.
      
      |service| supports {+Cloud-Backup+}s for clusters served on:
      
      - :ref:`Amazon Web Services (AWS) <amazon-aws>`
      - :ref:`Google Cloud Platform (GCP) <google-gcp>`
      - :ref:`Microsoft Azure <microsoft-azure>`
      
      .. seealso::
      
         :ref:`backup-cloud-provider`
      
   cluster
      Set of nodes comprising a MongoDB :term:`deployment`. In |service|,
      clusters can be :term:`replica sets <replica set>` or
      :term:`sharded deployments<sharded cluster>`.
      
   cluster class     
      *Configurable for M40+ clusters hosted on AWS.*
      
      Storage class of your cluster. Your selected class affects cluster
      storage performance and cluster costs. You can choose one of the
      following classes:
      
      - :guilabel:`Low CPU`
      - :guilabel:`General`
      - :guilabel:`Local NVMe SSD`
      
      .. seealso::
      
         - :ref:`create-cluster-storage`
         - :term:`NVMe storage`
      
   cluster tier
      Dictates the memory, storage, and |iops| specification for each
      data-bearing server in the cluster. Cluster storage size and overall
      performance increase as the cluster tier increases.
      
      .. seealso::
      
         - :ref:`create-cluster-instance`
         - :ref:`sizing`
      
   legacy backups     
      Incremental :term:`backups <backup>` of your cluster taken by
      |service| that ensure that your backups are typically just a few
      seconds behind the operational system. You can restore your cluster
      to a state from a selected point in time within the last 24 hours.
      
      .. include:: /includes/admonitions/deprecated-continuous-backup.rst
      
      .. seealso::
      
         :ref:`legacy-backup`
      
   custom role
      Custom set of MongoDB :term:`privilege actions <action>` and
      :term:`roles <role>` that you can save and assign to
      :term:`database users <Database user>`. Create custom roles when
      |service|'s built-in :ref:`database user privileges
      <atlas-user-privileges>` don't describe your desired set of
      privileges.
      
      .. seealso::
      
         :ref:`mongodb-roles`
      
   Data Explorer
      Tool within |service| to view and interact with cluster data.
      You can also use the Data Explorer to manage indexes and run
      aggregation pipelines to process your data.
      
      .. seealso::
      
         :ref:`data-explorer`
      
   Data Lake
      MongoDB's solution for querying data stored in low-cost S3 buckets
      using the MongoDB Query Language. Analytics applications can use
      |service| Data Lake to make use of archived data for their data
      processing needs.
      
      .. seealso::
      
         `Atlas Data Lake <https://docs.mongodb.com/datalake/>`__
      
   dedicated cluster
      Cluster category containing clusters of tier ``M10`` and greater.
      
      ``M10`` and ``M20`` clusters are recommended for development
      environments, and for production use only for low-traffic
      applications. ``M30`` and higher clusters are recommended for
      full-fledged production environments.
      
   deployment
      :term:`Cluster <cluster>` of MongoDB servers containing your data.
      |service|-managed deployments are either
      :term:`replica sets <replica set>` or
      :term:`sharded clusters <sharded cluster>`.
      
   electable node
      Node which is eligible to become the :term:`primary` member of your
      :term:`replica set`. |service| prioritizes nodes in the
      :term:`Highest Priority region` for primary eligibility during
      elections. To ensure reliable elections, the total number of
      electable nodes across an entire region must be 3, 5, or 7.
      
   encryption key
      Random string of bits generated specifically to encrypt and
      decrypt data.
      
      |service| :authrole:`Project Owners <Project Owner>` can configure an
      additional layer of encryption on their data in addition to the
      default :ref:`encryption at rest <security-kms-encryption>` provided
      by |service|. Project owners can use their |service|-compatible
      customer key management provider with the MongoDB :manual:`encrypted
      storage engine </core/security-encryption-at-rest>`.
      
      |service| supports the following customer key management providers
      when configuring Encryption at Rest:
      
      - :ref:`Amazon Web Services Key Management Service <security-aws-kms>`
      - :ref:`Azure Key Vault <security-azure-kms>`
      - :ref:`Google Cloud Platform Key Management Service <security-gcp-kms>`
      
      .. seealso::
      
         :ref:`security-kms-encryption`
      
   Free Tier
      Free-to-use cluster tier that provides a small-scale development
      environment to host your data. Free Tier clusters never expire, and
      provide access to a :ref:`subset <atlas-free-tier>` of Atlas features
      and functionality. Free Tier clusters might also be referred to by
      their instance size, ``M0``.
      
      .. seealso::
      
         - :ref:`atlas-getting-started`
         - :ref:`atlas-free-tier`
      
   Atlas Search
      Fine-grained text indexing enabling advanced text search on your data
      without any additional required management. |fts| provides
      options for several kinds of :ref:`text analyzers <analyzers-ref>`,
      score-based results ranking, and a rich
      :ref:`query language <query-syntax-ref>`.
      
      .. seealso::
      
         :ref:`fts-top-ref`
      
   Global Cluster
      Clusters with defined geographic zones to support location-aware read
      and write operations for globally distributed application instances
      and clients. You can enable global sharding on clusters of tier
      ``M30`` and greater.
      
      .. seealso::
      
         - :ref:`global-clusters`
         - :ref:`create-new-global-write-cluster`
      
   global write zone
      Geographic zone representing a subset of your global cluster
      distribution. Each :term:`Global Cluster` supports up to 9 distinct
      global write zones. Each zone consists of one
      :term:`Highest Priority region` and one or more
      :term:`electable <electable node>`,
      :term:`read-only <read-only node>`, or
      :term:`analytics <analytics node>` regions. The available geographic
      regions depend on the selected cloud service provider.
      
   group
      See :term:`project`.
      
   group ID
      See :term:`project ID`.
      
   Highest Priority region
      Region in a :term:`multi-region cluster` which |service|
      prioritizes for :term:`primary` eligibility during elections.
      
      .. seealso::
      
         :ref:`create-cluster-multi-region`
      
   Impact
      Estimated performance improvement of an index suggested by the |pa|.
      
      .. seealso::
      
         :ref:`pa-index-ranking`
      
   interface endpoint
      Elastic network interface with a private IP address from the IP
      address range of your |vpc| subnet on |aws|. An interface endpoint
      serves as an entry point for traffic from clients in your |vpc| to
      an |service| cluster when you create a {+aws-pl+} connection between
      an |aws| |vpc| and |service| clusters in a specified region.
      
      .. seealso::
      
         :ref:`private-endpoint`
      
   LDAP
      Cross-platform protocol used to authenticate users and authorize
      them to access data on a cluster. You can use |service| to manage user
      authentication and authorization from all MongoDB clients using your
      own |ldap| server over |tls|. A single |ldaps| configuration applies
      to all clusters in an |service| project.
      
      .. seealso::
      
         :ref:`ldaps-authentication-authorization`
      
   live migration
      Method to seamlessly move an existing source replica set or sharded
      cluster to |service|. During the live migration process, |service|
      keeps the destination cluster in sync with the remote source until you
      cut your applications over to the |service| cluster.
      
      .. seealso::
      
         :ref:`live-import-replica`
      
   maintenance window
      Day and time of the week when |service| should start weekly
      maintenance on your cluster. You can set your maintenance window
      in your :ref:`Project Settings <project-settings>`.
      
      .. include:: /includes/fact-urgent-maintenance.rst
      
   MongoDB Charts
      Visualization tool for your |service| data. You can launch MongoDB
      Charts from your |service| cluster and view your data with the
      Charts application to begin visualizing your data.
      
      .. seealso::
      
         `MongoDB Charts Documentation <https://docs.mongodb.com/charts/saas/>`__
      
   MongoDB Realm
      Serverless platform that enables developers to quickly build
      applications without having to set up server infrastructure.
      {+MongoDB-Realm+} automatically integrates the connection to your |service|
      cluster databases, allowing for seamless interaction between your
      application and data.
      
      .. seealso::
      
         :stitch:`{+MongoDB-Realm+} Documentation </>`
      
   Database user
      Credentials used to authenticate a client to access a MongoDB
      database deployment. You can assign :ref:`privileges
      <atlas-user-privileges>` to a database user to determine that user's
      access level to a cluster. Database users are different from
      :term:`Atlas users <Atlas user>`. Database users have access to
      MongoDB deployments, not the |service| application.
      
      .. seealso::
      
         :ref:`mongodb-users`
      
   Database user privileges
      Set of :term:`privilege actions <action>` or :term:`roles <role>`
      granted to a database user. You can assign database user privileges
      at the cluster, database, and collection level.
      
      .. seealso::
      
         :ref:`atlas-user-privileges`
      
   multi-region cluster
      |service| :term:`cluster` spanning multiple geographic regions.
      Multi-region clusters can increase availability and improve
      performance by routing application queries to the most appropriate
      geographic regions.
      
      Multi-region clusters must contain
      :term:`electable nodes <electable node>`, and can optionally contain
      :term:`read-only nodes <read-only node>` and
      :term:`analytics nodes <analytics node>`.
      
   network peering connection
      Process by which two Internet networks connect and exchange traffic.
      You can directly peer your |vpc| with the |service| |vpc| created for
      your MongoDB clusters. Using network peering, your application
      servers can directly connect to |service| while remaining isolated
      from public networks.
      
      .. seealso::
      
         :ref:`vpc-peering`
      
   NVMe storage
      *Available for M40+ clusters hosted on AWS*
      
      For applications hosted on |aws| which require low-latency and
      high-throughput IO, you can use the NVMe :term:`cluster class`. The
      NVMe cluster class leverages a unique data protocol to
      greatly improve data access speeds.
      
      NVMe clusters use a :manual:`hidden secondary node
      </core/replica-set-hidden-member/>` consisting of a provisioned
      volume with high throughput and |iops| to facilitate backup.
      
      .. seealso::
      
         :ref:`create-cluster-storage`
      
   organization
      Logical grouping of |service| :term:`projects <project>`. You can
      leverage an organization to manage billing, users, and security
      settings for the projects it contains.
      
      .. include:: /includes/list-organization-hierarchy.rst
      
      .. seealso::
      
         :ref:`organizations`
      
   organization ID
      Unique 24-digit hexadecimal string used to identify your |service|
      :term:`organization`. The :doc:`Get All Organizations
      </reference/api/organization-get-all>` |api| endpoint returns the ID
      of all organizations that the authenticated user executing the API
      call can access.
      
   Performance Advisor
      |service| tool that monitors slow queries executed on
      your cluster and suggests indexes to improve query performance. Each
      index that the Performance Advisor suggests include an :term:`Impact`
      score indicating the potential performance improvement that index
      would bring.
      
      .. seealso::
      
         :ref:`performance-advisor`
      
   primary
      In a :term:`replica set`, the primary is the member that
      receives all write operations. In
      :ref:`multi-region clusters <create-cluster-multi-region>`, |service|
      prioritizes nodes in the :term:`Highest Priority region` for primary
      eligibility during elections.
      
   project
      Logical grouping of :term:`clusters <cluster>`. You can have
      multiple clusters within a single project and multiple projects
      within a single :term:`organization`.
      
      .. note::
      
         Project is synonymous with group.
      
      .. seealso::
      
         :ref:`projects`
      
   project ID
      Unique 24-digit hexadecimal string used to identify your |service|
      :term:`project`. The :doc:`Get All Projects
      </reference/api/project-get-all>` |api| endpoint returns the ID of all
      projects that the authenticated user executing the API call can
      access.
      
      .. note::
      
         Project ID is synonymous with group ID.
      
   Query Profiler
      |service| tool that diagnoses and monitors performance
      issues in your cluster. The Query Profiler can expose long-running
      queries and their performance statistics. You can filter the data
      returned by the Query Profiler to hone in on specific namespaces
      and operation types.
      
      .. seealso::
      
         :ref:`query-profiler`
      
   read-only node
      Replica set in a dedicated geographic region that supplements your
      :term:`electable node` regions. You can use read-only nodes to
      localize data where it is most frequently read to improve
      performance.
      
   Real-Time Performance Panel
      |service| monitoring service that displays current network
      traffic, database operations on your clusters, and hardware statistics about your host machines. Use the
      :abbr:`RTPP (Real-Time Performance Panel)` to
      visually evaluate query execution times, monitor network activity,
      and discover potential replication lag on secondary members of
      replica sets.
      
      .. seealso::
      
         :ref:`real-time-metrics-status-tab`
      
   replica set
      Group of MongoDB servers that maintain the same data set. Replica sets
      provide redundancy, high availability, and are the basis for all
      production deployments.
      
      .. seealso::
      
         :manual:`Replication </replication>`
      
   rolling restart
      Process that restarts all nodes in the cluster in sequence. To maintain cluster
      availability, |service| restarts one node at a time
      starting with a :term:`secondary <secondary>` node. |service| always maintains
      a primary node until the rolling restart completes.

   
   sharded cluster
      Set of nodes comprising a :term:`sharded <sharding>` MongoDB
      deployment. A sharded cluster consists of config servers, shards, and
      one or more :binary:`~bin.mongos` routing processes.
      
      .. seealso::
      
         :manual:`Sharded Cluster Components </core/sharded-cluster-components/>`
      
   shared cluster
      Cluster category containing ``M0`` (:term:`Free Tier`), ``M2``, and ``M5`` tier clusters.
      Shared clusters are generally used for development and small production
      workloads. 
      
      .. seealso::
      
         :ref:`atlas-free-tier`
      
   snapshot
      :term:`Backup <backup>` of your data captured at a specific interval
      and stored in a :ref:`backup data center
      <continuous-snapshot-storage-location>`. The :ref:`Snapshot Schedule
      <retention-policy>` determines the interval for taking snapshots and
      how long to store them.
      
      .. seealso::
      
         :doc:`/backup-restore-cluster`
      
   team
      Group of :term:`Atlas users <Atlas user>` in the same organization. You can use teams to grant access to
      the same group of Atlas users across multiple
      :term:`projects <project>`. All users in the team share the same
      project access.
      
      .. note::
      
         |service| users can belong to multiple teams.
      
      .. seealso::
      
         - :ref:`manage-teams`
         - :ref:`atlas_users`
      
   whitelist
      List of |ipaddr| addresses with access to clusters within an |service|
      :term:`project`. |service| only allows client connections to a cluster
      from entries in the corresponding project's whitelist. The whitelist
      can have up to 200 whitelist entries.
