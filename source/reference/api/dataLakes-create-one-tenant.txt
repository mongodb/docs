.. _api-create-one-endpoint:

==============================
Create One {+data-lake-short+} 
==============================

.. default-domain:: mongodb

.. meta::
   :keywords: |data-lake|

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. include:: /includes/fact-projects-groups-synonyms.rst

.. include:: /includes/api-requirements.rst

.. include:: /includes/api-base-url.rst

.. _api-update-one-endpoint-usage:

Usage 
-----

Use this endpoint to create a specific {+data-lake+} associated to an
|service| project. You can create a {+dl+} two ways: 

- Specify only a name for your {+dl+}. Note that your {+dl+} will be in 
  ``UNVERIFIED`` state. To complete the creation of your {+dl+}, you must 
  then :ref:`update <api-update-one-endpoint>` the {+dl+} with a valid role 
  ID.

- Specify a name for your {+dl+}, the unique identifier of the role that 
  {+dl+} can use to access your |aws| data store, and the |s3| bucket where 
  data is stored.

.. _api-update-one-endpoint-syntax:

Syntax
------

.. code-block:: none

   POST /groups/{GROUP-ID}/dataLakes

.. _api-update-one-endpoint-path-params:

Request Path Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1
   :widths: 15 10 75

   * - Path Element
     - Required/Optional
     - Description

   * - ``GROUP-ID``

     - Required.

     - The unique identifier for the :atlas:`project </api#group-id>`.

.. _api-update-one-endpoint-query-params:

Request Query Parameters
~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/no-query-parameters.rst

.. _api-update-one-endpoint-body-params:

Request Body Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1
   :widths: 30 10 60

   * - Field
     - Required/Optional
     - Description

   * - ``name``
     - Required
     - Name of the {+data-lake+}.

   * - ``cloudProviderConfig``
     - Optional
     - Configuration information related to the cloud service where 
       {+data-lake+} source data is stored. 

   * - ``cloudProviderConfig.<provider>``
     - Required
     - Name of the provider of the cloud service where {+data-lake-short+} 
       can access the S3 Bucket.

       {+data-lake+} supports only ``aws``.

       Required if specifying ``cloudProviderConfig``.

   * - ``cloudProviderConfig.aws.roleId``
     - Required
     - Unique identifier of the role that {+dl+} can use to access 
       the {+data-lake-stores+}. If necessary, use the |service| 
       :atlas:`UI </security/manage-iam-roles/>` or :atlas:`API 
       </reference/api/cloud-provider-access-get-roles>` to retrieve 
       the role ID. You must also specify the ``testS3Bucket``.

       Required if specifying ``cloudProviderConfig``.

   * - ``cloudProviderConfig.aws.
       testS3Bucket``
     - Required
     - Name of the |s3| data bucket that the provided role ID is 
       authorized to access. You must also specify the ``roleId``.

       Required if specifying ``cloudProviderConfig``.

.. _api-update-one-endpoint-response:

Response
--------

.. include:: /includes/fact-data-lake-api-response.rst

.. _api-update-one-endpoint-egs:

Examples
--------

The following examples show two ways to use this endpoint for creating 
a {+dl+}.

Basic Example 
~~~~~~~~~~~~~

.. example:: Request

   .. code-block:: none

      curl -u "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest \
       --header "Accept: application/json" \
       --header "Content-Type: application/json" \
       --request POST "https://cloud.mongodb.com/api/atlas/v1.0/groups/{GROUP-ID}/dataLakes?pretty=true" \
       --data '{ "name" : "UserMetricData" }'

The preceding request returns the following:

.. example:: Response

   .. code-block:: none
      :copyable: false

      {
        "cloudProviderConfig": {
          "aws": {
            "externalId" : "12a3bc45-de6f-7890-12gh-3i45jklm6n7o",
            "iamAssumedRoleARN": null
            "iamUserARN": "arn:aws:iam::1234567890123:root",
            "roleId": null
          }
        },
        "dataProcessRegion": null,
        "groupId": "1ab23c4567def890gh12ij34",
        "hostnames": [
          "hardwaremetricdata.mongodb.example.net"
        ],
        "name": "UserMetricData",
        "state": "UNVERIFIED",
        "storage": {
          "databases": [],
          "stores": []
        }
      }

Role ID Example 
~~~~~~~~~~~~~~~

.. example:: Request

   .. code-block:: shell

      curl -u "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest \
       --header "Accept: application/json" \
       --header "Content-Type: application/json" \
       --request POST "https://cloud.mongodb.com/api/atlas/v1.0/groups/{GROUP-ID}/dataLakes?pretty=true" \
       --data '{ \
         "name" : "UserMetricData", \
         "cloudProviderConfig" : {
           "aws" : {
             "roleId" : "1a234bcd5e67f89a12b345c6",
             "testS3Bucket" : "user-metric-data-bucket"
           }
         }
       }'

The preceding request returns the following:

.. example:: Response

   .. code-block:: json
      :copyable: false

      {
        "cloudProviderConfig": {
          "aws": {
            "externalId" : "12a3bc45-de6f-7890-12gh-3i45jklm6n7o",
            "iamAssumedRoleARN": "arn:aws:iam::123456789012:role/ReadS3BucketRole",
            "iamUserARN": "arn:aws:iam::1234567890123:root",
            "roleId": "1a234bcd5e67f89a12b345c6"
          }
        },
        "dataProcessRegion": null,
        "groupId": "1ab23c4567def890gh12ij34",
        "hostnames": [
          "hardwaremetricdata.mongodb.example.net"
        ],
        "name": "UserMetricData",
        "state": "ACTIVE",
        "storage": {
          "databases": [],
          "stores": []
        }
      }
