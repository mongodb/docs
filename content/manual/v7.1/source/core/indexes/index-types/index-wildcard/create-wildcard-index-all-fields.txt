.. _create-wildcard-index-all-fields:

=====================================
Create a Wildcard Index on All Fields
=====================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

You can create a wildcard index that supports queries on all possible
document fields. Wildcard indexes support queries on arbitrary or
unknown field names.

To create a wildcard index on all fields (excluding ``_id``), use the
wildcard specifier (``$**``) as the index key:

.. code-block:: javascript

   db.<collection>.createIndex( { "$**": <sortOrder> } )

About this Task
---------------

.. include:: /includes/indexes/wildcard-use-case-warning.rst

Before You Begin
----------------

Create an ``artwork`` collection that contains the following documents:

.. code-block:: javascript

   db.artwork.insertMany( [
      {
         "name": "The Scream",
         "artist": "Edvard Munch",
         "style": "modern",
         "themes": [ "humanity", "horror" ]
      },
      {
         "name": "Acrobats",
         "artist": {
            "name": "Raoul Dufy",
            "nationality": "French",
            "yearBorn": 1877
         },
         "originalTitle": "Les acrobates",
         "dimensions": [ 65, 49 ] 
      },
      {
         "name": "The Thinker",
         "type": "sculpture",
         "materials": [ "bronze" ],
         "year": 1904
      }
   ] )

Each document contains details about the artwork. The field names vary
between documents depending on the information available about the
piece.

Procedure
---------

The following operation creates a wildcard index on all document fields
in the ``artwork`` collection (excluding ``_id``):

.. code-block:: javascript

   db.artwork.createIndex( { "$**" : 1 } )

Results
-------

This index supports single-field queries on any field in the collection.
If a document contains an embedded document or array, the wildcard index
traverses the document or array and stores the value for all fields in
the document or array.

For example, the index supports the following queries:

- Query:

  .. code-block:: javascript

     db.artwork.find( { "style": "modern" } )

  Output:

  .. code-block:: javascript
     :copyable: false

     [
        {
           _id: ObjectId("6352c401b1fac2ee2e957f09"),
           name: 'The Scream',
           artist: 'Edvard Munch',
           style: 'modern',
           themes: [ 'humanity', 'horror' ]
        }
     ]

- Query:

  .. code-block:: javascript

     db.artwork.find( { "artist.nationality": "French" } )

  Output:

  .. code-block:: javascript
     :copyable: false

     [
        {
           _id: ObjectId("6352c525b1fac2ee2e957f0d"),
           name: 'Acrobats',
           artist: { name: 'Raoul Dufy', nationality: 'French', yearBorn: 1877 },
           originalTitle: 'Les acrobates',
           dimensions: [ 65, 49 ]
        }
     ]

- Query:

  .. code-block:: javascript

     db.artwork.find( { "materials": "bronze" } )

  Output:

  .. code-block:: javascript
     :copyable: false

     [
        {
           _id: ObjectId("6352c387b1fac2ee2e957f08"),
           name: 'The Thinker',
           type: 'sculpture',
           materials: [ 'bronze' ],
           year: 1904
        }
     ]

Learn More
----------

To learn how to create a wildcard index that projects specific fields to
cover, see the following pages:

- :ref:`wc-compound-index-wcProject`

- :ref:`create-wildcard-index-multiple-fields`

To learn more about behaviors for wildcard indexes, see:

- :ref:`wildcard-index-embedded-object-behavior`

- :ref:`wildcard-index-restrictions`
