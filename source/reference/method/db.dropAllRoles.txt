=================
db.dropAllRoles()
=================

.. default-domain:: mongodb

Definition
----------

.. method:: db.dropAllRoles( writeConcern )

   Deletes all :ref:`user-defined <user-defined-roles>` roles on the
   database where you run the method. MongoDB removes the roles from all
   users and other roles.

   .. warning::

      The :method:`dropAllRoles` method removes *all* :ref:`user-defined
      <user-defined-roles>` roles from the database.

   The :method:`dropAllRoles` method takes the following argument:

   .. include:: /reference/method/db.dropAllRoles-param.rst

   .. COMMENT I added the returns here because in the example for this
      method, you have what the method returns.  But we don't specify
      what is returned for the other user/role mgmt methods.

   :returns:
      The number of :ref:`user-defined <user-defined-roles>` roles dropped.

   The :method:`db.dropAllRoles()` method wraps the
   :dbcommand:`dropAllRolesFromDatabase` command.

   .. |local-cmd-name| replace:: :method:`db.dropAllRoles()`

Behavior
--------

.. include:: /includes/behavior-drop-role.rst

Required Access
---------------

.. include:: /includes/access-drop-role.rst

Example
-------

The following operations drop all :ref:`user-defined
<user-defined-roles>` roles from the ``products`` database and uses a
:ref:`write concern <write-concern-operation>` of ``majority``.

.. code-block:: javascript

   use products
   db.dropAllRoles( { w: "majority" } )

The method returns the number of roles dropped:

.. code-block:: javascript

   4
