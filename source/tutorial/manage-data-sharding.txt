==========================
Manage Sharded Collections
==========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Overview
--------

:term:`Sharding` distributes data across multiple machines. MongoDB 
uses sharding to support deployments with very large data sets and high
throughput operations. |mms| can create :term:`sharded clusters
<sharded cluster>` and sharded :term:`collections <collection>` on
those clusters.

This page explains how |mms| can manage sharded collections including
determining how :term:`documents <document>` are distributed within
sharded collections.

Sharding involves defining a :term:`shard key` which is then used to
:term:`partition <data partition>` documents within a collection. See
the :manual:`MongoDB manual </sharding>` for a more detailed
explanation of sharding.

A shard key consists of one or more :term:`indexed <index>`
:term:`fields <field>` that exist in every document within a
collection. A shard key on a compound index is known as a
:term:`Compound shard key`. Each collection can only have one shard
key. You cannot change the shard key once you shard a collection. A
sharded cluster can support both sharded and unsharded collections. See
the :manual:`MongoDB manual </core/sharding-shard-key/>` for best
practices on choosing a shard key.

The sharded cluster attempts to distribute the documents in a sharded
collection evenly among the shards in the cluster. You can use sharding
zones to manage the distribution of documents within the collection.

Zone sharding associates :term:`ranges <range>` of a collection's shard
key values to one or more shards in the cluster called a 
:term:`zone <tag>`. MongoDB eventually routes documents within a given
range to the associated zone. This allows for targeted data
distribution. |mms| supports both zoned and default sharding. See the
:manual:`MongoDB manual </core/tag-aware-sharding>` for a more 
detailed explanation of zone sharding.

.. note:: 
   *Tag Aware Sharding* and *Zone Sharding* are interchangeable. Tag
   Aware sharding transitions to Zone Sharding with the release of
   MongoDB 3.4.

The following procedures explain how |mms| can:

* Manage your sharded collections
* Create new sharded collections
* Import your sharded collections into |mms|
* Define zones for sharded clusters 
* Define ranges for sharded collections

Each procedure assumes you have clicked the :guilabel:`Deployment`
button to display the :guilabel:`Deployment` page first.

.. _enable-data-sharding:

Enable sharded collection management
------------------------------------

You can use |mms| to manage sharded collections. If you want |mms|
to manage sharded collections, you need to run the import process in
|mms| first. This ensures that no collections have their configurations
overriden accidentally.

.. include:: /includes/steps/enable-data-sharding.rst

.. _create-new-sharded-collection:

Create a new sharded collection
-------------------------------

You can create a new sharded collecton using |mms|. 

.. include:: /includes/steps/create-sharded-collection.rst

.. _configure-sharding-zones:

Configure zoned sharding
------------------------

.. note:: 
   Follow the next two procedures in this section if you intend on
   using zoned sharding for your sharded collections. Otherwise, you
   may skip this section.

Group shards into zones
~~~~~~~~~~~~~~~~~~~~~~~

Zones are a named group of one or more shards. After creating one or
more zones, you can assign a range of shard key values and their
corresponding documents to a zone. MongoDB eventually routes documents
within a given range to the associated zone. Each zone can include
multiple ranges and multiple shards. Each shard can belong to more than
one zone. Each shard displays its zone(s) to the right of its name
under :guilabel:`Deployment`.

.. include:: /includes/steps/configure-shard-zones.rst

.. _set-data-sharding-ranges:

Define how collections are sharded using ranges
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Ranges specify minimum and maximum values for each field in a shard
key. Each defined range is associated to a single zone. MongoDB
eventually routes documents within a given range to the associated
zone. The minimum value is an inclusive lower bound of the shard key
values. The maximum value is exclusive upper bound of the shard key
values. A range can belong to only one zone, but a zone can have
multiple ranges.

Documents are routed based on the configured zones and ranges once the
:term:`balancer` moves the range into the desired zone. Once that
occurs, documents within a range are routed to the associated zone and
those outside a range may be routed to any shard in the cluster.

.. include:: /includes/steps/edit-data-sharding-ranges.rst

.. _disable-data-sharding:

Disable sharded collection management
-------------------------------------

Click :guilabel:`Unmanage`.

.. important::
   When a sharded collection is unmanaged, your sharded collections
   and zones are *not* deleted. These collections and zones can no
   longer be managed from the |onprem| interface.

