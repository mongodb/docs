# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/distributed-queries.txt:6
# 8d8402c2fb454b46ab2f59436e22abf6
msgid "Distributed Queries"
msgstr ""

#: ../source/core/distributed-queries.txt:14
# d6689a40ad164a0bb7c97760798c1d8a
msgid "Read Operations to Sharded Clusters"
msgstr ""

#: ../source/core/distributed-queries.txt:16
# 1001047142494222b90eab04b04e896c
msgid ":term:`Sharded clusters <sharded cluster>` allow you to partition a data set among a cluster of :program:`mongod` instances in a way that is nearly transparent to the application. For an overview of sharded clusters, see the :doc:`/sharding` section of this manual."
msgstr ""

#: ../source/core/distributed-queries.txt:21
# 63db8796c1044c9ab9897e64cd3e4f09
msgid "For a sharded cluster, applications issue operations to one of the :program:`mongos` instances associated with the cluster."
msgstr ""

#: ../source/core/distributed-queries.txt:26
# f3ec40a3d05e424d8205d55878881eb3
msgid "Read operations on sharded clusters are most efficient when directed to a specific shard. Queries to sharded collections should include the collection's :ref:`shard key <sharding-shard-key>`. When a query includes a shard key, the :program:`mongos` can use cluster metadata from the :ref:`config database <sharding-config-server>` to route the queries to shards."
msgstr ""

#: ../source/core/distributed-queries.txt:35
# 6337479e07c5482baa2b86d520942727
msgid "If a query does not include the shard key, the :program:`mongos` must direct the query to *all* shards in the cluster. These *scatter gather* queries can be inefficient. On larger clusters, scatter gather queries are unfeasible for routine operations."
msgstr ""

#: ../source/core/distributed-queries.txt:42
# b047ac20bcf2472ebfbaf9b02c6cd1f2
msgid "For more information on read operations in sharded clusters, see the :doc:`/core/sharded-cluster-query-router` and :ref:`sharding-shard-key` sections."
msgstr ""

#: ../source/core/distributed-queries.txt:51
# afd7ee017ec644f387cf1163b07aceb3
msgid "Read Operations to Replica Sets"
msgstr ""

#: ../source/core/distributed-queries.txt:53
# a8bb3f889dad4315ba6b077e0f8f1cc4
msgid ":term:`Replica sets <replica set>` use :term:`read preferences <read preference>` to determine where and how to route read operations to members of the replica set. By default, MongoDB always reads data from a replica set's :term:`primary`. You can modify that behavior by changing the :ref:`read preference mode <replica-set-read-preference-modes>`."
msgstr ""

#: ../source/core/distributed-queries.txt:60
# 7540bb28009d40d0be5f667d845e2e03
msgid "You can configure the :ref:`read preference mode <replica-set-read-preference-modes>` on a per-connection or per-operation basis to allow reads from :term:`secondaries <secondary>` to:"
msgstr ""

#: ../source/core/distributed-queries.txt:65
# a68cd540707d4f698a44948a8b6476dd
msgid "reduce latency in multi-data-center deployments,"
msgstr ""

#: ../source/core/distributed-queries.txt:67
# f7473b15a7d045e9b0e8510c80b29354
msgid "improve read throughput by distributing high read-volumes (relative to write volume),"
msgstr ""

#: ../source/core/distributed-queries.txt:70
# 2ab4d6cfeaac4373b15952680fc00d3b
msgid "for backup operations, and/or"
msgstr ""

#: ../source/core/distributed-queries.txt:72
# 56919dc8298f43fc970e25e314de38f9
msgid "to allow reads during :ref:`failover <replica-set-failover>` situations."
msgstr ""

#: ../source/core/distributed-queries.txt:77
# a6331bd7a3c7459ba10ef1773fce3234
msgid "Read operations from secondary members of replica sets are not guaranteed to reflect the current state of the primary, and the state of secondaries will trail the primary by some amount of time. Often, applications don't rely on this kind of strict consistency, but application developers should always consider the needs of their application before setting read preference."
msgstr ""

#: ../source/core/distributed-queries.txt:84
# 5643edfa23cd4cfba267d0600f57680b
msgid "For more information on read preference or on the read preference modes, see :doc:`/core/read-preference` and :ref:`replica-set-read-preference-modes`."
msgstr ""

#: ../source/core/distributed-queries.txt:1
#: ../source/core/distributed-queries.txt:46
# b17e99391980461687974a00df6764ca
# 81f42abe99d544fbac5bf673548f0022
msgid "read operation"
msgstr ""

#: ../source/core/distributed-queries.txt:1
# b17e99391980461687974a00df6764ca
msgid "architecture"
msgstr ""

#: ../source/core/distributed-queries.txt:46
#: ../source/core/distributed-queries.txt:47
# 81f42abe99d544fbac5bf673548f0022
# f0ea1280905d4015bf6ee586d252364c
msgid "connection pooling"
msgstr ""

#: ../source/core/distributed-queries.txt:47
# f0ea1280905d4015bf6ee586d252364c
msgid "read operations"
msgstr ""

