.. _authorize-one-cloud-provider-access-role:

========================================
Authorize One Cloud Provider Access Role
========================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. include:: /includes/api-requirements.rst

.. include:: /includes/api-base-url-new.rst

.. include:: /includes/fact-projects-groups-synonyms.rst

.. note::

   This API endpoint is one step in a procedure to create unified AWS access
   for |service| services. For the complete procedure, see
   :ref:`set-up-unified-aws-access`.

Resource
--------

.. code-block:: none

   PATCH api/atlas/v1.0/groups/{GROUP-ID}/cloudProviderAccess/{ROLE-ID}

Request Path Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :widths: 20 20 60
   :header-rows: 1
   :stub-columns: 1

   * - Parameter
     - Type
     - Description

   * - ``GROUP-ID``
     - string
     - Unique identifier for the :ref:`project <group-id>` whose cloud
       provider roles you want to retrieve.

   * - ``ROLE-ID``
     - string
     - Unique ID of the role to authorize.

Request Query Parameters
~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/no-query-parameters.rst

Request Body Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :widths: 20 20 60
   :header-rows: 1
   :stub-columns: 1

   * - Parameter
     - Type
     - Description

   * - ``providerName``
     - string
     - The cloud provider for which to create a new role. Currently only
       ``AWS`` is supported.

   * - ``iamAssumedRoleArn``
     - string
     - Role |arn| that |service| assumes to access your |aws| account.

Response
--------

The HTTP document contains the following elements:

.. include:: /includes/list-tables/cloud-provider-access-output-fields.rst

Example Request
---------------

.. code-block:: shell

   curl --user "{PUBLIC-KEY}:{PRIVATE-KEY}" -X PATCH --digest \
        --header "Accept: application/json" \
        --header "Content-Type: application/json" \
        "https://cloud.mongodb.com/api/atlas/v1.0/groups/{GROUP-ID}/cloudProviderAccess/{ROLE-ID}?pretty=true" \
        --data '{ "providerName": "AWS", "iamAssumedRoleArn" : "{AWS-ROLE-ARN}" }'

Example Response
----------------

.. code-block:: json
   :copyable: false

   {  
     "atlasAWSAccountArn" : "arn:aws:iam::123456789012:user/test.user",
     "atlasAssumedRoleExternalId" : "3192be49-6e76-4b7d-a7b8-b486a8fc4483",
     "authorizedDate" : "2020-07-30T22:17:09Z",
     "createdDate" : "2020-07-30T20:20:36Z",
     "featureUsages" : [ ],
     "iamAssumedRoleArn" : "arn:aws:iam::772401394250:role/test-user-role",
     "providerName" : "AWS",
     "roleId" : "5f232b94af0a6b41747bcc2d"
   }
