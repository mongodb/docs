:template: guide

.. _guide-search-compound:

=================================================================
Build and Use an {+fts+} Index with Compound Operators
=================================================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Overview
--------

.. short-description::

   Perform a relevance-based search on multiple specific fields, using
   distinct search terms for each.

In this guide, you will learn how to implement compound searches
for distinct terms in multiple specific fields simultaneously using the
aggregation pipeline.

.. time:: 15

What You'll Need
----------------

- A MongoDB account. See :ref:`guides-create-atlas-account`.
- An Atlas cluster. See :ref:`guides-create-a-cluster`.
- A search index with default settings and dynamic indexing. See 
  :ref:`guides-search-dynamic`. 

Procedure
---------

.. procedure::
   :style: normal

   .. step:: Log in to MongoDB Atlas.

      Log in to MongoDB Atlas according to the steps described in 
      :ref:`Sign Up for a MongoDB Account <guides-create-atlas-account>`.

   .. step:: Navigate to the ``sample_supplies.sales`` collection.

      .. procedure::
         :style: connected

         .. step:: Select a project.

         .. step:: Populate your cluster with sample data.

            On your target cluster pane, click the three-dot button to 
            open the dropdown menu. Click :guilabel:`Load Sample Dataset`
            and wait for the load operation to complete.

         .. step:: Navigate to the ``sales`` collection of the 
            ``sample_supplies`` database.

            Click :guilabel:`Browse Collections` to pull up a list of
            databases in the sample dataset. In the right-hand pane,
            click the ``sample_supplies``, then click the ``sales``
            collection.

   .. step:: Create a ``$search`` aggregation stage.

      .. procedure::
         :style: connected

         .. step:: Click the :guilabel:`Aggregation` tab.

         .. step:: In the Aggregation pane, click on the dropdown menu
            labeled :guilabel:`Select...` and select the 
            :guilabel:`$search` stage.

         .. step:: Replace the placeholder code with the following
            ``compound`` operator:

            .. code-block:: json

               {
                 "compound": {
                   "filter": [{
                     "text": {
                       "query": "Online",
                       "path": "purchaseMethod"
                     }
                   }],
                   "should": [{
                     "text": {
                       "query": "notepad",
                       "path": "items",
                       "score": {"constant": {"value": 5}}
                     }
                   }]
                 }
               }

         .. step:: Review the results of the compound search in the
            right-hand pane. Due to the ``filter`` operator, only 
            records with a ``purchaseMethod`` value of ``Online`` 
            appear. Additionally, due to the ``should`` operator, 
            records with an ``items`` value of ``notepad`` score
            higher than those without.

      You now have a ``$search`` aggregation stage with a compound
      search definition. 

Summary
-------

If you successfully completed the procedure in this guide, you have
created an Atlas Search aggregation stage with a compound operator,
and have seen how different clauses in the operator interact to 
focus your search results across multiple axes. In the next guide, you
will learn how to group search results using facets.

.. guide-next::