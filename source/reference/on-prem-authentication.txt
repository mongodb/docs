===================================================
Optional: Configure Email Service, Twilio, and SNMP
===================================================

.. default-domain:: mongodb

Configure Email Service
-----------------------

Set the following value in the
``<install_dir>/conf/conf-mms.properties`` file:

.. code-block:: ini

   mms.emailDaoClass=com.xgen.svc.core.dao.email.JavaEmailDao

Then, in the same file, set the following values as defined by your email
provider. Defaults specified inline:

.. code-block:: ini

   mms.mail.transport=<smtp/smtps> # (defaults to smtp)
   mms.mail.hostname=<mail.example.com> # (defaults to localhost)
   mms.mail.port=<number> # (defaults to 25)
   mms.mail.tls=<true/false> # (defaults to false)

The following two values are optional,
and unless set default to disabled authentication:

.. code-block:: ini

   mms.mail.username=
   mms.mail.password=

AWS Simple Email Service Configuration
--------------------------------------

If you use the AWS Simple Email Service, set the following value in
``<install_dir>/conf/conf-mms.properties`` to configure integration with
AWS's Simple Email Service (SES:)

.. code-block:: ini

   mms.emailDaoClass=com.xgen.svc.core.dao.email.AwsEmailDao

To configure this integration you must also provide your AWS account
credentials in the following two properties:

.. code-block:: ini

   aws.accesskey=
   aws.secretkey=

.. _twilio-sms-configure:

Configure Twilio SMS Alert Support
----------------------------------

To receive alert notifications via SMS, signup for a Twilio account at
`<http://www.twilio.com/docs/quickstart>`_ and enter your account ID, API
token, and Twilio phone number into the following properties:

.. code-block:: ini

   twilio.account.sid=
   twilio.auth.token=
   twilio.from.num=

.. _snmp-heartbeat-configure:

Configure SNMP Heartbeat Support
--------------------------------

The MIB file is available for download at:
`<http://downloads.mongodb.com/on-prem-monitoring/MMS-MONGODB-MIB.txt>`_

You can configure the On-Prem MMS Server to send a periodic heartbeat trap notification
(v2c) that contain an internal health assessment of the MMS
Server.

The MMS Server can send traps to one or more endpoints on the standard
SNMP UDP port 162.

There are three configuration options that affect the heartbeat
behavior:

.. code-block:: ini

   # Listening UDP port for SNMP. (Note: Setting to less than 1024 will require running MMS server with root privileges.)
   snmp.listen.port=11611 #default

   # Period in seconds between heartbeat notifications
   snmp.default.heartbeat.interval=300 #default

   # Optional comma-separated list of hosts where 'heartbeat' traps will be sent on standard UDP port 162.
   # Leaving blank (the default) disables the SNMP heartbeat functionality
   snmp.default.hosts=


Optional: Configure a Required reCaptcha for User Registration
--------------------------------------------------------------

To enable `reCaptcha anti-spam test
<http://www.google.com/recaptcha/whyrecaptcha>`_ on new user
registration, `sign up for a reCaptcha account
<https://www.google.com/recaptcha/admin/create>`_ and provide the API
credentials in the following two properties:

.. code-block:: ini

   reCaptcha.public.key=
   reCaptcha.private.key=

Optional: Password Policy
-------------------------

You can configure the password policy for MMS user accounts with the
following properties:

.. code-block:: ini

   # The number of previous passwords to remember. A remembered password can not be reused.
   mms.password.minChangesBeforeReuse=

   # The number of failed login attempts before an account becomes locked. An account can only be
   # unlocked by an MMS Administrator.
   mms.password.maxFailedAttemptsBeforeAccountLock=

   # The number of days before an account that has not visisted the MMS website should be locked.
   mms.password.maxDaysInactiveBeforeAccountLock=

   # The number of days a password can be in use before it must be changed.
   mms.password.maxDaysBeforeChangeRequired=

Optional: Session Management
----------------------------

You can configure the number of hours before a session on the MMS
website expires with the following property:

.. code-block:: ini

   mms.session.maxHours=
