# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: 2014-04-08 19:36+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-manual/language/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# d73cb21616b840f8b6e7e05f6035a59e
#: ../source/tutorial/backup-with-mongodump.txt:3
msgid "Back Up and Restore with MongoDB Tools"
msgstr ""

# c630b71b1e5b47c195289f6913aac8b4
#: ../source/tutorial/backup-with-mongodump.txt:7
msgid ""
"This document describes the process for writing and restoring backups to "
"files in binary format  with the :program:`mongodump`  and "
":program:`mongorestore` tools."
msgstr ""

# dd8bc52ddd04408eb49d71e20777cd08
#: ../source/tutorial/backup-with-mongodump.txt:11
msgid ""
"Use these tools for backups if other backup methods, such as the `MMS Backup"
" Service <https://mms.mongodb.com/?pk_campaign=mongodb-docs-tools>`_ or "
":doc:`file system snapshots </tutorial/backup-with-filesystem-snapshots>` "
"are unavailable."
msgstr ""

# b4f0f543257b4a98ae4dabae81de27c0
#: ../source/tutorial/backup-with-mongodump.txt:16
msgid ""
":doc:`/core/backups`, :doc:`/reference/program/mongodump`, and "
":doc:`/reference/program/mongorestore`."
msgstr ""

# 4d6f9894b8394bb6935d1fb9c061aa20
#: ../source/tutorial/backup-with-mongodump.txt:23
msgid "Backup a Database with ``mongodump``"
msgstr ""

# fcf80a4b79074b69b1043c825ad7e2dc
#: ../source/includes/fact-mongodump-local-database.rst:1
msgid ""
":program:`mongodump` does *not* dump the content of the ``local`` database."
msgstr ""

# 6d65905261eb4d6f9d5a7edac6594c37
#: ../source/includes/access-mongodump-collections.rst:1
msgid ""
"To backup all the databases in a cluster via :program:`mongodump`, you "
"should have the :authrole:`backup` role. The :authrole:`backup` role "
"provides all the needed privileges for backing up all database. The role "
"confers no additional access, in keeping with the policy of :term:`least "
"privilege`."
msgstr ""

# 479dc6e08db249d387fd7cacd90d170f
#: ../source/includes/access-mongodump-collections.rst:6
msgid ""
"To backup a given database, you must have ``read`` access on the database. "
"Several roles provide this access, including the :authrole:`backup` role."
msgstr ""

# 5846af4408bd4078bd0c8216fba4396e
#: ../source/includes/access-mongodump-collections.rst:9
msgid ""
"To backup the ``system.profile`` collection in a database, you must have "
"``read`` access on certain system collections in the database. Several roles"
" provide this access, including the :authrole:`clusterAdmin` and "
":authrole:`dbAdmin` roles."
msgstr ""

# 38b441de356c45b3a9fdc73657f86687
#: ../source/includes/access-mongodump-users.rst:3
msgid ""
"To backup users and :ref:`user-defined roles <user-defined-roles>` for a "
"given database, you must have access to the ``admin`` database. MongoDB "
"stores the user data and role definitions for all databases in the ``admin``"
" database."
msgstr ""

# c22eb629e20f46c0906beca32564a7d1
#: ../source/includes/access-mongodump-users.rst:8
msgid ""
"Specifically, to backup a given database's users, you must have the "
":authaction:`find` :ref:`action <security-user-actions>` on the ``admin`` "
"database's :data:`admin.system.users` collection. The :authrole:`backup` and"
" :authrole:`userAdminAnyDatabase` roles both provide this privilege."
msgstr ""

# 5ac638ec7600432bb758566bb8bb9633
#: ../source/includes/access-mongodump-users.rst:13
msgid ""
"To backup the user-defined roles on a database, you must have the "
":authaction:`find` action on the ``admin`` database's "
":data:`admin.system.roles` collection. Both the :authrole:`backup` and "
":authrole:`userAdminAnyDatabase` roles provide this privilege."
msgstr ""

# dd373e46d31f4713b3398d6f2d49af86
#: ../source/tutorial/backup-with-mongodump.txt:32
msgid "Basic ``mongodump`` Operations"
msgstr ""

# a6276a87d2c74235a2ce129ef8cec8bc
#: ../source/tutorial/backup-with-mongodump.txt:34
msgid "The :program:`mongodump` utility can back up data by either:"
msgstr ""

# ed4f82121b9047dab10a09af1e250ba9
#: ../source/tutorial/backup-with-mongodump.txt:36
msgid ""
"connecting to a running :program:`mongod` or :program:`mongos` instance, or"
msgstr ""

# 2bb292b77e2d43f986e395f0f1587268
#: ../source/tutorial/backup-with-mongodump.txt:39
msgid "accessing data files without an active instance."
msgstr ""

# 5ac2b78def2641d384428d05a1f3a1e6
#: ../source/tutorial/backup-with-mongodump.txt:41
msgid ""
"The utility can create a backup for an entire server, database or "
"collection, or can use a query to backup just part of a collection."
msgstr ""

# f831af64791e49a2a6b5c17a5554de8b
#: ../source/tutorial/backup-with-mongodump.txt:44
msgid ""
"When you run :program:`mongodump` without any arguments, the command "
"connects to the MongoDB instance on the local system (e.g. ``127.0.0.1`` or "
"``localhost``) on port ``27017`` and creates a database backup named "
"``dump/`` in the current directory."
msgstr ""

# b141b763756a4117b5e5af395d886ff4
#: ../source/includes/warning-mongodump-compatibility-2.2.rst:1
msgid ""
"The data format used by :program:`mongodump` from version 2.2 or later is "
"*incompatible* with earlier versions of :program:`mongod`. Do not use recent"
" versions of :program:`mongodump` to back up older data stores."
msgstr ""

# 3ce01b0968b145dbac8da8d2bc3a439d
#: ../source/tutorial/backup-with-mongodump.txt:99
msgid "Point in Time Operation Using Oplogs"
msgstr ""

# 9219ef92f3fd4ca193565ce393f929f2
#: ../source/tutorial/backup-with-mongodump.txt:101
msgid ""
"Use the :option:`--oplog <mongodump --oplog>` option with "
":program:`mongodump` to collect the :term:`oplog` entries to build a point-"
"in-time snapshot of a database within a replica set. With :option:`--oplog "
"<mongodump --oplog>`, :program:`mongodump` copies all the data from the "
"source database as well as all of the :term:`oplog` entries from the "
"beginning of the backup procedure to until the backup procedure completes. "
"This backup procedure, in conjunction with :option:`mongorestore "
"--oplogReplay <mongorestore --oplogReplay>`, allows you to restore a backup "
"that reflects the specific moment in time that corresponds to when "
":program:`mongodump` completed creating the dump file."
msgstr ""

# 4a3c713479b14e13990d19f7abd36605
#: ../source/tutorial/backup-with-mongodump.txt:116
msgid "Create Backups Without a Running ``mongod`` Instance"
msgstr ""

# d78afd6d9db44aac8c3c4cb82fc6dc7a
#: ../source/tutorial/backup-with-mongodump.txt:118
msgid ""
"If your MongoDB instance is not running, you can use the :option:`--dbpath "
"<mongodump --dbpath>` option to specify the location to your MongoDB "
"instance's database files. :program:`mongodump` reads from the data files "
"directly with this operation. This locks the data directory to prevent "
"conflicting writes. The :program:`mongod` process must *not* be running or "
"attached to these data files when you run :program:`mongodump` in this "
"configuration. Consider the following example:"
msgstr ""

# f1f91e8c3f3a4408bb2ed13e458c355f
# 36e28dc8c3524545aee498216b7725a5
#: ../source/tutorial/backup-with-mongodump.txt:0
msgid "Example"
msgstr ""

# 4c436c0ebb74402d98075ae81adde60a
#: ../source/tutorial/backup-with-mongodump.txt:127
msgid ""
"Given a MongoDB instance that contains the ``customers``, ``products``, and "
"``suppliers`` databases, the following :program:`mongodump` operation backs "
"up the databases using the :option:`--dbpath <mongodump --dbpath>` option, "
"which specifies the location of the database files on the host:"
msgstr ""

# 7d15aab11b084365b749304884db0f93
#: ../source/tutorial/backup-with-mongodump.txt:146
msgid "Create Backups from Non-Local ``mongod`` Instances"
msgstr ""

# 2da160ecf9b1402893419d92c8e195c7
#: ../source/tutorial/backup-with-mongodump.txt:148
msgid ""
"The :option:`--host <mongodump --host>` and :option:`--port <mongodump "
"--port>` options for :program:`mongodump` allow you to connect to and backup"
" from a remote host. Consider the following example:"
msgstr ""

# 43096c1e02e443e197cd8565c1bb2c49
#: ../source/tutorial/backup-with-mongodump.txt:157
msgid ""
"On any :program:`mongodump` command you may, as above, specify username and "
"password credentials to specify database authentication."
msgstr ""

# 283d8e4944d849beb30afcf575af218b
#: ../source/tutorial/backup-with-mongodump.txt:163
msgid "Restore a Database with ``mongorestore``"
msgstr ""

# 54e9c63ee83b4a88870909963e99031f
#: ../source/includes/access-mongorestore.rst:3
msgid ""
"To restore users and :ref:`user-defined roles <user-defined-roles>` on a "
"given database, you must have access to the ``admin`` database. MongoDB "
"stores the user data and role definitions for all databases in the ``admin``"
" database."
msgstr ""

# bf9abfc9be0e42a9bedb8db99e0c6203
#: ../source/includes/access-mongorestore.rst:8
msgid ""
"Specifically, to restore users to a given database, you must have the "
":authaction:`insert` :ref:`action <security-user-actions>` on the ``admin`` "
"database's :data:`admin.system.users` collection. The :authrole:`restore` "
"role provides this privilege."
msgstr ""

# 5af7aa42457d43009257a62caa199a37
#: ../source/includes/access-mongorestore.rst:13
msgid ""
"To restore user-defined roles to a database, you must have the "
":authaction:`insert` action on the ``admin`` database's "
":data:`admin.system.roles` collection. The :authrole:`restore` role provides"
" this privilege."
msgstr ""

# 18c3b28f3ca245cab6ef21e78a868efc
#: ../source/tutorial/backup-with-mongodump.txt:168
msgid "Basic ``mongorestore`` Operations"
msgstr ""

# 43ed8455f64a440ebe161e241f260055
#: ../source/tutorial/backup-with-mongodump.txt:170
msgid ""
"The :program:`mongorestore` utility restores a binary backup created by "
":program:`mongodump`. By default, :program:`mongorestore` looks for a "
"database backup in the :file:`dump/` directory."
msgstr ""

# 2e57aa32d1714378860c1d10de7b2353
#: ../source/tutorial/backup-with-mongodump.txt:174
msgid "The :program:`mongorestore` utility can restore data either by:"
msgstr ""

# aa24e109216a4ca499b93f326f71c505
#: ../source/tutorial/backup-with-mongodump.txt:176
msgid ""
"connecting to a running :program:`mongod` or :program:`mongos` directly, or"
msgstr ""

# d412e3fa28bf44e3aa8fb93a4b4a3b21
#: ../source/tutorial/backup-with-mongodump.txt:179
msgid ""
"writing to a set of MongoDB data files without use of a running "
":program:`mongod`."
msgstr ""

# 276c44434927472994a72489b99e5149
#: ../source/tutorial/backup-with-mongodump.txt:182
msgid ""
":program:`mongorestore` can restore either an entire database backup or a "
"subset of the backup."
msgstr ""

# 6e0ce3429b0a4259ae944058eb1e45a3
#: ../source/tutorial/backup-with-mongodump.txt:185
msgid ""
"To use :program:`mongorestore` to connect to an active :program:`mongod` or "
":program:`mongos`, use a command with the following prototype form:"
msgstr ""

# 5c495fbd5fa5495ebcd79c5d6758a7b4
#: ../source/tutorial/backup-with-mongodump.txt:192
msgid ""
"To use :program:`mongorestore` to write to data files without using a "
"running :program:`mongod`, use a command with the following prototype form:"
msgstr ""

# 5f2ec85438864173846562567ea81cfe
# 5399bf9704524fcba4d9237f64ead87c
#: ../source/tutorial/backup-with-mongodump.txt:200
#: ../source/tutorial/backup-with-mongodump.txt:299
msgid "Consider the following example:"
msgstr ""

# 5057f6abc7134eb08d7f05daaf844e59
#: ../source/tutorial/backup-with-mongodump.txt:206
msgid ""
"Here, :program:`mongorestore` imports the database backup in the "
":file:`dump-2013-10-25` directory to the :program:`mongod` instance running "
"on the localhost interface."
msgstr ""

# 75b75b892e5544cf85bbda291f8b4e87
#: ../source/tutorial/backup-with-mongodump.txt:213
msgid "Restore Point in Time Oplog Backup"
msgstr ""

# 128eafd376374ec3a8f64621395bee72
#: ../source/tutorial/backup-with-mongodump.txt:215
msgid ""
"If you created your database dump using the :option:`--oplog <mongodump "
"--oplog>` option to ensure a point-in-time snapshot, call "
":program:`mongorestore` with the :option:`--oplogReplay <mongorestore "
"--oplogReplay>` option, as in the following example:"
msgstr ""

# ea1e4bc63b8f42128d800d82e6850ea3
#: ../source/tutorial/backup-with-mongodump.txt:225
msgid ""
"You may also consider using the :option:`mongorestore --objcheck` option to "
"check the integrity of objects while inserting them into the database, or "
"you may consider the :option:`mongorestore --drop` option to drop each "
"collection from the database before restoring from backups."
msgstr ""

# 5739d754863b494cbc793366c5a08544
#: ../source/tutorial/backup-with-mongodump.txt:234
msgid "Restore a Subset of data from a Binary Database Dump"
msgstr ""

# a659e92ffb16490193cd5c6953008397
#: ../source/tutorial/backup-with-mongodump.txt:236
msgid ""
":program:`mongorestore` also includes the ability to a filter to all input "
"before inserting it into the new database. Consider the following example:"
msgstr ""

# 7005b155afae4263865df9cd5ab3fa04
#: ../source/tutorial/backup-with-mongodump.txt:244
msgid ""
"Here, :program:`mongorestore` only adds documents to the database from the "
"dump located in the :file:`dump/` folder *if* the documents have a field "
"name ``field`` that holds a value of ``1``. Enclose the filter in single "
"quotes (e.g. ``'``) to prevent the filter from interacting with your shell "
"environment."
msgstr ""

# a1974ed3ce01452b80a44bbc80c7f941
#: ../source/tutorial/backup-with-mongodump.txt:253
msgid "Restore Without a Running ``mongod``"
msgstr ""

# d68db14769c0446a84efcdd04cf6b08e
#: ../source/tutorial/backup-with-mongodump.txt:255
msgid ""
":program:`mongorestore` can write data to MongoDB data files without needing"
" to connect to a :program:`mongod` directly."
msgstr ""

# b284fc48366a4125a597f0c2c45b55c1
#: ../source/tutorial/backup-with-mongodump.txt:260
msgid "Given a set of backed up databases in the ``/data/backup/`` directory:"
msgstr ""

# 77759d40f3e94486b80e86f997405195
#: ../source/tutorial/backup-with-mongodump.txt:262
msgid ":file:`/data/backup/customers`,"
msgstr ""

# 3b7671470c864f20a383009913aec0a5
#: ../source/tutorial/backup-with-mongodump.txt:263
msgid ":file:`/data/backup/products`, and"
msgstr ""

# 45cb713ef0b84d8da4f600aaf12640ce
#: ../source/tutorial/backup-with-mongodump.txt:264
msgid ":file:`/data/backup/suppliers`"
msgstr ""

# 1cc12246b5434d4b96d1a16988270fcb
#: ../source/tutorial/backup-with-mongodump.txt:266
msgid ""
"The following :program:`mongorestore` command restores the ``products`` "
"database. The command uses the :option:`--dbpath <mongorestore --dbpath>` "
"option to specify the path to the MongoDB data files:"
msgstr ""

# 7a178fbc31664b36a2c1b9c9e7dc6972
#: ../source/tutorial/backup-with-mongodump.txt:275
msgid ""
"The :program:`mongorestore` imports the database backup in the "
":file:`/data/backup/products` directory to the :program:`mongod` instance "
"that runs on the localhost interface. The :program:`mongorestore` operation "
"imports the backup even if the :program:`mongod` is not running."
msgstr ""

# 0f62d20b8f684207a4a51414461efa24
#: ../source/tutorial/backup-with-mongodump.txt:281
msgid ""
"The :option:`--journal <mongorestore --journal>` option ensures that "
":program:`mongorestore` records all operation in the durability "
":term:`journal`. The journal prevents data file corruption if anything (e.g."
" power failure, disk failure, etc.) interrupts the restore operation."
msgstr ""

# 68a0748f12c64e8a88c76f54b6f3abe4
#: ../source/tutorial/backup-with-mongodump.txt:287
msgid ""
":doc:`/reference/program/mongodump` and "
":doc:`/reference/program/mongorestore`."
msgstr ""

# 1603bd5883794dd189f8221dce8e5d35
#: ../source/tutorial/backup-with-mongodump.txt:291
msgid "Restore Backups to Non-Local ``mongod`` Instances"
msgstr ""

# d3927c47d58347509c23a100f896647a
#: ../source/tutorial/backup-with-mongodump.txt:293
msgid ""
"By default, :program:`mongorestore` connects to a MongoDB instance running "
"on the localhost interface (e.g. ``127.0.0.1``) and on the default port "
"(``27017``). If you want to restore to a different host or port, use the "
":option:`--host <mongorestore --host>` and :option:`--port <mongorestore "
"--port>` options."
msgstr ""

# 6bf9282aabb649e8bdb9132bfe757ab3
#: ../source/tutorial/backup-with-mongodump.txt:305
msgid ""
"As above, you may specify username and password connections if your "
":program:`mongod` requires authentication."
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:49
msgid ""
"To backup data from a :program:`mongod` or :program:`mongos` instance "
"running on the same machine and on the default port of ``27017``, use the "
"following command:"
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:59
msgid ""
"You can also specify the :option:`--host <mongodump --host>` and "
":option:`--port <mongodump --port>` of the MongoDB instance that the "
":program:`mongodump` should connect to. For example:"
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:67
msgid ""
":program:`mongodump` will write :term:`BSON` files that hold a copy of data "
"accessible via the :program:`mongod` listening on port ``27017`` of the "
"``mongodb.example.net`` host. See :ref:`backup-from-non-local` for more "
"information."
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:72
msgid ""
"To use :program:`mongodump` without a running MongoDB instance, specify the "
":option:`--dbpath <mongodump --dbpath>` option to read directly from MongoDB"
" data files. See :ref:`backup-from-data-files` for details."
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:76
msgid ""
"To specify a different output directory, you can use the :option:`--out or "
"-o <mongodump --out>` option:"
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:83
msgid ""
"To limit the amount of data included in the database dump, you can specify "
":option:`--db <mongodump --db>` and :option:`--collection <mongodump "
"--collection>` as options to :program:`mongodump`. For example:"
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:92
msgid ""
"This operation creates a dump of the collection named ``myCollection`` from "
"the database ``test`` in a :file:`dump/` subdirectory of the current working"
" directory."
msgstr ""

#: ../source/includes/fact-mongodump-overwrite-files.rst:1
msgid ""
":program:`mongodump` overwrites output files if they exist in the backup "
"data folder. Before running the :program:`mongodump` command multiple times,"
" either ensure that you no longer need the files in the output folder (the "
"default is the ``dump/`` folder) or rename the folders or files."
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:137
msgid ""
"The :option:`--out or -o <mongodump --out>` option allows you to specify the"
" directory where :program:`mongodump` will save the backup. "
":program:`mongodump` creates a separate backup directory for each of the "
"backed up databases: :file:`dataout/customers`, :file:`dataout/products`, "
"and :file:`dataout/suppliers`."
msgstr ""

#~ msgid ""
#~ "To backup data from a :program:`mongod` or :program:`mongos` instance "
#~ "running on the same machine and on the default port of ``27017`` use the "
#~ "following command:"
#~ msgstr ""

#~ msgid ""
#~ "To limit the amount of data included in the database dump, you can specify "
#~ ":option:`--db <mongodump --db>` and :option:`--collection <mongodump "
#~ "--collection>` as options to the :program:`mongodump` command. For example:"
#~ msgstr ""

#~ msgid ""
#~ ":program:`mongodump` will write :term:`BSON` files that hold a copy of data "
#~ "accessible via the :program:`mongod` listening on port ``27017`` of the "
#~ "``mongodb.example.net`` host."
#~ msgstr ""

#~ msgid ""
#~ "This command creates a dump of the collection named ``collection`` from the "
#~ "database ``test`` in a :file:`dump/` subdirectory of the current working "
#~ "directory."
#~ msgstr ""

#~ msgid ""
#~ "The :option:`--out <mongodump --out>` option allows you to specify the "
#~ "directory where :program:`mongodump` will save the backup. "
#~ ":program:`mongodump` creates a separate backup directory for each of the "
#~ "backed up databases: :file:`dataout/customers`, :file:`dataout/products`, "
#~ "and :file:`dataout/suppliers`."
#~ msgstr ""
