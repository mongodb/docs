# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: 2014-04-08 18:53+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-manual/language/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# 12508b927857476d8addf2846cf9bf8c
#: ../source/reference/operator/query/or.txt:3
msgid "$or"
msgstr ""

# 4ad635208d6743e1be78bfedff220b6a
#: ../source/reference/operator/query/or.txt:9
msgid ""
"The :query:`$or` operator performs a logical ``OR`` operation on an array of"
" *two or more* ``<expressions>`` and selects the documents that satisfy *at "
"least* one of the ``<expressions>``. The :query:`$or` has the following "
"syntax:"
msgstr ""

# af22d51873cc4fd4a9daa1ad88591042
#: ../source/reference/operator/query/or.txt:18
msgid "Consider the following example:"
msgstr ""

# 42395949fce84cd69630c77030e75553
#: ../source/reference/operator/query/or.txt:29
msgid "Behaviors"
msgstr ""

# d2f42a01fd334cdb98ea756b35d98c4f
#: ../source/reference/operator/query/or.txt:34
msgid "``$or`` Clauses and Indexes"
msgstr ""

# 01e2fe1bf0334d0bb4468ead3cecc78d
#: ../source/reference/operator/query/or.txt:87
msgid "``$or`` and Sort Operations"
msgstr ""

# 36fe709d9671428b8af8d719e8e64f60
#: ../source/reference/operator/query/or.txt:64
msgid "``$or`` and ``text`` Queries"
msgstr ""

# ae95b823d1604d7bb2eb596baf72ac3e
#: ../source/reference/operator/query/or.txt:76
msgid "``$or`` and GeoSpatial Queries"
msgstr ""

# 4d475b44933c45a588ecd15af6ea4337
#: ../source/reference/operator/query/or.txt:80
msgid ""
":operator:`$or` supports :doc:`geospatial clauses </reference/operator"
"/query-geospatial>` with the following exception for the near clause (near "
"clause includes :query:`$nearSphere` and :query:`$near`). :operator:`$or` "
"cannot contain a near clause with any other clause."
msgstr ""

# ca2f9ce8b65a4c0a9a3ee4f1f5200c2a
#: ../source/reference/operator/query/or.txt:96
msgid "``$or`` versus ``$in``"
msgstr ""

# e53923a3535b4d83be13917f9c303c87
#: ../source/reference/operator/query/or.txt:98
msgid ""
"When using :query:`$or` with ``<expressions>`` that are equality checks for "
"the value of the same field, use the :query:`$in` operator instead of the "
":query:`$or` operator."
msgstr ""

# 64caa5f6c172483abc64f413b2efd943
#: ../source/reference/operator/query/or.txt:115
msgid ""
":query:`$and`, :method:`~db.collection.find()`, :method:`~cursor.sort()`, "
":query:`$in`"
msgstr ""

#: ../source/reference/operator/query/or.txt:24
msgid ""
"This query will select all documents in the ``inventory`` collection where "
"either the ``quantity`` field value is less than ``20`` **or** the ``price``"
" field value equals ``10``."
msgstr ""

#: ../source/reference/operator/query/or.txt:36
msgid ""
"When evaluating the clauses in the :query:`$or` expression, MongoDB either "
"performs a collection scan or, if all the clauses are supported by indexes, "
"MongoDB performs index scans. That is, for MongoDB to use indexes to "
"evaluate an :query:`$or` expression, all the clauses in the :query:`$or` "
"expression must be supported by indexes. Otherwise, MongoDB will perform a "
"collection scan."
msgstr ""

#: ../source/reference/operator/query/or.txt:43
msgid ""
"When using indexes with :query:`$or` queries, each clause of an :query:`$or`"
" can use its own index.  Consider the following query:"
msgstr ""

#: ../source/reference/operator/query/or.txt:50
msgid ""
"To support this query, rather than a compound index, you would create one "
"index on ``quantity`` and another index on ``price``:"
msgstr ""

#: ../source/reference/operator/query/or.txt:58
msgid ""
"MongoDB can use all but the :doc:`geoHaystack </core/geohaystack>` index to "
"support :query:`$or` clauses."
msgstr ""

#: ../source/reference/operator/query/or.txt:68
msgid ""
"If :query:`$or` includes a :query:`$text` query, all clauses in the "
":query:`$or` array must be supported by an index. This is because a "
":query:`$text` query *must* use an index, and :query:`$or` can only use "
"indexes if all its clauses are supported by indexes. If the :query:`$text` "
"query cannot use an index, the query will return an error."
msgstr ""

#: ../source/reference/operator/query/or.txt:91
msgid ""
"When executing :query:`$or` queries with a :method:`~cursor.sort()`, MongoDB"
" can now use indexes that support the :query:`$or` clauses. Previous "
"versions did not use the indexes."
msgstr ""

#: ../source/reference/operator/query/or.txt:102
msgid ""
"For example, to select all documents in the ``inventory`` collection where "
"the ``quantity`` field value equals either ``20`` *or* ``50``, use the "
":query:`$in` operator:"
msgstr ""

#: ../source/reference/operator/query/or.txt:111
msgid "Nested ``$or`` Clauses"
msgstr ""

#: ../source/reference/operator/query/or.txt:113
msgid "You may nest :query:`$or` operations."
msgstr ""

#~ msgid ""
#~ "You may nest :query:`$or` operations; however, these expressions are not as "
#~ "efficiently optimized as top-level."
#~ msgstr ""

#~ msgid ""
#~ "This query will select all documents in the ``inventory`` collection where "
#~ "either the ``qty`` field value is less than ``20`` **or** the ``sale`` field"
#~ " value is ``true``."
#~ msgstr ""

#~ msgid ""
#~ "When using indexes with :query:`$or` queries, each clause of an :query:`$or`"
#~ " will execute in parallel. These clauses can each use their own index. "
#~ "Consider the following query:"
#~ msgstr ""

#~ msgid ""
#~ "To support this query, rather than a compound index, you would create one "
#~ "index on ``price`` and another index on ``sale``:"
#~ msgstr ""

#~ msgid ""
#~ "When using the :query:`$or` operator with the :method:`~cursor.sort()` "
#~ "method, the query will **not** use the indexes on the :query:`$or` fields. "
#~ "Consider the following query which adds a :method:`~cursor.sort()` method to"
#~ " the above query:"
#~ msgstr ""

#~ msgid ""
#~ "This modified query will not use the index on ``price`` nor the index on "
#~ "``sale``."
#~ msgstr ""

#~ msgid ""
#~ "If :query:`$or` includes a :query:`$text` query, all clauses in the "
#~ ":query:`$or` array must be indexed."
#~ msgstr ""

#~ msgid ""
#~ "For example, to select all documents in the ``inventory`` collection where "
#~ "the ``qty`` field value equals either ``20`` *or* ``50``, use the "
#~ ":query:`$in` operator:"
#~ msgstr ""
