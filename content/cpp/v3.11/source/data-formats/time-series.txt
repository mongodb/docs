.. _cpp-time-series:

================
Time Series Data
================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Overview
--------

In this guide, you can learn how to use the {+driver-short+} to store
and interact with **time series data**.

Time series data is composed of the following components:

- Measured quantity
- Timestamp for the measurement
- Metadata that describes the measurement

The following table describes sample situations for which you could store time
series data:

.. list-table::
   :widths: 33, 33, 33
   :header-rows: 1
   :stub-columns: 1

   * - Situation
     - Measured Quantity
     - Metadata

   * - Recording monthly sales by industry
     - Revenue in USD
     - Company, country

   * - Tracking weather changes
     - Precipitation level
     - Location, sensor type

   * - Recording fluctuations in housing prices
     - Monthly rent price
     - Location, currency

.. _cpp-time-series-create:

Create a Time Series Collection
-------------------------------

.. important:: Server Version for Time Series Collections

   To create and interact with time series collections, you must be
   connected to a deployment running {+mdb-server+} 5.0 or later.

You can create a time series collection to store time series data.  
To create a time series collection, perform the following actions:

1. Create a BSON document that specifies the properties of
   your time series collection.

#. Call the ``create_collection()`` method and pass the collection
   name and the time series BSON document as arguments.

.. _cpp-time-series-create-example:

Example
~~~~~~~

This example creates the ``sept2023`` time series collection in the
``precipitation`` database with the following configuration:

- ``timeField`` is set to ``"timestamp"``
- ``metaField`` is set to ``"location"``
- ``granularity`` is set to ``"minutes"``

.. literalinclude:: /includes/data-formats/time-series.cpp
   :start-after: start-create-ts
   :end-before: end-create-ts
   :language: php
   :dedent:

To verify that you successfully created the time series collection, run
the ``list_collections()`` method on the database and print the results:

.. io-code-block::
   :copyable: true

   .. input:: /includes/data-formats/time-series.cpp
      :start-after: start-list-colls
      :end-before: end-list-colls
      :language: php
      :dedent:

   .. output::
      :language: console
      :visible: false

      { "name" : "sept2023", "type" : "timeseries", "options" : { "timeseries" :
      { "timeField" : "timestamp", "metaField" : "location", "granularity" :
      "minutes", "bucketMaxSpanSeconds" : 86400 } }, "info" : ... }

.. _cpp-time-series-store:

Store Time Series Data
----------------------

You can insert data into a time series collection by using the ``insert_one()``
or ``insert_many()`` methods and specifying the measurement, timestamp, and metadata
in each inserted document.

.. tip::

   To learn more about inserting documents into a collection, see the :ref:`cpp-write-insert`
   guide.

Example
~~~~~~~

This example inserts New York City precipitation data into the ``sept2023``
time series collection created in the :ref:`Create a Time Series Collection example
<cpp-time-series-create-example>`. Each document contains the following fields:

- ``precipitation_mm``, which stores precipitation measurements in millimeters
- ``location``, which stores location metadata
- ``timestamp``, which stores the time of the measurement collection

.. literalinclude:: /includes/data-formats/time-series.cpp
   :start-after: start-insert-ts
   :end-before: end-insert-ts
   :language: php
   :dedent:

.. _cpp-time-series-query:

Query Time Series Data
----------------------

You can use the same syntax and conventions to query data stored in a time 
series collection as you use when performing read or aggregation operations on
other collections. To find more information about these operations, see
the :ref:`Additional Information <cpp-time-series-addtl-info>` section.

.. _cpp-time-series-addtl-info:

Additional Information
----------------------

To learn more about the concepts mentioned in this guide, see the
following Server manual entries:

- :manual:`Time Series </core/timeseries-collections/>`
- :manual:`Create and Query a Time Series Collection </core/timeseries/timeseries-procedures/>`
- :manual:`Set Granularity for Time Series Data </core/timeseries/timeseries-granularity/>`

To learn more about performing read operations, see :ref:`cpp-read`.

To learn more about performing aggregation operations, see the :ref:`cpp-aggregation`
guide.

API Documentation
~~~~~~~~~~~~~~~~~

To learn more about the methods mentioned in this guide, see the following
API documentation:

- `create_collection() <{+api+}/classmongocxx_1_1v__noabi_1_1database.html#a8989a894e021e87d704288a8d2522069>`__
- `list_collections() <{+api+}/classmongocxx_1_1v__noabi_1_1database.html#aacef87f0bc585c536ce0dfae67cfefe8>`__
- `insert_many() <{+api+}/classmongocxx_1_1v__noabi_1_1collection.html#a533e1d929fb71a6e85303769f3175275>`__
