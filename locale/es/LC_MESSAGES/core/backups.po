# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: 2014-04-08 19:25+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# d7bc5d27c3184eb4990609e97f5688e4
#: ../source/core/backups.txt:3
msgid "MongoDB Backup Methods"
msgstr ""

# f41b0d7ec03642e19ce4b1c4db5d8b5f
#: ../source/core/backups.txt
msgid "On this page"
msgstr ""

# a9a30d247b1c4fecaac25780a0ee576e
#: ../source/core/backups.txt:13
msgid ""
"When deploying MongoDB in production, you should have a strategy for "
"capturing and restoring backups in the case of data loss events."
msgstr ""

# ad35a313755a4663857a4a9a66ee0ce1
#: ../source/core/backups.txt:18
msgid "Back Up with |MMS| or Ops Manager"
msgstr ""

# 91395d71c08d44f1adc5b3cdd28d96da
#: ../source/core/backups.txt:20
msgid ""
"|MMS| is a hosted back up, monitoring, and automation service for "
"MongoDB. |mms-home| supports backing up and restoring MongoDB "
":term:`replica sets <replica set>` and :term:`sharded clusters <sharded "
"cluster>` from a graphical user interface."
msgstr ""

# a2a7d73dce5d4531a86bcb47e6438bf9
#: ../source/core/backups.txt:28
msgid "|MMS|"
msgstr ""

# 70b3664f7cd64aa68ddf4060274fac21
#: ../source/core/backups.txt:30
msgid ""
"The |mms-home| supports the backing up and restoring of MongoDB "
"deployments."
msgstr ""

# 9bc7088ee0b64002ab3c934ea6ceca6b
#: ../source/core/backups.txt:33
msgid ""
"|MMS| continually backs up MongoDB :term:`replica sets <replica set>` and"
" :term:`sharded clusters <sharded cluster>` by reading the :term:`oplog` "
"data from your MongoDB deployment. |MMS| creates snapshots of your data "
"at set intervals, and can also offer point-in-time recovery of MongoDB "
"replica sets and sharded clusters."
msgstr ""

# 3b036dc86a6b406189160888da244fab
#: ../source/core/backups.txt
msgid "Tip"
msgstr ""

# fcd828ec08e04408a6e5679b56d343c3
#: ../source/core/backups.txt:43
msgid ""
"To get started with |MMS| Backup, sign up for |mms-home|. For "
"documentation on |MMS|, see the |mms-docs|."
msgstr ""

# fa513ab4a31f41a8b834777c51dbd5e8
#: ../source/core/backups.txt:51
msgid "Ops Manager"
msgstr ""

# 789275b1782244cf9d3a69a8d38f8309
#: ../source/core/backups.txt:53
msgid ""
"With Ops Manager, MongoDB subscribers can install and run the same core "
"software that powers :ref:`backup-with-mms` on their own infrastructure. "
"Ops Manager is an on-premise solution that has similar functionality to "
"|MMS| and is available with Enterprise Advanced subscriptions."
msgstr ""

# e145555184914ae8a45570adf0a321d5
#: ../source/core/backups.txt:58
msgid ""
"For more information about Ops Manager, see the `MongoDB Enterprise "
"Advanced <https://www.mongodb.com/products/mongodb-enterprise-"
"advanced?jmp=docs>`_ page and the :opsmgr:`Ops Manager Manual </>`."
msgstr ""

# 43d284f9934e48d698acfad02e6087a2
#: ../source/core/backups.txt:66
msgid "Back Up by Copying Underlying Data Files"
msgstr ""

# 3ea41d41d58b40f9af43f1a267b133fd
#: ../source/core/backups.txt:69
msgid "Back Up with Filesystem Snapshots"
msgstr ""

# 2492d29597214dde9000111c5399d6e2
#: ../source/core/backups.txt:71
msgid ""
"You can create a backup of a MongoDB deployment by making a copy of "
"MongoDB's underlying data files."
msgstr ""

# 7ac8704c928a41e88a37496b4b13a8a4
#: ../source/core/backups.txt:74
msgid ""
"If the volume where MongoDB stores its data files supports point-in-time "
"snapshots, you can use these snapshots to create backups of a MongoDB "
"system at an exact moment in time. File system snapshots are an operating"
" system volume manager feature, and are not specific to MongoDB. With "
"file system snapshots, the operating system takes a snapshot of the "
"volume to use as a baseline for data backup. The mechanics of snapshots "
"depend on the underlying storage system. For example, on Linux, the "
"Logical Volume Manager (LVM) can create snapshots. Similarly, Amazonâ€™s "
"EBS storage system for EC2 supports snapshots."
msgstr ""

# 637abe65a04d42f39d581ef8577c9652
#: ../source/core/backups.txt:85
msgid ""
"To get a correct snapshot of a running :program:`mongod` process, you "
"must have journaling enabled and the journal must reside on the same "
"logical volume as the other MongoDB data files. Without journaling "
"enabled, there is no guarantee that the snapshot will be consistent or "
"valid."
msgstr ""

# aabf001e47f949f3972eac9d0a4b7e84
#: ../source/core/backups.txt:91
msgid ""
"To get a consistent snapshot of a :term:`sharded cluster`, you must "
"disable the balancer and capture a snapshot from every shard as well as a"
" config server at approximately the same moment in time."
msgstr ""

# 7e94a507605a4ca29006a0f4875b4955
#: ../source/core/backups.txt:95
msgid ""
"For more information, see the :doc:`/tutorial/backup-with-filesystem-"
"snapshots` and :doc:`/tutorial/backup-sharded-cluster-with-filesystem-"
"snapshots` for complete instructions on using LVM to create snapshots. "
"Also see :ecosystem:`Back up and Restore Processes for MongoDB on Amazon "
"EC2 </tutorial/backup-and-restore-mongodb-on-amazon-ec2>`."
msgstr ""

# 0f5f375209174b5ea1d4e4cdc9bda8a0
#: ../source/core/backups.txt:103
msgid "Back Up with ``cp`` or ``rsync``"
msgstr ""

# a664b966054d4e4b8f35f569404d2500
#: ../source/core/backups.txt:105
msgid ""
"If your storage system does not support snapshots, you can copy the files"
" directly using ``cp``, ``rsync``, or a similar tool. Since copying "
"multiple files is not an atomic operation, you must stop all writes to "
"the :program:`mongod` before copying the files. Otherwise, you will copy "
"the files in an invalid state."
msgstr ""

# 428462f52eb34bd29602a162d7d61930
#: ../source/core/backups.txt:111
msgid ""
"Backups produced by copying the underlying data do not support point in "
"time recovery for :term:`replica sets <replica set>` and are difficult to"
" manage for larger sharded clusters. Additionally, these backups are "
"larger because they include the indexes and duplicate underlying storage "
"padding and fragmentation. :program:`mongodump`, by contrast, creates "
"smaller backups."
msgstr ""

# 44d340a36f074bbfaae48656100105f1
#: ../source/core/backups.txt:121
msgid "Back Up with ``mongodump``"
msgstr ""

# 60f0bf5e3b4f431a9891288e2004759b
#: ../source/core/backups.txt:123
msgid ""
":program:`mongodump` reads data from a MongoDB database and creates high "
"fidelity BSON files which the :program:`mongorestore` tool can use to "
"populate a MongoDB database. :program:`mongodump` and "
":program:`mongorestore` are simple and efficient tools for backing up and"
" restoring small MongoDB deployments, but are not ideal for capturing "
"backups of larger systems."
msgstr ""

# ee0dfaa258b9420f8381f23fa784174b
#: ../source/core/backups.txt:131
msgid ""
":program:`mongodump` and :program:`mongorestore` operate against a "
"running :program:`mongod` process, and can manipulate the underlying data"
" files directly. By default, :program:`mongodump` does not capture the "
"contents of the :doc:`local database </reference/local-database>`."
msgstr ""

# 943eb31b2d23441c86addef099c1e2b0
#: ../source/core/backups.txt:136
msgid ""
":program:`mongodump` only captures the documents in the database. The "
"resulting backup is space efficient, but :program:`mongorestore` or "
":program:`mongod` must rebuild the indexes after restoring data."
msgstr ""

# 797e8425109a424fb386992faa2f7d1d
#: ../source/core/backups.txt:140
msgid ""
"When connected to a MongoDB instance, :program:`mongodump` can adversely "
"affect :program:`mongod` performance. If your data is larger than system "
"memory, the queries will push the working set out of memory, causing "
":ref:`page faults <administration-monitoring-page-faults>`."
msgstr ""

# bc98528e66554709ab5cbc228e323463
#: ../source/core/backups.txt:145
msgid ""
"Applications can continue to modify data while :program:`mongodump` "
"captures the output. For replica sets, :program:`mongodump` provides the "
":option:`--oplog <mongodump --oplog>` option to include in its output "
":term:`oplog` entries that occur during the :program:`mongodump` "
"operation. This allows the corresponding :program:`mongorestore` "
"operation to replay the captured oplog. To restore a backup created with "
":option:`--oplog <mongodump --oplog>`, use :program:`mongorestore` with "
"the :option:`--oplogReplay <mongorestore --oplogReplay>` option."
msgstr ""

# fc78c4f7a5e44dc98d3b92b22ad61975
#: ../source/core/backups.txt:154
msgid ""
"However, for replica sets, consider :ref:`backup-with-mms` or :ref"
":`backup-with-mms-onprem`."
msgstr ""

# b82b232a5358453399f23eb328e642de
#: ../source/core/backups.txt:157
msgid ""
"See :doc:`/tutorial/backup-and-restore-tools` and :doc:`/tutorial/backup-"
"sharded-cluster-with-database-dumps` for more information."
msgstr ""

# c03acfe7502c4fa3837df6d826dc0933
#: ../source/includes/extracts/additional-resources-backup.rst:4
msgid "Additional Resources"
msgstr ""

# 9c9798b4a3d74ceaa2e9393f3a956f23
#: ../source/includes/extracts/additional-resources-backup.rst:6
msgid ""
"`Backup and it's Role in Disaster Recovery White Paper "
"<https://www.mongodb.com/lp/white-paper/backup-disaster-"
"recovery?jmp=docs>`_"
msgstr ""

# 48ee00c04c0e4ff7a6c9fbdc38637a92
#: ../source/includes/extracts/additional-resources-backup.rst:7
msgid ""
"`Backup vs. Replication: Why Do You Need Both? "
"<http://www.mongodb.com/blog/post/backup-vs-replication-why-do-you-need-"
"both?jmp=docs>`_"
msgstr ""

# 01d29901e0754678ad80bb3168105abf
#: ../source/includes/extracts/additional-resources-backup.rst:8
msgid ""
"`MongoDB Production Readiness Consulting Package "
"<https://www.mongodb.com/products/consulting?jmp=docs#s_product_readiness>`_"
msgstr ""

#~ msgid ""
#~ "When deploying MongoDB in production, "
#~ "you should have a strategy for "
#~ "capturing and restoring backups in the"
#~ " case of data loss events. MongoDB"
#~ " provides backup methods to support "
#~ "different requirements and configurations:"
#~ msgstr ""

#~ msgid "Backup Methods"
#~ msgstr ""

#~ msgid "Backups with the MongoDB Management Service (MMS)"
#~ msgstr ""

#~ msgid ""
#~ "Backups produced by copying the "
#~ "underlying data do not support point "
#~ "in time recovery for replica sets "
#~ "and are difficult to manage for "
#~ "larger sharded clusters. Additionally, these"
#~ " backups are larger because they "
#~ "include the indexes and duplicate "
#~ "underlying storage padding and fragmentation."
#~ " :program:`mongodump` by contrast create "
#~ "smaller backups."
#~ msgstr ""

# 8f3651f02ba3422aa8e56374d8b6094c
#~ msgid ":ref:`backup-with-mms`"
#~ msgstr ""

# f8476c435a4f418187f4f49ab5b7d577
#~ msgid ":ref:`backup-with-file-copies`"
#~ msgstr ""

# 15a31f0c61fc45d39195c8912eb96995
#~ msgid ":ref:`backup-with-mongodump`"
#~ msgstr ""

# 42105aece1a649bc86e09a44eb3983a4
#~ msgid ""
#~ "The `MongoDB Management Service "
#~ "<https://mms.10gen.com/?pk_campaign=MongoDB-Org&pk_kwd"
#~ "=Backup-Docs>`_ supports backup and restore"
#~ " for MongoDB deployments."
#~ msgstr ""

# 6da299792d4d4c3eb5187f3055a555a9
#~ msgid ""
#~ "MMS continually backs up MongoDB replica"
#~ " sets and sharded systems by reading"
#~ " the oplog data from your MongoDB "
#~ "cluster."
#~ msgstr ""

# 8ead7ca8fe0841e798f83e20e779e9cb
#~ msgid ""
#~ "MMS Backup offers point in time "
#~ "recovery of MongoDB replica sets and "
#~ "a consistent snapshot of sharded "
#~ "systems."
#~ msgstr ""

# 6b6fdef7570348abb108248aef57faa9
#~ msgid ""
#~ "MMS achieves point in time recovery "
#~ "by storing oplog data so that it"
#~ " can create a restore for any "
#~ "moment in time in the last 24 "
#~ "hours for a particular replica set."
#~ msgstr ""

# 1e75f3d85f9440da8efd6d62af69485b
#~ msgid ""
#~ "For sharded systems, MMS does not "
#~ "provide restores for arbitrary moments "
#~ "in time. MMS does provide periodic "
#~ "consistent snapshots of the entire "
#~ "sharded cluster. Sharded cluster snapshots "
#~ "are difficult to achieve with other "
#~ "MongoDB backup methods."
#~ msgstr ""

# b1123c5433c34d60b05fa5a5deaafb0f
#~ msgid ""
#~ "To restore a MongoDB cluster from "
#~ "an MMS Backup snapshot, you download "
#~ "a compressed archive of your MongoDB "
#~ "data files and distribute those files"
#~ " before restarting the :program:`mongod` "
#~ "processes."
#~ msgstr ""

# 0117bc3cc75543aeaf11c4f3a3ad00d9
#~ msgid ""
#~ "To get started with MMS Backup "
#~ "`sign up for MMS <http://mms.mongodb.com>`_,"
#~ " and consider the complete documentation"
#~ " of MMS see the  :mms:`MMS Manual "
#~ "</>`."
#~ msgstr ""

# 6dc2d8f4e69449d184814c88681a4a25
#~ msgid "Backup by Copying Underlying Data Files"
#~ msgstr ""

# 792d80c48a0d4f3e89d1c7fd509f9f16
#~ msgid "You can create a backup by copying MongoDB's underlying data files."
#~ msgstr ""

# c79a209b26f941cd8632352ca1cc12e4
#~ msgid ""
#~ "If the volume where MongoDB stores "
#~ "data files supports point in time "
#~ "snapshots, you can use these snapshots"
#~ " to create backups of a MongoDB "
#~ "system at an exact moment in time."
#~ msgstr ""

# 700b734878d7477c9571d413b178dbe4
#~ msgid ""
#~ "File systems snapshots are an operating"
#~ " system volume manager feature, and "
#~ "are not specific to MongoDB. The "
#~ "mechanics of snapshots depend on the "
#~ "underlying storage system. For example, "
#~ "if you use Amazonâ€™s EBS storage "
#~ "system for EC2 supports snapshots. On"
#~ " Linux the LVM manager can create "
#~ "a snapshot."
#~ msgstr ""

# 58e19c38a09d45a2b32991a49b199973
#~ msgid ""
#~ "To get a consistent snapshot of a"
#~ " sharded system, you must disable the"
#~ " balancer and capture a snapshot from"
#~ " every shard and a config server "
#~ "at approximately the same moment in "
#~ "time."
#~ msgstr ""

# 984f81cf44a44a4c8df28fa6d4cb1db1
#~ msgid "Backup with ``mongodump``"
#~ msgstr ""

# b2de3ce12d9d4fbf89d98facf27b1231
#~ msgid ""
#~ "The :program:`mongodump` tool reads data "
#~ "from a MongoDB database and creates "
#~ "high fidelity BSON files. The "
#~ ":program:`mongorestore` tool can populate a"
#~ " MongoDB database with the data from"
#~ " these BSON files. These tools are"
#~ " simple and efficient for backing up"
#~ " small MongoDB deployments, but are "
#~ "not ideal for capturing backups of "
#~ "larger systems."
#~ msgstr ""

# af7c30dc15c6472eb614d2ea37556947
#~ msgid ""
#~ ":program:`mongodump` and :program:`mongorestore` can"
#~ " operate against a running "
#~ ":program:`mongod` process, and can manipulate"
#~ " the underlying data files directly. "
#~ "By default, :program:`mongodump` does not "
#~ "capture the contents of the :doc:`local"
#~ " database </reference/local-database>`."
#~ msgstr ""

# fd319e34022f43bba38694af19cca81f
#~ msgid ""
#~ "When connected to a MongoDB instance,"
#~ " :program:`mongodump` can adversely affect "
#~ ":program:`mongod` performance. If your data"
#~ " is larger than system memory, the"
#~ " queries will push the working set"
#~ " out of memory."
#~ msgstr ""

# 163c4766499e4eb2a468e3bf89b5f04e
#~ msgid ""
#~ "To mitigate the impact of "
#~ ":program:`mongodump` on the performance of "
#~ "the replica set, use :program:`mongodump` "
#~ "to capture backups from a "
#~ ":doc:`secondary </core/replica-set-secondary>` "
#~ "member of a replica set. Alternatively,"
#~ " you can shut down a secondary "
#~ "and use :program:`mongodump` with the "
#~ "data files directly. If you shut "
#~ "down a secondary to capture data "
#~ "with :program:`mongodump` ensure that the "
#~ "operation can complete before its oplog"
#~ " becomes too stale to continue "
#~ "replicating."
#~ msgstr ""

# 9ff5dbf4c68d4744b63615b8879e801f
#~ msgid ""
#~ "For replica sets, :program:`mongodump` also"
#~ " supports a point in time feature "
#~ "with the :option:`--oplog <mongodump --oplog>`"
#~ " option. Applications may continue "
#~ "modifying data while :program:`mongodump` "
#~ "captures the output. To restore a "
#~ "point in time backup created with "
#~ ":option:`--oplog <mongodump --oplog>`, use "
#~ ":program:`mongorestore` with the "
#~ ":option:`--oplogReplay <mongorestore --oplogReplay>` "
#~ "option."
#~ msgstr ""

# c42c9b3503d2482d8231a65dedf9d17b
#~ msgid ""
#~ "If applications modify data while "
#~ ":program:`mongodump` is creating a backup, "
#~ ":program:`mongodump` will compete for "
#~ "resources with those applications."
#~ msgstr ""

# 2b98e8abdcbd49318d8f3f4cdd92aacf
#~ msgid ""
#~ "See :doc:`/tutorial/backup-with-mongodump`, "
#~ ":doc:`/tutorial/backup-small-sharded-cluster-"
#~ "with-mongodump`, and :doc:`/tutorial/backup-"
#~ "sharded-cluster-with-database-dumps` for"
#~ " more information."
#~ msgstr ""

# 167fe6bb99ae4237a9b201589c3edd61
#~ msgid "Further Reading"
#~ msgstr ""

# 2f9e59c3198d4429a29feb3fb5164593
#~ msgid ":doc:`/tutorial/backup-with-filesystem-snapshots`"
#~ msgstr ""

# 65fd365137cf45ebb812710e568ec742
#~ msgid ""
#~ "An outline of procedures for creating"
#~ " MongoDB data set backups using "
#~ "system-level file snapshot tool, such "
#~ "as :term:`LVM` or native storage "
#~ "appliance tools."
#~ msgstr ""

# 4cc9165986614637abbac896cb1bb77c
#~ msgid ":doc:`/tutorial/restore-replica-set-from-backup`"
#~ msgstr ""

# dc97287e6c9f4fbdbf1adb7ae0881ee6
#~ msgid ""
#~ "Describes procedure for restoring a "
#~ "replica set from an archived backup "
#~ "such as a :program:`mongodump` or `MMS"
#~ " Backup <https://mms.mongodb.com/?pk_campaign=mongodb-"
#~ "docs-admin-tutorials>`_ file."
#~ msgstr ""

# 302b57979a23446f95e0615bf82dc524
#~ msgid ":doc:`/tutorial/backup-with-mongodump`"
#~ msgstr ""

# 29386ae3319d41c8823c7e4193242607
#~ msgid ""
#~ "The procedure for writing the contents"
#~ " of a database to a BSON (i.e."
#~ " binary) dump file for backing up "
#~ "MongoDB databases."
#~ msgstr ""

# 17962376798b432bb7e1eb11abb85582
#~ msgid ":doc:`/administration/backup-sharded-clusters`"
#~ msgstr ""

# a4ba32c80ee54e45b70c308c821d81ed
#~ msgid ""
#~ "Detailed procedures and considerations for "
#~ "backing up sharded clusters and single"
#~ " shards."
#~ msgstr ""

# bb00e5bcce2a4ce98d7ab4a21db108bf
#~ msgid ":doc:`/tutorial/recover-data-following-unexpected-shutdown`"
#~ msgstr ""

# b96868b8af034aad82af8f8d99453a6c
#~ msgid ""
#~ "Recover data from MongoDB data files "
#~ "that were not properly closed or "
#~ "have an invalid state."
#~ msgstr ""

#~ msgid ""
#~ "When deploying MongoDB in production, "
#~ "you should have a strategy for "
#~ "capturing and restoring backups in the"
#~ " case of data loss events. There "
#~ "are several ways to back up "
#~ "MongoDB clusters:"
#~ msgstr ""

#~ msgid ":ref:`backup-with-mms-onprem`"
#~ msgstr ""

#~ msgid ""
#~ "Backups produced by copying the "
#~ "underlying data do not support point "
#~ "in time recovery for replica sets "
#~ "and are difficult to manage for "
#~ "larger sharded clusters. Additionally, these"
#~ " backups are larger because they "
#~ "include the indexes and duplicate "
#~ "underlying storage padding and fragmentation."
#~ " :program:`mongodump`, by contrast, creates "
#~ "smaller backups."
#~ msgstr ""

#~ msgid "MongoDB Management Service (MMS) Cloud Backup"
#~ msgstr ""

#~ msgid "MongoDB Management Service (MMS) On Prem Backup Software"
#~ msgstr ""

#~ msgid ""
#~ "MongoDB Subscribers can install and run"
#~ " the same core software that powers"
#~ " :ref:`backup-with-mms` on their own"
#~ " infrastructure. The On Prem version "
#~ "of MMS, has similar functionality as "
#~ "the cloud version and is available "
#~ "with Standard and Enterprise subscriptions."
#~ msgstr ""

#~ msgid ""
#~ "For more information about On Prem "
#~ "MMS see the `MongoDB subscription "
#~ "<https://www.mongodb.com/products/subscriptions>`_ page "
#~ "and the `MMS On Prem Manual "
#~ "<https://mms.mongodb.com/help-hosted/current/>`_."
#~ msgstr ""

