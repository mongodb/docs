# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: 2014-04-08 19:26+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# aa02d56cdb364dfd98dba6f70b4d95cd
#: ../source/core/sharding-chunk-migration.txt:5
msgid "Chunk Migration Across Shards"
msgstr ""

# 179af8bf411b4a12b388ea1e09984d13
#: ../source/core/sharding-chunk-migration.txt
msgid "On this page"
msgstr ""

# d36c02747157439584eb1d4a6bab3178
#: ../source/core/sharding-chunk-migration.txt:15
msgid ""
"Chunk migration moves the chunks of a sharded collection from one shard "
"to another and is part of the :doc:`balancer </core/sharding-balancing>` "
"process."
msgstr ""

# 442c3a6786de4ead847170fe347b2c7d
#: ../source/core/sharding-chunk-migration.txt:24
msgid "Chunk Migration"
msgstr ""

# 571abaf654734ef8920ca66f253c3f04
#: ../source/core/sharding-chunk-migration.txt:26
msgid ""
"MongoDB migrates chunks in a :term:`sharded cluster` to distribute the "
"chunks of a sharded collection evenly among shards. Migrations may be "
"either:"
msgstr ""

# af69be69b3414b80b38645df3b1f225c
#: ../source/core/sharding-chunk-migration.txt:30
msgid ""
"Manual. Only use manual migration in limited cases, such as to distribute"
" data during bulk inserts. See :doc:`Migrating Chunks Manually </tutorial"
"/migrate-chunks-in-sharded-cluster>` for more details."
msgstr ""

# 7e8b88cae94444c9b4e976379270779c
#: ../source/core/sharding-chunk-migration.txt:34
msgid ""
"Automatic. The :doc:`balancer </core/sharding-balancing>` process "
"automatically migrates chunks when there is an uneven distribution of a "
"sharded collection's chunks across the shards. See :ref:`Migration "
"Thresholds <sharding-migration-thresholds>` for more details."
msgstr ""

# dffc56c0a685473a80b2bfadd355249e
#: ../source/core/sharding-chunk-migration.txt:42
msgid "Chunk Migration Procedure"
msgstr ""

# a5a8c1d69ec046eabb37ad9cf932be8a
#: ../source/core/sharding-chunk-migration.txt:44
msgid "All chunk migrations use the following procedure:"
msgstr ""

# 5616dd5396384a5f8c9f66bd55c710ef
#: ../source/core/sharding-chunk-migration.txt:46
msgid ""
"The balancer process sends the :dbcommand:`moveChunk` command to the "
"source shard."
msgstr ""

# 4f6dfd3fbbff4c138e31a4c48a55b86e
#: ../source/core/sharding-chunk-migration.txt:49
msgid ""
"The source starts the move with an internal :dbcommand:`moveChunk` "
"command. During the migration process, operations to the chunk route to "
"the source shard. The source shard is responsible for incoming write "
"operations for the chunk."
msgstr ""

# f207cea5af4e4a5eacc9f6e6406e4239
#: ../source/core/sharding-chunk-migration.txt:54
msgid ""
"The destination shard builds any indexes required by the source that do "
"not exist on the destination."
msgstr ""

# 00f5bff2302f4f79a89f62e5f4884469
#: ../source/core/sharding-chunk-migration.txt:57
msgid ""
"The destination shard begins requesting documents in the chunk and starts"
" receiving copies of the data."
msgstr ""

# d817ef111c3c440fac3525fe16ee5d39
#: ../source/core/sharding-chunk-migration.txt:60
msgid ""
"After receiving the final document in the chunk, the destination shard "
"starts a synchronization process to ensure that it has the changes to the"
" migrated documents that occurred during the migration."
msgstr ""

# c9fa5be079a245029901fb4bb2a74fcc
#: ../source/core/sharding-chunk-migration.txt:64
msgid ""
"When fully synchronized, the destination shard connects to the "
":term:`config database` and updates the cluster metadata with the new "
"location for the chunk."
msgstr ""

# 8cdac6edbdff4dddbb6305f0da0a1cf8
#: ../source/core/sharding-chunk-migration.txt:68
msgid ""
"After the destination shard completes the update of the metadata, and "
"once there are no open cursors on the chunk, the source shard deletes its"
" copy of the documents."
msgstr ""

# cedd8201d42a48f78d1f2f9c7c788f28
#: ../source/core/sharding-chunk-migration.txt:74
msgid ""
"If the balancer needs to perform additional chunk migrations from the "
"source shard, the balancer can start the next chunk migration without "
"waiting for the current migration process to finish this deletion step. "
"See :ref:`chunk-migration-queuing`."
msgstr ""

# ef5070a148674a69bb96adefd1ef4465
#: ../source/core/sharding-chunk-migration.txt:81
msgid ""
"The source shard automatically archives the migrated documents by "
"default. For more information, see :ref:`moveChunk-directory`."
msgstr ""

# 24ab13c702384a438f5e2749c57e2be0
#: ../source/core/sharding-chunk-migration.txt:84
msgid ""
"The migration process ensures consistency and maximizes the availability "
"of chunks during balancing."
msgstr ""

# d39808fe28ea498781b9f77e02ddca42
#: ../source/core/sharding-chunk-migration.txt:90
msgid "Chunk Migration Queuing"
msgstr ""

# c5359c81ae914e76bb4e9452937ae72c
#: ../source/core/sharding-chunk-migration.txt:92
msgid ""
"To migrate multiple chunks from a shard, the balancer migrates the chunks"
" one at a time. However, the balancer does not wait for the current "
"migration's delete phase to complete before starting the next chunk "
"migration. See :ref:`sharding-chunk-migration` for the chunk migration "
"process and the delete phase."
msgstr ""

# f6ec44fad8d64192bc95231046f1a5de
#: ../source/core/sharding-chunk-migration.txt:98
msgid ""
"This queuing behavior allows shards to unload chunks more quickly in "
"cases of heavily imbalanced cluster, such as when performing initial data"
" loads without pre-splitting and when adding new shards."
msgstr ""

# 5310fc6d8aa24a72b44587ae8e0217ae
#: ../source/core/sharding-chunk-migration.txt:102
msgid ""
"This behavior also affect the :dbcommand:`moveChunk` command, and "
"migration scripts that use the :dbcommand:`moveChunk` command may proceed"
" more quickly."
msgstr ""

# d727d9a3846b4408a1f1d8b913578903
#: ../source/core/sharding-chunk-migration.txt:106
msgid ""
"In some cases, the delete phases may persist longer. If multiple delete "
"phases are queued but not yet complete, a crash of the replica set's "
"primary can orphan data from multiple migrations."
msgstr ""

# 5938b1613b4a42128a59c5399a6b4f8b
#: ../source/core/sharding-chunk-migration.txt:110
msgid ""
"The ``_waitForDelete``, available as a setting for the balancer as well "
"as the :dbcommand:`moveChunk` command, can alter the behavior so that the"
" delete phase of the current migration blocks the start of the next chunk"
" migration. The ``_waitForDelete`` is generally for internal testing "
"purposes. For more information, see :ref:`wait-for-delete-setting`."
msgstr ""

# 9bcb270eb0a844a89dcb291d46273d6f
#: ../source/core/sharding-chunk-migration.txt:120
msgid "Chunk Migration and Replication"
msgstr ""

# b443f0aba3584062bec89e6dbc1acb19
#: ../source/core/sharding-chunk-migration.txt:124
msgid ""
"The default value ``secondaryThrottle`` became ``true`` for all chunk "
"migrations."
msgstr ""

# d74d49e1029f4fef888f56442dd0d246
#: ../source/core/sharding-chunk-migration.txt:127
msgid ""
"The new ``writeConcern`` field in the balancer configuration document "
"allows you to specify a :doc:`write concern </reference/write-concern>` "
"semantics with the ``_secondaryThrottle`` option."
msgstr ""

# 16859a7a4dae4f02a6a872c67e106a06
#: ../source/core/sharding-chunk-migration.txt:132
msgid ""
"By default, each document operation during chunk migration propagates to "
"at least one secondary before the balancer proceeds with the next "
"document, which is equivalent to a write concern of ``{ w: 2 }``. You can"
" set the ``writeConcern`` option on the balancer configuration to set "
"different write concern semantics."
msgstr ""

# a7a4856de31449d78ff21fd48067bdca
#: ../source/core/sharding-chunk-migration.txt:138
msgid ""
"To override this behavior and allow the balancer to continue without "
"waiting for replication to a secondary, set the ``_secondaryThrottle`` "
"parameter to ``false``. See :ref:`sharded-cluster-config-secondary-"
"throttle` to update the ``_secondaryThrottle`` parameter for the "
"balancer."
msgstr ""

# 8081fbf1421348f793bebf94e80cf52a
#: ../source/core/sharding-chunk-migration.txt:143
msgid ""
"For the :dbcommand:`moveChunk` command, the ``secondaryThrottle`` "
"parameter is independent of the ``_secondaryThrottle`` parameter for the "
"balancer."
msgstr ""

# 9ea17531e7a544f5bc642cf73f1e17f9
#: ../source/core/sharding-chunk-migration.txt:147
msgid ""
"Independent of the ``secondaryThrottle`` setting, certain phases of the "
"chunk migration have the following replication policy:"
msgstr ""

# 19353c733912427b9cdb75f79902e692
#: ../source/core/sharding-chunk-migration.txt:150
msgid ""
"MongoDB briefly pauses all application writes to the source shard before "
"updating the config servers with the new location for the chunk, and "
"resumes the application writes after the update. The chunk move requires "
"all writes to be acknowledged by majority of the members of the replica "
"set both before and after committing the chunk move to config servers."
msgstr ""

# 11157f69870b41a68cc04a9b4b9ac671
#: ../source/core/sharding-chunk-migration.txt:157
msgid ""
"When an outgoing chunk migration finishes and cleanup occurs, all writes "
"must be replicated to a majority of servers before further cleanup (from "
"other outgoing migrations) or new incoming migrations can proceed."
msgstr ""

# 4fdedd62b8c14c2ab2df7682dca2a3b7
#: ../source/core/sharding-chunk-migration.txt:165
msgid "``moveChunk`` directory"
msgstr ""

# 40559157c0be4cbf944416340535aeec
#: ../source/core/sharding-chunk-migration.txt:167
msgid ""
"Starting in MongoDB 2.6, :setting:`sharding.archiveMovedChunks` is "
"enabled by default. With :setting:`sharding.archiveMovedChunks` enabled, "
"the source shard archives the documents in the migrated chunks in a "
"directory named after the collection namespace under the ``moveChunk`` "
"directory in the :setting:`storage.dbPath`."
msgstr ""

# bab66c084ecb4b02a009e4f7bdd92470
#: ../source/core/sharding-chunk-migration.txt:176
msgid "Jumbo Chunks"
msgstr ""

# 118811e0f3ca43f6a02ece15633e4ccc
#: ../source/core/sharding-chunk-migration.txt:178
msgid ""
"During chunk migration, if the chunk exceeds the :ref:`specified chunk "
"size <sharding-chunk-size>` or if the number of documents in the chunk "
"exceeds :limit:`Maximum Number of Documents Per Chunk to Migrate`, "
"MongoDB does not migrate the chunk. Instead, MongoDB attempts to "
":doc:`split </core/sharding-chunk-splitting>` the chunk. If the split is "
"unsuccessful, MongoDB labels the chunk as *jumbo* to avoid repeated "
"attempts to migrate the chunk."
msgstr ""

# d97b0445eda74105ad2ad1237629387d
#: ../source/core/sharding-chunk-migration.txt:1
msgid "balancing"
msgstr ""

# d97b0445eda74105ad2ad1237629387d
#: ../source/core/sharding-chunk-migration.txt:1
msgid "migration"
msgstr ""

#~ msgid ""
#~ "By default, each document move during"
#~ " chunk migration propagates to at "
#~ "least one secondary before the balancer"
#~ " proceeds with its next operation."
#~ msgstr ""

#~ msgid ""
#~ "To override this behavior and allow "
#~ "the balancer to continue before "
#~ "replicating to a secondary, set the "
#~ "``_secondaryThrottle`` parameter to ``false``. "
#~ "See :ref:`sharded-cluster-config-secondary-"
#~ "throttle` to update the ``_secondaryThrottle``"
#~ " parameter for the balancer."
#~ msgstr ""

#~ msgid ""
#~ "Independent of the ``secondaryThrottle`` "
#~ "setting, certain operations of the chunk"
#~ " migration have the following replication"
#~ " policy:"
#~ msgstr ""

#~ msgid ""
#~ "MongoDB briefly pauses all application "
#~ "writes to the source shard before "
#~ "updating the config servers with the "
#~ "new location for the chunk, and "
#~ "resumes the application writes after the"
#~ " update. The chunk commit requires "
#~ "all writes to be durably replicated "
#~ "to a majority of servers in order"
#~ " to proceed and finish."
#~ msgstr ""

# dc1ad2f9ef4d4f4bae06e8934b3da9d4
#~ msgid ""
#~ "In previous versions, the balancer did"
#~ " not wait for the document move "
#~ "to replicate to a secondary. For "
#~ "details, see :v2.2:`Secondary Throttle in "
#~ "the v2.2 Manual </tutorial/configure-"
#~ "sharded-cluster-balancer/#sharded-cluster-"
#~ "config-secondary-throttle>`"
#~ msgstr ""

#~ msgid ""
#~ "By default, each document operation "
#~ "during chunk migration propagates to at"
#~ " least one secondary before the "
#~ "balancer proceeds with the next "
#~ "document."
#~ msgstr ""

