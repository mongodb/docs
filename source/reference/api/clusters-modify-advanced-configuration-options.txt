=====================================================
Modify Advanced Configuration Options for One Cluster
=====================================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. include:: /includes/fact-atlas-free-tier-limits.rst

.. include:: /includes/fact-projects-groups-synonyms.rst

.. include:: /includes/api-requirements.rst

.. include:: /includes/api-base-url.rst

Syntax
------

.. code-block:: none

   PATCH /groups/{GROUP-ID}/clusters/{CLUSTER-NAME}/processArgs

Request Path Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1
   :widths: 15 10 75

   * - Path Element
     - Required/Optional
     - Description

   * - ``GROUP-ID``

     - Required.

     - The unique identifier for the :ref:`project <group-id>` containing the
       cluster you want to retrieve.

   * - ``CLUSTER-NAME``

     - Required

     - The name of the cluster to retrieve.

Request Query Parameters
~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/no-query-parameters.rst

Request Body Parameters
~~~~~~~~~~~~~~~~~~~~~~~

Specify one or all of the following options.

.. list-table::
   :widths: 20 10 70
   :header-rows: 1

   * - Name
     - Type
     - Description

   * - ``failIndexKeyTooLong``
     - boolean
     - When ``true``, documents can only be updated or inserted if, for 
       all indexed fields on the target collection, the corresponding 
       index entries do not exceed 1024 bytes. When ``false``, 
       :binary:`~bin.mongod` writes documents that exceed the limit 
       but does *not* index them. 

       Changing this option corresponds to modifying the
       :parameter:`failIndexKeyTooLong <param.failIndexKeyTooLong>` 
       parameter via the :dbcommand:`setParameter` command for each 
       :binary:`~bin.mongod` in the cluster.

   * - ``javascriptEnabled``
     - boolean
     - When ``true``, the cluster allows execution of operations that
       perform server-side executions of JavaScript. When ``false``,
       the cluster disables execution of those operations.

       Changing this option corresponds to modifying the 
       :setting:`security.javascriptEnabled` configuration file option
       for each :binary:`~bin.mongod` in the cluster.

   * - ``minimumEnabledTlsProtocol``
     - string
     - Sets the minimum Transport Layer Security (TLS) version the 
       cluster accepts for incoming connections. 

       Valid values are:

       - ``TLS1_0``
       - ``TLS1_1``
       - ``TLS1_2``

       .. admonition:: TLS 1.0 Deprecation
          :class: note

          For users considering this option as a method for enabling the
          deprecated Transport Layer Security (TLS) 1.0 protocol 
          version, please read :ref:`faq-tls-1.0-deprecation` before 
          proceeding. |service| deprecation of TLS 1.0 improves your 
          security of data-in-transit and aligns with industry best 
          practices. Enabling TLS 1.0 for any |service| cluster carries 
          security risks. Consider enabling TLS 1.0 only for as long as 
          required to update your application stack to support 
          TLS 1.1 or later.

       Changing this option corresponds to configuring the
       :setting:`net.ssl.disabledProtocols` configuration file option
       for each :binary:`~bin.mongod` in the cluster.

       To deploy the specified changes, |service| performs a rolling
       deployment upgrade to maintain high availability. For sharded
       clusters, this involves a rolling restart of all shards and the
       config server replica set. To learn more about how |service|
       supports high availability during maintenance operations, see
       :ref:`high-availability`.

   * - ``noTableScan``
     - boolean
     - When ``true``, the cluster disables the execution of any query 
       that requires a collection scan to return results. When 
       ``false``, the cluster allows the execution of those operations.

       Changing this option corresponds to modifying the
       :parameter:`notablescan <param.notablescan>` parameter via the
       :dbcommand:`setParameter` command for each :binary:`~bin.mongod` in 
       the cluster.

   * - ``oplogSizeMB``
     - integer
     - The custom :term:`oplog` size of the cluster. A value of 
       ``null`` indicates that the cluster uses the default oplog size 
       calculated by |service|. 

       You can check the oplog size by connecting to your cluster
       via the :binary:`~bin.mongo` shell and authenticating as a user
       with the :authrole:`Atlas admin` role. Run the
       :method:`rs.printReplicationInfo() <rs.printReplicationInfo>` 
       method to view the current oplog size and time.

       Changing this option corresponds to modifying the 
       :setting:`replication.oplogSizeMB <replication.oplogSizeMB>`
       configuration file option for each :binary:`~bin.mongod` in the 
       cluster.

       To deploy the specified changes in clusters running MongoDB 3.4, 
       |service| performs a rolling deployment upgrade to maintain 
       high availability. For sharded clusters, this involves a rolling 
       restart of all shards and the config server replica set. To learn
       more about how |service| supports high availability during 
       maintenance operations, see :ref:`high-availability`.

       For clusters running MongoDB 3.6 and later, |service| can
       deploy the specified changes without performing a rolling
       restart.

HTTP Response Elements
----------------------

.. include:: /includes/list-table-cluster-advanced-configuration-options-response.rst

Example
-------

Request
~~~~~~~

.. code-block:: shell

   curl --user "username:apiKey" --include --digest \
    --header "Content-Type: application/json" \
    --request PATCH "https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794de37132bb7b/clusters/LogData/processArgs" \
    --data '
      {
        "failIndexKeyTooLong" : false,
        "javascriptEnabled" : false,
        "minimumEnabledTlsProtocol": "TLS1_2",
        "noTableScan" : true,
        "oplogSizeMB" : 2000
      }
    '


Response
~~~~~~~~

.. code-block:: json

   {
     "failIndexKeyTooLong": false,
     "javascriptEnabled": false,
     "minimumEnabledTlsProtocol": "TLS1_2",
     "noTableScan": true,
     "oplogSizeMB": 2000
   }

   
