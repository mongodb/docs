=========================
Connection String Options
=========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. include:: /includes/styles/corrections.rst

|service| provides multiple connection strings. These strings allow
you to connect to your clusters from both public and private contexts.

.. _atlas-faq-multi-conn-strings:

Why does my cluster have multiple connection strings?
-----------------------------------------------------

To connect to |service|, point your applications to a |uri| to
communicate with a cluster. |service| creates clusters with more than
one node or host. Each node has its own hostname that resolves to an IP
address. The |uri|, known as a *connection string*, to which |service|
connects might have more than one hostname. Configure |service| to
accept connections to the cluster hosts from allowed IP addresses.

|service| secures connections from public IP address through
authentication and |tls|. If you want to connect to private IP
addresses, you can use:

- :doc:`AWS and GCP VPC Peering </security-vpc-peering>`
- :doc:`Azure VNet Peering </security-vpc-peering>`
- :ref:`AWS PrivateLink <private-endpoint-connection-strings>`

These features all manage communication over internal IP addresses
within secure networks.

|service| provides more than one connection string when using secure
networks. Each network offers a string that resolves to different IP
addresses.

All clusters have a
:ref:`standard connection string <connstring-standard>`. This resolves
to the cluster's:

- Public IP addresses for Internet connections and
- |vpc| private IP addresses for |aws| clusters when resolved from a
  peered |vpc|.

Use this string for applications connecting over the Internet or
connecting to peered clusters in |aws|.

Clusters with peered networks have a
:ref:`Private IP for Peering connection string <connstring-private>`.
This string resolves to IP addresses available to:

- Peered networks in |azure| or |gcp|
- |aws| peered clusters with a custom |dns| service.

Use this connection string with applications connecting:

- Within an |azure| or |gcp| peered network
- To |aws| clusters when using |aws| with custom |dns| service.

|aws| clusters with |aws| 
:ref:`PrivateLink <private-endpoint-connection-strings>`
configured have one or more connection strings. Each string resolves
to the IP address of an Endpoint Interface. Use these connection
strings with applications connecting over PrivateLink.

.. _atlas-faq-azure-gcp-peering-only:

What does this mean for |gcp| or |azure| clusters in peering-only mode?
-----------------------------------------------------------------------

Before 31 March 2020, you were required to enable peering-only mode to
connect to databases on peer networked |azure| or |gcp| clusters. This
mode:

- Affected global |dns| resolution and
- Limited any database connections outside the peered network.

Multiple horizons lifts these restrictions and unlocks additional
features. In projects running MongoDB 3.6 or later clusters, you can
use:

- :realm:`{+MongoDB-Realm+} </>`
- :charts:`Charts </>`
- :doc:`Live Migration </import>`

To leverage multiple horizons:

- Make sure your clusters use MongoDB 3.6 or later,
- Update your application's existing connection strings to use
  :ref:`Private IP for Peering connection strings <connstring-private>`,
- :ref:`Disable Peering-Only mode <disable-peering-mode>`,
  and
- Connect using the strings outlined in :ref:`atlas-faq-multi-conn-strings`.

.. note::

   You *can* keep connecting to your clusters using existing
   peering-enabled connection strings at this time. Peering-Only mode
   prevents access to the improved functionality and reduced
   limitations of multiple horizons. To use the new features and remove
   the legacy limitations, MongoDB requires that you use the new
   connection strings.

.. seealso::

   :doc:`Upgrade to MongoDB 4.0 or later </tutorial/major-version-change>`

.. _atlas-faq-azure-span-regions:

Can my VNet-peered |azure| cluster span multiple regions?
---------------------------------------------------------

Yes.

Change your applications to connect using the
:ref:`Private IP for Peering connection string <connstring-private>`.
This change allows your applications to connect from peered networks
using the UI or API.

To expand into more regions, disable Peering-Only mode on existing
|azure| clusters first.

:ref:`Private IP for Peering connection strings <connstring-private>`
work with MongoDB 3.6 or later clusters.

.. _disable-peering-mode:
.. _atlas-faq-disable-peering-mode:

How do I disable peering-only mode?
-----------------------------------

To disable Peering-Only mode using the:

.. tabs::

   .. tab:: Atlas Console
      :tabid: console

      .. include:: /includes/steps/disable-private-ip-mode-console.rst

   .. tab:: Atlas API
      :tabid: api

      .. include:: /includes/steps/disable-private-ip-mode-api.rst

.. _faq-custom-dns:
.. _atlas-faq-custom-dns:

How does this affect |aws| |vpc| peering when I use custom |dns|?
-----------------------------------------------------------------

Before 31 March 2020, applications deployed within |aws| using custom
|dns| services and |vpc|\-peered with |service| couldn't connect over
private IP addresses:

- Custom |dns| resolved to public IP addresses.
- |aws| internal |dns| resolved to private IP addresses.

Applications deployed with custom |dns| services in |aws| should use
:ref:`Private IP for Peering connection strings <connstring-private>`.
To show these strings:

1. Toggle the :guilabel:`Using Custom DNS on AWS with VPC Peering` on
   ``On`` from the :guilabel:`Project Settings` menu.
2. View the :guilabel:`connect` modal for your |aws| Cluster.
3. Select the :guilabel:`Private IP for Peering` connection string.

.. _atlas-faq-aws-transit-gateway:

Can Atlas be used with AWS Transit Gateway?
-------------------------------------------

Yes. |aws| PrivateLink powers |service| Private Endpoints. This allows
for transitive connectivity. You can use the
:aws:`AWS Transit Gateway </vpc/latest/tgw/tgw-getting-started.html>`
with your |vpc| if you connected your |vpc| to |service| via |aws|
PrivateLink.

.. _atlas-faq-aws-direct-connect:

Can Atlas be used with AWS Direct Connect?
------------------------------------------

Yes. |aws| PrivateLink powers |service| Private Endpoints. This allows
for transitive connectivity. You can use :aws:`AWS Direct Connect </whitepapers/latest/aws-vpc-connectivity-options/aws-direct-connect-network-to-amazon.html>` with your
|vpc| if you connected your |vpc| to |service| via |aws| PrivateLink.




.. _atlas-faq-id-connstrings:

How do I identify which connection string my application uses?
--------------------------------------------------------------

The structure of the connection string's |uri| indicates the string's
type. If you have created a peering connection or private endpoint,
|service| displays more than one of these options for your use.

.. _connstring-standard:
.. _atlas-faq-connstring-standard:

Standard Connection Strings
~~~~~~~~~~~~~~~~~~~~~~~~~~~

Standard connection strings follow this format:

.. code-block:: sh

   mongodb://xyz456-shard-00-00.abc123.mongodb.net:27017
   mongodb+srv://xyz456.abc123.mongodb.net

The dot before ``abc123`` *matters*. |uri|\s using this format resolve
to public IP addresses *except* when connecting from inside |aws| with
|vpc|\-peering configured.

.. important::

   This format changes one character from the
   :ref:`Legacy Connection Strings <connstring-legacy>`: a hyphen
   (``-``) after the cluster name becomes a period (``.``).

   .. example::

      This *legacy connection string*:

      .. code-block:: sh

         mongodb+srv://xyx456-abc123.mongodb.net

      is written as this *standard connection string*:

      .. code-block:: sh

         mongodb+srv://xyx456.abc123.mongodb.net

   For new clusters, replica sets and shards don't derive their name
   from the name of the cluster. The new names use a six alphanumeric
   character ID.

.. _connstring-private:
.. _atlas-faq-connstring-private:

Private Connection Strings
~~~~~~~~~~~~~~~~~~~~~~~~~~

Private connection strings follow this format:

.. code-block:: sh

   mongodb://xyx456-shard-00-00-pri.abc123.mongodb.net:27017
   mongodb+srv://xyx456-pri.abc123.mongodb.net

The ``-pri`` before ``abc123`` *matters*. |uri|\s using this format
resolve to private IP addresses reachable within the peered network.

.. important::

  In new clusters, replica sets and shards don't derive their name
  from the name of the cluster. The new names use a six
  alphanumeric character ID.

.. _connstring-privatelink:
.. _atlas-faq-connstring-privatelink:

|aws| Privatelink Connection Strings
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

:ref:`AWS PrivateLink <private-endpoint-connection-strings>`
connection strings follow this format:

.. code-block:: sh

   mongodb://pl-us-east-1a.abc123.mongodb.net:1234
   mongodb+srv://pl-us-east-1a.abc123.mongodb.net

|uri|\s using this format can be reachable via the |aws| |vpc| where
someone configured PrivateLink, though access can be transient from
other |vpc|\s peered in turn.

.. _connstring-legacy:
.. _atlas-faq-connstring-legacy:

Legacy Connection Strings
~~~~~~~~~~~~~~~~~~~~~~~~~

Before 31 March 2020, you wrote |service| connection strings as
follows:

.. list-table::
   :widths: 30 70
   :stub-columns: 1

   * - |aws|
     -
       .. code-block:: sh
          :copyable: false

          foo-shard-00-00-abc123.mongodb.net
          foo-abc123.mongodb.net

   * - |azure|
     -
       .. code-block:: sh
          :copyable: false

          foo-shard-00-00-abc123.azure.mongodb.net
          foo-abc123.azure.mongodb.net

   * - |gcp|
     -
       .. code-block:: sh
          :copyable: false

          foo-shard-00-00-abc123.gcp.mongodb.net
          foo-abc123.gcp.mongodb.net

If you enabled **Private Only** mode, these hostnames resolve to peered
network IP addresses. If you disabled that mode, hostnames resolve to
public IP addresses.

If your application uses a legacy connection string in **Peering Only**
mode, switch to
:ref:`Private IP for Peering connection strings <connstring-private>`.
