.. _embedding-charts-sdk:

===================================
Embed Charts with the Embedding SDK
===================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

You can embed a chart into a web application with the Charts Embedding
JavaScript SDK, allowing more flexible adjustments of settings and rendering.

Features of the embedding SDK include:

- Add filters dynamically
- Change the size and style of the chart
- Refresh on demand

To embed a chart with the SDK, you need to:

- Enable embedding for the chart.
- Allow :ref:`embedded chart filtering <embed-options-filter>` on 
  certain fields by 
  :ref:`specifying filterable fields <specify-filter-fields>`. Do 
  not include fields that may reveal sensitive data. 
- Have the chart ID and base URL strings.

Installation
------------

If you have a simple web app, you can reference the Embedding SDK from a
script tag, and no installation is needed. You can use the :abbr:`UMD 
(Universal Module Definition)` to run ``@mongodb-js/charts-embed-sdk`` 
directly in the browser.

.. code-block:: none 

   <script src="https://unpkg.com/@mongodb-js/charts-embed-dom"></script>

If you are building a more complex web app and are using ``npm`` or 
``yarn``, you can install the Embedding SDK so that it can be used 
directly from your script files.

To install the embedding SDK with ``npm``, use the following command:

.. code-block:: none

   npm install @mongodb-js/charts-embed-dom

To install with ``yarn``:

.. code-block:: none

   yarn add @mongodb-js/charts-embed-dom

Examples
--------

An `example app <https://codesandbox.io/s/charts-embedding-sdk-8i898>`__ using
the embedding SDK can be found at ``codesandbox.io``. The example app
demonstrates some of the interactive features available to the embedding
SDK, including an interactive filter and a manual refresh button.

The example app is configured with a chart ID and base URL which are
particular to the app. Be sure to configure your own apps with the correct
chart ID and base URL.

The example app uses two SDK methods:

.. list-table::
   :header-rows: 1
   :widths: 15 55 15 15

   * - Method
     - Description
     - Args
     - Returns

   * - ``refresh()``
     - Reloads the chart with the latest data from its
       :ref:`data source <data-sources>`.
     - none
     - Promise<void>

   * - ``setFilter()``
     - Filters your embedded chart based on a specified MQL
       :ref:`filter document <query-bar>`.

       .. note::

          Any fields included in the filter must be specified in the Embed
          Chart modal. See :ref:`Filter Embedded Charts with the SDK
          <filter-embedded-sdk>`.

     - :ref:`filter <query-bar>` object
     - Promise<void>

Other examples are available in the :github:`MongoDB Embedding SDK Examples
</mongodb-js/charts-embed-sdk/tree/master/examples/>` GitHub repository.

.. toctree::
   :titlesonly:

   /configure-auth-providers
   /handle-click-events
   /embedding-tutorials
   Embedding SDK Reference <https://www.npmjs.com/package/@mongodb-js/charts-embed-dom>
