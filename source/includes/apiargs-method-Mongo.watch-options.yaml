name: resumeAfter
position: 1
description: |

  Directs :method:`Mongo.watch()` to attempt resuming
  notifications starting after the operation specified in the resume
  token. 

  Each change stream event document includes a resume token as the
  ``_id`` field. Pass the *entire* ``_id`` field of the change event
  document that represents the operation you want to resume after.

optional: true
type: document
operation: Mongo.watch
interface: method
arg_name: field
---
name: fullDocument
position: 2
description: |

  By default, :method:`Mongo.watch()` returns the delta of
  those fields modified by an update operation, instead of the entire
  updated document.

  Set ``fullDocument`` to ``"updateLookup"`` to direct
  :method:`Mongo.watch()` to look up the most current 
  majority-committed version of the updated document.
  :method:`Mongo.watch()` returns a ``fullDocument`` field with
  the document lookup in addition to the ``updateDescription`` delta.

optional: true
type: string
operation: Mongo.watch
interface: method
arg_name: field
---
name: batchSize
position: 3
description: |
  Specifies the maximum number of change events to return in each
  batch of the response from the MongoDB cluster. 

  Has the same functionality as :method:`cursor.batchSize()`.
optional: true
type: int
operation: Mongo.watch
interface: method
arg_name: field
---
name: maxAwaitTimeMS
position: 4
description: |
  
  The maximum amount of time in milliseconds the server waits for new
  data changes to report to the change stream cursor before returning an
  empty batch.

  Defaults to ``1000`` milliseconds.

optional: true
type: int
operation: Mongo.watch
interface: method
arg_name: field
---
name: collation
position: 5
description: |
  Pass a :ref:`collation document <collation-document-fields>`
  to specify a :doc:`collation </reference/collation>` for the 
  change stream cursor.
optional: true
type: document
operation: Mongo.watch
interface: method
arg_name: field
...

