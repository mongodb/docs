.. _java-fundamentals-update-array:

===========================
Update Arrays in a Document
===========================



.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

In this guide, you can learn how to update arrays in a document with the
MongoDB Java driver.

To update an array, you must do the following:

- Specify the update you want to perform
- Specify what array elements to apply your update to
- Perform an update operation using these specifications

Sample Document
~~~~~~~~~~~~~~~

The following sections feature examples that update this sample
document: 

.. code-block:: json

    { "_id": 1, "color": "green", "qty": [8, 12, 18] }

The examples on this page use the ``findOneAndUpdate()`` method of the
``MongoCollection`` class to retrieve and update the document. Each
example uses an instance of the ``FindOneAndUpdateOptions`` class to
have MongoDB retrieve the document after the update occurs. For
more information on the ``findOneAndUpdate()`` method, see our 
:doc:`Compound Operations guide </crud/compound-operations/>`. 

Specifying an Update
--------------------

To specify an update, use the ``Updates`` builder. The ``Updates``
builder provides static utility methods to construct update
specifications. For more information about using the ``Updates`` builder with
arrays, see our :ref:`guide on the Updates builder <array_updates>`.

The following example performs these actions: 

- Query for the sample document
- Append "17" to the ``qty`` array in the document that matches the query filter

.. literalinclude:: /includes/fundamentals/code-snippets/UpdateArray.java
   :language: java
   :dedent:
   :start-after: begin pushElementsExample
   :end-before: end pushElementsExample

The preceding example updates the original document to the following state:

.. code-block:: json
   :copyable: false

   { "_id": 1, "color": "green", "qty": [8, 12, 18, 17] }

Specifying Array Elements
-------------------------

You can specify which array elements to update using a positional
operator. Positional operators can specify the first, all, or certain
array elements to update. 

To specify elements in an array with positional operators, use **dot
notation**. Dot notation is a property access syntax for navigating BSON
objects. 

For additional information, see the Server Manual Entry on
:manual:`dot notation </core/document/#std-label-document-dot-notation>`.

The First Matching Array Element
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To update the first array element that matches your query filter, use the
positional ``$`` operator. The array field must appear as part of your
query filter to use the positional ``$`` operator. 

Example
```````

The following example performs these actions:

- Query for a document with a ``qty`` field containing the value "18"
- Decrement the first array value in the document that matches the query filter by "3"

.. literalinclude:: /includes/fundamentals/code-snippets/UpdateArray.java
   :language: java
   :dedent:
   :start-after: begin updateValueExample
   :end-before: end updateValueExample

The preceding example updates the original document to the following state:

.. code-block:: json
   :copyable: false

   { "_id": 1, "color": "green", "qty": [8, 12, 15] }

For more information about the methods and operators mentioned in this section,
see the following resources: 

- :manual:`Positional $ Operator </reference/operator/update/positional>` Server Manual Entry
- `inc() <{+api+}/apidocs/mongodb-driver-core/com/mongodb/client/model/Updates.html#inc(java.lang.String,java.lang.Number)>`__ API Documentation

Matching All Array Elements
~~~~~~~~~~~~~~~~~~~~~~~~~~~

To update all elements in an array, use the all positional ``$[]`` operator. 

Example
```````

The following example performs these actions: 

- Query for the sample document
- Multiply array elements matching the query filter by "2"  

.. literalinclude:: /includes/fundamentals/code-snippets/UpdateArray.java
   :language: java
   :dedent:
   :start-after: begin updateAllElementsExample
   :end-before: end updateAllElementsExample

The preceding example updates the original document to the following state:

.. code-block:: json
   :copyable: false

   { "_id": 1, "color": "green", "qty": [16, 24, 36] }

For more information about the methods and operators mentioned in this section,
see the following resources: 

- :manual:`All Positional $[] Operator </reference/operator/update/positional-all/>` Server Manual Entry
- `mul() <{+api+}/apidocs/mongodb-driver-core/com/mongodb/client/model/Updates.html#mul(java.lang.String,java.lang.Number)>`__ API Documentation

Matching Multiple Array Elements
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To update array elements that match a filter, use the
filtered positional ``$[<identifier>]`` operator. You must include an
array filter in your update operation to specify which array elements to
update. 

The ``<identifier>`` is the name you give your array filter. This value
must begin with a lowercase letter and contain only alphanumeric
characters. 

Example
```````

The following example performs these actions:

- Query for the sample document
- Set an array filter to search for values less than "15"
- Increment array elements matching the query filter by "5" 

.. literalinclude:: /includes/fundamentals/code-snippets/UpdateArray.java
   :language: java
   :dedent:
   :start-after: begin updateValueOptionsExample
   :end-before: end updateValueOptionsExample

The preceding example updates the original document to the following state:

.. code-block:: json
   :copyable: false

   { "_id": 1, "color": "green", "qty": [13, 17, 18] }

For more information about the methods and operators mentioned in this section,
see the following resources: 

- :manual:`Filtered Positional $[\<identifier\>] Operator </reference/operator/update/positional-filtered/>` Server Manual Entry
- `inc() <{+api+}/apidocs/mongodb-driver-core/com/mongodb/client/model/Updates.html#inc(java.lang.String,java.lang.Number)>`__ API Documentation
