.. _release-notes-7.0:

=============================
Release Notes for MongoDB 7.0
=============================
.. meta::
   :description: Discover new features and changes in MongoDB 7.0, including Atlas Search index management, security updates, and aggregation enhancements.

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: twocols

This page describes changes and new features introduced in MongoDB 7.0.

MongoDB 7.0 is a |lts| Release, which means that it is supported for
both MongoDB Atlas and on-premises deployments. MongoDB 7.0 includes
changes introduced in MongoDB Rapid Releases 6.1, 6.2, and 6.3. This
page describes changes introduced in those Rapid Releases and MongoDB
7.0.

To learn more about the differences between |lts| and Rapid releases,
see :ref:`release-version-numbers`.

.. warning:: Past Release Limitations

   .. include:: /includes/release-notes/critical-warning-text.rst

   .. list-table::
      :header-rows: 1

      * - Issue
        - Affected Versions

      * - :issue:`SERVER-94559`
        - 7.0.0 - 7.0.15

      * - :issue:`SERVER-77506`
        - 7.0.0 - 7.0.2
      
      * - :issue:`SERVER-80203`
        - 7.0.0 - 7.0.2

      * - :issue:`SERVER-82353`
        - 7.0.0 - 7.0.5

      * - :issue:`SERVER-84723`
        - 7.0.0 - 7.0.5 

      * - :issue:`SERVER-87061`
        - 7.0.0 - 7.0.6 

      * - :issue:`SERVER-86622`
        - 7.0.0 - 7.0.7 
        
      * - :issue:`SERVER-95067`
        - 7.0.0 - 7.0.15

Patch Releases 
--------------

.. _7.0.25-release-notes: 

7.0.25 - Oct 2, 2025 
~~~~~~~~~~~~~~~~~~~~

.. important::

   Use-after-free in the MongoDB server query planner may lead to a
   crash or undefined behavior.

   Description: an authorized user may crash the MongoDB server by
   causing a buffer over-read. This can occur when running a DDL
   operation while the queries run.

   CVSS Score: 5.3

   CWE: 416 Use After Free

   Affected product versions: MongoDB Server 8.2.0, 8.0.14 to 8.0,
   7.0.24 to 7.0, and earlier end-of-life major versions.

Issues fixed:

- :issue:`SERVER-105873`: QueryPlannerParams should not maintain
  pointers owned by IndexCatalogEntry
- `All Jira issues closed in 7.0.25
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%207.0.25>`__
- :ref:`7.0.25-changelog`

.. _7.0.24-release-notes:

7.0.24 - Sep 10, 2025
~~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-103505`: Handle metadata errors in
  WiredTigerUtil::setTableLogging
- :issue:`SERVER-103741`: Add profile collection metrics
- :issue:`SERVER-104771`: [v7.0] Initial sync fails when the source has
  TTL indexes on a capped collection
- :issue:`WT-14391`: Check eviction server is running before opening HS
- :issue:`WT-14653`: Add logs/stats to reconciliation for tracking HS
  updates
- `All Jira issues closed in 7.0.24
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%207.0.24>`__
- :ref:`7.0.24-changelog`

.. _7.0.23-release-notes:

7.0.23 - Aug 13, 2025
~~~~~~~~~~~~~~~~~~~~~

Issues fixed: 

- :issue:`SERVER-81797`: Make our own portable implementation of atomic ``notify()`` and ``wait()`` with timeout support
- :issue:`SERVER-86656`: Create a reader-optimized reader-writer mutex
- :issue:`SERVER-95324`: Disable chunkMigrationConcurrency
- :issue:`SERVER-101581`: Check socket state before accepting connection in ASIO
- :issue:`SERVER-103934`: FCBIS should be able to call KVEngine::cleanShutdown without leaking memory
- `All Jira issues closed in 7.0.23
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%207.0.23>`__
- :ref:`7.0.23-changelog` 

.. _7.0.22-release-notes:

7.0.22 - Jul 18, 2025
~~~~~~~~~~~~~~~~~~~~~

.. |cve-version-list| replace:: MongoDB 7.0 prior to 7.0.22

.. include:: /includes/security/cve-168-info.rst

Issues fixed:

- :issue:`SERVER-95523`: upsert does not handle DuplicateKey retry correctly
- :issue:`SERVER-95524`: Avoid retrying on duplicate key error for upserts in multidocument transactions
- :issue:`SERVER-96197`: ExpressionContext's _resolvedNamespaces can't distinguish between collections with the same name in different dbs
- :issue:`SERVER-98386`: Shard does not correctly check the ShardVersion received for timeseries collections
- :issue:`SERVER-99616` $group can hit MONGO_verify
- `All Jira issues closed in 7.0.22
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%207.0.22>`__
- :ref:`7.0.22-changelog` 

.. _7.0.21-release-notes:

7.0.21 - Jun 04, 2025
~~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-92806`: Plan cache entry ignores index collation with $elemMatch
- :issue:`SERVER-95672`: Indexes on array fields that contain subarrays does not 
  include some results
- :issue:`SERVER-97044`: Fix an issue where change streams might incorrectly output 
  a "drop" event during resharding or unsharding of a collection that is or was 
  using zone sharding
- :issue:`WT-12012`: Restore original verbose levels if gen_drain becomes unstuck 
  after increasing verbose levels
- :issue:`WT-13216`: Assess the use of cache eviction check in compact
- `All Jira issues closed in 7.0.21
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%207.0.21>`__
- :ref:`7.0.21-changelog` 

.. _7.0.20-release-notes:

7.0.20 - Apr 29, 2025
~~~~~~~~~~~~~~~~~~~~~
.. |cve-version-list| replace:: MongoDB 7.0 prior to 7.0.20

.. include:: /includes/security/cve-169-info.rst

Issues fixed:

- :issue:`SERVER-93120`: FTDC collection blocked on locked backupCursor state read
- :issue:`SERVER-106753`: Incorrect handling of incomplete data may prevent ``mongos`` from accepting new connections
- `All Jira issues closed in 7.0.20
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%207.0.20>`__
- :ref:`7.0.20-changelog` 

.. _7.0.19-release-notes:

7.0.19 - Apr 14, 2025
~~~~~~~~~~~~~~~~~~~~~

.. |cve-version-list| replace:: MongoDB 7.0 prior to 7.0.19

.. include:: /includes/security/cve-163-info.rst

Issues fixed:

- :issue:`SERVER-106752` MongoDB Server may be susceptible to privilege escalation 
  due to ``$mergeCursors`` stage

.. _7.0.18-release-notes:

7.0.18 - Mar 19, 2025
~~~~~~~~~~~~~~~~~~~~~

Issues fixed:

- :issue:`SERVER-82037` Memory used by sorter spills can grow without
  bound
- :issue:`SERVER-90689` Change THP startup warning checks to also look
  at process level settings before emitting warning
- :issue:`SERVER-95452` Prevent CollectionRoutingInfoTargeter from
  iterating all chunk ranges during update and delete
- :issue:`SERVER-98720` Add missing redact() calls to "Plan executor
  error" warning logs
- :issue:`SERVER-100901` Relax user digest invariant to tassert in
  ShardingTaskExecutor
- `All Jira issues closed in 7.0.18
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%207.0.18>`__
- :ref:`7.0.18-changelog` 

.. _7.0.17-release-notes:

7.0.17 - Feb 21, 2025
~~~~~~~~~~~~~~~~~~~~~

.. |cve-version-list| replace:: MongoDB 7.0 prior to 7.0.17

.. include:: /includes/security/cve-156-info.rst

.. include:: /includes/security/cve-157-info.rst

Issues fixed:

- :issue:`SERVER-73641` Timeseries filtering can miss extended-range
  events when sharded
- :issue:`SERVER-76883` Reduce chattiness of "Role does not exist" logs
  for externally sourced users
- :issue:`SERVER-85627` Log information of interrupted thead in stepdown
  killOp
- :issue:`SERVER-89614` $out doesn't clean up correctly between rename
  and dropping temp collection
- :issue:`SERVER-106748` Pre-auth denial of service when accepting OIDC authentication
- :issue:`SERVER-106749` Pre-authentication Denial of Service Stack Overflow Vulnerability 
  in JSON Parsing via Excessive Recursion in MongoDB

- `All Jira issues closed in 7.0.17
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%207.0.17>`__
- :ref:`7.0.17-changelog`


.. _7.0.16-release-notes:

7.0.16 - Dec 20, 2024
~~~~~~~~~~~~~~~~~~~~~

Issues Fixed:

- :issue:`SERVER-67816` Time-series bucket rounding for pre-1970 dates
  behaves unexpectedly
- :issue:`SERVER-90672` Investigate potential bug in time-series insert
  path that allows for multiple buckets to have the same OIDs, across
  stripes
- :issue:`SERVER-90893` listDatabases inconsistent with concurrent DDL
  operations
- :issue:`SERVER-94559` Time-series measurement deletes update the
  minTime of a bucket
- :issue:`SERVER-95067` Time-series inserts can generate multiple
  batches referencing the same bucket
- `All Jira issues closed in 7.0.16
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%207.0.16>`__
- :ref:`7.0.16-changelog`

.. _7.0.15-release-notes:

7.0.15 - Oct 24, 2024
~~~~~~~~~~~~~~~~~~~~~

.. |cve-version-list| replace:: MongoDB 7.0 prior to 7.0.15

.. include:: /includes/security/cve-null-bytes.rst

- :issue:`SERVER-96419` Improper neutralization of null bytes may lead to buffer over-reads in MongoDB Server
- `All Jira issues closed in 7.0.15 <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2C%20TOOLS%2C%20WT)%20AND%20resolution%20%3D%20Fixed%20AND%20fixVersion%20%3D%207.0.15>`__
- :ref:`7.0.15-changelog`

.. _7.0.14-release-notes:

7.0.14 - Aug 26, 2024
~~~~~~~~~~~~~~~~~~~~~

Issues Fixed:

- :issue:`SERVER-82814` Support internal expr comparison operators when 
  determining clustered collection scan bounds
- :issue:`SERVER-85892` $merge with pipeline after $documents returns 
  error
- :issue:`SERVER-91195` Provide a generic backportable solution not to 
  miss top-level timeseries collection options
- :issue:`SERVER-91625` Enable indexed plans for expressions with $$NOW, 
  $$CLUSTER_TIME and $$USER_ROLES
- :issue:`WT-12643` Fix Eviction Server walk logic so that it's able to 
  evict all pages
- `All Jira issues closed in 7.0.14
  <https://jira.mongodb.org/browse/WT-13109?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20(fixversion%3D7.0.13%20or%20fixversion%20%3D%207.0.14)>`__
- :ref:`7.0.14-changelog`

.. _7.0.12-release-notes:

7.0.12 - Jun 28, 2024
~~~~~~~~~~~~~~~~~~~~~

.. |cve-version-list| replace:: MongoDB 7.0 prior to 7.0.12

.. include:: /includes/security/cve-122-info.rst

Issues Fixed:

- :issue:`SERVER-96254` CSFLE and Queryable Encryption self-lookup may 
  fail to encrypt values in subpipelines
- :issue:`SERVER-64574` Upgrade MozJS/Spidermonkey to the latest ESR
- :issue:`SERVER-86674` Primary catch-up may believe it is caught up when it 
  is not
- :issue:`SERVER-90485` $sort does not work as expected when used in 
  conjunction with includeArrayIndex
- :issue:`SERVER-91362` Performance: Do not copy JS "scope" object if a 
  cached JsExecution exists
- :issue:`WT-12736` Mark the page clean after re-instantiating the page with 
  prepared updates
- `All Jira issues closed in 7.0.12
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D7.0.12>`__
- :ref:`7.0.12-changelog`

.. _7.0.11-release-notes:

7.0.11 - May 23, 2024
~~~~~~~~~~~~~~~~~~~~~

Issues Fixed:

- :issue:`SERVER-85279` Don't run the FTDC collection stats
  collector on arbiters
- :issue:`SERVER-89495` Disable test parameters even when no
  setParameters are specified
- :issue:`SERVER-89625` Handle directoryPerDb and
  wiredTigerDirectoryForIndexes correctly when reporting
  namespaces and UUIDs during a backup
- :issue:`SERVER-90288` Bitwise query operators should interpret
  lowest addressable byte in BinData as least significant byte
- :issue:`WT-12609` Improve checkpoint cleanup and page eviction
  logic

- `All Jira issues closed in 7.0.11
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D7.0.11>`__
- :ref:`7.0.11-changelog`

.. _7.0.9-release-notes:

7.0.9 - Apr 26, 2024
~~~~~~~~~~~~~~~~~~~~

Issues fixed: 

- :issue:`SERVER-79637` Incorrect query results in $lookup with TS foreign collection 
  using a correlated predicate
- :issue:`SERVER-82349` Mongo 7 crashes on applyOps index delete/drops without a collection UUID
- :issue:`SERVER-86407` Validation does not produce complete results when it should
- :issue:`SERVER-88173` BinData bit comparisons give wrong results in many cases
- :issue:`WT-10807` Skip in-memory deleted pages as part of the tree walk

- `All Jira issues closed in 7.0.9
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D7.0.9>`__
- :ref:`7.0.9-changelog`

.. _7.0.8-release-notes:

7.0.8 - Apr 3, 2024
~~~~~~~~~~~~~~~~~~~

Issues fixed: 

- :issue:`SERVER-78556` Return default of internalInsertMaxBatchSize to 64
- :issue:`SERVER-79575` Fix numa node counting
- :issue:`SERVER-86583` Non-transactional snapshot read on unsharded collection 
  may execute with mismatched sharding metadata
- :issue:`SERVER-87666` Query shape for $documents is unique on each execution
- :issue:`SERVER-88360` Remove "Sharding catalog and local catalog collection 
  uuid do not match" tripwire assertion
- `All Jira issues closed in 7.0.8
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D7.0.8>`__
- :ref:`7.0.8-changelog`

.. _7.0.7-release-notes:

7.0.7 - Mar 18, 2024
~~~~~~~~~~~~~~~~~~~~

Issues fixed: 

- :issue:`SERVER-84368` CreateIndex fails with StaleConfig if run from a 
  stale mongos against a sharded non-empty collection
- :issue:`SERVER-84628` Startup warning in mongos for Read/Write Concern
- :issue:`SERVER-85459` [v7.0] bucketRoundingSeconds param is accepted
  by nodes on FCV 6.0, binary 7.0
- :issue:`SERVER-85869` Exhaustive find on config shard can return stale
  data
- :issue:`SERVER-87061` Sharded multi-document transactions can observe
  partial effects of concurrent reshard operation
- `All Jira issues closed in 7.0.7
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%277.0.7%27>`__
- :ref:`7.0.7-changelog`

.. _7.0.6-release-notes:

7.0.6 - Feb 28, 2024
~~~~~~~~~~~~~~~~~~~~

.. |cve-version-list| replace:: MongoDB 7.0 prior to 7.0.6

.. include:: /includes/security/cve-2024-1351-info.rst

Issues fixed: 

- :issue:`SERVER-72703` Downgrade $out's db lock to MODE_IX
- :issue:`SERVER-82353` Multi-document transactions can miss documents 
  when movePrimary runs concurrently
- :issue:`SERVER-84338` Top level $or queries may lead to invalid SBE 
  plan cache entry which returns wrong results
- :issue:`SERVER-84723` Sharded multi-document transactions can observe 
  partial effects of concurrent DDL operations
- :issue:`WT-11062` Safe free the ref addr to allow concurrent access
- `All Jira issues closed in 7.0.6
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%277.0.6%27>`__
- :ref:`7.0.6-changelog`

.. _7.0.5-release-notes:

7.0.5 - Jan 5, 2024
~~~~~~~~~~~~~~~~~~~

Issues fixed: 

- :issue:`SERVER-33494` WT SizeStorer never deletes old entries
- :issue:`SERVER-80363` server default writeConcern is not honored when 
  wtimeout is set
- :issue:`SERVER-83091` $or query can trigger an infinite loop during 
  plan enumeration
- :issue:`SERVER-83830` On Enterprise build creating a collection in a 
  replica set with the storageEngine.inMemory option breaks secondaries
- :issue:`WT-7929` Investigate a solution to avoid FTDC stalls during 
  checkpoint
- `All Jira issues closed in 7.0.5
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%277.0.5%27>`__
- :ref:`7.0.5-changelog`

.. _7.0.4-release-notes:

7.0.4 - Nov 27, 2023
~~~~~~~~~~~~~~~~~~~~

Issues fixed: 

- :issue:`SERVER-67962` Applying config.image_collection deletes needs
  better concurrency control
- :issue:`SERVER-69244` $merge fails when session default read concern
  has been set to "majority"
- :issue:`SERVER-79975` [Classic] Optimize large group keys
- :issue:`SERVER-81133` Speedup logic to persist routing table cache
- :issue:`SERVER-82446` $densify use case can result in documents
  outside of range
- `All Jira issues closed in 7.0.4
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%277.0.4%27>`__
- :ref:`7.0.4-changelog`


.. _7.0.3-release-notes:

7.0.3 - Nov 9, 2023
~~~~~~~~~~~~~~~~~~~

Issues fixed: 

- :issue:`SERVER-77506` Sharded multi-document transactions can
  mismatch data and ShardVersion 
- :issue:`SERVER-79088` Improve SBE
  multi-planner performance for query which returns zero results 
- :issue:`SERVER-81106` Recipient shard doesn't wait for the collection
  version to be locally persisted before starting the cloning phase 
- :issue:`SERVER-81966` Avoid modification of previous ChunkMap instances
  during refresh 
- :issue:`WT-11564` Fix RTS to read the newest
  transaction value only when it exists in the checkpoint 
- `All Jira issues closed in 7.0.3
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%277.0.3%27>`__
- :ref:`7.0.3-changelog`


.. _7.0.2-release-notes:

7.0.2 - Sep 29, 2023
~~~~~~~~~~~~~~~~~~~~

Issues fixed: 

- :issue:`SERVER-74954` Incorrect result when contained $or rewrites $elemMatch 
  extra condition
- :issue:`SERVER-79771` Make Resharding Operation Resilient to 
  NetworkInterfaceExceededTimeLimit
- :issue:`SERVER-79912` CheckReplDBHash reports failure with system.buckets 
  collections due to invalid BSON
- :issue:`SERVER-79982` Batched catalog writers can run concurrently with 
  HistoricalCatalogIdTracker::cleanup() and lead to incorrect PIT find results
- :issue:`SERVER-80488` Avoid traversing routing table in balancer split chunk 
  policy
- `All Jira issues closed in 7.0.2
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%277.0.2%27>`__
- :ref:`7.0.2-changelog`

.. _7.0.1-release-notes:

7.0.1 - Sep 5, 2023
~~~~~~~~~~~~~~~~~~~

Issues fixed: 

- :issue:`SERVER-71627` Refreshing cached collection route info severely 
  blocks all client requests for a cluster with 1 million chunks
- :issue:`SERVER-77183` $project followed by $group sometimes gives incorrect 
  results 
- :issue:`SERVER-80256` QueryPlannerAnalysis::explodeForSort should not assume 
  that index scans produce disjoint results
- `All Jira issues closed in 7.0.1
  <https://jira.mongodb.org/issues/?jql=project%20in%20(SERVER%2CTOOLS%2CWT)%20AND%20resolution%3D%27Fixed%27%20and%20fixversion%3D%277.0.1%27>`__
- :ref:`7.0.1-changelog`

.. _7.0.0-release-notes:

7.0.0 - Aug 15, 2023
~~~~~~~~~~~~~~~~~~~~

The rest of this page describes changes and new features introduced in MongoDB 
7.0.

Atlas Search Index Management
-----------------------------

Starting in MongoDB 7.0, you can manage :atlas:`{+fts+} indexes
</atlas-search/atlas-search-overview/#fts-indexes>` with ``mongosh``
methods and database commands. {+fts+} index commands are only available
for deployments hosted on :atlas:`MongoDB Atlas </>`, and require an
Atlas cluster tier of at least M10.

To manage {+fts+} indexes, use the following commands:

.. |fts-index| replace:: {+fts+} index
.. |fts-indexes| replace:: {+fts+} indexes

mongosh Methods
~~~~~~~~~~~~~~~

.. include:: /includes/atlas-search-commands/mongosh-method-table.rst

Database Commands
~~~~~~~~~~~~~~~~~

.. include:: /includes/atlas-search-commands/atlas-search-command-table.rst

Aggregation Stages
~~~~~~~~~~~~~~~~~~

.. list-table::
   :widths: 30,70
   :header-rows: 1

   * - Name

     - Description

   * - :pipeline:`$listSampledQueries`

     - Lists sampled queries for all collections or a specific 
       collection. 

   * - :pipeline:`$listSearchIndexes`

     - .. include:: /includes/atlas-search-commands/command-descriptions/getSearchIndexes-description.rst


General Changes
---------------

OIDC Access Token Authentication Behavior
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-7-0-oidc-audience.rst

For details, see :ref:`oidcidentityproviders-fields`.

Drop a Hashed Shard Key Index
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/drop-hashed-shard-key-index.rst

Cache Refresh Time Fields
~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 7.0, :ref:`log messages for slow queries
<log-message-slow-ops>` includes a new :ref:`cache refresh time field
<log-messages-cache-refresh-times>`.

Concurrent Storage Engine Transactions (Read and Write Tickets)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/7.0-concurrent-transactions.rst

To learn more, see:

- ``wiredTiger.concurrentTransactions``
  
  Renamed :serverstatus:`queues.execution` in v8.0.

- :parameter:`storageEngineConcurrentReadTransactions` 
- :parameter:`storageEngineConcurrentWriteTransactions`

``currentOp`` Metrics
~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 7.0, the :dbcommand:`currentOp` command and the
:method:`db.currentOp()` method include these new fields:

- :data:`currentOp.admissionPriority`
- :data:`currentOp.collUuid`
- :data:`currentOp.startTime`
- :data:`currentOp.samplesPerSecond`
- :data:`currentOp.sampledReadsCount`
- :data:`currentOp.sampledWritesCount`
- :data:`currentOp.sampledReadsBytes`
- :data:`currentOp.sampledWritesBytes`

``$currentOp`` (aggregation) Metrics
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 7.0, the :ref:`currentOp <current-op-agg>` 
aggregation stage includes these new fields: 

- :data:`$currentOp.collUuid`
- :data:`$currentOp.startTime`
- :data:`$currentOp.samplesPerSecond`
- :data:`$currentOp.sampledReadsCount`
- :data:`$currentOp.sampledWritesCount`
- :data:`$currentOp.sampledReadsBytes`
- :data:`$currentOp.sampledWritesBytes`

Compound Wildcard Indexes
~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 7.0, you can create :ref:`compound wildcard indexes
<wildcard-index-compound>`. A compound wildcard index has one wildcard
term and one or more additional index terms.

Use compound wildcard indexes to support queries on known patterns and
to limit the total number of indexes in a collection. 

Large Change Stream Events
~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 7.0, if you have :ref:`change stream
<changeStreams>` events larger than 16 MB, you can use the new
:pipeline:`$changeStreamSplitLargeEvent` stage to split the events into
smaller fragments.

The following new metrics report information about large change stream
events:

- :serverstatus:`metrics.changeStreams`
- :serverstatus:`metrics.changeStreams.largeEventsFailed`
- :serverstatus:`metrics.changeStreams.largeEventsSplit`

serverStatus Output Change
~~~~~~~~~~~~~~~~~~~~~~~~~~

:dbcommand:`serverStatus` includes the following new fields in its
output:

Plan Cache Metrics
  - :serverstatus:`planCache`

queryAnalyzer Metrics
  - :serverstatus:`queryAnalyzers.activeCollections` 
  - :serverstatus:`queryAnalyzers.totalCollections`
  - :serverstatus:`queryAnalyzers.totalSampledReadsCount`
  - :serverstatus:`queryAnalyzers.totalSampledWritesCount`
  - :serverstatus:`queryAnalyzers.totalSampledReadsBytes`
  - :serverstatus:`queryAnalyzers.totalSampledWritesBytes`

{+sbe-title+}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 7.0, the :ref:`{+sbe+} <sbe-landing>` improves
performance for a wider range of find and aggregation queries.

:ref:`Slow query log messages <log-message-json-examples-slow-op>` now
include a ``queryFramework`` field that indicates which query engine
completed the query:

- ``queryFramework: "classic"`` indicates that the classic engine
  completed the query.

- ``queryFramework: "sbe"`` indicates that the {+sbe+} completed the
  query.

User Roles System Variable
~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 7.0, you can use the new :variable:`USER_ROLES`
system variable to return the :ref:`roles <roles>` of the current user.

.. include:: /includes/user-roles-system-variable-examples-list.rst

New Sharding Statistics for Chunk Migrations
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/chunk-migrations-version-list.rst

MongoDB includes the following new sharding statistics for chunk
migrations:

- :serverstatus:`shardingStatistics.countDonorMoveChunkCommitted`
- :serverstatus:`shardingStatistics.countDonorMoveChunkAborted`
- :serverstatus:`shardingStatistics.totalDonorMoveChunkTimeMillis`
- :serverstatus:`shardingStatistics.countBytesClonedOnRecipient`
- :serverstatus:`shardingStatistics.countDocsClonedOnCatchUpOnRecipient`
- :serverstatus:`shardingStatistics.countBytesClonedOnCatchUpOnRecipient`

New Slow Query Log Message
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-totalOplogSlotDurationMicros.rst 

To learn more, see :ref:`log-message-slow-ops`.

New Parameters
~~~~~~~~~~~~~~

analyzeShardKey-related Parameters
``````````````````````````````````

MongoDB 7.0 adds the following parameters related to the 
``analyzeShardKey`` command:

- :parameter:`analyzeShardKeyCharacteristicsDefaultSampleSize`
- :parameter:`analyzeShardKeyNumMostCommonValues`
- :parameter:`analyzeShardKeyNumRanges`
- :parameter:`analyzeShardKeyMonotonicityCorrelationCoefficientThreshold`

autoMergerIntervalSecs Parameter
````````````````````````````````

MongoDB 7.0 adds the :parameter:`autoMergerIntervalSecs` parameter 
which, when {+auto-merge-upper+} is enabled, specifies the amount of 
time between {+auto-merge-action+} rounds, in seconds. 
``autoMergerIntervalSecs`` can only be set on config servers of sharded
clusters.

autoMergerThrottlingMS Parameter
````````````````````````````````

MongoDB 7.0 adds the :parameter:`autoMergerThrottlingMS` which, when 
{+auto-merge-upper+} is enabled, specifies the minimum amount time 
between merges initiated by the {+auto-merge-upper+} on the same 
collection, in milliseconds. ``autoMergerThrottlingMS`` can only be set
on config servers of sharded clusters.

balancerMigrationsThrottlingMs Parameter
````````````````````````````````````````

MongoDB 7.0 adds the :parameter:`balancerMigrationsThrottlingMs`
parameter which allows you to throttle the balancing rate.

enableDetailedConnectionHealthMetricLogLines Parameter
```````````````````````````````````````````````````````

MongoDB 7.0 adds the :parameter:`enableDetailedConnectionHealthMetricLogLines`
parameter which lets you specify whether or not a set of :ref:`log messages 
<log-messages-ref>` related to cluster connection health metrics appears in the 
log.

``oidcIdentityProviders`` Parameter
```````````````````````````````````

MongoDB 7.0  adds the :parameter:`oidcIdentityProviders` parameter which allows 
you to specify identity provider (IDP) configurations when using 
:ref:`OpenID Connect <authentication-oidc>` authentication. 

configureQueryAnalysis-related Parameters
`````````````````````````````````````````

MongoDB 7.0 adds the following parameters related to the
``configureQueryAnalysis`` command:

- :parameter:`queryAnalysisSamplerConfigurationRefreshSecs`
- :parameter:`queryAnalysisWriterIntervalSecs`
- :parameter:`queryAnalysisWriterMaxMemoryUsageBytes`
- :parameter:`queryAnalysisWriterMaxBatchSize`
- :parameter:`queryAnalysisSampleExpirationSecs`

Security
--------

{+qe+} General Availability
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 7.0, :ref:`Queryable Encryption with equality
queries <qe-manual-feature-qe>` is generally available (GA). 
Improvements in the GA make it incompatible with the
{+qe-preview+}, which should not be used now that the feature is GA. 
For details, see :ref:`7.0-compatibility`.

KMIP 1.0 and 1.1 Support
~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 7.0 (and 6.0.6) adds the :setting:`useLegacyProtocol
<security.kmip.useLegacyProtocol>` setting. This setting allows MongoDB
servers to connect to KMIP servers that use KMIP protocol version 1.0 or
1.1.

OpenSSL and FIPS Support
````````````````````````

.. include:: /includes/ssl-and-fips-support.rst

For details, see :ref:`transport-encryption`.

OpenID Connect
``````````````
Starting in 7.0, MongoDB Enterprise provides support for 
:ref:`OpenID Connect <authentication-oidc>` authentication. OpenID Connect is an 
authentication layer built on top of OAuth2. You can use OpenID Connect to 
configure single sign-on between your MongoDB database and a third-party identity 
provider.

Aggregation
-----------

New operators:

.. list-table::
   :header-rows: 1

   * - Name
     - Description

   * - :group:`$median` 
     - .. include:: /includes/aggregation/fact-return-median.rst

       This operator can be used as an accumulator and as an aggregation
       expression.

   * - :group:`$percentile`
     - .. include:: /includes/aggregation/fact-return-percentile.rst

       This operator can be used as an accumulator and as an aggregation
       expression.

Month Name Specifier for $dateToString 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 7.0 adds the following format specifiers to use with the 
:expression:`$dateToString` operator: 

.. list-table::
   :header-rows: 1
   :widths: 20 60 20

   * - Specifiers
     - Description
     - Possible Values

   * - ``%b``
     - Abbreviated month name (3 letters)
     - ``jan``-``dec``

   * - ``%B``
     - Full month name
     - ``january``-``december``

.. _7.0-time-series:

Time Series
-----------

MongoDB 7.0 removes most of the time series limitations from these
operations that are based on the :dbcommand:`delete` command:

.. include:: /includes/time-series/fact-delete-operations-list.rst

.. _7.0-sharding:

Sharding
--------

Sharding Metadata Diagnostics
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 7.0, the :dbcommand:`checkMetadataConsistency` command
is available to check sharding metadata at the cluster, database, and 
collection levels for inconsistencies.  These inconsistencies can originate
in cases such as:

- Upgrades in cases where the cluster encountered a bug while running previous
  releases of MongoDB
  
- Manual interventions that corrupt the cluster catalog

The following helper methods are now available through :program:`mongosh`:

* :method:`db.checkMetadataConsistency`
* :method:`db.collection.checkMetadataConsistency`
* :method:`sh.checkMetadataConsistency`

For more information on the inconsistencies the command checks for, see
:ref:`inconsistency-types`.

mergeAllChunksOnShard Command
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 7.0, the :dbcommand:`mergeAllChunksOnShard` command
finds and merges all :ref:`mergeable chunks <mergeability>` that a shard 
owns for a given collection.

The {+auto-merge-upper+}
~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 7.0, :ref:`the {+auto-merge-upper+} 
<automerger-concept>` can automatically merge chunks that meet the 
:ref:`mergeability requirements <mergeability-concept>`. The 
{+auto-merge-upper+} is enabled by default. 

Starting in MongoDB 7.0, you can use the following methods to control
the {+auto-merge-upper+} behavior:

- :method:`sh.startAutoMerger()`
- :method:`sh.stopAutoMerger()`
- :method:`sh.enableAutoMerger()`
- :method:`sh.disableAutoMerger()`

enableAutoMerger Parameter for configureCollectionBalancing
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 7.0, the :dbcommand:`configureCollectionBalancing`
command accepts the ``enableAutoMerger`` parameter. Use 
``enableAutoMerger`` to set whether or not the 
:ref:`{+auto-merge-upper+} <automerger-concept>` takes this collection 
into account.

.. rangeDeleterHighPriority Parameter for Deprioritizing Range deletions
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Starting in MongoDB 7.0, you can prioritize or deprioritize cleanup of
   :term:`orphaned documents <orphaned document>` over user operations
   using the :parameter:`rangeDeleterHighPriority` parameter. 

   Commenting out rangeDeleterHighPriority content in DOCSP-45407.
   TODO, uncomment the content for the rangeDeleterHighPriority parameter in 
   DOCSP-45584, only once the work in SERVER-79291 to re-enable this feature
   flag is completed. Thanks!

operationsBlockedByRefresh Metrics Removed
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 7.0 removes the ``operationsBlockedByRefresh`` document that
contains statistics about operations blocked by catalog cache refresh
activity because the ``operationsBlockedByRefresh`` counters increased
on ``mongos`` for every operation that used collection routing
information even if the operation wasn't blocked by a catalog refresh
activity. 

analyzeShardKey Command and db.collection.analyzeShardKey() Method
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 7.0 adds the :dbcommand:`analyzeShardKey` command and the 
:method:`db.collection.analyzeShardKey()` method, which let you
calculate metrics for evaluating a shard key.

configureQueryAnalyzer Command and db.collection.configureQueryAnalyzer() Method 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 7.0 adds the :dbcommand:`configureQueryAnalyzer` command, which
allows you to configure query sampling for a collection. MongoDB 7.0
also adds the :method:`db.collection.configureQueryAnalyzer()`, which
wraps the ``configureQueryAnalyzer`` command. Sampled queries provide 
information to ``analyzeShardKey`` to calculate metrics about read and 
write distribution of a shard key.

.. _7.0-rel-notes-platforms:

Platform Support
----------------

Removed Platforms
~~~~~~~~~~~~~~~~~

MongoDB 7.0 removes support for **RHEL 7 / CentOS 7 / Oracle 7** on the
:ref:`PPC64LE <prod-notes-supported-platforms-PPC64LE>` and :ref:`s390x 
<prod-notes-supported-platforms-s390x>` architectures.
  
.. _release-notes-6.3:

Changes Introduced in MongoDB 6.3
---------------------------------

Aggregation
~~~~~~~~~~~

MongoDB 6.3 introduces the following aggregation operators: 

.. list-table::
  :header-rows: 1
  :widths: 20 80

  * - Operator
    - Description

  * - :expression:`$bitAnd`
    - Returns the result of a bitwise ``and`` operation on an array of 
      ``int`` or ``long`` values. 
          
  * - :expression:`$bitNot`
    - Returns the result of a bitwise ``not`` operation on a single argument 
      or an array that contains a single ``int`` or ``long`` value. 

  * - :expression:`$bitOr`
    - Returns the result of a bitwise ``or`` operation on an array of 
      ``int`` or ``long`` values. 

  * - :expression:`$bitXor`
    - Returns the result of a bitwise ``xor`` (exclusive or) operation on an 
      array of ``int`` and ``long`` values.

Connection Acquisition To Wire Log Message
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 6.3, a message is added to the log if the time that
an operation waited between acquisition of a server connection and
writing the bytes to send to the server over the network exceeds 1
millisecond. For details, see
:ref:`log-messages-connection-acquisition-to-wire`.

``connPoolStats`` Metrics
~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 6.3, the :dbcommand:`connPoolStats` command has
these output changes:

.. list-table::
   :header-rows: 1
   :widths: 50 50

   * - Document
     - Field(s)

   * - New :data:`connPoolStats.acquisitionWaitTimes` document. 
     - Time ranges with the number of connection requests in each
       range.
       Total number of connection requests for all time ranges.

``explain`` Output Includes Fields for Spilled Data File Size
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 6.3, the :dbcommand:`explain` output for the 
:pipeline:`$group` stage includes new metrics on spill data when using the 
classic execution engine:

- ``spillFileSizeBytes``, the size of the spill file written to disk in the 
  :pipeline:`$group` stage
- ``numBytesSpilledEstimate``, estimate of the number of bytes written to disk 
  in the :pipeline:`$group` stage before compression

For details, see :ref:`sort-and-group-executionStats-and-above`.

``serverStatus`` Metrics
~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 6.3, the :dbcommand:`serverStatus` command and the
:method:`db.serverStatus()` method have these output changes:

.. list-table::
   :header-rows: 1
   :widths: 50 50

   * - Document
     - Field(s)

   * - New :serverstatus:`network.listenerProcessingTime` document.
     - :serverstatus:`network.listenerProcessingTime.durationMicros`

   * - Addition to :serverstatus:`connections` document.
     - :serverstatus:`connections.rejected`

   * - New :serverstatus:`metrics.network` document.
     - :serverstatus:`metrics.network.totalEgressConnectionEstablishmentTimeMillis`
       :serverstatus:`metrics.network.totalIngressTLSConnections`
       :serverstatus:`metrics.network.totalIngressTLSHandshakeTimeMillis`
       :serverstatus:`metrics.network.totalTimeForEgressConnectionAcquiredToWireMicros`
       :serverstatus:`metrics.network.totalTimeToFirstNonAuthCommandMillis`

   * - Additions to :serverstatus:`metrics.operation` document.
     - :serverstatus:`metrics.operation.numConnectionNetworkTimeouts`
       :serverstatus:`metrics.operation.totalTimeWaitingBeforeConnectionTimeoutMillis`
       
   * - Addition to :serverstatus:`shardingStatistics` document.
     - :serverstatus:`shardingStatistics.chunkMigrationConcurrency`

   * - Additions to :serverstatus:`indexBulkBuilder` document.
     - :serverstatus:`indexBulkBuilder.numSorted`
       :serverstatus:`indexBulkBuilder.bytesSorted`
       :serverstatus:`indexBulkBuilder.memUsage`

Session Workflow Log Message
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 6.3, a message is added to the log if the time to
send an operation response exceeds the :ref:`slowms threshold option
<slowms-threshold-option>`. For details, see
:ref:`log-messages-session-workflow-example`.

Server Parameters
~~~~~~~~~~~~~~~~~

Starting in MongoDB 6.3, these server parameters were added:

- :parameter:`slowConnectionThresholdMillis` sets the time limit to log
  the establishment of slow server connections. 
- :parameter:`planCacheSize` sets the size of the :ref:`plan cache
  <read-operations-query-optimization>` for the {+sbe+}.

Time Series Collection Custom Bucketing Parameters
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 6.3 adds the following :ref:`time series parameters 
<time-series-fields>`:

- ``bucketMaxSpanSeconds`` sets the maximum time span between measurements
  in a bucket.
- ``bucketRoundingSeconds`` sets the time interval that determines the 
  starting timestamp for a new bucket.

``compact`` Support for Time Series Collections
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 6.3, the :dbcommand:`compact` command works with
:ref:`time series collections <manual-timeseries-landing>`.

.. _release-notes-6.2:

Changes Introduced in MongoDB 6.2
---------------------------------

Collection Validation
~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/validate-improvements-introduction.rst

Deprecated Commands
~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 6.2, the following database commands are deprecated:

- :dbcommand:`collStats`
- :dbcommand:`currentOp`

Use the :pipeline:`$collStats` and :pipeline:`$currentOp` aggregation 
stages instead.

serverStatus Metrics
~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 6.2, the :dbcommand:`serverStatus` command output
includes these new fields:

- :serverstatus:`metrics.query.sort`
- :serverstatus:`metrics.query.sort.spillToDisk`
- :serverstatus:`metrics.query.sort.totalBytesSorted`
- :serverstatus:`metrics.query.sort.totalKeysSorted`

Starting in MongoDB 6.2, the :dbcommand:`serverStatus` command and 
the :method:`db.serverStatus()` method report the 
:serverstatus:`~opLatencies` metric for :binary:`mongos <bin.mongos>` 
instances. Latencies reported by ``mongos`` include operation latency 
time and communication time between the ``mongod`` and ``mongos`` 
instances.

Server Parameters
~~~~~~~~~~~~~~~~~

Starting in MongoDB 6.2, :binary:`mongod` adds these parameters:

- :parameter:`transactionTooLargeForCacheThreshold`

Sharding
~~~~~~~~

.. include:: /includes/fact-remove-maxSize-addShard.rst

.. _6.1-release-notes:

Changes Introduced in MongoDB 6.1
---------------------------------

$addFields and $set Allow Empty Objects as Expressions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 6.1, the aggregation stages :pipeline:`$addFields` and 
:pipeline:`$set` allow you to set paths to empty objects without using the 
:expression:`$literal` expression.

Auditing
~~~~~~~~

MongoDB 6.1 adds the following cluster audit events:

- :ref:`getClusterParameter <audit-message-getClusterParameter>`
- :ref:`setClusterParameter <audit-message-setClusterParameter>`
- :ref:`updateCachedClusterServerParameter 
  <audit-message-updateCachedClusterServerParameter>`

Starting in MongoDB 6.1, the :ref:`startup <audit-message-startup>` 
audit event has this structure:

.. include:: /includes/fact-audit-message-setClusterParameter-form.rst 

For additional details, see :ref:`audit-action-details-results`. 

Balancing Policy Changes
~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 6.1, data in sharded clusters is distributed based on data 
size rather than number of chunks. As a result, you should be aware of the
following significant changes in sharded cluster data distribution behavior:

- The balancer distributes ranges of data rather than chunks. The balancing 
  policy looks for evenness of data distribution rather than chunk distribution.

- Chunks are not subject to auto-splitting. Instead, chunks are split only when
  moved across shards. 

- A chunk is now referred to as a range. 

- ``moveRange`` has replaced ``moveChunk``. 

Changes to Journaling
~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/journal-option-removed.rst

``currentOp`` Metrics
~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 6.1, the :dbcommand:`currentOp` command and the
:method:`db.currentOp()` method have expanded output for resharding.

Resharding operations can involve multiple MongoDB instances, and
MongoDB instances can play different roles in the resharding operation.
The particular operation and the role the host instance plays in the 
:ref:`resharding <sharding-resharding>` process determine when each
metric updates. 

.. list-table::
   :header-rows: 1
   :widths: 30 20 50

   * - Metric
     - Role Tracked
     - Description

   * - ``opStatus``
     -  
     -  Removed.

   * - ``desc`` 
     - All
     - Describes the action taken. The value is one of:

       - ReshardingDonorService<operationUUID>
       - ReshardingRecipientService<operationUUID>
       - ReshardingCoordinatorService<operationUUID>
        
       For ``$currentOp``, the command UUID is added to each role's
       state document.

   * - ``op``
     - All
     - This metric has a constant value: "command".

   * - ``ns``
     - All
     - The namespace for the resharded index. The value is a string in
       the form: ``<database>.<collection>``.

   * - ``originatingCommand``
     - All
     - A document that lists the command options for the operation.

   * - ``donorState``
     - Donor
     - The current state of the role's state machine.

   * - ``coordinatorState``
     - Coordinator
     - The current state of the role's state machine.

   * - ``recipientState``
     - Recipient
     - The current state of the role's state machine.

   * - approxDocumentsToCopy
     - Recipient
     - The number of documents in the source collection.

   * - documentsCopied
     - Recipient
     - The number of documents already copied.

   * - approxBytesToCopy
     - Recipient
     - The total size, in bytes, of the documents in the source
       collection.

   * - bytesCopied
     - Recipient
     - The number of bytes copied. When resharding completes, this value
       is similar to the value of ``approxBytesToCopy``. 

   * - oplogEntriesFetched
     - Recipient
     - The number of oplog entries written to the oplog buffer
       collection.

   * - oplogEntriesApplied
     - Recipient
     - The number of oplog entries applied from the oplog buffer
       collection.

   * - insertsApplied
     - Recipient
     - The number of inserts applied to the temporary resharding
       collection. Each oplog entry that involves an insert increments
       the counter by 1.

   * - updatesApplied
     - Recipient
     - The number of updates applied to the temporary resharding
       collection. Each oplog entry that involves an update increments
       the counter by 1.

   * - deletesApplied
     - Recipient
     - The number of deletes applied to the temporary resharding
       collection. Each oplog entry that involves a delete increments the
       counter by 1.

   * - totalOperationTimeElapsedSecs
     - All
     - The number of seconds since the operation began.

   * - totalCopyTimeElapsedSecs
     - Recipient
     - The number of seconds spent cloning.

   * - totalCopyTimeElapsedSecs
     - Coordinator
     - The maximum number of seconds a Recipient could have spent
       cloning.

   * - totalApplyTimeElapsedSecs
     - Recipient
     - The number of seconds spent applying changes.

   * - totalApplyTimeElapsedSecs
     - Coordinator
     - The approximate maximum number of seconds a Recipient could have
       spent applying changes.

   * - totalCriticalSectionTimeElapsedSecs
     - Recipient
     - The number of seconds spent in the critical section.

   * - totalCriticalSectionTimeElapsedSecs
     - Coordinator
     - The number of seconds the critical section could have been held.

   * - remainingOperationTimeEstimatedSecs
     - Recipient
     - The estimated number of seconds until the operation completes.

   * - allShardsLowestRemainingOperationTimeEstimatedSecs
     - Coordinator
     - Calculated across all shards, the lowest estimate of the number of
       seconds remaining. 

   * - allShardsHighestRemainingOperationTimeEstimatedSecs
     - Coordinator
     - Calculated across all shards, the highest estimate of the number
       of seconds remaining.

   * - countWritesToStashCollections
     - Recipient
     - The number of writes to the recipient stash collections.

   * - countWritesDuringCriticalSection
     - Donor
     - The number of writes attempted during the donor's critical
       section. 

   * - countReadsDuringCriticalSection
     - Donor
     - The number of reads attempted during the donor's critical section.

Improved Efficiency for Multiple Document Deletions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/multi-deletes.rst

PCRE Library Upgrade
~~~~~~~~~~~~~~~~~~~~

{+pcre+} ({+pcre-abbr+}) is the library used by MongoDB to implement
regular expression pattern matching. Starting in version 6.1, MongoDB
upgrades the {+pcre-abbr+} library to PCRE2. PCRE2 is the current
{+pcre-abbr+} library and is actively maintained and updated.

To learn how to perform regex matches in MongoDB, see the following
pages:

- :query:`$regex` (query operator)
- :expression:`$regexFind` (aggregation operator)
- :expression:`$regexFindAll` (aggregation operator)
- :expression:`$regexMatch` (aggregation operator)

Retryable Writes Error Handling
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/6.1-retry-writes-error-handling.rst

Resharding
~~~~~~~~~~

Starting in MongoDB 6.1, there are new metrics available 
:ref:`resharding <sharding-resharding>`. The output of the following
commands has changed:

- :dbcommand:`currentOp`
- :method:`db.currentOp()`
- :dbcommand:`serverStatus`
- :method:`db.serverStatus()`

Server Parameters
~~~~~~~~~~~~~~~~~

Starting in MongoDB 6.1, MongoDB adds the following new parameters:

- :parameter:`temporarilyUnavailableBackoffBaseMs` adjusts the time
  between retries after a write failure. 
- :parameter:`temporarilyUnavailableMaxRetries` limits the number of
  retries after a write failure.
- :parameter:`ldapRetryCount` sets the number of operation retries by
  the server LDAP manager after a network error.

``serverStatus`` Metrics
~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 6.1, the :dbcommand:`serverStatus` command and the
:method:`db.serverStatus()` method have these output changes:

New Metrics
```````````

- :serverstatus:`~shardingStatistics.resharding.active.countWritesToStashCollections`
  The number of writes to the recipient stash collection.
- :serverstatus:`~shardingStatistics.resharding.latencies` Timing
  metrics for resharding operations. 

  - :serverstatus:`~shardingStatistics.resharding.latencies.collectionCloningTotalRemoteBatchRetrievalTimeMillis`
    Total time recipients spent retrieving batches of documents from
    donors, in milliseconds.
  - :serverstatus:`~shardingStatistics.resharding.latencies.collectionCloningTotalRemoteBatchesRetrieved`
    Total number of batches of documents recipients retrieved from
    donors.
  - :serverstatus:`~shardingStatistics.resharding.latencies.collectionCloningTotalLocalInsertTimeMillis`
    Total time recipients spent inserting batches of document from
    donors, in milliseconds.
  - :serverstatus:`~shardingStatistics.resharding.latencies.collectionCloningTotalLocalInserts`
    Total number of batches of documents from donors that recipients
    inserted.
  - :serverstatus:`~shardingStatistics.resharding.latencies.oplogFetchingTotalRemoteBatchRetrievalTimeMillis`
    Total time recipients spent retrieving batches of oplog entries
    from donors, in milliseconds.
  - :serverstatus:`~shardingStatistics.resharding.latencies.oplogFetchingTotalRemoteBatchesRetrieved`
    Total number of batches of oplog entries recipients retrieved from
    donors.
  - :serverstatus:`~shardingStatistics.resharding.latencies.oplogFetchingTotalLocalInsertTimeMillis`
    Total time recipients spent inserting batches of oplog entries
    from donors, in milliseconds.
  - :serverstatus:`~shardingStatistics.resharding.latencies.oplogFetchingTotalLocalInserts`
    Total number of batches of oplog entries from donors that
    recipients inserted.
  - :serverstatus:`~shardingStatistics.resharding.latencies.oplogApplyingTotalLocalBatchRetrievalTimeMillis`
    Total time recipients spent retrieving batches of oplog entries
    that were inserted during fetching, in milliseconds.
  - :serverstatus:`~shardingStatistics.resharding.latencies.oplogApplyingTotalLocalBatchesRetrieved`
    Total number of batches of oplog entries that were inserted during
    fetching that recipients retrieved.
  - :serverstatus:`~shardingStatistics.resharding.latencies.oplogApplyingTotalLocalBatchApplyTimeMillis`
    Total time recipients spent applying batches of oplog entries, in
    milliseconds.
  - :serverstatus:`~shardingStatistics.resharding.latencies.oplogApplyingTotalLocalBatchesApplied`
    Total number of batches of oplog entries that recipients applied.

Replaced Metrics
````````````````

``resharding.remainingOperationTimeEstimatedMillis`` is replaced by:

- :serverstatus:`~shardingStatistics.resharding.oldestActive.coordinatorAllShardsHighestRemainingOperationTimeEstimatedMillis`
- :serverstatus:`~shardingStatistics.resharding.oldestActive.coordinatorAllShardsLowestRemainingOperationTimeEstimatedMillis`
- :serverstatus:`~shardingStatistics.resharding.oldestActive.recipientRemainingOperationTimeEstimatedMillis`

Renamed Metrics
```````````````

- ``countReshardingSuccessful`` is now :serverstatus:`~shardingStatistics.resharding.countSucceeded`
- ``countReshardingFailures`` is now :serverstatus:`~shardingStatistics.resharding.countFailed`
- ``countReshardingOperations`` is now :serverstatus:`~shardingStatistics.resharding.countStarted`
- ``countReshardingCanceled`` is now :serverstatus:`~shardingStatistics.resharding.countCanceled`
- ``minShardRemainingOperationTimeEstimatedMillis`` is now :serverstatus:`~shardingStatistics.resharding.oldestActive.coordinatorAllShardsLowestRemainingOperationTimeEstimatedMillis`
- ``maxShardRemainingOperationTimeEstimatedMillis`` is now :serverstatus:`~shardingStatistics.resharding.oldestActive.coordinatorAllShardsHighestRemainingOperationTimeEstimatedMillis`
- ``resharding.opcounters.insert`` is now :serverstatus:`~shardingStatistics.resharding.active.insertsApplied`
- ``resharding.opcounters.update`` is now :serverstatus:`~shardingStatistics.resharding.active.updatesApplied`
- ``resharding.opcounters.delete`` is now :serverstatus:`~shardingStatistics.resharding.active.deletesApplied`

Removed Metrics
```````````````

- ``oplogApplierApplyBatchLatencyMillis``
- ``collClonerFillBatchForInsertLatencyMillis``

Storage Engine
~~~~~~~~~~~~~~

.. include:: /includes/reference/fact-parameters-cache-pressure.rst 

``*UCP`` Regex Option to Match Non-ASCII Characters
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 6.1, you can use the ``*UCP`` option for regex
queries. The ``*UCP`` option matches non-ASCII characters (specifically,
the option can match UTF-8 characters). However, the ``*UCP`` option
results in a slower query than one without the option specified.

For an example that uses the ``*UCP`` option, see
:ref:`regex-example-pcre2-ucp`.

.. _7.0-upgrade:

Upgrade Procedures
------------------

.. important:: Feature Compatibility Version

   To upgrade to MongoDB 7.0 from a 6.0 deployment, the 6.0 deployment
   must have ``featureCompatibilityVersion`` set to ``6.0``. To check
   the version:

   .. code-block:: javascript

      db.adminCommand( { getParameter: 1, featureCompatibilityVersion: 1 } )

To upgrade to MongoDB 7.0, refer to the upgrade instructions specific to
your MongoDB deployment:

- :ref:`<7.0-upgrade-standalone>`

- :ref:`<7.0-upgrade-replica-set>`

- :ref:`<7.0-upgrade-sharded-cluster>`

If you need guidance on upgrading to 7.0, MongoDB professional services
offer major version upgrade support to help ensure a smooth transition
without interruption to your MongoDB application. To learn more, see
:products:`MongoDB Consulting </consulting?tck=docs_server>`.

.. _7.0-downgrade-considerations:

Downgrade Considerations
------------------------

Only Single-Version Downgrades are Supported 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

.. include:: /includes/7.0-upgrade-replacements.rst

.. include:: includes/downgrade/single-version-support.rst

Downgrade Policy Changes
~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 7.0: 

- Binary downgrades are no longer supported for MongoDB Community Edition. 

- You cannot downgrade your deployment's {+fcv+} to or from a
  :ref:`rapid release <rapid-releases>` version of MongoDB.

- The :dbcommand:`setFeatureCompatibilityVersion` command requires an
  additional parameter, ``confirm``, which must be set to ``true`` to
  upgrade or downgrade {+fcv+}.

- If you upgrade or downgrade your deployment's {+fcv+}, you cannot
  downgrade your Enterprise deployment's binary version without assistance from
  support.

.. |version| replace:: 7.0

Backward-Incompatible Features
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 7.0 includes features that are not compatible with earlier releases.
Downgrading from 7.0 to an earlier release requires that you remove data 
that uses these features.

For more information, see :ref:`7.0-downgrade-incompatible`.

.. _7.0-download:

Download
--------

To download MongoDB 7.0, go to the `MongoDB Download Center
<https://www.mongodb.com/try/download?tck=docs_server>`__.



Report an Issue
---------------

.. include:: /includes/report-an-issue.rst

.. toctree::
   :titlesonly:
   :hidden:
   
   Compatibility Changes </release-notes/7.0-compatibility>
   Upgrade 6.0 to 7.0 </release-notes/7.0-upgrade>
   Downgrade 7.0 to 6.0 </release-notes/7.0-downgrade>
   Changelog </release-notes/7.0-changelog>
