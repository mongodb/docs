# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/manage-journaling.txt:3
# 33389f479a85429d9554119d018bc147
msgid "Manage Journaling"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:7
# c67917177a4d492ea1585149d09e578c
msgid "MongoDB uses *write ahead logging* to an on-disk :term:`journal` to guarantee :doc:`write operation </core/write-operations>` durability and to provide crash resiliency. Before applying a change to the data files, MongoDB writes the change operation to the journal. If MongoDB should terminate or encounter an error before it can write the changes from the journal to the data files, MongoDB can re-apply the write operation and maintain a consistent state."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:15
# b85b877e638b46e5b1184313dd20a7a9
msgid "*Without* a journal, if :program:`mongod` exits unexpectedly, you must assume your data is in an inconsistent state, and you must run either :doc:`repair </tutorial/recover-data-following-unexpected-shutdown>` or, preferably, :doc:`resync </tutorial/resync-replica-set-member>` from a clean member of the replica set."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:21
# 6c4a65673231469cad82dac9dd9f5eb4
msgid "With journaling enabled, if :program:`mongod` stops unexpectedly, the program can recover everything written to the journal, and the data remains in a consistent state. By default, the greatest extent of lost writes, i.e., those not made to the journal, are those made in the last 100 milliseconds. See :setting:`~storage.journal.commitIntervalMs` for more information on the default."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:28
# 2a7ea17134b647dfa665c5fdb97ec28e
msgid "With journaling, if you want a data set to reside entirely in RAM, you need enough RAM to hold the data set plus the \"write working set.\" The \"write working set\" is the amount of unique data you expect to see written between re-mappings of the private view. For information on views, see :ref:`journaling-storage-views`."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:36
# 9a0f85276f9745cfb555fbc540bd41af
msgid "For 64-bit builds of :program:`mongod`, journaling is enabled by default.  For other platforms, see :setting:`storage.journal.enabled`."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:41
# 2659461a3e404538b93bc9dc6862af08
msgid "Procedures"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:44
# d7a82f6da5e7470ab7bd5a00c6bcbff8
msgid "Enable Journaling"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:46
# 89ea4e90c66b4f48b4ef090f5b13b680
msgid "For 64-bit builds of :program:`mongod`, journaling is enabled by default."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:49
# 4c06277bdc174e0f96ffdcca64aae393
msgid "To enable journaling, start :program:`mongod` with the :option:`--journal <mongod --journal>` command line option."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:52
# 65235612cede46f5aee3fb71bcf7d48b
msgid "If no journal files exist, when :program:`mongod` starts, it must preallocate new journal files. During this operation, the :program:`mongod` is not listening for connections until preallocation completes: for some systems this may take a several minutes. During this period your applications and the :program:`mongo` shell are not available."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:60
# 9dd316abd9aa4d06a61394c382c31839
msgid "Disable Journaling"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:64
# aa2e4aef00c740bdb344e131518fe77b
msgid "Do not disable journaling on production systems. If your :program:`mongod` instance stops without shutting down cleanly unexpectedly for any reason, (e.g. power failure) and you are not running with journaling, then you must recover from an unaffected :term:`replica set` member or backup, as described in :doc:`repair  </tutorial/recover-data-following-unexpected-shutdown>`."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:71
# 6f6676646a014e89810564c189e6946a
msgid "To disable journaling, start :program:`mongod` with the :option:`--nojournal <mongod --nojournal>` command line option."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:75
# 126ab15dd94f4c58a52638af9d38fcde
msgid "Get Commit Acknowledgment"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:77
# ec6a3e3423ed4d6aa629f9fc5e23caf2
msgid "You can get commit acknowledgment with the :ref:`write-concern` and the ``j`` option. For details, see :ref:`write-concern-operation`."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:84
# 562dcfaec4ea4096a6514bd0a28ee09b
msgid "Avoid Preallocation Lag"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:86
# dc88896a273d4cadbf2c7eacced90923
msgid "To avoid :ref:`preallocation lag <journaling-journal-files>`, you can preallocate files in the journal directory by copying them from another instance of :program:`mongod`."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:90
# 2bd4206603eb4e2e8333d71063a71f1f
msgid "Preallocated files do not contain data. It is safe to later remove them. But if you restart :program:`mongod` with journaling, :program:`mongod` will create them again."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:0
# 1908049a87864c0b9ac126334a866207
msgid "Example"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:98
# 180a6c0d9dd54184a98a3945729d86dd
msgid "For demonstration purposes, the sequence starts by creating a set of journal files in the usual way."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:101
# cecaf0610efc402398ac5df0aacb4804
msgid "Create a temporary directory into which to create a set of journal files:"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:108
# 52ed3cb45bfc4d5395a04ac7303fa921
msgid "Create a set of journal files by staring a :program:`mongod` instance that uses the temporary directory:"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:115
# 395bb08c5d924d14a227ced5228dd89e
msgid "When you see the following log output, indicating :program:`mongod` has the files, press CONTROL+C to stop the :program:`mongod` instance:"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:123
# 5517e4107cbd4472a1db1bd6b5e515bc
msgid "Preallocate journal files for the new instance of :program:`mongod` by moving the journal files from the data directory of the existing instance to the data directory of the new instance:"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:131
# e24a7dfeaeb14eecbdb1e6ff8668ebca
msgid "Start the new :program:`mongod` instance:"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:138
# 4e51e124f6404bd2818b63cd2ca77519
msgid "Monitor Journal Status"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:140
# d84aba2845864f9785fcf35f18f486b5
msgid "Use the following commands and methods to monitor journal status:"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:142
# 25de7398849f4c6badbf9bcff175c4e5
msgid ":dbcommand:`serverStatus`"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:144
# 14a9eb1986964c87abef00d3b7081a9b
msgid "The :dbcommand:`serverStatus` command returns database status information that is useful for assessing performance."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:147
# eae7c6818d404d0dbf0effcd41424d4e
msgid ":dbcommand:`journalLatencyTest`"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:149
# 58ed85f9dea44f8eb85c32d38a1d6657
msgid "Use :dbcommand:`journalLatencyTest` to measure how long it takes on your volume to write to the disk in an append-only fashion. You can run this command on an idle system to get a baseline sync time for journaling. You can also run this command on a busy system to see the sync time on a busy system, which may be higher if the journal directory is on the same volume as the data files."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:156
# 5367e2460dfb46ff89696d6ab3c3f471
msgid "The :dbcommand:`journalLatencyTest` command also provides a way to check if your disk drive is buffering writes in its local cache. If the number is very low (i.e., less than 2 milliseconds) and the drive is non-SSD, the drive is probably buffering writes. In that case, enable cache write-through for the device in your operating system, unless you have a disk controller card with battery backed RAM."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:166
# 2edbe30359b94f5f97f7d4c108f98e70
msgid "Change the Group Commit Interval"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:170
# 98cf445d4b8c4456a36908593a2d1f51
msgid "You can set the group commit interval using the :option:`--journalCommitInterval <mongod --journalCommitInterval>` command line option. The allowed range is ``2`` to ``300`` milliseconds."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:174
# aca0740eb76348d095f85aa02fed4499
msgid "Lower values increase the durability of the journal at the expense of disk performance."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:178
# 973fd7ba6b834da485c7c95c1bf1e18f
msgid "Recover Data After Unexpected Shutdown"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:180
# 071891d2d8f945358ef7258ecc56bf09
msgid "On a restart after a crash, MongoDB replays all journal files in the journal directory before the server becomes available. If MongoDB must replay journal files, :program:`mongod` notes these events in the log output."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:185
# 852c87ae6f2f4d36a742c3c1b08ed064
msgid "There is no reason to run :dbcommand:`repairDatabase` in these situations."
msgstr ""

