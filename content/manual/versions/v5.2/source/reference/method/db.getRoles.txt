=============
db.getRoles()
=============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. method:: db.getRoles()

   Returns information for all the roles in the database on which the command
   runs. The method can be run with or without an argument.

   If run without an argument, :method:`db.getRoles()` returns inheritance
   information for the database's :ref:`user-defined <user-defined-roles>`
   roles.

   To return more information, pass the :method:`db.getRoles()` a
   document with the following fields:


   .. list-table::
      :header-rows: 1
      :widths: 20 20 80
   
      * - Field
   
        - Type
   
        - Description
   
      * - ``rolesInfo``
   
        - integer
   
        - Set this field to ``1`` to retrieve all user-defined roles.
          
          
   
      * - ``showPrivileges``
   
        - boolean
   
        - Optional. Set the field to ``true`` to show role privileges, including both privileges
          inherited from other roles and privileges defined directly. By default, the
          command returns only the roles from which this role inherits privileges and
          does not return specific privileges.
          
          
   
      * - ``showBuiltinRoles``
   
        - boolean
   
        - Optional. Set to true to display :ref:`built-in roles <built-in-roles>` as well as user-defined roles.
          
          
   


   :method:`db.getRoles()` wraps the :dbcommand:`rolesInfo` command.

Required Access
---------------

.. include:: /includes/access-roles-info.rst

Example
-------

The following operations return documents for all the roles on the
``products`` database, including role privileges and built-in roles:

.. code-block:: javascript

   db.getRoles(
       {
         rolesInfo: 1,
         showPrivileges:true,
         showBuiltinRoles: true
       }
   )
