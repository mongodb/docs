=================
db.serverStatus()
=================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. method:: db.serverStatus()

   Returns a :term:`document` that provides an overview of the
   database process's state.

   This command provides a wrapper around the database command
   :dbcommand:`serverStatus`.

Behavior
--------

.. include:: /includes/extracts/serverStatus-method-projection.rst

For example, the following operation suppresses the ``repl``,
``metrics`` and ``locks`` information in the output.

.. code-block:: javascript

   db.serverStatus( { repl: 0,  metrics: 0, locks: 0 } )

The following example includes all :ref:`server-status-repl`
information in the output:

.. code-block:: javascript

   db.serverStatus( { repl: 1 } )

Initialization
~~~~~~~~~~~~~~

The statistics reported by :method:`db.serverStatus()` are reset when
the :binary:`~bin.mongod` server is restarted. The :method:`db.serverStatus()`
command does not report some statistics until they have been
initialized by server events.

For example, after restarting the :binary:`~bin.mongod` server, 
:method:`db.serverStatus()` won't return any values for ``findAndModify``.

.. code-block:: javascript

   db.serverStatus().metrics.commands.findAndModify
   // No results returned

After you run an update query, subsequent calls to 
:method:`db.serverStatus()` display the expected metrics. 

.. code-block:: javascript
   :copyable: false

   {
      "arrayFilters" : NumberLong(0),
      "failed" : NumberLong(0),
      "pipeline" : NumberLong(0),
      "total" : NumberLong(1)
   }

.. note::

   The ``db.serverStatus()`` method returns an error if a specific
   object is queried before the counters have begun to increment. 

   If there haven't been any document updates yet:

   .. code-block:: javascript

      db.serverStatus().metrics.commands.update.pipeline
   
   Returns: 

   .. code-block:: javascript
      :copyable: false
      
      TypeError: db.serverStatus(...).metrics.commands.update is undefined :
      @(shell):1:1

Include ``mirroredReads``
~~~~~~~~~~~~~~~~~~~~~~~~~

By default, the :serverstatus:`mirroredReads` information (available
starting in version 4.4) is not included in the output. To return
:serverstatus:`mirroredReads` information, you must explicitly specify
the inclusion:

.. code-block:: javascript

   db.serverStatus( { mirroredReads: 1 } )

Include ``latchAnalysis``
~~~~~~~~~~~~~~~~~~~~~~~~~

By default, the :serverstatus:`latchAnalysis` information (available
starting in version 4.4) is not included in the output. To return
:serverstatus:`latchAnalysis` information, you must explicitly specify
the inclusion:

.. code-block:: javascript

   db.serverStatus( { latchAnalysis: 1 } )

Output
------

See :ref:`serverStatus Output <server-status-output>` for complete
documentation of the output of this function.

