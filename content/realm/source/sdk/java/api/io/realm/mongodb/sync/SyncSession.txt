.. meta::
   :robots: noindex, nosnippet


.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol



Class SyncSession
^^^^^^^^^^^^^^^^^

.. _io_realm_mongodb_sync_SyncSession:



io.realm.mongodb.sync
=====================


 | `java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ 
 | 		io.realm.mongodb.sync.SyncSession


A session controls how data is synchronized between a single Realm on the device and the server Realm on the Realm Object Server.A Session is created by opening a Realm instance using a :ref:`SyncConfiguration <io_realm_mongodb_sync_SyncConfiguration>` . Once a session has been created, it will continue to exist until the app is closed or all threads using this :ref:`SyncConfiguration <io_realm_mongodb_sync_SyncConfiguration>`  closes their respective :ref:`Realm <io_realm_Realm>` s.



A session is controlled by Realm, but can provide additional information in case of errors. These errors are passed along in the :ref:`SyncSession.ErrorHandler <io_realm_mongodb_sync_SyncSession_ErrorHandler>` .



When creating a session, Realm will establish a connection to the server. This connection is controlled by Realm and might be shared between multiple sessions. It is possible to get insight into the connection using :ref:`addConnectionChangeListener(ConnectionListener) <io_realm_mongodb_sync_SyncSession_addConnectionChangeListener_ConnectionListener_>`  and :ref:`isConnected() <io_realm_mongodb_sync_SyncSession_isConnected__>` .



The session itself has a different lifecycle than the underlying connection. The state of the session can be found using :ref:`getState() <io_realm_mongodb_sync_SyncSession_getState__>` .



The :ref:`SyncSession <io_realm_mongodb_sync_SyncSession>`  object is thread safe.






Nested Class Summary
====================

.. list-table::
   :header-rows: 1
   
   * - Modifier and Type
     - Class and Description
   
   * - ``public static final`` 
     - :ref:`SyncSession.State <io_realm_mongodb_sync_SyncSession_State>` 
       
   
   * - ``public static interface`` 
     - :ref:`SyncSession.ErrorHandler <io_realm_mongodb_sync_SyncSession_ErrorHandler>` 
       
   
   * - ``public static interface`` 
     - :ref:`SyncSession.ClientResetHandler <io_realm_mongodb_sync_SyncSession_ClientResetHandler>` 
       
   
   


Method Summary
==============

.. list-table::
   :header-rows: 1
   
   * - Modifier and Type
     - Method and Description
   
   * - public synchronized **void**
     - | :ref:`addConnectionChangeListener <io_realm_mongodb_sync_SyncSession_addConnectionChangeListener>` (
       |  :ref:`ConnectionListener <io_realm_mongodb_sync_ConnectionListener>`  listener
       | )
       
       
       Adds a listener tracking changes to the connection backing this session.
       
       
       
   
   * - public synchronized **void**
     - | :ref:`addDownloadProgressListener <io_realm_mongodb_sync_SyncSession_addDownloadProgressListener>` (
       |  :ref:`ProgressMode <io_realm_mongodb_sync_ProgressMode>`  mode, 
       |  :ref:`ProgressListener <io_realm_mongodb_sync_ProgressListener>`  listener
       | )
       
       
       Adds a progress listener tracking changes that need to be downloaded from the Realm Object Server.
       
       
       
   
   * - public synchronized **void**
     - | :ref:`addUploadProgressListener <io_realm_mongodb_sync_SyncSession_addUploadProgressListener>` (
       |  :ref:`ProgressMode <io_realm_mongodb_sync_ProgressMode>`  mode, 
       |  :ref:`ProgressListener <io_realm_mongodb_sync_ProgressListener>`  listener
       | )
       
       
       Adds a progress listener tracking changes that need to be uploaded from the device to the Realm Object Server.
       
       
       
   
   * - public **boolean**
     - | :ref:`downloadAllServerChanges <io_realm_mongodb_sync_SyncSession_downloadAllServerChanges>` (
       |  **long** timeout, 
       |  `TimeUnit <https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/TimeUnit.html>`__  unit
       | )
       
       
       Calling this method will block until all known remote changes have been downloaded and applied to the Realm or the specified timeout is hit.
       
       
       
   
   * - public **void**
     - | :ref:`downloadAllServerChanges <io_realm_mongodb_sync_SyncSession_downloadAllServerChanges>` ()
       | 
       
       
       Calling this method will block until all known remote changes have been downloaded and applied to the Realm.
       
       
       
   
   * - public :ref:`SyncConfiguration <io_realm_mongodb_sync_SyncConfiguration>` 
     - | :ref:`getConfiguration <io_realm_mongodb_sync_SyncSession_getConfiguration>` ()
       | 
       
       
       Returns the :ref:`SyncConfiguration <io_realm_mongodb_sync_SyncConfiguration>`  that is responsible for controlling the session.
       
       
       
       
       
   
   * - public :ref:`ConnectionState <io_realm_mongodb_sync_ConnectionState>` 
     - | :ref:`getConnectionState <io_realm_mongodb_sync_SyncSession_getConnectionState>` ()
       | 
       
       
       Get the current state of the connection used by the session as defined in :ref:`ConnectionState <io_realm_mongodb_sync_ConnectionState>` .
       
       
       
       
       
   
   * - public `URI <https://docs.oracle.com/javase/7/docs/api/java/net/URI.html>`__ 
     - | :ref:`getServerUrl <io_realm_mongodb_sync_SyncSession_getServerUrl>` ()
       | 
       
       
       Returns the `URI <https://docs.oracle.com/javase/7/docs/api/java/net/URI.html>`__  describing the remote Realm which this session connects to and synchronizes changes with.
       
       
       
       
       
   
   * - public :ref:`SyncSession.State <io_realm_mongodb_sync_SyncSession_State>` 
     - | :ref:`getState <io_realm_mongodb_sync_SyncSession_getState>` ()
       | 
       
       
       Get the current session's state, as defined in :ref:`SyncSession.State <io_realm_mongodb_sync_SyncSession_State>` .
       
       
       
       
       
   
   * - public :ref:`User <io_realm_mongodb_User>` 
     - | :ref:`getUser <io_realm_mongodb_sync_SyncSession_getUser>` ()
       | 
       
       
       Returns the :ref:`User <io_realm_mongodb_User>`  defined by the :ref:`SyncConfiguration <io_realm_mongodb_sync_SyncConfiguration>`  that is used to connect to MongoDB Realm.
       
       
       
       
       
   
   * - public **boolean**
     - | :ref:`isConnected <io_realm_mongodb_sync_SyncSession_isConnected>` ()
       | 
       
       
       Checks if the session is connected to the server and can synchronize data.
       
       
       
   
   * - public synchronized **void**
     - | :ref:`removeConnectionChangeListener <io_realm_mongodb_sync_SyncSession_removeConnectionChangeListener>` (
       |  :ref:`ConnectionListener <io_realm_mongodb_sync_ConnectionListener>`  listener
       | )
       
       
       Removes a previously registered :ref:`ConnectionListener <io_realm_mongodb_sync_ConnectionListener>` .
       
       
       
       
       
   
   * - public synchronized **void**
     - | :ref:`removeProgressListener <io_realm_mongodb_sync_SyncSession_removeProgressListener>` (
       |  :ref:`ProgressListener <io_realm_mongodb_sync_ProgressListener>`  listener
       | )
       
       
       Removes a progress listener.
       
       
       
   
   * - public synchronized **void**
     - | :ref:`start <io_realm_mongodb_sync_SyncSession_start>` ()
       | 
       
       
       Attempts to start the session and enable synchronization with the Realm Object Server.
       
       
       
   
   * - public synchronized **void**
     - | :ref:`stop <io_realm_mongodb_sync_SyncSession_stop>` ()
       | 
       
       
       Stops any synchronization with the Realm Object Server until the Realm is re-opened again after fully closing it.
       
       
       
   
   * - public **boolean**
     - | :ref:`uploadAllLocalChanges <io_realm_mongodb_sync_SyncSession_uploadAllLocalChanges>` (
       |  **long** timeout, 
       |  `TimeUnit <https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/TimeUnit.html>`__  unit
       | )
       
       
       Calling this method will block until all known local changes have been uploaded to the server or the specified timeout is hit.
       
       
       
   
   * - public **void**
     - | :ref:`uploadAllLocalChanges <io_realm_mongodb_sync_SyncSession_uploadAllLocalChanges>` ()
       | 
       
       
       Calling this method will block until all known local changes have been uploaded to the server.
       
       
       
   
   


Inherited Methods
=================



- Methods inherited from class `java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ : ``getClass`` , ``hashCode`` , ``equals`` , ``clone`` , ``toString`` , ``notify`` , ``notifyAll`` , ``wait`` , ``wait`` , ``wait`` , ``finalize`` 




Method Detail
=============

.. _addConnectionChangeListener:

.. _addConnectionChangeListener__:

.. _SyncSession_addConnectionChangeListener:

.. _SyncSession_addConnectionChangeListener__:

.. _io_realm_mongodb_sync_SyncSession_addConnectionChangeListener:

.. _io_realm_mongodb_sync_SyncSession_addConnectionChangeListener__:



addConnectionChangeListener
---------------------------

.. _io_realm_mongodb_sync_SyncSession_addConnectionChangeListener_io_realm_mongodb_sync_ConnectionListener_:

.. _io_realm_mongodb_sync_SyncSession_addConnectionChangeListener_ConnectionListener_:

.. _addConnectionChangeListener_io_realm_mongodb_sync_ConnectionListener_:

.. _addConnectionChangeListener_ConnectionListener_:

.. _SyncSession_addConnectionChangeListener_io_realm_mongodb_sync_ConnectionListener_:

.. _SyncSession_addConnectionChangeListener_ConnectionListener_:

.. list-table::
   :header-rows: 1
   
   * - | public synchronized **void** :ref:`addConnectionChangeListener <io_realm_mongodb_sync_SyncSession_addConnectionChangeListener>` (
       |  :ref:`ConnectionListener <io_realm_mongodb_sync_ConnectionListener>`  listener
       | )
       
       
       
   
   * - Adds a listener tracking changes to the connection backing this session. See :ref:`ConnectionState <io_realm_mongodb_sync_ConnectionState>`  for further details.
       
       
       
       
       
       
       **Parameters**
       
       - ``listener`` - the listener to register.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the listener is ``null`` .
          
          
          
          
          
       
       
       
       
       
       
       .. seealso::
       
       
          
          - :ref:`ConnectionState <io_realm_mongodb_sync_ConnectionState>` 
             
             
             
          
          
          
       
       
   
   


.. _addDownloadProgressListener:

.. _addDownloadProgressListener__:

.. _SyncSession_addDownloadProgressListener:

.. _SyncSession_addDownloadProgressListener__:

.. _io_realm_mongodb_sync_SyncSession_addDownloadProgressListener:

.. _io_realm_mongodb_sync_SyncSession_addDownloadProgressListener__:



addDownloadProgressListener
---------------------------

.. _io_realm_mongodb_sync_SyncSession_addDownloadProgressListener_io_realm_mongodb_sync_ProgressMode_io_realm_mongodb_sync_ProgressListener_:

.. _io_realm_mongodb_sync_SyncSession_addDownloadProgressListener_io_realm_mongodb_sync_ProgressMode__io_realm_mongodb_sync_ProgressListener_:

.. _io_realm_mongodb_sync_SyncSession_addDownloadProgressListener_io_realm_mongodb_sync_ProgressMode_ProgressListener_:

.. _io_realm_mongodb_sync_SyncSession_addDownloadProgressListener_io_realm_mongodb_sync_ProgressMode__ProgressListener_:

.. _io_realm_mongodb_sync_SyncSession_addDownloadProgressListener_ProgressMode_io_realm_mongodb_sync_ProgressListener_:

.. _io_realm_mongodb_sync_SyncSession_addDownloadProgressListener_ProgressMode__io_realm_mongodb_sync_ProgressListener_:

.. _io_realm_mongodb_sync_SyncSession_addDownloadProgressListener_ProgressMode_ProgressListener_:

.. _io_realm_mongodb_sync_SyncSession_addDownloadProgressListener_ProgressMode__ProgressListener_:

.. _addDownloadProgressListener_io_realm_mongodb_sync_ProgressMode_io_realm_mongodb_sync_ProgressListener_:

.. _addDownloadProgressListener_io_realm_mongodb_sync_ProgressMode__io_realm_mongodb_sync_ProgressListener_:

.. _addDownloadProgressListener_io_realm_mongodb_sync_ProgressMode_ProgressListener_:

.. _addDownloadProgressListener_io_realm_mongodb_sync_ProgressMode__ProgressListener_:

.. _addDownloadProgressListener_ProgressMode_io_realm_mongodb_sync_ProgressListener_:

.. _addDownloadProgressListener_ProgressMode__io_realm_mongodb_sync_ProgressListener_:

.. _addDownloadProgressListener_ProgressMode_ProgressListener_:

.. _addDownloadProgressListener_ProgressMode__ProgressListener_:

.. _SyncSession_addDownloadProgressListener_io_realm_mongodb_sync_ProgressMode_io_realm_mongodb_sync_ProgressListener_:

.. _SyncSession_addDownloadProgressListener_io_realm_mongodb_sync_ProgressMode__io_realm_mongodb_sync_ProgressListener_:

.. _SyncSession_addDownloadProgressListener_io_realm_mongodb_sync_ProgressMode_ProgressListener_:

.. _SyncSession_addDownloadProgressListener_io_realm_mongodb_sync_ProgressMode__ProgressListener_:

.. _SyncSession_addDownloadProgressListener_ProgressMode_io_realm_mongodb_sync_ProgressListener_:

.. _SyncSession_addDownloadProgressListener_ProgressMode__io_realm_mongodb_sync_ProgressListener_:

.. _SyncSession_addDownloadProgressListener_ProgressMode_ProgressListener_:

.. _SyncSession_addDownloadProgressListener_ProgressMode__ProgressListener_:

.. list-table::
   :header-rows: 1
   
   * - | public synchronized **void** :ref:`addDownloadProgressListener <io_realm_mongodb_sync_SyncSession_addDownloadProgressListener>` (
       |  :ref:`ProgressMode <io_realm_mongodb_sync_ProgressMode>`  mode, 
       |  :ref:`ProgressListener <io_realm_mongodb_sync_ProgressListener>`  listener
       | )
       
       
       
   
   * - Adds a progress listener tracking changes that need to be downloaded from the Realm Object Server.The :ref:`ProgressListener <io_realm_mongodb_sync_ProgressListener>`  will be triggered immediately when registered, and periodically afterwards.
       
       
       
       
       
       
       
       
       **Parameters**
       
       - ``mode`` - type of mode used. See :ref:`ProgressMode <io_realm_mongodb_sync_ProgressMode>`  for more information.
          
          
          
          
          
       - ``listener`` - the listener to register.
          
          
          
       
       
       
       
       
       
       
       
       
   
   


.. _addUploadProgressListener:

.. _addUploadProgressListener__:

.. _SyncSession_addUploadProgressListener:

.. _SyncSession_addUploadProgressListener__:

.. _io_realm_mongodb_sync_SyncSession_addUploadProgressListener:

.. _io_realm_mongodb_sync_SyncSession_addUploadProgressListener__:



addUploadProgressListener
-------------------------

.. _io_realm_mongodb_sync_SyncSession_addUploadProgressListener_io_realm_mongodb_sync_ProgressMode_io_realm_mongodb_sync_ProgressListener_:

.. _io_realm_mongodb_sync_SyncSession_addUploadProgressListener_io_realm_mongodb_sync_ProgressMode__io_realm_mongodb_sync_ProgressListener_:

.. _io_realm_mongodb_sync_SyncSession_addUploadProgressListener_io_realm_mongodb_sync_ProgressMode_ProgressListener_:

.. _io_realm_mongodb_sync_SyncSession_addUploadProgressListener_io_realm_mongodb_sync_ProgressMode__ProgressListener_:

.. _io_realm_mongodb_sync_SyncSession_addUploadProgressListener_ProgressMode_io_realm_mongodb_sync_ProgressListener_:

.. _io_realm_mongodb_sync_SyncSession_addUploadProgressListener_ProgressMode__io_realm_mongodb_sync_ProgressListener_:

.. _io_realm_mongodb_sync_SyncSession_addUploadProgressListener_ProgressMode_ProgressListener_:

.. _io_realm_mongodb_sync_SyncSession_addUploadProgressListener_ProgressMode__ProgressListener_:

.. _addUploadProgressListener_io_realm_mongodb_sync_ProgressMode_io_realm_mongodb_sync_ProgressListener_:

.. _addUploadProgressListener_io_realm_mongodb_sync_ProgressMode__io_realm_mongodb_sync_ProgressListener_:

.. _addUploadProgressListener_io_realm_mongodb_sync_ProgressMode_ProgressListener_:

.. _addUploadProgressListener_io_realm_mongodb_sync_ProgressMode__ProgressListener_:

.. _addUploadProgressListener_ProgressMode_io_realm_mongodb_sync_ProgressListener_:

.. _addUploadProgressListener_ProgressMode__io_realm_mongodb_sync_ProgressListener_:

.. _addUploadProgressListener_ProgressMode_ProgressListener_:

.. _addUploadProgressListener_ProgressMode__ProgressListener_:

.. _SyncSession_addUploadProgressListener_io_realm_mongodb_sync_ProgressMode_io_realm_mongodb_sync_ProgressListener_:

.. _SyncSession_addUploadProgressListener_io_realm_mongodb_sync_ProgressMode__io_realm_mongodb_sync_ProgressListener_:

.. _SyncSession_addUploadProgressListener_io_realm_mongodb_sync_ProgressMode_ProgressListener_:

.. _SyncSession_addUploadProgressListener_io_realm_mongodb_sync_ProgressMode__ProgressListener_:

.. _SyncSession_addUploadProgressListener_ProgressMode_io_realm_mongodb_sync_ProgressListener_:

.. _SyncSession_addUploadProgressListener_ProgressMode__io_realm_mongodb_sync_ProgressListener_:

.. _SyncSession_addUploadProgressListener_ProgressMode_ProgressListener_:

.. _SyncSession_addUploadProgressListener_ProgressMode__ProgressListener_:

.. list-table::
   :header-rows: 1
   
   * - | public synchronized **void** :ref:`addUploadProgressListener <io_realm_mongodb_sync_SyncSession_addUploadProgressListener>` (
       |  :ref:`ProgressMode <io_realm_mongodb_sync_ProgressMode>`  mode, 
       |  :ref:`ProgressListener <io_realm_mongodb_sync_ProgressListener>`  listener
       | )
       
       
       
   
   * - Adds a progress listener tracking changes that need to be uploaded from the device to the Realm Object Server.The :ref:`ProgressListener <io_realm_mongodb_sync_ProgressListener>`  will be triggered immediately when registered, and periodically afterwards.
       
       
       
       
       
       
       
       
       **Parameters**
       
       - ``mode`` - type of mode used. See :ref:`ProgressMode <io_realm_mongodb_sync_ProgressMode>`  for more information.
          
          
          
          
          
       - ``listener`` - the listener to register.
          
          
          
       
       
       
       
       
       
       
       
       
   
   


.. _downloadAllServerChanges:

.. _downloadAllServerChanges__:

.. _SyncSession_downloadAllServerChanges:

.. _SyncSession_downloadAllServerChanges__:

.. _io_realm_mongodb_sync_SyncSession_downloadAllServerChanges:

.. _io_realm_mongodb_sync_SyncSession_downloadAllServerChanges__:



downloadAllServerChanges
------------------------

.. _io_realm_mongodb_sync_SyncSession_downloadAllServerChanges_long_java_util_concurrent_TimeUnit_:

.. _io_realm_mongodb_sync_SyncSession_downloadAllServerChanges_long__java_util_concurrent_TimeUnit_:

.. _io_realm_mongodb_sync_SyncSession_downloadAllServerChanges_long_TimeUnit_:

.. _io_realm_mongodb_sync_SyncSession_downloadAllServerChanges_long__TimeUnit_:

.. _downloadAllServerChanges_long_java_util_concurrent_TimeUnit_:

.. _downloadAllServerChanges_long__java_util_concurrent_TimeUnit_:

.. _downloadAllServerChanges_long_TimeUnit_:

.. _downloadAllServerChanges_long__TimeUnit_:

.. _SyncSession_downloadAllServerChanges_long_java_util_concurrent_TimeUnit_:

.. _SyncSession_downloadAllServerChanges_long__java_util_concurrent_TimeUnit_:

.. _SyncSession_downloadAllServerChanges_long_TimeUnit_:

.. _SyncSession_downloadAllServerChanges_long__TimeUnit_:

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`downloadAllServerChanges <io_realm_mongodb_sync_SyncSession_downloadAllServerChanges>` (
       |  **long** timeout, 
       |  `TimeUnit <https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/TimeUnit.html>`__  unit
       | )
       
       
       
   
   * - Calling this method will block until all known remote changes have been downloaded and applied to the Realm or the specified timeout is hit. This will involve network access, so calling this method should only be done from a non-UI thread.This method cannot be called before the Realm has been opened.
       
       
       
       
       
       
       
       
       **Returns**
       
       ``true``  if the data was downloaded before the timeout. ``false``  if the operation timed out or otherwise failed.
       
       
       
       
       
       
       **Throws**
       
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if called on the Android main thread.
          
          
          
       - `InterruptedException <https://docs.oracle.com/javase/7/docs/api/java/lang/InterruptedException.html>`__  - if the download took longer than the specified timeout or the thread was interrupted while downloading was in progress. The download will continue in the background even after this exception is thrown.
          
          
          
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if ``timeout``  is less than or equal to ``0``  or ``unit``  is ``null`` .
          
          
          
          
          
       
       
       
       
       
   
   
.. list-table::
   :header-rows: 1
   
   * - | public **void** :ref:`downloadAllServerChanges <io_realm_mongodb_sync_SyncSession_downloadAllServerChanges>` ()
       | 
       
       
       
   
   * - Calling this method will block until all known remote changes have been downloaded and applied to the Realm. This will involve network access, so calling this method should only be done from a non-UI thread.If the device is offline, this method might never return.
       
       This method cannot be called before the session has been started.
       
       
       
       
       
       
       
       
       
       
       **Throws**
       
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if called on the Android main thread.
          
          
          
       - `InterruptedException <https://docs.oracle.com/javase/7/docs/api/java/lang/InterruptedException.html>`__  - if the thread was interrupted while downloading was in progress.
          
          
          
       
       
       
       
       
   
   


.. _getConfiguration:

.. _getConfiguration__:

.. _SyncSession_getConfiguration:

.. _SyncSession_getConfiguration__:

.. _io_realm_mongodb_sync_SyncSession_getConfiguration:

.. _io_realm_mongodb_sync_SyncSession_getConfiguration__:



getConfiguration
----------------

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`SyncConfiguration <io_realm_mongodb_sync_SyncConfiguration>`  :ref:`getConfiguration <io_realm_mongodb_sync_SyncSession_getConfiguration>` ()
       | 
       
       
       
   
   * - Returns the :ref:`SyncConfiguration <io_realm_mongodb_sync_SyncConfiguration>`  that is responsible for controlling the session.
       
       
       
       
       
       
       
       
       **Returns**
       
       SyncConfiguration that defines and controls this session.
       
       
       
       
       
       
       
   
   


.. _getConnectionState:

.. _getConnectionState__:

.. _SyncSession_getConnectionState:

.. _SyncSession_getConnectionState__:

.. _io_realm_mongodb_sync_SyncSession_getConnectionState:

.. _io_realm_mongodb_sync_SyncSession_getConnectionState__:



getConnectionState
------------------

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`ConnectionState <io_realm_mongodb_sync_ConnectionState>`  :ref:`getConnectionState <io_realm_mongodb_sync_SyncSession_getConnectionState>` ()
       | 
       
       
       
   
   * - Get the current state of the connection used by the session as defined in :ref:`ConnectionState <io_realm_mongodb_sync_ConnectionState>` .
       
       
       
       
       
       
       
       
       **Returns**
       
       the state of connection used by the session.
       
       
       
       
       
       
       
       
       .. seealso::
       
       
          
          - :ref:`ConnectionState <io_realm_mongodb_sync_ConnectionState>` 
             
             
             
          
          
          
       
       
   
   


.. _getServerUrl:

.. _getServerUrl__:

.. _SyncSession_getServerUrl:

.. _SyncSession_getServerUrl__:

.. _io_realm_mongodb_sync_SyncSession_getServerUrl:

.. _io_realm_mongodb_sync_SyncSession_getServerUrl__:



getServerUrl
------------

.. list-table::
   :header-rows: 1
   
   * - | public `URI <https://docs.oracle.com/javase/7/docs/api/java/net/URI.html>`__  :ref:`getServerUrl <io_realm_mongodb_sync_SyncSession_getServerUrl>` ()
       | 
       
       
       
   
   * - Returns the `URI <https://docs.oracle.com/javase/7/docs/api/java/net/URI.html>`__  describing the remote Realm which this session connects to and synchronizes changes with.
       
       
       
       
       
       
       
       
       **Returns**
       
       `URI <https://docs.oracle.com/javase/7/docs/api/java/net/URI.html>`__  describing the remote Realm.
       
       
       
       
       
       
       
       
       
   
   


.. _getState:

.. _getState__:

.. _SyncSession_getState:

.. _SyncSession_getState__:

.. _io_realm_mongodb_sync_SyncSession_getState:

.. _io_realm_mongodb_sync_SyncSession_getState__:



getState
--------

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`SyncSession.State <io_realm_mongodb_sync_SyncSession_State>`  :ref:`getState <io_realm_mongodb_sync_SyncSession_getState>` ()
       | 
       
       
       
   
   * - Get the current session's state, as defined in :ref:`SyncSession.State <io_realm_mongodb_sync_SyncSession_State>` .
       
       Note that the state may change after this method returns.
       
       
       
       
       
       
       
       
       **Returns**
       
       the state of the session.
       
       
       
       
       
       
       
       
       .. seealso::
       
       
          
          - :ref:`SyncSession.State <io_realm_mongodb_sync_SyncSession_State>` 
             
             
             
          
          
          
       
       
   
   


.. _getUser:

.. _getUser__:

.. _SyncSession_getUser:

.. _SyncSession_getUser__:

.. _io_realm_mongodb_sync_SyncSession_getUser:

.. _io_realm_mongodb_sync_SyncSession_getUser__:



getUser
-------

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`User <io_realm_mongodb_User>`  :ref:`getUser <io_realm_mongodb_sync_SyncSession_getUser>` ()
       | 
       
       
       
   
   * - Returns the :ref:`User <io_realm_mongodb_User>`  defined by the :ref:`SyncConfiguration <io_realm_mongodb_sync_SyncConfiguration>`  that is used to connect to MongoDB Realm.
       
       
       
       
       
       
       
       
       **Returns**
       
       :ref:`User <io_realm_mongodb_User>`  used to authenticate the session on MongoDB Realm.
       
       
       
       
       
       
       
       
       
   
   


.. _isConnected:

.. _isConnected__:

.. _SyncSession_isConnected:

.. _SyncSession_isConnected__:

.. _io_realm_mongodb_sync_SyncSession_isConnected:

.. _io_realm_mongodb_sync_SyncSession_isConnected__:



isConnected
-----------

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`isConnected <io_realm_mongodb_sync_SyncSession_isConnected>` ()
       | 
       
       
       
   
   * - Checks if the session is connected to the server and can synchronize data. This is a best guess effort. To conserve battery the underlying implementation uses heartbeats to detect if the connection is still available. So if no data is actively being synced and some time has elapsed since the last heartbeat, the connection could have been dropped but this method will still return ``true`` .
       
       
       
       
       
       
       
       
       **Returns**
       
       ``true``  if the session is connected and ready to synchronize data, ``false``  if not or if it is in the process of connecting.
       
       
       
       
       
       
       
       
       
   
   


.. _removeConnectionChangeListener:

.. _removeConnectionChangeListener__:

.. _SyncSession_removeConnectionChangeListener:

.. _SyncSession_removeConnectionChangeListener__:

.. _io_realm_mongodb_sync_SyncSession_removeConnectionChangeListener:

.. _io_realm_mongodb_sync_SyncSession_removeConnectionChangeListener__:



removeConnectionChangeListener
------------------------------

.. _io_realm_mongodb_sync_SyncSession_removeConnectionChangeListener_io_realm_mongodb_sync_ConnectionListener_:

.. _io_realm_mongodb_sync_SyncSession_removeConnectionChangeListener_ConnectionListener_:

.. _removeConnectionChangeListener_io_realm_mongodb_sync_ConnectionListener_:

.. _removeConnectionChangeListener_ConnectionListener_:

.. _SyncSession_removeConnectionChangeListener_io_realm_mongodb_sync_ConnectionListener_:

.. _SyncSession_removeConnectionChangeListener_ConnectionListener_:

.. list-table::
   :header-rows: 1
   
   * - | public synchronized **void** :ref:`removeConnectionChangeListener <io_realm_mongodb_sync_SyncSession_removeConnectionChangeListener>` (
       |  :ref:`ConnectionListener <io_realm_mongodb_sync_ConnectionListener>`  listener
       | )
       
       
       
   
   * - Removes a previously registered :ref:`ConnectionListener <io_realm_mongodb_sync_ConnectionListener>` .
       
       
       
       
       
       
       **Parameters**
       
       - ``listener`` - listener to remove
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the listener is ``null`` .
          
          
          
          
          
       
       
       
       
       
   
   


.. _removeProgressListener:

.. _removeProgressListener__:

.. _SyncSession_removeProgressListener:

.. _SyncSession_removeProgressListener__:

.. _io_realm_mongodb_sync_SyncSession_removeProgressListener:

.. _io_realm_mongodb_sync_SyncSession_removeProgressListener__:



removeProgressListener
----------------------

.. _io_realm_mongodb_sync_SyncSession_removeProgressListener_io_realm_mongodb_sync_ProgressListener_:

.. _io_realm_mongodb_sync_SyncSession_removeProgressListener_ProgressListener_:

.. _removeProgressListener_io_realm_mongodb_sync_ProgressListener_:

.. _removeProgressListener_ProgressListener_:

.. _SyncSession_removeProgressListener_io_realm_mongodb_sync_ProgressListener_:

.. _SyncSession_removeProgressListener_ProgressListener_:

.. list-table::
   :header-rows: 1
   
   * - | public synchronized **void** :ref:`removeProgressListener <io_realm_mongodb_sync_SyncSession_removeProgressListener>` (
       |  :ref:`ProgressListener <io_realm_mongodb_sync_ProgressListener>`  listener
       | )
       
       
       
   
   * - Removes a progress listener. If the listener wasn't registered, this method will do nothing.
       
       
       
       
       **Parameters**
       
       - ``listener`` - listener to remove.
          
          
          
       
       
       
       
       
       
       
       
       
   
   


.. _start:

.. _start__:

.. _SyncSession_start:

.. _SyncSession_start__:

.. _io_realm_mongodb_sync_SyncSession_start:

.. _io_realm_mongodb_sync_SyncSession_start__:



start
-----

.. list-table::
   :header-rows: 1
   
   * - | public synchronized **void** :ref:`start <io_realm_mongodb_sync_SyncSession_start>` ()
       | 
       
       
       
   
   * - Attempts to start the session and enable synchronization with the Realm Object Server.This happens automatically when opening the Realm instance, so doing it manually should only be needed if the session was stopped using :ref:`stop() <io_realm_mongodb_sync_SyncSession_stop__>` .
       
       
       
       If the session was already started, calling this method will do nothing.
       
       A session is considered started if :ref:`getState() <io_realm_mongodb_sync_SyncSession_getState__>`  returns :ref:`State.ACTIVE <io_realm_mongodb_sync_SyncSession_State_ACTIVE>` . If the session is :ref:`State.DYING <io_realm_mongodb_sync_SyncSession_State_DYING>` , the session will be moved back to :ref:`State.ACTIVE <io_realm_mongodb_sync_SyncSession_State_ACTIVE>` .
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       .. seealso::
       
       
          
          - :ref:`getState() <io_realm_mongodb_sync_SyncSession_getState__>` 
             
             
             
          - :ref:`stop() <io_realm_mongodb_sync_SyncSession_stop__>` 
             
             
             
          
          
          
       
       
   
   


.. _stop:

.. _stop__:

.. _SyncSession_stop:

.. _SyncSession_stop__:

.. _io_realm_mongodb_sync_SyncSession_stop:

.. _io_realm_mongodb_sync_SyncSession_stop__:



stop
----

.. list-table::
   :header-rows: 1
   
   * - | public synchronized **void** :ref:`stop <io_realm_mongodb_sync_SyncSession_stop>` ()
       | 
       
       
       
   
   * - Stops any synchronization with the Realm Object Server until the Realm is re-opened again after fully closing it.Synchronization can be re-enabled by calling :ref:`start() <io_realm_mongodb_sync_SyncSession_start__>`  again.
       
       
       
       If the session is already stopped, calling this method will do nothing.
       
       
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _uploadAllLocalChanges:

.. _uploadAllLocalChanges__:

.. _SyncSession_uploadAllLocalChanges:

.. _SyncSession_uploadAllLocalChanges__:

.. _io_realm_mongodb_sync_SyncSession_uploadAllLocalChanges:

.. _io_realm_mongodb_sync_SyncSession_uploadAllLocalChanges__:



uploadAllLocalChanges
---------------------

.. _io_realm_mongodb_sync_SyncSession_uploadAllLocalChanges_long_java_util_concurrent_TimeUnit_:

.. _io_realm_mongodb_sync_SyncSession_uploadAllLocalChanges_long__java_util_concurrent_TimeUnit_:

.. _io_realm_mongodb_sync_SyncSession_uploadAllLocalChanges_long_TimeUnit_:

.. _io_realm_mongodb_sync_SyncSession_uploadAllLocalChanges_long__TimeUnit_:

.. _uploadAllLocalChanges_long_java_util_concurrent_TimeUnit_:

.. _uploadAllLocalChanges_long__java_util_concurrent_TimeUnit_:

.. _uploadAllLocalChanges_long_TimeUnit_:

.. _uploadAllLocalChanges_long__TimeUnit_:

.. _SyncSession_uploadAllLocalChanges_long_java_util_concurrent_TimeUnit_:

.. _SyncSession_uploadAllLocalChanges_long__java_util_concurrent_TimeUnit_:

.. _SyncSession_uploadAllLocalChanges_long_TimeUnit_:

.. _SyncSession_uploadAllLocalChanges_long__TimeUnit_:

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`uploadAllLocalChanges <io_realm_mongodb_sync_SyncSession_uploadAllLocalChanges>` (
       |  **long** timeout, 
       |  `TimeUnit <https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/TimeUnit.html>`__  unit
       | )
       
       
       
   
   * - Calling this method will block until all known local changes have been uploaded to the server or the specified timeout is hit. This will involve network access, so calling this method should only be done from a non-UI thread.This method cannot be called before the Realm has been opened.
       
       
       
       
       
       
       
       
       **Returns**
       
       ``true``  if the data was uploaded before the timeout. ``false``  if the operation timed out or otherwise failed.
       
       
       
       
       
       
       **Throws**
       
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if called on the Android main thread.
          
          
          
       - `InterruptedException <https://docs.oracle.com/javase/7/docs/api/java/lang/InterruptedException.html>`__  - if the upload took longer than the specified timeout or the thread was interrupted while uploading was in progress. The upload will continue in the background even after this exception is thrown.
          
          
          
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if ``timeout``  is less than or equal to ``0``  or ``unit``  is ``null`` .
          
          
          
          
          
       
       
       
       
       
   
   
.. list-table::
   :header-rows: 1
   
   * - | public **void** :ref:`uploadAllLocalChanges <io_realm_mongodb_sync_SyncSession_uploadAllLocalChanges>` ()
       | 
       
       
       
   
   * - Calling this method will block until all known local changes have been uploaded to the server. This will involve network access, so calling this method should only be done from a non-UI thread.If the device is offline, this method might never return.
       
       This method cannot be called before the Realm has been opened.
       
       
       
       
       
       
       
       
       
       
       **Throws**
       
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if called on the Android main thread.
          
          
          
       - `InterruptedException <https://docs.oracle.com/javase/7/docs/api/java/lang/InterruptedException.html>`__  - if the thread was interrupted while downloading was in progress.
          
          
          
       
       
       
       
       
   
   



