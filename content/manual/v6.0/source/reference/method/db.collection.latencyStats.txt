.. meta::
   :robots: noindex, nosnippet 

=============================================
db.collection.latencyStats() (mongosh method)
=============================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. method:: db.collection.latencyStats(options)


   .. |dbcommand| replace:: ``latencyStats`` field returned by the
      :dbcommand:`collStats` command
   .. include:: /includes/fact-mongosh-shell-method-alt


   :method:`db.collection.latencyStats()` returns latency
   statistics for a given collection. It is a wrapper around
   :pipeline:`$collStats`.

   This method has the form:

   .. code-block:: javascript

      db.collection.latencyStats( { histograms: <boolean> } )

   The ``histograms`` argument is an optional boolean. If
   ``histograms: true`` then :method:`~db.collection.latencyStats()` adds
   latency histograms to the return document.

.. seealso::

   :pipeline:`$collStats`

Compatibility 
-------------

This method is available in deployments hosted in the following environments:

.. include:: /includes/fact-environments-atlas-only.rst

.. include:: /includes/fact-environments-atlas-support-all.rst

.. include:: /includes/fact-environments-onprem-only.rst

Output
------

:method:`~db.collection.latencyStats()` returns a document containing
a field ``latencyStats``, containing the following fields:

.. include:: /includes/fact-latencystats-reference.rst

Examples
--------

You can run :method:`~db.collection.latencyStats()` in
:binary:`~bin.mongosh` as follows:

.. code-block:: javascript

   db.data.latencyStats( { histograms: true } ).pretty()

:method:`~db.collection.latencyStats()` returns a document such as
the following:

.. code-block:: javascript

   {
     "ns" : "test.data",
     "localTime" : ISODate("2016-11-01T21:56:28.962Z"),
     "latencyStats" : {
       "reads" : {
         "histogram" : [
           {
             "micros" : Long(16),
             "count" : Long(6)
           },
           {
             "micros" : Long(512),
             "count" : Long(1)
           }
         ],
         "latency" : Long(747),
         "ops" : Long(7)
       },
       "writes" : {
         "histogram" : [
           {
             "micros" : Long(64),
             "count" : Long(1)
           },
           {
             "micros" : Long(24576),
             "count" : Long(1)
           }
         ],
         "latency" : Long(26845),
         "ops" : Long(2)
       },
       "commands" : {
         "histogram" : [ ],
         "latency" : Long(0),
         "ops" : Long(0)
       }
     }
   }