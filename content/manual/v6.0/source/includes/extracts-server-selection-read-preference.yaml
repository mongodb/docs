ref: server-selection-read-preference-replica-sets
content: |
   .. list-table::
      :header-rows: 1
      :widths: 20 80

      * - Read Preference Mode
        - Selection Process

      * - :readmode:`primary` (Default)

        - #. The driver selects the primary.

      * - :readmode:`secondary`

        - #. The driver assembles a list of eligible secondary members.
             :ref:`maxStalenessSeconds
             <replica-set-read-preference-max-staleness>` and :doc:`tag
             sets </tutorial/configure-replica-set-tag-sets>` specified
             in the read preference can further restrict the
             eligibility of the members.

          #. If the list of eligible members is not empty, the driver
             determines which eligible member is the "closest" (i.e. the
             member with the lowest average network round-trip-time) and
             calculates a latency window by adding the average
             round-trip-time of this "closest" server and the
             ``localThresholdMS``. The  driver uses this latency window to
             pare down the list of eligible members to those members that
             fall within this window.

          #. From this list of eligible members that fall within the
             latency window, the  driver randomly chooses an eligible member.

      * - :readmode:`nearest`

        - #. The driver assembles a list of eligible members (primary and
             secondaries). :ref:`maxStalenessSeconds
             <replica-set-read-preference-max-staleness>` and :doc:`tag sets
             </tutorial/configure-replica-set-tag-sets>`  specified
             in the read preference can further limit the eligibility
             of the members.

          #. If the list of eligible members is not empty, the driver
             determines which eligible member is the "closest" (i.e. the
             member with the lowest average network round-trip-time) and
             calculates a latency window by adding the average
             round-trip-time of this "closest" server and the
             ``localThresholdMS`` [#default-threshold]_. The driver uses
             this latency window to pare down the list of eligible members
             to those members that fall within this window.

          #. From this list of eligible members that fall within the
             latency window, the driver randomly chooses an eligible member.

      * - :readmode:`primaryPreferred`

        - #. If the primary is available, driver selects the primary.

          #. If the primary is unavailable, server selection follows
             the process for the read preference ``secondary`` to select
             an eligible secondary member.

      * - :readmode:`secondaryPreferred`

        - #. Following the server selection process for the read
             preference ``secondary``, if a list of eligible secondary
             members is non-empty, driver chooses an eligible secondary member.

          #. Otherwise, if the list is empty, driver selects the primary.
   
---
ref: server-selection-read-preference-sharded-clusters
content: |
   .. list-table::
      :header-rows: 1
      :widths: 20 80

      * - Read Preference Mode
        - Selection Process

      * - :readmode:`primary` (Default)

        - #. The :binary:`~bin.mongos` selects the primary.

      * - :readmode:`secondary`

        - #. The :binary:`~bin.mongos` assembles a list of eligible secondary members.
             :ref:`maxStalenessSeconds
             <replica-set-read-preference-max-staleness>` and :doc:`tag
             sets </tutorial/configure-replica-set-tag-sets>` specified
             in the read preference can further restrict the
             eligibility of the members.

          #. If the list of eligible members is not empty, the
             :binary:`~bin.mongos` determines which eligible member is
             the "closest" (i.e. the member with the lowest average
             network round-trip-time) and calculates a latency window
             by adding the average round-trip-time of this "closest"
             server and the :setting:`replication.localPingThresholdMs`
             (or :option:`--localThreshold <mongos --localThreshold>`
             command line option). The :binary:`~bin.mongos` uses this
             latency window to pare down the list of eligible members
             to those members that fall within this window.

          #. From this list of eligible members that fall within the
             latency window, the :binary:`~bin.mongos` randomly chooses
             an eligible member. If using :ref:`hedged reads
             <mongos-hedged-reads>`, :binary:`~bin.mongos` selects a
             second eligible member if available.

      * - :readmode:`nearest`

        - #. The :binary:`~bin.mongos` assembles a list of eligible members (primary and
             secondaries). :ref:`maxStalenessSeconds
             <replica-set-read-preference-max-staleness>` and :doc:`tag sets
             </tutorial/configure-replica-set-tag-sets>` specified
             in the read preference can further limit the eligibility
             of the members.

          #. If the list of eligible members is not empty, the 
             :binary:`~bin.mongos` determines which eligible member is
             the "closest" (i.e. the member with the lowest average
             network round-trip-time) and calculates a latency window
             by adding the average round-trip-time of this "closest"
             server and the :setting:`replication.localPingThresholdMs`
             (or :option:`--localThreshold <mongos --localThreshold>`
             command line option) [#default-threshold]_. The
             :binary:`~bin.mongos` uses this latency window to pare
             down the list of eligible members to those members that
             fall within this window.

          #. From this list of eligible members that fall within the
             latency window, the :binary:`~bin.mongos` randomly chooses
             an eligible member. If using :ref:`hedged reads
             <mongos-hedged-reads>`, :binary:`~bin.mongos` selects a
             second eligible member if available.

      * - :readmode:`primaryPreferred`

        - #. If the primary is available, :binary:`~bin.mongos` selects the primary.

          #. If the primary is unavailable or if :binary:`mongos` is
             using :ref:`hedged reads <mongos-hedged-reads>`, server
             selection follows the process for the read preference
             ``secondary``. For hedged reads, 

             - If the primary is available, :binary:`~bin.mongos`
               selects a single eligible secondary, if available.

             - If the primary is unavailable, :binary:`~bin.mongos`
               selects two eligible secondaries, if available.

      * - :readmode:`secondaryPreferred`

        - #. Following the server selection process for the read
             preference ``secondary``, if a list of eligible secondary
             members is non-empty, :binary:`~bin.mongos` chooses an eligible secondary. If using
             :ref:`hedged reads <mongos-hedged-reads>`,
             :binary:`~bin.mongos` selects another secondary if
             available.

          #. If the list of eligible secondary
             members is empty or if :binary:`mongos` is using hedged
             reads and only one eligible
             secondary is available, :binary:`~bin.mongos` selects the
             primary.

...
