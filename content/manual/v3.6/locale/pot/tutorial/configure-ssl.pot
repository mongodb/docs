# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/configure-ssl.txt:3
msgid "Configure ``mongod`` and ``mongos`` for TLS/SSL"
msgstr ""

#: ../source/tutorial/configure-ssl.txt:14
msgid "Overview"
msgstr ""

#: ../source/tutorial/configure-ssl.txt:16
msgid "This document helps you to configure MongoDB to support TLS/SSL. MongoDB clients can use TLS/SSL to encrypt connections to :binary:`~bin.mongod` and :binary:`~bin.mongos` instances. MongoDB TLS/SSL implementation uses OpenSSL libraries."
msgstr ""

#: ../source/includes/note-tls-ssl-terminology.rst:3
msgid "TLS is the successor to SSL."
msgstr ""

#: ../source/tutorial/configure-ssl.txt:23
msgid "These instructions assume that you have already installed a build of MongoDB that includes TLS/SSL support and that your client driver supports encrypted connections. For instructions on upgrading a cluster currently not using TLS/SSL to using TLS/SSL, see :doc:`/tutorial/upgrade-cluster-to-ssl`."
msgstr ""

#: ../source/tutorial/configure-ssl.txt:29
msgid "MongoDB's TLS/SSL encryption only allows use of strong TLS/SSL ciphers with a minimum of 128-bit key length for all connections."
msgstr ""

#: ../source/tutorial/configure-ssl.txt:33
msgid "Prerequisites"
msgstr ""

#: ../source/includes/extracts/security-prereq-configure-ssl.rst:1
msgid "A full description of TLS/SSL, PKI (Public Key Infrastructure) certificates, and Certificate Authority is beyond the scope of this document. This page assumes prior knowledge of TLS/SSL as well as access to valid certificates."
msgstr ""

#: ../source/tutorial/configure-ssl.txt:40
msgid "The *Linux 64-bit legacy x64* builds of MongoDB do **not** include support for TLS/SSL."
msgstr ""

#: ../source/tutorial/configure-ssl.txt:44
msgid "Client Support"
msgstr ""

#: ../source/tutorial/configure-ssl.txt:46
msgid "See :doc:`/tutorial/configure-ssl-clients` to learn about TLS/SSL support for Python, Java, Ruby, and other clients."
msgstr ""

#: ../source/tutorial/configure-ssl.txt:50
msgid "Certificate Authorities"
msgstr ""

#: ../source/includes/fact-ssl-certificate-authorities.rst:1
msgid "For production use, your MongoDB deployment should use valid certificates generated and signed by a single certificate authority. You or your organization can generate and maintain an independent certificate authority, or use certificates generated by a third-party TLS/SSL vendor. Obtaining and managing certificates is beyond the scope of this documentation."
msgstr ""

#: ../source/tutorial/configure-ssl.txt:55
msgid "``.pem`` File"
msgstr ""

#: ../source/tutorial/configure-ssl.txt:57
msgid "Before you can use TLS/SSL, you must have a :file:`.pem` file containing a public key certificate and its associated private key. [#FIPS]_"
msgstr ""

#: ../source/tutorial/configure-ssl.txt:60
msgid "MongoDB can use any valid TLS/SSL certificate issued by a certificate authority, or a self-signed certificate. If you use a self-signed certificate, although the communications channel will be encrypted, there will be *no* validation of server identity. Although such a situation will prevent eavesdropping on the connection, it leaves you vulnerable to a man-in-the-middle attack. Using a certificate signed by a trusted certificate authority will permit MongoDB drivers to verify the server's identity."
msgstr ""

#: ../source/tutorial/configure-ssl.txt:69
msgid "In general, avoid using self-signed certificates unless the network is trusted."
msgstr ""

#: ../source/tutorial/configure-ssl.txt:72
msgid "Additionally, with regards to :ref:`authentication among replica set/sharded cluster members <inter-process-auth>`, in order to minimize exposure of the private key and allow hostname validation, it is advisable to use different certificates on different servers."
msgstr ""

#: ../source/tutorial/configure-ssl.txt:77
msgid "For *testing* purposes, you can generate a self-signed certificate and private key on a Unix system with a command that resembles the following:"
msgstr ""

#: ../source/tutorial/configure-ssl.txt:86
msgid "This operation generates a new, self-signed certificate with no passphrase that is valid for 365 days. Once you have the certificate, concatenate the certificate and private key to a :file:`.pem` file, as in the following example:"
msgstr ""

#: ../source/tutorial/configure-ssl.txt:95
msgid ":doc:`/tutorial/configure-x509-client-authentication`"
msgstr ""

#: ../source/tutorial/configure-ssl.txt:99
msgid "For FIPS mode, ensure that the certificate is FIPS-compliant (i.e use of FIPS-compliant algorithms) and the private key meets the PKCS#8 standard. If you need to convert a private key to PKCS#8 format, various conversion tools exist, such as ``openssl pkcs8`` and others."
msgstr ""

#: ../source/tutorial/configure-ssl.txt:106
msgid "Procedures"
msgstr ""

#: ../source/includes/extracts/default-bind-ip-security.rst:2
msgid "Starting in MongoDB 3.6, :binary:`~bin.mongod` and :binary:`~bin.mongos` bind to localhost by default. If the members of your deployment are run on different hosts or if you wish remote clients to connect to your deployment, you must specify ``--bind_ip`` or :setting:`net.bindIp`. For more information, see :ref:`3.6-bind_ip-compatibility`."
msgstr ""

#: ../source/tutorial/configure-ssl.txt:115
msgid "Set Up ``mongod`` and ``mongos`` with TLS/SSL Certificate and Key"
msgstr ""

#: ../source/tutorial/configure-ssl.txt:117
msgid "To use TLS/SSL in your MongoDB deployment, include the following run-time options with :binary:`~bin.mongod` and :binary:`~bin.mongos`:"
msgstr ""

#: ../source/tutorial/configure-ssl.txt:120
#: ../source/tutorial/configure-ssl.txt:183
msgid ":setting:`net.ssl.mode` set to ``requireSSL``. This setting restricts each server to use only TLS/SSL encrypted connections. You can also specify either the value ``allowSSL`` or ``preferSSL`` to set up the use of mixed TLS/SSL modes on a port. See :setting:`net.ssl.mode` for details."
msgstr ""

#: ../source/tutorial/configure-ssl.txt:125
msgid ":setting:`~net.ssl.PEMKeyfile` with the :file:`.pem` file that contains the TLS/SSL certificate and key."
msgstr ""

#: ../source/tutorial/configure-ssl.txt:128
#: ../source/tutorial/configure-ssl.txt:194
msgid "Consider the following syntax for :binary:`~bin.mongod`:"
msgstr ""

#: ../source/tutorial/configure-ssl.txt:135
msgid "For example, given an TLS/SSL certificate located at :file:`/etc/ssl/mongodb.pem`, configure :binary:`~bin.mongod` to use TLS/SSL encryption for all connections with the following command:"
msgstr ""

#: ../source/tutorial/configure-ssl.txt:145
msgid "Specify ``<pem>`` with the full path name to the certificate."
msgstr ""

#: ../source/tutorial/configure-ssl.txt:150
msgid "If the private key portion of the ``<pem>`` is encrypted, specify the passphrase. See :ref:`ssl-certificate-password`."
msgstr ""

#: ../source/tutorial/configure-ssl.txt:153
#: ../source/tutorial/configure-ssl.txt:217
msgid "You may also specify these options in the :doc:`configuration file </reference/configuration-options>`, as in the following examples:"
msgstr ""

#: ../source/tutorial/configure-ssl.txt:156
#: ../source/tutorial/configure-ssl.txt:220
msgid "If using the :doc:`YAML configuration file format </reference/configuration-options>`, include the following configuration in the file:"
msgstr ""

#: ../source/tutorial/configure-ssl.txt:167
msgid "To connect to :binary:`~bin.mongod` and :binary:`~bin.mongos` instances using TLS/SSL, the :binary:`~bin.mongo` shell and MongoDB tools must include the ``--ssl`` option. See :ref:`ssl-clients` for more information on connecting to :binary:`~bin.mongod` and :binary:`~bin.mongos` running with TLS/SSL."
msgstr ""

#: ../source/tutorial/configure-ssl.txt:172
#: ../source/tutorial/configure-ssl.txt:239
msgid ":doc:`/tutorial/upgrade-cluster-to-ssl`"
msgstr ""

#: ../source/tutorial/configure-ssl.txt:177
msgid "Set Up ``mongod`` and ``mongos`` with Certificate Validation"
msgstr ""

#: ../source/tutorial/configure-ssl.txt:179
msgid "To set up :binary:`~bin.mongod` or :binary:`~bin.mongos` for TLS/SSL encryption using an TLS/SSL certificate signed by a certificate authority, include the following run-time options during startup:"
msgstr ""

#: ../source/tutorial/configure-ssl.txt:188
msgid ":setting:`~net.ssl.PEMKeyfile` with the name of the :file:`.pem` file that contains the signed TLS/SSL certificate and key."
msgstr ""

#: ../source/tutorial/configure-ssl.txt:191
msgid ":setting:`~net.ssl.CAFile` with the name of the :file:`.pem` file that contains the root certificate chain from the Certificate Authority."
msgstr ""

#: ../source/tutorial/configure-ssl.txt:200
msgid "For example, given a signed TLS/SSL certificate located at :file:`/etc/ssl/mongodb.pem` and the certificate authority file at :file:`/etc/ssl/ca.pem`, you can configure :binary:`~bin.mongod` for TLS/SSL encryption as follows:"
msgstr ""

#: ../source/tutorial/configure-ssl.txt:211
msgid "Specify the ``<pem>`` file and the ``<ca>`` file with either the full path name or the relative path name."
msgstr ""

#: ../source/tutorial/configure-ssl.txt:214
msgid "If the ``<pem>`` is encrypted, specify the passphrase. See :ref:`ssl-certificate-password`."
msgstr ""

#: ../source/tutorial/configure-ssl.txt:232
msgid "To connect to :binary:`~bin.mongod` and :binary:`~bin.mongos` instances using TLS/SSL, the :binary:`~bin.mongo` tools must include the both the :option:`--ssl <mongo --ssl>` and :option:`--sslPEMKeyFile <mongo --sslPEMKeyFile>` option. See :ref:`ssl-clients` for more information on connecting to :binary:`~bin.mongod` and :binary:`~bin.mongos` running with TLS/SSL."
msgstr ""

#: ../source/tutorial/configure-ssl.txt:242
msgid "Block Revoked Certificates for Clients"
msgstr ""

#: ../source/tutorial/configure-ssl.txt:244
msgid "To prevent clients with revoked certificates from connecting, include the :setting:`sslCRLFile` to specify a :file:`.pem` file that contains revoked certificates."
msgstr ""

#: ../source/tutorial/configure-ssl.txt:249
msgid "For example, the following :binary:`~bin.mongod` with TLS/SSL configuration includes the :setting:`sslCRLFile` setting:"
msgstr ""

#: ../source/tutorial/configure-ssl.txt:256
msgid "Clients with revoked certificates in the :file:`/etc/ssl/ca-crl.pem` will not be able to connect to this :binary:`~bin.mongod` instance."
msgstr ""

#: ../source/tutorial/configure-ssl.txt:262
msgid "Validate Only if a Client Presents a Certificate"
msgstr ""

#: ../source/tutorial/configure-ssl.txt:264
msgid "In most cases it is important to ensure that clients present valid certificates. However, if you have clients that cannot present a client certificate, or are transitioning to using a certificate authority you may only want to validate certificates from clients that present a certificate."
msgstr ""

#: ../source/tutorial/configure-ssl.txt:270
msgid "If you want to bypass validation for clients that don't present certificates, include the :setting:`~net.ssl.allowConnectionsWithoutCertificates` run-time option with :binary:`~bin.mongod` and :binary:`~bin.mongos`. If the client does not present a certificate, no validation occurs. These connections, though not validated, are still encrypted using TLS/SSL."
msgstr ""

#: ../source/tutorial/configure-ssl.txt:276
msgid "For example, consider the following :binary:`~bin.mongod` with an TLS/SSL configuration that includes the :setting:`~net.ssl.allowConnectionsWithoutCertificates` setting:"
msgstr ""

#: ../source/tutorial/configure-ssl.txt:284
msgid "Then, clients can connect either with the option :option:`--ssl <mongo --ssl>` and **no** certificate or with the option :option:`--ssl <mongo --ssl>` and a **valid** certificate. See :ref:`ssl-clients` for more information on TLS/SSL connections for clients."
msgstr ""

#: ../source/tutorial/configure-ssl.txt:291
msgid "If the client presents a certificate, the certificate must be a valid certificate."
msgstr ""

#: ../source/tutorial/configure-ssl.txt:294
msgid "All connections, including those that have not presented certificates are encrypted using TLS/SSL."
msgstr ""

#: ../source/tutorial/configure-ssl.txt:300
msgid "Disallow Protocols"
msgstr ""

#: ../source/tutorial/configure-ssl.txt:304
msgid "To prevent MongoDB servers from accepting incoming connections that use specific protocols, include the ``--sslDisabledProtocols`` option, or if using the :doc:`configuration file </reference/configuration-options>` the :setting:`net.ssl.disabledProtocols` setting."
msgstr ""

#: ../source/tutorial/configure-ssl.txt:310
msgid "For example, the following configuration uses ``--sslDisabledProtocols`` option to prevent :binary:`~bin.mongod` from accepting incoming connections that use either ``TLS1_0`` or ``TLS1_1``:"
msgstr ""

#: ../source/tutorial/configure-ssl.txt:318
msgid "If using the :doc:`YAML configuration file format </reference/configuration-options>`:"
msgstr ""

#: ../source/tutorial/configure-ssl.txt:330
msgid "For more information, including the protocols recognized by the option, see :setting:`net.ssl.disabledProtocols` or the ``--sslDisabledProtocols`` option for :binary:`~bin.mongod` and :binary:`~bin.mongos`."
msgstr ""

#: ../source/tutorial/configure-ssl.txt:338
msgid "TLS/SSL Certificate Passphrase"
msgstr ""

#: ../source/tutorial/configure-ssl.txt:340
msgid "The PEM files for :setting:`~net.ssl.PEMKeyfile` and :setting:`~net.ssl.ClusterFile` may be encrypted. With encrypted PEM files, you must specify the passphrase at startup with a command-line or a configuration file option or enter the passphrase when prompted."
msgstr ""

#: ../source/tutorial/configure-ssl.txt:345
msgid "To specify the passphrase in clear text on the command line or in a configuration file, use the :setting:`~net.ssl.PEMKeyPassword` and/or the :setting:`~net.ssl.clusterPassword` option."
msgstr ""

#: ../source/tutorial/configure-ssl.txt:349
msgid "To have MongoDB prompt for the passphrase at the start of :binary:`~bin.mongod` or :binary:`~bin.mongos` and avoid specifying the passphrase in clear text, omit the :setting:`~net.ssl.PEMKeyPassword` and/or the :setting:`~net.ssl.clusterPassword` option. MongoDB will prompt for each passphrase as necessary."
msgstr ""

#: ../source/tutorial/configure-ssl.txt:355
msgid "The passphrase prompt option is available if you run the MongoDB instance in the foreground with a connected terminal. If you run :binary:`~bin.mongod` or :binary:`~bin.mongos` in a non-interactive session (e.g. without a terminal or as a service on Windows), you cannot use the passphrase prompt option."
msgstr ""

#: ../source/tutorial/configure-ssl.txt:364
msgid "Run in FIPS Mode"
msgstr ""

#: ../source/includes/note-fips-is-enterprise-only.rst:1
msgid "FIPS-compatible TLS/SSL is available only in `MongoDB Enterprise <http://www.mongodb.com/products/mongodb-enterprise?jmp=docs>`_. See :doc:`/tutorial/configure-fips` for more information."
msgstr ""

#: ../source/tutorial/configure-ssl.txt:368
msgid "See :doc:`/tutorial/configure-fips` for more details."
msgstr ""

