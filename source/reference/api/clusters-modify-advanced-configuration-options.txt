=====================================================
Modify Advanced Configuration Options for One Cluster
=====================================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol


.. include:: /includes/fact-atlas-free-tier-limits.rst

.. include:: /includes/fact-projects-groups-synonyms.rst

.. include:: /includes/api-requirements.rst

Resource
--------

.. include:: /includes/api/base-api-uri.rst

.. code-block:: http

   PATCH /groups/{GROUP-ID}/clusters/{CLUSTER-NAME}/processArgs

Request Path Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1
   :stub-columns: 1
   :widths: 20 14 11 55

   * - Path Parameter
     - Type
     - Necessity
     - Description

   * - GROUP-ID
     - string
     - Required
     - Unique identifier for the :ref:`project <group-id>`
       containing the cluster you want to retrieve.

   * - CLUSTER-NAME
     - string
     - Required
     - Name of the cluster to retrieve.

Request Query Parameters
~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/api/no-query-single-parameters.rst

Request Body Parameters
~~~~~~~~~~~~~~~~~~~~~~~

Specify one or all of the following options.

.. list-table::
   :header-rows: 1
   :stub-columns: 1
   :widths: 20 14 11 55

   * - Body Parameter
     - Type
     - Necessity
     - Description

   * - failIndexKeyTooLong
     - boolean
     - Optional
     - When ``true``, documents can only be updated or inserted if, for
       all indexed fields on the target collection, the corresponding
       index entries do not exceed 1024 bytes. When ``false``,
       |mongod| writes documents that exceed the limit
       but does *not* index them.

       Changing this option corresponds to modifying the
       :parameter:`failIndexKeyTooLong <param.failIndexKeyTooLong>`
       parameter via the :dbcommand:`setParameter` command for each
       |mongod| in the cluster.

       .. include:: /includes/admonitions/removed-fail-index-key-too-long.rst

   * - javascriptEnabled
     - boolean
     - Optional
     - .. include:: /includes/fact-javascriptEnabled-description.rst

       .. include:: /includes/admonitions/changed-javascript-enabled-mongos.rst

   * - minimumEnabledTlsProtocol
     - string
     - Optional
     - Sets the minimum Transport Layer Security (TLS) version the
       cluster accepts for incoming connections.

       Valid values are:

       - ``TLS1_0``
       - ``TLS1_1``
       - ``TLS1_2``

       The default value is ``TLS1_2`` for all clusters.

       .. note::

          For users considering this option as a method for enabling
          the deprecated Transport Layer Security (TLS) 1.0 protocol
          version, please read :ref:`faq-tls-1.0-deprecation` before
          proceeding. Enabling TLS 1.0 for any |service| cluster
          carries security risks. Consider enabling TLS 1.0 only for as
          long as required to update your application stack to support
          TLS 1.2.

       Changing this option corresponds to configuring the
       :setting:`net.ssl.disabledProtocols` configuration file option
       for each |mongod| in the cluster.

       To deploy the specified changes, |service| performs a rolling
       deployment upgrade to maintain high availability. For sharded
       clusters, this involves a rolling restart of all shards and the
       config server replica set. To learn more about how |service|
       supports high availability during maintenance operations, see
       :ref:`high-availability`.

   * - noTableScan
     - boolean
     - Optional
     - When ``true``, the cluster disables the execution of any query
       that requires a collection scan to return results. When
       ``false``, the cluster allows the execution of those operations.

       Changing this option corresponds to modifying the
       :parameter:`notablescan <param.notablescan>` parameter via the
       :dbcommand:`setParameter` command for each |mongod| in
       the cluster.

   * - oplogSizeMB
     - integer
     - Optional
     - Custom :term:`oplog` size of the cluster. A value of ``null``
       indicates that the cluster uses the default oplog size
       calculated by |service|.

       You can check the oplog size by connecting to your cluster
       via the :binary:`~bin.mongo` shell and authenticating as a user
       with the :atlasrole:`Atlas admin` role. Run the
       :method:`rs.printReplicationInfo() <rs.printReplicationInfo>`
       method to view the current oplog size and time.

       Changing this option corresponds to modifying the
       :setting:`replication.oplogSizeMB <replication.oplogSizeMB>`
       configuration file option for each |mongod| in the cluster.

       |service| can deploy the specified changes without performing a
       rolling restart.

   * - sampleSizeBIConnector
     - integer
     - Optional
     - Number of documents per database to sample when gathering schema
       information. Defaults to ``100``. Available only for |service|
       deployments in which |bic| :ref:`is enabled <create-cluster-enable-bi>`.

       .. seealso::

          - :bic:`MongoDB Connector for BI </>`
          - :bic:`sampleSize (mongosqld option)
            </reference/mongosqld/#cmdoption-mongosqld-sampleSize>`

   * - sampleRefreshIntervalBIConnector
     - integer
     - Optional
     - Interval in seconds at which the :bic:`mongosqld process
       </reference/mongosqld/>` re-samples data to create its
       relational schema. The default value is 300. The specified value
       must be a positive integer. Available only for |service|
       deployments in which |bic| :ref:`is enabled
       <create-cluster-enable-bi>`.

       .. seealso::

          - :bic:`MongoDB Connector for BI </>`
          - :bic:`sampleRefreshIntervalSecs (mongosqld option) </reference/mongosqld/#cmdoption-mongosqld-samplerefreshintervalsecs>`

Response
--------

.. include:: /includes/api/list-tables/clusters/advanced-configuration-options-response.rst

Example Request
---------------

.. code-block:: shell

   curl --user "{PUBLIC-KEY}:{PRIVATE-KEY}" --include --digest \
        --header "Content-Type: application/json" \
        --request PATCH "https://cloud.mongodb.com/api/atlas/v1.0/groups/{PROJECT-ID}/clusters/LogData/processArgs" \
        --data '
          {
            "failIndexKeyTooLong" : false,
            "javascriptEnabled" : false,
            "minimumEnabledTlsProtocol": "TLS1_2",
            "noTableScan" : true,
            "oplogSizeMB" : 2000,
            "sampleSizeBIConnector" : 5000,
            "sampleRefreshIntervalBIConnector" : 300
          }
        '


Example Response
----------------

Response Header
~~~~~~~~~~~~~~~

.. include:: /includes/api/api-headers/401.rst

.. include:: /includes/api/api-headers/200.rst

Response Body
~~~~~~~~~~~~~

.. code-block:: json
   :copyable: false


   {
     "failIndexKeyTooLong": false,
     "javascriptEnabled": false,
     "minimumEnabledTlsProtocol": "TLS1_2",
     "noTableScan": true,
     "oplogSizeMB": 2000,
     "sampleSizeBIConnector" : 5000,
     "sampleRefreshIntervalBIConnector" : 300
   }
