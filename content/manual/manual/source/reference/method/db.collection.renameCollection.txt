================================
db.collection.renameCollection()
================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. include:: includes/wayfinding/mongosh-method-renameCollection.rst

Definition
----------

.. method:: db.collection.renameCollection(target, dropTarget)


   .. |dbcommand| replace:: :dbcommand:`renameCollection` command


   Renames a collection. Provides a wrapper for the
   :dbcommand:`renameCollection` :term:`database command`.


   .. list-table::
      :header-rows: 1
      :widths: 20 20 80
   
      * - Parameter
   
        - Type
   
        - Description
   
      * - ``target``
   
        - string
   
        - The new name of the collection. Enclose the string in quotes.
          See :ref:`restrictions-on-db-names`.

      * - ``dropTarget``
   
        - boolean
   
        - Optional. If ``true``, :binary:`~bin.mongod` drops the
          ``target`` of :dbcommand:`renameCollection` prior to renaming
          the collection. The default value is ``false``.


Compatibility
-------------

.. |command| replace:: method

This method is available in deployments hosted in the following environments: 

.. include:: /includes/fact-environments-atlas-only.rst

.. include:: /includes/fact-environments-atlas-support-all.rst

.. include:: /includes/fact-environments-onprem-only.rst
          

Behavior
--------

The ``db.collection.renameCollection()`` method operates within a
collection by changing the metadata associated with a given collection.

Refer to the documentation :dbcommand:`renameCollection` for additional
warnings and messages.

.. include:: /includes/warning-renamecollection-cursors-changestreams.rst

- The method has the following limitations:

  - ``db.collection.renameCollection()`` cannot move a collection
    between databases. Use :dbcommand:`renameCollection` for these
    rename operations.

  - .. include:: /includes/extracts/views-unsupported-rename.rst

  - ``db.collection.renameCollection()`` is not supported on
    :term:`time series collections <time series collection>`.

  - You cannot rename a collection to itself. If you try to rename a
    collection to itself an ``IllegalOperation`` error is thrown.

Resource Locking in Sharded Clusters
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. versionchanged:: 5.0

.. include:: /includes/rename-collection-in-shard.rst

For more information on locking in MongoDB, see :doc:`/faq/concurrency`.

Resource Locking in Replica Sets
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

:method:`~db.collection.renameCollection()` obtains an exclusive lock on
the source and target collections for the duration of the operation. All
subsequent operations on the collections must wait until
:method:`~db.collection.renameCollection()` completes. 

Interaction with ``mongodump``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

A :binary:`~bin.mongodump` started with 
:option:`--oplog <mongodump.--oplog>` fails if a client issues
``db.collection.renameCollection()`` during the dump process. See
:option:`mongodump.--oplog` for more information.

Example
-------

Call the ``db.collection.renameCollection()`` method on a
collection object. For example:

.. code-block:: javascript

   db.rrecord.renameCollection("record")

This operation will rename the ``rrecord`` collection to ``record``. If
the target name (i.e. ``record``) is the name of an existing collection,
then the operation will fail.

