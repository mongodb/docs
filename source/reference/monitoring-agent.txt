==============================
Monitoring Agent Configuration
==============================

.. default-domain:: mongodb

.. _monitoring-agent-connection-settings:

Connection Settings
~~~~~~~~~~~~~~~~~~~

For the Monitoring Agent communication with the MMS Servers, the following
connection settings are **required**:

.. msetting:: mmsApiKey

   *Type*: string

   The MMS agent API key for a MMS group. The API Key can be found in the MMS
   interface on the :guilabel:`Settings` in the :guilabel:`Agent API
   Settings` section. For example:

   .. code-block:: ini

      mmsApiKey=abc123

.. msetting:: mmsBaseUrl

   *Type*: string

   The URL of the MMS Web Server.

.. only:: hosted

   Set this to the URL of your MMS HTTP Service.
   For example:

   .. code-block:: ini

      mmsBaseUrl=http://example.com:8080

HTTP Proxy Settings
~~~~~~~~~~~~~~~~~~~

.. msetting:: httpProxy

   .. versionadded:: 2.3.1

   *Type*: string

   To connect to the MMS HTTP Service via a proxy, specify the URL of
   the proxy. For example:

   .. code-block:: ini

      httpProxy=http://example-proxy.com:8080

.. _monitoring-agent-ssl-settings:

MongoDB SSL Settings
~~~~~~~~~~~~~~~~~~~~

Specify these settings when the Monitoring Agent is connecting to MongoDB
instances with SSL.

.. msetting:: useSslForAllConnections

   *Type*: boolean

   Set to ``true``to enables SSL support globally and to use SSL for all
   MongoDB connections. Setting this to ``true`` overrides any per-host
   SSL settings configured in the |mms| interface.

   If this setting is set to ``true``, |mms| requires that you also
   specify a value for the ``sslTrustedServerCertificates`` setting.

.. msetting:: sslTrustedServerCertificates

   *Type*: string

   The path on disk that contains the trusted certificate authority certificates
   in PEM format. These certificates will verify the server certificate
   returned from any MongoDBs running with SSL. For example:

   .. code-block:: ini

      sslTrustedServerCertificates=/etc/mongodb-mms/mongodb-certs.pem

.. msetting:: sslRequireValidServerCertificates

   *Type*: boolean

   Use this option to disable certificate verification by setting this
   value to ``false``. That configuration is only recommended for
   testing purposes as it makes connections susceptible to MITM attacks.

.. _mongodb-kerberos-settings:

MongoDB Kerberos Settings
~~~~~~~~~~~~~~~~~~~~~~~~~

See :doc:`/tutorial/connect-to-hosts-with-kerberos-authentication`

.. msetting:: krb5Principal

   *Type*: string

   The Kerberos principal used by the agent. For example:

   .. code-block:: ini

      krb5Principal=mmsagent/myhost@EXAMPLE.COM

.. msetting:: krb5Keytab

   *Type*: string

   The *absolute* path to Kerberos principal's keytab file. For
   example:

   .. code-block:: ini

      krb5Keytab=/etc/mongodb-mms/mms-monitoring-agent.keytab

.. _server-monitoring-ssl:

MMS Server SSL Settings
~~~~~~~~~~~~~~~~~~~~~~~

.. only:: hosted

   Advanced SSL settings used by the Monitoring Agent when communicating to the
   MMS HTTP Service.

.. only:: saas

   Advanced SSL settings used by the Monitoring Agent when communicating to the
   MMS HTTP Service.

.. msetting:: sslTrustedMMSServerCertificate

   By default the Monitoring Agent will use the trusted root CAs installed on the
   system. If the agent cannot find the trusted root CAs, configure
   these settings manually.

   .. only:: hosted

      If the MMS HTTP Service is using a self-signed SSL certificate
      this setting is required.

   The path on disk that contains the trusted certificate authority certificates
   in PEM format. The agent will use this certificate to verify that
   the agent is communicating with the designated MMS HTTP
   Service. For example:

   .. code-block:: ini

      sslTrustedMMSServerCertificate=/etc/mongodb-mms/mms-certs.pem

.. only:: hosted

   .. msetting:: sslRequireValidMMSServerCertificates

      *Type*: boolean

      You can disable certificate verification by setting this value
      to  ``false``. That configuration is only recommended for
      testing purposes as it makes connections susceptible to
      *man-in-the-middle* attacks.

Munin Settings
~~~~~~~~~~~~~~

See :doc:`/tutorial/configure-monitoring-munin-node` for information on
configuring Munin-node.

.. msetting:: enableMunin

   *Type*: boolean

   Set to ``false`` if you do not with the Monitoring Agent to
   collect hardware statistics via Munin-node. The default is
   ``true``. If Munin-node is detected, hardware statistics will
   be collected.


Deprecated Settings
~~~~~~~~~~~~~~~~~~~

MongoDB Authentication Settings
+++++++++++++++++++++++++++++++

If all monitored MongoDB instances utilize the same MONGODB-CR username
and password, these settings may be used.  Setting the username and
password here will override any configuration in the MMS UI.

See :doc:`/reference/authentication` for information on the privileges
needed for his user.

.. msetting:: globalAuthUsername

   *Type*: string

   The MongoDB username that the Monitoring Agent will use to connect. For example:

   .. code-block:: ini

      globalAuthUsername=mms-monitoring-agent

.. msetting:: globalAuthPassword

   *Type*: string

   The password for the ``globalAuthUsername`` user. For
   example:

   .. code-block:: ini

      globalAuthPassword=somePassword
