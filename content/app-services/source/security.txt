.. meta::
   :robots: nosnippet

.. _application-security:
.. _security:

===============
Secure Your App
===============

.. default-domain:: mongodb

.. contents:: On this page
   :class: singlecol
   :backlinks: none
   :depth: 2
   :local:

.. toctree::
   :titlesonly:
   :hidden:

   Configure Network Security </security/network>
   Manage Developer Access </security/developer-access>
   Use a VPC Private Endpoint </security/private-endpoints>

.. TO ADD LATER:
   Authorize Incoming Requests </security/authorization>

Overview
--------

Atlas App Services provides a variety of security features to protect your data
and prevent unauthorized access to your application. This includes things 
like:

- Built-in user management
- Data access permissions
- Network security features
- The ability to store and substitute values and secrets

.. _security-app-users:

Application Users
-----------------

You can secure App Services Apps with :ref:`built-in user management
<users-and-authentication>`. With the built-in user management of App Services,
only authorized users can access your App. You can
:ref:`delete <delete-user>` or :ref:`disable <disable-user>` users, and 
:ref:`revoke user sessions <revoke-user-sessions>`. Users can log in with:

- Existing provider credentials, such as :ref:`Facebook 
  <facebook-authentication>`, :ref:`Google <google-authentication>`, or 
  :ref:`Apple ID <apple-id-authentication>`
- New credentials with :ref:`email/password <email-password-authentication>`, 
  :ref:`custom JWT <custom-jwt-authentication>`, or :ref:`custom function 
  authentication <custom-function-authentication>`
- :ref:`Anonymous authentication <anonymous-authentication>`, if you don't 
  need to store user data

You can enable one or more :ref:`authentication providers 
<authentication-providers>` in the App Services backend, and then
implement them in your client code. You can also link user accounts with 
client SDKs.

.. _security-data-access:

Data Access Permissions
-----------------------

Use App Services :ref:`data access rules <rules>` to grant read and write 
access to data. Apps that use Atlas Device Sync define data access permissions 
during the process of enabling Device Sync. Apps that do not use Device Sync can 
link an MongoDB Atlas data source, and define permissions to perform CRUD 
operations on that data source.

MongoDB data access rules prevent operations where users do not have 
appropriate permissions. Users who do not meet your data access rules
cannot view or modify data.

.. _security-sync-permissions:

App Services Applications with Sync
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Atlas Device Sync allows you to define data access rules that determine which
users can read or write which data. To learn how to configure these rules, refer
to :ref:`sync-permissions`.

.. _security-atlas-permissions:

MongoDB Atlas Data Sources
~~~~~~~~~~~~~~~~~~~~~~~~~~

When you access `MongoDB Atlas
<https://www.mongodb.com/docs/atlas?tck=docs_realm>`_
through App Services, you can define roles that enable users to read and
modify data. App Services uses a strict rules system that prevents
all operations unless they are explicitly enabled.

When you :ref:`define a role <define-roles-and-permissions>`, you create a 
set of CRUD permissions that App Services evaluates individually for each 
document associated with a query. You can set roles to have document-level 
or field-level access, and you can give roles read or read and write access. 
App Services blocks requests from roles that do not have permission to 
search or read data.

.. note::

   When you access MongoDB Atlas through an App with Atlas Device Sync enabled, the
   permissions you define for Device Sync apply, instead of the 
   :ref:`role-based permissions <define-roles-and-permissions>` you define 
   when you link an MongoDB Atlas data source.

.. _security-values:

Values and Secrets
------------------

App Services enables you to define :ref:`values and secrets <values-and-secrets>`
that you can access or link to from your application. This enables you to 
remove deployment-specific configuration data and sensitive information from 
your app's business logic. Instead, you refer to it by name and 
App Services substitutes the value when executing your request.

Summary
-------

- Built-in user management handles authentication and ensures only logged-in
  users can access your App. 
- Data access permissions enable you to specify read and write permissions for 
  Atlas Device Sync, linked MongoDB Atlas data sources, and developers building your apps.
- Network security features enable you to guard against unauthorized access 
  from unknown IP addresses or URLs.
- Store values and secrets and refer to them by name to remove sensitive 
  information from your business logic.
