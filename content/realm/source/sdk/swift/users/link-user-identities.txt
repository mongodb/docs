.. meta::
   :robots: noindex, nosnippet

.. _ios-link-user-identities:

================================
Link User Identities - Swift SDK
================================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

Atlas App Services provides :ref:`many authentication providers <authentication-providers>` 
to log users into your app. Each provider creates a unique user identity. 
App Services and the Realm Swift SDK lets you merge multiple credentials 
into one user identity.

Example
-------

Consider an application that offers :ref:`anonymous login 
<anonymous-authentication>`. This allows users to explore the app without 
registering. If users like the application, they create permanent 
accounts. They sign up with SSO or email/password authentication. By default, 
this creates a new ``User`` object. The app must link the new 
identity with the original User.

You can link identities using ``linkUser(credentials:Credentials)``. This 
links authentication providers to a logged-in ``User`` object.

.. tabs-realm-languages::

   .. tab::
      :tabid: swift

      .. literalinclude:: /examples/generated/code/start/MultipleUsers.snippet.link-identity.swift
         :language: swift

   .. tab::
      :tabid: objective-c

      .. literalinclude:: /examples/generated/code/start/MultipleUsers.snippet.link-identity-objc.m
         :language: objectivec

.. _ios-async-await-link-user-identities:

Async/Await Example
-------------------

.. versionadded:: 10.16.0

The Realm Swift SDK provides an :swift-sdk:`async/await version of 
User.linkUser<Extensions/User.html#/s:So7RLMUserC10RealmSwiftE8linkUser11credentials7Combine6FutureCyABs5Error_pGAC11CredentialsO_tF>`.

.. literalinclude:: /examples/generated/code/start/MultipleUsers.snippet.async-link-identity.swift
   :language: swift

.. include:: /includes/swift-async-await-support.rst
