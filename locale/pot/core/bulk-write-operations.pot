# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/bulk-write-operations.txt:5
# abad9ba898d84e938b2aef96d9706aa3
msgid "Bulk Write Operations"
msgstr ""

#: ../source/core/bulk-write-operations.txt:10
# 90f2adf4ed9646609102657c5aa4d7eb
msgid "Overview"
msgstr ""

#: ../source/core/bulk-write-operations.txt:12
# f5f407763cbd4405beebbb15b1eda6ce
msgid "MongoDB provides clients the ability to perform write operations in bulk. Bulk write operations affect a *single* collection. MongoDB allows applications to determine the acceptable level of acknowledgement required for bulk write operations."
msgstr ""

#: ../source/core/bulk-write-operations.txt:17
# 8c9473c7a698450fba3934c23904fe2d
msgid "New :method:`Bulk` methods provide the ability to perform bulk insert, update, and remove operations. MongoDB also supports bulk insert through passing an array of documents to the :method:`db.collection.insert()` method."
msgstr ""

#: ../source/core/bulk-write-operations.txt:24
# 6ed211715f274878af1802fdce99dedc
msgid "Previous versions of MongoDB provided the ability for bulk inserts only. With previous versions, clients could perform bulk inserts by passing an array of documents to the :v2.4:`db.collection.insert() </core/bulk-inserts>` method. To see the documentation for earlier versions, see :v2.4:`Bulk Inserts </core/bulk-inserts>`."
msgstr ""

#: ../source/core/bulk-write-operations.txt:31
# 9c367e3c7f0d44c4bd84dfc648b35b99
msgid "Ordered vs Unordered Operations"
msgstr ""

#: ../source/core/bulk-write-operations.txt:33
# 280cab3af44a47ea9941b1253aad04d5
msgid "Bulk write operations can be either *ordered* or *unordered*. With an ordered list of operations, MongoDB executes the operations serially. If an error occurs during the processing of one of the write operations, MongoDB will return without processing any remaining write operations in the list."
msgstr ""

#: ../source/core/bulk-write-operations.txt:39
# ea11283d6d0b4c2189d95e59df8ff261
msgid "With an unordered list of operations, MongoDB can execute the operations in parallel. If an error occurs during the processing of one of the write operations, MongoDB will continue to process remaining write operations in the list."
msgstr ""

#: ../source/core/bulk-write-operations.txt:44
# c201856c542340baa168af06e8433181
msgid "Executing an ordered list of operations on a sharded collection will generally be slower than executing an unordered list since with an ordered list, each operation must wait for the previous operation to finish."
msgstr ""

#: ../source/core/bulk-write-operations.txt:50
# 6bb37f5b1efc4b0cabdea39532b22c50
msgid "``Bulk`` Methods"
msgstr ""

#: ../source/core/bulk-write-operations.txt:52
# ae7665ede28d4140bb8acf527fbb217b
msgid "To use the :method:`Bulk()` methods:"
msgstr ""

#: ../source/core/bulk-write-operations.txt:54
# 7f1e173a525b49c88970a25e0b9cc430
msgid "Initialize a list of operations using either :method:`db.collection.initializeUnorderedBulkOp()` or :method:`db.collection.initializeOrderedBulkOp()`."
msgstr ""

#: ../source/core/bulk-write-operations.txt:58
# 380efe1a1e174d268ffbb202a06f64ae
msgid "Add write operations to the list using the following methods:"
msgstr ""

#: ../source/core/bulk-write-operations.txt:60
# 545d88461f1f46748eb72fc341cfd6d3
msgid ":method:`Bulk.insert()`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:61
# 4b96418fa6524a0b997bd88815803c6b
msgid ":method:`Bulk.find()`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:62
# 3c7680e30a62438db3257a9444c1311b
msgid ":method:`Bulk.find.upsert()`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:63
# 3fd729d8ac7f4f598d8f3d982dd5c4dd
msgid ":method:`Bulk.find.update()`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:64
# 3f03244a14b94e65914022450b18b1a4
msgid ":method:`Bulk.find.updateOne()`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:65
# a63fd4e6baf84d1b9ecd7828df9b1ced
msgid ":method:`Bulk.find.replaceOne()`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:66
# 099e4b6ba7f946eba979d1abb9f286aa
msgid ":method:`Bulk.find.remove()`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:67
# 849a5daa867d4aebb2877b6a6fd2412e
msgid ":method:`Bulk.find.removeOne()`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:69
# 2eb74711eac94107b90a3cf99f0c5d66
msgid "To execute the list of operations, use the :method:`Bulk.execute()` method. You can specify the write concern for the list in the :method:`Bulk.execute()` method."
msgstr ""

#: ../source/core/bulk-write-operations.txt:73
# 6af3d0b52aa149d7a41c156375fb6ca0
msgid "Once executed, you cannot re-execute the list without reinitializing."
msgstr ""

#: ../source/core/bulk-write-operations.txt:76
# dd6da4d219eb446a87f3641864c6048f
msgid "For example,"
msgstr ""

#: ../source/core/bulk-write-operations.txt:86
# f2b97683ca754b0b81ffdb7db9a5abd1
msgid "For more examples, refer to the reference page for each :doc:`/reference/method/js-bulk` method. For information and examples on performing bulk insert using the :method:`db.collection.insert()`, see :method:`db.collection.insert()`."
msgstr ""

#: ../source/core/bulk-write-operations.txt:91
# dc9f950d0d844e8891c7bc15318e9aa9
msgid ":ref:`rel-notes-write-operations`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:94
# 398a5d9ad68f471d94747dec4fe1e5fa
msgid "``Bulk`` Execution Mechanics"
msgstr ""

#: ../source/core/bulk-write-operations.txt:96
# 0e9acc6bb1ff4b44819bc07148bef04d
msgid "When executing an :method:`ordered <db.collection.initializeOrderedBulkOp()>` list of operations, MongoDB groups adjacent operations by the :data:`operation type <batchType>`. When executing an :method:`unordered <db.collection.initializeUnorderedBulkOp()>` list of operations, MongoDB groups and may also reorder the operations to increase performance. As such, when performing *unordered* bulk operations, applications should not depend on the ordering."
msgstr ""

#: ../source/includes/fact-bulk-operation-batches.rst:1
# 235f52bd998e471fa6ce44bc3859c1d6
msgid "Each group of operations can have at most :limit:`1000 operations <Write Command Operation Limit Size>`. If a group exceeds this :limit:`limit <Write Command Operation Limit Size>`, MongoDB will divide the group into smaller groups of 1000 or less. For example, if the bulk operations list consists of 2000 insert operations, MongoDB creates 2 groups, each with 1000 operations."
msgstr ""

#: ../source/includes/fact-bulk-operation-batches.rst:7
# 58d391aa98904166b62a44132855b6b2
msgid "The sizes and grouping mechanics are internal performance details and are subject to change in future versions."
msgstr ""

#: ../source/includes/fact-bulk-operation-batches.rst:10
# 16f8798483c1486d85c0bb4c267b589b
msgid "To see how the operations are grouped for a bulk operation execution, call :method:`Bulk.getOperations()` *after* the execution."
msgstr ""

#: ../source/core/bulk-write-operations.txt:107
# 44e48e1097004384b919035c73412d6a
msgid "For more information, see :method:`Bulk.execute()`."
msgstr ""

#: ../source/core/bulk-write-operations.txt:110
# 24e35c195a98400f8c1998b6bd4977ac
msgid "Strategies for Bulk Inserts to a Sharded Collection"
msgstr ""

#: ../source/core/bulk-write-operations.txt:112
# 4c2caee3eb90460fb90f0584735a13a7
msgid "Large bulk insert operations, including initial data inserts or routine data import, can affect :term:`sharded cluster` performance. For bulk inserts, consider the following strategies:"
msgstr ""

#: ../source/core/bulk-write-operations.txt:117
# 7ac0134086bb40c8a0f924b6228286cf
msgid "Pre-Split the Collection"
msgstr ""

#: ../source/core/bulk-write-operations.txt:119
# 8b4c0407547642c9bc2fcb163189a0da
msgid "If the sharded collection is empty, then the collection has only one initial :term:`chunk`, which resides on a single shard. MongoDB must then take time to receive data, create splits, and distribute the split chunks to the available shards. To avoid this performance cost, you can pre-split the collection, as described in :doc:`/tutorial/split-chunks-in-sharded-cluster`."
msgstr ""

#: ../source/core/bulk-write-operations.txt:127
# b79a6ccb0e834949bf13e48fd2cf9268
msgid "Insert to Multiple ``mongos``"
msgstr ""

#: ../source/core/bulk-write-operations.txt:129
# b2d6813ba67f444e93648e99c78c7307
msgid "To parallelize import processes, send bulk insert or insert operations to more than one :program:`mongos` instance. For *empty* collections, first pre-split the collection as described in :doc:`/tutorial/split-chunks-in-sharded-cluster`."
msgstr ""

#: ../source/core/bulk-write-operations.txt:135
# c5cb3be5804b4ce3b1c82ac61b5ed31a
msgid "Avoid Monotonic Throttling"
msgstr ""

#: ../source/core/bulk-write-operations.txt:137
# 08d225442ab849aaa2237ec9115ebd56
msgid "If your shard key increases monotonically during an insert, then all inserted data goes to the last chunk in the collection, which will always end up on a single shard. Therefore, the insert capacity of the cluster will never exceed the insert capacity of that single shard."
msgstr ""

#: ../source/core/bulk-write-operations.txt:142
# af4168ec9d0143568c4dcd7d0f037d87
msgid "If your insert volume is larger than what a single shard can process, and if you cannot avoid a monotonically increasing shard key, then consider the following modifications to your application:"
msgstr ""

#: ../source/core/bulk-write-operations.txt:146
# 22b9515f4c184119a1d4a48f705de8cb
msgid "Reverse the binary bits of the shard key. This preserves the information and avoids correlating insertion order with increasing sequence of values."
msgstr ""

#: ../source/core/bulk-write-operations.txt:150
# e85c0a38d18946ee8dd2aa4576cb85ad
msgid "Swap the first and last 16-bit words to \"shuffle\" the inserts."
msgstr ""

#: ../source/core/bulk-write-operations.txt:0
# 48494279c85441d3989b34a9c4949550
msgid "Example"
msgstr ""

#: ../source/core/bulk-write-operations.txt:172
# e0cde12732f24e689760da52e9e0cfd4
msgid ":ref:`sharding-shard-key` for information on choosing a sharded key. Also see :ref:`Shard Key Internals <sharding-internals-shard-keys>` (in particular, :ref:`sharding-internals-operations-and-reliability`)."
msgstr ""

