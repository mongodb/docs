======================================================
Create an Administrative User with Unrestricted Access
======================================================

.. default-domain:: mongodb

Overview
--------

Most users should have only the minimal set of privileges required for
their operations, in keeping with the policy of :term:`least privilege`.
However, some authorization architectures may
require a user with unrestricted access. To support these *super
users*, you can create users with access to all database :ref:`resources
<resource-document>` and :ref:`actions <security-user-actions>`.

.. link "creating a user" in the next sentence to the tutorial when
   it's published.

For many deployments, you may be able to avoid having *any* users with
unrestricted access by having an administrative user that with the
:authaction:`createUser` and :authaction:`grantRole` actions as needed
to support operations.

If users truly need unrestricted access to a MongoDB deployment,
MongoDB provides a :doc:`system role </reference/system-defined-roles>`
named :authrole:`root` that grants the combined privileges of all
system roles. This document describes how to create an administrative
user with the :authrole:`root` role.

For descriptions of the access each system role provides, see
:ref:`system-defined roles <system-user-roles>.

Prerequisites
-------------

.. include:: /includes/access-create-user.rst

The :authrole:`userAdmin` and :authrole:`userAdminAnyDatabase` system roles
both grant the actions.

A user authenticated using the :ref:`localhost exception
<localhost-exception>` also has those actions on the ``admin`` database. The
localhost exception applies if no users yet exist on the ``admin`` database
and if a user connects to the :program:`mongod` or :program:`mongos` from a
client running on the same system. For more information, see
:ref:`localhost-exception`.

Procedure
---------

.. include:: /includes/steps/add-root-user.rst
