========================================
Seed a New Secondary from Backup Restore
========================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Overview
--------

When a new secondary member is added to a replica set, MongoDB will
synchronize data to that new secondary as it would with any member of
the replica set. This can be very resource or time intensive if the
database is large.

As an alternative to the regular synchronization, the new secondary
member can first be "seeded" with data from an existing backup. This
limits performance impact to the new secondary and allows the active
MongoDB process to continue storing and retrieving data.

Prerequisites
-------------

To seed a secondary from a backup restore file, you must have the backup restore file. This file includes:

- The data files to be restored.

- The :file:`seedSecondary.sh` and :file:`seedSecondary.bat` scripts to perform the seeding activities.

- A human-readable restore metadata file, ``restoreInfo.txt``, to
  provide the data about the snapshot to be restored. This file
  contains the following information:

  - Group name
  - Replica Set name
  - Cluster Id (if applicable)
  - Snapshot timestamp (as Timestamp at UTC)
  - Last Oplog applied (as a BSON Timestamp at UTC)
  - Storage engine type
  - `mongod` startup options used on the database when the snapshot was
    taken
    
  An example of the ``restoreInfo.txt`` file would read like this:

  ..  code-block:: json

      Restore Information
      Group Name: test1
      Replica Set: config
      Cluster Id: bar
      Snapshot timestamp: Thu May 19 20:03:59 GMT 2016
      Last Oplog Applied: TS time:Thu May 19 20:04:45 GMT 2016 inc:2
      Storage Engine: wiredTiger
      Startup Options: { "storage.directoryPerDB" : true }

When you run the :file:`seedSecondary.sh` script on a Unix-based system
or :file:`seedSecondary.bat` script on a Windows-based system as part
of this tutorial, you must provide the replica set's oplog size in
gigabytes.

.. seealso::
   See **Check the Size of the Oplog** on 
   :manual:`Troubleshoot Replica Sets </tutorial/troubleshoot-replica-sets>` 
   if you do not have the size.

.. _seed-secondary-considerations:

Considerations
--------------

If the format of your backup differs from the format you want for your
restored database, such as when you want to restore a backup of a
deployment that uses the MMAPv1 storage engine to a deployment that
uses the WiredTiger storage engine, then use ``mongodump`` to create
the backup and ``mongorestore`` to restore the data to the new database.

.. important::
   The ``seedSecondary`` script is omitted from the restore files if
   you have:

   - Blacklisted databases or collections or 
   - The legacy sync cluster connection configuration servers for a
     sharded cluster

     Deployments using replica set configuration servers are unaffected.
  
   If you were to have received the script as part of the restore
   files, then tried to apply it, the secondary would become
   inconsistent with the other members.
     
.. seealso:: :manual:`Upgrade Config Servers to Replica Set </tutorial/upgrade-config-servers-to-replica-set/>`.

Seeding a new secondary from a backup restore requires an oplog window
on the current primary that spans back to the snapshot's timestamp.

Procedure
---------

.. include:: /includes/steps/backup-seed-new-secondary.rst
