=======================================================
Configure MongoDB with Kerberos Authentication on Linux
=======================================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol


Overview
--------

MongoDB Enterprise supports authentication using a :doc:`Kerberos
service </core/kerberos>`. Kerberos is an industry standard
authentication protocol for large client/server systems. MongoDB
Enterprise only supports the
`MIT implementation <https://kerberos.org/>`__ of Kerberos.


.. _kerberos-linux-prerequisites:

Prerequisites
-------------

.. include:: /includes/fact-confirm-enterprise-binaries.rst

.. include:: /includes/fact-kerberos-FQDN-repica-sets.rst

Setting up and configuring a Kerberos deployment is beyond the scope of
this document. Please refer to the `MIT Kerberos documentation
<https://web.mit.edu/kerberos/krb5-latest/doc/>`_ or your operating
system documentation for information on how to configure a Kerberos
deployment.

In order to use MongoDB with Kerberos, a
:ref:`Kerberos service principal <kerberos-service-principal>` for each
:binary:`~bin.mongod` and :binary:`~bin.mongos` instance in your MongoDB
deployment must be `added to the Kerberos database
<https://web.mit.edu/kerberos/krb5-latest/doc/admin/database.html#add-principal>`_.
You can add the service principal by running a command similar to the
following on your KDC:

.. code-block:: bash

   kadmin.local addprinc mongodb/m1.example.com@EXAMPLE.COM

On each system running :binary:`~bin.mongod` or :binary:`~bin.mongos`,
a :ref:`keytab file <keytab-files>` must be `created
<https://web.mit.edu/kerberos/krb5-latest/doc/admin/appl_servers.html#keytabs>`_
for the respective service principal. You can create the keytab file by
running a command similar to the following on the system running
:binary:`~bin.mongod` or :binary:`~bin.mongos`:

.. code-block:: bash

   kadmin.local ktadd mongodb/m1.example.com@EXAMPLE.COM

Procedure
---------

The following procedure outlines the steps to add a Kerberos user
principal to MongoDB, configure a standalone :binary:`~bin.mongod` instance
for Kerberos support, and connect using :binary:`~bin.mongosh` and
authenticate the user principal.

.. include:: /includes/steps/control-access-to-mongodb-with-kerberos-authentication.rst

Additional Considerations
-------------------------

.. _setting-krb5_ktname:

KRB5_KTNAME
~~~~~~~~~~~

If you installed MongoDB Enterprise using one of the official ``.deb``
or ``.rpm`` packages, and you use the included init/upstart scripts to
control the :binary:`~bin.mongod` instance, you can set the ``KRB5_KTNAME``
variable in the default environment settings file instead of setting
the variable each time.

Recent versions of Red Hat and Debian-based systems use ``systemd``.
Older versions use ``init`` for system initialization. Follow the
appropriate instructions to configure the ``KRB5_KTNAME`` variable for
your system.

``systemd`` Configuration Files
```````````````````````````````

``systemd`` stores configuration in unit files. Update the unit file to
set the ``KRB5_KTNAME`` variable.

.. procedure::
   :style: normal

   .. step:: Find the unit file

      .. code-block:: shell

         sudo systemctl cat mongod

      The ``systemctl`` command returns the file location and displays its
      contents.

   .. step:: Set ``KRB5_KTNAME``

      To set the ``KRB5_KTNAME`` variable, edit the following line to reflect
      the location of your ``keytab`` file:

      .. code-block:: shell

         Environment="KRB5_KTNAME=<path-to-your-mongod.keytab-file>" 

   .. step:: Edit the unit file

      Add the edited line to the unit file. The edited unit file will
      resemble:

      .. code-block:: shell
         :copyable: false
         :emphasize-lines: 9

         [Unit]
         Description=High-performance, schema-free document-oriented database
         After=network.target
         Documentation=https://docs.mongodb.org/manual
          
         [Service]
         User=mongodb
         Group=mongodb
         ExecStart=/usr/bin/mongod --config /etc/mongod.conf
         Environment="KRB5_KTNAME=/etc/mongod.keytab"
         PIDFile=/var/run/mongodb/mongod.pid
         # file size
         LimitFSIZE=infinity
         # cpu time
         LimitCPU=infinity
         # virtual memory size
         LimitAS=infinity
         # open files
         LimitNOFILE=64000
         # processes/threads
         LimitNPROC=64000
         # locked memory
         LimitMEMLOCK=infinity
         # total threads (user+kernel)
         TasksMax=infinity
         TasksAccounting=false
          
         # Recommended limits for for mongod as specified in
         # http://docs.mongodb.org/manual/reference/ulimit/#recommended-settings
          
         [Install]
         WantedBy=multi-user.target

   .. step:: Reload the updated unit file:

      .. code-block:: shell

         sudo systemctl daemon-reload

   .. step:: Restart the :binary:`mongod` service

      .. code-block:: shell

         sudo systemctl restart mongod
 
``init`` Configuration Files
````````````````````````````

For ``.rpm`` installations, the default environment settings file is
:file:`/etc/sysconfig/mongod`.

For ``.deb`` installations, the file is :file:`/etc/default/mongodb`.

Set the ``KRB5_KTNAME`` value by adding a line that resembles the
following:

.. code-block:: javascript

   KRB5_KTNAME="<path to keytab>"

Configure ``mongos`` for Kerberos
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To start :binary:`~bin.mongos` with Kerberos support, set the environmental
variable ``KRB5_KTNAME`` to the path of its :ref:`keytab file
<keytab-files>` and the :binary:`~bin.mongos` parameter
:parameter:`authenticationMechanisms` to ``GSSAPI`` in the following form:

.. code-block:: bash

   env KRB5_KTNAME=<path to keytab file> \
   mongos \
   --setParameter authenticationMechanisms=GSSAPI \
   <additional mongos options>

.. include:: /includes/extracts/default-bind-ip-security-additional-command-line.rst


For example, the following starts a :binary:`~bin.mongos` instance with
Kerberos support:

.. code-block:: bash

   env KRB5_KTNAME=/opt/mongodb/mongos.keytab \
   mongos \
   --setParameter authenticationMechanisms=GSSAPI \
   --configdb shard0.example.net, shard1.example.net,shard2.example.net \
   --keyFile /opt/mongodb/mongos.keyfile \
   --bind_ip localhost,<hostname(s)|ip address(es)>

The path to your :binary:`~bin.mongos` as well as your :ref:`keytab file
<keytab-files>` may differ. The :ref:`keytab file <keytab-files>` must
be only accessible to the owner of the :binary:`~bin.mongos` process.

Modify or include any additional :binary:`~bin.mongos` options as required
for your configuration. For example, instead of using
:option:`--keyFile <mongos --keyFile>` for internal authentication of sharded cluster
members, you can use :ref:`x.509 member authentication
<x509-internal-authentication>` instead.

Use a Config File
~~~~~~~~~~~~~~~~~

To configure :binary:`~bin.mongod` or :binary:`~bin.mongos` for Kerberos
support using a :doc:`configuration file
</reference/configuration-options>`, specify the
:parameter:`authenticationMechanisms` setting in the configuration file.

If using the :doc:`YAML configuration file format
</reference/configuration-options>`:

.. code-block:: yaml

   setParameter:
      authenticationMechanisms: GSSAPI

.. include:: /includes/extracts/default-bind-ip-security-additional-config-file.rst

For example, if :file:`/opt/mongodb/mongod.conf` contains the following
configuration settings for a standalone :binary:`~bin.mongod`:

.. code-block:: yaml

   security:
      authorization: enabled
   setParameter:
      authenticationMechanisms: GSSAPI
   storage:
      dbPath: /opt/mongodb/data
   net:
      bindIp: localhost,<hostname(s)|ip address(es)>


To start :binary:`~bin.mongod` with Kerberos support, use the following
form:

.. code-block:: bash

   env KRB5_KTNAME=/opt/mongodb/mongod.keytab \
   /opt/mongodb/bin/mongod --config /opt/mongodb/mongod.conf

The path to your :binary:`~bin.mongod`, :ref:`keytab file <keytab-files>`,
and configuration file may differ. The
:ref:`keytab file <keytab-files>` must be only accessible to the owner
of the :binary:`~bin.mongod` process.

Troubleshoot Kerberos Setup for MongoDB
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you encounter problems when starting :binary:`~bin.mongod` or
:binary:`~bin.mongos` with Kerberos authentication, see
:doc:`/tutorial/troubleshoot-kerberos`.

.. _enable-mixed-kerberos-and-cr:

Incorporate Additional Authentication Mechanisms
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Kerberos authentication (:ref:`GSSAPI <security-auth-kerberos>` (Kerberos))
can work alongside:

- MongoDB's SCRAM authentication mechanism:

  - :ref:`SCRAM-SHA-1 <authentication-scram>` 

  - :ref:`SCRAM-SHA-256 <authentication-scram>` (*Added in MongoDB 4.0*)

- MongoDB's authentication mechanism for LDAP:

  - :ref:`PLAIN <security-auth-ldap>` (LDAP SASL)
 
- MongoDB's authentication mechanism for x.509:

  - :ref:`MONGODB-X509 <security-auth-x509>`)

Specify the mechanisms as follows:

.. code-block:: bash

   --setParameter authenticationMechanisms=GSSAPI,SCRAM-SHA-256

Only add the other mechanisms if in use. This parameter setting does
not affect MongoDB's internal authentication of cluster members.

Testing and Verification
------------------------

.. include:: /includes/fact-mongokerberos.rst
