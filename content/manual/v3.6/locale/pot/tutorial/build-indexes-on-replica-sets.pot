# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/build-indexes-on-replica-sets.txt:8
msgid "Build Indexes on Replica Sets"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:18
msgid "To minimize the impact of building an index on replica sets and sharded clusters with replica set shards, use the following procedure to build indexes in a rolling fashion."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:22
msgid "This procedure *does* take one member out of the replica set at a time. However, this procedure will only affect one member of the set at a time rather than *all* secondaries at the same time."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:27
msgid "Considerations"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:30
msgid "Unique Indexes"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:32
msgid "To create :ref:`unique indexes <index-type-unique>` using the following procedure, you must stop all writes to the collection during this procedure."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:36
msgid "If you cannot stop all writes to the collection during this procedure, do not use the procedure on this page. Instead, build your unique index on the collection by:"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:40
msgid "issuing :method:`db.collection.createIndex()` on the primary for a replica set, or"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:43
msgid "issuing :method:`db.collection.createIndex()` on the :binary:`~bin.mongos` for a sharded cluster."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:47
msgid "Oplog Size"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:49
msgid "Ensure that your :term:`oplog` is large enough to permit the indexing or re-indexing operation to complete without falling too far behind to catch up. See the :ref:`oplog sizing <replica-set-oplog-sizing>` documentation for additional information."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:56
msgid "Procedure"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:60
msgid "If you need to build an index in a :term:`sharded cluster`, repeat the following procedure for each replica set that provides each :term:`shard`."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:64
msgid "To create :ref:`unique indexes <index-type-unique>` using the following procedure, you must stop all writes to the collection during the index build. Otherwise, you may end up with inconsistent data across the replica set members. If you cannot stop all writes to the collection, do not use the following procedure to create unique indexes."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:74
msgid "Stop One Secondary and Restart as a Standalone"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:76
msgid "Stop the :binary:`~bin.mongod` process on one secondary. Restart the :binary:`~bin.mongod` process, making the following configuration updates:"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:154
msgid "By running the :binary:`~bin.mongod` on a different port, you ensure that the other members of the replica set and all clients will not contact the member while you are building the index."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:162
msgid "Build the Index"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:164
msgid "Create the new index using the :method:`~db.collection.createIndex()` in the :binary:`~bin.mongo` shell, or comparable method in your driver. This operation will create or rebuild the index on this :binary:`~bin.mongod` instance"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:169
msgid "For example, to create an ascending index on the ``username`` field of the ``records`` collection, use the following :binary:`~bin.mongo` shell operation:"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:180
msgid "Restart the Program ``mongod`` as a Replica Set Member"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:182
msgid "When the index build completes, restart the :binary:`~bin.mongod` instance as a member of the replica set using its normal configuration file or command-line arguments. That is, undo the configuration changes made when starting as a standalone. For shard or config server replica set members, be sure to remove the :parameter:`skipShardingConfigurationChecks` parameter."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:189
msgid "For example, to restart your replica set member that is not part of a sharded cluster:"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:196
msgid "Allow replication to catch up on this member."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:199
msgid "Repeat the Procedure for the Remaining Secondaries"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:201
msgid "Once the member catches up with the other members of the set, repeat the procedure one member at a time for the remaining secondary members:"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:204
#: ../source/tutorial/build-indexes-on-replica-sets.txt:221
msgid ":ref:`tutorial-index-on-replica-sets-stop-one-member`"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:206
#: ../source/tutorial/build-indexes-on-replica-sets.txt:223
msgid ":ref:`tutorial-index-on-replica-sets-build-index`"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:208
#: ../source/tutorial/build-indexes-on-replica-sets.txt:225
msgid ":ref:`tutorial-index-on-replica-sets-restart-mongod`"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:211
msgid "Build the Index on the Primary"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:213
msgid "When all the secondaries have the new index, step down the primary, restart it as a standalone using the procedure described above, and build the index on the former primary:"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:217
msgid "Use the :method:`rs.stepDown()` method in the :binary:`~bin.mongo` shell to step down the primary. Upon successful stepdown, the current primary becomes a secondary and the replica set members elect a new primary."
msgstr ""

