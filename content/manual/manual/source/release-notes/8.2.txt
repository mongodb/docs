.. _release-notes-8.2:

=============================
Release Notes for MongoDB 8.2
=============================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: twocols

This page describes changes and new features introduced in MongoDB 8.2.

MongoDB 8.2 is a Minor Release, which means that it is supported for
both MongoDB Atlas and on-premises deployments. MongoDB 8.2 introduces 
incremental improvements within a |lts| version release cycle. MongoDB 8.2 also 
includes changes introduced in MongoDB Rapid Release 8.1. This page 
describes changes introduced in the Rapid Release and MongoDB 8.2.

To learn more about the differences between |lts|, Minor and Rapid releases,
see :ref:`release-version-numbers`. 

.. include:: /includes/minor-release.rst

.. include:: /includes/mongosync-compatibility.rst

Sharding
--------

terminateSecondaryReadsOnOrphanCleanup Parameter
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 8.2 adds the :parameter:`terminateSecondaryReadsOnOrphanCleanup` 
parameter, which controls whether long-running read operations on secondary 
nodes automatically terminate before :term:`orphaned document` deletion 
following a :term:`chunk` migration.

By default, this parameter is set to ``true``. If a read operation 
on a secondary node begins before the chunk migration commits,
MongoDB automatically terminates the operation before deleting 
the orphaned documents. In MongoDB versions before 8.2, these operations 
continue executing after orphaned document deletion and may silently 
miss documents without returning an error.

To support this new behavior, the default value for :parameter:`orphanCleanupDelaySecs` 
is now ``3600`` (previously ``900``).

General Changes 
---------------

Index Builds During Initial Sync
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 8.2, index builds during :ref:`initial sync 
<replica-set-initial-sync>` use 10% of available RAM by default. You can specify
a different percentage of memory for MongoDB to use with the 
:parameter:`initialSyncIndexBuildMemoryPercentage` parameter.

By default, the amount of available memory must be between 200 MB and 16 GB, 
inclusive. You use the following parameters to specify different minimum and 
maximum thresholds for memory usage: 

- :parameter:`initialSyncIndexBuildMemoryMinMB`
- :parameter:`initialSyncIndexBuildMemoryMaxMB`

Query Statistics 
~~~~~~~~~~~~~~~~

Starting in MongoDB 8.2, the :pipeline:`$queryStats` output includes the
following metrics on delinquent :ref:`tickets <storage-wiredtiger-concurrency>`:

- ``metrics.delinquentAcquisitions``
- ``metrics.totalAcquisitionDelinquencyMillis``
- ``metrics.maxAcquisitionDelinquencyMillis``

MongoDB considers an execution ticket as delinquent when acquisition takes too 
long.

WiredTiger Cache Size Configuration as a Percentage
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 8.2, you can configure the
:ref:`WiredTiger <storage-wiredtiger>` internal cache
size using a new percentage-based option. In addition to the existing
:option:`--wiredTigerCacheSizeGB <mongod --wiredTigerCacheSizeGB>`
and :setting:`storage.wiredTiger.engineConfig.cacheSizeGB`
gigabyte-based settings, you can now specify the cache size as a
percentage of the available memory with the
:option:`--wiredTigerCacheSizePct <mongod --wiredTigerCacheSizePct>`
and :setting:`storage.wiredTiger.engineConfig.cacheSizePct` options.

New Inconsistency Type: Range Deletion Missing Shard Key Index
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MonogDB 8.2, a new inconsistency type
:data:`RangeDeletionMissingShardKeyIndex` is implemented. The
inconsistency type indicates that a sharded collection exists that
doesn't have an index compatible with the collection shard key and there
is at least one remaining range deletion task to complete.

New Aggregation Expression
~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 8.2, you can use ``$currentDate`` with 
:method:`~db.collection.aggregate()` to return the current time on the server.

serverStatus Output Change
~~~~~~~~~~~~~~~~~~~~~~~~~~

:dbcommand:`serverStatus` includes the following new fields in its output:

- :serverstatus:`metrics.operation.killedDueToRangeDeletion`
- :serverstatus:`metrics.query.bucketAuto.spilledBytes`
- :serverstatus:`metrics.query.bucketAuto.spilledDataStorageSize`
- :serverstatus:`metrics.query.bucketAuto.spilledRecords`
- :serverstatus:`metrics.query.bucketAuto.spills`
- :serverstatus:`planCache.classic.replanned_plan_is_cached_plan`
- :serverstatus:`planCache.sbe.replanned_plan_is_cached_plan`
- :serverstatus:`spillWiredTiger`
- :serverstatus:`connections.queuedForEstablishment`
- :serverstatus:`connections.establishmentRateLimit`
- :serverstatus:`connections.establishmentRateLimit.rejected`
- :serverstatus:`connections.establishmentRateLimit.exempted`
- :serverstatus:`connections.establishmentRateLimit.interruptedDueToClientDisconnect`
- :serverstatus:`metrics.network.averageTimeToCompletedTLSHandshakeMicros`
- :serverstatus:`metrics.network.averageTimeToCompletedHelloMicros`
- :serverstatus:`metrics.network.averageTimeToCompletedAuthMicros`
- :serverstatus:`queues.ingressSessionEstablishment`
- :serverstatus:`queues.ingressSessionEstablishment.addedToQueue`
- :serverstatus:`queues.ingressSessionEstablishment.removedFromQueue`
- :serverstatus:`queues.ingressSessionEstablishment.interruptedInQueue`
- :serverstatus:`queues.ingressSessionEstablishment.rejectedAdmissions`
- :serverstatus:`queues.ingressSessionEstablishment.exemptedAdmissions`
- :serverstatus:`queues.ingressSessionEstablishment.successfulAdmissions`
- :serverstatus:`queues.ingressSessionEstablishment.attemptedAdmissions`
- :serverstatus:`queues.ingressSessionEstablishment.averageTimeQueuedMicros`
- :serverstatus:`queues.ingressSessionEstablishment.totalAvailableTokens`

Explain Output for Disk Spilling Stages
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 8.2, the :ref:`Explain Results <explain-results>` for stages that spill to
disk now include standardized metrics under consistent field names. This update
provides a more unified way to track disk usage for memory-intensive operations.

The new fields include:

- :ref:`spills <explain-results-spills-table>`

- :ref:`spilledBytes <explain-results-spilledBytes-table>`

- :ref:`spilledRecords <explain-results-spilledRecords-table>`

- :ref:`spilledDataStorageSize <explain-results-spilledDataStorageSize-table>`

Repair Mode Field in Validation Output 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 8.2, the :dbcommand:`validate` command and the 
:method:`db.collection.validate()` helper method return a new 
:data:`~validate.repairMode` field that indicates what types of data 
inconsistencies the ``validate`` command attempted to repair, if detected.

Support for zstd Fast Compression
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 8.2, The :setting:`storage.wiredTiger.engineConfig.zstdCompressionLevel` 
setting supports negative values for fast zstd compression. Negative values 
provide faster compression and decompression speeds at the cost of the 
compression ratio. The new supported range is -7 to 22.

Targeted Mirrored Reads
~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/sharding/targeted-mirror-reads-overview.rst

Rate Limit Ingress Connection Establishment
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 8.2, you can enable rate limiting for ingress 
connections to preserve CPU resources during overload. When enabled, 
you can see when the rate of incoming connections exceeds the connection 
establishment rate they specified and configure parameters to specify 
how your MongoDB deployment handles excess connections. 

You can configure rate limiting using the following new fields: 

-  :parameter:`ingressConnectionEstablishmentRateLimiterEnabled`
-  :parameter:`ingressConnectionEstablishmentRatePerSec`
-  :parameter:`ingressConnectionEstablishmentBurstCapacitySecs`
-  :parameter:`ingressConnectionEstablishmentMaxQueueDepth`

Security
--------

{+qe+} Prefix, Suffix, and Substring Query Public Preview
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: includes/queryable-encryption/qe-warning-public-preview.rst

MongoDB 8.2 lets you enable prefix, suffix, and substring queries on
encrypted string fields in {+qe+} enabled collections. For details, see 
:ref:`enable substring queries <qe-enable-substring-queries>` and :ref:`Supported
Aggregation Expressions <qe-supported-aggregation-expressions>`.

.. _8.2-known-issues:

Known Issues
------------

This section describes known issues in MongoDB 8.2 and their resolution
status.

.. list-table::
   :header-rows: 1
   :widths: 20 40 40

   * - In Version
     - Issue
     - Status

   * - 8.2.0
     - :issue:`SERVER-106469`: The ``mongocryptd``, ``mongod``, and ``mongos`` processes
       do not start on Windows when launched with the ``--logpath NUL``
       argument. A third-party dependency mistakenly disallows the use of NUL, resulting in this 
       log file path preventing ``mongocryptd`` from starting. MongoDB drivers may fail to start 
       ``mongocryptd`` successfully on Windows if ``--logpath NUL`` is specified. The MongoDB 
       .NET/C# Driver uses ``--logpath NUL`` in its default configuration and will fail to start on Windows.

       | You can avoid the .NET/C# Driver ``mongocryptd`` issue in the following ways:

       - Use the :ref:`Automatic Encryption Shared Library <qe-reference-shared-library>` instead of ``mongocryptd``.
       - Specify a non-NUL log file path when starting ``mongocryptd``.

     - We are targeting a fix for this issue in MongoDB 8.2.1.

   * - 8.2.0
     - :issue:`SERVER-109626`: v8.2.0 introduces some change stream performance regressions.
       Applications relying on change streams for real-time data processing may 
       experience up to a 15% performance degradation compared to v8.0. 
     - We are targeting a fix for this issue in MongoDB 8.2.1. 

   * - 8.2.0
     - :issue:`SERVER-110250`: Users running memory-intensive operations that require disk 
       spilling can experience server crashes if the number of actively spilling queries exceeds ``1000``.
       To mitigate this issue, raise the ``spillWiredTigerSessionMax`` ``setParameter`` value to a higher value. 
     - We are targeting a fix for this issue in MongoDB 8.2.1.

.. _release-notes-8.1:

Changes Introduced in MongoDB 8.1
---------------------------------

The following section describes changes and new features introduced in MongoDB 
Rapid Release 8.1.

Add Comments to Query Settings
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 8.1 (and 8.0.4), you can use
:dbcommand:`setQuerySettings` to add comments to query settings. For
example, add a comment that indicates why you added query settings.

Aggregation Accumulators
~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 8.1, the following aggregation accumulators are 
available:

- :group:`$concatArrays`
- :group:`$setUnion`

Aggregation Stages
~~~~~~~~~~~~~~~~~~

Starting in MongoDB 8.1, the following aggregation stages are available:

- :pipeline:`$listClusterCatalog`

Audit Log Improvements
~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/client-id-audit-logs.rst

For details, see :ref:`event-audit-messages-ocsf` and
:ref:`event-audit-messages-mongo`.

``connectionStatus`` Connection UUID
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 8.1, you can access the currently connected client's 
UUID through :data:`connectionStatus.authInfo.UUID`.

Disk Space
~~~~~~~~~~

Starting in MongoDB 8.1 (and 8.0.5), if disk space is running low,
MongoDB will fail queries that are spilling to disk.

$geoNear Improvements
~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 8.1, some previously failing :pipeline:`$geoNear` queries 
with hidden 2d or 2dsphere indexes will now succeed. In previous releases, some 
``$geoNear`` queries used to unnecessarily fail with an ``IndexNotFound`` error 
when they included a hidden index due to confusion over which index to use.

Improved Accuracy for Operation Duration Metric
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 8.1, the ``durationMillis`` metric reported in
:ref:`slow query logs <log-message-json-examples-slow-op>` accounts for
time spent processing authorization and parsing the command. As a
result, ``durationMillis`` more closely reflects the full command
duration.

Inconsistency Types
~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 8.1, the following inconsistency types are 
available:

- :data:`CollectionAuxiliaryMetadataMismatch` 

``$lookup`` Support for Encrypted Collections
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 8.1, you can reference multiple encrypted collections in a 
:pipeline:`$lookup` stage.

To learn more, see: 

- :ref:`$lookup with Encrypted Collections <lookup-behavior>`
- :ref:`Supported Operations for Automatic Encryption <csfle-lookup-graphLookup-behavior>`
- :ref:`Supported Operations for {+qe+} <qe-lookup-graphLookup-behavior>`

$merge Missing Fields
~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 8.1, if the :pipeline:`$merge` aggregation stage's
:ref:`supporting index <merge-on-supporting-index>` is not sparse, the fields 
specified for the :ref:`on <merge-on>`
option can be missing or contain a null value.

Query Statistics
~~~~~~~~~~~~~~~~

Starting in MongoDB 8.1, query statistics are collected and reported for
:dbcommand:`count` and :dbcommand:`distinct` commands. For details, see
:ref:`queryStats-count-query-shape` and
:ref:`queryStats-distinct-query-shape`.

Server Parameters
~~~~~~~~~~~~~~~~~

Starting in MongoDB 8.1, the following server parameters are available:

- :parameter:`enableAutoCompaction`
- :parameter:`upsertMaxRetryAttemptsOnDuplicateKeyError`
- :parameter:`AbortExpiredTransactionsSessionCheckoutTimeout` *(also available in 8.0.13)*
- :parameter:`JWKSMinimumQuiescePeriodSecs`
- :parameter:`catalogCacheCollectionMaxEntries`
- :parameter:`catalogCacheDatabaseMaxEntries`
- ``catalogCacheIndexMaxEntries``
- :parameter:`wiredTigerSessionMax`

``serverStatus`` Metrics
~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 8.1 (and 8.0.4 and 7.0.14), the :serverstatus:`indexStats` 
section of the :dbcommand:`serverStatus` command output tracks indexes in 
``prepareUnique`` state.

MongoDB 8.1 adds the following server status metrics:

- ``maxTimestampEligibleForTruncate`` in
  :serverstatus:`changeStreamPreImages.purgingJob`
- :serverstatus:`metrics.ttl.invalidTTLIndexSkips`
- :serverstatus:`metrics.repl.timestamps`
- :serverstatus:`metrics.repl.timestamps.oldestTimestamp`
- :serverstatus:`query.planning.fastPath.express`
- :serverstatus:`query.planning.fastPath.idHack`
- :serverstatus:`metrics.abortExpiredTransactions.successfulKills` *(also available in 8.0.13)*
- :serverstatus:`metrics.abortExpiredTransactions.timedOutKills` *(also available in 8.0.13)*
- :serverstatus:`wiredTiger.version`

Slow Query Metrics for Disk Spilling
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. |disk-spilling-intro| replace:: Starting in MongoDB 8.1, :ref:`log messages for slow queries <log-message-slow-ops>`

.. include:: /includes/disk-spilling-metrics-overview.rst

.. list-table::
   :header-rows: 1
   :widths: 10 20

   * - Metric
     - Description

   * - ``<executionPart>Spills``
     - Number of times the corresponding query execution stage wrote
       temporary files to disk

   * - ``<executionPart>SpilledBytes``
     - Size, in bytes, of the memory released by writing temporary files
       to disk
     
   * - ``<executionPart>SpilledDataStorageSize``
     - Size, in bytes, of disk space used for temporary files

   * - ``<executionPart>SpilledRecords``
     - Number of records written to temporary files on disk

For more information on writing temporary files to disk, see
:method:`~cursor.allowDiskUse()`.

Stable API
~~~~~~~~~~

Starting in MongoDB 8.1, the :dbcommand:`renameCollection` command and
corresponding shell method, :method:`db.collection.renameCollection()`,
are included in :ref:`Stable API <stable-api>` V1.

Support for Search Stages in Explain Results 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 8.1, the :ref:`explain results <explain-results>` include 
execution stats for the :pipeline:`$search`, :pipeline:`$searchMeta`, and 
:pipeline:`$vectorSearch` stages.

To learn more, see: 

- :ref:`explain-results-search`
- :ref:`Explain Search Results <explain-ref>`
- :ref:`avs-explain-ref`

Support for Search Index Commands on Views
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 8.1, you can run :dbcommand:`createSearchIndexes`,
:dbcommand:`updateSearchIndex`, :dbcommand:`dropSearchIndex`, and
:pipeline:`$listSearchIndexes` to create, modify, drop, and list Atlas Search
indexes and Atlas Vector Search indexes on compatible standard :ref:`views
<views-landing-page>`  that contain only the following stages:

- :pipeline:`$addFields`
- :pipeline:`$set`
- :pipeline:`$match` wrapping an :query:`$expr` operation

You can run aggregation pipelines that contain :pipeline:`$search` and
:pipeline:`$searchMeta` stages on views that use a search index. You
can also run aggregation pipelines that contain a :pipeline:`$vectorSearch`
stage on views that contain a vector search index. 

Validate Command Index Specifications Output
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 8.1, the :dbcommand:`validate` command includes
index specifications in the :data:`validate.indexDetails` output field.

Validation Action for Handling Invalid Documents
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in MongoDB 8.1, you can set your schema's ``validationAction`` 
option to ``errorAndLog``, in which MongoDB rejects any insert or update that 
violates the validation criteria and logs the error to the ``mongod`` log file.

For more information, see :ref:`schema-validation-handle-invalid-docs`.

.. _8.2-upgrade:

Upgrade Procedures
------------------

.. important:: Feature Compatibility Version

   To upgrade to MongoDB 8.2 from a 8.0 deployment, the 8.0 deployment
   must have ``featureCompatibilityVersion`` set to ``8.0``. To check
   the version:

   .. code-block:: javascript

      db.adminCommand( { getParameter: 1, featureCompatibilityVersion: 1 } )

To upgrade to MongoDB 8.2, refer to the upgrade instructions specific to
your MongoDB deployment:

- :ref:`<8.2-upgrade-standalone>`

- :ref:`<8.2-upgrade-replica-set>`

- :ref:`<8.2-upgrade-sharded-cluster>`

If you need guidance on upgrading to 8.2, MongoDB professional services
offer support to help ensure a smooth transition without interruption
to your MongoDB application. To learn more, see
:products:`MongoDB Consulting </consulting?tck=docs_server>`.

.. _8.2-download:

Download
--------

To download MongoDB 8.2, go to the `MongoDB Download Center
<https://www.mongodb.com/try/download/community-edition?tck=docs_server>`__.

.. _8.2-downgrade-considerations:

Downgrade Considerations
------------------------

Only Single-Version Downgrades are Supported 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

.. include:: /includes/8.2-upgrade-replacements.rst

.. include:: includes/downgrade/single-version-support.rst

Downgrade Policy
~~~~~~~~~~~~~~~~

- Binary downgrades aren't supported for MongoDB Community Edition. 

- You cannot downgrade your deployment's {+fcv+} to or from a
  rapid release version of MongoDB.

- If you upgrade or downgrade your deployment's {+fcv+}, you cannot
  downgrade your Enterprise deployment's binary version without
  assistance from support.

.. toctree::
   :titlesonly:
   :hidden:
   
   Compatibility Changes </release-notes/8.2-compatibility>
   Upgrade 8.0 to 8.2 </release-notes/8.2-upgrade>
   Downgrade 8.2 to 8.0 </release-notes/8.2-downgrade>
   Changelog </release-notes/8.2-changelog>
