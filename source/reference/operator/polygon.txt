========
$polygon
========

.. default-domain:: mongodb

.. operator:: $polygon

   .. versionadded:: 1.9

   The :operator:`$polygon` operator specifies a polygon for a
   :term:`geospatial` :operator:`$geoWithin` query. The query returns
   documents that are within the bounds of the polygon, according to
   their point-based location data. The :operator:`$polygon` operator
   returns documents based on :ref:`grid coordinates
   <geospatial-indexes-store-grid-coordinates>` and does *not* query for
   GeoJSON shapes.

   The query calculates distances using planar geometry. The ``2d``
   geospatial index supports the :operator:`$polygon` operator.

   To define the polygon, specify an array of coordinate points. Use the
   following syntax:

   .. code-block:: javascript

      { <location field> : { $geoWithin : { $polygon : [ [ <x1> , <y1> ] ,
                                                         [ <x2> , <y2> ] ,
                                                         [ <x3> , <y3> ] ] } } }

   .. important:: If you use longitude and latitude, specify **longitude first**.

   The last point specified is always implicitly connected to the
   first. You can specify as many points, and therefore sides, as you
   like.

   The following query returns all documents that have coordinates that
   exist within the polygon defined by ``[ 0 , 0 ]``, ``[ 3 , 3 ]``, and
   ``[ 6 , 0 ]``:

   .. code-block:: javascript

      db.places.find( { loc : { $geoWithin : { $polygon : [ [ 0 , 0 ] ,
                                                            [ 3 , 6 ] ,
                                                            [ 6 , 0 ] ] } } } )

   .. include:: /includes/note-geospatial-index-must-exist.rst
