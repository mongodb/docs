.. _atlas-data-api-data-formats:

=====================
Data API Data Formats
=====================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

MongoDB stores data in a format called `BSON <https://bsonspec.org/>`__,
which is similar to a JSON object in structure but supports additional
data types and uses a binary encoding. BSON is efficient for computers
but is not human readable, so you can't work with it directly.

Instead, the {+data-api+} uses two formats to represent data in requests and
responses:

- The **JSON** format uses standard types that any tool can parse and
  understand. However, JSON cannot represent all BSON types, so JSON
  responses may lose type information for some fields. For example, BSON
  has distinct types for 32-bit integers and 64-bit floats, but a JSON
  response represents both as a ``number``.

- The **EJSON** format, short for :manual:`MongoDB Extended JSON
  </reference/mongodb-extended-json/>`, is a superset of standard JSON
  that uses structured fields to represent BSON data that don't have
  corresponding JSON types. This fully represents your data but requires
  your client to understand how to work with EJSON.

.. example::

   This document can be represented in either JSON or EJSON shows BSON types
   represented in JSON and EJSON:

   .. tabs::

       .. tab:: EJSON
          :tabid: ejson

          .. code-block:: json

             {
                "Name": "Mango",
                "Year": { "$numberLong": "2022" },
                "Weight": { "$numberDecimal": "9823.1297" },
                "Date": { "$date": { "$numberLong": "1641954803067" } }
             }

       .. tab:: JSON
          :tabid: json

          .. code-block:: json

             {
                "Name": "Mango",
                "Year": 2022,
                "Weight": "9823.1297",
                "Date": "2022-01-12T02:33:23.067Z"
             }

You define a single default return type for all generated {+data-api+}
endpoints and individually for each custom endpoint. Incoming requests
can also specify a preferred data format that overrides the default
using an ``Accept`` header. To learn more, see :ref:`Choose a Response
Data Format <data-api-choose-response-format>`.

BSON Types
----------

This sections lists the BSON types that the {+data-api+} supports and shows
how each type is represented in JSON and EJSON format.

Array
~~~~~

.. list-table::
   :widths: 50 50
   :header-rows: 1

   * - EJSON
     - JSON

   * - .. code-block:: json
          :copyable: false

          [ <elements> ]

     - .. code-block:: json
          :copyable: false

          [ <elements> ]

Binary
~~~~~~

.. list-table::
   :widths: 50 50
   :header-rows: 1

   * - EJSON
     - JSON

   * - .. code-block:: json
          :copyable: false

          {
             "$binary": {
                "base64": "e67803a39588be8a95731a21e27d7391",
                "subType": "05"
             }
          }

     - .. code-block:: json
          :copyable: false

          {
             "Subtype": 5,
             "Data": "e67803a39588be8a95731a21e27d7391"
          }

Date
~~~~

.. list-table::
   :widths: 50 50
   :header-rows: 1

   * - EJSON
     - JSON

   * - .. code-block:: json
          :copyable: false

          {
             "$date": {
                "$numberLong": "1641954803067"
             }
          }

     - .. code-block:: json
          :copyable: false

          "2022-01-12T02:33:23.067Z"

Decimal128
~~~~~~~~~~

.. list-table::
   :widths: 50 50
   :header-rows: 1

   * - EJSON
     - JSON

   * - .. code-block:: json
          :copyable: false

          { "$numberDecimal": "9823.1297" }

     - .. code-block:: json
          :copyable: false

          "9823.1297"

Document
~~~~~~~~

.. list-table::
   :widths: 50 50
   :header-rows: 1

   * - EJSON
     - JSON

   * - .. code-block:: json
          :copyable: false

          { <content> }

     - .. code-block::
          :copyable: false

          { <content> }

Double
~~~~~~

.. list-table::
   :widths: 50 50
   :header-rows: 1

   * - EJSON
     - JSON

   * - .. code-block:: json
          :copyable: false

          {
             "$numberDouble": "10.5"
          }

     - .. code-block:: json
          :copyable: false

          10.5

Int32
~~~~~

.. list-table::
   :widths: 50 50
   :header-rows: 1

   * - EJSON
     - JSON

   * - .. code-block:: json
          :copyable: false

          {"$numberInt":"10"}

     - .. code-block:: json
          :copyable: false

          10

Int64
~~~~~

.. list-table::
   :widths: 50 50
   :header-rows: 1

   * - EJSON
     - JSON

   * - .. code-block:: json
          :copyable: false

          {"$numberLong":"50"}

     - .. code-block:: json
          :copyable: false

          50

MaxKey
~~~~~~

.. list-table::
   :widths: 50 50
   :header-rows: 1

   * - EJSON
     - JSON

   * - .. code-block:: json
          :copyable: false

          { "$maxKey": 1 }

     - .. code-block:: json
          :copyable: false

          {}

       *No JSON equivalent*

MinKey
~~~~~~

.. list-table::
   :widths: 50 50
   :header-rows: 1

   * - EJSON
     - JSON

   * - .. code-block:: json
          :copyable: false

          { "$minKey": 1 }

     - .. code-block:: json
          :copyable: false

          {}

       *No JSON equivalent*

ObjectId
~~~~~~~~

.. list-table::
   :widths: 50 50
   :header-rows: 1

   * - EJSON
     - JSON

   * - .. code-block:: json
          :copyable: false

          {
             "$oid":"5d505646cf6d4fe581014ab2"
          }

     - .. code-block:: json
          :copyable: false

          "5d505646cf6d4fe581014ab2"

Regular Expression
~~~~~~~~~~~~~~~~~~

.. list-table::
   :widths: 50 50
   :header-rows: 1

   * - EJSON
     - JSON

   * - .. code-block:: json
          :copyable: false

          {
             "$regularExpression": {
                "pattern":"^H",
                "options":"i"
             }
          }

     - .. code-block:: json
          :copyable: false

          {
             "Pattern": "^H",
             "Options": "i"
          }

Timestamp
~~~~~~~~~

.. list-table::
   :widths: 50 50
   :header-rows: 1

   * - EJSON
     - JSON

   * - .. code-block:: json
          :copyable: false

          {
             "$timestamp": {
                "t":1565545664,
                "i":1
              }
          }

     - .. code-block:: json
          :copyable: false

          {
             "T": 1565545664,
             "I": 1
          }
