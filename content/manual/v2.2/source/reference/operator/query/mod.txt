====
$mod
====

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. query:: $mod

   *Syntax*: ``{ field: { $mod: [ divisor, remainder ]} }``

   :query:`$mod` selects the documents where the ``field`` value divided
   by the ``divisor`` has the specified ``remainder``.

   Consider the following example:

   .. code-block:: javascript

      db.inventory.find( { qty: { $mod: [ 4, 0 ] } } )

   This query will select all documents in the ``inventory`` collection
   where the ``qty`` field value modulo ``4`` equals ``0``, such as
   documents with ``qty`` value equal to ``0`` or ``12``.

   In some cases, you can query using the :query:`$mod` operator
   rather than the more expensive :query:`$where` operator. Consider
   the following example using the :query:`$mod` operator:

   .. code-block:: javascript

      db.inventory.find( { qty: { $mod: [ 4, 0 ] } } )

   The above query is less expensive than the following query which
   uses the :query:`$where` operator:

   .. code-block:: javascript

      db.inventory.find( { $where: "this.qty % 4 == 0" } )

   .. seealso::

      :method:`find() <db.collection.find()>`, :method:`update()
      <db.collection.update()>`, :update:`$set`.
