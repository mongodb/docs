.. _dl-create-store-cmd:

===============
``createStore``
===============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

The ``createStore`` command creates a store in the 
{+data-lake+} storage configuration. Click on the tab below to 
learn more about creating a {+data-lake-store+} for the data 
source.

.. tabs:: 

   .. tab:: S3  
      :tabid: s3

      This tab contains the syntax and parameters for creating a 
      {+data-lake-store+} for data in |aws| |s3| bucket.

   .. tab:: Atlas Cluster 
      :tabid: atlas 

      This tab contains the syntax and parameters for creating a 
      {+data-lake-store+} for data in an |service| cluster.

   .. tab:: HTTP 
      :tabid: http 

      This tab contains the syntax and parameters for creating a 
      |http| {+data-lake-store+} for data in files hosted at publicly 
      accessible |url|\s.

      .. include:: /includes/extracts/fact-http-beta-message.rst

.. _dl-create-store-cmd-syntax:

Syntax 
------

.. tabs:: 
   :hidden:

   .. tab:: S3 Configuration 
      :tabid: s3

      .. code-block:: sh 

         db.runCommand({ createStore: <store-name>, provider: <storage-provider>, region: <region-name>, bucket: <bucket-name>, delimiter: <delimiter>, prefix: <prefix> })

   .. tab:: Atlas Configuration 
      :tabid: atlas 

      .. code-block:: sh

         db.runCommand({ createStore: <store-name>, provider: <storage-provider>, clusterName: <cluster-name>, projectId: <project-id>  })

   .. tab:: HTTP Configuration
      :tabid: http 

      .. code-block:: sh

         db.runCommand({ createStore: <store-name>, provider: <storage-provider>, urls: [ <url> ]  })

.. _dl-create-store-cmd-params:

Parameters 
----------

.. list-table::
   :header-rows: 1
   :widths: 10 10 70 10 

   * - Parameter 
     - Type 
     - Description 
     - Required?

   * - ``createStore``
     - string
     - Name of the new {+data-lake-store+}. The {+data-lake-store+} 
       name must be unique.
     - yes

   * - ``provider``
     - string
     - Name of the service where the data is stored. 
       Value can be one of the following: 
       
       - ``s3`` for an |aws| |s3| bucket.
       - ``atlas`` for |service| cluster.
       - ``http`` for files hosted at publicly accessible |url|\s.

     - yes

.. tabs:: 
   :hidden:

   .. tab:: S3 Configuration
      :tabid: s3

      .. list-table::
         :widths: 10 10 70 10 

         * - ``region``
           - string
           - Region in which the ``bucket`` is hosted. For a list of valid 
             region names, see :atlas:`Amazon Web 
             Services (AWS) </reference/amazon-aws/#amazon-aws>`.
           - yes

         * - ``bucket`` 
           - string 
           - Name of the bucket in which data is stored. Must exactly match the 
             name of an |s3| bucket which {+data-lake-short+} can access given 
             the configured |aws| |iam| credentials.
           - yes

         * - ``delimiter`` 
           - string 
           - Character used to separate path segments in the {+data-lake-store+}. 
             If ommitted, defaults to ``"/"``.
           - no

         * - ``prefix`` 
           - string 
           - Value prepended to the ``path``. If ommitted, defaults to ``""``.
           - no

   .. tab:: Atlas Configuration 
      :tabid: atlas 

      .. list-table::
         :widths: 10 10 70 10 

         * - ``clusterName`` 
           - string 
           - Name of the |service| cluster on which the store is based.
           - yes

         * - ``projectId`` 
           - string 
           - Unique identifier of the project that contains the |service| 
             cluster.
           - yes

   .. tab:: HTTP Configuration 
      :tabid: http 

      .. list-table::
         :widths: 10 10 70 10 

         * - ``urls`` 
           - array of strings or an empty array
           - One or more publicly accessible |url|\s. You 
             can't specify |url|\s that require authentication. If empty or omitted, the :ref:`storageGenerateConfig 
             <datalake-storagegenconfig>` command will not generate any virtual 
             {+adl+} databases or collections that reference the 
             {+data-lake-store+}.
           - no

.. _dl-create-store-cmd-output:

Output 
------

The command prints the following output if it succeeds. If the command
fails, see :ref:`dl-create-store-cmd-errors` for recommended solutions.

.. tabs:: 
   :hidden:

   .. tab:: S3 Configuration 
      :tabid: s3

      .. code-block:: json 
         :copyable: false

        {
          "ok": 1,
          "store": {
            "name": "<store-name>",
            "region": "<region-name>",
            "bucket": "<bucket-name>",
            "delimiter": "<delimiter>",
            "prefix": "<prefix>",
            "provider": "<storage-provider>"
          }
        }

   .. tab:: Atlas Configuration 
      :tabid: atlas 

      .. code-block:: json
         :copyable: false

         {
	         "ok" : 1,
	         "store" : {
		         "name" : "<store-name>",
		         "provider" : "<storage-provider>",
		         "clusterName" : "<cluster-name>",
		         "projectId" : "<project-id>"
	         }
         }

   .. tab:: HTTP Configuration 
      :tabid: http 

      .. code-block:: json
         :copyable: false

         {
	         "ok" : 1,
	         "store" : {
		         "name" : "<store-name>",
		         "provider" : "<storage-provider>",
		         "urls" : [
			         "<url>"
		         ]
	         }
         }

.. _dl-create-store-cmd-egs:

Example
-------

The following example uses the ``createStore`` command to create a new
{+data-lake-store+} called ``myStore``.

.. tabs:: 
   :hidden:

   .. tab:: S3 Configuration 
      :tabid: s3

      .. code-block:: json 

         use sample
         db.runCommand({ createStore: "myStore", provider: "s3", region: "us-east-1", bucket: "my-data-lake", prefix: "/sample" })

      The previous command prints the following: 

      .. code-block:: json 
         :copyable: false

         {
           "ok": 1,
           "store": {
             "name": "myStore",
             "region": "us-east-1",
             "bucket": "my-data-lake",
             "delimiter": "/",
             "prefix": "/sample",
             "provider": "s3"
           }
         }

   .. tab:: Atlas Configuration 
      :tabid: atlas 

      .. code-block:: json 

         use sample
         db.runCommand({ createStore: "myStore", provider: "atlas", clusterName: "myTestCluster", projectId: "<project-id>" })

      The previous command prints the following: 

      .. code-block:: json 
         :copyable: false

         {
	         "ok" : 1,
	         "store" : {
		         "name" : "myStore",
		         "provider" : "atlas",
		         "clusterName" : "myTestCluster",
		         "projectId" : "<project-id>"
	         }
         }

   .. tab:: HTTP Configuration 
      :tabid: http 

      .. code-block:: json 

         use sample 
         db.runCommand({ createStore: "myStore", provider: "http", urls: ["https://atlas-data-lake.s3.amazonaws.com/json/sample_airbnb/listingsAndReviews.json"] })

      The previous command prints the following: 

      .. code-block:: json 
         :copyable: false

         {
	        "ok" : 1,
	        "store" : {
		       "name" : "http-store",
		       "provider" : "http",
		       "urls" : [
			      "https://atlas-data-lake.s3.amazonaws.com/json/sample_airbnb/listingsAndReviews.json"
		       ]
	        }
         }

.. _dl-create-store-cmd-errors:

Troubleshoot Errors 
-------------------

If the command fails, it returns one of the following errors.

**Reason:**  A {+data-lake-store+} with the name specified in
``createStore`` already exists.

.. code-block:: json 
   :copyable: false 

   {
     "ok": 0,
     "errmsg": "store <store-name> already exists",
     "code": 2,
     "codeName": "BadValue"
   }

**Solution:** Specify a unique name for the {+data-lake-store+}.

**Reason:** The specified ``provider`` isn't recognized.

.. code-block:: json 
   :copyable: false 

   {
     "ok": 0,
     "errmsg": "unrecognized store provider <storage-provider>",
     "code": 2,
     "codeName": "BadValue"
   }

**Solution:** Ensure that you specify a valid storage provider.
