#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/applications/geospatial-indexes.txt:3
msgid "Geospatial Indexes and Queries"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:18
msgid "Surfaces"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:20
msgid ""
"Before storing your location data and writing queries, you must decide the "
"type of surface to use to perform calculations. The type you choose affects "
"how you store data, what type of index to build, and the syntax of your "
"queries."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:25
msgid "MongoDB offers two surface types:"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:28
msgid "Spherical"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:30
msgid ""
"To calculate geometry over an Earth-like sphere, store your location data on"
" a spherical surface and use :doc:`2dsphere </core/2dsphere>` index."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:34
msgid ""
"Store your location data as GeoJSON objects with this coordinate-axis order:"
" **longitude, latitude**. The coordinate reference system for GeoJSON uses "
"the :term:`WGS84` datum."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:39
msgid "Flat"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:41
msgid ""
"To calculate distances on a Euclidean plane, store your location data as "
"legacy coordinate pairs and use a :doc:`2d </core/2d>` index."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:47
msgid "Location Data"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:49
msgid ""
"If you choose spherical surface calculations, you store location data as "
"either:"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:53
msgid "GeoJSON Objects"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:55
msgid ""
"Queries on :term:`GeoJSON` objects always calculate on a sphere. The default"
" coordinate reference system for GeoJSON uses the :term:`WGS84` datum."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:59
msgid ""
"Support for GeoJSON storage and queries is new in version 2.4. Prior to "
"version 2.4, all geospatial data used coordinate pairs."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:64
msgid ""
"Support for additional GeoJSON types: MultiPoint, MultiLineString, "
"MultiPolygon, GeometryCollection."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:68
msgid "MongoDB supports the following GeoJSON objects:"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:70
msgid "Point"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:72
msgid "LineString"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:74
msgid "Polygon"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:76
msgid "MultiPoint"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:78
msgid "MultiLineString"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:80
msgid "MultiPolygon"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:82
msgid "GeometryCollection"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:86
msgid "Legacy Coordinate Pairs"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:88
msgid ""
"MongoDB supports spherical surface calculations on :term:`legacy coordinate "
"pairs` using a ``2dsphere`` index by converting the data to the GeoJSON "
"Point type."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:92
msgid ""
"If you choose flat surface calculations via a ``2d`` index, you can store "
"data only as :term:`legacy coordinate pairs`."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:96
msgid "Query Operations"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:98
msgid "MongoDB's geospatial query operators let you query for:"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:101
msgid "Inclusion"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:103
msgid ""
"MongoDB can query for locations contained entirely within a specified "
"polygon. Inclusion queries use the :query:`$geoWithin` operator."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:107
msgid ""
"Both ``2d`` and ``2dsphere`` indexes can support inclusion queries. MongoDB "
"does not require an index for inclusion queries; however, such indexes will "
"improve query performance."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:112
msgid "Intersection"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:114
msgid ""
"MongoDB can query for locations that intersect with a specified geometry. "
"These queries apply only to data on a spherical surface. These queries use "
"the :query:`$geoIntersects` operator."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:118
msgid "Only ``2dsphere`` indexes support intersection."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:121
msgid "Proximity"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:123
msgid ""
"MongoDB can query for the points nearest to another point. Proximity queries"
" use the :query:`$near` operator. The :query:`$near` operator requires a "
"``2d`` or ``2dsphere`` index."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:130
msgid "Geospatial Indexes"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:132
msgid ""
"MongoDB provides the following geospatial index types to support the "
"geospatial queries."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:136
msgid "``2dsphere``"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:138
msgid ":doc:`2dsphere </core/2dsphere>` indexes support:"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:140
msgid "Calculations on a sphere"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:142
msgid ""
"GeoJSON objects and include backwards compatibility for legacy coordinate "
"pairs"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:145
msgid ""
"Compound indexes with scalar index fields (i.e. ascending or descending) as "
"a prefix or suffix of the ``2dsphere`` index field"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:148
msgid "``2dsphere`` indexes are not available before version 2.4."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:151
msgid ":doc:`/tutorial/query-a-2dsphere-index`"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:154
msgid "``2d``"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:156
msgid ":doc:`2d </core/2d>` indexes support:"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:158
msgid "Calculations using flat geometry"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:160
msgid ""
"Legacy coordinate pairs (i.e., geospatial points on a flat coordinate "
"system)"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:163
msgid ""
"Compound indexes with only one additional field, as a suffix of the ``2d`` "
"index field"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:166
msgid ":doc:`/tutorial/query-a-2d-index`"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:169
msgid "Geospatial Indexes and Sharding"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:171
msgid "You *cannot* use a geospatial index as the :term:`shard key` index."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:175
msgid ""
"You can create and maintain a geospatial index on a sharded collection if it"
" uses fields other than the shard key fields."
msgstr ""

#: ../source/includes/fact-near-sharded-cluster.rst:1
msgid ""
"For sharded collections, queries using |geo-operation| are not supported. "
"You can instead use either the :dbcommand:`geoNear` command or the "
":pipeline:`$geoNear` aggregation stage."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:180
msgid "You can also query for geospatial data using :query:`$geoWithin`."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:183
msgid "Additional Resources"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:185
msgid ""
"The following pages provide complete documentation for geospatial indexes "
"and queries:"
msgstr ""

#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:6
msgid ":doc:`/core/2dsphere`"
msgstr ""

#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:4
msgid ""
"A ``2dsphere`` index supports queries that calculate geometries on an earth-"
"like sphere. The index supports data stored as both GeoJSON objects and as "
"legacy coordinate pairs."
msgstr ""

#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:10
msgid ":doc:`/core/2d`"
msgstr ""

#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:9
msgid ""
"The ``2d`` index supports data stored as legacy coordinate pairs and is "
"intended for use in MongoDB 2.2 and earlier."
msgstr ""

#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:15
msgid ":doc:`/core/geohaystack`"
msgstr ""

#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:13
msgid ""
"A haystack index is a special index optimized to return results over small "
"areas. For queries that use spherical geometry, a ``2dsphere`` index is a "
"better option than a haystack index."
msgstr ""

#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:20
msgid ":doc:`/core/geospatial-indexes`"
msgstr ""

#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:18
msgid ""
"Provides a more in-depth explanation of the internals of geospatial indexes."
" This material is not necessary for normal operations but may be useful for "
"troubleshooting and for further understanding."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:0
msgid "On this page"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:13
msgid ""
"MongoDB offers a number of indexes and query mechanisms to handle geospatial"
" information. This section introduces MongoDB's geospatial features."
msgstr ""

#~ msgid ""
#~ "MongoDB offers a number of indexes and query mechanisms to handle geospatial"
#~ " information. This section introduces MongoDB's geospatial features. For "
#~ "complete examples of geospatial queries in MongoDB, see "
#~ ":doc:`/administration/indexes-geo`."
#~ msgstr ""
