.. facet::
   :name: programming_language
   :values: csharp, go, java, javascript/typescript, kotlin, python, shell

.. _partial-match-tutorial:

=======================================================
How to Run Autocomplete and Partial Match |fts| Queries
=======================================================

.. default-domain:: mongodb

.. meta::
   :keywords: partial string query, sequence of characters match, terms at a distance match, any character match, highlight option, code example, java sync, compass, atlas ui, node.js
   :description: In this tutorial, learn how to run a case-sensitive partial match query using the autocomplete, phrase, regex, or wildcard operator.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

This tutorial describes how to create an index on the 
``sample_mflix.movies`` collection and run partial string queries 
against the ``plot`` field. To return matches for partial string 
queries, you can use one of the following operators:

- The :ref:`autocomplete <autocomplete-ref>` operator, which allows you to search the 
  specified fields for a word or phrase that contains the sequence of 
  characters that you specify with your query.

- The :ref:`phrase <phrase-ref>` operator, which allows you to search the 
  specified fields for documents that contain the terms in your query 
  string at the distance you specify between the terms.

- The :ref:`regex <regex-ref>` operator, which allows you to search the 
  specified fields for strings using regular expression.

- The :ref:`wildcard <wildcard-ref>` operator, which allows you to search the 
  specified fields using special characters in your query to match any 
  character.

You can also use the :ref:`text <text-ref>` operator with a custom analyzer 
for more fine-grained control over partial matching. To learn more, see 
:ref:`custom-analyzers`.

This tutorial takes you through the following steps: 

1. Set up an |fts| index on the ``plot`` field in the 
   ``sample_mflix.movies`` collection.
   
#. Run |fts| query for a partial string against the ``plot`` field in 
   the ``sample_mflix.movies`` collection using 
   :ref:`autocomplete <autocomplete-ref>`, :ref:`phrase <phrase-ref>`, :ref:`regex <regex-ref>`, and 
   :ref:`wildcard <wildcard-ref>` operators.

Before you begin, ensure that your |service| cluster meets the 
requirements described in the :ref:`fts-tutorials-prereqs`.

.. include:: /includes/atlas-roles/create-search-index.rst

Create the |fts| Index  
----------------------

In this section, you will create an |fts| index on the ``plot`` field 
in the ``sample_mflix.movies`` collection for running partial match 
queries against those fields. 

.. |search-type| replace:: :guilabel:`Atlas Search`
.. |index-name| replace:: ``partial-match-tutorial``
.. |database-name| replace:: ``sample_mflix`` database
.. |collection-name| replace:: ``movies`` collection
   
.. include:: /includes/fts/partial-match/procedures/steps-fts-partial-match-tutorial-create-index.rst

Run a Case-Sensitive Partial Match Query 
----------------------------------------

----------

.. |arrow| unicode:: U+27A4

|arrow| Use the **Select your language** drop-down menu on this page to 
set the language of the examples in this section.

----------

.. tabs-selector:: drivers

You can use the :ref:`autocomplete <autocomplete-ref>`, :ref:`phrase <phrase-ref>`, 
:ref:`regex <regex-ref>`, and :ref:`wildcard <wildcard-ref>` to run a 
case-sensitive partial match query. This tutorial uses these operators  
to search for movies whose plot contain the specified partial string. 

In this section, you will connect to your |service| cluster and run the 
sample query using the operator against the ``plot`` field in the 
``sample_mflix.movies`` collection. 

.. tabs-drivers::

   .. tab::
      :tabid: atlas-ui 

      .. include:: /includes/fts/partial-match/procedures/steps-fts-partial-match-tutorial-run-query-atlas-ui.rst

   .. tab::
      :tabid: shell

      .. include:: /includes/fts/partial-match/procedures/steps/fts-partial-match-tutorial-run-query.rst

   .. tab::
      :tabid: compass

      .. include:: /includes/fts/partial-match/procedures/steps/fts-partial-match-tutorial-run-query-compass.rst

   .. tab::
      :tabid: csharp

      .. include:: /includes/fts/partial-match/procedures/steps/fts-partial-match-tutorial-run-query-cs.rst

   .. tab:: 
      :tabid: go

      .. include:: /includes/fts/partial-match/procedures/steps/fts-partial-match-tutorial-run-query-go.rst

   .. tab:: 
      :tabid: java-sync 

      .. include:: /includes/fts/partial-match/procedures/steps/fts-partial-match-tutorial-run-query-java.rst

   .. tab:: 
      :tabid: kotlin-coroutine

      .. include:: /includes/fts/partial-match/procedures/steps/fts-partial-match-tutorial-run-query-kotlin.rst

   .. tab::
      :tabid: nodejs

      .. include:: /includes/fts/partial-match/procedures/steps/fts-partial-match-tutorial-run-query-nodejs.rst

   .. tab::
      :tabid: python

      .. include:: /includes/fts/partial-match/procedures/steps/fts-partial-match-tutorial-run-query-python.rst