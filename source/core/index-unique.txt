.. index:: index; unique
.. _index-type-unique:

==============
Unique Indexes
==============

.. default-domain:: mongodb

A unique index causes MongoDB to reject all documents that contain a
duplicate value for the indexed field. To create a unique index on the
``user_id`` field of the ``members`` collection, use the following
operation in the :program:`mongo` shell:

.. code-block:: javascript

   db.members.ensureIndex( { "user_id": 1 }, { unique: true } )

By default, ``unique`` is ``false`` on MongoDB indexes.

If you use the unique constraint on a :ref:`compound index
<index-type-compound>`, then MongoDB will enforce uniqueness on the
*combination* of values rather than the individual value for any or
all values of the key.

If a document does not have a value for the indexed field in a unique
index, the index will store a null value for this document. Because of
the unique constraint, MongoDB will only permit one document that lacks
the indexed field. If there is more than one document without a value
for the indexed field or is missing the indexed field, the index build
will fail with a duplicate key error.

You can combine the unique constraint with the :ref:`sparse index
<index-type-sparse>` to filter these null values from the unique index
and avoid the error.

You may not specify a unique constraint on a :ref:`hashed
index <index-type-hashed>`.
