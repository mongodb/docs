===============================
Get All Snapshots for a Cluster
===============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Syntax
------

.. code-block:: http

   GET /api/public/v1.0/groups/{GROUP-ID}/clusters/{CLUSTER-ID}/snapshots

``CLUSTER-ID`` must be the ID of either a replica set or a sharded cluster.

Request Parameters
------------------

Request Path Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :widths: 10 10 80
   :header-rows: 1

   * - ``Name``
     - Type
     - Description

   * - ``groupId``
     - string
     - ID of the group that owns the snapshot.

   * - ``clusterId``
     - string
     - ID of the cluster represented by the snapshot.

Request Query Parameters
~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/api/no-query-parameters.rst

Request Body Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/api/no-body-parameters.rst

Response Elements
-----------------

.. only:: onprem

   .. list-table::
      :widths: 10 10 80
      :header-rows: 1


      * - ``Name``
        - Type
        - Description

      * - ``groupId``
        - string
        - ID of the group that owns the snapshot.

      * - ``clusterId``
        - string
        - ID of the cluster represented by the snapshot. Not present for a
          config server snapshot.

      * - ``hostId``
        - string
        - ID of the :term:`config server` represented by the snapshot.
          Present only for a config server snapshot.

      * - ``created``
        - BSON timestamp
        - The exact point-in-time at which the snapshot was taken.

      * - ``expires``
        - timestamp
        - The date after which this snapshot is eligible for deletion.

      * - ``complete``
        - boolean
        - Is this snapshot complete? This will be false if the snapshot creation
          job is still in progress.

      * - ``isPossiblyInconsistent``
        - boolean
        - Could this snapshot be inconsistent? ``isPossiblyInconsistent`` is
          only present for :doc:`sharded cluster </tutorial/enable-backup>`
          snapshots. In order to take a snapshot of a sharded cluster in a
          consistent state, the backup agent will temporarily turn off the
          balancer before creating the snapshot. In some cases, it will not be
          able to turn off the balancer in a timely manner, so the snapshot
          will be created with the balancer still running. If this happens,
          the snapshot may be in an inconsistent state (e.g., because chunk
          migrations may be in progress).

      * - ``missingShards``
        - array of clusters
        - List of shards that are missing from the snapshot. Only present for
          a sharded cluster snapshot. In steady state, this array will be
          empty. However, if the backup agent is unable to connect to a shard
          when a snapshot is created, it will be omitted from the snapshot.
          Each document in the array is a **cluster** document containing a
          ``self`` link.

      * - ``parts``
        - array of parts
        - The individual parts that comprise the complete snapshot. 
          
          - For a replica set, this array contains a single element. 
          - For a sharded cluster, there is one element for each shard plus
            one element for the config server.

      * - ``parts.typeName``
        - string
        - The type of server represented by the part. Possible values are:

          - ``REPLICA_SET``
          - ``CONFIG_SERVER``

      * - ``parts.clusterId``
        - string
        - ID of the replica set. Not present for a config server.

      * - ``parts.replicaSetName``
        - string
        - Name of the replica set. Not present for a config server.

      * - ``parts.encryptionEnabled``
        - boolean
        - Indicates whether the snapshot data is encrypted.

      * - ``parts.masterKeyUUID``
        - string
        - The KMIP master key ID used to encrypt the snapshot data. This
          field is present only if ``encryptionEnabled`` is true for the
          snapshot.

      * - ``parts.hostId``
        - string
        - ID of a config server. Not present for a replica set.

      * - ``parts.mongodVersion``
        - string
        - The version of ``mongod`` that was running when the snapshot was
          created.

      * - ``parts.dataSizeBytes``
        - number
        - The total size of the data in the snapshot.

      * - ``parts.storageSizeBytes``
        - number
        - The total size of space allocated for document storage.

      * - ``parts.fileSizeBytes``
        - number
        - The total size of the data files.

.. only:: cloud

   .. list-table::
      :widths: 10 10 80
      :header-rows: 1

      * - ``Name``
        - Type
        - Description

      * - ``groupId``
        - string
        - ID of the group that owns the snapshot.

      * - ``clusterId``
        - string
        - ID of the cluster represented by the snapshot. Not present for a
          config server snapshot.

      * - ``hostId``
        - string
        - ID of the :term:`config server` represented by the snapshot.
          Present only for a config server snapshot.

      * - ``created``
        - BSON timestamp
        - The exact point-in-time at which the snapshot was taken.

      * - ``expires``
        - timestamp
        - The date after which this snapshot is eligible for deletion.

      * - ``complete``
        - boolean
        - Is this snapshot complete? This will be false if the snapshot creation
          job is still in progress.

      * - ``isPossiblyInconsistent``
        - boolean
        - Could this snapshot be inconsistent? ``isPossiblyInconsistent``
          is only present for :doc:`sharded cluster </tutorial/enable-backup>`
          snapshots. In order to take a snapshot of a sharded cluster in
          a consistent state, the backup agent will temporarily turn off
          the balancer before creating the snapshot. In some cases, it will
          not be able to turn off the balancer in a timely manner, so the
          snapshot will be created with the balancer still running. If this
          happens, the snapshot may be in an inconsistent state (e.g.,
          because chunk migrations may be in progress).

      * - ``missingShards``
        - array of clusters
        - List of shards that are missing from the snapshot. Only present for a
          sharded cluster snapshot. In steady state, this array will be empty.
          However, if the backup agent is unable to connect to a shard when a
          snapshot is created, it will be omitted from the snapshot. Each document
          in the array is a **cluster** document containing a ``self`` link.

      * - ``parts``
        - array of parts
        - The individual parts that comprise the complete snapshot. For a replica
          set, this array will contain a single element. For a sharded cluster,
          there will be one element for each shard plus one element for the config
          server.

      * - ``parts.typeName``
        - string
        - The type of server represented by the part. Possible values are:

          - ``REPLICA_SET``
          - ``CONFIG_SERVER``

      * - ``parts.clusterId``
        - string
        - ID of the replica set. Not present for a config server.

      * - ``parts.replicaSetName``
        - string
        - Name of the replica set. Not present for a config server.

      * - ``parts.hostId``
        - string
        - ID of a config server. Not present for a replica set.

      * - ``parts.mongodVersion``
        - string
        - The version of ``mongod`` that was running when the snapshot was created.

      * - ``parts.dataSizeBytes``
        - number
        - The total size of the data in the snapshot.

      * - ``parts.storageSizeBytes``
        - number
        - The total size of space allocated for document storage.

      * - ``parts.fileSizeBytes``
        - number
        - The total size of the data files.

Links
-----

.. list-table::
   :header-rows: 1

   * - Relation
     - Description
   * - ``self``
     - Me
   * - ``http://mms.mongodb.com/cluster``
     - The cluster that this snapshot belongs to.
   * - ``http://mms.mongodb.com/group``
     - The group that owns this snapshot.

Examples
--------

Example Request
~~~~~~~~~~~~~~~

.. only:: cloud

   .. cssclass:: copyable-code
   .. code-block:: sh

      curl --user "{username}:{apiKey}" --digest \
       --header "Accept: application/json" \
       --header "Content-Type: application/json" \
       --include \
       --request GET "https://cloud.mongodb.com/api/public/v1.0/groups/{GROUP-ID}/clusters/{CLUSTER-ID}/snapshots?pretty=true"

.. only:: onprem

   .. cssclass:: copyable-code
   .. code-block:: sh

      curl --user "{username}:{apiKey}" --digest \
       --header "Accept: application/json" \
       --header "Content-Type: application/json" \
       --include \
       --request GET "https://{opsManagerHost}:{port}/api/public/v1.0/groups/{GROUP-ID}/clusters/{CLUSTER-ID}/snapshots?pretty=true"

Example Response
~~~~~~~~~~~~~~~~

Response Header
+++++++++++++++

.. include:: /includes/api/api-headers/401.rst

.. include:: /includes/api/api-headers/200.rst

Response Body
+++++++++++++

.. only:: onprem

   .. code-block:: javascript

      {
        "clusterId" : "348938fbdbca74718cba",
        "complete" : true,
        "created" : {
          "date" : "2015-07-29T02:57:17Z",
          "increment" : 1
        },
        "expires" : "2016-07-27T02:57:17Z",
        "groupId" : "2847387cd717dabc348a",
        "id" : "5875f665da588548965b",
        "isPossiblyInconsistent" : false,
        "missingShards": [
          {
            "id": "472837bcbd278abcd7",
            "groupId": "2847387cd717dabc348a",
            "typeName": "REPLICA_SET",
            "clusterName": "Cluster 1",
            "shardName": "shard002",
            "replicaSetName": "rs2",
            "lastHeartbeat": "2014-02-26T17:32:45Z"
          }
        ],
        "parts" : [ {
          "clusterId" : "55b83f6ce4b074d9e2f2e741",
          "dataSizeBytes" : 177588,
          "encryptionEnabled": true,
          "masterKeyUUID" : "1234-3456-4567-abcd-def0"
          "fileSizeBytes" : 201326640,
          "mongodVersion" : "3.0.5",
          "replicaSetName" : "rs0",
          "storageSizeBytes" : 11235328,
          "typeName" : "REPLICA_SET"
        }, {
          "clusterId" : "55b83f6ce4b074d9e2f2e73d",
          "dataSizeBytes" : 3450212,
          "encryptionEnabled": true,
          "masterKeyUUID" : "1234-3456-4567-abcd-def0"
          "fileSizeBytes" : 201326640,
          "mongodVersion" : "3.0.5",
          "replicaSetName" : "rs1",
          "storageSizeBytes" : 21721088,
          "typeName" : "REPLICA_SET"
        }, {
          "dataSizeBytes" : 3211448,
          "fileSizeBytes" : 201326640,
          "hostId" : "8e42be22e49d3002c1744f2f5c6327eb",
          "mongodVersion" : "3.0.5",
          "storageSizeBytes" : 25989120,
          "typeName" : "CONFIG_SERVER"
        } ]
      }

.. only:: cloud

   .. code-block:: javascript

      {
        "clusterId" : "348938fbdbca74718cba",
        "complete" : true,
        "created" : {
          "date" : "2015-07-29T02:57:17Z",
          "increment" : 1
        },
        "expires" : "2016-07-27T02:57:17Z",
        "groupId" : "2847387cd717dabc348a",
        "id" : "5875f665da588548965b",
        "isPossiblyInconsistent" : false,
        "missingShards": [
          {
            "id": "472837bcbd278abcd7",
            "groupId": "2847387cd717dabc348a",
            "typeName": "REPLICA_SET",
            "clusterName": "Cluster 1",
            "shardName": "shard002",
            "replicaSetName": "rs2",
            "lastHeartbeat": "2014-02-26T17:32:45Z"
          }
        ],
        "parts" : [ {
          "clusterId" : "55b83f6ce4b074d9e2f2e741",
          "dataSizeBytes" : 177588,
          "fileSizeBytes" : 201326640,
          "mongodVersion" : "3.0.5",
          "replicaSetName" : "rs0",
          "storageSizeBytes" : 11235328,
          "typeName" : "REPLICA_SET"
        }, {
          "clusterId" : "55b83f6ce4b074d9e2f2e73d",
          "dataSizeBytes" : 3450212,
          "fileSizeBytes" : 201326640,
          "mongodVersion" : "3.0.5",
          "replicaSetName" : "rs1",
          "storageSizeBytes" : 21721088,
          "typeName" : "REPLICA_SET"
        }, {
          "dataSizeBytes" : 3211448,
          "fileSizeBytes" : 201326640,
          "hostId" : "8e42be22e49d3002c1744f2f5c6327eb",
          "mongodVersion" : "3.0.5",
          "storageSizeBytes" : 25989120,
          "typeName" : "CONFIG_SERVER"
        } ]
      }

Entity Fields
-------------



Examples
--------

Get All Snapshots
~~~~~~~~~~~~~~~~~

Request
```````

.. only:: cloud

   .. code-block:: none

      curl -i -u "username:apiKey" --digest "https://cloud.mongodb.com/api/public/v1.0/groups/525ec8394f5e625c80c7404a/clusters/53bc556ce4b049c88baec825/snapshots"

.. only:: onprem

   .. code-block:: none

      curl -i -u "username:apiKey" --digest "https://<ops-manager-host>/api/public/v1.0/groups/525ec8394f5e625c80c7404a/clusters/53bc556ce4b049c88baec825/snapshots"

Response
````````

.. code-block:: none

   HTTP/1.1 200 OK

   {
     "totalCount" : 3,
     "results" : [ {
       "id" : "53bd5fb5e4b0774946a16fad",
       "groupId" : "525ec8394f5e625c80c7404a",
       "clusterId" : "53bc556ce4b049c88baec825",
       "created" : {
         "date" : "2014-07-09T15:24:37Z",
         "increment" : 1
       },
       "expires" : "2014-07-11T15:24:37Z",
       "complete" : true,
       "parts" : [ {
         "typeName" : "REPLICA_SET",
         "clusterId" : "53bc556ce4b049c88baec825",
         "replicaSetName" : "rs0",
         "mongodVersion" : "2.6.3",
         "dataSizeBytes" : 17344,
         "storageSizeBytes" : 10502144,
         "fileSizeBytes" : 67108864
       } ],
       "links" : [ ... ]
     }, {
       ...
     } ],
     "links": [ ... ]
   }
