

.. _sharding-shards:
.. _sharding-production-architecture:


==========================
Sharded Cluster Components
==========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. include:: /includes/fact-sharded-cluster-components.rst

.. _sc-production-configuration:

Production Configuration
------------------------

In a production cluster, ensure that data is redundant and
that your systems are highly available. Consider the following
for a production sharded cluster deployment:

- Deploy Config Servers as a 3 member :term:`replica set`
- Deploy each Shard as a 3 member :term:`replica set`
- Deploy one or more :binary:`~bin.mongos` routers

Replica Set Distribution
~~~~~~~~~~~~~~~~~~~~~~~~

Where possible, consider deploying one member of each replica set
in a site suitable for being a disaster recovery location.

.. include:: /includes/note-csrs-distribution.rst

Number of Shards
~~~~~~~~~~~~~~~~

Sharding requires at least two shards to distribute sharded data. Single
shard sharded clusters may be useful if you plan on enabling sharding in
the  near future, but do not need to at the time of deployment.

.. _sharded-cluster-components-distribution:

Number of ``mongos`` and Distribution
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

:binary:`~bin.mongos` routers support high availability and scalability
when deploying multiple ``mongos`` instances. If a proxy or load 
balancer is between the application and the ``mongos`` routers, you 
must configure it for :term:`client affinity`. Client affinity allows 
every connection from a single client to reach the same ``mongos``. 
For shard-level high availability, either:

- Add ``mongos`` instances on the same hardware where ``mongos`` 
  instances are already running.
- Embed ``mongos`` routers at the application level.

:binary:`~bin.mongos` routers communicate frequently with your config 
servers. As you increase the number of routers, performance may degrade. 
If performance degrades, reduce the number of routers. Your deployment 
should not have more than 30 ``mongos`` routers.

The following diagram shows a common sharded cluster architecture used
in production:

.. image:: /images/sharded-cluster-production-architecture.png
   :alt: Diagram that shows a production-level sharded cluster
         containing multiple shards and mongos routers.

Development Configuration
-------------------------

For testing and development, you can deploy a sharded cluster with a
minimum number of components. These **non-production** clusters have the
following components:

- One :binary:`~bin.mongos` instance.

- A single shard :term:`replica set`.

- A replica set :ref:`config server <sharding-config-server>`.


The following diagram shows a sharded cluster architecture used for
**development only**:

.. image:: /images/sharded-cluster-test-architecture.png
   :alt: Diagram that shows a development sharded cluster
         containing a single shard and mongos router.

.. warning:: Use the test cluster architecture for testing and
   development only.

.. seealso::

   :doc:`/tutorial/deploy-shard-cluster/`

.. toctree::
   :titlesonly: 
   :hidden: 

   /core/sharded-cluster-shards
   Config Servers (metadata) </core/sharded-cluster-config-servers>
   Router (mongos) </core/sharded-cluster-query-router>
