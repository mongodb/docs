title: Suspend Automation for the replica set.
stepnum: 1
ref: suspend
content: |
  Suspend automation using the procedure described in :ref:`Suspend Automation <suspend-automation-for-a-process>`.

  .. important::
     If you do not first suspend Automation, |mms| will restart the member after you shut it down.

---
title: Remove the broken secondary from your replica set.
stepnum: 2
ref: remove-broken-secondary
action:
  language: sh
  code: |
    rs.remove("<secondaryHost>:<secondaryPort>")
---
title: "Login to the server on which to create the new secondary."
stepnum: 3
ref: login-to-server
---
title: "Bring up new node as a standalone."
stepnum: 4
ref: bring-up-new-node
action:
  language: sh
  code: |
    tar -xvf <backupRestoreName>.tar.gz
    mv <backupRestoreName> data
    mongod --port <alternatePort> --dbpath /data
  post: |
    Where ``<alternatePort>`` is not the usual port on which 
    your secondary runs.
---
title: "Run the ``seedSecondary`` script to create oplog collection and seed it with correct timestamp."
stepnum: 5
source: 
  file: steps-restore-primary.yaml
  ref: seed
pre: | 
  The ``seedSecondary`` script re-creates the oplog collection and seed it
  with the correct timestamp.
---
title: "Shut down the new secondary on the alternate port."
stepnum: 6
ref: shut-down-new-secondary
---
title: "Start up the new secondary."
stepnum: 7
ref: start-new-secondary
action:
  language: sh
  code: |
    mongod --port <secondaryPort> --dbpath /data  --replSet <replicaSetName>
---
title: "Add the new secondary to the replica set on the primary host."
stepnum: 8
ref: add-new-secondary
action:
  language: sh
  code: |
    rs.add("<secondary-host>:<secondary-port>")
---
title: Resume Automation for the replica set.
stepnum: 9
ref: resume
content: |
  Use the procedure to :ref:`Resume Automation <resume-automation-for-a-process>`.
...
