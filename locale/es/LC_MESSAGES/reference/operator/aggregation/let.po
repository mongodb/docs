# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: 2014-04-08 18:49+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# 57933383327a4058af884e097a79c858
#: ../source/reference/operator/aggregation/let.txt:3
msgid "$let (aggregation)"
msgstr ""

# e28eee35442243a9800dc7e91b728882
#: ../source/reference/operator/aggregation/let.txt
msgid "On this page"
msgstr ""

# c50f67807b0a40d199a10cd107755b2a
#: ../source/reference/operator/aggregation/let.txt:14
msgid "Definition"
msgstr ""

# 3440ce2664a44edfb1a30fee30c9e5e1
#: ../source/reference/operator/aggregation/let.txt:18
msgid ""
"Binds :doc:`variables </reference/aggregation-variables>` for use in the "
"specified expression, and returns the result of the expression."
msgstr ""

# b6a99a1cc96248caabc20a192c4ee749
#: ../source/reference/operator/aggregation/let.txt:21
msgid "The :expression:`$let` expression has the following syntax:"
msgstr ""

# 8e6fb1da347e4e4eb62b4c25f63bdfed
#: ../source/reference/operator/aggregation/let.txt:37
msgid "Field"
msgstr ""

# 2559998667b04e96ac4b93b02f017234
#: ../source/reference/operator/aggregation/let.txt:38
msgid "Specification"
msgstr ""

# f3ca37c51ae64a17a570cf0dc56487e3
#: ../source/reference/operator/aggregation/let.txt:40
msgid "``vars``"
msgstr ""

# 888430639e6d4564a14e5274c7af5e49
#: ../source/reference/operator/aggregation/let.txt:42
msgid ""
"Assignment block for the :doc:`variables </reference/aggregation-"
"variables>` accessible in the ``in`` expression. To assign a variable, "
"specify a string for the variable name and assign a valid expression for "
"the value."
msgstr ""

# 1ff7fd1077124e589ec859d2daddcd39
#: ../source/reference/operator/aggregation/let.txt:47
msgid ""
"The variable assignments have no meaning outside the ``in`` expression, "
"not even within the ``vars`` block itself."
msgstr ""

# a96ea897347d44709fcba0adb7515c76
#: ../source/reference/operator/aggregation/let.txt:50
msgid "``in``"
msgstr ""

# 0096d2b72c474fc3835b7e5ca4cc129d
#: ../source/reference/operator/aggregation/let.txt:52
msgid "The :ref:`expression <aggregation-expressions>` to evaluate."
msgstr ""

# 03f4e2972b084c73846120c237e7dcda
#: ../source/reference/operator/aggregation/let.txt:54
msgid ""
"To access variables in aggregation expressions, prefix the variable name "
"with double dollar signs (``$$``) and enclosed in quotes. For more "
"information on expressions, see :ref:`aggregation-expressions`. For "
"information on use of variables in the aggregation pipeline, see "
":doc:`/reference/aggregation-variables`."
msgstr ""

# 00e79bd42db84fab81279689e574ddd7
#: ../source/reference/operator/aggregation/let.txt:62
msgid "Behavior"
msgstr ""

# 4ab7704b11cc4eb0aa6978b5377dc7bd
#: ../source/reference/operator/aggregation/let.txt:64
msgid ""
":expression:`$let` can access variables defined outside its expression "
"block, including :ref:`system variables <agg-system-variables>`."
msgstr ""

# eaf07e52598e4ca8b7b438c7bb187f91
#: ../source/reference/operator/aggregation/let.txt:67
msgid ""
"If you modify the values of externally defined variables in the ``vars`` "
"block, the new values take effect only in the ``in`` expression. Outside "
"of the ``in`` expression, the variables retain their previous values."
msgstr ""

# b0695a72adc3400fb6d7c96cfe827383
#: ../source/reference/operator/aggregation/let.txt:72
msgid ""
"In the ``vars`` assignment block, the order of the assignment does "
"**not** matter, and the variable assignments only have meaning inside the"
" ``in`` expression. As such, accessing a variable's value in the ``vars``"
" assignment block refers to the value of the variable defined outside the"
" ``vars`` block and **not** inside the same ``vars`` block."
msgstr ""

# 89fcb9bda79b4956ba2544a580a88b68
#: ../source/reference/operator/aggregation/let.txt:78
msgid "For example, consider the following :expression:`$let` expression:"
msgstr ""

# 37c86333a57b4b8a8f632a811ec6b42c
#: ../source/reference/operator/aggregation/let.txt:90
msgid ""
"In the ``vars`` assignment block, ``\"$$low\"`` refers to the value of an"
" externally defined variable ``low`` and not the variable defined in the "
"same ``vars`` block. If ``low`` is not defined outside this "
":expression:`$let` expression block, the expression is invalid."
msgstr ""

# f731214242c14579a46ac13fa7e141f1
#: ../source/reference/operator/aggregation/let.txt:98
msgid "Example"
msgstr ""

# b10a59ae7ebf4ff899e7d204f7bfd031
#: ../source/reference/operator/aggregation/let.txt:100
msgid "A ``sales`` collection has the following documents:"
msgstr ""

# bce93797159040d2bb43c6953183aeb6
#: ../source/reference/operator/aggregation/let.txt:107
msgid ""
"The following aggregation uses :expression:`$let` in the "
":pipeline:`$project` pipeline stage to calculate and return the "
"``finalTotal`` for each document:"
msgstr ""

# 65baf8c3e6f14b40bc8aa0475ff83f4e
#: ../source/reference/operator/aggregation/let.txt:129
msgid "The aggregation returns the following results:"
msgstr ""

# 149b7519cd88490dbe7b1517d4109b00
#: ../source/reference/operator/aggregation/let.txt:136
msgid ":expression:`$map`"
msgstr ""

#~ msgid ""
#~ "Binds :doc:`variables </reference/aggregation-"
#~ "variables>` for use in subexpressions. "
#~ "To access the variable in the "
#~ "subexpressions, use a string with the"
#~ " variable name prefixed with double "
#~ "dollar signs (``$$``)."
#~ msgstr ""

#~ msgid "The value of the subexpression evaluated with the bound variables."
#~ msgstr ""

#~ msgid ""
#~ "See :doc:`/reference/aggregation-variables` for "
#~ "more information on using variables in"
#~ " the aggregation pipeline."
#~ msgstr ""

#~ msgid ""
#~ "In the ``vars: { <var1>: <value1>, "
#~ "... }`` assignment block, the order "
#~ "of the assignment does not matter, "
#~ "and using ``$$var`` to access a "
#~ "variable's value refers to the existing"
#~ " value, if any, of the variable. "
#~ "Even if the variable is being "
#~ "reassigned, ``$$var`` would refer to the"
#~ " current and not the reassigned value"
#~ " in the assignment block."
#~ msgstr ""

#~ msgid ""
#~ "For example, the following :expression:`$let`"
#~ " expression is invalid since in the"
#~ " ``vars: { low: 1, high: \"$$low\""
#~ " }`` assignment block, ``\"$$low\"`` refers"
#~ " to the pre-assignment value of "
#~ "the variable ``low``, which is "
#~ "undefined:"
#~ msgstr ""

#~ msgid ""
#~ ":expression:`$let` can access variables "
#~ "defined outside its expression block, "
#~ "including :ref:`system variables <agg-"
#~ "system-variables>`. If you modify the "
#~ "values of externally defined variables "
#~ "in the ``vars`` block, the new "
#~ "values take effect only in the "
#~ "``in`` subexpression, and the variables "
#~ "retain to their previous values outside"
#~ " the ``in`` subexpression."
#~ msgstr ""

#~ msgid "Examples"
#~ msgstr ""

#~ msgid "Project Values Calculated Using Variables"
#~ msgstr ""

#~ msgid ""
#~ "The following aggregation uses "
#~ ":expression:`$let` in the the "
#~ ":pipeline:`$project` pipeline stage to "
#~ "calculate and return the ``finalTotal`` "
#~ "for each document:"
#~ msgstr ""

