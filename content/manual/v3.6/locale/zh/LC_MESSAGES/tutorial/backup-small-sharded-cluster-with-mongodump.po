#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/backup-small-sharded-cluster-with-mongodump.txt:3
msgid "Backup a Small Sharded Cluster with ``mongodump``"
msgstr ""

#: ../source/tutorial/backup-small-sharded-cluster-with-mongodump.txt:14
msgid "Overview"
msgstr ""

#: ../source/tutorial/backup-small-sharded-cluster-with-mongodump.txt:16
msgid ""
"If your :term:`sharded cluster` holds a small data set, you can connect to a"
" :program:`mongos` using :program:`mongodump`. You can create backups of "
"your MongoDB cluster, if your backup infrastructure can capture the entire "
"backup in a reasonable amount of time and if you have a storage system that "
"can hold the complete MongoDB data set."
msgstr ""

#: ../source/tutorial/backup-small-sharded-cluster-with-mongodump.txt:22
msgid ""
"See :doc:`/core/backups` and :doc:`/administration/backup-sharded-clusters` "
"for complete information on backups in MongoDB and backups of sharded "
"clusters in particular."
msgstr ""

#: ../source/tutorial/backup-small-sharded-cluster-with-mongodump.txt:28
msgid "Considerations"
msgstr ""

#: ../source/tutorial/backup-small-sharded-cluster-with-mongodump.txt:30
msgid ""
"If you use :program:`mongodump` without specifying a database or collection,"
" :program:`mongodump` will capture collection data *and* the cluster meta-"
"data from the :ref:`config servers <sharding-config-server>`."
msgstr ""

#: ../source/tutorial/backup-small-sharded-cluster-with-mongodump.txt:35
msgid ""
"You cannot use the :option:`--oplog <mongodump --oplog>` option for "
":program:`mongodump` when capturing data from :program:`mongos`. As a "
"result, if you need to capture a backup that reflects a single moment in "
"time, you must stop all writes to the cluster for the duration of the backup"
" operation."
msgstr ""

#: ../source/tutorial/backup-small-sharded-cluster-with-mongodump.txt:44
msgid "Procedure"
msgstr ""

#: ../source/tutorial/backup-small-sharded-cluster-with-mongodump.txt:47
msgid "Capture Data"
msgstr ""

#: ../source/tutorial/backup-small-sharded-cluster-with-mongodump.txt:49
msgid ""
"You can perform a backup of a :term:`sharded cluster` by connecting "
":program:`mongodump` to a :program:`mongos`. Use the following operation at "
"your system's prompt:"
msgstr ""

#: ../source/tutorial/backup-small-sharded-cluster-with-mongodump.txt:57
msgid ""
":program:`mongodump` will write :term:`BSON` files that hold a copy of data "
"stored in the :term:`sharded cluster` accessible via the :program:`mongos` "
"listening on port ``27017`` of the ``mongos3.example.net`` host."
msgstr ""

#: ../source/tutorial/backup-small-sharded-cluster-with-mongodump.txt:63
msgid "Restore Data"
msgstr ""

#: ../source/tutorial/backup-small-sharded-cluster-with-mongodump.txt:65
msgid ""
"Backups created with :program:`mongodump` do not reflect the chunks or the "
"distribution of data in the sharded collection or collections. Like all "
":program:`mongodump` output, these backups contain separate directories for "
"each database and :term:`BSON` files for each collection in that database."
msgstr ""

#: ../source/tutorial/backup-small-sharded-cluster-with-mongodump.txt:71
msgid ""
"You can restore :program:`mongodump` output to any MongoDB instance, "
"including a standalone, a :term:`replica set`,  or a new :term:`sharded "
"cluster`. When restoring data to sharded cluster, you must deploy and "
"configure sharding before restoring data from the backup. See "
":doc:`/tutorial/deploy-shard-cluster` for more information."
msgstr ""

#: ../source/tutorial/backup-small-sharded-cluster-with-mongodump.txt:0
msgid "On this page"
msgstr ""

#: ../source/includes/access-mongodump-collections.rst:1
msgid ""
"To run :program:`mongodump` against a MongoDB deployment that has "
":doc:`access control </core/authorization>` enabled, you must have "
"privileges that grant :authaction:`find` action for each database to back "
"up. The built-in :authrole:`backup` role provides the required privileges to"
" perform backup of any and all databases."
msgstr ""

#: ../source/includes/fact-required-access-for-backup-profiling.rst:3
msgid ""
"The :authrole:`backup` role provides additional privileges to back up the "
":data:`system.profile <<database>.system.profile>` collections that exist "
"when running with :ref:`database profiling <database-profiling>`. "
"Previously, users required an additional ``read`` access on this collection."
msgstr ""

#: ../source/includes/extracts/additional-resources-backup-tutorials.rst:4
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-backup-tutorials.rst:6
msgid "See also |mms-home| for seamless automation, backup, and monitoring."
msgstr ""

#~ msgid ""
#~ "By default :program:`mongodump` issue its queries to the non-primary nodes."
#~ msgstr ""

#~ msgid ""
#~ "To back up all the databases in a cluster via :program:`mongodump`, you "
#~ "should have the :authrole:`backup` role. The :authrole:`backup` role "
#~ "provides the required privileges for backing up all databases. The role "
#~ "confers no additional access, in keeping with the policy of :term:`least "
#~ "privilege`."
#~ msgstr ""

#~ msgid ""
#~ "To back up a given database, you must have ``read`` access on the database. "
#~ "Several roles provide this access, including the :authrole:`backup` role."
#~ msgstr ""

#~ msgid ""
#~ "To back up the :data:`system.profile <<database>.system.profile>` "
#~ "collection, which is created when you activate :ref:`database profiling "
#~ "<database-profiling>`, you must have **additional** ``read`` access on this "
#~ "collection. Several roles provide this access, including the "
#~ ":authrole:`clusterAdmin` and :authrole:`dbAdmin` roles."
#~ msgstr ""

#~ msgid ""
#~ "To back up users and :ref:`user-defined roles <user-defined-roles>` for a "
#~ "given database, you must have access to the ``admin`` database. MongoDB "
#~ "stores the user data and role definitions for all databases in the ``admin``"
#~ " database."
#~ msgstr ""

#~ msgid ""
#~ "Specifically, to back up a given database's users, you must have the "
#~ ":authaction:`find` :ref:`action <security-user-actions>` on the ``admin`` "
#~ "database's :data:`admin.system.users` collection. The :authrole:`backup` and"
#~ " :authrole:`userAdminAnyDatabase` roles both provide this privilege."
#~ msgstr ""

#~ msgid ""
#~ "To back up the user-defined roles on a database, you must have the "
#~ ":authaction:`find` action on the ``admin`` database's "
#~ ":data:`admin.system.roles` collection. Both the :authrole:`backup` and "
#~ ":authrole:`userAdminAnyDatabase` roles provide this privilege."
#~ msgstr ""
