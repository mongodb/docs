ref: deploy-replica-set-auth-schema-version
content: |
  - :guilabel:`Auth Schema Version`
  - Select the schema for storing the user for storing the user data for
    your deployment. If you are upgrading from a MongoDB version older
    than 3.0, MongoDB 3.0+ uses a different schema for user data
    than previous versions. For compatibility information, see the
    :manual:`Security Changes
    </release-notes/3.0-compatibility/#legacy-auth-model-removed>`
    in the MongoDB 3.0 release notes.
---
ref: deploy-replica-set-feature-compatibility-version
content: |
  - :guilabel:`Feature Compatibility Version`
  - Select the :dbcommand:`Feature Compatibility Version
    <setFeatureCompatibilityVersion>` of the deployment. This field
    only appears if your deployment runs MongoDB version 3.4 or later.
---
ref: deploy-replica-set-id
content: |
  - :guilabel:`Replica Set Id`
  - Enter the name of your replica set deployment. You cannot change
    this once set. This setting corresponds to the
    :rsconf:`_id <rsconf._id>` replica configuration option.
---
ref: deploy-replica-set-settings
content: |
  - :guilabel:`Replica Set Settings`
  - Displays an table of each process associated with the replica
    set. You can configure the MongoDB server version, data directory,
    and log path of each process.

---
ref: deploy-process-name
content: |

  - :guilabel:`Process Name`
  - Hostname and port of a |mongod| process. This hostname can be a
    hostname, an |fqdn|, an |ipv4| address, or an |ipv6| address. |mms|
    initially groups each process under the replica set name. Click the
    :icon:`caret-right` to the left of the replica set name to display
    all |mongod| processes in the replica set.

    |mms| applies any settings configured for the replica set to all
    of its associated processes.

---
ref: deploy-version
content: |

  - :guilabel:`Version`
  - Select the MongoDB server version of the {{PROCESS}} process.

replacement:
  PROCESS: ":binary:`~bin.mongod`"
---
ref: deploy-data-directory
content: |

  - :guilabel:`Data Directory`
  - Specify the directory where the :binary:`~bin.mongod` process stores
    data files. This setting corresponds to the
    :setting:`storage.dbPath` :binary:`~bin.mongod` configuration file
    option. The |mms| {+aagent+} must have file system permission
    to read, write, and execute all files and folders in the
    specified directory.

    Each :binary:`~bin.mongod` process must have its own database
    directory. If deploying multiple :binary:`~bin.mongod`
    processes on the same host, ensure each process has its own
    distinct directory.

---
ref: deploy-log-file
content: |
  - :guilabel:`Log File`
  - Specify the full path to the {{PROCESS}} log file, including the
    log file name and extension. This setting corresponds to the
    :setting:`systemLog.path` configuration file option. The
    {{PROCESS}} must have permission to read and write to the
    specified file.

    .. example::

       Specifying ``/var/log/mongodb/mongo.log`` directs the
       {{PROCESS}} to store its logfile to ``/var/log/mongodb/`` as
       ``mongo.log``.

    The {{PROCESS}} have its own unique log file. If deploying multiple
    {{PROCESS}} processes to the same host, ensure each {{PROCESS}} has
    its own distinct logfile.
replacement:
  PROCESS: ":binary:`~bin.mongod`"
---
ref: deploy-member-configuration-member
content: |

  - :guilabel:`Member`
  - Select one of the following replica set member roles from the
    menu:

    - ``Default``

      A data-bearing member of the replica set that can
      become the :term:`primary` and vote in elections.

    - :manual:`Arbiter </core/replica-set-arbiter>`

      A non-data bearing member of the replica set that can
      vote in elections. Corresponds to the
      :rsconf:`arbiterOnly <rsconf.members[n].arbiterOnly>`
      replica configuration option.

    - :manual:`Hidden </core/replica-set-hidden-member>`

      A data-bearing member of the replica set that can vote
      in elections. Corresponds to the
      :rsconf:`hidden <rsconf.members[n].hidden>`
      replica configuration option.

    - :manual:`Delayed Hidden </core/replica-set-delayed-member>`

      A data-bearing member of the replica set that can vote in
      elections. Corresponds to the
      :rsconf:`slaveDelay <rsconf.members[n].slaveDelay>`
      and :rsconf:`hidden <rsconf.members[n].hidden>`
      replica configuration options.

---
ref: deploy-member-configuration-hostname
content: |

  - :guilabel:`Hostname`
  - Select from the menu the host to which |mms| Automation deploys the
    {{PROCESS}}. The menu only lists hosts under |mms| Automation.
    For complete documentation on adding servers to |mms| Automation,
    see :doc:`/tutorial/add-servers-automation/`.

    This hostname can be a hostname, an |fqdn|, an |ipv4| address, or
    an |ipv6| address.
replacement:
  PROCESS: "replica set member"
---
ref: deploy-member-configuration-port
content: |
  - :guilabel:`Port`
  - Specify the |iana| port
    number for the {{PROCESS}} process. This setting
    corresponds to the :setting:`net.port`
    configuration file option. Defaults to ``27017``.

    The {{PROCESS}} must have exclusive access to the specified port.
    If deploying multiple {{PROCESS}} processes to a single host,
    you must select a unique unused port for each process.

replacement:
  PROCESS: ":binary:`~bin.mongod`"
---
ref: deploy-member-configuration-votes
content: |
  - :guilabel:`Votes`
  - Specify the number of votes that the replica set member has during
    elections. This setting corresponds to the
    :rsconf:`votes <rsconf.members[n].votes>` :binary:`~bin.mongod`
    replica set configuration option.
---
ref: deploy-member-configuration-priority
content: |
  - :guilabel:`Priority`
  - Specify the priority of the member during elections. Replica set
    members with a priority of ``0`` cannot become the :term:`primary`
    and cannot trigger elections. This setting
    corresponds to the
    :rsconf:`priority <rsconf.members[n].votes>`
    :binary:`~bin.mongod` replica set configuration option.

---
ref: deploy-member-configuration-delay
content: |
  - :guilabel:`Delay`
  - Specify the number of seconds "behind" the primary member this
    member should "lag". This setting corresponds to the
    :rsconf:`slaveDelay <rsconf.members[n].slaveDelay>`
    :binary:`~bin.mongod` replica set configuration option.

---
ref: deploy-member-configuration-build-indexes
content: |
  - :guilabel:`Build Indexes`
  - Specify ``true`` to direct the :binary:`~bin.mongod` to build
    :manual:`indexes </indexes>`. This setting
    corresponds to the
    :rsconf:`buildIndexes <rsconf.members[n].buildIndexes>`
    :binary:`~bin.mongod` replica set configuration option.
---
ref: deploy-member-configuration-tags
content: |
  - :guilabel:`Tags`
  - Specify the tag or tags associated to the replica set.
    This setting corresponds to the
    :rsconf:`tags <rsconf.members[n].tags>`
    :binary:`~bin.mongod` replica set configuration option.

    For complete documentation on replica set tags, see
    :manual:`Replica Set Tags </tutorial/configure-replica-set-tag-sets/>`

---
ref: deploy-member-configuration-add-mongod
content: |
  - :guilabel:`Add a Mongod`
  - Adds an additional :binary:`~bin.mongod` process as a replica set
    member.

    Adding a new :binary:`~bin.mongod` process also updates the
    list of processes in the {{CLUSTERCONFIGURATION}} section.
    You must configure the :guilabel:`Version`,
    :guilabel:`Data Directory`, and :guilabel:`Log File` of the new
    process.
replacement:
  CLUSTERCONFIGURATION: ":guilabel:`Replica Set Configuration`"
---
ref: deploy-member-replication-protocol-version
content: |
  - :guilabel:`Protocol Version`
  - Select the replication protocol version used by the replica set.
    This setting corresponds to the
    :rsconf:`protocolVersion <rsconf.protocolVersion>`
    replica set configuration option.

    For more information, see :manual:`Replica Set Protocol Versions
    </reference/replica-set-protocol-versions/>`.
---
ref: deploy-member-replication-chaining-allowed
content: |
  - :guilabel:`Chaining Allowed`
  - Specify ``true`` to allow :term:`secondary`
    members to replicate from other secondary members. This setting
    corresponds to the
    :rsconf:`chainingAllowed <rsconf.settings.chainingAllowed>`
    replica set configuration option.
---
ref: deploy-member-replication-write-concern-majority-journal-default
content: |
  - :guilabel:`Write Concern Majority Journal Default`
  - Determines the behavior of
    :writeconcern:`{w:"majority"} <writeconcern."majority">`
    write concern if the write concern does not explicitly
    specify the journal option
    :writeconcern:`j <writeconcern.j>`. This setting corresponds to the
    :rsconf:`writeConcernMajorityJournalDefault
    <rsconf.writeConcernMajorityJournalDefault>`
    replica set configuration option.
---
ref: deploy-member-replication-heartbeat-timeouts
content: |
  - :guilabel:`Heartbeat Timeout (secs)`
  - Specify the number of seconds that the replica set members wait for
    a successful heartbeat from each other. This setting corresponds to
    the :rsconf:`heartbeatTimeoutSecs
    <rsconf.settings.heartbeatTimeoutSecs>`
    replica set configuration option.
---
ref: deploy-member-replication-election-timeout
content: |
  - :guilabel:`Election Timeout (ms)`
  - Specify the time limit in milliseconds for detecting when a replica
    set's :term:`primary` is unreachable. This setting corresponds to
    the :rsconf:`electionTimeoutMillis
    <rsconf.settings.electionTimeoutMillis>`
    replica set configuration option.
---
ref: deploy-member-replication-catch-up-timeout
content: |
  - :guilabel:`CatchUp Timeout (ms)`
  - Specify the time limit in milliseconds for a newly elected
    :term:`primary` to sync, or catch up, with the other replica
    set members that may have more recent writes. This setting
    corresponds to the
    :rsconf:`catchUpTimeoutMillis
    <rsconf.settings.catchUpTimeoutMillis>`
    replica set configuration option.
---
ref: deploy-member-replication-catch-up-takeover-delay
content: |
  - :guilabel:`CatchUp Takeover Delay (ms)`
  - Specify the time in milliseconds a node waits to initiate a
    *catchup takeover* after determining it is ahead of the
    current :term:`primary`. This setting corresponds to the
    :rsconf:`catchUpTakeoverDelayMillis
    <rsconf.settings.catchUpTakeoverDelayMillis>`
    replica set configuration option.
---
ref: deploy-member-replication-last-error-defaults
content: |
  - :guilabel:`Last Error Defaults`
  - Specify the default :manual:`write concern
    </manual/core/replica-set-write-concern/>` for the replica set. The
    replica set uses this write concern only when write operations or
    :manual:`getLastError </reference/command/getLastError/>` specify
    no other write concern.

    If this option is not set, the default write concern for the
    replica set only requires confirmation from the :term:`primary`.

    Specify this option in the form of a document, i.e., ``{"w":2}``.
...
