# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: 2014-04-08 18:39+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/tutorial/resync-replica-set-member.txt:5
msgid "Resync a Member of a Replica Set"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:15
msgid ""
"A :term:`replica set` member becomes \"stale\" when its replication "
"process falls so far behind that the :term:`primary` overwrites oplog "
"entries the member has not yet replicated. The member cannot catch up and"
" becomes \"stale.\" When this occurs, you must completely resynchronize "
"the member by removing its data and performing an :ref:`initial sync "
"<replica-set-initial-sync>`."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:22
msgid ""
"This tutorial addresses both resyncing a stale member and creating a new "
"member using seed data from another member. When syncing a member, choose"
" a time when the system has the bandwidth to move a large amount of data."
" Schedule the synchronization during a time of low usage or during a "
"maintenance window."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:28
msgid "MongoDB provides two options for performing an initial sync:"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:30
msgid ""
"Restart the :binary:`~bin.mongod` with an empty data directory and let "
"MongoDB's normal initial syncing feature restore the data. This is the "
"more simple option but may take longer to replace the data."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:34
msgid "See :ref:`replica-set-auto-resync-stale-member`."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:36
msgid ""
"Restart the machine with a copy of a recent data directory from another "
"member in the replica set. This procedure can replace the data more "
"quickly but requires more manual steps."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:40
msgid "See :ref:`replica-set-resync-by-copying`."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:46
msgid "Procedures"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:51
msgid "Automatically Sync a Member"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:55
msgid ""
"During initial sync, :binary:`~bin.mongod` removes the contents of the "
":setting:`~storage.dbPath` directory."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:58
msgid ""
"This procedure relies on MongoDB's regular process for :doc:`Replica Set "
"Syncing </core/replica-set-sync>`. This stores the current data on the "
"member. For an overview of MongoDB initial sync process, see the "
":doc:`Replica Set Syncing </core/replica-set-sync>` section."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:63
msgid ""
"Initial sync operations can impact the other members of the set and "
"create additional traffic to the primary. The syncing member requires "
"another member of the set that is accessible and up to date."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:67
msgid ""
"If the instance has no data, you can follow the :doc:`/tutorial/expand-"
"replica-set` or :doc:`/tutorial/replace-replica-set-member` procedure to "
"add a new member to a replica set."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:72
msgid ""
"You can also force a :binary:`~bin.mongod` that is already a member of "
"the set to perform an initial sync by restarting the instance without the"
" contents of the :setting:`~storage.dbPath` directory:"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:76
msgid ""
"Stop the member's :binary:`~bin.mongod` instance. To ensure a clean "
"shutdown, use the :method:`db.shutdownServer()` method from the "
":binary:`~bin.mongo` shell or on Linux systems, the :option:`mongod "
"--shutdown` option."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:81
msgid ""
"Delete all data and sub-directories from the member's "
":setting:`~storage.dbPath` directory. Consider making a backup first."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:84
msgid ""
":doc:`Start the mongod process </tutorial/manage-mongodb-processes>`, "
"specifying :ref:`cli-mongod-replica-set` as appropriate."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:87
msgid ""
"At this point, the :binary:`~bin.mongod` performs an initial sync. The "
"length of the initial sync process depends on the size of the database "
"and the network latency between members of the replica set."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:95
msgid "Sync by Copying Data Files from Another Member"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:97
msgid ""
"This approach \"seeds\" a new or stale member using the data files from "
"an existing member of the replica set. The data files **must** be "
"sufficiently recent to allow the new member to catch up with the "
":term:`oplog`. Otherwise the member would need to perform an initial "
"sync."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:104
msgid "Copy the Data Files"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:106
msgid ""
"You can capture the data files as either a snapshot or a direct copy. "
"However, in most cases you cannot copy data files from a running "
":binary:`~bin.mongod` instance to another because the data files will "
"change during the file copy operation."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:111
msgid ""
"If copying data files, ensure that your copy includes the content of the "
"``local`` database."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:114
msgid ""
"You *cannot* use a :binary:`~bin.mongodump` backup for the data files: "
"**only a snapshot backup**. For approaches to capturing a consistent "
"snapshot of a running :binary:`~bin.mongod` instance, see the "
":doc:`/core/backups` documentation."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:120
msgid "Sync the Member"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:122
msgid ""
"After you have copied the data files from the \"seed\" source, start the "
":binary:`~bin.mongod` instance and allow it to apply all operations from "
"the oplog until it reflects the current state of the replica set."
msgstr ""

# 5777b25013544c5f9f45f6463c62986a
#~ msgid ""
#~ "This tutorial addressed both resyncing a"
#~ " stale member and to creating a "
#~ "new member using seed data from "
#~ "another member. When syncing a member,"
#~ " choose a time when the system "
#~ "has the bandwidth to move a large"
#~ " amount of data. Schedule the "
#~ "synchronization during a time of low "
#~ "usage or during a maintenance window."
#~ msgstr ""

# fefd6f8deca54426b90a7b9f789bda5f
#~ msgid ""
#~ "Restart the :program:`mongod` with an "
#~ "empty data directory and let MongoDB's"
#~ " normal initial syncing feature restore "
#~ "the data. This is the more simple"
#~ " option but may take longer to "
#~ "replace the data."
#~ msgstr ""

# 91c5bdec441542f696f940da3c3dfa0a
#~ msgid ""
#~ "During initial sync, :program:`mongod` will"
#~ " remove the content of the "
#~ ":setting:`~storage.dbPath`."
#~ msgstr ""

# 66a55b6a9f744a44b3d198d9fe9e2ed4
#~ msgid ""
#~ "This procedure relies on MongoDB's "
#~ "regular process for :ref:`initial sync "
#~ "<replica-set-initial-sync>`. This will "
#~ "store the current data on the "
#~ "member. For an overview of MongoDB "
#~ "initial sync process, see the :ref"
#~ ":`replica-set-syncing` section."
#~ msgstr ""

# 82e6063ec38f4f19be40612478ea8bef
#~ msgid ""
#~ "If the instance has no data, you"
#~ " can simply follow the :doc:`/tutorial"
#~ "/expand-replica-set` or :doc:`/tutorial"
#~ "/replace-replica-set-member` procedure to"
#~ " add a new member to a replica"
#~ " set."
#~ msgstr ""

# d44dd6e6d1de48b29ce58bd501820cd0
#~ msgid ""
#~ "You can also force a :program:`mongod`"
#~ " that is already a member of "
#~ "the set to to perform an initial"
#~ " sync by restarting the instance "
#~ "without the content of the "
#~ ":setting:`~storage.dbPath` as follows:"
#~ msgstr ""

# 15420ed0cbe443948a71dc92b8b45aae
#~ msgid ""
#~ "Stop the member's :program:`mongod` instance."
#~ " To ensure a clean shutdown, use "
#~ "the :method:`db.shutdownServer()` method from "
#~ "the :program:`mongo` shell or on Linux"
#~ " systems, the :option:`mongod --shutdown` "
#~ "option."
#~ msgstr ""

# f0d84839f0904f50bce660af65a48643
#~ msgid ""
#~ "Delete all data and sub-directories "
#~ "from the member's data directory. By "
#~ "removing the data :setting:`~storage.dbPath`, "
#~ "MongoDB will perform a complete resync."
#~ " Consider making a backup first."
#~ msgstr ""

# 8a3194ee8698456196e4ff38d2f07b08
#~ msgid ""
#~ "At this point, the :program:`mongod` "
#~ "will perform an initial sync. The "
#~ "length of the initial sync process "
#~ "depends on the size of the "
#~ "database and network connection between "
#~ "members of the replica set."
#~ msgstr ""

# 680f00de076a4cb79d3620832dfa903f
#~ msgid ""
#~ "Initial sync operations can impact the"
#~ " other members of the set and "
#~ "create additional traffic to the primary"
#~ " and can only occur if another "
#~ "member of the set is accessible "
#~ "and up to date."
#~ msgstr ""

# d9d74cd04d69423990e66854040f5e5c
#~ msgid ""
#~ "You can capture the data files as"
#~ " either a snapshot or a direct "
#~ "copy. However, in most cases you "
#~ "cannot copy data files from a "
#~ "running :program:`mongod` instance to another"
#~ " because the data files will change"
#~ " during the file copy operation."
#~ msgstr ""

# 86a67d883cb44564a8f5668aabb6fbc8
#~ msgid ""
#~ "If copying data files, you must "
#~ "copy the content of the ``local`` "
#~ "database."
#~ msgstr ""

# db6650e6c286473d8a35b6d438ccb7c0
#~ msgid ""
#~ "You *cannot* use a :program:`mongodump` "
#~ "backup to for the data files, "
#~ "**only a snapshot backup**. For "
#~ "approaches to capture a consistent "
#~ "snapshot of a running :program:`mongod` "
#~ "instance, see the :doc:`/core/backups` "
#~ "documentation."
#~ msgstr ""

# 59be58db884b4e86a4128368c8319b20
#~ msgid ""
#~ "After you have copied the data "
#~ "files from the \"seed\" source, start"
#~ " the :program:`mongod` instance and allow"
#~ " it to apply all operations from "
#~ "the oplog until it reflects the "
#~ "current state of the replica set."
#~ msgstr ""

# 9f2e63e6625d4409b357ea8f3507f1e0
# e61333d46731479a969b4914bce89147
# 0c99e73ec2114bec93f90c3e8882f0da
#~ msgid "replica set"
#~ msgstr ""

# 9f2e63e6625d4409b357ea8f3507f1e0
#~ msgid "sync"
#~ msgstr ""

# e61333d46731479a969b4914bce89147
# 0c99e73ec2114bec93f90c3e8882f0da
#~ msgid "resync"
#~ msgstr ""

