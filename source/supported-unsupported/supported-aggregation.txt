.. _data-lake-agg-support:

===================================================
Supported Aggregation Pipeline Stages and Operators 
===================================================

This page describes the MongoDB :manual:`aggregation </aggregation/>` 
pipeline :manual:`stages </reference/operator/aggregation-pipeline/>` 
and :manual:`operators </reference/operator/aggregation/>` that {+adl+} 
supports.

.. note:: 

   .. include:: /includes/fact-doc-order-in-query-result.rst

.. _supported-stages:

Supported and Unsupported Aggregation Pipeline Stages 
-----------------------------------------------------

{+adl+} supports all the aggregation pipeline stages except the 
following: 

- :pipeline:`$indexStats`	
- :pipeline:`$listSessions`	
- :pipeline:`$listLocalSessions`
- :pipeline:`$merge`	
- :pipeline:`$planCacheStats`

For the following stages in {+adl+} queries, {+adl+} introduces an 
alternate syntax, includes a caveat, or deviates from :manual:`server 
</reference/operator/aggregation-pipeline/>`. See the *Description* 
column for details.

.. list-table:: 
   :header-rows: 1
   :widths: 30 70

   * - Pipeline Stage 
     - Description

   * - :pipeline:`$geoNear` 
     - Outputs documents in order of nearest to farthest from a 
       specified point. {+adl+} supports :pipeline:`$geoNear` in 
       queries on {+dl+} collections that are mapped to one or more 
       |service| collections. {+adl+} doesn't support 
       :pipeline:`$geoNear` for |s3| or |http| {+data-lake-stores+}.
       
       See :ref:`query-atlas` for more information. 

   * - :pipeline:`$graphLookup` 
     - Performs a recursive search on a collection. {+adl+} supports 
       :pipeline:`$graphLookup` in queries on {+dl+} collections 
       that are mapped to one |service| collection only. {+adl+} 
       doesn't support :pipeline:`$graphLookup` for:

       - |s3| or |http| {+data-lake-stores+}.
       - Queries on {+dl+} collections that are mapped to multiple 
         |service| collections.
       
       See :ref:`query-atlas` for more information. 

   * - :pipeline:`$lookup`
     - Performs a left outer join to a collection in the same database. 
       {+adl+} provides syntax for joining collections from different 
       databases also. See :ref:`adl-lookup-stage` for more information.

   * - :pipeline:`$match` 
     - Filters the documents to pass only the documents that match the 
       specified condition(s) to the next pipeline stage. {+adl+} 
       supports :pipeline:`$match`. Note that the :ref:`partition 
       attributes <datalake-path-attribute-types>` for selecting 
       specific files on |s3| are only optimized for the following 
       :manual:`aggregation pipeline operators 
       </reference/operator/aggregation/>`: :manual:`$eq 
       </reference/operator/aggregation/eq/>`, :manual:`$gt 
       </reference/operator/aggregation/gt/>`, :manual:`$lt 
       </reference/operator/aggregation/lt/>`, :manual:`$gte 
       </reference/operator/aggregation/gte/>`, :manual:`$lte 
       </reference/operator/aggregation/lte/>`, :manual:`$ne 
       </reference/operator/aggregation/ne/>`, :manual:`$and 
       </reference/operator/aggregation/and/>`, :manual:`$or 
       </reference/operator/aggregation/or/>`.

   * - :pipeline:`$out`
     - Takes the documents returned by the aggregation pipeline and 
       writes them to a specified collection. {+adl+} provides 
       alternate syntax for writing to |s3| and |service| cluster. See 
       :ref:`adl-out-stage` for more information.

   * - :pipeline:`$sample` 
     - Randomly selects the specified number of documents from its 
       input. {+adl+} supports ``$sample``, but does not provide a 
       truly random sample and returns the first set of documents that 
       it finds. 

   * - :pipeline:`$skip` 
     - Skips over the specified number of documents that pass into the 
       stage and passes the remaining documents to the next stage in 
       the pipeline. {+adl+} supports ``$skip``, but this does not 
       reduce data scan because {+dl+} accesses all partitions that 
       correspond to your query. 

.. _supported-operators:

Supported Aggregation Pipeline Operators
----------------------------------------

{+adl+} supports all the aggregation pipeline operators. However, 
{+adl+} supports all the :manual:`geospatial query operators 
</reference/operator/query-geospatial/>` and the following 
:manual:`evaluation query operators 
</reference/operator/query-evaluation/>` only in queries on 
collections that are mapped to an |service| cluster data store. 

.. note:: 

   {+adl+} doesn't include a server-side JavaScript engine. So, {+adl+} 
   doesn't support operators such as :manual:`$where 
   </reference/operator/query/where/>`, :manual:`$function 
   </reference/operator/aggregation/function/>`, and 
   :manual:`$accumulator 
   </reference/operator/aggregation/accumulator/>` that require 
   server-side scripting :manual:`enabled 
   </reference/operator/query/where/#javascript-enablement>`.

.. list-table:: 
   :header-rows: 1
   :widths: 30 70

   * - Pipeline Stage 
     - Description

   * - :manual:`$text </reference/operator/query/text/>`
     - Performs a text search on the content of the fields indexed with 
       a text index.

   * - :manual:`$where </reference/operator/query/where/>`
     - Passes either a string containing a JavaScript expression or a 
       full JavaScript function to the query system. 
