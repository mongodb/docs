# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:3
# 4061a454145a45db988ee597916fbcdd
msgid "Backup and Restore with Filesystem Snapshots"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:7
# 8c70575a9a044942856f7a3363861621
msgid "This document describes a procedure for creating backups of MongoDB systems using system-level tools, such as :term:`LVM` or storage appliance, as well as the corresponding restoration strategies."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:11
# fdc2a1f7bdfd44158720d05b2064f60a
msgid "These filesystem snapshots, or \"block-level\" backup methods use system level tools to create copies of the device that holds MongoDB's data files. These methods complete quickly and work reliably, but require more system configuration outside of MongoDB."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:16
# a63c547fe2264cd1a6ff5657c2fd16e7
msgid ":doc:`/core/backups` and :doc:`/tutorial/backup-with-mongodump`."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:22
# c64eb16087e743d28ea7fbffb3a67b20
msgid "Snapshots Overview"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:24
# a00497471f8c487f9fd9aa11761cb2c3
msgid "Snapshots work by creating pointers between the live data and a special snapshot volume. These pointers are theoretically equivalent to \"hard links.\" As the working data diverges from the snapshot, the snapshot process uses a copy-on-write strategy. As a result the snapshot only stores modified data."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:30
# f828107b226b4e15ac7d9c5a22dd39e4
msgid "After making the snapshot, you mount the snapshot image on your file system and copy data from the snapshot. The resulting backup contains a full copy of all data."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:34
# 85bc38db7089450984230cfe4baa5878
msgid "Snapshots have the following limitations:"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:36
# 82beafc874284482b4065ca4ee0002a2
msgid "The database must be valid when the snapshot takes place. This means that all writes accepted by the database need to be fully written to disk: either to the :term:`journal` or to data files."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:41
# 2d67a92012214c149a6fbd199ce5d543
msgid "If all writes are not on disk when the backup occurs, the backup will not reflect these changes. If writes are *in progress* when the backup occurs, the data files will reflect an inconsistent state. With :term:`journaling <journal>` all data-file states resulting from in-progress writes are recoverable; without journaling you must flush all pending writes to disk before running the backup operation and must ensure that no writes occur during the entire backup procedure."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:50
# 2db8a43d184b4c5f8491f47b000f2453
msgid "If you do use journaling, the journal **must** reside on the same volume as the data."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:53
# 563e4404b3ca4c6196761d4aca9f4087
msgid "Snapshots create an image of an entire disk image. Unless you need to back up your entire system, consider isolating your MongoDB data files, journal (if applicable), and configuration on one logical disk that doesn't contain any other data."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:58
# 7e81efa3a1324477b7a5bdbda7269406
msgid "Alternately, store all MongoDB data files on a dedicated device so that you can make backups without duplicating extraneous data."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:61
# 1ae96dfa9ddb4ebea7c78c1aa50630fd
msgid "Ensure that you copy data from snapshots and onto other systems to ensure that data is safe from site failures."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:64
# cb25c490326c49319593b639cc3b08dc
msgid "Although different snapshots methods provide different capability, the LVM method outlined below does not provide any capacity for capturing incremental backups."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:71
# aeb025aff0314f018ee0c95c57191f1a
msgid "Snapshots With Journaling"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:73
# c403fc0d936a4494bdcf744814dc84a1
msgid "If your :program:`mongod` instance has journaling enabled, then you can use any kind of file system or volume/block level snapshot tool to create backups."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:77
# d59fed79c061423aa87cdd1e6aa62af4
msgid "If you manage your own infrastructure on a Linux-based system, configure your system with :term:`LVM` to provide your disk packages and provide snapshot capability. You can also use LVM-based setups *within* a cloud/virtualized environment."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:84
# b2fd5f83cfec4bf2a70e6c74b103507a
msgid "Running :term:`LVM` provides additional flexibility and enables the possibility of using snapshots to back up MongoDB."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:88
# 2d4acdbd728d49adb0b36c83ef873c45
msgid "Snapshots with Amazon EBS in a RAID 10 Configuration"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:90
# e9c5e057bece4013952dd691dea7985e
msgid "If your deployment depends on Amazon's Elastic Block Storage (EBS) with RAID configured within your instance, it is impossible to get a consistent state across all disks using the platform's snapshot tool. As an alternative, you can do one of the following:"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:95
# 3daa7f0d6b124b8583dcff774e867397
msgid "Flush all writes to disk and create a write lock to ensure consistent state during the backup process."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:98
# 9cf4c813ff744f3d8c85a5684bda5f7a
msgid "If you choose this option see :ref:`backup-without-journaling`."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:100
# 5cba30b8b2864ab89231fb604a52e8c2
msgid "Configure :term:`LVM` to run and hold your MongoDB data files on top of the RAID within your system."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:103
# 2ae56659cf8848af81fe4cfab4dd5051
msgid "If you choose this option, perform the LVM backup operation described in :ref:`lvm-backup-operation`."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:109
# a9d0da45ad1140e68b41fa29560ac671
msgid "Backup and Restore Using LVM on a Linux System"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:111
# 67eb32d8b00546308c65d1a139176581
msgid "This section provides an overview of a simple backup process using :term:`LVM` on a Linux system. While the tools, commands, and paths may be (slightly) different on your system the following steps provide a high level overview of the backup operation."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:118
# a93ffd202ecf4c4f9027c042d5575090
msgid "Only use the following procedure as a guideline for a backup system and infrastructure. Production backup systems must consider a number of application specific requirements and factors unique to specific environments."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:126
# ae207a4d10da463d95b923b8ab9d89a4
msgid "Create a Snapshot"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:128
# a84ce1084af5492fa217d8de73b8f289
msgid "To create a snapshot with :term:`LVM`, issue a command as root in the following format:"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:135
# e038282e0bd44d20a092f36b8ccb019a
msgid "This command creates an :term:`LVM` snapshot (with the ``--snapshot`` option) named ``mdb-snap01`` of the ``mongodb`` volume in the ``vg0`` volume group."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:139
# 5ee2e7713a114f668bd905bf2b8d9daa
msgid "This example creates a snapshot named ``mdb-snap01`` located at ``/dev/vg0/mdb-snap01``. The location and paths to your systems volume groups and devices may vary slightly depending on your operating system's :term:`LVM` configuration."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:144
# 997b7873a0d4401da7bcb3ecd76fb0e5
msgid "The snapshot has a cap of at 100 megabytes, because of the parameter ``--size 100M``. This size does not reflect the total amount of the data on the disk, but rather the quantity of differences between the current state of ``/dev/vg0/mongodb`` and the creation of the snapshot (i.e. ``/dev/vg0/mdb-snap01``.)"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:152
# 9bf032502dbd43e8b8435c87b2dad8cc
msgid "Ensure that you create snapshots with enough space to account for data growth, particularly for the period of time that it takes to copy data out of the system or to a temporary image."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:156
# 31bece11a0f24263a596ac89c2ca0692
msgid "If your snapshot runs out of space, the snapshot image becomes unusable. Discard this logical volume and create another."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:159
# fd22967c69334da1a044f6460238ba94
msgid "The snapshot will exist when the command returns. You can restore directly from the snapshot at any time or by creating a new logical volume and restoring from this snapshot to the alternate image."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:163
# efdb6a605edc43eba135beb2f49483d4
msgid "While snapshots are great for creating high quality backups very quickly, they are not ideal as a format for storing backup data. Snapshots typically depend and reside on the same storage infrastructure as the original disk images. Therefore, it's crucial that you archive these snapshots and store them elsewhere."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:170
# 4c4fcd4efe2847c79bbf7259a322dd1a
msgid "Archive a Snapshot"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:172
# 69a34ea6af694eba92daa597b99d61df
msgid "After creating a snapshot, mount the snapshot and copy the data to separate storage. Your system might try to compress the backup images as you move the offline. Alternatively, take a block level copy of the snapshot image, such as with the following procedure:"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:182
# ecd89ff9930443e08b4231ecdb87b3fc
msgid "The above command sequence does the following:"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:184
# 3d984f1df05749fdb83414c1856599d0
msgid "Ensures that the ``/dev/vg0/mdb-snap01`` device is not mounted.  Never take a block level copy of a filesystem or filesystem snapshot that is mounted."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:188
# 0bb430f3b5044b658d7095fe6ce33ad4
msgid "Performs a block level copy of the entire snapshot image using the ``dd`` command and compresses the result in a gzipped file in the current working directory."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:194
# 45157269f0d34082a7428a0bbfe55046
msgid "This command will create a large ``gz`` file in your current working directory. Make sure that you run this command in a file system that has enough free space."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:201
# 71bb0a1940f74f7f8300e32e7a94e9b2
msgid "Restore a Snapshot"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:203
# a3391d596c0d47268131ad92b8d40810
msgid "To restore a snapshot created with the above method, issue the following sequence of commands:"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:212
# 7aef49bbac7a4514a866183898f45063
msgid "The above sequence does the following:"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:214
# 2a9e8d6a5916409db09efde96a7a7a24
msgid "Creates a new logical volume named ``mdb-new``, in the ``/dev/vg0`` volume group. The path to the new device will be ``/dev/vg0/mdb-new``."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:219
# e393512b609c478690c2d6ff9be921c1
msgid "This volume will have a maximum size of 1 gigabyte. The original file system must have had a total size of 1 gigabyte or smaller, or else the restoration will fail."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:223
# c48abd05e4494274871b49ea4ce08768
msgid "Change ``1G`` to your desired volume size."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:225
# 83fd1b7e4ca64e22a5e71f7dd217e9fd
msgid "Uncompresses and unarchives the ``mdb-snap01.gz`` into the ``mdb-new`` disk image."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:228
# ddbcb5c5e6604ab594435193d2aec1de
msgid "Mounts the ``mdb-new`` disk image to the ``/srv/mongodb`` directory. Modify the mount point to correspond to your MongoDB data file location, or other location as needed."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:234
# 0af4467aebc44807ad08ea2beea474ea
msgid "The restored snapshot will have a stale ``mongod.lock`` file. If you do not remove this file from the snapshot, and MongoDB may assume that the stale lock file indicates an unclean shutdown. If you're running with :setting:`storage.journal.enabled` enabled, and you *do not* use :method:`db.fsyncLock()`, you do not need to remove the ``mongod.lock`` file. If you use :method:`db.fsyncLock()` you will need to remove the lock."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:245
# ccec6d1189124d4ba584cb249ecfbef8
msgid "Restore Directly from a Snapshot"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:247
# 332016dfd24741e28204ee3d984daefe
msgid "To restore a backup without writing to a compressed ``gz`` file, use the following sequence of commands:"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:258
# 69686d246c0a404aa3c6a98d74915185
msgid "Remote Backup Storage"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:260
# b2889cb688734059bd80cc15c9f4dde0
msgid "You can implement off-system backups using the :ref:`combined process <backup-restore-from-snapshot>` and SSH."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:263
# 782933054081493ab8fe20ce1293babf
msgid "This sequence is identical to procedures explained above, except that it archives and compresses the backup on a remote system using SSH."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:266
# 789f1183c8bf41529b8167bc52d5ef18
msgid "Consider the following procedure:"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:279
# b88c70835c8c42eb8225d2dd48353875
msgid "Create Backups on Instances that do not have Journaling Enabled"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:281
# 91a40987d4884aa99f3edf4c4ba92cd6
msgid "If your :program:`mongod` instance does not run with journaling enabled, or if your journal is on a separate volume, obtaining a functional backup of a consistent state is more complicated. As described in this section, you must flush all writes to disk and lock the database to prevent writes during the backup process. If you have a :term:`replica set` configuration, then for your backup use a :term:`secondary` which is not receiving reads (i.e. :term:`hidden member`)."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:293
# 33fea3a356704647a9dc82ba47f19ba5
msgid "This procedure is only supported with the MMAPv1 storage engine."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:295
# 43c93e29361d41159696074bf7fc13d9
msgid "In the following procedure, you **must** issue the :method:`db.fsyncLock()` and :method:`db.fsyncUnlock()` operations on the same connection. The client that issues :method:`db.fsyncLock()` is solely responsible for issuing a :method:`db.fsyncUnlock()` operation and must be able to handle potential error conditions so that it can perform the :method:`db.fsyncUnlock()` before terminating the connection."
msgstr ""

