==================================================
Configure MongoDB Authentication and Authorization
==================================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. include:: /includes/styles/corrections.rst

Your MongoDB deployments can use the access control mechanisms
described here. You specify the authentication settings when
:doc:`adding </tutorial/add-existing-mongodb-processes>` the
deployment. You can also edit the security settings after adding a
deployment, as described on this page.

If a deployment uses access control, Monitoring and Backup must
authenticate to the deployment as MongoDB users with appropriate
access. If you are using the {+mdbagent-wa+} to manage your MongoDB
deployments, you will enable and configure authentication through the
|application|.

If you are not using the {+mdbagent-wa+} to manage your MongoDB
deployments, you must activate and configure Monitoring and Backups.

Considerations
--------------

With access control enabled, you must
:doc:`create MongoDB users </tutorial/manage-mongodb-users>` so that
clients can access your databases.

If you are using the {+mdbagent-wa+} to manage your MongoDB
deployments, |mms| automatically creates users for the agents when you
enable access control. The user created for the {+mdbagent+} has
privileges to administrate and manage other users. As such, the first
user you create can have any role.

When you select an Authentication Mechanism for your |mms| group, this
enables access control for all the deployments in your |mms| group.

.. admonition:: Recommendation

   To avoid inconsistencies, use the |mms| interface to manage users
   and roles for MongoDB deployments.

For more information on MongoDB access control, see the
:manual:`Authentication </core/authentication>` and
:manual:`Authorization </core/authorization>` pages in the MongoDB
manual.

.. _enable-authentication:

Access Control Mechanisms
-------------------------

.. _mongodb-cr:

``SCRAM-SHA-1`` and ``SCRAM-SHA-256``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB supports the following implementations of challenge-response
mechanisms for authenticating users with passwords.

In the following table, the default authentication mechanism for the
release series is marked with :icon:`check-square` and acceptable
authentication mechanisms are marked with :icon:`check-circle`.

.. list-table::
   :widths: 40 20 20 20
   :header-rows: 1

   * - MongoDB Release Series
     - :v3.6:`MONGODB-CR </core/security-mongodb-cr>`
     - :ref:`SCRAM-SHA-1 <scram-mechanisms>`
     - :ref:`SCRAM-SHA-256 <scram-mechanisms>`

   * - 4.0.x
     -
     - :icon:`check-circle`
     - :icon:`check-square`

   * - 3.6.x
     - :icon:`check-circle`
     - :icon:`check-square`
     -

   * - 3.4.x
     - :icon:`check-circle`
     - :icon:`check-square`
     -

   * - 3.2.x
     - :icon:`check-circle`
     - :icon:`check-square`
     -

   * - 3.0.x
     - :icon:`check-circle`
     - :icon:`check-square`
     -

   * - Pre-3.0
     - :icon:`check-square`
     -
     -

.. cond:: onprem

   .. include:: /includes/fact-no-support-for-scram-sha-256-on-backing-databases.rst

To enable ``SCRAM-SHA-1`` or ``SCRAM-SHA-256`` when using:

- {+mdbagent-wa+}, see :doc:`/tutorial/enable-mongodbcr-authentication-for-group`.
- {+mdbagent+} Backup without Automation, see Configure Backup for SCRAM Authentication.
- {+mdbagent+} Monitoring without Automation, see Configure Monitoring for SCRAM Authentication.


|ldap|
~~~~~~

:product:`MongoDB Enterprise <mongodb-enterprise>` supports proxy
authentication of users. This allows administrators to configure a
MongoDB cluster to authenticate users by proxying authentication
requests to a specified |ldap| service.

To enable |ldap| for your |mms| project when using:

- {+mdbagent-wa+}, see :doc:`/tutorial/enable-ldap-authentication-for-group`.
- {+mdbagent+} Backup without Automation, see Configure Backup for LDAP Authentication.
- {+mdbagent+} Monitoring without Automation, see Configure Monitoring for LDAP Authentication.

Kerberos
~~~~~~~~

:product:`MongoDB Enterprise <mongodb-enterprise>` supports
authentication using a Kerberos service. Kerberos is an |ietf|
(:rfc:`RFC 4120 <4120>`) standard authentication protocol for large
client/server systems.

To use MongoDB with Kerberos, you must have a properly configured
Kerberos deployment, configure *Kerberos service principals* for
MongoDB, and add the *Kerberos user principal*.

To enable Kerberos for your |mms| project when using:

- {+mdbagent-wa+}, see :doc:`/tutorial/enable-kerberos-authentication-for-group`
- {+mdbagent+} Backup without Automation, see Configure Backup for LDAP Authentication.
- {+mdbagent+} Monitoring without Automation, see Configure Monitoring for LDAP Authentication.

Specify Kerberos as the MongoDB process's authentication mechanism when
:doc:`adding </tutorial/add-existing-mongodb-processes>`
or :ref:`editing <edit-host-credentials>` the deployment.

x.509
~~~~~

MongoDB supports x.509 certificate authentication for use with a secure
:doc:`TLS/SSL connection </tutorial/enable-ssl-for-a-deployment>`.
The x.509 client authentication allows clients to
authenticate to servers with certificates rather than with a username
and password.

To enable x.509 authentication for your |mms| project when using:

- {+mdbagent-wa+}, see :doc:`/tutorial/enable-x509-authentication-for-group`.
- {+mdbagent+} Backup without Automation, see Configure Backup for x.509 Authentication.
- {+mdbagent+} Monitoring without Automation, see Configure Monitoring for x.509 Authentication.

.. TODO: add links to the manual tutorial once it's written

.. note::

   |mms| does **not** currently support :manual:`using x.509
   certificates for membership authentication
   </tutorial/configure-x509-member-authentication/>`.

.. _edit-host-credentials:

Edit Host Credentials
---------------------

You can configure the deployment to use the authentication mechanism
from the |mms| interface. The
:doc:`/tutorial/nav/access-control-mongodb` tutorials describe how to
configure an existing deployment to use each authentication mechanism.

