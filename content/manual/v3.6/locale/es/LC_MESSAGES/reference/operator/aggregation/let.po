# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: 2014-04-08 18:49+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-manual/language/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# 44711c390f0a4b9584f2dee99e797c4d
#: ../source/reference/operator/aggregation/let.txt:3
msgid "$let (aggregation)"
msgstr ""

# 397ff637c13142fbbafa097f6fc2f5ec
#: ../source/reference/operator/aggregation/let.txt:8
msgid "Definition"
msgstr ""

# 4b8944d178724eaea3010ab8b35b843e
#: ../source/reference/operator/aggregation/let.txt:15
msgid "The :expression:`$let` expression has the following syntax:"
msgstr ""

# 0713d2c884e743c4b00479bc68996f38
#: ../source/reference/operator/aggregation/let.txt:56
msgid "Behavior"
msgstr ""

# 9062113dfb3a4965b20c9c9a50661f1b
#: ../source/reference/operator/aggregation/let.txt:94
msgid "A ``sales`` collection has the following documents:"
msgstr ""

# a686c586cf6d4951816e2e1ede4854f0
#: ../source/reference/operator/aggregation/let.txt:123
msgid "The aggregation returns the following results:"
msgstr ""

# 9f713737262e4a3b8480b126c1a6edc2
#: ../source/reference/operator/aggregation/let.txt:130
msgid ":expression:`$map`"
msgstr ""

#: ../source/reference/operator/aggregation/let.txt:12
msgid ""
"Binds :doc:`variables </reference/aggregation-variables>` for use in the "
"specified expression, and returns the result of the expression."
msgstr ""

#: ../source/reference/operator/aggregation/let.txt:31
msgid "Field"
msgstr ""

#: ../source/reference/operator/aggregation/let.txt:32
msgid "Specification"
msgstr ""

#: ../source/reference/operator/aggregation/let.txt:34
msgid "``vars``"
msgstr ""

#: ../source/reference/operator/aggregation/let.txt:36
msgid ""
"Assignment block for the :doc:`variables </reference/aggregation-variables>`"
" accessible in the ``in`` expression. To assign a variable, specify a string"
" for the variable name and assign a valid expression for the value."
msgstr ""

#: ../source/reference/operator/aggregation/let.txt:41
msgid ""
"The variable assignments have no meaning outside the ``in`` expression, not "
"even within the ``vars`` block itself."
msgstr ""

#: ../source/reference/operator/aggregation/let.txt:44
msgid "``in``"
msgstr ""

#: ../source/reference/operator/aggregation/let.txt:46
msgid "The :ref:`expression <aggregation-expressions>` to evaluate."
msgstr ""

#: ../source/reference/operator/aggregation/let.txt:48
msgid ""
"To access variables in aggregation expressions, prefix the variable name "
"with double dollar signs (``$$``) and enclosed in quotes. For more "
"information on expressions, see :ref:`aggregation-expressions`. For "
"information on use of variables in the aggregation pipeline, see "
":doc:`/reference/aggregation-variables`."
msgstr ""

#: ../source/reference/operator/aggregation/let.txt:58
msgid ""
":expression:`$let` can access variables defined outside its expression "
"block, including :ref:`system variables <agg-system-variables>`."
msgstr ""

#: ../source/reference/operator/aggregation/let.txt:61
msgid ""
"If you modify the values of externally defined variables in the ``vars`` "
"block, the new values take effect only in the ``in`` expression. Outside of "
"the ``in`` expression, the variables retain their previous values."
msgstr ""

#: ../source/reference/operator/aggregation/let.txt:66
msgid ""
"In the ``vars`` assignment block, the order of the assignment does **not** "
"matter, and the variable assignments only have meaning inside the ``in`` "
"expression. As such, accessing a variable's value in the ``vars`` assignment"
" block refers to the value of the variable defined outside the ``vars`` "
"block and **not** inside the same ``vars`` block."
msgstr ""

#: ../source/reference/operator/aggregation/let.txt:72
msgid "For example, consider the following :expression:`$let` expression:"
msgstr ""

#: ../source/reference/operator/aggregation/let.txt:84
msgid ""
"In the ``vars`` assignment block, ``\"$$low\"`` refers to the value of an "
"externally defined variable ``low`` and not the variable defined in the same"
" ``vars`` block. If ``low`` is not defined outside this :expression:`$let` "
"expression block, the expression is invalid."
msgstr ""

#: ../source/reference/operator/aggregation/let.txt:92
msgid "Example"
msgstr ""

#: ../source/reference/operator/aggregation/let.txt:101
msgid ""
"The following aggregation uses :expression:`$let` in the "
":pipeline:`$project` pipeline stage to calculate and return the "
"``finalTotal`` for each document:"
msgstr ""

#~ msgid ""
#~ "Binds :doc:`variables </reference/aggregation-variables>` for use in "
#~ "subexpressions. To access the variable in the subexpressions, use a string "
#~ "with the variable name prefixed with double dollar signs (``$$``)."
#~ msgstr ""

#~ msgid "The value of the subexpression evaluated with the bound variables."
#~ msgstr ""

#~ msgid ""
#~ "See :doc:`/reference/aggregation-variables` for more information on using "
#~ "variables in the aggregation pipeline."
#~ msgstr ""

#~ msgid ""
#~ "In the ``vars: { <var1>: <value1>, ... }`` assignment block, the order of "
#~ "the assignment does not matter, and using ``$$var`` to access a variable's "
#~ "value refers to the existing value, if any, of the variable. Even if the "
#~ "variable is being reassigned, ``$$var`` would refer to the current and not "
#~ "the reassigned value in the assignment block."
#~ msgstr ""

#~ msgid ""
#~ "For example, the following :expression:`$let` expression is invalid since in"
#~ " the ``vars: { low: 1, high: \"$$low\" }`` assignment block, ``\"$$low\"`` "
#~ "refers to the pre-assignment value of the variable ``low``, which is "
#~ "undefined:"
#~ msgstr ""

#~ msgid ""
#~ ":expression:`$let` can access variables defined outside its expression "
#~ "block, including :ref:`system variables <agg-system-variables>`. If you "
#~ "modify the values of externally defined variables in the ``vars`` block, the"
#~ " new values take effect only in the ``in`` subexpression, and the variables "
#~ "retain to their previous values outside the ``in`` subexpression."
#~ msgstr ""

#~ msgid "Examples"
#~ msgstr ""

#~ msgid "Project Values Calculated Using Variables"
#~ msgstr ""

#~ msgid ""
#~ "The following aggregation uses :expression:`$let` in the the "
#~ ":pipeline:`$project` pipeline stage to calculate and return the "
#~ "``finalTotal`` for each document:"
#~ msgstr ""
