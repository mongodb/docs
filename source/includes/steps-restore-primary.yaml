title: Shut down the entire replica set.
stepnum: 1
ref: shutdown-replica-set
action:
  pre: |
    Connect to each member of the set and issue the following:
  language: javascript
  code: |
    use admin
    db.shutdownServer()
  post: |
    For version 2.4 or earlier, use ``db.shutdownServer({force:true})``.
---
title: Restore the snapshot data files to the primary.
stepnum: 2
ref: copy
pre: |
action:
  pre: |
    Extract the data files to the location where the :program:`mongod`
    instance will access them, as specified in the :setting:`dbpath`
    setting. For example:
  language: sh
  code: |
    tar -xvf <backup-restore-name>.tar.gz
    mv <backup-restore-name> /data
---
title: "Start the primary with the new :setting:`dbpath`."
stepnum: 3
ref: start-with-new-path
action:
  pre: |
    For example:
  language: sh
  code: |
    mongod --dbpath /<path-to-data> --replSet <replica-set-name>
---
title: Connect to the primary and initiate the replica set.
stepnum: 4
ref: initiate
action:
  - pre: |
      For example, first issue the following to connect:
    language: sh
    code: |
      mongo
  - pre: |
      And then issue :method:`rs.initiate()`:
    language: javascript
    code: |
      rs.initiate()
---
title: "Restart the primary as a standalone, *without* the ``--replSet`` option."
stepnum: 5
ref: restart-as-standalone
action:
  - pre: |
      For example, first issue the following to shut down. (For version
      2.4 or earlier, use ``db.shutdownServer({force:true})``):
    language: javascript
    code: |
      use admin
      db.shutdownServer()
  - pre: |
      And then restart *as a standalone*:
    language: sh
    code: |
      mongod --dbpath /<path-to-data>
---
title: "Connect to the primary and drop the :term:`oplog`."
stepnum: 6
ref: drop-oplog
action:
  - pre: |
      For example, first issue the following to connect:
    language: sh
    code: |
      mongo
  - pre: |
      And then issue :method:`rs.drop()` to drop the oplog.
    language: javascript
    code: |
      use local
      db.oplog.rs.drop()
---
title: "Run the ``seedSecondary.sh`` script on the primary."
stepnum: 7
ref: seed
pre: |
  The seedSecondary.sh script re-creates the oplog collection and seeds it
  with correct timestamp. The file is included in the backup restore file,
  :ref:`except in certain circumstances <seed-secondary-considerations>`.
action:
  pre: |
    To run the script, issue the following command at the system prompt,
    where ``<mongod-port>`` is the port of the :program:`mongod` instance
    and <oplog-size-in-gigabytes> is the size of the replica set's oplog:
  language: sh
  code: |
    ./seedSecondary.sh <mongod-port> <oplog-size-in-gigabytes>
---
title: Restart the primary as part of a replica set.
stepnum: 8
ref: restart
action:
  - pre: |
      For example, first issue the following to shut down. (For version
      2.4 or earlier, use ``db.shutdownServer({force:true})``):
    language: javascript
    code: |
      use admin
      db.shutdownServer()
  - pre: |
      And then restart as part of a replica set:
    language: sh
    code: |
      mongod --dbpath /<path-to-data> --replSet <replica-set-name>
...
