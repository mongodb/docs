.. _bson_lifetimes:

================
bson_t Lifetimes
================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol
   
A `bson_t <{+api-libbson+}/bson_t.html>`__ may contain its data directly or may contain pointers to heap-allocated memory.
Overwriting an existing `bson_t <{+api-libbson+}/bson_t.html>`__ or allowing a stack-allocated `bson_t <{+api-libbson+}/bson_t.html>`__ to go out of
scope may cause a memory leak. A `bson_t <{+api-libbson+}/bson_t.html>`__ should always be destroyed with `bson_destroy <{+api-libbson+}/bson_destroy.html>`__.

bson_t Out Parameters
---------------------

A `bson_t <{+api-libbson+}/bson_t.html>`__ pointer used as an out parameter must point to valid overwritable storage for a
new `bson_t <{+api-libbson+}/bson_t.html>`__ which must be one of:

- Uninitialized storage for a `bson_t <{+api-libbson+}/bson_t.html>`__.
- A zero-initialized `bson_t <{+api-libbson+}/bson_t.html>`__ object.
- A `bson_t <{+api-libbson+}/bson_t.html>`__ object initialized with ``BSON_INITIALIZER``.
- A `bson_t <{+api-libbson+}/bson_t.html>`__ object not created with `bson_new <{+api-libbson+}/bson_new.html>`__ that was destroyed 
  with `bson_destroy <{+api-libbson+}/bson_destroy.html>`__.

This can be on the stack:

.. code-block:: c

   bson_t stack_doc = BSON_INITIALIZER;
   example_get_doc (&stack_doc);
   bson_destroy (&stack_doc);

Or on the heap:

.. code-block:: c

   bson_t *heap_doc = bson_malloc (sizeof (bson_t));
   example_get_doc (heap_doc);
   bson_destroy (heap_doc);
   bson_free (heap_doc);

Omitting `bson_destroy <{+api-libbson+}/bson_destroy.html>`__ in either case may cause memory leaks.

.. warning::

   Passing a `bson_t <{+api-libbson+}/bson_t.html>`__ pointer obtained from `bson_new <{+api-libbson+}/bson_new.html>`__ as an
   out parameter will result in a leak of the `bson_t <{+api-libbson+}/bson_t.html>`__ struct.

   .. code-block:: c

      bson_t *heap_doc = bson_new ();
      example_get_doc (heap_doc);
      bson_destroy (heap_doc); // Leaks the `bson_t` struct!
      