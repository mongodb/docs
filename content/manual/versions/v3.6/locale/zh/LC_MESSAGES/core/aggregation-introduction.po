# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/aggregation-introduction.txt:3
msgid "Aggregation Introduction"
msgstr ""

#: ../source/core/aggregation-introduction.txt:9
msgid ""
"*Aggregations* are operations that process data records and return computed "
"results. MongoDB provides a rich set of aggregation operations that examine "
"and perform calculations on the data sets. Running data aggregation on the "
":program:`mongod` instance simplifies application code and limits resource "
"requirements."
msgstr ""

#: ../source/core/aggregation-introduction.txt:17
msgid ""
"Like queries, aggregation operations in MongoDB use :term:`collections "
"<collection>` of documents as an input and return results in the form of one"
" or more documents."
msgstr ""

#: ../source/core/aggregation-introduction.txt:22
msgid "Aggregation Modalities"
msgstr ""

#: ../source/core/aggregation-introduction.txt:25
msgid "Aggregation Pipelines"
msgstr ""

#: ../source/core/aggregation-introduction.txt:27
msgid ""
"MongoDB 2.2 introduced a new :doc:`aggregation framework </core/aggregation-"
"pipeline>`, modeled on the concept of data processing pipelines. Documents "
"enter a multi-stage pipeline that transforms the documents into an "
"aggregated result."
msgstr ""

#: ../source/core/aggregation-introduction.txt:32
msgid ""
"The most basic pipeline stages provide *filters* that operate like queries "
"and *document transformations* that modify the form of the output document."
msgstr ""

#: ../source/core/aggregation-introduction.txt:36
msgid ""
"Other pipeline operations provide tools for grouping and sorting documents "
"by specific field or fields as well as tools for aggregating the contents of"
" arrays, including arrays of documents. In addition, pipeline stages can use"
" :ref:`operators <aggregation-expression-operators>` for tasks such as "
"calculating the average or concatenating a string."
msgstr ""

#: ../source/core/aggregation-introduction.txt:43
msgid ""
"The pipeline provides efficient data aggregation using native operations "
"within MongoDB, and is the preferred method for data aggregation in MongoDB."
msgstr ""

#: ../source/core/aggregation-introduction.txt:50
msgid "Map-Reduce"
msgstr ""

#: ../source/core/aggregation-introduction.txt:52
msgid ""
"MongoDB also provides :doc:`map-reduce </core/map-reduce>` operations to "
"perform aggregation. In general, map-reduce operations have two phases: a "
"*map* stage that processes each document and *emits* one or more objects for"
" each input document, and *reduce* phase that combines the output of the map"
" operation. Optionally, map-reduce can have a *finalize* stage to make final"
" modifications to the result. Like other aggregation operations, map-reduce "
"can specify a query condition to select the input documents as well as sort "
"and limit the results."
msgstr ""

#: ../source/core/aggregation-introduction.txt:61
msgid ""
"Map-reduce uses custom JavaScript functions to perform the map and reduce "
"operations, as well as the optional *finalize* operation. While the custom "
"JavaScript provide great flexibility compared to the aggregation pipeline, "
"in general, map-reduce is less efficient and more complex than the "
"aggregation pipeline."
msgstr ""

#: ../source/core/aggregation-introduction.txt:67
msgid ""
"Starting in MongoDB 2.4, certain :program:`mongo` shell functions and "
"properties are inaccessible in map-reduce operations. MongoDB 2.4 also "
"provides support for multiple JavaScript operations to run at the same time."
" Before MongoDB 2.4, JavaScript code executed in a single thread, raising "
"concurrency issues for map-reduce."
msgstr ""

#: ../source/core/aggregation-introduction.txt:77
msgid "Single Purpose Aggregation Operations"
msgstr ""

#: ../source/core/aggregation-introduction.txt:79
msgid ""
"For a number of common :doc:`single purpose aggregation operations </core"
"/single-purpose-aggregation>`, MongoDB provides special purpose database "
"commands. These common aggregation operations are: returning a count of "
"matching documents, returning the distinct values for a field, and grouping "
"data based on the values of a field. All of these operations aggregate "
"documents from a single collection. While these operations provide simple "
"access to common aggregation processes, they lack the flexibility and "
"capabilities of the aggregation pipeline and map-reduce."
msgstr ""

#: ../source/core/aggregation-introduction.txt:92
msgid "Additional Features and Behaviors"
msgstr ""

#: ../source/core/aggregation-introduction.txt:94
msgid ""
"Both the aggregation pipeline and map-reduce can operate on a :doc:`sharded "
"collection </core/sharding-introduction>`. Map-reduce operations can also "
"output to a sharded collection. See :doc:`/core/aggregation-pipeline-"
"sharded-collections` and :doc:`/core/map-reduce-sharded-collections` for "
"details."
msgstr ""

#: ../source/core/aggregation-introduction.txt:100
msgid ""
"The aggregation pipeline can use indexes to improve its performance during "
"some of its stages. In addition, the aggregation pipeline has an internal "
"optimization phase. See :ref:`aggregation-pipeline-operators-and-"
"performance` and :doc:`/core/aggregation-pipeline-optimization` for details."
msgstr ""

#: ../source/core/aggregation-introduction.txt:106
msgid ""
"For a feature comparison of the aggregation pipeline, map-reduce, and the "
"special group functionality, see :doc:`/reference/aggregation-commands-"
"comparison`."
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:4
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:6
msgid ""
"`MongoDB Analytics: Learn Aggregation by Example: Exploratory Analytics and "
"Visualization Using Flight Data <http://www.mongodb.com/presentations"
"/mongodb-analytics-learn-aggregation-example-exploratory-analytics-and-"
"visualization?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:7
msgid ""
"`MongoDB for Time Series Data: Analyzing Time Series Data Using the "
"Aggregation Framework and Hadoop <http://www.mongodb.com/presentations"
"/mongodb-time-series-data-part-2-analyzing-time-series-data-using-"
"aggregation-framework?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:8
msgid ""
"`The Aggregation Framework <https://www.mongodb.com/presentations"
"/aggregation-framework-0?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:9
msgid ""
"`Webinar: Exploring the Aggregation Framework "
"<https://www.mongodb.com/webinar/exploring-the-aggregation-"
"framework?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:10
msgid ""
"`Quick Reference Cards <https://www.mongodb.com/lp/misc/quick-reference-"
"cards?jmp=docs>`_"
msgstr ""
