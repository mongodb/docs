.. _csharp-whats-new:

==========
What's New
==========

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: update, new feature, deprecation, upgrade, driver v2.22, driver v2.23, driver v2.24, driver v2.25, driver v2.26, driver v2.27, driver v2.28, driver v3.0

Learn what's new in:

* :ref:`Version 3.1 <csharp-version-3.1>`
* :ref:`Version 3.0 <csharp-version-3.0>`
* :ref:`Version 2.30 <csharp-version-2.30>`
* :ref:`Version 2.29 <csharp-version-2.29>`
* :ref:`Version 2.28 <csharp-version-2.28>`
* :ref:`Version 2.27 <csharp-version-2.27>`
* :ref:`Version 2.26 <csharp-version-2.26>`
* :ref:`Version 2.25 <version-2.25>`
* :ref:`Version 2.24 <version-2.24>`
* :ref:`Version 2.23 <version-2.23>`
* :ref:`Version 2.22 <version-2.22>`

.. _upcoming-breaking-changes:

.. _csharp-version-3.1:

What's New in 3.1
-----------------

The 3.1 driver release includes the following new features:

- Adds new default serializers for immutable collections in the
  `System.Collections.Immutable <https://learn.microsoft.com/en-us/dotnet/api/system.collections.immutable?view=net-8.0>`__
  namespace. The driver can now serialize ``ImmutableArray`` objects, and serialization
  for other immutable collections is more memory efficient.

- Adds support for the token field type and array field expressions with Atlas Search
  builders for the ``equals`` operator. To learn more about using Atlas Search with the
  {+driver-short+}, see :ref:`csharp-atlas-search`.

- Adds support for sequential pagination in Atlas Search.

- Adds support for valid SRV hostnames with fewer than 3 parts.

- Adds support for the ``Exists``, ``IsMissing``, and ``IsNullOrMissing`` methods
  in MongoDB Query API filters.

- Adds support for Exact Nearest Neighbor (ENN) vector search. To learn more about ENN
  Vector Search, see :atlas:`Run Vector Search Queries </atlas-vector-search/vector-search-stage>`
  in the Atlas Search documentation.

- Adds support for the ``sort`` option to be passed to update commands. To learn more about
  using update commands with the {+driver-short+}, see :ref:`csharp-change-guide`.

For more information about this release, see the :github:`v3.1 release notes
</mongodb/mongo-csharp-driver/releases/tag/v3.1.0>`.

.. _csharp-version-3.0:

What's New in 3.0
-----------------

.. warning:: Breaking Changes in v3.0

   The v3.0 driver contains breaking changes. See :ref:`<csharp-breaking-changes-v3>`
   for more information.

The 3.0 driver release includes the following new features:

- Adds the ``MongoClientSettings.TranslationOptions`` connection option, which specifies
  options for translating LINQ queries to the Query API. See :ref:`csharp-connection-options`
  for more information.

- Adds support for the ``Half`` type, which represents a half-precision floating-point number.
  This type is available in .NET 5 and later.
  To learn more about the ``Half`` type, see the
  `Half Struct <https://learn.microsoft.com/en-us/dotnet/api/system.half?view=net-8.0>`__
  API reference page on MSDN.

- The ``IMongoClient`` interface inherits the ``IDisposable`` interface. As a result, the
  ``MongoClient`` class and other classes that implement the ``IMongoClient`` interface
  contain a ``Dispose()`` method, which disposes of the client. This method does not
  dispose the underlying cluster and connections to the MongoDB server. To
  dispose of the cluster and connections, call the
  ``ClusterRegistry.UnregisterAndDisposeCluster()`` method. 
  The implementation of the ``IDisposable`` interface is experimental.
  
  To learn more about the ``IDisposable`` interface and use of the
  ``Dispose()`` method, see
  `Dispose Pattern <https://learn.microsoft.com/en-us/dotnet/standard/design-guidelines/dispose-pattern>`__
  on MSDN.

- Adds support for the ``DateOnly`` type, which represents a date value with no
  time component. This type is available in .NET 6 and later. To learn more about the
  ``DateOnly`` type, see the
  `DateOnly Struct. <https://learn.microsoft.com/en-us/dotnet/api/system.dateonly?view=net-6.0>`__
  API reference page on MSDN.

- Adds support for the ``TimeOnly`` type, which represents a time value with no
  date component. This type is available in .NET 6 and later. To learn more about the
  ``TimeOnly`` type, see the
  `TimeOnly Struct. <https://learn.microsoft.com/en-us/dotnet/api/system.timeonly?view=net-6.0>`__
  API reference page on MSDN.

- Adds support for implicit client-side projection when using the ``Find()`` method,
  the ``Select()`` method, or the ``Project()`` aggregation stage with the LINQ3 provider.
  In previous versions of the driver, you could perform client-side
  projection with the LINQ3 provider only after calling the ``ToEnumerable()`` or
  ``AsEnumerable()`` method.
  
  To learn how to enable and use client-side projection for a driver method, select the
  corresponding tab:

  .. tabs::

    .. tab:: Find() Method
       :tabid: find-method

       .. code-block:: csharp

          // Enable client-side projection
          var findOptions = new FindOptions();
          findOptions.TranslationOptions = new ExpressionTranslationOptions
          {
              EnableClientSideProjections = true
          };
         
          var find = collection
              .Find(doc => doc.Id == 1, findOptions);
              .Project(doc => new { R = MyFunction(doc.Name) });
  
    .. tab:: Select() Method
       :tabid: select-method

       .. code-block:: csharp

          // Enable client-side projection
          var aggregateOptions = new AggregateOptions();
          aggregateOptions.TranslationOptions = new ExpressionTranslationOptions
          {
              EnableClientSideProjections = true
          };
         
          var queryable = collection
              .AsQueryable(aggregateOptions)
              .Where(doc => doc.Id == 1)
              .Select(doc => new { R = MyFunction(doc.Name) });

    .. tab:: Project() Method
       :tabid: project-method

       .. code-block:: csharp

          // Enable client-side projection
          var aggregateOptions = new AggregateOptions();
          aggregateOptions.TranslationOptions = new ExpressionTranslationOptions
          {
              EnableClientSideProjections = true
          };

          var aggregate = collection
              .Aggregate(aggregateOptions)
              .Project(doc => new { R = MyFunction(doc.Name) });
  
  .. tip:: MongoClientSettings

     To enable client-side projection for all queries on a client, set the
     ``TranslationOptions`` property of your ``MongoClientSettings`` object, as shown
     in the following example:
     
     .. code-block:: csharp

        clientSettings.TranslationOptions = new ExpressionTranslationOptions
        {
            EnableClientSideProjections = true
        }; 
  
  To learn more about using the aggregation pipeline with the {+driver-short+}, see
  :ref:`csharp-aggregation`.

- Adds a ``MongoClient`` API for bulk write operations. To learn more about bulk write
  operations, see :ref:`csharp-bulk-write`.

For more information about this release, see the :github:`v3.0 release notes
</mongodb/mongo-csharp-driver/releases/tag/v3.0.0>`.

.. _csharp-version-2.30:

What's New in 2.30
------------------

The 2.30 driver doesn't introduce new features or bug fixes. Its purpose is to ease
migration to v3.x of the {+driver-short+} by marking the public APIs that were removed in
v3.0 as obsolete.

.. _csharp-version-2.29:

What's New in 2.29
------------------

The 2.29 driver release adds support for {+mdb-server+} version 8.0 and
includes the following new features:

- Adds support for v2 of the Queryable Encryption range protocol.

- Adds support for range indexes for Queryable Encryption. For more information about
  Queryable Encryption, see :manual:`Queryable Encryption </core/queryable-encryption>`
  in the {+mdb-server+} manual.

For more information about this release, see the :github:`v2.29 release notes
</mongodb/mongo-csharp-driver/releases/tag/v2.29.0>`.

.. _csharp-version-2.28:

What's New in 2.28
------------------

.. warning:: Potential Breaking Change in v2.28

   - All {+driver-short+} components are strongly named. If your application
     has dependencies that reference multiple {+driver-short+}
     versions, you must create binding redirects to manage those dependencies.
     For more information, see :ref:`csharp-breaking-changes-2.28.0`.

The 2.28 driver release includes the following new features:

- Adds support for additional numeric conversions involving ``Nullable<T>``.
- Adds support for the ``delegated`` option when using KMIP for :ref:`CSFLE or
  Queryable Encryption <csharp-fle>`.

For more information about this release, see the :github:`v2.28 release notes
</mongodb/mongo-csharp-driver/releases/tag/v2.28.0>`.

.. _csharp-version-2.27:

What's New in 2.27
------------------

The 2.27 driver release includes the following new features:

- Adds support for the ``$sample`` aggregation operator.

- Implements the ``Equals()`` method for serializers in LINQ3.

- Ensures that read and write concerns are not applied to Atlas Search Index
  Helper commands to avoid errors.

- Disallows the use of the comma character in ``authMechanismProperties``
  connection string values when using the ``MONGODB-OIDC`` authentication
  mechanism. 

- Fixes a translation bug that caused an error during serialization involving
  numbers of different sizes.

- Adds support for Linux distributions that use the ``libdl.so.2`` library.

For more information about this release, see the :github:`v2.27 release notes
</mongodb/mongo-csharp-driver/releases/tag/v2.27.0>`.

.. _csharp-version-2.26:

What's New in 2.26
------------------

The 2.26 driver release includes the following new features:

- Added support for using the ``SelectMany()`` aggregation method within
  ``Select()`` and ``Project()`` aggregation stages.

- Added support for ``Dictionary.ContainsValue()`` calls in LINQ queries.

- Added support for string concatenation of mixed types.

- Enabled use of native ``crypto`` in ``libmongocrypt`` bindings.

- Added support for serialization of ``Memory`` and ``ReadOnlyMemory``
  structs.

- Added support for the GCP Identity Provider when using the
  ``MONGODB-OIDC`` authentication mechanism. To learn more, see
  :ref:`csharp-mongodb-oidc-gcp-imds` in the Enterprise Authentication
  Mechanisms guide.

- Implemented signing of NuGet packages.

- Implemented read and write retries to other ``mongos`` instances when
  possible.

.. _version-2.25:

What's New in 2.25
------------------

The 2.25 driver release includes the following new features:

- Added support for the ``MONGODB-OIDC`` authentication mechanism and automatic
  token acquisition for Azure Identity Provider.
- Added the class name to the error message reported when
  ``BsonClassMapSerializer`` cannot locate a matching creator.
- Added a ``LoggedStages`` field to surface the MQL executed after performing
  a LINQ query.
- Added support for overriding the ``"mongodb"`` service name with a custom one
  by using the ``srvServiceName`` connection option.
- Improved behavior of bulk write operations to prevent enumerating the requests
  parameter more than once.

.. _version-2.24:

What's New in 2.24
------------------

The 2.24 driver release includes the following new features:

- Added the `IMongoCollection.DistinctMany() <{+new-api-root+}/MongoDB.Driver/MongoDB.Driver.IMongoCollection-1.DistinctMany.html>`__ method.
- Added support for the latest optional arguments for the :manual:`$dateFromString </reference/operator/aggregation/dateFromString/>`
  aggregation expression.
- Added support for sorting by score in the :manual:`$search </reference/operator/aggregation/search/>`
  aggregation stage.
- Added the ``VectorSearchScore`` builder for the :manual:`$vectorSearch </reference/operator/aggregation/vectorSearch/>`
  aggregation stage.
- Added support for the `$in <https://www.mongodb.com/docs/manual/reference/operator/query/in/>`__
  operator in Atlas Search.
- Added the ``Mql.Exists()``, ``Mql.IsMissing()``, and ``Mql.IsNullOrMissing()`` methods for
  LINQ queries.
- Added support for the ``IComparable.CompareTo()`` method in LINQ queries.
- Added support for nested calls to the ``AsQueryable()`` method to support LINQ queries
  by the `MongoDB Entity Framework Core Provider <https://www.mongodb.com/docs/entity-framework/current/>`__.
- Added support for TLS 1.3.
- Updated the ``libmongocrypt`` package version to 1.8.2.
- Fixed a segfault in Kerberos (``libgssapi``) on newer Linux distributions.
- Fixed a GridFS bug in which downloading a file caused an error if a larger file
  with the same ID had also been uploaded.
- The ``ExceededTimeLimit`` server error is now retryable for both read and write operations.
- When running within a function-as-a-service (FaaS) environment, such as AWS Lambda,
  the driver now uses the polling monitoring mechanism.
- To improve MongoDB Atlas Serverless compatibility, the driver now uses OP_MSG for
  authentication if the server supports it.

.. _version-2.23:

What's New in 2.23
------------------

The 2.23 driver release includes the following new features:

- Improvements and bug fixes to the LINQ3 integration.
- Added support for aggregation bitwise operators.
- Added support for the ``$out`` operator in MongoDB time series collections.
- Added `ChangeStreamSplitLargeEvent <https://mongodb.github.io/mongo-csharp-driver/2.23.0/api/MongoDB.Driver/MongoDB.Driver.ChangeStreamSplitEvent.html>`__
  to handle change stream events greater than 16 MB.

.. _version-2.22:

What's New in 2.22
------------------

The 2.22 driver release includes the following new features:

- Improvements and bug fixes to the LINQ3 integration.
- Added support for :manual:`$set
  </reference/operator/aggregation/set/>` and :atlas:`$vectorSearch
  </atlas-vector-search/vector-search-stage/>` aggregation stages.
- Added synonym support for Atlas Search.
- Reduced memory allocation when using encryption.
- Added logging messages for server discovery and monitoring (SDAM) events. For more
  information on these events, see the
  `MongoDB SDAM Logging and Monitoring specification. <https://github.com/mongodb/specifications/blob/master/source/server-discovery-and-monitoring/server-discovery-and-monitoring-logging-and-monitoring.rst#log-messages>`__