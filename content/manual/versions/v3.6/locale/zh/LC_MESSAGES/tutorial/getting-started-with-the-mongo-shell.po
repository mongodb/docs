# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:3
msgid "Getting Started with the ``mongo`` Shell"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:7
msgid ""
"This document provides a basic introduction to using the :program:`mongo` "
"shell. See :doc:`/installation` for instructions on installing MongoDB for "
"your system."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:12
msgid "Start the ``mongo`` Shell"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:14
msgid ""
"To start the :program:`mongo` shell and connect to your :doc:`MongoDB "
"</reference/program/mongod>` instance running on **localhost** with "
"**default port**:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:17
msgid "Go to your ``<mongodb installation dir>``:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:23
msgid "Type ``./bin/mongo`` to start :program:`mongo`:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:29
msgid ""
"If you have added the ``<mongodb installation dir>/bin`` to the ``PATH`` "
"environment variable, you can just type ``mongo`` instead of "
"``./bin/mongo``."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:33
msgid "To display the database you are using, type ``db``:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:39
msgid ""
"The operation should return ``test``, which is the default database. To "
"switch databases, issue the ``use <db>`` helper, as in the following "
"example:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:47
msgid ""
"To list the available databases, use the helper ``show dbs``. See also :ref"
":`mongo-shell-getSiblingDB` to access a different database from the current "
"database without switching your current database context (i.e. ``db.``.)"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:52
msgid ""
"To start the :program:`mongo` shell with other options, see :ref:`examples "
"of starting up mongo <mongo-usage-examples>` and :doc:`mongo reference "
"</reference/program/mongo>` which provides details on the available options."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:59
msgid ""
"When starting, :program:`mongo` checks the user's :envvar:`HOME` directory "
"for a JavaScript file named :ref:`.mongorc.js <mongo-mongorc-file>`. If "
"found, :program:`mongo` interprets the content of :file:`.mongorc.js` before"
" displaying the prompt for the first time. If you use the shell to evaluate "
"a JavaScript file or expression, either by using the :option:`--eval <mongo "
"--eval>` option on the command line or by specifying :ref:`a .js file to "
"mongo <mongo-shell-file>`, :program:`mongo` will read the ``.mongorc.js`` "
"file *after* the JavaScript has finished processing. You can prevent "
"``.mongorc.js`` from being loaded by using the :option:`--norc` option."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:73
msgid "Executing Queries"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:75
msgid ""
"From the :program:`mongo` shell, you can use the :doc:`shell methods "
"</reference/method>` to run queries, as in the following example:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:82
msgid "The ``db`` refers to the current database."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:84
msgid ""
"The ``<collection>`` is the name of the collection to query. See :ref"
":`mongo-shell-help-collection` to list the available collections."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:87
msgid ""
"If the :program:`mongo` shell does not accept the name of the collection, "
"for instance if the name contains a space, hyphen, or starts with a number, "
"you can use an alternate syntax to refer to the collection, as in the "
"following:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:98
msgid ""
"The :method:`~db.collection.find()` method is the JavaScript method to "
"retrieve documents from ``<collection>``. The "
":method:`~db.collection.find()` method returns a :term:`cursor` to the "
"results; however, in the :program:`mongo` shell, if the returned cursor is "
"not assigned to a variable using the ``var`` keyword, then the cursor is "
"automatically iterated up to 20 times to print up to the first 20 documents "
"that match the query. The :program:`mongo` shell will prompt ``Type it`` to "
"iterate another 20 times."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:108
msgid ""
"You can set the ``DBQuery.shellBatchSize`` attribute to change the number of"
" iteration from the default value ``20``, as in the following example which "
"sets it to ``10``:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:116
msgid ""
"For more information and examples on cursor handling in the :program:`mongo`"
" shell, see :doc:`/core/cursors`."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:119
msgid ""
"See also :ref:`mongo-shell-help-cursor` for list of cursor help in the "
":program:`mongo` shell."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:122
msgid ""
"For more documentation of basic MongoDB operations in the :program:`mongo` "
"shell, see:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:125
msgid ""
"`Getting Started with MongoDB <http://docs.mongodb.org/getting-"
"started/shell>`_"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:127
msgid ":doc:`/reference/mongo-shell`"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:128
msgid ":doc:`/core/read-operations`"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:129
msgid ":doc:`/core/write-operations`"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:130
msgid ":doc:`/administration/indexes`"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:135
msgid "Print"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:137
msgid ""
"The :program:`mongo` shell automatically prints the results of the "
":method:`~db.collection.find()` method if the returned cursor is not "
"assigned to a variable using the ``var`` keyword. To format the result, you "
"can add the ``.pretty()`` to the operation, as in the following:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:147
msgid ""
"In addition, you can use the following explicit print methods in the "
":program:`mongo` shell:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:150
msgid "``print()`` to print without formatting"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:152
msgid ""
"``print(tojson(<obj>))`` to print with :term:`JSON` formatting and "
"equivalent to ``printjson()``"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:155
msgid ""
"``printjson()`` to print with :term:`JSON` formatting and equivalent to "
"``print(tojson(<obj>))``"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:159
msgid "Evaluate a JavaScript File"
msgstr ""

#: ../source/includes/fact-execute-javascript-from-shell.rst:1
msgid ""
"You can execute a ``.js`` file from within the :program:`mongo` shell, using"
" the :method:`load()` function, as in the following:"
msgstr ""

#: ../source/includes/fact-execute-javascript-from-shell.rst:8
msgid "This function loads and executes the :file:`myjstest.js` file."
msgstr ""

#: ../source/includes/fact-execute-javascript-from-shell.rst:10
msgid ""
"The :method:`load()` method accepts relative and absolute paths. If the "
"current working directory of the :program:`mongo` shell is :file:`/data/db`,"
" and the :file:`myjstest.js` resides in the :file:`/data/db/scripts` "
"directory, then the following calls within the :program:`mongo` shell would "
"be equivalent:"
msgstr ""

#: ../source/includes/fact-execute-javascript-from-shell.rst:21
msgid ""
"There is no search path for the :method:`load()` function. If the desired "
"script is not in the current working directory or the full specified path, "
":program:`mongo` will not be able to access the file."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:166
msgid "Use a Custom Prompt"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:168
msgid ""
"You may modify the content of the prompt by creating the variable ``prompt``"
" in the shell. The prompt variable can hold strings as well as any arbitrary"
" JavaScript. If ``prompt`` holds a function that returns a string, "
":program:`mongo` can display dynamic information in each prompt. Consider "
"the following examples:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:0
#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:0
#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:0
msgid "Example"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:176
msgid ""
"Create a prompt with the number of operations issued in the current session,"
" define the following variables:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:186
#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:207
#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:227
msgid "The prompt would then resemble the following:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:196
msgid ""
"To create a :program:`mongo` shell prompt in the form of "
"``<database>@<hostname>$`` define the following variables:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:217
msgid ""
"To create a :program:`mongo` shell prompt that contains the system up time "
"*and* the number of documents in the current database, define the following "
"prompt variable:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:235
msgid "Use an External Editor in the ``mongo`` Shell"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:239
msgid ""
"In the :program:`mongo` shell you can use the ``edit`` operation to edit a "
"function or variable in an external editor. The ``edit`` operation uses the "
"value of your environments ``EDITOR`` variable."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:243
msgid ""
"At your system prompt you can define the ``EDITOR`` variable and start "
":program:`mongo` with the following two operations:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:251
msgid "Then, consider the following example shell session:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:273
msgid ""
"As :program:`mongo` shell interprets code edited in an external editor, it "
"may modify code in functions, depending on the JavaScript compiler. For "
":program:`mongo` may convert ``1+1`` to ``2`` or remove comments. The actual"
" changes affect only the appearance of the code and will vary based on the "
"version of JavaScript used but will not affect the semantics of the code."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:283
msgid "Exit the Shell"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:285
msgid "To exit the shell, type ``quit()`` or use the ``<Ctrl-c>`` shortcut."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:287
msgid ":gettingstarted:`Getting Started Guide </shell>`"
msgstr ""
