.. facet::
   :name: genre
   :values: tutorial

.. meta::
   :keywords: code example, shell
   :description: Deploy a MongoDB replica set for redundancy and distributed reads. Ensure an odd number of members for smooth elections.

.. _server-replica-set-deploy:

=================================
Deploy a Self-Managed Replica Set
=================================

.. default-domain:: mongodb

.. facet::
   :name: programming_language
   :values: shell

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. include:: /includes/introduction-deploy-replica-set.rst

.. |page-topic| replace:: deploy a replica set
.. |link-topic-ing| replace:: deploying a replica set
.. |atlas-url| replace:: :ref:`deploy-replica-set-atlas`

.. include:: /includes/fact-atlas-compatible.rst
.. include:: /includes/fact-atlas-link.rst

Requirements
------------

For production deployments, you should maintain as much separation between
members as possible by hosting the :binary:`~bin.mongod`
instances on separate machines. When using virtual machines for
production deployments, you should place each :binary:`~bin.mongod`
instance on a separate host server serviced by redundant power circuits
and redundant network paths.

Before you can deploy a replica set, you must install MongoDB on
each system that will be part of your :term:`replica set`.
If you have not already installed MongoDB, see the :ref:`installation tutorials <tutorial-installation>`.

.. _considerations-when-deploying-rs:

Considerations When Deploying a Replica Set
-------------------------------------------

.. include:: /includes/considerations-deploying-replica-set.rst

.. _deploy-replica-set-atlas:

Deploy a Replica Set in the {+atlas+} UI
------------------------------------------------

Replica sets in {+atlas+} are called clusters. The following procedure
creates a free cluster in the {+atlas+} UI with minimal
configuration. To learn more about all available options when you
create a cluster, see 
:atlas:`Create a Cluster </tutorial/create-new-cluster/>`. 

To create a cluster in the {+atlas+} UI, follow these steps:

.. procedure:: 
   :style: normal

   .. include:: /includes/atlas-nav/steps-db-deployments-page.rst

   .. step:: Open the Create New Cluster dialog box

      If you already have one or more clusters, click
      :guilabel:`Create`. If this is your first cluster,
      click :guilabel:`Build a Database`, then click 
      :guilabel:`Advanced Configuration Options`.

   .. step:: Select cluster options

      a. Click :guilabel:`Shared`.
      #. Select a cloud provider and region. To learn more, see
         :atlas:`Cloud Providers and Regions 
         </cloud-providers-regions>`.
      #. Expand the :guilabel:`Cluster Details` section and specify a
         name for the cluster in the :guilabel:`Cluster Name` field.
   
   .. step:: Click Create Cluster

      {+atlas+} deploys a free, three-node replica set with the 
      cluster name you specified.

Deploy a Replica Set in the Terminal
------------------------------------

This tutorial describes how to create a three-member 
:term:`replica set` from three existing :binary:`~bin.mongod` instances
running with :ref:`access control <authorization>` disabled.

To deploy a replica set with enabled :ref:`access control <authorization>`, see
:ref:`deploy-repl-set-with-auth`. If you wish to deploy a
replica set from a single MongoDB instance, see
:ref:`server-replica-set-deploy-convert`. For more
information on replica set deployments, see the :ref:`replication` and
:ref:`replica-set-architecture` documentation.

.. include:: /includes/steps/deploy-replica-set.rst

.. seealso::

   :ref:`deploy-repl-set-with-auth`
