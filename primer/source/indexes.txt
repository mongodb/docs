=======
Indexes
=======

.. default-domain:: mongodb

Overview
--------

Use the :method:`~db.collection.ensureIndex()` method to create an
index on a collection. Indexes can support the efficient execution of
queries. MongoDB automatically creates an index on the ``_id`` field
upon the creation of a collection.

Prerequisite
------------

The examples in this section use the ``inventory`` collection in the
``test`` database. Populate the collection with
:doc:`/tutorial/prerequisite`.

To create an index on a field or fields, pass to the
:method:`~db.collection.ensureIndex()` method an index key
specification document that lists the fields to index and the index
type for each field:

.. code-block:: javascript

   { <field1>: <type1>, ...}

Specify ``1`` for ``<type>`` to specify an ascending index. Specify
``-1`` for ``<type>`` to specify a descending index.
:method:`~db.collection.ensureIndex()` only creates an index if the
index does not exist.

.. include:: /includes/examples/example-gs-index.rst

.. _gs-ensureIndex-output:

Output Document
---------------

The :method:`~db.collection.ensureIndex()` returns a document with the
status of the operation. For example,

.. code-block:: javascript

   {
     "createdCollectionAutomatically" : false,
     "numIndexesBefore" : 1,
     "numIndexesAfter" : 2,
     "ok" : 1
   }

- The ``createdCollectionAutomatically`` indicates if the operation
  created a collection. If a collection does not exist, MongoDB creates
  the collection as part of the indexing operation.

- The ``numIndexesBefore`` indicates the number of indexes existing
  before the method call. In the example, the ``"numIndexesBefore" :
  1`` refers to the ``_id`` index which MongoDB automatically creates
  upon the creation of the collection.

- The ``numIndexesAfter`` indicates the number of indexes existing
  after the method call. If the index has been successfully created,
  this number should be one greater than ``numIndexesBefore``.

- The ``ok`` indicates that the method did not encounter any errors.

Analyze Query Plan
------------------

MongoDB provides the :method:`~cursor.explain()` method to return
information on the query plan of a particular query. The query plan is
the plan the server uses to find the matches for a query. This
information may be useful when optimizing a query. Append the
:method:`~cursor.explain()` method to the
:method:`~db.collection.find()` method to return information on the
query plan.

See :manual:`Analyze Query Plan Tutorial
</tutorial/analyze-query-plan>` for an example.

Additional Information
----------------------

MongoDB provides several different index types to support different
kinds of queries and data sets. See :manual:`Index Types Overview
</core/index-types>` for the different index types supported in MongoDB.

You can also specify various properties for indexes, such as a *unique
constraint*. See :method:`~db.collection.ensureIndex()` to view the
options available.

See the :manual:`Indexes Section </indexes>` in the MongoDB Manual for
complete documentation of the indexes in MongoDB.
