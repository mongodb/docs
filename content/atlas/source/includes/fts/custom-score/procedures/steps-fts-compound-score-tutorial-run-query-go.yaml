ref: run-compound-constant-query-go
stepnum: 1
title: "Run a |fts| compound query that alters the score using the 
       :ref:`scoring-constant` option."
content: |

  a. Create a file named ``compound-constant-query.go``. 
  #. Copy and paste the code example into the 
     ``compound-constant-query.go`` file.

     The code example performs the following tasks:
      
     - Imports ``mongodb`` packages and dependencies.
     - Establishes a connection to your cluster.
     - Uses the following compound clauses to query the collection: 

       .. include:: /includes/fts/extracts/fts-compound-constant-desc.rst
     
     - .. include:: /includes/fts/extracts/fts-compound-highlight-desc.rst
     
     - Uses the following pipeline stages:

       .. include:: /includes/fts/extracts/fts-compound-score-stages.rst

     - Iterates over the cursor to print the documents that match the 
       query.

     .. literalinclude:: /includes/fts/custom-score/compound-constant-query.go
        :language: go
        :linenos:
        :dedent:
        :emphasize-lines: 17

  #. .. include:: /includes/fts/facts/fact-fts-driver-connection-string.rst
  #. Run the following command to query your collection:
  
     .. io-code-block::
        :copyable: true

        .. input::
           :language: bash

           go run compound-constant-query.go

        .. output::
           :language: none
           :visible: true
         
           [{title Snow in Paradise} {year 2014} {score 5} {highlights [[{score 1.382846713066101} {path title} {texts [[{value Snow} {type hit}] [{value  in Paradise} {type text}]]}]]}]
           [{title Dead Snow 2: Red vs. Dead} {year 2014} {score 5} {highlights [[{score 1.3924485445022583} {path title} {texts [[{value Dead } {type text}] [{value Snow} {type hit}] [{value  2: Red vs. } {type text}]]}]]}]
           [{title The Snow White Murder Case} {year 2014} {score 5} {highlights [[{score 1.3525336980819702} {path title} {texts [[{value The } {type text}] [{value Snow} {type hit}] [{value  White Murder Case} {type text}]]}]]}]
           [{title Snow on the Blades} {year 2014} {score 5} {highlights [[{score 1.3766303062438965} {path title} {texts [[{value Snow} {type hit}] [{value  on the Blades} {type text}]]}]]}]
           [{year 2013} {title The Secret Life of Walter Mitty} {score 0} {highlights []}]
           [{title Jurassic World} {year 2015} {score 0} {highlights []}]
           [{title Action Jackson} {year 2014} {score 0} {highlights []}]
           [{year 2013} {title In Secret} {score 0} {highlights []}]
           [{title The Stanford Prison Experiment} {year 2015} {score 0} {highlights []}]
           [{year 2014} {title The Giver} {score 0} {highlights []}]

     .. include:: /includes/fts/extracts/fts-compound-constant-score-desc.rst

---
ref: run-compound-boost-query-go
stepnum: 2
title: "Run a |fts| compound query that alters the score using the 
       :ref:`scoring-boost` option."
content: |

  a. Create a file named ``compound-boost-query.go``. 
  #. Copy and paste the code example into the 
     ``compound-boost-query.go`` file.

     The code examples perform the following tasks:

     - Imports ``mongodb`` packages and dependencies.
     - Establishes a connection to your cluster.
     - Iterates over the cursor to print the documents that match the 
       query.

     .. tabs:: 

        .. tab:: Simple Example
           :tabid: simple

           The query uses the following pipeline stages:

           - :pipeline:`$search` stage to query the collection. The 
             query:
           
             - Uses the following ``compound`` clauses to query the 
               collection:

               .. include:: /includes/fts/extracts/fts-compound-boost-desc.rst

             - .. include:: /includes/fts/extracts/fts-compound-highlight-desc.rst

           .. include:: /includes/fts/extracts/fts-compound-score-stages.rst

           .. literalinclude:: /includes/fts/custom-score/compound-boost-query.go
              :language: go
              :linenos:
              :dedent:
              :emphasize-lines: 24

        .. tab:: Multiple Weights Example
           :tabid: multi

           This query uses the following pipeline stages:
           
           - :pipeline:`$search` stage to query the collection. The 
             query:
             
             - Uses the ``compound`` operator clauses with the 
               ``boost`` option to prioritize some fields more than 
               other fields: 
        
               .. include:: /includes/fts/extracts/fts-compound-boost-advanced-desc.rst

           .. include:: /includes/fts/extracts/fts-compound-score-stages.rst
   
           .. literalinclude:: /includes/fts/custom-score/boost-multi-query.go
              :language: go
              :linenos:
              :dedent:
              :emphasize-lines: 24

  #. .. include:: /includes/fts/facts/fact-fts-driver-connection-string.rst
  #. Run the following command to query your collection:

     .. tabs:: 
        :hidden:

        .. tab:: Simple Example
           :tabid: simple
  
           .. io-code-block::
              :copyable: true

              .. input::
                 :language: bash

                 go run compound-boost-query.go

              .. output::
                 :language: none
                 :visible: true
           
                 [{title Snow in Paradise} {year 2014} {score 6.7722930908203125} {highlights [[{score 1.382846713066101} {path title} {texts [[{value Snow} {type hit}] [{value  in Paradise} {type text}]]}]]}]
                 [{title Snow on the Blades} {year 2014} {score 6.063445568084717} {highlights [[{score 1.3766303062438965} {path title} {texts [[{value Snow} {type hit}] [{value  on the Blades} {type text}]]}]]}]
                 [{title The Snow White Murder Case} {year 2014} {score 5.509652137756348} {highlights [[{score 1.3525336980819702} {path title} {texts [[{value The } {type text}] [{value Snow} {type hit}] [{value  White Murder Case} {type text}]]}]]}]
                 [{title Dead Snow 2: Red vs. Dead} {year 2014} {score 5.065053939819336} {highlights [[{score 1.3924485445022583} {path title} {texts [[{value Dead } {type text}] [{value Snow} {type hit}] [{value  2: Red vs. } {type text}]]}]]}]
                 [{year 2013} {title The Secret Life of Walter Mitty} {score 1} {highlights []}]
                 [{title Jurassic World} {year 2015} {score 1} {highlights []}]
                 [{title Action Jackson} {year 2014} {score 1} {highlights []}]
                 [{year 2013} {title In Secret} {score 1} {highlights []}]
                 [{title The Stanford Prison Experiment} {year 2015} {score 1} {highlights []}]
                 [{year 2014} {title The Giver} {score 1} {highlights []}]

           .. include:: /includes/fts/extracts/fts-compound-boost-score-desc.rst

        .. tab:: Multiple Weights Example
           :tabid: multi
  
           .. io-code-block::
              :copyable: true

              .. input::
                 :language: bash

                 go run compound-boost-query.go

              .. output:: /includes/fts/custom-score/boost-multi-mongosh-compass-query-results.json
                 :language: json
                 :visible: true

---
ref: run-compound-function-query-go
stepnum: 3
title: "Run a |fts| compound query that alters the score using the 
       :ref:`scoring-function` option."
content: |

  a. Create a file named ``compound-boost-query.go``. 
  #. Copy and paste the code example into the 
     ``compound-function-query.go`` file.

     The code example performs the following tasks:

     - Imports ``mongodb`` packages and dependencies.
     - Establishes a connection to your cluster.
     - Uses the following ``compound`` operator clauses:

       .. include:: /includes/fts/extracts/fts-compound-function-desc.rst

     - .. include:: /includes/fts/extracts/fts-compound-highlight-desc.rst

     - Uses the following pipeline stages:
       
       .. include:: /includes/fts/extracts/fts-compound-score-stages.rst

     - Iterates over the cursor to print the documents that match the 
       query.

     .. literalinclude:: /includes/fts/custom-score/compound-function-query.go
        :language: go
        :linenos:
        :dedent:
        :emphasize-lines: 17

  #. .. include:: /includes/fts/facts/fact-fts-driver-connection-string.rst
  #. Run the following command to query your collection:
  
     .. io-code-block::
        :copyable: true

        .. input::
           :language: bash

           go run compound-function-query.go

        .. output::
           :language: none
           :visible: true
         
           [{title The Snow White Murder Case} {year 2014} {score 10.454826354980469} {highlights [[{score 1.3525336980819702} {path title} {texts [[{value The } {type text}] [{value Snow} {type hit}] [{value  White Murder Case} {type text}]]}]]}]
           [{title Snow on the Blades} {year 2014} {score 10.3317232131958} {highlights [[{score 1.3766303062438965} {path title} {texts [[{value Snow} {type hit}] [{value  on the Blades} {type text}]]}]]}]
           [{title Dead Snow 2: Red vs. Dead} {year 2014} {score 10.032526969909668} {highlights [[{score 1.3924485445022583} {path title} {texts [[{value Dead } {type text}] [{value Snow} {type hit}] [{value  2: Red vs. } {type text}]]}]]}]
           [{title Snow in Paradise} {year 2014} {score 8.386146545410156} {highlights [[{score 1.382846713066101} {path title} {texts [[{value Snow} {type hit}] [{value  in Paradise} {type text}]]}]]}]
           [{year 2013} {title The Secret Life of Walter Mitty} {score 1} {highlights []}]
           [{title Jurassic World} {year 2015} {score 1} {highlights []}]
           [{title Action Jackson} {year 2014} {score 1} {highlights []}]
           [{year 2013} {title In Secret} {score 1} {highlights []}]
           [{title The Stanford Prison Experiment} {year 2015} {score 1} {highlights []}]
           [{year 2014} {title The Giver} {score 1} {highlights []}]

     .. include:: /includes/fts/extracts/fts-compound-function-score-desc.rst

...
