.. _dl-drop-collection-cmd:

========
``drop``
========

.. default-domain:: mongodb

.. include:: /includes/fact-data-lake-beta.rst

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

The ``drop`` command removes the specified collection from the 
{+data-lake+} storage configuration. Use the wildcard ``"*"`` to remove 
all collections generated by the :ref:`wildcard collection function 
<datalake-advanced-path-generate-collection>` (that is, ``collectionName()``), 
including the wildcard collection rule itself. You cannot individually 
remove collections generated by the wildcard collection function.

.. _dl-drop-collection-cmd-syntax:

Syntax 
------

.. code-block:: json 

   db.runCommand({ "drop" : "<collection-name|*>" })

.. _dl-drop-collection-cmd-params:

Parameters 
----------

.. list-table::
   :header-rows: 1
   :widths: 15 10 65 10 

   * - Parameter 
     - Type 
     - Description 
     - Required?

   * - ``<collection-name>``
     - string 
     - The name of the collection to remove or the wildcard ``"*"`` . You 
       can specify the wildcard ``"*"`` to drop:

       - All collections generated by the wildcard collection function 
         (``collectionName()``) 
       - The wildcard collection rule 

     - yes

.. _dl-drop-collection-cmd-output:

Output 
------

The command prints the following output if it succeeds. You can verify 
the results by running the ``show collections`` command. If the command 
fails, see :ref:`dl-drop-collection-cmd-errors` for recommended solutions.

.. code-block:: sh 

   { "ok" : 1, "ns" : "<database>.<collection>", "nIndexesWas" : 0 }

where: 

- ``<ns>`` reflects the collection namespace, which includes the database 
  name, the dot (``.``) separator, and the collection name. For example:  
  ``<database>.<collection>``
- ``nIndexesWas`` reflects the number of indexes, the value of which is 
  always ``0`` on {+data-lake+}.

.. _dl-drop-collection-cmd-egs:

Examples 
--------

The following examples use the ``drop`` command to remove sample collections 
that were mapped to the sample dataset, 
`AirBnB <https://atlas-data-lake.s3.amazonaws.com/json/sample_airbnb/listingsAndReviews.json>`__ 
and 
`weather <https://atlas-data-lake.s3.amazonaws.com/json/sample_weatherdata/data.json>`__, 
in the |aws| |s3| store. See :doc:`Getting Started with Atlas Data Lake tutorial
</tutorial/load-sample-data/>` for information on preparing your |s3| 
bucket and uploading the sample dataset.

Basic Example 
~~~~~~~~~~~~~

The following example uses the ``drop`` command to remove a sample collection 
named ``airbnb`` in a database named ``sample`` in the storage configuration. 

.. code-block:: json 

   use sample
   db.runCommand({ "drop" : "airbnb"})

The previous command prints the following output: 

.. code-block:: json 
   :copyable: false

   { "ok" : 1, "ns" : "sample.airbnb", "nIndexesWas" : 0 }

Wildcard Example 
~~~~~~~~~~~~~~~~

The following example uses the ``drop`` command to remove the wildcard  
collection function (``collectionName()``) and all collections created by 
the wildcard collection function in a database named ``sample`` in the storage 
configuration. 

.. code-block:: json 

   use sample 
   db.runCommand ({ "drop" : "*" }) 

The previous command prints the following output: 

.. code-block:: json 
   :copyable: false

   { "ok" : 1, "ns" : "sample.*", "nIndexesWas" : 0 }

.. _dl-drop-collection-cmd-errors:

Troubleshoot Errors 
-------------------

If the command fails, it returns one of the following errors.

**Reason:**  Namespace (database or collection) does not exist.

.. code-block:: json 
   :copyable: false 

   {
      ok: 0,
      errmsg: "ns not found",
      code: 26,
      codeName: "NamespaceNotFound"
   }

**Solution:** Ensure that the namespace specified in the command is 
valid and exists in the storage configuration. If necessary, use the 
``getStorageConfig`` command to retrieve the list of valid databases 
and collections in the storage configuration.

**Reason:** Attempting to remove a collection created by the wildcard 
collection function (``collectionName()``).

.. code-block:: json 
   :copyable: false 

   {
      ok: 0,
      errmsg: "cannot drop a collection created from a wildcard",
      code: 26,
      codeName: "NamespaceNotFound"
   }

**Solution:** Ensure that the collection you are dropping is not an 
individual collection dynamically generated by the wildcard collection 
function (``collectionName()``). {+data-lake-short+} does not support 
dropping individual collections generated by the wildcard collection 
function. 
