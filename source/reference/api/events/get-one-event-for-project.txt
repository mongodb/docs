=====================
Get One Project Event
=====================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Required Roles
--------------

Your API Key must have the :authrole:`Project Read Only` role to
successfully call this resource.

Request
--------

.. include:: /includes/api/base-api-uri.rst

.. code-block:: http

   GET /groups/{groupId}/events/{eventId}

Request Path Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :widths: 15 10 75
   :header-rows: 1
   :stub-columns: 1

   * - Name
     - Type
     - Description

   * - groupId
     - string
     - Unique identifier of the project associated with the
       desired event.

   * - eventId
     - string
     - Unique identifier of the desired event.

Request Query Parameters
~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/api/no-query-single-parameters.rst

Request Body Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/api/no-body-parameters.rst

Response
--------

.. cond:: cloud

   .. include:: /includes/api/list-tables/events/responses/projects-cloud.rst

.. cond:: onprem

   .. include:: /includes/api/list-tables/events/responses/projects-onprem.rst

Example Request
---------------

.. cond:: cloud

   .. code-block:: console

      curl --user "{publicKey}:{privateKey}" --digest \
           --header "Accept: application/json" \
           --header "Content-Type: application/json" \
           --include \
           --request GET "https://cloud.mongodb.com/api/public/v1.0/groups/{groupId}/events/{eventId}?pretty=true"

.. cond:: onprem

   .. code-block:: console

      curl --user "{publicKey}:{privateKey}" --digest \
           --header "Accept: application/json" \
           --header "Content-Type: application/json" \
           --include \
           --request GET "https://{OPSMANAGER-HOST}:{PORT}/api/public/v1.0/groups/{groupId}/events/{eventId}?pretty=true"

Example Response
----------------

Response Header
~~~~~~~~~~~~~~~

.. include:: /includes/api/api-headers/401.rst

.. include:: /includes/api/api-headers/200.rst

Response Body
~~~~~~~~~~~~~

.. cond:: cloud

   .. code-block:: json
      :linenos:

      {
        "created" : "2020-07-13T21:28:37Z",
        "diffs" : [ {
          "id" : "admin@admin",
          "name" : null,
          "params" : [ {
            "display" : "Added Privilege",
            "new" : "config.system.sessions: moveChunk",
            "old" : null,
            "param" : "config.system.sessions: moveChunk"
          }, {
            "display" : "Added Privilege",
            "new" : "config.system.sessions: splitChunk",
            "old" : null,
            "param" : "config.system.sessions: splitChunk"
          }, {
            "display" : "Added Privilege",
            "new" : "config.system.sessions: splitVector",
            "old" : null,
            "param" : "config.system.sessions: splitVector"
          } ],
          "priviileges" : [ {
            "actions" : [ "moveChunk" ],
            "resource" : {
              "collection" : "system.sessions",
              "db" : "config"
            }
          }, {
            "actions" : [ "moveChunk" ],
            "resource" : {
              "collection" : "",
              "db" : ""
            }
          }, {
            "actions" : [ "enableSharding" ],
            "resource" : {
              "cluster" : true
            }
          }, {
            "actions" : [ "cleanupOrphaned" ],
            "resource" : {
              "cluster" : true
            }
          }, {
            "actions" : [ "flushRouterConfig" ],
            "resource" : {
              "cluster" : true
            }
          }, {
            "actions" : [ "splitChunk" ],
            "resource" : {
              "collection" : "system.sessions",
              "db" : "config"
            }
          }, {
            "actions" : [ "splitChunk" ],
            "resource" : {
              "collection" : "",
              "db" : ""
            }
          }, {
            "actions" : [ "splitVector" ],
            "resource" : {
              "collection" : "system.sessions",
              "db" : "config"
            }
          }, {
            "actions" : [ "viewRole" ],
            "resource" : {
              "collection" : "",
              "db" : ""
            }
          } ],
          "roles" : [ {
            "db" : "admin",
            "role" : "readWriteAnyDatabase"
          }, {
            "db" : "admin",
            "role" : "dbAdminAnyDatabase"
          }, {
            "db" : "admin",
            "role" : "enableSharding"
          }, {
            "db" : "admin",
            "role" : "backup"
          }, {
            "db" : "admin",
            "role" : "clusterMonitor"
          } ],
          "status" : "MODIFIED",
          "type" : "ROLES"
        }
      }

.. cond:: onprem

   .. code-block:: json
      :linenos:

      {
        "created" : "2020-07-13T21:28:37Z",
        "diffs" : [ {
          "id" : "admin@admin",
          "name" : null,
          "params" : [ {
            "display" : "Added Privilege",
            "new" : "config.system.sessions: moveChunk",
            "old" : null,
            "param" : "config.system.sessions: moveChunk"
          }, {
            "display" : "Added Privilege",
            "new" : "config.system.sessions: splitChunk",
            "old" : null,
            "param" : "config.system.sessions: splitChunk"
          }, {
            "display" : "Added Privilege",
            "new" : "config.system.sessions: splitVector",
            "old" : null,
            "param" : "config.system.sessions: splitVector"
          } ],
          "priviileges" : [ {
            "actions" : [ "moveChunk" ],
            "resource" : {
              "collection" : "system.sessions",
              "db" : "config"
            }
          }, {
            "actions" : [ "moveChunk" ],
            "resource" : {
              "collection" : "",
              "db" : ""
            }
          }, {
            "actions" : [ "enableSharding" ],
            "resource" : {
              "cluster" : true
            }
          }, {
            "actions" : [ "cleanupOrphaned" ],
            "resource" : {
              "cluster" : true
            }
          }, {
            "actions" : [ "flushRouterConfig" ],
            "resource" : {
              "cluster" : true
            }
          }, {
            "actions" : [ "splitChunk" ],
            "resource" : {
              "collection" : "system.sessions",
              "db" : "config"
            }
          }, {
            "actions" : [ "splitChunk" ],
            "resource" : {
              "collection" : "",
              "db" : ""
            }
          }, {
            "actions" : [ "splitVector" ],
            "resource" : {
              "collection" : "system.sessions",
              "db" : "config"
            }
          }, {
            "actions" : [ "viewRole" ],
            "resource" : {
              "collection" : "",
              "db" : ""
            }
          } ],
          "roles" : [ {
            "db" : "admin",
            "role" : "readWriteAnyDatabase"
          }, {
            "db" : "admin",
            "role" : "dbAdminAnyDatabase"
          }, {
            "db" : "admin",
            "role" : "enableSharding"
          }, {
            "db" : "admin",
            "role" : "backup"
          }, {
            "db" : "admin",
            "role" : "clusterMonitor"
          } ],
          "status" : "MODIFIED",
          "type" : "ROLES"
        }
      }
