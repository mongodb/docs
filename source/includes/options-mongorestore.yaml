# This file borrows content from other files, including
# /includes/options-shared.yaml, which uses
# {{program}} to refer to the tool.
#
program: mongorestore
name: authenticationDatabase
inherit:
  name: authenticationDatabase
  program: _shared
  file: options-shared.yaml
---
program: mongorestore
name: authenticationMechanism
inherit:
  name: authenticationMechanism
  program: _shared
  file: options-shared.yaml
---
program: mongorestore
name: collection
aliases: -c
directive: option
args: <collection>
description: |
  Specifies a single collection for :program:`mongorestore` to restore. If
  you do not specify :option:`--collection`, :program:`mongorestore` takes
  the collection name from the input filename. If the input file has an
  extension, MongoDB omits the extension of the file from the collection
  name.
optional: true
---
program: mongorestore
name: db
aliases: -d
directive: option
args:  <database>
description: |
  Specifies a database for :program:`mongorestore` to restore data *into*.
  If the database does not exist, :program:`mongorestore` creates the
  database. If you do not specify a ``<db>``, :program:`mongorestore`
  creates new databases that correspond to the databases where data
  originated and data may be overwritten. Use this option to restore data
  into a MongoDB instance that already has data.

  :option:`--db` does *not* control which :term:`BSON` files
  :program:`mongorestore` restores. You must use the
  :program:`mongorestore` :ref:`path option <mongorestore-path-option>` to
  limit that restored data.
optional: true
---
program: mongorestore
name: dbpath
inherit:
  name: dbpath
  program: _shared
  file: options-shared.yaml
---
program: mongorestore
name: directoryperdb
inherit:
  name: directoryperdb
  program: _shared
  file: options-shared.yaml
---
program: mongorestore
name: drop
directive: option
args: null
description: |
  Modifies the restoration procedure to drop every collection from the
  target database before restoring the collection from the dumped backup.
optional: true
---
program: mongorestore
name: filter
directive: option
args: '<JSON>'
description: |
  Limits the documents that :program:`mongorestore` imports to only those
  documents that match the JSON document specified as ``'<JSON>'``. Be
  sure to include the document in single quotes to avoid interaction with
  your system's shell environment. For an example of :option:`--filter`,
  see :ref:`backup-restore-filter`.
optional: true
---
program: mongorestore
name: help
inherit:
  name: help
  program: _shared
  file: options-shared.yaml
---
program: mongorestore
name: host
inherit:
  name: host
  program: _shared
  file: options-shared.yaml
---
program: mongorestore
name: ipv6
inherit:
  name: ipv6
  program: _shared
  file: options-shared.yaml
---
program: mongorestore
name: journal
inherit:
  name: journal
  program: _shared
  file: options-shared.yaml
---
program: mongorestore
name: keepIndexVersion
directive: option
args: null
description: |
  Prevents :program:`mongorestore` from upgrading the index to the latest
  version during the restoration process.
optional: true
---
program: mongorestore
name: noIndexRestore
directive: option
args: null
description: |
  .. versionadded:: 2.2

  Prevents :program:`mongorestore` from restoring and building indexes as
  specified in the corresponding :program:`mongodump` output.
optional: true
---
program: mongorestore
name: noobjcheck
inherit:
  name: noobjcheck
  program: mongod
  file: options-mongod.yaml
---
program: mongorestore
name: noOptionsRestore
directive: option
args: null
description: |
  .. versionadded:: 2.2

  Prevents :program:`mongorestore` from setting the collection options,
  such as those specified by the :dbcommand:`collMod` :term:`database
  command`, on restored collections.
optional: true
---
program: mongorestore
name: objcheck
directive: option
args: null
description: |
  Forces :program:`mongorestore` to validate all requests from clients
  upon receipt to ensure that clients never insert invalid documents into
  the database. For objects with a high degree of sub-document nesting,
  :option:`--objcheck` can have a small impact on performance. You can set
  :option:`--noobjcheck` to disable object checking at run-time.

  .. versionchanged:: 2.4
     MongoDB enables :option:`--objcheck` by default, to prevent any
     client from inserting malformed or invalid BSON into a MongoDB
     database.
optional: true
---
program: mongorestore
name: oplogLimit
directive: option
args: <timestamp>
description: |
  .. versionadded:: 2.2

  Prevents :program:`mongorestore` from applying :term:`oplog` entries
  newer than the ``<timestamp>``. Specify ``<timestamp>`` values in the
  form of ``<time_t>:<ordinal>``, where ``<time_t>`` is the seconds since
  the UNIX epoch, and ``<ordinal>`` represents a counter of operations in
  the oplog that occurred in the specified second.

  You must use :option:`--oplogLimit` in conjunction with the
  :option:`--oplogReplay` option.
optional: true
---
program: mongorestore
name: oplogReplay
directive: option
args: null
description: |
  Replays the :term:`oplog` after restoring the dump to ensure that the
  current state of the database reflects the point-in-time backup captured
  with the ":option:`mongodump --oplog`" command. For an example of
  :option:`--oplogReplay`, see :ref:`backup-restore-oplogreplay`.
optional: true
---
program: mongorestore
name: password
inherit:
  name: password
  program: _shared
  file: options-shared.yaml
---
program: mongorestore
name: port
inherit:
  name: port
  program: _shared
  file: options-shared.yaml
---
program: mongorestore
name: ssl
inherit:
  name: ssl
  program: _shared
  file: options-shared.yaml
---
program: mongorestore
name: sslAllowInvalidCertificates
inherit:
  name: sslAllowInvalidCertificates
  program: _shared
  file: options-shared.yaml
---
program: mongorestore
name: sslCAFile
inherit:
  name: sslCAFile
  program: _shared
  file: options-shared.yaml
---
program: mongorestore
name: sslCRLFile
inherit:
  name: sslCRLFile
  program: _shared
  file: options-shared.yaml
---
program: mongorestore
name: sslFIPSMode
inherit:
  name: sslFIPSMode
  program: _shared
  file: options-shared.yaml
---
program: mongorestore
name: sslPEMKeyFile
inherit:
  name: sslPEMKeyFile
  program: _shared
  file: options-shared.yaml
---
program: mongorestore
name: sslPEMKeyPassword
inherit:
  name: sslPEMKeyPassword
  program: _shared
  file: options-shared.yaml
---
program: mongorestore
name: username
inherit:
  name: username
  program: _shared
  file: options-shared.yaml
---
program: mongorestore
name: verbose
inherit:
  name: verbose
  program: _shared
  file: options-shared.yaml
---
program: mongorestore
name: version
inherit:
  name: version
  program: _shared
  file: options-shared.yaml
---
program: mongorestore
name: w
directive: option
args: <number of replicas per write>
description: |
  .. versionadded:: 2.2

  Specifies the :term:`write concern` for each write operation that
  :program:`mongorestore` writes to the target database. By default,
  :program:`mongorestore` does not wait for a response for :ref:`write
  acknowledgment <write-concern-acknowledged>`.
optional: true
---
program: mongorestore
name: <path>
directive: option
description: |
  The final argument of the :program:`mongorestore` command is a
  directory path. This argument specifies the location of the
  database dump from which to restore.
optional: true
...
