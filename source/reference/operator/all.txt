====
$all
====

.. default-domain:: mongodb

.. operator:: $all

   *Syntax*: ``{ field: { $all: [ <value> , <value1> ... ] }``
   
   :operator:`$all` selects the documents where the ``field`` holds an
   array and contains all elements (e.g. ``<value>``, ``<value1>``, etc.)
   in the array.
  
   Consider the following example:
   	
   .. code-block:: javascript
   		
      db.inventory.find( { tags: { $all: [ "appliances", "school", "book" ] } } )

   This query selects all documents in the ``inventory`` collection
   where the ``tags`` field contains an array with the elements,
   ``appliances``, ``school``, and ``technology``. 

   Therefore, the above query will match documents in the ``inventory``
   collection that have a ``tags`` field that hold *either* of the
   following arrays:
   
   .. code-block:: javascript
   
      [ "school", "book", "bag", "headphone", "appliances" ]
      [ "appliances", "school", "book" ]
   
   The :operator:`$all` operator exists to describe and specify arrays
   in MongoDB queries. However, you may use the :operator:`$all`
   operator to select against a non-array ``field``, as in the
   following example:
   
   .. code-block:: javascript
   		
      db.inventory.find( { qty: { $all: [ 50 ] } } )
   
   **However**, use the following form to express the same query: 

   .. code-block:: javascript
   		
      db.inventory.find( { qty: 50 } )

   Both queries will select all documents in the ``inventory``
   collection where the value of the ``qty`` field equals ``50``.

   .. note::

      In most cases, MongoDB does not treat arrays as sets. This
      operator provides a notable exception to this approach.

      Currently, $all queries scan all the documents that match
      the first element in the query array. This means that even with
      when the field is indexed, queries may take a very long time
      to return (especially when the first element in the array appears
      in many documents).
      See: https://jira.mongodb.org/browse/SERVER-1000
      
   .. seealso:: 
      :method:`find() <db.collection.find()>`, :method:`update()
      <db.collection.update()>`, and :operator:`$set`.
