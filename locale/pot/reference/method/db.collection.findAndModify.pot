# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/db.collection.findAndModify.txt:3
# 116df291af9847128690328330ef0e53
msgid "db.collection.findAndModify()"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:12
# 94a0e4c040564ecdb2feb09e1620caa5
msgid "Definition"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:16
# e2ca7183c3db48349a40ab6b662509bc
msgid "Modifies and returns a single document. By default, the returned document does not include the modifications made on the update. To return the document with the modifications made on the update, use the ``new`` option. The :method:`~db.collection.findAndModify()` method is a shell helper around the :dbcommand:`findAndModify` command."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:23
# a4333bef32be47b9aa5e395a99b33a52
msgid "The :method:`~db.collection.findAndModify()` method has the following form:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:38
# e76d95ec2437427a96898ab9fb10018c
msgid "The :method:`db.collection.findAndModify()` method takes a document parameter with the following embedded document fields:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:46
# 63ac476f43dd474393335bfc1f14a0af
msgid "Return Data"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:48
# 00f424dd8f46415b8cd341e9433ecb2a
msgid "The :method:`~db.collection.findAndModify()` method returns either: the pre-modification document or, if ``new: true`` is set, the modified document."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:54
# 3aec52d6e56141099ab093f17929c37b
msgid "If the query finds no document for ``update`` or ``remove`` operations, :method:`~db.collection.findAndModify()` returns ``null``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:58
# 1a68e344aaf5439c90e4d3a58d0c7d0a
msgid "If the query finds no document for an ``update`` with an ``upsert`` operation, :method:`~db.collection.findAndModify()` creates a new document. If ``new`` is ``false``, **and** the ``sort`` option is **NOT** specified, the method returns ``null``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:63
# d2f8f3474e5245d09d7b0cfc3d742e36
msgid "If the query finds no document for an ``update`` with an ``upsert`` operation, :method:`~db.collection.findAndModify()` creates a new document. If ``new`` is ``false``, **and** a ``sort`` option, the method returns an empty document ``{}``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:69
# 09f5ff6f6af3469f90a4ef885fbdbf95
msgid "Behavior"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:74
# fb6c22115621419bb1a1514a8c627063
msgid "Upsert and Unique Index"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:76
# b84eb7c7882b47a0b99d6b4d3c4dd55f
msgid "When :method:`~db.collection.findAndModify()` includes the ``upsert: true`` option **and** the query field(s) is not uniquely indexed, the method could insert a document multiple times in certain circumstances."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:80
# fb1d1c1d227142d9ad2c4e416c03dc82
msgid "In the following example, no document with the name ``Andy`` exists, and multiple clients issue the following command:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:92
# 41b0bf88b91a473785d73d30e82db9f2
msgid "Then, if these clients' :method:`~db.collection.findAndModify()` methods finish the ``query`` phase before any command starts the ``modify`` phase, **and** there is no unique index on the ``name`` field, the commands may all perform an upsert, creating multiple duplicate documents."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:98
# ef38e9b975dd45b1bec98fd4150648e9
msgid "To prevent the creation of multiple duplicate documents, create a :ref:`unique index <index-type-unique>` on the ``name`` field. With the unique index in place, the multiple methods will exhibit one of the following behaviors:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:103
# 4399e7ea4ae041f8b773be76a20dc8d8
msgid "Exactly one :method:`~db.collection.findAndModify()` successfully inserts a new document."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:106
# 0236f54a81ff4372b1148bb711b9ecd2
msgid "Zero or more :method:`~db.collection.findAndModify()` methods update the newly inserted document."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:109
# 265b8b39c67a4623be1b74a3235739b9
msgid "Zero or more :method:`~db.collection.findAndModify()` methods fail when they attempt to insert a duplicate. If the method fails due to a unique index constraint violation, you can retry the method. Absent a delete of the document, the retry should not fail."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:116
# 48450061f951447f8ec367c385724016
msgid "Sharded Collections"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:118
# b43eca82f0b54405b7c7ff74d19c2a79
msgid "When using :dbcommand:`findAndModify` in a :term:`sharded <sharding>` environment, the ``query`` **must** contain the :term:`shard key` for all operations against the shard cluster for the *sharded* collections."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:122
# 55e2c300785d4e78b889950c790be72d
msgid ":dbcommand:`findAndModify` operations issued against :program:`mongos` instances for *non-sharded* collections function normally."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:128
# e935775afeb14ef29bf8481a2ccc8b93
msgid "Comparisons with the ``update`` Method"
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:1
# a3b8b714064e43f28a2abd7d38b46870
msgid "When updating a document, |operation| and the :method:`~db.collection.update()` method operate differently:"
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:4
# 1de0d1750476404cbf6daef003acff3d
msgid "By default, both operations modify a single document. However, the :method:`~db.collection.update()` method with its ``multi`` option can modify more than one document."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:8
# 1eb5d85f372a493c900dd73720102daf
msgid "If multiple documents match the update criteria, for |operation|, you can specify a ``sort`` to provide some measure of control on which document to update."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:12
# 0e3714e8f19341db889f3d404a7677b6
msgid "With the default behavior of the :method:`~db.collection.update()` method, you cannot specify which single document to update when multiple documents match."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:16
# c1c1152ce3434e58b1fd1b2fe4896f28
msgid "By default, |operation| method returns |return-object|. To obtain the updated document, use the ``new`` option."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:19
# 4b01f338b3184962804ab9d79bea52e1
msgid "The :method:`~db.collection.update()` method returns a :method:`WriteResult` object that contains the status of the operation. To return the updated document, use the :method:`~db.collection.find()` method. However, other updates may have modified the document between your update and the document retrieval. Also, if the update modified only a single document but multiple documents matched, you will need to use additional logic to identify the updated document."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:27
# f197f915d78140bab653c247d75f432f
msgid "You cannot specify a :doc:`write concern </core/write-concern>` to |operation| to override the default write concern whereas, starting in MongoDB 2.6, you can specify a write concern to the :method:`~db.collection.update()` method."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:32
# ab24b41b37a645acba7c0723607379d2
msgid "When modifying a *single* document, both |operation| and the :method:`~db.collection.update()` method *atomically* update the document. See :doc:`/core/write-operations-atomicity` for more details about interactions and order of operations of these methods."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:136
# 631f9405e211473699a283b18af23147
msgid "Examples"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:139
# 621abe9581b045f3a3d9b306efeb711c
msgid "Update and Return"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:141
# d684ac28386a44eca2973d671cb39094
msgid "The following method updates and returns an existing document in the people collection where the document matches the query criteria:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:152
# 2b281e4f00d549ec86a63b0b1c44f578
msgid "This method performs the following actions:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:154
# 13179d69f07643aab358183a3e931c21
msgid "The ``query`` finds a document in the ``people`` collection where the ``name`` field has the value ``Tom``, the ``state`` field has the value ``active`` and the ``rating`` field has a value :operator:`greater than <$gt>` 10."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:159
# 373f7177445e42348e379f1791952d6c
msgid "The ``sort`` orders the results of the query in ascending order. If multiple documents meet the ``query`` condition, the method will select for modification the first document as ordered by this ``sort``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:164
# bbf8409b31644fe889939cf02bf69207
msgid "The update :operator:`increments <$inc>` the value of the ``score`` field by 1."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:167
# fdcbcdd268da4e3fafe7dd7835507792
msgid "The method returns the original (i.e. pre-modification) document selected for this update:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:180
# f8546d10e2ce4f47aeea939c305315ce
msgid "To return the modified document, add the ``new:true`` option to the method."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:183
# 637d3e72bd38427da5e14c67d7516625
msgid "If no document matched the ``query`` condition, the method returns ``null``:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:191
# 7e3baa576815476082f8620d825a8f15
msgid "Upsert"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:193
# 2593795303da45d6a8379abdccf2a5e3
msgid "The following method includes the ``upsert: true`` option for the ``update`` operation to either update a matching document or, if no matching document exists, create a new document:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:207
# 593ff96ca2a847ad8d64321827cfdf87
msgid "If the method finds a matching document, the method performs an update."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:209
# 6382408f59744fb99a817a17c8d683ec
msgid "If the method does **not** find a matching document, the method creates a new document. Because the method included the ``sort`` option, it returns an empty document ``{ }`` as the original (pre-modification) document:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:218
# 3b1c6d1bfe154ccba61a488511275b86
msgid "If the method did **not** include a ``sort`` option, the method returns ``null``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:226
# 462c2cf7aa0f4f5dba7da944665a7c50
msgid "Return New Document"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:228
# 7b480024749e4ef9af6cddb36e3a7ebf
msgid "The following method includes both the ``upsert: true`` option and the ``new:true`` option. The method either updates a matching document and returns the updated document or, if no matching document exists, inserts a document and returns the newly inserted document in the ``value`` field."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:234
# 7ffeafa59cef4909824183b245ec6e25
msgid "In the following example, no document in the ``people`` collection matches the ``query`` condition:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:247
# a1d6b5a951ea4d44871f87edaf44a39e
msgid "The method returns the newly inserted document:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:262
# 8d1a103571494f3386a748aa82171b70
msgid "Sort and Remove"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:264
# 5c72b36d53fb4784aebe346d02a0d8ea
msgid "By including a ``sort`` specification on the ``rating`` field, the following example removes from the ``people`` collection a single document with the ``state`` value of ``active`` and the lowest ``rating`` among the matching documents:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:279
# c7b66c2058b4485abab3e1db16c8d4af
msgid "The method returns the deleted document:"
msgstr ""

