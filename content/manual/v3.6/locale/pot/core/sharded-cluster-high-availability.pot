# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/sharded-cluster-high-availability.txt:5
# a20ba32b1c604380bb38847f39d17e7e
msgid "Sharded Cluster High Availability"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:0
# 7e8fc9bf6b074b8c96d1ec8de5268b3e
msgid "On this page"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:15
# 59e44a32adbb4f49970db6b51481ac8a
msgid "A :ref:`production <sharding-production-architecture>` :term:`cluster` has no single point of failure. This section introduces the availability concerns for MongoDB deployments in general and highlights potential failure scenarios and available resolutions."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:21
# a7e436635beb45318e6d8eef48488303
msgid "Application Servers or :program:`mongos` Instances Become Unavailable"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:23
# 9e9225de3ffc47a5a3883c957df9b312
msgid "If each application server has its own :program:`mongos` instance, other application servers can continue to access the database. Furthermore, :program:`mongos` instances do not maintain persistent state, and they can restart and become unavailable without losing any state or data. When a :program:`mongos` instance starts, it retrieves a copy of the :term:`config database` and can begin routing queries."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:31
# d7e74ffc6dab42038f64be2116dac40d
msgid "A Single :program:`mongod` Becomes Unavailable in a Shard"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:33
# ce6f1697217c41788f7576d4ef3df900
msgid ":doc:`Replica sets </replication>` provide high availability for shards. If the unavailable :program:`mongod` is a :term:`primary`, then the replica set will :ref:`elect <replica-set-elections>` a new primary. If the unavailable :program:`mongod` is a :term:`secondary`, and it disconnects the primary and secondary will continue to hold all data. In a three member replica set, even if a single member of the set experiences catastrophic failure, two other members have full copies of the data. [#recovery-window]_"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:42
# 572f55161245408eafa27d24885bdbde
msgid "Always investigate availability interruptions and failures. If a system is unrecoverable, replace it and create a new member of the replica set as soon as possible to replace the lost redundancy."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:46
# 409aaf8e492d4d19af660eafb2107b72
msgid "If an unavailable secondary becomes available while it still has current oplog entries, it can catch up to the latest state of the set using the normal :term:`replication process <sync>`; otherwise, it must perform an :term:`initial sync`."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:52
# a4076d006e4f419995c2fef61098ce05
msgid "All Members of a Shard Become Unavailable"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:54
# 2b85c93604624510a11ef8818db2c19c
msgid "If all members of a replica set shard are unavailable, all data held in that shard is unavailable. However, the data on all other shards will remain available, and it is possible to read and write data to the other shards. However, your application must be able to deal with partial results, and you should investigate the cause of the interruption and attempt to recover the shard as soon as possible."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:64
# 75e311910e5a4048b6109a48dc4ac9db
msgid "A Config Server Replica Set Member Become Unavailable"
msgstr ""

#: ../source/includes/fact-mirrored-config-servers-deprecated.rst:1
# d09fb00314f24b64bbd190678d8448c3
msgid "Starting in MongoDB 3.2, config servers for sharded clusters can be deployed as a :doc:`replica set </core/replication-introduction>`. The replica set config servers must run the :doc:`WiredTiger storage engine </core/wiredtiger>`. MongoDB 3.2 deprecates the use of three mirrored :program:`mongod` instances for config servers."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:70
# 760255032160437c89db0ab56bf17209
msgid ":doc:`Replica sets </replication>` provide high availability for the config servers. If an unavailable config server is a :term:`primary`, then the replica set will :ref:`elect <replica-set-elections>` a new primary."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:75
# fb7314b826f84db887e6340560a97214
msgid "If the replica set config server loses its primary and cannot elect a primary, the cluster's metadata becomes *read only*. You can still read and write data from the shards, but no :ref:`chunk migration <sharding-balancing>` or :doc:`chunk splits </tutorial/split-chunks-in-sharded-cluster>` will occur until a primary is available. If all config databases become unavailable, the cluster can become inoperable."
msgstr ""

#: ../source/includes/note-config-server-startup.rst:3
# 447258bf359b4a87bd96a03507611763
msgid "All config servers must be running and available when you first initiate a :term:`sharded cluster`."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:86
# 51ae1c4c35c8407db5c549d6b6529480
msgid "Renaming Mirrored Config Servers and Cluster Availability"
msgstr ""

#: ../source/includes/fact-rename-config-servers-requires-cluster-restart.rst:1
# 7cce50aca98048c89a85cd14afea2116
msgid "If the sharded cluster is using *mirrored* config servers instead of a replica set and the name or address that a sharded cluster uses to connect to a config server changes, you must restart **every** :program:`mongod` and :program:`mongos` instance in the sharded cluster. Avoid downtime by using CNAMEs to identify config servers within the MongoDB deployment."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:90
# d1a5e9092bf645729fb6b292f683865e
msgid "To avoid downtime when renaming config servers, use DNS names unrelated to physical or virtual hostnames to refer to your :ref:`config servers <sharding-config-server>`."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:94
# 3768387fa35040598e7c7b12bbb16ae3
msgid "Generally, refer to each config server using the DNS alias (e.g. a CNAME record). When specifying the config server connection string to :program:`mongos`, use these names. These records make it possible to change the IP address or rename config servers without changing the connection string and without having to restart the entire cluster."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:101
# d756641a18d14d9099104c317a9d319a
msgid "Shard Keys and Cluster Availability"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:103
# f298fb6e1ca44362b071fe19fb3368b3
msgid "The most important consideration when choosing a :term:`shard key` are:"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:106
# 99a5f89f710b4fd89bc5bacd8e92d15f
msgid "to ensure that MongoDB will be able to distribute data evenly among shards, and"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:109
# 6a65d2af4b1e49389f29bfdda67eaf3b
msgid "to scale writes across the cluster, and"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:111
# a7dd6a425d1b472895c74e736fbc571b
msgid "to ensure that :program:`mongos` can isolate most queries to a specific :program:`mongod`."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:114
# 296eeef18347415cbfa374cae9515da9
msgid "Furthermore:"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:116
# 2de7d72fb22146ada15da6c4f31214a7
msgid "Each shard should be a :term:`replica set`, if a specific :program:`mongod` instance fails, the replica set members will elect another to be :term:`primary` and continue operation. However, if an entire shard is unreachable or fails for some reason, that data will be unavailable."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:122
# 9f0179a6bccb4c7bb576a008baea7ac7
msgid "If the shard key allows the :program:`mongos` to isolate most operations to a single shard, then the failure of a single shard will only render *some* data unavailable."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:126
# f744dab8039d46dbbc42635a0f3c9356
msgid "If your shard key distributes data required for every operation throughout the cluster, then the failure of the entire shard will render the entire cluster unavailable."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:130
# c6bb96b091e44e4bbf223eedec5428cd
msgid "In essence, this concern for reliability simply underscores the importance of choosing a shard key that isolates query operations to a single shard."
msgstr ""

