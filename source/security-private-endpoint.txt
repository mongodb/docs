.. _private-endpoint:

=========================
Set up a Private Endpoint
=========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. include:: /includes/fact-atlas-free-tier-limits.rst

MongoDB |service| supports private endpoints on |aws| using the
`{+aws-pl+} <https://aws.amazon.com/privatelink/>`__ feature. When you
enable this feature, |service| creates its own |vpc| and places clusters
within a region behind a network load balancer in the |service| |vpc|.
Then you create resources that establish a one-way connection from your
|vpc| to the network load balancer in the |service| |vpc| using a
private endpoint.

.. figure:: /images/atlas-aws-privatelink.svg
   :width: 720px
   :alt: Image showing how {+aws-pl+} establishes connections from your
         application VPC to resources in the |service| VPC.

Connections to |service| clusters using private endpoints offer the
following advantages over other network access management options:

- Connections using private endpoints are one-way. |service| |vpc|\s
  can't initiate connections back to your |vpc|\s. This ensures your
  network trust boundary is not extended.

- Connections to private endpoints within your |vpc| can be made
  transitively from:

  - Another |vpc| peered to the private endpoint-connected |vpc|.
  - An on-premises data center connected with
    :aws:`DirectConnect </whitepapers/latest/aws-vpc-connectivity-options/aws-direct-connect-network-to-amazon.html>`
    to the private endpoint-connected |vpc|. This enables you to connect
    to |service| directly from your on-premises data center without
    whitelisting public IP addresses.

Considerations
--------------

High Availability
~~~~~~~~~~~~~~~~~

To ensure {+aws-pl+} connections to |service| can withstand an
availability zone outage, you should deploy |vpc| subnets to multiple
availability zones in a region.

.. _private-endpoint-connection-strings:

Private Endpoint-Aware Connection Strings
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

When you enable {+aws-pl+}, |service| generates an SRV record for your
VPC. This SRV record resolves to the
:aws:`interface endpoint ENIs </vpc/latest/userguide/vpce-interface.html>`
deployed in the VPC subnets you specified when you created the
{+aws-pl+} connection. The interface endpoint ENIs connect to the
network load balancer provisioned in the |service| VPC. The network
load balancer assigns a unique port to each |service| cluster node in
the region for which you enabled {+aws-pl+}.

Clients connecting to |service| clusters using {+aws-pl+} use private 
endpoint-aware connection strings containing SRV records:

.. code-block:: sh
   :copyable: false

   mongodb+srv://cluster0-pl-0-k45tj.mongodb.net/test

The SRV record used in a private endpoint-aware connection string
contains a configuration that maps a unique port for each member in a
cluster's replica set to that hostname. The ports listed correspond to
ports on the load balancer provisioned in the |service| VPC. When you
connect using {+aws-pl+}, all nodes in an |service| cluster are
accessible via the same hostname, with the load balancer resolving
individual nodes by their port.

The following example shows a DNS lookup of the SRV record for a
{+aws-pl+}-enabled single-region cluster, showing three unique ports
defined for the ``cluster0-pl-0-k45tj.mongodb.net`` hostname:

.. code-block:: sh
   :copyable: false

   $ nslookup -type=SRV _mongodb._tcp.cluster0-pl-0-k45tj.mongodb.net

   Server: 127.0.0.53
   Address: 127.0.0.53#53

   Non-authoritative answer:
   _mongodb._tcp.cluster0-pl-0-k45tj.mongodb.net service = 0 0 3 pl-0-us-east-1-k45tj.mongodb.net.
   _mongodb._tcp.cluster0-pl-0-k45tj.mongodb.net service = 0 0 1 pl-0-us-east-1-k45tj.mongodb.net.
   _mongodb._tcp.cluster0-pl-0-k45tj.mongodb.net service = 0 0 2 pl-0-us-east-1-k45tj.mongodb.net.

The hostname that the SRV record contains is a CNAME record that
resolves to the endpoint-specific regional DNS name |aws| generates for
the interface endpoint in your VPC. An alias record exists for each
subnet in your VPC that you deployed the interface endpoint to. Each
alias record contains the private IP address of the
:aws:`interface endpoint ENI </vpc/latest/userguide/vpce-interface.html>` 
for that subnet in your VPC.

The following example shows the DNS lookup for the hostname in the SRV
record, including the endpoint-specific regional DNS name for the
interface endpoint and its alias records:

.. code-block:: sh
   :copyable: false

   $ nslookup pl-0-us-east-1-k45tj.mongodb.net
   Server: 127.0.0.53
   Address: 127.0.0.53#53

   Non-authoritative answer:
   pl-0-us-east-1-k45tj.mongodb.net
   canonical name = vpce-024f5b57108c8d3ed-ypwbxwll.vpce-svc-02863655456245e5c.us-east-1.vpce.amazonaws.com.
   
   Name: vpce-024f5b57108c8d3ed-ypwbxwll.vpce-svc-02863655456245e5c.us-east-1.vpce.amazonaws.com
   Address: 10.0.30.194
   Name: vpce-024f5b57108c8d3ed-ypwbxwll.vpce-svc-02863655456245e5c.us-east-1.vpce.amazonaws.com
   Address: 10.0.20.54

When a client in your VPC connects to an |service| cluster using a
private endpoint-aware connection string, the client attempts to
establish a connection to the load balancer in the |service| VPC
through one of the
:aws:`interface endpoint ENIs </vpc/latest/userguide/vpce-interface.html>`.
Your client's DNS resolution mechanism handles which of the interface
endpoint ENIs the hostname resolves to. If one ENI is unavailable the
next is used. This is opaque to the driver or other connection
mechanism. The driver is only aware of the hostname in the SRV record,
listening on one port for each node in the clusterâ€™s replica set.

See :ref:`Connect to Atlas using a Private Endpoint <connect-private-endpoint>`
to learn how to connect to |service| clusters using private 
endpoint-aware connection strings.

IP Whitelists and VPC Peering with Private Endpoints
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

When Private Endpoints are enabled, you can still enable access to your
|service| clusters using other methods, such as public
:doc:`IP whitelisting </security-whitelist>`
and :doc:`VPC peering </security-vpc-peering>`.

Clients connecting to |service| clusters using other methods use
standard connection strings. Your clients might have to identify when
to use private endpoint-aware connection strings and standard
connection strings.

Limitations
-----------

- You can't use {+aws-pl+} to connect to |service| clusters running
  MongoDB version 3.6 or earlier.

- {+aws-pl+} must be active in all regions into which you deploy a
  multi-region cluster. You receive an error if {+aws-pl+} is active in
  some, but not all, targeted regions.

- If you create private endpoints in more than one region, you can't
  create more than one private endpoint in each region. If you create
  more than one private endpoint in a single region, you can't create
  private endpoints in other regions.

- You can use {+aws-pl+} in |service| projects with up to 50
  addressable targets **per region**. Use additional projects or
  regions to connect to addressable targets beyond this limit in the
  same region.

  Addressable targets include:

  - Each node in a replica set, excluding nodes that comprise a shard
    in a sharded cluster.
  - Each ``mongos`` instance for sharded clusters.
  - Each |bic| instance across all dedicated clusters in the project.

  .. note::

     To request a one-time increase to use {+aws-pl+} with up to 100
     addressable targets per |service| project, contact
     :ref:`MongoDB Support <request-support>`.

- When you delete all {+aws-pl+} endpoints for a region in |service|,
  you must manually
  :aws:`delete the private endpoint </vpc/latest/userguide/delete-vpc-endpoint.html>`.
  |aws| lists the endpoint as ``rejected``. |service| can't delete this
  resource because it lacks the required permissions.

Prerequisites
-------------

To enable connections to |service| using private endpoints, you must:

1. Have either the :authrole:`Project Owner` or
   :authrole:`Organization Owner` role in |service|.

#. Have an |aws| user account with an |iam| user policy that grants
   permissions to create, modify, describe, and delete endpoints. For
   more information on controlling the use of VPC endpoints, see the
   :aws:`AWS Documentation </vpc/latest/userguide/vpc-endpoints.html>`.

#. **(Recommended)**:
   :aws:`Install the AWS CLI </cli/latest/userguide/cli-chap-install.html>`.

#. If you have not already done so, create your |VPC| and EC2 instances
   in |aws|. See the :aws:`AWS documentation </index.html>` for guidance.

Procedures
----------

Configure an |service| Private Endpoint
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Enable clients to connect to |service| clusters using private endpoints
with the following procedure:

.. include:: /includes/steps/configure-privatelink.rst

.. _connect-private-endpoint:

Connect to |service| using a Private Endpoint
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You use a private endpoint-aware connection string when you connect to
|service| clusters using a private endpoint:

.. code-block:: sh
   :copyable: false

   mongodb+srv://cluster0-pl-0-k45tj.mongodb.net/test

.. note::

   For important considerations about private endpoint-aware connection
   strings, see
   :ref:`Private Endpoint-Aware Connection Strings <private-endpoint-connection-strings>`.

Use a private endpoint-aware connection string to connect to an
|service| cluster with the following procedure:

.. include:: /includes/steps/connect-to-cluster-privatelink.rst

.. _pl-troubleshooting:

Troubleshoot {+aws-pl+} Connection Issues
----------------------------------------------

.. include:: /includes/steps/troubleshoot-privatelink.rst
