.. _rust-connection-monitoring:

==========================
Connection Pool Monitoring
==========================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecols

Overview
--------

This guide shows you how to use the {+driver-short+} to monitor the
driver's connection pool. A connection pool is a set of open
Transmission Control Protocol (TCP) connections that your driver
maintains with a MongoDB instance. Connection pools help reduce the
number of new connections your application needs to create,
which might make your application run faster.

You can use information about changes to your connection pool in your
application, or you can monitor the connection pool to learn more about
how the driver uses connections.

This guide includes the following sections:

- :ref:`Event Descriptions <rust-cpm-descriptions>` describes
  the connection pool events that the driver can generate

- :ref:`Event Subscription Example <rust-cpm-example>`
  provides sample code that shows how to subscribe to a connection pool event

- :ref:`Example Event Documents <rust-cpm-documents>`
  provides samples of each connection pool event
  
- :ref:`Additional Information <rust-cpm-addtl-info>`
  provides links to resources and API documentation for types
  and methods mentioned in this guide

.. _rust-cpm-descriptions:

Event Descriptions
------------------

You can subscribe to one or more of the following connection pool
monitoring events:

.. list-table::
   :widths: 33 67
   :header-rows: 1

   * - Event Name
     - Description

   * - `PoolCreatedEvent <{+api+}/event/cmap/struct.PoolCreatedEvent.html>`__
     - Created when a connection pool is created.

   * - `PoolReadyEvent <{+api+}/event/cmap/struct.PoolReadyEvent.html>`__
     - Created when a connection pool is ready.

   * - `PoolClearedEvent <{+api+}/event/cmap/struct.PoolClearedEvent.html>`__
     - Created when a connection pool is cleared.

   * - `PoolClosedEvent <{+api+}/event/cmap/struct.PoolClosedEvent.html>`__
     - Created when a connection pool is closed, before the destruction of
       the server instance.

   * - `ConnectionCreatedEvent <{+api+}/event/cmap/struct.ConnectionCreatedEvent.html>`__
     - Created when a connection is created, but not necessarily
       when it is used for an operation.

   * - `ConnectionReadyEvent <{+api+}/event/cmap/struct.ConnectionReadyEvent.html>`__
     - Created after a connection successfully completes a
       handshake and is ready to be used for operations.

   * - `ConnectionClosedEvent <{+api+}/event/cmap/struct.ConnectionClosedEvent.html>`__
     - Created when a connection is closed.

   * - `ConnectionCheckoutStartedEvent <{+api+}/event/cmap/struct.ConnectionCheckoutStartedEvent.html>`__
     - Created when an operation attempts to acquire a connection for
       execution.

   * - `ConnectionCheckoutFailedEvent <{+api+}/event/cmap/struct.ConnectionCheckoutFailedEvent.html>`__
     - Created when an operation cannot acquire a connection for
       execution.

   * - `ConnectionCheckedOutEvent <{+api+}/event/cmap/struct.ConnectionCheckedOutEvent.html>`__
     - Created when an operation successfully acquires a connection for
       execution.

   * - `ConnectionCheckedInEvent <{+api+}/event/cmap/struct.ConnectionCheckedInEvent.html>`__
     - Created when a connection is checked back into the pool after an operation
       is executed.

.. _rust-cpm-example:

Event Subscription Example
--------------------------

You can access one or more connection pool events by
subscribing to them in your application. The following example connects
to a MongoDB deployment and subscribes to the ``ConnectionCreatedEvent`` event type:

.. literalinclude:: /includes/fundamentals/code-snippets/monitoring/cpm-subscribe.rs
   :language: rust
   :dedent:
   :start-after: begin-cmap
   :end-before: end-cmap

.. _rust-cpm-documents:

Example Event Documents
-----------------------

The following sections show sample output for each type of connection
pool monitoring event.

PoolCreatedEvent
~~~~~~~~~~~~~~~~

.. code-block:: none
   :copyable: false

   PoolCreatedEvent {
     address: ...,
     options: {...}
   }

PoolReadyEvent
~~~~~~~~~~~~~~

.. code-block:: none
   :copyable: false

   PoolReadyEvent {
     address: ...
   }

PoolClearedEvent
~~~~~~~~~~~~~~~~

.. code-block:: none
   :copyable: false

   PoolClearedEvent {
     address: ...,
     service_id: ...,
   }

PoolClosedEvent
~~~~~~~~~~~~~~~

.. code-block:: none
   :copyable: false

   PoolClosedEvent {
     address: ...
   }

ConnectionCreatedEvent
~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none
   :copyable: false

   ConnectionCreatedEvent {
     address: ...,
     connection_id: 1
   }

ConnectionReadyEvent
~~~~~~~~~~~~~~~~~~~~

.. code-block:: none
   :copyable: false

   ConnectionReadyEvent {
     address: ...,
     connection_id: 1
   }

ConnectionClosedEvent
~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none
   :copyable: false

   ConnectionClosedEvent {
     address: ...,
     connection_id: 1,
     reason: ...,
     /* private fields */
   }

ConnectionCheckOutStartedEvent
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none
   :copyable: false

   ConnectionCheckOutStartedEvent {
     address: ...,
   }

ConnectionCheckoutFailedEvent
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none
   :copyable: false

   ConnectionCheckOutFailedEvent {
     address: ...,
     reason: ...,
     /* private fields */
   }

ConnectionCheckedOutEvent
~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none
   :copyable: false

   ConnectionCheckedOutEvent {
     address: ...,
     connection_id: 1
   }

ConnectionCheckedInEvent
~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none
   :copyable: false

   ConnectionCheckedInEvent {
     address: ...,
     connection_id: 1
   }

.. _rust-cpm-addtl-info:

Additional Information
----------------------

To learn more about monitoring a MongoDB deployment, see the :website:`How
to Monitor MongoDB
</basics/how-to-monitor-mongodb-and-what-metrics-to-monitor>` article.

To learn more about connecting to MongoDB, see the
:ref:`rust-connect-to-mongodb`.

To learn more about improving the performance of your application, see
the guide on :ref:`rust-performance`.

API Documentation
~~~~~~~~~~~~~~~~~

To learn more about the methods and types mentioned in this
guide, see the following API documentation:

- `CmapEventHandler <{+api+}/event/cmap/trait.CmapEventHandler.html>`__
- `ClientOptions <{+api+}/options/struct.ClientOptions.html>`__
- `Client::with_options() <{+api+}/struct.Client.html#method.with_options>`__