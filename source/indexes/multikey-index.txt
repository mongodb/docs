.. _scala-multikey-index:

================
Multikey Indexes
================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. facet::
   :name: genre
   :values: reference
 
.. meta::
   :keywords: index, query, optimization, efficiency

Overview
--------

**Multikey indexes** are indexes that improve the performance of queries
on array-valued fields. You can create a multikey index on a collection
by using the ``createIndex()`` method and the same syntax that you use to create 
a :ref:`single field index <scala-single-field-index>`.

When creating a multikey index, you must specify the following details:

- The fields on which to create the index

- The sort order for each field (ascending or descending)

Sample Data
~~~~~~~~~~~

The examples in this guide use the ``movies`` collection in the ``sample_mflix``
database from the :atlas:`Atlas sample datasets </sample-data>`. To access this collection
from your Scala application, create a ``MongoClient`` that connects to an Atlas cluster
and assign the following values to your ``database`` and ``collection`` variables:

.. literalinclude:: /includes/indexes/multikey-field.scala
    :language: scala
    :dedent:
    :start-after: start-db-coll
    :end-before: end-db-coll

To learn how to create a free MongoDB Atlas cluster and load the sample datasets, see the
:atlas:`Get Started with Atlas </getting-started>` guide.

Create a Multikey Index
-----------------------

To run the examples in this guide, you must include the following import 
statements in your file:

.. literalinclude:: /includes/indexes/multikey-field.scala
   :start-after: start-multikey-index-imports
   :end-before: end-multikey-index-imports
   :language: scala
   :copyable:
   :dedent:

Use the ``createIndex()`` method to create a
multikey index. The following example creates an index in ascending order 
on the ``cast`` field:

.. literalinclude:: /includes/indexes/multikey-field.scala
   :start-after: start-index-multikey
   :end-before: end-index-multikey
   :language: scala
   :copyable:
   :dedent:

You can verify that the index was created by calling the ``listIndexes()`` method.
You should see an index for ``cast`` in the list, as shown in the following output:

.. io-code-block::
   :copyable: true

   .. input:: /includes/indexes/multikey-field.scala
      :start-after: start-check-multikey-index
      :end-before: end-check-multikey-index
      :language: scala
      :dedent:

   .. output::
      :visible: true

      {"v": 2, "key": {"cast": 1}, "name": "cast_1"}

The following is an example of a query that is covered by the index
created on the ``cast`` field:

.. io-code-block::
   :copyable: true

   .. input:: /includes/indexes/multikey-field.scala
      :start-after: start-index-multikey-query
      :end-before: end-index-multikey-query
      :language: scala
      :dedent:

   .. output::
      :visible: false

      {"_id":...,"title":"Fanaa",...,"cast": ["Aamir Khan", "Kajol", "Rishi Kapoor", "Tabu"],...}

Additional Information
----------------------

To learn more about multikey indexes, see :manual:`Multikey
Indexes </core/indexes/index-types/index-multikey/>` in the {+mdb-server+} manual.

To view runnable examples that demonstrate how to manage indexes, see
:ref:`scala-indexes`.

API Documentation
~~~~~~~~~~~~~~~~~

To learn more about any of the methods discussed in this guide, see the following API
documentation:

- `createIndex() <{+driver-api+}/MongoCollection.html#createIndex(key:org.mongodb.scala.bson.conversions.Bson,options:org.mongodb.scala.model.IndexOptions):org.mongodb.scala.SingleObservable[String]>`__
- `find() <{+driver-api+}/MongoCollection.html#find[C](filter:org.mongodb.scala.bson.conversions.Bson)(implicite:org.mongodb.scala.bson.DefaultHelper.DefaultsTo[C,TResult],implicitct:scala.reflect.ClassTag[C]):org.mongodb.scala.FindObservable[C]>`__
- `listIndexes() <{+driver-api+}/MongoCollection.html#listIndexes[C]()(implicite:org.mongodb.scala.bson.DefaultHelper.DefaultsTo[C,org.mongodb.scala.Document],implicitct:scala.reflect.ClassTag[C]):org.mongodb.scala.ListIndexesObservable[C]>`__
