object:
  name: group
  type: command
field:
  optional: false
  type: field
name: ns
type: string
position: 1
description: |
  The collection from which to perform the group by operation.
---
object:
  name: group
  type: command
field:
  optional: false
  type: field
name: key
type: document
position: 2
description: |
  The field or fields to group. Returns a "key object" for use as the
  grouping key.
---
object:
  name: group
  type: command
field:
  optional: false
  type: field
name: reduce
type: function
position: 3
description: |
  An aggregation function that operates on the documents during the
  grouping operation. These functions may return a sum or a count. The
  function takes two arguments: the current document and an aggregation
  result document for that group
---
object:
  name: group
  type: command
field:
  optional: false
  type: field
name: initial
type: document
position: 4
description: |
  Initializes the aggregation result document.
---
object:
  name: group
  type: command
field:
  optional: true
  type: field
name: keyf
type: function
position: 5
description: |
  Alternative to the ``key`` field. Specifies a function that creates a
  "key object" for use as the grouping key. Use ``keyf`` instead of
  ``key`` to group by calculated fields rather than existing document
  fields.
---
object:
  name: group
  type: command
field:
  optional: true
  type: field
name: cond
type: document
position: 6
description: |
  The selection criteria to determine which documents in the
  collection to process. If you omit the ``cond`` field,
  :dbcommand:`group` processes all the documents in the
  collection for the group operation.
---
object:
  name: group
  type: command
field:
  optional: true
  type: field
name: finalize
type: function
position: 7
description: |
  A function that runs each item in the result set before
  :dbcommand:`group` returns the final value. This function can either
  modify the result document or replace the result document as a whole.
  Keep in mind that, unlike the ``$keyf`` and ``$reduce`` fields that
  also specify a function, this field name is ``finalize``, *not*
  ``$finalize``.
...
