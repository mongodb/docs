.. _user-roles:

====================
|service| User Roles
====================

.. default-domain:: mongodb

.. facet::
   :name: genre
   :values: reference

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

|service| user roles define the actions |service| users can perform in
organizations, projects, or both. Organization and project ``Owners``
can manage |service| users and their roles within their respective
organizations and projects.

You can apply these permissions **only** on the :ref:`the 
organization level <org-level-best-practices>` or
:ref:`the project level <project-level-best-practices>`. So,
you should carefully plan the hierarchy of your
organizations and projects. To learn more, see
:ref:`<db-deployment-best-practices>`.

.. _organization-roles:

Organization Roles
------------------

.. list-table::
   :header-rows: 1
   :widths: 25 25 50

   * - Organization Role (UI)
     - Organization Role (API)
     - Description

   * - .. authrole:: Organization Owner

     - ``ORG_OWNER``

     - Grants root access to the organization, including:

       - :authrole:`Project Owner` access to all projects in
         the organization, which grants database access, even if 
         added to a project with a non-Owner role.

       - Privileges to administer organization settings.

       - Privileges to add, modify, or delete |service| users and :ref:`database users <mongodb-users>`
         within the organization.

       - Privileges to delete the organization.
       
       - Privileges to add, modify, or delete :ref:`resource tags  
         <configure-resource-tags>`.

       - All the privileges granted by the other organization roles
         combined.

   * - .. authrole:: Organization Project Creator

     - ``ORG_GROUP_CREATOR``

     - Grants the following access:

       - Privileges to create projects in the organization.

       - Privileges granted by the :authrole:`Organization Member` role.

   * - .. authrole:: Organization Billing Admin

     - ``ORG_BILLING_ADMIN``

     - Grants the following access:

       - Privileges to administer billing information for the organization.

       - Privileges granted by the :authrole:`Organization Member` role.

       - Privileges to create, edit, delete, acknowledge, and 
         unacknowledge billing alerts.

   * - .. authrole:: Organization Billing Viewer

     - ``ORG_BILLING_READ_ONLY``

     - Grants the following access:

       - Privileges to view billing information for the organization.

       - Privileges granted by the :authrole:`Organization Member` role.

   * - .. authrole:: Organization Read Only

     - ``ORG_READ_ONLY``

     - Provides read-only access to the settings, users, and projects 
       in the organization.

   * - .. authrole:: Organization Member

     - ``ORG_MEMBER``

     - Provides read-only access to the settings and users
       in the organization and the projects they belong to.

       Unlike :authrole:`Organization Read Only`,
       an :authrole:`Organization Member` can only access projects 
       they have been explicitly added to.

       For an :authrole:`Organization Member`, within a project, the
       user has the privileges as determined by the user's
       :ref:`project role <project-roles>`. If a user's project role is
       :authrole:`Project Owner`, then the user can
       add a new user to the project, which results in adding the
       newly-added user to the organization as well (if the newly added
       user is not already in the organization).

.. _project-roles:

Project Roles
-------------

The following roles grant privileges within a project.

.. list-table::
   :header-rows: 1
   :widths: 25 25 50

   * - Project Role (UI)
     - Project Role (API)
     - Description

   * - .. authrole:: Project Owner

     - ``GROUP_OWNER``

     - Grants the privileges to perform the following actions: 

       - :ref:`create-new-database-deployment`.
     
       - Manage :ref:`project access <manage-project-access>` and 
         :ref:`project settings <project-settings>`.

       - Manage :ref:`IP Access List <access-list>` entries.

       - :ref:`Manage programmatic access to a project 
         <about-project-api-keys>`.
       
         You can grant |api| Keys access to a project with either an
         organization or a project role. If your key has both the
         :authrole:`Organization Owner` and :authrole:`Project Owner`
         roles, it can access all projects in the organization.
  
       - Manage :ref:`database access <mongodb-users>` for {+database-deployments+} within 
         the project.
       
       - Retrieve :ref:`process <mongodb-logs>` and :ref:`audit 
         <set-up-database-auditing>` logs for all clusters in the project.

       - :ref:`Manage backups for and restore data to
         <restore-archive-snapshots>` all clusters in the project. 

       - :charts:`Launch MongoDB Charts </launch-charts>`.

       - :charts:`Connect or disconnect Charts data sources 
         </connect-disconnect-data-source/>`.

       - :appservices:`Create {+app-services+} apps </manage-apps/create/create-with-realm-ui/>`.
       
       - Add, modify, or delete :ref:`resource tags  
         <configure-resource-tags>`.

   * - .. authrole:: Project Cluster Manager

     - ``GROUP_CLUSTER_MANAGER``

     - A user with the :authrole:`Project Cluster Manager` role can 
       perform the following tasks:
       
       - Grants access to edit, :ref:`pause <pause-terminate-cluster>`,
         and resume |service| clusters.

       - :ref:`Test failover <test-failover>`.
      
       The :authrole:`Project Cluster Manager` role doesn't allow users
       to:

       - Create |service| {+database-deployments+}.
      
       - Access the :ref:`Data Explorer <atlas-ui>`.

       - Retrieve :ref:`process <mongodb-logs>` and
         :ref:`audit <set-up-database-auditing>` logs.

   * - .. authrole:: Project Stream Processing Owner

     - ``GROUP_STREAM_PROCESSING_OWNER``

     - A user with the :authrole:`Project Stream Processing Owner`
       role can perform the following tasks:
       
       - Edit, :ref:`pause <pause-terminate-cluster>`,
         and resume |service| clusters.
  
       - Manage :ref:`database access <mongodb-users>` for
         {+database-deployments+} within the project.

       - :ref:`Test failover <test-failover>`.

       - Access the :ref:`Data Explorer <atlas-ui>`.

       - :ref:`manage-spi-view`
       - :ref:`manage-spi-create`
       - :ref:`manage-spi-delete`
       - :ref:`manage-spi-edit`
       - :ref:`manage-spi-connection-view`
       - :ref:`manage-spi-connection-add`
       - :ref:`manage-spi-connection-modify`
       - :ref:`manage-spi-connection-delete`

       - Download and manage {+spi+} audit logs.

       The :authrole:`Project Stream Processing Owner` role doesn't
       allow users to:

       - Create |service| {+database-deployments+}.

       - Retrieve :ref:`process <mongodb-logs>` and
         :ref:`database audit <set-up-database-auditing>` logs.       

   * - .. authrole:: Project Data Access Admin

     - ``GROUP_DATA_ACCESS_ADMIN``

     - Grants access to the :ref:`Data Explorer <atlas-ui>`. This 
       role also grants privileges of :authrole:`Project Read
       Only`.

       Allows the user to perform the following
       :ref:`Data Explorer <atlas-ui>` actions:

       - View, create, and drop databases, collections, and indexes.

       - **UI only**: View, modify, and delete documents. You can't
         read or write data using the {+atlas-admin-api+}.

       - Retrieve :ref:`process <mongodb-logs>` and :ref:`audit 
         <set-up-database-auditing>` logs for all clusters in the project.

       - View the sample query field values in the 
         :ref:`Performance Advisor <performance-advisor>`.

       - View collection-level query latency with 
         :ref:`Namespace Insights <namespace-insights>`.
       
       - View query performance in the :ref:`Query Profiler 
         <query-profiler>`.

       - View real-time performance in the 
         :ref:`Real-Time Performance Panel 
         <real-time-metrics-status-tab>`.

       - :charts:`Launch MongoDB Charts </launch-charts>`.
        
       The :authrole:`Project Data Access Admin` role does not grant 
       privileges to initiate backup or restore jobs.

       .. COMMENT
          In Atlas, Data Access Admin does not have access to real time 
          metrics tab, so can't actually get to the screen to kill.  As 
          such, will not mention the killOp privilege in Atlas. Mention 
          only in CloudMgr/OpsMgr docs.

   * - .. authrole:: Project Data Access Read/Write

     - ``GROUP_DATA_ACCESS_READ_WRITE``

     - Grants access to the :ref:`Data Explorer <atlas-ui>`;
       specifically, the privileges to perform the following through the
       :ref:`{+atlas-ui+} <atlas-ui>`:

       - View and create databases and collections.

       - **UI only**: View, modify, and delete documents.  You can't
         read or write data using the {+atlas-admin-api+}.

       - View indexes.

       - Retrieve :ref:`process <mongodb-logs>` and 
         :ref:`audit <set-up-database-auditing>` logs for all clusters in the 
         project.

       - View the sample query field values in the 
         :ref:`Performance Advisor <performance-advisor>`.

       - View collection-level query latency with 
         :ref:`Namespace Insights <namespace-insights>`.

       - View query performance in the :ref:`Query Profiler 
         <query-profiler>`.

       - View real-time performance in the 
         :ref:`Real-Time Performance Panel 
         <real-time-metrics-status-tab>`.

       - :charts:`Launch MongoDB Charts </launch-charts>`.

   * - .. authrole:: Project Data Access Read Only

     - ``GROUP_DATA_ACCESS_READ_ONLY``

     - Grants access to the :ref:`Data Explorer <atlas-ui>`;
       specifically, to perform the following actions through the
       :ref:`{+atlas-ui+} <atlas-ui>`: 
       
       - View databases and collections.

       - **UI only**: View documents. You can't read or write data
         using the {+atlas-admin-api+}.

       - View indexes.
       
       - Retrieve :ref:`process <mongodb-logs>` and 
         :ref:`audit <set-up-database-auditing>` logs for all clusters in the 
         project.

       - View the sample query field values in the 
         :ref:`Performance Advisor <performance-advisor>`.

       - View collection-level query latency with 
         :ref:`Namespace Insights <namespace-insights>`.

       - View query performance in the :ref:`Query Profiler 
         <query-profiler>`.

       - View real-time performance in the 
         :ref:`Real-Time Performance Panel 
         <real-time-metrics-status-tab>`.

       - :charts:`Launch MongoDB Charts </launch-charts>`.

   * - .. authrole:: Project Read Only

     - ``GROUP_READ_ONLY``

     - Grants metadata view-only access to the project control pane for 
       all of the projects in the organization, including: all activity, 
       operational data, users, and user roles.
       The user, however, cannot access the 
       :ref:`Data Explorer <atlas-ui>` or retrieve 
       :ref:`process <mongodb-logs>` and :ref:`audit 
       <set-up-database-auditing>` logs. The user can view 
       {+database-deployment+} :ref:`metric charts 
       <monitor-cluster-metrics>`.

       Grants access to |charts| only if :ref:`invited <view-invitations>` 
       to the project by a :authrole:`Project Owner`. The user, however, 
       cannot access data from |charts-short|, unless the
       :authrole:`Project Owner` also grants them :charts:`data source access
       </manage-data-sources/#modify-role-permissions-for-data-sources>`.

   * - .. authrole:: Project Search Index Editor

     - ``GROUP_SEARCH_INDEX_EDITOR``

     - Grants the privileges to perform the following actions:

       - :ref:`ref-create-index`.

       - :ref:`ref-view-index`.

       - :ref:`ref-edit-index`.
     
       - :ref:`ref-delete-index`.
