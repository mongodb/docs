=====================================
MMS Agent Authentication Requirements
=====================================

.. default-domain:: mongodb

.. TODO authentication --> access control

If your MongoDB deployment requires authentication, |mms| requires
additional privileges to collect complete data from MongoDB 2.4 and MongoDB 2.6
instances. If authentication is not enabled on your MongoDB instance,
this requirement does not apply.

The MMS Monitoring and MMS Backup agents authenticate to your MongoDB
instances using the username and password that you provide in the UI.
This document describes the requirements for those users.

Define all user accounts on the ``admin`` database.

.. only:: saas

   .. include:: /includes/fact-auth-backup-requirements.rst

.. _required-permissions_mms_backup:

MMS Backup
----------

MongoDB 2.6
~~~~~~~~~~~

To backup MongoDB 2.6 instances, the Backup agent must be able to
authenticate to the database with a user that has
the :authrole:`backup` role.

Create a user with this roles on the ``admin`` database with an
operation that resembles the following:

.. code-block:: javascript

   use admin
   db.createUser( { user: "<username>",
                    pwd: "<password>",
                    roles: [ { role: "backup", db: "admin" } ] } )

MongoDB 2.4
~~~~~~~~~~~

To backup MongoDB 2.4 instances, the Backup agent must be able to
authenticate to the database with a user that has following roles:

- :authrole:`clusterAdmin`
- :authrole:`readAnyDatabase`
- :authrole:`userAdminAnyDatabase`

And the following ``otherDBRoles``:

- :authrole:`readWrite` role on the ``local`` database
- :authrole:`readWrite` role on the ``admin`` database

Create a user on the ``admin`` database with an operation that
resembles the following:

.. code-block:: javascript

   use admin
   db.addUser( { user: "<username>",
                 pwd: "<password>",
                 roles: [ "clusterAdmin",
                          "readAnyDatabase",
                          "userAdminAnyDatabase"
                        ],
                  otherDBRoles: { local: ['readWrite'],
                                  admin: ['readWrite'] } } )

MMS Monitoring
--------------

MongoDB 2.6
~~~~~~~~~~~

To monitor MongoDB 2.6 instances, the agent must be able to
authenticate to the database with a user that has
the :authrole:`clusterMonitor` role.

Create a user with this role on the ``admin`` database with an
operation that resembles the following:

.. code-block:: javascript

   use admin
   db.createUser( { user: "<username>",
                    pwd: "<password>",
                    roles: [
                      { role: "clusterMonitor", db: "admin" }
                    ] } )

MongoDB 2.4
~~~~~~~~~~~

To monitor MongoDB 2.4 instances, the agent must be able to
authenticate to the database with a user that have the following
roles:

- :authrole:`clusterAdmin`
- :authrole:`readAnyDatabase`

Create a user with these roles on the ``admin`` database with an
operation that resembles the following:

.. code-block:: javascript

   use admin
   db.addUser( { user: "<username>",
                 pwd: "<password>",
                 roles: [ "clusterAdmin",
                          "readAnyDatabase" ] } )

Because user accounts created for basic monitoring do not require the
:authrole:`dbAdminAnyDatabase`
role, the :program:`mongod` log file may report the following messages at the
default logging level:

.. code-block:: none

   command denied: { profile: -1 }

You can safely ignore this message if you do not want MMS to collect profile
data. If you want to collect profile data, configure MMS monitoring with
database profiling as described below.

MMS Monitoring with Database Profiling
--------------------------------------

:ref:`Profiling <database-profiler>` captures in-progress read and write
operations, cursor operations, and database command information about the
database.

MongoDB 2.6
~~~~~~~~~~~

MMS monitoring of MongoDB 2.6 databases with database profiling requires
authenticated users to have the :authrole:`clusterMonitor` role.

.. code-block:: javascript

   use admin
   db.createUser( { user: "<username>",
                    pwd: "<password>",
                    roles: [ { role: "clusterMonitor", db: "admin" } ] } )

MongoDB 2.4
~~~~~~~~~~~

MMS monitoring of MongoDB 2.4 databases with database profiling requires
authenticated users to have these roles:

- :authrole:`clusterAdmin`
- :authrole:`readAnyDatabase`
- :authrole:`dbAdminAnyDatabase`

Create a user with these roles on the ``admin`` database with an
operation that resembles the following:

.. code-block:: javascript

   use admin
   db.addUser( { user: "<username>",
                 pwd: "<password>",
                 roles: [ "clusterAdmin",
                          "readAnyDatabase",
                          "dbAdminAnyDatabase"
                        ] } )

MMS Monitoring *without* ``dbStats``
------------------------------------

Monitoring without :dbcommand:`dbStats` will generate monitoring statistics
without database storage, records, indexes, and other statistics.

MongoDB 2.6
~~~~~~~~~~~

The :authrole:`clusterMonitor` includes access to the
:authaction:`dbStats` operations. Create a user on the ``admin``
database with :authrole:`clusterMonitor` as in the following example.

.. code-block:: javascript

   use admin
   db.createUser( { user: "<username>",
                    pwd: "<password>",
                    roles: [ { role: "clusterMonitor", db: "admin" } ] } )

MongoDB 2.4
~~~~~~~~~~~

To monitor MongoDB 2.4 instance *with* database profiling that requires
authenticated users have the :authrole:`clusterAdmin` role.

To provision this access, create a user with this role on the
``admin`` database with an operation that resembles the following:

.. code-block:: javascript

   use admin
   db.addUser( { user: "<username>",
                 pwd: "<password>",
                 roles: [ "clusterAdmin" ] } )
