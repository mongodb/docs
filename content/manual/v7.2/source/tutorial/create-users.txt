.. _create-users:

=============
Create a User
=============

.. default-domain:: mongodb

.. facet::
   :name: programming_language
   :values: shell

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 3
   :class: singlecol

With access control enabled, users are required to identify themselves.
You have to grant a user one or more :ref:`roles <roles>`. A role grants
a user :ref:`privileges <privileges>` to perform certain :ref:`actions
<security-user-actions>` on MongoDB :ref:`resources
<resource-document>`.

Each application and user of a MongoDB system should map to a distinct
user. This principle of *access isolation* facilitates access revocation
and ongoing user maintenance. To ensure a system of :term:`least
privilege`, only grant the minimal set of privileges required to a user.

The user information on this page applies to deployments hosted in 
all of the following environments unless specified otherwise:

.. include:: /includes/fact-environments.rst

{+atlas+} Limitations
------------------------------

The following limitations apply only to deployments hosted in
{+atlas+}. If any of these limits present a problem for your organization, 
contact :atlas:`Atlas support </support>`.

* The available {+atlas+} :atlas:`built-in roles </security-add-mongodb-users/#std-label-atlas-user-privileges>` 
  and :atlas:`specific privileges </security-add-mongodb-users/#std-label-atlas-specific-privileges>` 
  support a subset of MongoDB commands. 
  See :atlas:`Unsupported Commands in M10+ Clusters </unsupported-commands/#std-label-paid-tier-command-limitations>` 
  for more information.

* {+atlas+} supports a maximum of 100 database users per {+atlas+}
  project. If you require more than 100 database users on a project,
  contact :atlas:`Atlas support </support>`.

* You must use the :atlas:`Atlas CLI </cli/stable/command/atlas-dbusers-create>`, 
  :atlas:`Atlas Administration API </reference/api-resources-spec/v2/#tag/Database-Users>`, 
  Atlas UI, or a supported :atlas:`integration </partner-integrations/#std-label-partner-integrations>` 
  to add, modify, or delete database users on {+atlas+} database deployments.
  Otherwise, {+atlas+} rolls back any user modifications.

.. _add-user-prereq:

Prerequisites
-------------

To be able to create users, you need to:

- :ref:`enable access control <enable-access-control>`
- :ref:`create a user administrator <create-user-admin>`

For routine user creation, you must possess the following permissions:

.. include:: /includes/access-create-user.rst

To create users for {+atlas+}, you must have
:atlas:`Organization Owner </reference/user-roles/#mongodb-authrole-Organization-Owner>` 
or :atlas:`Project Owner </reference/user-roles/#mongodb-authrole-Project-Owner>` 
access to {+atlas+}. These roles are unique to {+atlas+} and are 
separate from database users. 
To learn more, see :atlas:`Atlas User Roles </reference/user-roles>`.

.. _create-user-procedure:

Procedure
---------

.. note::

   The following procedures use :ref:`authentication-scram`
   authentication. For additional information on other authentication
   mechanisms, see :ref:`create-users-examples`.

Configure Database Users for {+atlas+}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

A {+atlas+} project can have users with different authentication methods.

You cannot change a user's authentication method after creating that
user. To use an alternative authentication method, you must create a
new user.

Configure database users for your {+atlas+} deployment who 
use :ref:`authentication-scram` authentication:

.. tabs::

   .. tab:: Atlas CLI
      :tabid: cli   

      The Atlas CLI uses the following commands to create new database users and 
      X.509 certificates. The options you specify determine the authentication method.

      To create a database user for your project using the Atlas CLI, 
      run the following command:

      .. code-block:: sh

         atlas dbusers create [builtInRole]... [options]

      To create a new Atlas-managed X.509 certificate for the specified 
      database user using the Atlas CLI, run the following command:

      .. code-block:: sh

         atlas dbusers certs create [options]

      To learn more about the syntax and parameters for the previous commands, 
      see the Atlas CLI documentation for 
      :atlas:`atlas dbusers create </cli/stable/command/atlas-dbusers-create>` and
      :atlas:`atlas dbusers certs create </cli/stable/command/atlas-dbusers-certs-create>`.

      .. see:: Related Links

         - :atlas:`Install the Atlas CLI </cli/stable/install-atlas-cli>`
         - :atlas:`Connect to the Atlas CLI </cli/stable/connect-atlas-cli>`

   .. tab:: Atlas UI
      :tabid: ui

      .. include:: /includes/steps/add-scram-user.rst

Configure Users for Self-Hosted Deployments
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To configure database users for your self-hosted MongoDB Enterprise 
or MongoDB Community deployment, follow these steps:

.. include:: /includes/steps/authorization-create-users.rst

.. seealso::

   :doc:`/tutorial/manage-users-and-roles`

.. _create-users-examples:
.. _add-new-user:

Additional Examples
-------------------

Username/Password Authentication
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following operation creates a user in the ``reporting``
database with the specified name, password, and roles.

.. tip::

   .. include:: /includes/extracts/mongosh-password-prompt.rst

.. code-block:: javascript

   use reporting
   db.createUser(
     {
       user: "reportsUser",
       pwd: passwordPrompt(),  // or cleartext password
       roles: [
          { role: "read", db: "reporting" },
          { role: "read", db: "products" },
          { role: "read", db: "sales" },
          { role: "readWrite", db: "accounts" }
       ]
     }
   )

Kerberos Authentication
~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/extracts/create-user-intro-kerberos.rst

For Kerberos authentication, you must add the Kerberos principal as the
username. You do not need to specify a password.

The following operation adds the Kerberos principal
``reportingapp@EXAMPLE.NET`` with read-only access to the ``records``
database:

.. code-block:: javascript

   use $external
   db.createUser(
       {
         user: "reportingapp@EXAMPLE.NET",
         roles: [
            { role: "read", db: "records" }
         ]
       }
   )

.. seealso::

   For more information about setting up Kerberos authentication for
   your MongoDB deployment, see the following tutorials:

   - :doc:`/tutorial/control-access-to-mongodb-with-kerberos-authentication`
   - :doc:`/tutorial/control-access-to-mongodb-windows-with-kerberos-authentication`

LDAP Authentication
~~~~~~~~~~~~~~~~~~~

.. include:: /includes/extracts/create-user-intro-ldap.rst

For LDAP authentication, you must specify a username. You do not need
to specify the password, as that is handled by the LDAP service.

The following operation adds the ``reporting`` user with read-only
access to the ``records`` database:

.. code-block:: javascript

   use $external
   db.createUser(
       {
         user: "reporting",
         roles: [
            { role: "read", db: "records" }
         ]
       }
   )

.. seealso::

   For more information about setting up LDAP authentication for
   your MongoDB deployment, see the following tutorials:

   - :doc:`/tutorial/configure-ldap-sasl-activedirectory`
   - :doc:`/tutorial/configure-ldap-sasl-openldap`

   To learn more about setting up LDAP authentication for {+atlas+},
   see :atlas:`Add Database Users</security-add-mongodb-users/#add-database-users>` 
   in the {+atlas+} documentation.

x.509 Client Certificate Authentication
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/extracts/create-user-intro-x509.rst

For x.509 Client Certificate authentication, you must add the value of
the ``subject`` from the client certificate as a MongoDB user. Each
unique x.509 client certificate corresponds to a single MongoDB user.
You do not need to specify a password.

The following operation adds the client certificate subject
``CN=myName,OU=myOrgUnit,O=myOrg,L=myLocality,ST=myState,C=myCountry``
user with read-only access to the ``records`` database.

.. code-block:: javascript

   use $external
   db.createUser(
       {
         user: "CN=myName,OU=myOrgUnit,O=myOrg,L=myLocality,ST=myState,C=myCountry",
         roles: [
            { role: "read", db: "records" }
         ]
       }
   )

.. seealso::

   For more information about setting up x.509 Client Certificate
   authentication for your MongoDB deployment, see the following
   tutorials:

   - :doc:`/tutorial/configure-x509-client-authentication`

   To learn more about setting up x.509 Client Certificate authentication for {+atlas+},
   see :atlas:`Add Database Users</security-add-mongodb-users/#add-database-users>` 
   in the {+atlas+} documentation.

Next Steps
----------

To manage users, assign roles, and create custom roles for your
self-hosted MongoDB Enterprise or MongoDB Community deployment, 
see :doc:`/tutorial/manage-users-and-roles`.

You can also :atlas:`manage users, assign roles </security-add-mongodb-users>`, 
and :atlas:`create custom roles </security-add-mongodb-roles>` 
for your {+atlas+} deployment.
