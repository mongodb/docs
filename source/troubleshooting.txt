.. The published page has additional Troubleshooting tips in a nested include.

.. _troubleshooting:

===============
Troubleshooting
===============

.. default-domain:: mongodb

This document provides advice for troubleshooting problems with MMS. Begin
your troubleshooting using the :ref:`getting-started-checklist` to check
for common, easily fixed problems.

For answers to questions not covered here, see :doc:`FAQ documentation
</faq>`.

.. only:: classic or onprem

   .. include:: /includes/troubleshooting-getting-started.rst

.. **BUILD WARNINGS**:: This file has numerous build warnings that I can't figure out, like the one
   below where building "classic" errors because it can't find the include file correctly nested
   under the "only:: onprem" tag.

.. only:: onprem

   .. include:: /includes/troubleshooting-onprem-installation.rst

Monitoring
----------

Alerts
~~~~~~

For information on creating and managing alerts, see
:doc:`/tutorial/create-alert` and
:doc:`/tutorial/manage-alerts-and-events`.

Cannot Turn Off Email Notifications
+++++++++++++++++++++++++++++++++++

There are at least two ways to turn off alert notifications:

- Remove the deployment from your |mms| account. See :doc:`/tutorial/unmanage-deloyment`.

- Disable or delete the alert in MMS. Click the :guilabel:`Activity` tab
  then click :guilabel:`Alert Settings`. To the right of an alert, select
  the :guilabel:`gear icon` and select :guilabel:`Disable` or
  :guilabel:`Delete`.

Receive Duplicate Alerts
++++++++++++++++++++++++

If the notification email list contains multiple email-groups, one or more
people may receive multiple notifications of the same alert.

.. _open-file-limits:

Receive "Host has low open file limits" or "Too many open files" error messages
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

These error messages appear on the :guilabel:`Deployment` page,
under a host's name. They appear if the number of
available connections does not meet an MMS-defined minimum value. These errors
are not generated by the :program:`mongos` instance and, therefore, will not
appear in :program:`mongos` log files.

On a host by host basis, the Monitoring Agent compares the number of open
file descriptors and connections to the maximum connections limit. The max open
file descriptors ulimit parameter directly affects the number of available
server connections. The agent calculates whether or not enough connections
exist to meet an MMS-defined minimum value.

In ping documents, for each node and its ``serverStatus.connections`` values,
if the sum of the ``current`` value plus the ``available`` value is less than
the ``maxConns`` configuration value set for a monitored host, the Monitoring
Agent will send a :guilabel:`Host has low open file limits` or :guilabel:`Too
many open files` message to MMS.

Ping documents are data sent by Monitoring Agents to MMS. To view ping
documents, click the :guilabel:`Deployment` page, then click the host's
name, and then click :guilabel:`Last Ping`.

To prevent this error, we recommend you set ``ulimit`` open files to 64000. We
also recommend setting the ``maxConns`` command in the mongo shell to at least
the recommended settings.

See :manual:`the MongoDB ulimit reference page </reference/ulimit>` and the
:manual:`the MongoDB maxConns reference page
</reference/configuration-options/#maxConns>` for details.

.. only:: cloud

   Deployments
   ~~~~~~~~~~~

   Deployment Hangs in ``In Progress`` in ``edit mode``
   ++++++++++++++++++++++++++++++++++++++++++++++++++++

   If you have added or restarted a deployment and the deployment remains
   in the ``In Progress`` state for several minutes, click :guilabel:`View
   Agent Logs` and look for any errors.

   To edit the in-progress deployment, click :guilabel:`EDIT
   CONFIGURATION` and then :guilabel:`Confirm`.

   If you cannot find a solution, you might need to :doc:`shut down
   <shutdown-deployment>` and :doc:`unmanage <unmanage-deployment>` the
   deployment.

.. only:: classic or onprem

   Monitoring Agent Fails to Collect Data
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Possible causes for this state:

   - If the Monitoring Agent can't connect to the server because of
     networking restrictions or issues (i.e. firewalls, proxies,
     routing.)

   - If your database is running with SSL. You must enable SSL either
     globally or on a per-host basis. See
     :doc:`/tutorial/configure-monitoring-agent-for-ssl` and
     :doc:`/tutorial/edit-host-ssl-use` for more information.

   - If your database is running with authentication. You must supply
     |monitoring| with the authentication credentials either when
     you're adding a host *or* by clicking the gear icon and then
     :guilabel:`Edit Host` to the right of the entry on the
     :guilabel:`Deployment` page.

.. only:: classic or onprem

   .. include:: /includes/faq-hosts-legacy.rst

Groups
~~~~~~

Cannot Delete a Group
+++++++++++++++++++++

.. include:: /includes/fact-remove-group.rst

Additional Information on Groups
++++++++++++++++++++++++++++++++

Create a group to monitor additional segregated systems or environments for
servers, agents, users, and other resources. For example, your deployment might
have two or more environments separated by firewalls. In this case, you would
need two or more separate |mms| groups.

API and shared secret keys are unique to each group. Each group requires its
own agent with the appropriate API and shared secret keys. Within each group,
the agent needs to be able to connect to all hosts it monitors in the group.

For information on creating and managing groups, see :doc:`/tutorial/create-group`.

.. _troubleshooting-munin:

Munin
~~~~~

Install and configure the ``munin-node`` daemon on the monitored MongoDB
server(s) before starting |mms| monitoring. The |mms| agent README file provides
guidelines to install ``munin-node``. However, new versions of Linux,
specifically Red Hat Linux (RHEL) 6, can generate error messages. See
:doc:`/tutorial/configure-monitoring-munin-node/` for details about
monitoring hardware with ``munin-node``.

Restart ``munin-node`` after creating links for changes to take effect.

"No package munin-node is available" Error
++++++++++++++++++++++++++++++++++++++++++

To correct this error, install the most current version of the Linux repos.
Type these commands:

.. code-block:: sh

   sudo yum install http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm

Then type this command to install ``munin-node`` and all dependencies:

.. code-block:: sh

   sudo yum install munin-node

Non-localhost IP Addresses are Blocked
++++++++++++++++++++++++++++++++++++++

By default, munin blocks incoming connections from non-localhost IP addresses.
The ``/var/log/munin/munin-node.log`` file will display a
"Denying connection" error for your non-localhost IP address.

To fix this error, open the ``munin-node.conf`` configuration file and comment
out these two lines:

.. code-block:: sh

   allow ^127\.0\.0\.1$
   allow ^::1$

Then add this line to the ``munin-node.conf`` configuration file with a pattern
that matches your subnet:

.. code-block:: sh

   cidr_allow 0.0.0.0/0

Restart ``munin-node`` after editing the configuration file for changes to take effect.

Verifying iostat and Other Plugins/Services Returns "# Unknown service" Error
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

The first step is to confirm there is a problem. Open a telnet session and
connect to ``iostat``, ``iostat_ios``, and ``cpu``:

.. code-block:: sh

   telnet HOSTNAME 4949 <default/required munin port>
   fetch iostat
   fetch iostat_ios
   fetch cpu

The ``iostat_ios`` plugin creates the ``iotime`` chart, and the ``cpu``
plugin creates the ``cputime`` chart.

If any of these telnet ``fetch`` commands returns an "# Unknown Service" error,
create a link to the plugin or service in /etc/munin/plugins/ by typing these
commands:

.. code-block:: sh

   cd /etc/munin/plugins/
   sudo ln -s /usr/share/munin/plugins/<service> <service>

Replace ``<service>`` with the name of the service that generates the error.

Disk names are not listed by Munin
++++++++++++++++++++++++++++++++++

In some cases, Munin will omit disk names with a dash between the name and a
numerical prefix, for example, ``dm-0`` or ``dm-1``. There is `a documented fix`_ for
Munin's iostat plugin.

.. _`a documented fix`: https://bugs.launchpad.net/ubuntu/+source/munin/+bug/493982

Authentication
--------------

Two-Factor Authentication
~~~~~~~~~~~~~~~~~~~~~~~~~

Missed SMS Authentication Tokens
++++++++++++++++++++++++++++++++

Unfortunately SMS is not a 100% reliable delivery mechanism for messages,
especially across international borders. The Google authentication option is
100% reliable. Unless you must use SMS for authentication, use the
Google Authenticator application for two-factor authentication.

If you do not receive the SMS authentication tokens:

1. Refer to the :doc:`Administration </core/settings/>`
   page for more details about using two-factor authentication. This
   page includes any limitations which may affect SMS delivery times.

2. Enter the SMS phone number with country code first followed by the
   area code and the phone number. Also try 011 first followed by
   the country code, then area code, and then the phone number.

If you do not receive the authentication token in a reasonable amount
of time `contact |mms| Support <https://mms.mongodb.com/links/support>`_ to
rule out SMS message delivery delays.

How to Delete or Reset Two-Factor Authentication
++++++++++++++++++++++++++++++++++++++++++++++++

.. only:: classic or cloud

   `Contact |mms| Support <https://mms.mongodb.com/links/support>`_ to delete or
   reset any two-factor authentications you have configured.

.. only:: onprem

   Contact your system administrator to remove or reset two-factor
   authentication on your account.

   For administrative information on two-factor authentication, see
   :doc:`/tutorial/manage-two-factor-authentication`.

.. only:: onprem

   LDAP
   ~~~~

   Cannot Enable LDAP
   ~~~~~~~~~~~~~~~~~~

   You must enable LDAP **before** you sign up the first user through the MMS
   interface, as required in :ref:`Authentication Requirements
   <authentication-requirements>`. If you cannot enable LDAP because you have
   created a user through MMS, you must reinstall MMS, being sure to enable
   LDAP before creating users and hosts. Please see :ref:`Authentication
   Requirements <authentication-requirements>`.

   Forgot to Change MONGODB-CR Error
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   If your MongoDB deployment uses LDAP for authentication, and you find
   the following error message:

   .. code-block:: none

      You forget to change "MONGODB-CR" to "LDAP (PLAIN)" since they both
      take username/password.

   Then make sure that you specified the ``LDAP (PLAIN)`` as is the
   authentication mechanism for both the Monitoring Agent and the Backup
   Agent. See :ref:`security-ldap`.

.. only:: onprem

   Backup
   ------

   Logs Display MongodVersionException
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   The ``MongodVersionException`` can occur if the :ref:`Backup Daemon's
   <backup-daemon>` host cannot access the internet to download the
   version or versions of MongoDB required for the backed-up databases.
   Each database requires a version of MongoDB that matches the database's
   version. Specifically, for each instance you must run the latest stable release
   of that release series. For versions earlier than 2.4, the database
   requires the latest stable release of 2.4.

   If the Daemon runs without access to the internet, you must
   manually download the required MongoDB versions, as described here:

   1. Go to the `MongoDB downloads page <http://www.mongodb.org/downloads>`_
      and download the appropriate versions for your environment.

   2. Copy the download to the Daemon's host.

   3. Decompress the download into the directory specified in the
      :setting:`mongodb.release.directory` setting in the Daemon's
      ``conf-daemon.properties`` file, located in
      ``/opt/mongodb/mms-backup-daemon/conf/``.

      Within the directory specified in the
      :setting:`mongodb.release.directory` setting, the folder structure
      for MongoDB should look like the following:

      .. code-block:: sh

         <path-to-mongodb-release-directory>/
         |-- mongodb-<platform>
         |  |-- THIRD-PARTY-NOTICES
         |  |-- README
         |  |-- GNU-AGPL-3.0
         |  |-- bin
         |  |  |-- bsondump
         |  |  |-- mongo
         |  |  |-- mongod
         |  |  |-- mongodump
         |  |  |-- mongoexport
         |  |  |-- mongofiles
         |  |  |-- mongoimport
         |  |  |-- mongooplog
         |  |  |-- mongoperf
         |  |  |-- mongorestore
         |  |  |-- mongos
         |  |  |-- mongostat
         |  |  |-- mongotop

.. only:: onprem

   System
   ------

   Logs Display OutOfMemoryError
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   If your logs display ``OutOfMemoryError``, ensure you are running with
   sufficient ulimits and RAM.

   Increase Ulimits
   ++++++++++++++++

   For the recommended ulimit setting, see the FAQ on
   :ref:`open-file-limits`.

   |mms| infers the host's ``ulimit`` setting using the total number of
   available and current connections. For more information about ulimits
   in MongoDB, see the :manual:`UNIX ulimit Settings </reference/ulimit/>`
   reference page.

   Ensure Sufficient RAM for All Components
   ++++++++++++++++++++++++++++++++++++++++

   - Ensure that each server has enough RAM for the components it runs. If
     a server runs multiple components, its RAM must be at least the sum
     of the required amount of RAM for **each** component.

     For the individual RAM requirements for the |application| server, MMS
     Application database, MMS Backup Daemon server, and MMS Backup Blockstore
     database, see :doc:`/tutorial/prepare-backing-mongodb-instances`.

.. only:: classic or onprem

   .. _automation-checklist:

   Automation Checklist
   --------------------

   |mms| Automation allows you to deploy, configure, and manage MongoDB
   deployments with the |mms| UI.  |mms| Automation relies on an Automation
   Agent, which must be installed on every server in the deployment.  The
   Automation Agents periodically poll the |mms| service to determine the
   current goal, and continually report their status to MMS.

   There are two ways to install the Automation Agent on your servers.
   First, you can simply install the Automation Agent on all
   existing hardware.  Second, you can use |mms| Provisioning to
   automatically create Amazon Web Services (AWS) EC2 instances that have
   the Automation Agent pre-installed.

   Using Own Hardware
   ~~~~~~~~~~~~~~~~~~

   - If you deploy Automation manually, ensure that you have one
     Automation Agent on every server.

   - If you deploy the agent manually, you must create MongoDB's
     :setting:`dbpath` and the directory for the MongoDB binaries and
     ensure that the user running the agent has ``Write`` permissions on these
     directories.

     If you install using the ``rpm`` or ``deb`` packages, the Automation
     Agent runs as the ``mongod`` user. If you install using the ``tar.gz``
     you can run the agent as any user.

   Using |mms| Provisioning (Amazon Web Services)
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   See :ref:`aws-checklist`.

   All Deployments
   ~~~~~~~~~~~~~~~

   Networking
   ++++++++++

   All hosts must be able to allow communication between MongoDB
   ports. The default is ``27017``, but you can configure alternate port
   ranges in the |mms| interface.

   .. only:: classic or cloud

      The Automation Agent *must* be able to connect to
      ``mms.mongodb.com`` on port ``443`` (i.e. ``https``).
      For more information on access to ports and IP addresses, see
      :doc:`/core/security`.

   .. _automation-agent-directories:

   Directory and File Permissions
   ++++++++++++++++++++++++++++++

   The Automation Agent directories and files require the permissions
   describe here. Paths and filenames vary depending on the operating system.

   Automation Agent Directory
   ``````````````````````````

   The agent directory and the agent configuration file require *Read* and
   *Execute* permissions for the user that runs the Automation Agent.

   On RHEL, CentOS, Amazon Linux, & Ubuntu, the agent directory is
   ``/etc/mongodb-mms``. The agent stores its configuration in the
   ``automation-agent.config`` file in that directory:

   On other Linux systems and on OS X, you will define the agent
   directory during installation. The agent stores its configuration in
   the ``local.config`` file in that directory.

   Supporting Files
   ````````````````

   Supporting files include the Monitoring and Backup Agents, the MongoDB binaries, and a
   backup copy of the JSON cluster configuration file. The directory that
   stores these requires ``Read``, ``Write``, and ``Execute`` permissions for the user
   that runs the Automation Agent. The agent requires write permissions
   are so that the agent can write to the cluster configuration file.

   On RHEL, CentOS, Amazon Linux, & Ubuntu, Automation stores these in the
   same directory as the Automation Agent.

   On other Linux operating systems and on OS X, Automation stores these in
   the ``/var/lib/mongodb-mms-automation`` directory.

   Log File
   ````````

   The log file requires ``Write`` permission for the user that runs the
   Automation Agent. By default, the agent logs events in the following log
   file:

   .. code-block:: none

      /var/log/mongodb-mms-automation/automation-agent.log

   The Automation Agent's configuration file specifies the location of the
   log file, as well as the  log level and log-rotation settings.

   Cluster Configuration
   +++++++++++++++++++++

   After completing the cluster configuration, always ensure that the
   cluster deployment plan satisfies the needs of your
   deployment. Always double check hostnames and ports before
   confirming the cluster deployment.

   Sizing
   ++++++

   - Ensure that you provision machines with enough space to run MongoDB
     and support the requirements of your data set.

   - Ensure that you provision sufficient machines to run your
     deployment. Each :program:`mongod` should run on its own host.

   Operating System
   ++++++++++++++++

   The Automation Agent only supports Linux and OS X hosts. The
   Automation Agent does not support Windows.
