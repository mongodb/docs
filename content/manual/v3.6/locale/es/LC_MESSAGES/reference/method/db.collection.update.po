# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: 2014-04-08 19:12+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/reference/method/db.collection.update.txt:3
msgid "db.collection.update()"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:18
msgid ""
"Modifies an existing document or documents in a collection. The method "
"can modify specific fields of an existing document or documents or "
"replace an existing document entirely, depending on the :ref:`update "
"parameter <update-parameter>`."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:23
msgid ""
"By default, the :method:`~db.collection.update()` method updates a "
"**single** document. Set the :ref:`multi-parameter` to update all "
"documents that match the query criteria."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:27
msgid "The :method:`~db.collection.update()` method has the following form:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:45
msgid ""
"The :method:`~db.collection.update()` method takes the following "
"parameters:"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.update-param.rst:7
msgid "Parameter"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.update-param.rst:9
msgid "Type"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.update-param.rst:11
msgid "Description"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.update-param.rst:13
msgid "``query``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.update-param.rst:15
#: ../source/includes/apiargs/method-db.collection.update-param.rst:33
#: ../source/includes/apiargs/method-db.collection.update-param.rst:61
#: ../source/includes/apiargs/method-db.collection.update-param.rst:73
msgid "document"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.update-param.rst:17
#: ../source/includes/apiargs/method-db.collection.update-param.rst:103
msgid ""
"The selection criteria for the update. The same :ref:`query selectors "
"<query-selectors>` as in the :method:`find() <db.collection.find()>` "
"method are available."
msgstr ""

#: ../source/includes/fact-mongodb30-upsert-id.rst:1
msgid ""
"When you execute an :method:`~db.collection.update()` with ``upsert: "
"true`` and the query matches no existing document, MongoDB will refuse to"
" insert a new document if the query specifies conditions on the ``_id`` "
"field using :ref:`dot notation <document-dot-notation>`."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.update-param.rst:26
#: ../source/includes/apiargs/method-db.collection.update-param.rst:112
msgid "For more information and an example, see :ref:`mongodb30-upsert-id`."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.update-param.rst:31
msgid "``update``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.update-param.rst:35
#: ../source/includes/apiargs/method-db.collection.update-param.rst:119
msgid "The modifications to apply. For details see :ref:`update-parameter`."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.update-param.rst:39
msgid "``upsert``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.update-param.rst:41
#: ../source/includes/apiargs/method-db.collection.update-param.rst:51
msgid "boolean"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.update-param.rst:43
#: ../source/includes/apiargs/method-db.collection.update-param.rst:125
msgid ""
"Optional. If set to ``true``, creates a new document when no document "
"matches the query criteria. The default value is ``false``, which does "
"*not* insert a new document when no match is found."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.update-param.rst:49
msgid "``multi``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.update-param.rst:53
#: ../source/includes/apiargs/method-db.collection.update-param.rst:133
msgid ""
"Optional. If set to ``true``, updates multiple documents that meet the "
"``query`` criteria. If set to ``false``, updates one document. The "
"default value is ``false``. For additional information, see :ref:`multi-"
"parameter`."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.update-param.rst:59
msgid "``writeConcern``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.update-param.rst:63
#: ../source/includes/apiargs/method-db.collection.update-param.rst:141
msgid ""
"Optional. A document expressing the :doc:`write concern </reference"
"/write-concern>`. Omit to use the default write concern. See :ref"
":`update-wc`."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.update-param.rst:71
msgid "``collation``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.update-param.rst:75
#: ../source/includes/apiargs/method-db.collection.update-param.rst:151
msgid "Optional."
msgstr ""

#: ../source/includes/extracts/collation-option.rst:1
msgid "Specifies the :ref:`collation <collation>`  to use for the operation."
msgstr ""

#: ../source/includes/extracts/collation-description.rst:1
msgid ""
":doc:`Collation </reference/collation>` allows users to specify language-"
"specific rules for string comparison, such as rules for lettercase and "
"accent marks."
msgstr ""

#: ../source/includes/extracts/collation-option-specification.rst:2
msgid "The collation option has the following syntax:"
msgstr ""

#: ../source/includes/extracts/collation-option-specification.rst:17
msgid ""
"When specifying collation, the ``locale`` field is mandatory; all other "
"collation fields are optional. For descriptions of the fields, see :ref"
":`collation-document-fields`."
msgstr ""

#: ../source/includes/extracts/collation-option.rst:7
msgid ""
"If the collation is unspecified but the collection has a default "
"collation (see :method:`db.createCollection()`), the operation uses the "
"collation specified for the collection."
msgstr ""

#: ../source/includes/extracts/collation-unspecified.rst:1
msgid ""
"If no collation is specified for the collection or for the operations, "
"MongoDB uses the simple binary comparison used in prior versions for "
"string comparisons."
msgstr ""

#: ../source/includes/extracts/collation-single-per-operation.rst:2
msgid ""
"You cannot specify multiple collations for an operation. For example, you"
" cannot specify different collations per field, or if performing a find "
"with a sort, you cannot use one collation for the find and another for "
"the sort."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.update-param.rst:81
msgid "``arrayFilters``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.update-param.rst:83
msgid "array"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.update-param.rst:85
#: ../source/includes/apiargs/method-db.collection.update-param.rst:159
msgid ""
"Optional. An array of filter documents that determines which array "
"elements to modify for an update operation on an array field."
msgstr ""

#: ../source/includes/extracts/arrayFilters-details.rst:2
msgid ""
"In the update document, use the :update:`$[\\<identifier\\>]` filtered "
"positional operator to define an identifier, which you then reference in "
"the array filter documents. You cannot have an array filter document for "
"an identifier if the identifier is not included in the update document."
msgstr ""

#: ../source/includes/extracts/arrayFilters-details.rst:9
msgid ""
"The ``<identifier>`` must begin with a lowercase letter and contain only "
"alphanumeric characters."
msgstr ""

#: ../source/includes/extracts/arrayFilters-details.rst:12
msgid ""
"You can include the same identifier multiple times in the update "
"document; however, for each distinct identifier (``$[identifier]``) in "
"the update document, you must specify **exactly one** corresponding array"
" filter document. That is, you cannot specify multiple array filter "
"documents for the same identifier. For example, if the update statement "
"includes the identifier ``x`` (possibly multiple times), you cannot "
"specify the following for ``arrayFilters`` that includes 2 separate "
"filter documents for ``x``:"
msgstr ""

#: ../source/includes/extracts/arrayFilters-details.rst:28
msgid ""
"However, you can specify compound conditions on the same identifier in a "
"single filter document, such as in the following examples:"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.update-param.rst:91
#: ../source/includes/apiargs/method-db.collection.update-param.rst:165
msgid "For examples, see :ref:`update-arrayFilters`."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.update-param.rst
msgid "param document query"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.update-param.rst
msgid "param document update"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.update-param.rst
msgid "param boolean upsert"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.update-param.rst
msgid "param boolean multi"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.update-param.rst
msgid "param document writeConcern"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.update-param.rst
msgid "param document collation"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.update-param.rst
msgid "param array arrayFilters"
msgstr ""

#: ../source/reference/method/db.collection.update.txt
msgid "Returns"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:50
msgid ""
"A :ref:`writeresults-update` object that contains the status of the "
"operation."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:54
msgid "Behavior"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:59
msgid "Write Concern"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:63
msgid ""
"The :method:`~db.collection.update()` method uses the :dbcommand:`update`"
" command, which uses the default :doc:`write concern </reference/write-"
"concern>`. To specify a different write concern, include the "
"``writeConcern`` option in the options parameter. See :ref:`example-"
"update-write-concern` for an example."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:72
msgid "Update Parameter"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:74
msgid ""
"The :method:`~db.collection.update()` method either modifies specific "
"fields in existing documents or replaces an existing document entirely."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:78
#: ../source/reference/method/db.collection.update.txt:236
msgid "Update Specific Fields"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:80
msgid ""
"If the ``<update>`` document contains :ref:`update operator <update-"
"operators>` modifiers, such as those using the :update:`$set` modifier, "
"then:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:84
msgid ""
"The ``<update>`` document must contain *only* :ref:`update operator "
"<update-operators>` expressions."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:87
msgid ""
"The :method:`~db.collection.update()` method updates only the "
"corresponding fields in the document."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:90
msgid ""
"To update an embedded document or an array as a whole, specify the "
"replacement value for the field. To update particular fields in an "
"embedded document or in an array, use :ref:`dot notation <document-dot-"
"notation>` to specify the field."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:96
msgid "Replace a Document Entirely"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:98
msgid ""
"If the ``<update>`` document contains *only* ``field:value`` expressions,"
" then:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:101
msgid ""
"The :method:`~db.collection.update()` method *replaces* the matching "
"document with the ``<update>`` document. The "
":method:`~db.collection.update()` method *does not* replace the ``_id`` "
"value. For an example, see :ref:`example-update-replace-fields`."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:107
msgid ""
":method:`~db.collection.update()` *cannot* :ref:`update multiple "
"documents <multi-parameter>`."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:113
msgid "Upsert Option"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:118
msgid "Upsert Behavior"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:120
msgid ""
"If ``upsert`` is ``true`` and no document matches the query criteria, "
":method:`~db.collection.update()` inserts a *single* document. The update"
" creates the new document with either:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:124
msgid ""
"The fields and values of the ``<update>`` parameter if the ``<update>`` "
"parameter is a replacement document (i.e., contains only field and value "
"pairs). If neither the ``<query>`` nor the ``<update>`` document "
"specifies an ``_id`` field, MongoDB adds the ``_id`` field with an "
":ref:`objectid` value."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:130
msgid ""
"The fields and values of both the ``<query>`` and ``<update>`` parameters"
" if the ``<update>`` parameter contains :ref:`update operator <update-"
"operators>` expressions. The update creates a base document from the "
"equality clauses in the ``<query>`` parameter, and then applies the "
"update expressions from the ``<update>`` parameter. :doc:`Comparison "
"</reference/operator/query>` operations from the ``<query>`` will not be "
"included in the new document."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:138
msgid ""
"If ``upsert`` is ``true`` and there are documents that match the query "
"criteria, :method:`~db.collection.update()` performs an update."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:141
msgid ":update:`$setOnInsert`"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:146
msgid "Use Unique Indexes"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:148
msgid ""
"To avoid inserting the same document more than once, only use ``upsert: "
"true`` if the ``query`` field is uniquely indexed."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:152
msgid ""
"Given a collection named ``people`` where no documents have a ``name`` "
"field that holds the value ``Andy``. Consider when multiple clients issue"
" the following *update* with ``upsert: true`` at the same time:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:169
msgid ""
"If all :method:`~db.collection.update()` operations complete the "
"``query`` portion before any client successfully inserts data, **and** "
"there is no unique index on the ``name`` field, then each update "
"operation may result in an insert."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:174
msgid ""
"To prevent MongoDB from inserting the same document more than once, "
"create a :ref:`unique index <index-type-unique>` on the ``name`` field. "
"With a unique index, if multiple applications issue the same update with "
"``upsert: true``, *exactly one* :method:`~db.collection.update()` would "
"successfully insert a new document."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:181
msgid "The remaining operations would either:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:183
msgid "update the newly inserted document, or"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:185
msgid "fail when they attempted to insert a duplicate."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:187
msgid ""
"If the operation fails because of a duplicate index key error, "
"applications may retry the operation which will succeed as an update "
"operation."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:194
msgid "``upsert:true`` with a Dotted ``_id`` Query"
msgstr ""

#: ../source/includes/fact-mongodb30-upsert-id.rst:8
msgid ""
"This restriction ensures that the order of fields embedded in the ``_id``"
" document is well-defined and not bound to the order specified in the "
"query"
msgstr ""

#: ../source/includes/fact-mongodb30-upsert-id.rst:11
msgid ""
"If you attempt to insert a document in this way, MongoDB will raise an "
"error."
msgstr ""

#: ../source/includes/fact-mongodb30-upsert-id-example.rst:1
msgid ""
"For example, consider the following update operation. Since the update "
"operation specifies ``upsert:true`` and the query specifies conditions on"
" the ``_id`` field using dot notation, then the update will result in an "
"error when constructing the document to insert."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:204
msgid "Multi Parameter"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:206
msgid ""
"If ``multi`` is set to ``true``, the :method:`~db.collection.update()` "
"method updates all documents that meet the ``<query>`` criteria. The "
"``multi`` update operation may interleave with other operations, both "
"read and/or write operations."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:211
msgid ""
"If the :ref:`\\<update\\> <update-parameter>` document contains *only* "
"``field:value`` expressions, then :method:`~db.collection.update()` "
"*cannot* update multiple documents."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:215
msgid "For an example, see :ref:`example-update-multi`."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:218
msgid "Sharded Collections"
msgstr ""

#: ../source/includes/fact-single-modification-in-sharded-collections.rst:1
msgid ""
"All |single-modification-operation-names| operations for a sharded "
"collection that specify the ``justOne`` option must include the "
":term:`shard key` *or* the ``_id`` field in the query specification. "
"|single-modification-operation-names| operations specifying ``justOne`` "
"in a sharded collection which do not contain either the :term:`shard key`"
" or the ``_id`` field return an error."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:226
msgid ":method:`~db.collection.findAndModify()`"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:231
msgid "Examples"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:238
msgid ""
"To update specific fields in a document, use :ref:`update operators "
"<update-operators>` in the ``<update>`` parameter."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:241
msgid "For example, given a ``books`` collection with the following document:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:255
msgid "The following operation uses:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:257
msgid "the :update:`$inc` operator to increment the ``stock`` field; and"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:259
msgid ""
"the :update:`$set` operator to replace the value of the ``item`` field, "
"the ``publisher`` field in the ``info`` embedded document, the ``tags`` "
"field, and the second element in the ``ratings`` array."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:278
msgid "The updated document is the following:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:292
msgid ""
":update:`$set`, :update:`$inc`, :doc:`/reference/operator/update`, "
":ref:`dot notation <document-dot-notation>`"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:297
msgid "Remove Fields"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:299
msgid ""
"The following operation uses the :update:`$unset` operator to remove the "
"``tags`` field:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:306
msgid ":update:`$unset`, :update:`$rename`, :doc:`/reference/operator/update`"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:311
msgid "Replace All Fields"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:313
msgid "Given the following document in the ``books`` collection:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:327
msgid ""
"The following operation passes an ``<update>`` document that contains "
"only field and value pairs. The ``<update>`` document completely replaces"
" the original document except for the ``_id`` field."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:343
msgid ""
"The updated document contains *only* the fields from the replacement "
"document and the ``_id`` field. That is, the fields ``ratings`` and "
"``reorder`` no longer exist in the updated document since the fields were"
" not in the replacement document."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:361
msgid "Insert a New Document if No Match Exists"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:364
msgid ""
"The following update sets the :ref:`upsert <upsert-parameter>` option to "
"``true`` so that :method:`~db.collection.update()` creates a new document"
" in the ``books`` collection if no document matches the ``<query>`` "
"parameter:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:381
msgid ""
"If no document matches the ``<query>`` parameter, the update operation "
"inserts a document with *only* the fields and values of the ``<update>`` "
"document and a new unique ``ObjectId`` for the ``_id`` field:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:395
#: ../source/reference/method/db.collection.update.txt:513
msgid ""
"For more information on ``upsert`` option and the inserted document, :ref"
":`upsert-parameter`."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:401
msgid "Update Multiple Documents"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:403
msgid ""
"To update multiple documents, set the ``multi`` option to ``true``. For "
"example, the following operation updates all documents where ``stock`` is"
" less than or equal to ``10``:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:415
msgid ""
"If the ``reorder`` field does not exist in the matching document(s), the "
":update:`$set` operator will add the field with the specified value. See "
":update:`$set` for more information."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:422
msgid "Override Default Write Concern"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:424
msgid ""
"The following operation on a replica set specifies a :doc:`write concern "
"</reference/write-concern>` of ``\"w: majority\"`` with a ``wtimeout`` of"
" 5000 milliseconds such that the method returns after the write "
"propagates to a majority of the voting replica set members or the method "
"times out after 5 seconds."
msgstr ""

#: ../source/includes/fact-majority-write-concern-change.rst:1
msgid ""
"In previous versions, ``majority`` referred to the majority of all "
"members of the replica set instead of the majority of the voting members."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:444
msgid "Combine the ``upsert`` and ``multi`` Options"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:446
msgid "Given a ``books`` collection that includes the following documents:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:465
msgid ""
"The following operation specifies both the ``multi`` option and the "
"``upsert`` option. If matching documents exist, the operation updates all"
" matching documents. If no matching documents exist, the operation "
"inserts a new document."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:478
msgid "The operation updates all matching documents and results in the following:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:500
msgid ""
"If the collection had *no* matching document, the operation would result "
"in the insertion of a document using the fields from both the ``<query>``"
" and the ``<update>`` specifications:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:517
msgid "Specify Collation"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:521
msgid "A collection ``myColl`` has the following documents:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:529
msgid "The following operation includes the :ref:`collation <collation>` option:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:543
msgid "Specify ``arrayFilters`` for an Array Update Operations"
msgstr ""

#: ../source/includes/extracts/arrayFilters-blurb.rst:4
msgid ""
"Starting in MongoDB 3.6, when updating an array field, you can specify "
"``arrayFilters`` that determine which array elements to update."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:548
msgid "Update Elements Match ``arrayFilters`` Criteria"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:550
msgid "Create a collection ``students`` with the following documents:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:562
msgid ""
"To update all elements that are greater than or equal to ``100`` in the "
"``grades`` array, use the filtered positional operator "
":update:`$[\\<identifier\\>]` with the ``arrayFilters`` option:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:579
msgid "After the operation, the collection contains the following documents:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:588
msgid "Update Specific Elements of an Array of Documents"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:590
msgid "Consider a collection ``students2`` with the following documents:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:611
msgid ""
"To modify the value of the ``mean`` field for all elements in the "
"``grades`` array where the grade is greater than or equal to ``85``, use "
"the filtered positional operator :update:`$[\\<identifier\\>]` with the "
"``arrayFilters``:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:629
msgid "After the operation, the collection has the following documents:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:653
msgid "WriteResult"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:658
msgid "Successful Results"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:660
msgid ""
"The :method:`~db.collection.update()` method returns a "
":method:`WriteResult` object that contains the status of the operation. "
"Upon success, the :method:`WriteResult` object contains the number of "
"documents that matched the query condition, the number of documents "
"inserted by the update, and the number of documents modified:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:674
msgid "Write Concern Errors"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:676
msgid ""
"If the :method:`~db.collection.update()` method encounters write concern "
"errors, the results include the :data:`WriteResult.writeConcernError` "
"field:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:692
msgid ":method:`WriteResult.hasWriteConcernError()`"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:695
msgid "Errors Unrelated to Write Concern"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:697
msgid ""
"If the :method:`~db.collection.update()` method encounters a non-write "
"concern error, the results include the :data:`WriteResult.writeError` "
"field:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:713
msgid ":method:`WriteResult.hasWriteError()`"
msgstr ""

#: ../source/includes/extracts/additional-resources-quick-reference.rst:4
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-quick-reference.rst:6
msgid ""
"`Quick Reference Cards <https://www.mongodb.com/lp/misc/quick-reference-"
"cards?jmp=docs>`_"
msgstr ""

#~ msgid ""
#~ "Modifies an existing document or "
#~ "documents in a collection. The method"
#~ " can modify specific fields of "
#~ "existing document or documents or "
#~ "replace an existing document entirely, "
#~ "depending on the :ref:`update parameter "
#~ "<update-parameter>`."
#~ msgstr ""

#~ msgid ""
#~ "The :method:`~db.collection.update()` returns an "
#~ "object that contains the status of "
#~ "the operation."
#~ msgstr ""

#~ msgid ""
#~ "If the ``<update>`` document contains "
#~ ":ref:`update operator <update-operators>` "
#~ "expressions, such those using the "
#~ ":update:`$set` operator, then:"
#~ msgstr ""

#~ msgid "Replace Document Entirely"
#~ msgstr ""

#~ msgid "Upsert Parameter"
#~ msgstr ""

#~ msgid "Upsert Use"
#~ msgstr ""

#~ msgid ""
#~ "If ``upsert`` is ``true`` and if "
#~ "no document matches the query criteria,"
#~ " :method:`~db.collection.update()` inserts a "
#~ "*single* document. The *upsert* creates "
#~ "the new document with either:"
#~ msgstr ""

#~ msgid ""
#~ "The fields and values of the both"
#~ " the ``<query>`` and ``<update>`` "
#~ "parameters. The *upsert* creates a "
#~ "document with data from both ``<query>``"
#~ " and ``<update>`` if the ``<update>`` "
#~ "parameter contains *only* :ref:`update "
#~ "operator <update-operators>` expressions."
#~ msgstr ""

#~ msgid ""
#~ "Given a collection named ``people`` "
#~ "where no documents have a ``name`` "
#~ "field that holds the value ``Andy``. "
#~ "Consider when multiple clients issue the"
#~ " following *update* operation at the "
#~ "same time. The following operation "
#~ "becomes an ``insert`` because the "
#~ "``upsert`` flag is ``true``.:"
#~ msgstr ""

#~ msgid ""
#~ "If all :method:`~db.collection.update()` operations"
#~ " complete the ``query`` portion before "
#~ "any client successfully inserts data, "
#~ "**and** there is no unique index "
#~ "on the ``name`` field, then each "
#~ "update operation may perform an insert."
#~ msgstr ""

#~ msgid ""
#~ "To prevent MongoDB from inserting the"
#~ " same document more than once, create"
#~ " a :ref:`unique index <index-type-"
#~ "unique>` on the ``name`` field. With "
#~ "a unique index, if an applications "
#~ "issues a group of upsert operations, "
#~ "*Exactly one* :method:`~db.collection.update()` "
#~ "would successfully insert a new "
#~ "document."
#~ msgstr ""

#~ msgid ""
#~ "If ``multi`` is set to ``true``, "
#~ "the :method:`~db.collection.update()` method updates"
#~ " all documents that meet the "
#~ "``<query>`` criteria. The ``multi`` update "
#~ "operation may interleave with other "
#~ "write operations. For unsharded collections,"
#~ " you can override this behavior with"
#~ " the :update:`$isolated` isolation operator, "
#~ "which isolates the update operation and"
#~ " blocks other write operations during "
#~ "the update."
#~ msgstr ""

#~ msgid ""
#~ "To update specific fields in a "
#~ "document, use :ref:`update operators "
#~ "<update-operators>` in the ``<update>`` "
#~ "parameter. If the ``<update>`` parameter "
#~ "refers to fields non-existent in "
#~ "the current document, the "
#~ ":method:`~db.collection.update()` method adds the"
#~ " fields to the document."
#~ msgstr ""

#~ msgid "Insert a New Document if No Match Exists (Upsert)"
#~ msgstr ""

#~ msgid ""
#~ "The following command sets the *upsert*"
#~ " option to ``true`` so that "
#~ ":method:`~db.collection.update()` creates a new "
#~ "document in the ``books`` collection if"
#~ " no document matches the ``<query>`` "
#~ "parameter:"
#~ msgstr ""

#~ msgid ""
#~ "If no document matches the ``<query>``"
#~ " parameter, the *upsert* inserts a "
#~ "document with the fields and values "
#~ "of the ``<update>`` parameter and a "
#~ "new unique ``ObjectId`` for the ``_id``"
#~ " field:"
#~ msgstr ""

#~ msgid ""
#~ "The following operation to a replica "
#~ "set specifies a :doc:`write concern "
#~ "</reference/write-concern>` of ``\"w: "
#~ "majority\"`` with a ``wtimeout`` of 5000"
#~ " milliseconds such that the method "
#~ "returns after the write propagates to"
#~ " a majority of the replica set "
#~ "members or the method times out "
#~ "after 5 seconds."
#~ msgstr ""

#~ msgid "Combine the Upsert and Multi Parameters"
#~ msgstr ""

#~ msgid ""
#~ "The following command uses the ``multi``"
#~ " parameter to update all documents "
#~ "where ``author`` is ``\"Dante\"`` and "
#~ "uses the *upsert* parameter to create"
#~ " a new document if no such "
#~ "documents are found:"
#~ msgstr ""

#~ msgid "The operation results in the following:"
#~ msgstr ""

#~ msgid ""
#~ "The following operation queries the "
#~ ":doc:`bios collection </reference/bios-example-"
#~ "collection>` for the first document with"
#~ " ``_id`` field equal to ``1`` and "
#~ "updates the second element in the "
#~ "``contribs`` array:"
#~ msgstr ""

#~ msgid ""
#~ "The :method:`~db.collection.update()` method can "
#~ "perform the update of an array "
#~ "that contains subdocuments by using the"
#~ " positional operator (i.e. :operator:`$`) "
#~ "and the :term:`dot notation`."
#~ msgstr ""

#~ msgid ""
#~ "The following operation queries the "
#~ ":doc:`bios collection </reference/bios-example-"
#~ "collection>` for the first document "
#~ "where the ``_id`` field equals ``6`` "
#~ "and the ``awards`` array contains a "
#~ "subdocument element with the ``by`` "
#~ "field equal to ``ACM``. If found, "
#~ "the :method:`~db.collection.update()` method updates"
#~ " the ``by`` field in the first "
#~ "matching subdocument:"
#~ msgstr ""

#~ msgid ""
#~ "In the next example, the :update:`$set`"
#~ " operator uses :ref:`dot notation "
#~ "<document-dot-notation>` to access the "
#~ "``middle`` field in the ``name`` "
#~ "subdocument. The :update:`$push` operator adds"
#~ " another document as element to the"
#~ " field ``awards``."
#~ msgstr ""

#~ msgid ""
#~ "Modifies the field ``name`` whose value"
#~ " is another document. Specifically, the "
#~ ":update:`$set` operator updates the ``middle``"
#~ " field in the ``name`` subdocument. "
#~ "The document uses :ref:`dot notation "
#~ "<document-dot-notation>` to access a "
#~ "field in a subdocument."
#~ msgstr ""

#~ msgid ""
#~ "Adds an element to the field "
#~ "``awards``, whose value is an array. "
#~ "Specifically, the :update:`$push` operator "
#~ "adds another document as element to "
#~ "the field ``awards``."
#~ msgstr ""

#~ msgid ""
#~ "The :method:`~db.collection.update()` returns a "
#~ ":method:`WriteResult` object that contains the"
#~ " status of the operation. Upon "
#~ "success, the :method:`WriteResult` object "
#~ "contains information on the number of"
#~ " documents that matched the query "
#~ "condition, the number of documents "
#~ "inserted via an ``upsert``, and the "
#~ "number of documents modified:"
#~ msgstr ""

# 300f36e9d1724270bff0095d4af11660
#~ msgid "Safe Writes"
#~ msgstr ""

# fa84be00225646f4a90a3053c3e33d8f
#~ msgid ""
#~ "The :method:`~db.collection.update()` method uses"
#~ " the :dbcommand:`update` command, which "
#~ "uses the default write concern. To "
#~ "specify a different write concern, "
#~ "include the ``writeConcern`` option in "
#~ "the options parameter. See :ref:`example-"
#~ "update-write-concern` for an example."
#~ msgstr ""

# 4f8c8fba6c4340acbff65d9a56b802ad
#~ msgid ""
#~ "The :method:`~db.collection.update()` method updates"
#~ " only the corresponding fields in the"
#~ " document. For an example, see :ref"
#~ ":`example-update-specific-fields`."
#~ msgstr ""

# 30c3d0a849f04045af620fa2bedaa405
#~ msgid "The fields and values of the ``<update>`` parameter, or"
#~ msgstr ""

# 034f8bff9b404592aa49c22c95ab10f5
#~ msgid ""
#~ "All |single-modification-operation-names| "
#~ "operations for a sharded collection that"
#~ " specify the |single-modification-"
#~ "operation-option| option must include the"
#~ " :term:`shard key` *or* the ``_id`` "
#~ "field in the query specification. "
#~ "|single-modification-operation-names| operations"
#~ " specifying |single-modification-operation-"
#~ "option| in a sharded collection without"
#~ " the :term:`shard key` *or* the "
#~ "``_id`` field return an error."
#~ msgstr ""

# e89325aa5a8f450d91c6ec13855f65ca
#~ msgid ""
#~ "The following operation adds a ``price``"
#~ " field to the document and increments"
#~ " the ``stock`` field by ``5``."
#~ msgstr ""

# c2ce7e50be6a4d9499f5d9883a7d7691
#~ msgid "The updated document is now the following:"
#~ msgstr ""

# c15533b316c94130bcf153e925db80e0
#~ msgid ":update:`$set`, :update:`$inc`, :doc:`/reference/operator/update`"
#~ msgstr ""

# 0e05acf62d5a4670b1687dc64d03a6c6
#~ msgid ""
#~ "The following operation uses the "
#~ ":update:`$unset` operator to remove the "
#~ "``stock`` field:"
#~ msgstr ""

# 2f7e85b8129e4818bdbf414a2cf676a1
#~ msgid ""
#~ "The following operation passes an "
#~ "``<update>`` document that contains only "
#~ "field and value pairs, which means "
#~ "the document replaces all the fields "
#~ "in the original document. The operation"
#~ " *does not* replace the ``_id`` "
#~ "value. The operation contains the same"
#~ " value for the ``item`` field in "
#~ "both the ``<query>`` and ``<update>`` "
#~ "documents, which means the field does"
#~ " not change:"
#~ msgstr ""

# 6c775a8260a345c2a5ad8ea9ba5cf526
#~ msgid ""
#~ "The operation creates the following new"
#~ " document. The operation removed the "
#~ "``author`` field and changed the values"
#~ " of the ``price`` and ``stock`` "
#~ "fields:"
#~ msgstr ""

# 2d6edff6f1224a48acdcd3fce253ec6d
#~ msgid ""
#~ "To update multiple documents, set the"
#~ " ``multi`` option to ``true``. For "
#~ "example, the following operation updates "
#~ "all documents where ``stock`` is less"
#~ " than ``5``:"
#~ msgstr ""

# 4b0b2be7a8154b709c704d3622291267
#~ msgid "Update Arrays"
#~ msgstr ""

# efd81bf1d1bd4f169d7e6aa58e87939e
#~ msgid "Update an Element by Position"
#~ msgstr ""

# 7d752ef070b04632a5fa03c63eb4781c
#~ msgid ""
#~ "If the update operation requires an "
#~ "update of an element in an array"
#~ " field, the :method:`~db.collection.update()` "
#~ "method can perform the update using "
#~ "the position of the element and "
#~ ":term:`dot notation`. Arrays in MongoDB "
#~ "are zero-based."
#~ msgstr ""

# 67e8d9e175ef4dabba7d71332bfa1b00
#~ msgid "Update an Element if Position is Unknown"
#~ msgstr ""

# 38afb215a24a44dbb9f22a7b6e429a85
#~ msgid ""
#~ "If the position in the array is"
#~ " not known, the :method:`~db.collection.update()`"
#~ " method can perform the update using"
#~ " the :operator:`$` positional operator. The"
#~ " array field must appear in the "
#~ "``<query>`` parameter in order to "
#~ "determine which array element to update."
#~ msgstr ""

# da27280685ad4c89a87e3b77ffedd039
#~ msgid ""
#~ "The following operation queries the "
#~ ":doc:`bios collection </reference/bios-example-"
#~ "collection>` for the first document "
#~ "where the ``_id`` field equals ``3`` "
#~ "and the ``contribs`` array contains an"
#~ " element equal to ``compiler``. If "
#~ "found, the :method:`~db.collection.update()` method"
#~ " updates the first matching element "
#~ "in the array to ``A compiler`` in"
#~ " the document:"
#~ msgstr ""

# b10f4ef493e742ab8da08e6cb03af10e
#~ msgid "Update a Document Element"
#~ msgstr ""

# 4f9b12bbd8534fc1a6baca581b713ff0
#~ msgid "Add an Element"
#~ msgstr ""

# b645a115d4cb49b4a4851a0d7eea4063
#~ msgid ""
#~ "The following operation queries the "
#~ ":doc:`bios collection </reference/bios-example-"
#~ "collection>` for the first document that"
#~ " has an ``_id`` field equal to "
#~ "``1`` and adds a new element to"
#~ " the ``awards`` field:"
#~ msgstr ""

# 224901e66ce24e4e9316417fbde8c301
#~ msgid "Consider the following operation:"
#~ msgstr ""

# fd7d29af59194cde8ad0c8ec05415318
#~ msgid "This :method:`~db.collection.update()` operation:"
#~ msgstr ""

# d1b6ef6c6fdf4e7999464142cf66565a
#~ msgid "See"
#~ msgstr ""

#~ msgid ""
#~ "The :method:`~db.collection.update()` method returns"
#~ " an object that contains the status"
#~ " of the operation."
#~ msgstr ""

#~ msgid ""
#~ "The fields and values of both the"
#~ " ``<query>`` and ``<update>`` parameters if"
#~ " the ``<update>`` parameter contains *only*"
#~ " :ref:`update operator <update-operators>` "
#~ "expressions. The update creates a base"
#~ " document from the equality clauses "
#~ "in the ``<query>`` parameter, and then"
#~ " applies the update expressions from "
#~ "the ``<update>`` parameter."
#~ msgstr ""

#~ msgid ""
#~ "If ``multi`` is set to ``true``, "
#~ "the :method:`~db.collection.update()` method updates"
#~ " all documents that meet the "
#~ "``<query>`` criteria. The ``multi`` update "
#~ "operation may interleave with other "
#~ "operations, both read and/or write "
#~ "operations. For unsharded collections, you "
#~ "can override this behavior with the "
#~ ":update:`$isolated` operator, which isolates "
#~ "the update operation and disallows "
#~ "yielding during the operation. This "
#~ "isolates the update so that no "
#~ "client can see the updated documents "
#~ "until they are all processed, or "
#~ "an error stops the update operation."
#~ msgstr ""

#~ msgid ""
#~ "To update specific fields in a "
#~ "document, use :ref:`update operators "
#~ "<update-operators>` in the ``<update>`` "
#~ "parameter. If the ``<update>`` parameter "
#~ "refers to non-existent fields in "
#~ "the current document, the "
#~ ":method:`~db.collection.update()` method adds the"
#~ " fields to the document."
#~ msgstr ""

#~ msgid "Update Specific Fields in Embedded Documents"
#~ msgstr ""

#~ msgid ""
#~ "Use :term:`dot notation` to update "
#~ "specific fields in embedded documents."
#~ msgstr ""

#~ msgid ""
#~ "The following example updates the "
#~ "``publisher`` field and the ``digit`` "
#~ "field in the ``isbn`` embedded document:"
#~ msgstr ""

#~ msgid ""
#~ "If no document matches the ``<query>``"
#~ " parameter, the update operation inserts"
#~ " a document with the fields and "
#~ "values of the ``<update>`` parameter and"
#~ " a new unique ``ObjectId`` for the"
#~ " ``_id`` field:"
#~ msgstr ""

#~ msgid ""
#~ "The following operation on a replica "
#~ "set specifies a :doc:`write concern "
#~ "</reference/write-concern>` of ``\"w: "
#~ "majority\"`` with a ``wtimeout`` of 5000"
#~ " milliseconds such that the method "
#~ "returns after the write propagates to"
#~ " a majority of the replica set "
#~ "members or the method times out "
#~ "after 5 seconds."
#~ msgstr ""

#~ msgid ""
#~ "The following command specifies the "
#~ "``multi`` parameter to update all "
#~ "documents where ``item`` is ``\"Divine "
#~ "Comedy\"`` and the ``author`` is "
#~ "``\"Dante\"`` and specifies ``upsert: true``"
#~ " to create a new document if no"
#~ " matching documents are found:"
#~ msgstr ""

#~ msgid ""
#~ "The operation updates all three matching"
#~ " documents and results in the "
#~ "following:"
#~ msgstr ""

#~ msgid ""
#~ "If the collection had *no* matching "
#~ "document, the operation would result in"
#~ " the insertion of a document:"
#~ msgstr ""

#~ msgid ""
#~ "The following operation queries the "
#~ ":doc:`bios collection </reference/bios-example-"
#~ "collection>` for the first document with"
#~ " the ``_id`` field equal to ``1`` "
#~ "and updates the second element in "
#~ "the ``contribs`` array:"
#~ msgstr ""

#~ msgid ""
#~ "The :method:`~db.collection.update()` method can "
#~ "perform the update of an array "
#~ "that contains embedded documents by "
#~ "using the positional operator (i.e. "
#~ ":operator:`$`) and the :term:`dot notation`."
#~ msgstr ""

#~ msgid ""
#~ "The following example queries the "
#~ ":doc:`bios collection </reference/bios-example-"
#~ "collection>` for the first document "
#~ "where the ``_id`` field equals ``4`` "
#~ "and the ``awards`` array contains an "
#~ "embedded document where the ``by`` field"
#~ " equals ``ACM``. If found, the "
#~ ":method:`~db.collection.update()` method updates the"
#~ " ``by`` field in the first matching"
#~ " embedded document:"
#~ msgstr ""

#~ msgid ""
#~ "In the next example, the :update:`$set`"
#~ " operator uses :ref:`dot notation "
#~ "<document-dot-notation>` to access the "
#~ "``middle`` field in the ``name`` "
#~ "embedded document. The :update:`$push` "
#~ "operator adds an embedded document to"
#~ " the ``awards`` array."
#~ msgstr ""

#~ msgid ""
#~ "Modifies the field ``name`` whose value"
#~ " is another document. Specifically, the "
#~ ":update:`$set` operator updates the ``middle``"
#~ " field in the ``name`` document. The"
#~ " document uses :ref:`dot notation "
#~ "<document-dot-notation>` to access a "
#~ "field in an embedded document."
#~ msgstr ""

#~ msgid ""
#~ "Adds an element to the field "
#~ "``awards``, whose value is an array. "
#~ "Specifically, the :update:`$push` operator "
#~ "adds another document as an element "
#~ "to the field ``awards``."
#~ msgstr ""

