===============
Group Whitelist
===============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: twocols

The ``whitelist`` resource retrieves and updates your group's :ref:`whitelist
<whitelist>`. The resource requires your :ref:`group-id`.

Endpoints
---------

Get a Group's Whitelist
~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none

   GET /api/atlas/v1.0/groups/GROUP-ID/whitelist

Get a Single Whitelist Entry
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none

   GET /api/atlas/v1.0/groups/GROUP-ID/whitelist/IP-ADDRESS-ENTRY

If the entry includes a subnet mask, use the URL-encoded value for the forward
slash (/). For example, for an entry of ``1.2.3.4/5``, use ``1.2.3.4%2F5``.

Add Entries to the Group's Whitelist
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none

   POST /api/atlas/v1.0/groups/GROUP-ID/whitelist

The entity body must be an array of entry objects, even if you are adding only
one entry.

If an IP address is already in the whitelist, you will get an error.

When setting ``ipAddress``, if you specify a single IP address and add the
``/32`` subnet mask, |service| does not store the ``/32`` because a ``/32``
subnet mask does not change the address. For example, an address of
``12.34.56.78/32`` is the same as ``12.34.56.78``.

Delete an Entry from a Group's Whitelist
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none

   DELETE /api/atlas/v1.0/groups/GROUP-ID/whitelist/IP-ADDRESS-ENTRY

If the entry includes a subnet mask, use the URL-encoded value for the forward
slash (/). For example, for an entry of ``1.2.3.4/5``, use ``1.2.3.4%2F5``.

Sample Entity
-------------

.. code-block:: javascript

   {
     cidrBlock: "1.2.3.4/32",
     ipAddress: "1.2.3.4",
     groupId: "123abc"
   }

Entity Fields
-------------

.. list-table::
   :widths: 10 10 80
   :header-rows: 1

   * - Name
     - Type
     - Description

   * - ``cidrBlock``
     - string
     - The whitelist entry in CIDR notation.

   * - ``ipAddress``
     - string
     - The whitelisted IP address. This attribute will not be present if the
       whitelist entry is a CIDR block (e.g., ``1.2.3.4/28``).

   * - ``groupId``
     - string
     - ID of the group containing the whitelist entry.

Links
-----

.. list-table::
   :header-rows: 1

   * - Relation
     - Description
   * - ``self``
     - Me
   * - ``http://mms.mongodb.com/group``
     - The group containing the whitelist entry.

Examples
--------

Get a Group's Whitelist
~~~~~~~~~~~~~~~~~~~~~~~

Request
```````

.. code-block:: none

   curl -i -u "username:apiKey" --digest "https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794dee37132bb7b/whitelist"

Response
````````

.. code-block:: none

   HTTP/1.1 200 OK

   {
     "links" : [ ... ],
     "results" : [
       {
         "cidrBlock" : "100.10.100.10/32",
         "groupId" : "5356823b3794dee37132bb7b",
         "ipAddress" : "100.10.100.10",
         "links" : [ ... ]
       },
       ...
     ],
     "totalCount" : 2
   }

Get a Single Whitelist Entry
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Request
```````

.. code-block:: none

   curl -i -u "username:apiKey" --digest "https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794dee37132bb7b/whitelist/100.10.100.10%2F32"

Response
````````

.. code-block:: none

   HTTP/1.1 200 OK

   {
     "cidrBlock" : "100.10.100.10/32",
     "groupId" : "5356823b3794dee37132bb7b",
     "ipAddress" : "100.10.100.10",
     "links" : [ ... ]
   }

Add Entries to the Group's Whitelist
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Request
```````

.. code-block:: none

   curl -i -u "username:apiKey" --digest -H "Content-Type: application/json" -X POST "https://cloud.mongodb.com/api/atlas/v1.0/groups/5759c4a4e4b0b1f3902bb6c9/whitelist" --data '
   [
     {
       "ipAddress" : "76.54.32.10"

     }, {
       "cidrBlock": "72.53.34.15/28"
     }
   ]'

Response
````````

.. code-block:: none

   HTTP/1.1 201 Created

   {
     "links" : [ ... ],
     "results" : [
       {
          "cidrBlock" : "76.54.32.10/32",
          "groupId" : "5356823b3794dee37132bb7b",
          "ipAddress" : "76.54.32.10",
          "links" : [ ... ]
        },
        {
          "cidrBlock" : "72.53.34.15/28",
          "groupId" : "5356823b3794dee37132bb7b",
          "links" : [ ... ]
        },
        ...
     ],
     "totalCount" : 6
   }

Delete an Entry from a Group's Whitelist
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Request
```````

.. code-block:: none

   curl -i -u "username:apiKey" --digest -X DELETE "https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794dee37132bb7b/whitelist/72.53.34.15"

Response
````````

.. code-block:: none

   HTTP/1.1 200 OK

   {}
