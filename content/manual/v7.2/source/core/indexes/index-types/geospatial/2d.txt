.. _2d-index:

==========
2d Indexes
==========

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

2d indexes support queries on data stored as points on a
:ref:`two-dimensional plane <geospatial-geometry>`. The 2d index is
intended for queries on :ref:`legacy coordinate pairs
<geospatial-legacy>`.

To create a 2d index, specify the string ``2d`` as the index
type:

.. include:: /includes/indexes/code-examples/create-2d-index.rst

You cannot use 2d indexes for queries on :term:`GeoJSON` objects. To
enable queries on GeoJSON objects, use :ref:`2dsphere indexes
<2dsphere-index>`.

.. note::

   When creating a :ref:`2d index <2d-index>`, the first value (longitude) must 
   be between -180 and 180, inclusive. The second value (latitude) must be between 
   -90 and 90, inclusive. However, these default limits can be overridden with the ``min`` 
   and ``max`` :ref:`options on 2d indexes <2d-index-options>`. Unlike 
   :ref:`2dsphere index <2dsphere-index>` coordinates, ``2d indexes`` values do 
   not "wrap" around a sphere.

Use Cases
---------

Use a 2d index to query and perform calculation on data represented
within a two-dimensional plane. For example:

- An application analyzing visual similarities between two art pieces.

- A calculator that can perform calculations on two-dimensional graphs. 

- A mobile game that calculates distances between players on a
  two-dimensional map.


Get Started
-----------

To learn how to create and query 2d indexes, see:

- :ref:`2d-index-create`
- :ref:`2d-index-proximity-query`
- :ref:`2d-index-query-within-flat-shape`

.. - Create a Compound 2d Index (PLACEHOLDER)

Details
-------

Supported Calculations 
~~~~~~~~~~~~~~~~~~~~~~

2d indexes support calculations on a :ref:`flat, Euclidean plane
<geospatial-geometry>`. 

For spherical geometry calculations, store your data as as 
:ref:`GeoJSON objects <geospatial-geojson>` and use a 2dsphere index
to support geospatial queries.

Compound 2d Indexes
~~~~~~~~~~~~~~~~~~~

You can create compound 2d indexes that reference two fields:

- The first field must be the location field. The index constructs
  queries that first select on this field.
- The second field further filters results based on additional
  criteria.

A compound 2d index can cover queries.

.. For a complete example, see (link to the compound 2dindex procedure)

``sparse`` Property
~~~~~~~~~~~~~~~~~~~

2d indexes are always :ref:`sparse <index-type-sparse>` and
ignore the :ref:`sparse <index-type-sparse>` option. If a
document lacks a 2d index field (or the field is ``null`` or an
empty array), MongoDB does not add an entry for the document to the
2d index. For inserts, MongoDB inserts the document but does not
add to the 2d index.

For a compound index that includes a 2d index key along with keys
of other types, only the 2d index field determines whether the
index references a document.

Learn More
----------

- :ref:`Geospatial Queries <geospatial-queries>`
- :ref:`2dsphere-index-query`
- :ref:`geospatial-restrictions`

.. toctree::
   :titlesonly:
   :hidden:

   /core/indexes/index-types/geospatial/2d/create
   /core/indexes/index-types/geospatial/2d/query
   /core/indexes/index-types/geospatial/2d/internals
   /core/indexes/index-types/geospatial/2d/calculate-distances
