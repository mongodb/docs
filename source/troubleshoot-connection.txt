==============================
Troubleshoot Connection Issues
==============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

This page outlines common connection issues and possible resolutions.

To learn more about connecting to an |service| {+cluster+}, see the
:ref:`Get Started with Atlas <gswa-connect>` tutorial.

.. note::

   If you are an enterprise customer looking for support,
   `file a ticket <https://www.mongodb.com/docs/atlas/support/#request-support>`__.
   For community support, visit `MongoDB Community
   Resources <https://www.mongodb.com/community/>`__.

.. include:: /includes/serverless-driver-options.rst

{+Database-deployment+} :guilabel:`Connect` button is disabled
--------------------------------------------------------------

Your {+database-deployment+}'s :guilabel:`Connect` button may be disabled if your
{+database-deployment+} is in the provisioning state. Your
{+database-deployment+} needs to provision when it is first deployed.
{+Clusters+} also must provision when you 
:doc:`scaled them up or down </scale-cluster>`. The provisoning process can
take up to 10 minutes, after which the :guilabel:`Connect` button will
become enabled.

Connecting IP address not in IP Access List
-------------------------------------------

Before connecting to your |service| {+database-deployment+}, check that you added your
host's IP address to the :ref:`IP access list <access-list>` for your
{+database-deployment+}'s project. |service| allows client connections only from IP
addresses and |cidr| address ranges in the IP access list.

Authentication to the {+database-deployment+} failed
----------------------------------------------------

To connect to |service|, you must authenticate with a MongoDB database
user. To create a database user for your {+database-deployment+}, see
:doc:`security-add-mongodb-users/`.

Possible solutions
~~~~~~~~~~~~~~~~~~

If you have created a user and are having trouble authenticating,
try the following:

- Check that you are using the correct username and password for
  your database user, and that you are connecting to the correct
  {+database-deployment+}.

- Check that you are specifying the correct ``authSource`` database in
  your connection string.

- If you have a special character in your password, see
  :ref:`Special characters in connection string password
  <special-pass-characters>`.

Too many open connections to your {+database-deployment+}
---------------------------------------------------------

|service| sets limits for concurrent incoming connections to a
{+database-deployment+}. For {+clusters+}, this is based on the {+cluster+} tier. If
you try to connect when you are at this limit, MongoDB displays an error stating
``connection refused because too many open connections``.

For a detailed comparision of {+cluster+} tiers and their maximum
concurrent connections, see :ref:`connection-limits`.

Possible solutions
~~~~~~~~~~~~~~~~~~

- Close any open connections to your {+database-deployment+} not currently in use.

- :doc:`Scale your {+cluster+} </scale-cluster>` to a higher tier to
  support more concurrent connections.

- Restart your application.

- To prevent this issue in the future, consider using the
  :urioption:`maxPoolSize` connection string option to limit the
  number of connections in the connection pool.

To learn how to fix this issue, see
:doc:`/reference/alert-resolutions/connection-alerts`.

Degraded performance in sharded {+clusters+} during spikes in connection counts
---------------------------------------------------------------------------------

.. include:: /includes/fact-optimized-connection-strings-intro.rst

To learn more about optimized connection strings for sharded 
{+clusters+} behind a private endpoint, see
:ref:`optimized-connection-strings`.

Attempting to connect from behind a firewall
--------------------------------------------

Connecting to the {+atlas-ui+}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-cdn.rst

Connecting to a {+Database-Deployment+}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

|service| {+database-deployments+} operate on port ``27017``. You must be able to reach
this port to connect to your {+database-deployments+}. Additionally, ensure that the
appropriate ports are open for the following:

- For sharded {+clusters+}, grant access to port 27016.

- For :doc:`BI Connector </bi-connection>`, grant access to port 27015.

You can check your ability to reach a port using the third-party
:guilabel:`Outgoing port tester`.

.. example::

   To check your ability to reach port 27017, visit
   http://portquiz.net:27017.

If you can't access these ports, check your system firewall settings
and ensure that they are not blocking access to these ports.

{+Database-Deployment+} Availability
------------------------------------

If you are using a ``mongodb+srv://`` :manual:`connection string
</reference/connection-string>` and your driver or shell can't find the
DNS host of the |service| {+database-deployment+}, the {+database-deployment+}
might be paused or deleted. Check that the {+database-deployment+} exists. If
this is a paused {+cluster+}, you can :ref:`resume
<resume-cluster>` the {+cluster+} if necessary.

.. note::

   |service| automatically pauses idle ``M0`` {+clusters+} after 60 days
   with no connections.

MongoDB Compass Troubleshooting
-------------------------------

If you use |compass| to connect to your {+cluster+} and experience issues,
see:

- :ref:`atlas-connection-refused-srv` in this section.
- :compass:`Compass Connection Errors </troubleshooting/connection-errors/>`
  in the |compass| documentation.

If you use a :ref:`self-managed X.509 certificate <self-managed-x509>`
or an :manual:`auto-generated X.509 certificate </core/security-x.509/>`
managed by |service| to authenticate to the MongoDB database, when you
connect to |compass|, you must:

1. In |compass|, choose :guilabel:`Fill in connection fields individually`.
2. In the :guilabel:`Authentication` dropdown,  select ``X.509``.
3. Select :guilabel:`More Options`.
4. In the :guilabel:`SSL` dropdown, select :guilabel:`Server and Client Validation`.
5. Add the same path to the downloaded |service|-managed certificate, or
   the self-managed certificate (depending on which you use) to each of
   these fields: :guilabel:`Certificate Authority`, :guilabel:`Client Certificate`,
   and :guilabel:`Client Private Key`.

To learn more, see :compass:`Connect to MongoDB </connect/>` in the
|compass| documentation.

.. _atlas-connection-string-troubleshooting:

Connection String Issues
------------------------

Incorrect Connection String Format
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The :manual:`connection string format </reference/connection-string/>`
you use to connect to |service| depends on several factors, including:

- Your {+mongosh+} version. To learn more, see
  :doc:`mongo-shell-connection`.
- Your driver version. To learn more, see :doc:`/driver-connection/`.

Verify your connection string in a test environment before putting
it into production.

.. _special-pass-characters:

Special Characters in Connection String Password
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If your password includes special characters, and you are using your
password in a connection string URI, encode the special characters. 

.. include:: /includes/facts/characters-not-allowed-auth.rst

.. include:: /includes/uri-encoding/encode.rst

.. important::

   Do not encode special characters in your password if you are using
   your password outside of a connection string URI (for example,
   pasting it into {+mongosh+}).

Connection String Incompatible with Driver Version
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you see this error message, your driver is likely out of date. For
instructions on updating your driver, refer to your specific
:driver:`Driver Documentation <>`.

.. _atlas-connection-blocked-by-isp-dns:

Internet Service Provider DNS Blocks Connection String
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

When you use the :ref:`DNS seed list connection string format <connections-dns-seedlist>`
to connect to |service|, you might see the following error:

.. code-block:: none
   :copyable: false

   DNSHostNotFound: Failed to look up service "<MongoDB service name>"

This error may occur when using the default |dns| server that your
|isp| provides. That |dns| server might not support |srv| lookups that
the |dns| seed list connection string format uses.

To resolve the issue, you can try changing your |dns| configuration to
use a :wikipedia:`public DNS server <Public_recursive_name_server>`.

.. This might introduce issues using services that your |isp| provides.
.. The |isp|'s |dns| servers may advertise these unique services to
.. users of those |dns| services. Verify that |isp| services that you
.. use regularly still work as expected if you change |dns| servers.

.. example::

   You can configure your network settings to
   :google:`use Google Public DNS </speed/public-dns/docs/using>`
   instead of your |isp|'s |dns| servers.

After you update your network settings to use a public |dns| server,
:ref:`connect to the {+database-deployment+} <connect-to-database-deployment>`.

Connection String Error with DB Tools on Ubuntu 18.04
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If running Ubuntu 18.04 and using the
:ref:`DNS seed list connection string <connections-dns-seedlist>`
format (``mongodb+srv://``) to connect to |service| from one of
the :dbtools:`MongoDB Database Tools </>`
(``mongodump``, ``mongorestore``, etc), you might see the following
error:

.. code-block:: none
   :copyable: false

   lookup nta8e.mongodb.net on 123.45.67.8:27017: cannot unmarshal DNS message

If so, use one of the following connection options instead:

- use the ``--uri`` option with a
  :ref:`non-SRV connection string <connections-standard-connection-string-format>` (``mongodb://``).
- use the ``--host`` option to specify the host to connect.

.. _atlas-connection-refused-srv:

Connection Refused using SRV Connection String
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

When using the
:ref:`DNS seed list connection string <connections-dns-seedlist>`
format (``mongodb+srv://``) with a driver or Compass, you may
receive in the following error:

.. code-block:: none
   :copyable: false

   Error: querySrv ECONNREFUSED _mongodb._tcp.<SRV Record>

To remedy this issue, use the
:ref:`Standard Connection String format <connections-standard-connection-string-format>`
with Compass or that driver. With Compass, don't set the **SRV Record**
value, set the **Hostname** and **Port** values instead.
