======
$query
======

.. default-domain:: mongodb

Definition
----------

.. operator:: $query

   The :operator:`$query` operator forces MongoDB to interpret an expression
   as a query.

   The following :program:`mongo` commands are equivalent, and
   return only those documents in the collection named ``collection`` where the
   ``age`` field equals ``25``.

   .. code-block:: javascript

      db.collection.find( { $query: { age : 25 } } )
      db.collection.find( { age : 25 } )

   :operator:`$query` is necessary to work with documents containing a field
   name ``query`` containing an embedded document, such as the following:

   .. code-block:: javascript

      { _id: 1, age: 25, query: { a: 1 } }

   The following find operation that does not use the :operator:`$query`
   operator will return no results:

   .. code-block:: javascript

      db.documents.find( { query: { a: 1 } } )

   To obtain the document, you will need to use the following query:

   .. code-block:: javascript

      db.documents.find( { "$query": { query: { a: 1 } } } )

   .. seealso:: For more information about queries in MongoDB see
      :doc:`/core/read-operations`,
      :method:`db.collection.find()`, and `Getting Started with MongoDB
      <http://docs.mongodb.org/getting-started/shell>`_.

   .. note::

      Do not mix query forms. If you use the :operator:`$query`
      format, do not append :ref:`cursor methods
      <js-query-cursor-methods>` to the
      :method:`~db.collection.find()`. To modify the query use the
      :doc:`meta-query operators </reference/operator/query-modifier>`,
      such as :operator:`$explain`.

      Therefore, the following two operations are equivalent:

      .. code-block:: javascript

         db.collection.find( { $query: { age : 25 }, $explain: true } )
         db.collection.find( { age : 25 } ).explain()
