===================
Server Pool Servers
===================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: twocols

.. include:: /includes/fact-groups-projects-synonyms.rst

The ``serverPool/servers`` resource provides access to the :term:`server
pool's <server pool>` servers. The pool provides |onprem| users with
pre-provisioned servers for deploying MongoDB.

For a list of all server pool API resources, see
:ref:`server-pool-api-resources`. For information on the server pool, see
:doc:`/tutorial/server-pool`.

Endpoints
---------

Get All Servers in the Server Pool
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none

   GET /api/public/v1.0/serverPool/servers

To filter by server status, use the ``status`` query parameter:

.. code-block:: none

   GET /api/public/v1.0/serverPool/servers?status=STATUS

``STATUS`` can be one of the following values: ``AVAILABLE`` or ``TRASH``.

``STATUS`` **cannot** be ``RESERVED``, ``BOUND``, ``NEEDS_CLEAN``, or
``DELETED``.

You must have the :ref:`Global Read Only <global-read-only-role>` role to use
this endpoint.

Get a Server by ID
~~~~~~~~~~~~~~~~~~

.. code-block:: none

   GET /api/public/v1.0/serverPool/servers/SERVER-ID

``SERVER-ID`` is the string specified in the ``id`` field in the
``serverPool/servers`` entity.

You must have the :ref:`Global Read Only <global-read-only-role>` role to use
this endpoint.

Get a Server by Hostname
~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none

   GET /api/public/v1.0/serverPool/servers/byName/HOSTNAME

``HOSTNAME`` is the string specified in the ``hostname`` field in the
``serverPool/servers`` entity.

You must have the :ref:`Global Read Only <global-read-only-role>` role to use
this endpoint.

Remove a Server from the Server Pool
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none

   DELETE /api/public/v1.0/serverPool/servers/SERVER-ID

``SERVER-ID`` is the string specified in the ``id`` field in the
``serverPool/servers`` entity.

You must have the :ref:`Global Owner <global-owner-role>` role to use this
endpoint.

.. note:: If the Automation Agent is still running on the server, the server
   will appear again in the server pool the next time the Automation Agent pings
   |onprem|.

Sample Entity
-------------

.. code-block:: none

   {
     "id": "561a80ef518b82957d",
     "hostname" : "example.net",
     "properties" : { ... },
     "created": "2016-11-01T05:05:05Z",
     "recycled" : "1970-01-01T00:00:00Z",
     "statusName": "AVAILABLE",
     "boundGroupId": "28db9982157d787ffb",
     "links": [ ... ]
   }

Entity Fields
-------------

.. include:: /includes/list-table-server-pool-servers.rst

Links
-----

.. list-table::
   :header-rows: 1

   * - Relation
     - Description

   * - ``self``
     - Me

   * - ``http://mms.mongodb.com/serverPoolServers``
     - The servers in the pool.

   * - ``http://mms.mongodb.com/serverPoolProperties``
     - The options used to select a server.

Examples
--------

Get All Servers in the Server Pool
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Request
```````

.. code-block:: none

   curl -i -u "username:apiKey" --digest "https://<ops-manager-host>/api/public/v1.0/serverPool/servers"

Response
````````

.. code-block:: none

   HTTP/1.1 200 OK

   {
     "links" : [ ... ],
     "results" : [ {
       "created" : "2016-11-01T18:02:02Z",
       "hostname" : "635.example.net",
       "id" : "57d0561a80ef518b829",
       "links" : [ ... ],
       "properties" : { "region" : "east", "ram" : "16", ... },
       "recycled" : "1970-01-01T00:00:00Z",
       "statusName" : "AVAILABLE"
     },
     ... ,
     { ... }
     ],
     "totalCount" : 20
   }

Get a Server by ID
~~~~~~~~~~~~~~~~~~

Request
```````

.. code-block:: none

   curl -i -u "username:apiKey" --digest "https://<ops-manager-host>/api/public/v1.0/serverPool/servers/57d0561a80ef518b829"

Response
````````

.. code-block:: none

   HTTP/1.1 200 OK

   {
     "created" : "2016-11-01T18:02:02Z",
     "hostname" : "635.example.net",
     "id" : "57d0561a80ef518b829",
     "links" : [ ... ],
     "properties" : { "region" : "east", "ram" : "16", ... },
     "recycled" : "1970-01-01T00:00:00Z",
     "statusName" : "AVAILABLE"
   }

Get A Server by Hostname
~~~~~~~~~~~~~~~~~~~~~~~~

Request
```````

.. code-block:: none

   curl -i -u "username:apiKey" --digest "https://<ops-manager-host>/api/public/v1.0/serverPool/servers/byName/635.example.net"

Response
````````

.. code-block:: none

   HTTP/1.1 200 OK

   {
     "created" : "2016-11-01T18:02:02Z",
     "hostname" : "635.example.net",
     "id" : "57d0561a80ef518b829",
     "links" : [ ... ],
     "properties" : { "region" : "east", "ram" : "16", ... },
     "recycled" : "1970-01-01T00:00:00Z",
     "statusName" : "AVAILABLE"
   }

Remove a Server from |onprem|
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Request
```````

.. code-block:: none

   curl -i -u "username:apiKey" --digest -X DELETE "https://<ops-manager-host>/api/public/v1.0/serverPool/servers/57d0561a80ef518b829"

Response
````````

.. code-block:: none

   HTTP/1.1 200 OK

   {}
