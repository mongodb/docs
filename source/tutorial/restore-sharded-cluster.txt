=======================================
Restore a Sharded Cluster from a Backup
=======================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Overview
--------

When you restore a cluster from a backup, |mms| provides you with a
restore files for the selected restore point. For an overview of the
restore process, please see :doc:`/core/restore-overview`.

Considerations
--------------

.. include:: /includes/considerations-restore-bindata-change.rst

The backup restore file now includes a metadata file, ``restoreInfo.txt``. This file captures the options the database used when the snapshot was taken. The database must be run with the listed options after it has been restored.

.. seealso:: 

   The :ref:`seed-secondary-considerations` of 
   :doc:`/tutorial/use-restore-to-seed-secondary`
   explains the use and contents of the ``restoreInfo.txt``
   metadata file.

Prerequisites
-------------

Client Requests During Restoration
++++++++++++++++++++++++++++++++++

.. include:: /includes/considerations-restore-in-isolation.rst

Snapshots when Agent Cannot Stop Balancer
+++++++++++++++++++++++++++++++++++++++++

|mms| displays a warning next to cluster snapshots taken while the
:term:`balancer <balancer>` is enabled. If you restore from such a 
snapshot, you run the risk of lost or orphaned data. For more 
information, see :ref:`snapshot-while-balancer-enabled`.

Secure Copy (``SCP``) Delivery
++++++++++++++++++++++++++++++

.. include:: /includes/note-scp-key-pair-requirement.rst

.. include:: /includes/note-windows-scp-issue.rst

.. important::

   When copying files individually, the ``MaxStartups`` value in
   ``sshd_config`` should be increased to:

   (4 Ã— (number of shards + number of config servers)) + 10

   ``SCP`` is performed in parallel and, by default, Secure Shell Daemon
   (``sshd``) installations use a small number of concurrent connections.
   Changing this setting in ``sshd_config`` allows ``SCP`` to support
   sufficient connections to complete the restore.

   .. example::

      For a sharded cluster with 7 shards and 3 config servers, change
      ``MaxStartups`` to ``50``:

      ``MaxStartups  50``

Automatic Restore
-----------------

To have |mms| automatically restore the backup, perform the 
:ref:`select the snapshot <select-snapshot-sharded-cluster>` procedure.

Manual Restore
--------------

To restore the backup manually, perform the following:

1. :ref:`Select and Retrieve the Snapshot<select-snapshot-sharded-cluster>`.

2. :ref:`Restore Primary Replica Set Member for Each Shard<restore-primary-member>`.

3. :ref:`Restore All Secondary Replica Set Members for Each Shard<restore-secondary-members>`.

4. :ref:`Restore Each Config Server<restore-config-servers>`.

5. :ref:`Start the MongoDB Sharded Cluster<start-cluster>`.

.. _select-snapshot-sharded-cluster:

Select and Retrieve the Snapshot
++++++++++++++++++++++++++++++++

.. include:: /includes/steps/download-snapshot-sharded-cluster.rst

.. _restore-primary-member:

Restore Primary Replica Set Member for Each Shard
+++++++++++++++++++++++++++++++++++++++++++++++++

For *all* shards, restore the primary replica set member. You must have
a copy of the snapshot on the server that host the primary replica set
member.

.. include:: /includes/steps/restore-primary.rst

.. _restore-secondary-members:

Restore All Secondary Replica Set Members for Each Shard
++++++++++++++++++++++++++++++++++++++++++++++++++++++++

After you have restored the primary for a shard you can restore all
secondary replica set members. You must have a copy of the snapshot on
all servers that host a secondary replica set member.

.. include:: /includes/steps/restore-secondary.rst

.. _restore-config-servers:

Restore Each Config Server
++++++++++++++++++++++++++

Perform this procedure separately for each :term:`config server`. Each
config server must have a copy of the tar file with the config server
data. 

Use this procedure only for manual restores.

.. include:: /includes/steps/restore-config-server.rst

.. _start-cluster:

Start the ``mongos`` process
++++++++++++++++++++++++++++

Start the cluster's :program:`mongos` bound to your new config servers.
