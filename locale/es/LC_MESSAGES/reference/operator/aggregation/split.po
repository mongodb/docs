# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# f958e1282433467f92a407792ac18e28
#: ../source/reference/operator/aggregation/split.txt:3
msgid "$split (aggregation)"
msgstr ""

# 3c70aea72c774089876dfa211534da3f
#: ../source/reference/operator/aggregation/split.txt
msgid "On this page"
msgstr ""

# f8e6d2e75fd04fc8971f2dd0197a063d
#: ../source/reference/operator/aggregation/split.txt:16
msgid "Definition"
msgstr ""

# 56d02e355de94c1abce7b8f2803faa1f
#: ../source/reference/operator/aggregation/split.txt:20
msgid ""
"Divides a string into an array of substrings based on a delimiter. "
"``$split`` removes the delimiter and returns the resulting substrings as "
"elements of an array. If the delimiter is not found in the string, "
"``$split`` returns the original string as the only element of an array."
msgstr ""

# 5699e25a4331485186c370d0dfb2e8b1
#: ../source/reference/operator/aggregation/split.txt:25
msgid ""
"``$split`` has the following :ref:`operator expression syntax <agg-quick-"
"ref-operator-expressions>`:"
msgstr ""

# d5632f4166ec471a841402f792d9d5b5
#: ../source/reference/operator/aggregation/split.txt:35
msgid "Behavior"
msgstr ""

# 369803a6a5db498fa1d550435f4118f0
#: ../source/reference/operator/aggregation/split.txt:37
msgid ""
"The :expression:`$split` operator returns an array. The ``<string "
"expression>`` and ``<delimiter>`` inputs must both be strings. Otherwise,"
" the operation fails with an error."
msgstr ""

# 30ccec2782c94ab0815d6e26ea00d5f5
# 76e2a20928b843e2baecdf79be5d988b
#: ../source/reference/operator/aggregation/split.txt:45
#: ../source/reference/operator/aggregation/split.txt:72
msgid "Example"
msgstr ""

# e62a2ca6269743f992aa5859a4798718
#: ../source/reference/operator/aggregation/split.txt:46
msgid "Results"
msgstr ""

# 3e5b08cdb5f742a4bc2442d19fdb124c
#: ../source/reference/operator/aggregation/split.txt:48
msgid "``{ $split: [ \"June-15-2013\", \"-\" ] }``"
msgstr ""

# ec090ceb12404751b4bf0ef8eca31781
#: ../source/reference/operator/aggregation/split.txt:49
msgid "``[ \"June\", \"15\", \"2013\" ]``"
msgstr ""

# 6fb98f52ebd44251bcf894110c9268ef
#: ../source/reference/operator/aggregation/split.txt:51
msgid "``{ $split: [ \"banana split\", \"a\" ] }``"
msgstr ""

# 33def60fb05a49fcaf1fe2800383b936
#: ../source/reference/operator/aggregation/split.txt:52
msgid "``[ \"b\", \"n\", \"n\", \" split\" ]``"
msgstr ""

# 5d292b1978d047e48d960ad1f15aa227
#: ../source/reference/operator/aggregation/split.txt:54
msgid "``{ $split: [ \"Hello World\", \" \" ] }``"
msgstr ""

# ca4c76377d594c0d9e4aeaf487fecf5e
#: ../source/reference/operator/aggregation/split.txt:55
msgid "``[ \"Hello\", \"World\" ]``"
msgstr ""

# 9f4023f000264515a810d2a80ff0287b
#: ../source/reference/operator/aggregation/split.txt:57
msgid "``{ $split: [ \"astronomical\", \"astro\" ] }``"
msgstr ""

# b6e14a46082844aba46aa3e9f90ea61d
#: ../source/reference/operator/aggregation/split.txt:58
msgid "``[ \"\", \"nomical\" ]``"
msgstr ""

# 77e52f8911c4433aa999a118b3503226
#: ../source/reference/operator/aggregation/split.txt:60
msgid "``{ $split: [ \"pea green boat\", \"owl\" ] }``"
msgstr ""

# 4f191cb4ce8a4d74b8e5e05ddd24fdc0
#: ../source/reference/operator/aggregation/split.txt:61
msgid "``[ \"pea green boat\" ]``"
msgstr ""

# 3349c8435afa4390a908eabf362750ec
#: ../source/reference/operator/aggregation/split.txt:63
msgid "``{ $split: [ \"headphone jack\", 7 ] }``"
msgstr ""

# d292448aaa6a4e99a6ddcb4928e7f25e
#: ../source/reference/operator/aggregation/split.txt:64
msgid ""
"``\"$split requires an expression that evaluates to a string as a second "
"argument, found: double\"``"
msgstr ""

# e18d1b68f8ec4ceb8fb6173448d9cc99
#: ../source/reference/operator/aggregation/split.txt:67
msgid "``{ $split: [ \"headphone jack\", /jack/ ] }``"
msgstr ""

# a62d1e218ff44332934532f3fe9fcf68
#: ../source/reference/operator/aggregation/split.txt:68
msgid ""
"``\"$split requires an expression that evaluates to a string as a second "
"argument, found: regex\"``"
msgstr ""

# f8ca149483654e5aac227c6c8d91ee79
#: ../source/reference/operator/aggregation/split.txt:74
msgid "A collection named ``deliveries`` contains the following documents:"
msgstr ""

# c04baad7c8c04c8c96382fac80838588
#: ../source/reference/operator/aggregation/split.txt:86
msgid ""
"The goal of following aggregation operation is to find the total quantity"
" of deliveries for each state and sort the list in descending order. It "
"has five pipeline stages:"
msgstr ""

# 016b830eaf5444b4ae0e855985c58c96
#: ../source/reference/operator/aggregation/split.txt:90
msgid ""
"The :pipeline:`$project` stage produces documents with two fields, "
"``qty`` (integer) and ``city_state`` (array). The ``$split`` operator "
"creates an array of strings by splitting the ``city`` field, using a "
"space (``\" \"``) as a delimiter."
msgstr ""

# d742feb7969143dfb7a98d17afa99f66
#: ../source/reference/operator/aggregation/split.txt:95
msgid ""
"The :pipeline:`$unwind` stage creates a separate record for each element "
"in the ``city_state`` field."
msgstr ""

# b0473be5ee6048db9dd6d1541980cf53
#: ../source/reference/operator/aggregation/split.txt:98
msgid ""
"The :pipeline:`$match` stage uses a regular expression to filter out the "
"city documents, leaving only those containing a state."
msgstr ""

# b0b617edff8f4ab2b0d81d7ddf59d7d4
#: ../source/reference/operator/aggregation/split.txt:101
msgid ""
"The :pipeline:`$group` stage groups all the states together and sums the "
"``qty`` field."
msgstr ""

# f6776ecd6c094029a6658b862a817a47
#: ../source/reference/operator/aggregation/split.txt:104
msgid ""
"The :pipeline:`$sort` stage sorts the results by ``total_qty`` in "
"descending order."
msgstr ""

# 1e6acd98990e47e2bf1d6f1a52a1fed1
#: ../source/reference/operator/aggregation/split.txt:117
msgid "The operation returns the following results:"
msgstr ""

