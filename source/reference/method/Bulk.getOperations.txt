====================
Bulk.getOperations()
====================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. method:: Bulk.getOperations()

   Returns an array of write operations executed through
   :method:`Bulk.execute()`. The returned write operations are in
   groups as determined by MongoDB for execution. For information on
   how MongoDB groups the list of bulk write operations, see
   :ref:`Bulk.execute() Behavior <bulk-execute-behavior>`.

   Only use :method:`Bulk.getOperations()` after a
   :method:`Bulk.execute()`. Calling :method:`Bulk.getOperations()`
   before you call :method:`Bulk.execute()` will result in an
   *incomplete* list.

.. _bulk-getOperations-example:

Example
-------

The following initializes a :method:`Bulk()` operations builder on the
``items`` collection, adds a series of write operations, executes the
operations, and then calls :method:`~Bulk.getOperations()` on the
``bulk`` builder object:

.. code-block:: javascript

   var bulk = db.items.initializeUnorderedBulkOp();

   for (var i = 1; i <= 1500; i++) {
       bulk.insert( { x: i } );
   }

   bulk.execute();
   bulk.getOperations();

The :method:`~Bulk.getOperations()` method returns an array with the
operations executed. The output shows that MongoDB divided the
operations into 2 groups, one with 1000 operations and one with 500.
For information on how MongoDB groups the list of bulk write
operations, see :ref:`Bulk.execute() Behavior <bulk-execute-behavior>`

Although the method returns all 1500 operations in the returned array,
this page omits some of the results for brevity.

.. code-block:: javascript

   [
      {
         "originalZeroIndex" : 0,
         "batchType" : 1,
         "operations" : [
            { "_id" : ObjectId("53a8959f1990ca24d01c6165"), "x" : 1 },

            ... // Content omitted for brevity

            { "_id" : ObjectId("53a8959f1990ca24d01c654c"), "x" : 1000 }
         ]
      },
      {
         "originalZeroIndex" : 1000,
         "batchType" : 1,
         "operations" : [
            { "_id" : ObjectId("53a8959f1990ca24d01c654d"), "x" : 1001 },

            ... // Content omitted for brevity

            { "_id" : ObjectId("53a8959f1990ca24d01c6740"), "x" : 1500 }
         ]
      }
   ]

Returned Fields
---------------

The array contains documents with the following fields:

.. data:: originalZeroIndex

   Specifies the order in which the operation was added to the bulk
   operations builder, based on a zero index; e.g. first operation
   added to the bulk operations builder will have
   :data:`originalZeroIndex` value of ``0``.

.. data:: batchType

   Specifies the write operations type.

   .. list-table::
      :header-rows: 1

      * - ``batchType``
        - Operation

      * - 1
        - Insert

      * - 2
        - Update

      * - 3
        - Remove

.. data:: operations

   Array of documents that contain the details of the operation.

.. seealso::

   :method:`Bulk()` and :method:`Bulk.execute()`.

