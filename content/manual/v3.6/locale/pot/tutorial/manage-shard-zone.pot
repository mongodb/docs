# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/manage-shard-zone.txt:3
msgid "Manage Shard Zones"
msgstr ""

#: ../source/tutorial/manage-shard-zone.txt:13
msgid "In sharded clusters, you can create zones that represent a group of shards and associate one or more ranges of :term:`shard key` values to that zone. MongoDB routes reads and writes that fall into a zone range only to those shards inside of the zone."
msgstr ""

#: ../source/tutorial/manage-shard-zone.txt:19
msgid "Add Shards to a Zone"
msgstr ""

#: ../source/tutorial/manage-shard-zone.txt:21
msgid "Associate a Zone with a particular shard using the :method:`sh.addShardTag()` method when connected to a :binary:`~bin.mongos` instance. A single shard may have multiple zones, and multiple shards may also have the same zone."
msgstr ""

#: ../source/tutorial/manage-shard-zone.txt:28
msgid "The following example adds the zone ``NYC`` to two shards, and the zones ``SFO`` and ``NRT`` to a third shard:"
msgstr ""

#: ../source/tutorial/manage-shard-zone.txt:38
msgid "You may remove zone from a particular shard using the :method:`sh.removeShardTag()` method when connected to a :binary:`~bin.mongos` instance, as in the following example, which removes the ``NRT`` zone from a shard:"
msgstr ""

#: ../source/tutorial/manage-shard-zone.txt:48
msgid "Create a Zone Range"
msgstr ""

#: ../source/tutorial/manage-shard-zone.txt:50
msgid "To define the zone's range of shard keys, use the :method:`sh.addTagRange()` method when connected to a :binary:`~bin.mongos` instance. Any given shard key range may only have *one* assigned zone. You cannot overlap defined ranges."
msgstr ""

#: ../source/tutorial/manage-shard-zone.txt:56
msgid "Given a collection named ``users`` in the ``records`` database, sharded by the ``zipcode`` field. The following operations assign:"
msgstr ""

#: ../source/tutorial/manage-shard-zone.txt:59
msgid "two ranges of zip codes in Manhattan and Brooklyn the ``NYC`` zone"
msgstr ""

#: ../source/tutorial/manage-shard-zone.txt:61
msgid "one range of zip codes in San Francisco the ``SFO`` zone"
msgstr ""

#: ../source/includes/fact-shard-ranges-inclusive-exclusive.rst:1
msgid "Zone ranges are always inclusive of the lower boundary and exclusive of the upper boundary."
msgstr ""

#: ../source/tutorial/manage-shard-zone.txt:74
msgid "Remove a Zone Range"
msgstr ""

#: ../source/tutorial/manage-shard-zone.txt:76
msgid "Use the shell helper method :method:`sh.removeRangeFromZone()` to remove a range from a zone."
msgstr ""

#: ../source/tutorial/manage-shard-zone.txt:82
msgid "The following example removes the ``NYC`` zone assignment for the range of zip codes within Manhattan:"
msgstr ""

#: ../source/tutorial/manage-shard-zone.txt:90
msgid "View Existing Zones"
msgstr ""

#: ../source/tutorial/manage-shard-zone.txt:92
msgid "Use :method:`sh.status()` to list the zones associated to each shard in the cluster. You can also view a shards zones by querying the :data:`~config.shards` collection in the ``config`` database."
msgstr ""

#: ../source/tutorial/manage-shard-zone.txt:96
msgid "The following example uses the :method:`~db.collection.find()` method to return all shards with the ``NYC`` zone."
msgstr ""

#: ../source/tutorial/manage-shard-zone.txt:104
msgid "You can find zone ranges for all :term:`namespaces <namespace>` in the :data:`~config.tags` collection of the ``config`` database. The output of :method:`sh.status()` also displays all zone ranges."
msgstr ""

#: ../source/tutorial/manage-shard-zone.txt:108
msgid "The following example uses the :method:`~db.collection.find()` method to return any range associated to the ``NYC`` zone."
msgstr ""

