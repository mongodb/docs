.. _ak8so-private-endpoint-serverless:

=====================================================
Manage Private Endpoints for {+Serverless-Instances+}
=====================================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

|ak8so| supports managing private endpoints for 
{+serverless-instances+} on the following platforms: 

- |aws| using the `{+aws-pl+} <https://aws.amazon.com/privatelink/>`__
  feature.

- |azure| using the `{+az-pl+}
  <https://azure.microsoft.com/en-us/services/private-link/>`__ 
  feature.

.. note:: 

   {+Serverless-instances+} don't support {+gcp-psc+}. If
   you need to set up {+gcp-psc+}, use a
   :ref:`{+dedicated-cluster+} <cluster-private-endpoint>`.

   .. include:: /includes/fact-serverless-adding-features.rst

Before you begin, see :ref:`ak8so-private-endpoint`.

Procedure
---------

To enable clients to connect to |service| {+serverless-instances+} 
using private endpoints:

.. tabs::

   .. tab:: {+aws-pl+}
      :tabid: {+aws-pl+}

      .. procedure::
         :style: normal

         .. step:: Specify the ``spec.serverlessSpec.privateEndpoints`` parameter.
            
            Specify the :setting:`spec.serverlessSpec.privateEndpoints` 
            parameter for the :ref:`atlasdeployment-custom-resource`. 
            In the ``spec.serverlessSpec.privateEndpoints.name`` 
            field, specify a unique label to identify the private 
            endpoint and run the following command:

            .. code-block:: sh

               cat <<EOF | kubectl apply -f -
               apiVersion: atlas.mongodb.com/v1
               kind: AtlasDeployment
               metadata:
                 name: atlas-deployment-serverless
                 labels:
                   app.kubernetes.io/version: 1.6.0
               spec:
                 projectRef:
                   name: my-project
                 serverlessSpec:
                   name: serverless-instance
                   tags: 
                   - key: "environment",
                     value: "production"
                   providerSettings:
                     providerName: SERVERLESS
                     backingProviderName: AWS
                     regionName: US_EAST_1
                   privateEndpoints:
                   - name: "{unique-private-endpoint-label}"
               EOF

            |service| creates the |vpc| resources. This might take 
            several minutes to complete.

         .. step:: Find the service names for your private endpoints.

            a. Run the following command:

               .. code-block:: sh

                  kubectl get atlasdeployment atlas-deployment-serverless -o yaml

            #. Note the service name string for each private endpoint 
               within the 
               ``status.serverlessPrivateEndpoints.EndpointServiceName`` 
               field of the :ref:`atlasdeployment-custom-resource`.

         .. step:: Use the AWS CLI to configure each private endpoint.

            To create your application |vpc| :term:`interface endpoint`:

            a. Copy the following command:

               .. code-block:: sh

                  aws ec2 create-vpc-endpoint --vpc-id {your-application-vpc-id} --region {aws-region} --service-name {service-name-string} --vpc-endpoint-type Interface --subnet-ids {your-application-subnet-ids}
             
            #. Replace the following placeholders with the details 
               about your |aws| |vpc|:

               .. list-table::
                  :widths: 20 80

                  * - ``your-application-vpc-id``
                    - Unique string that identifies the peer |aws| 
                      |vpc|. Find this value on the |vpc| dashboard in 
                      your |aws| account.

                  * - ``aws-region``
                    - Label that identifies the :ref:`AWS region 
                      <amazon-aws>` of the private endpoint.

                  * - ``service-name-string``
                    - Unique string that identifies the service name 
                      for your private endpoint. Find this value within 
                      the 
                      ``status.serverlessPrivateEndpoints.EndpointServiceName`` 
                      field of the :ref:`atlasdeployment-custom-resource`.

                  * - ``your-application-subnet-ids``
                    - Unique strings that identify the subnets your 
                      |aws| |vpc| uses. Separate each subnet with a 
                      space. Find these values on the 
                      :guilabel:`Subnet`  dashboard in your |aws| 
                      account.

                      .. important::

                         You must specify at least one subnet. If you 
                         don't, |aws| won't provision a 
                         :term:`interface endpoint` in your |vpc|. An 
                         interface endpoint is required for clients 
                         in your |vpc| to send traffic to the private 
                         endpoint.

            #. Run the command with the :aws:`AWS CLI 
               </cli/latest/userguide/cli-chap-install.html>`.


            #. Note the ``VpcEndpointId`` value in the output.

               **Example**

               .. code-block:: sh
                  :emphasize-lines: 2

                  "VpcEndpoint": {
                           "VpcEndpointId": "vpce-XXXXXX",
                           "VpcEndpointType": "Interface",
                           "VpcId": "vpc-XXXXX",
                           "ServiceName": "com.amazonaws.vpce.{aws-region}.vpce-svc-XXXX",
                           "State": "pendingAcceptance", 

            To learn more, see :aws:`Creating an Interface Endpoint 
            </vpc/latest/userguide/vpce-interface.html#create-interface-endpoint>` in the |aws| 
            documentation.

         .. step:: Update the ``spec.serverlessSpec.privateEndpoints`` parameter.

            Update the :setting:`spec.serverlessSpec.privateEndpoints` 
            parameter for the :ref:`atlasdeployment-custom-resource`. 
            Replace the ``vpce-id`` with the ``VpcEndpointId`` values 
            for your private endpoints and run the following command:

            .. note::
             
               You can find the unique identifier of the peer 
               |aws| |vpc| on the |vpc| dashboard in your |aws| account.

            .. code-block:: sh

               cat <<EOF | kubectl apply -f -
               apiVersion: atlas.mongodb.com/v1
               kind: AtlasDeployment
               metadata:
                 name: atlas-deployment-serverless
                 labels:
                   app.kubernetes.io/version: 1.6.0
               spec:
                 projectRef:
                   name: my-project
                 serverlessSpec:
                   name: serverless-instance
                   tags: 
                   - key: "environment",
                     value: "production"
                   providerSettings:
                     providerName: SERVERLESS
                     backingProviderName: AWS
                     regionName: US_EAST_1
                   privateEndpoints:
                   - name: "{unique-private-endpoint-label}"
                     cloudProviderEndpointID: "{vpce-id}"
               EOF
        
         .. step:: Check the status of your private endpoints using |ak8so|.

            Run the following command:

            .. code-block:: sh

               kubectl get atlasdeployment atlas-deployment-serverless -o yaml

         .. step:: Retrieve the secret that |ak8so| created to connect to the cluster.

            .. include:: /includes/fact-ak8so-pe-connection-strings.rst

   .. tab:: {+az-pl+}
      :tabid: {+az-pl+}

      .. procedure::
         :style: normal

         .. step:: Specify the ``spec.serverlessSpec.privateEndpoints`` parameter.
            
            Specify the :setting:`spec.serverlessSpec.privateEndpoints` 
            parameter for the :ref:`atlasdeployment-custom-resource`. 
            In the ``spec.serverlessSpec.privateEndpoints.name`` 
            field, specify a unique label to identify the private 
            endpoint and run the following command:

            .. code-block:: sh

               cat <<EOF | kubectl apply -f -
               apiVersion: atlas.mongodb.com/v1
               kind: AtlasDeployment
               metadata:
                 name: atlas-deployment-serverless
                 labels:
                   app.kubernetes.io/version: 1.6.0
               spec:
                 projectRef:
                   name: my-project
                 serverlessSpec:
                   name: serverless-instance
                   tags: 
                   - key: "environment",
                     value: "production"
                   providerSettings:
                     providerName: SERVERLESS
                     backingProviderName: AWS
                     regionName: US_EAST_1
                   privateEndpoints:
                   - name: "{unique-private-endpoint-label}"
               EOF

            |service| creates the VNET resources. This might take 
            several minutes to complete.

         .. step:: Disable private endpoint network policies.

            |service| doesn't support network policies for private 
            endpoints.

            a. Copy the following command:

               .. code-block:: sh
                
                  az network vnet subnet update --resource-group {resource-group-name} --vnet-name {vnet-name} --name {subnet-name} --disable-private-endpoint-network-policies true

            #. Replace the following placeholders with the details 
               about your |azure| VNet:

               .. list-table::
                  :widths: 20 80

                  * - ``resource-group-name``
                    - Human-readable label for the resource group that 
                      contains the VNet that you want to use to connect 
                      to |service|. Find this value on the 
                      :guilabel:`Resource Group Properties` page on your
                      |azure| dashboard.

                  * - ``vnet-name``
                    - Human-readable label that identifies the VNet 
                      that you want to use to connect to |service|. 
                      Find this value on the :guilabel:`Virtual
                      Network` page on your |azure| dashboard.

                  * - ``subnet-name``
                    - Human-readable label that identifies the subnet 
                      in your |azure| VNet. Find this value on the 
                      :guilabel:`Virtual Network Subnets` page on your 
                      |azure| dashboard.

            #. Run the command with the :azure:`Azure CLI
               <install-azure-cli>`.

            To learn more, see the 
            :azure:`Manage network policies for private endpoints 
            </private-link/disable-private-endpoint-network-policy>` 
            in the |azure| documentation.
         
         .. step:: Find the service IDs and names for your private endpoints.

            a. Run the following command:

               .. code-block:: sh

                  kubectl get atlasdeployment atlas-deployment-serverless -o yaml

            #. Note the service resouce ID and service name for each 
               private endpoint within the 
               ``status.serverlessPrivateEndpoints.PrivateLinkServiceResourceId`` 
               and ``status.serverlessPrivateEndpoints.EndpointServiceName`` 
               fields of the :ref:`atlasdeployment-custom-resource`.

         .. step:: Use the Azure CLI to configure each private endpoint.

            To create your private endpoint:

            a. Copy the following command:

               .. code-block:: sh

                  az network private-endpoint create --resource-group {resource-group-name} --name {endpoint-name} --vnet-name {vnet-name} --subnet {subnet-name} --private-connection-resource-id {serviceResourceId} --connection-name {serviceName} --manual-request true
            
            #. Replace the following placeholders with the details 
               about your |azure| VNet:

               .. list-table::
                  :widths: 20 80

                  * - ``resource-group-name``
                    - Human-readable label for the resource group that 
                      contains the VNet that you want to use to connect 
                      to |service|. Find this value on the 
                      :guilabel:`Resource Group Properties` page on your
                      |azure| dashboard.

                  * - ``endpoint-name``
                    - Human-readable label that identifies your private 
                      endpoint. Specify this now.

                  * - ``vnet-name``
                    - Human-readable label that identifies the VNet 
                      that you want to use to connect to |service|. 
                      Find this value on the :guilabel:`Virtual
                      Network` page on your |azure| dashboard.

                  * - ``subnet-name``
                    - Human-readable label that identifies the subnet 
                      in your |azure| VNet. Find this value on the 
                      :guilabel:`Virtual Network Subnets` page on your 
                      |azure| dashboard.

                  * - ``serviceResourceId``
                    - Unique string that identifies the service 
                      resource for your private endpoint. Find this 
                      value within the 
                      ``status.serverlessPrivateEndpoints.PrivateLinkServiceResourceId`` 
                      field of the 
                      :ref:`atlasdeployment-custom-resource`.

                  * - ``serviceName``
                    - Unique string that identifies the service name 
                      for your private endpoint. Find this 
                      value within the 
                      ``status.serverlessPrivateEndpoints.EndpointServiceName`` 
                      field of the 
                      :ref:`atlasdeployment-custom-resource`.

            #. Run the command with the :azure:`Azure CLI
               <install-azure-cli>`.

         .. step:: Update the ``spec.serverlessPrivateEndpoints`` parameter.

            Update the :setting:`spec.serverlessSpec.privateEndpoints` 
            parameter for the :ref:`atlasdeployment-custom-resource`. 
            Specify the Resource ID and IP address information for 
            your private endpoints and run the following command:

            .. note::
               
               The :guilabel:`Properties` page on your |azure| 
               dashboard displays the unique identifier for the 
               private endpoint that you created in the 
               :guilabel:`Resource ID` field.

               The :guilabel:`Overview` page on your |azure| 
               dashboard displays the private IP address of the private 
               endpoint network interface that you created in the 
               :guilabel:`Private IP` field.

            .. code-block:: sh

               cat <<EOF | kubectl apply -f -
               apiVersion: atlas.mongodb.com/v1
               kind: AtlasDeployment
               metadata:
                 name: atlas-deployment-serverless
                 labels:
                   app.kubernetes.io/version: 1.6.0
               spec:
                 projectRef:
                   name: my-project
                 serverlessSpec:
                   name: serverless-instance
                   tags: 
                   - key: "environment",
                     value: "production"
                   providerSettings:
                     providerName: SERVERLESS
                     backingProviderName: AWS
                     regionName: US_EAST_1
                   privateEndpoints:
                   - name: "{unique-private-endpoint-label}"
                     cloudProviderEndpointID: "{resource-id}" 
                     privateEndpointIpAddress: "{private-ip}"
               EOF
        
         .. step:: Check the status of your private endpoints using |ak8so|.

            Run the following command:

            .. code-block:: sh

               kubectl get atlasdeployment atlas-deployment-serverless -o yaml

         .. step:: Retrieve the secret that |ak8so| created to connect to the cluster.

            .. include:: /includes/fact-ak8so-pe-connection-strings.rst
