#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/index-ttl.txt:7
msgid "TTL Indexes"
msgstr "TTL索引"

#: ../source/core/index-ttl.txt:17
msgid ""
"TTL indexes are special single-field indexes that MongoDB can use to "
"automatically remove documents from a collection after a certain amount of "
"time. Data expiration is useful for certain types of information like "
"machine generated event data, logs, and session information that only need "
"to persist in a database for a finite amount of time."
msgstr ""
"TTL索引是一种特殊索引，通过这种索引MongoDB会过一段时间后自动移除集合中的文"
"档。这对于某些类型的信息来说是一个很理想的特性，例如机器生成的事件数据，日"
"志，会话信息等，这些数据都只需要在数据库中保存有限时间。"

#: ../source/core/index-ttl.txt:23
msgid ""
"To create a TTL index, use the :method:`db.collection.createIndex()` method "
"with the ``expireAfterSeconds`` option on a field whose value is either a "
":ref:`date <document-bson-type-date>` or an array that contains :ref:`date "
"values <document-bson-type-date>`."
msgstr ""

#: ../source/core/index-ttl.txt:28
msgid ""
"For example, to create a TTL index on the ``lastModifiedDate`` field of the "
"``eventlog`` collection, use the following operation in the :program:`mongo`"
" shell:"
msgstr ""

#: ../source/core/index-ttl.txt:37
msgid "Behavior"
msgstr ""

#: ../source/core/index-ttl.txt:40
msgid "Expiration of Data"
msgstr ""

#: ../source/core/index-ttl.txt:42
msgid ""
"TTL indexes expire documents after the specified number of seconds has "
"passed since the indexed field value; i.e. the expiration threshold is the "
"indexed field value plus the specified number of seconds."
msgstr ""

#: ../source/core/index-ttl.txt:46
msgid ""
"If the field is an array, and there are multiple date values in the index, "
"MongoDB uses *lowest* (i.e. earliest) date value in the array to calculate "
"the expiration threshold."
msgstr ""
"如果这个键存储的是一个数组，且在索引中有多个日期类型的数据(和一篇文档关联)，"
"那么当其中 *最低* (比如，最早)过期阈值得到匹配时，这篇文档就会过期失效了。"

#: ../source/core/index-ttl.txt:50
msgid ""
"If the indexed field in a document is not a :term:`date <bson types>` or an "
"array that holds a date value(s), the document will not expire."
msgstr ""

#: ../source/core/index-ttl.txt:53
msgid ""
"If a document does not contain the indexed field, the document will not "
"expire."
msgstr ""

#: ../source/core/index-ttl.txt:57
msgid "Delete Operations"
msgstr ""

#: ../source/core/index-ttl.txt:59
msgid ""
"A background thread in :program:`mongod` reads the values in the index and "
"removes expired :term:`documents <document>` from the collection."
msgstr ""

#: ../source/core/index-ttl.txt:67
msgid "Timing of the Delete Operation"
msgstr ""

#: ../source/core/index-ttl.txt:69
msgid ""
"When you build a TTL index in the :ref:`background <index-creation-"
"background>`, the TTL thread can begin deleting documents while the index is"
" building. If you build a TTL index in the foreground, MongoDB begins "
"removing expired documents as soon as the index finishes building."
msgstr ""

#: ../source/includes/fact-ttl-collection-background-timing.rst:1
msgid ""
"The TTL index does not guarantee that expired data will be deleted "
"immediately upon expiration. There may be a delay between the time a "
"document expires and the time that MongoDB removes the document from the "
"database."
msgstr ""
"TTL索引不能保证过期数据会被立刻删除。在文档过期和MongoDB从数据库中删除文档之"
"间，可能会有延迟。"

#: ../source/includes/fact-ttl-collection-background-timing.rst:6
msgid ""
"The background task that removes expired documents runs *every 60 seconds*. "
"As a result, documents may remain in a collection during the period between "
"the expiration of the document and the running of the background task."
msgstr ""
"删除过期数据的后台任务 *每隔60秒* 运行一次。所以，在文档过期 *之后* 和 后台任"
"务运行或者结束 *之前* ，文档会依然存在于集合中。"

#: ../source/includes/fact-ttl-collection-background-timing.rst:11
msgid ""
"Because the duration of the removal operation depends on the workload of "
"your :program:`mongod` instance, expired data may exist for some time "
"*beyond* the 60 second period between runs of the background task."
msgstr ""
"删除操作的持续实际取决于您的 :program:`mongod` 实例的负载。因此，在两次后台任"
"务运行的间隔间，过期数据可能会继续留在数据库中 *超过* 60秒。"

#: ../source/core/index-ttl.txt:78
msgid "Replica Sets"
msgstr ""

#: ../source/core/index-ttl.txt:86
msgid "Support for Queries"
msgstr ""

#: ../source/core/index-ttl.txt:88
msgid "A TTL index supports queries in the same way non-TTL indexes do."
msgstr ""

#: ../source/core/index-ttl.txt:101
msgid "Restrictions"
msgstr ""

#: ../source/core/index-ttl.txt:103
msgid ""
"TTL indexes are a single-field indexes. :ref:`Compound indexes <index-type-"
"compound>` do not support TTL and ignores the ``expireAfterSeconds`` option."
msgstr ""

#: ../source/core/index-ttl.txt:107
msgid "The ``_id`` field does not support TTL indexes."
msgstr ""

#: ../source/core/index-ttl.txt:109
msgid ""
"You cannot create a TTL index on a :doc:`capped collection </core/capped-"
"collections>` because MongoDB cannot remove documents from a capped "
"collection."
msgstr ""

#: ../source/core/index-ttl.txt:113
msgid ""
"You cannot use :method:`~db.collection.createIndex()` to change the value of"
" ``expireAfterSeconds`` of an existing index. Instead use the "
":dbcommand:`collMod` database command in conjunction with the "
":collflag:`index` collection flag. Otherwise, to change the value of the "
"option of an existing index, you must drop the index first and recreate."
msgstr ""

#: ../source/core/index-ttl.txt:120
msgid ""
"If a non-TTL single-field index already exists for a field, you cannot "
"create a TTL index on the same field since you cannot create indexes that "
"have the same key specification and differ only by the options. To change a "
"non-TTL single-field index to a TTL index, you must drop the index first and"
" recreate with the ``expireAfterSeconds`` option."
msgstr ""
"在其他方面，TTL索引是普通索引，并且如果可以的话，MongoDB会使用这些索引来匹配"
"任意查询。"



#: ../source/core/index-ttl.txt:1
msgid "index"
msgstr "索引"

#: ../source/core/index-ttl.txt:1 ../source/core/index-ttl.txt:2
msgid "TTL index"

msgstr ""

#: ../source/core/index-ttl.txt:0
msgid "On this page"
msgstr ""

#: ../source/core/index-ttl.txt:62
msgid ""
"When the TTL thread is active, you will see delete operations in the output "
"of :method:`db.currentOp()` or in the data collected by the :ref:`database "
"profiler <database-profiler>`."
msgstr ""

#: ../source/core/index-ttl.txt:80
msgid ""
"On :term:`replica set <replica set>` members, the TTL background thread "
"*only* deletes documents when a member is in state :term:`primary`. The TTL "
"background thread is idle when a member is in state :term:`secondary`. "
":term:`Secondary` members replicate deletion operations from the primary."
msgstr ""

#: ../source/core/index-ttl.txt:91
msgid "Record Allocation on MMAPv1"
msgstr ""

#: ../source/core/index-ttl.txt:93
msgid ""
"With the MMAPv1 storage engine, a collection with a TTL index has "
":collflag:`usePowerOf2Sizes` automatically enabled. You cannot modify this "
"setting for the collection. As a result of enabling "
":collflag:`usePowerOf2Sizes`, MongoDB must allocate more disk space relative"
" to data size. This approach helps mitigate the possibility of storage "
"fragmentation caused by frequent delete operations and leads to more "
"predictable storage use patterns."
msgstr ""

#~ msgid ""
#~ "When the TTL thread is active, you will see :doc:`delete </core/write-"
#~ "operations>` operations in the output of :method:`db.currentOp()` or in the "
#~ "data collected by the :ref:`database profiler <database-profiler>`."
#~ msgstr ""

#~ msgid ""
#~ "On :term:`replica sets <replica set>`, the TTL background thread *only* "
#~ "deletes documents on the :term:`primary`. However, the TTL background thread"
#~ " does run on secondaries. :term:`Secondary` members replicate deletion "
#~ "operations from the primary."
#~ msgstr ""

#~ msgid "Record Allocation"
#~ msgstr ""

#~ msgid ""
#~ "A collection with a TTL index has :collflag:`usePowerOf2Sizes` enabled, and "
#~ "you cannot modify this setting for the collection. As a result of enabling "
#~ ":collflag:`usePowerOf2Sizes`, MongoDB must allocate more disk space relative"
#~ " to data size. This approach helps mitigate the possibility of storage "
#~ "fragmentation caused by frequent delete operations and leads to more "
#~ "predictable storage use patterns."
#~ msgstr ""

#~ msgid "Additional Information"
#~ msgstr ""

#~ msgid "For examples, see :doc:`/tutorial/expire-data`."
#~ msgstr ""

