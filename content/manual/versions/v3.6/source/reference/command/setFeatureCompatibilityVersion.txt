==============================
setFeatureCompatibilityVersion
==============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. dbcommand:: setFeatureCompatibilityVersion

   .. versionadded:: 3.4

   .. versionchanged:: 3.6

   Enables or disables the features that persist data incompatible with
   earlier versions of MongoDB. You can only issue the
   :dbcommand:`setFeatureCompatibilityVersion` against the ``admin``
   database.

   The command takes the following form:

   .. code-block:: javascript

      db.adminCommand( { setFeatureCompatibilityVersion: <version> } )

   The values for the ``version`` are:

   .. list-table::
      :header-rows: 1
      :widths: 15 85

      * - Version
        - Description

      * - ``"3.6"``


        - *Available on MongoDB 3.6 Deployments*

          Enables the :ref:`3.6 features that persist data incompatible
          with MongoDB 3.4 <3.6-compatibility-enabled>`.

          .. include:: /includes/3.6-featureCompatibility-caveat.rst

      * - ``"3.4"``

        - *Available on MongoDB 3.4 and MongoDB 3.6 Deployments*

          - If set on MongoDB 3.4 deployments, 
              Enables the :ref:`3.4 features that persist data
              incompatible with MongoDB 3.2
              <3.4-compatibility-enabled>`.

            .. include:: /includes/3.4-featureCompatibility-caveat.rst

          - If set on MongoDB 3.6 deployments,
              Disables the :ref:`3.6 features that persist data
              incompatible with MongoDB 3.4
              <3.6-compatibility-enabled>`.

      * - ``"3.2"``

        - *Available on MongoDB 3.4 Deployments*

          Disables the :ref:`3.4 features that persist data
          incompatible with MongoDB 3.2 <3.4-compatibility-enabled>`.

   .. note::

      .. include:: /includes/list-run-command-targets.rst

Behavior
--------

Conflicts with Background Operations
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Certain background operations, such as index builds, may prevent
execution of :dbcommand:`setFeatureCompatibilityVersion`. Use 
:dbcommand:`currentOp` to identify any ongoing operations.

Default Values
~~~~~~~~~~~~~~

.. include:: /includes/list-table-featureCompatibilityVersion-defaults.rst

Idempotency
~~~~~~~~~~~

This command must perform writes to an internal system collection. If
for any reason the command does not complete successfully, you can
safely retry the command as the operation is idempotent.

Access Control
~~~~~~~~~~~~~~

To run :dbcommand:`setFeatureCompatibilityVersion` if your deployment
enforces access control, you must have a role that grants the
following privilege:

.. code-block:: javascript

   {
     resource: { db: "$setFeatureCompatibilityVersion", collection: "version" },
     actions: [ "update" ]
   }

The :authrole:`clusterAdmin` and :authrole:`clusterManager` roles grant
privileges to run :dbcommand:`setFeatureCompatibilityVersion`. [#readwrite]_

The :authrole:`clusterAdmin` also grants privileges to :ref:`view
featureCompatibilityVersion <view-fcv>`.

Alternatively, you can create a custom role with just the privileges to
run :dbcommand:`setFeatureCompatibilityVersion` and
:dbcommand:`getParameter` to :ref:`view featureCompatibilityVersion
<view-fcv>`:

.. code-block:: javascript

   db.getSiblingDB("admin").createRole({
      role: "fcvRole",
      privileges: [ 
         { resource: { db: "$setFeatureCompatibilityVersion", collection: "version" }, actions: [ "update" ] },
         { resource: { cluster: true }, actions: [ "getParameter" ] }
      ],
      roles: [ ]
   })

.. seealso:: :ref:`create-user-defined-role`

.. [#readwrite]

   For MongoDB 3.6.0-3.6.7, :authrole:`readWriteAnyDatabase` role also
   grants privileges to run :dbcommand:`setFeatureCompatibilityVersion`.

Examples
--------

.. _view-fcv:

View FeatureCompatibilityVersion
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To view the ``featureCompatibilityVersion`` for a :binary:`~bin.mongod`
instance, run the following command on a :binary:`~bin.mongod` instance:

.. note::

   The operation is undefined on the :binary:`~bin.mongos` instances. For a
   sharded cluster that has access control enabled, to run the command
   against a member of the shard replica set, you must connect to the
   member as a :ref:`shard local user <shard-local-users>`.

.. code-block:: javascript

   db.adminCommand( { getParameter: 1, featureCompatibilityVersion: 1 } )

In the results document, the value of the
``featureCompatibilityVersion`` can have one of the following forms.

For MongoDB 3.4 :binary:`~bin.mongod` instances:

.. code-block:: javascript

   "featureCompatibilityVersion" : <version>

For MongoDB 3.6+ :binary:`~bin.mongod` instances:

- If the deployment has the default ``featureCompatibilityVersion``, or
  if the :dbcommand:`setFeatureCompatibilityVersion` command has run
  successfully against the deployment, the
  ``featureCompatibilityVersion`` has the form:

  .. code-block:: javascript

     "featureCompatibilityVersion" : {
        "version" : <version>
     }

- If the :binary:`~bin.mongod` is in a partially upgraded or downgraded
  state, the ``featureCompatibilityVersion`` has the following form:

  .. code-block:: javascript

     "featureCompatibilityVersion" : {
        "version" : <version> ,
        "targetVersion" : <target version>
     }

  For instance, if a sharded cluster has a shard replica set that is
  read only when you run :dbcommand:`setFeatureCompatibilityVersion`
  command against the :binary:`~bin.mongos`, the command will fail, and the
  ``featureCompatibilityVersion`` of the config servers will include
  the ``targetVersion`` field.

  Or if a replica set becomes read only while
  :dbcommand:`setFeatureCompatibilityVersion` is running, the command
  will fail, and the ``featureCompatibilityVersion`` of the replica set
  will include the ``targetVersion`` field as well.

Set Feature Compatibility Version on MongoDB 3.6 Deployments
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Enable 3.6 Backwards Incompatible Features
``````````````````````````````````````````

To enable the :ref:`3.6 features that persist data incompatible with
MongoDB 3.4 <3.6-compatibility-enabled>`, set the feature compatibility
to ``"3.6"`` on the MongoDB 3.6 deployment:

.. note::

   Run the :dbcommand:`setFeatureCompatibilityVersion` command against
   the ``admin`` database.

   .. include:: /includes/list-run-command-targets.rst

.. code-block:: javascript

   db.adminCommand( { setFeatureCompatibilityVersion: "3.6" } )

Disable 3.6 Backwards Incompatible Features
````````````````````````````````````````````

To disable the :ref:`3.6 features that persist data incompatible with
MongoDB 3.4 <3.6-compatibility-enabled>`, set the feature compatibility
to ``"3.4"`` on the MongoDB 3.6 deployment:

.. note::

   Run the :dbcommand:`setFeatureCompatibilityVersion` command against
   the ``admin`` database.

   .. include:: /includes/list-run-command-targets.rst
   
   - ``"3.4"`` featureCompatibilityVersion is supported on MongoDB
     3.6 and MongoDB 3.4 Deployments Only.

.. code-block:: javascript

   db.adminCommand( { setFeatureCompatibilityVersion: "3.4" } )

If run as part of the downgrade process from MongoDB 3.6 to MongoDB
3.4, you must also remove all persisted features that are
:ref:`incompatible <3.6-compatibility-enabled>` with 3.4. See the
appropriate downgrade procedures.

Set Feature Compatibility Version on MongoDB 3.4 Deployments
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Enable 3.4 Backwards Incompatible Features
``````````````````````````````````````````

.. warning::

   .. include:: /includes/3.4-featureCompatibility-caveat.rst

To enable the 3.4 features that are :ref:`backward incompatible
<3.4-compatibility-enabled>`, set the feature compatibility
to ``"3.4"`` on the MongoDB 3.4 deployment:

.. note::

   Run the :dbcommand:`setFeatureCompatibilityVersion` command against
   the ``admin`` database.

   .. include:: /includes/list-run-command-targets.rst

.. code-block:: javascript

   db.adminCommand( { setFeatureCompatibilityVersion: "3.4" } )

Disable 3.4 Backwards Incompatible Features
````````````````````````````````````````````

To disable the :ref:`3.4 backwards-incompatible features
<3.4-compatibility-enabled>`, set the feature compatibility
to ``"3.2"`` on the MongoDB 3.4 deployment:

.. note::

   Run the ``setFeatureCompatibilityVersion`` command against the
   ``admin`` database.

   .. include:: /includes/list-run-command-targets.rst

   - ``"3.2"`` featureCompatibilityVersion is supported on MongoDB
     3.4 and MongoDB 3.2 Deployments Only.

.. code-block:: javascript

   db.adminCommand( { setFeatureCompatibilityVersion: "3.2" } )

Setting the ``featureCompatibilityVersion`` to ``"3.2"`` disables the
use of these features but does not remove existing usage of these
features.

If performed as part of a downgrade to 3.2 procedure, you must also
manually remove the existing usage before downgrading the binaries. For
details, see :ref:`3.4-downgrade-features-prereq`.
