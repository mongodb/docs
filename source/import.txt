========================
Import Data into Cluster
========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Data Import Programs
--------------------

You can bring data from existing MongoDB deployments or JSON/CSV files
into |service| using one of the following:

.. list-table::
   :header-rows: 1
   :widths: 35 65

   * - Program
     - Use Case

   * - :doc:`Live Migrate </import/live-import>` feature.

     - To migrate from a MongoDB *replica set* into an |service| cluster.

       .. important::

          - The source MongoDB replica set must be version 3.0 or 
            greater, excluding version 3.6.

          - :doc:`Live Migrate </import/live-import>` does not import
            user/role data or copy the ``config`` database.

   * - :doc:`mongomirror </import/mongomirror>`

     - To migrate from a MongoDB *replica set* into an |service| 
       cluster.

       :doc:`mongomirror </import/mongomirror>` does not require you to
       shut down your existing replica set or applications.

       .. important::

          - The source MongoDB replica set must be version 2.6 or 
            greater, excluding version 3.6.

          - :doc:`mongomirror </import/mongomirror>` does not import 
            user/role data or copy the ``config`` database.

       See the tutorial :doc:`/import/mongomirror`.

   * - :doc:`mongorestore </import/mongorestore>`

     - To seed an |service| cluster with a BSON dump backup of an
       existing MongoDB deployment.

       .. important::

          :doc:`mongorestore </import/mongorestore>` does not restore
          ``system.profile`` collection data.

       See the tutorial :doc:`/import/mongorestore`.

   * - :doc:`mongoimport </import/mongoimport>`

     - To load data from a ``JSON`` or a ``CSV`` file into an |service|
       cluster.

       .. important::

          :binary:`mongoimport` uses :manual:`strict mode
          representation for certain BSON types
          </reference/mongodb-extended-json>`

       See the tutorial :doc:`/import/mongoimport`.

You can also restore from an |service| cluster backup data to another
|service| cluster. For information, see :doc:`/restore-cluster`.

.. _import-strategies:

Import Strategies for Common Cluster Configurations
---------------------------------------------------

The following table covers the best import strategy for common cluster
configurations:

.. list-table::
   :header-rows: 1
   :widths: 45 55

   * - Cluster Configuration
     - Import Strategy

   * - A :term:`replica set`.

     - Use :doc:`Live Migrate </import/live-import>`.

       You must provide the hostname of the :term:`primary` to the Live
       Migrate tool.

       If the cluster is not running MongoDB version 3.0 through 3.4, 
       you must first upgrade it to at least 3.0 first.

       You must have access to the primary node's :term:`oplog`. If the
       cluster runs with authentication, you must have credentials that
       provide read access to the primary and its :term:`oplog`.

   * - A "single :term:`shard`" :term:`sharded cluster` in ``Compose``. This is
       the standard configuration for new MongoDB deployments in ``Compose``.

     - Use :doc:`Live Migrate </import/live-import>`.

       You must `enable the oplog proxy
       <https://www.compose.com/articles/connecting-to-the-oplog-on-the-new-mon
       godb/>`_.

       You must specify the hostname and credentials for the oplog proxy when
       connecting from Live Migrate.

   * - A standalone MongoDB node.

     - Convert the standalone MongoDB to a single-node replica set and use
       :doc:`Live Migrate </import/live-import>`.

       If the standalone node is not running MongoDB version 3.0 through 3.4, 
       you must upgrade it to at least 3.0 first.

       If you are running with authentication enabled, you must have
       credentials that provide read access to the primary and its oplog.

       If you cannot convert the standalone to a replica set, use
       :binary:`mongodump` and :binary:`mongorestore`. See
       :doc:`/import/mongorestore`.

   * - A shared multi-tenant cluster, or a cluster where you have no oplog
       access.

     - Use :binary:`mongodump` and :binary:`mongorestore`. See
       :doc:`/import/mongorestore`.

       If you are running with authentication enabled, you must have
       credentials that provide read access to the primary.

   * - A sharded cluster with multiple shards.

     - If near-continuous uptime is a requirement, please contact MongoDB.
       From the |service| UI, click :guilabel:`Support`. Fill out a Support
       ticket, noting your uptime requirements and cluster configuration in
       the :guilabel:`More details` text entry.

       If some downtime is OK, you may use :binary:`mongodump` and
       :binary:`mongorestore`. See :doc:`/import/mongorestore` and
       :manual:`Backup Sharded Cluster with Database Dumps
       </tutorial/backup-sharded-cluster-with-database-dumps>`.


|service| has built-in support for :doc:`scaling </scale-cluster>` an ``M0``
Free Tier cluster to an ``M10+`` paid cluster. Alternatively, use
:binary:`mongodump` and :binary:`mongorestore` to copy data from an ``M0``
Free Tier cluster to an ``M10+`` cluster. See :doc:`/import/mongorestore`.

.. class:: hidden

   .. toctree::
      :titlesonly:

      /import/live-import
      /import/mongomirror
      /import/mongorestore
      /import/mongoimport
