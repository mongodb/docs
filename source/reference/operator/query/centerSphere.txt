=============
$centerSphere
=============

.. default-domain:: mongodb

.. query:: $centerSphere

   .. versionadded:: 1.8

   The :query:`$centerSphere` operator defines a circle for a
   :term:`geospatial` query that uses spherical geometry. The query
   returns documents that are within the bounds of the circle.

   You can use the :query:`$centerSphere` operator on both
   :term:`GeoJSON` objects and legacy coordinate pairs.

   The ``2d`` and ``2dsphere`` geospatial indexes both support
   :query:`$centerSphere`.

   To use :query:`$centerSphere`, specify an array that contains:

   - The grid coordinates of the circle's center point

   - The circle's radius measured in radians. To calculate radians, see
     :doc:`/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes`.

   Use the following syntax:

   .. code-block:: javascript

      db.<collection>.find( { <location field> :
                               { $geoWithin :
                                  { $centerSphere : [ [ <x>, <y> ] , <radius> ] }
                            } } )

   .. important:: If you use longitude and latitude, specify **longitude first**.

   The following example queries grid coordinates and returns all
   documents within a 10 mile radius of longitude ``88 W`` and latitude
   ``30 N``. The query converts the distance to radians by dividing by
   the approximate equatorial radius of the earth, 3963.2 miles:

   .. code-block:: javascript

      db.places.find( { loc : { $geoWithin :
                                 { $centerSphere :
                                   [ [ 88 , 30 ] , 10 / 3963.2 ]
                      } } } )

   .. |operator| replace:: :query:`$centerSphere`

   .. include:: /includes/note-geospatial-index-must-exist.rst
