# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: 2014-04-08 18:58+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/reference/command/group.txt:3
msgid "group"
msgstr ""

#: ../source/reference/command/group.txt:14
msgid "Definition"
msgstr ""

#: ../source/includes/extracts/group-deprecation-command.rst:4
msgid ""
"Mongodb 3.4 deprecates the :dbcommand:`group` command. Use "
":method:`db.collection.aggregate()` with the :pipeline:`$group` stage or "
":method:`db.collection.mapReduce()` instead."
msgstr ""

#: ../source/includes/extracts/admonition-group-command-alternative.rst:2
msgid ""
"Because :dbcommand:`group` uses JavaScript, it is subject to a number of "
"performance limitations. For most cases the :pipeline:`$group` operator "
"in the :doc:`aggregation pipeline </core/aggregation-pipeline>` provides "
"a suitable alternative with fewer restrictions."
msgstr ""

#: ../source/reference/command/group.txt:25
msgid ""
"Groups documents in a collection by the specified key and performs simple"
" aggregation functions, such as computing counts and sums. The command is"
" analogous to a ``SELECT <...> GROUP BY`` statement in SQL. The command "
"returns a document with the grouped records as well as the command meta-"
"data."
msgstr ""

#: ../source/reference/command/group.txt:31
msgid "The :dbcommand:`group` command takes the following prototype form:"
msgstr ""

#: ../source/reference/command/group.txt:48
msgid "The command accepts a document with the following fields:"
msgstr ""

#: ../source/includes/apiargs/command-group-field.rst:7
msgid "Field"
msgstr ""

#: ../source/includes/apiargs/command-group-field.rst:9
msgid "Type"
msgstr ""

#: ../source/includes/apiargs/command-group-field.rst:11
msgid "Description"
msgstr ""

#: ../source/includes/apiargs/command-group-field.rst:13
msgid "``ns``"
msgstr ""

#: ../source/includes/apiargs/command-group-field.rst:15
msgid "string"
msgstr ""

#: ../source/includes/apiargs/command-group-field.rst:17
#: ../source/includes/apiargs/command-group-field.rst:88
msgid "The collection from which to perform the group by operation."
msgstr ""

#: ../source/includes/apiargs/command-group-field.rst:21
msgid "``key``"
msgstr ""

#: ../source/includes/apiargs/command-group-field.rst:23
#: ../source/includes/apiargs/command-group-field.rst:43
#: ../source/includes/apiargs/command-group-field.rst:62
msgid "document"
msgstr ""

#: ../source/includes/apiargs/command-group-field.rst:25
#: ../source/includes/apiargs/command-group-field.rst:94
msgid ""
"The field or fields to group. Returns a \"key object\" for use as the "
"grouping key."
msgstr ""

#: ../source/includes/apiargs/command-group-field.rst:30
msgid "``$reduce``"
msgstr ""

#: ../source/includes/apiargs/command-group-field.rst:32
#: ../source/includes/apiargs/command-group-field.rst:51
#: ../source/includes/apiargs/command-group-field.rst:73
msgid "function"
msgstr ""

#: ../source/includes/apiargs/command-group-field.rst:34
#: ../source/includes/apiargs/command-group-field.rst:101
msgid ""
"An aggregation function that operates on the documents during the "
"grouping operation. These functions may return a sum or a count. The "
"function takes two arguments: the current document and an aggregation "
"result document for that group."
msgstr ""

#: ../source/includes/apiargs/command-group-field.rst:41
msgid "``initial``"
msgstr ""

#: ../source/includes/apiargs/command-group-field.rst:45
#: ../source/includes/apiargs/command-group-field.rst:110
msgid "Initializes the aggregation result document."
msgstr ""

#: ../source/includes/apiargs/command-group-field.rst:49
msgid "``$keyf``"
msgstr ""

#: ../source/includes/apiargs/command-group-field.rst:53
#: ../source/includes/apiargs/command-group-field.rst:116
msgid ""
"Optional. Alternative to the ``key`` field. Specifies a function that "
"creates a \"key object\" for use as the grouping key. Use ``$keyf`` "
"instead of ``key`` to group by calculated fields rather than existing "
"document fields."
msgstr ""

#: ../source/includes/apiargs/command-group-field.rst:60
msgid "``cond``"
msgstr ""

#: ../source/includes/apiargs/command-group-field.rst:64
#: ../source/includes/apiargs/command-group-field.rst:125
msgid ""
"Optional. The selection criteria to determine which documents in the "
"collection to process. If you omit the ``cond`` field, |obj-name| "
"processes all the documents in the collection for the group operation."
msgstr ""

#: ../source/includes/apiargs/command-group-field.rst:71
msgid "``finalize``"
msgstr ""

#: ../source/includes/apiargs/command-group-field.rst:75
#: ../source/includes/apiargs/command-group-field.rst:134
msgid ""
"Optional. A function that runs each item in the result set before |obj-"
"name| returns the final value. This function can either modify the result"
" document or replace the result document as a whole. Unlike the ``$keyf``"
" and ``$reduce`` fields that also specify a function, this field name is "
"``finalize``, *not* ``$finalize``."
msgstr ""

#: ../source/includes/apiargs/command-group-field.rst
msgid "field string ns"
msgstr ""

#: ../source/includes/apiargs/command-group-field.rst
msgid "field document key"
msgstr ""

#: ../source/includes/apiargs/command-group-field.rst
msgid "field function $reduce"
msgstr ""

#: ../source/includes/apiargs/command-group-field.rst
msgid "field document initial"
msgstr ""

#: ../source/includes/apiargs/command-group-field.rst
msgid "field function $keyf"
msgstr ""

#: ../source/includes/apiargs/command-group-field.rst
msgid "field document cond"
msgstr ""

#: ../source/includes/apiargs/command-group-field.rst
msgid "field function finalize"
msgstr ""

#: ../source/reference/command/group.txt:54
msgid ""
"For the shell, MongoDB provides a wrapper method "
":method:`db.collection.group()`. However, the "
":method:`db.collection.group()` method takes the ``keyf`` field and the "
"``reduce`` field whereas the :dbcommand:`group` command takes the "
"``$keyf`` field and the ``$reduce`` field."
msgstr ""

#: ../source/reference/command/group.txt:61
msgid "Behavior"
msgstr ""

#: ../source/reference/command/group.txt:64
msgid "Limits and Restrictions"
msgstr ""

#: ../source/reference/command/group.txt:66
msgid ""
"The :dbcommand:`group` command does not work with :term:`sharded clusters"
" <sharded cluster>`. Use the :term:`aggregation framework` or :term:`map-"
"reduce` in :term:`sharded environments <sharding>`."
msgstr ""

#: ../source/reference/command/group.txt:70
msgid ""
"The result set must fit within the :ref:`maximum BSON document size "
"<limit-bson-document-size>`."
msgstr ""

#: ../source/reference/command/group.txt:73
msgid ""
"Additionally, in version 2.2, the returned array can contain at most "
"20,000 elements; i.e. at most 20,000 unique groupings. For group by "
"operations that results in more than 20,000 unique groupings, use "
":dbcommand:`mapReduce`. Previous versions had a limit of 10,000 elements."
msgstr ""

#: ../source/reference/command/group.txt:79
msgid ""
"Prior to 2.4, the :dbcommand:`group` command took the "
":binary:`~bin.mongod` instance's JavaScript lock which blocked all other "
"JavaScript execution."
msgstr ""

#: ../source/reference/command/group.txt:83
msgid "``mongo`` Shell JavaScript Functions/Properties"
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:1
msgid ""
":dbcommand:`map-reduce operations <mapReduce>`, the :dbcommand:`group` "
"command, and :query:`$where` operator expressions **cannot** access "
"certain global functions or properties, such as ``db``, that are "
"available in the :binary:`~bin.mongo` shell."
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:6
msgid ""
"The following JavaScript functions and properties **are available** to "
":dbcommand:`map-reduce operations <mapReduce>`, the :dbcommand:`group` "
"command, and :query:`$where` operator expressions:"
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:13
msgid "Available Properties"
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:14
msgid "Available Functions"
msgstr ""

#: ../source/reference/command/group.txt
msgid "``args``"
msgstr ""

#: ../source/reference/command/group.txt
msgid "``MaxKey``"
msgstr ""

#: ../source/reference/command/group.txt
msgid "``MinKey``"
msgstr ""

#: ../source/reference/command/group.txt
msgid "``assert()``"
msgstr ""

#: ../source/reference/command/group.txt
msgid "``BinData()``"
msgstr ""

#: ../source/reference/command/group.txt
msgid "``DBPointer()``"
msgstr ""

#: ../source/reference/command/group.txt
msgid "``DBRef()``"
msgstr ""

#: ../source/reference/command/group.txt
msgid "``doassert()``"
msgstr ""

#: ../source/reference/command/group.txt
msgid "``emit()``"
msgstr ""

#: ../source/reference/command/group.txt
msgid "``gc()``"
msgstr ""

#: ../source/reference/command/group.txt
msgid "``HexData()``"
msgstr ""

#: ../source/reference/command/group.txt
msgid "``hex_md5()``"
msgstr ""

#: ../source/reference/command/group.txt
msgid "``isNumber()``"
msgstr ""

#: ../source/reference/command/group.txt
msgid "``isObject()``"
msgstr ""

#: ../source/reference/command/group.txt
msgid "``ISODate()``"
msgstr ""

#: ../source/reference/command/group.txt
msgid "``isString()``"
msgstr ""

#: ../source/reference/command/group.txt
msgid "``Map()``"
msgstr ""

#: ../source/reference/command/group.txt
msgid "``MD5()``"
msgstr ""

#: ../source/reference/command/group.txt
msgid "``NumberInt()``"
msgstr ""

#: ../source/reference/command/group.txt
msgid "``NumberLong()``"
msgstr ""

#: ../source/reference/command/group.txt
msgid "``ObjectId()``"
msgstr ""

#: ../source/reference/command/group.txt
msgid "``print()``"
msgstr ""

#: ../source/reference/command/group.txt
msgid "``printjson()``"
msgstr ""

#: ../source/reference/command/group.txt
msgid "``printjsononeline()``"
msgstr ""

#: ../source/reference/command/group.txt
msgid "``sleep()``"
msgstr ""

#: ../source/reference/command/group.txt
msgid "``Timestamp()``"
msgstr ""

#: ../source/reference/command/group.txt
msgid "``tojson()``"
msgstr ""

#: ../source/reference/command/group.txt
msgid "``tojsononeline()``"
msgstr ""

#: ../source/reference/command/group.txt
msgid "``tojsonObject()``"
msgstr ""

#: ../source/reference/command/group.txt
msgid "``UUID()``"
msgstr ""

#: ../source/reference/command/group.txt
msgid "``version()``"
msgstr ""

#: ../source/includes/extracts/admonition-js-prevalence-group.rst:3
msgid "JavaScript in MongoDB"
msgstr ""

#: ../source/includes/extracts/admonition-js-prevalence-group.rst:5
msgid ""
"Although :dbcommand:`group` uses JavaScript, most interactions with "
"MongoDB do not use JavaScript but use an :ecosystem:`idiomatic driver "
"</drivers>` in the language of the interacting application."
msgstr ""

#: ../source/reference/command/group.txt:91
msgid "Examples"
msgstr ""

#: ../source/reference/command/group.txt:93
msgid ""
"The following are examples of the :method:`db.collection.group()` method."
" The examples assume an ``orders`` collection with documents of the "
"following prototype:"
msgstr ""

#: ../source/reference/command/group.txt:113
msgid "Group by Two Fields"
msgstr ""

#: ../source/reference/command/group.txt:115
msgid ""
"The following example groups by the ``ord_dt`` and ``item.sku`` fields "
"those documents that have ``ord_dt`` greater than ``01/01/2012``:"
msgstr ""

#: ../source/reference/command/group.txt:134
msgid ""
"The result is a document that contain the ``retval`` field which contains"
" the group by records, the ``count`` field which contains the total "
"number of documents grouped, the ``keys`` field which contains the number"
" of unique groupings (i.e. number of elements in the ``retval``), and the"
" ``ok`` field which contains the command status:"
msgstr ""

#: ../source/reference/command/group.txt:161
#: ../source/reference/command/group.txt:217
msgid "The method call is analogous to the SQL statement:"
msgstr ""

#: ../source/reference/command/group.txt:171
msgid "Calculate the Sum"
msgstr ""

#: ../source/reference/command/group.txt:173
msgid ""
"The following example groups by the ``ord_dt`` and ``item.sku`` fields "
"those documents that have ``ord_dt`` greater than ``01/01/2012`` and "
"calculates the sum of the ``qty`` field for each grouping:"
msgstr ""

#: ../source/reference/command/group.txt:194
#: ../source/reference/command/group.txt:263
msgid ""
"The ``retval`` field of the returned document is an array of documents "
"that contain the group by fields and the calculated aggregation field:"
msgstr ""

#: ../source/reference/command/group.txt:227
msgid "Calculate Sum, Count, and Average"
msgstr ""

#: ../source/reference/command/group.txt:229
msgid ""
"The following example groups by the calculated ``day_of_week`` field, "
"those documents that have ``ord_dt`` greater than ``01/01/2012`` and "
"calculates the sum, count, and average of the ``qty`` field for each "
"grouping:"
msgstr ""

#: ../source/reference/command/group.txt:281
msgid ":doc:`/core/aggregation-pipeline`"
msgstr ""

#~ msgid ""
#~ "The result is a documents that "
#~ "contain the ``retval`` field which "
#~ "contains the group by records, the "
#~ "``count`` field which contains the total"
#~ " number of documents grouped, the "
#~ "``keys`` field which contains the number"
#~ " of unique groupings (i.e. number of"
#~ " elements in the ``retval``), and the"
#~ " ``ok`` field which contains the "
#~ "command status:"
#~ msgstr ""

# 992e5dcfbc524db3a2d704acdbae61d9
#~ msgid ""
#~ "Prior to 2.4, the :dbcommand:`group` "
#~ "command took the :program:`mongod` instance's"
#~ " JavaScript lock which blocked all "
#~ "other JavaScript execution."
#~ msgstr ""

# d147ab3e50e4432cb2b60cc8613d250e
#~ msgid ""
#~ "In MongoDB 2.4, :dbcommand:`map-reduce "
#~ "operations <mapReduce>`, the :dbcommand:`group` "
#~ "command, and :query:`$where` operator "
#~ "expressions **cannot** access certain global"
#~ " functions or properties, such as "
#~ "``db``, that are available in the "
#~ ":program:`mongo` shell."
#~ msgstr ""

# 2062952a7094441e9774607d14d686a4
#~ msgid ""
#~ "When upgrading to MongoDB 2.4, you "
#~ "will need to refactor your code if"
#~ " your :dbcommand:`map-reduce operations "
#~ "<mapReduce>`, :dbcommand:`group` commands, or "
#~ ":query:`$where` operator expressions include "
#~ "any global shell functions or properties"
#~ " that are no longer available, such"
#~ " as ``db``."
#~ msgstr ""

# 1aa7f30f12024fc1b09904a4aa765d25
#~ msgid ""
#~ "The following JavaScript functions and "
#~ "properties **are available** to :dbcommand"
#~ ":`map-reduce operations <mapReduce>`, the "
#~ ":dbcommand:`group` command, and :query:`$where` "
#~ "operator expressions in MongoDB 2.4:"
#~ msgstr ""

# b67377f9637745deb59ac68325a2c9fa
#~ msgid ""
#~ "Although |javascript-using-operation| "
#~ "JavaScript, most interactions with MongoDB "
#~ "do not use JavaScript but use an"
#~ " :doc:`idiomatic driver </applications/drivers>` "
#~ "in the language of the interacting "
#~ "application."
#~ msgstr ""

# f128a1056e5e4e37b11d8a4653eff819
#~ msgid ":doc:`/core/aggregation`"
#~ msgstr ""

