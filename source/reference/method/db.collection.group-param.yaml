object:
  name: db.collection.group
  type: method
field:
  optional: false
  type: param
name: key
type: document
position: 1
description: |
  The field or fields to group by.
---
object:
  name: db.collection.group
  type: method
field:
  optional: false
  type: param
name: reduce
type: function
position: 2
description: |
  A function for the group operation perform on the documents during the
  grouping operation, such as compute a sum or a count. The aggregation
  function takes two arguments: the current document and the aggregate
  result for the previous documents in the group.
---
object:
  name: db.collection.group
  type: method
field:
  optional: false
  type: param
name: initial
type: document
position: 3
description: |
  Initializes the aggregation result document.
---
object:
  name: db.collection.group
  type: method
field:
  optional: true
  type: param
name: keyf
type: function
position: 4
description: |
  Alternative to the ``key`` field. Specifies a function that creates a
  "key object" for use as the grouping key. Use the ``keyf`` instead of
  ``key`` to group by calculated fields rather than existing document
  fields.
---
object:
  name: db.collection.group
  type: method
field:
  optional: true
  type: param
name: cond
type: document
position: 5
description: |
  The selection criteria to determine which documents in the collection
  to process. If you omit the ``cond`` field,
  :method:`db.collection.group()` processes all the documents in the
  collection for the group operation.
---
object:
  name: db.collection.group
  type: method
field:
  optional: true
  type: param
name: finalize
type: function
position: 6
description: |
  A function that runs each item in the result set before
  :method:`db.collection.group()` returns the final value. This function
  can either modify the result document or replace the result document
  as a whole.
...
