# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/reference/operator/aggregation/stdDevSamp.txt:3
msgid "$stdDevSamp (aggregation)"
msgstr ""

#: ../source/reference/operator/aggregation/stdDevSamp.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/operator/aggregation/stdDevSamp.txt:20
msgid ""
"Calculates the sample standard deviation of the input values. Use if the "
"values encompass a sample of a population of data from which to "
"generalize about the population. :group:`$stdDevSamp` ignores non-numeric"
" values."
msgstr ""

#: ../source/reference/operator/aggregation/stdDevSamp.txt:25
msgid ""
"If the values represent the entire population of data or you do not wish "
"to generalize about a larger population, use :group:`$stdDevPop` instead."
msgstr ""

#: ../source/includes/extracts/fact-aggregation-accumulator-stdDevSamp.rst:1
msgid ""
":group:`$stdDevSamp` is available in the :pipeline:`$group` and "
":pipeline:`$project` stages."
msgstr ""

#: ../source/reference/operator/aggregation/stdDevSamp.txt:31
msgid ""
"When used in the :pipeline:`$group` stage, :expression:`$stdDevSamp` has "
"the following syntax and returns the sample standard deviation of the "
"specified expression for a group of documents that share the same group "
"by key:"
msgstr ""

#: ../source/reference/operator/aggregation/stdDevSamp.txt:40
msgid ""
"When used in the :pipeline:`$project` stage, :expression:`$stdDevSamp` "
"returns the sample standard deviation of the specified expression or list"
" of expressions for each document and has one of two syntaxes:"
msgstr ""

#: ../source/reference/operator/aggregation/stdDevSamp.txt:44
msgid ":expression:`$stdDevSamp` has one specified expression as its operand:"
msgstr ""

#: ../source/reference/operator/aggregation/stdDevSamp.txt:50
msgid ""
":expression:`$stdDevSamp` has a list of specified expressions as its "
"operand:"
msgstr ""

#: ../source/reference/operator/aggregation/stdDevSamp.txt:57
msgid ""
"The argument for :expression:`$stdDevSamp` can be any :ref:`expression "
"<aggregation-expressions>` as long as it resolves to an array. For more "
"information on expressions, see :ref:`aggregation-expressions`."
msgstr ""

#: ../source/reference/operator/aggregation/stdDevSamp.txt:63
msgid "Behavior"
msgstr ""

#: ../source/reference/operator/aggregation/stdDevSamp.txt:66
msgid "Non-numeric Values"
msgstr ""

#: ../source/reference/operator/aggregation/stdDevSamp.txt:68
msgid ""
":group:`$stdDevSamp` ignores non-numeric values. If all operands for a "
"sum are non-numeric, :group:`$stdDevSamp` returns ``null``."
msgstr ""

#: ../source/reference/operator/aggregation/stdDevSamp.txt:72
msgid "Single Value"
msgstr ""

#: ../source/reference/operator/aggregation/stdDevSamp.txt:74
msgid ""
"If the sample consists of a single numeric value, :group:`$stdDevSamp` "
"returns ``null``."
msgstr ""

#: ../source/reference/operator/aggregation/stdDevSamp.txt:78
msgid "Array Operand"
msgstr ""

#: ../source/reference/operator/aggregation/stdDevSamp.txt:80
msgid ""
"In the :pipeline:`$group` stage, if the expression resolves to an array, "
":group:`$stdDevSamp` treats the operand as a non-numerical value."
msgstr ""

#: ../source/includes/extracts/fact-agg-accumulator-array-operand-in-project-stdDevSamp.rst:1
msgid "In the :pipeline:`$project` stage:"
msgstr ""

#: ../source/includes/extracts/fact-agg-accumulator-array-operand-in-project-stdDevSamp.rst:3
msgid ""
"With a single expression as its operand, if the expression resolves to an"
" array, :group:`$stdDevSamp` traverses into the array to operate on the "
"numerical elements of the array to return a single value."
msgstr ""

#: ../source/includes/extracts/fact-agg-accumulator-array-operand-in-project-stdDevSamp.rst:7
msgid ""
"With a list of expressions as its operand, if any of the expressions "
"resolves to an array, :group:`$stdDevSamp` does **not** traverse into the"
" array but instead treats the array as a non-numerical value."
msgstr ""

#: ../source/reference/operator/aggregation/stdDevSamp.txt:86
msgid "Example"
msgstr ""

#: ../source/reference/operator/aggregation/stdDevSamp.txt:88
msgid "A collection ``users`` contains documents with the following fields:"
msgstr ""

#: ../source/reference/operator/aggregation/stdDevSamp.txt:97
msgid ""
"To calculate the standard deviation of a sample of users, following "
"aggregation operation first uses the :pipeline:`$sample` pipeline to "
"sample 100 users, and then uses :group:`$stdDevSamp` calculates the "
"standard deviation for the sampled users."
msgstr ""

#: ../source/reference/operator/aggregation/stdDevSamp.txt:111
msgid "The operation returns a result like the following:"
msgstr ""

