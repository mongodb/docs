.. _arch-center-paradigms-multi-cloud:

===============================
Multi-Cloud Deployment Paradigm
===============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: onecol

Multi-cloud {+service+} deployments are a special case of multi-region deployment
in which you set up {+cluster+} nodes across 
multiple geographic regions *and* multiple cloud providers. Multi-cloud
deployments enhance protection in the case of concurrent regional outage and
cloud provider outage. By automatically rerouting traffic to a different cloud 
provider's node in another region, you get continuous availability and a
smooth user experience. Multi-cloud deployments can also protect
against vendor lock-in and enhance performance.

{+service+} supports multi-cloud deployment across any combination of 
|aws|, |azure|, and |gcp|. 

To learn how to configure multi-cloud deployments and learn about the
different types of nodes you can add, see 
:atlas:`Configure High Availability and Workload Isolation 
</cluster-config/multi-cloud-distribution/>` in the {+service+}
documentation.

Use Cases for Multi-Cloud Deployments
-------------------------------------

The following image shows a multi-region, multi-cloud {+service+}
deployment for regions that support availability zones. Note that this differs 
from a multi-region deployment only in that multiple cloud providers are 
used.

.. figure:: /includes/images/multi-cloud.png
   :figwidth: 750px
   :alt: An image showing a five-node deployment spread across three regions and two cloud providers. Each region contains one zone per node.

A multi-region, multi-cloud deployment may be best for you if you want to:

- Provide an application development team with the option to use any one of the  
  cloud providers for deploying their application stack (including the 
  {+service+} cluster).
- Migrate an application to a new cloud provider. You can add a 
  node to a new cloud provider region, and {+service+} will replicate the 
  data to that new node.
- Ensure faster data recovery if there is a cloud provider failure. 
  If the backup is replicated to a separate cloud, automation will bring up a 
  full app stack on a separate cloud and remount the backup to start serving 
  traffic. 
- Run analytics on a separate cloud. For example, your the data 
  science team wants to use BigQuery for business intelligence but your app 
  stack is in |aws|.
- Deploy your application stack on both |aws| and |azure| and serve read and write 
  traffic from both clouds, whether sharded or not.

.. _arch-center-multi-cloud-rec-summary:

Considerations and Recommendations
----------------------------------

Multi-cloud deployments have the same considerations and 
:ref:`recommendations <arch-center-multi-region-rec-summary>` as other 
multi-region deployments. In addition, the following are specific considerations 
for multi-cloud deployments:

- Cost. Since you are getting charged higher rates for ingress/egress traffic on 
  both cloud providers during replication.
- Complexity of the deployment. There are many integrations you may want when 
  deploying an Atlas database, and many of them are pinned to a single cloud 
  provider. For example, 

  - Encryption key management for KMS integration / encryption at rest.
  - Secrets management for database access.
  - Integration with a SSO federated identity provider.
  - Private networking, because each cloud provider only peers (uses private endpoints) 
    with other regions within that provider.
  - Gather observability data like logs, metrics, and alerts in a centralized 
    place.

Therefore, multi-cloud deployments often require 3rd party integrations to meet 
these needs.

