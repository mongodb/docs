# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/meta/build.txt:3
msgid "MongoDB Documentation Build System"
msgstr ""

#: ../source/meta/build.txt:5
msgid ""
"This document contains more direct instructions for building the MongoDB "
"documentation."
msgstr ""

#: ../source/meta/build.txt:9
msgid "Getting Started"
msgstr ""

#: ../source/meta/build.txt:12
msgid "Install Dependencies"
msgstr ""

#: ../source/meta/build.txt:14
msgid "The MongoDB Documentation project depends on the following tools:"
msgstr ""

#: ../source/meta/build.txt:16
msgid "Python"
msgstr ""

#: ../source/meta/build.txt:17
msgid "Git"
msgstr ""

#: ../source/meta/build.txt:18
msgid "Inkscape (Image generation.)"
msgstr ""

#: ../source/meta/build.txt:19
msgid "LaTeX/PDF LaTeX (typically texlive; for building PDFs)"
msgstr ""

#: ../source/meta/build.txt:20
msgid "`Giza <https://pypi.python.org/pypi/giza>`_"
msgstr ""

#: ../source/meta/build.txt:23
msgid "OS X"
msgstr ""

#: ../source/meta/build.txt:25
msgid ""
"Install Sphinx, Docutils, and their dependencies with ``easy_install`` the "
"following command:"
msgstr ""

#: ../source/meta/build.txt:32
msgid ""
"Feel free to use ``pip`` rather than ``easy_install`` to install python "
"packages."
msgstr ""

#: ../source/meta/build.txt:35
msgid ""
"To generate the images used in the documentation, `download and install "
"Inkscape <http://inkscape.org/download/>`_."
msgstr ""

#: ../source/meta/build.txt:0 ../source/meta/build.txt:0
#: ../source/meta/build.txt:0
msgid "Optional"
msgstr ""

#: ../source/meta/build.txt:40
msgid ""
"To generate PDFs for the full production build, install a TeX distribution "
"(for building the PDF.) If you do not have a LaTeX installation, use `MacTeX"
" <http://www.tug.org/mactex/2011/>`_. This is **only** required to build "
"PDFs."
msgstr ""

#: ../source/meta/build.txt:46
msgid "Arch Linux"
msgstr ""

#: ../source/meta/build.txt:48
msgid ""
"Install packages from the system repositories with the following command:"
msgstr ""

#: ../source/meta/build.txt:54 ../source/meta/build.txt:78
msgid "Then install the following Python packages:"
msgstr ""

#: ../source/meta/build.txt:62 ../source/meta/build.txt:86
msgid ""
"To generate PDFs for the full production build, install the following "
"packages from the system repository:"
msgstr ""

#: ../source/meta/build.txt:70
msgid "Debian/Ubuntu"
msgstr ""

#: ../source/meta/build.txt:72
msgid "Install the required system packages with the following command:"
msgstr ""

#: ../source/meta/build.txt:94
msgid "Setup and Configuration"
msgstr ""

#: ../source/meta/build.txt:96
msgid "Clone the repository:"
msgstr ""

#: ../source/meta/build.txt:103
msgid "Building the Documentation"
msgstr ""

#: ../source/meta/build.txt:105
msgid ""
"The MongoDB documentation build system is entirely accessible via ``make`` "
"targets. For example, to build an HTML version of the documentation issue "
"the following command:"
msgstr ""

#: ../source/meta/build.txt:113
msgid ""
"You can find the build output in ``build/<branch>/html``, where ``<branch>``"
" is the name of the current branch."
msgstr ""

#: ../source/meta/build.txt:116
msgid ""
"In addition to the ``html`` target, the build system provides the following "
"targets:"
msgstr ""

#: ../source/meta/build.txt:123
msgid "``publish``"
msgstr ""

#: ../source/meta/build.txt:120
msgid ""
"Builds and integrates all output for the production build. Build output is "
"in ``build/public/<branch>/``. When you run ``publish`` in the ``master``, "
"the build will generate some output in ``build/public/``."
msgstr ""

#: ../source/meta/build.txt:128
msgid "``push``; ``stage``"
msgstr ""

#: ../source/meta/build.txt:126
msgid ""
"Uploads the production build to the production or staging web servers. "
"Depends on ``publish``. Requires access production or staging environment."
msgstr ""

#: ../source/meta/build.txt:132
msgid "``push-all``; ``stage-all``"
msgstr ""

#: ../source/meta/build.txt:131
msgid ""
"Uploads the entire content of ``build/public/`` to the web servers. Depends "
"on ``publish``. Not used in common practice."
msgstr ""

#: ../source/meta/build.txt:136
msgid "``push-with-delete``; ``stage-with-delete``"
msgstr ""

#: ../source/meta/build.txt:135
msgid ""
"Modifies the action of ``push`` and ``stage`` to remove remote file that "
"don't exist in the local build. Use with caution."
msgstr ""

#: ../source/meta/build.txt:149
msgid ""
"``html``; ``latex``; ``dirhtml``; ``epub``; ``texinfo``; ``man``; ``json``"
msgstr ""

#: ../source/meta/build.txt:139
msgid ""
"These are standard targets derived from the default Sphinx Makefile, with "
"adjusted dependencies. Additionally, for all of these targets you can append"
" ``-nitpick`` to increase Sphinx's verbosity, or ``-clean`` to remove all "
"Sphinx build artifacts."
msgstr ""

#: ../source/meta/build.txt:144
msgid ""
"``latex`` performs several additional post-processing steps on ``.tex`` "
"output generated by Sphinx. This target will also compile PDFs using "
"``pdflatex``."
msgstr ""

#: ../source/meta/build.txt:148
msgid ""
"``html`` and ``man`` also generates a ``.tar.gz`` file of the build outputs "
"for inclusion in the final releases."
msgstr ""
