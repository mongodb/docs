.. _arch-center-is-ai-product-search:

================================================
AI-Powered Retail: Personalization and Accuracy
================================================

.. facet::
   :name: genre
   :values: tutorial

.. meta:: 
   :keywords: Atlas, code example
   :description: Discover how MongoDB and Databricks revolutionize e-commerce search with AI, offering personalized, efficient shopping experiences. 
   
.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Enhance e-commerce with AI-powered search: Deliver personalized,
accurate search experiences using machine learning and Vector Search.

**Use cases:** `Generative AI <https://www.mongodb.com/library/use-cases/artificial-intelligence>`__

**Industries:** `Retail <https://www.mongodb.com/solutions/industries/retail>`__

**Products:** `MongoDB Atlas <https://www.mongodb.com/products/platform/atlas-database>`__, 
`MongoDB Atlas Search <https://www.mongodb.com/atlas/search>`__, 
`MongoDB Atlas Vector Search <https://www.mongodb.com/products/platform/atlas-vector-search>`__, 
`MongoDB Change Streams <https://www.mongodb.com/docs/manual/changeStreams/>`__,
`MongoDB Connector for Spark <https://www.mongodb.com/docs/spark-connector/current/>`__


**Partners:** `Databricks <http://www.databricks.com>`__

Solution Overview
-----------------

In the dynamic realm of e-commerce, staying ahead means embracing the
power of technology. This solution uniquely combines MongoDB's flexible
data handling with Databricks' advanced analytics to transform how
online retail operates. By integrating these technologies, retailers can
leverage AI-augmented search capabilities, offering a more intuitive and
efficient shopping experience.

The heart of this solution lies in its
ability to personalize the shopping experience. Using AI, machine
learning, and vector search, it can understand and anticipate customers'
needs, suggesting products that align with their preferences and search
history, and respond accurately to semantic context. This not only
enhances customer satisfaction but also drives sales by presenting the
most relevant products. 

This solution leverages the advanced
capabilities of MongoDB Atlas Vector Search, integrated seamlessly with
Atlas and Databricks, to redefine the online shopping experience. 

Atlas Vector Search marks a significant evolution from traditional
keyword-based search methods. It utilizes sophisticated algorithms to
understand and process complex search queries, enabling a more nuanced
and relevant product discovery process. This approach ensures that
customers find exactly what they're looking for, even with vague or
partial search terms. 

MongoDB Atlas plays a pivotal role in this
solution by providing a robust and scalable database environment. It
efficiently manages the diverse and voluminous data inherent in
e-commerce platforms, from product catalogs to customer behavior
analytics. This seamless integration makes the foundation of the search
process both sturdy and flexible. 

Databricks complements this setup by
offering powerful analytics and machine learning capabilities. It
processes vast amounts of data in real-time, deriving insights that
continually enhance the search algorithm's effectiveness and accuracy.

By combining these technologies, the solution offers an unparalleled
search experience in the e-commerce domain. It not only meets the
current demands of online shoppers for quick and precise search results
but also anticipates future needs, adapting and evolving continuously.
This results in higher customer satisfaction, increased engagement, and
ultimately, a significant boost in sales and business growth.

This solution can be implemented in other industries, such as:

- Insurance 
- Healthcare 
- Finance

Reference Architectures
-----------------------

Shown here are two different architectures: one for the general solution
and the other one is highlighting the Vector Search part of the
solution. Each part complements the other. 

.. figure:: /includes/images/industry-solutions/retail-ai-product-search-arch1.svg
   :alt: RAG Querying Flow

   Figure 1. Architecture of and AI-enhanced search engine explaining
   the different MongoDB Atlas components and Databricks notebooks and
   workflows used for data cleaning and preparation, product scoring,
   dynamic pricing, and vector search

.. figure:: /includes/images/industry-solutions/retail-ai-product-search-arch2.svg
   :alt: RAG Querying Flow

   Figure 2. Architecture of a vector search solution showcasing how the
   data flows through the different integrated components of MongoDB
   Atlas and Databricks 

Data Model Approach
-------------------

The document data model is inherently flexible because it allows
developers to optimize schema design to support the needs of their
applications. Schema design will determine the performance, scalability,
and reliability of the application. The golden rule of schema design is
the following: Data that is accessed together should be stored together.
One of the most foundational schema designs developers should know is
the Polymorphic Pattern.

The `Polymorphic Pattern
<https://www.mongodb.com/developer/products/mongodb/polymorphic-pattern/>`__
is applied when documents within a collection share a similar, though
not identical, structure. This pattern proves beneficial for querying
information from a single collection efficiently. By organizing
documents in a way that aligns with the intended queries, rather than
distributing the data across multiple tables or collections, we enhance
overall performance. This approach is particularly effective when the
focus is on streamlined access and retrieval of data from a unified
collection.

The polymorphic pattern in this product catalog is applied by designing
a flexible schema where each product document can have varying fields or
related sub-fields (like ``colour1``, ``ageGroup``, ``season``, ``articleType``)
specific to its category or type, while also maintaining common fields
(like ``_id``, ``link``, ``brandName``, ``price``, ``title``) across all products, allowing
for both uniformity and customization in representing different product
types within the same collection.

.. figure:: /includes/images/industry-solutions/retail-ai-product-search-arch3.svg
   :alt: RAG Querying Flow

   Figure 3. Integrating MongoDB and Databricks to deliver AI-augmented search

.. code-block:: json
   :linenos:
   :copyable: true 

   {
      "_id": {
         "$oid": "64934d5a4fb07ede3b0dc0d3"
      },
      "colour1": "NA",
      "ageGroup": "Adults-Women",
      "link": "http://assets.myntassets.com/v1/images/style/properties/41b9db06cab6a17fef365787e7b885ba_images.jpg",
      "brandName": "Baggit",
      "fashionType": "Fashion",
      "price": {
         "$numberDouble": "375.0"
      },
      "atp": {
         "$numberInt": "1"
      },
      "title": "Baggit Women Chotu Taj White Belt",
      "gender": "Women",
      "mfg_brand_name": "Baggit",
      "subCategory": "Belts",
      "masterCategory": "Accessories",
      "score": {
         "$numberDouble": "0.0"
      },
      "season": "Summer",
      "articleType": "Belts",
      "baseColour": "White",
      "id": "33464",
      "discountedPrice": {
         "$numberDouble": "324.0"
      },
      "productDisplayName": "Baggit Women Chotu Taj White Belt",
      "count": {
         "$numberInt": "10"
      },
      "pred_price": {
         "$numberDouble": "0.8616750344336797"
      },
      "price_elasticity": {
         "$numberDouble": "0.0"
      },
      "discount": {
         "$numberDouble": "14.0"
      }
   }


Building the Solution
---------------------

.. procedure::
   :style: normal
   
   .. step:: Get started with Atlas Vector Search

      Visit the `Atlas Vector Search Quick Start guide
      <https://www.mongodb.com/docs/atlas/atlas-vector-search/tutorials/vector-search-quick-start/?tck=ai_as_web>`__
      and create your first index in minutes.

   .. step:: Set up Vector Search

      Follow the steps listed in this tutorial to `model your documents
      for vector search
      <https://www.mongodb.com/developer/products/mongodb/doc-modeling-vector-search/>`__,
      learn `how to index vector embeddings for vector search
      <https://www.mongodb.com/docs/atlas/atlas-search/field-types/knn-vector/>`__
      and `run vector search queries
      <https://www.mongodb.com/docs/atlas/atlas-vector-search/vector-search-stage/>`__.

   .. step:: Pre-requisites and how to deploy

      Follow the `step by step instructions
      <https://github.com/mongodb-industry-solutions/retail-pricing-search-personaliztion/tree/main?tab=readme-ov-file#prerequisites>`__
      to deploy the application locally.

   .. step:: Databricks jobs and workflows

      Follow the Databricks instructions `to create Databricks jobs and
      workflows with JSON
      <https://github.com/mongodb-industry-solutions/retail-pricing-search-personaliztion/tree/main/jobs>`__.

   .. step:: Databricks notebooks
   
      `Catalog indexing, product score, and pricing
      <https://github.com/mongodb-industry-solutions/retail-pricing-search-personaliztion/tree/main/notebooks>`__.

Key Learnings
-------------

- **Data transformation:** Recognizing the importance of transforming raw data
  into a more usable format or structure. In this project, triggers and
  functions were used to push raw data from MongoDB Atlas collections into
  Databricks by leveraging the MongoDB Connector for Spark, so the data
  can be shaped as needed to feed the different machine learning
  algorithms.

- **Real-time data processing:** Understanding the importance and mechanisms
  of processing data in real-time — especially in the context of the
  retail industry where timely insights can drive immediate actions, such
  as product scoring, promotions, and recommendation engines — and of
  semantic search.

Technologies and Products Used
------------------------------

MongoDB Developer Data Platform
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- `Atlas Database <https://www.mongodb.com/atlas/database>`__
- `MongoDB Connector for Spark <https://www.mongodb.com/docs/spark-connector/current/>`__
- `Change Streams <https://www.mongodb.com/docs/manual/changeStreams/>`__
- `Atlas Search <https://www.mongodb.com/atlas/search>`__
- `Atlas Vector Search <https://www.mongodb.com/products/platform/atlas-vector-search>`__
- `Aggregation Pipelines <https://www.mongodb.com/basics/aggregation-pipeline>`__

Partner Technologies
~~~~~~~~~~~~~~~~~~~~~

- `Databricks <https://www.mongodb.com/partners/databricks>`__

Authors
-------

- Francesco Baldissera, MongoDB
- Ashwin Gangadhar, MongoDB
- Vittal Pai, MongoDB
