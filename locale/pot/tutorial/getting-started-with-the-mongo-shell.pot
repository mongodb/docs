# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:3
# 2b4ab186591e4531aa122bc876662cde
msgid "Getting Started with the ``mongo`` Shell"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:7
# bbb7c112bb144c3c813eceb1ed69e86f
msgid "This document provides a basic introduction to using the :program:`mongo` shell. See :doc:`/installation` for instructions on installing MongoDB for your system."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:12
# e0ac31a736774f198f817a61585a1557
msgid "Start the ``mongo`` Shell"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:14
# e8634fc98567400c985789d4d4b1f8b2
msgid "To start the :program:`mongo` shell and connect to your :doc:`MongoDB </reference/program/mongod>` instance running on **localhost** with **default port**:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:17
# 6ffe478455b44ab8a83f39cca723ff67
msgid "Go to your ``<mongodb installation dir>``:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:23
# 21a1a8532ddf44af90ee7fbf10b64dc7
msgid "Type ``./bin/mongo`` to start :program:`mongo`:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:29
# e750904d390d422abb3d410132a49e51
msgid "If you have added the ``<mongodb installation dir>/bin`` to the ``PATH`` environment variable, you can just type ``mongo`` instead of ``./bin/mongo``."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:33
# 41fec3fd8ec84076aaec8cf29d44b7d0
msgid "To display the database you are using, type ``db``:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:39
# 20f3900289fc4c368939ff6654b728da
msgid "The operation should return ``test``, which is the default database. To switch databases, issue the ``use <db>`` helper, as in the following example:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:47
# 18d74cd260094a78a334e8a7154a37e7
msgid "To list the available databases, use the helper ``show dbs``. See also :ref:`mongo-shell-getSiblingDB` to access a different database from the current database without switching your current database context (i.e. ``db.``.)"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:52
# 73e2630fa45f455ca478421fa64ad907
msgid "To start the :program:`mongo` shell with other options, see :ref:`examples of starting up mongo <mongo-usage-examples>` and :doc:`mongo reference </reference/program/mongo>` which provides details on the available options."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:59
# a03d0af5bbdc4cef89e5443bbc5e2bec
msgid "When starting, :program:`mongo` checks the user's :envvar:`HOME` directory for a JavaScript file named :ref:`.mongorc.js <mongo-mongorc-file>`. If found, :program:`mongo` interprets the content of :file:`.mongorc.js` before displaying the prompt for the first time. If you use the shell to evaluate a JavaScript file or expression, either by using the :option:`--eval <mongo --eval>` option on the command line or by specifying :ref:`a .js file to mongo <mongo-shell-file>`, :program:`mongo` will read the ``.mongorc.js`` file *after* the JavaScript has finished processing. You can prevent ``.mongorc.js`` from being loaded by using the :option:`--norc` option."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:73
# 68234199d54942598c613329ad488051
msgid "Executing Queries"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:75
# 9c00bc94e6a641b7904cc94e9b74467a
msgid "From the :program:`mongo` shell, you can use the :doc:`shell methods </reference/method>` to run queries, as in the following example:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:82
# 8cd206c828f340aa931031f9b5a8b954
msgid "The ``db`` refers to the current database."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:84
# 9ebf2deb8b5f49ea92f8aeb7e468daf1
msgid "The ``<collection>`` is the name of the collection to query. See :ref:`mongo-shell-help-collection` to list the available collections."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:87
# 9f81384ea58641f2862c53dc3f5a0460
msgid "If the :program:`mongo` shell does not accept the name of the collection, for instance if the name contains a space, hyphen, or starts with a number, you can use an alternate syntax to refer to the collection, as in the following:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:98
# 7626558c1fa747c9817dfa5b9148dd01
msgid "The :method:`~db.collection.find()` method is the JavaScript method to retrieve documents from ``<collection>``. The :method:`~db.collection.find()` method returns a :term:`cursor` to the results; however, in the :program:`mongo` shell, if the returned cursor is not assigned to a variable using the ``var`` keyword, then the cursor is automatically iterated up to 20 times to print up to the first 20 documents that match the query. The :program:`mongo` shell will prompt ``Type it`` to iterate another 20 times."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:108
# a15aeda7f68e434ea3f1b77ee29a3316
msgid "You can set the ``DBQuery.shellBatchSize`` attribute to change the number of iteration from the default value ``20``, as in the following example which sets it to ``10``:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:116
# 3177f6ddd9c94251936d0866eacd3f4a
msgid "For more information and examples on cursor handling in the :program:`mongo` shell, see :doc:`/core/cursors`."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:119
# 6f9c1ab0ddb743d9abe1718f47709d6e
msgid "See also :ref:`mongo-shell-help-cursor` for list of cursor help in the :program:`mongo` shell."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:122
# ca0c747393e34ebab5211fd3b482f933
msgid "For more documentation of basic MongoDB operations in the :program:`mongo` shell, see:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:125
# a9d44c27df21405b80172c62c72ed7cf
msgid ":doc:`/tutorial/getting-started`"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:126
# 9ac529bbbb2143f9a0bdae16a1f9ce66
msgid ":doc:`/reference/mongo-shell`"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:127
# eb002bb726394249b84c35115753de99
msgid ":doc:`/core/read-operations`"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:128
# 25144daf312b446fa5e61b9555ce0c09
msgid ":doc:`/core/write-operations`"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:129
# 2346bf5579524010b4d152bea6cd3d0b
msgid ":doc:`/administration/indexes`"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:134
# c6a2555c216844ccb9a61c873bc16f84
msgid "Print"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:136
# 59a40a2ec66746cd9bff66a804c229fb
msgid "The :program:`mongo` shell automatically prints the results of the :method:`~db.collection.find()` method if the returned cursor is not assigned to a variable using the ``var`` keyword. To format the result, you can add the ``.pretty()`` to the operation, as in the following:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:146
# 98eaac1712744fe396bcccce3c43cf59
msgid "In addition, you can use the following explicit print methods in the :program:`mongo` shell:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:149
# 357fb0a52d8c43ec97072b07bba21eb0
msgid "``print()`` to print without formatting"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:151
# 19c3e8c051cc4cc98336543991b431b1
msgid "``print(tojson(<obj>))`` to print with :term:`JSON` formatting and equivalent to ``printjson()``"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:154
# 3a2dd4ea6b734d07851c67b28bfc38ef
msgid "``printjson()`` to print with :term:`JSON` formatting and equivalent to ``print(tojson(<obj>))``"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:158
# 835155c62aaa477b8f8a2e9176048958
msgid "Evaluate a JavaScript File"
msgstr ""

#: ../source/includes/fact-execute-javascript-from-shell.rst:1
# 9c53f840ff624c32b3406231de6806cc
msgid "You can execute a ``.js`` file from within the :program:`mongo` shell, using the :method:`load()` function, as in the following:"
msgstr ""

#: ../source/includes/fact-execute-javascript-from-shell.rst:8
# a4b62806b7734732b2c3a8b8096ec598
msgid "This function loads and executes the :file:`myjstest.js` file."
msgstr ""

#: ../source/includes/fact-execute-javascript-from-shell.rst:10
# d1a59a1d938d45d9906e6ab11fcf7e02
msgid "The :method:`load()` method accepts relative and absolute paths. If the current working directory of the :program:`mongo` shell is :file:`/data/db`, and the :file:`myjstest.js` resides in the :file:`/data/db/scripts` directory, then the following calls within the :program:`mongo` shell would be equivalent:"
msgstr ""

#: ../source/includes/fact-execute-javascript-from-shell.rst:21
# dcdc63f4d9194356a70b7840c7548592
msgid "There is no search path for the :method:`load()` function. If the desired script is not in the current working directory or the full specified path, :program:`mongo` will not be able to access the file."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:165
# 7e881079a002437ab5950a936c5898b0
msgid "Use a Custom Prompt"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:167
# 9991a38a36704f05ad4d17cb221a9c1c
msgid "You may modify the content of the prompt by creating the variable ``prompt`` in the shell. The prompt variable can hold strings as well as any arbitrary JavaScript. If ``prompt`` holds a function that returns a string, :program:`mongo` can display dynamic information in each prompt. Consider the following examples:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:0
#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:0
#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:0
# e847bcb966264b9f82e8b6d645443b0c
# 1b12e9f0e32149cba55281ac9ff0d52a
# 19ea9b91be2040bcbdd08bd3deca160d
msgid "Example"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:175
# 53a2b55a89c140d98b16851b3d34ce94
msgid "Create a prompt with the number of operations issued in the current session, define the following variables:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:185
#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:206
#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:226
# c89d20e782334cbfab2ef7f247f8ad9c
# d90db7a9fd67459ca8366996ba086472
# 7e98a62181b84436b1beca1e509ceacd
msgid "The prompt would then resemble the following:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:195
# 1009989e948e4d8d8272222310c70201
msgid "To create a :program:`mongo` shell prompt in the form of ``<database>@<hostname>$`` define the following variables:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:216
# 4a8619a77bfb4259b5f2409a0081ca8f
msgid "To create a :program:`mongo` shell prompt that contains the system up time *and* the number of documents in the current database, define the following prompt variable:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:234
# b57e0a3e951b4aafaf177c284fca8553
msgid "Use an External Editor in the ``mongo`` Shell"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:238
# 5b947c6073134caba0b6e9964be7bf05
msgid "In the :program:`mongo` shell you can use the ``edit`` operation to edit a function or variable in an external editor. The ``edit`` operation uses the value of your environments ``EDITOR`` variable."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:242
# 35ec7ca242fb440bb180829c7ed1b6b5
msgid "At your system prompt you can define the ``EDITOR`` variable and start :program:`mongo` with the following two operations:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:250
# 4433287c96ae4d518cbb91111173ff01
msgid "Then, consider the following example shell session:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:272
# 5aafdf11180e4f9a85064558e4907e7f
msgid "As :program:`mongo` shell interprets code edited in an external editor, it may modify code in functions, depending on the JavaScript compiler. For :program:`mongo` may convert ``1+1`` to ``2`` or remove comments. The actual changes affect only the appearance of the code and will vary based on the version of JavaScript used but will not affect the semantics of the code."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:282
# b8d03b6ad28e4db49e0d9539cf4d577e
msgid "Exit the Shell"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:284
# ecaf626da8ff4921b57b5c8f286f8bae
msgid "To exit the shell, type ``quit()`` or use the ``<Ctrl-c>`` shortcut."
msgstr ""

