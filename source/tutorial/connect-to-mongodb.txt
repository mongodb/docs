============================
Connect to a MongoDB Process
============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Overview
--------

To connect to a MongoDB, retrieve the hostname and port information
from |mms| and then use a MongoDB client, such as {+mongosh+} or a
:manual:`MongoDB driver </applications/drivers>`, to connect. To
connect to a :term:`cluster <sharded cluster>`, retrieve the hostname
and port for the :program:`mongos` process. To connect to a
:term:`replica set` or :term:`standalone process <standalone>`, retrieve 
the hostname and port for the :program:`mongod` processes.

Firewall Rules
--------------

Firewall rules and user authentication affect your access to MongoDB.
You must have access to the server and port of the MongoDB process.
For information on firewalls on servers running MongoDB, see
the firewall information in the :manual:`Network Security
</core/security-network>` document in the MongoDB manual.

If your MongoDB instance runs on Amazon Web Services (AWS), then the
security group associated with the AWS servers also affects access. AWS
security groups control inbound and outbound traffic to their
associated servers.

Procedures
----------

You can retrieve a shell command for connecting to your MongoDB
instance, or you can retrieve the host and port number of a specific
MongoDB process and create your own command for connecting using either
shell or
:manual:`MongoDB driver </applications/drivers>`.

Get a Shell Command to Connect to a MongoDB Instance
++++++++++++++++++++++++++++++++++++++++++++++++++++

.. include:: /includes/steps/view-connection-information-for-deployment.rst

.. _get-host-and-port:

Get the Host and Port for a MongoDB Process
+++++++++++++++++++++++++++++++++++++++++++

.. include:: /includes/steps/view-hostname-and-port-for-deployment.rst

Connect to a Deployment Using {+mongosh+}
++++++++++++++++++++++++++++++++++++++++++++++++++++++

Get the host and port using the :ref:`previous procedure
<get-host-and-port>`. From a shell, run {+mongosh+} and specify the
host and port. For example:

.. code-block:: sh

   mongosh --username <user> --password <pass> --host <host> --port <port>

.. _connect-via-driver:

Connect to a Deployment Using a MongoDB Driver
++++++++++++++++++++++++++++++++++++++++++++++

Get the host and port using the :ref:`above procedure <get-host-and-port>`.
See your :manual:`driver's instructions </applications/drivers>` for
creating a :manual:`connection string </reference/connection-string>` that
specifies the hostname and port. 

For sharded clusters, you specify the hostname and port of the
:program:`mongos` instance. For a replica set, you specify a seed list of
all hosts in the replica set. Your driver will automatically connect to
the :term:`primary`. For example:

.. code-block:: javascript

   mongodb://[<username>:<password>@]hostname0<:port>[,hostname1:<port1>][,hostname2:<port2>][...][,hostnameN:<portN>]

.. seealso:: :doc:`/data-explorer`

