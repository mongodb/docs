# This file borrows content from /includes/options-shared.yaml, which uses
# {{program}} to refer to the tool.
#
program: mongoexport
name: help
inherit:
  name: help
  program: _shared
  file: options-shared.yaml
---
program: mongoexport
name: verbose
inherit:
  name: verbose
  program: _shared
  file: options-shared.yaml
---
program: mongoexport
name: quiet
inherit:
  name: quiet
  program: _shared
  file: options-shared.yaml
---
program: mongoexport
name: version
inherit:
  name: version
  program: _shared
  file: options-shared.yaml
---
program: mongoexport
name: host
inherit:
  name: host
  program: _shared
  file: options-shared.yaml
---
program: mongoexport
name: port
inherit:
  name: port
  program: _shared
  file: options-shared.yaml
---
program: mongoexport
name: ipv6
inherit:
  name: ipv6
  program: _shared
  file: options-shared.yaml
---
program: mongoexport
name: ssl
inherit:
  name: ssl
  program: _shared
  file: options-shared.yaml
---
program: mongoexport
name: sslCAFile
inherit:
  name: sslCAFile
  program: _shared
  file: options-shared.yaml
---
program: mongoexport
name: sslPEMKeyFile
inherit:
  name: sslPEMKeyFile
  program: _shared
  file: options-shared.yaml
---
program: mongoexport
name: sslPEMKeyPassword
inherit:
  name: sslPEMKeyPassword
  program: _shared
  file: options-shared.yaml
---
program: mongoexport
name: sslCRLFile
inherit:
  name: sslCRLFile
  program: _shared
  file: options-shared.yaml
---
program: mongoexport
name: sslAllowInvalidCertificates
inherit:
  name: sslAllowInvalidCertificates
  program: _shared
  file: options-shared.yaml
---
program: mongoexport
name: sslAllowInvalidHostnames
inherit:
  name: sslAllowInvalidHostnames
  program: _shared
  file: options-shared.yaml
---
program: mongoexport
name: sslFIPSMode
inherit:
  name: sslFIPSMode
  program: _shared
  file: options-shared.yaml
---
program: mongoexport
name: username
inherit:
  name: username
  program: _shared
  file: options-shared.yaml
---
program: mongoexport
name: password
inherit:
  name: password
  program: _shared
  file: options-shared.yaml
---
program: mongoexport
name: authenticationDatabase
inherit:
  name: authenticationDatabase
  program: _shared
  file: options-shared.yaml
description: |
  If you do not specify an authentication database, {{program}}
  assumes that the database specified to export holds the user's credentials.
---
program: mongoexport
name: authenticationMechanism
inherit:
  name: authenticationMechanism
  program: _shared
  file: options-shared.yaml
---
program: mongoexport
name: gssapiServiceName
inherit:
  name: gssapiServiceName
  program: _shared
  file: options-shared.yaml
---
program: mongoexport
name: gssapiHostName
inherit:
  name: gssapiHostName
  program: _shared
  file: options-shared.yaml
---
program: mongoexport
name: db
inherit:
  name: db
  program: _shared
  file: options-shared.yaml
---
program: mongoexport
name: collection
aliases: -c
directive: option
args: <collection>
description: |
  Specifies the collection to export.
optional: true
---
program: mongoexport
name: fields
aliases: -f
directive: option
args: <field1[,field2]>
description: |
  Specifies a field or fields to *include* in the export. Use a comma
  separated list of fields to specify multiple fields.

  If any of your field names include white space, use
  quotation marks to enclose the field list. For example, if you wished
  to export two fields, ``phone`` and ``user number``, you would
  specify ``--fields "phone,user number"``.

  For :option:`csv <mongoexport --type>` output formats,
  :binary:`~bin.mongoexport` includes only the specified field(s), and the
  specified field(s) can be a field within a sub-document.

  For :term:`JSON` output formats, :binary:`~bin.mongoexport` includes
  only the specified field(s) **and** the ``_id`` field, and if the
  specified field(s) is a field within a sub-document, the
  :binary:`~bin.mongoexport` includes the sub-document with all
  its fields, not just the specified field within the document.
  
  See: :ref:`mongoexport-fields-example` for sample usage.
optional: true
---
program: mongoexport
name: fieldFile
directive: option
args: <filename>
description: |
  An alternative to :option:`--fields <mongoexport --fields>`. The
  {{role}} option allows you to
  specify in a file the field or fields to *include* in the export and is
  **only valid** with the :option:`--type <mongoexport --type>` option
  with value ``csv``. The
  file must have only one field per line, and the line(s) must end with
  the LF character (``0x0A``).

  :binary:`~bin.mongoexport` includes only the specified field(s). The
  specified field(s) can be a field within a sub-document.
  
  See :ref:`mongoexport-fieldFile-example` for sample usage.
optional: true
---
program: mongoexport
name: query
aliases: -q
directive: option
args: <JSON>
description: |
  Provides a :term:`JSON document` as a query that optionally limits
  the documents returned in the export. Specify JSON in :doc:`strict
  format </reference/mongodb-extended-json>`.

  .. include:: /includes/fact-quote-command-line-query.rst

  For example, given a collection named ``records`` in the database
  ``test`` with the following documents:

  .. code:: json

     { "_id" : ObjectId("51f0188846a64a1ed98fde7c"), "a" : 1 }
     { "_id" : ObjectId("520e61b0c6646578e3661b59"), "a" : 1, "b" : 2 }
     { "_id" : ObjectId("520e642bb7fa4ea22d6b1871"), "a" : 2, "b" : 3, "c" : 5 }
     { "_id" : ObjectId("520e6431b7fa4ea22d6b1872"), "a" : 3, "b" : 3, "c" : 6 }
     { "_id" : ObjectId("520e6445b7fa4ea22d6b1873"), "a" : 5, "b" : 6, "c" : 8 }

  The following :binary:`~bin.mongoexport` uses the :option:`-q` option to
  export only the documents with the field ``a`` greater than or equal to
  (:query:`$gte`) to ``3``:

  .. code:: bash

     mongoexport -d test -c records -q '{ a: { $gte: 3 } }' --out exportdir/myRecords.json

  The resulting file contains the following documents:

  .. code:: json

     { "_id" : { "$oid" : "520e6431b7fa4ea22d6b1872" }, "a" : 3, "b" : 3, "c" : 6 }
     { "_id" : { "$oid" : "520e6445b7fa4ea22d6b1873" }, "a" : 5, "b" : 6, "c" : 8 }

  You can sort the results with the :option:`--sort` option to
  :binary:`~bin.mongoexport`.
optional: true
---
program: mongoexport
name: type
directive: option
args: <string>
description: |

  .. versionadded:: 3.0

  Specifies the file type to export. Specify ``csv`` for :term:`CSV`
  format or ``json`` for :term:`JSON` format.

  If you specify ``csv``, then you must also use either
  the :option:`--fields` or the :option:`--fieldFile` option to
  declare the fields to export from the collection.
optional: true
default: json
---
program: mongoexport
name: out
aliases: -o
directive: option
args: <file>
description: |
  Specifies a file to write the export to. If you do not specify a file
  name, the :binary:`~bin.mongoexport` writes data to standard output
  (e.g. ``stdout``).
optional: true
---
program: mongoexport
name: jsonArray
directive: option
args: null
description: |
  Modifies the output of :binary:`~bin.mongoexport` to write the
  entire contents of the export as a single :term:`JSON` array. By
  default :binary:`~bin.mongoexport` writes data using one JSON document
  for every MongoDB document.
optional: true
---
program: mongoexport
name: slaveOk
aliases: -k
directive: option
args: null
description: |
  .. deprecated:: 3.2

  Sets the :ref:`replica-set-read-preference` to :readmode:`nearest`, 
  allowing :binary:`~bin.mongoexport` to read data from secondary 
  :term:`replica set` members.
  
  :option:`--readPreference` replaces ``--slaveOk`` in MongoDB 3.2. You cannot 
  specify ``--slaveOk`` when :option:`--readPreference` is specified.
  
  .. include:: /includes/warning-read-preference-mongos.rst
optional: true
---
program: mongoexport
name: forceTableScan
directive: option
args: null
description: |
  Forces :binary:`~bin.mongoexport` to scan the data store directly instead
  of traversing the ``_id`` field index. Use {{role}} to skip the
  index. Typically there are two cases where this behavior is
  preferable to the default:

  1. If you have key sizes over 800 bytes that would not be present
     in the ``_id`` index.

  2. Your database uses a custom ``_id`` field.

  When you run with {{role}}, :binary:`~bin.mongoexport` may return a
  document more than once if a write operation interleaves with the
  operation to cause the document to move.

  .. warning:: Use {{role}} with extreme caution
     and consideration.
optional: true
---
program: mongoexport
name: skip
directive: option
args: <number>
description: |
  Use {{role}} to control where :binary:`~bin.mongoexport` begins
  exporting documents. See :method:`~cursor.skip()` for information about
  the underlying operation.
optional: true
---
program: mongoexport
name: limit
directive: option
args: <number>
description: |
  Specifies a maximum number of documents to include in the
  export. See :method:`~cursor.limit()` for information about
  the underlying operation.
optional: true
---
program: mongoexport
name: sort
directive: option
args: <JSON>
description: |
  Specifies an ordering for exported results. If an index does
  **not** exist that can support the sort operation, the results must
  be *less than* 32 megabytes.

  Use {{role}} conjunction with :option:`--skip` and
  :option:`--limit` to limit number of exported documents.

  .. code-block:: sh

     mongoexport -d test -c records --sort '{a: 1}' --limit 100 --out export.0.json
     mongoexport -d test -c records --sort '{a: 1}' --limit 100 --skip 100 --out export.1.json
     mongoexport -d test -c records --sort '{a: 1}' --limit 100 --skip 200 --out export.2.json

  See :method:`~cursor.sort()` for information about the underlying
  operation.
optional: true
---
program: mongoexport
name: pretty
inherit:
  name: pretty
  program: _shared
  file: options-shared.yaml
---
program: mongoexport
directive: option
optional: true
name: readPreference
args: <string>
description: |
  Specify the :ref:`read preference<replica-set-read-preference>` for 
  {{program}}. 
  
  See :ref:`replica-set-read-preference-modes`.
  
  {{program}} defaults to :readmode:`primary` 
  :ref:`read preference <replica-set-read-preference>` when connected to a 
  :binary:`~bin.mongos` or a :term:`replica set`.
  
  Otherwise, {{program}} defaults to :readmode:`nearest`.
  
  .. include:: /includes/warning-read-preference-mongos.rst
---
program: mongoexport
directive: option
optional: true
name: noHeaderLine
args: null
description: |
  .. versionadded:: 3.4
  
  By default, {{program}} includes the exported field names as the first
  line in a CSV output. {{role}} directs {{program}} to export the
  data without the list of field names.
  {{role}} is **only valid** with the
  :option:`--type <mongoexport --type>` option with value ``csv``.
  
  See :ref:`mongoexport-noHeaderLine-example` for sample usage.
...
