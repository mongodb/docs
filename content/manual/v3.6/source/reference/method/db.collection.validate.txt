========================
db.collection.validate()
========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Description
-----------

.. method:: db.collection.validate(true)

   Validates a collection. The method scans a collection data and
   indexes for correctness and returns the result. For details of the
   output, see :ref:`validate-output`.

   The :method:`db.collection.validate()` method has the following syntax:

   .. code-block:: javascript

      db.collection.validate( { 
         full: <boolean>         // Optional
      } )

   To specify the ``full`` option, you can also use:

   .. code-block:: javascript

      db.collection.validate( <boolean> ) // full option

   The :method:`db.collection.validate()` method can take the
   following optional document parameter with the fields:

   .. list-table::
      :header-rows: 1
      :widths: 10 10 50
   
      * - Field
        - Type
        - Description

      * - ``full``
        - boolean

        - *Optional*. A flag that determines whether the command
          performs a slower but more thorough check or a faster but less thorough check.

          - If ``true``, performs a more thorough check.

          - If ``false``, omits some checks for a fater but less
            thorough check.

          The default is ``false``.

          .. include:: /includes/fact-validate-wiredtiger-full-option.rst

   The :method:`db.collection.validate()` method is a wrapper
   around the :dbcommand:`validate` :term:`database
   command`.

Behavior
--------

The :method:`db.collection.validate()` method is potentially resource
intensive and may impact the performance of your MongoDB instance.

The :method:`db.collection.validate()` method obtains an exclusive lock
on the collection. This will block all reads and writes on the
collection until the operation finishes. When run on a secondary, the
operation can block all other operations on that secondary until it
finishes.

The :method:`db.collection.validate()` method can be slow, particularly
on larger data sets.

.. note::

   Due to the manner in which :dbcommand:`validate` scans data
   structures, even a full collection validation cannot detect all
   forms of corruption on MMAPv1 storage engine data files.

Examples
--------

- To validate a collection ``myCollection`` using the default settings
  (i.e. ``full: false`` )

  .. code-block:: javascript

     db.myCollection.validate()

- To peform a full validation of a collection ``myCollection``

  .. code-block:: javascript

    db.myCollection.validate( { full: true } )

    db.myCollection.validate(true)

For details of the output, see :ref:`validate-output`.
