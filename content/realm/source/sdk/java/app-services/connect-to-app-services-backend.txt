.. meta::
   :robots: noindex, nosnippet

.. _java-init-appclient:
.. _java-connect-to-mongodb-realm-backend-app:

===================================================
Connect to an Atlas App Services backend - Java SDK
===================================================

.. meta::
  :description: Connect your Atlas Device SDK for Java client app to the Atlas App Services backend.
  :keywords: code example

.. facet::
  :name: genre
  :values: tutorial

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

The App client is the interface for the App Services
backend. It provides access to the :ref:`authentication functionality
<java-authenticate>`, :ref:`functions <java-call-a-function>`, and
:ref:`sync management <java-sync-data>`.

.. include:: /includes/java-initialize-realm.rst

.. _java-access-the-app-client:

Access the App Client
---------------------

Pass the App ID for your App, which you can :ref:`find in the Realm UI
<find-your-app-id>`.
  
.. tabs-realm-languages::

   .. tab::
      :tabid: java

      .. literalinclude:: /examples/generated/java/sync/InitializeTest.snippet.access-app-client.java
         :language: java
         :copyable: false
   
   .. tab::
      :tabid: kotlin

      .. literalinclude:: /examples/generated/java/sync/InitializeTest.snippet.access-app-client.kt
         :language: kotlin
         :copyable: false

.. important:: Initialize the App before Creating an Instance

   You must initialize your App connection with
   ``Realm.init()`` before creating any instance of an ``App``.

.. _java-app-client-configuration:

Configuration
-------------

For most use cases, you only need your application's App ID to connect
to App Services. For more granular control of the details of your app connection,
such as custom timeouts for connections, codecs used for MongoDB Data Access,
and keys for local encryption, you can optionally use the ``AppConfiguration``
Builder to control details of your ``App``:

.. tabs-realm-languages::

   .. tab::
      :tabid: java

      .. literalinclude:: /examples/generated/java/sync/InitializeTest.snippet.advanced-access-app-client.java
         :language: java
         :copyable: false
   
   .. tab::
      :tabid: kotlin

      .. literalinclude:: /examples/generated/java/sync/InitializeTest.snippet.advanced-access-app-client.kt
         :language: kotlin
         :copyable: false

You can create multiple App client instances to connect to multiple
Apps. All App client instances that share the same App ID use the same 
underlying connection.

.. important:: Changing an App Config After Initializing the App

   .. versionchanged:: v10.18.0
      ``urlPrefix`` is not cached in the App configuration

   When you initialize the App client, the configuration is cached internally. 
   Attempting to close and then re-open an App with a changed configuration
   within the same process has no effect. The client continues to use the 
   cached configuration. 

   In Java SDK version 10.18.0 and later, the :ref:`urlPrefix <urlPrefix>`
   is *no longer* cached in the App configuration. This means that you can
   change the ``urlPrefix``, and the App client will use the updated
   configuration. In earlier SDK versions, changes to the ``urlPrefix`` in a 
   cached App configuration have no effect.
