{
  "drivers": {
    "csharp": {
      "name": "C#/.NET Driver",
      "path": "code-example-tests/csharp/driver",
      "watch_paths": ["code-example-tests/csharp/driver/**"],
      "setup": {
        "action": "actions/setup-dotnet@v4",
        "version": "9.0",
        "cache": true,
        "cache_dependency_path": "**/packages.lock.json"
      },
      "commands": {
        "install_deps": "dotnet restore",
        "format_check": "dotnet format --verify-no-changes",
        "test": "dotnet test Tests/Tests.csproj"
      },
      "environment": {
        "SOLUTION_ROOT": "$(pwd)"
      }
    },
    "go": {
      "name": "Go Driver",
      "path": "code-example-tests/go/driver",
      "watch_paths": ["code-example-tests/go/driver/**"],
      "setup": {
        "action": "actions/setup-go@v5",
        "version_file": "go.mod",
        "cache": true
      },
      "commands": {
        "install_deps": "go mod download",
        "format_check": "if [ \"$(gofmt -l ./examples/)\" ]; then echo \"Files not formatted:\"; gofmt -l ./examples/; exit 1; fi",
        "test": "cd tests && go test -v -p 1 ./..."
      },
      "environment": {}
    },
    "java": {
      "name": "Java Driver - Sync",
      "path": "code-example-tests/java/driver-sync",
      "watch_paths": ["code-example-tests/java/driver-sync/**"],
      "setup": {
        "action": "actions/setup-java@v4",
        "version": "17",
        "distribution": "zulu",
        "cache": "maven"
      },
      "commands": {
        "install_deps": "mvn dependency:resolve",
        "format_check": "mvn spotless:check",
        "test": "mvn test"
      },
      "environment": {}
    },
    "javascript": {
      "name": "Node.js Driver",
      "path": "code-example-tests/javascript/driver",
      "watch_paths": ["code-example-tests/javascript/driver/**"],
      "setup": {
        "action": "actions/setup-node@v4",
        "version": "22",
        "cache": "npm",
        "cache_dependency_path": "package-lock.json"
      },
      "commands": {
        "install_deps": "npm install",
        "format_check": "npx prettier --check examples/",
        "test": "npm test"
      },
      "environment": {
        "TZ": "UTC"
      }
    },
    "python": {
      "name": "PyMongo Driver",
      "path": "code-example-tests/python/pymongo",
      "watch_paths": ["code-example-tests/python/pymongo/**"],
      "setup": {
        "action": "actions/setup-python@v5",
        "version": "3.13",
        "cache": "pip",
        "cache_dependency_path": "requirements.txt"
      },
      "commands": {
        "install_deps": "pip install -r requirements.txt && pip install pylint black",
        "format_check": "black --check ./examples/ && pylint ./examples/",
        "test": "python -m unittest discover tests_package"
      },
      "environment": {}
    },
    "mongosh": {
      "name": "MongoDB Shell",
      "path": "code-example-tests/command-line/mongosh",
      "watch_paths": ["code-example-tests/command-line/mongosh/**"],
      "setup": {
        "action": "actions/setup-node@v4",
        "version": "22",
        "cache": "npm",
        "cache_dependency_path": "package-lock.json"
      },
      "commands": {
        "install_deps": "npm install",
        "format_check": "echo 'No formatting check for mongosh'",
        "test": "npm test"
      },
      "environment": {}
    }
  },
  "mongodb": {
    "port": "27017",
    "deployment_name": "myLocalRs1",
    "connection_string_template": "mongodb://localhost:{{port}}/?directConnection=true",
    "sample_data_url": "https://atlas-education.s3.amazonaws.com/sampledata.archive"
  },
  "tools": {
    "atlas_cli": {
      "version": "1.42.2",
      "url": "https://fastdl.mongodb.org/mongocli/mongodb-atlas-cli_1.42.2_linux_x86_64.deb"
    },
    "database_tools": {
      "version": "100.13.0",
      "url": "https://fastdl.mongodb.org/tools/db/mongodb-database-tools-ubuntu2204-x86_64-100.13.0.deb"
    }
  }
}
