stepnum: 1
ref: fts-partial-match-tutorial-step1
inherit:
  file: steps-fts-tutorial-run-query.yaml
  ref: connect-to-database-deployment-fts
---
stepnum: 2
ref: fts-partial-match-tutorial-step2
inherit:
  file: steps-fts-tutorial-run-query.yaml
  ref: use-sample-mflix
---
stepnum: 3
ref: fts-partial-match-tutorial-step3
title: "Run the following |fts| query using the operator for 
       which you created the index."
content: |
  The following query uses the operator to query the ``plot`` field of 
  the ``sample_mflix.movies`` collection. The query includes a:
  
  - :pipeline:`$limit` stage to limit the output to 5 results
  - :pipeline:`$project` stage to exclude all fields except ``title`` 
    and ``plot``

  .. tabs:: 

     .. tab:: autocomplete
        :tabid: autocomplete 

        .. include:: /includes/extracts/fts-partial-match-autocomplete-query-desc.rst

        .. code-block:: json 

           db.movies.aggregate([
             {
               "$search": {
                 "autocomplete": {
                   "path": "plot",
                   "query": "new purchase",
                   "tokenOrder": "any",
                   "fuzzy": {
                     "maxEdits": 2,
                     "prefixLength": 1,
                     "maxExpansions": 256
                   }
                 },
                 "highlight": { 
                    "path": "plot"
                 }
               }
             },
             {
               "$limit": 5
             },
             {
               "$project": {
                 "_id": 0,
                 "title": 1,
                 "plot": 1,
                 "highlights": { "$meta": "searchHighlights" }
               }
             }
           ])

     .. tab:: phrase
        :tabid: phrase 

        .. include:: /includes/extracts/fts-partial-match-phrase-query-desc.rst 

        .. code-block:: json 

           db.movies.aggregate([
             {
               "$search": {
                 "phrase": {
                   "path": "plot",
                   "query": "new purpose",
                   "slop": 5
                 },
                 "highlight": {
                   "path": "plot"
                 }
               }
             },
             { 
               "$limit": 5 
             },
             {
               "$project": {
                 "_id": 0,
                 "plot": 1,
                 "title": 1,
                 "highlights": { "$meta": "searchHighlights" }
               }
             }
           ])

     .. tab:: regex
        :tabid: regex 

        .. include:: /includes/extracts/fts-partial-match-regex-query-desc.rst

        .. code-block:: json 

           db.movies.aggregate([
             {
               "$search": {
                 "regex": {
                   "path": "plot",
                   "query": "(.*)new(.*) pur(.*)",
                 }
               }
             },
             {
               $limit: 5
             },
             {
               $project: {
                 "_id": 0,
                 "plot": 1,
                 "title": 1
               }
             }
           ])

     .. tab:: wildcard
        :tabid: wildcard 

        .. include:: /includes/extracts/fts-partial-match-wildcard-query-desc.rst

        .. code-block:: json 

           db.movies.aggregate([
             {
               "$search": {
                 "wildcard": {
                   "path": "plot",
                   "query": "*new* pur*"
                 }
               }
             },
             {
               "$limit": 5
             },
             {
               "$project": {
                 "_id": 0,
                 "plot": 1
               }
             }
           ])

  The preceding query returns the following results:

  .. tabs:: 
     :hidden: true

     .. tab:: autocomplete
        :tabid: autocomplete 

        .. literalinclude:: /includes/fts-tutorial/partial-match/autocomplete-query-shell-compass-results.js
           :language: js
           :linenos:

     .. tab:: phrase
        :tabid: phrase 

        .. literalinclude:: /includes/fts-tutorial/partial-match/phrase-query-shell-compass-results.js
           :language: js
           :linenos:

     .. tab:: regex
        :tabid: regex 

        .. literalinclude:: /includes/fts-tutorial/partial-match/regex-query-shell-compass-results.js
           :language: js
           :linenos:

     .. tab:: wildcard
        :tabid: wildcard 

        .. literalinclude:: /includes/fts-tutorial/partial-match/wildcard-query-shell-compass-results.js
           :language: js
           :linenos:
