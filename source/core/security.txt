.. **BUILD WARNINGS**:: I could not find the reason multiple
   of the build warning in this file.

========
Security
========

.. default-domain:: mongodb

Overview
--------

.. only:: cloud

   |MMS| provides encryption, authentication and authorization to
   ensure the security of your |MMS| agents and MongoDB deployments.

.. only:: classic

   |MMS| provides configurable encryption, authentication, and
   authorization to ensure the security of your |MMS| agents and
   MongoDB deployments. |MMS| supports :ref:`security-ssl`,
   :ref:`security-mongodb-cr`, :ref:`security-ldap`, and
   :ref:`security-kerberos`.

.. only:: onprem

   |MMS| provides configurable encryption, authentication, and
   authorization to ensure the security of your |MMS| agents, |MMS|
   deployments, and MongoDB deployments. |MMS| supports
   :ref:`security-ssl`, :ref:`security-mongodb-cr`,
   :ref:`security-ldap`, and :ref:`security-kerberos`.

Encryption
~~~~~~~~~~

.. only:: onprem or classic

   |MMS| uses :ref:`security-ssl` for encrypting communications for the
   following Monitoring Agent and Backup Agent connections:

   - Connections to MongoDB instances

   - Connections to |MMS| servers

   .. 1.6/Ops Manager 2.8 -- change below per MMS-2027, which will
      enable SSL for backing dbs:

.. only:: onprem

   MMS does **not** support SSL for its communications with the backing
   MongoDB instances that host the :ref:`MMS Application Database
   <mms-application-database>` and :ref:`MMS Backup Blockstore Database
   <mms-backup-blockstore-database>`.

.. only:: cloud

   |MMS| uses :ref:`security-ssl` for encrypting communications for the
   Monitoring Agent and Backup Agent connections to |MMS| servers.

For information regarding |MMS| and SSL, see :ref:`security-ssl`.

.. _security-access-control-authentication:

Access Control and Authentication
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB uses Role-Based Access Control (RBAC) to determine access to a
MongoDB system. When run with access control, MongoDB requires users to
authenticate themselves to determine their access.

.. only:: onprem

   If the Backing instance runs with access control, |mms| Application
   Server must authenticate to its Backing instances as a user with
   :ref:`appropriate access <server-mongodb-user-access>`.

.. only:: cloud

   If you :ref:`enable authentication <enable-authentication>` for your
   deployments, the MMS agents authenticate to the deployments as MongoDB
   users with appropriate privileges.

.. only:: onprem or classic

   If a MongoDB deployment runs with access control, |MMS| agents must
   authenticate to the deployment as a MongoDB user with appropriate
   MongoDB user roles [#roles-disambiguation]_.

   - :doc:`/reference/required-access-monitoring-agent`
   - :doc:`/reference/required-access-backup-agent`

   For an overview on authenticating with the supported mechanisms, see
   :ref:`security-mongodb-cr`, :ref:`security-ldap`, and
   :ref:`security-kerberos`.

   .. [#roles-disambiguation] MongoDB user roles are separate from
      |MMS| :doc:`user roles </reference/user-roles>`.


.. _security-ssl:

SSL
---

SSL encrypts the connections made by Monitoring Agents and Backup
Agents to both MongoDB instances and to |MMS| servers. SSL
encryption ensures communications are readable only by the intended
parties.

.. 1.6/Ops Manager 2.8 -- change below per MMS-2027, which will
   enable SSL for backing dbs:

.. only:: onprem

   MMS does **not** support SSL for its communications with the :doc:`backing
   MongoDB instances </tutorial/prepare-backing-mongodb-instances>` that host
   the :ref:`MMS Application Database <mms-application-database>` and
   :ref:`MMS Backup Blockstore Database <mms-backup-blockstore-database>`.

   Agents can use SSL when communicating with the |MMS| servers and
   when communicating with the MongoDB deployment.

.. only:: cloud

   Agents always use SSL when communicating with the |MMS| servers. SSL
   encryption ensures communications are readable only by the intended
   parties.

.. only:: onprem

   Connections to |MMS| Servers
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   To ensure that the agents use SSL when connecting to the |MMS|
   servers, use an HTTPS proxy in front of |MMS|.

   You can optionally configure a Jetty instance to use HTTPS for
   connections between the |mms| application and agents. To do so, see
   :doc:`/tutorial/configure-jetty-https`.

.. only:: onprem or classic

   Connections to MongoDB Deployments
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   If the MongoDB deployment uses SSL, you must configure the |mms| agents
   as well as specify the host's :guilabel:`Use SSL` settings.

   .. include:: /includes/ref-ssl-configuration.rst

.. _security-mongodb-cr:

MONGODB-CR
----------

.. only:: classic or cloud

   |MMS| can use the MongoDB Challenge-Response, i.e. ``MONGODB-CR``,
   authentication mechanism to authenticate to a MongoDB deployment.
   For more information, see the ``MONGODB-CR`` section on the
   :manual:`Authentication page </core/authentication>` in the MongoDB manual.

.. only:: onprem

   Application Configuration Settings
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   The |mms| Application can use MongoDB Challenge-Response, i.e.
   ``MONGODB-CR``, to authenticate to the backing MongoDB instances.
   See :setting:`mongo.mongoUri` and
   :ref:`on-prem-authentication-configuration` for more information.

.. only:: classic or onprem

   Agent Configuration
   ~~~~~~~~~~~~~~~~~~~

   If your MongoDB deployment uses ``MONGODB-CR`` for authentication, you
   must create a MongoDB user for the |mms| agents as well as specify the
   host's authentication settings.

   .. include:: /includes/ref-mongodb-cr-configuration.rst

.. only:: classic or onprem

   .. _security-ldap:

   LDAP
   ----

   .. only:: classic

      |mms| agents can use the LDAP authentication mechanism to
      authenticate to the MongoDB deployment.

   .. only:: onprem

      |mms| agents can use the LDAP authentication mechanism to connect
      to the MongoDB deployment. Additionally, and independently, the
      |mms| Application Server can use LDAP authentication to its
      Backing MongoDB instances.

   .. only:: onprem

      Application Configuration Settings
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      To configure LDAP authentication between the |mms| application
      and the backing MongoDB instances, see
      :doc:`/tutorial/configure-for-ldap-authentication`,
      :setting:`mongo.mongoUri`, :ref:`ldap-settings`, and
      :ref:`on-prem-authentication-configuration`.

   Agent Configuration
   ~~~~~~~~~~~~~~~~~~~

   If your MongoDB deployment uses LDAP for authentication, you must
   create a MongoDB user for the |mms| agents as well as specify the
   host's authentication settings.

   .. include:: /includes/ref-ldap-configuration.rst

.. only:: classic or onprem

   .. _security-kerberos:

   Kerberos
   --------

   .. only:: onprem

      Application Configuration Settings
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      To enable Kerberos authentication between the MMS application and
      its :doc:`backing database
      </tutorial/prepare-backing-mongodb-instances>`, see
      :ref:`configuration-kerberos-settings`, :setting:`mongo.mongoUri`,
      and :ref:`on-prem-authentication-configuration`.

   Agent Configuration
   ~~~~~~~~~~~~~~~~~~~

   If your MongoDB deployment uses Kerberos for authentication, you must
   create the Kerberos Principal for the |mms| agents, create a MongoDB
   user for that Kerberos Principal, edit the agent's configuration file,
   and specify the host's authentication settings.

   If you are running both the Monitoring Agent and the Backup Agent on
   the same server, then both agents must connect as the same Kerberos
   Principal.

   .. include:: /includes/ref-kerberos-configuration.rst

Two-Factor Authentication
-------------------------

.. only:: classic or cloud

   To activate two-factor authentication, which users and
   administrators use to authenticate to the MMS interface, see
   :doc:`/core/two-factor-authentication`.

.. only:: onprem

   To activate and manage two-factor authentication, which users and
   administrators use to authenticate to the MMS interface, see
   :doc:`/core/two-factor-authentication` and
   :doc:`/tutorial/manage-two-factor-authentication`.

.. [#roles-disambiguation]
   MongoDB user roles are separate from |MMS| :doc:`user roles
   </reference/user-roles>`.

.. only:: classic or cloud

   Required Ports and IP Addresses
   -------------------------------

   Required Outbound Access
   ~~~~~~~~~~~~~~~~~~~~~~~~

   .. only:: cloud

      The agents connect to MMS on port ``443``. Whether you provision
      your servers on AWS or on your own network, configure your network
      infrastructure to allow outbound connections on port ``443``.

   .. only:: classic

      The agents connect to MMS on port ``443``. Configure your network
      infrastructure to allow outbound connections on port ``443``.

   If for some reason you want to restrict outbound access on port ``443``
   to specific IP addresses, you must keep open the following addresses to
   allow connection to the ``mms.mongodb.com`` and
   ``api-backup.mongodb.com`` servers:

   - ``54.221.213.229``

   - ``75.101.156.249``

   The MMS Agents will ``GET`` AND ``POST`` to these IPs on port ``443``.

   .. only:: cloud

      Required Inbound Access
      ~~~~~~~~~~~~~~~~~~~~~~~

      If you are *not* using :doc:`MMS provisioning
      </tutorial/provision-aws-servers>`, you do *not* need to keep any
      inbound ports open.

      If you *are* using :doc:`MMS provisioning
      </tutorial/provision-aws-servers>`, you must, at minimum, grant SSH
      access to the following ranges:

      - ``4.71.186.128/25``

      - ``4.35.16.128/25``

      For information on how MMS uses SSH access to AWS, see
      :ref:`ssh-access-to-aws`.

   Required Ports on Your Network
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   .. only:: cloud

      If you provision your servers on your own network, you must have all
      MongoDB ports open *within* the network. For example, if you are
      running MongoDB processes on ``27000``, ``27017`` and ``27020``,
      then those three ports must be open within the network.

   .. only:: classic

      If you provision your servers on your own network, you must have all
      MongoDB ports open on the servers that run the Monitoring Agent and
      Backup Agent. For example, if you are running MongoDB processes on
      ``27000``, ``27017`` and ``27020``, then those three ports must be
      open on the servers the run the agents.
