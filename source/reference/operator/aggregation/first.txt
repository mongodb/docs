================================
$first (aggregation accumulator)
================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. group:: $first
   
   Returns the value that results from applying an expression to the
   first document in a group of documents that share the same group by
   key. Only meaningful when documents are in a defined order.

   .. include:: /includes/extracts/fact-aggregation-accumulator-first.rst

   .. note:: Disambiguation


      The following page describes the accumulator :group:`$first`,
      available only within the :pipeline:`$group` stage. For the array
      operator :expression:`$first`, refer to the :expression:`$first
      (array operator) <$first>` instead.

Syntax
------

:expression:`$first` has the following syntax:

.. code-block:: javascript

   { $first: <expression> }

For more information on expressions, see :ref:`aggregation-expressions`.

Behavior
--------

When using :group:`$first` in a :pipeline:`$group` stage, the
:pipeline:`$group` stage should follow a :pipeline:`$sort` stage to
have the input documents in a defined order.

.. include:: /includes/note-group-pipeline-sort-order.rst

Example
-------

Consider a ``sales`` collection with the following documents:

.. code-block:: javascript

   { "_id" : 1, "item" : "abc", "price" : 10, "quantity" : 2, "date" : ISODate("2014-01-01T08:00:00Z") }
   { "_id" : 2, "item" : "jkl", "price" : 20, "quantity" : 1, "date" : ISODate("2014-02-03T09:00:00Z") }
   { "_id" : 3, "item" : "xyz", "price" : 5, "quantity" : 5, "date" : ISODate("2014-02-03T09:05:00Z") }
   { "_id" : 4, "item" : "abc", "price" : 10, "quantity" : 10, "date" : ISODate("2014-02-15T08:00:00Z") }
   { "_id" : 5, "item" : "xyz", "price" : 5, "quantity" : 10, "date" : ISODate("2014-02-15T09:05:00Z") }
   { "_id" : 6, "item" : "xyz", "price" : 5, "quantity" : 5, "date" : ISODate("2014-02-15T12:05:10Z") }
   { "_id" : 7, "item" : "xyz", "price" : 5, "quantity" : 10, "date" : ISODate("2014-02-15T14:12:12Z") }

Grouping the documents by the ``item`` field, the following operation
uses the :group:`$first` accumulator to compute the first sales date for
each item:

.. code-block:: javascript

   db.sales.aggregate(
      [
        { $sort: { item: 1, date: 1 } },
        {
          $group:
            {
              _id: "$item",
              firstSalesDate: { $first: "$date" }
            }
        }
      ]
   )

The operation returns the following results:

.. code-block:: javascript

   { "_id" : "xyz", "firstSalesDate" : ISODate("2014-02-03T09:05:00Z") }
   { "_id" : "jkl", "firstSalesDate" : ISODate("2014-02-03T09:00:00Z") }
   { "_id" : "abc", "firstSalesDate" : ISODate("2014-01-01T08:00:00Z") }
