# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/reference/operator/aggregation/reduce.txt:3
msgid "$reduce (aggregation)"
msgstr ""

#: ../source/reference/operator/aggregation/reduce.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/operator/aggregation/reduce.txt:20
msgid ""
"Applies an expression to each element in an array and combines them into "
"a single value."
msgstr ""

#: ../source/reference/operator/aggregation/reduce.txt:23
msgid ":expression:`$reduce` has the following syntax:"
msgstr ""

#: ../source/includes/apiargs/expression-reduce-field.rst:7
msgid "Field"
msgstr ""

#: ../source/includes/apiargs/expression-reduce-field.rst:9
msgid "Type"
msgstr ""

#: ../source/includes/apiargs/expression-reduce-field.rst:11
msgid "Description"
msgstr ""

#: ../source/includes/apiargs/expression-reduce-field.rst:13
msgid "``input``"
msgstr ""

#: ../source/includes/apiargs/expression-reduce-field.rst:15
msgid "array"
msgstr ""

#: ../source/includes/apiargs/expression-reduce-field.rst:17
#: ../source/includes/apiargs/expression-reduce-field.rst:58
msgid ""
"Can be any valid :ref:`expression <aggregation-expressions>` that "
"resolves to an array. For more information on expressions, see :ref"
":`aggregation-expressions`."
msgstr ""

#: ../source/includes/extracts/agg-expression-null-operand-reduce.rst:1
msgid ""
"If  the argument resolves to a value of ``null`` or refers to a missing "
"field, :expression:`$reduce` returns ``null``."
msgstr ""

#: ../source/includes/extracts/agg-expression-null-operand-reduce.rst:4
msgid ""
"If the argument does not resolve to an array or ``null`` nor refers to a "
"missing field, :expression:`$reduce` returns an error."
msgstr ""

#: ../source/includes/apiargs/expression-reduce-field.rst:25
msgid "``initialValue``"
msgstr ""

#: ../source/includes/apiargs/expression-reduce-field.rst:27
#: ../source/includes/apiargs/expression-reduce-field.rst:36
msgid "expression"
msgstr ""

#: ../source/includes/apiargs/expression-reduce-field.rst:29
#: ../source/includes/apiargs/expression-reduce-field.rst:68
msgid ""
"The initial cumulative ``value`` set before ``in`` is applied to the "
"first element of the ``input`` array."
msgstr ""

#: ../source/includes/apiargs/expression-reduce-field.rst:34
msgid "``in``"
msgstr ""

#: ../source/includes/apiargs/expression-reduce-field.rst:38
#: ../source/includes/apiargs/expression-reduce-field.rst:75
msgid ""
"A valid :ref:`expression <aggregation-expressions>` that ``$reduce`` "
"applies to each element in the ``input`` array in left-to-right order. "
"Wrap the ``input`` value with :expression:`$reverseArray` to yield the "
"equivalent of applying the combining expression from right-to-left."
msgstr ""

#: ../source/includes/apiargs/expression-reduce-field.rst:43
#: ../source/includes/apiargs/expression-reduce-field.rst:80
msgid ""
"During evaluation of the ``in`` expression, two variables will be "
"available:"
msgstr ""

#: ../source/includes/apiargs/expression-reduce-field.rst:45
#: ../source/includes/apiargs/expression-reduce-field.rst:82
msgid ""
"``value`` is the :doc:`variable </reference/aggregation-variables>` that "
"represents the cumulative value of the expression."
msgstr ""

#: ../source/includes/apiargs/expression-reduce-field.rst:48
#: ../source/includes/apiargs/expression-reduce-field.rst:85
msgid ""
"``this`` is the :doc:`variable</reference/aggregation-variables>` that "
"refers to the element being processed."
msgstr ""

#: ../source/includes/apiargs/expression-reduce-field.rst
msgid "field array input"
msgstr ""

#: ../source/includes/apiargs/expression-reduce-field.rst
msgid "field expression initialValue"
msgstr ""

#: ../source/includes/apiargs/expression-reduce-field.rst
msgid "field expression in"
msgstr ""

#: ../source/reference/operator/aggregation/reduce.txt:37
msgid ""
"If ``input`` resolves to an empty array, :expression:`$reduce` returns "
"``initialValue``."
msgstr ""

#: ../source/reference/operator/aggregation/reduce.txt:45
msgid "Example"
msgstr ""

#: ../source/reference/operator/aggregation/reduce.txt:46
msgid "Results"
msgstr ""

#: ../source/reference/operator/aggregation/reduce.txt:59
msgid "``\"abc\"``"
msgstr ""

#: ../source/reference/operator/aggregation/reduce.txt:75
msgid "``{ \"sum\" : 15, \"product\" : 48 }``"
msgstr ""

#: ../source/reference/operator/aggregation/reduce.txt:88
msgid "``[ 1, 2, 3, 4, 5, 6 ]``"
msgstr ""

#: ../source/reference/operator/aggregation/reduce.txt:91
msgid "Examples"
msgstr ""

#: ../source/reference/operator/aggregation/reduce.txt:94
msgid "Multiplication"
msgstr ""

#: ../source/reference/operator/aggregation/reduce.txt:97
msgid "Probability"
msgstr ""

#: ../source/reference/operator/aggregation/reduce.txt:99
msgid ""
"A collection named ``events`` contains the events of a probability "
"experiment. Each experiment can have multiple ``events``, such as rolling"
" a die several times or drawing several cards **(without replacement)** "
"in succession to achieve a desired result. In order to obtain the overall"
" probability of the experiment, we will need to multiply the probability "
"of each event in the experiment."
msgstr ""

#: ../source/reference/operator/aggregation/reduce.txt:117
msgid "**Steps**:"
msgstr ""

#: ../source/reference/operator/aggregation/reduce.txt:119
msgid ""
"Use ``$group`` to group by the ``experimentId`` and use ``$push`` to "
"create an array with the probability of each event."
msgstr ""

#: ../source/reference/operator/aggregation/reduce.txt:122
msgid ""
"Use ``$reduce`` with ``$multiply`` to multiply and combine the elements "
"of ``probabilityArr`` into a single value and project it."
msgstr ""

#: ../source/reference/operator/aggregation/reduce.txt:150
#: ../source/reference/operator/aggregation/reduce.txt:196
#: ../source/reference/operator/aggregation/reduce.txt:256
#: ../source/reference/operator/aggregation/reduce.txt:301
#: ../source/reference/operator/aggregation/reduce.txt:341
msgid "The operation returns the following:"
msgstr ""

#: ../source/reference/operator/aggregation/reduce.txt:160
msgid "Discounted Merchandise"
msgstr ""

#: ../source/reference/operator/aggregation/reduce.txt:162
msgid "A collection named ``clothes`` contains the following documents:"
msgstr ""

#: ../source/reference/operator/aggregation/reduce.txt:172
msgid ""
"Each document contains a ``discounts`` array containing the currently "
"available percent-off coupons for each item. If each discount can be "
"applied to the product once, we can calculate the lowest price by using "
"``$reduce`` to apply the following formula for each element in the "
"``discounts`` array: (1 - discount) * price."
msgstr ""

#: ../source/reference/operator/aggregation/reduce.txt:207
msgid "String Concatenation"
msgstr ""

#: ../source/reference/operator/aggregation/reduce.txt:209
msgid "A collection named ``people`` contains the following documents:"
msgstr ""

#: ../source/reference/operator/aggregation/reduce.txt:220
msgid ""
"The following example reduces the ``hobbies`` array of strings into a "
"single string ``bio``:"
msgstr ""

#: ../source/reference/operator/aggregation/reduce.txt:267
msgid "Array Concatenation"
msgstr ""

#: ../source/reference/operator/aggregation/reduce.txt:269
msgid "A collection named ``matrices`` contains the following documents:"
msgstr ""

#: ../source/reference/operator/aggregation/reduce.txt:279
msgid "Computing a Single Reduction"
msgstr ""

#: ../source/reference/operator/aggregation/reduce.txt:281
msgid ""
"The following example collapses the two dimensional arrays into a single "
"array ``collapsed``:"
msgstr ""

#: ../source/reference/operator/aggregation/reduce.txt:311
msgid "Computing a Multiple Reductions"
msgstr ""

#: ../source/reference/operator/aggregation/reduce.txt:313
msgid ""
"The following example performs the same two dimensional array collapse as"
" the example above, but also creates a new array containing only the "
"first element of each array."
msgstr ""

