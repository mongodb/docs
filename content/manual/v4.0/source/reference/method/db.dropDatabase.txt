=================
db.dropDatabase()
=================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. method:: db.dropDatabase()

   Removes the current database, deleting the associated data files.

Behavior
--------

The :method:`db.dropDatabase()` wraps the :dbcommand:`dropDatabase`
command. To specify a write concern, use the :dbcommand:`dropDatabase`
command.

Locks
~~~~~

Starting in versions 3.6, the operation takes an exclusive (X) database
lock while dropping the collections in the database but a global lock
when dropping the now-empty database.

User Management
~~~~~~~~~~~~~~~

.. include:: /includes/fact-drop-database-users.rst

Replica Set and Sharded Clusters
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Replica Sets
   At minimum, the method waits until all collection drops in
   the database have propagated to a majority of the replica set
   members (i.e. uses the write concern :writeconcern:`"majority"`).

   To specify a write concern greater than the minimum write concern of
   :writeconcern:`"majority"`, use the :dbcommand:`dropDatabase`
   command.

Sharded Clusters
   .. include:: /includes/extracts/mongos-operations-wc-drop-database.rst

   .. include:: /includes/warning-dropDatabase-shardedCluster.rst

Change Streams
~~~~~~~~~~~~~~

The :method:`db.dropDatabase()` method and :dbcommand:`dropDatabase`
command create an :ref:`change-event-invalidate` for any
:doc:`/changeStreams` opened on the dropped database or opened on the
collections in the dropped database.

Example
-------

The following example in the :binary:`~bin.mongo` shell uses the ``use
<database>`` operation to switch the current database to the ``temp``
database and then uses the :method:`db.dropDatabase()` method to drops
the ``temp`` database:

.. code-block:: javascript

   use temp
   db.dropDatabase()

.. seealso:: :dbcommand:`dropDatabase`
