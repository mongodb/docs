.. _doc-cursor-methods:

==============
Cursor Methods
==============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. note:: ``mongosh`` Methods

   .. include:: /includes/fact-mongosh-shell-method-toc.rst

These methods modify the way that the underlying query is executed.

.. include:: /includes/extracts/methods-toc-explanation.rst

.. list-table::
   :widths: 30,70
   :header-rows: 1

   * - Name
     - Description
   * - :method:`cursor.addOption()`
     - Adds special wire protocol flags that modify the behavior of the
       query.
   * - :method:`cursor.allowDiskUse()`
     - Allows MongoDB to use temporary files on disk to store data 
       exceeding the 100 megabyte system memory limit while processing
       a blocking sort operation.
   * - :method:`cursor.allowPartialResults()`
     - Allows :method:`db.collection.find()` operations against a
       sharded collection to return partial results, rather than an
       error, if one or more queried shards are unavailable.
   * - :method:`cursor.batchSize()`
     - Controls the number of documents MongoDB will return to the
       client in a single network message.
   * - :method:`cursor.close()`
     - Close a cursor and free associated server resources.
   * - :method:`cursor.isClosed()`
     - Returns ``true`` if the cursor is closed.
   * - :method:`cursor.collation()`
     - Specifies the collation for the cursor returned by the
       :method:`db.collection.find()`.
   * - :method:`cursor.comment()`
     - Attaches a comment to the query to allow for traceability in the
       logs and the system.profile collection.
   * - :method:`cursor.count()`
     - Modifies the cursor to return the number of documents in the
       result set rather than the documents themselves.
   * - :method:`cursor.explain()`
     - Reports on the query execution plan for a cursor.
   * - :method:`cursor.forEach()`
     - Applies a JavaScript function for every document in a cursor.
   * - :method:`cursor.hasNext()`
     - Returns true if the cursor has documents and can be iterated.
   * - :method:`cursor.hint()`
     - Forces MongoDB to use a specific index for a query.
   * - :method:`cursor.isExhausted()`
     - Returns ``true`` if the cursor is closed *and* there are no
       objects remaining in the batch.
   * - :method:`cursor.itcount()`
     - Computes the total number of documents in the cursor client-side
       by fetching and iterating the result set.
   * - :method:`cursor.limit()`
     - Constrains the size of a cursor's result set.
   * - :method:`cursor.map()`
     - Applies a function to each document in a cursor and collects the
       return values in an array.
   * - :method:`cursor.max()`
     - Specifies an exclusive upper index bound for a cursor. For use
       with :method:`cursor.hint()`
   * - :method:`cursor.maxAwaitTimeMS()`
     - Specifies a limit in milliseconds to wait for the next query
       result update.
   * - :method:`cursor.maxTimeMS()`
     - Specifies a cumulative time limit in milliseconds for processing
       operations on a cursor.
   * - :method:`cursor.min()`
     - Specifies an inclusive lower index bound for a cursor. For use
       with :method:`cursor.hint()`
   * - :method:`cursor.next()`
     - Returns the next document in a cursor.
   * - :method:`cursor.noCursorTimeout()`
     - Instructs the server to avoid closing a cursor automatically
       after a period of inactivity.
   * - :method:`cursor.objsLeftInBatch()`
     - Returns the number of documents left in the current cursor
       batch.
   * - :method:`cursor.pretty()`
     - Configures the cursor to display results in an easy-to-read
       format.
   * - :method:`cursor.readConcern()`
     - Specifies a :term:`read concern` for a :method:`find()
       <db.collection.find()>` operation.
   * - :method:`cursor.readPref()`
     - Specifies a :term:`read preference` to a cursor to control how
       the client directs queries to a :term:`replica set`.
   * - :method:`cursor.returnKey()`
     - Modifies the cursor to return index keys rather than the
       documents.
   * - :method:`cursor.showRecordId()`
     - Adds an internal storage engine ID field to each document
       returned by the cursor.
   * - :method:`cursor.size()`
     - Returns a count of the documents in the cursor after applying
       :method:`~cursor.skip()` and :method:`~cursor.limit()` methods.
   * - :method:`cursor.skip()`
     - Returns a cursor that begins returning results only after
       passing or skipping a number of documents.
   * - :method:`cursor.sort()`
     - Returns results ordered according to a sort specification.
   * - :method:`cursor.tailable()`
     - Marks the cursor as tailable. Only valid for cursors over
       capped collections.
   * - :method:`cursor.toArray()`
     - Returns an array that contains all documents returned by the
       cursor.
   * - :method:`cursor.tryNext()`
     - Returns the next element in the iteration if available or else
       null.

.. toctree::
   :titlesonly: 
   :hidden: 

   cursor.addOption </reference/method/cursor.addOption>
   cursor.allowDiskUse </reference/method/cursor.allowDiskUse>
   cursor.allowPartialResults </reference/method/cursor.allowPartialResults>
   cursor.batchSize </reference/method/cursor.batchSize>
   cursor.close </reference/method/cursor.close>
   cursor.isClosed </reference/method/cursor.isClosed>
   cursor.collation </reference/method/cursor.collation>
   cursor.comment </reference/method/cursor.comment>
   cursor.count </reference/method/cursor.count>
   cursor.explain </reference/method/cursor.explain>
   cursor.forEach </reference/method/cursor.forEach>
   cursor.hasNext </reference/method/cursor.hasNext>
   cursor.hint </reference/method/cursor.hint>
   cursor.isExhausted </reference/method/cursor.isExhausted>
   cursor.itcount </reference/method/cursor.itcount>
   cursor.limit </reference/method/cursor.limit>
   cursor.map </reference/method/cursor.map>
   cursor.max </reference/method/cursor.max>
   cursor.maxAwaitTimeMS </reference/method/cursor.maxAwaitTimeMS>
   cursor.maxTimeMS </reference/method/cursor.maxTimeMS>
   cursor.min </reference/method/cursor.min>
   cursor.next </reference/method/cursor.next>
   cursor.noCursorTimeout </reference/method/cursor.noCursorTimeout>
   cursor.objsLeftInBatch </reference/method/cursor.objsLeftInBatch>
   cursor.pretty </reference/method/cursor.pretty>
   cursor.readConcern </reference/method/cursor.readConcern>
   cursor.readPref </reference/method/cursor.readPref>
   cursor.returnKey </reference/method/cursor.returnKey>
   cursor.showRecordId </reference/method/cursor.showRecordId>
   cursor.size </reference/method/cursor.size>
   cursor.skip </reference/method/cursor.skip>
   cursor.sort </reference/method/cursor.sort>
   cursor.tailable </reference/method/cursor.tailable>
   cursor.toArray </reference/method/cursor.toArray>
   cursor.tryNext </reference/method/cursor.tryNext>
