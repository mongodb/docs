:orphan:
===============================
MongoDB Error and Message Codes
===============================


.. default-domain:: mongodb

.. line: uassert(1000, "replSet source for syncing doesn't seem to be await capable -- is it an older version of mongodb?", r.awaitCapable() );

.. error:: 1000

   :message: "replSet source for syncing doesn't seem to be await capable -- is it an older version of mongodb?"
   :throws: UserException
   :module: :source:`src/mongo/db/repl/bgsync.cpp#L280`

.. line: msgasserted(10000, "out of memory BufBuilder");

.. error:: 10000

   :message: "out of memory BufBuilder"
   :severity: Info
   :module: :source:`src/mongo/bson/util/builder.h#L108`

.. line: uassert( 10002 ,  "local.sources collection corrupt?", n<2 );

.. error:: 10002

   :message: "local.sources collection corrupt?"
   :throws: UserException
   :module: :source:`src/mongo/db/repl.cpp#L398`

.. line: uassert( 10003 , "failing update: objects in a capped ns cannot grow", !(d && d->isCapped()));

.. error:: 10003

   :message: "failing update: objects in a capped ns cannot grow"
   :throws: UserException
   :module: :source:`src/mongo/db/pdfile.cpp#L1080`

.. line: uassert( 10005 ,  "listdatabases failed" , runCommand( "admin" , BSON( "listDatabases" << 1 ) , info ) );

.. error:: 10005

   :message: "listdatabases failed"
   :throws: UserException
   :module: :source:`src/mongo/client/dbclient.cpp#L604`

.. line: uassert( 10006 ,  "listDatabases.databases not array" , info["databases"].type() == Array );

.. error:: 10006

   :message: "listDatabases.databases not array"
   :throws: UserException
   :module: :source:`src/mongo/client/dbclient.cpp#L605`

.. line: uassert( 10007 ,  "dropIndex failed" , 0 );

.. error:: 10007

   :message: "dropIndex failed"
   :throws: UserException
   :module: :source:`src/mongo/client/dbclient.cpp#L996`

.. line: uassert( 10008 ,  "dropIndexes failed" , runCommand( nsToDatabase( ns.c_str() ) ,

.. error:: 10008

   :message: "dropIndexes failed"
   :throws: UserException
   :module: :source:`src/mongo/client/dbclient.cpp#L1003`

.. line: uassert( 10009 , str::stream() << "ReplicaSetMonitor no master found for set: " << _name , _master >= 0 );

.. error:: 10009

   :message: str::stream() << "ReplicaSetMonitor no master found for set: " << _name , _master >= 0 );
   :throws: UserException
   :module: :source:`src/mongo/client/dbclient_rs.cpp#L407`

.. line: uassert( 10011 ,  "no collection name", coll.size() );

.. error:: 10011

   :message: "no collection name"
   :throws: UserException
   :module: :source:`src/mongo/client/dbclientinterface.h#L672`

.. line: uassert( 10012 ,  "file doesn't exist" , fileName == "-" || boost::filesystem::exists( fileName ) );

.. error:: 10012

   :message: "file doesn't exist"
   :throws: UserException
   :module: :source:`src/mongo/client/gridfs.cpp#L99`

.. line: uassert( 10013 , "error opening file", fd);

.. error:: 10013

   :message: "error opening file"
   :throws: UserException
   :module: :source:`src/mongo/client/gridfs.cpp#L106`

.. line: uassert( 10014 ,  "chunk is empty!" , ! o.isEmpty() );

.. error:: 10014

   :message: "chunk is empty!"
   :throws: UserException
   :module: :source:`src/mongo/client/gridfs.cpp#L225`

.. line: uassert( 10015 ,  "doesn't exists" , exists() );

.. error:: 10015

   :message: "doesn't exists"
   :throws: UserException
   :module: :source:`src/mongo/client/gridfs.cpp#L257`

.. line: uassert( 10016 ,  "_id isn't set - needed for remove()" , _id["_id"].type() );

.. error:: 10016

   :message: "_id isn't set - needed for remove()"
   :throws: UserException
   :module: :source:`src/mongo/client/model.cpp#L40`

.. line: uassert( 10017 ,  "cursor already done" , ! _done );

.. error:: 10017

   :message: "cursor already done"
   :throws: UserException
   :module: :source:`src/mongo/client/parallel.cpp#L114`

.. line: uassert( 10018 ,  "no more items" , more() );

.. error:: 10018

   :message: "no more items"
   :throws: UserException
   :module: :source:`src/mongo/client/parallel.cpp#L426`

.. line: uassert( 10019 ,  "no more elements" , ! best.isEmpty() );

.. error:: 10019

   :message: "no more elements"
   :throws: UserException
   :module: :source:`src/mongo/client/parallel.cpp#L1585`

.. line: uassert( 10022 , "SyncClusterConnection::getMore not supported yet" , 0);

.. error:: 10022

   :message: "SyncClusterConnection::getMore not supported yet"
   :throws: UserException
   :module: :source:`src/mongo/client/syncclusterconnection.cpp#L330`

.. line: uassert( 10023 , "SyncClusterConnection bulk insert not implemented" , 0);

.. error:: 10023

   :message: "SyncClusterConnection bulk insert not implemented"
   :throws: UserException
   :module: :source:`src/mongo/client/syncclusterconnection.cpp#L352`

.. line: uassert( 10024 , "bad ns field for index during dbcopy", e.type() == String);

.. error:: 10024

   :message: "bad ns field for index during dbcopy"
   :throws: UserException
   :module: :source:`src/mongo/db/cloner.cpp#L92`

.. line: uassert( 10025 , "bad ns field for index during dbcopy [2]", p);

.. error:: 10025

   :message: "bad ns field for index during dbcopy [2]"
   :throws: UserException
   :module: :source:`src/mongo/db/cloner.cpp#L94`

.. line: uassert( 10026 ,  "source namespace does not exist", nsd );

.. error:: 10026

   :message: "source namespace does not exist"
   :throws: UserException
   :module: :source:`src/mongo/db/cloner.cpp#L752`

.. line: uassert( 10027 ,  "target namespace exists", cmdObj["dropTarget"].trueValue() );

.. error:: 10027

   :message: "target namespace exists"
   :throws: UserException
   :module: :source:`src/mongo/db/cloner.cpp#L762`

.. line: uassert( 10028 ,  "db name is empty", L > 0 );

.. error:: 10028

   :message: "db name is empty"
   :throws: UserException
   :module: :source:`src/mongo/db/database.cpp#L70`

.. line: uassert( 10029 ,  "bad db name [1]", *nm != '.' );

.. error:: 10029

   :message: "bad db name [1]"
   :throws: UserException
   :module: :source:`src/mongo/db/database.cpp#L72`

.. line: uassert( 10030 ,  "bad db name [2]", nm[L-1] != '.' );

.. error:: 10030

   :message: "bad db name [2]"
   :throws: UserException
   :module: :source:`src/mongo/db/database.cpp#L73`

.. line: uassert( 10031 ,  "bad char(s) in db name", strchr(nm, ' ') == 0 );

.. error:: 10031

   :message: "bad char(s) in db name"
   :throws: UserException
   :module: :source:`src/mongo/db/database.cpp#L74`

.. line: uassert( 10032 ,  "db name too long", L < 64 );

.. error:: 10032

   :message: "db name too long"
   :throws: UserException
   :module: :source:`src/mongo/db/database.cpp#L71`

.. line: uassert( 10033 ,  "logpath has to be non-zero" , logpath.size() );

.. error:: 10033

   :message: "logpath has to be non-zero"
   :throws: UserException
   :module: :source:`src/mongo/db/cmdline.cpp#L406`

.. line: uassert( 10038 , "forced error", false);

.. error:: 10038

   :message: "forced error"
   :throws: UserException
   :module: :source:`src/mongo/db/dbcommands_generic.cpp#L418`

.. line: uassert( 10039 ,  "can't drop collection with reserved $ character in name", strchr(nsToDrop.c_str(), '$') == 0 );

.. error:: 10039

   :message: "can't drop collection with reserved $ character in name"
   :throws: UserException
   :module: :source:`src/mongo/db/dbcommands.cpp#L775`

.. line: uassert( 10040 ,  "chunks out of order" , n == myn );

.. error:: 10040

   :message: "chunks out of order"
   :throws: UserException
   :module: :source:`src/mongo/db/dbcommands.cpp#L1128`

.. line: uassert( 10041 ,  (string)"invoke failed in $keyf: " + s->getError() , res == 0 );

.. error:: 10041

   :message: (string)"invoke failed in $keyf: " + s->getError() , res == 0 );
   :throws: UserException
   :module: :source:`src/mongo/db/commands/group.cpp#L42`

.. line: uassert( 10042 ,  "return of $key has to be an object" , type == Object );

.. error:: 10042

   :message: "return of $key has to be an object"
   :throws: UserException
   :module: :source:`src/mongo/db/commands/group.cpp#L44`

.. line: uassert( 10043 ,  "group() can't handle more than 20000 unique keys" , n <= 20000 );

.. error:: 10043

   :message: "group() can't handle more than 20000 unique keys"
   :throws: UserException
   :module: :source:`src/mongo/db/commands/group.cpp#L123`

.. line: uassert(10044,  "distinct too big, 16mb cap", ( now + e.size() + 1024 ) < bufSize );

.. error:: 10044

   :message: "distinct too big, 16mb cap"
   :throws: UserException
   :module: :source:`src/mongo/db/commands/distinct.cpp#L117`

.. line: uassert( 10046 ,  "eval needs Code" , e.type() == Code || e.type() == CodeWScope || e.type() == String );

.. error:: 10046

   :message: "eval needs Code"
   :throws: UserException
   :module: :source:`src/mongo/db/dbeval.cpp#L41`

.. line: uassert( 10048 ,  "already sorted" , ! _sorted );

.. error:: 10048

   :message: "already sorted"
   :throws: UserException
   :module: :source:`src/mongo/db/extsort.cpp#L109`

.. line: uassert( 10049 ,  "sorted already" , ! _sorted );

.. error:: 10049

   :message: "sorted already"
   :throws: UserException
   :module: :source:`src/mongo/db/extsort.cpp#L134`

.. line: uassert( 10050 ,  "bad" , _cur );

.. error:: 10050

   :message: "bad"
   :throws: UserException
   :module: :source:`src/mongo/db/extsort.cpp#L155`

.. line: uassert( 10052 ,  "not sorted" , _sorted );

.. error:: 10052

   :message: "not sorted"
   :throws: UserException
   :module: :source:`src/mongo/db/extsort.h#L108`

.. line: uassert( 10053 , "You cannot currently mix including and excluding fields. "

.. error:: 10053

   :message: "You cannot currently mix including and excluding fields. "
   :throws: UserException
   :module: :source:`src/mongo/db/projection.cpp#L100`

.. line: uassert( 10054 ,  "not master", isMasterNs( ns ) );

.. error:: 10054

   :message: "not master"
   :throws: UserException
   :module: :source:`src/mongo/db/instance.cpp#L572`

.. line: uassert( 10055 , "update object too large", toupdate.objsize() <= BSONObjMaxUserSize);

.. error:: 10055

   :message: "update object too large"
   :throws: UserException
   :module: :source:`src/mongo/db/instance.cpp#L555`

.. line: uassert( 10056 ,  "not master", isMasterNs( ns ) );

.. error:: 10056

   :message: "not master"
   :throws: UserException
   :module: :source:`src/mongo/db/instance.cpp#L609`

.. line: uasserted( 10057 , ss.str() );

.. error:: 10057

   :message: ss.str() );
   :throws: UserException
   :module: :source:`src/mongo/db/client.cpp#L326`

.. line: uassert( 10058 , "not master", isMasterNs(ns) );

.. error:: 10058

   :message: "not master"
   :throws: UserException
   :module: :source:`src/mongo/db/instance.cpp#L807`

.. line: uassert( 10059 , "object to insert too large", js.objsize() <= BSONObjMaxUserSize);

.. error:: 10059

   :message: "object to insert too large"
   :throws: UserException
   :module: :source:`src/mongo/db/instance.cpp#L751`

.. line: uassert( 10060 ,  "woSortOrder needs a non-empty sortKey" , ! sortKey.isEmpty() );

.. error:: 10060

   :message: "woSortOrder needs a non-empty sortKey"
   :throws: UserException
   :module: :source:`src/mongo/db/jsobj.cpp#L541`

.. line: uassert( 10061 ,  "type not supported for appendMinElementForType" , false );

.. error:: 10061

   :message: "type not supported for appendMinElementForType"
   :throws: UserException
   :module: :source:`src/mongo/db/jsobj.cpp#L1148`

.. line: uassert( 10062 ,  "not code" , 0 );

.. error:: 10062

   :message: "not code"
   :throws: UserException
   :module: :source:`src/mongo/bson/bson_db.h#L60`

.. line: uassert( 10063 ,  "not a dbref" , type() == DBRef );

.. error:: 10063

   :message: "not a dbref"
   :throws: UserException
   :module: :source:`src/mongo/bson/bsonelement.h#L409`

.. line: uassert( 10064 ,  "not a dbref" , type() == DBRef );

.. error:: 10064

   :message: "not a dbref"
   :throws: UserException
   :module: :source:`src/mongo/bson/bsonelement.h#L414`

.. line: uasserted( 10065 , ss.str() );

.. error:: 10065

   :message: ss.str() );
   :throws: UserException
   :module: :source:`src/mongo/bson/bson-inl.h#L178`

.. line: uassert( 10066 , "$where may only appear once in query", _where == 0 );

.. error:: 10066

   :message: "$where may only appear once in query"
   :throws: UserException
   :module: :source:`src/mongo/db/matcher.cpp#L421`

.. line: uassert( 10067 , "$where query, but no script engine", globalScriptEngine );

.. error:: 10067

   :message: "$where query, but no script engine"
   :throws: UserException
   :module: :source:`src/mongo/db/matcher.cpp#L422`

.. line: uassert( 10068 ,  (string)"invalid operator: " + fn , op != -1 );

.. error:: 10068

   :message: (string)"invalid operator: " + fn , op != -1 );
   :throws: UserException
   :module: :source:`src/mongo/db/matcher.cpp#L285`

.. line: uassert( 10069 ,  (string)"BUG - can't operator for: " + fn , 0 );

.. error:: 10069

   :message: (string)"BUG - can't operator for: " + fn , 0 );
   :throws: UserException
   :module: :source:`src/mongo/db/matcher.cpp#L371`

.. line: uassert( 10070 , "$where compile error", _func != 0 );

.. error:: 10070

   :message: "$where compile error"
   :throws: UserException
   :module: :source:`src/mongo/db/matcher.cpp#L106`

.. line: uassert( 10071 , ss.str(), false);

.. error:: 10071

   :message: ss.str(), false);
   :throws: UserException
   :module: :source:`src/mongo/db/matcher.cpp#L120`

.. line: uassert( 10072 , "unknown error in invocation of $where function", false);

.. error:: 10072

   :message: "unknown error in invocation of $where function"
   :throws: UserException
   :module: :source:`src/mongo/db/matcher.cpp#L123`

.. line: uassert( 10073 ,  "mod can't be 0" , _mod );

.. error:: 10073

   :message: "mod can't be 0"
   :throws: UserException
   :module: :source:`src/mongo/db/matcher.cpp#L155`

.. line: uassert( 10074 ,  "need values" , tuples.size() );

.. error:: 10074

   :message: "need values"
   :throws: UserException
   :module: :source:`src/mongo/db/commands/mr.cpp#L154`

.. line: uasserted( 10075 , "reduce -> multiple not supported yet");

.. error:: 10075

   :message: "reduce -> multiple not supported yet"
   :throws: UserException
   :module: :source:`src/mongo/db/commands/mr.cpp#L195`

.. line: uasserted( 10076 ,  str::stream() << "rename failed: " << info );

.. error:: 10076

   :message: str::stream() << "rename failed: " << info );
   :throws: UserException
   :module: :source:`src/mongo/db/commands/mr.cpp#L508`

.. line: uassert( 10077 , "fast_emit takes 2 args" , args.nFields() == 2 );

.. error:: 10077

   :message: "fast_emit takes 2 args"
   :throws: UserException
   :module: :source:`src/mongo/db/commands/mr.cpp#L962`

.. line: massert(10078, "nsToDatabase: ns too long", false);

.. error:: 10078

   :message: "nsToDatabase: ns too long"
   :severity: Info
   :module: :source:`src/mongo/db/namespacestring.h#L148`

.. line: uassert( 10079 ,  "bad .ns file length, cannot open database", len % (1024*1024) == 0 );

.. error:: 10079

   :message: "bad .ns file length, cannot open database"
   :throws: UserException
   :module: :source:`src/mongo/db/namespace_details.cpp#L171`

.. line: uassert( 10080 , "ns name too long, max size is 128", len < MaxNsLen);

.. error:: 10080

   :message: "ns name too long, max size is 128"
   :throws: UserException
   :module: :source:`src/mongo/db/namespace-inl.h#L35`

.. line: uassert( 10081 , "too many namespaces/collections", ht->put(n, details));

.. error:: 10081

   :message: "too many namespaces/collections"
   :throws: UserException
   :module: :source:`src/mongo/db/namespace_details.cpp#L482`

.. line: uassert( 10082 ,  "allocExtra: too many namespaces/collections", ht->put(extra, (NamespaceDetails&) temp));

.. error:: 10082

   :message: "allocExtra: too many namespaces/collections"
   :throws: UserException
   :module: :source:`src/mongo/db/namespace_details.cpp#L497`

.. line: uassert( 10083 , "create collection invalid size spec", size > 0 );

.. error:: 10083

   :message: "create collection invalid size spec"
   :throws: UserException
   :module: :source:`src/mongo/db/pdfile.cpp#L258`

.. line: uassert( 10084 , "can't map file memory - mongo requires 64 bit build for larger datasets", _mb != 0);

.. error:: 10084

   :message: "can't map file memory - mongo requires 64 bit build for larger datasets"
   :throws: UserException
   :module: :source:`src/mongo/db/pdfile.cpp#L410`

.. line: uassert( 10085 , "can't map file memory", _mb != 0);

.. error:: 10085

   :message: "can't map file memory"
   :throws: UserException
   :module: :source:`src/mongo/db/pdfile.cpp#L412`

.. line: uassert( 10086 ,  (string)"ns not found: " + nsToDrop , d );

.. error:: 10086

   :message: (string)"ns not found: " + nsToDrop , d );
   :throws: UserException
   :module: :source:`src/mongo/db/pdfile.cpp#L892`

.. line: uassert( 10087 ,  "turn off profiling before dropping system.profile collection", cc().database()->profile == 0 );

.. error:: 10087

   :message: "turn off profiling before dropping system.profile collection"
   :throws: UserException
   :module: :source:`src/mongo/db/pdfile.cpp#L900`

.. line: massert(10088, "nsToDatabase: ns too long", i < (size_t)MaxDatabaseNameLen);

.. error:: 10088

   :message: "nsToDatabase: ns too long"
   :severity: Info
   :module: :source:`src/mongo/db/namespacestring.h#L159`

.. line: uassert( 10089 ,  "can't remove from a capped collection" , 0 );

.. error:: 10089

   :message: "can't remove from a capped collection"
   :throws: UserException
   :module: :source:`src/mongo/db/pdfile.cpp#L1014`

.. line: uassert( 10092 , "too may dups on index build with dropDups=true", dupsToDrop.size() < 1000000 );

.. error:: 10092

   :message: "too may dups on index build with dropDups=true"
   :throws: UserException
   :module: :source:`src/mongo/db/index_update.cpp#L251`

.. line: massert( 10093 , "cannot insert into reserved $ collection", god || NamespaceString::normal( ns ) );

.. error:: 10093

   :message: "cannot insert into reserved $ collection"
   :severity: Info
   :module: :source:`src/mongo/db/pdfile.cpp#L1397`

.. line: uassert( 10094 , str::stream() << "invalid ns: " << ns , isValidNS( ns ) );

.. error:: 10094

   :message: str::stream() << "invalid ns: " << ns , isValidNS( ns ) );
   :throws: UserException
   :module: :source:`src/mongo/db/pdfile.cpp#L1398`

.. line: uassert( 10095 , "attempt to insert in reserved database name 'system'", sys != ns);

.. error:: 10095

   :message: "attempt to insert in reserved database name 'system'"
   :throws: UserException
   :module: :source:`src/mongo/db/pdfile.cpp#L1299`

.. line: uassert(10096, "invalid ns to index", sourceNS.find( '.' ) != string::npos);

.. error:: 10096

   :message: "invalid ns to index"
   :throws: UserException
   :module: :source:`src/mongo/db/index.cpp#L308`

.. line: massert(10097, str::stream() << "bad table to index name on add index attempt current db: " << cc().database()->name << "  source: " << sourceNS ,

.. error:: 10097

   :message: str::stream() << "bad table to index name on add index attempt current db: " << cc().database()->name << "  source: " << sourceNS ,
   :severity: Info
   :module: :source:`src/mongo/db/index.cpp#L309`

.. line: uasserted(10098 , s.c_str());

.. error:: 10098

   :message: s.c_str());
   :throws: UserException
   :module: :source:`src/mongo/db/index.cpp#L316`

.. line: uassert( 10099 ,  "_id cannot be an array", idField.type() != Array );

.. error:: 10099

   :message: "_id cannot be an array"
   :throws: UserException
   :module: :source:`src/mongo/db/pdfile.cpp#L1436`

.. line: uassert( 10100 ,  "cannot delete from collection with reserved $ in name", strchr(ns, '$') == 0 );

.. error:: 10100

   :message: "cannot delete from collection with reserved $ in name"
   :throws: UserException
   :module: :source:`src/mongo/db/ops/delete.cpp#L44`

.. line: uassert( 10101 ,  "can't remove from a capped collection" , ! d->isCapped() );

.. error:: 10101

   :message: "can't remove from a capped collection"
   :throws: UserException
   :module: :source:`src/mongo/db/ops/delete.cpp#L52`

.. line: uassert( 10102 , "bad order array", !e.eoo());

.. error:: 10102

   :message: "bad order array"
   :throws: UserException
   :module: :source:`src/mongo/db/queryutil.h#L41`

.. line: uassert( 10103 , "bad order array [2]", e.isNumber());

.. error:: 10103

   :message: "bad order array [2]"
   :throws: UserException
   :module: :source:`src/mongo/db/queryutil.h#L42`

.. line: uassert( 10104 , "too many ordering elements", *p <= '9');

.. error:: 10104

   :message: "too many ordering elements"
   :throws: UserException
   :module: :source:`src/mongo/db/queryutil.h#L45`

.. line: uassert( 10105 , "bad skip value in query", _ntoskip >= 0);

.. error:: 10105

   :message: "bad skip value in query"
   :throws: UserException
   :module: :source:`src/mongo/db/queryutil.h#L130`

.. line: uassert( 10107 , "not master" , expr );

.. error:: 10107

   :message: "not master"
   :throws: UserException
   :module: :source:`src/mongo/db/replutil.h#L82`

.. line: uassert( 10110 , "bad query object", false);

.. error:: 10110

   :message: "bad query object"
   :throws: UserException
   :module: :source:`src/mongo/db/ops/query.cpp#L954`

.. line: uassert( 10111 ,  (string)"table scans not allowed:" + ns() , ! cmdLine.noTableScan );

.. error:: 10111

   :message: (string)"table scans not allowed:" + ns() , ! cmdLine.noTableScan );
   :throws: UserException
   :module: :source:`src/mongo/db/queryoptimizer.cpp#L357`

.. line: uassert( 10112 ,  "bad hint", !hintobj.isEmpty() );

.. error:: 10112

   :message: "bad hint"
   :throws: UserException
   :module: :source:`src/mongo/db/queryoptimizer.cpp#L73`

.. line: uassert( 10113 ,  "bad hint", false );

.. error:: 10113

   :message: "bad hint"
   :throws: UserException
   :module: :source:`src/mongo/db/queryoptimizer.cpp#L85`

.. line: uassert( 10118 ,  "'host' field not set in sources collection object", !hostName.empty() );

.. error:: 10118

   :message: "'host' field not set in sources collection object"
   :throws: UserException
   :module: :source:`src/mongo/db/repl.cpp#L266`

.. line: uassert( 10119 ,  "only source='main' allowed for now with replication", sourceName() == "main" );

.. error:: 10119

   :message: "only source='main' allowed for now with replication"
   :throws: UserException
   :module: :source:`src/mongo/db/repl.cpp#L267`

.. line: uassert( 10120 ,  "bad sources 'syncedTo' field value", e.type() == Date || e.type() == Timestamp );

.. error:: 10120

   :message: "bad sources 'syncedTo' field value"
   :throws: UserException
   :module: :source:`src/mongo/db/repl.cpp#L270`

.. line: uassert( 10123 , "replication error last applied optime at slave >= nextOpTime from master", false);

.. error:: 10123

   :message: "replication error last applied optime at slave >= nextOpTime from master"
   :throws: UserException
   :module: :source:`src/mongo/db/repl.cpp#L1012`

.. line: uassert( 10124 ,  e.type() == Date );

.. error:: 10124

   :message: e.type() == Date );
   :throws: UserException
   :module: :source:`src/mongo/db/repl.cpp#L1248`

.. line: uassert( 10131 ,  "$push can only be applied to an array" , in.type() == Array );

.. error:: 10131

   :message: "$push can only be applied to an array"
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L116`

.. line: uassert( 10132 ,  "$pushAll can only be applied to an array" , in.type() == Array );

.. error:: 10132

   :message: "$pushAll can only be applied to an array"
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L187`

.. line: uassert( 10133 ,  "$pushAll has to be passed an array" , elt.type() );

.. error:: 10133

   :message: "$pushAll has to be passed an array"
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L188`

.. line: uassert( 10134 ,  "$pull/$pullAll can only be applied to an array" , in.type() == Array );

.. error:: 10134

   :message: "$pull/$pullAll can only be applied to an array"
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L212`

.. line: uassert( 10135 ,  "$pop can only be applied to an array" , in.type() == Array );

.. error:: 10135

   :message: "$pop can only be applied to an array"
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L247`

.. line: uassert( 10136 ,  "$bit needs an object" , elt.type() == Object );

.. error:: 10136

   :message: "$bit needs an object"
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L283`

.. line: uassert( 10137 ,  "$bit can only be applied to numbers" , in.isNumber() );

.. error:: 10137

   :message: "$bit can only be applied to numbers"
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L284`

.. line: uassert( 10138 ,  "$bit cannot update a value of type double" , in.type() != NumberDouble );

.. error:: 10138

   :message: "$bit cannot update a value of type double"
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L285`

.. line: uassert( 10139 ,  "$bit field must be number" , e.isNumber() );

.. error:: 10139

   :message: "$bit field must be number"
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L293`

.. line: uassert( 10140 ,  "Cannot apply $inc modifier to non-number", e.isNumber() || e.eoo() );

.. error:: 10140

   :message: "Cannot apply $inc modifier to non-number"
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L402`

.. line: uassert( 10141,

.. error:: 10141

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L424`

.. line: uassert( 10142,

.. error:: 10142

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L432`

.. line: uassert( 10143,

.. error:: 10143

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L459`

.. line: uassert( 10145,

.. error:: 10145

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L717`

.. line: uassert( 10147 ,  "Invalid modifier specified: " + string( fn ), e.type() == Object );

.. error:: 10147

   :message: "Invalid modifier specified: " + string( fn ), e.type() == Object );
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L857`

.. line: uassert( 10148,

.. error:: 10148

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L874`

.. line: uassert( 10149,

.. error:: 10149

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L877`

.. line: uassert( 10150,

.. error:: 10150

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L880`

.. line: uassert( 10151,

.. error:: 10151

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L883`

.. line: uassert( 10152,

.. error:: 10152

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L886`

.. line: uassert( 10153,

.. error:: 10153

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L889`

.. line: uassert( 10154 ,  "Modifiers and non-modifiers cannot be mixed", e.fieldName()[ 0 ] != '$' );

.. error:: 10154

   :message: "Modifiers and non-modifiers cannot be mixed"
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update.cpp#L40`

.. line: uassert( 10155 , "cannot update reserved $ collection", strchr(ns, '$') == 0 );

.. error:: 10155

   :message: "cannot update reserved $ collection"
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update.cpp#L476`

.. line: uassert( 10156,

.. error:: 10156

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update.cpp#L479`

.. line: uassert( 10157 ,  "multi-update requires all modified objects to have an _id" , ! multi );

.. error:: 10157

   :message: "multi-update requires all modified objects to have an _id"
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update.cpp#L308`

.. line: uassert( 10158 ,  "multi update only works with $ operators" , ! multi );

.. error:: 10158

   :message: "multi update only works with $ operators"
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update.cpp#L425`

.. line: uassert( 10159 ,  "multi update only works with $ operators" , ! multi );

.. error:: 10159

   :message: "multi update only works with $ operators"
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update.cpp#L453`

.. line: uassert( 10161 ,  "Invalid modifier specified " + string( fn ), false );

.. error:: 10161

   :message: "Invalid modifier specified " + string( fn ), false );
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.h#L317`

.. line: fassert( 10162, ! m );

.. error:: 10162

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/unittest/unittest.cpp#L241`

.. line: uassert( 10163 ,  "can only handle numbers here - which i think is correct" , e.isNumber() );

.. error:: 10163

   :message: "can only handle numbers here - which i think is correct"
   :throws: UserException
   :module: :source:`src/mongo/s/chunk.cpp#L129`

.. line: uassert( 10165 , "can't split as shard doesn't have a manager" , _manager );

.. error:: 10165

   :message: "can't split as shard doesn't have a manager"
   :throws: UserException
   :module: :source:`src/mongo/s/chunk.cpp#L267`

.. line: uassert( 10167 ,  "can't move shard to its current location!" , getShard() != to );

.. error:: 10167

   :message: "can't move shard to its current location!"
   :throws: UserException
   :module: :source:`src/mongo/s/chunk.cpp#L305`

.. line: uassert( 10169 ,  "datasize failed!" , conn->get()->runCommand( "admin" ,

.. error:: 10169

   :message: "datasize failed!"
   :throws: UserException
   :module: :source:`src/mongo/s/chunk.cpp#L454`

.. line: uassert( 10170 ,  "Chunk needs a ns" , ! ns.empty() );

.. error:: 10170

   :message: "Chunk needs a ns"
   :throws: UserException
   :module: :source:`src/mongo/s/chunk.cpp#L71`

.. line: uassert( 10171 ,  "Chunk needs a server" , _shard.ok() );

.. error:: 10171

   :message: "Chunk needs a server"
   :throws: UserException
   :module: :source:`src/mongo/s/chunk.cpp#L74`

.. line: uassert( 10172 ,  "Chunk needs a min" , ! _min.isEmpty() );

.. error:: 10172

   :message: "Chunk needs a min"
   :throws: UserException
   :module: :source:`src/mongo/s/chunk.cpp#L76`

.. line: uassert( 10173 ,  "Chunk needs a max" , ! _max.isEmpty() );

.. error:: 10173

   :message: "Chunk needs a max"
   :throws: UserException
   :module: :source:`src/mongo/s/chunk.cpp#L77`

.. line: uassert( 10174 ,  "config servers not all up" , configServer.allUp() );

.. error:: 10174

   :message: "config servers not all up"
   :throws: UserException
   :module: :source:`src/mongo/s/chunk.cpp#L1199`

.. line: uassert( 10178 ,  "no primary!" , _primary.ok() );

.. error:: 10178

   :message: "no primary!"
   :throws: UserException
   :module: :source:`src/mongo/s/config.cpp#L147`

.. line: uassert( 10181 ,  (string)"not sharded:" + ns , ci.isSharded() );

.. error:: 10181

   :message: (string)"not sharded:" + ns , ci.isSharded() );
   :throws: UserException
   :module: :source:`src/mongo/s/config.cpp#L310`

.. line: uassert( 10184 ,  "_dropShardedCollections too many collections - bailing" , num < 100000 );

.. error:: 10184

   :message: "_dropShardedCollections too many collections - bailing"
   :throws: UserException
   :module: :source:`src/mongo/s/config.cpp#L677`

.. line: uasserted( 10185 ,  "can't find a shard to put new db on" );

.. error:: 10185

   :message: "can't find a shard to put new db on"
   :throws: UserException
   :module: :source:`src/mongo/s/grid.cpp#L118`

.. line: uassert( 10186 ,  "removeDB expects db name" , database.find( '.' ) == string::npos );

.. error:: 10186

   :message: "removeDB expects db name"
   :throws: UserException
   :module: :source:`src/mongo/s/grid.cpp#L138`

.. line: uassert( 10187 ,  "need configdbs" , configHosts.size() );

.. error:: 10187

   :message: "need configdbs"
   :throws: UserException
   :module: :source:`src/mongo/s/config.cpp#L722`

.. line: uassert( 10189 ,  "should only have 1 thing in config.version" , ! c->more() );

.. error:: 10189

   :message: "should only have 1 thing in config.version"
   :throws: UserException
   :module: :source:`src/mongo/s/config.cpp#L897`

.. line: uassert( 10190 ,  "ConfigServer not setup" , _primary.ok() );

.. error:: 10190

   :message: "ConfigServer not setup"
   :throws: UserException
   :module: :source:`src/mongo/s/config.h#L220`

.. line: uassert( 10191 ,  "cursor already done" , ! _done );

.. error:: 10191

   :message: "cursor already done"
   :throws: UserException
   :module: :source:`src/mongo/s/cursors.cpp#L91`

.. line: uassert( 10194 ,  "can't call primaryShard on a sharded collection!" , s.ok() );

.. error:: 10194

   :message: "can't call primaryShard on a sharded collection!"
   :throws: UserException
   :module: :source:`src/mongo/s/request.cpp#L109`

.. line: uassert( 10197 ,  "createDirectClient not implemented for sharding yet" , 0 );

.. error:: 10197

   :message: "createDirectClient not implemented for sharding yet"
   :throws: UserException
   :module: :source:`src/mongo/s/server.cpp#L188`

.. line: uassert( 10198 , str::stream() << "left object ("  << lObject << ") doesn't have full shard key (" << pattern << ')',

.. error:: 10198

   :message: str::stream() << "left object ("  << lObject << ") doesn't have full shard key (" << pattern << ')',
   :throws: UserException
   :module: :source:`src/mongo/s/shardkey.cpp#L47`

.. line: uassert( 10199 , str::stream() << "right object (" << rObject << ") doesn't have full shard key (" << pattern << ')',

.. error:: 10199

   :message: str::stream() << "right object (" << rObject << ") doesn't have full shard key (" << pattern << ')',
   :throws: UserException
   :module: :source:`src/mongo/s/shardkey.cpp#L50`

.. line: uassert( 10200 , "mongos: error calling db", ok );

.. error:: 10200

   :message: "mongos: error calling db"
   :throws: UserException
   :module: :source:`src/mongo/s/strategy.cpp#L72`

.. line: uassert( 10201 ,  "invalid update" , d.moreJSObjs() );

.. error:: 10201

   :message: "invalid update"
   :throws: UserException
   :module: :source:`src/mongo/s/strategy_shard.cpp#L765`

.. line: uassert( 10203 ,  "bad delete message" , d.moreJSObjs() );

.. error:: 10203

   :message: "bad delete message"
   :throws: UserException
   :module: :source:`src/mongo/s/strategy_shard.cpp#L921`

.. line: uassert( 10204 , "dbgrid: getmore: error calling db", ok);

.. error:: 10204

   :message: "dbgrid: getmore: error calling db"
   :throws: UserException
   :module: :source:`src/mongo/s/strategy_shard.cpp#L204`

.. line: uassert( 10205 ,  (string)"can't use unique indexes with sharding  ns:" + ns +

.. error:: 10205

   :message: (string)"can't use unique indexes with sharding  ns:" + ns +
   :throws: UserException
   :module: :source:`src/mongo/s/strategy_shard.cpp#L1029`

.. line: uassert( 10206 ,  temp.str() , 0 );

.. error:: 10206

   :message: temp.str() , 0 );
   :throws: UserException
   :module: :source:`src/mongo/scripting/engine.cpp#L85`

.. line: uassert( 10207 ,  "compile failed" , func );

.. error:: 10207

   :message: "compile failed"
   :throws: UserException
   :module: :source:`src/mongo/scripting/engine.cpp#L92`

.. line: uassert( 10208 ,  "need to have locallyConnected already" , _localDBName.size() );

.. error:: 10208

   :message: "need to have locallyConnected already"
   :throws: UserException
   :module: :source:`src/mongo/scripting/engine.cpp#L178`

.. line: uassert( 10209 ,  str::stream() << "name has to be a string: " << n  , n.type() == String );

.. error:: 10209

   :message: str::stream() << "name has to be a string: " << n  , n.type() == String );
   :throws: UserException
   :module: :source:`src/mongo/scripting/engine.cpp#L199`

.. line: uassert( 10210 ,  "value has to be set" , v.type() != EOO );

.. error:: 10210

   :message: "value has to be set"
   :throws: UserException
   :module: :source:`src/mongo/scripting/engine.cpp#L200`

.. line: uassert( 10212 ,  "holder magic value is wrong" , _magic == 17 && _obj.isValid() );

.. error:: 10212

   :message: "holder magic value is wrong"
   :throws: UserException
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L81`

.. line: uassert( 10214 ,  "not a number" , JS_ValueToNumber( _context , v , &d ) );

.. error:: 10214

   :message: "not a number"
   :throws: UserException
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L230`

.. line: uassert( 10215, "not an object", JSVAL_IS_OBJECT( v ) );

.. error:: 10215

   :message: "not an object"
   :throws: UserException
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L318`

.. line: uassert( 10216, "not a function", JS_TypeOfValue( _context, v ) == JSTYPE_FUNCTION );

.. error:: 10216

   :message: "not a function"
   :throws: UserException
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L327`

.. line: default: uassert( 10217 ,  (string)"can't append field.  name:" + name + " type: " + typeString( val ) , 0 );

.. error:: 10217

   :message: (string)"can't append field.  name:" + name + " type: " + typeString( val ) , 0 );
   :throws: UserException
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L384`

.. line: uassert( 10218 ,  "not done: toval" , 0 );

.. error:: 10218

   :message: "not done: toval"
   :throws: UserException
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L718`

.. line: uassert( 10219 ,  "object passed to getPropery is null" , o );

.. error:: 10219

   :message: "object passed to getPropery is null"
   :throws: UserException
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L745`

.. line: uassert( 10220 ,  "don't know what to do with this op" , 0 );

.. error:: 10220

   :message: "don't know what to do with this op"
   :throws: UserException
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L845`

.. line: uassert( 10221 ,  "JS_NewRuntime failed" , _runtime );

.. error:: 10221

   :message: "JS_NewRuntime failed"
   :throws: UserException
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L1374`

.. line: uassert( 10223 ,  "deleted SMScope twice?" , _convertor );

.. error:: 10223

   :message: "deleted SMScope twice?"
   :throws: UserException
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L1457`

.. line: uassert( 10224 ,  "already local connected" , ! _localConnect );

.. error:: 10224

   :message: "already local connected"
   :throws: UserException
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L1503`

.. line: uassert( 10225 ,  "already setup for external db" , ! _externalSetup );

.. error:: 10225

   :message: "already setup for external db"
   :throws: UserException
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L1513`

.. line: uassert( 10226 ,  "connected to different db" , _localDBName == dbName );

.. error:: 10226

   :message: "connected to different db"
   :throws: UserException
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L1515`

.. line: uassert( 10227 ,  "unknown type" , 0 );

.. error:: 10227

   :message: "unknown type"
   :throws: UserException
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L1584`

.. line: uassert( 10228, mongoutils::str::stream() << name + " exec failed: " << _error,

.. error:: 10228

   :message: mongoutils::str::stream() << name + " exec failed: " << _error,
   :throws: UserException
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L1755`

.. line: uassert( 10230 ,  "can't handle external yet" , 0 );

.. error:: 10230

   :message: "can't handle external yet"
   :throws: UserException
   :module: :source:`src/mongo/scripting/engine_v8.cpp#L646`

.. line: uassert( 10231 ,  "not an object" , v->IsObject() );

.. error:: 10231

   :message: "not an object"
   :throws: UserException
   :module: :source:`src/mongo/scripting/engine_v8.cpp#L691`

.. line: uassert( 10232, "not a func" , f->IsFunction() );

.. error:: 10232

   :message: "not a func"
   :throws: UserException
   :module: :source:`src/mongo/scripting/engine_v8.cpp#L753`

.. line: uassert( 10233 ,  _error , 0 );

.. error:: 10233

   :message: _error , 0 );
   :throws: UserException
   :module: :source:`src/mongo/scripting/engine_v8.cpp#L863`

.. line: uassert( 10234 ,  _error , 0 );

.. error:: 10234

   :message: _error , 0 );
   :throws: UserException
   :module: :source:`src/mongo/scripting/engine_v8.cpp#L890`

.. line: uassert( 10235 ,  "no cursor!" , holder );

.. error:: 10235

   :message: "no cursor!"
   :throws: UserException
   :module: :source:`src/mongo/scripting/sm_db.cpp#L75`

.. line: uassert( 10236 ,  "no args to internal_cursor_constructor" , argc == 0 );

.. error:: 10236

   :message: "no args to internal_cursor_constructor"
   :throws: UserException
   :module: :source:`src/mongo/scripting/sm_db.cpp#L81`

.. line: uassert( 10239 ,  "no connection!" , connHolder && connHolder->get() );

.. error:: 10239

   :message: "no connection!"
   :throws: UserException
   :module: :source:`src/mongo/scripting/sm_db.cpp#L279`

.. line: uassert( 10245 ,  "no connection!" , conn );

.. error:: 10245

   :message: "no connection!"
   :throws: UserException
   :module: :source:`src/mongo/scripting/sm_db.cpp#L452`

.. line: uassert( 10248 ,  "no connection!" , conn );

.. error:: 10248

   :message: "no connection!"
   :throws: UserException
   :module: :source:`src/mongo/scripting/sm_db.cpp#L492`

.. line: uassert( 10251 ,  "no connection!" , conn );

.. error:: 10251

   :message: "no connection!"
   :throws: UserException
   :module: :source:`src/mongo/scripting/sm_db.cpp#L554`

.. line: uassert( 10256 ,  "no createDirectClient in clientOnly" , 0 );

.. error:: 10256

   :message: "no createDirectClient in clientOnly"
   :throws: UserException
   :module: :source:`src/mongo/client/clientAndShell.cpp#L69`

.. line: uassert( 10257 ,  "need to specify 1 argument to listFiles" , args.nFields() == 1 );

.. error:: 10257

   :message: "need to specify 1 argument to listFiles"
   :throws: UserException
   :module: :source:`src/mongo/shell/shell_utils_extended.cpp#L45`

.. line: uassert( 10258 ,  "processinfo not supported" , pi.supported() );

.. error:: 10258

   :message: "processinfo not supported"
   :throws: UserException
   :module: :source:`src/mongo/shell/shell_utils.cpp#L80`

.. line: uassert( 10261,

.. error:: 10261

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/scripting/utils.cpp#L27`

.. line: uassert(10262, errnoWithPrefix("couldn't open file"), f);

.. error:: 10262

   :message: errnoWithPrefix("couldn't open file"), f);
   :throws: UserException
   :module: :source:`src/mongo/tools/dump.cpp#L126`

.. line: uassert( 10263 ,  "unknown error reading file" ,

.. error:: 10263

   :message: "unknown error reading file"
   :throws: UserException
   :module: :source:`src/mongo/tools/import.cpp#L131`

.. line: uassert( 10264 , str::stream() << "invalid object size: " << size , size < BUF_SIZE );

.. error:: 10264

   :message: str::stream() << "invalid object size: " << size , size < BUF_SIZE );
   :throws: UserException
   :module: :source:`src/mongo/tools/tool.cpp#L496`

.. line: uassert( 10265 ,  "counts don't match" , m.done() == fileLength );

.. error:: 10265

   :message: "counts don't match"
   :throws: UserException
   :module: :source:`src/mongo/tools/tool.cpp#L532`

.. line: uassert( 10266 ,  "can't use --source twice" , source == false );

.. error:: 10266

   :message: "can't use --source twice"
   :throws: UserException
   :module: :source:`src/mongo/tools/sniffer.cpp#L480`

.. line: uassert( 10267 ,  "source needs more args" , args.size() > i + 2);

.. error:: 10267

   :message: "source needs more args"
   :throws: UserException
   :module: :source:`src/mongo/tools/sniffer.cpp#L481`

.. line: uassert( 10268 ,  "LoggingManager already started" , ! _enabled );

.. error:: 10268

   :message: "LoggingManager already started"
   :throws: UserException
   :module: :source:`src/mongo/util/log.cpp#L72`

.. line: uassert( 10270 ,  "invalid base64" , s.size() % 4 == 0 );

.. error:: 10270

   :message: "invalid base64"
   :throws: UserException
   :module: :source:`src/mongo/util/base64.cpp#L79`

.. line: uassert( 10271 ,  "invalid url" , url.find( "http://" ) == 0 );

.. error:: 10271

   :message: "invalid url"
   :throws: UserException
   :module: :source:`src/mongo/util/net/httpclient.cpp#L47`

.. line: uassert( 10273 ,  "_cur not empty! pipelining requests not supported" , ! _cur.data );

.. error:: 10273

   :message: "_cur not empty! pipelining requests not supported"
   :throws: UserException
   :module: :source:`src/mongo/util/net/message_server_asio.cpp#L110`

.. line: uassert( 10274 ,  "pipelining requests doesn't work yet" , query.data->id == _cur.data->id );

.. error:: 10274

   :message: "pipelining requests doesn't work yet"
   :throws: UserException
   :module: :source:`src/mongo/util/net/message_server_asio.cpp#L171`

.. line: uassert( 10275 ,  "multiple PortMessageServer not supported" , ! pms::handler );

.. error:: 10275

   :message: "multiple PortMessageServer not supported"
   :throws: UserException
   :module: :source:`src/mongo/util/net/message_server_port.cpp#L120`

.. line: uassert( 10276 ,  str::stream() << "DBClientBase::findN: transport error: " << getServerAddress() << " ns: " << ns << " query: " << query.toString(), c.get() );

.. error:: 10276

   :message: str::stream() << "DBClientBase::findN: transport error: " << getServerAddress() << " ns: " << ns << " query: " << query.toString(), c.get() );
   :throws: UserException
   :module: :source:`src/mongo/client/dbclient.cpp#L666`

.. line: uasserted( 10278 , str::stream() << "dbclient error communicating with server: " << getServerAddress() );

.. error:: 10278

   :message: str::stream() << "dbclient error communicating with server: " << getServerAddress() );
   :throws: UserException
   :module: :source:`src/mongo/client/dbclient.cpp#L1140`

.. line: massert( 10281 , "verify is misdefined", f);

.. error:: 10281

   :message: "verify is misdefined"
   :severity: Info
   :module: :source:`src/mongo/db/btree.cpp#L144`

.. line: massert( 10282 ,  "n==0 in btree popBack()", this->n > 0 );

.. error:: 10282

   :message: "n==0 in btree popBack()"
   :severity: Info
   :module: :source:`src/mongo/db/btree.cpp#L325`

.. line: massert( 10283 , "rchild not null in btree popBack()", this->nextChild.isNull());

.. error:: 10283

   :message: "rchild not null in btree popBack()"
   :severity: Info
   :module: :source:`src/mongo/db/btree.cpp#L332`

.. line: massert( 10285 , "_insert: reuse key but lchild is not null", lChild.isNull());

.. error:: 10285

   :message: "_insert: reuse key but lchild is not null"
   :severity: Info
   :module: :source:`src/mongo/db/btree.cpp#L1768`

.. line: massert( 10286 , "_insert: reuse key but rchild is not null", rChild.isNull());

.. error:: 10286

   :message: "_insert: reuse key but rchild is not null"
   :severity: Info
   :module: :source:`src/mongo/db/btree.cpp#L1769`

.. line: throw MsgAssertionException(10287, "btree: key+recloc already in index");

.. error:: 10287

   :message: "btree: key+recloc already in index");
   :throws: MsgAssertionException
   :module: :source:`src/mongo/db/btree.cpp#L85`

.. line: massert( 10288 ,  "bad key order in BtreeBuilder - server internal error", cmp <= 0 );

.. error:: 10288

   :message: "bad key order in BtreeBuilder - server internal error"
   :severity: Info
   :module: :source:`src/mongo/db/btreebuilder.cpp#L76`

.. line: massert( 10289 ,  "useReplAuth is not written to replication log", !opts.useReplAuth || !opts.logForRepl );

.. error:: 10289

   :message: "useReplAuth is not written to replication log"
   :severity: Info
   :module: :source:`src/mongo/db/cloner.cpp#L307`

.. line: massert( 10290 , s.c_str(), false);

.. error:: 10290

   :message: s.c_str(), false);
   :severity: Info
   :module: :source:`src/mongo/db/cloner.cpp#L387`

.. line: massert( 10295 , "getFile(): bad file number value (corrupt db?): run repair", false);

.. error:: 10295

   :message: "getFile(): bad file number value (corrupt db?): run repair"
   :severity: Info
   :module: :source:`src/mongo/db/database.cpp#L242`

.. line: uassert( 10296 ,  ss.str().c_str(), boost::filesystem::exists( dbpath ) );

.. error:: 10296

   :message: ss.str().c_str(), boost::filesystem::exists( dbpath ) );
   :throws: UserException
   :module: :source:`src/mongo/db/db.cpp#L486`

.. line: massert(10297 , "Couldn't register Windows Ctrl-C handler", SetConsoleCtrlHandler((PHANDLER_ROUTINE) CtrlHandler, TRUE));

.. error:: 10297

   :message: "Couldn't register Windows Ctrl-C handler"
   :severity: Info
   :module: :source:`src/mongo/db/db.cpp#L1424`

.. line: massert(10298 , "can't temprelease nested lock", false);

.. error:: 10298

   :message: "can't temprelease nested lock"
   :severity: Info
   :module: :source:`src/mongo/db/db.h#L40`

.. line: massert( 10301 ,  "source collection " + fromNs + " does not exist", nsd );

.. error:: 10301

   :message: "source collection " + fromNs + " does not exist", nsd );
   :severity: Info
   :module: :source:`src/mongo/db/dbcommands.cpp#L1544`

.. line: massert( 10304 ,  "Client Error: Remaining data too small for BSON object", theEnd - nextjsobj > 3 );

.. error:: 10304

   :message: "Client Error: Remaining data too small for BSON object"
   :severity: Info
   :module: :source:`src/mongo/db/dbmessage.h#L199`

.. line: massert( 10305 ,  "Client Error: Invalid object size", js.objsize() > 3 );

.. error:: 10305

   :message: "Client Error: Invalid object size"
   :severity: Info
   :module: :source:`src/mongo/db/dbmessage.h#L201`

.. line: massert( 10306 ,  "Client Error: Next object larger than space left in message",

.. error:: 10306

   :message: "Client Error: Next object larger than space left in message"
   :severity: Info
   :module: :source:`src/mongo/db/dbmessage.h#L202`

.. line: massert( 10307 , "Client Error: bad object in message", false);

.. error:: 10307

   :message: "Client Error: bad object in message"
   :severity: Info
   :module: :source:`src/mongo/db/dbmessage.h#L205`

.. line: uasserted( 10309 , str::stream() << "Unable to create/open lock file: " << name << ' ' << errnoWithDescription() << " Is a mongod instance already running?" );

.. error:: 10309

   :message: str::stream() << "Unable to create/open lock file: " << name << ' ' << errnoWithDescription() << " Is a mongod instance already running?" );
   :throws: UserException
   :module: :source:`src/mongo/db/instance.cpp#L1132`

.. line: uassert( 10310 ,  "Unable to lock file: " + name + ". Is a mongod instance already running?",  0 );

.. error:: 10310

   :message: "Unable to lock file: " + name + ". Is a mongod instance already running?",  0 );
   :throws: UserException
   :module: :source:`src/mongo/db/instance.cpp#L1137`

.. line: massert( 10311 ,  message.c_str(), false );

.. error:: 10311

   :message: message.c_str(), false );
   :severity: Info
   :module: :source:`src/mongo/db/jsobj.cpp#L99`

.. line: massert( 10312 ,  message.c_str(), false );

.. error:: 10312

   :message: message.c_str(), false );
   :severity: Info
   :module: :source:`src/mongo/db/jsobj.cpp#L257`

.. line: massert( 10313 ,  "Insufficient bytes to calculate element size", maxLen == -1 || remain > 3 );

.. error:: 10313

   :message: "Insufficient bytes to calculate element size"
   :severity: Info
   :module: :source:`src/mongo/bson/bson-inl.h#L551`

.. line: massert( 10314 ,  "Insufficient bytes to calculate element size", maxLen == -1 || remain > 3 );

.. error:: 10314

   :message: "Insufficient bytes to calculate element size"
   :severity: Info
   :module: :source:`src/mongo/bson/bson-inl.h#L555`

.. line: massert( 10315 ,  "Insufficient bytes to calculate element size", maxLen == -1 || remain > 3 );

.. error:: 10315

   :message: "Insufficient bytes to calculate element size"
   :severity: Info
   :module: :source:`src/mongo/bson/bson-inl.h#L560`

.. line: massert( 10316 ,  "Insufficient bytes to calculate element size", maxLen == -1 || remain > 3 );

.. error:: 10316

   :message: "Insufficient bytes to calculate element size"
   :severity: Info
   :module: :source:`src/mongo/bson/bson-inl.h#L565`

.. line: massert( 10317 ,  "Insufficient bytes to calculate element size", maxLen == -1 || remain > 3 );

.. error:: 10317

   :message: "Insufficient bytes to calculate element size"
   :severity: Info
   :module: :source:`src/mongo/bson/bson-inl.h#L569`

.. line: //massert( 10318 ,  "Invalid regex string", len1 != -1 ); // ERH - 4/28/10 - don't think this does anything

.. error:: 10318

   :message: "Invalid regex string"
   :severity: Info
   :module: :source:`src/mongo/bson/bson-inl.h#L575`

.. line: //massert( 10319 ,  "Invalid regex options string", len2 != -1 ); // ERH - 4/28/10 - don't think this does anything

.. error:: 10319

   :message: "Invalid regex options string"
   :severity: Info
   :module: :source:`src/mongo/bson/bson-inl.h#L585`

.. line: massert(10320 , msg.c_str(),false);

.. error:: 10320

   :message: msg.c_str(),false);
   :severity: Info
   :module: :source:`src/mongo/bson/bson-inl.h#L659`

.. line: massert( 10322 ,  "Invalid CodeWScope size", totalSize >= 8 );

.. error:: 10322

   :message: "Invalid CodeWScope size"
   :severity: Info
   :module: :source:`src/mongo/bson/bson-inl.h#L501`

.. line: massert( 10323 ,  "Invalid CodeWScope string size", totalSize >= strSizeWNull + 4 + 4 );

.. error:: 10323

   :message: "Invalid CodeWScope string size"
   :severity: Info
   :module: :source:`src/mongo/bson/bson-inl.h#L503`

.. line: massert( 10324 ,  "Invalid CodeWScope string size",

.. error:: 10324

   :message: "Invalid CodeWScope string size"
   :severity: Info
   :module: :source:`src/mongo/bson/bson-inl.h#L504`

.. line: massert( 10325 ,  "Invalid CodeWScope size", totalSize >= strSizeWNull + 4 + 4 + 4 );

.. error:: 10325

   :message: "Invalid CodeWScope size"
   :severity: Info
   :module: :source:`src/mongo/bson/bson-inl.h#L507`

.. line: massert( 10326 ,  "Invalid CodeWScope object size", totalSize == 4 + 4 + strSizeWNull + objSize );

.. error:: 10326

   :message: "Invalid CodeWScope object size"
   :severity: Info
   :module: :source:`src/mongo/bson/bson-inl.h#L509`

.. line: massert( 10327 ,  "Object does not end with EOO", i.moreWithEOO() );

.. error:: 10327

   :message: "Object does not end with EOO"
   :severity: Info
   :module: :source:`src/mongo/bson/bson-inl.h#L458`

.. line: massert( 10328 ,  "Invalid element size", e.size() > 0 );

.. error:: 10328

   :message: "Invalid element size"
   :severity: Info
   :module: :source:`src/mongo/bson/bson-inl.h#L460`

.. line: massert( 10329 ,  "Element too large", e.size() < ( 1 << 30 ) );

.. error:: 10329

   :message: "Element too large"
   :severity: Info
   :module: :source:`src/mongo/bson/bson-inl.h#L461`

.. line: massert( 10330 ,  "Element extends past end of object",

.. error:: 10330

   :message: "Element extends past end of object"
   :severity: Info
   :module: :source:`src/mongo/bson/bson-inl.h#L463`

.. line: massert( 10331 ,  "EOO Before end of object", end );

.. error:: 10331

   :message: "EOO Before end of object"
   :severity: Info
   :module: :source:`src/mongo/bson/bson-inl.h#L468`

.. line: massert( 10332 ,  "Expected CurrentTime type", _element.type() == Timestamp );

.. error:: 10332

   :message: "Expected CurrentTime type"
   :severity: Info
   :module: :source:`src/mongo/db/instance.cpp#L111`

.. line: uassert( 10333 ,  "Invalid field name", size != -1 );

.. error:: 10333

   :message: "Invalid field name"
   :throws: UserException
   :module: :source:`src/mongo/bson/bsonelement.h#L439`

.. line: massert( 10334 , ss.str() , 0 );

.. error:: 10334

   :message: ss.str() , 0 );
   :severity: Info
   :module: :source:`src/mongo/bson/bson-inl.h#L217`

.. line: massert( 10335 , "builder does not own memory", own );

.. error:: 10335

   :message: "builder does not own memory"
   :severity: Info
   :module: :source:`src/mongo/bson/bsonobjbuilder.h#L554`

.. line: massert( 10336 ,  "No subobject started", _s.subobjStarted() );

.. error:: 10336

   :message: "No subobject started"
   :severity: Info
   :module: :source:`src/mongo/bson/bsonobjbuilder.h#L629`

.. line: #define CHECK_OBJECT( o , msg ) massert( 10337 ,  (string)"object not valid" + (msg) , (o).isValid() )

.. error:: 10337

   :message: (string)"object not valid" + (msg) , (o).isValid() )
   :severity: Info
   :module: :source:`src/mongo/client/dbclient.cpp#L1091`

.. line: massert( 10338 ,  "Invalid use of reserved field name: " + name,

.. error:: 10338

   :message: "Invalid use of reserved field name: " + name,
   :severity: Info
   :module: :source:`src/mongo/db/json.cpp#L233`

.. line: massert( 10339 ,  "Badly formatted bindata", ( end - start ) % 4 == 0 );

.. error:: 10339

   :message: "Badly formatted bindata"
   :severity: Info
   :module: :source:`src/mongo/db/json.cpp#L406`

.. line: massert( 10341 ,  "code has to be set first!" , ! _jsCode.empty() );

.. error:: 10341

   :message: "code has to be set first!"
   :severity: Info
   :module: :source:`src/mongo/db/matcher.cpp#L90`

.. line: massert( 10342 ,  "pcre not compiled with utf8 support" , ret );

.. error:: 10342

   :message: "pcre not compiled with utf8 support"
   :severity: Info
   :module: :source:`src/mongo/db/matcher.cpp#L1315`

.. line: massert( 10343, "bad lenForNewNsFiles", lenForNewNsFiles >= 1024*1024 );

.. error:: 10343

   :message: "bad lenForNewNsFiles"
   :severity: Info
   :module: :source:`src/mongo/db/namespace_details.cpp#L178`

.. line: massert( 10345 ,  "passes >= maxPasses in capped collection alloc", false );

.. error:: 10345

   :message: "passes >= maxPasses in capped collection alloc"
   :severity: Info
   :module: :source:`src/mongo/db/cap.cpp#L266`

.. line: massert( 10346 , "not implemented", false);

.. error:: 10346

   :message: "not implemented"
   :severity: Info
   :module: :source:`src/mongo/db/namespace_details.cpp#L568`

.. line: massert( 10348 , "$extra: ns name too long", s.size() < MaxNsLen);

.. error:: 10348

   :message: "$extra: ns name too long"
   :severity: Info
   :module: :source:`src/mongo/db/namespace-inl.h#L45`

.. line: massert( 10349 , "E12000 idxNo fails", false);

.. error:: 10349

   :message: "E12000 idxNo fails"
   :severity: Info
   :module: :source:`src/mongo/db/namespace_details-inl.h#L55`

.. line: massert( 10350 ,  "allocExtra: base ns missing?", d );

.. error:: 10350

   :message: "allocExtra: base ns missing?"
   :severity: Info
   :module: :source:`src/mongo/db/namespace_details.cpp#L492`

.. line: massert( 10351 ,  "allocExtra: extra already exists", ht->get(extra) == 0 );

.. error:: 10351

   :message: "allocExtra: extra already exists"
   :severity: Info
   :module: :source:`src/mongo/db/namespace_details.cpp#L493`

.. line: massert( 10352 , "Security is a singleton class", ++n == 1);

.. error:: 10352

   :message: "Security is a singleton class"
   :severity: Info
   :module: :source:`src/mongo/db/nonce.cpp#L33`

.. line: massert( 10353 , std::string("can't open dev/urandom: ") + strerror(errno), 0 );

.. error:: 10353

   :message: std::string("can't open dev/urandom: ") + strerror(errno), 0 );
   :severity: Info
   :module: :source:`src/mongo/db/nonce.cpp#L44`

.. line: massert( 10354 , "md5 unit test fails", false);

.. error:: 10354

   :message: "md5 unit test fails"
   :severity: Info
   :module: :source:`src/mongo/db/nonce.cpp#L53`

.. line: massert(10355 , "devrandom failed", !_devrandom->fail());

.. error:: 10355

   :message: "devrandom failed"
   :severity: Info
   :module: :source:`src/mongo/db/nonce.cpp#L62`

.. line: massert( 10356 ,  str::stream() << "invalid ns: " << ns , NamespaceString::validCollectionName(ns));

.. error:: 10356

   :message: str::stream() << "invalid ns: " << ns , NamespaceString::validCollectionName(ns));
   :severity: Info
   :module: :source:`src/mongo/db/pdfile.cpp#L353`

.. line: massert( 10357 ,  "shutdown in progress", ! inShutdown() );

.. error:: 10357

   :message: "shutdown in progress"
   :severity: Info
   :module: :source:`src/mongo/db/pdfile.cpp#L514`

.. line: massert( 10358 ,  "bad new extent size", approxSize >= Extent::minSize() && approxSize <= Extent::maxSize() );

.. error:: 10358

   :message: "bad new extent size"
   :severity: Info
   :module: :source:`src/mongo/db/pdfile.cpp#L515`

.. line: massert( 10359 ,  "header==0 on new extent: 32 bit mmap space exceeded?", header() ); // null if file open failed

.. error:: 10359

   :message: "header==0 on new extent: 32 bit mmap space exceeded?"
   :severity: Info
   :module: :source:`src/mongo/db/pdfile.cpp#L516`

.. line: massert( 10360 ,  "Extent::reset bad magic value", magic == 0x41424344 );

.. error:: 10360

   :message: "Extent::reset bad magic value"
   :severity: Info
   :module: :source:`src/mongo/db/pdfile.cpp#L663`

.. line: massert( 10361 , "can't create .$freelist", freeExtents);

.. error:: 10361

   :message: "can't create .$freelist"
   :severity: Info
   :module: :source:`src/mongo/db/pdfile.cpp#L872`

.. line: massert( 10363 ,  "newCursor() with start location not implemented for indexed plans", startLoc.isNull() );

.. error:: 10363

   :message: "newCursor() with start location not implemented for indexed plans"
   :severity: Info
   :module: :source:`src/mongo/db/queryoptimizer.cpp#L292`

.. line: massert( 10364 ,  "newReverseCursor() not implemented for indexed plans", false );

.. error:: 10364

   :message: "newReverseCursor() not implemented for indexed plans"
   :severity: Info
   :module: :source:`src/mongo/db/queryoptimizer.cpp#L315`

.. line: massert( 10365 ,  errmsg, indexDetailsForRange( _qps.frsp().ns(), errmsg, _min, _max,

.. error:: 10365

   :message: errmsg, indexDetailsForRange( _qps.frsp().ns(), errmsg, _min, _max,
   :severity: Info
   :module: :source:`src/mongo/db/queryoptimizer.cpp#L742`

.. line: uassert( 10366, "natural order cannot be specified with $min/$max",

.. error:: 10366

   :message: "natural order cannot be specified with $min/$max"
   :throws: UserException
   :module: :source:`src/mongo/db/queryoptimizer.cpp#L623`

.. line: uassert( 10367 ,  errmsg, idx );

.. error:: 10367

   :message: errmsg, idx );
   :throws: UserException
   :module: :source:`src/mongo/db/queryoptimizer.cpp#L635`

.. line: massert( 10368 ,  "Unable to locate previously recorded index", p );

.. error:: 10368

   :message: "Unable to locate previously recorded index"
   :severity: Info
   :module: :source:`src/mongo/db/queryoptimizer.cpp#L696`

.. line: massert( 10369 ,  "no plans", _plans._plans.size() > 0 );

.. error:: 10369

   :message: "no plans"
   :severity: Info
   :module: :source:`src/mongo/db/queryoptimizer.cpp#L1018`

.. line: uassert( 10370 ,  "$all requires array", e.type() == Array );

.. error:: 10370

   :message: "$all requires array"
   :throws: UserException
   :module: :source:`src/mongo/db/queryutil.cpp#L364`

.. line: massert( 10371 , "can only add to Projection once", _source.isEmpty());

.. error:: 10371

   :message: "can only add to Projection once"
   :severity: Info
   :module: :source:`src/mongo/db/projection.cpp#L26`

.. line: massert( 10384 , "--only requires use of --source", cmdLine.only.empty());

.. error:: 10384

   :message: "--only requires use of --source"
   :severity: Info
   :module: :source:`src/mongo/db/repl.cpp#L409`

.. line: massert( 10385 ,  "Unable to get database list", ok );

.. error:: 10385

   :message: "Unable to get database list"
   :severity: Info
   :module: :source:`src/mongo/db/repl.cpp#L465`

.. line: massert( 10386 ,  "non Date ts found: " + last.toString(), ts.type() == Date || ts.type() == Timestamp );

.. error:: 10386

   :message: "non Date ts found: " + last.toString(), ts.type() == Date || ts.type() == Timestamp );
   :severity: Info
   :module: :source:`src/mongo/db/repl.cpp#L781`

.. line: massert( 10389 ,  "Unable to get database list", ok );

.. error:: 10389

   :message: "Unable to get database list"
   :severity: Info
   :module: :source:`src/mongo/db/repl.cpp#L810`

.. line: massert( 10390 ,  "got $err reading remote oplog", false );

.. error:: 10390

   :message: "got $err reading remote oplog"
   :severity: Info
   :module: :source:`src/mongo/db/repl.cpp#L900`

.. line: massert( 10391 , "repl: bad object read from remote oplog", false);

.. error:: 10391

   :message: "repl: bad object read from remote oplog"
   :severity: Info
   :module: :source:`src/mongo/db/repl.cpp#L905`

.. line: massert( 10392 , "bad user object? [1]", !u.empty());

.. error:: 10392

   :message: "bad user object? [1]"
   :severity: Info
   :module: :source:`src/mongo/db/repl.cpp#L1080`

.. line: massert( 10393 , "bad user object? [2]", !p.empty());

.. error:: 10393

   :message: "bad user object? [2]"
   :severity: Info
   :module: :source:`src/mongo/db/repl.cpp#L1081`

.. line: massert( 10399 ,  "ModSet::createNewFromMods - RIGHT_SUBFIELD should be impossible" , 0 );

.. error:: 10399

   :message: "ModSet::createNewFromMods - RIGHT_SUBFIELD should be impossible"
   :severity: Info
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L761`

.. line: massert( 10400 ,  "unhandled case" , 0 );

.. error:: 10400

   :message: "unhandled case"
   :severity: Info
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L764`

.. line: massert( 10412 ,

.. error:: 10412

   :message: 
   :severity: Info
   :module: :source:`src/mongo/s/chunk.cpp#L423`

.. line: massert( 10420 ,  "how could chunk manager be null!" , cm );

.. error:: 10420

   :message: "how could chunk manager be null!"
   :severity: Info
   :module: :source:`src/mongo/s/commands_public.cpp#L846`

.. line: massert( 10421,

.. error:: 10421

   :message: 
   :severity: Info
   :module: :source:`src/mongo/s/grid.cpp#L540`

.. line: massert( 10422 ,  "write with bad shard config and no server id!" , clientID.isSet() );

.. error:: 10422

   :message: "write with bad shard config and no server id!"
   :severity: Info
   :module: :source:`src/mongo/s/d_logic.cpp#L110`

.. line: massert( 10427 ,  "invalid writeback message" , msg.header()->valid() );

.. error:: 10427

   :message: "invalid writeback message"
   :severity: Info
   :module: :source:`src/mongo/s/writeback_listener.cpp#L187`

.. line: massert( 10428 ,  "need_authoritative set but in authoritative mode already" , ! authoritative );

.. error:: 10428

   :message: "need_authoritative set but in authoritative mode already"
   :severity: Info
   :module: :source:`src/mongo/s/shard_version.cpp#L246`

.. line: massert( 10429 , errmsg , 0 );

.. error:: 10429

   :message: errmsg , 0 );
   :severity: Info
   :module: :source:`src/mongo/s/shard_version.cpp#L279`

.. line: massert( 10430 ,  "invalid object id: not hex", false );

.. error:: 10430

   :message: "invalid object id: not hex"
   :severity: Info
   :module: :source:`src/mongo/scripting/engine.cpp#L170`

.. line: massert( 10431 ,  "JS_NewContext failed" , _context );

.. error:: 10431

   :message: "JS_NewContext failed"
   :severity: Info
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L1433`

.. line: massert( 10432 ,  "JS_NewObject failed for global" , _global );

.. error:: 10432

   :message: "JS_NewObject failed for global"
   :severity: Info
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L1440`

.. line: massert( 10433 ,  "js init failed" , JS_InitStandardClasses( _context , _global ) );

.. error:: 10433

   :message: "js init failed"
   :severity: Info
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L1442`

.. line: massert( 10437 ,  "unknown exception" , false ); \

.. error:: 10437

   :message: "unknown exception"
   :severity: Info
   :module: :source:`src/mongo/util/assert_util.h#L240`

.. line: massert( 10438 , "ReadFile error - truncated file?", read == len);

.. error:: 10438

   :message: "ReadFile error - truncated file?"
   :severity: Info
   :module: :source:`src/mongo/util/file.h#L117`

.. line: uasserted(10439, "");

.. error:: 10439

   :message: "");
   :throws: UserException
   :module: :source:`src/mongo/util/file_allocator.cpp#L294`

.. line: uassert( 10440 ,  ss.str(), filelen == 0 );

.. error:: 10440

   :message: ss.str(), filelen == 0 );
   :throws: UserException
   :module: :source:`src/mongo/util/file_allocator.cpp#L178`

.. line: uassert( 10441 ,  str::stream() << "Unable to allocate new file of size " << size << ' ' << errnoWithDescription(),

.. error:: 10441

   :message: str::stream() << "Unable to allocate new file of size " << size << ' ' << errnoWithDescription(),
   :throws: UserException
   :module: :source:`src/mongo/util/file_allocator.cpp#L182`

.. line: uassert( 10442 ,  str::stream() << "Unable to allocate new file of size " << size << ' ' << errnoWithDescription(),

.. error:: 10442

   :message: str::stream() << "Unable to allocate new file of size " << size << ' ' << errnoWithDescription(),
   :throws: UserException
   :module: :source:`src/mongo/util/file_allocator.cpp#L184`

.. line: uassert( 10443 , errnoWithPrefix("FileAllocator: file write failed" ), written > 0 );

.. error:: 10443

   :message: errnoWithPrefix("FileAllocator: file write failed" ), written > 0 );
   :throws: UserException
   :module: :source:`src/mongo/util/file_allocator.cpp#L199`

.. line: massert( 10446 , str::stream() << "mmap: can't map area of size 0 file: " << filename, length > 0 );

.. error:: 10446

   :message: str::stream() << "mmap: can't map area of size 0 file: " << filename, length > 0 );
   :severity: Info
   :module: :source:`src/mongo/util/mmap_posix.cpp#L100`

.. line: uassert(10447,  str::stream() << "map file alloc failed, wanted: " << length << " filelen: " << filelen << ' ' << sizeof(size_t), filelen == length );

.. error:: 10447

   :message: str::stream() << "map file alloc failed, wanted: " << length << " filelen: " << filelen << ' ' << sizeof(size_t), filelen == length );
   :throws: UserException
   :module: :source:`src/mongo/util/mmap_posix.cpp#L110`

.. line: massert( 10448 , "invalid object id: length", str.size() == 24 );

.. error:: 10448

   :message: "invalid object id: length"
   :severity: Info
   :module: :source:`src/mongo/scripting/engine.cpp#L161`

.. line: uassert( 11001 , h->dupKeyError( idx , k ) , !dup);

.. error:: 11001

   :message: h->dupKeyError( idx , k ) , !dup);
   :throws: UserException
   :module: :source:`src/mongo/db/index.cpp#L97`

.. line: uassert( 11004 ,  "connection was returned to the pool already" , _conn );

.. error:: 11004

   :message: "connection was returned to the pool already"
   :throws: UserException
   :module: :source:`src/mongo/client/connpool.h#L246`

.. line: uassert( 11005 ,  "connection was returned to the pool already" , _conn );

.. error:: 11005

   :message: "connection was returned to the pool already"
   :throws: UserException
   :module: :source:`src/mongo/client/connpool.h#L252`

.. line: uasserted(11010,string("count fails:") + res.toString());

.. error:: 11010

   :message: string("count fails:") + res.toString());
   :throws: UserException
   :module: :source:`src/mongo/client/dbclient.cpp#L375`

.. line: uasserted(11600,"interrupted at shutdown");

.. error:: 11600

   :message: "interrupted at shutdown"
   :throws: UserException
   :module: :source:`src/mongo/db/curop.cpp#L189`

.. line: uasserted(11601,"operation was interrupted");

.. error:: 11601

   :message: "operation was interrupted"
   :throws: UserException
   :module: :source:`src/mongo/db/curop.cpp#L191`

.. line: uassert(12000, "rs slaveDelay differential too big check clocks and systems", sleeptime < 0x40000000);

.. error:: 12000

   :message: "rs slaveDelay differential too big check clocks and systems"
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_sync.cpp#L442`

.. line: uassert( 12001 , "E12001 can't sort with $snapshot", _order.isEmpty() );

.. error:: 12001

   :message: "E12001 can't sort with $snapshot"
   :throws: UserException
   :module: :source:`src/mongo/db/queryutil.h#L213`

.. line: uassert( 12002 , "E12002 can't use hint with $snapshot", _hint.isEmpty() );

.. error:: 12002

   :message: "E12002 can't use hint with $snapshot"
   :throws: UserException
   :module: :source:`src/mongo/db/queryutil.h#L214`

.. line: uassert(12050, "cannot delete from system namespace", legalClientSystemNS( ns , true ) );

.. error:: 12050

   :message: "cannot delete from system namespace"
   :throws: UserException
   :module: :source:`src/mongo/db/ops/delete.cpp#L40`

.. line: uassert( 12051, "clientcursor already in use? driver problem?",

.. error:: 12051

   :message: "clientcursor already in use? driver problem?"
   :throws: UserException
   :module: :source:`src/mongo/db/clientcursor.h#L96`

.. line: throw UserException(123, ErrorMsg("blah", num_val));

.. error:: 123

   :message: ErrorMsg("blah", num_val));
   :throws: UserException
   :module: :source:`src/mongo/util/assert_util.h#L72`

.. line: uasserted( 12376,

.. error:: 12376

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/s/strategy_shard.cpp#L664`

.. line: uasserted(12501, "quota exceeded");

.. error:: 12501

   :message: "quota exceeded"
   :throws: UserException
   :module: :source:`src/mongo/db/database.cpp#L326`

.. line: uasserted( 12502, "can't drop system ns" );

.. error:: 12502

   :message: "can't drop system ns"
   :throws: UserException
   :module: :source:`src/mongo/db/pdfile.cpp#L902`

.. line: uasserted(12503,ss.str());

.. error:: 12503

   :message: ss.str());
   :throws: UserException
   :module: :source:`src/mongo/db/pdfile.cpp#L940`

.. line: uasserted(12504, s);

.. error:: 12504

   :message: s);
   :throws: UserException
   :module: :source:`src/mongo/db/index.cpp#L323`

.. line: uasserted(12505,s);

.. error:: 12505

   :message: s);
   :throws: UserException
   :module: :source:`src/mongo/db/index.cpp#L353`

.. line: throw UserException( 12509, (string)"don't know what this is: " + field );

.. error:: 12509

   :message: (string)"don't know what this is: " + field );
   :throws: UserException
   :module: :source:`src/mongo/scripting/engine_v8.cpp#L654`

.. line: throw UserException( 12510, "externalSetup already called, can't call externalSetup" );

.. error:: 12510

   :message: "externalSetup already called, can't call externalSetup" );
   :throws: UserException
   :module: :source:`src/mongo/scripting/engine_v8.cpp#L955`

.. line: throw UserException( 12511, "localConnect called with a different name previously" );

.. error:: 12511

   :message: "localConnect called with a different name previously" );
   :throws: UserException
   :module: :source:`src/mongo/scripting/engine_v8.cpp#L959`

.. line: throw UserException( 12512, "localConnect already called, can't call externalSetup" );

.. error:: 12512

   :message: "localConnect already called, can't call externalSetup" );
   :throws: UserException
   :module: :source:`src/mongo/scripting/engine_v8.cpp#L978`

.. line: uassert( 12513, "connect failed", scope.exec( _dbConnect , "(connect)" , false , true , false ) );

.. error:: 12513

   :message: "connect failed"
   :throws: UserException
   :module: :source:`src/mongo/shell/shell_utils.cpp#L151`

.. line: uassert( 12514, "login failed", scope.exec( _dbAuth , "(auth)" , true , true , false ) );

.. error:: 12514

   :message: "login failed"
   :throws: UserException
   :module: :source:`src/mongo/shell/shell_utils.cpp#L154`

.. line: uassert(12515, "can't remove and update", cmdObj["update"].eoo());

.. error:: 12515

   :message: "can't remove and update"
   :throws: UserException
   :module: :source:`src/mongo/db/commands/find_and_modify.cpp#L258`

.. line: uassert(12516, "must specify remove or update", !update.eoo());

.. error:: 12516

   :message: "must specify remove or update"
   :throws: UserException
   :module: :source:`src/mongo/db/commands/find_and_modify.cpp#L290`

.. line: uassert( 12517 , "$elemMatch needs an Object" , m.type() == Object );

.. error:: 12517

   :message: "$elemMatch needs an Object"
   :throws: UserException
   :module: :source:`src/mongo/db/matcher.cpp#L162`

.. line: uassert( 12518, "srand requires a single numeric argument",

.. error:: 12518

   :message: "srand requires a single numeric argument"
   :throws: UserException
   :module: :source:`src/mongo/shell/shell_utils.cpp#L97`

.. line: uassert( 12519, "rand accepts no arguments", a.nFields() == 0 );

.. error:: 12519

   :message: "rand accepts no arguments"
   :throws: UserException
   :module: :source:`src/mongo/shell/shell_utils.cpp#L108`

.. line: massert( 12521, "internal error: use of an unlocked ClientCursor", c == 0 || c->_pinValue );

.. error:: 12521

   :message: "internal error: use of an unlocked ClientCursor"
   :severity: Info
   :module: :source:`src/mongo/db/clientcursor.h#L328`

.. line: uassert( 12522 , "$ operator made object too large" , newObj.objsize() <= BSONObjMaxUserSize );

.. error:: 12522

   :message: "$ operator made object too large"
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update.cpp#L45`

.. line: uassert(12523, "no index name specified", *name);

.. error:: 12523

   :message: "no index name specified"
   :throws: UserException
   :module: :source:`src/mongo/db/index.cpp#L304`

.. line: uassert(12524, "index key pattern too large", key.objsize() <= 2048);

.. error:: 12524

   :message: "index key pattern too large"
   :throws: UserException
   :module: :source:`src/mongo/db/index.cpp#L313`

.. line: uassert( 12527 , "not okForStorage" , e.embeddedObject().okForStorage() );

.. error:: 12527

   :message: "not okForStorage"
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.h#L212`

.. line: throw UserException( 12528 , (string)"should be ok for storage:" + s );

.. error:: 12528

   :message: (string)"should be ok for storage:" + s );
   :throws: UserException
   :module: :source:`src/mongo/dbtests/jsobjtests.cpp#L2026`

.. line: throw UserException( 12529 , (string)"should NOT be ok for storage:" + s );

.. error:: 12529

   :message: (string)"should NOT be ok for storage:" + s );
   :throws: UserException
   :module: :source:`src/mongo/dbtests/jsobjtests.cpp#L2033`

.. line: uassert( 12579, "unhandled cases in BSONObj okForStorage" , 0 );

.. error:: 12579

   :message: "unhandled cases in BSONObj okForStorage"
   :throws: UserException
   :module: :source:`src/mongo/db/jsobj.cpp#L869`

.. line: uassert( 12580 , "invalid query" , e.isABSONObj() );

.. error:: 12580

   :message: "invalid query"
   :throws: UserException
   :module: :source:`src/mongo/db/queryutil.cpp#L174`

.. line: uassert( 12581, msg.c_str(), boost::filesystem::exists( root ) );

.. error:: 12581

   :message: msg.c_str(), boost::filesystem::exists( root ) );
   :throws: UserException
   :module: :source:`src/mongo/shell/shell_utils_extended.cpp#L54`

.. line: uassert( 12582, "duplicate key insert for unique index of capped collection",

.. error:: 12582

   :message: "duplicate key insert for unique index of capped collection"
   :throws: UserException
   :module: :source:`src/mongo/db/pdfile.cpp#L1239`

.. line: massert( 12583, "unexpected index insertion failure on capped collection", !d->isCapped() );

.. error:: 12583

   :message: "unexpected index insertion failure on capped collection"
   :severity: Info
   :module: :source:`src/mongo/db/pdfile.cpp#L1545`

.. line: uasserted(12584, "cursor gone during bg index");

.. error:: 12584

   :message: "cursor gone during bg index"
   :throws: UserException
   :module: :source:`src/mongo/db/index_update.cpp#L406`

.. line: uasserted(12585, "cursor gone during bg index; dropDups");

.. error:: 12585

   :message: "cursor gone during bg index; dropDups"
   :throws: UserException
   :module: :source:`src/mongo/db/index_update.cpp#L385`

.. line: uassert(12586, "cannot perform operation: a background operation is currently running for this database",

.. error:: 12586

   :message: "cannot perform operation: a background operation is currently running for this database"
   :throws: UserException
   :module: :source:`src/mongo/db/pdfile.cpp#L111`

.. line: uassert(12587, "cannot perform operation: a background operation is currently running for this collection",

.. error:: 12587

   :message: "cannot perform operation: a background operation is currently running for this collection"
   :throws: UserException
   :module: :source:`src/mongo/db/pdfile.cpp#L116`

.. line: uassert(12588, "cannot add index with a background operation in progress",

.. error:: 12588

   :message: "cannot add index with a background operation in progress"
   :throws: UserException
   :module: :source:`src/mongo/db/index.cpp#L359`

.. line: uassert( 12590 ,  ss.str().c_str(), boost::filesystem::exists( repairpath ) );

.. error:: 12590

   :message: ss.str().c_str(), boost::filesystem::exists( repairpath ) );
   :throws: UserException
   :module: :source:`src/mongo/db/db.cpp#L491`

.. line: uassert( 12591,

.. error:: 12591

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L467`

.. line: uassert( 12592 ,  "$addToSet can only be applied to an array" , in.type() == Array );

.. error:: 12592

   :message: "$addToSet can only be applied to an array"
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L133`

.. line: massert( 12594 ,  "how could chunk manager be null!" , cm );

.. error:: 12594

   :message: "how could chunk manager be null!"
   :severity: Info
   :module: :source:`src/mongo/s/commands_public.cpp#L579`

.. line: uassert( 12596 , "old lock file" , 0 );

.. error:: 12596

   :message: "old lock file"
   :throws: UserException
   :module: :source:`src/mongo/db/instance.cpp#L1203`

.. line: uassert( 12597 , "need to specify 1 argument" , args.nFields() == 1 );

.. error:: 12597

   :message: "need to specify 1 argument"
   :throws: UserException
   :module: :source:`src/mongo/shell/shell_utils.cpp#L55`

.. line: uassert( 12598 , "$eval reads unauthorized", ai->isAuthorizedReads(dbname.c_str()) );

.. error:: 12598

   :message: "$eval reads unauthorized"
   :throws: UserException
   :module: :source:`src/mongo/db/dbeval.cpp#L122`

.. line: massert( 12601 , "CurOp not marked done yet" , ! _active );

.. error:: 12601

   :message: "CurOp not marked done yet"
   :severity: Info
   :module: :source:`src/mongo/db/curop.h#L192`

.. line: massert( 13000 , (string)"invalid keyNode: " +  BSON( "i" << i << "n" << this->n ).jsonString() , i < this->n );

.. error:: 13000

   :message: (string)"invalid keyNode: " +  BSON( "i" << i << "n" << this->n ).jsonString() , i < this->n );
   :severity: Info
   :module: :source:`src/mongo/db/btree.h#L364`

.. line: massert( 13002 ,  "shard internal error chunk manager should never be null" , cm );

.. error:: 13002

   :message: "shard internal error chunk manager should never be null"
   :severity: Info
   :module: :source:`src/mongo/s/commands_public.cpp#L704`

.. line: uassert( 13003 , "can't split a chunk with only one distinct value" , _min.woCompare(_max) );

.. error:: 13003

   :message: "can't split a chunk with only one distinct value"
   :throws: UserException
   :module: :source:`src/mongo/s/chunk.cpp#L270`

.. line: uassert( 13004 , str::stream() << "sent negative cursors to kill: " << n  , n >= 1 );

.. error:: 13004

   :message: str::stream() << "sent negative cursors to kill: " << n  , n >= 1 );
   :throws: UserException
   :module: :source:`src/mongo/db/instance.cpp#L500`

.. line: uassert( 13006, "isWindows accepts no arguments", a.nFields() == 0 );

.. error:: 13006

   :message: "isWindows accepts no arguments"
   :throws: UserException
   :module: :source:`src/mongo/shell/shell_utils.cpp#L119`

.. line: uassert( 13007 , "can only have 1 index plugin / bad index key pattern" , pluginName.size() == 0 || pluginName == e.String() );

.. error:: 13007

   :message: "can only have 1 index plugin / bad index key pattern"
   :throws: UserException
   :module: :source:`src/mongo/db/indexkey.cpp#L65`

.. line: uassert( 13008, "must call copydbgetnonce first", authConn_.get() );

.. error:: 13008

   :message: "must call copydbgetnonce first"
   :throws: UserException
   :module: :source:`src/mongo/db/cloner.cpp#L703`

.. line: uassert( 13020 , "with $all, can't mix $elemMatch and others" , _myset->size() == 0 && !_myregex.get());

.. error:: 13020

   :message: "with $all, can't mix $elemMatch and others"
   :throws: UserException
   :module: :source:`src/mongo/db/matcher.cpp#L215`

.. line: uassert( 13022 , "can't have 2 geo field" , _geo.size() == 0 );

.. error:: 13022

   :message: "can't have 2 geo field"
   :throws: UserException
   :module: :source:`src/mongo/db/geo/2d.cpp#L120`

.. line: uassert( 13023 , "2d has to be first in index" , _other.size() == 0 );

.. error:: 13023

   :message: "2d has to be first in index"
   :throws: UserException
   :module: :source:`src/mongo/db/geo/2d.cpp#L121`

.. line: uassert( 13024 , "no geo field specified" , _geo.size() );

.. error:: 13024

   :message: "no geo field specified"
   :throws: UserException
   :module: :source:`src/mongo/db/geo/2d.cpp#L130`

.. line: uassert( 13026 , "geo values have to be numbers: " + o.toString() , x.isNumber() && y.isNumber() );

.. error:: 13026

   :message: "geo values have to be numbers: " + o.toString() , x.isNumber() && y.isNumber() );
   :throws: UserException
   :module: :source:`src/mongo/db/geo/2d.cpp#L333`

.. line: uassert( 13027 , str::stream() << "point not in interval of [ " << _min << ", " << _max << " ]", in <= _max && in >= _min );

.. error:: 13027

   :message: str::stream() << "point not in interval of [ " << _min << ", " << _max << " ]", in <= _max && in >= _min );
   :throws: UserException
   :module: :source:`src/mongo/db/geo/2d.cpp#L356`

.. line: uassert( 13028 , "bits in geo index must be between 1 and 32" , bits > 0 && bits <= 32 );

.. error:: 13028

   :message: "bits in geo index must be between 1 and 32"
   :throws: UserException
   :module: :source:`src/mongo/db/geo/2d.cpp#L134`

.. line: uassert( 13029, "can't use $not with $options, use BSON regex type instead", !isNot );

.. error:: 13029

   :message: "can't use $not with $options, use BSON regex type instead"
   :throws: UserException
   :module: :source:`src/mongo/db/matcher.cpp#L362`

.. line: uassert( 13030, "$not cannot be empty", k.more() );

.. error:: 13030

   :message: "$not cannot be empty"
   :throws: UserException
   :module: :source:`src/mongo/db/matcher.cpp#L479`

.. line: uassert( 13031, "invalid use of $not", false );

.. error:: 13031

   :message: "invalid use of $not"
   :throws: UserException
   :module: :source:`src/mongo/db/matcher.cpp#L489`

.. line: uassert( 13032, "can't use $not with $regex, use BSON regex type instead", !isNot );

.. error:: 13032

   :message: "can't use $not with $regex, use BSON regex type instead"
   :throws: UserException
   :module: :source:`src/mongo/db/matcher.cpp#L351`

.. line: uassert( 13033 , "can't have 2 special fields" , s.size() == 0 );

.. error:: 13033

   :message: "can't have 2 special fields"
   :throws: UserException
   :module: :source:`src/mongo/db/queryutil.cpp#L764`

.. line: uassert( 13034, "invalid use of $not",

.. error:: 13034

   :message: "invalid use of $not"
   :throws: UserException
   :module: :source:`src/mongo/db/queryutil.cpp#L902`

.. line: uassert( 13038, (string)"can't find special index: " + special +

.. error:: 13038

   :message: (string)"can't find special index: " + special +
   :throws: UserException
   :module: :source:`src/mongo/db/queryoptimizer.cpp#L659`

.. line: massert( 13040 , (string)"no type for special: " + _special , _type );

.. error:: 13040

   :message: (string)"no type for special: " + _special , _type );
   :severity: Info
   :module: :source:`src/mongo/db/queryoptimizer.cpp#L160`

.. line: uassert( 13041, "invalid use of $not", false );

.. error:: 13041

   :message: "invalid use of $not"
   :throws: UserException
   :module: :source:`src/mongo/db/queryutil.cpp#L912`

.. line: throw UserException( 13042 , (string)"missing geo field (" + _geo + ") in : " + query.toString() );

.. error:: 13042

   :message: (string)"missing geo field (" + _geo + ") in : " + query.toString() );
   :throws: UserException
   :module: :source:`src/mongo/db/geo/2d.cpp#L2866`

.. line: massert( 13044, "no ts field in query", !tsElt.eoo() );

.. error:: 13044

   :message: "no ts field in query"
   :severity: Info
   :module: :source:`src/mongo/db/oplog.cpp#L530`

.. line: uassert(13046, "'near' param missing/invalid", !cmdObj["near"].eoo());

.. error:: 13046

   :message: "'near' param missing/invalid"
   :throws: UserException
   :module: :source:`src/mongo/db/geo/2d.cpp#L2922`

.. line: uassert(13047,"wrong type for geo index. if you're using a pre-release version, need to rebuild index",0);

.. error:: 13047

   :message: "wrong type for geo index. if you're using a pre-release version, need to rebuild index"
   :throws: UserException
   :module: :source:`src/mongo/db/geo/core.h#L106`

.. line: uasserted( 13048, (std::string)"can't append to array using string field name [" + name.data() + "]" );

.. error:: 13048

   :message: (std::string)"can't append to array using string field name [" + name.data() + "]" );
   :throws: UserException
   :module: :source:`src/mongo/bson/bsonobjbuilder.h#L828`

.. line: uassert( 13049, "godinsert must specify a collection", !coll.empty() );

.. error:: 13049

   :message: "godinsert must specify a collection"
   :throws: UserException
   :module: :source:`src/mongo/db/dbcommands.cpp#L1681`

.. line: uassert( 13050, "$all requires array", op.type() == Array );

.. error:: 13050

   :message: "$all requires array"
   :throws: UserException
   :module: :source:`src/mongo/db/queryutil.cpp#L876`

.. line: uassert( 13051, "tailable cursor requested on non capped collection", d && d->isCapped() );

.. error:: 13051

   :message: "tailable cursor requested on non capped collection"
   :throws: UserException
   :module: :source:`src/mongo/db/ops/query.cpp#L993`

.. line: uassert( 13052, "only {$natural:1} order allowed for tailable cursor", order == nat1 );

.. error:: 13052

   :message: "only {$natural:1} order allowed for tailable cursor"
   :throws: UserException
   :module: :source:`src/mongo/db/ops/query.cpp#L999`

.. line: uassert( 13053 , str::stream() << "help failed: " << info , _commandOnActive( "admin" , BSON( name << "1" << "help" << 1 ) , info ) );

.. error:: 13053

   :message: str::stream() << "help failed: " << info , _commandOnActive( "admin" , BSON( name << "1" << "help" << 1 ) , info ) );
   :throws: UserException
   :module: :source:`src/mongo/client/syncclusterconnection.cpp#L469`

.. line: uassert( 13054 , (string)"write $cmd not supported in SyncClusterConnection::query for:" + cmdName , lockType <= 0 );

.. error:: 13054

   :message: (string)"write $cmd not supported in SyncClusterConnection::query for:" + cmdName , lockType <= 0 );
   :throws: UserException
   :module: :source:`src/mongo/client/syncclusterconnection.cpp#L289`

.. line: uassert(13056, "Async flushing not supported on windows", sync);

.. error:: 13056

   :message: "Async flushing not supported on windows"
   :throws: UserException
   :module: :source:`src/mongo/util/mmap_win.cpp#L388`

.. line: uassert( 13057 , "$within has to take an object or array" , e.isABSONObj() );

.. error:: 13057

   :message: "$within has to take an object or array"
   :throws: UserException
   :module: :source:`src/mongo/db/geo/2d.cpp#L2832`

.. line: throw UserException( 13058 , str::stream() << "unknown $within information : " << context << ", a shape must be specified." );

.. error:: 13058

   :message: str::stream() << "unknown $within information : " << context << ", a shape must be specified." );
   :throws: UserException
   :module: :source:`src/mongo/db/geo/2d.cpp#L2856`

.. line: uassert( 13059 , "$center has to take an object or array" , e.isABSONObj() );

.. error:: 13059

   :message: "$center has to take an object or array"
   :throws: UserException
   :module: :source:`src/mongo/db/geo/2d.cpp#L2842`

.. line: uassert( 13060 , "$center needs 2 fields (middle,max distance)" , circle.nFields() == 2 );

.. error:: 13060

   :message: "$center needs 2 fields (middle,max distance)"
   :throws: UserException
   :module: :source:`src/mongo/db/geo/2d.cpp#L2503`

.. line: uassert( 13061 , "need a max distance >= 0 " , _maxDistance >= 0 );

.. error:: 13061

   :message: "need a max distance >= 0 " , _maxDistance >= 0 );
   :throws: UserException
   :module: :source:`src/mongo/db/geo/2d.cpp#L2517`

.. line: uassert( 13063 , "$box needs 2 fields (bottomLeft,topRight)" , box.nFields() == 2 );

.. error:: 13063

   :message: "$box needs 2 fields (bottomLeft,topRight)"
   :throws: UserException
   :module: :source:`src/mongo/db/geo/2d.cpp#L2621`

.. line: uassert( 13064 , "need an area > 0 " , _want.area() > 0 );

.. error:: 13064

   :message: "need an area > 0 " , _want.area() > 0 );
   :throws: UserException
   :module: :source:`src/mongo/db/geo/2d.cpp#L2633`

.. line: uassert( 13065 , "$box has to take an object or array" , e.isABSONObj() );

.. error:: 13065

   :message: "$box has to take an object or array"
   :throws: UserException
   :module: :source:`src/mongo/db/geo/2d.cpp#L2847`

.. line: massert( 13066 ,  "Message contains no documents", theEnd > nextjsobj );

.. error:: 13066

   :message: "Message contains no documents"
   :severity: Info
   :module: :source:`src/mongo/db/dbmessage.h#L197`

.. line: uassert( 13067 , "geo field is empty" , i.more() );

.. error:: 13067

   :message: "geo field is empty"
   :throws: UserException
   :module: :source:`src/mongo/db/geo/2d.cpp#L328`

.. line: uassert( 13068 , "geo field only has 1 element" , i.more() );

.. error:: 13068

   :message: "geo field only has 1 element"
   :throws: UserException
   :module: :source:`src/mongo/db/geo/2d.cpp#L330`

.. line: uassert( 13069 , "an emit can't be more than half max bson size" , args.objsize() < ( BSONObjMaxUserSize / 2 ) );

.. error:: 13069

   :message: "an emit can't be more than half max bson size"
   :throws: UserException
   :module: :source:`src/mongo/db/commands/mr.cpp#L963`

.. line: uassert( 13070 , "value too large to reduce" , ee.size() < ( BSONObjMaxUserSize / 2 ) );

.. error:: 13070

   :message: "value too large to reduce"
   :throws: UserException
   :module: :source:`src/mongo/db/commands/mr.cpp#L175`

.. line: uassert( 13071 , (string)"invalid hostname [" + host + "]" + errmsg , cs.isValid() );

.. error:: 13071

   :message: (string)"invalid hostname [" + host + "]" + errmsg , cs.isValid() );
   :throws: UserException
   :module: :source:`src/mongo/client/connpool.cpp#L218`

.. line: massert(13072,(string)"JS_NewObject failed: " + w ,xx);    \

.. error:: 13072

   :message: (string)"JS_NewObject failed: " + w ,xx);    \
   :severity: Info
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L40`

.. line: massert(13073, "shutting down", !inShutdown() );

.. error:: 13073

   :message: "shutting down"
   :severity: Info
   :module: :source:`src/mongo/db/instance.cpp#L687`

.. line: uassert( 13074 , "db name can't be empty" , ns.size() );

.. error:: 13074

   :message: "db name can't be empty"
   :throws: UserException
   :module: :source:`src/mongo/db/databaseholder.h#L94`

.. line: uassert( 13075 , "db name can't be empty" , i > 0 );

.. error:: 13075

   :message: "db name can't be empty"
   :throws: UserException
   :module: :source:`src/mongo/db/databaseholder.h#L97`

.. line: uassert( 13076 , (string)"recursive toObject" , ! has( o ) );

.. error:: 13076

   :message: (string)"recursive toObject" , ! has( o ) );
   :throws: UserException
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L151`

.. line: uassert(13079, "path to unix socket too long", target.size() < sizeof(as<sockaddr_un>().sun_path));

.. error:: 13079

   :message: "path to unix socket too long"
   :throws: UserException
   :module: :source:`src/mongo/util/net/sock.cpp#L158`

.. line: uassert(13080, "no unix socket support on windows", false);

.. error:: 13080

   :message: "no unix socket support on windows"
   :throws: UserException
   :module: :source:`src/mongo/util/net/sock.cpp#L156`

.. line: massert(13082, str::stream() << "getnameinfo error " << getAddrInfoStrError(ret), ret == 0);

.. error:: 13082

   :message: str::stream() << "getnameinfo error " << getAddrInfoStrError(ret), ret == 0);
   :severity: Info
   :module: :source:`src/mongo/util/net/sock.cpp#L244`

.. line: uassert( 13085 , "query failed for dbwebserver" , cursor.get() );

.. error:: 13085

   :message: "query failed for dbwebserver"
   :throws: UserException
   :module: :source:`src/mongo/db/restapi.cpp#L150`

.. line: uassert( 13086, "$and/$or/$nor must be a nonempty array", e.type() == Array && e.embeddedObject().nFields() > 0 );

.. error:: 13086

   :message: "$and/$or/$nor must be a nonempty array"
   :throws: UserException
   :module: :source:`src/mongo/db/matcher.cpp#L377`

.. line: uassert( 13087, "$and/$or/$nor match element must be an object", f.type() == Object );

.. error:: 13087

   :message: "$and/$or/$nor match element must be an object"
   :throws: UserException
   :module: :source:`src/mongo/db/matcher.cpp#L381`

.. line: massert( 13089 , "no current client needed for $where" , haveClient() );

.. error:: 13089

   :message: "no current client needed for $where"
   :severity: Info
   :module: :source:`src/mongo/db/matcher.cpp#L423`

.. line: massert( 13091 , "how could chunk manager be null!" , cm );

.. error:: 13091

   :message: "how could chunk manager be null!"
   :severity: Info
   :module: :source:`src/mongo/s/commands_public.cpp#L911`

.. line: uassert(13093, "bad --replSet config string format is: <setname>[/<seedhost1>,<seedhost2>,...]", !setname.empty());

.. error:: 13093

   :message: "bad --replSet config string format is: <setname>[/<seedhost1>,<seedhost2>,...]"
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs.cpp#L328`

.. line: uassert(13095, "HostAndPort: bad port #", port > 0);

.. error:: 13095

   :message: "HostAndPort: bad port #"
   :throws: UserException
   :module: :source:`src/mongo/util/net/hostandport.h#L164`

.. line: uassert(13096, "bad --replSet command line config string - dups?", seedSet.count(m) == 0 );

.. error:: 13096

   :message: "bad --replSet command line config string - dups?"
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs.cpp#L347`

.. line: uasserted(13097, string("Unsupported projection option: ") +

.. error:: 13097

   :message: string("Unsupported projection option: ") +
   :throws: UserException
   :module: :source:`src/mongo/db/projection.cpp#L83`

.. line: uassert(13098, "$slice only supports numbers and [skip, limit] arrays", false);

.. error:: 13098

   :message: "$slice only supports numbers and [skip, limit] arrays"
   :throws: UserException
   :module: :source:`src/mongo/db/projection.cpp#L61`

.. line: uassert(13099, "$slice array wrong size", arr.nFields() == 2 );

.. error:: 13099

   :message: "$slice array wrong size"
   :throws: UserException
   :module: :source:`src/mongo/db/projection.cpp#L51`

.. line: uassert(13100, "$slice limit must be positive", limit > 0 );

.. error:: 13100

   :message: "$slice limit must be positive"
   :throws: UserException
   :module: :source:`src/mongo/db/projection.cpp#L56`

.. line: //uassert(13101, "can't use localhost in replset host list", !m.isLocalHost());

.. error:: 13101

   :message: "can't use localhost in replset host list"
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs.cpp#L349`

.. line: uassert( 13102 ,  "connection was returned to the pool already" , _conn );

.. error:: 13102

   :message: "connection was returned to the pool already"
   :throws: UserException
   :module: :source:`src/mongo/client/connpool.h#L258`

.. line: uassert( 13103, "too many compound keys", n <= 31 );

.. error:: 13103

   :message: "too many compound keys"
   :throws: UserException
   :module: :source:`src/mongo/bson/ordering.h#L64`

.. line: throw UserException( 13104 , (string)"SyncClusterConnection::findOne prepare failed: " + errmsg );

.. error:: 13104

   :message: (string)"SyncClusterConnection::findOne prepare failed: " + errmsg );
   :throws: UserException
   :module: :source:`src/mongo/client/syncclusterconnection.cpp#L175`

.. line: throw UserException( 13105 , ss.str() );

.. error:: 13105

   :message: ss.str() );
   :throws: UserException
   :module: :source:`src/mongo/client/syncclusterconnection.cpp#L193`

.. line: uasserted(13106, s);

.. error:: 13106

   :message: s);
   :throws: UserException
   :module: :source:`src/mongo/client/dbclientcursor.h#L80`

.. line: uassert(13107, ss.str(), false);

.. error:: 13107

   :message: ss.str(), false);
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_config.cpp#L532`

.. line: uassert(13108, "bad replset config -- duplicate hosts in the config object?", false);

.. error:: 13108

   :message: "bad replset config -- duplicate hosts in the config object?"
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_config.cpp#L542`

.. line: uasserted(13109, str::stream() << "multiple rows in " << rsConfigNs << " not supported host: " << h.toString());

.. error:: 13109

   :message: str::stream() << "multiple rows in " << rsConfigNs << " not supported host: " << h.toString());
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_config.cpp#L648`

.. line: massert(13110, "HostAndPort: host is empty", *p);

.. error:: 13110

   :message: "HostAndPort: host is empty"
   :severity: Info
   :module: :source:`src/mongo/util/net/hostandport.h#L160`

.. line: uassert(13112, "bad replset heartbeat option", heartbeatSleepMillis >= 10);

.. error:: 13112

   :message: "bad replset heartbeat option"
   :throws: UserException
   :module: :source:`src/mongo/db/repl/health.h#L41`

.. line: uassert(13113, "bad replset heartbeat option", heartbeatTimeoutMillis >= 10);

.. error:: 13113

   :message: "bad replset heartbeat option"
   :throws: UserException
   :module: :source:`src/mongo/db/repl/health.h#L42`

.. line: uassert(13114, "bad --replSet seed hostname", false);

.. error:: 13114

   :message: "bad --replSet seed hostname"
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs.cpp#L345`

.. line: uassert(13115, "bad " + rsConfigNs + " config: version", version > 0);

.. error:: 13115

   :message: "bad " + rsConfigNs + " config: version", version > 0);
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_config.cpp#L463`

.. line: uassert(13117, "bad " + rsConfigNs + " config", !_id.empty());

.. error:: 13117

   :message: "bad " + rsConfigNs + " config", !_id.empty());
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_config.cpp#L549`

.. line: massert(13118, "unexpected or missing type value in BSON object", expr);

.. error:: 13118

   :message: "unexpected or missing type value in BSON object"
   :severity: Info
   :module: :source:`src/mongo/bson/bsonelement.h#L477`

.. line: uassert( 13119 , (string)"SyncClusterConnection::insert obj has to have an _id: " + obj.jsonString() ,

.. error:: 13119

   :message: (string)"SyncClusterConnection::insert obj has to have an _id: " + obj.jsonString() ,
   :throws: UserException
   :module: :source:`src/mongo/client/syncclusterconnection.cpp#L337`

.. line: uassert( 13120 , "SyncClusterConnection::update upsert query needs _id" , query.obj["_id"].type() );

.. error:: 13120

   :message: "SyncClusterConnection::update upsert query needs _id"
   :throws: UserException
   :module: :source:`src/mongo/client/syncclusterconnection.cpp#L370`

.. line: throw UserException( 13121 , ss.str() );

.. error:: 13121

   :message: ss.str() );
   :throws: UserException
   :module: :source:`src/mongo/client/model.cpp#L84`

.. line: uassert(13122, "bad repl set config?", expr);

.. error:: 13122

   :message: "bad repl set config?"
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_config.cpp#L566`

.. line: uasserted( 13123, str::stream() << "Can't modify shard key's value. field: " << field

.. error:: 13123

   :message: str::stream() << "Can't modify shard key's value. field: " << field
   :throws: UserException
   :module: :source:`src/mongo/s/strategy_shard.cpp#L608`

.. line: uassert(13126, "bad Member config", expr);

.. error:: 13126

   :message: "bad Member config"
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_config.cpp#L140`

.. line: throw UserException( 13127 , "getMore: cursor didn't exist on server, possible restart or timeout?" );

.. error:: 13127

   :message: "getMore: cursor didn't exist on server, possible restart or timeout?" );
   :throws: UserException
   :module: :source:`src/mongo/client/dbclientcursor.cpp#L180`

.. line: massert( 13128 , (string)"can't find shard for: " + ident , found.get() );

.. error:: 13128

   :message: (string)"can't find shard for: " + ident , found.get() );
   :severity: Info
   :module: :source:`src/mongo/s/shard.cpp#L135`

.. line: massert( 13129 , (string)"can't find shard for: " + mykey , i != _lookup.end() );

.. error:: 13129

   :message: (string)"can't find shard for: " + mykey , i != _lookup.end() );
   :severity: Info
   :module: :source:`src/mongo/s/shard.cpp#L117`

.. line: uassert( 13130 , "can't start bg index b/c in recursive lock (db.eval?)" , !Lock::nested() );

.. error:: 13130

   :message: "can't start bg index b/c in recursive lock (db.eval?)"
   :throws: UserException
   :module: :source:`src/mongo/db/index_update.cpp#L422`

.. line: uasserted(13131, "replSet error parsing (or missing) 'members' field in config object");

.. error:: 13131

   :message: "replSet error parsing (or missing) 'members' field in config object"
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_config.cpp#L473`

.. line: uassert(13132,

.. error:: 13132

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_config.cpp#L320`

.. line: uassert(13133, "replSet bad config no members", members.size() >= 1);

.. error:: 13133

   :message: "replSet bad config no members"
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_config.cpp#L324`

.. line: throw UserException( 13134 , ss.str() );

.. error:: 13134

   :message: ss.str() );
   :throws: UserException
   :module: :source:`src/mongo/s/client_info.cpp#L60`

.. line: uassert(13135, ss.str(), false);

.. error:: 13135

   :message: ss.str(), false);
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_config.cpp#L538`

.. line: throw UserException( 13136 , ss.str() );

.. error:: 13136

   :message: ss.str() );
   :throws: UserException
   :module: :source:`src/mongo/s/shard.cpp#L336`

.. line: uassert(13137, "Source and destination collections must be on same shard", shardFrom == shardTo);

.. error:: 13137

   :message: "Source and destination collections must be on same shard"
   :throws: UserException
   :module: :source:`src/mongo/s/commands_public.cpp#L444`

.. line: uassert(13138, "You can't rename a sharded collection", !confFrom->isSharded(fullnsFrom));

.. error:: 13138

   :message: "You can't rename a sharded collection"
   :throws: UserException
   :module: :source:`src/mongo/s/commands_public.cpp#L438`

.. line: uassert(13139, "You can't rename to a sharded collection", !confTo->isSharded(fullnsTo));

.. error:: 13139

   :message: "You can't rename to a sharded collection"
   :throws: UserException
   :module: :source:`src/mongo/s/commands_public.cpp#L439`

.. line: uassert(13140, "Don't recognize source or target DB", confFrom && confTo);

.. error:: 13140

   :message: "Don't recognize source or target DB"
   :throws: UserException
   :module: :source:`src/mongo/s/commands_public.cpp#L437`

.. line: massert(13141, "Chunk map pointed to incorrect chunk", false);

.. error:: 13141

   :message: "Chunk map pointed to incorrect chunk"
   :severity: Info
   :module: :source:`src/mongo/s/chunk.cpp#L1056`

.. line: uassert( 13143 , "can't create index on system.indexes" , tabletoidxns.find( ".system.indexes" ) == string::npos );

.. error:: 13143

   :message: "can't create index on system.indexes"
   :throws: UserException
   :module: :source:`src/mongo/db/pdfile.cpp#L1340`

.. line: uasserted(13144, msg);

.. error:: 13144

   :message: msg);
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_initiate.cpp#L130`

.. line: uasserted(13145, "set name does not match the set name host " + i->h.toString() + " expects");

.. error:: 13145

   :message: "set name does not match the set name host " + i->h.toString() + " expects");
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_initiate.cpp#L93`

.. line: uasserted(13256, "member " + i->h.toString() + " is already initiated");

.. error:: 13256

   :message: "member " + i->h.toString() + " is already initiated");
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_initiate.cpp#L97`

.. line: throw UserException( 13257 , ss.str() );

.. error:: 13257

   :message: ss.str() );
   :throws: UserException
   :module: :source:`src/mongo/db/oplog.cpp#L349`

.. line: uassert( 13258 , "oids broken after resetting!" , _checkOIDs() );

.. error:: 13258

   :message: "oids broken after resetting!"
   :throws: UserException
   :module: :source:`src/mongo/s/balance.cpp#L334`

.. line: uasserted(13259, ss.str());

.. error:: 13259

   :message: ss.str());
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_initiate.cpp#L83`

.. line: //for python err# checker: uassert(13260, "", false);

.. error:: 13260

   :message: "", false);
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_config.cpp#L623`

.. line: uassert( 13262, "$or requires nonempty array", e.type() == Array && e.embeddedObject().nFields() > 0 );

.. error:: 13262

   :message: "$or requires nonempty array"
   :throws: UserException
   :module: :source:`src/mongo/db/queryutil.cpp#L1713`

.. line: uassert( 13263, "$or array must contain objects", f.type() == Object );

.. error:: 13263

   :message: "$or array must contain objects"
   :throws: UserException
   :module: :source:`src/mongo/db/queryutil.cpp#L1717`

.. line: massert( 13266, "not implemented for $or query", !_or );

.. error:: 13266

   :message: "not implemented for $or query"
   :severity: Info
   :module: :source:`src/mongo/db/queryoptimizer.h#L614`

.. line: massert( 13268, "invalid $or spec",

.. error:: 13268

   :message: "invalid $or spec"
   :severity: Info
   :module: :source:`src/mongo/db/queryoptimizer.cpp#L1218`

.. line: massert( 13271, "no more clauses", hasMoreClauses() );

.. error:: 13271

   :message: "no more clauses"
   :severity: Info
   :module: :source:`src/mongo/db/queryoptimizer.h#L617`

.. line: massert( 13273, "single data buffer expected", _buf );

.. error:: 13273

   :message: "single data buffer expected"
   :severity: Info
   :module: :source:`src/mongo/util/net/message.h#L169`

.. line: massert( 13274, "no or clause to pop", _orFound && !orRangesExhausted() );

.. error:: 13274

   :message: "no or clause to pop"
   :severity: Info
   :module: :source:`src/mongo/db/queryutil.cpp#L1729`

.. line: uassert( 13276 , "$in needs an array" , fe.isABSONObj() );

.. error:: 13276

   :message: "$in needs an array"
   :throws: UserException
   :module: :source:`src/mongo/db/matcher.cpp#L310`

.. line: uassert( 13277 , "$nin needs an array" , fe.isABSONObj() );

.. error:: 13277

   :message: "$nin needs an array"
   :throws: UserException
   :module: :source:`src/mongo/db/matcher.cpp#L321`

.. line: uassert(13278, "bad config: isSelf is true for multiple hosts: " + selfs.str(), me <= 1); // dups?

.. error:: 13278

   :message: "bad config: isSelf is true for multiple hosts: " + selfs.str(), me <= 1); // dups?
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_initiate.cpp#L58`

.. line: uasserted(13279, ss.str());

.. error:: 13279

   :message: ss.str());
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_initiate.cpp#L64`

.. line: uassert( 13280 , (string)"invalid db name: " + ns , NamespaceString::validDBName( d ) );

.. error:: 13280

   :message: (string)"invalid db name: " + ns , NamespaceString::validDBName( d ) );
   :throws: UserException
   :module: :source:`src/mongo/db/databaseholder.h#L88`

.. line: uasserted(13281, "File deleted during filemd5 command");

.. error:: 13281

   :message: "File deleted during filemd5 command"
   :throws: UserException
   :module: :source:`src/mongo/db/dbcommands.cpp#L1151`

.. line: throw MsgAssertionException( 13283 , "Missing Extra" );

.. error:: 13283

   :message: "Missing Extra" );
   :throws: MsgAssertionException
   :module: :source:`src/mongo/db/namespace_details-inl.h#L33`

.. line: massert( 13285, "manual matcher config not allowed", false );

.. error:: 13285

   :message: "manual matcher config not allowed"
   :severity: Info
   :module: :source:`src/mongo/db/cursor.h#L200`

.. line: uassert( 13286 , "sent 0 cursors to kill" , n >= 1 );

.. error:: 13286

   :message: "sent 0 cursors to kill"
   :throws: UserException
   :module: :source:`src/mongo/s/cursors.cpp#L239`

.. line: uassert( 13287 , "too many cursors to kill" , n < 30000 );

.. error:: 13287

   :message: "too many cursors to kill"
   :throws: UserException
   :module: :source:`src/mongo/s/cursors.cpp#L240`

.. line: uassert(13288, "replSet error write op to db before replSet initialized", str::startsWith(ns, "local.") || *opstr == 'n');

.. error:: 13288

   :message: "replSet error write op to db before replSet initialized"
   :throws: UserException
   :module: :source:`src/mongo/db/oplog.cpp#L54`

.. line: uassert(13289, "Invalid UTF8 character detected", isValidUTF8(buf));

.. error:: 13289

   :message: "Invalid UTF8 character detected"
   :throws: UserException
   :module: :source:`src/mongo/tools/import.cpp#L141`

.. line: uassert(13290, "bad replSet oplog entry?", quiet || !lastOpTimeWritten.isNull());

.. error:: 13290

   :message: "bad replSet oplog entry?"
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs.cpp#L443`

.. line: uassert( 13291, "$or may not contain 'special' query", _orSets.back().getSpecial().empty() );

.. error:: 13291

   :message: "$or may not contain 'special' query"
   :throws: UserException
   :module: :source:`src/mongo/db/queryutil.cpp#L1719`

.. line: massert( 13292, "hint eoo", !hint.eoo() );

.. error:: 13292

   :message: "hint eoo"
   :severity: Info
   :module: :source:`src/mongo/db/queryoptimizer.cpp#L60`

.. line: uasserted(13293, string("BSON representation of supplied JSON array is too large: ") + e.what());

.. error:: 13293

   :message: string("BSON representation of supplied JSON array is too large: ") + e.what());
   :throws: UserException
   :module: :source:`src/mongo/tools/import.cpp#L162`

.. line: uassert(13295, "JSONArray file too large", (in->rdstate() & ios_base::eofbit));

.. error:: 13295

   :message: "JSONArray file too large"
   :throws: UserException
   :module: :source:`src/mongo/tools/import.cpp#L116`

.. line: massert( 13296 , "invalid chunk size is specified", (size != 0 ));

.. error:: 13296

   :message: "invalid chunk size is specified"
   :severity: Info
   :module: :source:`src/mongo/client/gridfs.cpp#L69`

.. line: uassert(13301, "cat() : file to big to load as a variable", sz < 1024 * 1024 * 16);

.. error:: 13301

   :message: "cat() : file to big to load as a variable"
   :throws: UserException
   :module: :source:`src/mongo/shell/shell_utils_extended.cpp#L138`

.. line: uassert( 13302, "replSet error self appears twice in the repl set configuration", me<=1 );

.. error:: 13302

   :message: "replSet error self appears twice in the repl set configuration"
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs.cpp#L547`

.. line: uassert( 13303, "combinatorial limit of $in partitioning of result set exceeded", newBuilders.size() < maxCombinations );

.. error:: 13303

   :message: "combinatorial limit of $in partitioning of result set exceeded"
   :throws: UserException
   :module: :source:`src/mongo/db/queryutil.cpp#L1244`

.. line: uassert( 13304, "combinatorial limit of $in partitioning of result set exceeded", newBuilders.size() < maxCombinations );

.. error:: 13304

   :message: "combinatorial limit of $in partitioning of result set exceeded"
   :throws: UserException
   :module: :source:`src/mongo/db/queryutil.cpp#L1254`

.. line: uassert( 13305, "could not convert string to long long", *endPtr == 0 && errno == 0 );

.. error:: 13305

   :message: "could not convert string to long long"
   :throws: UserException
   :module: :source:`src/mongo/util/text.cpp#L136`

.. line: uassert( 13306, "could not convert string to long long", endLen != 0 && n[ endLen ] == 0 );

.. error:: 13306

   :message: "could not convert string to long long"
   :throws: UserException
   :module: :source:`src/mongo/util/text.cpp#L145`

.. line: uassert( 13307, "cannot convert empty string to long long", *n != 0 );

.. error:: 13307

   :message: "cannot convert empty string to long long"
   :throws: UserException
   :module: :source:`src/mongo/util/text.cpp#L131`

.. line: uassert(13308, "replSet bad config version #", version > 0);

.. error:: 13308

   :message: "replSet bad config version #"
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_config.cpp#L323`

.. line: uassert(13309, "replSet bad config maximum number of members is 12", members.size() <= 12);

.. error:: 13309

   :message: "replSet bad config maximum number of members is 12"
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_config.cpp#L325`

.. line: uassert( 13310, "could not convert string to long long", (*endPtr == 0) && (ret != _I64_MAX) && (ret != _I64_MIN) );

.. error:: 13310

   :message: "could not convert string to long long"
   :throws: UserException
   :module: :source:`src/mongo/util/text.cpp#L149`

.. line: uassert(13311, "member " + i->h.toString() + " has data already, cannot initiate set.  All members except initiator must be empty.",

.. error:: 13311

   :message: "member " + i->h.toString() + " has data already, cannot initiate set.  All members except initiator must be empty.",
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_initiate.cpp#L136`

.. line: massert(13312, "replSet error : logOp() but not primary?", theReplSet->box.getState().primary());

.. error:: 13312

   :message: "replSet error : logOp() but not primary?"
   :severity: Info
   :module: :source:`src/mongo/db/oplog.cpp#L145`

.. line: uassert( 13314 , "can't have 2 geo fields" , _geo.size() == 0 );

.. error:: 13314

   :message: "can't have 2 geo fields"
   :throws: UserException
   :module: :source:`src/mongo/db/geo/haystack.cpp#L89`

.. line: uassert( 13315 , "2d has to be first in index" , _other.size() == 0 );

.. error:: 13315

   :message: "2d has to be first in index"
   :throws: UserException
   :module: :source:`src/mongo/db/geo/haystack.cpp#L90`

.. line: uassert( 13316 , "no geo field specified" , _geo.size() );

.. error:: 13316

   :message: "no geo field specified"
   :throws: UserException
   :module: :source:`src/mongo/db/geo/haystack.cpp#L99`

.. line: uassert( 13317 , "no other fields specified" , _other.size() );

.. error:: 13317

   :message: "no other fields specified"
   :throws: UserException
   :module: :source:`src/mongo/db/geo/haystack.cpp#L100`

.. line: uassert( 13318 , "near needs to be an array" , n.isABSONObj() );

.. error:: 13318

   :message: "near needs to be an array"
   :throws: UserException
   :module: :source:`src/mongo/db/geo/haystack.cpp#L298`

.. line: uassert( 13319 , "maxDistance needs a number" , maxDistance.isNumber() );

.. error:: 13319

   :message: "maxDistance needs a number"
   :throws: UserException
   :module: :source:`src/mongo/db/geo/haystack.cpp#L299`

.. line: uassert( 13320 , "search needs to be an object" , search.type() == Object );

.. error:: 13320

   :message: "search needs to be an object"
   :throws: UserException
   :module: :source:`src/mongo/db/geo/haystack.cpp#L300`

.. line: uassert( 13321 , "need bucketSize" , e.isNumber() );

.. error:: 13321

   :message: "need bucketSize"
   :throws: UserException
   :module: :source:`src/mongo/db/geo/haystack.cpp#L80`

.. line: uassert( 13322 , "not a number" , e.isNumber() );

.. error:: 13322

   :message: "not a number"
   :throws: UserException
   :module: :source:`src/mongo/db/geo/haystack.cpp#L106`

.. line: uassert( 13323 , "latlng not an array" , loc.isABSONObj() );

.. error:: 13323

   :message: "latlng not an array"
   :throws: UserException
   :module: :source:`src/mongo/db/geo/haystack.cpp#L141`

.. line: uassert(13325, "couldn't open file: " + where, out.is_open() );

.. error:: 13325

   :message: "couldn't open file: " + where, out.is_open() );
   :throws: UserException
   :module: :source:`src/mongo/client/gridfs.cpp#L251`

.. line: uassert( 13326 , "quadrant search can only have 1 other field for now" , _other.size() == 1 );

.. error:: 13326

   :message: "quadrant search can only have 1 other field for now"
   :throws: UserException
   :module: :source:`src/mongo/db/geo/haystack.cpp#L101`

.. line: uassert( 13327 ,  "Chunk ns must match server ns" , ns == _manager->getns() );

.. error:: 13327

   :message: "Chunk ns must match server ns"
   :throws: UserException
   :module: :source:`src/mongo/s/chunk.cpp#L72`

.. line: uassert( 13328 ,  _name + ": connect failed " + url.toString() + " : " + errmsg , c );

.. error:: 13328

   :message: _name + ": connect failed " + url.toString() + " : " + errmsg , c );
   :throws: UserException
   :module: :source:`src/mongo/client/connpool.cpp#L198`

.. line: uassert(13329, "upsert mode requires update field", !update.eoo());

.. error:: 13329

   :message: "upsert mode requires update field"
   :throws: UserException
   :module: :source:`src/mongo/db/commands/find_and_modify.cpp#L235`

.. line: uassert(13330, "upsert mode requires query field", !origQuery.isEmpty());

.. error:: 13330

   :message: "upsert mode requires query field"
   :throws: UserException
   :module: :source:`src/mongo/db/commands/find_and_modify.cpp#L236`

.. line: uassert( 13331 ,  "collection's metadata is undergoing changes. Please try again." , dlk.got() );

.. error:: 13331

   :message: "collection's metadata is undergoing changes. Please try again."
   :throws: UserException
   :module: :source:`src/mongo/s/chunk.cpp#L1197`

.. line: uassert( 13332 , "need a split key to split chunk" , !m.empty() );

.. error:: 13332

   :message: "need a split key to split chunk"
   :throws: UserException
   :module: :source:`src/mongo/s/chunk.cpp#L268`

.. line: uassert( 13333 , "can't split a chunk in that many parts", m.size() < maxSplitPoints );

.. error:: 13333

   :message: "can't split a chunk in that many parts"
   :throws: UserException
   :module: :source:`src/mongo/s/chunk.cpp#L269`

.. line: uassert(13334, "Shard Key must be less than 512 bytes", k.objsize() < 512);

.. error:: 13334

   :message: "Shard Key must be less than 512 bytes"
   :throws: UserException
   :module: :source:`src/mongo/s/shardkey.h#L125`

.. line: uasserted(13341, "member " + i->h.toString() + " has a config version >= to the new cfg version; cannot change config");

.. error:: 13341

   :message: "member " + i->h.toString() + " has a config version >= to the new cfg version; cannot change config");
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_initiate.cpp#L102`

.. line: uassert( 13342, "Unable to truncate lock file", ftruncate(lockFile, 0) == 0);

.. error:: 13342

   :message: "Unable to truncate lock file"
   :throws: UserException
   :module: :source:`src/mongo/db/instance.cpp#L1221`

.. line: uassert(13343,  "query for sharded findAndModify must have shardkey", cm->hasShardKey(filter));

.. error:: 13343

   :message: "query for sharded findAndModify must have shardkey"
   :throws: UserException
   :module: :source:`src/mongo/s/commands_public.cpp#L707`

.. line: massert( 13344 ,  "trying to slave off of a non-master", false );

.. error:: 13344

   :message: "trying to slave off of a non-master"
   :severity: Info
   :module: :source:`src/mongo/db/repl.cpp#L896`

.. line: uassert( 13345 , os.str() , 0 );

.. error:: 13345

   :message: os.str() , 0 );
   :throws: UserException
   :module: :source:`src/mongo/s/chunk.cpp#L192`

.. line: massert(13347, "local.oplog.rs missing. did you drop it? if so restart server", rsOplogDetails);

.. error:: 13347

   :message: "local.oplog.rs missing. did you drop it? if so restart server"
   :severity: Info
   :module: :source:`src/mongo/db/oplog.cpp#L183`

.. line: void _assertIfNull() const { uassert(13348, "connection died", this); }

.. error:: 13348

   :message: "connection died"
   :throws: UserException
   :module: :source:`src/mongo/client/dbclientcursor.h#L235`

.. line: massert( 13383, "BatchIterator empty", moreInCurrentBatch() );

.. error:: 13383

   :message: "BatchIterator empty"
   :severity: Info
   :module: :source:`src/mongo/client/dbclientcursor.h#L252`

.. line: uassert( 13385, "combinatorial limit of $in partitioning of result set exceeded",

.. error:: 13385

   :message: "combinatorial limit of $in partitioning of result set exceeded"
   :throws: UserException
   :module: :source:`src/mongo/db/queryutil.cpp#L1116`

.. line: uassert( 13386, "socket error for mapping query", c.get() );

.. error:: 13386

   :message: "socket error for mapping query"
   :throws: UserException
   :module: :source:`src/mongo/client/dbclient.cpp#L847`

.. line: massert(13389, "local.oplog.rs missing. did you drop it? if so restart server", rsOplogDetails);

.. error:: 13389

   :message: "local.oplog.rs missing. did you drop it? if so restart server"
   :severity: Info
   :module: :source:`src/mongo/db/oplog.cpp#L73`

.. line: uasserted(13390, "unrecognized command: " + commandName);

.. error:: 13390

   :message: "unrecognized command: " + commandName);
   :throws: UserException
   :module: :source:`src/mongo/s/strategy_single.cpp#L89`

.. line: uassert(13393, "can't use localhost in repl set member names except when using it for all members", localhosts == 0 || localhosts == members.size());

.. error:: 13393

   :message: "can't use localhost in repl set member names except when using it for all members"
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_config.cpp#L548`

.. line: uassert( 13396 , (string)"DBConfig save failed: " + err , err.size() == 0 );

.. error:: 13396

   :message: (string)"DBConfig save failed: " + err , err.size() == 0 );
   :throws: UserException
   :module: :source:`src/mongo/s/config.cpp#L521`

.. line: throw UserException( 13397 , (string)"SyncClusterConnection::say prepare failed: " + errmsg );

.. error:: 13397

   :message: (string)"SyncClusterConnection::say prepare failed: " + errmsg );
   :throws: UserException
   :module: :source:`src/mongo/client/syncclusterconnection.cpp#L445`

.. line: uassert(13398, "cant copy to sharded DB", !confTo->isShardingEnabled());

.. error:: 13398

   :message: "cant copy to sharded DB"
   :throws: UserException
   :module: :source:`src/mongo/s/commands_public.cpp#L458`

.. line: uassert(13399, "need a fromdb argument", !fromdb.empty());

.. error:: 13399

   :message: "need a fromdb argument"
   :throws: UserException
   :module: :source:`src/mongo/s/commands_public.cpp#L466`

.. line: uassert(13400, "don't know where source DB is", confFrom);

.. error:: 13400

   :message: "don't know where source DB is"
   :throws: UserException
   :module: :source:`src/mongo/s/commands_public.cpp#L469`

.. line: uassert(13401, "cant copy from sharded DB", !confFrom->isShardingEnabled());

.. error:: 13401

   :message: "cant copy from sharded DB"
   :throws: UserException
   :module: :source:`src/mongo/s/commands_public.cpp#L470`

.. line: uassert(13402, "need a todb argument", !todb.empty());

.. error:: 13402

   :message: "need a todb argument"
   :throws: UserException
   :module: :source:`src/mongo/s/commands_public.cpp#L455`

.. line: uasserted( 13403 , str::stream() << "didn't get writeback for: " << oid

.. error:: 13403

   :message: str::stream() << "didn't get writeback for: " << oid
   :throws: UserException
   :module: :source:`src/mongo/s/writeback_listener.cpp#L126`

.. line: uasserted(13404, m);

.. error:: 13404

   :message: m);
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_initialsync.cpp#L44`

.. line: uassert(13405, str::stream() << "min value " << min << " does not have shard key", hasShardKey(min));

.. error:: 13405

   :message: str::stream() << "min value " << min << " does not have shard key", hasShardKey(min));
   :throws: UserException
   :module: :source:`src/mongo/s/chunk.cpp#L1136`

.. line: uassert(13406, str::stream() << "max value " << max << " does not have shard key", hasShardKey(max));

.. error:: 13406

   :message: str::stream() << "max value " << max << " does not have shard key", hasShardKey(max));
   :throws: UserException
   :module: :source:`src/mongo/s/chunk.cpp#L1137`

.. line: massert( 13407 ,  "how could chunk manager be null!" , cm );

.. error:: 13407

   :message: "how could chunk manager be null!"
   :severity: Info
   :module: :source:`src/mongo/s/commands_public.cpp#L747`

.. line: uassert(13408,  "keyPattern must equal shard key", cm->getShardKey().key() == keyPattern);

.. error:: 13408

   :message: "keyPattern must equal shard key"
   :throws: UserException
   :module: :source:`src/mongo/s/commands_public.cpp#L753`

.. line: uassert( 13410, "replSet too much data to roll back", totSize < 300 * 1024 * 1024 );

.. error:: 13410

   :message: "replSet too much data to roll back"
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_rollback.cpp#L344`

.. line: uassert( 13411, "getHostName accepts no arguments", a.nFields() == 0 );

.. error:: 13411

   :message: "getHostName accepts no arguments"
   :throws: UserException
   :module: :source:`src/mongo/shell/shell_utils_extended.cpp#L204`

.. line: uassert( 13415, "emptying the collection is not allowed", stats.nrecords > 1 );

.. error:: 13415

   :message: "emptying the collection is not allowed"
   :throws: UserException
   :module: :source:`src/mongo/db/cap.cpp#L352`

.. line: uassert( 13416, "captrunc must specify a collection", !coll.empty() );

.. error:: 13416

   :message: "captrunc must specify a collection"
   :throws: UserException
   :module: :source:`src/mongo/db/dbcommands.cpp#L1817`

.. line: massert( 13417, "captrunc collection not found or empty", c.ok() );

.. error:: 13417

   :message: "captrunc collection not found or empty"
   :severity: Info
   :module: :source:`src/mongo/db/dbcommands.cpp#L1825`

.. line: massert( 13418, "captrunc invalid n", c.advance() );

.. error:: 13418

   :message: "captrunc invalid n"
   :severity: Info
   :module: :source:`src/mongo/db/dbcommands.cpp#L1827`

.. line: uassert(13419, "priorities must be between 0.0 and 100.0", priority >= 0.0 && priority <= 100.0);

.. error:: 13419

   :message: "priorities must be between 0.0 and 100.0"
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_config.cpp#L147`

.. line: uasserted(13420, "initiation and reconfiguration of a replica set must be sent to a node that can become primary");

.. error:: 13420

   :message: "initiation and reconfiguration of a replica set must be sent to a node that can become primary"
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_initiate.cpp#L51`

.. line: throw UserException( 13421 , "trying to connect to invalid ConnectionString" );

.. error:: 13421

   :message: "trying to connect to invalid ConnectionString" );
   :throws: UserException
   :module: :source:`src/mongo/client/dbclient.cpp#L147`

.. line: uassert(13422, "DBClientCursor next() called but more() is false", batch.pos < batch.nReturned);

.. error:: 13422

   :message: "DBClientCursor next() called but more() is false"
   :throws: UserException
   :module: :source:`src/mongo/client/dbclientcursor.cpp#L234`

.. line: uassert(13423, str::stream() << "replSet error in rollback can't find " << rsoplog, oplogDetails);

.. error:: 13423

   :message: str::stream() << "replSet error in rollback can't find " << rsoplog, oplogDetails);
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_rollback.cpp#L454`

.. line: massert( 13424, "collection must be capped", isCapped() );

.. error:: 13424

   :message: "collection must be capped"
   :severity: Info
   :module: :source:`src/mongo/db/cap.cpp#L419`

.. line: massert( 13425, "background index build in progress", !indexBuildInProgress );

.. error:: 13425

   :message: "background index build in progress"
   :severity: Info
   :module: :source:`src/mongo/db/cap.cpp#L420`

.. line: massert( 13426 , str::stream() << "failed during index drop: " << errmsg , res );

.. error:: 13426

   :message: str::stream() << "failed during index drop: " << errmsg , res );
   :severity: Info
   :module: :source:`src/mongo/db/cap.cpp#L431`

.. line: uassert( 13428, "emptycapped must specify a collection", !coll.empty() );

.. error:: 13428

   :message: "emptycapped must specify a collection"
   :throws: UserException
   :module: :source:`src/mongo/db/dbcommands.cpp#L1845`

.. line: massert( 13429, "emptycapped no such collection", nsd );

.. error:: 13429

   :message: "emptycapped no such collection"
   :severity: Info
   :module: :source:`src/mongo/db/dbcommands.cpp#L1848`

.. line: uassert(13430, "no _id index", idxNo>=0);

.. error:: 13430

   :message: "no _id index"
   :throws: UserException
   :module: :source:`src/mongo/db/dbhelpers.cpp#L132`

.. line: uassert( 13431 , "have to have sort key in projection and removing it" , !found && begin == end );

.. error:: 13431

   :message: "have to have sort key in projection and removing it"
   :throws: UserException
   :module: :source:`src/mongo/client/parallel.cpp#L514`

.. line: uasserted(13432, "_id may not change for members");

.. error:: 13432

   :message: "_id may not change for members"
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_config.cpp#L272`

.. line: uassert(13433, "can't find self in new replset config", me == 1);

.. error:: 13433

   :message: "can't find self in new replset config"
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_config.cpp#L289`

.. line: uasserted(13434, str::stream() << "unexpected field '" << e.fieldName() << "' in object");

.. error:: 13434

   :message: str::stream() << "unexpected field '" << e.fieldName() << "' in object");
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_config.cpp#L43`

.. line: uassert(13435, "not master and slaveOk=false",

.. error:: 13435

   :message: "not master and slaveOk=false"
   :throws: UserException
   :module: :source:`src/mongo/db/repl.cpp#L1556`

.. line: uassert(13436,

.. error:: 13436

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/db/repl.cpp#L1558`

.. line: uassert(13437, "slaveDelay requires priority be zero", slaveDelay == 0 || priority == 0);

.. error:: 13437

   :message: "slaveDelay requires priority be zero"
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_config.cpp#L148`

.. line: uassert(13438, "bad slaveDelay value", slaveDelay >= 0 && slaveDelay <= 3600 * 24 * 366);

.. error:: 13438

   :message: "bad slaveDelay value"
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_config.cpp#L149`

.. line: uassert(13439, "priority must be 0 when hidden=true", priority == 0 || !hidden);

.. error:: 13439

   :message: "priority must be 0 when hidden=true"
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_config.cpp#L150`

.. line: uasserted(13440, ss.str());

.. error:: 13440

   :message: ss.str());
   :throws: UserException
   :module: :source:`src/mongo/db/pdfile.cpp#L393`

.. line: uasserted(13441, ss.str());

.. error:: 13441

   :message: ss.str());
   :throws: UserException
   :module: :source:`src/mongo/db/pdfile.cpp#L387`

.. line: uassert( 13449 , str::stream() << "collection " << _ns << " already sharded with "

.. error:: 13449

   :message: str::stream() << "collection " << _ns << " already sharded with "
   :throws: UserException
   :module: :source:`src/mongo/s/chunk.cpp#L997`

.. line: uassert(13453, "server not started with --jsonp", callback.empty() || cmdLine.jsonp);

.. error:: 13453

   :message: "server not started with --jsonp"
   :throws: UserException
   :module: :source:`src/mongo/db/dbwebserver.cpp#L170`

.. line: uassert( 13454, "invalid regular expression operator", op == BSONObj::Equality || op == BSONObj::opREGEX );

.. error:: 13454

   :message: "invalid regular expression operator"
   :throws: UserException
   :module: :source:`src/mongo/db/queryutil.cpp#L255`

.. line: uassert( 13455 , "dbexit timed out getting lock" , wlt.got() );

.. error:: 13455

   :message: "dbexit timed out getting lock"
   :throws: UserException
   :module: :source:`src/mongo/db/dbcommands.cpp#L358`

.. line: uassert(13460, "invalid $center query type: " + type, false);

.. error:: 13460

   :message: "invalid $center query type: " + type, false);
   :throws: UserException
   :module: :source:`src/mongo/db/geo/2d.cpp#L2540`

.. line: uassert(13461, "Spherical MaxDistance > PI. Are you sure you are using radians?", _maxDistance < M_PI);

.. error:: 13461

   :message: "Spherical MaxDistance > PI. Are you sure you are using radians?"
   :throws: UserException
   :module: :source:`src/mongo/db/geo/2d.cpp#L2528`

.. line: uassert(13462, "Spherical distance would require wrapping, which isn't implemented yet",

.. error:: 13462

   :message: "Spherical distance would require wrapping, which isn't implemented yet"
   :throws: UserException
   :module: :source:`src/mongo/db/geo/2d.cpp#L2535`

.. line: uassert(13464, string("invalid $near search type: ") + e.fieldName(), false);

.. error:: 13464

   :message: string("invalid $near search type: ") + e.fieldName(), false);
   :throws: UserException
   :module: :source:`src/mongo/db/geo/2d.cpp#L2801`

.. line: uassert( 13468, string("can't create file already exists ") + filename, ! boost::filesystem::exists(filename) );

.. error:: 13468

   :message: string("can't create file already exists ") + filename, ! boost::filesystem::exists(filename) );
   :throws: UserException
   :module: :source:`src/mongo/util/mmap.cpp#L48`

.. line: massert(13469, "getifaddrs failure: " + errnoWithDescription(errno), status == 0);

.. error:: 13469

   :message: "getifaddrs failure: " + errnoWithDescription(errno), status == 0);
   :severity: Info
   :module: :source:`src/mongo/db/commands/isself.cpp#L49`

.. line: massert(13472, string("getnameinfo() failed: ") + gai_strerror(status), status == 0);

.. error:: 13472

   :message: string("getnameinfo() failed: ") + gai_strerror(status), status == 0);
   :severity: Info
   :module: :source:`src/mongo/db/commands/isself.cpp#L110`

.. line: uassert( 13473 , (string)"failed to save collection (" + ns + "): " + err , err.size() == 0 );

.. error:: 13473

   :message: (string)"failed to save collection (" + ns + "): " + err , err.size() == 0 );
   :throws: UserException
   :module: :source:`src/mongo/s/config.cpp#L110`

.. line: massert( 13474, "no _getInterruptSpecCallback", _getInterruptSpecCallback );

.. error:: 13474

   :message: "no _getInterruptSpecCallback"
   :severity: Info
   :module: :source:`src/mongo/scripting/engine.h#L202`

.. line: uassert( 13475 ,  _error , 0 );

.. error:: 13475

   :message: _error , 0 );
   :throws: UserException
   :module: :source:`src/mongo/scripting/engine_v8.cpp#L873`

.. line: uasserted(13476, "buildIndexes may not change for members");

.. error:: 13476

   :message: "buildIndexes may not change for members"
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_config.cpp#L276`

.. line: uassert(13477, "priority must be 0 when buildIndexes=false", buildIndexes || priority == 0);

.. error:: 13477

   :message: "priority must be 0 when buildIndexes=false"
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_config.cpp#L151`

.. line: uassert( 13478 ,  "can't apply mod in place - shouldn't have gotten here" , 0 );

.. error:: 13478

   :message: "can't apply mod in place - shouldn't have gotten here"
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L610`

.. line: uassert( 13479,

.. error:: 13479

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L902`

.. line: uassert( 13480,

.. error:: 13480

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L905`

.. line: uassert( 13481,

.. error:: 13481

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L908`

.. line: uassert( 13482,

.. error:: 13482

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L911`

.. line: uassert( 13483,

.. error:: 13483

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L915`

.. line: uassert( 13484,

.. error:: 13484

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L919`

.. line: uassert( 13485,

.. error:: 13485

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L922`

.. line: uassert( 13486,

.. error:: 13486

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L925`

.. line: uassert( 13487,

.. error:: 13487

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L929`

.. line: uassert( 13488,

.. error:: 13488

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L932`

.. line: uassert( 13489, "$rename source field invalid", source != -1 );

.. error:: 13489

   :message: "$rename source field invalid"
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L374`

.. line: uassert( 13490, "$rename target field invalid", target != -1 );

.. error:: 13490

   :message: "$rename target field invalid"
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L385`

.. line: massert( 13492, "mod must be RENAME_TO type", op == Mod::RENAME_TO );

.. error:: 13492

   :message: "mod must be RENAME_TO type"
   :severity: Info
   :module: :source:`src/mongo/db/ops/update_internal.h#L237`

.. line: uassert( 13494, "$rename target must be a string", f.type() == String );

.. error:: 13494

   :message: "$rename target must be a string"
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L894`

.. line: uassert( 13495,

.. error:: 13495

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L896`

.. line: uassert( 13496,

.. error:: 13496

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L899`

.. line: massert( 13500 ,  "how could chunk manager be null!" , cm );

.. error:: 13500

   :message: "how could chunk manager be null!"
   :severity: Info
   :module: :source:`src/mongo/s/commands_public.cpp#L1016`

.. line: uassert(13501, "use geoNear command rather than $near query", false);

.. error:: 13501

   :message: "use geoNear command rather than $near query"
   :throws: UserException
   :module: :source:`src/mongo/s/chunk.cpp#L1082`

.. line: uassert(13502, "unrecognized special query type: " + special, false);

.. error:: 13502

   :message: "unrecognized special query type: " + special, false);
   :throws: UserException
   :module: :source:`src/mongo/s/chunk.cpp#L1089`

.. line: uassert( 13503 , os.str() , 0 );

.. error:: 13503

   :message: os.str() , 0 );
   :throws: UserException
   :module: :source:`src/mongo/s/chunk.cpp#L162`

.. line: uasserted(13504, string("BSON representation of supplied JSON is too large: ") + e.what());

.. error:: 13504

   :message: string("BSON representation of supplied JSON is too large: ") + e.what());
   :throws: UserException
   :module: :source:`src/mongo/tools/import.cpp#L196`

.. line: uasserted( 13505, str::stream()

.. error:: 13505

   :message: str::stream()
   :throws: UserException
   :module: :source:`src/mongo/s/strategy_shard.cpp#L895`

.. line: uasserted( 13506, str::stream()

.. error:: 13506

   :message: str::stream()
   :throws: UserException
   :module: :source:`src/mongo/s/strategy_shard.cpp#L750`

.. line: massert( 13507 , str::stream() << "no chunks found between bounds " << min << " and " << max , it != _chunkRanges.ranges().end() );

.. error:: 13507

   :message: str::stream() << "no chunks found between bounds " << min << " and " << max , it != _chunkRanges.ranges().end() );
   :severity: Info
   :module: :source:`src/mongo/s/chunk.cpp#L1143`

.. line: uasserted( 13509 , "can't migrate from 1.5.x release to the current one; need to upgrade to 1.6.x first");

.. error:: 13509

   :message: "can't migrate from 1.5.x release to the current one; need to upgrade to 1.6.x first"
   :throws: UserException
   :module: :source:`src/mongo/s/config.cpp#L454`

.. line: uasserted(13510, "arbiterOnly may not change for members");

.. error:: 13510

   :message: "arbiterOnly may not change for members"
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_config.cpp#L282`

.. line: uassert( 13511 , "document to insert can't have $ fields" , e.fieldName()[0] != '$' );

.. error:: 13511

   :message: "document to insert can't have $ fields"
   :throws: UserException
   :module: :source:`src/mongo/db/instance.cpp#L757`

.. line: uasserted(13513, "sort must be an object or array");

.. error:: 13513

   :message: "sort must be an object or array"
   :throws: UserException
   :module: :source:`src/mongo/db/queryutil.h#L183`

.. line: fassertFailed( 13514 );

.. error:: 13514

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/logfile.cpp#L251`

.. line: fassertFailed( 13515 );

.. error:: 13515

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/logfile.cpp#L237`

.. line: uasserted(13516, str::stream() << "couldn't open file " << name << " for writing " << errnoWithDescription());

.. error:: 13516

   :message: str::stream() << "couldn't open file " << name << " for writing " << errnoWithDescription());
   :throws: UserException
   :module: :source:`src/mongo/util/logfile.cpp#L175`

.. line: uasserted(13517, str::stream() << "error appending to file " << _name << ' ' << _len << ' ' << toWrite << ' ' << errnoWithDescription(e));

.. error:: 13517

   :message: str::stream() << "error appending to file " << _name << ' ' << _len << ' ' << toWrite << ' ' << errnoWithDescription(e));
   :throws: UserException
   :module: :source:`src/mongo/util/logfile.cpp#L127`

.. line: uasserted(13518, str::stream() << "couldn't open file " << name << " for writing " << errnoWithDescription(e));

.. error:: 13518

   :message: str::stream() << "couldn't open file " << name << " for writing " << errnoWithDescription(e));
   :throws: UserException
   :module: :source:`src/mongo/util/logfile.cpp#L71`

.. line: msgasserted(13519, "error 87 appending to file - invalid parameter");

.. error:: 13519

   :message: "error 87 appending to file - invalid parameter"
   :severity: Info
   :module: :source:`src/mongo/util/logfile.cpp#L125`

.. line: uassert(13520, str::stream() << "MongoMMF only supports filenames in a certain format " << f, ok);

.. error:: 13520

   :message: str::stream() << "MongoMMF only supports filenames in a certain format " << f, ok);
   :throws: UserException
   :module: :source:`src/mongo/db/mongommf.cpp#L162`

.. line: uasserted( 13522 , str::stream() << "unknown out specifier [" << t << "]" );

.. error:: 13522

   :message: str::stream() << "unknown out specifier [" << t << "]" );
   :throws: UserException
   :module: :source:`src/mongo/db/commands/mr.cpp#L262`

.. line: massert(13524, "out of memory AlignedBuilder", res == 0);

.. error:: 13524

   :message: "out of memory AlignedBuilder"
   :severity: Info
   :module: :source:`src/mongo/util/alignedbuilder.cpp#L109`

.. line: uassert( 13529 , "sparse only works for single field keys" , ! _sparse || _nFields );

.. error:: 13529

   :message: "sparse only works for single field keys"
   :throws: UserException
   :module: :source:`src/mongo/db/indexkey.cpp#L82`

.. line: uasserted(13530, "bad or malformed command request?");

.. error:: 13530

   :message: "bad or malformed command request?"
   :throws: UserException
   :module: :source:`src/mongo/db/ops/query.cpp#L937`

.. line: uasserted(13531, str::stream() << "unexpected files in journal directory " << dir.string() << " : " << fileName);

.. error:: 13531

   :message: str::stream() << "unexpected files in journal directory " << dir.string() << " : " << fileName);
   :throws: UserException
   :module: :source:`src/mongo/db/dur_recover.cpp#L79`

.. line: uasserted(13532,

.. error:: 13532

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/db/dur_recover.cpp#L86`

.. line: massert(13533, "problem processing journal file during recovery", _lastDbName[len] == '\0');

.. error:: 13533

   :message: "problem processing journal file during recovery"
   :severity: Info
   :module: :source:`src/mongo/db/dur_recover.cpp#L162`

.. line: uasserted(13535, "recover abrupt journal file end");

.. error:: 13535

   :message: "recover abrupt journal file end"
   :throws: UserException
   :module: :source:`src/mongo/db/dur_recover.cpp#L467`

.. line: uasserted(13536, str::stream() << "journal version number mismatch " << h._version);

.. error:: 13536

   :message: str::stream() << "journal version number mismatch " << h._version);
   :throws: UserException
   :module: :source:`src/mongo/db/dur_recover.cpp#L394`

.. line: uassert(13537,

.. error:: 13537

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/db/dur_recover.cpp#L385`

.. line: // help the assert# control uasserted( 13538 , s.c_str() );

.. error:: 13538

   :message: s.c_str() );
   :throws: UserException
   :module: :source:`src/mongo/util/processinfo_linux2.cpp#L48`

.. line: uassert( 13542 , str::stream() << "collection doesn't have a key: " << collectionDoc , ! e.eoo() && e.isABSONObj() );

.. error:: 13542

   :message: str::stream() << "collection doesn't have a key: " << collectionDoc , ! e.eoo() && e.isABSONObj() );
   :throws: UserException
   :module: :source:`src/mongo/s/d_chunk_manager.cpp#L183`

.. line: massert(13544, str::stream() << "recover error couldn't open " << journalfile.string(), p);

.. error:: 13544

   :message: str::stream() << "recover error couldn't open " << journalfile.string(), p);
   :severity: Info
   :module: :source:`src/mongo/db/dur_recover.cpp#L449`

.. line: uasserted(13545, str::stream() << "--durOptions " << (int) CmdLine::DurScanOnly << " (scan only) specified");

.. error:: 13545

   :message: str::stream() << "--durOptions " << (int) CmdLine::DurScanOnly << " (scan only) specified");
   :throws: UserException
   :module: :source:`src/mongo/db/dur_recover.cpp#L474`

.. line: massert(13546, (str::stream() << "journal recover: unrecognized opcode in journal " << opcode), false);

.. error:: 13546

   :message: (str::stream() << "journal recover: unrecognized opcode in journal " << opcode), false);
   :severity: Info
   :module: :source:`src/mongo/db/durop.cpp#L53`

.. line: massert(13547, str::stream() << "recover couldn't create file " << full, f.is_open());

.. error:: 13547

   :message: str::stream() << "recover couldn't create file " << full, f.is_open());
   :severity: Info
   :module: :source:`src/mongo/db/durop.cpp#L144`

.. line: uassert(13584, "out of memory AlignedBuilder", _p._allocationAddress);

.. error:: 13584

   :message: "out of memory AlignedBuilder"
   :throws: UserException
   :module: :source:`src/mongo/util/alignedbuilder.cpp#L27`

.. line: uasserted( 13585 , str::stream() << "version " << version.toString() << " not greater than " << _version.toString() );

.. error:: 13585

   :message: str::stream() << "version " << version.toString() << " not greater than " << _version.toString() );
   :throws: UserException
   :module: :source:`src/mongo/s/d_chunk_manager.cpp#L344`

.. line: uasserted( 13586 , str::stream() << "couldn't find chunk " << min << "->" << max );

.. error:: 13586

   :message: str::stream() << "couldn't find chunk " << min << "->" << max );
   :throws: UserException
   :module: :source:`src/mongo/s/d_chunk_manager.cpp#L312`

.. line: uasserted( 13587 , os.str() );

.. error:: 13587

   :message: os.str() );
   :throws: UserException
   :module: :source:`src/mongo/s/d_chunk_manager.cpp#L320`

.. line: uasserted( 13588 , os.str() );

.. error:: 13588

   :message: os.str() );
   :throws: UserException
   :module: :source:`src/mongo/s/d_chunk_manager.cpp#L380`

.. line: uassert( 13590 , str::stream() << "setting version to " << version.toString() << " on removing last chunk", ! version.isSet() );

.. error:: 13590

   :message: str::stream() << "setting version to " << version.toString() << " on removing last chunk", ! version.isSet() );
   :throws: UserException
   :module: :source:`src/mongo/s/d_chunk_manager.cpp#L334`

.. line: uassert( 13591 , "version can't be set to zero" , version.isSet() );

.. error:: 13591

   :message: "version can't be set to zero"
   :throws: UserException
   :module: :source:`src/mongo/s/d_chunk_manager.cpp#L366`

.. line: msgasserted(13594, "journal checksum doesn't match");

.. error:: 13594

   :message: "journal checksum doesn't match"
   :severity: Info
   :module: :source:`src/mongo/db/dur_recover.cpp#L358`

.. line: uassert( 13596 , str::stream() << "cannot change _id of a document old:" << objOld << " new:" << objNew , ! changedId );

.. error:: 13596

   :message: str::stream() << "cannot change _id of a document old:" << objOld << " new:" << objNew , ! changedId );
   :throws: UserException
   :module: :source:`src/mongo/db/pdfile.cpp#L1075`

.. line: uasserted(13597, "can't start without --journal enabled when journal/ files are present");

.. error:: 13597

   :message: "can't start without --journal enabled when journal/ files are present"
   :throws: UserException
   :module: :source:`src/mongo/db/instance.cpp#L1213`

.. line: uassert( 13598 , str::stream() << "couldn't compile code for: " << _type , _func );

.. error:: 13598

   :message: str::stream() << "couldn't compile code for: " << _type , _func );
   :throws: UserException
   :module: :source:`src/mongo/db/commands/mr.cpp#L54`

.. line: massert(13599, "Written data does not match in-memory view. Missing WriteIntent?", false);

.. error:: 13599

   :message: "Written data does not match in-memory view. Missing WriteIntent?"
   :severity: Info
   :module: :source:`src/mongo/db/dur.cpp#L424`

.. line: /*uassert(13600,

.. error:: 13600

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/util/paths.h#L59`

.. line: uassert( 13602 , "outType is no longer a valid option" , cmdObj["outType"].eoo() );

.. error:: 13602

   :message: "outType is no longer a valid option"
   :throws: UserException
   :module: :source:`src/mongo/db/commands/mr.cpp#L234`

.. line: uassert( 13604 , "too much data for in memory map/reduce" , _size < BSONObjMaxUserSize );

.. error:: 13604

   :message: "too much data for in memory map/reduce"
   :throws: UserException
   :module: :source:`src/mongo/db/commands/mr.cpp#L430`

.. line: uasserted( 13606 , "'out' has to be a string or an object" );

.. error:: 13606

   :message: "'out' has to be a string or an object"
   :throws: UserException
   :module: :source:`src/mongo/db/commands/mr.cpp#L276`

.. line: uassert( 13608 , "query has to be blank or an Object" , ! q.trueValue() );

.. error:: 13608

   :message: "query has to be blank or an Object"
   :throws: UserException
   :module: :source:`src/mongo/db/commands/mr.cpp#L316`

.. line: uassert( 13609 , "sort has to be blank or an Object" , ! s.trueValue() );

.. error:: 13609

   :message: "sort has to be blank or an Object"
   :throws: UserException
   :module: :source:`src/mongo/db/commands/mr.cpp#L323`

.. line: massert( 13610 , "ConfigChangeHook already specified" , _hook == 0 );

.. error:: 13610

   :message: "ConfigChangeHook already specified"
   :severity: Info
   :module: :source:`src/mongo/client/dbclient_rs.cpp#L345`

.. line: uasserted(13611, str::stream() << "can't read lsn file in journal directory : " << e.what());

.. error:: 13611

   :message: str::stream() << "can't read lsn file in journal directory : " << e.what());
   :throws: UserException
   :module: :source:`src/mongo/db/dur_journal.cpp#L563`

.. line: uassert(13612, "replSet bad config maximum number of voting members is 7", voters <= 7);

.. error:: 13612

   :message: "replSet bad config maximum number of voting members is 7"
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_config.cpp#L332`

.. line: uassert(13613, "replSet bad config no voting members", voters > 0);

.. error:: 13613

   :message: "replSet bad config no voting members"
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_config.cpp#L333`

.. line: uassert(13614, str::stream() << "unexpected version number of lsn file in journal/ directory got: " << ver , ver == 0);

.. error:: 13614

   :message: str::stream() << "unexpected version number of lsn file in journal/ directory got: " << ver , ver == 0);
   :throws: UserException
   :module: :source:`src/mongo/db/dur_journal.cpp#L530`

.. line: massert( 13615 , "JS allocation failed, either memory leak or using too much memory" , newthing )

.. error:: 13615

   :message: "JS allocation failed, either memory leak or using too much memory"
   :severity: Info
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L44`

.. line: massert(13616, "can't disable durability with pending writes", !commitJob.hasWritten());

.. error:: 13616

   :message: "can't disable durability with pending writes"
   :severity: Info
   :module: :source:`src/mongo/db/dur.cpp#L200`

.. line: massert(13617, "MongoFile : multiple opens of same filename", ptf == 0);

.. error:: 13617

   :message: "MongoFile : multiple opens of same filename"
   :severity: Info
   :module: :source:`src/mongo/util/mmap.cpp#L198`

.. line: uasserted(13618, "can't start without --journal enabled when journal/ files are present");

.. error:: 13618

   :message: "can't start without --journal enabled when journal/ files are present"
   :throws: UserException
   :module: :source:`src/mongo/db/instance.cpp#L1238`

.. line: uassert( 13619, "fuzzFile takes 2 arguments", args.nFields() == 2 );

.. error:: 13619

   :message: "fuzzFile takes 2 arguments"
   :throws: UserException
   :module: :source:`src/mongo/shell/shell_utils_extended.cpp#L189`

.. line: uassert( 13620, "couldn't open file to fuzz", !f->bad() && f->is_open() );

.. error:: 13620

   :message: "couldn't open file to fuzz"
   :throws: UserException
   :module: :source:`src/mongo/shell/shell_utils_extended.cpp#L192`

.. line: massert(13622, "Trying to write past end of file in WRITETODATAFILES", _recovering);

.. error:: 13622

   :message: "Trying to write past end of file in WRITETODATAFILES"
   :severity: Info
   :module: :source:`src/mongo/db/dur_recover.cpp#L255`

.. line: uassert( 13625, "Unable to truncate lock file", _chsize(lockFile, 0) == 0);

.. error:: 13625

   :message: "Unable to truncate lock file"
   :throws: UserException
   :module: :source:`src/mongo/db/instance.cpp#L1217`

.. line: uasserted( 13627 , str::stream() << "Unable to create/open lock file: " << name << ' ' << m << ". Is a mongod instance already running?" );

.. error:: 13627

   :message: str::stream() << "Unable to create/open lock file: " << name << ' ' << m << ". Is a mongod instance already running?" );
   :throws: UserException
   :module: :source:`src/mongo/db/instance.cpp#L1126`

.. line: massert(13628, str::stream() << "recover failure writing file " << full, !f.bad() );

.. error:: 13628

   :message: str::stream() << "recover failure writing file " << full, !f.bad() );
   :severity: Info
   :module: :source:`src/mongo/db/durop.cpp#L158`

.. line: uassert( 13629 , "can't have undefined in a query expression" , e.type() != Undefined );

.. error:: 13629

   :message: "can't have undefined in a query expression"
   :throws: UserException
   :module: :source:`src/mongo/db/matcher.cpp#L438`

.. line: uasserted( 13630 , str::stream() << "userCreateNS failed for mr tempLong ns: " << _config.tempLong << " err: " << errmsg );

.. error:: 13630

   :message: str::stream() << "userCreateNS failed for mr tempLong ns: " << _config.tempLong << " err: " << errmsg );
   :throws: UserException
   :module: :source:`src/mongo/db/commands/mr.cpp#L360`

.. line: uasserted( 13631 , str::stream() << "userCreateNS failed for mr incLong ns: " << _config.incLong << " err: " << err );

.. error:: 13631

   :message: str::stream() << "userCreateNS failed for mr incLong ns: " << _config.incLong << " err: " << err );
   :throws: UserException
   :module: :source:`src/mongo/db/commands/mr.cpp#L346`

.. line: massert( 13632 , "couldn't get updated shard list from config server" , c.get() );

.. error:: 13632

   :message: "couldn't get updated shard list from config server"
   :severity: Info
   :module: :source:`src/mongo/s/shard.cpp#L44`

.. line: massert( 13633 , str::stream() << "error querying server: " << server  , cursor.get() );

.. error:: 13633

   :message: str::stream() << "error querying server: " << server  , cursor.get() );
   :severity: Info
   :module: :source:`src/mongo/client/parallel.cpp#L144`

.. line: uasserted( 13639 , str::stream() << "can't connect to new replica set master [" << _masterHost.toString() << "] err: " << errmsg );

.. error:: 13639

   :message: str::stream() << "can't connect to new replica set master [" << _masterHost.toString() << "] err: " << errmsg );
   :throws: UserException
   :module: :source:`src/mongo/client/dbclient_rs.cpp#L1302`

.. line: massert(13640, str::stream() << "DataFileHeader looks corrupt at file open filelength:" << filelength << " fileno:" << fileno, false);

.. error:: 13640

   :message: str::stream() << "DataFileHeader looks corrupt at file open filelength:" << filelength << " fileno:" << fileno, false);
   :severity: Info
   :module: :source:`src/mongo/db/pdfile.h#L437`

.. line: uassert( 13641 , str::stream() << "can't parse host [" << conn.getServerAddress() << "]" , cs.isValid() );

.. error:: 13641

   :message: str::stream() << "can't parse host [" << conn.getServerAddress() << "]" , cs.isValid() );
   :throws: UserException
   :module: :source:`src/mongo/s/writeback_listener.cpp#L69`

.. line: uassert( 13642 , "need at least 1 node for a replica set" , servers.size() > 0 );

.. error:: 13642

   :message: "need at least 1 node for a replica set"
   :throws: UserException
   :module: :source:`src/mongo/client/dbclient_rs.cpp#L232`

.. line: massert( 13643 , mongoutils::str::stream() << "backgroundjob already started: " << name() , status->state == NotStarted );

.. error:: 13643

   :message: mongoutils::str::stream() << "backgroundjob already started: " << name() , status->state == NotStarted );
   :severity: Info
   :module: :source:`src/mongo/util/background.cpp#L55`

.. line: uassert( 13644 , "can't use 'local' database through mongos" , ! str::startsWith( getns() , "local." ) );

.. error:: 13644

   :message: "can't use 'local' database through mongos"
   :throws: UserException
   :module: :source:`src/mongo/s/request.cpp#L80`

.. line: uasserted(13645, "hosts cannot switch between localhost and hostname");

.. error:: 13645

   :message: "hosts cannot switch between localhost and hostname"
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_config.cpp#L266`

.. line: uasserted(13646, str::stream() << "stat() failed for file: " << path << " " << errnoWithDescription());

.. error:: 13646

   :message: str::stream() << "stat() failed for file: " << path << " " << errnoWithDescription());
   :throws: UserException
   :module: :source:`src/mongo/util/paths.h#L88`

.. line: massert( 13647 , str::stream() << "context should be empty here, is: " << cc().getContext()->ns() , cc().getContext() == 0 );

.. error:: 13647

   :message: str::stream() << "context should be empty here, is: " << cc().getContext()->ns() , cc().getContext() == 0 );
   :severity: Info
   :module: :source:`src/mongo/s/d_state.cpp#L592`

.. line: uassert( 13648 , str::stream() << "can't shard collection because not all config servers are up" , configServer.allUp() );

.. error:: 13648

   :message: str::stream() << "can't shard collection because not all config servers are up" , configServer.allUp() );
   :throws: UserException
   :module: :source:`src/mongo/s/config.cpp#L167`

.. line: uassert(13649, "no operation yet", le);

.. error:: 13649

   :message: "no operation yet"
   :throws: UserException
   :module: :source:`src/mongo/db/lasterror.cpp#L93`

.. line: massert(13650, str::stream() << "Couldn't open directory '" << dir.string() << "' for flushing: " << errnoWithDescription(), fd >= 0);

.. error:: 13650

   :message: str::stream() << "Couldn't open directory '" << dir.string() << "' for flushing: " << errnoWithDescription(), fd >= 0);
   :severity: Info
   :module: :source:`src/mongo/util/paths.h#L116`

.. line: massert(13651, str::stream() << "Couldn't fsync directory '" << dir.string() << "': " << errnoWithDescription(e), false);

.. error:: 13651

   :message: str::stream() << "Couldn't fsync directory '" << dir.string() << "': " << errnoWithDescription(e), false);
   :severity: Info
   :module: :source:`src/mongo/util/paths.h#L120`

.. line: // massert(13652, str::stream() << "Couldn't find parent dir for file: " << file.string(), );

.. error:: 13652

   :message: str::stream() << "Couldn't find parent dir for file: " << file.string(), );
   :severity: Info
   :module: :source:`src/mongo/util/paths.h#L104`

.. line: uassert( 13654, str::stream() << "location object expected, location array not in correct format",

.. error:: 13654

   :message: str::stream() << "location object expected, location array not in correct format",
   :throws: UserException
   :module: :source:`src/mongo/db/geo/2d.cpp#L249`

.. line: massert( 13655 , msg.c_str(),false);

.. error:: 13655

   :message: msg.c_str(),false);
   :severity: Info
   :module: :source:`src/mongo/bson/bson-inl.h#L593`

.. line: uassert( 13656 , "the first field of $center object must be a location object" , center.isABSONObj() );

.. error:: 13656

   :message: "the first field of $center object must be a location object"
   :throws: UserException
   :module: :source:`src/mongo/db/geo/2d.cpp#L2508`

.. line: massert( 13658 , str::stream() << "bad kill cursors size: " << m.dataSize() , m.dataSize() == 8 + ( 8 * n ) );

.. error:: 13658

   :message: str::stream() << "bad kill cursors size: " << m.dataSize() , m.dataSize() == 8 + ( 8 * n ) );
   :severity: Info
   :module: :source:`src/mongo/db/instance.cpp#L499`

.. line: uassert( 13659 , "sent 0 cursors to kill" , n != 0 );

.. error:: 13659

   :message: "sent 0 cursors to kill"
   :throws: UserException
   :module: :source:`src/mongo/db/instance.cpp#L498`

.. line: massert( 13660, str::stream() << "namespace " << ns << " does not exist", d );

.. error:: 13660

   :message: str::stream() << "namespace " << ns << " does not exist", d );
   :severity: Info
   :module: :source:`src/mongo/db/compact.cpp#L316`

.. line: massert( 13661, "cannot compact capped collection", !d->isCapped() );

.. error:: 13661

   :message: "cannot compact capped collection"
   :severity: Info
   :module: :source:`src/mongo/db/compact.cpp#L317`

.. line: uassert(13678, str::stream() << "Could not communicate with server " << server.toString() << " in cluster " << cluster.toString() << " to change skew by " << *i, success );

.. error:: 13678

   :message: str::stream() << "Could not communicate with server " << server.toString() << " in cluster " << cluster.toString() << " to change skew by " << *i, success );
   :throws: UserException
   :module: :source:`src/mongo/client/distlock_test.cpp#L386`

.. line: 	uassert( 14022, str::stream() << "Error locking distributed lock for chunk drop." << causedBy( e ), false);

.. error:: 14022

   :message: str::stream() << "Error locking distributed lock for chunk drop." << causedBy( e ), false);
   :throws: UserException
   :module: :source:`src/mongo/s/chunk.cpp#L1194`

.. line: uassert( 14023, str::stream() << "remote time in cluster " << _conn.toString() << " is now skewed, cannot force lock.", !isRemoteTimeSkewed() );

.. error:: 14023

   :message: str::stream() << "remote time in cluster " << _conn.toString() << " is now skewed, cannot force lock.", !isRemoteTimeSkewed() );
   :throws: UserException
   :module: :source:`src/mongo/client/distlock.cpp#L617`

.. line: uassert(14024, "compact error out of space during compaction", !loc.isNull());

.. error:: 14024

   :message: "compact error out of space during compaction"
   :throws: UserException
   :module: :source:`src/mongo/db/compact.cpp#L115`

.. line: uassert(14025, "compact error no space available to allocate", !allocateSpaceForANewRecord(ns, d, Record::HeaderSize+1, false).isNull());

.. error:: 14025

   :message: "compact error no space available to allocate"
   :throws: UserException
   :module: :source:`src/mongo/db/compact.cpp#L247`

.. line: uasserted(14026,

.. error:: 14026

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/db/db.cpp#L307`

.. line: massert( 14027, "can't compact a system namespace", !str::contains(ns, ".system.") ); // items in system.indexes cannot be moved there are pointers to those disklocs in NamespaceDetails

.. error:: 14027

   :message: "can't compact a system namespace"
   :severity: Info
   :module: :source:`src/mongo/db/compact.cpp#L308`

.. line: massert( 14028, "bad ns", NamespaceString::normal(ns.c_str()) );

.. error:: 14028

   :message: "bad ns"
   :severity: Info
   :module: :source:`src/mongo/db/compact.cpp#L307`

.. line: uassert( 14029 , "$polygon has to take an object or array" , e.isABSONObj() );

.. error:: 14029

   :message: "$polygon has to take an object or array"
   :throws: UserException
   :module: :source:`src/mongo/db/geo/2d.cpp#L2852`

.. line: uassert( 14030, "polygon must be defined by three points or more", _poly.size() >= 3 );

.. error:: 14030

   :message: "polygon must be defined by three points or more"
   :throws: UserException
   :module: :source:`src/mongo/db/geo/2d.cpp#L2716`

.. line: uassert(14031, "Can't take a write lock while out of disk space", false);

.. error:: 14031

   :message: "Can't take a write lock while out of disk space"
   :throws: UserException
   :module: :source:`src/mongo/db/client.cpp#L302`

.. line: 	            massert( 14032, "Invalid 'ts' in remote log", ts.type() == Date || ts.type() == Timestamp );

.. error:: 14032

   :message: "Invalid 'ts' in remote log"
   :severity: Info
   :module: :source:`src/mongo/db/repl.cpp#L570`

.. line: massert( 14033, "Unable to get database list", ok );

.. error:: 14033

   :message: "Unable to get database list"
   :severity: Info
   :module: :source:`src/mongo/db/repl.cpp#L576`

.. line: massert( 14034, "Duplicate database names present after attempting to delete duplicates",

.. error:: 14034

   :message: "Duplicate database names present after attempting to delete duplicates"
   :severity: Info
   :module: :source:`src/mongo/db/repl.cpp#L618`

.. line: uassert(14035, errnoWithPrefix("couldn't write to file"), ret);

.. error:: 14035

   :message: errnoWithPrefix("couldn't write to file"), ret);
   :throws: UserException
   :module: :source:`src/mongo/tools/dump.cpp#L78`

.. line: massert(14036, errnoWithPrefix("couldn't write to log file"),

.. error:: 14036

   :message: errnoWithPrefix("couldn't write to log file"),
   :severity: Info
   :module: :source:`src/mongo/util/log.cpp#L112`

.. line: uasserted(14037, "can't create user databases on a --configsvr instance");

.. error:: 14037

   :message: "can't create user databases on a --configsvr instance"
   :throws: UserException
   :module: :source:`src/mongo/db/pdfile.cpp#L234`

.. line: massert( 14038, "invalid _findingStartMode", false );

.. error:: 14038

   :message: "invalid _findingStartMode"
   :severity: Info
   :module: :source:`src/mongo/db/oplog.cpp#L474`

.. line: uasserted( 14039 , str::stream() << "version " << version.toString() << " not greater than " << _version.toString() );

.. error:: 14039

   :message: str::stream() << "version " << version.toString() << " not greater than " << _version.toString() );
   :throws: UserException
   :module: :source:`src/mongo/s/d_chunk_manager.cpp#L407`

.. line: uasserted( 14040 , str::stream() << "can split " << min << " -> " << max << " on " << *it );

.. error:: 14040

   :message: str::stream() << "can split " << min << " -> " << max << " on " << *it );
   :throws: UserException
   :module: :source:`src/mongo/s/d_chunk_manager.cpp#L414`

.. line: uassert(14042, ss.str(), success);

.. error:: 14042

   :message: ss.str(), success);
   :throws: UserException
   :module: :source:`src/mongo/shell/shell_utils_launcher.cpp#L376`

.. line: massert(14045, "missing Extra", e);

.. error:: 14045

   :message: "missing Extra"
   :severity: Info
   :module: :source:`src/mongo/db/namespace_details-inl.h#L34`

.. line: uassert(14046, "getLastErrorMode rules must be objects", rule.type() == mongo::Object);

.. error:: 14046

   :message: "getLastErrorMode rules must be objects"
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_config.cpp#L382`

.. line: massert( 14048, "FieldRangeSetPair invalid index specified", idxNo >= 0 && idxNo < d->nIndexes );

.. error:: 14048

   :message: "FieldRangeSetPair invalid index specified"
   :severity: Info
   :module: :source:`src/mongo/db/queryutil.cpp#L1348`

.. line: massert( 14049, "FieldRangeSetPair invalid index specified", idxNo >= -1 );

.. error:: 14049

   :message: "FieldRangeSetPair invalid index specified"
   :severity: Info
   :module: :source:`src/mongo/db/queryutil-inl.h#L138`

.. line: uassert( 14050 , "List1: item to orphan not in list", n );

.. error:: 14050

   :message: "List1: item to orphan not in list"
   :throws: UserException
   :module: :source:`src/mongo/util/concurrency/list.h#L84`

.. line: uassert( 14051 , "system.users entry needs 'user' field to be a string" , t["user"].type() == String );

.. error:: 14051

   :message: "system.users entry needs 'user' field to be a string"
   :throws: UserException
   :module: :source:`src/mongo/db/pdfile.cpp#L1307`

.. line: uassert( 14052 , "system.users entry needs 'pwd' field to be a string" , t["pwd"].type() == String );

.. error:: 14052

   :message: "system.users entry needs 'pwd' field to be a string"
   :throws: UserException
   :module: :source:`src/mongo/db/pdfile.cpp#L1308`

.. line: uassert( 14053 , "system.users entry needs 'user' field to be non-empty" , t["user"].String().size() );

.. error:: 14053

   :message: "system.users entry needs 'user' field to be non-empty"
   :throws: UserException
   :module: :source:`src/mongo/db/pdfile.cpp#L1309`

.. line: uassert( 14054 , "system.users entry needs 'pwd' field to be non-empty" , t["pwd"].String().size() );

.. error:: 14054

   :message: "system.users entry needs 'pwd' field to be non-empty"
   :throws: UserException
   :module: :source:`src/mongo/db/pdfile.cpp#L1310`

.. line: uasserted(14800, str::stream() << "unsupported index version " << v);

.. error:: 14800

   :message: str::stream() << "unsupported index version " << v);
   :throws: UserException
   :module: :source:`src/mongo/db/btreecursor.cpp#L216`

.. line: uassert(14802, "index v field should be Integer type", v == 0);

.. error:: 14802

   :message: "index v field should be Integer type"
   :throws: UserException
   :module: :source:`src/mongo/db/index.h#L193`

.. line: uassert(14803, str::stream() << "this version of mongod cannot build new indexes of version number " << vv,

.. error:: 14803

   :message: str::stream() << "this version of mongod cannot build new indexes of version number " << vv,
   :throws: UserException
   :module: :source:`src/mongo/db/index.cpp#L394`

.. line: uassert( 14808, str::stream() << "point " << p.toString() << " must be in earth-like bounds of long : [-180, 180], lat : [-90, 90] ",

.. error:: 14808

   :message: str::stream() << "point " << p.toString() << " must be in earth-like bounds of long : [-180, 180], lat : [-90, 90] ",
   :throws: UserException
   :module: :source:`src/mongo/db/geo/core.h#L509`

.. line: massert( 14809, "Invalid access for cursor that is not ok()", !_currLoc().isNull() );

.. error:: 14809

   :message: "Invalid access for cursor that is not ok()"
   :severity: Info
   :module: :source:`src/mongo/db/queryoptimizercursorimpl.cpp#L666`

.. line: uasserted(14810, "couldn't allocate space (suitableFile)"); // callers don't check for null return code

.. error:: 14810

   :message: "couldn't allocate space (suitableFile)"
   :throws: UserException
   :module: :source:`src/mongo/db/database.cpp#L341`

.. line: uasserted( 14811 , str::stream() << "invalid bench dynamic piece: " << f.fieldName() );

.. error:: 14811

   :message: str::stream() << "invalid bench dynamic piece: " << f.fieldName() );
   :throws: UserException
   :module: :source:`src/mongo/scripting/bench.cpp#L308`

.. line: uassert(14812,  str::stream() << "Error running command on server: " << _server, finished);

.. error:: 14812

   :message: str::stream() << "Error running command on server: " << _server, finished);
   :throws: UserException
   :module: :source:`src/mongo/client/parallel.cpp#L1662`

.. line: massert(14813, "Command returned nothing", _cursor->more());

.. error:: 14813

   :message: "Command returned nothing"
   :severity: Info
   :module: :source:`src/mongo/client/parallel.cpp#L1663`

.. line: uassert( 14816, "$and expression must be a nonempty array",

.. error:: 14816

   :message: "$and expression must be a nonempty array"
   :throws: UserException
   :module: :source:`src/mongo/db/queryutil.cpp#L970`

.. line: uassert( 14817, "$and/$or elements must be objects", clause.type() == Object );

.. error:: 14817

   :message: "$and/$or elements must be objects"
   :throws: UserException
   :module: :source:`src/mongo/db/queryutil.cpp#L957`

.. line: massert(14821, "No client or lazy client specified, cannot store multi-host connection.", false);

.. error:: 14821

   :message: "No client or lazy client specified, cannot store multi-host connection."
   :severity: Info
   :module: :source:`src/mongo/client/dbclientcursor.cpp#L300`

.. line: uassert( 14822 ,  (string)"state changed in the middle: " + ns , ci.isSharded() );

.. error:: 14822

   :message: (string)"state changed in the middle: " + ns , ci.isSharded() );
   :throws: UserException
   :module: :source:`src/mongo/s/config.cpp#L394`

.. line: throw MsgAssertionException( 14823 , "missing extra" );

.. error:: 14823

   :message: "missing extra" );
   :throws: MsgAssertionException
   :module: :source:`src/mongo/db/namespace_details-inl.h#L41`

.. line: massert(14824, "missing Extra", e);

.. error:: 14824

   :message: "missing Extra"
   :severity: Info
   :module: :source:`src/mongo/db/namespace_details-inl.h#L42`

.. line: throw MsgAssertionException( 14825 , ErrorMsg("error in applyOperation : unknown opType ", *opType) );

.. error:: 14825

   :message: ErrorMsg("error in applyOperation : unknown opType ", *opType) );
   :throws: MsgAssertionException
   :module: :source:`src/mongo/db/oplog.cpp#L849`

.. line: uassert(14827, "arbiters cannot have tags", !m.arbiterOnly || m.tags.empty() );

.. error:: 14827

   :message: "arbiters cannot have tags"
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_config.cpp#L524`

.. line: uassert(14828, str::stream() << "getLastErrorMode criteria must be greater than 0: " << clauseElem, value > 0);

.. error:: 14828

   :message: str::stream() << "getLastErrorMode criteria must be greater than 0: " << clauseElem, value > 0);
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_config.cpp#L394`

.. line: uassert(14829, "getLastErrorMode criteria must be numeric", clauseElem.isNumber());

.. error:: 14829

   :message: "getLastErrorMode criteria must be numeric"
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_config.cpp#L389`

.. line: uassert(14830, str::stream() << "unrecognized getLastError mode: " << wStr,

.. error:: 14830

   :message: str::stream() << "unrecognized getLastError mode: " << wStr,
   :throws: UserException
   :module: :source:`src/mongo/db/repl_block.cpp#L164`

.. line: uassert(14831, str::stream() << "mode " << clauseObj << " requires "

.. error:: 14831

   :message: str::stream() << "mode " << clauseObj << " requires "
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_config.cpp#L399`

.. line: uassert(14832, "specify size:<n> when capped is true", !cmdObj["capped"].trueValue() || cmdObj["size"].isNumber() || cmdObj.hasField("$nExtents"));

.. error:: 14832

   :message: "specify size:<n> when capped is true"
   :throws: UserException
   :module: :source:`src/mongo/db/dbcommands.cpp#L841`

.. line: uassert(14833, "auth error", str::equals(ns, cc->ns().c_str()));

.. error:: 14833

   :message: "auth error"
   :throws: UserException
   :module: :source:`src/mongo/db/ops/query.cpp#L103`

.. line: uassert( 14844, "$atomic specifier must be a top level field", !nested );

.. error:: 14844

   :message: "$atomic specifier must be a top level field"
   :throws: UserException
   :module: :source:`src/mongo/db/matcher.cpp#L516`

.. line: uassert( 14853 ,  "type not supported for appendMaxElementForType" , false );

.. error:: 14853

   :message: "type not supported for appendMaxElementForType"
   :throws: UserException
   :module: :source:`src/mongo/db/jsobj.cpp#L1201`

.. line: uassert( 15845 ,

.. error:: 15845

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/s/request.cpp#L62`

.. line: uassert( 15847, str::stream() << "can't authenticate to server "

.. error:: 15847

   :message: str::stream() << "can't authenticate to server "
   :throws: UserException
   :module: :source:`src/mongo/s/shard.cpp#L400`

.. line: massert( 15848, "sync cluster of sync clusters?",

.. error:: 15848

   :message: "sync cluster of sync clusters?"
   :severity: Info
   :module: :source:`src/mongo/client/syncclusterconnection.cpp#L218`

.. line: massert(15849, "client info not defined", c);

.. error:: 15849

   :message: "client info not defined"
   :severity: Info
   :module: :source:`src/mongo/s/server.cpp#L90`

.. line: throw UserException(15850, "keyAt bucket deleted");

.. error:: 15850

   :message: "keyAt bucket deleted");
   :throws: UserException
   :module: :source:`src/mongo/db/btreecursor.cpp#L62`

.. line: uassert( 15852 , "stopMongoByPid needs a number" , a.firstElement().isNumber() );

.. error:: 15852

   :message: "stopMongoByPid needs a number"
   :throws: UserException
   :module: :source:`src/mongo/shell/shell_utils_launcher.cpp#L712`

.. line: uassert( 15853 , "stopMongo needs a number" , a.firstElement().isNumber() );

.. error:: 15853

   :message: "stopMongo needs a number"
   :throws: UserException
   :module: :source:`src/mongo/shell/shell_utils_launcher.cpp#L703`

.. line: uassert (15854, "CSV file ends while inside quoted field", line[0] != '\0');

.. error:: 15854

   :message: "CSV file ends while inside quoted field"
   :throws: UserException
   :module: :source:`src/mongo/tools/import.cpp#L223`

.. line: uassert( 15855 ,  str::stream() << "Ambiguous field name found in array (do not use numeric field names in embedded elements in an array), field: '" << arrField.fieldName() << "' for array: " << arr, !haveObjField || !haveArrField );

.. error:: 15855

   :message: str::stream() << "Ambiguous field name found in array (do not use numeric field names in embedded elements in an array), field: '" << arrField.fieldName() << "' for array: " << arr, !haveObjField || !haveArrField );
   :throws: UserException
   :module: :source:`src/mongo/db/indexkey.cpp#L299`

.. line: massert( 15861 , "can't create SSL" , ssl );

.. error:: 15861

   :message: "can't create SSL"
   :severity: Info
   :module: :source:`src/mongo/util/net/sock.cpp#L483`

.. line: uasserted( 15862 , "no ssl support" );

.. error:: 15862

   :message: "no ssl support"
   :throws: UserException
   :module: :source:`src/mongo/util/net/httpclient.cpp#L108`

.. line: massert( 15863 , str::stream() << "listen(): invalid socket? " << errnoWithDescription() , sock >= 0 );

.. error:: 15863

   :message: str::stream() << "listen(): invalid socket? " << errnoWithDescription() , sock >= 0 );
   :severity: Info
   :module: :source:`src/mongo/util/net/listen.cpp#L134`

.. line: massert( 15864 , mongoutils::str::stream() << "can't create SSL Context: " << ERR_error_string(ERR_get_error(), NULL) , _context );

.. error:: 15864

   :message: mongoutils::str::stream() << "can't create SSL Context: " << ERR_error_string(ERR_get_error(), NULL) , _context );
   :severity: Info
   :module: :source:`src/mongo/util/net/sock.cpp#L433`

.. line: massert( 15865 ,

.. error:: 15865

   :message: 
   :severity: Info
   :module: :source:`src/mongo/util/net/sock.cpp#L441`

.. line: massert( 15866 ,

.. error:: 15866

   :message: 
   :severity: Info
   :module: :source:`src/mongo/util/net/sock.cpp#L447`

.. line: massert( 15869, "Invalid index version for key generation.", false );

.. error:: 15869

   :message: "Invalid index version for key generation."
   :severity: Info
   :module: :source:`src/mongo/db/indexkey.cpp#L415`

.. line: msgasserted(15874, "couldn't uncompress journal section");

.. error:: 15874

   :message: "couldn't uncompress journal section"
   :severity: Info
   :module: :source:`src/mongo/db/dur_recover.cpp#L114`

.. line: massert( 15875 , "DBClientCursor::initLazy called on a client that doesn't support lazy" , _client->lazySupported() );

.. error:: 15875

   :message: "DBClientCursor::initLazy called on a client that doesn't support lazy"
   :severity: Info
   :module: :source:`src/mongo/client/dbclientcursor.cpp#L81`

.. line: uassert( 15876, str::stream() << "could not create cursor over " << config.ns << " to hold data while prepping m/r", temp.get() );

.. error:: 15876

   :message: str::stream() << "could not create cursor over " << config.ns << " to hold data while prepping m/r", temp.get() );
   :throws: UserException
   :module: :source:`src/mongo/db/commands/mr.cpp#L1042`

.. line: uassert( 15877, str::stream() << "could not create m/r holding client cursor over " << config.ns, holdCursor.get() );

.. error:: 15877

   :message: str::stream() << "could not create m/r holding client cursor over " << config.ns, holdCursor.get() );
   :throws: UserException
   :module: :source:`src/mongo/db/commands/mr.cpp#L1044`

.. line: massert(15880, "no ram log for warnings?" , rl);

.. error:: 15880

   :message: "no ram log for warnings?"
   :severity: Info
   :module: :source:`src/mongo/db/dbcommands.cpp#L676`

.. line: uassert( 15881, "$elemMatch not allowed within $in",

.. error:: 15881

   :message: "$elemMatch not allowed within $in"
   :throws: UserException
   :module: :source:`src/mongo/db/queryutil.cpp#L178`

.. line: uassert( 15882, "$elemMatch not allowed within $in",

.. error:: 15882

   :message: "$elemMatch not allowed within $in"
   :throws: UserException
   :module: :source:`src/mongo/db/matcher.cpp#L207`

.. line: uassert( 15883 , str::stream() << "not sharded after chunk manager reset : " << ns , ci.isSharded() );

.. error:: 15883

   :message: str::stream() << "not sharded after chunk manager reset : " << ns , ci.isSharded() );
   :throws: UserException
   :module: :source:`src/mongo/s/config.cpp#L426`

.. line: uassert( 15884, str::stream()

.. error:: 15884

   :message: str::stream()
   :throws: UserException
   :module: :source:`src/mongo/s/writeback_listener.cpp#L364`

.. line: uassert( 15885 , str::stream() << "not sharded after reloading from chunks : " << ns , ci.isSharded() );

.. error:: 15885

   :message: str::stream() << "not sharded after reloading from chunks : " << ns , ci.isSharded() );
   :throws: UserException
   :module: :source:`src/mongo/s/config.cpp#L341`

.. line: uassert(15888, "must pass name of collection to create", cmdObj.firstElement().valuestrsafe()[0] != '\0');

.. error:: 15888

   :message: "must pass name of collection to create"
   :throws: UserException
   :module: :source:`src/mongo/db/dbcommands.cpp#L838`

.. line: uassert(15889, "key file must be used to log in with internal user", cmdLine.keyFile);

.. error:: 15889

   :message: "key file must be used to log in with internal user"
   :throws: UserException
   :module: :source:`src/mongo/db/security.cpp#L120`

.. line: uassert(15890, "key file must be used to log in with internal user", cmdLine.keyFile);

.. error:: 15890

   :message: "key file must be used to log in with internal user"
   :throws: UserException
   :module: :source:`src/mongo/s/security.cpp#L35`

.. line: uassert(15891, "can't backfill array to larger than 1,500,000 elements", upTo <= maxElems);

.. error:: 15891

   :message: "can't backfill array to larger than 1,500,000 elements"
   :throws: UserException
   :module: :source:`src/mongo/bson/bsonobjbuilder.h#L836`

.. line: uassert( 15895 , "nonAtomic option cannot be used with this output type", (outType == REDUCE || outType == MERGE) );

.. error:: 15895

   :message: "nonAtomic option cannot be used with this output type"
   :throws: UserException
   :module: :source:`src/mongo/db/commands/mr.cpp#L272`

.. line: uassert( 15896,

.. error:: 15896

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L871`

.. line: massert(15899, str::stream() << "No suitable secondary found for slaveOk query"

.. error:: 15899

   :message: str::stream() << "No suitable secondary found for slaveOk query"
   :severity: Info
   :module: :source:`src/mongo/client/dbclient_rs.cpp#L480`

.. line: massert(15900, "can't heartbeat: too much lock",

.. error:: 15900

   :message: "can't heartbeat: too much lock"
   :severity: Info
   :module: :source:`src/mongo/db/repl/heartbeat.cpp#L150`

.. line: uassert(15902 , "$where expression has an unexpected type", e.type() == String || e.type() == CodeWScope || e.type() == Code );

.. error:: 15902

   :message: "$where expression has an unexpected type"
   :throws: UserException
   :module: :source:`src/mongo/db/matcher.cpp#L420`

.. line: massert( 15904, str::stream() << "cannot set version on invalid connection " << conn->toString(), false );

.. error:: 15904

   :message: str::stream() << "cannot set version on invalid connection " << conn->toString(), false );
   :severity: Info
   :module: :source:`src/mongo/s/shard_version.cpp#L79`

.. line: massert( 15905, str::stream() << "cannot set version or shard on pair connection " << conn->toString(), false );

.. error:: 15905

   :message: str::stream() << "cannot set version or shard on pair connection " << conn->toString(), false );
   :severity: Info
   :module: :source:`src/mongo/s/shard_version.cpp#L84`

.. line: massert( 15906, str::stream() << "cannot set version or shard on sync connection " << conn->toString(), false );

.. error:: 15906

   :message: str::stream() << "cannot set version or shard on sync connection " << conn->toString(), false );
   :severity: Info
   :module: :source:`src/mongo/s/shard_version.cpp#L87`

.. line: uassert( 15907, str::stream() << "could not initialize sharding on connection " << (*conn).toString() <<

.. error:: 15907

   :message: str::stream() << "could not initialize sharding on connection " << (*conn).toString() <<
   :throws: UserException
   :module: :source:`src/mongo/s/shard.cpp#L418`

.. line: uassert(15908, errmsg, conn->connect(host, errmsg) && replAuthenticate(conn));

.. error:: 15908

   :message: errmsg, conn->connect(host, errmsg) && replAuthenticate(conn));
   :throws: UserException
   :module: :source:`src/mongo/db/cloner.cpp#L244`

.. line: uassert(15909, str::stream() << "replSet rollback error resyncing collection " << ns << ' ' << errmsg, ok);

.. error:: 15909

   :message: str::stream() << "replSet rollback error resyncing collection " << ns << ' ' << errmsg, ok);
   :throws: UserException
   :module: :source:`src/mongo/db/repl/rs_rollback.cpp#L397`

.. line: uassert( 15910, "Doesn't have cursor for reading oplog", cursor.get() );

.. error:: 15910

   :message: "Doesn't have cursor for reading oplog"
   :throws: UserException
   :module: :source:`src/mongo/db/oplogreader.h#L83`

.. line: uassert( 15911, "Doesn't have cursor for reading oplog", cursor.get() );

.. error:: 15911

   :message: "Doesn't have cursor for reading oplog"
   :throws: UserException
   :module: :source:`src/mongo/db/oplogreader.h#L88`

.. line: msgasserted( 15912 , "out of memory StackAllocator::Realloc" );

.. error:: 15912

   :message: "out of memory StackAllocator::Realloc"
   :severity: Info
   :module: :source:`src/mongo/bson/util/builder.h#L83`

.. line: msgasserted( 15913 , "out of memory BufBuilder::reset" );

.. error:: 15913

   :message: "out of memory BufBuilder::reset"
   :severity: Info
   :module: :source:`src/mongo/bson/util/builder.h#L133`

.. line: uassert(15914, "Failure retrying initial sync update", !applyOperation_inlock(op));

.. error:: 15914

   :message: "Failure retrying initial sync update"
   :throws: UserException
   :module: :source:`src/mongo/db/repl.cpp#L629`

.. line: fassert(15915, st->syncApply(*it));

.. error:: 15915

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/repl/rs_sync.cpp#L138`

.. line: uassert(15916, str::stream() << "Can no longer connect to initial sync source: " << hn, missingObjReader.connect(hn));

.. error:: 15916

   :message: str::stream() << "Can no longer connect to initial sync source: " << hn, missingObjReader.connect(hn));
   :throws: UserException
   :module: :source:`src/mongo/db/oplog.cpp#L679`

.. line: uassert(15917, "Got bad disk location when attempting to insert", !d.isNull());

.. error:: 15917

   :message: "Got bad disk location when attempting to insert"
   :throws: UserException
   :module: :source:`src/mongo/db/oplog.cpp#L713`

.. line: uassert( 15918,

.. error:: 15918

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/s/grid.cpp#L44`

.. line: uassert( 15920 ,  "Cannot output to a non-sharded collection, a sharded collection exists" , !confOut->isSharded(finalColLong) );

.. error:: 15920

   :message: "Cannot output to a non-sharded collection, a sharded collection exists"
   :throws: UserException
   :module: :source:`src/mongo/s/commands_public.cpp#L1214`

.. line: uasserted( 15921 ,  str::stream() << "splitVector failed: " << res );

.. error:: 15921

   :message: str::stream() << "splitVector failed: " << res );
   :throws: UserException
   :module: :source:`src/mongo/db/commands/mr.cpp#L414`

.. line: uasserted(15922, mongoutils::str::stream() << "couldn't get file length when opening mapping " << filename << ' ' << e.what() );

.. error:: 15922

   :message: mongoutils::str::stream() << "couldn't get file length when opening mapping " << filename << ' ' << e.what() );
   :throws: UserException
   :module: :source:`src/mongo/util/mmap.cpp#L72`

.. line: uasserted(15923, mongoutils::str::stream() << "couldn't get file length when opening mapping " << filename << ' ' << e.what() );

.. error:: 15923

   :message: mongoutils::str::stream() << "couldn't get file length when opening mapping " << filename << ' ' << e.what() );
   :throws: UserException
   :module: :source:`src/mongo/util/mmap.cpp#L82`

.. line: massert( 15924 , str::stream() << "getFile(): bad file number value " << n << " (corrupt db?): run repair", false);

.. error:: 15924

   :message: str::stream() << "getFile(): bad file number value " << n << " (corrupt db?): run repair", false);
   :severity: Info
   :module: :source:`src/mongo/db/database.cpp#L190`

.. line: uasserted( 15925, "cannot sort with keys that are parallel arrays" );

.. error:: 15925

   :message: "cannot sort with keys that are parallel arrays"
   :throws: UserException
   :module: :source:`src/mongo/db/scanandorder.cpp#L39`

.. line: throw UserException(15926, "Insufficient free space for journals");

.. error:: 15926

   :message: "Insufficient free space for journals");
   :throws: UserException
   :module: :source:`src/mongo/db/dur_journal.cpp#L375`

.. line: massert(15927, "can't open database in a read lock. if db was just closed, consider retrying the query. might otherwise indicate an internal error", !cant);

.. error:: 15927

   :message: "can't open database in a read lock. if db was just closed, consider retrying the query. might otherwise indicate an internal error"
   :severity: Info
   :module: :source:`src/mongo/db/database.cpp#L434`

.. line: uasserted(15928, str::stream() << "can't open a database from a nested read lock " << ns);

.. error:: 15928

   :message: str::stream() << "can't open a database from a nested read lock " << ns);
   :throws: UserException
   :module: :source:`src/mongo/db/client.cpp#L247`

.. line: uassert( 15929, "client access to index backing namespace prohibited", NamespaceString::normal( _ns.c_str() ) );

.. error:: 15929

   :message: "client access to index backing namespace prohibited"
   :throws: UserException
   :module: :source:`src/mongo/db/client.cpp#L352`

.. line: uasserted(15931, "Authenticating to connection for _benchThread failed: " + errmsg);

.. error:: 15931

   :message: "Authenticating to connection for _benchThread failed: " + errmsg);
   :throws: UserException
   :module: :source:`src/mongo/scripting/bench.cpp#L389`

.. line: uasserted(15932, "Authenticating to connection for benchThread failed: " + errmsg);

.. error:: 15932

   :message: "Authenticating to connection for benchThread failed: " + errmsg);
   :throws: UserException
   :module: :source:`src/mongo/scripting/bench.cpp#L684`

.. line: uassert(15933, "Couldn't open file: " + outputFile.string(), file.is_open());

.. error:: 15933

   :message: "Couldn't open file: " + outputFile.string(), file.is_open());
   :throws: UserException
   :module: :source:`src/mongo/tools/dump.cpp#L141`

.. line: uassert(15934, "JSON object size didn't match file size", objSize == fileSize);

.. error:: 15934

   :message: "JSON object size didn't match file size"
   :throws: UserException
   :module: :source:`src/mongo/tools/restore.cpp#L389`

.. line: uassert(15935, "user does not have write access", authLevel == Auth::WRITE);

.. error:: 15935

   :message: "user does not have write access"
   :throws: UserException
   :module: :source:`src/mongo/tools/restore.cpp#L83`

.. line: uasserted(15936, "Creating collection " + _curns + " failed. Errmsg: " + info["errmsg"].String());

.. error:: 15936

   :message: "Creating collection " + _curns + " failed. Errmsg: " + info["errmsg"].String());
   :throws: UserException
   :module: :source:`src/mongo/tools/restore.cpp#L453`

.. line: uassert(15942, str::stream() << "pipeline element " <<

.. error:: 15942

   :message: str::stream() << "pipeline element " <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/pipeline.cpp#L160`

.. line: uassert(15943, str::stream() << "group accumulator " <<

.. error:: 15943

   :message: str::stream() << "group accumulator " <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/accumulator.cpp#L28`

.. line: uassert(15944, "terminating request:  request heap use exceeded 10% of physical RAM", (totalUsed <= errorLimit));

.. error:: 15944

   :message: "terminating request:  request heap use exceeded 10% of physical RAM"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/doc_mem_monitor.cpp#L55`

.. line: uassert(15946, "a document filter expression must be an object",

.. error:: 15946

   :message: "a document filter expression must be an object"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/document_source_filter.cpp#L75`

.. line: uassert(15947, "a group's fields must be specified in an object",

.. error:: 15947

   :message: "a group's fields must be specified in an object"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/document_source_group.cpp#L163`

.. line: uassert(15948, "a group's _id may only be specified once",

.. error:: 15948

   :message: "a group's _id may only be specified once"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/document_source_group.cpp#L177`

.. line: uassert(15949, str::stream() <<

.. error:: 15949

   :message: str::stream() <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/document_source_group.cpp#L234`

.. line: uassert(15950, str::stream() <<

.. error:: 15950

   :message: str::stream() <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/document_source_group.cpp#L250`

.. line: uassert(15951, str::stream() <<

.. error:: 15951

   :message: str::stream() <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/document_source_group.cpp#L255`

.. line: uassert(15952, str::stream() <<

.. error:: 15952

   :message: str::stream() <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/document_source_group.cpp#L274`

.. line: uassert(15953, str::stream() <<

.. error:: 15953

   :message: str::stream() <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/document_source_group.cpp#L289`

.. line: uassert(15954, str::stream() <<

.. error:: 15954

   :message: str::stream() <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/document_source_group.cpp#L301`

.. line: uassert(15955, "a group specification must include an _id", idSet);

.. error:: 15955

   :message: "a group specification must include an _id"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/document_source_group.cpp#L308`

.. line: uassert(15956, str::stream() << DocumentSourceSkip::skipName <<

.. error:: 15956

   :message: str::stream() << DocumentSourceSkip::skipName <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/document_source_skip.cpp#L119`

.. line: uassert(15957, "the limit must be specified as a number",

.. error:: 15957

   :message: "the limit must be specified as a number"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/document_source_limit.cpp#L100`

.. line: uassert(15958, "the limit must be positive",

.. error:: 15958

   :message: "the limit must be positive"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/document_source_limit.cpp#L107`

.. line: uassert(15959, "the match filter must be an expression in an object",

.. error:: 15959

   :message: "the match filter must be an expression in an object"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/document_source_match.cpp#L84`

.. line: massert(15962, "need to specify namespace" , !nss.db.empty() );

.. error:: 15962

   :message: "need to specify namespace"
   :severity: Info
   :module: :source:`src/mongo/db/commands.cpp#L36`

.. line: massert(15966, str::stream() << "dbname not ok in Command::parseNsFullyQualified: " << dbname , dbname == nss.db || dbname == "admin" );

.. error:: 15966

   :message: str::stream() << "dbname not ok in Command::parseNsFullyQualified: " << dbname , dbname == nss.db || dbname == "admin" );
   :severity: Info
   :module: :source:`src/mongo/db/commands.cpp#L37`

.. line: uassert(15967,"invalid collection name: " + target, NamespaceString::validCollectionName(target.c_str()));

.. error:: 15967

   :message: "invalid collection name: " + target, NamespaceString::validCollectionName(target.c_str()));
   :throws: UserException
   :module: :source:`src/mongo/db/cloner.cpp#L741`

.. line: uassert(15969, str::stream() << projectName <<

.. error:: 15969

   :message: str::stream() << projectName <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/document_source_project.cpp#L110`

.. line: uassert(15972, str::stream() << DocumentSourceSkip::skipName <<

.. error:: 15972

   :message: str::stream() << DocumentSourceSkip::skipName <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/document_source_skip.cpp#L111`

.. line: uassert(15973, str::stream() << " the " <<

.. error:: 15973

   :message: str::stream() << " the " <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/document_source_sort.cpp#L123`

.. line: uassert(15974, str::stream() << sortName <<

.. error:: 15974

   :message: str::stream() << sortName <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/document_source_sort.cpp#L138`

.. line: uassert(15975,  str::stream() << sortName <<

.. error:: 15975

   :message: str::stream() << sortName <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/document_source_sort.cpp#L143`

.. line: uassert(15976, str::stream() << sortName <<

.. error:: 15976

   :message: str::stream() << sortName <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/document_source_sort.cpp#L151`

.. line: uassert(15978, str::stream() << (string)DocumentSourceUnwind::unwindName

.. error:: 15978

   :message: str::stream() << (string)DocumentSourceUnwind::unwindName
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/document_source_unwind.cpp#L97`

.. line: uassert(15979, str::stream() << unwindName << "can't unwind more than one path",

.. error:: 15979

   :message: str::stream() << unwindName << "can't unwind more than one path",
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/document_source_unwind.cpp#L270`

.. line: uassert(15981, str::stream() << "the " << unwindName <<

.. error:: 15981

   :message: str::stream() << "the " << unwindName <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/document_source_unwind.cpp#L282`

.. line: uassert(15982, str::stream() <<

.. error:: 15982

   :message: str::stream() <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/expression.cpp#L58`

.. line: uassert(15983, str::stream() <<

.. error:: 15983

   :message: str::stream() <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/expression.cpp#L88`

.. line: uassert( 15986, "too many retries in total", _totalTries < 10 );

.. error:: 15986

   :message: "too many retries in total"
   :throws: UserException
   :module: :source:`src/mongo/client/parallel.cpp#L822`

.. line: uassert( 15987, str::stream() << "could not fully initialize cursor on shard "

.. error:: 15987

   :message: str::stream() << "could not fully initialize cursor on shard "
   :throws: UserException
   :module: :source:`src/mongo/client/parallel.cpp#L944`

.. line: uassert( 15988, "error querying server", false );

.. error:: 15988

   :message: "error querying server"
   :throws: UserException
   :module: :source:`src/mongo/client/parallel.cpp#L1081`

.. line: uassert( 15989, "database not found for parallel cursor request", config );

.. error:: 15989

   :message: "database not found for parallel cursor request"
   :throws: UserException
   :module: :source:`src/mongo/client/parallel.cpp#L788`

.. line: uassert(15990, str::stream() << "this object is already an operator expression, and can't be used as a document expression (at '" <<

.. error:: 15990

   :message: str::stream() << "this object is already an operator expression, and can't be used as a document expression (at '" <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/expression.cpp#L102`

.. line: uassert(15992, str::stream() <<

.. error:: 15992

   :message: str::stream() <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/expression.cpp#L162`

.. line: uassert(15993, str::stream() << getOpName() <<

.. error:: 15993

   :message: str::stream() << getOpName() <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/expression.cpp#L2131`

.. line: uassert(15997, str::stream() << getOpName() <<

.. error:: 15997

   :message: str::stream() << getOpName() <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/expression.cpp#L2138`

.. line: uassert(15998, "FieldPath field names may not be empty strings.", fieldName.length() > 0);

.. error:: 15998

   :message: "FieldPath field names may not be empty strings."
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/field_path.cpp#L88`

.. line: uassert(15999, str::stream() << "invalid operator '" <<

.. error:: 15999

   :message: str::stream() << "invalid operator '" <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/expression.cpp#L242`

.. line: massert(16000, "$sum resulted in a non-numeric type", false);

.. error:: 16000

   :message: "$sum resulted in a non-numeric type"
   :severity: Info
   :module: :source:`src/mongo/db/pipeline/accumulator_sum.cpp#L74`

.. line: uassert(16001, str::stream() <<

.. error:: 16001

   :message: str::stream() <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/value.cpp#L77`

.. line: uassert(16002, str::stream() <<

.. error:: 16002

   :message: str::stream() <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/value.cpp#L184`

.. line: uassert(16003, str::stream() <<

.. error:: 16003

   :message: str::stream() <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/value.cpp#L551`

.. line: uassert(16004, str::stream() <<

.. error:: 16004

   :message: str::stream() <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/value.cpp#L577`

.. line: uassert(16005, str::stream() <<

.. error:: 16005

   :message: str::stream() <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/value.cpp#L603`

.. line: uassert(16006, str::stream() <<

.. error:: 16006

   :message: str::stream() <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/value.cpp#L622`

.. line: uassert(16007, str::stream() <<

.. error:: 16007

   :message: str::stream() <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/value.cpp#L709`

.. line: uassert(16014, str::stream() <<

.. error:: 16014

   :message: str::stream() <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/expression.cpp#L1347`

.. line: uassert(16016, str::stream() <<

.. error:: 16016

   :message: str::stream() <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/value.cpp#L811`

.. line: uassert(16017, str::stream() <<

.. error:: 16017

   :message: str::stream() <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/value.cpp#L862`

.. line: uassert(16018, str::stream() <<

.. error:: 16018

   :message: str::stream() <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/value.cpp#L963`

.. line: uassert(16019, str::stream() << "the " << pOp->pName <<

.. error:: 16019

   :message: str::stream() << "the " << pOp->pName <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/expression.cpp#L253`

.. line: uassert(16020, str::stream() << "the " << pOp->pName <<

.. error:: 16020

   :message: str::stream() << "the " << pOp->pName <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/expression.cpp#L276`

.. line: uassert(16021, str::stream() << "the " << pOp->pName <<

.. error:: 16021

   :message: str::stream() << "the " << pOp->pName <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/expression.cpp#L260`

.. line: uassert(16022, str::stream() << "the " << pOp->pName <<

.. error:: 16022

   :message: str::stream() << "the " << pOp->pName <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/expression.cpp#L290`

.. line: uassert( 16028, "collection or database disappeared when cursor yielded", cursorOk );

.. error:: 16028

   :message: "collection or database disappeared when cursor yielded"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/document_source_cursor.cpp#L88`

.. line: uassert(16030, "reserved error", false);

.. error:: 16030

   :message: "reserved error"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/accumulator.cpp#L59`

.. line: uassert(16031, "reserved error", false);

.. error:: 16031

   :message: "reserved error"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/accumulator.cpp#L60`

.. line: uassert(16032, "reserved error", false);

.. error:: 16032

   :message: "reserved error"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/accumulator.cpp#L61`

.. line: uassert(16033, "reserved error", false);

.. error:: 16033

   :message: "reserved error"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/accumulator.cpp#L62`

.. line: uassert(16034, str::stream() << getOpName() <<

.. error:: 16034

   :message: str::stream() << getOpName() <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/expression.cpp#L2374`

.. line: uassert(16035, str::stream() << getOpName() <<

.. error:: 16035

   :message: str::stream() << getOpName() <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/expression.cpp#L2380`

.. line: uassert(16036, "reserved error", false);

.. error:: 16036

   :message: "reserved error"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/accumulator.cpp#L64`

.. line: uassert(16037, "reserved error", false);

.. error:: 16037

   :message: "reserved error"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/accumulator.cpp#L65`

.. line: uassert(16038, "reserved error", false);

.. error:: 16038

   :message: "reserved error"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/accumulator.cpp#L66`

.. line: uassert(16039, "reserved error", false);

.. error:: 16039

   :message: "reserved error"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/accumulator.cpp#L67`

.. line: uassert(16040, "reserved error", false);

.. error:: 16040

   :message: "reserved error"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/accumulator.cpp#L68`

.. line: uassert(16041, "reserved error", false);

.. error:: 16041

   :message: "reserved error"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/accumulator.cpp#L69`

.. line: uassert(16042, "reserved error", false);

.. error:: 16042

   :message: "reserved error"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/accumulator.cpp#L70`

.. line: uassert(16043, "reserved error", false);

.. error:: 16043

   :message: "reserved error"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/accumulator.cpp#L71`

.. line: uassert(16044, "reserved error", false);

.. error:: 16044

   :message: "reserved error"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/accumulator.cpp#L72`

.. line: uassert(16045, "reserved error", false);

.. error:: 16045

   :message: "reserved error"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/accumulator.cpp#L73`

.. line: uassert(16046, "reserved error", false);

.. error:: 16046

   :message: "reserved error"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/accumulator.cpp#L74`

.. line: uassert(16047, "reserved error", false);

.. error:: 16047

   :message: "reserved error"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/accumulator.cpp#L75`

.. line: uassert(16048, "reserved error", false);

.. error:: 16048

   :message: "reserved error"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/accumulator.cpp#L76`

.. line: uassert(16049, "reserved error", false);

.. error:: 16049

   :message: "reserved error"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/accumulator.cpp#L77`

.. line: uassert( 16052, str::stream() << "could not create cursor over " << config.ns << " for query : " << config.filter << " sort : " << config.sort, temp.get() );

.. error:: 16052

   :message: str::stream() << "could not create cursor over " << config.ns << " for query : " << config.filter << " sort : " << config.sort, temp.get() );
   :throws: UserException
   :module: :source:`src/mongo/db/commands/mr.cpp#L1093`

.. line: uassert( 16053, str::stream() << "could not create client cursor over " << config.ns << " for query : " << config.filter << " sort : " << config.sort, cursor.get() );

.. error:: 16053

   :message: str::stream() << "could not create client cursor over " << config.ns << " for query : " << config.filter << " sort : " << config.sort, cursor.get() );
   :throws: UserException
   :module: :source:`src/mongo/db/commands/mr.cpp#L1095`

.. line: massert(16054, "shardedFirstPass should only use replace outType", outType == REPLACE);

.. error:: 16054

   :message: "shardedFirstPass should only use replace outType"
   :severity: Info
   :module: :source:`src/mongo/db/commands/mr.cpp#L281`

.. line: uassert( 16055, str::stream() << "too many retries during bulk insert, " << insertsRemaining.size() << " inserts remaining", retries < 30 );

.. error:: 16055

   :message: str::stream() << "too many retries during bulk insert, " << insertsRemaining.size() << " inserts remaining", retries < 30 );
   :throws: UserException
   :module: :source:`src/mongo/s/strategy_shard.cpp#L446`

.. line: uassert( 16056, str::stream() << "shutting down server during bulk insert, " << insertsRemaining.size() << " inserts remaining", ! inShutdown() );

.. error:: 16056

   :message: str::stream() << "shutting down server during bulk insert, " << insertsRemaining.size() << " inserts remaining", ! inShutdown() );
   :throws: UserException
   :module: :source:`src/mongo/s/strategy_shard.cpp#L447`

.. line: uassert( 16060, str::stream() << "cannot query locks collection on config server " << conn.getHost(), c.get() );

.. error:: 16060

   :message: str::stream() << "cannot query locks collection on config server " << conn.getHost(), c.get() );
   :throws: UserException
   :module: :source:`src/mongo/client/distlock.cpp#L130`

.. line: uassert(16062, "fstatfs failed: " + errnoWithDescription(), ret == 0);

.. error:: 16062

   :message: "fstatfs failed: " + errnoWithDescription(), ret == 0);
   :throws: UserException
   :module: :source:`src/mongo/util/file_allocator.cpp#L142`

.. line: uassert(16063, "ftruncate failed: " + errnoWithDescription(), ret == 0);

.. error:: 16063

   :message: "ftruncate failed: " + errnoWithDescription(), ret == 0);
   :throws: UserException
   :module: :source:`src/mongo/util/file_allocator.cpp#L160`

.. line: uassert( 16064,

.. error:: 16064

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/s/strategy_shard.cpp#L600`

.. line: uassert( 16065, "multi-updates require $ops rather than replacement object", ! multi );

.. error:: 16065

   :message: "multi-updates require $ops rather than replacement object"
   :throws: UserException
   :module: :source:`src/mongo/s/strategy_shard.cpp#L651`

.. line: massert( 16068, "no chunk ranges available", !_chunkRanges.ranges().empty() );

.. error:: 16068

   :message: "no chunk ranges available"
   :severity: Info
   :module: :source:`src/mongo/s/chunk.cpp#L1128`

.. line: massert( 16069 , "ModSet::createNewFromMods - "

.. error:: 16069

   :message: "ModSet::createNewFromMods - "
   :severity: Info
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L739`

.. line: msgasserted( 16070 , "out of memory BufBuilder::grow_reallocate" );

.. error:: 16070

   :message: "out of memory BufBuilder::grow_reallocate"
   :severity: Info
   :module: :source:`src/mongo/bson/util/builder.h#L224`

.. line: massert( 16083, "reserve 16083", true ); // Reserve 16083.

.. error:: 16083

   :message: "reserve 16083"
   :severity: Info
   :module: :source:`src/mongo/db/ops/query.h#L46`

.. line: massert( 16089,

.. error:: 16089

   :message: 
   :severity: Info
   :module: :source:`src/mongo/db/clientcursor.cpp#L796`

.. line: uassert( 16090, "socket error for mapping query", c.get() );

.. error:: 16090

   :message: "socket error for mapping query"
   :throws: UserException
   :module: :source:`src/mongo/client/dbclient.cpp#L819`

.. line: massert( 16093, "after yield cursor deleted" , cc->prepareToYield( yieldData ) );

.. error:: 16093

   :message: "after yield cursor deleted"
   :severity: Info
   :module: :source:`src/mongo/db/index_update.cpp#L377`

.. line: massert(16098, str::stream() << "can't dblock:" << db << " when local or admin is already locked", ls.nestableCount() == 0);

.. error:: 16098

   :message: str::stream() << "can't dblock:" << db << " when local or admin is already locked", ls.nestableCount() == 0);
   :severity: Info
   :module: :source:`src/mongo/db/d_concurrency.cpp#L521`

.. line: massert(16099, str::stream() << "internal error tried to lock two databases at the same time. old:" << ls.otherName() << " new:" << db, db == ls.otherName() );

.. error:: 16099

   :message: str::stream() << "internal error tried to lock two databases at the same time. old:" << ls.otherName() << " new:" << db, db == ls.otherName() );
   :severity: Info
   :module: :source:`src/mongo/db/d_concurrency.cpp#L708`

.. line: massert(16100, str::stream() << "can't dblock:" << db << " when local or admin is already locked", ls.nestableCount() == 0);

.. error:: 16100

   :message: str::stream() << "can't dblock:" << db << " when local or admin is already locked", ls.nestableCount() == 0);
   :severity: Info
   :module: :source:`src/mongo/db/d_concurrency.cpp#L713`

.. line: massert(16103, str::stream() << "can't lock_R, threadState=" << (int) ls.threadState(), ls.threadState() == 0);

.. error:: 16103

   :message: str::stream() << "can't lock_R, threadState=" << (int) ls.threadState(), ls.threadState() == 0);
   :severity: Info
   :module: :source:`src/mongo/db/d_concurrency.cpp#L124`

.. line: massert(16106, str::stream() << "internal error tried to lock two databases at the same time. old:" << ls.otherName() << " new:" << db , db == ls.otherName() );

.. error:: 16106

   :message: str::stream() << "internal error tried to lock two databases at the same time. old:" << ls.otherName() << " new:" << db , db == ls.otherName() );
   :severity: Info
   :module: :source:`src/mongo/db/d_concurrency.cpp#L516`

.. line: massert( 16107 , str::stream() << "Don't have a lock on: " << _ns , Lock::atLeastReadLocked( _ns ) );

.. error:: 16107

   :message: str::stream() << "Don't have a lock on: " << _ns , Lock::atLeastReadLocked( _ns ) );
   :severity: Info
   :module: :source:`src/mongo/db/client.cpp#L308`

.. line: fassertFailed( 16110 );

.. error:: 16110

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/dur.cpp#L261`

.. line: fassert( 16112, _view_private == old );

.. error:: 16112

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/mongommf.cpp#L46`

.. line: fassert(16113, !Lock::isLocked());

.. error:: 16113

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/repl/rs_sync.cpp#L624`

.. line: fassert(16114,false);

.. error:: 16114

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/d_concurrency.cpp#L133`

.. line: fassert(16115, _scopedLk == 0);

.. error:: 16115

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/lockstate.cpp#L171`

.. line: fassert( 16116, ls.recursiveCount() == 1 );

.. error:: 16116

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/d_concurrency.cpp#L340`

.. line: fassert( 16117, ls.threadState() != 0 );

.. error:: 16117

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/d_concurrency.cpp#L341`

.. line: fassert( 16118, scopedLk );

.. error:: 16118

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/d_concurrency.cpp#L344`

.. line: fassert( 16119, scopedLk );

.. error:: 16119

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/d_concurrency.cpp#L354`

.. line: fassert( 16120 , ls.threadState() == 0 );

.. error:: 16120

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/d_concurrency.cpp#L355`

.. line: fassert(16121, !noop);

.. error:: 16121

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/d_concurrency.cpp#L362`

.. line: fassert(16122, ts != 'R'); // indicates downgraded; not allowed with temprelease

.. error:: 16122

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/d_concurrency.cpp#L364`

.. line: fassert(16123, ts == 'W');

.. error:: 16123

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/d_concurrency.cpp#L365`

.. line: fassert(16125, !noop);

.. error:: 16125

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/d_concurrency.cpp#L369`

.. line: fassert(16126, ts == 0);

.. error:: 16126

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/d_concurrency.cpp#L371`

.. line: fassert(16127, !noop);

.. error:: 16127

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/d_concurrency.cpp#L377`

.. line: fassert(16128, ts == 'R');

.. error:: 16128

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/d_concurrency.cpp#L379`

.. line: fassert(16129, !noop);

.. error:: 16129

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/d_concurrency.cpp#L383`

.. line: fassert(16130, ts == 0);

.. error:: 16130

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/d_concurrency.cpp#L385`

.. line: fassert(16131,false);

.. error:: 16131

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/d_concurrency.cpp#L483`

.. line: fassert(16132,_weLocked==0);

.. error:: 16132

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/d_concurrency.cpp#L488`

.. line: fassert(16133,_weLocked==0);

.. error:: 16133

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/d_concurrency.cpp#L502`

.. line: fassert(16134,_weLocked==0);

.. error:: 16134

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/d_concurrency.cpp#L536`

.. line: fassert(16135,_weLocked==0);

.. error:: 16135

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/d_concurrency.cpp#L727`

.. line: fassert(16137, r.n > 0);

.. error:: 16137

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/concurrency/qlock.h#L319`

.. line: fassert(16138, w.n > 0);

.. error:: 16138

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/concurrency/qlock.h#L325`

.. line: fassert(16139, R.n > 0);

.. error:: 16139

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/concurrency/qlock.h#L336`

.. line: fassert(16140, W.n == 1);

.. error:: 16140

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/concurrency/qlock.h#L343`

.. line: massert( 16141, str::stream() << "cannot translate opcode " << op, !op );

.. error:: 16141

   :message: str::stream() << "cannot translate opcode " << op, !op );
   :severity: Info
   :module: :source:`src/mongo/util/net/message.h#L58`

.. line: fassert( 16142, _fd >= 0 );

.. error:: 16142

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/logfile.cpp#L224`

.. line: fassert( 16143, reinterpret_cast<ssize_t>( buf ) % g_minOSPageSizeBytes == 0 );  // aligned

.. error:: 16143

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/logfile.cpp#L225`

.. line: fassert( 16144, charsToWrite >= 0 );

.. error:: 16144

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/logfile.cpp#L223`

.. line: fassert( 16145,  s );

.. error:: 16145

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/unittest/unittest.cpp#L204`

.. line: fassert(16146,false);

.. error:: 16146

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/lockstat.cpp#L76`

.. line: massert( 16147, "Already finished.", _numUnstartedWorkers + _numActiveWorkers > 0 );

.. error:: 16147

   :message: "Already finished."
   :severity: Info
   :module: :source:`src/mongo/scripting/bench.cpp#L223`

.. line: fassert( 16148, newPrivateView == oldPrivateAddr );

.. error:: 16148

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/mmap_win.cpp#L325`

.. line: uassert( 16149 , "cannot run map reduce without the js engine", globalScriptEngine );

.. error:: 16149

   :message: "cannot run map reduce without the js engine"
   :throws: UserException
   :module: :source:`src/mongo/db/commands/mr.cpp#L1025`

.. line: uassert(16150, s.str(), full != true);

.. error:: 16150

   :message: s.str(), full != true);
   :throws: UserException
   :module: :source:`src/mongo/bson/bson-inl.h#L680`

.. line: fassertFailed( 16151 );

.. error:: 16151

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/client.cpp#L86`

.. line: massert( 16153, "namespace does not exist", nsd );

.. error:: 16153

   :message: "namespace does not exist"
   :severity: Info
   :module: :source:`src/mongo/db/commands/touch.cpp#L96`

.. line: uassert( 16154, "namespace does not exist", nsd );

.. error:: 16154

   :message: "namespace does not exist"
   :throws: UserException
   :module: :source:`src/mongo/util/touch_pages.cpp#L45`

.. line: uassert( 16157, errorMessage, connectionString.isValid() );

.. error:: 16157

   :message: errorMessage, connectionString.isValid() );
   :throws: UserException
   :module: :source:`src/mongo/scripting/bench.cpp#L200`

.. line: uassert( 16158, errorMessage, connection != NULL );

.. error:: 16158

   :message: errorMessage, connection != NULL );
   :throws: UserException
   :module: :source:`src/mongo/scripting/bench.cpp#L202`

.. line: massert( 16159, "manual keyFieldsOnly config not allowed", false );

.. error:: 16159

   :message: "manual keyFieldsOnly config not allowed"
   :severity: Info
   :module: :source:`src/mongo/db/cursor.h#L211`

.. line: fassert(16160, !clock_gettime(CLOCK_MONOTONIC, &the_time));

.. error:: 16160

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/timer-posixclock-inl.h#L36`

.. line: fassert(16161, QueryPerformanceCounter(&i));

.. error:: 16161

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/timer-win32-inl.h#L37`

.. line: fassert(16162, !clock_gettime(CLOCK_MONOTONIC, &the_time));

.. error:: 16162

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/timer.cpp#L54`

.. line: fassert(16163, static_cast<unsigned long long>(the_time.tv_sec) < maxSecs);

.. error:: 16163

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/timer.cpp#L55`

.. line: uassert(16164, "loopCommands config not supported", args["loopCommands"].eoo());

.. error:: 16164

   :message: "loopCommands config not supported"
   :throws: UserException
   :module: :source:`src/mongo/scripting/bench.cpp#L168`

.. line: fassertFailed( 16165 );

.. error:: 16165

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/mmap_win.cpp#L117`

.. line: fassertFailed( 16166 );

.. error:: 16166

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/mmap_win.cpp#L209`

.. line: fassertFailed( 16167 );

.. error:: 16167

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/mmap_win.cpp#L288`

.. line: fassertFailed( 16168 );

.. error:: 16168

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/mmap_win.cpp#L308`

.. line: fassert( 16169 , _threadState != 0 );

.. error:: 16169

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/lockstate.cpp#L84`

.. line: fassert( 16170 , _otherCount == 0 );

.. error:: 16170

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/lockstate.cpp#L206`

.. line: fassert( 16171 , prevCount != 1 || what == this );

.. error:: 16171

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/d_concurrency.cpp#L295`

.. line: uassert( 16172 , "couldn't get readlock to open admin db" , rl.got() );

.. error:: 16172

   :message: "couldn't get readlock to open admin db"
   :throws: UserException
   :module: :source:`src/mongo/db/restapi.cpp#L241`

.. line: uassert( 16173 , "couldn't get read lock to get admin auth credentials" , rl.got() );

.. error:: 16173

   :message: "couldn't get read lock to get admin auth credentials"
   :throws: UserException
   :module: :source:`src/mongo/db/restapi.cpp#L254`

.. line: uassert( 16174 , "couldn't get read lock to check admin user" , rl.got() );

.. error:: 16174

   :message: "couldn't get read lock to check admin user"
   :throws: UserException
   :module: :source:`src/mongo/db/restapi.cpp#L263`

.. line: fassert(16175, rotateLogs());

.. error:: 16175

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/dbcommands_generic.cpp#L347`

.. line: fassert(16176, rotateLogs());

.. error:: 16176

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/cmdline.cpp#L526`

.. line: massert( 16177 , "not codeWScope" , type() == CodeWScope );

.. error:: 16177

   :message: "not codeWScope"
   :severity: Info
   :module: :source:`src/mongo/bson/bsonelement.h#L265`

.. line: massert( 16178 , "not codeWScope" , type() == CodeWScope );

.. error:: 16178

   :message: "not codeWScope"
   :severity: Info
   :module: :source:`src/mongo/bson/bsonelement.h#L272`

.. line: uassert( 16181, str::stream() << "could not initialize cursor to config server chunks collection for ns " << ns, cursor.get() );

.. error:: 16181

   :message: str::stream() << "could not initialize cursor to config server chunks collection for ns " << ns, cursor.get() );
   :throws: UserException
   :module: :source:`src/mongo/s/d_chunk_manager.cpp#L128`

.. line: uassert( 16185 , errorString.str(), false );

.. error:: 16185

   :message: errorString.str(), false );
   :throws: UserException
   :module: :source:`src/mongo/db/database.cpp#L85`

.. line: massert( 16186 , "can't get a DBWrite while having a read lock" , ! ls.hasAnyReadLock() );

.. error:: 16186

   :message: "can't get a DBWrite while having a read lock"
   :severity: Info
   :module: :source:`src/mongo/db/d_concurrency.cpp#L559`

.. line: fassert( 16187, lockState().threadState() == 'w' );

.. error:: 16187

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/d_concurrency.cpp#L733`

.. line: fassert( 16188, lockState().threadState() == 'W' );

.. error:: 16188

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/d_concurrency.cpp#L747`

.. line: fassert( 16189, lockState().threadState() == 'w' );

.. error:: 16189

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/d_concurrency.cpp#L753`

.. line: # define MONGO_dassert(x) fassert(16199, (x))

.. error:: 16199

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/assert_util.h#L200`

.. line: default  : fassertFailed(16200);

.. error:: 16200

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/concurrency/qlock.h#L116`

.. line: fassert(16201, W.n == 0);

.. error:: 16201

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/concurrency/qlock.h#L122`

.. line: fassert( 16202, W.n == 1 );

.. error:: 16202

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/concurrency/qlock.h#L207`

.. line: fassert(16203, W.n == 1);

.. error:: 16203

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/concurrency/qlock.h#L218`

.. line: fassert(16204, R.n == 0);

.. error:: 16204

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/concurrency/qlock.h#L219`

.. line: fassert(16205, U.n == 0);

.. error:: 16205

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/concurrency/qlock.h#L220`

.. line: fassert(16206, R.n > 0);

.. error:: 16206

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/concurrency/qlock.h#L238`

.. line: fassert(16207, W.n == 0);

.. error:: 16207

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/concurrency/qlock.h#L239`

.. line: fassert(16208, U.n == 0);

.. error:: 16208

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/concurrency/qlock.h#L240`

.. line: fassert(16209, R.n == 1);

.. error:: 16209

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/concurrency/qlock.h#L251`

.. line: fassert(16210, W.n == 0);

.. error:: 16210

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/concurrency/qlock.h#L252`

.. line: fassert(16211, U.n == 1);

.. error:: 16211

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/concurrency/qlock.h#L253`

.. line: fassert( 16212, w.n > 0 );

.. error:: 16212

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/concurrency/qlock.h#L263`

.. line: fassert( 16214, X_legal() );

.. error:: 16214

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/concurrency/qlock.h#L274`

.. line: fassert( 16215, w.n == 0 );

.. error:: 16215

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/concurrency/qlock.h#L275`

.. line: fassert( 16216, R.n == 0 );

.. error:: 16216

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/concurrency/qlock.h#L284`

.. line: fassert( 16217, w.n > 0 );

.. error:: 16217

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/concurrency/qlock.h#L285`

.. line: fassert( 16219, W.n == 0 );

.. error:: 16219

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/concurrency/qlock.h#L292`

.. line: fassert( 16220, R.n == 0 );

.. error:: 16220

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/concurrency/qlock.h#L293`

.. line: fassert( 16221, w.n == 0 );

.. error:: 16221

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/concurrency/qlock.h#L294`

.. line: fassert( 16222, X.n > 0 );

.. error:: 16222

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/concurrency/qlock.h#L295`

.. line: fassertFailed( 16225 );

.. error:: 16225

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/mmap_win.cpp#L186`

.. line: fassert(16226, strftime(buf, sizeof(buf), fmt, &t) == 19);

.. error:: 16226

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/time_support.cpp#L60`

.. line: fassert(16227, strftime(buf, sizeof(buf), fmt, &t) == 20);

.. error:: 16227

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/time_support.cpp#L70`

.. line: fassert(16228, s <= 0xffffffff );

.. error:: 16228

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/time_support.cpp#L102`

.. line: uassert( 16229,

.. error:: 16229

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/s/d_chunk_manager.cpp#L161`

.. line: fassert( 16231 , _otherCount == 0 );

.. error:: 16231

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/lockstate.cpp#L201`

.. line: fassert( 16232, !_usingTempAuth );

.. error:: 16232

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/security.cpp#L35`

.. line: fassert( 16233, failedAttempts < maxFailedAttempts);

.. error:: 16233

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/repl/rs_initialsync.cpp#L66`

.. line: msgasserted(16234, "Invalid call to appendNull in BSONObj Builder.");

.. error:: 16234

   :message: "Invalid call to appendNull in BSONObj Builder."
   :severity: Info
   :module: :source:`src/mongo/bson/bsonobjbuilder.h#L417`

.. line: massert(16235, "going to start syncing, but buffer is not empty", _buffer.empty());

.. error:: 16235

   :message: "going to start syncing, but buffer is not empty"
   :severity: Info
   :module: :source:`src/mongo/db/repl/bgsync.cpp#L519`

.. line: DEV fassert( 16236 , ! inConstructorChain(true) );

.. error:: 16236

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/record.cpp#L445`

.. line: massert( 16237, str::stream() << "readahead failed on fd " << fd

.. error:: 16237

   :message: str::stream() << "readahead failed on fd " << fd
   :severity: Info
   :module: :source:`src/mongo/util/touch_pages.cpp#L75`

.. line: massert( 16238, "can't fetch extent file structure", mdf );

.. error:: 16238

   :message: "can't fetch extent file structure"
   :severity: Info
   :module: :source:`src/mongo/util/touch_pages.cpp#L49`

.. line: uassert( 16241 , "Currently only single field hashed index supported." ,

.. error:: 16241

   :message: "Currently only single field hashed index supported."
   :throws: UserException
   :module: :source:`src/mongo/db/hashindex.cpp#L34`

.. line: uassert( 16242 , "Currently hashed indexes cannot guarantee uniqueness. Use a regular index." ,

.. error:: 16242

   :message: "Currently hashed indexes cannot guarantee uniqueness. Use a regular index."
   :throws: UserException
   :module: :source:`src/mongo/db/hashindex.cpp#L36`

.. line: massert( 16243 , "error: no hashed index field" ,

.. error:: 16243

   :message: "error: no hashed index field"
   :severity: Info
   :module: :source:`src/mongo/db/hashindex.cpp#L56`

.. line: uassert( 16244 , "Error: hashed indexes do not currently support array values" , fieldVal.type() != Array );

.. error:: 16244

   :message: "Error: hashed indexes do not currently support array values"
   :throws: UserException
   :module: :source:`src/mongo/db/hashindex.cpp#L75`

.. line: massert( 16245 , "Only HashVersion 0 has been defined" , v == 0 );

.. error:: 16245

   :message: "Only HashVersion 0 has been defined"
   :severity: Info
   :module: :source:`src/mongo/db/hashindex.cpp#L161`

.. line: uassert(16246, "Shard " + conf->getName() + " is too old to support GridFS sharded by {files_id:1, n:1}",

.. error:: 16246

   :message: "Shard " + conf->getName() + " is too old to support GridFS sharded by {files_id:1, n:1}",
   :throws: UserException
   :module: :source:`src/mongo/s/commands_public.cpp#L975`

.. line: massert(16247, "md5 state not correct size", len == sizeof(st));

.. error:: 16247

   :message: "md5 state not correct size"
   :severity: Info
   :module: :source:`src/mongo/db/dbcommands.cpp#L1090`

.. line: fassert( 16249, queryPlan().matcher() );

.. error:: 16249

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/queryoptimizercursorimpl.cpp#L99`

.. line: uassert( 16250 , "w has to be a string or a number" , w.type() == String );

.. error:: 16250

   :message: "w has to be a string or a number"
   :throws: UserException
   :module: :source:`src/mongo/db/repl_block.cpp#L150`

.. line: fassert( 16252, !db.empty() );

.. error:: 16252

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/d_concurrency.cpp#L509`

.. line: fassert( 16253, !ns.empty() );

.. error:: 16253

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/d_concurrency.cpp#L550`

.. line: fassert( 16254, !ns.empty() );

.. error:: 16254

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/d_concurrency.cpp#L586`

.. line: fassert( 16255, !db.empty() );

.. error:: 16255

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/d_concurrency.cpp#L701`

.. line: uassert( 16256, str::stream() << "Invalid ns [" << ns << "]", nsString.isValid() );

.. error:: 16256

   :message: str::stream() << "Invalid ns [" << ns << "]", nsString.isValid() );
   :throws: UserException
   :module: :source:`src/mongo/db/ops/query.cpp#L911`

.. line: uassert( 16257, str::stream() << "Invalid ns [" << ns << "]", false );

.. error:: 16257

   :message: str::stream() << "Invalid ns [" << ns << "]", false );
   :throws: UserException
   :module: :source:`src/mongo/db/instance.cpp#L427`

.. line: uassert( 16258, str::stream() << "Invalid ns [" << ns << "]", nsString.isValid() );

.. error:: 16258

   :message: str::stream() << "Invalid ns [" << ns << "]", nsString.isValid() );
   :throws: UserException
   :module: :source:`src/mongo/db/instance.cpp#L660`

.. line: uassert( 16259,

.. error:: 16259

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/scripting/utils.cpp#L49`

.. line: uassert( 16260 , "skip has to be positive" , skip >= 0 );

.. error:: 16260

   :message: "skip has to be positive"
   :throws: UserException
   :module: :source:`src/mongo/s/commands_public.cpp#L518`

.. line: mongo::fassert( 16265, connectionString.isValid() );

.. error:: 16265

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/tools/loadgenerator.cpp#L111`

.. line: mongo::fassert( 16266, connection != NULL );

.. error:: 16266

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/tools/loadgenerator.cpp#L113`

.. line: mongo::fassert( 16267, connection->getLastError().empty() );

.. error:: 16267

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/tools/loadgenerator.cpp#L130`

.. line: uasserted( 16268, "error converting UTF-16 string to UTF-8" );

.. error:: 16268

   :message: "error converting UTF-16 string to UTF-8"
   :throws: UserException
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L201`

.. line: fassertFailed( 16269 );

.. error:: 16269

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L306`

.. line: uassert( 16270, "conversion from string to JavaScript value failed", false );

.. error:: 16270

   :message: "conversion from string to JavaScript value failed"
   :throws: UserException
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L526`

.. line: fassertFailed( 16271 );

.. error:: 16271

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L799`

.. line: fassertFailed( 16272 );

.. error:: 16272

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L856`

.. line: fassertFailed( 16273 );

.. error:: 16273

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L880`

.. line: fassertFailed( 16274 );

.. error:: 16274

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L931`

.. line: fassertFailed( 16275 );

.. error:: 16275

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L956`

.. line: fassertFailed( 16276 );

.. error:: 16276

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L978`

.. line: fassertFailed( 16277 );

.. error:: 16277

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L1082`

.. line: fassertFailed( 16278 );

.. error:: 16278

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L1113`

.. line: fassertFailed( 16279 );

.. error:: 16279

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L1144`

.. line: fassertFailed( 16280 );

.. error:: 16280

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L1172`

.. line: fassertFailed( 16281 );

.. error:: 16281

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L1221`

.. line: fassertFailed( 16282 );

.. error:: 16282

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L1284`

.. line: fassertFailed( 16283 );

.. error:: 16283

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L1306`

.. line: fassertFailed( 16284 );

.. error:: 16284

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L1357`

.. line: fassertFailed( 16285 );

.. error:: 16285

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L1788`

.. line: fassertFailed( 16286 );

.. error:: 16286

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L1817`

.. line: fassertFailed( 16287 );

.. error:: 16287

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/engine_spidermonkey.cpp#L1968`

.. line: fassertFailed( 16288 );

.. error:: 16288

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L92`

.. line: fassertFailed( 16289 );

.. error:: 16289

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L112`

.. line: fassertFailed( 16290 );

.. error:: 16290

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L129`

.. line: fassertFailed( 16291 );

.. error:: 16291

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L148`

.. line: fassertFailed( 16292 );

.. error:: 16292

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L173`

.. line: fassertFailed( 16293 );

.. error:: 16293

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L219`

.. line: fassertFailed( 16294 );

.. error:: 16294

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L257`

.. line: fassertFailed( 16295 );

.. error:: 16295

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L272`

.. line: fassertFailed( 16296 );

.. error:: 16296

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L298`

.. line: fassertFailed( 16297 );

.. error:: 16297

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L349`

.. line: fassertFailed( 16298 );

.. error:: 16298

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L434`

.. line: fassertFailed( 16299 );

.. error:: 16299

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L475`

.. line: fassertFailed( 16300 );

.. error:: 16300

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L537`

.. line: fassertFailed( 16301 );

.. error:: 16301

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L578`

.. line: fassertFailed( 16302 );

.. error:: 16302

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L617`

.. line: fassertFailed( 16303 );

.. error:: 16303

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L662`

.. line: fassertFailed( 16304 );

.. error:: 16304

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L729`

.. line: fassertFailed( 16305 );

.. error:: 16305

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L768`

.. line: fassertFailed( 16306 );

.. error:: 16306

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L816`

.. line: fassertFailed( 16307 );

.. error:: 16307

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L857`

.. line: fassertFailed( 16308 );

.. error:: 16308

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L902`

.. line: fassertFailed( 16309 );

.. error:: 16309

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L1025`

.. line: fassertFailed( 16310 );

.. error:: 16310

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L1053`

.. line: fassertFailed( 16311 );

.. error:: 16311

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L1078`

.. line: fassertFailed( 16312 );

.. error:: 16312

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L1109`

.. line: fassertFailed( 16313 );

.. error:: 16313

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L1129`

.. line: fassertFailed( 16314 );

.. error:: 16314

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L1174`

.. line: fassertFailed( 16315 );

.. error:: 16315

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L1197`

.. line: fassertFailed( 16316 );

.. error:: 16316

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L1253`

.. line: fassertFailed( 16317 );

.. error:: 16317

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L1305`

.. line: fassertFailed( 16318 );

.. error:: 16318

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L1323`

.. line: fassertFailed( 16319 );

.. error:: 16319

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L1355`

.. line: fassertFailed( 16320 );

.. error:: 16320

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L1414`

.. line: fassertFailed( 16321 );

.. error:: 16321

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L1432`

.. line: fassertFailed( 16322 );

.. error:: 16322

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L1456`

.. line: fassertFailed( 16323 );

.. error:: 16323

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L1540`

.. line: fassertFailed( 16324 );

.. error:: 16324

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L1567`

.. line: fassert( 16325, minOSPageSizeBytes > 0 );

.. error:: 16325

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/mmap.cpp#L35`

.. line: fassert( 16326, minOSPageSizeBytes < 1000000 );

.. error:: 16326

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/mmap.cpp#L36`

.. line: fassert( 16327, (minOSPageSizeBytes & (minOSPageSizeBytes - 1)) == 0);

.. error:: 16327

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/mmap.cpp#L38`

.. line: uassert( 16328 , str::stream() << "document is larger than capped size "

.. error:: 16328

   :message: str::stream() << "document is larger than capped size "
   :throws: UserException
   :module: :source:`src/mongo/db/cap.cpp#L200`

.. line: uassert(16329, str::stream() << "read error, or input line too long (max length: "

.. error:: 16329

   :message: str::stream() << "read error, or input line too long (max length: "
   :throws: UserException
   :module: :source:`src/mongo/tools/import.cpp#L127`

.. line: uassert( 16330, "'special' query operator not allowed", _allowSpecial );

.. error:: 16330

   :message: "'special' query operator not allowed"
   :throws: UserException
   :module: :source:`src/mongo/db/queryoptimizer.cpp#L654`

.. line: uassert( 16331, "'special' plan hint not allowed",

.. error:: 16331

   :message: "'special' plan hint not allowed"
   :throws: UserException
   :module: :source:`src/mongo/db/queryoptimizer.cpp#L750`

.. line: uassert( 16332 , "can't have an empty ns" , ns[0] );

.. error:: 16332

   :message: "can't have an empty ns"
   :throws: UserException
   :module: :source:`src/mongo/db/ops/query.cpp#L900`

.. line: massert( 16333 ,

.. error:: 16333

   :message: 
   :severity: Info
   :module: :source:`src/mongo/db/dbhelpers.cpp#L244`

.. line: massert( 16334, str::stream() << "cannot set version or shard on custom connection " << conn->toString(), false );

.. error:: 16334

   :message: str::stream() << "cannot set version or shard on custom connection " << conn->toString(), false );
   :severity: Info
   :module: :source:`src/mongo/s/shard_version.cpp#L90`

.. line: uassert( 16335, "custom connection to " + this->toString() +

.. error:: 16335

   :message: "custom connection to " + this->toString() +
   :throws: UserException
   :module: :source:`src/mongo/client/dbclient.cpp#L134`

.. line: uasserted( 16336,

.. error:: 16336

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/s/strategy_shard.cpp#L191`

.. line: uassert( 16337, "Unknown read preference", false );

.. error:: 16337

   :message: "Unknown read preference"
   :throws: UserException
   :module: :source:`src/mongo/client/dbclient_rs.cpp#L1112`

.. line: uasserted( 16338, ss.str() );

.. error:: 16338

   :message: ss.str() );
   :throws: UserException
   :module: :source:`src/mongo/s/chunk.cpp#L1234`

.. line: fassertFailed(16339);

.. error:: 16339

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/lockstat.cpp#L87`

.. line: uassert( 16340, str::stream() << "No replica set monitor active and no cached seed "

.. error:: 16340

   :message: str::stream() << "No replica set monitor active and no cached seed "
   :throws: UserException
   :module: :source:`src/mongo/client/dbclient_rs.cpp#L1270`

.. line: massert( 16341 ,

.. error:: 16341

   :message: 
   :severity: Info
   :module: :source:`src/mongo/db/dbhelpers.cpp#L238`

.. line: uassert( 16342, "elemMatch: invalid argument.  object required.",

.. error:: 16342

   :message: "elemMatch: invalid argument.  object required."
   :throws: UserException
   :module: :source:`src/mongo/db/projection.cpp#L66`

.. line: uassert( 16343, "Cannot specify positional operator and $elemMatch"

.. error:: 16343

   :message: "Cannot specify positional operator and $elemMatch"
   :throws: UserException
   :module: :source:`src/mongo/db/projection.cpp#L68`

.. line: uassert( 16344, "Cannot use $elemMatch projection on a nested field"

.. error:: 16344

   :message: "Cannot use $elemMatch projection on a nested field"
   :throws: UserException
   :module: :source:`src/mongo/db/projection.cpp#L71`

.. line: uassert( 16345, "Cannot exclude array elements with the positional operator"

.. error:: 16345

   :message: "Cannot exclude array elements with the positional operator"
   :throws: UserException
   :module: :source:`src/mongo/db/projection.cpp#L107`

.. line: uassert( 16346, "Cannot specify more than one positional array element per query"

.. error:: 16346

   :message: "Cannot specify more than one positional array element per query"
   :throws: UserException
   :module: :source:`src/mongo/db/projection.cpp#L109`

.. line: uassert( 16347, "Cannot specify positional operator and $elemMatch"

.. error:: 16347

   :message: "Cannot specify positional operator and $elemMatch"
   :throws: UserException
   :module: :source:`src/mongo/db/projection.cpp#L111`

.. line: massert( 16348, "matchers are only supported for $elemMatch",

.. error:: 16348

   :message: "matchers are only supported for $elemMatch"
   :severity: Info
   :module: :source:`src/mongo/db/projection.cpp#L174`

.. line: massert( 16349, "$elemMatch specified, but projection field not found.",

.. error:: 16349

   :message: "$elemMatch specified, but projection field not found."
   :severity: Info
   :module: :source:`src/mongo/db/projection.cpp#L184`

.. line: massert( 16350, "$elemMatch called on document element with eoo",

.. error:: 16350

   :message: "$elemMatch called on document element with eoo"
   :severity: Info
   :module: :source:`src/mongo/db/projection.cpp#L188`

.. line: massert( 16351, "$elemMatch called on array element with eoo",

.. error:: 16351

   :message: "$elemMatch called on array element with eoo"
   :severity: Info
   :module: :source:`src/mongo/db/projection.cpp#L190`

.. line: uassert( 16352, mongoutils::str::stream() << "positional operator ("

.. error:: 16352

   :message: mongoutils::str::stream() << "positional operator ("
   :throws: UserException
   :module: :source:`src/mongo/db/projection.cpp#L287`

.. line: uassert( 16353, "positional operator element mismatch",

.. error:: 16353

   :message: "positional operator element mismatch"
   :throws: UserException
   :module: :source:`src/mongo/db/projection.cpp#L292`

.. line: uasserted( 16354, "Positional operator does not match the query specifier." );

.. error:: 16354

   :message: "Positional operator does not match the query specifier."
   :throws: UserException
   :module: :source:`src/mongo/db/projection.cpp#L343`

.. line: massert( 16355, "positional operator specified, but no array match",

.. error:: 16355

   :message: "positional operator specified, but no array match"
   :severity: Info
   :module: :source:`src/mongo/db/scanandorder.cpp#L78`

.. line: uassert( 16356 , str::stream() << "tag ranges not valid for: " << ns ,

.. error:: 16356

   :message: str::stream() << "tag ranges not valid for: " << ns ,
   :throws: UserException
   :module: :source:`src/mongo/s/balance.cpp#L236`

.. line: uassert(16357, "Tags should be a BSON object", nextTag.isABSONObj());

.. error:: 16357

   :message: "Tags should be a BSON object"
   :throws: UserException
   :module: :source:`src/mongo/client/dbclient_rs.cpp#L1813`

.. line: uassert(16358, "Tags should be a BSON object", nextTag.isABSONObj());

.. error:: 16358

   :message: "Tags should be a BSON object"
   :throws: UserException
   :module: :source:`src/mongo/client/dbclient_rs.cpp#L1220`

.. line: fassert(16359, st->syncApply(*it));

.. error:: 16359

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/repl/rs_sync.cpp#L114`

.. line: fassertFailed(16360);

.. error:: 16360

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/repl/rs_sync.cpp#L118`

.. line: fassertFailed(16361);

.. error:: 16361

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/repl/rs_sync.cpp#L154`

.. line: fassertFailed( 16362 );

.. error:: 16362

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/mmap_win.cpp#L264`

.. line: uassert( 16363, "_id is not a number", args["_id"].isNumber() );

.. error:: 16363

   :message: "_id is not a number"
   :throws: UserException
   :module: :source:`src/mongo/tools/docgenerator.cpp#L27`

.. line: uassert( 16364, "blob is not a string", (args["blob"].type() == String) );

.. error:: 16364

   :message: "blob is not a string"
   :throws: UserException
   :module: :source:`src/mongo/tools/docgenerator.cpp#L30`

.. line: uassert( 16365, "nestedDoc is not an object", (args["nestedDoc"].type() == Object) );

.. error:: 16365

   :message: "nestedDoc is not an object"
   :throws: UserException
   :module: :source:`src/mongo/tools/docgenerator.cpp#L33`

.. line: uassert( 16366, "list is not an array", args["list"].type() == Array );

.. error:: 16366

   :message: "list is not an array"
   :throws: UserException
   :module: :source:`src/mongo/tools/docgenerator.cpp#L36`

.. line: uassert( 16367, "list member is not a string", list[i].type() == String );

.. error:: 16367

   :message: "list member is not a string"
   :throws: UserException
   :module: :source:`src/mongo/tools/docgenerator.cpp#L39`

.. line: uassert( 16368, "counter is not a number", args["counter"].isNumber() );

.. error:: 16368

   :message: "counter is not a number"
   :throws: UserException
   :module: :source:`src/mongo/tools/docgenerator.cpp#L43`

.. line: uassert( 16369, str::stream() << "No good nodes available for set: "

.. error:: 16369

   :message: str::stream() << "No good nodes available for set: "
   :throws: UserException
   :module: :source:`src/mongo/client/dbclient_rs.cpp#L1343`

.. line: uasserted(16370, str::stream() << "Failed to do query, no good nodes in "

.. error:: 16370

   :message: str::stream() << "Failed to do query, no good nodes in "
   :throws: UserException
   :module: :source:`src/mongo/client/dbclient_rs.cpp#L1467`

.. line: fassert(16372, db);

.. error:: 16372

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/introspect.cpp#L83`

.. line: uassert(16373,

.. error:: 16373

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/expression.cpp#L946`

.. line: uassert(16374, "$mod does not support dates", leftType != Date && rightType != Date);

.. error:: 16374

   :message: "$mod does not support dates"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/expression.cpp#L1757`

.. line: uassert(16375, "$multiply does not support dates", pValue->getType() != Date);

.. error:: 16375

   :message: "$multiply does not support dates"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/expression.cpp#L1858`

.. line: uassert(16376,

.. error:: 16376

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/expression.cpp#L2429`

.. line: uassert(16378, str::stream() <<

.. error:: 16378

   :message: str::stream() <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/value.cpp#L725`

.. line: uasserted(16379, str::stream() << "Failed to call findOne, no good nodes in "

.. error:: 16379

   :message: str::stream() << "Failed to call findOne, no good nodes in "
   :throws: UserException
   :module: :source:`src/mongo/client/dbclient_rs.cpp#L1501`

.. line: uasserted(16380, str::stream() << "Failed to call say, no good nodes in "

.. error:: 16380

   :message: str::stream() << "Failed to call say, no good nodes in "
   :throws: UserException
   :module: :source:`src/mongo/client/dbclient_rs.cpp#L1620`

.. line: uassert(16381, "$readPreference should be an object",

.. error:: 16381

   :message: "$readPreference should be an object"
   :throws: UserException
   :module: :source:`src/mongo/client/dbclient_rs.cpp#L124`

.. line: uassert(16382, "mode not specified for read preference", prefDoc.hasField("mode"));

.. error:: 16382

   :message: "mode not specified for read preference"
   :throws: UserException
   :module: :source:`src/mongo/client/dbclient_rs.cpp#L128`

.. line: uasserted(16383, str::stream() << "Unknown read preference mode: " << mode);

.. error:: 16383

   :message: str::stream() << "Unknown read preference mode: " << mode);
   :throws: UserException
   :module: :source:`src/mongo/client/dbclient_rs.cpp#L148`

.. line: uassert(16384, "Cannot specify tags for primary only read preference",

.. error:: 16384

   :message: "Cannot specify tags for primary only read preference"
   :throws: UserException
   :module: :source:`src/mongo/client/dbclient_rs.cpp#L152`

.. line: uassert(16385, "tags for read preference should be an array",

.. error:: 16385

   :message: "tags for read preference should be an array"
   :throws: UserException
   :module: :source:`src/mongo/client/dbclient_rs.cpp#L156`

.. line: fassert(16387, false);

.. error:: 16387

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/util/mmap_win.cpp#L371`

.. line: uassert(16389,

.. error:: 16389

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/pipeline.cpp#L409`

.. line: uassert(16390, str::stream() << "sharded pipeline failed on shard " <<

.. error:: 16390

   :message: str::stream() << "sharded pipeline failed on shard " <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/document_source_command_shards.cpp#L95`

.. line: massert(16391, str::stream() << "no result array? shard:" <<

.. error:: 16391

   :message: str::stream() << "no result array? shard:" <<
   :severity: Info
   :module: :source:`src/mongo/db/pipeline/document_source_command_shards.cpp#L102`

.. line: massert( 16392,

.. error:: 16392

   :message: 
   :severity: Info
   :module: :source:`src/mongo/db/extsort.cpp#L269`

.. line: uassert(16395, "$where is not allowed inside of a $match aggregation expression",

.. error:: 16395

   :message: "$where is not allowed inside of a $match aggregation expression"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/document_source_match.cpp#L67`

.. line: fassertFailed(16396);

.. error:: 16396

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/scripting/sm_db.cpp#L384`

.. line: fassertFailed(16397);

.. error:: 16397

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/repl/rs_sync.cpp#L177`

.. line: uassert(16400, str::stream()

.. error:: 16400

   :message: str::stream()
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/expression.cpp#L1196`

.. line: uassert(16401, str::stream()

.. error:: 16401

   :message: str::stream()
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/expression.cpp#L1214`

.. line: massert(16402, "parseObject() returned wrong type of Expression", exprObj);

.. error:: 16402

   :message: "parseObject() returned wrong type of Expression"
   :severity: Info
   :module: :source:`src/mongo/db/pipeline/document_source_project.cpp#L127`

.. line: uassert(16403, "$projection requires at least one output field", exprObj->getFieldCount());

.. error:: 16403

   :message: "$projection requires at least one output field"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/document_source_project.cpp#L128`

.. line: uassert(16404, "$expressions are not allowed at the top-level of $project",

.. error:: 16404

   :message: "$expressions are not allowed at the top-level of $project"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/expression.cpp#L93`

.. line: uassert(16405, "dotted field names are only allowed at the top level",

.. error:: 16405

   :message: "dotted field names are only allowed at the top level"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/expression.cpp#L106`

.. line: uassert(16406,

.. error:: 16406

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/expression.cpp#L154`

.. line: uassert(16407, "inclusion not supported in objects nested in $expressions",

.. error:: 16407

   :message: "inclusion not supported in objects nested in $expressions"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/expression.cpp#L1014`

.. line: fassert( 16408, &idx.idxInterface() == &sorter.getIndexInterface() );

.. error:: 16408

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/index_update.cpp#L306`

.. line: massert(16409, "FieldPath cannot be constructed from an empty vector.", !fieldPath.empty());

.. error:: 16409

   :message: "FieldPath cannot be constructed from an empty vector."
   :severity: Info
   :module: :source:`src/mongo/db/pipeline/field_path.cpp#L28`

.. line: uassert(16410, "FieldPath field names may not start with '$'.", fieldName[0] != '$');

.. error:: 16410

   :message: "FieldPath field names may not start with '$'."
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/field_path.cpp#L89`

.. line: uassert(16411, "FieldPath field names may not contain '\0'.",

.. error:: 16411

   :message: "FieldPath field names may not contain '\0'."
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/field_path.cpp#L90`

.. line: uassert(16412, "FieldPath field names may not contain '.'.",

.. error:: 16412

   :message: "FieldPath field names may not contain '.'."
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/field_path.cpp#L92`

.. line: massert(16413, "$subtract resulted in a non-numeric type", false);

.. error:: 16413

   :message: "$subtract resulted in a non-numeric type"
   :severity: Info
   :module: :source:`src/mongo/db/pipeline/expression.cpp#L2446`

.. line: uassert(16414, str::stream() <<

.. error:: 16414

   :message: str::stream() <<
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/document_source_group.cpp#L245`

.. line: uassert(16415, "$add does not support dates",

.. error:: 16415

   :message: "$add does not support dates"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/expression.cpp#L347`

.. line: uassert(16416, "$add does not support strings",

.. error:: 16416

   :message: "$add does not support strings"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/expression.cpp#L349`

.. line: massert(16417, "$add resulted in a non-numeric type", false);

.. error:: 16417

   :message: "$add resulted in a non-numeric type"
   :severity: Info
   :module: :source:`src/mongo/db/pipeline/expression.cpp#L367`

.. line: massert(16418, "$multiply resulted in a non-numeric type", false);

.. error:: 16418

   :message: "$multiply resulted in a non-numeric type"
   :severity: Info
   :module: :source:`src/mongo/db/pipeline/expression.cpp#L1872`

.. line: uassert(16419, str::stream()<<"field path must not contain embedded null characters" << prefixedField.find("\0") << "," ,

.. error:: 16419

   :message: str::stream()<<"field path must not contain embedded null characters" << prefixedField.find("\0") << "," ,
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/expression.cpp#L54`

.. line: uassert(16420, "field inclusion is not allowed inside of $expressions",

.. error:: 16420

   :message: "field inclusion is not allowed inside of $expressions"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/expression.cpp#L149`

.. line: uassert(16421, "Can't handle date values outside of time_t range",

.. error:: 16421

   :message: "Can't handle date values outside of time_t range"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/value.cpp#L640`

.. line: uasserted(16422, "gmtime failed - your system doesn't support dates before 1970");

.. error:: 16422

   :message: "gmtime failed - your system doesn't support dates before 1970"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/value.cpp#L661`

.. line: uasserted(16423, str::stream() << "gmtime failed to convert time_t of " << dtime);

.. error:: 16423

   :message: str::stream() << "gmtime failed to convert time_t of " << dtime);
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/value.cpp#L664`

.. line: uassert(16424, "$near is not allowed inside of a $match aggregation expression",

.. error:: 16424

   :message: "$near is not allowed inside of a $match aggregation expression"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/document_source_match.cpp#L70`

.. line: uassert(16425, "$within is not allowed inside of a $match aggregation expression",

.. error:: 16425

   :message: "$within is not allowed inside of a $match aggregation expression"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/document_source_match.cpp#L72`

.. line: uassert(16426, "$nearSphere is not allowed inside of a $match aggregation expression",

.. error:: 16426

   :message: "$nearSphere is not allowed inside of a $match aggregation expression"
   :throws: UserException
   :module: :source:`src/mongo/db/pipeline/document_source_match.cpp#L74`

.. line: fassertFailed(16427);

.. error:: 16427

   :message: 
   :severity: Abort
   :module: :source:`src/mongo/db/prefetch.cpp#L144`

.. line: uassert( 16428,

.. error:: 16428

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/client/gridfs.cpp#L144`

.. line: throw UserException( 8001 , (string)"SyncClusterConnection write op failed: " + err.str() );

.. error:: 8001

   :message: (string)"SyncClusterConnection write op failed: " + err.str() );
   :throws: UserException
   :module: :source:`src/mongo/client/syncclusterconnection.cpp#L140`

.. line: throw UserException( 8002 , "all servers down!" );

.. error:: 8002

   :message: "all servers down!" );
   :throws: UserException
   :module: :source:`src/mongo/client/syncclusterconnection.cpp#L326`

.. line: throw UserException( 8003 , (string)"SyncClusterConnection::insert prepare failed: " + errmsg );

.. error:: 8003

   :message: (string)"SyncClusterConnection::insert prepare failed: " + errmsg );
   :throws: UserException
   :module: :source:`src/mongo/client/syncclusterconnection.cpp#L342`

.. line: uassert( 8004 ,  "SyncClusterConnection needs 3 servers" , _conns.size() == 3 );

.. error:: 8004

   :message: "SyncClusterConnection needs 3 servers"
   :throws: UserException
   :module: :source:`src/mongo/client/syncclusterconnection.cpp#L54`

.. line: throw UserException( 8005 , (string)"SyncClusterConnection::udpate prepare failed: " + errmsg );

.. error:: 8005

   :message: (string)"SyncClusterConnection::udpate prepare failed: " + errmsg );
   :throws: UserException
   :module: :source:`src/mongo/client/syncclusterconnection.cpp#L376`

.. line: uassert( 8006 , "SyncClusterConnection::call can only be used directly for dbQuery" ,

.. error:: 8006

   :message: "SyncClusterConnection::call can only be used directly for dbQuery"
   :throws: UserException
   :module: :source:`src/mongo/client/syncclusterconnection.cpp#L419`

.. line: uassert( 8007 , "SyncClusterConnection::call can't handle $cmd" , strstr( d.getns(), "$cmd" ) == 0 );

.. error:: 8007

   :message: "SyncClusterConnection::call can't handle $cmd"
   :throws: UserException
   :module: :source:`src/mongo/client/syncclusterconnection.cpp#L423`

.. line: throw UserException( 8008 , "all servers down!" );

.. error:: 8008

   :message: "all servers down!" );
   :throws: UserException
   :module: :source:`src/mongo/client/syncclusterconnection.cpp#L439`

.. line: throw UserException( 8010 , "something is wrong, shouldn't see a command here" );

.. error:: 8010

   :message: "something is wrong, shouldn't see a command here" );
   :throws: UserException
   :module: :source:`src/mongo/s/strategy_shard.cpp#L58`

.. line: uasserted( 8011,

.. error:: 8011

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/s/strategy_shard.cpp#L382`

.. line: uasserted( 8012, str::stream()

.. error:: 8012

   :message: str::stream()
   :throws: UserException
   :module: :source:`src/mongo/s/strategy_shard.cpp#L723`

.. line: uasserted( 8013,

.. error:: 8013

   :message: 
   :throws: UserException
   :module: :source:`src/mongo/s/strategy_shard.cpp#L639`

.. line: uasserted( 8014, str::stream() << "cannot modify shard key for collection "

.. error:: 8014

   :message: str::stream() << "cannot modify shard key for collection "
   :throws: UserException
   :module: :source:`src/mongo/s/strategy_shard.cpp#L687`

.. line: uasserted( 8015, str::stream()

.. error:: 8015

   :message: str::stream()
   :throws: UserException
   :module: :source:`src/mongo/s/strategy_shard.cpp#L909`

.. line: throw UserException( 8016 , "can't do this write op on sharded collection" );

.. error:: 8016

   :message: "can't do this write op on sharded collection" );
   :throws: UserException
   :module: :source:`src/mongo/s/strategy_shard.cpp#L1012`

.. line: throw UserException( 8020 , (string)"SyncClusterConnection::remove prepare failed: " + errmsg );

.. error:: 8020

   :message: (string)"SyncClusterConnection::remove prepare failed: " + errmsg );
   :throws: UserException
   :module: :source:`src/mongo/client/syncclusterconnection.cpp#L358`

.. line: uassert( 8041 , (string)"no primary shard configured for db: " + _name , _primary.ok() );

.. error:: 8041

   :message: (string)"no primary shard configured for db: " + _name , _primary.ok() );
   :throws: UserException
   :module: :source:`src/mongo/s/config.h#L163`

.. line: uassert( 8042 , "db doesn't have sharding enabled" , _shardingEnabled );

.. error:: 8042

   :message: "db doesn't have sharding enabled"
   :throws: UserException
   :module: :source:`src/mongo/s/config.cpp#L166`

.. line: uassert( 8043 , "collection already sharded" , ! ci.isSharded() );

.. error:: 8043

   :message: "collection already sharded"
   :throws: UserException
   :module: :source:`src/mongo/s/config.cpp#L175`

.. line: uasserted( 8050 , "can't update system.indexes" );

.. error:: 8050

   :message: "can't update system.indexes"
   :throws: UserException
   :module: :source:`src/mongo/s/strategy_shard.cpp#L1050`

.. line: uasserted( 8051 , "can't delete indexes on sharded collection yet" );

.. error:: 8051

   :message: "can't delete indexes on sharded collection yet"
   :throws: UserException
   :module: :source:`src/mongo/s/strategy_shard.cpp#L1053`

.. line: uasserted( 8052 , "handleIndexWrite invalid write op" );

.. error:: 8052

   :message: "handleIndexWrite invalid write op"
   :throws: UserException
   :module: :source:`src/mongo/s/strategy_shard.cpp#L1057`

.. line: throw UserException( 8060 , "can't call primaryShard on a sharded collection" );

.. error:: 8060

   :message: "can't call primaryShard on a sharded collection" );
   :throws: UserException
   :module: :source:`src/mongo/s/request.cpp#L105`

.. line: throw UserException( 8071 , str::stream() << "cleaning up after drop failed: " << res );

.. error:: 8071

   :message: str::stream() << "cleaning up after drop failed: " << res );
   :throws: UserException
   :module: :source:`src/mongo/s/chunk.cpp#L1256`

.. line: throw MsgAssertionException( 9011,

.. error:: 90

   :message: 11,
   :throws: MsgAssertionException
   :module: :source:`src/mongo/db/queryoptimizercursorimpl.cpp#L82`

.. line: ConnectException(string msg) : UserException(9000,msg) { }

.. error:: 9000

   :message: msg) { }
   :throws: UserException
   :module: :source:`src/mongo/client/dbclientinterface.h#L1011`

.. line: throw UserException( 9002 , (string)"error on Model::remove: " + errmsg );

.. error:: 9002

   :message: (string)"error on Model::remove: " + errmsg );
   :throws: UserException
   :module: :source:`src/mongo/client/model.cpp#L53`

.. line: throw UserException( 9003 , (string)"error on Model::save: " + errmsg );

.. error:: 9003

   :message: (string)"error on Model::save: " + errmsg );
   :throws: UserException
   :module: :source:`src/mongo/client/model.cpp#L126`

.. line: throw UserException( 9004 , (string)"invoke failed: " + getError() );

.. error:: 9004

   :message: (string)"invoke failed: " + getError() );
   :throws: UserException
   :module: :source:`src/mongo/scripting/engine.h#L92`

.. line: throw UserException( 9005 , (string)"invoke failed: " + getError() );

.. error:: 9005

   :message: (string)"invoke failed: " + getError() );
   :throws: UserException
   :module: :source:`src/mongo/scripting/engine.h#L101`

.. line: throw UserException( 9008 , "filemd5 failed" );

.. error:: 9008

   :message: "filemd5 failed" );
   :throws: UserException
   :module: :source:`src/mongo/client/gridfs.cpp#L151`

.. line: throw UserException( 9010 , (string)"reduce invoke failed: " + s->getError() );

.. error:: 9010

   :message: (string)"reduce invoke failed: " + s->getError() );
   :throws: UserException
   :module: :source:`src/mongo/db/commands/group.cpp#L129`

.. line: throw UserException( 9014, str::stream() << "map invoke failed: " + s->getError() );

.. error:: 9014

   :message: str::stream() << "map invoke failed: " + s->getError() );
   :throws: UserException
   :module: :source:`src/mongo/db/commands/mr.cpp#L72`

.. line: throw UserException( 9015, ss.str() );

.. error:: 9015

   :message: ss.str() );
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.h#L580`

.. line: uasserted(9016, str::stream() << "unknown $bit operation: " << e.fieldName());

.. error:: 9016

   :message: str::stream() << "unknown $bit operation: " << e.fieldName());
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L309`

.. line: uasserted( 9017 , str::stream() << "Mod::apply can't handle type: " << op );

.. error:: 9017

   :message: str::stream() << "Mod::apply can't handle type: " << op );
   :throws: UserException
   :module: :source:`src/mongo/db/ops/update_internal.cpp#L332`

.. line: uassert( 9517 , "writeback" , ( d.reservedField() & Reserved_FromWriteback ) == 0 );

.. error:: 9517

   :message: "writeback"
   :throws: UserException
   :module: :source:`src/mongo/s/d_logic.cpp#L104`

.. line: throw UserException( 9997 , (string)"authentication failed: " + errmsg );

.. error:: 9997

   :message: (string)"authentication failed: " + errmsg );
   :throws: UserException
   :module: :source:`src/mongo/tools/tool.cpp#L435`

.. line: throw UserException( 9998 , "you need to specify fields" );

.. error:: 9998

   :message: "you need to specify fields" );
   :throws: UserException
   :module: :source:`src/mongo/tools/tool.cpp#L398`

.. line: throw UserException( 9999 , ((string)"file: " + fn ) + " doesn't exist" );

.. error:: 9999

   :message: ((string)"file: " + fn ) + " doesn't exist" );
   :throws: UserException
   :module: :source:`src/mongo/tools/tool.cpp#L377`


