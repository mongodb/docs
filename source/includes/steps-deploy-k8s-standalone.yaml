---
title: "Copy the following example standalone |k8s| |k8s-obj|."
stepnum: 1
level: 4
ref: copy-k8s-example
content: |

   This is a |yaml| file that you can modify to meet your desired
   configuration. Change the highlighted settings to match your desired
   standalone configuration.

   .. literalinclude:: /reference/k8s/example-standalone-minimal.yaml
      :language: yaml
      :linenos:
      :emphasize-lines: 5-17

---
title: "Open your preferred text editor and paste the |k8s-obj| specification into a new text file."
stepnum: 2
level: 4
ref: paste-k8s-example
---
title: "Configure the settings highlighted in the preceeding step as follows."
stepnum: 3
level: 4
ref: change-k8s-values
content: |

   .. list-table::
      :widths: 20 20 40 20
      :header-rows: 1

      * - Key
        - Type
        - Description
        - Example

      * - :setting:`metadata.name`
        - string
        - Label for this |k8s| standalone |k8s-obj|.

          .. seealso::

             - :setting:`metadata.name`
             - |k8s| documentation on `names <https://kubernetes.io/docs/concepts/overview/working-with-objects/names/>`__.

        - ``my-project``

      * - :setting:`metadata.namespace`
        - string
        - Scope of object names. |k8s| |k8s-ns| where this
          |k8s-mdbrsc| and other |k8s-objs| are created.

          Using two different namespaces allows you to delete your
          standalone or all of the resources in the namespace without
          affecting your |k8s-op-short|.

          .. seealso::

             - :setting:`metadata.namespace`
             - |k8s| documentation on |k8s-nss|

        - ``mongodb``

      * - :setting:`spec.version`
        - string
        - Version of MongoDB that is installed on this
          standalone.

          The format should be ``X.Y.Z`` for the Community edition and
          ``X.Y.Z-ent`` for the Enterprise edition.

          To learn more about MongoDB versioning, see
          :ref:`release-version-numbers` in the MongoDB Manual.
        - ``3.6.7``

      * - :setting:`spec.opsManager.configMapRef.name`
        - string
        - Name of the |k8s-configmap| with the |onprem| connection
          configuration. The
          :setting:`spec.cloudManager.configMapRef.name` setting is an
          alias for this setting and can be used in its place.

          .. admonition:: Value must match namespace and name of ConfigMap
             :class: note

             This value *must* match the value you provided for
             :setting:`metadata.name` in your |onprem|
             :ref:`project ConfigMap <create-k8s-project>`.

             If this |k8s-mdbrsc| is in a different |k8s-ns| than the
             :ref:`project ConfigMap <create-k8s-project>`, you should
             set this value to the namespace *and* name of the
             ConfigMap in this format:
             ``<namespace>/<myconfigmap>``

          .. include:: /includes/k8s/fact-k8s-operator-manages-configmap.rst

        - ``<myproject>`` or
          ``<namespace>/<myconfigmap>``

      * - :setting:`spec.credentials`
        - string
        - Name of the |k8s| |k8s-secret| you
          :ref:`created <create-k8s-secret>` as |mms| |api|
          authentication credentials for the |k8s-op-short| to
          communicate with |onprem|.

          .. admonition:: Value must use namespace and name of Secret
             :class: note

             This value *must* match the value you provided for
             :setting:`namespace` and `name` for your |mms| |k8s|
             :ref:`Secret <create-k8s-credentials>`.

             If this |k8s-obj| is in a different |k8s-ns| than the
             Secret, you should set this value to the namespace *and*
             name of the Secret in this format:
             ``<namespace>/<name>``

          .. include:: /includes/k8s/fact-k8s-operator-manages-secret.rst

        - ``<mycredentials>`` or
          ``<namespace>/<mycredentials>``

      * - :setting:`spec.type`
        - string
        - Type of |k8s-mdbrsc| to create.

        - ``Standalone``

      * - :setting:`spec.persistent`
        - string
        - *Optional.*

          If this value is ``true``, then
          :setting:`spec.podSpec.persistence.single` is set to its
          default value of ``16G``.

          To change your |k8s-pvcs| configuration, configure the
          following collections to meet your deployment requirements:

          - If you want one |k8s-pv| for each |k8s-pod|, configure the
            :setting:`spec.podSpec.persistence.single` collection.

          - If you want separate |k8s-pvs| for data, journals, and
            logs for each |k8s-pod|, configure the following
            collections:

            - :setting:`spec.podSpec.persistence.multiple.data`
            - :setting:`spec.podSpec.persistence.multiple.journal`
            - :setting:`spec.podSpec.persistence.multiple.logs`

          .. include:: /includes/k8s/k8s-persistent-volumes.rst

        - ``true``

---
title: "Add any additional accepted settings for a Standalone deployment."
stepnum: 4
level: 4
ref: add-k8s-values
content: |

  You can also add any of the following optional settings to the
  |k8s-obj| specification file for a Standalone deployment:

  - :setting:`spec.exposedExternally`
  - :setting:`spec.logLevel`
  - :setting:`spec.featureCompatibilityVersion`
  - :setting:`spec.podSpec.cpu`
  - :setting:`spec.podSpec.cpuRequests`
  - :setting:`spec.podSpec.memory`
  - :setting:`spec.podSpec.memoryRequests`
  - :setting:`spec.podSpec.persistence.single`
  - :setting:`spec.podSpec.persistence.multiple.data`
  - :setting:`spec.podSpec.persistence.multiple.journal`
  - :setting:`spec.podSpec.persistence.multiple.logs`
  - :setting:`spec.podSpec.podAffinity`
  - :setting:`spec.podSpec.nodeAffinity`

---
title: "Save this file with a ``.yaml`` file extension."
stepnum: 5
level: 4
ref: save-object-spec

---
title: "Start your Standalone deployment."
stepnum: 6
level: 4
ref:
content: |

   Invoke the following |k8s| command to create your standalone:

   .. code-block:: sh

      kubectl apply -f <standalone-conf>.yaml

---
title: "Track the status of your standalone deployment."
stepnum: 7
level: 4
ref: track-k8s-deployment
content: |

    .. include:: /includes/check-resource-status.rst

...
