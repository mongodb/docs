#  This file borrows content from:
#    /includes/options-shared.yaml
#    /includes/options-mongod.yaml
#    /includes/options-mongos.yaml
#
#  The {{program}} variable is generated by the system.
#
program: conf
name: systemLog.verbosity
type: integer
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
inherit:
  name: verbose
  program: _shared
  file: options-shared.yaml
description: |
  Increases the amount of internal reporting returned on standard output
  or in log files. To increase the amount of information reported, increase
  the number.
---
program: conf
name: systemLog.quiet
type: boolean
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
inherit:
  name: quiet
  program: _shared
  file: options-shared.yaml
post: |
  This option is **not** recommended for production systems as it may make
  tracking problems during particular connections much more difficult.
---
program: conf
name: systemLog.traceAllExceptions
type: string
directive: setting
description: |
  Prints verbose information for debugging. Used for additional logging in
  support-related troubleshooting.
---
program: conf
name: systemLog.syslogFacility
type: string
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
inherit:
  name: syslogFacility
  program: mongod
  file: options-mongod.yaml
---
program: conf
name: systemLog.path
type: string
directive: setting
replacement:
  program: ":program:`mongod` or :program:`mongos`"
inherit:
    program: mongod
    name: logpath
    file: options-mongod.yaml
---
program: conf
name: systemLog.logAppend
type: boolean
default: false
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
inherit:
  name: logappend
  program: mongod
  file: options-mongod.yaml
---
program: conf
name: systemLog.destination
type: string
directive: setting
description: |
  Specify either ``file`` or ``syslog``. If you specify ``file`` you
  must also specify :setting:`systemLog.path`.
---
program: conf
name: systemLog.timeStampFormat
type: string
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
inherit:
  name: timeStampFormat
  program: mongod
  file: options-mongod.yaml
---
program: conf
name: processManagement.pidFilePath
type: string
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
inherit:
  name: pidfilepath
  program: mongod
  file: options-mongod.yaml
---
program: conf
name: processManagement.fork
type: boolean
default: false
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
inherit:
  name: fork
  program: mongod
  file: options-mongod.yaml
---
program: conf
name: processManagement.windowsService.serviceName
type: string
default: "MongoDB"
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
inherit:
  name: serviceName
  program: mongod.exe
  file: options-mongod.exe.yaml
---
program: conf
name: processManagement.windowsService.displayName
type: string
default: "MongoDB"
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
inherit:
  name: serviceDisplayName
  program: mongod.exe
  file: options-mongod.exe.yaml
---
program: conf
name: processManagement.windowsService.description
type: string
default:  "MongoDB Server"
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
inherit:
  name: serviceDescription
  program: mongod.exe
  file: options-mongod.exe.yaml
---
program: conf
name: processManagement.windowsService.serviceUser
type: string
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
inherit:
  name: serviceUser
  program: mongod.exe
  file: options-mongod.exe.yaml
---
program: conf
name: processManagement.windowsService.servicePassword
type: string
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
inherit:
  name: servicePassword
  program: mongod.exe
  file: options-mongod.exe.yaml
---
program: conf
name: net.port
type: integer
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
inherit:
  name: port
  program: mongod
  file: options-mongod.yaml
---
program: conf
name: net.bindIp
type: string
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
inherit:
  name: bind_ip
  program: mongod
  file: options-mongod.yaml
post: |
  To bind to multiple IP addresses, enter a list of comma separated values.
---
program: conf
name: net.maxIncomingConnections
type: integer
default: 1000000
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
inherit:
  name: maxConns
  program: mongod
  file: options-mongod.yaml
post: |
  This is particularly useful for a :program:`mongos` if you have a client
  that creates a number of connections but allows them to timeout rather
  than close the connections. When you set this option, ensure the value
  is slightly higher than the size of the connection pool or the total
  number of connections, to prevent erroneous connection spikes from
  propagating to the members of a sharded cluster.
---
program: conf
name: net.wireObjectCheck
type: boolean
default: true
directive: setting
description: |
  Forces the :program:`mongod` or :program:`mongos` instance to validate
  all requests from clients upon receipt to prevent clients from inserting
  malformed or invalid BSON into a MongoDB database.

  For objects with a high degree of sub-document nesting, {{role}} can
  have a small impact on performance.
---
program: conf
name: net.http.enabled
type: boolean
default: false
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
inherit:
  name: httpinterface
  program: mongod
  file: options-mongod.yaml
---
program: conf
name: net.http.port
type: boolean
directive: setting
description: |
  The port on which the HTTP interface listens.
---
program: conf
name: net.unixDomainSocket.enabled
type: boolean
default: false
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
inherit:
  name: nounixsocket
  program: mongod
  file: options-mongod.yaml
---
program: conf
name: net.unixDomainSocket.pathPrefix
type: string
default: /tmp
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
inherit:
  name: unixSocketPrefix
  program: mongod
  file: options-mongod.yaml
---
program: conf
name: net.ipv6
type: boolean
default: false
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
inherit:
  name: ipv6
  program: _shared
  file: options-shared.yaml
---
program: conf
name: net.http.JSONPEnabled
type: boolean
default: false
directive: setting
replacement:
  program: ":program:`mongod`"
inherit:
  name: jsonp
  program: mongod
  file: options-mongod.yaml
post: |
  The {{role}} option is available only for :program:`mongod`.
---
program: conf
name: net.http.RESTInterfaceEnabled
type: boolean
default: false
directive: setting
replacement:
  program: ":program:`mongod`"
inherit:
  name: rest
  program: mongod
  file: options-mongod.yaml
post: |
  The {{role}} option is available only for :program:`mongod`.
---
program: conf
name: net.ssl.sslOnNormalPorts
type: boolean
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
inherit:
  name: sslOnNormalPorts
  program: mongod
  file: options-mongod.yaml
---
program: conf
name: net.ssl.mode
type: string
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
inherit:
  name: sslMode
  program: mongod
  file: options-mongod.yaml
---
program: conf
name: net.ssl.PEMKeyFile
type: string
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
inherit:
  name: sslPEMKeyFile
  program: mongod
  file: options-mongod.yaml
---
program: conf
name: net.ssl.PEMKeyPassword
type: string
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
inherit:
  name: sslPEMKeyPassword
  program: mongod
  file: options-mongod.yaml
---
program: conf
name: net.ssl.clusterFile
type: string
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
  pemKeyOption: ":setting:`~net.ssl.PEMKeyFile`"
inherit:
  name: sslClusterFile
  program: mongod
  file: options-mongod.yaml
---
program: conf
name: net.ssl.clusterPassword
type: string
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
inherit:
  name: sslClusterPassword
  program: mongod
  file: options-mongod.yaml
---
program: conf
name: net.ssl.CAFile
type: string
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
inherit:
  name: sslCAFile
  program: mongod
  file: options-mongod.yaml
---
program: conf
name: net.ssl.CRLFile
type: string
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
inherit:
  name: sslCRLFile
  program: mongod
  file: options-mongod.yaml
---
program: conf
name: net.ssl.weakCertificateValidation
type: boolean
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
inherit:
  name: sslWeakCertificateValidation
  program: mongod
  file: options-mongod.yaml
---
program: conf
name: net.ssl.allowInvalidCertificates
type: boolean
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
inherit:
  name: sslAllowInvalidCertificates
  program: mongod
  file: options-mongod.yaml
---
program: conf
name: net.ssl.FIPSMode
type: boolean
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
inherit:
  name: sslFIPSMode
  program: mongod
  file: options-mongod.yaml
---
program: conf
name: setParameter
type: document
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
inherit:
  name: setParameter
  program: mongod
  file: options-mongod.yaml
---
program: conf
name: security.keyFile
type: string
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
  auth_option: ":setting:`security.authorization`"
  role: ":setting:`~security.keyFile`"
inherit:
  name: keyFile
  program: mongod
  file: options-mongod.yaml
---
program: conf
name: security.clusterAuthMode
type: string
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
inherit:
  name: clusterAuthMode
  program: mongod
  file: options-mongod.yaml
---
program: conf
name: security.authorization
type: string
default: disabled
directive: setting
description: |
  Enables Role-Based Access Control (RBAC) to govern each user's access to
  database resources and operations.

  Set this option to one of the following:

  .. list-table::
     :header-rows: 1
     :widths: 20 40

     * - Value

       - Description

     * - ``enabled``

       - A user can access only the database resources and actions for
         which they have been granted privileges.

     * - ``disabled``

       - A user can access any database and perform any action.

  See :doc:`/core/authorization` for more information.
post: |
  The {{role}} option is available only for :program:`mongod`.
---
program: conf
name: security.authenticationMechanisms
# the equivalent command-line option is set via setParameter.
type: strings
directive: setting
description: |
  .. versionchanged:: 2.6
     Added support for the ``PLAIN`` and ``MONGODB-X509`` authentication
     mechanisms.

  Specifies the list of authentication mechanisms the server accepts. Set
  this to one or more of the following values. If you specify multiple
  values, use a comma-separated list and no spaces. For descriptions
  of the authentication mechanisms, see :doc:`/core/authentication`.

  .. list-table::
     :header-rows: 1
     :widths: 20 40

     * - Value

       - Description

     * - MONGODB-CR

       - MongoDB challenge/response authentication.

     * - MONGODB-X509

       - MongoDB SSL certificate authentication.

     * - PLAIN

       - External authentication using LDAP. You can also use ``PLAIN``
         for authenticating in-database users. ``PLAIN`` transmits
         passwords in plain text. This mechanism is available only in
         `MongoDB Enterprise
         <http://www.mongodb.com/products/mongodb-enterprise>`_.

     * - GSSAPI

       - External authentication using Kerberos. This mechanism is
         available only in `MongoDB Enterprise
         <http://www.mongodb.com/products/mongodb-enterprise>`_.
# Per DOCS-2940, combine this with similar info in
#   /includes/options-shared
#   /reference/connection-string
#   /reference/parameters
#   /tutorial/control-access-to-mongodb-windows-with-kerberos-authentication
#   /tutorial/control-access-to-mongodb-with-kerberos-authentication.txt
---
program: conf
name: security.enableLocalhostAuthBypass
# the equivalent command-line option is set via setParameter.
type: string
default: enabled
directive: setting
description: |
  .. versionadded:: 2.6

  Specify ``0`` to disable localhost authentication bypass.
post: |
  The {{role}} option is available only for :program:`mongod`.
---
program: conf
name: security.supportCompatibilityFormPrivilegeDocuments
# the equivalent command-line option is set via setParameter.
type: string
directive: setting
description: |
  Disables backwards compatibility with the MongoDB 2.2 access control
  roles. To disable backwards compatibility, set {{role}} to ``0``. In
  general, you should set this option if your deployment does not need to
  support legacy user documents. Typically legacy user documents are only
  useful during the upgrade process and while you migrate applications to
  the updated privilege document form.
post: |
  The {{role}} option is available only for :program:`mongod`.
---
program: conf
name: security.authSchemaVersion
# todo This option currently exists in the code but has no function. When
# a function is written, update this content.
type: string
directive: setting
description: |
  This option is currently not used.
---
program: conf
name: security.sasl.hostName
type: string
directive: setting
description: |
  A fully qualified server domain name for the purpose of configuring SASL
  and Kerberos authentication. The SASL hostname overrides the hostname
  only for the configuration of SASL and Kerberos.
---
program: conf
name: security.sasl.serviceName
type: string
directive: setting
description: |
  Registered name of the service using SASL. This option allows you to
  override the default :doc:`Kerberos
  </tutorial/control-access-to-mongodb-with-kerberos-authentication>`
  service name component of the :doc:`Kerberos
  </tutorial/control-access-to-mongodb-with-kerberos-authentication>`
  principal name, on a per-instance basis. If unspecified, the default
  value is ``mongodb``.

  MongoDB permits setting this option only at startup. The
  :dbcommand:`setParameter` can not change this setting.

  This option is available only in MongoDB Enterprise.

.. important:: Ensure that your driver supports alternate service names.
---
program: conf
name: security.sasl.saslauthdSocketPath
type: string
directive: setting
description: |
  The path to the UNIX domain socket file for ``saslauthd``.
---
program: conf
name: security.javascriptEnabled
type: boolean
default: true
directive: setting
description: |
  Enables or disables javascript execution.
---
program: conf
name: operationProfiling.slowOpThresholdMs
type: integer
default: 100
directive: setting
replacement:
  program: ":program:`mongod`"
inherit:
  name: slowms
  program: mongod
  file: options-mongod.yaml
post: |
  The {{role}} option is available only for :program:`mongod`.
---
program: conf
name: operationProfiling.mode
type: integer
directive: setting
replacement:
  program: ":program:`mongod`"
inherit:
  name: profile
  program: mongod
  file: options-mongod.yaml
post: |
  The {{role}} option is available only for :program:`mongod`.
---
program: conf
name: storage.dbPath
type: string
directive: setting
replacement:
  program: ":program:`mongod`"
inherit:
  name: dbpath
  program: mongod
  file: options-mongod.yaml
post: |
  The {{role}} option is available only for :program:`mongod`.
---
program: conf
name: storage.directoryPerDB
type: boolean
default: false
directive: setting
replacement:
  program: ":program:`mongod`"
inherit:
  name: directoryperdb
  program: mongod
  file: options-mongod.yaml
post: |
  The {{role}} option is available only for :program:`mongod`.
---
program: conf
name: storage.indexBuildRetry
type: boolean
default: true
directive: setting
description: |
  Selects whether :program:`mongod` rebuilds incomplete indexes on the
  next start up. This applies in cases where :program:`mongod` restarts
  after it has shut down or stopped in the middle of an index build. In
  such cases, :program:`mongod` always removes any incomplete indexes,
  and then, by default, attempts to rebuild them. To stop :program:`mongod`
  from rebuilding indexes, set this option to ``false``.
post: |
  The {{role}} option is available only for :program:`mongod`.
---
program: conf
name: storage.preallocDataFiles
type: boolean
default: true
directive: setting
replacement:
  program: ":program:`mongod`"
inherit:
  name: noprealloc
  program: mongod
  file: options-mongod.yaml
post: |
  The {{role}} option is available only for :program:`mongod`.
---
program: conf
name: storage.nsSize
type: integer
default: 16
directive: setting
replacement:
  program: ":program:`mongod`"
inherit:
  name: nssize
  program: mongod
  file: options-mongod.yaml
post: |
  The {{role}} option is available only for :program:`mongod`.
---
program: conf
name: storage.quota.enforced
type: Boolean
default: "false"
directive: setting
inherit:
  name: quota
  program: mongod
  file: options-mongod.yaml
post: |
  The {{role}} option is available only for :program:`mongod`.
replacement:
  quota_files: :setting:`storage.quota.maxFilesPerDB`
---
program: conf
name: storage.quota.maxFilesPerDB
type: integer
default: 8
directive: setting
inherit:
  name: quotaFiles
  program: mongod
  file: options-mongod.yaml
post: |
  The {{role}} option is available only for :program:`mongod`.
replacement:
  quota_flag: :setting:`storage.quota.enforced`
---
program: conf
name: storage.smallFiles
type: boolean
default: false
directive: setting
replacement:
  program: ":program:`mongod`"
inherit:
  name: smallfiles
  program: mongod
  file: options-mongod.yaml
post: |
  The {{role}} option is available only for :program:`mongod`.
---
program: conf
name: storage.syncPeriodSecs
type: number
default: 60
directive: setting
replacement:
  program: ":program:`mongod`"
inherit:
  name: syncdelay
  program: mongod
  file: options-mongod.yaml
post: |
  The {{role}} option is available only for :program:`mongod`.
---
program: conf
name: storage.repairPath
type: string
directive: setting
replacement:
  program: ":program:`mongod`"
inherit:
  name: repairpath
  program: mongod
  file: options-mongod.yaml
post: |
  The {{role}} option is available only for :program:`mongod`.
---
program: conf
name: storage.journal.enabled
type: boolean
default: |
  ``true`` on 64-bit systems, ``false`` on 32-bit systems
directive: setting
replacement:
  program: ":program:`mongod`"
inherit:
  name: journal
  program: _shared
  file: options-shared.yaml
post: |
  The {{role}} option is available only for :program:`mongod`.
---
program: conf
name: storage.journal.debugFlags
type: integer
directive: setting
replacement:
  program: ":program:`mongod`"
inherit:
  name: journalOptions
  program: mongod
  file: options-mongod.yaml
post: |
  The {{role}} option is available only for :program:`mongod`.
---
program: conf
name: storage.journal.commitIntervalMs
type: number
directive: setting
replacement:
  program: ":program:`mongod`"
inherit:
  name: journalCommitInterval
  program: mongod
  file: options-mongod.yaml
post: |
  The {{role}} option is available only for :program:`mongod`.
---
program: conf
name: replication.oplogSizeMB
type: integer
directive: setting
replacement:
  program: ":program:`mongod`"
inherit:
  name: oplogSize
  program: mongod
  file: options-mongod.yaml
post: |
  The {{role}} option is available only for :program:`mongod`.
---
program: conf
name: replication.replSetName
type: string
directive: setting
replacement:
  program: ":program:`mongod`"
inherit:
  name: replSet
  program: mongod
  file: options-mongod.yaml
post: |
  The {{role}} option is available only for :program:`mongod`.
---
program: conf
name: replication.secondaryIndexPrefetch
type: string
directive: setting
replacement:
  program: ":program:`mongod`"
inherit:
  name: replIndexPrefetch
  program: mongod
  file: options-mongod.yaml
post: |
  The {{role}} option is available only for :program:`mongod`.
---
program: conf
name: sharding.clusterRole
type: string
directive: setting
description: |
  Selects the role the :program:`mongod` instance has in the sharded
  cluster. Set this option to one of the following:

  .. list-table::
     :header-rows: 1
     :widths: 20 40

     * - Value

       - Description

     * - ``configsvr``

       - Start this instance as a :term:`config server`. The instance
         starts on port ``27019`` by default.

     * - ``shardsvr``

       - Start this instance as a :term:`shard`. The instance starts
         on port ``27018`` by default.
post: |
  The {{role}} option is available only for :program:`mongod`.
---
program: conf
name: sharding.archiveMovedChunks
type: integer
directive: setting
inherit:
  name: moveParanoia
  program: mongod
  file: options-mongod.yaml
---
program: conf
name: auditLog.destination
type: string
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
inherit:
  name: auditDestination
  program: mongod
  file: options-mongod.yaml
---
program: conf
name: auditLog.format
type: string
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
inherit:
  name: auditFormat
  program: mongod
  file: options-mongod.yaml
---
program: conf
name: auditLog.path
type: string
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
inherit:
  name: auditPath
  program: mongod
  file: options-mongod.yaml
---
program: conf
name: auditLog.filter
type: document
directive: setting
replacement:
  program: ":program:`mongos` or :program:`mongod`"
inherit:
  name: auditFilter
  program: mongod
  file: options-mongod.yaml
---
program: conf
name: snmp.subagent
type: boolean
directive: setting
replacement:
  program: ":program:`mongod`"
inherit:
  name: snmp-subagent
  program: mongod
  file: options-mongod.yaml
post: |
  The {{role}} option is available only for :program:`mongod`.
---
program: conf
name: snmp.master
type: boolean
directive: setting
replacement:
  program: ":program:`mongod`"
inherit:
  name: snmp-master
  program: mongod
  file: options-mongod.yaml
post: |
  The {{role}} option is available only for :program:`mongod`.
---
program: conf
name: replication.localPingThresholdMs
type: integer
directive: setting
replacement:
  program: ":program:`mongos`"
inherit:
  name: localThreshold
  program: mongos
  file: options-mongos.yaml
---
program: conf
name: sharding.autoSplit
type: boolean
directive: setting
replacement:
  program: ":program:`mongos`"
inherit:
  name: noAutoSplit
  program: mongos
  file: options-mongos.yaml
---
program: conf
name: sharding.configDB
type: string
directive: setting
replacement:
  program: ":program:`mongos`"
inherit:
  name: configdb
  program: mongos
  file: options-mongos.yaml
---
program: conf
name: sharding.chunkSize
type: integer
default: 64
directive: setting
replacement:
  program: ":program:`mongos`"
inherit:
  name: chunkSize
  program: mongos
  file: options-mongos.yaml
...
