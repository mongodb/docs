.. index:: index; create
.. _index-create-index:

===============
Create an Index
===============

.. default-domain:: mongodb

Indexes allow MongoDB to process and fulfill queries quickly by
creating small and efficient representations of the documents in a
:term:`collection`. MongoDB creates an index on the ``_id`` field of
every collection by default, but allows users to create indexes for
any collection using on any field in a :term:`document`.

This tutorial describes how to create an index on a single
field. MongoDB also supports :ref:`compound indexes
<index-type-compound>`, which are indexes on multiple fields. See
:ref:`index-create-compound-index` for instructions on building
compound indexes.

Build a Foreground Index on a Single Field
------------------------------------------

To create an index, use :method:`db.collection.ensureIndex()` or a similar
:api:`method from your driver <>`. For example
the following creates an index on the ``phone-number`` field
of the ``people`` collection:

.. code-block:: javascript

   db.people.ensureIndex( { "phone-number": 1 } )

:method:`ensureIndex() <db.collection.ensureIndex()>` only creates an
index if an index of the same specification does not already exist.

All indexes support and optimize the performance for queries that select
on this field. For queries that cannot use an index, MongoDB must scan
all documents in a collection for documents that match the query.

Examples
--------

If you create an index on the ``user_id`` field in the ``records``,
this index is, the index will support the following query:

.. code-block:: javascript

   db.records.find( { user_id: 2 } )

However, the following query, on the ``profile_url`` field is not
supported by this index:

.. code-block:: javascript

   db.records.find( { profile_url: 2 } )

Additional Considerations
-------------------------

.. include:: /includes/index-tutorials-considerations.rst

.. seealso:: :ref:`index-create-compound-index`,
   :doc:`/administration/indexes` and :doc:`/core/indexes` for more
   information.
