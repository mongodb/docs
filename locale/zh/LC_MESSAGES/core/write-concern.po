# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/write-concern.txt:7
msgid "Write Concern"
msgstr "写关注"

#: ../source/includes/introduction-write-concern.rst:1
msgid ""
":term:`Write concern` describes the guarantee that MongoDB provides when "
"reporting on the success of a write operation. The strength of the write "
"concerns determine the level of guarantee. When inserts, updates and deletes "
"have a *weak* write concern, write operations return quickly. In some failure "
"cases, write operations issued with weak write concerns may not persist. With "
"*stronger* write concerns, clients wait after sending a write operation for "
"MongoDB to confirm the write operations."
msgstr ""
" :term:`写关注`  描述了MongoDB为导入一个成功写入操作提供的保证。"
"写关注的强弱决定了保证的等级。在插入、更新及删除操作中，存在一个 *弱* 写关注，"
"写入操作快速返回。在一些失败的案例中，并不能保证弱写关注的写入操作。通过使用 *强* "
"写关注，为了对写入操作进行确认，客户端将一直等待直到向MongoDB发送一个写入操作。"

#: ../source/includes/introduction-write-concern.rst:10
msgid ""
"MongoDB provides different levels of write concern to better address the "
"specific needs of applications. Clients may adjust write concern to ensure "
"that the most important operations persist successfully to an entire MongoDB "
"deployment. For other less critical operations, clients can adjust the write "
"concern to ensure faster performance rather than ensure persistence to the "
"entire deployment."
msgstr ""
"MongoDB提供了不同等级的写关注以更好地满足不同应用的特定需求。客户端可以调整写关注， "
"以保证最重要的操作能够成功存留在一个完整的MongoDB部署中。对于其它不那么重要的操作，"
"客户端可以调整写关注，以保证更快的性能而不是整个部署的一致性。"

#: ../source/core/write-concern.txt:13
msgid ""
"A new protocol for :ref:`write operations <rel-notes-write-operations>` "
"integrates write concern with the write operations."
msgstr ""
"一个新的 :ref:`写入操作 <rel-notes-write-operations>` 协议将写关注及写入操作进行了整合。"

#: ../source/core/write-concern.txt:18
msgid ""
"For details on write concern configurations, see :doc:`/reference/write-"
"concern`."
msgstr ""
"如果你想了解更多关于写关注配置的细节，请查阅 :doc:`/reference/write-concern` 。"

#: ../source/core/write-concern.txt:22
msgid "Considerations"
msgstr ""

#: ../source/core/write-concern.txt:25
msgid "Default Write Concern"
msgstr ""

#: ../source/core/write-concern.txt:27
msgid ""
"The :program:`mongo` shell and the MongoDB drivers use :ref:`write-concern-"
"acknowledged` as the default write concern."
msgstr ""
" :program:`mongo` 脚本以及MongoDB驱动器使用 :ref:`write-concern-acknowledged` 作为默认的写关注。"

#: ../source/core/write-concern.txt:30
msgid ""
"See :ref:`write-concern-acknowledged` for more information, including when "
"this write concern became the default."
msgstr ""
"请查阅 :ref:`write-concern-acknowledged` 以了解更多信息，包括写关注什么时候变为默认。"

#: ../source/core/write-concern.txt:34
msgid "Timeouts"
msgstr "超时"

#: ../source/core/write-concern.txt:36
msgid ""
"Clients can set a :ref:`wtimeout <wc-wtimeout>` value as part of a :ref:"
"`replica acknowledged <replica-set-write-concern>` write concern. If the write "
"concern is not satisfied in the specified interval, the operation returns an "
"error, even if the write concern will eventually succeed."
msgstr ""
"客户端可以设置一个 :ref:`超时 <wc-wtimeout>` 值作为 :ref:`副本集确认型 <replica-set-write-concern>` "
" 写关注的一部分。如果写关注不满足特定的时间间隔，"
"即使最后这个写关注最后回成功，这个操作仍然将会返回一个错误。"

#: ../source/core/write-concern.txt:42
msgid ""
"MongoDB does not \"rollback\" or undo modifications made before the "
"``wtimeout`` interval expired."
msgstr ""
"MongoDB 不会 \" 回滚 \" 或者撤销 ``wtimeout`` 间隔过期之前的修改。 "

#: ../source/core/write-concern.txt:46
msgid "Write Concern Levels"
msgstr ""

#: ../source/core/write-concern.txt:48
msgid ""
"MongoDB has the following levels of conceptual write concern, listed from "
"weakest to strongest:"
msgstr ""
"MongoDB有如下几个级别的概念性写关注，从最弱到最强排列如下： "

#: ../source/core/write-concern.txt:54
msgid "Unacknowledged"
msgstr ""

#: ../source/core/write-concern.txt:56
msgid ""
"With an *unacknowledged* write concern, MongoDB does not acknowledge the "
"receipt of write operations. *Unacknowledged* is similar to *errors ignored*; "
"however, drivers will attempt to receive and handle network errors when "
"possible. The driver's ability to detect network errors depends on the "
"system's networking configuration."
msgstr ""
"通过使用 *无确认型（unacknowledged）* 写关注，MongoDB 不用对写入操作的接收进行应答。 "
" 无未确认型（Unacknowledged）* 与 *errors ignored* 相似，但是驱动器尽可能地尝试接收和解决网络错误。 "
"驱动器检测网络错误的能力视系统的网络配置而定。"

#: ../source/core/write-concern.txt:62
msgid ""
"Before the releases outlined in :ref:`driver-write-concern-change`, this was"
" the default write concern."
msgstr ""

#: ../source/core/write-concern.txt:70
msgid "Acknowledged"
msgstr ""

#: ../source/core/write-concern.txt:72
msgid ""
"With a receipt *acknowledged* write concern, the :program:`mongod` confirms "
"that it received the write operation and applied the change to the in-memory"
" view of data. *Acknowledged* write concern allows clients to catch network,"
" duplicate key, and other errors."
msgstr ""

#: ../source/core/write-concern.txt:77
msgid ""
"MongoDB uses the *acknowledged* write concern by default starting in the "
"driver releases outlined in :ref:`write-concern-change-releases`."
msgstr ""
"从 :ref:`write-concern-change-releases` 列出的驱动器版本开始， "
"MongoDB就默认使用 *确认型（acknowledged）* 写关注。"

#: ../source/core/write-concern.txt:80
msgid ""
"The :program:`mongo` shell write methods now incorporates the :doc:`write "
"concern </core/write-concern>` in the write methods and provide the default "
"write concern whether run interactively or in a script. See :ref:`write-"
"methods-incompatibility` for details."
msgstr ""
"目前， :program:`mongo` 脚本的写入方法包含了 :doc:`写关注 </core/write-concern>` 中的写入方法，并且在"
"交互式运行或者脚本中都提供了默认的写关注。请查阅 :ref:`write-methods-incompatibility` 了解更多细节。"

#: ../source/core/write-concern.txt:88
msgid ""
"*Acknowledged* write concern does *not* confirm that the write operation has"
" persisted to the disk system."
msgstr ""

#: ../source/core/write-concern.txt:94
msgid "Journaled"
msgstr ""

#: ../source/core/write-concern.txt:96
msgid ""
"With a *journaled* write concern, the MongoDB acknowledges the write operation "
"only after committing the data to the :term:`journal`. This write concern "
"ensures that MongoDB can recover the data following a shutdown or power "
"interruption."
msgstr ""
"通过使用一个 *日志型（journaled）* 写关注， MongoDB只在将数据提交到 :term:`journal` 之后才认可这个写入操作。"
"这个写关注保证了MongoDB可以在一个关机或者供电中断之后恢复相关的数据。"

#: ../source/core/write-concern.txt:101
msgid "You must have journaling enabled to use this write concern."
msgstr ""
"为了使用这个写关注，您必须启用日志记录。"

#: ../source/core/write-concern.txt:103
msgid ""
"With a *journaled* write concern, write operations must wait for the next "
"journal commit. To reduce latency for these operations, MongoDB also "
"increases the frequency that it commits operations to the journal. See "
":setting:`storage.mmapv1.journal.commitIntervalMs` for more information."
msgstr ""

#: ../source/includes/note-write-concern-journaled-replication.rst:1
#: ../source/includes/note-write-concern-journaled-replication.rst:1
msgid ""
"Requiring *journaled* write concern in a replica set only requires a journal"
" commit of the write operation to the :term:`primary` of the set regardless "
"of the level of *replica acknowledged* write concern."
msgstr ""

#: ../source/core/write-concern.txt:116
msgid "Replica Acknowledged"
msgstr ""

#: ../source/core/write-concern.txt:118
msgid ""
":term:`Replica sets <replica set>` present additional considerations with "
"regards to write concern. The default write concern only requires "
"acknowledgement from the primary."
msgstr ""
" :term:`副本集 <replica set>` 介绍了关于写操作的额外考量。默认的写关注只要求"
"来自主站的应答。"

#: ../source/core/write-concern.txt:122
msgid ""
"With *replica acknowledged* write concern, you can guarantee that the write "
"operation propagates to additional members of the replica set. See :doc:`Write "
"Concern for Replica Sets <replica-set-write-concern>` for more information."
msgstr ""
"通过使用 *副本集确认型（replica acknowledged）* 写关注，您可以保证写入操作拓展到副本集中其它的成员。"
"请查阅 :doc:`副本集的写关注 <replica-set-write-concern>` 以了解更多信息."

#: ../source/core/write-concern.txt:131
msgid ":doc:`/reference/write-concern`"
msgstr ""

#: ../source/core/write-concern.txt:1
msgid "write concern"
msgstr ""
