#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/insert-documents.txt:5
msgid "Insert Documents"
msgstr "插入文档"


#: ../source/tutorial/insert-documents.txt:0
msgid "On this page"
msgstr ""

#: ../source/tutorial/insert-documents.txt:16
msgid "Insert Methods"
msgstr ""


#: ../source/tutorial/insert-documents.txt:18
msgid ""
"MongoDB provides the following methods for inserting :ref:`documents <bson-"
"document-format>` into a collection:"
msgstr ""

#: ../source/tutorial/insert-documents.txt:21
msgid ":ref:`write-op-insertOne`"
msgstr ""

#: ../source/tutorial/insert-documents.txt:23
msgid ":ref:`write-op-insertMany`"
msgstr ""
"你可以通过传递文档数组到方法 :method:`db.collection.insert()` 的方式插入多个文档。"


#: ../source/tutorial/insert-documents.txt:25
msgid ":ref:`write-op-insert-method`"
msgstr ""


#: ../source/tutorial/insert-documents.txt:27
msgid ""
"This page provides examples of insert operations in the :program:`mongo` "
"shell."
msgstr ""

#: ../source/tutorial/insert-documents.txt:33
msgid "Insert Behavior"
msgstr ""
"MongoDB提供一个用于执行批量写入的 :method:`Bulk()` API。"
"以下操作步骤描述了如何使用 :method:`Bulk()` API向MongoDB集合中插入一组文档。"

#: ../source/tutorial/insert-documents.txt:36

msgid "Collection Creation"
msgstr ""

#: ../source/tutorial/insert-documents.txt:38
msgid ""
"If the collection does not currently exist, insert operations will create "
"the collection."
msgstr ""

#: ../source/tutorial/insert-documents.txt:42
msgid "``_id`` Field"
msgstr ""

#: ../source/includes/fact-id-field.rst:1
msgid ""
"In MongoDB, documents stored in a collection require a unique :term:`_id` "
"field that acts as a :term:`primary key`. If the ``_id`` field is "
"unspecified in the documents, MongoDB uses :ref:`ObjectIds <objectid>` as "
"the default value for the ``_id`` field; i.e. if a document does not contain"
" a top-level ``_id`` field during an insert, the MongoDB driver adds the "
"``_id`` field that holds an :ref:`objectid`."
msgstr ""

#: ../source/includes/fact-id-field.rst:8
msgid ""
"In addition, if the :program:`mongod` receives a document to insert that "
"does not contain an ``_id`` field (e.g. through an update operation with an "
":ref:`upsert option <upsert-parameter>`) :program:`mongod` will add the "
"``_id`` field that holds an ObjectId."
msgstr ""

#: ../source/tutorial/insert-documents.txt:47
msgid "Atomicity"
msgstr ""

#: ../source/tutorial/insert-documents.txt:49
msgid ""
"All write operations in MongoDB are atomic on the level of a single "
"document. For more information on MongoDB and atomicity, see :doc:`/core"
"/write-operations-atomicity`"
msgstr ""

#: ../source/tutorial/insert-documents.txt:56
msgid "``db.collection.insertOne()``"
msgstr ""

#: ../source/tutorial/insert-documents.txt:60
msgid ""
":method:`db.collection.insertOne()` inserts a *single* :ref:`document <bson-"
"document-format>` into a collection."
msgstr ""

#: ../source/tutorial/insert-documents.txt:63
msgid ""
"The following example inserts a new document into the ``users`` collection. "
"The new document has three fields ``name``, ``age``, and ``status``. Since "
"the document does not specify an ``_id`` field, MongoDB adds the ``_id`` "
"field with an ObjectId value to the new document. See :ref:`write-op-insert-"
"behavior`."
msgstr ""

#: ../source/tutorial/insert-documents.txt:79
#: ../source/tutorial/insert-documents.txt:125
msgid "The method returns a document with the status of the operation:"
msgstr ""

#: ../source/tutorial/insert-documents.txt:88
msgid ""
"To verify the inserted document, :ref:`query the collection <document-query-"
"filter>` by specifying a query filter on the ``_id`` field:"
msgstr ""

#: ../source/tutorial/insert-documents.txt:96
msgid ""
"For more information and examples, see :method:`db.collection.insertOne()`."
msgstr ""

#: ../source/tutorial/insert-documents.txt:102
msgid "``db.collection.insertMany()``"
msgstr ""

#: ../source/tutorial/insert-documents.txt:106
msgid ""
":method:`db.collection.insertMany()` inserts *multiple* :ref:`documents "
"<bson-document-format>` into a collection."
msgstr ""

#: ../source/tutorial/insert-documents.txt:109
msgid ""
"The following example inserts three new documents into the ``users`` "
"collection. Each document has three fields ``name``, ``age``, and "
"``status``. Since the documents do not specify an ``_id`` field, MongoDB "
"adds the ``_id`` field with an ObjectId value to each document. See :ref"
":`write-op-insert-behavior`."
msgstr ""

#: ../source/tutorial/insert-documents.txt:138
msgid ""
"To verify the inserted document, :ref:`query the collection <read-"
"operations-query-document>` by specifying a query filter on the ``_id`` "
"field:"
msgstr ""

#: ../source/tutorial/insert-documents.txt:156
msgid ""
"For more information and examples, see :method:`db.collection.insertMany()`."
msgstr ""

#: ../source/tutorial/insert-documents.txt:162
msgid "``db.collection.insert()``"
msgstr ""

#: ../source/tutorial/insert-documents.txt:164
msgid ""
":method:`db.collection.insert()` inserts a single document or multiple "
"documents into a collection. To insert a single document, pass a document to"
" the method; to insert multiple documents, pass an array of documents to the"
" method."
msgstr ""


#: ../source/tutorial/insert-documents.txt:169
msgid ""
"The following example inserts a new document into the ``users`` collection. "
"The new document has three fields ``name``, ``age``, and ``status``. Since "
"the document does not specify an ``_id`` field, MongoDB adds the ``_id`` "
"field with an ObjectId value to the document. See :ref:`write-op-insert-"
"behavior`."
msgstr ""

#: ../source/tutorial/insert-documents.txt:185
msgid ""
"The operation returns a :method:`WriteResult` object with the status of the "
"operation. A successful insert of the document returns the following "
":method:`WriteResult` object:"
msgstr ""

#: ../source/tutorial/insert-documents.txt:193
msgid ""
"The :data:`~WriteResult.nInserted` field specifies the number of documents "
"inserted. If the operation encounters an error, the :method:`WriteResult` "
"object will contain the error information."
msgstr ""

#: ../source/tutorial/insert-documents.txt:197
msgid ""
"The following example inserts multiple documents into the ``users`` "
"collection. Since the documents do not specify an ``_id`` field, MongoDB "
"adds the ``_id`` field with an ObjectId value to each document. See :ref"
":`write-op-insert-behavior`."
msgstr ""

#: ../source/tutorial/insert-documents.txt:212
msgid ""
"The method returns a :method:`BulkWriteResult` object with the status of the"
" operation. A successful insert of the documents returns the following "
":method:`BulkWriteResult` object:"
msgstr ""

#: ../source/tutorial/insert-documents.txt:229
msgid ""
"For more information and examples, see :method:`db.collection.insert()`."
msgstr ""

#: ../source/tutorial/insert-documents.txt:232
msgid "Additional Methods"
msgstr ""

#: ../source/tutorial/insert-documents.txt:234
msgid "The following methods can also add new documents to a collection:"
msgstr ""

#: ../source/tutorial/insert-documents.txt:236
msgid ""
":method:`db.collection.update()` when used with the ``upsert: true`` option."
msgstr ""

#: ../source/tutorial/insert-documents.txt:239
msgid ""
":method:`db.collection.updateOne()` when used with the ``upsert: true`` "
"option."
msgstr ""

#: ../source/tutorial/insert-documents.txt:242
msgid ""
":method:`db.collection.updateMany()` when used with the ``upsert: true`` "
"option."
msgstr ""

#: ../source/tutorial/insert-documents.txt:245
msgid ""
":method:`db.collection.findAndModify()` when used with the ``upsert: true`` "
"option."
msgstr ""

#: ../source/tutorial/insert-documents.txt:248
msgid ""
":method:`db.collection.findOneAndUpdate()` when used with the ``upsert: "
"true`` option."
msgstr ""

#: ../source/tutorial/insert-documents.txt:251
msgid ""
":method:`db.collection.findOneAndReplace()` when used with the ``upsert: "
"true`` option."
msgstr ""

#: ../source/tutorial/insert-documents.txt:254
msgid ":method:`db.collection.save()`."
msgstr ""

#: ../source/tutorial/insert-documents.txt:256
msgid ":method:`db.collection.bulkWrite()`."
msgstr ""

#: ../source/tutorial/insert-documents.txt:258
msgid ""
"See the individual reference pages for the methods for more information and "
"examples."
msgstr ""


#: ../source/tutorial/insert-documents.txt:262
msgid "Write Acknowledgement"
msgstr ""

#: ../source/tutorial/insert-documents.txt:264
msgid ""
"With write concerns, you can specify the level of acknowledgement requested "
"from MongoDB for write operations. For details, see :doc:`/reference/write-"
"concern`."
msgstr ""

#~ msgid ""
#~ "In MongoDB, the :method:`db.collection.insert()` method adds new documents "
#~ "into a collection."
#~ msgstr ""

#~ msgid "Insert a Document"
#~ msgstr ""

#~ msgid "Insert an Array of Documents"
#~ msgstr ""

#~ msgid ""
#~ "You can pass an array of documents to the :method:`db.collection.insert()` "
#~ "method to insert multiple documents."
#~ msgstr ""

#~ msgid "Insert Multiple Documents with ``Bulk``"
#~ msgstr ""

#~ msgid ""
#~ "MongoDB provides a :method:`Bulk()` API that you can use to perform multiple"
#~ " write operations in bulk. The following sequence of operations describes "
#~ "how you would use the :method:`Bulk()` API to insert a group of documents "
#~ "into a MongoDB collection."
#~ msgstr ""

#~ msgid "Additional Examples and Methods"
#~ msgstr ""

#~ msgid "For more examples, see :method:`db.collection.insert()`."
#~ msgstr ""

#~ msgid ""
#~ "The :method:`db.collection.update()` method, the "
#~ ":method:`db.collection.findAndModify()`, and the "
#~ ":method:`db.collection.save()` method can also add new documents. See the "
#~ "individual reference pages for the methods for more information and "
#~ "examples."
#~ msgstr ""

