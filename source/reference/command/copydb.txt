======
copydb
======

.. default-domain:: mongodb

.. dbcommand:: copydb

   Copies a database from a remote
   host to the current host.

   :dbcommand:`copydb` has the following syntax:

   .. code-block:: javascript

      { copydb: 1,
        fromhost: <hostname>,
        fromdb: <db>,
        todb: <db>,
        slaveOk: <bool>,
        username: <username>,
        nonce: <nonce>,
        key: <key> }

   :dbcommand:`copydb` accepts the following options:

   .. include:: /reference/command/copydb-fields.rst

Behavior
--------

Be aware of the following properties of :dbcommand:`copydb`:
   
- :dbcommand:`copydb` is incompatible with deployments that use
  :setting:`auth` in combination with users who have privileges
  specified using the :doc:`role-based user documents
  </reference/user-privileges/>` introduced in 2.4.
  To use :dbcommand:`copydb` with access control enabled
  you must use the :doc:`legacy user privilege documents
  </reference/privilege-documents/>` from v2.2 and prior.

- :dbcommand:`copydb` can run against a :term:`secondary` or a
  non-:term:`primary` member of a :term:`replica set`. In this case,
  you must set the ``slaveOk`` option to ``true``.

- :dbcommand:`copydb` does not snapshot the database. If the state
  of the database changes at any point during the operation, the
  resulting database may be inconsistent.

- You must run :dbcommand:`copydb` on the **destination server**, i.e. the
  host receiving the copied data.

- The destination server is not locked for the duration of the
  :dbcommand:`copydb` operation. This means that
  :dbcommand:`copydb` will occasionally yield to allow other
  operations to complete.

- If the remote server has authentication enabled, then you must
  include a username, nonce, and a key. The nonce is a one-time
  password that you request from the remote server using the
  :dbcommand:`copydbgetnonce` command. The ``key`` is a hash
  generated as follows:

  .. code-block:: javascript

     hex_md5(nonce + username + hex_md5(username + ":mongo:" + pass))

  If you need to copy a database and authenticate, it's easiest to use the
  shell helper:

  .. code-block:: javascript

     db.copyDatabase(<remote_db_name>, <local_db_name>, <from_host_name>, <username>, <password>)
