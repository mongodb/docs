====
$pop
====

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. update:: $pop

   The :update:`$pop` operator removes the first or last element of an
   array. Pass :update:`$pop` a value of ``-1`` to remove the first
   element of an array and ``1`` to remove the last element in an
   array.

   The :update:`$pop` operator has the form:

   .. code-block:: javascript

      { $pop: { <field>: <-1 | 1>, ... } }

   .. include:: /includes/use-dot-notation.rst

Behavior
--------

.. include:: /includes/fact-update-operator-processing-order.rst

The :update:`$pop` operation fails if the ``<field>`` is not an array.

If the :update:`$pop` operator removes the last item in the
``<field>``, the ``<field>`` will then hold an empty array.

.. include:: /includes/extracts/update-operation-empty-operand-expressions-pop.rst

Examples
--------

Remove the First Item of an Array
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Create the ``students`` collection:

.. code-block:: javascript

   db.students.insertOne( { _id: 1, scores: [ 8, 9, 10 ] } )

The following example removes the *first* element, 8, from the
``scores`` array:

.. code-block:: javascript

   db.students.updateOne( { _id: 1 }, { $pop: { scores: -1 } } )

The first element, 8, has been removed from the ``scores`` array:

.. code-block:: javascript

   { _id: 1, scores: [ 9, 10 ] }

Remove the Last Item of an Array
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Add the following document to the ``students`` collection:

.. code-block:: javascript

   db.students.insertOne( { _id: 10, scores: [ 9, 10 ] } )

The following example removes the *last* element, 10, from the
``scores`` array by specifying ``1`` in the :update:`$pop` expression:

.. code-block:: javascript

   db.students.updateOne( { _id: 10 }, { $pop: { scores: 1 } } )

The last element, 10, has been removed from the ``scores`` array:

.. code-block:: javascript

   { _id: 10, scores: [ 9 ] }

.. seealso::

   - :method:`db.collection.updateMany()`
   - :method:`db.collection.findAndModify()`

