.. meta::
   :robots: noindex, nosnippet

.. _java-open-a-synced-realm:

===================================
Configure a Synced Realm - Java SDK
===================================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. include:: /includes/note-java-and-realmany.rst

Prerequisites
-------------

Before you can access a synced realm from the client, you must:

1. :ref:`Enable sync <enable-sync>` in the App Services UI.

#. :ref:`Initialize the app <java-quick-start-init-app>`

#. Enable Sync in your application by adding the following to the
   top level of your application-level :file:`build.gradle` file:

   .. code-block:: groovy

      realm { syncEnabled = true }

#. :ref:`Authenticate a user <java-quick-start-authenticate>` in
   your client project.

.. _java-synced-realms:

Synced Realms
-------------

Synced realms use :ref:`Atlas Device Sync <sync>` to store data both on the client device
and in your synced data source. Opening a synced realm works exactly
like opening a local realm, except you use ``SyncConfiguration``
to customize the settings for synced realms.

.. _java-synced-realm-configuration:
.. _java-flexible-sync-open-realm:

Synced Realm Configuration
~~~~~~~~~~~~~~~~~~~~~~~~~~

To configure settings for a realm, create a
:java-sdk:`SyncConfiguration <io/realm/mongodb/sync/SyncConfiguration.html>` with a
:java-sdk:`SyncConfiguration.Builder <io/realm/mongodb/sync/SyncConfiguration.Builder.html>`.

To open a synced realm, call 
:java-sdk:`getInstanceAsync()
<io/realm/Realm.html#getInstanceAsync-io.realm.RealmConfiguration-io.realm.Realm.Callback->`, 
passing in a :java-sdk:`SyncConfiguration <io/realm/mongodb/sync/SyncConfiguration.html>` 
object.

When your application uses Flexible Sync, call
the :java-sdk:`initialSubscriptions()
<io/realm/mongodb/sync/SyncConfiguration.Builder.html#initialSubscriptions(io.realm.mongodb.sync.SyncConfiguration.InitialFlexibleSyncSubscriptions)>`
sync configuration builder method
with an instance of
:java-sdk:`SyncConfiguration.InitialFlexibleSyncSubscriptions()
<io/realm/mongodb/sync/SyncConfiguration.InitialFlexibleSyncSubscriptions.html>`
to open a synced realm. In the ``configure()`` method, instantiate
an ``UnmanagedSubscription`` with a name and query using
:java-sdk:`Subscription.create()
<io/realm/mongodb/sync/Subscription.html#create(java.lang.String,io.realm.RealmQuery)>`.
Pass your new subscription
to the ``add()`` method of the :java-sdk:`MutableSubscriptionSet
<io/realm/mongodb/sync/MutableSubscriptionSet.html>`
parameter to add it to your subscriptions:

.. tabs-realm-languages::
   
   .. tab::
       :tabid: kotlin

       .. literalinclude:: /examples/generated/java/sync/FlexibleSyncTest.snippet.open-a-realm.kt
         :language: kotlin
         :copyable: false

   .. tab::
       :tabid: java

       .. literalinclude:: /examples/generated/java/sync/FlexibleSyncTest.snippet.open-a-realm.java
         :language: java
         :copyable: false

.. seealso::

   For more information about subscriptions, see
   :ref:`Subscribe to Queryable Fields <java-sync-subscribe-to-queryable-fields>`.

.. include:: /includes/java-synchronous-reads-writes-ui-thread-fs.rst

.. _java-open-a-synced-realm-while-offline:

Open a Synced Realm While Offline
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You can open a synced realm when offline with the exact same syntax
that you use to :ref:`open a synced realm while online
<java-open-a-synced-realm-while-online>`. Not all SDKs follow this
pattern, so cross-platform developers should consult the documentation
for each SDK to learn more.

.. _java-close-a-synced-realm:

Close a Realm
-------------

It is important to remember to call the :java-sdk:`close()
<io/realm/Realm.html#close-->` method when done with a 
realm instance to free resources. Neglecting to close realms can lead to an
``OutOfMemoryError``.

.. tabs-realm-languages::
   
   .. tab::
       :tabid: kotlin

       .. literalinclude:: /examples/generated/java/local/OpenARealmTest.snippet.close-a-realm-local.kt
         :language: kotlin
         :copyable: false

   .. tab::
       :tabid: java

       .. literalinclude:: /examples/generated/java/local/OpenARealmTest.snippet.close-a-realm-local.java
         :language: java
         :copyable: false
