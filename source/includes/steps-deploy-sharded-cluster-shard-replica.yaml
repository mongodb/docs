level: 4
stepnum: 1
source:
  file: steps-deploy-replica-set-with-auth.yaml
  ref: deploy-repset-start-members
pre: |
  Running a :program:`mongod` with the ``keyFile`` parameter enforces both 
  :doc:`/core/security-internal-authentication` and 
  :doc:`/core/authorization`.

  Start *each* :program:`mongod` in the replica set using either 
  a configuration file or the command line.
action:
  - pre: |
      **Configuration File**
      
      If using a configuration file, set the :setting:`security.keyFile` option
      to the keyfile's path, the :setting:`replication.replSetName` to the 
      desired name of the replica set, and the :setting:`sharding.clusterRole` 
      option to ``shardsvr``. Start the component, as in the following
      example:
    language: yaml
    code: |
      security:
        keyFile: <path-to-keyfile>
      sharding:
        clusterRole: shardsvr
      replication:
        replSetName: <replSetName>
    post: |
       See :doc:`/reference/configuration-options` for information on 
       using a configuration file.
  - pre: |
      **Command Line**
      
      If using the command line option, when starting the component, specify 
      the ``--keyFile``, ``replSet``, and ``--shardsvr`` parameters, as in the
      following example:
    language: sh
    code: |
       mongod --keyFile <path-to-keyfile> --shardsvr --replSet <replSetname>
    post: |
       Include any other options as appropriate for your deployment.
---
stepnum: 2
level: 4
source:
  file: steps-deploy-replica-set-with-auth.yaml
  ref: deploy-repset-connect-to-member
pre: |
  The :ref:`localhost-exception` allows clients connected over the 
  localhost interface to create users on a :program:`mongod` 
  enforcing access control. After creating the first user, 
  the :ref:`localhost-exception` closes.

  Connect a :program:`mongo` shell to one of the replica set member 
  :program:`mongod` instances over the 
  :ref:`localhost interface<localhost-exception>`. You 
  must run the :program:`mongo` shell on the same physical machine as the 
  target :program:`mongod`.
---
stepnum: 3
level: 4
source:
  file: steps-deploy-replica-set-with-auth.yaml
  ref: deploy-repset-initiate
pre: |
  The :method:`rs.initiate()` method initiates the replica set, and 
  can take an optional configuration document that describes 
  each member of the replica set.
  
  The configuration document requires at minimum the 
  :rsconf:`_id` and :rsconf:`members` fields. The :rsconf:`members` 
  field is an array, and requires a document per member of the replica 
  set containing the :rsconf:`members[n]._id` and 
  :rsconf:`members[n].host` fields. 
  
  The :rsconf:`_id` *must* match the ``--replSet`` parameter 
  passed to the :program:`mongod`.
  
  See :doc:`/reference/replica-configuration` for more information on 
  replica set configuration documents.
action:
  - pre: |
      The following example initates a three member replica set. 
  - pre: |
    language: javascript
    code: |
      rs.initiate( 
        {
          _id : <replicaSetName>,
          members: [
            { _id : 0, host : "s1-mongo1.example.net:27017" },
            { _id : 1, host : "s1-mongo2.example.net:27017" },
            { _id : 2, host : "s1-mongo3.example.net:27017" }
          ]
        }
      )
---
title: Create the shard-local user administrator (optional).
stepnum: 4
level: 4
source:
  file: steps-deploy-replica-set-with-auth.yaml
  ref: deploy-repset-user-admin
---
title: Authenticate as the shard-local user administrator (optional).
stepnum: 5
level: 4
source:
  file: steps-deploy-replica-set-with-auth.yaml
  ref: deploy-repset-auth-user
---
title: Create the shard-local cluster administrator (optional).
stepnum: 6
level: 4
source:
  file: steps-deploy-replica-set-with-auth.yaml
  ref: deploy-repset-add-user-cluster
pre: |
  The cluster administrator user has priviledges that allow access to 
  replication operations.
  
  This step uses the :authrole:`clusterAdmin` role. For a full list of 
  roles related to replica set operations see 
  :ref:`cluster-admin-roles`.
...