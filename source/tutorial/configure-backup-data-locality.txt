=======================================================
Configure Multiple Blockstores in Multiple Data Centers
=======================================================

.. default-domain:: mongodb

Overview
--------

The :ref:`Backup Blockstore databases <mms-backup-blockstore-database>`
are the primary storage systems for the backup data of your MongoDB
deployments. You can :ref:`add new blockstores <add-blockstore>` to your
data center if existing ones have reached capacity.

If needed, you can also deploy blockstores in multiple data centers and
assign backups of particular MongoDB deployments to particular data
centers, as described on this page. You assign backups to data centers by
attaching specific |onprem| groups to specific blockstores.

Deploy blockstores to multiple data centers when:

- Two sets of backed up data cannot have co-located storage for
  regulatory reasons.

- You have multiple data centers and want to reduce cross-data center
  network traffic by keeping each blockstore in the data center it
  backs.

This tutorial sets up two blockstores in two separate data centers and
attaches a separate group to each.

Required Components
-------------------

Each data center hosts a :ref:`Backup Blockstore database
<mms-backup-blockstore-database>` and requires its own:

- :ref:`application`

- :ref:`backup-daemon`

- :doc:`Backup Agent </tutorial/nav/install-backup-agent>`

The two |application| instances must share a single dedicated
:ref:`mms-application-database`. If you run the |application| database as
a replica set, you can put members in each data center.

You must configure each Backup Agent to use the URL for its local
|application|. You can configure each |application| to use a different
hostname, or you can use split-horizon DNS to point each agent to its
local |application|.

The |application| database and the Backup Blockstore databases are MongoDB
databases and can run as :term:`standalones <standalone>` or
:term:`replica sets <replica set>`. Replica sets are recommended to
provide database :manual:`high availability
</core/replica-set-high-availability>`.

Procedures
----------

Provision Servers in Each Data Center
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Each server must meet the cumulative hardware and software requirements
for the components it runs. See :doc:`/core/requirements`.

Servers that run the Backup Damon, |application| database, and the Backup
Blockstore databases all run MongoDB. They must meet the configuration
requirements in the :manual:`MongoDB Production Notes
</administration/production-notes>`.

Install MongoDB
~~~~~~~~~~~~~~~

Install MongoDB on the servers that host the:

- Backup Daemon
- |application| database
- Backup Blockstore databases

See :manual:`Install MongoDB </installation>` in the MongoDB manual to
find the correct install procedure for your operating system. To run
replica sets for the |application| database and Backup Blockstore
databases, see :manual:`Deploy a Replica Set
</tutorial/deploy-replica-set>` in the MongoDB manual.

Install the |application|
~~~~~~~~~~~~~~~~~~~~~~~~~

Install the |application| in each data center but **do not** perform the
step to *start* the service. See :doc:`/tutorial/nav/advanced-deployments`
to find the procedure for your operating system.

.. begin 1.8 only

In the step for configuring the ``conf-mms.properties`` file, set the same
|application| URL in both data centers. For example, in both data centers,
set :setting:`mms.centralUrl` to point to the server in Data Center 1:

.. code-block:: sh

   mms.centralUrl = <application-server-in-data-center-1>:<8080>

.. end 1.8 only

.. begin 1.6 only

   In the step for configuring the ``conf-mms.properties`` file, set the same
   |application| URL in both data centers. For example, in both data centers,
   set :setting:`mms.centralUrl` and :setting:`mms.centralBackupUrl` to point
   to the server in Data Center 1:

   .. code-block:: sh

      mms.centralUrl = <application-server-in-data-center-1>:<8080>

      mms.centralBackupUrl = <application-server-in-data-center-1>:<8081>

.. end 1.6 only

Start the |application|
~~~~~~~~~~~~~~~~~~~~~~~

The |application| creates a gen.key on initial startup. You must start the
|application| in one data center and copy its gen.key **before** starting
the other |application|. The ``gen.key`` file in the first data center
will be the ``gen.key`` for **all** servers in both data centers.

The ``gen.key`` file is binary. You cannot copy the contents; you must
copy the file. For example, use SCP.

.. include:: /includes/steps/configure-backup-data-locality-start-application.rst

Install the Backup Daemon
~~~~~~~~~~~~~~~~~~~~~~~~~

Install and start the Backup Daemon in each data center. See
:doc:`/tutorial/nav/advanced-deployments` and click the link for your
operating system. On the resulting installation page, locate the procedure
for installing the Backup Daemon.

Bind Groups to Backup Resources
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/steps/configure-backup-data-locality-bind-groups.rst
