title: Connect to ``mongos``.
ref: connect-mongos
content: |
   Connect a :binary:`~bin.mongo` shell to a :binary:`~bin.mongos`.
level: 4
---
title: Find the ``jumbo`` Chunk.
ref: find-jumbo
level: 4
pre: |
   Run :method:`sh.status(true) <sh.status>` to find the chunk labeled
   ``jumbo``.
action:
   - pre: ""
     language: javascript
     code: |
      sh.status(true)
   - pre: |
      For example, the following output from sh.status(true) shows that
      chunk with shard key range ``{ "x" : 2 } -->> { "x" : 4 }`` is
      ``jumbo``.
     language: none
     code: |
       --- Sharding Status ---
         sharding version: {
            ...
         }
         shards:
            ...
         databases:
            ...
               test.foo
                  shard key: { "x" : 1 }
               chunks:
                    shard-b  2
                    shard-a  2
               { "x" : { "$minKey" : 1 } } -->> { "x" : 1 } on : shard-b Timestamp(2, 0) 
               { "x" : 1 } -->> { "x" : 2 } on : shard-a Timestamp(3, 1) 
               { "x" : 2 } -->> { "x" : 4 } on : shard-a Timestamp(2, 2) jumbo 
               { "x" : 4 } -->> { "x" : { "$maxKey" : 1 } } on : shard-b Timestamp(3, 0)
---
title: Split the ``jumbo`` Chunk.
level: 4
ref: split-jumbo
pre: |
   Use either :method:`sh.splitAt()` or :method:`sh.splitFind()` to
   split the ``jumbo`` chunk.
action:
   language: javascript
   code: |
     sh.splitAt( "test.foo", { x: 3 })
post: |
   MongoDB removes the ``jumbo`` flag upon successful split of the
   chunk.
...