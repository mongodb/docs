# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: 2013-12-16 23:52+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# 50ec7c64d2d64d44b2834693eb7064ff
#: ../source/core/distributed-write-operations.txt:3
msgid "Distributed Write Operations"
msgstr ""

# 310693dc7b944c10a6c9a62984502c6d
#: ../source/core/distributed-write-operations.txt
msgid "On this page"
msgstr ""

# 5f72ed544ea6488cb389a61f73c15ca3
#: ../source/core/distributed-write-operations.txt:16
msgid "Write Operations on Sharded Clusters"
msgstr ""

# 48fdf5d81822466386b0bdf6c0b82060
#: ../source/core/distributed-write-operations.txt:18
msgid ""
"For sharded collections in a :term:`sharded cluster`, the "
":program:`mongos` directs write operations from applications to the "
"shards that are responsible for the specific *portion* of the data set. "
"The :program:`mongos` uses the cluster metadata from the :ref:`config "
"database <sharding-config-server>` to route the write operation to the "
"appropriate shards."
msgstr ""

# 7a29af54dd0f4122832a636f48f86d1d
#: ../source/core/distributed-write-operations.txt:27
msgid ""
"MongoDB partitions data in a sharded collection into *ranges* based on "
"the values of the :term:`shard key`. Then, MongoDB distributes these "
"chunks to shards. The shard key determines the distribution of chunks to "
"shards. This can affect the performance of write operations in the "
"cluster."
msgstr ""

# 146ba84003dd4cfcac4b098e5ff4efe3
#: ../source/core/distributed-write-operations.txt:35
msgid ""
"Update operations that affect a *single* document **must** include the "
":term:`shard key` or the ``_id`` field. Updates that affect multiple "
"documents are more efficient in some situations if they have the "
":term:`shard key`, but can be broadcast to all shards."
msgstr ""

# 5bca07fd305d4e2da309421658bb334d
#: ../source/core/distributed-write-operations.txt:41
msgid ""
"If the value of the shard key increases or decreases with every insert, "
"all insert operations target a single shard. As a result, the capacity of"
" a single shard becomes the limit for the insert capacity of the sharded "
"cluster."
msgstr ""

# 41db825eaf5046a786a75f6bc1f286a5
#: ../source/core/distributed-write-operations.txt:46
msgid ""
"For more information, see :doc:`/sharding` and :doc:`/core/bulk-write-"
"operations`."
msgstr ""

# 7824610541bf4fb9abff8fb31b118a39
#: ../source/core/distributed-write-operations.txt:52
msgid "Write Operations on Replica Sets"
msgstr ""

# 2ad58a23216f44528d48cc2e267b845a
#: ../source/core/distributed-write-operations.txt:54
msgid ""
"In :term:`replica sets <replica set>`, all write operations go to the "
"set's :term:`primary`. The primary applies the write operation and "
"records the operations on the primary's operation log or :term:`oplog`. "
"The oplog is a reproducible sequence of operations to the data set. "
":term:`Secondary` members of the set continuously replicate the oplog and"
" apply the operations to themselves in an asynchronous process."
msgstr ""

# 3b9b16e6a3dc44e89a9590e73f273ac5
#: ../source/core/distributed-write-operations.txt:63
msgid ""
"For more information on replica sets and write operations, see "
":doc:`/replication` and :doc:`/reference/write-concern`."
msgstr ""

#~ msgid ""
#~ "Calling :dbcommand:`getLastError` intermittently "
#~ "with a ``w`` value of ``2`` or "
#~ "``majority`` will slow the throughput of"
#~ " write traffic; however, this practice "
#~ "will allow the secondaries to remain "
#~ "current with the state of the "
#~ "primary."
#~ msgstr ""

#~ msgid ""
#~ "In :doc:`Master/Slave </core/master-slave>` "
#~ "deployments, :dbcommand:`getLastError` treats "
#~ "``w:majority`` as equivalent to ``w:1``. "
#~ "In earlier versions of MongoDB, "
#~ "``w:majority`` produces an error in "
#~ ":doc:`master/slave </core/master-slave>` "
#~ "deployments."
#~ msgstr ""

# eda1cb80c58c4ac0b105937e56b3c6df
#~ msgid ""
#~ "For more information, see "
#~ ":doc:`/administration/sharded-clusters` and :ref"
#~ ":`write-operations-bulk-insert`."
#~ msgstr ""

# ac641f20480e42d7a114b217815d9b11
#~ msgid ""
#~ "In :term:`replica sets <replica set>`, "
#~ "all write operations go to the "
#~ "set's :term:`primary`, which applies the "
#~ "write operation then records the "
#~ "operations on the primary's operation "
#~ "log or :term:`oplog`. The oplog is "
#~ "a reproducible sequence of operations to"
#~ " the data set. :term:`Secondary` members"
#~ " of the set are continuously "
#~ "replicating the oplog and applying the"
#~ " operations to themselves in an "
#~ "asynchronous process."
#~ msgstr ""

# 9f3437360fff4fcebd477eabc98e7482
#~ msgid ""
#~ "Large volumes of write operations, "
#~ "particularly bulk operations, may create "
#~ "situations where the secondary members "
#~ "have difficulty applying the replicating "
#~ "operations from the primary at a "
#~ "sufficient rate: this can cause the "
#~ "secondary's state to fall behind that"
#~ " of the primary. Secondaries that are"
#~ " significantly behind the primary present"
#~ " problems for normal operation of the"
#~ " replica set, particularly :ref:`failover "
#~ "<replica-set-failover-administration>` in "
#~ "the form of :ref:`rollbacks <replica-"
#~ "set-rollback>` as well as general "
#~ ":doc:`read consistency </applications/replication>`."
#~ msgstr ""

# 014989d4aec34ed5a129424c88099de6
#~ msgid ""
#~ "To help avoid this issue, you can"
#~ " customize the :ref:`write concern "
#~ "<write-operations-write-concern>` to return"
#~ " confirmation of the write operation "
#~ "to another member [#write-concern-"
#~ "throttling]_ of the replica set every"
#~ " 100 or 1,000 operations. This "
#~ "provides an opportunity for secondaries "
#~ "to catch up with the primary. "
#~ "Write concern can slow the overall "
#~ "progress of write operations but ensure"
#~ " that the secondaries can maintain a"
#~ " largely current state with respect "
#~ "to the primary."
#~ msgstr ""

# ef9886f05e0349528057f86ef3adf693
#~ msgid ""
#~ "For more information on replica sets "
#~ "and write operations, see :ref:`replica-"
#~ "set-write-concern`, :ref:`replica-set-"
#~ "oplog-sizing`, and :doc:`/tutorial/change-"
#~ "oplog-size`."
#~ msgstr ""

#~ msgid ""
#~ "Intermittently issuing a write concern "
#~ "with a ``w`` value of ``2`` or "
#~ "``majority`` will slow the throughput of"
#~ " write traffic; however, this practice "
#~ "will allow the secondaries to remain "
#~ "current with the state of the "
#~ "primary."
#~ msgstr ""

#~ msgid ""
#~ "In :doc:`Master/Slave </core/master-slave>` "
#~ "deployments, MongoDB treats ``w: "
#~ "\"majority\"`` as equivalent to ``w: "
#~ "1``. In earlier versions of MongoDB, "
#~ "``w: \"majority\"`` produces an error in"
#~ " :doc:`master/slave </core/master-slave>` "
#~ "deployments."
#~ msgstr ""

