=============================
db.revokePrivilegesFromRole()
=============================

.. default-domain:: mongodb

Definition
----------

.. method:: db.revokePrivilegesFromRole ( rolename, privileges, writeConcern )

   Removes the specified privileges from the :ref:`user-defined
   <user-defined-roles>` role on the database where the method runs. The
   :method:`revokePrivilegesFromRole` method has the following syntax:

   .. code-block:: javascript

      db.revokePrivilegesFromRole(
          "<rolename>",
          [
              { resource: { <resource> }, actions: [ "<action>", ... ] },
              ...
          ],
          { <writeConcern> }
      )

   The :method:`revokePrivilegesFromRole` method takes the following arguments:

   .. include:: /reference/method/db.revokePrivilegesFromRole-param.rst

   The :method:`db.revokePrivilegesFromRole()` method wraps the
   :dbcommand:`revokePrivilegesFromRole` command.

Behavior
--------

To revoke a privilege, you must match the :doc:`resource document
</reference/resource-document>` pattern exactly: the ``resource`` and
``actions`` fields must exactly match an existing privilege. The
:method:`db.revokePrivilegesFromRole()` method *cannot* remove part of a
privilege, such as a subset of the ``ressource`` document or ``actions``
array. The method only removes the whole privilege.

For example, given the role ``accountRole`` with the following privilege:

.. code-block:: javascript

    {
        "resource" : {
            "db" : "products",
            "collection" : ""
        },
        "actions" : [
            "find",
            "update",
        ]
    }

You *cannot* revoke ``find`` and ``update`` from just *one* collection
instead of the whole ``products`` database, and you cannot revoke only the
``find`` action and leave the ``update`` action. To revoke one resource or
action, you must revoke the whole privilege:

.. code-block:: javascript

   db.revokePrivilegesFromRole(
       {
         "myRole",
         privileges:
           [
             {
               resource : {
                   db : "products",
                   collection : ""
               },
               actions : [
                   "find",
                   "update",
               ]
             }
           ]
       }
   )

Required Access
---------------

.. include:: /includes/access-revoke-privileges.rst

Example
-------

The following operation removes a privilege from the ``associates`` role.
The operation removes the privilege that grants the ``createCollection``,
``createIndex``, and ``find`` :ref:`actions <security-user-actions>` on both
the ``products`` and ``categories`` databases:

.. code-block:: javascript

   db.revokePrivilegesFromRole(
      {
        "associate",
        privileges:
         [
           {
             resource: { db: "products", collection: "" },
             actions: [ "createCollection", "createIndex", "find" ]
           },
           {
             resource: { db: "categories", collection: "" },
             actions: [ "createCollection", "createIndex", "find" ]
           }
         ],
        writeConcern: { w: "majority" }
      }
   )
