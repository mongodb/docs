# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/query/not.txt:3
# 313f6bbd955c410c96a37620130d5139
msgid "$not"
msgstr ""

#: ../source/reference/operator/query/not.txt:9
# 17c5005983af4eab96d07a82f7a5a9bb
msgid "*Syntax*: ``{ field: { $not: { <operator-expression> } } }``"
msgstr ""

#: ../source/reference/operator/query/not.txt:11
# 16957e466c924bfd91ad6b4921b6ae25
msgid ":query:`$not` performs a logical ``NOT`` operation on the specified ``<operator-expression>`` and selects the documents that do *not* match the ``<operator-expression>``. This includes documents that do not contain the ``field``."
msgstr ""

#: ../source/reference/operator/query/not.txt:16
# 6f7d3767c51e4be09b74338ebecde39c
msgid "Consider the following query:"
msgstr ""

#: ../source/reference/operator/query/not.txt:22
# 50b8b7406d3047c08e7ec059504442e0
msgid "This query will select all documents in the ``inventory`` collection where:"
msgstr ""

#: ../source/reference/operator/query/not.txt:24
# 6db8646ee441477dbf2f445d16193313
msgid "the ``price`` field value is less than or equal to ``1.99`` **or**"
msgstr ""

#: ../source/reference/operator/query/not.txt:25
# cb1b7aeb8d814669a352462ff14ceed0
msgid "the ``price`` field does not exist"
msgstr ""

#: ../source/reference/operator/query/not.txt:27
# 496ec0d8ab194c0f91e5c9af6cbd301f
msgid "``{ $not: { $gt: 1.99 } }`` is different from the :query:`$lte` operator. ``{ $lte: 1.99 }`` returns *only* the documents where ``price`` field exists and its value is less than or equal to ``1.99``."
msgstr ""

#: ../source/reference/operator/query/not.txt:32
# e9b96555f87a4c28a1ffa8950256a4eb
msgid "Remember that the :query:`$not` operator only affects *other operators* and cannot check fields and documents independently. So, use the :query:`$not` operator for logical disjunctions and the :query:`$ne` operator to test the contents of fields directly."
msgstr ""

#: ../source/reference/operator/query/not.txt:37
# 1bec5d2e84eb4ed29807ec4e9a633d34
msgid "Consider the following behaviors when using the :query:`$not` operator:"
msgstr ""

#: ../source/reference/operator/query/not.txt:40
# 0403abfb026b44ee855f99f5ffcb014b
msgid "The operation of the :query:`$not` operator is consistent with the behavior of other operators but may yield unexpected results with some data types like arrays."
msgstr ""

#: ../source/reference/operator/query/not.txt:44
# 32e006f49b6747e99530d67010cf55e3
msgid "The :query:`$not` operator does **not** support operations with the :query:`$regex` operator. Instead use ``//`` or in your driver interfaces, use your language's regular expression capability to create regular expression objects."
msgstr ""

#: ../source/reference/operator/query/not.txt:49
# 75f90d514caa4dfa97a45555c32e3d32
msgid "Consider the following example which uses the pattern match expression ``//``:"
msgstr ""

#: ../source/reference/operator/query/not.txt:55
# cd7dcf0a42b64d6cbf3989ccb9b10a92
msgid "The query will select all documents in the ``inventory`` collection where the ``item`` field value does *not* start with the letter ``p``."
msgstr ""

#: ../source/reference/operator/query/not.txt:59
# 699c1aa917fb424d860f63747b464b13
msgid "If you are using Python, you can write the above query with the PyMongo driver and Python's :py:meth:`python:re.compile()` method to compile a regular expression, as follows:"
msgstr ""

#: ../source/reference/operator/query/not.txt:71
# 40af6d174fef485b8616d3d9ce745503
msgid ":method:`~db.collection.find()`, :method:`~db.collection.update()`, :update:`$set`, :query:`$gt`, :query:`$regex`, :api:`PyMongo <python\\current>`, :term:`driver`."
msgstr ""

