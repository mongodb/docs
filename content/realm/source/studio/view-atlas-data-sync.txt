.. _realm-studio-sync:

================================
View Atlas Data with Device Sync
================================

.. facet::
  :name: genre
  :values: tutorial

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

You can use Realm Studio to connect to MongoDB Atlas using Device Sync.
Realm Studio functions as a sync client, similar to an application that 
uses Device Sync. You can:

- Add and remove subscriptions on the focused object schema.
- Interact with Atlas data directly from Realm Studio.

Use Realm Studio to see changes to data that you make when running an
app in development, or experiment with permissions and subscription changes.

Prerequisites
-------------

Minimum Realm Studio version: 14.1.2.

Because Device Sync connects Realm Studio to the App Services backend 
through an Atlas App Services App, you need to following before you 
can get started:

#. An Atlas App Services App with authentication enabled. To learn how, 
   refer to :ref:`<create-a-realm-app>` in the App Services documentation.
#. The App Services App ID. To learn how to find the App ID, refer to 
   :ref:`find-your-app-id`.

Realm Studio can connect via Device Sync using any of these authentication
provider types:

- Anonymous
- Email & Password
- API Key
- JWT

If your App uses Email & Password, API Key, or JWT authentication, you must 
create a credential of the appropriate type to use when you connect from 
Realm Studio. For more information about creating credentials, refer to 
the App Services documentation:

- :ref:`create-email-password-user`
- :ref:`api-key-authentication`
- :ref:`custom-jwt-authentication`

Connect to Atlas from Realm Studio
----------------------------------

.. procedure:: 

   .. step:: Select Connect via Atlas Device Sync
      
      Open Realm Studio, and click :guilabel:`Connect via Atlas Device Sync`.

   .. step:: Provide the requested metadata

      #. Provide the App ID.
      #. If your App Services App uses a custom URL, specify the URL.
      #. Select the form of authentication your app uses. If you select
         a form of authentication that requires credentials, provide the 
         credentials.

   .. step:: Connect

      Click :guilabel:`Connect`.

      After you have successfully connected, Realm Studio shows the App ID
      in the menu bar of the application window. You can open connections to 
      multiple App Services Apps simultaneously. You can also open multiple
      connections to the same App Services App if you want to view changes
      in real time.

Specify the Data to Sync
------------------------

After you connect to Atlas, Realm Studio displays a list of 
object types matching the schemas for your App Services App. 

For more information about App Services schemas, refer to :ref:`schemas` 
in the App Services documentation.

Realm Studio maps these schemas to Realm objects. For information about 
how these schemas map to Realm objects using Device Sync, refer to 
:ref:`sync-data-model-mapping` in the App Services documentation.

You can't see any data for the object types until you add subscriptions
for each object type. The subscriptions, plus the permissions that you've 
defined for your app, determine what data syncs. 

To begin viewing data for a specific object type, add a subscription. To
change the data you see, you can either:

- Add more subscriptions to apply additional filtering.
- Remove a subscription.

You cannot change a subscription that you have added to Realm Studio. To 
change the subscription, remove it and add a new subscription.

Add a Subscription
~~~~~~~~~~~~~~~~~~

.. procedure:: Add a subscription

   .. step:: Select an object type

      If you have schemas for multiple object types in your App Services App,
      you see them as a list of object type names in the left pane of the 
      Realm Studio window.

      Click an object type name to select that object type.

   .. step:: Open the Add subscription modal

      When you have selected an object type, a :guilabel:`Subscriptions`
      label with a :guilabel:`+` button displays at the bottom of the left
      pane of the Realm Studio window.

      Click :guilabel:`+` next to the label to open the 
      ``Add subscription on Object`` modal.

   .. step:: Provide a query

      Use Realm Query Language (RQL) to create a query for the objects you want 
      to sync with Realm Studio. Only the objects that match your query will
      appear in Realm Studio. You can use this as a way to quickly validate
      queries when developing your application.
      
      Your subscription query must include at least one queryable field. 
      For more information about queryable fields, refer to 
      :ref:`queryable-fields` in the App Services documentation.

      For information about available query operators, refer to the 
      :ref:`Realm Query Language <realm-query-language>` reference. 
      
      Device Sync supports using a subset of RQL operators in Sync subscription
      queries. For information on these limitations, refer to 
      :ref:`flexible-sync-rql-limitations`.

      .. example::

         If you :ref:`bootstrap Device Sync with a Template App 
         <app-services-get-started-template-apps>`, the subscription
         that the template apps use is:

         .. code-block:: javascript
            
            `owner_id == "${user?.id}"`
        
         To view the applicable data in Realm Studio, use this query with a
         specific user's ID:

         .. code-block:: javascript

            owner_id == "67ee25f483c29fa14cfd7295"

         To view all data where the credentials you provided to Realm Studio
         have the appropriate permissions, use the query:

         .. code-block:: javascript

            TRUEPREDICATE

   .. step:: Add the subscription

      Click :guilabel:`Add subscription` to complete the process of adding 
      a subscription. This triggers an initial sync with Device Sync
      for:

      - Items of the selected object type.
      - Which match the subscription query you provide.
      - Where the credentials you used to log into Realm Studio have 
        permissions to view the item.

      After a moment, you see the number of objects change from 0 to reflect
      the number of objects that meet this criteria.

   .. step:: Add subscriptions to more objects as needed

      Your App Services App may have schemas for multiple object types. You
      must individually add subscriptions for each object type you want to view
      in Realm Studio.

      If your objects include links to other objects, as in to-one or to-many 
      relationships, the linked objects do not appear in Realm Studio until
      you have added the appropriate subscription on the linked object types.

Remove a Subscription
~~~~~~~~~~~~~~~~~~~~~

.. procedure:: Remove a subscription

   .. step:: Select an object type

      Click an object type name in the left pane of the Realm Studio window 
      to select that object type.

   .. step:: Remove the subscription

      Click the :icon-fa5:`trash can icon <trash-alt>` to remove a subscription.
      If you do not see the icon, drag to widen the left pane. Long
      subscriptions can push the icon out of the viewable area.

      The data matching the subscription disappears from Realm Studio after
      you remove the subscription.

View Synced Changes in Real Time
--------------------------------

Once you have added a subscription, if your credentials permit it based on
your App's rules, you can create, update, and delete objects. When you 
make changes to objects while connected with Device Sync, those changes 
automatically sync with Atlas and with other devices. You can see your 
changes reflected in real time.

For information about how to create, modify, and delete objects in Realm Studio, 
refer to :ref:`realm-studio-modify-objects`. You don't need to do anything
to save changes that you make while connected with Device Sync. Those 
changes automatically sync with the server and persist in Atlas.

If you attempt to modify or add an object that does not match your 
subscriptions or where you do not have write permissions, Device Sync reacts 
with a compensating write error. Realm Studio reverts those changes, and 
they do not sync with Atlas or other devices. For more information, refer 
to ``ErrorCompensatingWrite`` in the :ref:`flexible-sync-errors` section 
of the App Services Documentation. 
