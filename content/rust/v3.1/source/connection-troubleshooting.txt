.. _rust-connection-troubleshooting:

==========================
Connection Troubleshooting
==========================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: code example, disconnected, deployment

.. sharedinclude:: dbx/connection-troubleshooting.rst

   .. replacement:: non-connection-issue-callout

      .. note::

         This page only addresses connection issues. If you encounter any other issues
         with MongoDB or the driver, visit the following resources:

         - :ref:`rust-operation-errors` for recommendations on how to handle
           different error types that the driver raises during operations
         - :ref:`Issues & Help <rust-issues-and-help>` page for
           information about reporting bugs, contributing to the driver, and
           finding more resources
         - `MongoDB Community Forums <https://community.mongodb.com>`__ for
           questions, discussions, or general technical support
         - The :ref:`Frequently Asked Questions (FAQ) <rust-faq>` section for
           common questions and corresponding answers about the
           {+driver-short+}

   .. replacement:: server-selection-timeout-error

      .. code-block:: none
         :copyable: false

         Error: Error { kind: ServerSelection { message: "Server selection timeout:
         No available servers. Topology: { Type: Unknown, Servers: [ { Address:
         127.0.0.1:27017, Type: Unknown, Error: Kind: I/O error: Connection refused
         (os error 61), labels: {} } ] }" }, labels: {}, wire_version: None, source:
         None }

   .. replacement:: check-connection-string-anchor

      .. _rust-troubleshooting-connection-string-port:

   .. replacement:: multiple-hosts-connection-guide-link

      To learn more about specifying multiple hosts in a replica set, see the
      :ref:`Connect to a Replica Set <rust-connect-replica-set>` section of the
      Connection Guide.

   .. replacement:: configure-firewall-anchor

      .. _rust-troubleshooting-connection-firewall:

   .. replacement:: check-the-number-of-connections-anchor

      .. _rust-troubleshooting-connection-number-connections:

   .. replacement:: mongo-client-class

      ``Client``

   .. replacement:: max-pool-size-param

      ``maxPoolSize``

   .. replacement:: max-pool-size-default

      ``100``

   .. replacement:: max-idle-time-param

      ``maxIdleTimeMS``

   .. replacement:: connection-pools-learn-more

      To learn more about how connection pools work in the driver, see
      :ref:`How Does Connection Pooling Work in the Rust Driver?  <rust-faq-connection-pool>`
      on the FAQ page.

   .. replacement:: authentication-error-anchor

      .. _rust-troubleshooting-auth-error:

   .. replacement:: scram-failure-error

      .. code-block:: none
         :copyable: false

         Error: Error { kind: Authentication { message: "SCRAM failure: bad auth :
         authentication failed" }, labels: {}, wire_version: None, source: Some(Error
         { kind: Command(CommandError { code: 8000, code_name: "AtlasError", message:
         "bad auth : authentication failed", topology_version: None }),
         labels: {}, wire_version: None, source: None }) }

   .. replacement:: check-credentials-formatting-anchor

      .. _rust-troubleshooting-connection-string-auth:

   .. replacement:: learn-more-connection-string-admonition

      .. tip::

         For more information about connection strings,
         see the :ref:`rust-quick-start-connection-string` guide.

   .. replacement:: percent-encode-example

   .. replacement:: verify-authentication-mechanism-anchor

      .. _rust-troubleshooting-connection-auth-mechanism:

   .. replacement:: credentials-provider-alternative-method-description

      Alternatively, you can specify your authentication credentials in a
      ``Credential`` struct.

   .. replacement:: authentication-guide-reference

      To learn more about authentication, see the :ref:`rust-authentication` guide.

   .. replacement:: verify-authentication-database-anchor

      .. _rust-troubleshooting-connection-admin:

   .. replacement:: authsource-param-code-block

      .. code-block:: rust
         :copyable: true

         let uri = "mongodb://<username>:<password>@<hostname>:<port>/?authSource=users";
         let client = Client::with_uri_str(uri).await?;

   .. replacement:: dns-resolution-anchor

      .. _rust-troubleshooting-connection-dns-resolution:

   .. replacement:: dns-error-message

      .. code-block:: none
         :copyable: false

         Error: Error { kind: DnsResolve { message: "sample message. type:
         SRV class: IN" }, labels: {}, wire_version: None, source: None }
