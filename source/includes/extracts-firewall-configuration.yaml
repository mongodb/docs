ref: firewall-configuration
edition:
  - cloud
content: |

  |mms| requires access on the following ports and
  |ipaddr| addresses.

  Required Outbound Access
  ------------------------

  The {+mdbagent+}s connect to |mms| on port ``443``. Whether you
  provision your hosts on a cloud service provider or on your own
  network, configure your network infrastructure to allow outbound
  connections on port ``443``.

  If you wish to restrict outbound access on port ``443`` to specific
  |ipaddr| addresses, you must add the following addresses and
  domains to your access list.

  |ipaddr| Addresses for ``GET`` and ``POST``
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  Add the following |ipaddr| addresses to your access list:

  .. code-block:: ini

     3.93.83.52
     3.94.56.171
     3.214.160.189
     18.210.185.2
     18.210.245.203
     18.232.30.107
     18.235.209.93
     34.192.82.120
     34.194.131.15
     34.194.251.66
     34.195.55.18
     34.195.194.204
     34.200.195.130
     34.203.104.26
     34.227.138.166
     34.230.213.36
     34.233.152.179
     34.233.179.140
     35.172.148.213
     35.172.245.18
     44.211.4.85
     44.216.169.184
     52.86.156.12
     54.147.76.65
     54.204.237.208

  This allows the {+mdbagent+}s to ``GET`` and ``POST`` to the
  following hosts:

  - ``api-agents.mongodb.com``
  - ``api-backup.mongodb.com``
  - ``api-backup.us-east-1.mongodb.com``
  - ``queryable-backup.us-east-1.mongodb.com``
  - ``restore-backup.us-east-1.mongodb.com``
  - ``real-time-api-agents.mongodb.com``

  Domain for Download of MongoDB Binaries
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  The {+mdbagent+}s require outbound access to the following
  domains, depending on your MongoDB edition, for downloading MongoDB
  binaries:

  .. list-table::
     :header-rows: 1
     :widths: 10,20,30,40

     * - MongoDB Edition
       - Access List Domain
       - |ipaddr| Ranges
       - Service Provider

     * - Community
       - ``fastdl.mongodb.org``
       - `IP ranges for CloudFront <http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/LocationsOfEdgeServers.html>`_.

         The |ipaddr| ranges for CloudFront change frequently.
       - Amazon CloudFront

     * - `Enterprise <http://www.mongodb.com/products/mongodb-enterprise>`_
       - ``downloads.mongodb.com``
       -
       -

     * - Custom Build of MongoDB
       - URL accessible to the {+mdbagent+}s
       -
       -

  .. note:

     The custom build's ``Git Version`` field must be set to the
     target binary's ``mongod --version``.

  Domain for {+mdbagent+} Downloads and Updates
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  If you restrict outbound access, you must grant your {+mdbagent+}s 
  access to the following domain to download and update the 
  {+mdbagent+}.

  .. list-table::
     :header-rows: 1
     :widths: 30,30,40

     * - Access List Domain
       - |ipaddr| Ranges
       - Service Provider

     * - ``s3.amazonaws.com``
       - `IP ranges for AWS <https://docs.aws.amazon.com/vpc/latest/userguide/aws-ip-ranges.html#aws-ip-download>`_.

         The |ipaddr| ranges for AWS change frequently.
       - |aws|

  Required Inbound Access
  -----------------------

  .. _alerts-webhook-ips:

  |ipaddr| Addresses for Alert Webhooks
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  You have the option to configure alerts to be delivered via webhook.
  This sends an |http| ``POST`` request to an endpoint for
  programmatic processing.

  If you want to successfully deliver a webhook to the specified
  endpoint, the endpoint must accept incoming |http| ``POST`` requests
  from the following |ipaddr| addresses:

  .. code-block:: ini

     3.92.113.229
     3.208.110.31
     3.211.96.35
     3.212.79.116
     3.214.203.147
     3.215.10.168
     3.215.143.88 
     18.214.178.145
     18.235.30.157
     18.235.48.235
     18.235.145.62
     34.193.91.42
     34.193.242.51
     34.196.151.229
     34.200.66.236
     34.235.52.68
     34.236.228.98
     34.237.40.31
     35.153.40.82
     35.169.184.216
     35.171.106.60
     35.174.179.65
     35.174.230.146
     35.175.93.3
     35.175.94.38
     35.175.95.59
     50.19.91.100
     52.71.233.234
     52.73.214.87
     52.87.98.128
     54.145.247.111
     54.163.55.77
     100.26.2.217
     107.20.0.247
     107.20.107.166

  .. _backup-scp-restores-inbound-access:

  Required Ports within Your Network
  ----------------------------------

  All MongoDB processes in a deployment must be accessible to all
  {+mdbagent+}s managing processes in that deployment. Therefore, all
  MongoDB ports must be open to every host within your network that
  serve a {+mdbagent+}.

  .. example::

     If you are running MongoDB processes on ``27000``, ``27017`` and
     ``27020``, then those three ports must be open from all hosts
     that are serving a {+mdbagent+}.

---
ref: firewall-configuration
edition: onprem
content: |

  |mms| connects with a number of services. This page explains the
  ports that must be opened to deploy the various components used with
  an |onprem| deployment.

  The specific ports that must be open on any intermediate firewalls
  depend upon what capabilities are enabled, such as encryption,
  authentication, and monitoring.

  .. include:: /images/network-ports.rst

  .. tip::

     All ports listed in the following sections are either the port
     specified in the documentation for MongoDB installations or the
     `known ports <http://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.txt>`__
     for the specific service assigned by the |iana|. If the port
     number can be changed, it is noted after the table in each
     section.

     To run |onprem| without an Internet connection, see
     :doc:`/tutorial/configure-local-mode/` to ensure you have all of
     the necessary binaries to run |onprem| without an Internet
     connection.

  Open Ports to Access |onprem|
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  |onprem| requires the following minimum network port requirements:

  * Both |onprem| users and {+mdbagent+}s must be able to connect to
    the |onprem| application over |http| or |https|.

  * |onprem| must be able to connect to the :program:`mongod` running
    the |onprem| application MongoDB databases.

  * For each |onprem| project, {+mdbagent+}s must be able to connect
    to all client MongoDB processes (``mongod`` or ``mongos``).

  * The |onprem| application must also be able to send email to
    |onprem| users.

  To use |onprem|, open the following ports to the specified hosts.

  .. list-table::
     :header-rows: 1
     :widths: 15,10,10,15,35,15

     * - Service
       - Default Port
       - Transport
       - Direction
       - Purpose
       - Uses |tls|?

     * - |http|
       - 8080
       - |tcp|
       - Inbound
       - Provides a web connection to |onprem| from users and MongoDB
         Agents.
       - No

     * - |https|
       - 8443
       - |tcp|
       - Inbound
       - Provides a secure web connection to |onprem| from users and
         {+mdbagent+}s.
       - Yes

     * - |http| or |https|
       - 8090
       - |tcp|
       - Inbound
       - Provides a health-check endpoint for monitoring |onprem|
         through a monitoring service like Zabbix or Nagios. It is
         only available through ``localhost`` and is disabled by
         default.

         To enable it, see :ref:`enable-debug-endpoints`. When enabled,
         you can access the endpoint at:

         .. code-block:: http

            http://127.0.0.1:8090/health

         .. important::
            This port is only accessible from ``localhost``
            (or ``127.0.0.1``). The port number *can* be changed from
            ``8090`` to another value.


         The |api| endpoint provides the ability to check connections
         from the |http| Service to the
         :ref:`Ops Manager Application Database <mms-application-database>`
         and the :ref:`Backup Snapshot Storage <mms-backup-blockstore-database>`.

         A successful response returns the following:

         .. code-block:: json

           {
             "mms_db": "OK",
             "backup_db": "OK"
           }
       - Optional

     * - MongoDB
       - 27017
       - |tcp|
       - Outbound
       - Connects to MongoDB application, backup and client databases.
       - Optional

     * - |smtp|
       - 587
       - |tcp|
       - Outbound
       - Sends emails from |onprem| to an |smtp| host or to
         `AWS SES <https://aws.amazon.com/ses/>`_.
       - Optional

  .. note::
     - To set a non-default port for |onprem|, see :doc:`/tutorial/manage-ports/`.

     - To configure a different port for the application database, see
       :setting:`mongo.mongoUri`.

     - To configure a different port for a client database, see
       :doc:`/tutorial/deploy-standalone`, :doc:`/tutorial/deploy-replica-set`,
       or :doc:`/tutorial/deploy-sharded-cluster` for a new deployment
       or :doc:`/tutorial/add-existing-mongodb-processes` for an
       existing deployment.

  Open Ports to Access |onprem| and MongoDB Hosts
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  Most |onprem| administration can be performed through the user
  interface. Some procedures require access to the operating system.
  To permit your administrators to access your |onprem| as well as
  MongoDB hosts, open the following ports to those hosts.

  .. list-table::
     :header-rows: 1
     :widths: 15,10,10,15,35,15

     * - Service
       - Default Port
       - Transport
       - Direction
       - Purpose
       - Uses |tls|?

     * - :abbr:`ssh (Secure Shell)`
       - 22
       - |tcp|
       - Inbound
       - Linux System administration.
       - Yes

     * - :abbr:`RDP (Remote Desktop Protocol)`
       - 3389
       - |tcp|
       - Inbound
       - Windows System administration.
       - No

  Open Ports to Back Up, Restore, and Query MongoDB Instances using |onprem|
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  |onprem| can back up MongoDB databases to one or more storage
  systems:

  - A MongoDB database (:term:`blockstore`)
  - An |s3| bucket (|s3| blockstore)
  - A file system (:term:`file system store <File System Store>`).

  To back up MongoDB hosts, open the following ports to the preferred
  backup hosts (blockstore, |s3| snapshot store and/or file system
  snapshot store):

  .. list-table::
     :header-rows: 1
     :widths: 15,10,10,15,35,15

     * - Service
       - Default Port
       - Transport
       - Direction
       - Purpose
       - Uses |tls|?

     * - MongoDB
       - 27017
       - |tcp|
       - Outbound
       - Back up snapshots of entire database to blockstore or
         snapshot metadata to |s3| blockstore metadata database.
       - Optional

     * - |https|
       - 443
       - |tcp|
       - Outbound
       - Back up database snapshot data to |s3| bucket.
       - Yes

     * - |nfs|
       - 2049
       - |tcp|
       - Outbound
       - Back up database snapshots to UNIX-/Linux-based file system.
       - No

     * - |cifs|
       - 3020
       - |tcp|
       - Outbound
       - Back up database snapshots to Windows-based file system.
       - No

     * - Proxy Server
       - 25999
       - |tcp|
       - Outbound
       - Query the snapshot backup host.
       - No

  Snapshots can also be restored using the link displayed in the
  |onprem| application. The same ports needed to use |onprem| would
  need to be open for the user to download the snapshot.

  To find the download link, click :guilabel:`Continuous Backup`, then the
  :guilabel:`Restore History` tab, then click the :guilabel:`download`
  link next to the snapshot.

  .. note::
     - To configure a different port for the blockstore, see
       :doc:`/tutorial/manage-blockstore-storage`.

     - To configure a different port for the |s3| Snapshot Store metadata
       database, see :doc:`/tutorial/manage-s3-blockstore-storage`.

  MongoDB 3.4.2 Enterprise and later provides the ability to query
  backup snapshots. |mms| provisions these queryable snapshots as
  read-only MongoDB instances, as described in
  :doc:`Query a Backup </tutorial/query-backup>`.
  To query a backup snapshot, open the following ports:

  .. list-table::
     :header-rows: 1
     :widths: 15,10,10,15,35,15

     * - Service
       - Default Port
       - Transport
       - Direction
       - Purpose
       - Uses |tls|?

     * - MongoDB
       - 27700-27719
       - |tcp|
       - Inbound
       - Enable communication between the app host and a queryable
         backup snapshot.
       - Optional

  Open Ports to Authenticate |onprem| Users using |ldap|
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  MongoDB Enterprise users :doc:`can authenticate Ops Manager users
  </tutorial/configure-for-ldap-authentication/>` using |ldap|. To
  authenticate using |ldap|, open the following ports on |onprem| and
  your |ldap| host.

  .. list-table::
     :header-rows: 1
     :widths: 15,10,10,15,35,15

     * - Service
       - Default Port
       - Transport
       - Direction
       - Purpose
       - Uses |tls|?

     * - |ldap|
       - 389
       - |udp|
       - Both
       - Authenticate and/or authorize |onprem| users against |ldap|
         host.
       - No

     * - |ldaps|
       - 636
       - |udp|
       - Both
       - Authenticate and/or authorize |onprem| users against |ldap|
         host.
       - Yes

  To configure the |onprem| |ldap| |uri| strings, including
  configuring a non-standard port, see :ref:`ldap-settings`.

  Open Ports to Authenticate with MongoDB
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  MongoDB Enterprise users can use Kerberos or |ldap| to authenticate
  MongoDB users. To authenticate using |ldap| or Kerberos, open the
  following ports between the MongoDB client databases, |onprem|, and
  the Kerberos or |ldap| host(s).

  .. list-table::
     :header-rows: 1
     :widths: 15,10,10,15,35,15

     * - Service
       - Default Port
       - Transport
       - Direction
       - Purpose
       - Uses |tls|?

     * - Kerberos
       - 88
       - |tcp| / |udp|
       - Outbound
       - Request authentication for MongoDB users against Kerberos
         host.
       - No

     * - Kerberos
       - 88
       - |udp|
       - Inbound
       - Receive authentication for MongoDB users against Kerberos
         host.
       - No

     * - |ldap|
       - 389
       - |udp|
       - Both
       - Authenticate and/or authorize MongoDB users against |ldap|
         host.
       - No

     * - |ldaps|
       - 636
       - |udp|
       - Both
       - Authenticate and/or authorize MongoDB users against |ldap|
         host.
       - Yes

  To configure Kerberos for authentication to the |onprem| application
  database, see :ref:`configuration-kerberos-settings`.

  Open Ports to Manage Encryption Keys using |kmip|
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  MongoDB Enterprise deployments using the WiredTiger storage engine
  supports a native encryption option. You can use a |kmip| service to
  manage the master encryption key. To support the encrypted storage
  engine via |kmip|, open the following ports between the Backup Daemon
  hosts, the MongoDB hosts, and the |kmip| hosts.

  .. list-table::
     :header-rows: 1
     :widths: 15,10,10,15,35,15

     * - Service
       - Default Ports
       - Transport
       - Direction
       - Purpose
       - Uses |tls|?

     * - |kmip|
       - 5696
       - |tcp|
       - Outbound
       - Send messages between MongoDB databases and |kmip| host.
       - Yes

  .. note::

     If you change the port for the |kmip| host, see
     :doc:`/tutorial/encrypt-snapshots` to configure |onprem| to use
     that new port.


  Internet Site Access
  --------------------

  If |onprem| is not configured for
  :doc:`Local Mode </tutorial/configure-local-mode>`,
  it requires access to the following Internet sites over |https|:

  .. include:: /includes/list-table-needed-mongodb-sites-over-internet.rst

  .. note:
     The custom build's ``Git Version`` field must be set to the
     target binary's ``mongod --version``.
...
