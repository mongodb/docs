---
program: k8sRsConf
name: apiVersion
type: string
directive: setting
optional: false
inherit:
  name: apiVersion
  program: _shared
  file: options-k8s-shared.yaml

---
program: k8sRsConf
name: kind
type: string
directive: setting
optional: false
inherit:
  name: kind
  program: _shared
  file: options-k8s-shared.yaml

---
program: k8sRsConf
name: metadata.name
type: string
directive: setting
optional: false
inherit:
  name: metadata.name
  program: _shared
  file: options-k8s-shared.yaml

---
program: k8sRsConf
name: metadata.namespace
type: string
directive: setting
optional: false
inherit:
  name: metadata.namespace
  program: _shared
  file: options-k8s-shared.yaml

---
program: k8sRsConf
name: spec.members
type: integer
directive: setting
optional: false
description: |
  *Required*. Number of Members of the Replica Set.

---
program: k8sRsConf
name: spec.version
type: number
directive: setting
optional: false
inherit:
  name: spec.version
  program: _shared
  file: options-k8s-shared.yaml
replacement:
  component: :term:`replica set`

---
program: k8sRsConf
name: spec.service
type: string
directive: setting
optional: true
default: <resource_name>+"-svc" and <resource_name>+"-svc-external"
inherit:
  name: spec.service
  program: _shared
  file: options-k8s-shared.yaml

---
program: k8sRsConf
name: spec.clusterDomain
type: string
directive: setting
optional: true
default: cluster.local
inherit:
  name: spec.clusterDomain
  program: _shared
  file: options-k8s-shared.yaml

---
program: k8sRsConf
name: spec.clusterName
type: string
directive: setting
optional: true
default: cluster.local
inherit:
  name: spec.clusterName
  program: _shared
  file: options-k8s-shared.yaml

---
program: k8sRsConf
name: spec.credentials
type: string
directive: setting
optional: false
inherit:
  name: spec.credentials
  program: _shared
  file: options-k8s-shared.yaml
replacement:
  component: :term:`replica set`

---
program: k8sRsConf
name: spec.persistent
type: boolean
directive: setting
optional: true
default: true
inherit:
  name: spec.persistent
  program: _shared
  file: options-k8s-shared.yaml
replacement:
  component: :term:`replica set`

---
program: k8sRsConf
name: spec.podSpec.cpu
type: string
directive: setting
optional: true
inherit:
  name: spec.podSpec.cpu
  program: _shared
  file: options-k8s-shared.yaml
replacement:
  component: :term:`replica set`

---
program: k8sRsConf
name: spec.podSpec.cpuRequests
type: string
directive: setting
optional: true
inherit:
  name: spec.podSpec.cpuRequests
  program: _shared
  file: options-k8s-shared.yaml
replacement:
  component: standalone database
  cpuLimit: :setting:`spec.podSpec.cpu`

---
program: k8sRsConf
name: spec.podSpec.memory
type: string
directive: setting
optional: true
inherit:
  name: spec.podSpec.memory
  program: _shared
  file: options-k8s-shared.yaml
replacement:
  component: :term:`replica set`
  memoryWarning: |

    If you have not set ``spec.podSpec.memory`` or
    ``spec.podSpec.memoryRequests``:

    - Monitoring tools report incorrect available memory capacity.
    - The WiredTiger cache cannot be calculated correctly. This
      impacts cluster performance.

---
program: k8sRsConf
name: spec.podSpec.memoryRequests
type: string
directive: setting
optional: true
inherit:
  name: spec.podSpec.memoryRequests
  program: _shared
  file: options-k8s-shared.yaml
replacement:
  component: standalone database
  cpuLimit: :setting:`spec.podSpec.memory`

---
program: k8sRsConf
name: spec.podSpec.storage
type: string
directive: setting
optional: true
inherit:
  name: spec.podSpec.storage
  program: _shared
  file: options-k8s-shared.yaml
replacement:
  component: :term:`replica set`

---
program: k8sRsConf
name: spec.podSpec.storageClass
type: string
directive: setting
optional: true
inherit:
  name: spec.podSpec.storageClass
  program: _shared
  file: options-k8s-shared.yaml
replacement:
  component: :term:`replica set`

---
program: k8sRsConf
name: spec.podSpec.persistence.single
type: collection
directive: setting
optional: true
inherit:
  name: spec.podSpec.persistence.single
  program: _shared
  file: options-k8s-shared.yaml
replacement:
  component: :term:`replica set`


---
program: k8sRsConf
name: spec.podSpec.persistence.multiple.data
type: collection
directive: setting
optional: true
inherit:
  name: spec.podSpec.persistence.multiple.item
  program: _shared
  file: options-k8s-shared.yaml
replacement:
  component: :term:`sharded cluster` shard member
  storedItem: data
  defaultStorage: 16G

---
program: k8sRsConf
name: spec.podSpec.persistence.multiple.journal
type: collection
directive: setting
optional: true
inherit:
  name: spec.podSpec.persistence.multiple.item
  program: _shared
  file: options-k8s-shared.yaml
replacement:
  component: :term:`sharded cluster` shard member
  storedItem: journal
  defaultStorage: 1G

---
program: k8sRsConf
name: spec.podSpec.persistence.multiple.logs
type: collection
directive: setting
optional: true
inherit:
  name: spec.podSpec.persistence.multiple.item
  program: _shared
  file: options-k8s-shared.yaml
replacement:
  component: :term:`sharded cluster` shard member
  storedItem: logs
  defaultStorage: 3G

---
program: k8sRsConf
name: spec.podSpec.podAntiAffinityTopologyKey
type: string
directive: setting
optional: true
default: kubernetes.io/hostname
inherit:
  name: spec.podSpec.podAntiAffinityTopologyKey
  program: _shared
  file: options-k8s-shared.yaml

---
program: k8sRsConf
name: spec.podSpec.podAffinity
type: Struct
directive: setting
optional: true
inherit:
  name: spec.podSpec.podAffinity
  program: _shared
  file: options-k8s-shared.yaml
replacement:
  component: :term:`replica set`

---
program: k8sRsConf
name: spec.podSpec.nodeAffinity
type: Struct
directive: setting
optional: true
inherit:
  name: spec.podSpec.nodeAffinity
  program: _shared
  file: options-k8s-shared.yaml
replacement:
  component: :term:`replica set`

---
program: k8sRsConf
name: spec.logLevel
type: string
directive: setting
optional: true
inherit:
  name: spec.logLevel
  program: _shared
  file: options-k8s-shared.yaml
---
program: k8sRsConf
name: spec.security.authentication.internalCluster
inherit:
  name: spec.security.authentication.internalCluster
  program: _shared
  file: options-k8s-shared.yaml
---
program: k8sRsConf
name: spec.security.authentication.enabled
inherit:
  name: spec.security.authentication.enabled
  program: _shared
  file: options-k8s-shared.yaml
---
program: k8sRsConf
name: spec.security.tls.enabled
inherit:
  name: spec.security.tls.enabled
  program: _shared
  file: options-k8s-shared.yaml
---
program: k8sRsConf
name: spec.security.authentication.modes
inherit:
  name: spec.security.authentication.modes
  program: _shared
  file: options-k8s-shared.yaml
---
program: k8sRsConf
name: spec.additionalMongodConfig.net.ssl.mode
inherit:
  name: spec.additionalMongodConfig.net.ssl.mode
  program: _shared
  file: options-k8s-shared.yaml
---
program: k8sRsConf
name: spec.security.authentication.internalCluster
inherit:
  name: spec.security.authentication.internalCluster
  program: _shared
  file: options-k8s-shared.yaml
---
program: k8sRsConf
name: spec.connectivity.replicaSetHorizons
type: collection
directive: setting
optional: true
description: |
  Allows you to provide different |dns| settings for client
  applications and the {+mdbagent+}s. The |k8s-op-short| uses split
  horizon |dns| for replica set members horizons to allow the:

  - {+mdbagent+}s to communicate with each other on the internal
    horizon within |k8s|
  - clients to communicate with the replica set using the external
    horizon outside |k8s|

  .. admonition:: Split Horizon Requirements
     :class: note

     - Make sure each value in this array must be unique.

     - Make sure that the number of entries in this array matches the
       value given in :setting:`spec.members`.

     - Set the :setting:`spec.security.tls.enabled` to ``true`` to enable |tls|. This method to use split horizons requires the Server Name Indication extension of the |tls| protocol.

  .. example::

     In this example, the example replica set communicates between
     members on the ``example-localhost`` horizon. Clients communicate
     with the replica set using the ``example-website`` horizon.

     .. literalinclude:: /includes/code-examples/yaml-files/example-replica-set.yaml
        :language: yaml
        :start-after: START-horizon-addcert-replset-upper
        :end-before: END-horizon-addcert-replset-upper
        :linenos:
        :lineno-start: 1
        :copyable: false

     .. literalinclude:: /includes/code-examples/yaml-files/example-replica-set.yaml
        :language: yaml
        :start-after: START-horizon-addcert-replset-lower
        :end-before: END-horizon-addcert-replset-lower
        :linenos:
        :lineno-start: 15
        :emphasize-lines: 1-13

---
program: k8sRsConf
name: spec.security.tls.additionalCertificateDomains
type: boolean
directive: setting
optional: true
inherit:
  name: spec.security.tls.additionalCertificateDomains
  program: _shared
  file: options-k8s-shared.yaml
...
