#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/tutorial/restore-replica-set-from-backup.txt:3
msgid "Restore a Replica Set from MongoDB Backups"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:13
msgid ""
"This procedure outlines the process for taking MongoDB data and restoring"
" that data into a new :term:`replica set`. Use this approach for seeding "
"test deployments from production backups or as part of disaster recovery."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:19
msgid ""
"You *cannot* restore a single data set to three new :binary:`~bin.mongod`"
" instances and **then** create a replica set. If you copy the data set to"
" each :binary:`~bin.mongod` instance and then create the replica set, "
"MongoDB will force the secondaries to perform an :term:`initial sync`. "
"The procedures in this document describe the correct and efficient ways "
"to deploy a restored replica set."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:26
msgid ""
"You can also use :binary:`~bin.mongorestore` to restore database files "
"using data created with :binary:`~bin.mongodump`. See :doc:`/tutorial"
"/backup-and-restore-tools` for more information."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:31
msgid "Restore Database into a Single Node Replica Set"
msgstr ""

#: ../source/includes/steps/restore-primary-from-backup.rst:8
msgid "Obtain backup MongoDB Database files."
msgstr ""

#: ../source/includes/steps/restore-primary-from-backup.rst:10
#: ../source/includes/steps/restore-primary-from-backup.rst:29
msgid ""
"The backup files may come from a :doc:`file system snapshot </tutorial"
"/backup-with-filesystem-snapshots>`. The |mms-home| produces MongoDB "
"database files for :mms-docs:`stored snapshots </tutorial/restore-from-"
"snapshot/>` and :mms-docs:`point in time snapshots </tutorial/restore-"
"from-point-in-time-snapshot/>`. For :products:`Ops Manager, an on-premise"
" solution available in MongoDB Enterprise Advanced </mongodb-enterprise-"
"advanced?jmp=docs>`, see also the :opsmgr:`Ops Manager Backup overview "
"</core/backup-overview>`."
msgstr ""

#: ../source/includes/steps/restore-primary-from-backup.rst:27
msgid "Step 1: Obtain backup MongoDB Database files."
msgstr ""

#: ../source/includes/steps/restore-primary-from-backup.rst:46
msgid "Drop the ``local`` database if it exists in the backup."
msgstr ""

#: ../source/includes/steps/restore-primary-from-backup.rst:48
#: ../source/includes/steps/restore-primary-from-backup.rst:86
msgid ""
"If you are restoring from a filesystem backup (or any backup with the "
"`local` database), drop the ``local`` database."
msgstr ""

#: ../source/includes/steps/restore-primary-from-backup.rst:53
#: ../source/includes/steps/restore-primary-from-backup.rst:91
msgid ""
"Start a standalone :binary:`~bin.mongod` using the data files from the "
"backup as the data path."
msgstr ""

#: ../source/includes/steps/restore-primary-from-backup.rst:61
#: ../source/includes/steps/restore-primary-from-backup.rst:99
msgid "Drop the ``local`` database."
msgstr ""

#: ../source/includes/steps/restore-primary-from-backup.rst:63
#: ../source/includes/steps/restore-primary-from-backup.rst:101
msgid ""
"Connect :binary:`~bin.mongo` shell to the :binary:`~bin.mongod` instance "
"and drop the ``local`` database."
msgstr ""

#: ../source/includes/steps/restore-primary-from-backup.rst:74
#: ../source/includes/steps/restore-primary-from-backup.rst:112
msgid "Shut down the standalone."
msgstr ""

#: ../source/includes/steps/restore-primary-from-backup.rst:84
msgid "Step 2: Drop the ``local`` database if it exists in the backup."
msgstr ""

#: ../source/includes/steps/restore-primary-from-backup.rst:122
msgid "Start a new single-node replica set."
msgstr ""

#: ../source/includes/steps/restore-primary-from-backup.rst:124
#: ../source/includes/steps/restore-primary-from-backup.rst:158
msgid ""
"Start a :binary:`~bin.mongod` instance as a new single-node replica set. "
"Specify the path to the backup data files with ``--dbpath`` option and "
"the replica set name with the ``--replSet`` option. For :ref:`config "
"server replica set (CSRS) <csrs>`, include the :option:`--configsvr "
"<mongod --configsvr>` option. Include any other options as appropriate "
"for your deployment."
msgstr ""

#: ../source/includes/steps/restore-primary-from-backup.rst:133
#: ../source/includes/steps/restore-primary-from-backup.rst:167
msgid ""
"Starting in MongoDB 3.6, if your replica set members are run on different"
" hosts or if you wish remote clients to connect to your instance, you "
"must specify the :setting:`net.bindIp` setting (or :option:`--bind_ip "
"<mongod --bind_ip>`)."
msgstr ""

#: ../source/includes/warning-bind-ip-security-considerations.rst:3
msgid ""
"Before binding to a non-localhost (e.g. publicly accessible) IP address, "
"ensure you have secured your cluster from unauthorized access. For a "
"complete list of security recommendations, see :doc:`/administration"
"/security-checklist`. At minimum, consider :ref:`enabling authentication "
"<checklist-auth>` and :doc:`hardening network infrastructure </core"
"/security-network>`."
msgstr ""

#: ../source/includes/fact-uuid-restore-from-backup.rst:3
msgid "*New in version 3.6:*"
msgstr ""

#: ../source/includes/fact-uuid-restore-from-backup.rst:5
msgid ""
"All MongoDB collections have :abbr:`UUIDs (Universally unique "
"identifiers)` by default. When MongoDB restores collections, the restored"
" collections retain their original UUIDs. When restoring a collection "
"where no UUID was present, MongoDB generates a UUID for the restored "
"collection."
msgstr ""

#: ../source/includes/fact-uuid-restore-from-backup.rst:11
msgid ""
"For more information on collection UUIDs, see `Collections "
"<https://docs.mongodb.com/v3.6/core/databases-and-"
"collections/#collections>`_."
msgstr ""

#: ../source/includes/steps/restore-primary-from-backup.rst:156
msgid "Step 3: Start a new single-node replica set."
msgstr ""

#: ../source/includes/steps/restore-primary-from-backup.rst:190
msgid "Connect a :binary:`~bin.mongo` shell to the ``mongod`` instance."
msgstr ""

#: ../source/includes/steps/restore-primary-from-backup.rst:193
#: ../source/includes/steps/restore-primary-from-backup.rst:219
msgid ""
"From the same machine where one of the :binary:`~bin.mongod` is running "
"(in this tutorial, ``mongodb0.example.net``), start the "
":binary:`~bin.mongo` shell. To connect to the :binary:`~bin.mongod` "
"listening to localhost on the default port of ``27017``, simply issue:"
msgstr ""

#: ../source/includes/steps/restore-primary-from-backup.rst:205
#: ../source/includes/steps/restore-primary-from-backup.rst:231
msgid ""
"Depending on your path, you may need to specify the path to the "
":binary:`~bin.mongo` binary."
msgstr ""

#: ../source/includes/steps/restore-primary-from-backup.rst:216
msgid "Step 4: Connect a :binary:`~bin.mongo` shell to the ``mongod`` instance."
msgstr ""

#: ../source/includes/steps/restore-primary-from-backup.rst:242
msgid "Initiate the new replica set."
msgstr ""

#: ../source/includes/steps/restore-primary-from-backup.rst:244
#: ../source/includes/steps/restore-primary-from-backup.rst:268
msgid ""
"Use :method:`rs.initiate()` on *one and only one* member of the replica "
"set:"
msgstr ""

#: ../source/includes/steps/restore-primary-from-backup.rst:255
#: ../source/includes/steps/restore-primary-from-backup.rst:279
msgid ""
"MongoDB initiates a set that consists of the current member and that uses"
" the default replica set configuration."
msgstr ""

#: ../source/includes/steps/restore-primary-from-backup.rst:266
msgid "Step 5: Initiate the new replica set."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:40
msgid "Add Members to the Replica Set"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:42
msgid ""
"MongoDB provides two options for restoring secondary members of a replica"
" set:"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:45
msgid ""
":ref:`Manually copy the database files <restore-rs-copy-db-files>` to "
"each data directory."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:48
msgid ""
":ref:`Allow initial sync <restore-rs-initial-sync>` to distribute data "
"automatically."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:53
msgid ""
"If your database is large, initial sync can take a long time to complete."
" For large databases, it might be preferable to copy the database files "
"onto each host."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:61
msgid "Copy Database Files and Restart :binary:`~bin.mongod` Instance"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:63
msgid ""
"Use the following sequence of operations to \"seed\" additional members "
"of the replica set with the restored data by copying MongoDB data files "
"directly."
msgstr ""

#: ../source/includes/steps/restore-secondary-from-backup-directly.rst:8
msgid "Shut down the :binary:`~bin.mongod` instance that you restored."
msgstr ""

#: ../source/includes/steps/restore-secondary-from-backup-directly.rst:10
#: ../source/includes/steps/restore-secondary-from-backup-directly.rst:23
msgid ""
"Use :option:`--shutdown <mongod --shutdown>` or "
":method:`db.shutdownServer()` to ensure a clean shut down."
msgstr ""

#: ../source/includes/steps/restore-secondary-from-backup-directly.rst:21
msgid "Step 1: Shut down the :binary:`~bin.mongod` instance that you restored."
msgstr ""

#: ../source/includes/steps/restore-secondary-from-backup-directly.rst:34
msgid "Copy the primary's data directory to each secondary."
msgstr ""

#: ../source/includes/steps/restore-secondary-from-backup-directly.rst:36
#: ../source/includes/steps/restore-secondary-from-backup-directly.rst:50
msgid ""
"Copy the :term:`primary's <primary>` data directory into the "
":setting:`~storage.dbPath` of the other members of the replica set. The "
":setting:`~storage.dbPath` is ``/data/db`` by default."
msgstr ""

#: ../source/includes/steps/restore-secondary-from-backup-directly.rst:48
msgid "Step 2: Copy the primary's data directory to each secondary."
msgstr ""

#: ../source/includes/steps/restore-secondary-from-backup-directly.rst:62
msgid "Start the :binary:`~bin.mongod` instance that you restored."
msgstr ""

#: ../source/includes/steps/restore-secondary-from-backup-directly.rst:71
msgid "Step 3: Start the :binary:`~bin.mongod` instance that you restored."
msgstr ""

#: ../source/includes/steps/restore-secondary-from-backup-directly.rst:80
msgid "Add the secondaries to the replica set."
msgstr ""

#: ../source/includes/steps/restore-secondary-from-backup-directly.rst:82
#: ../source/includes/steps/restore-secondary-from-backup-directly.rst:97
msgid ""
"In a :binary:`~bin.mongo` shell connected to the :term:`primary`, add the"
" :term:`secondaries <secondary>` to the replica set using "
":method:`rs.add()`. See :doc:`/tutorial/deploy-replica-set` for more "
"information about deploying a replica set."
msgstr ""

#: ../source/includes/steps/restore-secondary-from-backup-directly.rst:95
msgid "Step 4: Add the secondaries to the replica set."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:72
msgid "Update Secondaries using Initial Sync"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:74
msgid ""
"Use the following sequence of operations to \"seed\" additional members "
"of the replica set with the restored data using the default :ref:`initial"
" sync <replica-set-initial-sync>` operation."
msgstr ""

#: ../source/includes/steps/restore-secondary-from-backup-initial-sync.rst:8
msgid ""
"Ensure that the data directories on the prospective replica set members "
"are empty."
msgstr ""

#: ../source/includes/steps/restore-secondary-from-backup-initial-sync.rst:17
msgid ""
"Step 1: Ensure that the data directories on the prospective replica set "
"members are empty."
msgstr ""

#: ../source/includes/steps/restore-secondary-from-backup-initial-sync.rst:26
msgid "Add each prospective member to the replica set."
msgstr ""

#: ../source/includes/steps/restore-secondary-from-backup-initial-sync.rst:28
#: ../source/includes/steps/restore-secondary-from-backup-initial-sync.rst:42
msgid ""
"When you add a member to the replica set, :ref:`Initial Sync <replica-"
"set-initial-sync>` copies the data from the :term:`primary` to the new "
"member."
msgstr ""

#: ../source/includes/steps/restore-secondary-from-backup-initial-sync.rst:40
msgid "Step 2: Add each prospective member to the replica set."
msgstr ""

#: ../source/includes/extracts/additional-resources-backup-tutorials.rst:4
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-backup-tutorials.rst:6
msgid ""
"`MongoDB Atlas: For a simple way to run, monitor, and maintain cloud-"
"hosted MongoDB deployments "
"<https://www.mongodb.com/cloud/atlas?jmp=docs>`_"
msgstr ""

#~ msgid ""
#~ "This procedure outlines the process for"
#~ " taking MongoDB data and restoring "
#~ "that data into a new :term:`replica "
#~ "set`. Use this approach for seeding "
#~ "test deployments from production backups "
#~ "as well as part of disaster "
#~ "recovery."
#~ msgstr ""

#~ msgid ""
#~ "You *cannot* restore a single data "
#~ "set to three new :program:`mongod` "
#~ "instances and *then* create a replica"
#~ " set. In this situation MongoDB will"
#~ " force the secondaries to perform an"
#~ " initial sync. The procedures in this"
#~ " document describe the correct and "
#~ "efficient ways to deploy a replica "
#~ "set."
#~ msgstr ""

#~ msgid "Manually copy the database files to each data directory."
#~ msgstr ""

#~ msgid ""
#~ "Allow :ref:`initial sync <replica-set-"
#~ "initial-sync>` to distribute data "
#~ "automatically."
#~ msgstr ""

#~ msgid "The following sections outlines both approaches."
#~ msgstr ""

#~ msgid ""
#~ "Use the following sequence of operations"
#~ " to \"seed\" additional members of "
#~ "the replica set with the restored "
#~ "data using the default *initial sync*"
#~ " operation."
#~ msgstr ""

# 63ed9271a96e4b2bb368d5e90f948f14
#~ msgid "On this page"
#~ msgstr ""

# 4f2792c1579e4d1d80a4cd6b36726c49
#~ msgid ""
#~ "You *cannot* restore a single data "
#~ "set to three new :program:`mongod` "
#~ "instances and **then** create a replica"
#~ " set. If you copy the data set"
#~ " to each :program:`mongod` instance and "
#~ "then create the replica set, MongoDB "
#~ "will force the secondaries to perform"
#~ " an :term:`initial sync`. The procedures"
#~ " in this document describe the "
#~ "correct and efficient ways to deploy "
#~ "a restored replica set."
#~ msgstr ""

# e3b574bf7ab2451088929a2d3b9d518c
#~ msgid ""
#~ "You can also use :program:`mongorestore` "
#~ "to restore database files using data "
#~ "created with :program:`mongodump`. See "
#~ ":doc:`/tutorial/backup-and-restore-tools` for"
#~ " more information."
#~ msgstr ""

# 5e4438f497014e698d60823eac7e76d4
#~ msgid "Copy Database Files and Restart :program:`mongod` Instance"
#~ msgstr ""

