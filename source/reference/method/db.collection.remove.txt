======================
db.collection.remove()
======================

.. default-domain:: mongodb

.. method:: db.collection.remove(query,justOne)

   The :method:`remove <db.collection.remove()>` method
   removes documents from a collection.

   The :method:`remove() <db.collection.remove()>` method can take the
   following parameters:

   :param document query:

          Optional. Specifies the deletion criteria using :doc:`query
          operators </reference/operators>`.  Omit the ``query``
          parameter or pass an empty document (e.g. ``{}`` ) to delete
          all :term:`documents <document>` in the :term:`collection`.

   :param boolean justOne:

          Optional. A boolean that limits the deletion to just one
          document. The default value is ``false``. Set to ``true`` to
          delete only the first result.

   .. note::
      .. include:: /includes/fact-remove-capped-collection-restriction.rst 

   .. examples-begin

   Consider the following examples of the :method:`remove
   <db.collection.remove()>` method.

   - To remove all documents in a collection, call the
     :method:`remove <db.collection.remove()>` method with no
     parameters:

     .. code-block:: javascript

         db.products.remove()

     This operation will remove all the documents from the collection
     ``products``.

   - To remove the documents that match a deletion criteria, call the
     :method:`remove <db.collection.remove()>` method with the
     ``query`` criteria:

     .. code-block:: javascript

        db.products.remove( { qty: { $gt: 20 } } )

     This operation removes all the documents from the collection
     ``products`` where ``qty`` is greater than ``20``.

   - To remove the first document that match a deletion criteria, call the
     :method:`remove <db.collection.remove()>` method with the ``query``
     criteria and the ``justOne`` parameter set to ``true`` or ``1``:

     .. code-block:: javascript

        db.products.remove( { qty: { $gt: 20 } }, true )

     This operation removes all the documents from the collection
     ``products`` where ``qty`` is greater than ``20``.

   .. examples-end

   .. note::

      If the ``query`` argument to the :method:`remove()
      <db.collection.remove()>` method matches multiple documents in
      the collection, the delete operation may interleave with other
      write operations to that collection. For an unsharded collection,
      you have the option to override this behavior with the
      :operator:`$atomic` isolation operator, effectively isolating the
      delete operation and blocking all other operations during the
      delete. To isolate the query, include ``$atomic: 1`` in the
      ``query`` parameter as in the following example:

      .. code-block:: javascript

         db.products.remove( { qty: { $gt: 20 }, $atomic: 1 } )
