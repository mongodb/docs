.. _rust-delete-one-usage:

=================
Delete a Document
=================

.. facet::
   :name: genre
   :values: tutorial

.. meta::
   :keywords: runnable, code example, write operation
   :description: Delete a document from a collection with the MongoDB Rust Driver, with examples for both asynchronous and synchronous runtimes.

You can delete a document from a collection by calling the `delete_one()
<{+api+}/struct.Collection.html#method.delete_one>`__ method on a ``Collection``
instance.

Pass a query filter to the ``delete_one()`` method to match the document you want to
delete from the collection. If multiple documents match the query filter, MongoDB
deletes the first matching document according to their :term:`natural order` in the
database or according to the sort order specified in a `DeleteOptions <{+api+}/options/struct.DeleteOptions.html>`__
instance.

The ``delete_one()`` method returns a `DeleteResult <{+api+}/results/struct.DeleteResult.html>`__
type. This type contains information about the result of the delete operation, such as
the total number of documents deleted.

To learn more about delete operations, see the :ref:`rust-delete-guide` guide.

Example
-------

This example deletes a document that matches a query filter from the ``restaurants``
collection in the ``sample_restaurants`` database. The ``delete_one()`` method deletes the
first document in which the value of the ``name`` field is ``"Haagen-Dazs"`` and the
``borough`` field is ``"Brooklyn"``.

You can access the documents in the ``restaurants`` collection as instances
of the ``Document`` type or a custom data type. To specify which data type
represents the collection's data, replace the ``<T>`` type parameter on the
highlighted line with one of the following values:

- ``<Document>``: Accesses collection documents as BSON documents
- ``<Restaurant>``: Accesses collection documents as instances of the ``Restaurant``
  struct, defined at the top of the code

Select the :guilabel:`Asynchronous` or :guilabel:`Synchronous` tab to
see the corresponding code for each runtime:

.. tabs::

   .. tab:: Asynchronous
      :tabid: delete-many-async

      .. io-code-block::
         :copyable: true

         .. input:: /includes/usage-examples/code-snippets/delete-one-async.rs
            :language: rust
            :emphasize-lines: 20
            :dedent:

         .. output::
            :language: console
            :visible: false

            Deleted documents: 1

   .. tab:: Synchronous
      :tabid: delete-many-sync

      .. io-code-block::
         :copyable: true

         .. input:: /includes/usage-examples/code-snippets/delete-one-sync.rs
            :language: rust
            :emphasize-lines: 18
            :dedent:

         .. output::
            :language: console
            :visible: false

            Deleted documents: 1

