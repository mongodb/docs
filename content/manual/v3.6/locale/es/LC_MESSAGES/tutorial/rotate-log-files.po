# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: 2014-04-08 18:39+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/tutorial/rotate-log-files.txt:3
msgid "Rotate Log Files"
msgstr ""

#: ../source/tutorial/rotate-log-files.txt:14
msgid "Overview"
msgstr ""

#: ../source/tutorial/rotate-log-files.txt:16
msgid ""
"When used with the ``--logpath`` option or :setting:`systemLog.path` "
"setting, :binary:`~bin.mongod` and :binary:`~bin.mongos` instances report"
" a live account of all activity and operations to a log file. When "
"reporting activity data to a log file, by default, MongoDB only rotates "
"logs in response to the :dbcommand:`logRotate` command, or when the "
":binary:`~bin.mongod` or :binary:`~bin.mongos` process receives a "
"``SIGUSR1`` signal from the operating system."
msgstr ""

#: ../source/tutorial/rotate-log-files.txt:24
msgid ""
"MongoDB's standard log rotation approach archives the current log file "
"and starts a new one. To do this, the :binary:`~bin.mongod` or "
":binary:`~bin.mongos` instance renames the current log file by appending "
"a UTC timestamp to the filename, in :term:`ISODate` format. It then opens"
" a new log file, closes the old log file, and sends all new log entries "
"to the new log file."
msgstr ""

#: ../source/tutorial/rotate-log-files.txt:31
msgid ""
"You can also configure MongoDB to support the Linux/Unix logrotate "
"utility by setting :setting:`systemLog.logRotate` or ``--logRotate`` to "
"``reopen``. With ``reopen``, :binary:`~bin.mongod` or "
":binary:`~bin.mongos` closes the log file, and then reopens a log file "
"with the same name, expecting that another process renamed the file prior"
" to rotation."
msgstr ""

#: ../source/tutorial/rotate-log-files.txt:39
msgid ""
"Finally, you can configure :binary:`~bin.mongod` to send log data to the "
"``syslog``. using the :option:`--syslog <mongod --syslog>` option. In "
"this case, you can take advantage of alternate logrotation tools."
msgstr ""

#: ../source/tutorial/rotate-log-files.txt:43
msgid ""
"For information on logging, see the :ref:`monitoring-standard-loggging` "
"section."
msgstr ""

#: ../source/tutorial/rotate-log-files.txt:47
msgid "Default Log Rotation Behavior"
msgstr ""

#: ../source/tutorial/rotate-log-files.txt:49
msgid ""
"By default, MongoDB uses the ``--logRotate rename`` behavior. With "
"``rename``, :binary:`~bin.mongod` or :binary:`~bin.mongos` renames the "
"current log file by appending a UTC timestamp to the filename, opens a "
"new log file, closes the old log file, and sends all new log entries to "
"the new log file."
msgstr ""

#: ../source/includes/steps/log-rotate-rename.rst:8
msgid "Start a :binary:`~bin.mongod` instance."
msgstr ""

#: ../source/includes/steps/log-rotate-rename.rst:15
#: ../source/includes/steps/log-rotate-rename.rst:33
msgid ""
"You can also explicitly specify :option:`logRotate --rename <mongod "
"--logRotate>`."
msgstr ""

#: ../source/includes/steps/log-rotate-rename.rst:26
msgid "Step 1: Start a :binary:`~bin.mongod` instance."
msgstr ""

#: ../source/includes/steps/log-rotate-rename.rst:44
#: ../source/includes/steps/log-rotate-reopen.rst:44
msgid "List the log files"
msgstr ""

#: ../source/includes/steps/log-rotate-rename.rst:46
#: ../source/includes/steps/log-rotate-rename.rst:66
#: ../source/includes/steps/log-rotate-reopen.rst:46
#: ../source/includes/steps/log-rotate-reopen.rst:66
msgid "In a separate terminal, list the matching files:"
msgstr ""

#: ../source/includes/steps/log-rotate-rename.rst:54
#: ../source/includes/steps/log-rotate-rename.rst:74
#: ../source/includes/steps/log-rotate-reopen.rst:54
#: ../source/includes/steps/log-rotate-reopen.rst:74
msgid "The results should include one log file, ``server1.log``."
msgstr ""

#: ../source/includes/steps/log-rotate-rename.rst:64
#: ../source/includes/steps/log-rotate-reopen.rst:64
msgid "Step 2: List the log files"
msgstr ""

#: ../source/includes/steps/log-rotate-rename.rst:84
#: ../source/includes/steps/log-rotate-reopen.rst:84
msgid "Rotate the log file."
msgstr ""

#: ../source/includes/steps/log-rotate-rename.rst:86
#: ../source/includes/steps/log-rotate-rename.rst:104
#: ../source/includes/steps/log-rotate-reopen.rst:86
#: ../source/includes/steps/log-rotate-reopen.rst:108
msgid ""
"Rotate the log file by issuing the :dbcommand:`logRotate` command from "
"the ``admin`` database in a :binary:`~bin.mongo` shell:"
msgstr ""

#: ../source/includes/steps/log-rotate-rename.rst:102
#: ../source/includes/steps/log-rotate-reopen.rst:106
msgid "Step 3: Rotate the log file."
msgstr ""

#: ../source/includes/steps/log-rotate-rename.rst:120
msgid "View the new log files"
msgstr ""

#: ../source/includes/steps/log-rotate-rename.rst:122
#: ../source/includes/steps/log-rotate-rename.rst:150
msgid "List the new log files to view the newly-created log:"
msgstr ""

#: ../source/includes/steps/log-rotate-rename.rst:130
#: ../source/includes/steps/log-rotate-rename.rst:158
msgid ""
"There should be two log files listed: ``server1.log``, which is the log "
"file that :binary:`~bin.mongod` or :binary:`~bin.mongos` made when it "
"reopened  the log file, and ``server1.log.<timestamp>``, the renamed "
"original log file."
msgstr ""

#: ../source/includes/steps/log-rotate-rename.rst:135
#: ../source/includes/steps/log-rotate-rename.rst:163
msgid ""
"Rotating log files does not modify the \"old\" rotated log files. When "
"you rotate a log, you rename the ``server1.log`` file to include the "
"timestamp, and a new, empty ``server1.log`` file receives all new log "
"input."
msgstr ""

#: ../source/includes/steps/log-rotate-rename.rst:148
msgid "Step 4: View the new log files"
msgstr ""

#: ../source/tutorial/rotate-log-files.txt:59
msgid "Log Rotation with ``--logRotate reopen``"
msgstr ""

#: ../source/tutorial/rotate-log-files.txt:63
msgid ""
"Log rotation with ``--logRotate reopen`` closes and opens the log file "
"following the typical Linux/Unix log rotate behavior."
msgstr ""

#: ../source/includes/steps/log-rotate-reopen.rst:8
msgid ""
"Start a :binary:`~bin.mongod` instance, specifying the ``reopen`` "
":option:`--logRotate <mongod --logRotate>` behavior."
msgstr ""

#: ../source/includes/steps/log-rotate-reopen.rst:15
#: ../source/includes/steps/log-rotate-reopen.rst:33
msgid ""
"You must use the :option:`--logappend <mongod --logappend>` option with "
":option:`--logRotate reopen <mongod --logRotate>`."
msgstr ""

#: ../source/includes/steps/log-rotate-reopen.rst:26
msgid ""
"Step 1: Start a :binary:`~bin.mongod` instance, specifying the ``reopen``"
" :option:`--logRotate <mongod --logRotate>` behavior."
msgstr ""

#: ../source/includes/steps/log-rotate-reopen.rst:95
#: ../source/includes/steps/log-rotate-reopen.rst:117
msgid ""
"You should rename the log file using an external process, following the "
"typical Linux/Unix log rotate behavior."
msgstr ""

#: ../source/tutorial/rotate-log-files.txt:69
msgid "Syslog Log Rotation"
msgstr ""

#: ../source/tutorial/rotate-log-files.txt:71
msgid ""
"With syslog log rotation, :binary:`~bin.mongod` sends log data to the "
"syslog rather than writing it to a file."
msgstr ""

#: ../source/includes/steps/log-rotate-syslog.rst:8
msgid ""
"Start a :binary:`~bin.mongod` instance with the :option:`--syslog <mongod"
" --syslog>` option"
msgstr ""

#: ../source/includes/steps/log-rotate-syslog.rst:15
#: ../source/includes/steps/log-rotate-syslog.rst:38
msgid ""
"Do not include :option:`--logpath <mongod --logpath>`. Since "
":option:`--syslog <mongod --syslog>` tells :binary:`~bin.mongod` to send "
"log data to the syslog, specifying a :option:`--logpath <mongod "
"--logpath>` will causes an error."
msgstr ""

#: ../source/includes/steps/log-rotate-syslog.rst:19
#: ../source/includes/steps/log-rotate-syslog.rst:42
msgid ""
"To specify the facility level used when logging messages to the syslog, "
"use the :option:`--syslogFacility <mongod --syslogFacility>` option or "
":setting:`systemLog.syslogFacility` configuration setting."
msgstr ""

#: ../source/includes/steps/log-rotate-syslog.rst:31
msgid ""
"Step 1: Start a :binary:`~bin.mongod` instance with the :option:`--syslog"
" <mongod --syslog>` option"
msgstr ""

#: ../source/includes/steps/log-rotate-syslog.rst:54
msgid "Rotate the log."
msgstr ""

#: ../source/includes/steps/log-rotate-syslog.rst:56
#: ../source/includes/steps/log-rotate-syslog.rst:69
msgid ""
"Store and rotate the log output using your systems default log rotation "
"mechanism."
msgstr ""

#: ../source/includes/steps/log-rotate-syslog.rst:67
msgid "Step 2: Rotate the log."
msgstr ""

#: ../source/tutorial/rotate-log-files.txt:77
msgid "Forcing a Log Rotation with ``SIGUSR1``"
msgstr ""

#: ../source/tutorial/rotate-log-files.txt:79
msgid ""
"For Linux and Unix-based systems, you can use the ``SIGUSR1`` signal to "
"rotate the logs for a single process, as in the following:"
msgstr ""

#~ msgid "Start a :program:`mongod` with the :setting:`syslog` option."
#~ msgstr ""

#~ msgid "You cannot use :setting:`syslog` with :setting:`systemLog.path`."
#~ msgstr ""

# 781dbde9cddc4acaa71651bfa299f7a0
#~ msgid ""
#~ "Log rotation using MongoDB's standard "
#~ "approach archives the current log file"
#~ " and starts a new one. To do"
#~ " this, the :program:`mongod` or "
#~ ":program:`mongos` instance renames the current"
#~ " log file by appending a UTC "
#~ "(GMT) timestamp to the filename, in "
#~ ":term:`ISODate` format. It then opens a"
#~ " new log file, closes the old "
#~ "log file, and sends all new log"
#~ " entries to the new log file."
#~ msgstr ""

# 62d93e85ccbf416b8e8852db82e6ee5b
#~ msgid ""
#~ "MongoDB's standard approach to log "
#~ "rotation only rotates logs in response"
#~ " to the :dbcommand:`logRotate` command, or"
#~ " when the :program:`mongod` or "
#~ ":program:`mongos` process receives a "
#~ "``SIGUSR1`` signal from the operating "
#~ "system."
#~ msgstr ""

# 03ef0ce4a77c4e45a38390bb8dcdf9fb
#~ msgid ""
#~ "Alternately, you may configure mongod to"
#~ " send log data to ``syslog``. In "
#~ "this case, you can take advantage "
#~ "of alternate logrotation tools."
#~ msgstr ""

# f15bc5e52fdc40fb9ceb3e3166fccae3
#~ msgid "Log Rotation With MongoDB"
#~ msgstr ""

# 01d1993e5bd24a7fb40b43b59f74a8db
#~ msgid "The following steps create and rotate a log file:"
#~ msgstr ""

# 3859644c9b0b4da88396eebeeb17390a
#~ msgid ""
#~ "Start a :program:`mongod` with verbose "
#~ "logging, with appending enabled, and "
#~ "with the following log file:"
#~ msgstr ""

# 3db1d531abac477ab6f7541beebe8a42
#~ msgid "For results, you get:"
#~ msgstr ""

# 6f380d2cc9784677805a32713b44312a
#~ msgid "Rotate the log file using *one* of the following methods."
#~ msgstr ""

# 2ef3806232d7425881e1eb8ebab985b2
#~ msgid ""
#~ "From the :program:`mongo` shell, issue "
#~ "the :dbcommand:`logRotate` command from the"
#~ " ``admin`` database:"
#~ msgstr ""

# b7d707c6015f485e8b2318c42ca911ae
#~ msgid ""
#~ "This is the only available method "
#~ "to rotate log files on Windows "
#~ "systems."
#~ msgstr ""

# a01e9c53382d482bb1e273cbca8409f5
#~ msgid ""
#~ "For Linux systems, rotate logs for "
#~ "a single process by issuing the "
#~ "following command:"
#~ msgstr ""

# 2673f9b21180433aabf0577d9a52f84b
#~ msgid "List the matching files again:"
#~ msgstr ""

# 5d4e39a1e27d4cdf9dd44bc5ba31a544
#~ msgid ""
#~ "For results you get something similar"
#~ " to the following. The timestamps "
#~ "will be different."
#~ msgstr ""

# 47541e189d35409f8ebfd3fffa0ba2cd
#~ msgid ""
#~ "The example results indicate a log "
#~ "rotation performed at exactly ``11:30 "
#~ "pm`` on ``November 24th, 2011 UTC``, "
#~ "which is the local time offset by"
#~ " the local time zone. The original"
#~ " log file is the one with the"
#~ " timestamp. The new log is "
#~ "``server1.log`` file."
#~ msgstr ""

# 02b17848d55a42bab5aad77e58c73960
#~ msgid ""
#~ "If you issue a second "
#~ ":dbcommand:`logRotate` command an hour later,"
#~ " then an additional file would appear"
#~ " when listing matching files, as in"
#~ " the following example:"
#~ msgstr ""

# ff9df7d708754d5397c2f0084a672326
#~ msgid ""
#~ "This operation does not modify the "
#~ "``server1.log.2011-11-24T23-30-00`` file created "
#~ "earlier, while ``server1.log.2011-11-25T00-30-00`` "
#~ "is the previous ``server1.log`` file, "
#~ "renamed. ``server1.log`` is a new, empty"
#~ " file that receives all new log "
#~ "output."
#~ msgstr ""

# 7cd726b55946405699b3e850d83ef75e
#~ msgid ""
#~ "To configure mongod to send log "
#~ "data to syslog rather than writing "
#~ "log data to a file, use the "
#~ "following procedure."
#~ msgstr ""

# 656f0cfa842d490392f35494f72d1b92
#~ msgid ""
#~ "Store and rotate the log output "
#~ "using your system's default log rotation"
#~ " mechanism."
#~ msgstr ""

#~ msgid ""
#~ "Start a :program:`mongod` with the "
#~ ":setting:`~systemLog.syslogFacility` option."
#~ msgstr ""

#~ msgid ""
#~ "You cannot use :setting:`~systemLog.syslogFacility`"
#~ " with :setting:`systemLog.path`."
#~ msgstr ""

