=================
KeyVault.getKey()
=================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. versionadded:: 4.2

.. method:: KeyVault.getKey(UUID)

   Gets a data encryption key with the specified ``UUID``. The data
   encryption key must exist in the key vault associated to the database
   connection.

   :method:`~KeyVault.getKey()` has the following syntax:

   .. code-block:: none

      keyVault = db.getMongo().getKeyVault()
      
      keyVault.getKey(UUID("<UUID String>"))

   The :abbr:`UUID (Universally unique identifier)` is a BSON 
   :bsontype:`binary data <Binary>` object with subtype ``4``.

   :returns:
  
     Document representing a matching data encryption key.

     Returns nothing if no key in the key vault has the specified
     ``UUID``.

Behavior
--------

Requires Configuring Client-Side Field Level Encryption on Database Connection
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/extracts/csfle-requires-enabling-encryption.rst

Example
-------

The following example uses a locally managed KMS for the client-side
field level encryption configuration. 

.. include:: /includes/extracts/csfle-connection-boilerplate.rst

Retrieve the :method:`keyVault <getKeyVault()>` object and
use the :method:`KeyVault.getKey()` to retrieve
a data encryption key using its ``UUID``:

.. code-block:: javascript

   keyVault = encryptedClient.getKeyVault()
   keyVault.getKey(UUID("b4b41b33-5c97-412e-a02b-743498346079"))

:method:`~KeyVault.getKey()` returns the following data encryption key:

.. code-block:: json

   {
     "_id" : UUID("b4b41b33-5c97-412e-a02b-743498346079"),
     "keyMaterial" : BinData(0,"PXRsLOAYxhzTS/mFQAI8486da7BwZgqA91UI7NKz/T/AjB0uJZxTvhvmQQsKbCJYsWVS/cp5Rqy/FUX2zZwxJOJmI3rosPhzV0OI5y1cuXhAlLWlj03CnTcOSRzE/YIrsCjMB0/NyiZ7MRWUYzLAEQnE30d947XCiiHIb8a0kt2SD0so8vZvSuP2n0Vtz4NYqnzF0CkhZSWFa2e2yA=="),
     "creationDate" : ISODate("2019-08-12T21:21:30.569Z"),
     "updateDate" : ISODate("2019-08-12T21:21:30.569Z"),
     "status" : 0,
     "version" : NumberLong(0),
     "masterKey" : {
       "provider" : "aws",
       "key" : "arn:aws:kms:region:account:key/keystring",
       "region" : "region",
       "endpoint" : "kms.region.amazonaws.com:443"
     },
     "keyAltNames" : [
       "dataKeyAlternativeName"
     ]
   }
