======
Bulk()
======

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. include:: /includes/fact-bulkwrite.rst

Description
-----------

.. method:: Bulk()

   Bulk operations builder used to construct a list of write operations
   to perform in bulk for a single collection. To instantiate the
   builder, use either the
   :method:`db.collection.initializeOrderedBulkOp()` or the
   :method:`db.collection.initializeUnorderedBulkOp()` method.

Ordered and Unordered Bulk Operations
-------------------------------------

The builder can construct the list of operations as *ordered* or
*unordered*.

Ordered Operations
~~~~~~~~~~~~~~~~~~

With an *ordered* operations list, MongoDB executes the write
operations in the list serially. If an error occurs during the
processing of one of the write operations, MongoDB will return without
processing any remaining write operations in the list.

Use :method:`db.collection.initializeOrderedBulkOp()` to create a
builder for an ordered list of write commands.

.. include:: /includes/fact-bulk-operation-ordered-list.rst

.. include:: /includes/fact-bulk-operation-batches.rst

.. include:: /includes/fact-bulk-operation-sharded-cluster.rst

Unordered Operations
~~~~~~~~~~~~~~~~~~~~

With an *unordered* operations list, MongoDB can execute in parallel,
as well as in a nondeterministic order, the write operations in the
list. If an error occurs during the processing of one of the write
operations, MongoDB will continue to process remaining write operations
in the list.

Use :method:`db.collection.initializeUnorderedBulkOp()` to create a
builder for an unordered list of write commands.

.. include:: /includes/fact-bulk-operation-unordered-list.rst

.. include:: /includes/fact-bulk-operation-batches.rst

Transactions
~~~~~~~~~~~~

.. include:: /includes/extracts/transactions-supported-operation.rst

For :method:`Bulk.insert()` operations, the collection must already exist.

For :method:`Bulk.find.upsert()`, if the operation results in an
upsert, the collection must already exist.

.. include:: /includes/extracts/transactions-operations-write-concern.rst

.. include:: /includes/extracts/transactions-usage.rst

.. |operation| replace:: :method:`Bulk()`
 
.. _bulk-methods:

Methods
-------

The :method:`Bulk()` builder has the following methods:

.. list-table::
   :widths: 30,70
   :header-rows: 1

   * - Name

     - Description

   * - :method:`Bulk.insert()`

     - Adds an insert operation to a list of operations.

   * - :method:`Bulk.find()`

     - Specifies the query condition for an update or a remove operation.

   * - :method:`Bulk.find.removeOne()`

     - Adds a single document remove operation to a list of operations.

   * - :method:`Bulk.find.remove()`

     - Adds a multiple document remove operation to a list of operations.

   * - :method:`Bulk.find.replaceOne()`

     - Adds a single document replacement operation to a list of operations.

   * - :method:`Bulk.find.updateOne()`

     - Adds a single document update operation to a list of operations.

   * - :method:`Bulk.find.update()`

     - Adds a ``multi`` update operation to a list of operations.

   * - :method:`Bulk.find.upsert()`

     - Specifies ``upsert: true`` for an update operation.

   * - :method:`Bulk.execute()`

     - Executes a list of operations in bulk.

   * - :method:`Bulk.getOperations()`

     - Returns an array of write operations executed in the :method:`Bulk()` operations object.

   * - :method:`Bulk.tojson()`

     - Returns a JSON document that contains the number of operations and batches in the :method:`Bulk()` operations object.

   * - :method:`Bulk.toString()`

     - Returns the :method:`Bulk.tojson()` results as a string.

