.. default-domain:: mongodb

.. class:: hidden

   .. readconcern:: "snapshot"

===========================
Read Concern ``"snapshot"``
===========================

.. meta::
   :description: read concern, snapshot read concern, read isolation, transactions, multi-document transactions
   :keywords: read concern, snapshot read concern, read isolation, transactions, multi-document transactions

.. versionadded:: 4.0

Read concern ``"snapshot"`` is only available for :doc:`multi-document
transactions </core/transactions>`.

- If the transaction is not part of a :ref:`causally consistent session
  <sessions>`, upon transaction commit with write concern
  :writeconcern:`"majority"`, the transaction operations are guaranteed
  to have read from a snapshot of majority-committed data.

- If the transaction is part of a :ref:`causally consistent session
  <sessions>`, upon transaction commit with write concern
  :writeconcern:`"majority"`, the transaction operations are guaranteed
  to have read from a snapshot of majority-committed data that provides
  causal consistency with the operation immediately preceding the
  transaction start.

Operations
----------

For a list of all operations that accept read concerns, see
:ref:`read-concern-operations`.

Read Concern on Capped Collections
----------------------------------

Starting in version 5.0, you cannot use read concern
:readconcern:`"snapshot"` when reading from a
:doc:`capped </core/capped-collections>` collection.

Read Concern and Transactions
-----------------------------

Multi-document transactions support read concern
:readconcern:`"snapshot"` as well as :readconcern:`"local"`, and
:readconcern:`"majority"`.

.. note::

   You set the read concern at the transaction level, not at the
   individual operation level. To set the read concern for
   transactions, see :ref:`transactions-read-concern`.

For transactions on a sharded cluster, if any operation in the
transaction involves a shard that has :ref:`disabled read concern
"majority" <disable-read-concern-majority>`, you cannot use read
concern :readconcern:`"snapshot"` for the transaction. You can only use
read concern :readconcern:`"local"` or :readconcern:`"majority"` for
the transaction. If you use read concern :readconcern:`"snapshot"`, the
transaction errors and aborts. For more information, see
:ref:`transactions-disabled-rc-majority`.


