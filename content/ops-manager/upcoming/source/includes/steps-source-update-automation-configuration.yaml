title: "Retrieve and validate the automation configuration from |mms|."
stepnum: 0
level: 4
ref: check-automation-config
content: |

  a. Use the :doc:`automationConfig </reference/api/automation-config>`
     resource to retrieve the configuration. Issue the following
     command, replacing the placeholders with the {{variables}}.

     .. code-block:: sh

        curl --user "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest \
             --request GET "https://{+opsmgr-url+}/api/public/v1.0/groups/{PROJECT-ID}/automationConfig?pretty=true" \
             --output currentAutomationConfig.json

  b. Validate the downloaded Automation Configuration file.

     Verify that the content of the ``currentAutomationConfig.json`` 
     and ``mms-cluster-config-backup.json`` files are up-to-date. 
     
     You can find the ``mms-cluster-config-backup.json`` file on any host running the {+mdbagent+} at:

     - Linux and macOS: ``/var/lib/mongodb-mms-automation/mms-cluster-config-backup.json``
     - Windows: ``%SystemDrive%\MMSAutomation\versions\mms-cluster-config-backup.json``

replacement:
  variables: ""

---
title: "Edit the downloaded automation configuration file."
stepnum: 0
level: 4
ref: open-for-editing
content: |

  Open ``currentAutomationConfig.json`` in your preferred text editor.

  To learn more about the automation configuration options, see
  :doc:`/reference/cluster-configuration`.
---
title: Send the updated automation configuration.
stepnum: 0
level: 4
ref: send-updated-configuration
content: |

  Use the :doc:`automationConfig </reference/api/automation-config>`
  resource to send the updated automation configuration.

  Issue the following command with path to the updated configuration 
  document and replace the placeholders with the {{variables}}.

  .. code-block:: sh

     curl --user "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest \
          --header "Content-Type: application/json" \
          --request PUT "https://{+opsmgr-url+}/api/public/v1.0/groups/{PROJECT-ID}/automationConfig?pretty=true" \
          --data @currentAutomationConfig.json

  Upon successful update of the configuration, the API returns the HTTP
  ``200 OK`` status code to indicate the request has succeeded.

replacement:
  variables: ""
---
title: Confirm successful update of the automation configuration.
stepnum: 0
level: 4
ref: confirm-update-of-config
content: |

  Retrieve the automation configuration from |mms| and confirm it
  contains the changes. To retrieve the configuration, issue the
  following command, replacing the placeholders with the
  {{variables}}.

  .. code-block:: sh

     curl --user "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest \
          --request GET "https://{+opsmgr-url+}/api/public/v1.0/groups/{PROJECT-ID}/automationConfig?pretty=true"

replacement:
  variables: ""
---
title: Check the deployment status to ensure goal state is reached.
stepnum: 0
level: 4
ref: check-deployment-status
content: |

  Use the :doc:`automationStatus </reference/api/automation-status>`
  resource to retrieve the deployment status. Issue the following
  command, replacing the placeholders with the {{variables}}.

  .. code-block:: sh

     curl --user "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest \
          --request GET "https://{+opsmgr-url+}/api/public/v1.0/groups/{PROJECT-ID}/automationStatus?pretty=true"

  Confirm that the values of all the ``lastGoalVersionAchieved`` fields
  in the ``processes`` array match the ``goalVersion`` field. To learn
  about deployment status, see :doc:`/reference/api/automation-status`.

replacement:
  variables: ""
---
title: "Add your new key file to the automation configuration file you downloaded."
stepnum: 0
level: 4
ref: add-newKey
content: |

  a. Open ``currentAutomationConfig.json`` in your preferred text editor.
  
  #. Add the **auth.newKey** field. Set this field's value to the 
     new key file that you want |mms| to use.

     .. note::

        The sample configuration below is truncated for readability.

     .. code-block:: json
        :copyable: false
        :emphasize-lines: 5

        {
          "auth": {
            "disabled": "false",
            "key": "<your-old-key>",
            "newKey": "<your-new-key>"
          }
        }

...
