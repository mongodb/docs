# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/backups.txt:3
msgid "MongoDB Backup Methods"
msgstr ""

#: ../source/core/backups.txt:13
msgid "When deploying MongoDB in production, you should have a strategy for capturing and restoring backups in the case of data loss events."
msgstr ""

#: ../source/core/backups.txt:18
msgid "Back Up with Atlas"
msgstr ""

#: ../source/core/backups.txt:20
msgid "`MongoDB Atlas <https://www.mongodb.com/cloud/atlas?jmp=docs>`_ is a database-as-a-service that offers fully managed backups."
msgstr ""

#: ../source/core/backups.txt:24
msgid "Back Up with |MMS| or Ops Manager"
msgstr ""

#: ../source/core/backups.txt:26
msgid "|MMS| is a hosted back up, monitoring, and automation service for MongoDB. |mms-home| supports backing up and restoring MongoDB :term:`replica sets <replica set>` and :term:`sharded clusters <sharded cluster>` from a graphical user interface."
msgstr ""

#: ../source/core/backups.txt:34
msgid "|MMS|"
msgstr ""

#: ../source/core/backups.txt:36
msgid "The |mms-home| supports the backing up and restoring of MongoDB deployments."
msgstr ""

#: ../source/core/backups.txt:39
msgid "|MMS| continually backs up MongoDB :term:`replica sets <replica set>` and :term:`sharded clusters <sharded cluster>` by reading the :term:`oplog` data from your MongoDB deployment. |MMS| creates snapshots of your data at set intervals, and can also offer point-in-time recovery of MongoDB replica sets and sharded clusters."
msgstr ""

#: ../source/core/backups.txt:49
msgid "To get started with |MMS| Backup, sign up for |mms-home|. For documentation on |MMS|, see the |mms-docs|."
msgstr ""

#: ../source/core/backups.txt:57
msgid "Ops Manager"
msgstr ""

#: ../source/core/backups.txt:59
msgid "With Ops Manager, MongoDB subscribers can install and run the same core software that powers :ref:`backup-with-mms` on their own infrastructure. Ops Manager is an on-premise solution that has similar functionality to |MMS| and is available with Enterprise Advanced subscriptions."
msgstr ""

#: ../source/core/backups.txt:64
msgid "For more information about Ops Manager, see the `MongoDB Enterprise Advanced <https://www.mongodb.com/products/mongodb-enterprise-advanced?jmp=docs>`_ page and the :opsmgr:`Ops Manager Manual </>`."
msgstr ""

#: ../source/core/backups.txt:72
msgid "Back Up by Copying Underlying Data Files"
msgstr ""

#: ../source/core/backups.txt:75
msgid "Back Up with Filesystem Snapshots"
msgstr ""

#: ../source/core/backups.txt:77
msgid "You can create a backup of a MongoDB deployment by making a copy of MongoDB's underlying data files."
msgstr ""

#: ../source/core/backups.txt:80
msgid "If the volume where MongoDB stores its data files supports point-in-time snapshots, you can use these snapshots to create backups of a MongoDB system at an exact moment in time. File system snapshots are an operating system volume manager feature, and are not specific to MongoDB. With file system snapshots, the operating system takes a snapshot of the volume to use as a baseline for data backup. The mechanics of snapshots depend on the underlying storage system. For example, on Linux, the Logical Volume Manager (LVM) can create snapshots. Similarly, Amazonâ€™s EBS storage system for EC2 supports snapshots."
msgstr ""

#: ../source/core/backups.txt:91
msgid "To get a correct snapshot of a running :binary:`~bin.mongod` process, you must have journaling enabled and the journal must reside on the same logical volume as the other MongoDB data files. Without journaling enabled, there is no guarantee that the snapshot will be consistent or valid."
msgstr ""

#: ../source/core/backups.txt:97
msgid "To get a consistent snapshot of a :term:`sharded cluster`, you must disable the balancer and capture a snapshot from every shard as well as a config server at approximately the same moment in time."
msgstr ""

#: ../source/core/backups.txt:101
msgid "For more information, see the :doc:`/tutorial/backup-with-filesystem-snapshots` and :doc:`/tutorial/backup-sharded-cluster-with-filesystem-snapshots` for complete instructions on using LVM to create snapshots. Also see :ecosystem:`Back up and Restore Processes for MongoDB on Amazon EC2 </tutorial/backup-and-restore-mongodb-on-amazon-ec2>`."
msgstr ""

#: ../source/core/backups.txt:109
msgid "Back Up with ``cp`` or ``rsync``"
msgstr ""

#: ../source/core/backups.txt:111
msgid "If your storage system does not support snapshots, you can copy the files directly using ``cp``, ``rsync``, or a similar tool. Since copying multiple files is not an atomic operation, you must stop all writes to the :binary:`~bin.mongod` before copying the files. Otherwise, you will copy the files in an invalid state."
msgstr ""

#: ../source/core/backups.txt:117
msgid "Backups produced by copying the underlying data do not support point in time recovery for :term:`replica sets <replica set>` and are difficult to manage for larger sharded clusters. Additionally, these backups are larger because they include the indexes and duplicate underlying storage padding and fragmentation. :binary:`~bin.mongodump`, by contrast, creates smaller backups."
msgstr ""

#: ../source/core/backups.txt:127
msgid "Back Up with ``mongodump``"
msgstr ""

#: ../source/core/backups.txt:129
msgid ":binary:`~bin.mongodump` reads data from a MongoDB database and creates high fidelity BSON files which the :binary:`~bin.mongorestore` tool can use to populate a MongoDB database. :binary:`~bin.mongodump` and :binary:`~bin.mongorestore` are simple and efficient tools for backing up and restoring small MongoDB deployments, but are not ideal for capturing backups of larger systems."
msgstr ""

#: ../source/core/backups.txt:137
msgid ":binary:`~bin.mongodump` and :binary:`~bin.mongorestore` operate against a running :binary:`~bin.mongod` process, and can manipulate the underlying data files directly. By default, :binary:`~bin.mongodump` does not capture the contents of the :doc:`local database </reference/local-database>`."
msgstr ""

#: ../source/core/backups.txt:142
msgid ":binary:`~bin.mongodump` only captures the documents in the database. The resulting backup is space efficient, but :binary:`~bin.mongorestore` or :binary:`~bin.mongod` must rebuild the indexes after restoring data."
msgstr ""

#: ../source/core/backups.txt:146
msgid "When connected to a MongoDB instance, :binary:`~bin.mongodump` can adversely affect :binary:`~bin.mongod` performance. If your data is larger than system memory, the queries will push the working set out of memory, causing :ref:`page faults <administration-monitoring-page-faults>`."
msgstr ""

#: ../source/core/backups.txt:151
msgid "Applications can continue to modify data while :binary:`~bin.mongodump` captures the output. For replica sets, :binary:`~bin.mongodump` provides the :option:`--oplog <mongodump --oplog>` option to include in its output :term:`oplog` entries that occur during the :binary:`~bin.mongodump` operation. This allows the corresponding :binary:`~bin.mongorestore` operation to replay the captured oplog. To restore a backup created with :option:`--oplog <mongodump --oplog>`, use :binary:`~bin.mongorestore` with the :option:`--oplogReplay <mongorestore --oplogReplay>` option."
msgstr ""

#: ../source/core/backups.txt:160
msgid "However, for replica sets, consider :ref:`backup-with-mms` or :ref:`backup-with-mms-onprem`."
msgstr ""

#: ../source/core/backups.txt:163
msgid "See :doc:`/tutorial/backup-and-restore-tools` and :doc:`/tutorial/backup-sharded-cluster-with-database-dumps` for more information."
msgstr ""

#: ../source/includes/extracts/additional-resources-backup.rst:4
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-backup.rst:6
msgid "`MongoDB Atlas: For a simple way to run, monitor, and maintain cloud-hosted MongoDB deployments <https://www.mongodb.com/cloud/atlas?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-backup.rst:10
msgid "`Backup and it's Role in Disaster Recovery White Paper <https://www.mongodb.com/lp/white-paper/backup-disaster-recovery?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-backup.rst:11
msgid "`Backup vs. Replication: Why Do You Need Both? <http://www.mongodb.com/blog/post/backup-vs-replication-why-do-you-need-both?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-backup.rst:12
msgid "`MongoDB Production Readiness Consulting Package <https://www.mongodb.com/products/consulting?jmp=docs#s_product_readiness>`_"
msgstr ""

