# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/write-concern.txt:7
# c6fbe080684c4efb82998e9ad1e851e9
msgid "Write Concern"
msgstr ""

#: ../source/includes/introduction-write-concern.rst:1
# 9d03ef5dccb44cfaa92ab282b1cdf028
msgid ":term:`Write concern` describes the guarantee that MongoDB provides when reporting on the success of a write operation. The strength of the write concerns determine the level of guarantee. When inserts, updates and deletes have a *weak* write concern, write operations return quickly. In some failure cases, write operations issued with weak write concerns may not persist. With *stronger* write concerns, clients wait after sending a write operation for MongoDB to confirm the write operations."
msgstr ""

#: ../source/includes/introduction-write-concern.rst:10
# 9c4f74db5b564d41910a68390f946b4c
msgid "MongoDB provides different levels of write concern to better address the specific needs of applications. Clients may adjust write concern to ensure that the most important operations persist successfully to an entire MongoDB deployment. For other less critical operations, clients can adjust the write concern to ensure faster performance rather than ensure persistence to the entire deployment."
msgstr ""

#: ../source/core/write-concern.txt:13
# 56bac621589e44b9960584687dfa73af
msgid "A new protocol for :ref:`write operations <rel-notes-write-operations>` integrates write concern with the write operations."
msgstr ""

#: ../source/core/write-concern.txt:18
# 565b480d713d4573b81dfcdd88e8fbb6
msgid "For details on write concern configurations, see :doc:`/reference/write-concern`."
msgstr ""

#: ../source/core/write-concern.txt:22
# a5055a4013914f4a87c93ed352cc004b
msgid "Considerations"
msgstr ""

#: ../source/core/write-concern.txt:25
# 4003450c35134eb0ac32dddab7c90c15
msgid "Default Write Concern"
msgstr ""

#: ../source/core/write-concern.txt:27
# 55303945f71f4f328fb5166156ee1ba4
msgid "The :program:`mongo` shell and the MongoDB drivers use :ref:`write-concern-acknowledged` as the default write concern."
msgstr ""

#: ../source/core/write-concern.txt:30
# 21da2d494a374fe490446402fecafade
msgid "See :ref:`write-concern-acknowledged` for more information, including when this write concern became the default."
msgstr ""

#: ../source/core/write-concern.txt:34
# bcba15e82e5b4d2bb05045740435a7bc
msgid "Timeouts"
msgstr ""

#: ../source/core/write-concern.txt:36
# a33501f2c0594b1987c009943186e660
msgid "Clients can set a :ref:`wtimeout <wc-wtimeout>` value as part of a :ref:`replica acknowledged <replica-set-write-concern>` write concern. If the write concern is not satisfied in the specified interval, the operation returns an error, even if the write concern will eventually succeed."
msgstr ""

#: ../source/core/write-concern.txt:42
# 077b669e772748ad83ab3977a7691f7b
msgid "MongoDB does not \"rollback\" or undo modifications made before the ``wtimeout`` interval expired."
msgstr ""

#: ../source/core/write-concern.txt:46
# 5123dedb7dfc4bdda784f17707d3dccc
msgid "Write Concern Levels"
msgstr ""

#: ../source/core/write-concern.txt:48
# fb704f4496804b3d89370856e78c3fa9
msgid "MongoDB has the following levels of conceptual write concern, listed from weakest to strongest:"
msgstr ""

#: ../source/core/write-concern.txt:54
# facae27110954bfe9d7ff36a3c1ba801
msgid "Unacknowledged"
msgstr ""

#: ../source/core/write-concern.txt:56
# 4ca93f891642480b8902f79ef17f48de
msgid "With an *unacknowledged* write concern, MongoDB does not acknowledge the receipt of write operations. *Unacknowledged* is similar to *errors ignored*; however, drivers will attempt to receive and handle network errors when possible. The driver's ability to detect network errors depends on the system's networking configuration."
msgstr ""

#: ../source/core/write-concern.txt:62
# e8a8fb5214a4441c90a3453e55d1c9a0
msgid "Before the releases outlined in :ref:`driver-write-concern-change`, this was the default write concern."
msgstr ""

#: ../source/core/write-concern.txt:70
# 299814f503e34626bb9ad12fa408a6c4
msgid "Acknowledged"
msgstr ""

#: ../source/core/write-concern.txt:72
# de4a5a9bcec94de7ae285c5f093b1c77
msgid "With a receipt *acknowledged* write concern, the :program:`mongod` confirms that it received the write operation and applied the change to the in-memory view of data. *Acknowledged* write concern allows clients to catch network, duplicate key, and other errors."
msgstr ""

#: ../source/core/write-concern.txt:77
# 127892048aad42598e5d1b56346d5ee8
msgid "MongoDB uses the *acknowledged* write concern by default starting in the driver releases outlined in :ref:`write-concern-change-releases`."
msgstr ""

#: ../source/core/write-concern.txt:80
# 4d626704c0704301b4373312344cde6e
msgid "The :program:`mongo` shell write methods now incorporates the :doc:`write concern </core/write-concern>` in the write methods and provide the default write concern whether run interactively or in a script. See :ref:`write-methods-incompatibility` for details."
msgstr ""

#: ../source/core/write-concern.txt:88
# 07da5516a1ad46e5b920a9204cdd75cf
msgid "*Acknowledged* write concern does *not* confirm that the write operation has persisted to the disk system."
msgstr ""

#: ../source/core/write-concern.txt:94
# 9f66bd4334634347a91d6329a0d4ee89
msgid "Journaled"
msgstr ""

#: ../source/core/write-concern.txt:96
# 23579506e2ff46dfb425363fc9559107
msgid "With a *journaled* write concern, the MongoDB acknowledges the write operation only after committing the data to the :term:`journal`. This write concern ensures that MongoDB can recover the data following a shutdown or power interruption."
msgstr ""

#: ../source/core/write-concern.txt:101
# 914c1014c1854f78950d66a773300eaa
msgid "You must have journaling enabled to use this write concern."
msgstr ""

#: ../source/core/write-concern.txt:103
# 12c4024ab27148d7a2d5c5c702286a23
msgid "With a *journaled* write concern, write operations must wait for the next journal commit. To reduce latency for these operations, MongoDB also increases the frequency that it commits operations to the journal. See :setting:`storage.mmapv1.journal.commitIntervalMs` for more information."
msgstr ""

#: ../source/includes/note-write-concern-journaled-replication.rst:1
#: ../source/includes/note-write-concern-journaled-replication.rst:1
# 0787ac8fd0c94515ba8cf9c97b9ab85a
# bc6d978fac3d4659b6a393eb5b9960cd
msgid "Requiring *journaled* write concern in a replica set only requires a journal commit of the write operation to the :term:`primary` of the set regardless of the level of *replica acknowledged* write concern."
msgstr ""

#: ../source/core/write-concern.txt:116
# 4241da7a524348c48bc209ecd3202cef
msgid "Replica Acknowledged"
msgstr ""

#: ../source/core/write-concern.txt:118
# a013abe0611e4c578ad64631950b915f
msgid ":term:`Replica sets <replica set>` present additional considerations with regards to write concern. The default write concern only requires acknowledgement from the primary."
msgstr ""

#: ../source/core/write-concern.txt:122
# e4adb101eabd4accb444b5559fac4ab2
msgid "With *replica acknowledged* write concern, you can guarantee that the write operation propagates to additional members of the replica set. See :doc:`Write Concern for Replica Sets <replica-set-write-concern>` for more information."
msgstr ""

#: ../source/core/write-concern.txt:131
# fe570584433d4671ada749a61e6a90ce
msgid ":doc:`/reference/write-concern`"
msgstr ""

#: ../source/core/write-concern.txt:1
# 315079d5bc8e4be78431005c278817a0
msgid "write concern"
msgstr ""

