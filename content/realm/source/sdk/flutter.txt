.. meta::
   :robots: noindex, nosnippet

:template: product-landing
:hidefeedback: header
:noprevnext:

.. _flutter-intro:
.. _flutter-realm-database:
.. _flutter-realm-database-overview:
.. _flutter-realm-database-internals:

============================
Atlas Device SDK for Flutter
============================

.. meta::
   :description: Use the Atlas Device SDK for Flutter to store and sync data in cross-platform apps with Dart and Flutter.

.. toctree::
   :titlesonly:

   Realm Database </sdk/flutter/realm-database>
   Atlas App Services </sdk/flutter/app-services>
   Manage Users </sdk/flutter/users>
   Sync Device Data <sdk/flutter/sync>
   Troubleshooting </sdk/flutter/troubleshooting>
   Test & Debug </sdk/flutter/test-and-debug>
   Logging </sdk/flutter/logging>
   SDK Telemetry </sdk/flutter/telemetry>
   API Reference <https://pub.dev/documentation/realm/latest/>
   Upgrade to SDK v2.0.0 </sdk/flutter/upgrade-to-v2>
   Example Projects <https://github.com/realm/realm-dart-samples>
   Release Notes <https://github.com/realm/realm-dart/releases>


Use the Atlas Device SDK for Flutter to write client applications in
`Dart <https://dart.dev/>`__ for the `Flutter <https://flutter.dev/>`__
platform. Read and write data on devices, sync data with Atlas,
and use Atlas App Services.

.. kicker:: Learning Paths

Get Started with the Flutter SDK
--------------------------------

.. card-group::
   :columns: 3
   :style: extra-compact

   .. card::
      :headline: Quick Start
      :cta: See Code Examples
      :url: https://www.mongodb.com/docs/realm/sdk/flutter/quick-start/
      :icon: atlas_functions
      :icon-alt: Functions Icon

      Minimal-explanation code examples of how to work with the Flutter SDK.

   .. card::
      :headline: Working Example App
      :cta: Explore an Example App
      :url: https://www.mongodb.com/docs/atlas/app-services/template-apps/
      :icon: realm_mobile
      :icon-alt: Atlas Device SDK Mobile Icon

      Learn by example through dissecting a working app that uses the Flutter SDK.

   .. card::
      :headline: Guided Tutorial
      :cta: Follow the Tutorial
      :url: https://mongodb.com/docs/atlas/app-services/tutorial/flutter/
      :icon: general_content_tutorial
      :icon-alt: Tutorial Icon

      Follow a guided tutorial to learn how to adapt the example app to
      create your own working app.

.. kicker:: What You Can Do

Develop Apps with the SDK
-------------------------

Use the SDK's open-source database - Realm - as an object store on the device. 
Use Device Sync to keep data in sync with your MongoDB Atlas cluster and 
other clients.

.. tabs::

   .. tab:: Store Data with the SDK
      :tabid: device-persistence

      .. procedure::

         .. step:: Install the Flutter SDK

            To get started, :ref:`install the Flutter SDK <flutter-install>`.
            Then, import the SDK in your project files.

         .. step:: Define an Object Schema

            Use Dart to idiomatically :ref:`define an object schema <flutter-define-realm-object-schema>`.

         .. step:: Configure & Open a Database

            You can configure your database to do things
            like populate initial data on load, use an encryption key to 
            secure data, and more. To begin working with your data,
            :ref:`configure and open a database <flutter-open-close-realm>`.

         .. step:: Read and Write Data

            You can :ref:`create <flutter-crud-create>`, 
            :ref:`read <flutter-crud-read>`, :ref:`update <flutter-crud-update>`, 
            and :ref:`delete objects <flutter-crud-delete>`
            from the database on the device. Construct complex queries to 
            :ref:`filter data <flutter-filter-results>`.

         .. step:: React to Changes

            Live objects mean that your data is always up-to-date.
            Register a change listener to :ref:`react to changes <flutter-react-to-changes>` 
            and perform logic like updating your UI.

      .. image:: /images/illustrations/2024_branding/Technical_SOFTWARE_Connect(2)_Spot.png
         :alt: Atlas Device SDK Mobile Illustration

   .. tab:: Sync Data Across Devices
      :tabid: device-sync

      .. procedure::

         .. step:: Configure Atlas Device Sync

            Configure :ref:`Device Sync in an App Services App <realm-sync-get-started>`.
            Define data access rules or use Development Mode to infer a schema
            from your client's data model.

         .. step:: Connect to an Atlas App Services App

            To use the App Services App with Device Sync in your Flutter app,
            :ref:`connect to the backend App <flutter-connect-to-backend>`.

         .. step:: Authenticate a User

            App Services provides access to custom JWT authentication,
            our built-in email/password provider, anonymous
            authentication, and popular
            authentication providers like Apple, Google, and Facebook.
            Use these providers to :ref:`authenticate a user in your client <flutter-authenticate>`.

         .. step:: Open a Synced Database

            To get started syncing data, :ref:`open a synced database <flutter-open-synced-realm>`.
            To determine what data a synced database can read and write,
            :ref:`subscribe to a query <flutter-flexible-sync-manage-subscriptions>`.

         .. step:: Read and Write Synced Data

            The APIs to read and write data are the same whether you're using 
            a synced or non-synced database. Data that you read and write is 
            automatically kept in sync with your Atlas cluster and other 
            clients. Apps keep working offline and sync changes whenever a 
            network connection is available.

      .. image:: /images/illustrations/2024_branding/Technical_SOFTWARE_Sync(2)_Spot.png
         :alt: Device Sync Illustration

   .. tab:: Build with Atlas App Services
      :tabid: app-services

      .. container::

         Call Serverless Functions
         ~~~~~~~~~~~~~~~~~~~~~~~~~

         You can :ref:`call serverless Atlas Functions <flutter-call-function>`
         that run in an App Services backend from your client application.

         Authenticate Users
         ~~~~~~~~~~~~~~~~~~

         Authenticate users with built-in and third-party :ref:`authentication
         providers <flutter-authenticate>`. Use the authenticated user to
         access App Services.

      .. image:: /images/illustrations/2024_branding/Technical_ACTION_WrenchSettings_Spot.png
         :alt: App Services Illustration

.. kicker:: Essential Documentation

Recommended Reading
-------------------

.. card-group::
   :columns: 2
   :style: extra-compact

   .. card::
      :headline: Flutter API Reference
      :cta: Flutter API Reference
      :url: https://pub.dev/documentation/realm/latest/
      :icon: general_content_tutorial
      :icon-alt: Reference Icon

      Explore Dart and Flutter reference docs for the SDK on pub.dev.

   .. card::
      :headline: Install the SDK
      :cta: Add the SDK to Flutter project
      :url: https://www.mongodb.com/docs/realm/sdk/flutter/install/
      :icon: /images/icons/flutter.svg
      :icon-alt: Flutter Logo Icon

      Learn how to add the SDK to your Flutter project.

Dart Standalone SDK
-------------------

In addition to using the SDK with Flutter, you can also use the SDK with 
projects that just use Dart, like a CLI application or web server.

The usage for the SDK with Dart is the same as the Flutter SDK, except you must
install and set up a separate package.

:ref:`Learn how to set up the SDK in your Dart project. <dart-install-steps>`

Example Projects
----------------

Explore engineering and expert-provided example projects to learn best 
practices and common development patterns using the Flutter SDK. Check out 
the :ref:`<realm-example-projects-table>` page for more Flutter sample apps.

.. card-group::
   :columns: 3
   :style: extra-compact
   
   .. card::
      :headline: Offline Login and Database Access
      :cta: Example project
      :url: https://github.com/realm/realm-dart-samples/tree/kilochat/kilochat
      :icon: realm_offline
      :icon-alt: Atlas Device SDK Offline Icon

      Log in a Device Sync user and open a synced database offline.

   .. card::
      :headline: User's Online State
      :cta: Example project
      :url: https://github.com/realm/realm-kotlin-samples/blob/main/AppServicesUsageSamples/apps/presence-detection/README.md
      :icon: general_content_users
      :icon-alt: Users Icon

      Detect connectivity and activity of users and devices. 
   
   .. card::
      :headline: Provider Shopper
      :cta: Example project
      :url: https://github.com/realm/realm-dart-samples/tree/main/provider_shopper
      :icon: mdb_static_hosting
      :icon-alt: Local Atlas Device SDK Icon

      Build a modified Flutter sample app that uses a non-synced database 
      to store data on the device.
