============
getLastError
============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. dbcommand:: getLastError

   The :dbcommand:`getLastError` command returns the error status of
   the last operation on the *current connection*. By default MongoDB
   does not provide a response to confirm the success or failure of a
   write operation, clients typically use :dbcommand:`getLastError` in
   combination with write operations to ensure that the write
   succeeds.

   Consider the following prototype form.

   .. code-block:: javascript

      { getLastError: 1 }

   The following options are available:

   :param boolean j: If ``true``, wait for the next journal commit
                     before returning, rather than a full disk
                     flush. If :binary:`~bin.mongod` does not have
                     journaling enabled, this option has no effect.

   :param w: When running with replication, this is the number of
             servers to replicate to before returning. A ``w`` value of
             1 indicates the primary only.  A ``w`` value of 2
             includes the primary and at least one secondary, etc.
             In place of a number, you may also set ``w`` to
             ``majority`` to indicate that the command should wait
             until the latest write propagates to a majority of
             replica set members. If using ``w``, you should also use
             ``wtimeout``. Specifying a value for ``w`` without also
             providing a ``wtimeout`` may cause
             :dbcommand:`getLastError` to block indefinitely.

   :param boolean fsync: If ``true``, wait for :binary:`~bin.mongod` to write this
                         data to disk before returning. Defaults to
                         false. In most cases, use the ``j`` option
                         to ensure durability and consistency of the
                         data set.

   :param integer wtimeout: Optional. Milliseconds. Specify a value in
                            milliseconds to control how long to
                            wait for write propagation to complete. If
                            replication does not complete in the given
                            timeframe, the :dbcommand:`getLastError`
                            command will return with an error status.

   .. seealso:: :ref:`Write Concern <write-concern>`, :ref:`Replica Set
      Write Concern <replica-set-write-concern>`, and
      :method:`db.getLastError()`.
