# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/map-reduce.txt:3
# b3c61935008643aa80f07b6f79806fc3
msgid "Map-Reduce"
msgstr ""

#: ../source/core/map-reduce.txt:7
# 43af59dc7286424cbde8bfadfd36c65e
msgid "Map-reduce is a data processing paradigm for condensing large volumes of data into useful *aggregated* results. For map-reduce operations, MongoDB provides the :dbcommand:`mapReduce` database command."
msgstr ""

#: ../source/core/map-reduce.txt:11
# 8b9188a828064cafa25f7c99aa7a7030
msgid "Consider the following map-reduce operation:"
msgstr ""

#: ../source/core/map-reduce.txt:15
# 921379d98b004978be177b46ef7857aa
msgid "In this map-reduce operation, MongoDB applies the *map* phase to each input document (i.e. the documents in the collection that match the query condition). The map function emits key-value pairs. For those keys that have multiple values, MongoDB applies the *reduce* phase, which collects and condenses the aggregated data. MongoDB then stores the results in a collection. Optionally, the output of the reduce function may pass through a *finalize* function to further condense or process the results of the aggregation."
msgstr ""

#: ../source/core/map-reduce.txt:24
# 47eba4e970814b419a4d1aeafa0d2438
msgid "All map-reduce functions in MongoDB are JavaScript and run within the :program:`mongod` process. Map-reduce operations take the documents of a single :term:`collection` as the *input* and can perform any arbitrary sorting and limiting before beginning the map stage. :dbcommand:`mapReduce` can return the results of a map-reduce operation as a document, or may write the results to collections. The input and the output collections may be sharded."
msgstr ""

#: ../source/core/map-reduce.txt:34
# 950dcce2da094ee0a2555a14e865e0d0
msgid "For most aggregation operations, the :doc:`/core/aggregation-pipeline` provides better performance and more coherent interface. However, map-reduce operations provide some flexibility that is not presently available in the aggregation pipeline."
msgstr ""

#: ../source/core/map-reduce.txt:41
# 2e55ed18c8034024ba3a9cf8752f4947
msgid "Map-Reduce JavaScript Functions"
msgstr ""

#: ../source/core/map-reduce.txt:43
# 4b83b71bbc5a4930b27719f880097359
msgid "In MongoDB, map-reduce operations use custom JavaScript functions to *map*, or associate, values to a key. If a key has multiple values mapped to it, the operation *reduces* the values for the key to a single object."
msgstr ""

#: ../source/core/map-reduce.txt:48
# 3300124794244675b08e953545716885
msgid "The use of custom JavaScript functions provide flexibility to map-reduce operations. For instance, when processing a document, the map function can create more than one key and value mapping or no mapping. Map-reduce operations can also use a custom JavaScript function to make final modifications to the results at the end of the map and reduce operation, such as perform additional calculations."
msgstr ""

#: ../source/core/map-reduce.txt:56
# 573e1855af9547b59c07e7ee8bcf7a2c
msgid "Map-Reduce Behavior"
msgstr ""

#: ../source/core/map-reduce.txt:58
# b08eacf808a842ee9f35907caebbc17f
msgid "In MongoDB, the map-reduce operation can write results to a collection or return the results inline. If you write map-reduce output to a collection, you can perform subsequent map-reduce operations on the same input collection that merge replace, merge, or reduce new results with previous results. See :dbcommand:`mapReduce` and :doc:`/tutorial/perform-incremental-map-reduce` for details and examples."
msgstr ""

#: ../source/core/map-reduce.txt:66
# 3e8d2da995f64b98b67743a0ceafecf0
msgid "When returning the results of a map reduce operation *inline*, the result documents must be within the :limit:`BSON Document Size` limit, which is currently 16 megabytes. For additional information on limits and restrictions on map-reduce operations, see the :doc:`/reference/command/mapReduce` reference page."
msgstr ""

#: ../source/core/map-reduce.txt:72
# 3f839d2c3454485aa59e6f4fe4178f70
msgid "MongoDB supports map-reduce operations on :doc:`sharded collections </core/sharding-introduction>`. Map-reduce operations can also output the results to a sharded collection. See :doc:`/core/map-reduce-sharded-collections`."
msgstr ""

