============================================================
Update a Configuration for a Third-Party Service Integration
============================================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. include:: /includes/fact-groups-projects-synonyms.rst

.. include:: /includes/api/base-api-uri.rst

Syntax
------

.. code-block:: http

   PUT /groups/{GROUP-ID}/integrations/{INTEGRATION-TYPE}

Request Path Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :widths: 15 10 75
   :header-rows: 1
   :stub-columns: 1

   * - Parameter
     - Necessity
     - Description

   * - ``{PROJECT-ID}``
     - Required
     - Project identifier.

   * - ``{INTEGRATION-TYPE}``
     - Required
     - Third-party service identifier. Accepted values are:

       .. cond:: onprem

          .. include:: /includes/third-party-services-onprem.rst

       .. cond:: cloud

          .. include:: /includes/third-party-services-cloud.rst

Request Query Parameters
~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/api/base-query-list-parameters.rst

Request Body Parameters
~~~~~~~~~~~~~~~~~~~~~~~

The request body should be a single integration view (like a |json|
configuration object) for a single third-party service. If a
configuration of the same ``type`` already exists, the request will
update the changed fields. If a configuration of the same ``type`` does
not exist, it will be added. Always include a ``type`` property equal
to the third-party service ``INTEGRATION_TYPE``.

.. cond:: cloud

   .. include:: /includes/extracts/api-third-party-integration-request-elements.rst

.. cond:: onprem

   .. include:: /includes/extracts/api-third-party-integration-request-elements-onprem.rst

Response Elements
-----------------

The response includes a ``results`` array which lists all third-party
integration configurations for the project as objects, and a
``totalCount`` of the services integrated with the project.

Each third-party integration configuration object includes a ``type``
property equal to its own integration type (``"type":
"PAGER_DUTY"`` for the PagerDuty service). Additionally, each
third-party service configuration object provides details specific to
that service. The following lists the properties returned for each
third-party service configuration object:

.. cond:: cloud

  .. include:: /includes/extracts/api-third-party-integration-response-elements.rst

.. cond:: onprem

  .. include:: /includes/extracts/api-third-party-integration-response-elements-onprem.rst

Example Request
---------------

.. code-block:: sh
   :linenos:

   curl --user "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest \
        --header "Accept: application/json" \
        --header "Content-Type: application/json" \
        --include \
        --request PUT "https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/integrations/SLACK" \
        --data '
          {
            "type": "SLACK",
            "apiToken": "1234567890",
            "teamName": "My Team"
          }'


Example Response
----------------

.. code-block:: json
   :linenos:

   {
     "links": [
       {
         "href": "https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/integrations/SLACK?pageNum=1&itemsPerPage=100",
         "rel": "self"
       }
     ],
     "results": [
       {
         "serviceKey": "******7890",
         "type": "PAGER_DUTY"
       },
       {
         "apiToken": "******7890",
         "channelName": "My Channel",
         "teamName": "My Team",
         "type": "SLACK"
       }
     ],
     "totalCount": 2
    }
