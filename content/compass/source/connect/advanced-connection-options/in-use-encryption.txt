.. _in-use-encryption-tab:

================================
In-Use Encryption Connection Tab
================================

.. meta::
   :description: Connect deployments with Queryable Encryption using the In-Use Encryption tab, specifying a Key Vault Namespace and selecting a KMS provider.

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

To use this connection option, you need a replica set or sharded
cluster. Your replica set can be a single node or larger. 

The :guilabel:`In-Use Encryption` connection tab allows you to connect your
deployments with :v6.0:`Queryable Encryption </core/queryable-encryption/>`.

Procedure
---------

.. procedure::
   :style: normal

   .. step:: Open the :guilabel:`New Connection` modal.

      .. include:: /includes/open-new-connection.rst

   .. step:: Click :guilabel:`Advanced Connection Options`.

      .. figure:: /images/compass/advanced-connection-options.png
         :figwidth: 690px
         :alt: New Advanced Connection Options

   .. step:: Click the :guilabel:`In-Use Encryption` tab.


       a) Provide a :guilabel:`Key Vault Namespace`.

          A :guilabel:`Key Vault Namespace` refers to a collection that 
          contains all the data keys used for encryption and decryption. 

          Specify a collection in which data encryption keys are stored in 
          the format ``<db>.<collection>``. The non-official default 
          database/collection for keyVault is ``encryption.__keyVault``.

       b) Select a :guilabel:`KMS Provider`.

          You can select from the following Key Management Systems: 

          - :ref:`Local KMS <local-kms>`
          
          - :ref:`AWS <aws-compass-encryption>`
          
          - :ref:`GCP <gcp-compass-encryption>`
          
          - :ref:`Azure <azure-compass-encryption>`
          
          - :ref:`KMIP <kmip-compass-encryption>`

   .. step::  Click Connect.

KMS Providers
*************

.. _local-kms:

Local KMS
~~~~~~~~~

You can locally manage your key as a KMS using the 
:v6.0:`Local KMS </core/queryable-encryption/fundamentals/kms-providers/#local-key-provider>`
option.  

Click :guilabel:`Generate Random Key` to generate a 96-byte long 
base64-encoded string. You need this key to access encrypted and 
ecrypted data.

.. warning::

   |compass-short| does not save KMS credentials by default. Copy 
   and save the key in an external location.

.. _aws-compass-encryption:

AWS
***

You can use :v6.0:`AWS </core/queryable-encryption/fundamentals/kms-providers/#amazon-web-services-kms>` 
to manage your keys.

Specify the following fields:

.. list-table::
   :header-rows: 1 
   :widths: 30 30 70

   * - Field
     - Required 
     - Description 

   * - Access Key Id 
     - Yes 
     - Value of your AWS access key Id.

   * - Secret Access Key
     - Yes 
     - Value of your AWS secret key.

   * - Session Token
     - No 
     - Value of your AWS session token. 
             
   * - Certificate Authority
     - No 
     - One or more certificate files from trusted Certificate 
       Authorities to validate the certificate provided by the deployment. 
             
   * - Client Certificate and Key
     - No 
     - Specifies the location of a local .pem file that contains 
       either the client's TLS/SSL X.509 certificate or the client's TLS/SSL 
       certificate and key.
              
   * - Client Key Password
     - No 
     - If the *Client Private Key* is protected with a password, 
       you must provide the password.

.. _gcp-compass-encryption:

GCP
***

You can use :v6.0:`Google Cloud Services </core/queryable-encryption/fundamentals/kms-providers/#google-cloud-platform-kms>` to manage your keys.

Specify the following fields:

.. list-table::
   :header-rows: 1 
   :widths: 30 30 70

   * - Field
     - Required 
     - Description 

   * - Service Account Email
     - Yes 
     - The service account email to authenticate.

   * - Private Key
     - Yes 
     - A base64-encoded private key.

   * - Endpoint
     - No 
     - A host with an optional port.

   * - Certificate Authority
     - No 
     - One or more certificate files from trusted Certificate 
       Authorities to validate the certificate provided by the deployment.
             
   * - Client Certificate and Key
     - No 
     - Specifies the location of a local .pem file that contains 
       either the client's TLS/SSL X.509 certificate or the client's TLS/SSL 
       certificate and key.
              
   * - Client Key Password
     - No 
     - If the *Client Private Key* is protected with a password, 
       you must provide the password.


.. _azure-compass-encryption:

Azure
*****

You can use :v6.0:`Azure Key Vault </core/queryable-encryption/fundamentals/kms-providers/#azure-key-vault>` 
to manage your keys.

Specify the following fields:

.. list-table::
   :header-rows: 1 
   :widths: 30 30 70

   * - Field
     - Required 
     - Description 

   * - Tenant Id 
     - Yes 
     - Identifies the organization for the account.

   * - Client Id 
     - Yes 
     - Authenticates a registered application.

   * - Client Secret
     - Yes
     - The client secret to authenticate a registered application.

   * - Identity Platform Endpoint
     - Yes
     - A host with an optional port. 

   * - Certificate Authority
     - No 
     - One or more certificate files from trusted Certificate 
       Authorities to validate the certificate provided by the deployment.
             
   * - Client Certificate and Key
     - No 
     - Specifies the location of a local .pem file that contains 
       either the client's TLS/SSL X.509 certificate or the client's TLS/SSL 
       certificate and key.

   * - Client Key Password
     - No 
     - If the *Client Private Key* is protected with a password, 
       you must provide the password.  

.. _kmip-compass-encryption:

KMIP
****

You can use :v6.0:`KMIP </core/queryable-encryption/fundamentals/kms-providers/#kmip>` 
to manage your keys. 

.. list-table::
   :header-rows: 1 
   :widths: 30 30 70

   * - Field
     - Required 
     - Description 

   * - Endpoint
     - Yes 
     - The endpoint consists of a hostname and port separated by a colon.

   * - Certificate Authority
     - No 
     - One or more certificate files from trusted Certificate 
       Authorities to validate the certificate provided by the deployment.

   * - Client Certificate and Key
     - No 
     - Specifies the location of a local .pem file that contains 
       either the client's TLS/SSL X.509 certificate or the client's TLS/SSL 
       certificate and key.

   * - Client Key Password
     - No 
     - If the *Client Private Key* is protected with a password, 
       you must provide the password.

(Optional) ``Specify an EncryptedFieldsMap``:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Add an optional client-side ``EncryptedFieldsMap`` for enhanced security.
For more information, see :v6.0:`Fields for Encryption </core/queryable-encryption/fundamentals/encrypt-and-query/#std-label-qe-fundamentals-encrypt-query>`.
