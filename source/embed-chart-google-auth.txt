.. _google-sdk-tutorial:

===============================================
Embed a Chart Authenticated with Google Sign-In
===============================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

This tutorial shows you how to configure a sample application to render 
an embedded, Google-authenticated chart on a web page.

Users must sign in with their Google account to view the chart. If a 
user doesn't sign in with Google, |charts-short| doesn't render the 
authenticated chart view.

Prerequisites
-------------

- You must be an |service|
  :atlas:`Project Owner </reference/user-roles/#project-roles>` to
  configure embedding authentication providers for your linked 
  |charts-short| instance.
- :ref:`create-new-dashboard`
- :ref:`create-new-chart`

Procedures
----------

Enable Authenticated Embedding for your Chart
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/enable-embedding-intro.rst

.. include:: /includes/steps/embed-chart-authenticated.rst

.. _create-google-id:

Create a Google Client ID
~~~~~~~~~~~~~~~~~~~~~~~~~

Create a Google API Console project to generate a Google Client ID. 
You will need your Google Client ID to configure |charts-short| to use 
Google Sign-In.

To create a Google API Console project, 
see `Integrating Google Sign-In into your web app <https://developers.google.com/identity/sign-in/web/sign-in>`__.

Configure |charts-short| to use Google Sign-In
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/steps/add-auth-google-tutorial.rst

Create a Web App to Display Your Chart
--------------------------------------

MongoDB offers a pre-built example app that shows how to use the 
Embedding SDK to display an embedded chart using Google authentication.

To run the example app, clone the
:github:`Atlas Charts Embedding Example - Google Authentication </mongodb-js/charts-embed-sdk/tree/master/examples/charts/authenticated-google>`
repository from GitHub and follow the instructions in the ``Readme`` 
file to begin using the app. You can run the app as-is with a sample 
chart, or you can customize it to use an existing chart.

Customize the Node.js App
~~~~~~~~~~~~~~~~~~~~~~~~~

All the lines you need to edit are marked with a comment containing
``~REPLACE~``.

.. include:: /includes/steps/customize-google-auth-app.rst

After you finish customizing the app, it's ready to run.
