#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/core/read-preference-mechanics.txt:6
msgid "Server Selection Algorithm"
msgstr ""

#: ../source/core/read-preference-mechanics.txt:16
msgid ""
"MongoDB drivers use a Server Selection algorithm to choose which replica "
"set member to use or, when connected to multiple :binary:`~bin.mongos` "
"instances, which :binary:`~bin.mongos` instance to use."
msgstr ""

#: ../source/core/read-preference-mechanics.txt:20
msgid "Server selection occurs once per operation."
msgstr ""

#: ../source/core/read-preference-mechanics.txt:30
msgid "Read Preference for Replica Sets"
msgstr ""

#: ../source/core/read-preference-mechanics.txt:32
msgid ""
"Server selection occurs once per operation and is governed by the "
":doc:`read preference </core/read-preference>` and ``localThresholdMS`` "
"settings."
msgstr ""

#: ../source/core/read-preference-mechanics.txt:36
#: ../source/core/read-preference-mechanics.txt:74
msgid "The read preference is re-evaluated for each operation."
msgstr ""

#: ../source/includes/fact-3.4-added-maxStalenessSeconds.rst:1
msgid ""
"MongoDB 3.4 adds the ``maxStalenessSeconds`` read preference option "
"``maxStalenessSeconds`` specifies the maximum replication lag, or "
"\"staleness\", that a :term:`secondary` can suffer and still be eligible "
"for read operations."
msgstr ""

#: ../source/includes/fact-important-maxStalenessSeconds-intended-use.rst:2
msgid ""
"The ``maxStalenessSeconds`` read preference option is intended for "
"applications that read from secondaries and want to avoid reading from a "
"secondary that has fallen overly far behind in replicating the primary's "
"writes. For example, a secondary might stop replicating due to a network "
"outage between itself and the primary. In that case, the client should "
"stop reading from the secondary until an administrator resolves the "
"outage and the secondary catches up."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-replica-sets.rst:5
#: ../source/includes/extracts/server-selection-read-preference-sharded-clusters.rst:5
msgid "Read Preference"
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-replica-sets.rst:6
#: ../source/includes/extracts/server-selection-read-preference-sharded-clusters.rst:6
msgid "Selection Process"
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-replica-sets.rst:8
#: ../source/includes/extracts/server-selection-read-preference-sharded-clusters.rst:8
msgid ":readmode:`primary` (Default)"
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-replica-sets.rst:10
msgid "The driver selects the primary."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-replica-sets.rst:12
#: ../source/includes/extracts/server-selection-read-preference-sharded-clusters.rst:12
msgid ":readmode:`secondary`"
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-replica-sets.rst:14
msgid ""
"The driver assembles a list of eligible secondary members. "
":ref:`maxStalenessSeconds <replica-set-read-preference-max-staleness>` "
"and :doc:`tag sets </tutorial/configure-replica-set-tag-sets>` can "
"further restrict the eligibility of the members."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-replica-sets.rst:20
msgid ""
"If the list of eligible members is not empty, the driver determines which"
" eligible member is the \"closest\" (i.e. the member with the lowest "
"average network round-trip-time) and calculates a latency window by "
"adding the average round-trip-time of this \"closest\" server and the "
"``localThresholdMS``. The  driver uses this latency window to pare down "
"the list of eligible members to those members that fall within this "
"window."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-replica-sets.rst:29
msgid ""
"From this list of eligible members that fall within the latency window, "
"the  driver randomly chooses an eligible member."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-replica-sets.rst:32
#: ../source/includes/extracts/server-selection-read-preference-sharded-clusters.rst:32
msgid ":readmode:`nearest`"
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-replica-sets.rst:34
msgid ""
"The driver assembles a list of eligible members (primary and "
"secondaries). :ref:`maxStalenessSeconds <replica-set-read-preference-max-"
"staleness>` and :doc:`tag sets </tutorial/configure-replica-set-tag-"
"sets>` can further limit the eligibility of the members."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-replica-sets.rst:41
msgid ""
"If the list of eligible members is not empty, the driver determines which"
" eligible member is the \"closest\" (i.e. the member with the lowest "
"average network round-trip-time) and calculates a latency window by "
"adding the average round-trip-time of this \"closest\" server and the "
"``localThresholdMS`` [#default-threshold]_. The driver uses this latency "
"window to pare down the list of eligible members to those members that "
"fall within this window."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-replica-sets.rst:50
msgid ""
"From this list of eligible members that fall within the latency window, "
"the driver randomly chooses an eligible member."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-replica-sets.rst:54
#: ../source/includes/extracts/server-selection-read-preference-sharded-clusters.rst:54
msgid ":readmode:`primaryPreferred`"
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-replica-sets.rst:56
msgid "If the primary is available, driver selects the primary."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-replica-sets.rst:58
#: ../source/includes/extracts/server-selection-read-preference-sharded-clusters.rst:58
msgid ""
"Otherwise, server selection follows the process for the read preference "
"``secondary``."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-replica-sets.rst:61
#: ../source/includes/extracts/server-selection-read-preference-sharded-clusters.rst:61
msgid ":readmode:`secondaryPreferred`"
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-replica-sets.rst:63
msgid ""
"Following the server selection process for the read preference "
"``secondary``, if a list of eligible secondary members is non-empty, "
"driver chooses an eligible secondary member."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-replica-sets.rst:67
msgid "Otherwise, if the list is empty, driver selects the primary."
msgstr ""

#: ../source/core/read-preference-mechanics.txt:48
msgid "Read Preference for Sharded Clusters"
msgstr ""

#: ../source/core/read-preference-mechanics.txt:51
msgid "Load Balancing"
msgstr ""

#: ../source/core/read-preference-mechanics.txt:53
msgid ""
"If there is more than one :binary:`~bin.mongos` instance in the "
"connection seed list, the driver determines which :binary:`~bin.mongos` "
"is the \"closest\" (i.e. the member with the lowest average network "
"round-trip-time) and calculates the latency window by adding the average "
"round-trip-time of this \"closest\" :binary:`~bin.mongos` instance and "
"the ``localThresholdMS``. The driver will load balance randomly across "
"the :binary:`~bin.mongos` instances that fall within the latency window."
msgstr ""

#: ../source/core/read-preference-mechanics.txt:63
msgid "Read Preference and Shards"
msgstr ""

#: ../source/core/read-preference-mechanics.txt:65
msgid ""
"For sharded clusters that have replica set shards, :binary:`~bin.mongos` "
"applies the read preference when reading from the shards. Server "
"selection is governed by the :doc:`read preference </core/read-"
"preference>` and :setting:`replication.localPingThresholdMs` settings."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-sharded-clusters.rst:10
msgid "The :binary:`~bin.mongos` selects the primary."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-sharded-clusters.rst:14
msgid ""
"The :binary:`~bin.mongos` assembles a list of eligible secondary members."
" :ref:`maxStalenessSeconds <replica-set-read-preference-max-staleness>` "
"and :doc:`tag sets </tutorial/configure-replica-set-tag-sets>` can "
"further restrict the eligibility of the members."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-sharded-clusters.rst:20
msgid ""
"If the list of eligible members is not empty, the :binary:`~bin.mongos` "
"determines which eligible member is the \"closest\" (i.e. the member with"
" the lowest average network round-trip-time) and calculates a latency "
"window by adding the average round-trip-time of this \"closest\" server "
"and the :setting:`replication.localPingThresholdMs` (or "
":option:`--localThreshold <mongos --localThreshold>` command line "
"option). The  :binary:`~bin.mongos` uses this latency window to pare down"
" the list of eligible members to those members that fall within this "
"window."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-sharded-clusters.rst:29
msgid ""
"From this list of eligible members that fall within the latency window, "
"the  :binary:`~bin.mongos` randomly chooses an eligible member."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-sharded-clusters.rst:34
msgid ""
"The :binary:`~bin.mongos` assembles a list of eligible members (primary "
"and secondaries). :ref:`maxStalenessSeconds <replica-set-read-preference-"
"max-staleness>` and :doc:`tag sets </tutorial/configure-replica-set-tag-"
"sets>` can further limit the eligibility of the members."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-sharded-clusters.rst:41
msgid ""
"If the list of eligible members is not empty, the :binary:`~bin.mongos` "
"determines which eligible member is the \"closest\" (i.e. the member with"
" the lowest average network round-trip-time) and calculates a latency "
"window by adding the average round-trip-time of this \"closest\" server "
"and the :setting:`replication.localPingThresholdMs` (or "
":option:`--localThreshold <mongos --localThreshold>` command line option)"
" [#default-threshold]_. The :binary:`~bin.mongos` uses this latency "
"window to pare down the list of eligible members to those members that "
"fall within this window."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-sharded-clusters.rst:50
msgid ""
"From this list of eligible members that fall within the latency window, "
"the :binary:`~bin.mongos` randomly chooses an eligible member."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-sharded-clusters.rst:56
msgid "If the primary is available, :binary:`~bin.mongos` selects the primary."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-sharded-clusters.rst:63
msgid ""
"Following the server selection process for the read preference "
"``secondary``, if a list of eligible secondary members is non-empty, "
":binary:`~bin.mongos` chooses an eligible secondary member."
msgstr ""

#: ../source/includes/extracts/server-selection-read-preference-sharded-clusters.rst:67
msgid ""
"Otherwise, if the list is empty, :binary:`~bin.mongos` selects the "
"primary."
msgstr ""

#: ../source/core/read-preference-mechanics.txt:78
msgid "The default threshold value is 15 milliseconds."
msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid "Read Preference Processes"
#~ msgstr ""

#~ msgid ""
#~ "MongoDB drivers use the following "
#~ "procedures to direct operations to "
#~ "replica sets and sharded clusters. To"
#~ " determine how to route their "
#~ "operations, applications periodically update "
#~ "their view of the replica set's "
#~ "state, identifying which members are up"
#~ " or down, which member is "
#~ ":term:`primary`, and verifying the latency "
#~ "to each :program:`mongod` instance."
#~ msgstr ""

#~ msgid "Member Selection"
#~ msgstr ""

#~ msgid ""
#~ "Clients, by way of their drivers, "
#~ "and :program:`mongos` instances for sharded"
#~ " clusters, periodically update their view"
#~ " of the replica set's state."
#~ msgstr ""

#~ msgid ""
#~ "When you select non-:readmode:`primary` read"
#~ " preference, the driver will determine "
#~ "which member to target using the "
#~ "following process:"
#~ msgstr ""

#~ msgid ""
#~ "Assembles a list of suitable members,"
#~ " taking into account member type "
#~ "(i.e. secondary, primary, or all "
#~ "members)."
#~ msgstr ""

#~ msgid "Excludes members not matching the tag sets, if specified."
#~ msgstr ""

#~ msgid ""
#~ "Determines which suitable member is the"
#~ " closest to the client in absolute"
#~ " terms."
#~ msgstr ""

#~ msgid ""
#~ "Builds a list of members that are"
#~ " within a defined ping distance (in"
#~ " milliseconds) of the \"absolute nearest\""
#~ " member."
#~ msgstr ""

#~ msgid ""
#~ "Applications can configure the threshold "
#~ "used in this stage. The default "
#~ "\"acceptable latency\" is 15 milliseconds, "
#~ "which you can override in the "
#~ "drivers with their own "
#~ "``secondaryAcceptableLatencyMS`` option. For "
#~ ":program:`mongos` you can use the "
#~ ":option:`--localThreshold <mongos --localThreshold>` "
#~ "or :setting:`~replication.localPingThresholdMs` runtime"
#~ " options to set this value."
#~ msgstr ""

#~ msgid ""
#~ "Selects a member from these hosts "
#~ "at random. The member receives the "
#~ "read operation."
#~ msgstr ""

#~ msgid ""
#~ "Drivers can then associate the thread"
#~ " or connection with the selected "
#~ "member. This :ref:`request association "
#~ "<replica-set-read-preference-behavior-"
#~ "requests>` is configurable by the "
#~ "application. See your :doc:`driver "
#~ "</applications/drivers>` documentation about request"
#~ " association configuration and default "
#~ "behavior."
#~ msgstr ""

#~ msgid "Request Association"
#~ msgstr ""

#~ msgid ""
#~ "*Request association* is configurable by "
#~ "the application. See your :doc:`driver "
#~ "</applications/drivers>` documentation about request"
#~ " association configuration and default "
#~ "behavior."
#~ msgstr ""

#~ msgid ""
#~ "Because :term:`secondary` members of a "
#~ ":term:`replica set` may lag behind the"
#~ " current :term:`primary` by different "
#~ "amounts, reads for :term:`secondary` members"
#~ " may reflect data at different points"
#~ " in time. To prevent sequential reads"
#~ " from jumping around in time, the "
#~ "driver **can** associate application threads"
#~ " to a specific member of the "
#~ "set after the first read, thereby "
#~ "preventing reads from other members. The"
#~ " thread will continue to read from"
#~ " the same member until:"
#~ msgstr ""

#~ msgid "The application performs a read with a different read preference,"
#~ msgstr ""

#~ msgid "The thread terminates, or"
#~ msgstr ""

#~ msgid ""
#~ "The client receives a socket exception,"
#~ " as is the case when there's a"
#~ " network error or when the "
#~ ":program:`mongod` closes connections during a"
#~ " :term:`failover`.  This triggers a "
#~ ":ref:`retry <replica-set-read-preference-"
#~ "behavior-retry>`, which may be "
#~ "transparent to the application."
#~ msgstr ""

#~ msgid ""
#~ "When using request association, if the"
#~ " client detects that the set has "
#~ "elected a new :term:`primary`, the "
#~ "driver will discard all associations "
#~ "between threads and members."
#~ msgstr ""

#~ msgid "Auto-Retry"
#~ msgstr ""

#~ msgid ""
#~ "Connections between MongoDB drivers and "
#~ ":program:`mongod` instances in a "
#~ ":term:`replica set` must balance two "
#~ "concerns:"
#~ msgstr ""

#~ msgid ""
#~ "The client should attempt to prefer "
#~ "current results, and any connection "
#~ "should read from the same member "
#~ "of the replica set as much as "
#~ "possible. Requests should prefer :ref:`request"
#~ " association <replica-set-read-"
#~ "preference-behavior-requests>` (e.g. *pinning*)."
#~ msgstr ""

#~ msgid ""
#~ "The client should minimize the amount"
#~ " of time that the database is "
#~ "inaccessible as the result of a "
#~ "connection issue, networking problem, or "
#~ ":term:`failover` in a replica set."
#~ msgstr ""

#~ msgid "As a result, MongoDB drivers:"
#~ msgstr ""

#~ msgid ""
#~ "Reuse a connection to a specific "
#~ ":program:`mongod` for as long as "
#~ "possible after establishing a connection "
#~ "to that instance. This connection is "
#~ "*pinned* to this :program:`mongod`."
#~ msgstr ""

#~ msgid ""
#~ "Attempt to reconnect to a new "
#~ "member, obeying existing :ref:`read preference"
#~ " modes <replica-set-read-preference-"
#~ "modes>`, if the connection to "
#~ ":program:`mongod` is lost."
#~ msgstr ""

#~ msgid ""
#~ "Reconnections are transparent to the "
#~ "application itself. If the connection "
#~ "permits reads from :term:`secondary` members,"
#~ " after reconnecting, the application can"
#~ " receive two sequential reads returning "
#~ "from different secondaries. Depending on "
#~ "the state of the individual secondary"
#~ " member's replication, the documents can"
#~ " reflect the state of your database"
#~ " at different moments."
#~ msgstr ""

#~ msgid ""
#~ "Return an error *only* after attempting"
#~ " to connect to three members of "
#~ "the set that match the :ref:`read "
#~ "preference mode <replica-set-read-"
#~ "preference-modes>` and :ref:`tag set "
#~ "<replica-set-read-preference-tag-sets>`."
#~ "  If there are fewer than three "
#~ "members of the set, the client "
#~ "will error after connecting to all "
#~ "existing members of the set."
#~ msgstr ""

#~ msgid ""
#~ "After this error, the driver selects "
#~ "a new member using the specified "
#~ "read preference mode. In the absence "
#~ "of a specified read preference, the "
#~ "driver uses :readmode:`primary`."
#~ msgstr ""

#~ msgid ""
#~ "After detecting a failover situation, "
#~ "[#fn-failover]_ the driver attempts to "
#~ "refresh the state of the replica "
#~ "set as quickly as possible."
#~ msgstr ""

#~ msgid ""
#~ ":program:`mongos` instances take a slightly"
#~ " different approach. :program:`mongos` instances"
#~ " return connections to secondaries to "
#~ "the connection pool after every request."
#~ " As a result, the :program:`mongos` "
#~ "reevaluates read preference for every "
#~ "operation."
#~ msgstr ""

#~ msgid ""
#~ "When a :term:`failover` occurs, all "
#~ "members of the set close all "
#~ "client connections that produce a socket"
#~ " error in the driver. This behavior"
#~ " prevents or minimizes :term:`rollback`."
#~ msgstr ""

#~ msgid "Read Preference in Sharded Clusters"
#~ msgstr ""

#~ msgid ""
#~ "In most :term:`sharded clusters <sharded "
#~ "cluster>`, each shard consists of a "
#~ ":term:`replica set`. As such, read "
#~ "preferences are also applicable. With "
#~ "regard to read preference, read "
#~ "operations in a sharded cluster are "
#~ "identical to unsharded replica sets."
#~ msgstr ""

#~ msgid ""
#~ "Unlike simple replica sets, in sharded"
#~ " clusters, all interactions with the "
#~ "shards pass from the clients to "
#~ "the :program:`mongos` instances that are "
#~ "actually connected to the set members."
#~ " :program:`mongos` is then responsible for"
#~ " the application of read preferences, "
#~ "which is transparent to applications."
#~ msgstr ""

#~ msgid ""
#~ "There are no configuration changes "
#~ "required for full support of read "
#~ "preference modes in sharded environments, "
#~ "as long as the :program:`mongos` is "
#~ "at least version 2.2. All "
#~ ":program:`mongos` maintain their own "
#~ "connection pool to the replica set "
#~ "members. As a result:"
#~ msgstr ""

#~ msgid ""
#~ "A request without a specified preference"
#~ " has :readmode:`primary`, the default, "
#~ "unless, the :program:`mongos` reuses an "
#~ "existing connection that has a different"
#~ " mode set."
#~ msgstr ""

#~ msgid "To prevent confusion, always explicitly set your read preference mode."
#~ msgstr ""

#~ msgid ""
#~ "All :readmode:`nearest` and latency "
#~ "calculations reflect the connection between"
#~ " the :program:`mongos` and the "
#~ ":program:`mongod` instances, not the client"
#~ " and the :program:`mongod` instances."
#~ msgstr ""

#~ msgid ""
#~ "This produces the desired result, "
#~ "because all results must pass through"
#~ " the :program:`mongos` before returning to"
#~ " the client."
#~ msgstr ""

# 91ef0cce254949c1a5f275b30045fa78
#~ msgid "On this page"
#~ msgstr ""

# ab9f08cec56e4dba91bc8098dd3bd4d9
#~ msgid ""
#~ "MongoDB drivers use a Server Selection"
#~ " algorithm to choose which replica "
#~ "set member to use or, when "
#~ "connected to multiple :program:`mongos` "
#~ "instances, which :program:`mongos` instance to"
#~ " use."
#~ msgstr ""

# 8f7f217f7ef14ba484bb08f546800e0c
#~ msgid ""
#~ "The driver assembles a list of "
#~ "eligible secondary members. :doc:`Tag sets "
#~ "</tutorial/configure-replica-set-tag-sets>`"
#~ " and :doc:`read concern </reference/read-"
#~ "concern>` can further restrict the "
#~ "eligibility of the members."
#~ msgstr ""

# 7b374a1c1d0b4267b03721dad77621c0
#~ msgid ""
#~ "The driver assembles a list of "
#~ "eligible members (primary and secondaries)."
#~ " :doc:`Tag sets </tutorial/configure-replica-"
#~ "set-tag-sets>` and :doc:`read "
#~ "concern</reference/read-concern>` can further "
#~ "limit the eligibility of the members."
#~ msgstr ""

# 612005202d2f4488905b32c858796750
#~ msgid ""
#~ "Following the server selection process "
#~ "for the for the read preference "
#~ "``secondary``, if a list of eligible "
#~ "secondary members is non-empty, driver"
#~ " chooses an eligible secondary member."
#~ msgstr ""

# 9ac868c54dbd4316a5d645337e98bd3e
#~ msgid ""
#~ "If there is more than one "
#~ ":program:`mongos` instances in the connection"
#~ " seed list, the driver determines "
#~ "which :program:`mongos` is the \"closest\" "
#~ "(i.e. the member with the lowest "
#~ "average network round-trip-time) and "
#~ "calculates the latency window by adding"
#~ " the average round-trip-time of "
#~ "this \"closest\" :program:`mongos` instance "
#~ "and the ``localThresholdMS``. The driver "
#~ "will load balance randomly across the"
#~ " :program:`mongos` instances that fall "
#~ "within the latency window."
#~ msgstr ""

# 0062f9834dae44059ca5f47f44703418
#~ msgid ""
#~ "For sharded clusters that have replica"
#~ " set shards, :program:`mongos` applies the"
#~ " read preference when reading from "
#~ "the shards. Server selection is governed"
#~ " by the :doc:`read preference </core"
#~ "/read-preference>` and "
#~ ":setting:`replication.localPingThresholdMs` settings."
#~ msgstr ""

# 3ca83278dfd0471d838c4263241a8451
#~ msgid "The :program:`mongos` selects the primary."
#~ msgstr ""

# d1b0a30e967c4e549989268f95f09a55
#~ msgid ""
#~ "The :program:`mongos` assembles a list "
#~ "of eligible secondary members. :doc:`Tag "
#~ "sets </tutorial/configure-replica-set-tag-"
#~ "sets>` and :doc:`read concern </reference"
#~ "/read-concern>` can further restrict the"
#~ " eligibility of the members."
#~ msgstr ""

# 825757f4e0704269ba5d028be45c26b4
#~ msgid ""
#~ "If the list of eligible members is"
#~ " not empty, the :program:`mongos` "
#~ "determines which eligible member is the"
#~ " \"closest\" (i.e. the member with "
#~ "the lowest average network round-"
#~ "trip-time) and calculates a latency "
#~ "window by adding the average round-"
#~ "trip-time of this \"closest\" server "
#~ "and the :setting:`replication.localPingThresholdMs` "
#~ "(or :option:`--localThreshold` command line "
#~ "option). The  :program:`mongos` uses this "
#~ "latency window to pare down the "
#~ "list of eligible members to those "
#~ "members that fall within this window."
#~ msgstr ""

# 74bf972c30b64d94b9a8fe8c3fe7fd08
#~ msgid ""
#~ "From this list of eligible members "
#~ "that fall within the latency window, "
#~ "the  :program:`mongos` randomly chooses an "
#~ "eligible member."
#~ msgstr ""

# 8c87c1bfea8f4fb99e711c5a98ccdc1c
#~ msgid ""
#~ "The :program:`mongos` assembles a list "
#~ "of eligible members (primary and "
#~ "secondaries). :doc:`Tag sets </tutorial"
#~ "/configure-replica-set-tag-sets>` and "
#~ ":doc:`read concern</reference/read-concern>` can "
#~ "further limit the eligibility of the "
#~ "members."
#~ msgstr ""

# 47627e73cf8b47ec915cc07780f4457e
#~ msgid ""
#~ "If the list of eligible members is"
#~ " not empty, the :program:`mongos` "
#~ "determines which eligible member is the"
#~ " \"closest\" (i.e. the member with "
#~ "the lowest average network round-"
#~ "trip-time) and calculates a latency "
#~ "window by adding the average round-"
#~ "trip-time of this \"closest\" server "
#~ "and the :setting:`replication.localPingThresholdMs` "
#~ "(or :option:`--localThreshold` command line "
#~ "option) [#default-threshold]_. The "
#~ ":program:`mongos` uses this latency window "
#~ "to pare down the list of eligible"
#~ " members to those members that fall"
#~ " within this window."
#~ msgstr ""

# 9b839b8027934c2bb362d18148c14110
#~ msgid ""
#~ "From this list of eligible members "
#~ "that fall within the latency window, "
#~ "the :program:`mongos` randomly chooses an "
#~ "eligible member."
#~ msgstr ""

# 13cec2a1f0c4423aa01506826f35521e
#~ msgid "If the primary is available, :program:`mongos` selects the primary."
#~ msgstr ""

# 848426db60f7471f98e1522aec6d0db1
#~ msgid ""
#~ "Following the server selection process "
#~ "for the for the read preference "
#~ "``secondary``, if a list of eligible "
#~ "secondary members is non-empty, "
#~ ":program:`mongos` chooses an eligible "
#~ "secondary member."
#~ msgstr ""

# 6f897430b7e34dd3b8e4fda6fcd6fbc6
#~ msgid "Otherwise, if the list is empty, :program:`mongos` selects the primary."
#~ msgstr ""

# c9bd1a7720d84115bd84caa7e423a9a3
# 03fbfbfbf0504cc0886ff30ff978b972
# 91f91cd4f30c4bec97e7af04422c9a5b
# 88e7b4ae16114c1dbf11ceb91385199c
# 42512709dc89408b9340f40ddc49405e
# 4e641d218a9f40568380f6f3e11b1331
#~ msgid "read preference"
#~ msgstr ""

# c9bd1a7720d84115bd84caa7e423a9a3
#~ msgid "behavior"
#~ msgstr ""

# 03fbfbfbf0504cc0886ff30ff978b972
#~ msgid "ping time"
#~ msgstr ""

# 91f91cd4f30c4bec97e7af04422c9a5b
#~ msgid "nearest"
#~ msgstr ""

# 88e7b4ae16114c1dbf11ceb91385199c
#~ msgid "member selection"
#~ msgstr ""

# 42512709dc89408b9340f40ddc49405e
#~ msgid "sharding"
#~ msgstr ""

# 4e641d218a9f40568380f6f3e11b1331
#~ msgid "mongos"
#~ msgstr ""

