# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/command/findAndModify.txt:3
# 089a6b1673a0421081a48989a1b0657b
msgid "findAndModify"
msgstr ""

#: ../source/reference/command/findAndModify.txt:12
# f858ca5f3b77436e8d25aac7300644cd
msgid "Definition"
msgstr ""

#: ../source/reference/command/findAndModify.txt:16
# 74cb90fc56554fb5b7703ab8ec4b4585
msgid "The :dbcommand:`findAndModify` command modifies and returns a single document. By default, the returned document does not include the modifications made on the update. To return the document with the modifications made on the update, use the ``new`` option."
msgstr ""

#: ../source/reference/command/findAndModify.txt:21
# 5d60ae8d3657470ca0f9ea8e7b23605c
msgid "The command has the following syntax:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:36
# 4c67b9558dd1413ab30dd10e60538e8f
msgid "The :dbcommand:`findAndModify` command takes the following fields:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:44
# 10cb499098c14169b67fa7236734d070
msgid "Output"
msgstr ""

#: ../source/reference/command/findAndModify.txt:46
# 102b6f6bb8154127ba57437b07f9c803
msgid "The return document contains the following fields:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:48
# 2036ad65bdf5483f8cef67cb631462d1
msgid "The ``lastErrorObject`` field that returns the details of the command:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:51
# 4bdcafc6cb074be199c792b0dfcaf5e8
msgid "The ``updatedExisting`` field **only** appears if the command specifies an ``update`` or an ``update`` with ``upsert: true``; i.e. the field does not appear for a ``remove``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:55
# 294f9ca2e232411f9624720d9b4434c5
msgid "The ``upserted`` field **only** appears if the ``update`` with the ``upsert: true`` operation results in an insertion."
msgstr ""

#: ../source/reference/command/findAndModify.txt:58
# 83587777b6704708b1713c7b1fbed2d0
msgid "The ``value`` field that returns either:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:60
# 12ff5566a3a24ec7ae8f213a670583b2
msgid "the original (i.e. pre-modification) document if ``new`` is false, or"
msgstr ""

#: ../source/reference/command/findAndModify.txt:63
# 84c3cac4a8a949e393f3c5294f7e7718
msgid "the modified or inserted document if ``new: true``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:65
# 6f078aa780344ecdbb37f6da1acba489
msgid "The ``ok`` field that returns the status of the command."
msgstr ""

#: ../source/reference/command/findAndModify.txt:69
# 9a15475d854c4f6fb3f010eca8169552
msgid "If the :dbcommand:`findAndModify` finds no matching document, then:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:72
# d6f1d97ac8414ab7858600c6489da882
msgid "for ``update`` or ``remove`` operations, ``lastErrorObject`` does not appear in the return document and the ``value`` field holds a ``null``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:80
# ca1f78997ab349c88a94fe419d46d7cc
msgid "for ``update`` with ``upsert: true`` operation that results in an insertion, if the command also specifies ``new`` is ``false`` **and** specifies a ``sort``, the return document has a ``lastErrorObject``, ``value``, and ``ok`` fields, but the ``value`` field holds an empty document ``{}``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:86
# 44949d620d424e11a828a2e72bca9249
msgid "for ``update`` with ``upsert: true`` operation that results in an insertion, if the command also specifies ``new`` is ``false`` but does **not** specify a ``sort``, the return document has a ``lastErrorObject``, ``value``, and ``ok`` fields, but the ``value`` field holds a ``null``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:93
# 95818fd4fe064c4c89ba11f4333935b3
msgid "Behavior"
msgstr ""

#: ../source/reference/command/findAndModify.txt:96
# 36211a99627846c48b8e73319a71a519
msgid "Upsert and Unique Index"
msgstr ""

#: ../source/reference/command/findAndModify.txt:98
# 8307daf7a1d048b7b80c5e701fde8c40
msgid "When the :dbcommand:`findAndModify` command includes the ``upsert: true`` option **and** the query field(s) is not uniquely indexed, the command could insert a document multiple times in certain circumstances."
msgstr ""

#: ../source/reference/command/findAndModify.txt:102
# 5ea2343c3f564c3aae5e81c9f7ddb8e9
msgid "Consider an example where no document with the name ``Andy`` exists and multiple clients issue the following command:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:117
# cece4238944e4f55bbc13e0570bf982c
msgid "If all the commands finish the ``query`` phase before any command starts the ``modify`` phase, **and** there is no unique index on the ``name`` field, the commands may each perform an upsert, creating multiple duplicate documents."
msgstr ""

#: ../source/reference/command/findAndModify.txt:122
# 2f5d5c04e6964e5480bc22d513266791
msgid "To prevent the creation of multiple duplicate documents, create a :ref:`unique index <index-type-unique>` on the ``name`` field. With the unique index in place, then the multiple :dbcommand:`findAndModify` commands will exhibit one of the following behaviors:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:128
# bfabdd2f68354e3c93282a3e050be2ae
msgid "Exactly one :dbcommand:`findAndModify` successfully inserts a new document."
msgstr ""

#: ../source/reference/command/findAndModify.txt:131
# 086f8260f9794b42a50897e0f197f630
msgid "Zero or more :dbcommand:`findAndModify` commands update the newly inserted document."
msgstr ""

#: ../source/reference/command/findAndModify.txt:134
# cc021759d5af4d87967903b60623b1c4
msgid "Zero or more :dbcommand:`findAndModify` commands fail when they attempt to insert a duplicate. If the command fails due to a unique index constraint violation, you can retry the command. Absent a delete of the document, the retry should not fail."
msgstr ""

#: ../source/reference/command/findAndModify.txt:140
# 472148fa866c4655822bba74e411dc59
msgid "Sharded Collections"
msgstr ""

#: ../source/reference/command/findAndModify.txt:142
# fc13045476444ba48d8a1c904f40743d
msgid "When using :dbcommand:`findAndModify` in a :term:`sharded <sharding>` environment, the ``query`` must contain the :term:`shard key` for all operations against the shard cluster. :dbcommand:`findAndModify` operations issued against :program:`mongos` instances for non-sharded collections function normally."
msgstr ""

#: ../source/reference/command/findAndModify.txt:152
# 01c9222806d845e59f0fd8489e905c22
msgid "Comparisons with the ``update`` Method"
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:1
# 843dbb6d70624870a6772a6c1fd90f55
msgid "When updating a document, |operation| and the :method:`~db.collection.update()` method operate differently:"
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:4
# 0d69fa133aad4714b24b3e97bc07df7b
msgid "By default, both operations modify a single document. However, the :method:`~db.collection.update()` method with its ``multi`` option can modify more than one document."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:8
# 89a89aba85144109b251f1577cd8dd2c
msgid "If multiple documents match the update criteria, for |operation|, you can specify a ``sort`` to provide some measure of control on which document to update."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:12
# 91b159a8f45c4643b6623f707fa0487d
msgid "With the default behavior of the :method:`~db.collection.update()` method, you cannot specify which single document to update when multiple documents match."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:16
# 9eb55b5846004340ba7a1d8864a09da1
msgid "By default, |operation| method returns |return-object|. To obtain the updated document, use the ``new`` option."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:19
# e2797fce0816429bb21f2624eab0032f
msgid "The :method:`~db.collection.update()` method returns a :method:`WriteResult` object that contains the status of the operation. To return the updated document, use the :method:`~db.collection.find()` method. However, other updates may have modified the document between your update and the document retrieval. Also, if the update modified only a single document but multiple documents matched, you will need to use additional logic to identify the updated document."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:27
# e464d55ad6d44880a719a4742ba92e31
msgid "You cannot specify a :doc:`write concern </core/write-concern>` to |operation| to override the default write concern whereas, starting in MongoDB 2.6, you can specify a write concern to the :method:`~db.collection.update()` method."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:32
# 81ba94183e4d4754aef1e4d73faa514d
msgid "When modifying a *single* document, both |operation| and the :method:`~db.collection.update()` method *atomically* update the document. See :doc:`/core/write-operations-atomicity` for more details about interactions and order of operations of these methods."
msgstr ""

#: ../source/reference/command/findAndModify.txt:161
# 80569c10d79e4367a93f2f2d746b99b0
msgid "Examples"
msgstr ""

#: ../source/reference/command/findAndModify.txt:164
# f0fc7da1ed6e45cb9b34399f04b7413d
msgid "Update and Return"
msgstr ""

#: ../source/reference/command/findAndModify.txt:166
# c2e9f70131714390afff390d8331abad
msgid "The following command updates an existing document in the ``people`` collection where the document matches the ``query`` criteria:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:180
# eea11e6b952649d1ab58c035586293d3
msgid "This command performs the following actions:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:182
# 72fc884addb9498b94bbc88bb0f8e9b6
msgid "The ``query`` finds a document in the ``people`` collection where the ``name`` field has the value ``Tom``, the ``state`` field has the value ``active`` and the ``rating`` field has a value :operator:`greater than <$gt>` 10."
msgstr ""

#: ../source/reference/command/findAndModify.txt:187
# e798c96f2eae41c49de68fcafce65a6f
msgid "The ``sort`` orders the results of the query in ascending order. If multiple documents meet the ``query`` condition, the command will select for modification the first document as ordered by this ``sort``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:192
# faf0ae7b6e554c199dc94ed96ee34f1b
msgid "The ``update`` :operator:`increments <$inc>` the value of the ``score`` field by 1."
msgstr ""

#: ../source/reference/command/findAndModify.txt:195
# 3d03daab4a5c470296e00a73e51af443
msgid "The command returns a document with the following fields:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:197
# c16a554e244b43c3b3fbe43014a7dafb
msgid "The ``lastErrorObject`` field that contains the details of the command, including the field ``updatedExisting`` which is ``true``, and"
msgstr ""

#: ../source/reference/command/findAndModify.txt:201
# 71dbc9ae543b41d2997927016060b25e
msgid "The ``value`` field that contains the original (i.e. pre-modification) document selected for this update:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:226
# 1f5148f219174ec88f8650ba612df211
msgid "To return the modified document in the ``value`` field, add the ``new:true`` option to the command."
msgstr ""

#: ../source/reference/command/findAndModify.txt:229
# b8f230cceb1d4f419efdb7bd213ae4fd
msgid "If no document match the ``query`` condition, the command returns a document that contains ``null`` in the ``value`` field:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:237
# 100b0c49647b4acf8b5a93a44de16341
msgid "The :program:`mongo` shell and many :term:`drivers <driver>` provide a :method:`~db.collection.findAndModify()` helper method. Using the shell helper, this previous operation can take the following form:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:250
# bcd817643f7c4273a47bb12953d7dc9f
msgid "However, the :method:`~db.collection.findAndModify()` shell helper method returns only the unmodified document, or if ``new`` is ``true``, the modified document."
msgstr ""

#: ../source/reference/command/findAndModify.txt:265
# 6580a31b7046472d97876848c37d83b9
msgid "``upsert: true``"
msgstr ""

#: ../source/reference/command/findAndModify.txt:267
# 9269ea762df04e8b885eba58ad01ca58
msgid "The following :dbcommand:`findAndModify` command includes the ``upsert: true`` option for the ``update`` operation to either update a matching document or, if no matching document exists, create a new document:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:283
# 7339428fed57478d875184fe26306d73
msgid "If the command finds a matching document, the command performs an update."
msgstr ""

#: ../source/reference/command/findAndModify.txt:285
# 0fdb86d4c64143f9bb8371d6b97d7b49
msgid "If the command does **not** find a matching document, the ``update`` with :term:`upsert: true <upsert>` operation results in an insertion and returns a document with the following fields:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:289
# 86efef985ea944bcba5bc3f98b21afd0
msgid "The ``lastErrorObject`` field that contains the details of the command, including the field ``upserted`` that contains the ``ObjectId`` of the newly inserted document, and"
msgstr ""

#: ../source/reference/command/findAndModify.txt:293
# 4b324d96a44e4ffdbeb0606cb7a19d02
msgid "The ``value`` field that contains an empty document ``{}`` as the original document because the command included the ``sort`` option:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:315
# 262f45ac8ef448f3a873ce08ab4b2640
msgid "If the command did **not** include the ``sort`` option, the ``value`` field would contain ``null``:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:331
# bb71647d14b747d89db5a40f214ec56a
msgid "Return New Document"
msgstr ""

#: ../source/reference/command/findAndModify.txt:333
# f4aa9145337444b393b7d592cb92bed7
msgid "The following :dbcommand:`findAndModify` command includes both ``upsert: true`` option and the ``new:true`` option. The command either updates a matching document and returns the updated document or, if no matching document exists, inserts a document and returns the newly inserted document in the ``value`` field."
msgstr ""

#: ../source/reference/command/findAndModify.txt:339
# c25896053ea44ce99630f850d5f7dd68
msgid "In the following example, no document in the ``people`` collection matches the ``query`` condition:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:355
# 262e07a2fcdd4432bbc120ff01cabb8a
msgid "The command returns the newly inserted document in the ``value`` field:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:381
# 970234d86929401cb88fedee9bcb29a9
msgid "Sort and Remove"
msgstr ""

#: ../source/reference/command/findAndModify.txt:383
# e404176e4aa24adbbabbab855eef513d
msgid "By including a ``sort`` specification on the ``rating`` field, the following example removes from the ``people`` collection a single document with the ``state`` value of ``active`` and the lowest ``rating`` among the matching documents:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:399
# dc75df503a9e43a69db0c83f134c033c
msgid "The method returns the deleted document:"
msgstr ""

