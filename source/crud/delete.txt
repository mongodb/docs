.. _java-fundamentals-delete:

================
Delete Documents
================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

In this guide, you can learn how to remove documents with the MongoDB Java
driver.

You can remove documents by passing a query filter to the
``deleteOne()``, ``deleteMany()`` or ``findOneAndDelete()`` methods. 

The ``deleteOne()`` method deletes a single document. If the query
filter matches more than one document, the method will remove the first
occurrence of a match in the collection. 

The ``deleteMany()`` method deletes all documents that match the query
filter.

The ``findOneAndDelete()`` method atomically finds and deletes the first
occurrence of a match in the collection.

To specify a collation or hint an index, use ``DeleteOptions``
as a second parameter to the ``deleteOne()`` and ``deleteMany()`` methods. 

To specify a collation, hint an index, specify sort order, or specify a
projection on the returned document, use ``FindOneAndDeleteOptions`` 
as the second parameter to the ``findOneAndDelete()`` method.

Sample Documents
~~~~~~~~~~~~~~~~

The following examples are about a paint store that sells eight different
colors of paint. The store had their annual online sale resulting in the
following documents in their ``paint_inventory`` collection: 

.. code-block:: json

    { "_id": 1, "color": "red", "qty": 5 }
    { "_id": 2, "color": "purple", "qty": 8 }
    { "_id": 3, "color": "blue", "qty": 0 }
    { "_id": 4, "color": "white", "qty": 0 }
    { "_id": 5, "color": "yellow", "qty": 6 }
    { "_id": 6, "color": "pink", "qty": 0 }
    { "_id": 7, "color": "green", "qty": 0 }
    { "_id": 8, "color": "black", "qty": 8 }

Delete Many Documents
---------------------

The paint store website displays all documents in the
``paint_inventory`` collection. To reduce customer confusion, the store
wants to remove the colors that are out of stock.

To remove the out of stock colors, query the ``paint_inventory``
collection where the ``qty`` is ``0`` and pass the query to the
``deleteMany()`` method:

.. literalinclude:: /includes/fundamentals/code-snippets/Delete.java
   :language: java
   :dedent:
   :start-after: begin deleteManyExample
   :end-before: end deleteManyExample

The following shows the documents remaining in the ``paint_inventory``
collection: 

.. code-block:: json
   :copyable: false  

    { "_id": 1, "color": "red", "qty": 5 }
    { "_id": 2, "color": "purple", "qty": 8 }
    { "_id": 5, "color": "yellow", "qty": 6 }
    { "_id": 8, "color": "black", "qty": 8 }

Delete a Document
-----------------

The store is donating the remaining quantity of their yellow paint. This
means that the ``qty`` for yellow is now ``0`` and we need to remove yellow
from the collection. 

To remove yellow, query the ``paint_inventory`` collection where the
``color`` is ``"yellow"`` and pass the query to the ``deleteOne()``
method:

.. literalinclude:: /includes/fundamentals/code-snippets/Delete.java
   :language: java
   :dedent:
   :start-after: begin deleteOneExample
   :end-before: end deleteOneExample

The following shows the documents remaining in the ``paint_inventory``
collection:

.. code-block:: json
   :copyable: false

    { "_id": 1, "color": "red", "qty": 5 }
    { "_id": 2, "color": "purple", "qty": 8 }
    { "_id": 8, "color": "black", "qty": 8 }

Find and Delete a Document
--------------------------

The store would like to raffle the remaining quantity of purple paint
and remove purple from the ``paint_inventory`` collection. 

To pick a color, query the ``paint_inventory`` collection where the
``color`` is ``"purple"`` and pass the query to the ``findOneAndDelete()``
method:  

.. literalinclude:: /includes/fundamentals/code-snippets/Delete.java
    :language: java
    :dedent:
    :start-after: begin findOneAndDeleteExample
    :end-before: end findOneAndDeleteExample

Unlike the other delete methods, ``findOneAndDelete()`` returns the
deleted document: 

.. code-block:: json
   :copyable: false

    { "_id": 2, "color": "purple", "qty": 8 }

.. note::

    If there are no matches to your query filter, no document gets
    deleted and the method returns ``null``. 

The following shows the documents remaining in the ``paint_inventory``
collection:

.. code-block:: json
   :copyable: false  

    { "_id": 1, "color": "red", "qty": 5 }
    { "_id": 8, "color": "black", "qty": 8 }

For more information about the methods and classes mentioned in this guide,
see the following resources:

- `deleteOne() <{+api+}/apidocs/mongodb-driver-sync/com/mongodb/client/MongoCollection.html#deleteOne(org.bson.conversions.Bson)>`__ API Documentation 
- `deleteMany() <{+api+}/apidocs/mongodb-driver-sync/com/mongodb/client/MongoCollection.html#deleteMany(org.bson.conversions.Bson)>`__ API Documentation
- `findOneAndDelete() <{+api+}/apidocs/mongodb-driver-sync/com/mongodb/client/MongoCollection.html#findOneAndDelete(org.bson.conversions.Bson)>`__ API Documentation
- `DeleteOptions <{+api+}/apidocs/mongodb-driver-core/com/mongodb/client/model/DeleteOptions.html>`__ API Documentation
- `FindOneAndDeleteOptions <{+api+}/apidocs/mongodb-driver-core/com/mongodb/client/model/FindOneAndDeleteOptions.html>`__ API Documentation
- :manual:`db.collection.deleteOne() </reference/method/db.collection.deleteMany/>` Server Manual Entry
- :manual:`db.collection.deleteMany() </reference/method/db.collection.deleteOne/>` Server Manual Entry
- :manual:`db.collection.findOneAndDelete() </reference/method/db.collection.findOneAndDelete/>` Server Manual Entry
