==========================
Get a Single Database User
==========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. include:: /includes/fact-projects-groups-synonyms.rst

.. include:: /includes/api-base-url.rst

.. include:: /includes/api-requirements.rst

Syntax
------

.. code-block:: none

   GET /api/atlas/v1.0/groups/{GROUP-ID}/databaseUsers/{databaseName}/{USERNAME}

Request Path Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1

   * - Parameter
     - Required/Optional
     - Description

   * - ``GROUP-ID``

     - Required.

     - Unique identifier for the :ref:`project <group-id>`.

   * - ``databaseName``
     - Required.
     - The user's :ref:`authentication database
       <authentication-database>`.
       
       Accepted values include:

       - ``$external`` if the user is authenticated using X.509 
         certificates or |ldap|.
       - ``admin`` users authenticated using
         :manual:`SCRAM-SHA </core/security-scram>`.

         This is the default authentication scheme in |service|.

   * - ``USERNAME``

     - Required.

     - Username to retrieve.

       Must be a fully qualified distinguished name, as defined in 
       :rfc:`2253`, if:

       - ``ldapAuthType`` is ``USER`` or ``GROUP``, or
       - ``x509Type`` is ``CUSTOMER``.

Request Query Parameters
~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/no-query-parameters.rst

Request Body Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/no-body-parameters.rst

Response Elements
~~~~~~~~~~~~~~~~~

If you set the query element ``envelope`` to ``true``, the response is wrapped
by the ``content`` object.

.. include:: /includes/api/list-tables/database-users-get-response.rst

Examples
--------

Request
~~~~~~~

.. tabs::

   tabs:
     - id: scram
       name: SCRAM-SHA
       content: |

         Retrieve one database user that |service| authenticates using
         :manual:`SCRAM-SHA </core/security-scram>` and the ``admin`` 
         database.

         .. include:: /includes/extracts/fact-api-requirements-modify.rst

         .. code-block:: none

            curl -i -u "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest "https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794dee37132bb7b/databaseUsers/admin/ellen"

     - id: ldap
       name: X.509 and LDAP
       content: |

         Retrieve one database user that |service| authenticates using
         X.509 or |ldap| and the ``$external`` database.

         .. include:: /includes/extracts/fact-api-requirements-modify.rst

         .. code-block:: none

            curl -i -u "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest "https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794dee37132bb7b/databaseUsers/\$external/CN=ellen@example.com,OU=users,DC=example,DC=com"

Response Header
~~~~~~~~~~~~~~~

.. include:: /includes/api/api-headers/401.rst

.. include:: /includes/api/api-headers/200.rst

Response Body
~~~~~~~~~~~~~

.. tabs::

   hidden: true

   tabs:
     - id: scram
       name: SCRAM-SHA
       content: |

         .. code-block:: json
            :copyable: false

            {
              "databaseName" : "admin",
              "groupId" : "5356823b3794dee37132bb7b",
              "links" : [ ... ],
              "labels": [],
              "roles" : [ {
                "databaseName" : "admin",
                "roleName" : "readAnyDatabase"
              }, {
                "databaseName" : "marketing",
                "roleName" : "readWrite"
              }, {
                "databaseName" : "marketing",
                "roleName" : "backup"
              } ],
              "username" : "ellen"
            }

     - id: ldap
       name: X.509 and LDAP
       content: |

         .. code-block:: json
            :copyable: false

            {
              "databaseName" : "$external",
              "groupId" : "5356823b3794dee37132bb7b",
              "links" : [ ... ],
              "labels": [],
              "roles" : [ {
                "databaseName" : "admin",
                "roleName" : "readAnyDatabase"
              }, {
                "databaseName" : "marketing",
                "roleName" : "readWrite"
              }, {
                "databaseName" : "marketing",
                "roleName" : "backup"
              } ],
              "username" : "CN=ellen@example.com,OU=users,DC=example,DC=com"
            }
