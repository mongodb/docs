ref: fts-compound-score-tutorial-step1
level: 4
stepnum: 1
inherit:
  file: steps-fts-tutorial-run-query-java.yaml
  ref: verify-dependencies-java
---
ref: run-compound-constant-query-java
level: 4
stepnum: 2
title: "Run an |fts| compound query that alters the score using the 
       :ref:`scoring-constant` option."
content: |
  
  a. Create a file named ``CompoundConstantQuery.java``.
  #. Copy and paste the following code into the file.

     The code example performs the following tasks:

     - Imports ``mongodb`` packages and dependencies.
     - Establishes a connection to your |service| cluster.
     - Uses the following compound clauses to query the collection: 

       .. include:: /includes/extracts/fts-compound-constant-desc.rst 

     - Uses the following pipeline stages:

       .. include:: /includes/extracts/fts-compound-score-stages.rst 

     - Iterates over the cursor to print the documents that match the 
       query.

     .. literalinclude:: /includes/fts-tutorial/compound-constant-query.java
        :language: java
        :linenos:
        :emphasize-lines: 23

     .. note:: 

        To run the sample code in your Maven environment, add the 
        following above the import statements in your file.

        .. code-block:: 

           package com.mongodb.drivers;

  #. .. include:: /includes/fact-fts-driver-connection-string.rst
  #. Compile and run ``CompoundConstantQuery.java`` file.

     .. code-block:: shell 

        javac CompoundConstantQuery.java
        java CompoundConstantQuery

  The Java program prints the following documents to your terminal:
  
  .. code-block:: json 
     :copyable: false 
     :emphasize-lines: 1-4

     {"title": "Snow in Paradise", "year": 2014, "score": 5.0}
     {"title": "Dead Snow 2: Red vs. Dead", "year": 2014, "score": 5.0}
     {"title": "The Snow White Murder Case", "year": 2014, "score": 5.0}
     {"title": "Snow on the Blades", "year": 2014, "score": 5.0}
     {"year": 2013, "title": "The Secret Life of Walter Mitty", "score": 0.0}
     {"title": "Jurassic World", "year": 2015, "score": 0.0}
     {"title": "Action Jackson", "year": 2014, "score": 0.0}
     {"year": 2013, "title": "In Secret", "score": 0.0}
     {"title": "The Stanford Prison Experiment", "year": 2015, "score": 0.0}
     {"year": 2014, "title": "The Giver", "score": 0.0}

  The highlighted documents in the results above have a higher score 
  because the ``should`` clause in the query specifies a preference for 
  documents with ``snow`` in the title. The ``should`` clause also 
  alters the score for the query term ``snow`` using the ``constant`` 
  option.

---
ref: run-compound-boost-query-java
level: 4
stepnum: 3
title: "Run an |fts| compound query that alters the score using the 
       :ref:`scoring-boost` option."
content: |

  a. Create a file named ``CompoundBoostQuery.java``.
  #. Copy and paste the following code into the file.

     The code example performs the following tasks:

     - Imports ``mongodb`` packages and dependencies.
     - Establishes a connection to your |service| cluster.
     - Uses the following pipeline stages to query the collection:

       .. include:: /includes/extracts/fts-compound-boost-desc.rst

     - Uses the following pipeline stages:
       
       .. include:: /includes/extracts/fts-compound-score-stages.rst 

     - Iterates over the cursor to print the documents that match the 
       query.

     .. literalinclude:: /includes/fts-tutorial/compound-boost-query.java
        :language: java
        :linenos:
        :emphasize-lines: 26

     .. note:: 

        To run the sample code in your Maven environment, add the 
        following above the import statements in your file.

        .. code-block:: 

           package com.mongodb.drivers;

  #. .. include:: /includes/fact-fts-driver-connection-string.rst
  #. Compile and run ``SynonymsExplicitQuery.java`` file.

     .. code-block:: shell 

        javac CompoundBoostQuery.java
        java CompoundBoostQuery

  The Java program prints the following documents to your terminal:

  .. code-block:: json 
     :copyable: false 
     :emphasize-lines: 1-4

     {"title": "Snow in Paradise", "year": 2014, "score": 6.7722930908203125}
     {"title": "Snow on the Blades", "year": 2014, "score": 6.063445568084717}
     {"title": "The Snow White Murder Case", "year": 2014, "score": 5.509652137756348}
     {"title": "Dead Snow 2: Red vs. Dead", "year": 2014, "score": 5.065053939819336}
     {"year": 2013, "title": "The Secret Life of Walter Mitty", "score": 1.0}
     {"title": "Jurassic World", "year": 2015, "score": 1.0}
     {"title": "Action Jackson", "year": 2014, "score": 1.0}
     {"year": 2013, "title": "In Secret", "score": 1.0}
     {"title": "The Stanford Prison Experiment", "year": 2015, "score": 1.0}
     {"year": 2014, "title": "The Giver", "score": 1.0}

  The highlighted documents in the results above have a higher score 
  because the ``should`` clause in the query specifies a preference for 
  documents with ``snow`` in the title. The ``should`` clause also 
  alters the score for the query term ``snow`` using the ``boost`` 
  option.

---
ref: run-compound-function-query-java
level: 4
stepnum: 4
title: "Run an |fts| compound query that alters the score using the 
       :ref:`scoring-function` option."
content: |

  a. Create a file named ``CompoundFunctionQuery.java``.
  #. Copy and paste the following code into the file.

     The code example performs the following tasks:

     - Imports ``mongodb`` packages and dependencies.
     - Establishes a connection to your |service| cluster.
     - Uses the following pipeline stages to query the collection:

       .. include:: /includes/extracts/fts-compound-function-desc.rst

     - Uses the following pipeline stages: 
       
       .. include:: /includes/extracts/fts-compound-score-stages.rst 

     - Iterates over the cursor to print the documents that match the 
       query.

     .. literalinclude:: /includes/fts-tutorial/compound-function-query.java
        :language: java
        :linenos:
        :emphasize-lines: 27

     .. note:: 

        To run the sample code in your Maven environment, add the 
        following above the import statements in your file.

        .. code-block:: 

           package com.mongodb.drivers;

  #. .. include:: /includes/fact-fts-driver-connection-string.rst
  #. Compile and run ``CompoundFunctionQuery.java`` file.

     .. code-block:: shell 

        javac CompoundFunctionQuery.java
        java CompoundFunctionQuery

  The Java program prints the following documents to your terminal:

  .. code-block:: json 
     :copyable: false 
     :emphasize-lines: 1-4

     {"title": "The Snow White Murder Case", "year": 2014, "score": 10.454826354980469}
     {"title": "Snow on the Blades", "year": 2014, "score": 10.3317232131958}
     {"title": "Dead Snow 2: Red vs. Dead", "year": 2014, "score": 10.032526969909668}
     {"title": "Snow in Paradise", "year": 2014, "score": 8.386146545410156}
     {"year": 2013, "title": "The Secret Life of Walter Mitty", "score": 1.0}
     {"title": "Jurassic World", "year": 2015, "score": 1.0}
     {"title": "Action Jackson", "year": 2014, "score": 1.0}
     {"year": 2013, "title": "In Secret", "score": 1.0}
     {"title": "The Stanford Prison Experiment", "year": 2015, "score": 1.0}
     {"year": 2014, "title": "The Giver", "score": 1.0}

  The highlighted documents in the results above have a higher score 
  because the ``should`` clause in the query specifies a preference for 
  documents with ``snow`` in the title. The ``should`` clause also 
  alters the score for the query term ``snow`` using the ``function`` 
  option.

...
