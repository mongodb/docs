# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: 2014-04-08 19:29+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# 04ecc2224d5447dfbccb29e9d9e27a1a
#: ../source/core/read-preference.txt:9
msgid "Read Preference"
msgstr ""

# 4314ad4d0f2e47ba9d2abdafb5156e2f
#: ../source/core/read-preference.txt
msgid "On this page"
msgstr ""

# 3351f7ba62664a1b87fb4eba5bb71576
#: ../source/includes/introduction-read-preference.rst:1
msgid ""
"Read preference describes how MongoDB clients route read operations to "
"the members of a :term:`replica set`."
msgstr ""

# 61e3107364e6490cb50721a3ff655c9b
#: ../source/includes/introduction-read-preference.rst:6
msgid ""
"By default, an application directs its read operations to the "
":term:`primary` member in a :term:`replica set`."
msgstr ""

# 4aa6dab04bad451daa2594e0a9d3403e
#: ../source/core/read-preference.txt:22
msgid ""
"Exercise care when specifying read preferences: Modes other than "
":readmode:`primary` may return stale data because with :ref:`asynchronous"
" replication <asynchronous-replication>`, data in the secondary may not "
"reflect the most recent write operations. [#edge-cases-2-primaries]_"
msgstr ""

# ec3172c42ec24536919d032a7b319782
#: ../source/core/read-preference.txt:28
msgid ""
"The read preference does not affect the visibility of data; i.e, clients "
"can see the results of writes before they are acknowledged or have "
"propagated to a majority of replica set members:"
msgstr ""

# 638f6d4380fc4ee994e89ae904be7dbb
#: ../source/includes/list-visibility-of-data.rst:1
msgid ""
"Regardless of :doc:`write concern </reference/write-concern>`, other "
"clients using :readconcern:`\"local\"` (i.e. the default) readConcern can"
" see the result of a write operation before the write operation is "
"acknowledged to the issuing client."
msgstr ""

# 31562940dabe4a888735046f8ca0f2fe
#: ../source/includes/list-visibility-of-data.rst:6
msgid ""
"Clients using :readconcern:`\"local\"` (i.e. the default) readConcern can"
" read data which may be subsequently :doc:`rolled back </core/replica-"
"set-rollbacks>`."
msgstr ""

# 9007967280f941d981a4aeac91f8479a
#: ../source/core/read-preference.txt:35
msgid "Use Cases"
msgstr ""

# 59ba389c69c541faa1f9800917a24f0a
#: ../source/core/read-preference.txt:38
msgid "Indications"
msgstr ""

# 8385b7151ded4e329f1fcb2b1451f507
#: ../source/core/read-preference.txt:40
msgid ""
"The following are common use cases for using non-:readmode:`primary` read"
" preference modes:"
msgstr ""

# 1ba2e13ec10e4b0dae8f100899ea4575
#: ../source/core/read-preference.txt:43
msgid "Running systems operations that do not affect the front-end application."
msgstr ""

# e05f42abde014c0a9c9fad2fcf28341e
#: ../source/core/read-preference.txt:48
msgid ""
"Read preferences aren't relevant to direct connections to a single "
":program:`mongod` instance. However, in order to perform read operations "
"on a direct connection to a secondary member of a replica set, you must "
"set a read preference, such as :term:`secondary`."
msgstr ""

# 3f96e89d08e64bba9e007ac65658b5ff
#: ../source/core/read-preference.txt:54
msgid "Providing local reads for geographically distributed applications."
msgstr ""

# 0eb7a195e5cf4cf9b014d28f0c2b1525
#: ../source/core/read-preference.txt:56
msgid ""
"If you have application servers in multiple data centers, you may "
"consider having a :ref:`geographically distributed replica set <replica-"
"set-geographical-distribution>` and using a non primary or "
":readmode:`nearest` read preference. This allows the client to read from "
"the lowest-latency members, rather than always reading from the primary."
msgstr ""

# 324b860c8b4c4099b345a1a1e97638de
#: ../source/core/read-preference.txt:63
msgid "Maintaining availability during a failover."
msgstr ""

# b1ef29e1d6bb4a0f9bdfe25c5f0356f8
#: ../source/core/read-preference.txt:65
msgid ""
"Use :readmode:`primaryPreferred` if you want an application to read from "
"the primary under normal circumstances, but to allow stale reads from "
"secondaries when the primary is unavailable. This provides a \"read-only "
"mode\" for your application during a failover."
msgstr ""

# 2113b4f557604b8abf7f2b7ec3c17620
#: ../source/core/read-preference.txt:71
msgid "Counter-Indications"
msgstr ""

# 6d77fa67afcc4200b3c66336713e4bd6
#: ../source/core/read-preference.txt:73
msgid ""
"In general, do *not* use :readmode:`secondary` and "
":readmode:`secondaryPreferred` to provide extra capacity for reads, "
"because:"
msgstr ""

# a4af5485fc3e462db0585606acc9fe70
#: ../source/core/read-preference.txt:77
msgid ""
"All members of a replica have roughly equivalent write traffic; as a "
"result, secondaries will service reads at roughly the same rate as the "
"primary."
msgstr ""

# 2f72dbb986a242f68a61247c1e2871ac
#: ../source/core/read-preference.txt:81
msgid ""
"Replication is asynchronous and there is some amount of delay between a "
"successful write operation and its replication to secondaries. Reading "
"from a secondary can return out-of-date data; reading from different "
"secondaries may result in non-monotonic reads."
msgstr ""

# ce67f600f275482caee8825e1794df01
#: ../source/core/read-preference.txt:86
msgid ""
"Distributing read operations to secondaries can compromise availability "
"if *any* members of the set become unavailable because the remaining "
"members of the set will need to be able to handle all application "
"requests."
msgstr ""

# 08517ec91b574f82b43753bee344823b
#: ../source/core/read-preference.txt:91
msgid ""
"For queries of sharded collections, for clusters with the :ref:`balancer "
"<sharding-internals-balancing>` active, secondaries may return stale "
"results with missing or duplicated data because of incomplete or "
"terminated chunk migrations."
msgstr ""

# 2e89690267554ac985ff51bb3acbd517
#: ../source/core/read-preference.txt:97
msgid ""
":doc:`Sharding </sharding>` increases read and write capacity by "
"distributing read and write operations across a group of machines, and is"
" often a better strategy for adding capacity."
msgstr ""

# b94b4346744b4ba6b0831f6868bfb6f7
#: ../source/core/read-preference.txt:101
msgid ""
"See :doc:`/core/read-preference-mechanics` for more information about the"
" internal application of read preferences."
msgstr ""

# 018ed589f4e24f0e95ae90e300906276
#: ../source/core/read-preference.txt:105
msgid "Read Preference Modes"
msgstr ""

# 6a8e9b5b1bc5490c86e082f0b2b726fc
#: ../source/core/read-preference.txt:109
msgid ""
"All read preference modes except :readmode:`primary` may return stale "
"data because :term:`secondaries <secondary>` replicate operations from "
"the primary with some delay. [#edge-cases-2-primaries]_ Ensure that your "
"application can tolerate stale data if you choose to use a "
"non-:readmode:`primary` mode."
msgstr ""

# 54c7b7e34f434ad999157d46caf2709e
#: ../source/core/read-preference.txt:115
msgid ""
"MongoDB :doc:`drivers </applications/drivers>` support five read "
"preference modes."
msgstr ""

# e8cb2d7696c543ea94d455c4a0dcea5e
#: ../source/includes/read-preference-modes-table.rst:5
msgid "Read Preference Mode"
msgstr ""

# 955d01c26254427d983f450c048d7412
#: ../source/includes/read-preference-modes-table.rst:6
msgid "Description"
msgstr ""

# 84077ab780d24a728337f7ad2466166c
#: ../source/includes/read-preference-modes-table.rst:7
msgid ":readmode:`primary`"
msgstr ""

# d8d0cd9565ed4f20818697c9cc7635db
#: ../source/includes/read-preference-modes-table.rst:8
msgid ""
"Default mode. All operations read from the current replica set "
":term:`primary`."
msgstr ""

# f4c468995bc14c4baa39c0ec690287ae
# 04c7519ff1814dd7897ab05cf4927cab
#: ../source/core/read-preference.txt:156
#: ../source/includes/read-preference-modes-table.rst:10
msgid ":readmode:`primaryPreferred`"
msgstr ""

# ae1ce3366ec24705b70ed157bc219dd5
#: ../source/includes/read-preference-modes-table.rst:11
msgid ""
"In most situations, operations read from the :term:`primary` but if it is"
" unavailable, operations read from :term:`secondary` members."
msgstr ""

# 54389bc390c34884a525ec9011db004d
# fb8121ba81124fd1994c7c124f8106fe
#: ../source/core/read-preference.txt:157
#: ../source/includes/read-preference-modes-table.rst:14
msgid ":readmode:`secondary`"
msgstr ""

# ffa93e33acd24bf3b9ea43fcea809bb7
#: ../source/includes/read-preference-modes-table.rst:15
msgid "All operations read from the :term:`secondary` members of the replica set."
msgstr ""

# 4db7f7b3672a4dbd8ce38aa3fe427b4c
# 9d6b82e73d874a279bc250b835792f37
#: ../source/core/read-preference.txt:158
#: ../source/includes/read-preference-modes-table.rst:17
msgid ":readmode:`secondaryPreferred`"
msgstr ""

# bdf4438d46894f0f99dba4f7fe9b09f6
#: ../source/includes/read-preference-modes-table.rst:18
msgid ""
"In most situations, operations read from :term:`secondary` members but if"
" no :term:`secondary` members are available, operations read from the "
":term:`primary`."
msgstr ""

# 71bee447449c468d8815cdcec0d5e802
# 3fdd6195e7de44febf7b413c5039e3da
#: ../source/core/read-preference.txt:159
#: ../source/includes/read-preference-modes-table.rst:21
msgid ":readmode:`nearest`"
msgstr ""

# 68150bd3d69442f0940d35974d528d18
#: ../source/includes/read-preference-modes-table.rst:22
msgid ""
"Operations read from member of the :term:`replica set` with the least "
"network latency, irrespective of the member's type."
msgstr ""

# 2bedb2cd7e7141688f9e9d3082df10f6
#: ../source/core/read-preference.txt:120
msgid ""
"The syntax for specifying the read preference mode is :api:`specific to "
"the driver and to the idioms of the host language <>`."
msgstr ""

# 554f06ffd8594b5ab53e4c0da253a336
#: ../source/core/read-preference.txt:124
msgid ""
"Read preference modes are also available to clients connecting to a "
":term:`sharded cluster` through a :program:`mongos`. The "
":program:`mongos` instance obeys specified read preferences when "
"connecting to the :term:`replica set` that provides each :term:`shard` in"
" the cluster."
msgstr ""

# 6c0ae61d470343f280c8e83e6c970b1b
#: ../source/core/read-preference.txt:130
msgid ""
"In the :program:`mongo` shell, the :method:`~cursor.readPref()` cursor "
"method provides access to read preferences."
msgstr ""

# 40109e89f67b44e89c46109bc4716fe4
#: ../source/core/read-preference.txt:133
msgid ""
"For more information, see :ref:`read preference background <replica-set-"
"read-preference-background>` and :ref:`read preference behavior <replica-"
"set-read-preference-behavior>`. See also the :api:`documentation for your"
" driver <>`."
msgstr ""

# 6be656faefaa4ce0b5954891b1e3e327
#: ../source/core/read-preference.txt:143
msgid "Tag Sets"
msgstr ""

# f944691082074d4ca0093902e48fbe13
#: ../source/core/read-preference.txt:145
msgid ""
"Tag sets allow you to target read operations to specific members of a "
"replica set."
msgstr ""

# 9c30abd3f4e44e9eb1f75cfe4a0b1af7
#: ../source/core/read-preference.txt:148
msgid ""
"Custom read preferences and write concerns evaluate tag sets in different"
" ways. Read preferences consider the value of a tag when selecting a "
"member to read from. Write concerns ignore the value of a tag to when "
"selecting a member, *except* to consider whether or not the value is "
"unique."
msgstr ""

# 8ee08da3478f4d70bac5d242a62c1725
#: ../source/core/read-preference.txt:154
msgid "You can specify tag sets with the following read preference modes:"
msgstr ""

# 8f83a2dd84974372957727b5024f26bc
#: ../source/core/read-preference.txt:161
msgid ""
"Tags are not compatible with mode :readmode:`primary` and, in general, "
"only apply when :ref:`selecting <replica-set-read-preference-behavior-"
"member-selection>` a :term:`secondary` member of a set for a read "
"operation. However, the :readmode:`nearest` read mode, when combined with"
" a tag set, selects the matching member with the lowest network latency. "
"This member may be a primary or secondary."
msgstr ""

# 50b89266e5b548168bb2205a661dd1df
#: ../source/core/read-preference.txt:168
msgid ""
"All interfaces use the same :ref:`member selection logic <replica-set-"
"read-preference-behavior-member-selection>` to choose the member to which"
" to direct read operations, basing the choice on read preference mode and"
" tag sets."
msgstr ""

# c19676fec2224093b8f58c488c26f501
#: ../source/core/read-preference.txt:173
msgid ""
"For information on configuring tag sets, see the :doc:`/tutorial"
"/configure-replica-set-tag-sets` tutorial."
msgstr ""

# a71b33e2900141199e2fe7e501bf1e09
#: ../source/core/read-preference.txt:176
msgid ""
"For more information on how read preference :ref:`modes <replica-set-"
"read-preference-modes>` interact with tag sets, see the "
":doc:`documentation for each read preference mode </reference/read-"
"preference>`."
msgstr ""

# cbbffb16e29940b69d68e96b4165402c
#: ../source/includes/footnote-two-primaries-edge-cases.rst:1
msgid ""
"In :ref:`some circumstances <edge-cases>`, two nodes in a replica set may"
" *transiently* believe that they are the primary, but at most, one of "
"them will be able to complete writes with :writeconcern:`{ w: "
"\"majority\" } <\"majority\">` write concern. The node that can complete "
":writeconcern:`{ w: \"majority\" } <\"majority\">` writes is the current "
"primary, and the other node is a former primary that has not yet "
"recognized its demotion, typically due to a :term:`network partition`. "
"When this occurs, clients that connect to the former primary may observe "
"stale data despite having requested read preference :readmode:`primary`, "
"and new writes to the former primary will eventually roll back."
msgstr ""

# 2bbb7173acee4142b622b8c50b70e39e
# c23d9627cf6c42eba9e9ee089e4c9a48
# 160f90ad4fc744b2a36e5c1e7f3892fb
#: ../source/core/read-preference.txt:1 ../source/core/read-preference.txt:3
#: ../source/core/read-preference.txt:139
msgid "read preference"
msgstr ""

# 2db9c240ae8a47ca9f796b60c9bb2805
#: ../source/core/read-preference.txt:2
msgid "slaveOk"
msgstr ""

# c23d9627cf6c42eba9e9ee089e4c9a48
#: ../source/core/read-preference.txt:3
msgid "background"
msgstr ""

# b2afc5fdadc74041a2e12379dffbd7de
# 160f90ad4fc744b2a36e5c1e7f3892fb
#: ../source/core/read-preference.txt:138
#: ../source/core/read-preference.txt:139
msgid "tag sets"
msgstr ""

#~ msgid ""
#~ "Issuing reads to secondaries helps "
#~ "distribute load and prevent operations "
#~ "from affecting the main workload of "
#~ "the primary. This can be a good"
#~ " choice for reporting and analytics "
#~ "workloads, for example."
#~ msgstr ""

#~ msgid ""
#~ "In general, do not use "
#~ ":readmode:`secondary` and :readmode:`secondaryPreferred`"
#~ " to provide extra capacity."
#~ msgstr ""

#~ msgid ""
#~ "Distributing read operations to secondaries"
#~ " can compromise availability if *any* "
#~ "members of the set are unavailable "
#~ "because the other members of the "
#~ "set will need to be able to "
#~ "handle all application requests."
#~ msgstr ""

# ba8fe55974f146638f82ed6af074e350
#~ msgid ""
#~ "Read preference describes how MongoDB "
#~ "clients route read operations to members"
#~ " of a :term:`replica set`."
#~ msgstr ""

# dcd6b1b4953d46b19e8b2fe7981bb33f
#~ msgid ""
#~ "By default, an application directs its"
#~ " read operations to the :term:`primary` "
#~ "member in a :term:`replica set`. Reading"
#~ " from the primary guarantees that "
#~ "read operations reflect the latest "
#~ "version of a document. However, by "
#~ "distributing some or all reads to "
#~ "secondary members of the replica set,"
#~ " you can improve read throughput or"
#~ " reduce latency for an application "
#~ "that does not require fully up-"
#~ "to-date data."
#~ msgstr ""

# d8cc75a3c38b49e7996ec63aae030208
#~ msgid ""
#~ "You must exercise care when specifying"
#~ " read preferences: modes other than "
#~ ":readmode:`primary` can *and will* return "
#~ "stale data because the secondary queries"
#~ " will not include the most recent "
#~ "write operations to the replica set's"
#~ " :term:`primary`."
#~ msgstr ""

# 9838bcdc2eea40469776d4c5119a1969
#~ msgid ""
#~ "If you have application servers in "
#~ "multiple data centers, you may consider"
#~ " having a :ref:`geographically distributed "
#~ "replica set <replica-set-geographical-"
#~ "distribution>` and using a non primary"
#~ " read preference or the "
#~ ":readmode:`nearest`. This allows the client"
#~ " to read from the lowest-latency "
#~ "members, rather than always reading from"
#~ " the primary."
#~ msgstr ""

# 58136467e4d1428f83f5fda74b85f61c
#~ msgid ""
#~ "Use :readmode:`primaryPreferred` if you want"
#~ " an application to read from the "
#~ "primary under normal circumstances, but "
#~ "to allow stale reads from secondaries"
#~ " in an emergency. This provides a "
#~ "\"read-only mode\" for your application"
#~ " during a failover."
#~ msgstr ""

# b3ae1d3f65f041909ed569494b48546a
#~ msgid ""
#~ "All read preference modes except "
#~ ":readmode:`primary` may return stale data "
#~ "because :term:`secondaries <secondary>` replicate"
#~ " operations from the primary with "
#~ "some delay. Ensure that your application"
#~ " can tolerate stale data if you "
#~ "choose to use a non-:readmode:`primary` "
#~ "mode."
#~ msgstr ""

# 899f5bcc2fdb46dc8c6bfe79eb62f384
#~ msgid ""
#~ "Custom read preferences and write "
#~ "concerns evaluate tags sets in different"
#~ " ways. Read preferences consider the "
#~ "value of a tag when selecting a"
#~ " member to read from. Write concerns"
#~ " ignore the value of a tag to"
#~ " when selecting a member, *except* to"
#~ " consider whether or not the value"
#~ " is unique."
#~ msgstr ""

#~ msgid ""
#~ "All members of a replica have "
#~ "roughly equivalent write traffic, as a"
#~ " result secondaries will service reads "
#~ "at roughly the same rate as the"
#~ " primary."
#~ msgstr ""

#~ msgid ""
#~ "Because replication is asynchronous and "
#~ "there is some amount of delay "
#~ "between a successful write operation and"
#~ " its replication to secondaries, reading"
#~ " from a secondary can return out-"
#~ "of-date data."
#~ msgstr ""

#~ msgid ""
#~ "Distributing read operations to secondaries"
#~ " can compromise availability if *any* "
#~ "members of the set are unavailable "
#~ "because the remaining members of the "
#~ "set will need to be able to "
#~ "handle all application requests."
#~ msgstr ""

#~ msgid ""
#~ "For queries of sharded collections that"
#~ " *do not* include the shard key, "
#~ "secondaries may return stale results "
#~ "with missing or duplicated data because"
#~ " of incomplete or terminated migrations."
#~ msgstr ""

