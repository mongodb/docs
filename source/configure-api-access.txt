==============================
Configure |service| API Access
==============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

To access the API, you must generate your own :ref:`API key <atlas-api-key>`.

To access whitelisted API operations, you must configure your :ref:`API
whitelist <whitelist-for-api-operations>` with the IP addresses you will use
when issuing the whitelisted commands. You also must have the ``Owner`` role
to issue whitelisted commands.

For a description of the |service| API's principles and conventions, see the
:doc:`/api`.

Enable the |service| API
------------------------

For each group that will use the |service| API, do the following:

1. Click :guilabel:`Settings`, then :guilabel:`Group Settings`.

2. Toggle the :guilabel:`Enable Public API` field to :guilabel:`On`.

.. _generate-api-key:
.. _atlas-api-key:

Generate API Keys
-----------------

To access the |service| API, you must generate an API key, which gives access to the
API. Each user that will use the API must generate a key. You can have up to
ten API keys associated with your account. Each key can be either enabled or
disabled but all count toward the ten-key limit.

An API key is like a password. Keep it secret.

When accessing |service| through the API, you have the same level of access as
you do through the |service| interface. Your |service| roles apply to both the
interface and the API.

.. important::

   When you generate a key, |service| displays it **one time only**. You must
   copy it. |service| will never display the full key again.

1. Click :guilabel:`Settings`, then :guilabel:`Public API Access`.

2. In the :guilabel:`API Keys` section, click :guilabel:`Generate`.

3. Type a description and click :guilabel:`Generate`.

4. If prompted for two-factor authentication, enter the code and click
   :guilabel:`Verify`. Then click :guilabel:`Generate` again.

5. Copy and record the key.

   **Copy the key immediately**. |service| displays the full key one time
   only. You will not be able to view the full key again.

   Record the key in a secure place. After you record the key, click
   :guilabel:`Close`.

.. _configure-access-to-whitelisted-ops:
.. _whitelist-for-api-operations:

Provide Access to Whitelisted API Operations
--------------------------------------------

Address-based whitelists protect certain API operations. Only client requests
that originate from a whitelisted IP address are permitted to perform the
operations. To perform whitelisted operations, you must create add at least
one address to your whitelist.

Users have their own whitelists and own API keys. When you issue an API call,
you must use an API key from your user account and must issue the command from
an address on your user account's whitelist. You cannot use your key to issue
a whitelisted API request from an address on another user's whitelist, unless,
of course, you've added that address to your own whitelist.

On the :doc:`resources </reference/api-resources>` pages in this guide,
whitelisted operations are marked as such.

1. Click :guilabel:`Settings`, then :guilabel:`Public API Access`.

2. In the :guilabel:`Whitelist` section, click :guilabel:`Add`.

3. Enter an IP address or CIDR range. To add multiple entries to your
   whitelist, repeat this step. If you leave your whitelist empty, you
   have no access to whitelisted operations.

   You can enter any of the following:

   .. list-table::
      :header-rows: 1

      * - Entry

        - Grants

      * - An IP address

        - Access to whitelisted operations from that address.

      * - A CIDR-notated range of IP addresses

        - Access to whitelisted operations from those addresses.

      * - ``0.0.0.0/0``

        - Unrestricted access to whitelisted operations.

Delete an Address from the API Whitelist
----------------------------------------

1. Click :guilabel:`Settings`, then :guilabel:`Public API Access`.

2. In the :guilabel:`Whitelist` section, click the address's :guilabel:`gear icon`
   and select :guilabel:`Delete`.
