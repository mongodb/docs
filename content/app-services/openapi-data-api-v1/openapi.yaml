openapi: 3.1.0
info:
  version: v1
  title: MongoDB Atlas Data API
  description: >
    A fully-managed API to read, write, and aggregate data in MongoDB

    Atlas. The Data API is powered by serverless Atlas Functions and

    secured with user authentication and role-based permissions. To

    learn more about the Data API, see [Atlas Data

    API](https://www.mongodb.com/docs/atlas/app-services/data-api/).


    ## Set Up the Data API


    Before you can use the Data API, you must enable and configure it in

    an Atlas App Services App. The configuration controls how the App's

    users authenticate, authorize requests, and interact with the API.


    To learn how to start using the Data API in your App, see [Set up

    the Data

    API](https://www.mongodb.com/docs/atlas/app-services/data-api/generated-endpoints/#set-up-the-data-api).


    ## Authenticate Requests


    Your Data API configuration in App Services controls how users

    authenticate their API requests. In most cases, you will use

    Application authentication, which lets users log in with one of the

    App's authentication providers. Users can either provide their login

    credentials directly in every request or provide a reusable access

    token for an authenticated session.


    To learn more, see [Authenticate Data API

    Requests](https://www.mongodb.com/docs/atlas/app-services/data-api/authenticate/).
security:
  - AccessToken: []
  - Email: []
    Password: []
  - ApiKey: []
  - CustomJwt: []
servers:
  - description: Global App
    url: https://data.mongodb-api.com/app/{appId}/endpoint/data/v1
    variables:
      appId:
        description: Your App's Client App ID.
        default: your-app-id
  - description: Local App
    url: https://{region}.data.mongodb-api.com/app/{appId}/endpoint/data/v1
    variables:
      appId:
        description: Your App's Client App ID.
        default: your-app-id
      region:
        description: >
          The sub-domain for the cloud region where your App is

          deployed. Uses the format `<region>.<cloud>`. For example,

          `us-east-1.aws` or `eastus2.azure`. To learn more about

          deployment regions, see [Deployment Models &

          Regions](https://www.mongodb.com/docs/atlas/app-services/apps/deployment-models-and-regions/).
        default: us-east-1.aws
        enum:
          - us-east-1.aws
          - us-east-2.aws
          - us-west-2.aws
          - eu-central-1.aws
          - eu-west-1.aws
          - eu-west-2.aws
          - ap-southeast-1.aws
          - ap-southeast-2.aws
          - ap-south-1.aws
          - sa-east-1.aws
          - eastus2.azure
          - westus.azure
          - westeurope.azure
          - eastasia.azure
          - southeastasia.azure
          - us-central1.gcp
          - us-east4.gcp
          - us-west1.gcp
          - europe-west1.gcp
          - asia-south1.gcp
paths:
  /action/findOne:
    $ref: paths/action_findOne.yaml
  /action/find:
    $ref: paths/action_find.yaml
  /action/insertOne:
    $ref: paths/action_insertOne.yaml
  /action/insertMany:
    $ref: paths/action_insertMany.yaml
  /action/updateOne:
    $ref: paths/action_updateOne.yaml
  /action/updateMany:
    $ref: paths/action_updateMany.yaml
  /action/deleteOne:
    $ref: paths/action_deleteOne.yaml
  /action/deleteMany:
    $ref: paths/action_deleteMany.yaml
  /action/aggregate:
    $ref: paths/action_aggregate.yaml
components:
  securitySchemes:
    AccessToken:
      type: apiKey
      in: header
      name: Authorization
      description: >-
        A [user access

        token](https://www.mongodb.com/docs/atlas/app-services/users/sessions/)

        specified as a Bearer token in the Authorization header.


        **Example:** `Authorization: Bearer
        eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...`
    Email:
      type: apiKey
      in: header
      name: email
      description: |-
        A registered email/password user's email address. Must be used
        together with the ``password`` header.

        **Example:** `email: someone@example.com`
    Password:
      type: apiKey
      in: header
      name: password
      description: |-
        A registered email/password user's password. Must be used
        together with the ``email`` header.

        **Example:** `password: Pa55w0rd!`
    ApiKey:
      type: apiKey
      in: header
      name: apiKey
      description: >-
        A server or user API key.


        **Example:** `apiKey:
        A1g70fN7oKMNCnDRNeyou20Wd24rD6QNmXWYMPwz0SnDRQRQSYwGPdC3y44aJN3H`
    CustomJwt:
      type: apiKey
      in: header
      name: jwtTokenString
      description: >-
        A custom JSON web token string that the App is configured to support.


        **Example:** `jwtTokenString:
        eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJteWFwcC1hYmNkZSIsInN1YiI6IjY0MzZlMDZiZGU1YzQ2ZGQ5MTQwZWFlOSIsIm5hbWUiOiJKb2huIERvZSIsImlhdCI6MTUxNjIzOTAyMn0.Y_6JR4ocrqoCEY3yOZlEqhxtAsSpvlzrXc9uvTSJA0k`
