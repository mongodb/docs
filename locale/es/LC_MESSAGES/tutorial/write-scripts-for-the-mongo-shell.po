# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: 2014-04-08 18:35+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# 56f99f7c924a424792e37f41457caa45
#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:3
msgid "Write Scripts for the ``mongo`` Shell"
msgstr ""

# 631757eaf88144eba9acfbc34417d3c2
#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt
msgid "On this page"
msgstr ""

# 31142f52bee947fbb5607cf188ee8073
#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:13
msgid ""
"You can write scripts for the :program:`mongo` shell in JavaScript that "
"manipulate data in MongoDB or perform administrative operation. For more "
"information about the :program:`mongo` shell, see the :ref:`running-js-"
"scripts-in-mongo-on-mongod-host` section for more information about using"
" these :program:`mongo` script."
msgstr ""

# 6abb31f4425d4f0da8167884ea4b05f3
#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:19
msgid ""
"This tutorial provides an introduction to writing JavaScript that uses "
"the :program:`mongo` shell to access MongoDB."
msgstr ""

# 24e29df0a2a942c9bd6d32f8f5080a88
#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:25
msgid "Opening New Connections"
msgstr ""

# 6d22a0e651324f4486b171ea3e565670
#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:27
msgid ""
"From the :program:`mongo` shell or from a JavaScript file, you can "
"instantiate database connections using the :method:`Mongo()` constructor:"
msgstr ""

# 6455576931b94222bd7b4d8f10e7dd7f
#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:37
msgid ""
"Consider the following example that instantiates a new connection to the "
"MongoDB instance running on localhost on the default port and sets the "
"global ``db`` variable to ``myDatabase`` using the "
":method:`~Mongo.getDB()` method:"
msgstr ""

# d88800e87cea4c56b52828e72e59c51d
#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:47
msgid ""
"If connecting to a MongoDB instance that enforces access control, you can"
" use the :method:`db.auth()` method to authenticate."
msgstr ""

# efa9e94d17b64f2d8c228f1c039f8afb
#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:50
msgid ""
"Additionally, you can use the :method:`connect()` method to connect to "
"the MongoDB instance. The following example connects to the MongoDB "
"instance that is running on ``localhost`` with the non-default port "
"``27020`` and set the global ``db`` variable:"
msgstr ""

# dd550d1a216948cb95603eb8f1149405
#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:59
msgid ":doc:`/reference/method/`"
msgstr ""

# 9b8d89cab21145609168b6b6c5003643
#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:62
msgid "Differences Between Interactive and Scripted ``mongo``"
msgstr ""

# 71d156bf15704c63b196712f4a385225
#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:64
msgid ""
"When writing scripts for the :program:`mongo` shell, consider the "
"following:"
msgstr ""

# 1c0507e5fde3441997bf44b44fa3f1c4
#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:67
msgid ""
"To set the ``db`` global variable, use the :method:`~Mongo.getDB()` "
"method or the :method:`connect()` method. You can assign the database "
"reference to a variable other than ``db``."
msgstr ""

# 676ce9008c2d4e0b9fb7bdafa1878e24
#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:71
msgid ""
"Write operations in the :program:`mongo` shell use a write concern of "
":ref:`{ w: 1 } <wc-w>` by default. If performing bulk operations, use the"
" :method:`Bulk()` methods. See :ref:`write-methods-incompatibility` for "
"more information."
msgstr ""

# 7e40bbe904494f2096d6e42194da89f4
#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:76
msgid ""
"Before MongoDB 2.6, call :method:`db.getLastError()` explicitly to wait "
"for the result of :doc:`write operations </crud>`."
msgstr ""

# c94de32062474766b5d446a3dbc9c4d6
#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:81
msgid ""
"You **cannot** use any shell helper (e.g. ``use <dbname>``, ``show dbs``,"
" etc.) inside the JavaScript file because they are not valid JavaScript."
msgstr ""

# 0e1e0cbfa68843c2a5ae5229627ac557
#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:85
msgid ""
"The following table maps the most common :program:`mongo` shell helpers "
"to their JavaScript equivalents."
msgstr ""

# 5ab3e5922f9c4d1b89430e56eaf914ec
#: ../source/includes/table/helpers-to-javascript.rst:4
msgid "Shell Helpers"
msgstr ""

# cd4ff876d5bf4ba9ba75b5eb3ad1bc52
#: ../source/includes/table/helpers-to-javascript.rst:6
msgid "JavaScript Equivalents"
msgstr ""

# 090c789063a94baba5caae3bddae7073
#: ../source/includes/table/helpers-to-javascript.rst:8
msgid "``show dbs``, ``show databases``"
msgstr ""

# de107397e22b411193417bf4eb4219b7
#: ../source/includes/table/helpers-to-javascript.rst:16
msgid "``use <db>``"
msgstr ""

# 1d00460eb9c14f25b10dc6bd831b6e3b
#: ../source/includes/table/helpers-to-javascript.rst:24
msgid "``show collections``"
msgstr ""

# 15dff06dcac247ecb4deb4fc6bcffdee
#: ../source/includes/table/helpers-to-javascript.rst:32
msgid "``show users``"
msgstr ""

# 8044c209c16847fabb4ab6ed0dfe6068
#: ../source/includes/table/helpers-to-javascript.rst:40
msgid "``show roles``"
msgstr ""

# 6efefb2ed8754a18bfedd046b8ad6139
#: ../source/includes/table/helpers-to-javascript.rst:48
msgid "``show log <logname>``"
msgstr ""

# 8a982c5828714cef861d0ed63e26ee12
#: ../source/includes/table/helpers-to-javascript.rst:56
msgid "``show logs``"
msgstr ""

# bc9bcaace49c4f3daf4697c450ff72a2
#: ../source/includes/table/helpers-to-javascript.rst:64
msgid "``it``"
msgstr ""

# 496f9904592646119227bc42492ce3db
#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:90
msgid ""
"In interactive mode, :program:`mongo` prints the results of operations "
"including the content of all cursors. In scripts, either use the "
"JavaScript ``print()`` function or the :program:`mongo` specific "
"``printjson()`` function which returns formatted JSON."
msgstr ""

# ae9e97be5989461a84bea5b968060f21
#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt
msgid "Example"
msgstr ""

# d99b2326d78f4f6ab36e1a0d95b3991b
#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:97
msgid ""
"To print all items in a result cursor in :program:`mongo` shell scripts, "
"use the following idiom:"
msgstr ""

# 5b093ca8fde14699b1a1d33d0cd32f5f
#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:110
msgid "Scripting"
msgstr ""

# a73143a43ddc454ab916f8235b6a50a7
#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:112
msgid "From the system prompt, use :program:`mongo` to evaluate JavaScript."
msgstr ""

# 69080123784e4b84af181c7ba604d5bf
#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:115
msgid "``--eval`` option"
msgstr ""

# 4935095f17164bd6bf50ad415d0222e1
#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:117
msgid ""
"Use the :option:`--eval <mongo --eval>` option to :program:`mongo` to "
"pass the shell a JavaScript fragment, as in the following:"
msgstr ""

# d9c585f0e7074d7aa40c6e284c0ba7a1
#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:124
msgid ""
"This returns the output of :method:`db.getCollectionNames()` using the "
":program:`mongo` shell connected to the :program:`mongod` or "
":program:`mongos` instance running on port ``27017`` on the ``localhost``"
" interface."
msgstr ""

# 689a044e4df94f71843667d818653bdc
#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:132
msgid "Execute a JavaScript file"
msgstr ""

# 4812de13da064e939c91fbbaabc24c2e
#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:134
msgid ""
"You can specify a ``.js`` file to the :program:`mongo` shell, and "
":program:`mongo` will execute the JavaScript directly. Consider the "
"following example:"
msgstr ""

# b72a207315e74cc7832d095fbe874889
#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:142
msgid ""
"This operation executes the ``myjsfile.js`` script in a :program:`mongo` "
"shell that connects to the ``test`` :term:`database` on the "
":program:`mongod` instance accessible via the ``localhost`` interface on "
"port ``27017``."
msgstr ""

# 5d3bf43491cc422f8c585fee4069b20d
#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:147
msgid ""
"Alternately, you can specify the mongodb connection parameters inside of "
"the javascript file using the ``Mongo()`` constructor. See :ref:`mongo-"
"shell-new-connections` for more information."
msgstr ""

# bf1387d35b50445c956dc848046dec5b
#: ../source/includes/fact-execute-javascript-from-shell.rst:1
msgid ""
"You can execute a ``.js`` file from within the :program:`mongo` shell, "
"using the :method:`load()` function, as in the following:"
msgstr ""

# 82fa8cd6383143a29020f1aebf326771
#: ../source/includes/fact-execute-javascript-from-shell.rst:8
msgid "This function loads and executes the :file:`myjstest.js` file."
msgstr ""

# a7a034c62d5b474d880f9e05e533e6e5
#: ../source/includes/fact-execute-javascript-from-shell.rst:10
msgid ""
"The :method:`load()` method accepts relative and absolute paths. If the "
"current working directory of the :program:`mongo` shell is "
":file:`/data/db`, and the :file:`myjstest.js` resides in the "
":file:`/data/db/scripts` directory, then the following calls within the "
":program:`mongo` shell would be equivalent:"
msgstr ""

# 163f6b26e6fb4b328fe8d0f50e2eb8aa
#: ../source/includes/fact-execute-javascript-from-shell.rst:21
msgid ""
"There is no search path for the :method:`load()` function. If the desired"
" script is not in the current working directory or the full specified "
"path, :program:`mongo` will not be able to access the file."
msgstr ""

#~ msgid ""
#~ "Inside the script, call "
#~ ":method:`db.getLastError()` explicitly to wait "
#~ "for the result of :doc:`write operations"
#~ " </core/write-operations>`."
#~ msgstr ""

# 228bdbe161024843af99e88d25132d74
#~ msgid ""
#~ "You can write scripts for the "
#~ ":program:`mongo` shell in JavaScript that "
#~ "manipulate data in MongoDB or perform"
#~ " administrative operation. For more "
#~ "information about the :program:`mongo` shell"
#~ " see :doc:`/administration/scripting`, and see"
#~ " the :ref:`running-js-scripts-in-"
#~ "mongo-on-mongod-host` section for "
#~ "more information about using these "
#~ ":program:`mongo` script."
#~ msgstr ""

#~ msgid ""
#~ "Write operations in the :program:`mongo` "
#~ "shell use the \"safe writes\" by "
#~ "default. If performing bulk operations, "
#~ "use the :method:`Bulk()` methods. See "
#~ ":ref:`write-methods-incompatibility` for more"
#~ " information."
#~ msgstr ""

#~ msgid ""
#~ "Before MongoDB 2.6, call "
#~ ":method:`db.getLastError()` explicitly to wait "
#~ "for the result of :doc:`write operations"
#~ " </core/write-operations>`."
#~ msgstr ""

