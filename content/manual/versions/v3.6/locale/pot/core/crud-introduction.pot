# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/crud-introduction.txt:3
# a4fb69b55f6248ffad8999fc2b5ff77d
msgid "MongoDB CRUD Introduction"
msgstr ""

#: ../source/core/crud-introduction.txt:7
# 74b24fa283ed4e8885ae83c36c600f2c
msgid "MongoDB stores data in the form of *documents*, which are JSON-like field and value pairs. Documents are analogous to structures in programming languages that associate keys with values (e.g. dictionaries, hashes, maps, and associative arrays). Formally, MongoDB documents are :term:`BSON` documents. BSON is a binary representation of :term:`JSON` with additional type information. In the documents, the value of a field can be any of the BSON data types, including other documents, arrays, and arrays of documents. For more information, see :doc:`/core/document`."
msgstr ""

#: ../source/core/crud-introduction.txt:19
# afe86f3b99ec40feae3e0abec325e2bb
msgid "MongoDB stores all documents in :term:`collections <collection>`. A collection is a group of related documents that have a set of shared common indexes. Collections are analogous to a table in relational databases."
msgstr ""

#: ../source/core/crud-introduction.txt:27
# 9e7c0710f17f44dcb2f913c0406e3651
msgid "Database Operations"
msgstr ""

#: ../source/core/crud-introduction.txt:30
# 018c29becc3e4b6f95484a57fa930d18
msgid "Query"
msgstr ""

#: ../source/core/crud-introduction.txt:32
# 8ab03b1f1d584aca9efbe34afe9d5213
msgid "In MongoDB a query targets a specific collection of documents. Queries specify criteria, or conditions, that identify the documents that MongoDB returns to the clients. A query may include a *projection* that specifies the fields from the matching documents to return. You can optionally modify queries to impose limits, skips, and sort orders."
msgstr ""

#: ../source/core/crud-introduction.txt:38
# 5cf42cb355bd4a328b5ab57d3ebef92d
msgid "In the following diagram, the query process specifies a query criteria and a sort modifier:"
msgstr ""

#: ../source/core/crud-introduction.txt:43
# bb154c84fd664a76b15cf91cae068ab5
msgid "See :doc:`/core/read-operations-introduction` for more information."
msgstr ""

#: ../source/core/crud-introduction.txt:46
# 1e6fe781eedf4de7a63a785877e97dd1
msgid "Data Modification"
msgstr ""

#: ../source/core/crud-introduction.txt:48
# 9074e38509314996ac94c2fd713c1b4b
msgid "Data modification refers to operations that create, update, or delete data. In MongoDB, these operations modify the data of a single :term:`collection`. For the update and delete operations, you can specify the criteria to select the documents to update or remove."
msgstr ""

#: ../source/core/crud-introduction.txt:53
# b9e5968029804b0f937d39faa2750725
msgid "In the following diagram, the insert operation adds a new document to the ``users`` collection."
msgstr ""

#: ../source/core/crud-introduction.txt:58
# 77cdb5f0fe8245eb85ff50f4d040c8bb
msgid "See :doc:`/core/write-operations-introduction` for more information."
msgstr ""

#: ../source/core/crud-introduction.txt:62
# f9943a2d37f148dda7cd654315978780
msgid "Related Features"
msgstr ""

#: ../source/core/crud-introduction.txt:65
# 8f1ede7cb2884671bcd592c341264427
msgid ":doc:`Indexes </indexes>`"
msgstr ""

#: ../source/core/crud-introduction.txt:67
# 4257203ed0e741ad8fc4ecfebae51269
msgid "To enhance the performance of common queries and updates, MongoDB has full support for secondary indexes. These indexes allow applications to store a *view* of a portion of the collection in an efficient data structure. Most indexes store an ordered representation of all values of a field or a group of fields. Indexes may also :ref:`enforce uniqueness <index-type-unique>`, store objects in a :doc:`geospatial representation </applications/geospatial-indexes>`, and facilitate :doc:`text search </core/index-text>`."
msgstr ""

#: ../source/core/crud-introduction.txt:78
# 7d8c147334594ec8afb44391dae9ecfc
msgid ":doc:`Replica Set Read Preference </core/read-preference>`"
msgstr ""

#: ../source/core/crud-introduction.txt:80
# 342633b42f1d470292245ee6e50f0872
msgid "For replica sets and sharded clusters with replica set components, applications specify :ref:`read preferences <replica-set-read-preference>`. A read preference determines how the client directs read operations to the set."
msgstr ""

#: ../source/core/crud-introduction.txt:86
# 0c5e516ab3b040239b4c37424cb421a4
msgid ":doc:`Write Concern </core/write-concern>`"
msgstr ""

#: ../source/core/crud-introduction.txt:88
# c70d3566076943cbb1eb89f85c6fc17b
msgid "Applications can also control the behavior of write operations using :ref:`write concern <write-concern>`. Particularly useful for deployments with replica sets, the write concern semantics allow clients to specify the assurance that MongoDB provides when reporting on the success of a write operation."
msgstr ""

#: ../source/core/crud-introduction.txt:95
# 3142b170d5884e19b0e9cb15e72c4c96
msgid ":doc:`Aggregation </aggregation>`"
msgstr ""

#: ../source/core/crud-introduction.txt:97
# 205eaf0c6ba64029ae736b5b099f6302
msgid "In addition to the basic queries, MongoDB provides several data aggregation features. For example, MongoDB can return counts of the number of documents that match a query, or return the number of distinct values for a field, or process a collection of documents using a versatile stage-based data processing pipeline or map-reduce operations."
msgstr ""

