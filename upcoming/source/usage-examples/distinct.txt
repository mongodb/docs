.. _rust-distinct-usage:

==========================
List Distinct Field Values
==========================

.. facet::
   :name: genre
   :values: tutorial

.. meta::
   :keywords: runnable, code example, read operation
   :description: Find distinct field values in a MongoDB collection with the MongoDB Rust Driver.

You can list the distinct values of a document field in a collection by
calling the `distinct() <{+api+}/struct.Collection.html#method.distinct>`__
method on a ``Collection`` instance. For example, if documents in a
collection contain the ``date`` field, you can use the ``distinct()``
method to find all the possible values for that field in the collection.

Pass a field name as a parameter to the ``distinct()`` method to return
the distinct values for that field. You can also pass a query filter as
a parameter to find distinct field values from only a subset of matched
documents. To learn more about creating query filters, see the
:ref:`rust-query-guide` guide.

The ``distinct()`` method returns the list of distinct values as a ``Vec<Bson>``
type, a vector of `Bson <{+bson-api+}/enum.Bson.html>`__ values.

Example
-------

This example finds distinct values for a field in the
``restaurants`` collection of the ``sample_restaurants`` database.
The ``distinct()`` method retrieves distinct values of the ``borough`` field in
the subset of documents in which the value of the ``cuisine`` field
is ``"Turkish"``.

You can access the documents in the ``restaurants`` collection as instances
of the ``Document`` type or a custom data type. To specify which data type represents
the collection's data, replace the ``<T>`` type parameter on the highlighted
line with one of the following values:

- ``<Document>``: Represents collection documents as BSON documents
- ``<Restaurant>``: Represents collection documents as instances of the ``Restaurant``
  struct, defined at the top of the code

Select the :guilabel:`Asynchronous` or :guilabel:`Synchronous` tab to
see the corresponding code for each runtime:

.. tabs::

   .. tab:: Asynchronous
      :tabid: find-async

      .. io-code-block::
         :copyable: true

         .. input:: /includes/usage-examples/code-snippets/distinct-async.rs
            :language: rust
            :emphasize-lines: 21
            :dedent:

         .. output::
            :language: console
            :visible: false

            List of field values for 'borough':
            String("Brooklyn")
            String("Manhattan")
            String("Queens")
            String("Staten Island")

   .. tab:: Synchronous
      :tabid: find-sync

      .. io-code-block::
         :copyable: true

         .. input:: /includes/usage-examples/code-snippets/distinct-sync.rs
            :language: rust
            :emphasize-lines: 20
            :dedent:

         .. output::
            :language: console
            :visible: false

            List of field values for 'borough':
            String("Brooklyn")
            String("Manhattan")
            String("Queens")
            String("Staten Island")
