# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: 2014-04-08 16:31+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-manual/language/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# eeb95de17b5b405bbbc9c490d49de7f0
#: ../source/tutorial/create-an-auto-incrementing-field.txt:3
msgid "Create an Auto-Incrementing Sequence Field"
msgstr ""

# b720684a6bfe4d7aa5fcdf25b3b3393f
#: ../source/tutorial/create-an-auto-incrementing-field.txt:8
msgid "Synopsis"
msgstr ""

# 60072eb9a8fa41c88c37ec4831580cee
#: ../source/tutorial/create-an-auto-incrementing-field.txt:10
msgid ""
"MongoDB reserves the ``_id`` field in the top level of all documents as a "
"primary key. ``_id`` must be unique, and always has an index with a "
":ref:`unique constraint <index-type-unique>`. However, except for the unique"
" constraint you can use any value for the ``_id`` field in your collections."
" This tutorial describes two methods for creating an incrementing sequence "
"number for the ``_id`` field using the following:"
msgstr ""

# 24ebfdde80c74bfe917111dab9b49a38
#: ../source/tutorial/create-an-auto-incrementing-field.txt:18
msgid ":ref:`auto-increment-counters-collection`"
msgstr ""

# 92a21af63dff4f3eb74bd44627c67c75
#: ../source/tutorial/create-an-auto-incrementing-field.txt:20
msgid ":ref:`auto-increment-optimistic-loop`"
msgstr ""

# 5f746a1111d947ec8b7c0db0342cb4cd
#: ../source/tutorial/create-an-auto-incrementing-field.txt:23
msgid "Considerations"
msgstr ""

# db5e7db0a55f4384b3c031295bc064dd
#: ../source/tutorial/create-an-auto-incrementing-field.txt:25
msgid ""
"Generally in MongoDB, you would not use an auto-increment pattern for the "
"``_id`` field, or any field, because it does not scale for databases with "
"large numbers of documents. Typically the default value :term:`ObjectId "
"<objectid>` is more ideal for the ``_id``."
msgstr ""

# 1fc87af736cd48fab5ca5e72a0e7e817
#: ../source/tutorial/create-an-auto-incrementing-field.txt:31
msgid "Procedures"
msgstr ""

# 38a3f50d6876484f8805a183dfacc07a
#: ../source/tutorial/create-an-auto-incrementing-field.txt:36
msgid "Use Counters Collection"
msgstr ""

# 9ef988d58bc343f1ba51662684548a5c
#: ../source/tutorial/create-an-auto-incrementing-field.txt:39
msgid "Counter Collection Implementation"
msgstr ""

# 67bb560425fd448dbb580abf0ae888ac
#: ../source/tutorial/create-an-auto-incrementing-field.txt:44
msgid ""
"Insert into the ``counters`` collection, the initial value for the "
"``userid``:"
msgstr ""

# 6e1ecff7321442fbaff432b3b9674fa7
#: ../source/tutorial/create-an-auto-incrementing-field.txt:55
msgid ""
"Create a ``getNextSequence`` function that accepts a ``name`` of the "
"sequence. The function uses the :method:`~db.collection.findAndModify()` "
"method to atomically increment the ``seq`` value and return this new value:"
msgstr ""

# 853a07e720bd4a32a7dcebb6c013a869
#: ../source/tutorial/create-an-auto-incrementing-field.txt:74
msgid ""
"Use this ``getNextSequence()`` function during "
":method:`~db.collection.insert()`."
msgstr ""

# 14608a80098142368cec56731b7494e0
# dd4b033ba6fb40fd9aa3a73d30e68b9f
#: ../source/tutorial/create-an-auto-incrementing-field.txt:93
#: ../source/tutorial/create-an-auto-incrementing-field.txt:250
msgid "You can verify the results with :method:`~db.collection.find()`:"
msgstr ""

# e30096a7aff7498193c23ba9c67be3ca
# 96e5f3d1042a4f83b0e7741b9caed9d4
#: ../source/tutorial/create-an-auto-incrementing-field.txt:99
#: ../source/tutorial/create-an-auto-incrementing-field.txt:256
msgid "The ``_id`` fields contain incrementing sequence values:"
msgstr ""

# 9c4317645e1443d1aa55881b79fa0a87
#: ../source/tutorial/create-an-auto-incrementing-field.txt:113
msgid "``findAndModify`` Behavior"
msgstr ""

# 14f58beb075c48db922b0a3e782d939c
#: ../source/tutorial/create-an-auto-incrementing-field.txt:115
msgid ""
"When :method:`~db.collection.findAndModify()` includes the ``upsert: true`` "
"option **and** the query field(s) is not uniquely indexed, the method could "
"insert a document multiple times in certain circumstances. For instance, if "
"multiple clients each invoke the method with the same query condition and "
"these methods complete the find phase before any of methods perform the "
"modify phase, these methods could insert the same document."
msgstr ""

# 8c506aa552a7447683c723c86deb843a
#: ../source/tutorial/create-an-auto-incrementing-field.txt:123
msgid ""
"In the ``counters`` collection example, the query field is the ``_id`` "
"field, which always has a unique index. Consider that the "
":method:`~db.collection.findAndModify()` includes the ``upsert: true`` "
"option, as in the following modified example:"
msgstr ""

# a131913a273641d797b2a4ba54930faf
#: ../source/tutorial/create-an-auto-incrementing-field.txt:144
msgid ""
"If multiple clients were to invoke the ``getNextSequence()`` method with the"
" same ``name`` parameter, then the methods would observe one of the "
"following behaviors:"
msgstr ""

# 66b8056aea8a4ab590ca4ebc50492935
#: ../source/tutorial/create-an-auto-incrementing-field.txt:148
msgid ""
"Exactly one :method:`~db.collection.findAndModify()` would successfully "
"insert a new document."
msgstr ""

# 4de2dee035fb45c9bce1e5489fb6c77b
#: ../source/tutorial/create-an-auto-incrementing-field.txt:151
msgid ""
"Zero or more :method:`~db.collection.findAndModify()` methods would update "
"the newly inserted document."
msgstr ""

# eb14c869f9544b84b27bd9fb6017515a
#: ../source/tutorial/create-an-auto-incrementing-field.txt:154
msgid ""
"Zero or more :method:`~db.collection.findAndModify()` methods would fail "
"when they attempted to insert a duplicate."
msgstr ""

# 74910b80a4ce48f7a4f221b796664c61
#: ../source/tutorial/create-an-auto-incrementing-field.txt:157
msgid ""
"If the method fails due to a unique index constraint violation, retry the "
"method. Absent a delete of the document, the retry should not fail."
msgstr ""

# 4c3a69794934473ca8d2e96eea64acf9
#: ../source/tutorial/create-an-auto-incrementing-field.txt:164
msgid "Optimistic Loop"
msgstr ""

# a28a87f3fd484b23bfce2e7cb43c2658
#: ../source/tutorial/create-an-auto-incrementing-field.txt:166
msgid ""
"In this pattern, an *Optimistic Loop* calculates the incremented ``_id`` "
"value and attempts to insert a document with the calculated ``_id`` value. "
"If the insert is successful, the loop ends. Otherwise, the loop will iterate"
" through possible ``_id`` values until the insert is successful."
msgstr ""

# 732d2d65471b4b83aa7f79097ec6c83b
#: ../source/tutorial/create-an-auto-incrementing-field.txt:172
msgid ""
"Create a function named ``insertDocument`` that performs the \"insert if not"
" present\" loop. The function wraps the :method:`~db.collection.insert()` "
"method and takes a ``doc`` and a ``targetCollection`` arguments."
msgstr ""

# cc8a1f44dd534b3882c02cf424d535fc
#: ../source/tutorial/create-an-auto-incrementing-field.txt:208
msgid "The ``while (1)`` loop performs the following actions:"
msgstr ""

# a00bde6e1ba14d17965664844459ed91
#: ../source/tutorial/create-an-auto-incrementing-field.txt:210
msgid ""
"Queries the ``targetCollection`` for the document with the maximum ``_id`` "
"value."
msgstr ""

# 69a66ef870604ce4b905c06cb6a5514f
#: ../source/tutorial/create-an-auto-incrementing-field.txt:213
msgid "Determines the next sequence value for ``_id`` by:"
msgstr ""

# 2fd1502135454797b77885823bab3720
#: ../source/tutorial/create-an-auto-incrementing-field.txt:215
msgid ""
"adding ``1`` to the returned ``_id`` value if the returned cursor points to "
"a document."
msgstr ""

# ddbb4bd650694e2a8ca0e376c1c7223b
#: ../source/tutorial/create-an-auto-incrementing-field.txt:218
msgid ""
"otherwise: it sets the next sequence value to ``1`` if the returned cursor "
"points to no document."
msgstr ""

# 49a2aced8f5441119efb8d0f239090dc
#: ../source/tutorial/create-an-auto-incrementing-field.txt:221
msgid ""
"For the ``doc`` to insert, set its ``_id`` field to the calculated sequence "
"value ``seq``."
msgstr ""

# 280bfd710fa34c39b745b1617d7c8372
#: ../source/tutorial/create-an-auto-incrementing-field.txt:224
msgid "Insert the ``doc`` into the ``targetCollection``."
msgstr ""

# cbc51009db2f49b7bb6f57c501700a9c
#: ../source/tutorial/create-an-auto-incrementing-field.txt:226
msgid ""
"If the insert operation errors with duplicate key, repeat the loop.  "
"Otherwise, if the insert operation encounters some other error or if the "
"operation succeeds, break out of the loop."
msgstr ""

# c247bb4579794e9e995d42b78395ebb9
#: ../source/tutorial/create-an-auto-incrementing-field.txt:230
msgid "Use the ``insertDocument()`` function to perform an insert:"
msgstr ""

# ca3d5859a22f47ae89303da49a1cf5e8
#: ../source/tutorial/create-an-auto-incrementing-field.txt:269
msgid ""
"The ``while`` loop may iterate many times in collections with larger insert "
"volumes."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:40
msgid ""
"Use a separate ``counters`` collection to track the *last* number sequence "
"used. The ``_id`` field contains the sequence name and the ``seq`` field "
"contains the last value of the sequence."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:177
msgid ""
"The :method:`db.collection.insert()` method now returns a :ref"
":`writeresults-insert` object that contains the status of the operation. "
"Previous versions required an extra :method:`db.getLastErrorObj()` method "
"call."
msgstr ""

#~ msgid ""
#~ "U se a separate ``counters`` collection to track the *last* number sequence "
#~ "used. The ``_id`` field contains the sequence name and the ``seq`` field "
#~ "contains the last value of the sequence."
#~ msgstr ""
