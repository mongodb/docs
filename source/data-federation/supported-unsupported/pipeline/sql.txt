.. _adf-sql-stage:

========
``$sql``
========

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. include:: /includes/extracts/fact-sql-beta-message.rst

``$sql`` processes an SQL query of the data in a collection. The 
``$sql`` stage: 

- Must be the first stage in the pipeline.  
- Supports ``SELECT`` and ``UNION`` statements only.

Use this stage for read-only queries.

.. _adf-sql-syntax:

Syntax 
------

.. code-block:: json 

   {
     $sql: { 			
       statement: "<SQL-statement>",
       format: "jdbc",
       formatVersion: <version-number>,
       dialect: "mysql"
     }
   }

.. _adf-sql-fields:

Fields 
------

.. list-table::
   :header-rows: 1
   :widths: 10 10 70 10

   * - Field 
     - Type 
     - Description 
     - Necessity

   * - ``dialect``
     - string
     - SQL dialect used by the statement. Value must be ``mysql``.
     - Required

   * - ``format``
     - string
     - Structure of the output documents. Value must be ``jdbc``.
     - Required

   * - ``formatVersion``
     - int
     - Version of the requested output format. {+adf+} supports the 
       following versions for the jdbc output format: 

       - ``1``
       - ``2`` (latest)
     
       If omitted, defaults to the latest version of the requested 
       output format.
     - Optional

   * - ``statement``
     - string
     - SQL query or command to run. 
     - Required

.. _adf-sql-output:

Output 
------

If the SQL statement is not a query or a command that returns a 
result set, the ``$sql`` stage does not return any documents. 

The output differs based on the format and format version used in the 
query.

.. tabs:: 

   .. tab:: formatVersion 1
      :tabid: fv1

      The ``value`` field value differs based on whether or not the 
      result set is empty.

      .. tabs:: 
      
         .. tab:: Normal Result set 
            :tabid: normal

            If the SQL statement is a query, the ``$sql`` stage returns 
            one document per row in the SQL result set. Each document 
            includes a single array field named ``values`` that 
            contains documents representing the columns in the result 
            set and their values. For example: 

            .. code-block:: json 
               :copyable: false 

               {
                 "values": [
                   {
                     "database": "<databaseName>",
                     "table": "<tableName>",
                     "tableAlias": "<tableAlias>",
                     "column": "<columnName>",
                     "columnAlias": "<columnAlias>",
                     "bsonType": "<bsonType>",
                     "value": "<columnValue>"
                   },
                   ...
                 ]
               }

         .. tab:: Empty Result set 
            :tabid: empty

            If the result set of the query is empty, the output 
            includes a field ``emptyResultSet`` whose value is 
            ``true``. The ``values`` field has all of the column 
            metadata, but the ``value`` field value is ``null``. For 
            example:

            .. code-block:: json 
               :copyable: false 
               :emphasize-lines: 2, 11

               {
                 "emptyResultSet": true,
                 "values": [
                   {
                     "database": "<databaseName>",
                     "table": "<tableName>",
                     "tableAlias": "<tableAlias>",
                     "column": "<columnName>",
                     "columnAlias": "<columnAlias>",
                     "bsonType": "<bsonType>",
                     "value": "null"
                   },
                   ...
                 ]
               }

      .. list-table::
         :header-rows: 1
         :widths: 20 10 70 

         * - Field 
           - Type 
           - Description 

         * - ``emptyResultSet``
           - boolean
           - Flag that indicates if the result set of the query is 
             empty. Value is ``true`` if the result set of the query is 
             empty. {+adf+} returns this field only if the result set 
             of the query is empty.

         * - ``values`` 
           - array of documents 
           - Column metadata including column values.

         * - ``values[n].database``
           - string
           - Name of the database. For queries against ``DUAL``, the 
             field has a ``null`` value.

         * - ``values[n].table``
           - string
           - Name of the table. For computed columns, the field has 
             a ``null`` value. 

         * - ``values[n].tableAlias``
           - string
           - Alias for the table. If the query provides no alias, value 
             is the same as the table name. For computed columns, the 
             field has a ``null`` value.

         * - ``values[n].column``
           - string
           - Name of the column. For computed columns, the field has 
             a ``null`` value.

         * - ``values[n].columnAlias``
           - string
           - Alias for the column. If the query provides no alias, 
             value is the same as the column name. For computed 
             columns, the field contains the column name.

         * - ``values[n].bsonType``
           - string
           - Type of value. To learn more, see :manual:`BSON Types </reference/bson-types/>`.

         * - ``values[n].value``
           - |bson| data type
           - Column value. Value is ``null`` if the result set of the 
             query is empty.

   .. tab:: formatVersion 2
      :tabid: fv2

      The number of documents in the output differs based on whether or 
      not the result set is empty.

      .. tabs:: 
      
         .. tab:: Normal Result set 
            :tabid: normal

            If the SQL statement is a query, the ``$sql`` stage returns 
            the schema information in the first document. Subsequent 
            documents, one per row in the SQL result set, include a 
            single array field named ``values`` that contains only the 
            values for the columns in the result set. For example: 

            .. code-block:: json 
               :copyable: false 

               {
                 "columns": [
                   {
                     "database": "<databaseName>",
                     "table": "<tableName>",
                     "tableAlias": "<tableAlias>",
                     "column": "<columnName>",
                     "columnAlias": "<columnAlias>",
                     "bsonType": "<bsonType>"
                   },
                   ...
                 ]
               }
               { "values": [<columnValue>,...] }
               ...

         .. tab:: Empty Result set 
            :tabid: empty

            If the result set of the query is empty, the output 
            includes only one document that contains the schema 
            information. The documents that contain the values for the 
            columns in the result set are not in the output. For 
            example:

            .. code-block:: json 
               :copyable: false 

               {
                 "columns": [
                   {
                     "database": "<databaseName>",
                     "table": "<tableName>",
                     "tableAlias": "<tableAlias>",
                     "column": "<columnName>",
                     "columnAlias": "<columnAlias>",
                     "bsonType": "<bsonType>"
                   },
                   ...
                 ]
               }

      .. list-table::
         :header-rows: 1
         :widths: 20 10 70 

         * - Field 
           - Type 
           - Description 

         * - ``columns`` 
           - array of documents 
           - Information on the columns.

         * - ``columns[n].database``
           - string
           - Name of the database. For queries against ``DUAL``, the 
             field has a ``null`` value.

         * - ``columns[n].table``
           - string
           - Name of the table. For computed columns, the field has 
             a ``null`` value. 

         * - ``columns[n].tableAlias``
           - string
           - Alias for the table. If the query provides no alias, value 
             is the same as the table name. For computed columns, the 
             field has a ``null`` value.

         * - ``columns[n].column``
           - string
           - Name of the column. For computed columns, the field has 
             a ``null`` value.

         * - ``columns[n].columnAlias``
           - string
           - Alias for the column. If the query provides no alias, 
             value is the same as the column name. For computed 
             columns, the field contains the column name.

         * - ``columns[n].bsonType``
           - string
           - Type of value. To learn more, see :manual:`BSON Types </reference/bson-types/>`.

         * - ``values`` 
           - array of |bson| data type 
           - Column values for a row in the result set. Each ``values`` 
             document corresponds to a column in the ``columns`` array. 
             Absent if the result set of the query is empty.

.. _adf-sql-eg:

Example 
-------

The following example shows the ``$sql`` syntax for querying 
a ``sampleDB.egData`` collection: 

.. code-block:: json 
   
   {
     $sql: { 			
       statement: "select * from egData limit 2",
       format: "jdbc",
       formatVersion: 1,
       dialect: "mysql",
     }
   }
