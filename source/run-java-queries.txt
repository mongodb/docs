.. _intellij-run-java-queries:

================
Run Java Queries
================

.. default-domain:: mongodb

.. facet:: 
   :name: genre
   :values: reference

.. facet:: 
   :name: programming_language
   :values: java

.. meta::
   :keywords: code example, java sync, java async, mongosh
   :description: Use the MongoDB for IntelliJ Plugin to run Java queries in the Database Explorer Playgrounds.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

The {+intellij-full+} enables you to run queries written in Java directly 
in the Database Explorer Playgrounds. 

The Run button appears next to your MongoDB queries.

.. image:: /images/run-queries/intellij-run-icon.png
   :alt: Click the Run button to convert your Java query to mongosh syntax.

Behavior
--------

When you click the Run button, the plugin automatically converts your 
Java query to ``mongosh`` syntax and opens a Playground file with the 
populated query.

For field values that are variables determined at runtime, the plugin 
creates a placeholder variable. You can populate this placeholder with 
a test value and run the query in the Playground. 

Example
-------

In this example, the Java query on the ``production.trips`` collection
resembles the following:

.. code:: java
   :copyable: false

   public List<Document> findCompletedTripsByDriver(String driverId) {
      return trips.find(Filters.and(
              Filters.eq(fieldName: "trip_status", value: "completed"),
              Filters.eq(fieldName: "driver_id", driverId)
      )).into(new ArrayList<>());
   }

The code example below shows the converted query from the Java code 
above.

.. code:: javascript
   :copyable: true

   var driver_id = "<driver ID>"

   db.getSiblingsDB("production")
     .getCollection("trips")
     .find({
        "$and" : [
           { "trip_status" : "completed" },
           { "driver_id" : driver_id }
         ],
     })

In this example, ``driver_id`` is a variable that holds a value 
determined at runtime. In order to test that your query outputs the 
results you expect, you must specify a test value by replacing 
``<driver ID>`` with the driver ID. For example, 
``driver_id = "1a2b3c4d5e"``.

Once you are satisfied with the query, you can run it in the Playground 
and view the query results.

.. image:: /images/run-queries/intellij-pg-icon-converted-query.png
   :alt: Click the Run button to run your query and view the results.
