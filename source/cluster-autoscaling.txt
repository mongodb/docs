.. _cluster-autoscaling:
.. _scale-cluster-autoscale:
.. _how-auto-scale-works:

====================
Cluster Auto-Scaling
====================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol



.. include:: /includes/fact-auto-scaling-availability.rst

You can configure your |service| cluster to automatically scale its
cluster tier, storage capacity, or both in response to cluster usage.
Cluster auto-scaling removes the need to write scripts or use
consulting services to make scaling decisions. To help control costs,
you can specify a range of cluster tiers to which your cluster can
automatically scale.

Auto-scaling works on a rolling basis, meaning the process does not
incur any downtime.

.. _howitworks-scale-cluster-tier:

How |service| Scales Cluster Tier
---------------------------------

|service| analyzes the following cluster metrics to determine when to
scale a cluster, and whether to scale the cluster tier up or down:

- CPU Utilization

- Memory Utilization

To learn more about how to monitor cluster metrics, see
:ref:`monitor-cluster-metrics`.

Before scaling your cluster tier, |service| checks that the cluster
would not be in a tier outside of your specified
:guilabel:`Minimum` and :guilabel:`Maximum Cluster Size` range.

.. include:: /includes/fact-auto-scaling-and-migration.rst

Scaling Up a Cluster Tier
~~~~~~~~~~~~~~~~~~~~~~~~~

If the next highest cluster tier is within your
:guilabel:`Maximum Cluster Size` range, |service| scales the cluster
up to the next tier if *one* of the following is true for *any* node in
the cluster:

- Average CPU Utilization has exceeded 75% for the past hour, or

- Memory Utilization has exceeded 75% for the past hour.

|service| scales a cluster to the next tier when the cluster hasn't
been scaled up in the past hour.

.. important:: High-Speed Write Activity

   Scaling up to greater storage capacity requires sufficient time to
   prepare and copy data to new disks. Automatic scaling might not occur
   when a cluster receives a burst of high-speed write activity, such as
   a bulk insert. To reduce the risk of running out of disk storage,
   cluster managers should plan to scale up clusters in advance of bulk
   inserts and other instances of high-speed write activity.

.. note:: Tier Availability

   Automatic scaling works on :guilabel:`General` tier clusters but
   *not* on the *Low-CPU* or *Local NVMe SSD* tier clusters.

Scaling Down a Cluster Tier
~~~~~~~~~~~~~~~~~~~~~~~~~~~

If the next lowest cluster tier is within your
:guilabel:`Minimum Cluster Size` range, |service| scales the cluster
down to the next lowest tier if *both* of the following are true for
*all* nodes in the cluster:

- The average :guilabel:`CPU Utilization` and
  :guilabel:`Memory Utilization` over the past 24 hours is below 50%,
  and

- The cluster has not been scaled down (manually or automatically) in
  the past 24 hours.

.. note::

   ``M10`` and ``M20`` clusters use lower thresholds to account for
   caps on CPU usage set by cloud providers after burst periods. These
   thresholds vary depending on your cloud provider and cluster tier.

To learn more about downward auto-scaling behavior, see
:ref:`downward-scaling-considerations`.

.. _howitworks-scale-cluster-storage:

How |service| Scales Cluster Storage
------------------------------------

When cluster storage auto-scaling is enabled, |service| automatically
increases cluster storage when disk space used reaches 90%. The scaling
behavior differs by cloud provider:

- On :ref:`AWS <amazon-aws>` and :ref:`GCP <google-gcp>` clusters,
  |service| increases cluster storage capacity to achieve 70% disk
  utilization. For information on |aws| storage change limitations and
  how |service| works around them, see
  :ref:`change-storage-capacity-aws`.

- On :ref:`Azure <microsoft-azure>` clusters, |service| doubles the
  current amount of cluster storage.

.. important::

   |service| only automatically scales cluster storage up, and never
   automatically scales cluster storage down. You can manually reduce
   your cluster storage from the :ref:`Edit Cluster <scale-cluster>`
   page.

Oplog Considerations
~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/autoscale-oplog.rst

Cluster Tier and Cluster Storage May Scale in Parallel
``````````````````````````````````````````````````````

When |service| attempts to automatically scale your cluster storage
capacity, it may need to scale your storage outside of the bounds
supported by your current cluster tier. To help ensure that your
cluster does not experience any downtime, |service| will scale your
cluster tier (in addition to cluster storage) to accommodate the new
storage capacity.

.. example::

   The maximum storage capacity for an ``M30`` cluster is 480 GB. If
   you have an ``M30`` cluster with maximum storage allocated and
   your disk space used reaches 90%, a storage auto-scaling event would
   require raising your storage capacity to 600 GB. In this case,
   |service| scales your cluster tier up to ``M40``, because this is
   the lowest cluster tier which can support the new required
   storage capacity.

In the event that your specified maximum cluster tier can't support
the new storage capacity, |service|:

1. Raises your maximum cluster tier to the next lowest tier that can
   accommodate the new storage capacity.

#. Scales your cluster tier to that new maximum tier.

.. note::

   When |service| overrides your maximum cluster tier, it also
   disables your cluster from automatically scaling down. If you
   want to re-enable downward auto-scaling, you must do so manually
   from your :ref:`Cluster Settings <scale-cluster>`

   .. seealso:: 
   
      :ref:`downward-scaling-considerations`.

If |service| attempts to scale your cluster tier down and the target
tier can't support your current disk capacity, provisioned |iops|,
or both, |service| does not scale your cluster down. In this
scenario, |service| updates your auto-scaling settings based on the
relationship between your current cluster tier and configured
maximum cluster tier:

- If the cluster is currently at the configured maximum cluster
  tier, |service| disables the cluster from automatically scaling
  down because all smaller tiers would not be able to accommodate
  the necessary storage settings. If you want to re-enable downward
  auto-scaling, you must do so manually from your :ref:`Cluster
  Settings <scale-cluster>`.

- If the cluster is not currently at the configured maximum cluster
  tier, |service| raises the minimum cluster tier to the current
  cluster tier. In this case, |service| does not disable downward
  auto-scaling.

This auto-scaling logic is designed to reduce downtime incurred by
your storage settings not matching your workload.

When an auto-scaling event modifies your configured minimum or
maximum cluster tier, |service| sends an email to all project
members with information on the event. The email includes the new
cluster tier and information on any modified minimum or maximum tier
bounds.

Configure Auto-Scaling Options
------------------------------

You can configure auto-scaling options when you
:ref:`create <create-new-cluster>` or :ref:`modify <scale-cluster>` a
cluster.

|service| displays auto-scaling options in the :guilabel:`Auto-scale`
section of the cluster builder:

.. figure:: /images/autoscale.png
   :figwidth: 720px
   :alt: Image showing the auto-scaling cluster options.

.. _configure-cluster-autoscaling:

Configure Cluster Tier Auto-Scaling
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In the :guilabel:`Cluster tier` section of the :guilabel:`Auto-scale`
options, you can specify the minimum and maximum sizes
to which your cluster can automatically scale.

|service| defaults auto-scaling set to disabled. To enable
auto-scaling:

1. In the :guilabel:`Auto-Scale` section, check
   :guilabel:`Cluster tier`.

#. Select a :guilabel:`Maximum Cluster Size` from the dropdown.

When you enable auto-scaling, your cluster can scale to increase
capability with a higher cluster tier. To enable auto-scaling to a
decrease capability with lower cluster tier:

1. Check :guilabel:`Allow cluster to be scaled down`.

#. Select a :guilabel:`Minimum Cluster Size` from the dropdown.

.. _downward-scaling-considerations:

Considerations for Downward Auto-Scaling
````````````````````````````````````````

- To permit |service| downscale your cluster to a lower cluster tier
  may leave your cluster unable to handle your workload. Only allow
  |service| to scale the cluster down if you understand your
  cluster's range of workloads. Account for any possible spikes or dips
  in cluster activity.

- You can't scale to a cluster smaller than ``M10``.

- When |service| downscales your cluster, it checks that your minimum
  cluster tier bound supports your cluster's current disk
  configuration. If your selected minimum cluster tier can't support
  your current disk configuration, |service| adjusts your minimum tier
  to the next lowest tier which can support your configuration.

  .. example::

     You have set your auto-scaling bounds to ``M10``-``M60`` and your
     current cluster tier is ``M40``. |service| triggers a downward
     auto-scaling event because the average CPU Utilization and Memory
     Utilization on your current cluster has been under 50% for the
     past 24 hours.

     1. |service| attempts to auto-scale your cluster down to ``M30``.
        ``M30`` supports your current disk configuration, so the
        auto-scaling operation succeeds.

     #. |service| checks your minimum cluster bound (``M10``) and
        determines that ``M10`` can't support your current disk
        configuration.

     #. |service| determines that ``M20`` is the lowest cluster tier
        which can support your current disk configuration, and sets
        your minimum cluster tier to ``M20``.

Configure Cluster Storage Auto-Scaling
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Cluster storage scaling is enabled by default. To opt out of
cluster storage scaling, un-check the :guilabel:`Storage` checkbox in
the :guilabel:`Auto-scale` section.

For more information on cluster storage, see
:ref:`create-cluster-storage`.

.. _ack-auto-scaling-events:

Acknowledge Auto-Scaling Events
-------------------------------

When an auto-scaling event occurs:

- |service| logs the event in the project :guilabel:`Activity Feed`. To
  learn more about the :guilabel:`Activity Feed`, see
  :ref:`project-activity-feed`.

- |service| sends an email to all project members with
  information on the event. The email includes the original cluster
  tier and the new cluster tier after auto-scaling has occurred.
