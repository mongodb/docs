.. _performance-advisor:

================================
Monitor and Improve Slow Queries
================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. _pa-slow-queries:

.. include:: /includes/fact-performance-advisor.rst

.. include:: /includes/fact-performance-advisor-permissions.rst

Common Reasons for Slow Queries
-------------------------------

If a query is slow, common reasons include:

- The query is unsupported by your current indexes. 
- Some documents in your collection have large array fields that are 
  costly to search and index.
- One query retrieves information from multiple collections with 
  :manual:`$lookup </reference/operator/aggregation/lookup>`.

Index Considerations
--------------------

.. include:: /includes/considerations-performance-advisor.rst

Access |pa|
--------------------------

To access the :guilabel:`Performance Advisor`:

.. include:: /includes/steps/performance-advisor-view.rst

The :guilabel:`Performance Advisor` displays up to 20 query shapes
across all collections in the cluster and suggested indexes for those
shapes. The :guilabel:`Performance Advisor` ranks the indexes according 
to their :guilabel:`Impact`, which indicates :guilabel:`High` or 
:guilabel:`Medium` based on the total wasted bytes read. To learn more 
about index ranking, see :ref:`pa-index-ranking`.

.. note::

   If the slow query log contains consecutive :pipeline:`$match` stages 
   in the aggregation pipeline, the two stages can :manual:`coalesce 
   </core/aggregation-pipeline-optimization/#-match----match-coalescence>` 
   into the first :pipeline:`$match` stage and result in a single 
   :pipeline:`$match` stage. As a result, the query shape in the 
   |pa| might differ from the actual query you ran.

Index Suggestions
-----------------

The :guilabel:`Performance Advisor` ranks the indexes that it suggests 
according to their :guilabel:`Impact`, which indicates :guilabel:`High` 
or :guilabel:`Medium` based on the total wasted bytes read. To learn 
more about how the |pa| ranks indexes, see :ref:`pa-index-ranking`.

To learn how to create indexes that the |pa| suggests, see 
:ref:`pa-create-suggested-indexes`.

Index Metrics
~~~~~~~~~~~~~

Each index that the |pa| suggests contains the following
metrics. These metrics apply specifically to queries which would be
improved by the index:

.. list-table::
   :header-rows: 1
   :widths: 20 40

   * - Metric
     - Description

   * - :guilabel:`Execution Count`
     - Number of queries executed per hour which would be
       improved.

   * - :guilabel:`Average Execution Time`
     - Current average execution time in milliseconds for affected
       queries.

   * - :guilabel:`Average Query Targeting`
     - Average number of documents read per document returned by
       affected queries. A higher query
       targeting score indicates a greater degree of inefficiency. For
       more information on query targeting, see :ref:`query-targeting`.

   * - :guilabel:`In Memory Sort`
     - Current number of affected queries per hour that needed to be
       sorted in memory.

   * - :guilabel:`Average Docs Scanned`
     - Average number of documents scanned.

   * - :guilabel:`Average Docs Returned`
     - Average number of documents returned.

   * - :guilabel:`Avgerage Object Size`
     - Average object size.

Sample Queries
~~~~~~~~~~~~~~

For each suggested index, the |pa| shows the most commonly executed 
query shapes that the index would improve. For each query shape, the 
|pa| displays the following metrics:

.. list-table::
   :header-rows: 1
   :widths: 20 40

   * - Metric
     - Description

   * - :guilabel:`Execution Count`
     - Number of queries executed per hour which match the query
       shape.

   * - :guilabel:`Average Execution Time`
     - Average execution time in milliseconds for queries
       which match the query shape.

   * - :guilabel:`Average Query Targeting`
     - Average number of documents read for
       every document returned by matching queries. A higher query
       targeting score indicates a greater degree of inefficiency. For
       more information on query targeting, see :ref:`query-targeting`.

   * - :guilabel:`Average Docs Scanned`
     - Average number of documents scanned.

   * - :guilabel:`Average Docs Returned`
     - Average number of documents returned.

The |pa| also shows each executed sample query that matches the 
query shape, with specific metrics for that query.

.. _query-inefficiency-score:

Query Targeting
~~~~~~~~~~~~~~~

Each index suggestion includes an :guilabel:`Average Query Targeting`
score indicating how many documents were read for every document
returned for the index's corresponding query shapes. A score of 1
represents very efficient query shapes because every document read
matched the query and was returned with the query results. All suggested
indexes represent an opportunity to improve query performance.

Filter Index Suggestions
~~~~~~~~~~~~~~~~~~~~~~~~

By default, the |pa| suggests indexes for all clusters
in the deployment. To only show suggested indexes from a specific
collection, use the :guilabel:`Collection` dropdown at the top of
the |pa|.

You can also adjust the time range the |pa| takes into
account when suggesting indexes by using the :guilabel:`Time Range`
dropdown at the top of the |pa|.

Limitations of Index Suggestions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Timestamp Format for Indexes
````````````````````````````

.. include:: /includes/fact-performance-advisor-timestamp.rst

Log Size
````````

The |pa| analyzes up to 200,000 of your cluster's most recent log lines.

.. _pa-create-suggested-indexes:

Create Suggested Indexes
------------------------

You can create :manual:`indexes </core/indexes>` suggested by the
|pa| directly within the |pa| itself. When
you create indexes, keep the ratio of reads to writes on the target
collection in mind. Indexes come with a performance cost, but are more
than worth the cost for frequent queries on large data sets. To
learn more about indexing strategies, see
:manual:`Indexing Strategies </applications/indexes/>`.

Behavior
~~~~~~~~

- You can only create one index at a time through the Performance
  Advisor. If you want to create more simultaneously, you can do so
  using :ref:`Data Explorer <data-explorer-indexes>` or the
  :doc:`shell </tutorial/connect-to-mongodb>`

- |mms| always creates indexes at the top level of the deployment. If 
  you create an index while viewing the |pa| for a single shard in a 
  sharded cluster, |mms| creates that index for the entire 
  sharded cluster.

Procedure
~~~~~~~~~

To create a suggested index:

.. include:: /includes/steps/pa-create-index.rst

.. toctree::
   :hidden:
   :titlesonly:

   Configure Slow Query Threshold </performance-advisor/slow-query-threshold>
   Review Index Ranking </performance-advisor/index-ranking>
   Review Index Recommendations </performance-advisor/drop-indexes>
