.. _kotlin-sync-atlas-search-index:
.. _kotlin-sync-search-avs-indexes:

======================================
Atlas Search and Vector Search Indexes
======================================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: index, query, optimization, efficiency

Overview
--------

You can programmatically manage your :atlas:`Atlas Search
</atlas-search>` and :atlas:`Atlas Vector Search
</atlas-vector-search/vector-search-overview/>` indexes by using the
{+driver-short+}.

Atlas Search enables you to perform full-text searches on
collections hosted on MongoDB Atlas. Atlas Search indexes specify the behavior of
the search and which fields to index.

Atlas Vector Search enables you to perform semantic searches on vector
embeddings stored in MongoDB Atlas. Vector Search indexes define the
indexes for the vector embeddings that you want to query and the boolean,
date, objectId, numeric, string, or UUID values that you want to use to
pre-filter your data.

You can call the following methods on a collection to manage your Atlas
Search and Vector Search indexes:

- ``createSearchIndex()`` *(valid for Atlas Search indexes only)*
- ``createSearchIndexes()``
- ``listSearchIndexes()``
- ``updateSearchIndex()``
- ``dropSearchIndex()``

.. note::

   The Atlas Search and Vector Search index management methods run
   asynchronously and might return before confirming that they ran
   successfully. To determine the current status of the indexes, call
   the ``listSearchIndexes()`` method or view the indexes list in the
   :atlas:`Atlas UI </atlas-ui/indexes/>`.

The following sections provide code examples that demonstrate how to use
each of the preceding methods.

.. _kotlin-sync-atlas-search-index-create:

Create a Search Index
---------------------

You can use the `createSearchIndex()
<{+api+}/com.mongodb.kotlin.client/-mongo-collection/create-search-index.html>`__
method to create a single Atlas Search index. You *cannot* use this method to
create a Vector Search index.

You can use the `createSearchIndexes()
<{+api+}/com.mongodb.kotlin.client/-mongo-collection/create-search-indexes.html>`__
method to create multiple Atlas Search or Vector Search
indexes. You must create a `SearchIndexModel
<{+core-api+}/com/mongodb/client/model/SearchIndexModel.html>`__
instance for each index, then pass a list of ``SearchIndexModel``
instances to the ``createSearchIndexes()`` method.

The following code example shows how to create an Atlas Search index:

.. literalinclude:: /includes/indexes/indexes.kt
   :language: kotlin
   :start-after: start-create-search-index
   :end-before: end-create-search-index
   :dedent:

The following code example shows how to create Atlas Search and
Vector Search indexes in one call:

.. literalinclude:: /includes/indexes/indexes.kt
   :language: kotlin
   :start-after: start-create-search-indexes
   :end-before: end-create-search-indexes
   :dedent:

To learn more about the syntax used to define Atlas Search indexes, see the
:atlas:`Review Atlas Search Index Syntax </atlas-search/index-definitions>` guide
in the Atlas documentation.

.. _kotlin-sync-atlas-search-index-list:

List Search Indexes
-------------------

You can use the
`listSearchIndexes() <{+api+}/com.mongodb.kotlin.client/-mongo-collection/list-search-indexes.html>`__
method to return all Atlas Search indexes in a collection.

The following code example shows how to print a list of the search indexes in
a collection:

.. literalinclude:: /includes/indexes/indexes.kt
   :language: kotlin
   :start-after: start-list-search-indexes
   :end-before: end-list-search-indexes
   :dedent:

.. _kotlin-sync-atlas-search-index-update:

Update a Search Index
---------------------

You can use the
`updateSearchIndex() <{+api+}/com.mongodb.kotlin.client/-mongo-collection/update-search-index.html>`__
method to update an Atlas Search index.

The following code shows how to update a search index:

.. literalinclude:: /includes/indexes/indexes.kt
   :language: kotlin
   :start-after: start-update-search-indexes
   :end-before: end-update-search-indexes
   :dedent:

.. _kotlin-sync-atlas-search-index-drop:

Delete a Search Index
---------------------

You can use the
`dropSearchIndex() <{+api+}/com.mongodb.kotlin.client/-mongo-collection/drop-search-index.html>`__
method to delete an Atlas Search index.

The following code shows how to delete a search index from a collection:

.. literalinclude:: /includes/indexes/indexes.kt
   :language: kotlin
   :start-after: start-drop-search-index
   :end-before: end-drop-search-index
   :dedent:

Additional Information
----------------------

To learn more about MongoDB Atlas Search, see the :atlas:`Atlas Search Indexes </atlas-search/atlas-search-overview/>`
documentation.
