.. _set-up-unified-aws-access:

=========================
Set Up Unified AWS Access
=========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Overview
--------

Some |service| features, including :ref:`Data Federation 
<atlas-data-federation>` and :ref:`Encryption at Rest 
<security-aws-kms>`, use |aws| `IAM roles <https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html>`__
for authentication. When |service| accesses |aws| services, it does so
through an `assumed IAM role
<https://docs.aws.amazon.com/IAM/latest/UserGuide/using-service-linked-roles.html>`__.

You can set up an assumed IAM role for your |service| account to use 
with the {+atlas-admin-api+} or UI.

.. note::

   If you have :ref:`Encryption at Rest <security-aws-kms>` enabled for
   your cluster and you want to set up a new |iam| role, be sure the new
   role has access to the existing |kms|.

Prerequisites
-------------

- An |service| :doc:`account </index>`.

- The `AWS Command Line Interface (CLI)
  <https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html>`__.

Procedure
---------

.. tabs::

   .. tab:: UI
      :tabid: ui

      Begin the Setup Procedure for AWS IAM Access
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      1. Expand the :guilabel:`Options` menu next to your project name
         in the {+atlas-ui+} upper left corner. Select 
         :guilabel:`Integrations`.
      #. Click the :guilabel:`Configure` button in the :guilabel:`AWS 
         IAM Role Access` panel.

         Note: if you already have one or more roles configured, the 
         button reads :guilabel:`Edit`.
      #. Click the :guilabel:`Authorize an AWS IAM Role` button.
      #. Read through the :guilabel:`Overview` instructions, then click
         :guilabel:`Next`.
      #. If you'd like to create a new AWS IAM role for use with 
         |service|, use the :guilabel:`Create New Role with the AWS 
         CLI` procedure. If you have an existing AWS IAM role you want 
         to authorize for |service|, use the :guilabel:`Add Trust 
         Relationships to an Existing Role` procedure.

      .. _create-new-role-aws-cli:

      Create New Role with the AWS CLI
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      1. Click :guilabel:`Create New Role with the AWS CLI` to expand 
         the next section.
      #. Copy the JSON text and save it to a file named 
         ``role-trust-policy.json``.
      #. Enter a name for your new AWS IAM role in the text box.
      #. If you don't already have the AWS Command Line Interface (CLI)
         installed, see the `documentation
         <https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html>`__.
         If you do have the AWS CLI installed, proceed to the next step.
      #. Copy the CLI command and enter it at the command prompt.
      #. If successful, the CLI command returns a JSON document with 
         information about the newly created AWS IAM role. Locate the 
         field named :guilabel:`Arn` and copy it into the text box 
         labelled :guilabel:`Enter the Role ARN` in the |service| modal 
         window.
      #. Click :guilabel:`Validate and Finish`.

      .. _authorize-existing-aws-role:

      Add Trust Relationships to an Existing Role
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      1. Click :guilabel:`Add Trust Relationships to an Existing Role` 
         to expand the next section.
      #. Copy the JSON trust relationship text.
      #. In your AWS web console, navigate to the :guilabel:`Roles` 
         section of the IAM dashboard.
      #. Click on the role you want to authorize.
      #. Select the :guilabel:`Trust relationships` tab.
      #. Click the :guilabel:`Edit trust relationship` button.
      #. Replace the existing text with the JSON text you copied in 
         step 2.
      #. Click :guilabel:`Update Trust Policy`.
      #. Copy the Role ARN and paste it in the |service| modal window, 
         in the text box labelled :guilabel:`Enter the Role ARN`.
      #. Click :guilabel:`Validate and Finish`.

   .. tab:: API
      :tabid: api
   
      .. include:: /includes/steps/enable-unified-aws-access.rst

Resume an Authorization Procedure
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you cancel a procedure to authorize an AWS IAM role for use with 
|service|, you can resume it where you left off.

1. Expand the :guilabel:`Options` menu next to your project name
   in the {+atlas-ui+} upper left corner. Select 
   :guilabel:`Integrations`.

#. Click the :guilabel:`Configure` button in the :guilabel:`AWS IAM
   Role Access` panel.

   Note: if you already have one or more roles configured, the button
   reads :guilabel:`Edit`.

#. Any roles with an ongoing authorization procedure are listed with an
   ``in progress`` status. Click the :guilabel:`Resume` button to resume
   the authorization process.

To cancel an in-progress role authorization completely, click the
:guilabel:`Delete` icon next to the in-progress role.

Deauthorize an Assumed IAM Role
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You can deauthorize an existing |aws| IAM role from your |service| 
account with the {+atlas-admin-api+} or the {+atlas-ui+}.

.. note::

   Be sure to remove any associated |service| services from the IAM role
   before you deauthorize it.

.. tabs::

   .. tab:: UI
      :tabid: ui

      1. Expand the :guilabel:`Options` menu next to your project name
         in the {+atlas-ui+} upper left corner. Select 
         :guilabel:`Integrations`.
      #. Click the :guilabel:`Edit` button in the :guilabel:`AWS IAM
         Role Access` panel.
      #. Click the :guilabel:`Delete` button next to the IAM role you 
         want to deauthorize.

   .. tab:: API
      :tabid: api
   
      Use the ``DELETE`` API endpoint described in the :ref:`API 
      documentation <deauthorize-a-cloud-provider-access-role>`.

.. _manage-iam-roles:

Manage AWS IAM Roles
--------------------

You can manage the |aws| IAM roles |service| uses to access AWS services
with the {+atlas-ui+} and :ref:`API <cloud-provider-access-api-ref>`.

To navigate to the |service| :guilabel:`AWS IAM Role Access` screen:

1. Expand the :guilabel:`Options` menu next to your project name
   in the {+atlas-ui+} upper left corner. Select 
   :guilabel:`Integrations`.

#. Click the :guilabel:`Configure` button in the :guilabel:`AWS IAM
   Role Access` panel.

   Note: if you already have one or more roles configured, the button
   reads :guilabel:`Edit`.

You can perform the following actions from the |service| :guilabel:`AWS
IAM Role Access` screen:

- **View the list of authorized AWS IAM roles.**

  The list of roles displays the role's |arn|, its time of creation, and
  any |service| services configured to use the role.

- **Authorize an AWS IAM role.**

  Click the :guilabel:`Authorize an AWS IAM Role` button.

  .. note:: 
  
     If you have an authorization in progress, the associated role has
     a :guilabel:`Resume` button next to it.

  For detailed instructions, see :ref:`set-up-unified-aws-access`.

- **Deauthorize an AWS IAM role.**

  Click the :guilabel:`Delete` button next to the role.

  .. note::

     Be sure to remove any associated |service| services from the IAM 
     role before you deauthorize it.

- **View the details of an AWS IAM role.**

  Click the ellipsis (:guilabel:`...`) icon next to the role and select
  :guilabel:`View Role Details`.
