.. _alert-conditions:

=======================
Review Alert Conditions
=======================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: twocols

This page describes the conditions for which you can trigger alerts
related to your clusters. You specify conditions and thresholds when
:doc:`configuring alerts </configure-alerts>`.

.. include:: /includes/fact-free-shared-alerts.rst

Host Alerts
-----------

The conditions in this section apply if you select :guilabel:`Host` as
the alert target when configuring the alert. You can apply the
condition to all hosts or to specific type of host, such as
:term:`primaries <primary>` or
:term:`config servers <config server>`.

Advisor
~~~~~~~

.. alert:: Host has index suggestions

   Sends an alert if :ref:`Performance Advisor <performance-advisor>`
   has index suggestions for the host.

   If the :ref:`query targeting ratio <query-targeting-resolution>` for
   a host consistently exceeds 10,000 for a period of 10 minutes,
   Performance Advisor checks the host for inefficient queries and
   possible indexes to improve performance. If Performance Advisor
   determines that the host would benefit from one or more indexes,
   this alert triggers and directs you to create the suggested indexes.

   This alert is only available for ``M10+`` clusters, and is enabled
   by default for ``M10+`` clusters that have
   :ref:`Performance Advisor <performance-advisor>` enabled. This alert
   does not trigger for clusters where Performance Advisor is disabled.

Asserts
~~~~~~~

The following alert conditions measure the rate of asserts for a
MongoDB process, as collected from the MongoDB ``serverStatus``
command's :serverstatus:`asserts` document. You can view asserts
through :doc:`cluster monitoring </monitor-cluster-metrics>`.

.. alert:: Asserts: Regular is

   Sends an alert if the rate of regular asserts meets the specified
   threshold.

.. alert:: Asserts: Warning is

   Sends an alert if the rate of warnings meets the specified
   threshold.

.. alert:: Asserts: Msg is

   Sends an alert if the rate of message asserts meets the specified
   threshold. Message asserts are internal server errors. Stack traces
   are logged for these.

.. alert:: Asserts: User is

   Sends an alert if the rate of errors generated by users meets the
   specified threshold.

.. _alert-conditions-atlas-search:

Atlas Search
~~~~~~~~~~~~

The following alert conditions measure the amount of CPU and memory
used by |fts| processes. You can view |fts| metrics through
:ref:`cluster monitoring <view-atlas-search-metrics>`.

.. alert:: Search Memory: Resident is

   Sends an alert if the total bytes of resident memory occupied by the
   |fts| process is above or below the threshold.

.. alert:: Search Memory: Shared is

   Sends an alert if the total bytes of shared memory occupied by the
   |fts| process is above or below the threshold.

.. alert:: Search Memory: Virtual is

   Sends an alert if the total bytes of virtual memory occupied by the
   |fts| process is above or below the threshold.

.. alert:: Search Process: CPU (Kernel) % is

   Sends an alert if the percentage of time the CPU spent servicing
   operating system calls for the |fts| process is above the threshold.

.. alert:: Search Process: CPU (User) % is

   Sends an alert if the percentage of time the CPU spent servicing the
   |fts| process is above the threshold.

.. alert:: Search Process: Disk space used is

   Sends an alert if the total bytes of disk space used by the |fts|
   process is above the threshold.

.. alert:: Search Process: Ran out of memory

   Sends an alert if the search process (``mongot``) runs out of 
   memory. If the search process runs out of memory, indexing and 
   queries fail.

Average Execution Time
~~~~~~~~~~~~~~~~~~~~~~

The following alert conditions measure the average execution time of
reads, writes, or commands for a MongoDB process, as collected from the
MongoDB ``serverStatus`` command's :serverstatus:`opLatencies`
document. You can view asserts through
:doc:`cluster monitoring </monitor-cluster-metrics>`.

.. alert:: Average Execution Time: Commands is

   Average execution time for command operations meets your specified
   threshold.

.. alert:: Average Execution Time: Reads is

   Average execution time for read operations meets your specified
   threshold.

.. alert:: Average Execution Time: Writes is

   Average execution time for write operations meets your specified
   threshold.

Opcounter
~~~~~~~~~

The following alert conditions measure the rate of database operations
on a MongoDB process since the process last started, as collected from
the MongoDB ``serverStatus`` command's :serverstatus:`opcounters`
document. You can view opcounters through
:doc:`cluster monitoring </monitor-cluster-metrics>`.

.. alert:: Opcounter: Cmd is

   Sends an alert if the rate of commands performed meets the specified
   threshold.

.. alert:: Opcounter: Query is

   Sends an alert if the rate of queries meets the specified threshold.

.. alert:: Opcounter: Update is

   Sends an alert if the rate of updates meets the specified threshold.

.. alert:: Opcounter: Delete is

   Sends an alert if the rate of deletes meets the specified threshold.

.. alert:: Opcounter: Insert is

   Sends an alert if the rate of inserts meets the specified threshold.

.. alert:: Opcounter: Getmores is

   Sends an alert if the rate of ``getmore`` operations to retrieve the
   next cursor batch meets the specified threshold.

   .. seealso::

      To learn more, see
      :manual:`Cursor Batches </core/cursors/#cursor-batches>` in the
      MongoDB manual.

Opcounter - Repl
~~~~~~~~~~~~~~~~

The following alert conditions measure the rate of database operations
on MongoDB :term:`secondaries <secondary>`, as collected from the
MongoDB ``serverStatus`` command's :serverstatus:`opcountersRepl`
document. You can view these metrics on the
:guilabel:`Opcounters - Repl` chart, accessed through
:doc:`cluster monitoring </monitor-cluster-metrics>`.

.. alert:: Opcounter: Repl Cmd is

   Sends an alert if the rate of replicated commands meets the
   specified threshold.

.. alert:: Opcounter: Repl Update is

   Sends an alert if the rate of replicated updates meets the specified
   threshold.

.. alert:: Opcounter: Repl Delete is

   Sends an alert if the rate of replicated deletes meets the specified
   threshold.

.. alert:: Opcounter: Repl Insert is

   Sends an alert if the rate of replicated inserts meets the specified
   threshold.

Atlas Free Tier
~~~~~~~~~~~~~~~

.. alert:: Logical Size is

   Sends an alert if the total size of the data and indexes is outside
   the specified threshold.

   *Applicable for Atlas Free Tier Only*

Memory
~~~~~~

The following alert conditions measure memory for a MongoDB process, as
collected from the MongoDB ``serverStatus`` command's
:serverstatus:`mem` document. You can view these metrics on the
|service| :guilabel:`Memory` and :guilabel:`Non-Mapped Virtual Memory`
charts, accessed through :doc:`cluster monitoring </monitor-cluster-metrics>`.

.. alert:: Memory: Resident is

   Sends an alert if the size of the resident memory meets the
   specified threshold. It is typical over time, on a dedicated
   database server, for the size of the resident memory to approach the
   amount of physical RAM on the box.

.. alert:: Memory: Virtual is

   Sends an alert if the size of virtual memory for the |mongod|
   process meets the specified threshold. You can use this alert to
   flag excessive memory outside of memory mapping.

   .. seealso::

      To learn more, click the :guilabel:`Memory` chart's
      :guilabel:`i` icon.

.. alert:: Memory: Computed is

   Sends an alert if the size of virtual memory that is not accounted
   for by memory-mapping meets the specified threshold. If this number
   is very high (multiple gigabytes), it indicates that excessive
   memory is being used outside of memory mapping.

   .. seealso::

      To learn how to use this metric, view the
      :guilabel:`Non-Mapped Virtual Memory` chart and click the
      chart's :guilabel:`i` icon.

.. alert:: Memory: System Used is

   Sends an alert if system memory usage meets the specified threshold.

.. alert:: Memory: System Free is

   Sends an alert if the amount of free system memory drops below the
   specified threshold.

.. alert:: Memory: System Available is

   Sends an alert if the amount of available system memory drops below
   the specified threshold.

.. _alert-conditions-connections:

Connections
~~~~~~~~~~~

The following alert condition measures connections to a MongoDB
process, as collected from the MongoDB ``serverStatus`` command's
:serverstatus:`connections` document. You can view this metric on the
|service| :guilabel:`Connections` chart, accessed through :doc:`cluster
monitoring </monitor-cluster-metrics>`.

.. alert:: Connections is

   Sends an alert if the number of active connections to the host meets
   the specified average.

.. alert:: Connections % of configured limit is

   Sends an alert if the number of open connections to the host exceeds
   the specified percentage.

Queues
~~~~~~

The following alert conditions measure operations waiting on locks, as
collected from the MongoDB ``serverStatus`` command's
:serverstatus:`globalLock` document. You can view these metrics on the
|service| :guilabel:`Queues` chart, accessed through :doc:`cluster monitoring
</monitor-cluster-metrics>`.

.. alert:: Queues: Total is

   Sends an alert if the number of operations waiting on a
   :term:`lock` of any type meets the specified average.

.. alert:: Queues: Readers is

   Sends an alert if the number of operations waiting on a :term:`read
   lock` meets the specified average.

.. alert:: Queues: Writers is

   Sends an alert if the number of operations waiting on a :term:`write
   lock` meets the specified average.

Page Faults
~~~~~~~~~~~

The following alert condition measures the rate of page faults for a
MongoDB process, as collected from the MongoDB ``serverStatus``
command's :serverstatus:`extra_info.page_faults` field.

.. alert:: Page Faults is

   Sends an alert if the rate of page faults (whether or not an
   exception is thrown) meets the specified threshold. You can view
   this metric on the |service| :guilabel:`Page Faults` chart, accessed
   through :doc:`cluster monitoring </monitor-cluster-metrics>`.

Cursors
~~~~~~~

The following alert conditions measure the number of
:manual:`cursors </core/cursors>` for a MongoDB process, as collected
from the MongoDB ``serverStatus`` command's
:serverstatus:`metrics.cursor` document. You can view these metrics on
the |service| :guilabel:`Cursors` chart, accessed through
:doc:`cluster monitoring </monitor-cluster-metrics>`.

.. alert:: Cursors: Open is

   Sends an alert if the number of cursors the server is maintaining
   for clients meets the specified average.

.. alert:: Cursors: Timed Out is

   Sends an alert if the number of timed-out cursors the server is
   maintaining for clients meets the specified average.

Network
~~~~~~~

The following alert conditions measure throughput for MongoDB process,
as collected from the MongoDB ``serverStatus`` command's
:serverstatus:`network` document. You can view these metrics on a
host's :guilabel:`Network` chart, accessed through :doc:`cluster
monitoring </monitor-cluster-metrics>`.

.. alert:: Network: Bytes In is

   Sends an alert if the number of bytes sent *to* MongoDB meet the
   specified threshold.

.. alert:: Network: Bytes Out is

   Sends an alert if the number of bytes sent *from* MongoDB meet the
   specified threshold.

.. alert:: Network: Num Requests is

   Sends an alert if the number of requests sent to MongoDB meet the
   specified average.

Replication Oplog
~~~~~~~~~~~~~~~~~

The following alert conditions apply to the MongoDB process's
:manual:`oplog </core/replica-set-oplog>`. You can view these metrics
on the following charts, accessed through
:doc:`cluster monitoring </monitor-cluster-metrics>`:

- :guilabel:`Replication Oplog Window`
- :guilabel:`Replication Lag`
- :guilabel:`Replication Headroom`
- :guilabel:`Oplog GB/Hour`

The following alert conditions apply to the oplog:

.. alert:: Replication Oplog Window is

   Sends an alert if the approximate amount of time available in the
   :term:`primary's <primary>` replication :term:`oplog` meets the
   specified threshold.

.. alert:: Replication Lag is

   Sends an alert if the approximate amount of time that the
   :term:`secondary` is behind the primary meets the specified
   threshold. |service| calculates replication lag using the approach
   described in
   :ref:`Check the Replication Lag <replica-set-replication-lag>` in
   the MongoDB manual.

.. alert:: Replication Headroom is

   Sends an alert when the difference between the sync source member's
   oplog window and the replication lag time on the secondary meets the
   specified threshold.

.. alert:: Oplog Data Per Hour is

   Sends an alert when the amount of data per hour being written to a
   primary's oplog meets the specified threshold.

.. _db-storage-alerts:

DB Storage
~~~~~~~~~~

The following alert conditions apply to database storage, as collected
for a MongoDB process by the MongoDB
:manual:`dbStats </reference/command/dbStats>` command. For details on
how |service| handles reaching database storage limits, refer to the
:ref:`FAQ page <faq-storage limit>`. These conditions are based on the
summed total of **all databases** on the MongoDB process:

.. alert:: DB Storage is

   Sends an alert if the allocated storage meets the specified
   threshold. This alert condition can be viewed on a host's
   :guilabel:`DB Storage` chart, accessed through
   :doc:`cluster monitoring </monitor-cluster-metrics>`.

.. alert:: DB Data Size is

    Sends an alert if approximate size of all documents (and their
    paddings) meets the specified threshold.

WiredTiger Storage Engine
~~~~~~~~~~~~~~~~~~~~~~~~~

The following alert conditions apply to the MongoDB process's
:manual:`WiredTiger </core/wiredtiger>` storage engine, as collected
from the MongoDB ``serverStatus`` command's
:serverstatus:`wiredTiger.cache` and
:serverstatus:`wiredTiger.concurrentTransactions` documents.

You can view these metrics on the following charts, accessed through
:doc:`cluster monitoring </monitor-cluster-metrics>`:

- :guilabel:`Tickets Available`
- :guilabel:`Cache Activity`
- :guilabel:`Cache Usage`

The following are the alert conditions that apply to WiredTiger:

.. alert:: Tickets Available: Reads is

   Sends an alert if the number of read tickets available to the
   WiredTiger storage engine meet the specified threshold.

.. alert:: Tickets Available: Writes is

   Sends an alert if the number of write tickets available to the
   WiredTiger storage engine meet the specified threshold.

.. alert:: Cache: Dirty Bytes is

   Sends an alert when the number of dirty bytes in the WiredTiger
   cache meets the specified threshold.

.. alert:: Cache: Used Bytes is

   Sends an alert when the number of used bytes in the WiredTiger cache
   meets the specified threshold.

.. alert:: Cache: Bytes Read Into Cache is

   Sends an alert when the number of bytes read into the WiredTiger
   cache meets the specified threshold.

.. alert:: Cache: Bytes Written From Cache is

   Sends an alert when the number of bytes written from the WiredTiger
   cache meets the specified threshold.

System and Disk Alerts
~~~~~~~~~~~~~~~~~~~~~~

The following alert conditions measure usage on your |service| server
clusters:

.. alert:: System: CPU (Steal) % is

   *Applicable when the EC2 cluster credit balance is exhausted.*

   The percentage by which the CPU usage exceeds the guaranteed
   baseline CPU credit accumulation rate. CPU credits are units of CPU
   utilization that you accumulate. The credits accumulate at a
   constant rate to provide a guaranteed level of performance. These
   credits can be used for additional CPU performance. When the credit
   balance is exhausted, only the guaranteed baseline of CPU
   performance is provided, and the amount of excess is shown as steal
   percent.

   .. note::

      |service| triggers this alert only for AWS EC2 clusters that
      support :aws:`Burstable Performance </AWSEC2/latest/UserGuide/burstable-performance-instances.html>`.
      Currently, these are ``M10`` and ``M20`` cluster types.

.. alert:: System: CPU (User) % is

   The CPU usage of the MongoDB process, normalized by the number
   of CPUs. This value is scaled to a range of 0-100%.

.. alert:: System: Network bytes in is

   Sends an alert if the average rate of physical bytes received per
   second by the ``eth0`` network interface reaches the specified
   threshold.

.. alert:: System: Network bytes out is

   Sends an alert if the average rate of physical bytes transmitted per
   second by the ``eth0`` network interface reaches the specified threshold.

.. alert:: Disk space % used on Data Partition is

   The percentage of disk space used on any partition that contains the
   MongoDB collection data.

   To find possible solutions for this alert, see
   :doc:`Alert Resolutions </reference/alert-resolutions/disk-space-used>`.

.. alert:: Disk space % used on Index Partition is

   The percentage of disk space used on any partition that contains the
   MongoDB index data.

   To find possible solutions for this alert, see
   :doc:`Alert Resolutions </reference/alert-resolutions/disk-space-used>`.

.. alert:: Disk space % used on Journal Partition is

   The percentage of disk space used on the partition that contains the
   MongoDB journal, if journaling is enabled.

   To find possible solutions for this alert, see
   :doc:`Alert Resolutions </reference/alert-resolutions/disk-space-used>`.

.. alert:: Disk I/O % utilization on Data Partition is

   The percentage of time during which requests are being issued
   to any partition that contains the MongoDB collection data.
   This includes requests from any process, not just MongoDB processes.
   The threshold is specified when the alert is created.

.. alert:: Disk I/O % utilization on Index Partition is

   The percentage of time during which requests are being issued to any
   partition that contains the MongoDB index data. This includes
   requests from any process, not just MongoDB processes.

.. alert:: Disk I/O % utilization on Journal Partition is

   The percentage of time during which requests are being issued to the
   partition that contains the MongoDB journal, if journaling is
   enabled. This includes requests from any process, not just MongoDB
   processes.

.. alert:: Disk Queue Depth is

   Sends an alert if the average length of the queue of requests issued 
   to the disk partitition that MongoDB uses exceeds the specified 
   threshold.

.. alert:: Disk read IOPS on Data Partition is

   Sends an alert if the average number of disk read operations per
   second exceeds the specified threshold.

.. alert:: Disk read IOPS on Index Partition is

   Sends an alert if the average number of disk read operations per
   second exceeds the specified threshold.

.. alert:: Disk read IOPS on Journal Partition is

   Sends an alert if the average number of disk read operations per
   second exceeds the specified threshold.

.. alert:: Disk read latency on Data Partition is

   Sends an alert if the amount of latency on disk read operations
   exceeds the specified threshold.

.. alert:: Disk read latency on Index Partition is

   Sends an alert if the amount of latency on disk read operations
   exceeds the specified threshold.

.. alert:: Disk read latency on Journal Partition is

   Sends an alert if the amount of latency on disk read operations
   exceeds the specified threshold.

.. alert:: Disk write IOPS on Data Partition is

   Sends an alert if the average number of disk write operations per
   second exceeds the specified threshold.

.. alert:: Disk write IOPS on Index Partition is

   Sends an alert if the average number of disk write operations per
   second exceeds the specified threshold.

.. alert:: Disk write IOPS on Journal Partition is

   Sends an alert if the average number of disk write operations per
   second exceeds the specified threshold.

.. alert:: Disk write latency on Data Partition is

   Sends an alert if the amount of latency on disk write operations
   exceeds the specified threshold.

.. alert:: Disk write latency on Index Partition is

   Sends an alert if the amount of latency on disk write operations
   exceeds the specified threshold.

.. alert:: Disk write latency on Journal Partition is

   Sends an alert if the amount of latency on disk write operations
   exceeds the specified threshold.

Restarts
~~~~~~~~

.. alert:: Restarts in Last Hour is

   Sends an alert if the number of times a host restarts within the
   previous hour exceeds the specified threshold.

Host Down
~~~~~~~~~

.. alert:: Host is Down
 
   .. important::

      This alert is deprecated. You can only :doc:`configure it using the API
      </reference/api/alert-configurations/>`.
   
   Sends an alert if |service| is unable to reach a host for several
   minutes.

   .. important::

      You should only configure this alert if you depend on secondary
      reads. For more information on secondary reads, see
      :ref:`replica-set-tags` and :ref:`replica-set-read-preference`.

   This alert is generally triggered by one of the following
   conditions:

   - The cluster has experienced a failure and is being auto-healed.
   - The cluster could not be reached because of a network issue.

   |service-fullname| checks that the downtime did not occur because of
   your actions, such as :manual:`rolling index builds
   </tutorial/build-indexes-on-replica-sets/>`. If |service-fullname| confirms
   that the downtime was not intentional, |service-fullname| attempts to replace
   the affected node. If failures occur, |service| clusters maintain node
   availability for both reads and writes as long as a majority of nodes are
   running. To learn more, see :ref:`How does MongoDB Atlas deliver high
   availability? <high-availability>`.

Swap
~~~~

.. alert:: Swap: used is

   Sends an alert if the total amount swap space in use reaches the specified
   threshold.

.. alert:: Swap: free is

   Sends an alert if the amount of available swap space drops below the
   specified threshold.

Inapplicable Host Conditions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following host conditions do not apply to |service|. |service| will
not generate alerts for the following conditions:

- Memory: Mapped is

- B-tree: accesses is

- B-tree: hits is

- B-tree: misses is

- B-tree: miss ratio is

- Effective Lock % is

- Background Flush Average is

- Accesses Not In Memory: Total is

- Page Fault Exceptions Thrown: Total is

- Cursors: Client Cursors Size is

- Journaling Commits in Write Lock is

- Journaling MB is

- Journaling Write Data Files MB is

Query Targeting Alerts
----------------------

The following alerts apply to indexes on your collections. Either alert
may indicate a missing or inefficient index.

.. seealso::

   To learn more about indexing to improve performance, see
   :manual:`Indexing Strategies </applications/indexes>`.

.. alert:: Query Targeting: Scanned / Returned

   Sends an alert if the ratio of index keys scanned to documents
   returned meets or exceeds the specified threshold.

.. alert:: Query Targeting: Scanned Objects / Returned

   Sends an alert if the ratio of documents scanned to documents
   returned meets or exceeds the specified threshold.

Cloud Backup Alerts
-------------------

The following alerts apply to {+Cloud-Backup+} snapshots.

.. alert:: Snapshot taken successfully

   Sends an alert when a snapshot was taken successfully.

.. alert:: Fallback snapshot taken

   Sends an alert when a regular backup fails, but |service| was able
   to take a fallback snapshot.

.. alert:: Fallback snapshot failed

   Sends an alert when a fallback snapshot fails.

   .. seealso::

      :ref:`cps-failback-snapshots`.

.. alert:: Snapshot schedule fell behind

   Sends an alert when a snapshot hasn't been taken over configured
   period.

.. alert:: Backup restore failed

   Sends an alert when a restore fails.

.. alert:: Backup restore succeeded

   Sends an alert when a restore succeeds.

.. alert:: Snapshot download request failed

   Sends an alert when a download request fails.

Replica Set Alerts
------------------

The following alert conditions apply to
:term:`replica sets <replica set>`:

.. alert:: Replica set has no primary

   Sends an alert when a replica set does not have a :term:`primary`.
   Specifically, when none of the members of a replica set have a
   status of ``PRIMARY``, the alert triggers. For example, this
   condition may arise when a set has an even number of voting members
   resulting in a tie.

   .. include:: /includes/fact-replica-set-no-primary.rst

   To find possible solutions for this alert, see
   :doc:`Alert Resolutions </reference/alert-resolutions/no-primary>`.

.. alert:: Replica set elected a new primary

   Sends an alert when a replica set elects a new :term:`primary`.

.. alert:: Number of elections in last hour is > X

   Sends an alert when the number of elections that have occurred in
   the last hour exceeds the user-specified value of ``X``. The value
   of ``X`` is set when you create the alert. This alert may indicate
   that the cluster's replication is not in a healthy state, as
   evidenced by constant elections.

Sharded Cluster Alerts
----------------------

The following alert condition applies to
:term:`sharded clusters <sharded cluster>`:

.. alert:: Cluster is missing an active mongos

   Sends an alert if |service| cannot reach a |mongos| for the cluster.

User Alerts
-----------

The following alert conditions apply to |service| users.

.. alert:: Organization users do not have multi-factor authentication enabled

   Sends an alert when one or more users in an organization do not
   have :doc:`multi-factor authentication </security-multi-factor-authentication>`
   enabled.

.. alert:: User joined the project

   Sends an alert when a new user joins the |service| project.

.. alert:: User left the project

   Sends an alert when a user leaves the |service| project.

.. alert:: User had their role changed

   Sends an alert when an |service| user's project or organization
   roles have changed.

.. alert:: User joined the organization

   Sends an alert when a new user joins the |service| organization.

.. alert:: User left the organization

   Sends an alert when a user leaves the |service| organization.

Project Alerts
--------------

The following alert conditions apply to your |service| project.

.. alert:: Users awaiting approval to join project

   Sends an alert if there are users who have asked to join the
   project. A user can ask to join a project when first registering for
   |service|.

.. alert:: Users do not have multi-factor authentication enabled

   Sends an alert if the project or organization has users who have
   not set up multi-factor authentication.

.. _billing-alerts:

Billing Alerts
--------------

The following alert conditions apply to |service| billing. You can 
configure billing alerts from the |service| UI at the organization 
level or the project level.

To configure organization-level alerts, select your organization and 
navigate to :guilabel:`Alerts`.

To configure project-level alerts, select your project. Navigate 
to your project settings and then to :guilabel:`Alerts`, or click the 
:icon-mms:`bell` icon in the top right corner of your project cluster 
view.

.. note::

   All amounts billed are in :abbr:`USD (United States Dollars)`.
   
.. alert:: Credit card is about to expire

   Sends an alert if the credit card on file is about to expire. The
   alert is triggered at the beginning of the month that the card
   expires. |service| enables this alert when a credit card is added
   for the first time.

   This condition applies to both organizations and projects.

.. alert:: Amount billed ($) yesterday is above the threshold

   Sends an alert if the organization or project's last daily amount
   billed exceeds your configured threshold. |service| does not account
   for any credits applied for the previous day when calculating the
   billed amount.

   This condition applies to both organizations and projects.

.. alert:: Current bill ($) for any single project is above the threshold

   Sends an alert if the monthly total for any project within the
   organization exceeds your configured threshold for all projects.
   When the current pending invoice closes, this alert resets.

   This alert condition applies to organizations only.

.. alert:: Current bill ($) for the organization is above the threshold

   Sends an alert if the monthly total for the organization exceeds
   your configured threshold. When the current pending invoice closes,
   this alert resets.

   This alert condition applies to organizations only.

.. _alert-conditions-encryption-at-rest:

Encryption at Rest Alerts
-------------------------

The following alert conditions apply to projects using
:ref:`security-kms-encryption`.

.. alert:: AWS encryption key elapsed time since last rotation is above (n) days

   Sends an alert if the AWS Customer Master Key (CMK) used by the
   |service| project has been active for more than the configured
   number of days (90 by default). You can modify the alert
   threshold from the :guilabel:`Alert Settings` tab of the
   :guilabel:`Alerts` view.

   |service| automatically rotates MongoDB master encryption keys
   every 90 days, but does not rotate the project's
   :abbr:`CMK (Customer Master Key)`.

   This alert resets automatically if you rotate the project
   :abbr:`CMK (Customer Master Key)`. For documentation on how to
   rotate your project :abbr:`CMK (customer master key)`, see
   :doc:`/tutorial/security-aws-kms-rotate-key`.

.. alert:: Azure encryption key elapsed time since last rotation is above (n) days

   Sends an alert if the Azure Key Vault Key Identifier used by the
   |service| project has been active for more than the configured
   number of days (90 by default). You can modify the alert threshold
   from the :guilabel:`Alert Settings` tab of the
   :guilabel:`Alerts` view.

   |service| automatically rotates MongoDB master encryption keys every
   90 days, but does not rotate the project's Key Identifier.

   This alert resets automatically if you rotate the project Key
   Identifier. For documentation on how to rotate your project Key
   Identifier, see :ref:`azure-kms-rotate-key`.

.. alert:: GCP encryption key elapsed time since last rotation is above (n) days

   Sends an alert if the GCP Key Version Resource ID used by the
   |service| project has been active for more than the configured
   number of days (90 by default). You can modify the alert threshold
   from the :guilabel:`Alert Settings` tab of the
   :guilabel:`Alerts` view.

   |service| automatically rotates MongoDB master encryption keys every
   90 days, but does not rotate the project's Key Version Resource ID.

   This alert resets automatically if you rotate the project
   Key Version Resource ID.

   .. seealso::

      To learn how to rotate your project Key Version Resource ID, see
      :ref:`gcp-kms-rotate-key`.

.. _maintenance-window-alerts:

Maintenance Window Alerts
-------------------------

The following alert conditions apply to projects with
:ref:`configured maintenance windows <atlas-modify-project-settings>`.

.. note::

   You can only :ref:`configure maintenance window alerts
   <configure-mw-alert>` if a project has an active maintenance window.

.. alert:: Maintenance Is Scheduled

   Sends an alert 72 hours prior to scheduled maintenance for a
   project.

.. alert:: Maintenance Started

   Sends an alert when maintenance starts for a project.

.. alert:: Maintenance No Longer Needed

   Sends an alert if scheduled maintenance is no longer needed for a
   project.
