.. _rm-manage-relational-model:

===========================
Manage the Relational Model
===========================

.. meta::
   :description: Manage schemas and tables for migration projects by connecting to databases or using DDL files, and change database connections for different environments.

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

You can change the schemas or tables you want to include in 
your migration project by connecting to the source database 
or using a {+ddl+} file to refresh the list of available tables.

You can also change the relational and MongoDB :ref:`database connections
<rm-database-connections>` to migrate from or to a different database, such as
switching from a staging environment to production.


Add or Remove Tables from a Project
-----------------------------------

To change the tables you're migrating from your relational database, use 
the :guilabel:`Manage` button.

1. From the :guilabel:`Mapping` screen, click the :guilabel:`Manage` button on the 
   :guilabel:`Schema model` pane.

#. Click the check box next to the schema or schemas you are migrating. 

#. To expand the tables in a schema, click the :icon-fa5:`chevron-right`
   button.

   Select the tables you want to add or remove from your migration.

#. Click :guilabel:`Save`. 

   Changes from your relational database are reflected in the main 
   {+rel-mig+} diagram and included in future migration jobs.


Refresh Schema Changes
----------------------

If your relational database table structure changes, use the 
:guilabel:`Refresh Schema` button to let {+rel-mig+} know. 

1. From the :guilabel:`Mapping` screen, click the :guilabel:`Manage` 
   button on the :guilabel:`Schema model` pane.

#. To refresh the schema for the active :ref:`Relational DB connection 
   <rm-database-connections>`, click the :guilabel:`Refresh schema` button on the Manage relational model modal.

#. To refresh the schema for a file, click :ref:`Import DDL File  <import-ddl-file>`


.. _connect-to-db:

Change Databases
----------------

You can change the active :guilabel:`Relational DB` in the Database Connections
bar, such as switching the connection from a staging database to one in
production. This re-scans the schema. Migrator reads in any changes in foreign
key relations or data types for underlying tables.

.. note::

   You can only use saved connections or create new connections of the
   same database type originally used in the project.

1. Click the :guilabel:`Relational DB` drop-down.

   To use a saved :ref:`relational database connection <rm-database-connections>`, 
   click :guilabel:`Use a saved connection` and select it from the drop-down, 
   then enter credentials if required.
     
   To create a new connection, click :guilabel:`+ Add Connection`:

   .. include:: /includes/steps-create-relational-connection-short.rst
   
 
Any changes from your relational database are reflected in 
the main {+rel-mig+} diagram and included in future 
migration jobs.

.. _import-ddl-file:

Import DDL File
~~~~~~~~~~~~~~~

:guilabel:`Import DDL File` opens a file prompt that accepts a {+ddl+} file of the 
relational schema you are migrating. Any changes in the foreign key relations or 
data types for the underlying tables are read into Migrator.


1. Select your :guilabel:`Database type`.

   {+rel-mig+} currently supports the following database types:

   - MySQL
   - Oracle
   - PostgreSQL
   - SQL Server

#. Choose a file or drag and drop a {+ddl+} statement file.

#. Click :guilabel:`Import`.

#. Click :guilabel:`Save`. 


Any changes from your relational database are reflected in the main 
{+rel-mig+} diagram and included in future migration jobs.
