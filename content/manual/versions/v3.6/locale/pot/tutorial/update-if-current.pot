# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/update-if-current.txt:3
# ab96cc7587d547b68c47cdde442357c6
msgid "Update Document if Current"
msgstr ""

#: ../source/tutorial/update-if-current.txt:8
# 396788b9b9434766bff2b09c59a3f3f0
msgid "Overview"
msgstr ""

#: ../source/tutorial/update-if-current.txt:10
# 64d1316c3e70409f852f07446559470d
msgid "The *Update if Current* pattern is an approach to :ref:`concurrency control <concurrency-control>` when multiple applications have access to the data."
msgstr ""

#: ../source/tutorial/update-if-current.txt:16
# d0d399c2095e4a178777395880453e90
msgid "Pattern"
msgstr ""

#: ../source/tutorial/update-if-current.txt:18
# 9410b9dafd1b43d992fa3d6364913535
msgid "The pattern queries for the document to update. Then, for each field to modify, the pattern includes the field and its value in the returned document in the query predicate for the update operation. This way, the update only modifies the document fields *if* the fields have not changed since the query."
msgstr ""

#: ../source/tutorial/update-if-current.txt:25
# eb4e85cd3b834a20bd79aada09fb40f4
msgid "Example"
msgstr ""

#: ../source/tutorial/update-if-current.txt:27
# 1d10d79798254b24a8ea36f40a179088
msgid "Consider the following example in the :program:`mongo` shell. The example updates the ``quantity`` and the ``reordered`` fields of a document *only* if the fields have not changed since the query."
msgstr ""

#: ../source/tutorial/update-if-current.txt:31
# 3fdfd3eca4804021aed0d8172e4c7a64
msgid "The :method:`db.collection.update()` method now returns a :method:`WriteResult()` object that contains the status of the operation. Previous versions required an extra :method:`db.getLastErrorObj()` method call."
msgstr ""

#: ../source/tutorial/update-if-current.txt:71
# f134101575204d6e9f2a1cc1f3447c85
msgid "Modifications to the Pattern"
msgstr ""

#: ../source/tutorial/update-if-current.txt:73
# 78ce3a7e48bd445cbc079a407727713c
msgid "Another approach is to add a ``version`` field to the documents. Applications increment this field upon each update operation to the documents. You must be able to ensure that *all* clients that connect to your database include the ``version`` field in the query predicate. To associate increasing numbers with documents in a collection, you can use one of the methods described in :doc:`/tutorial/create-an-auto-incrementing-field`."
msgstr ""

#: ../source/tutorial/update-if-current.txt:81
# ec5e9edbb369457ca62e824f20d8ab0e
msgid "For more approaches, see :ref:`concurrency-control`."
msgstr ""

