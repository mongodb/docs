# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: 2014-04-08 18:42+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/reference/limits.txt:3
msgid "MongoDB Limits and Thresholds"
msgstr ""

#: ../source/reference/limits.txt:13
msgid ""
"This document provides a collection of hard and soft limitations of the "
"MongoDB system."
msgstr ""

#: ../source/reference/limits.txt:17
msgid "BSON Documents"
msgstr ""

#: ../source/includes/fact-document-max-size.rst:1
msgid "The maximum BSON document size is 16 megabytes."
msgstr ""

#: ../source/includes/fact-document-max-size.rst:3
msgid ""
"The maximum document size helps ensure that a single document cannot use "
"excessive amount of RAM or, during transmission, excessive amount of "
"bandwidth. To store documents larger than the maximum size, MongoDB "
"provides the GridFS API. See :binary:`~bin.mongofiles` and the "
"documentation for your :ecosystem:`driver </drivers>` for more "
"information about GridFS."
msgstr ""

#: ../source/reference/limits.txt:27
msgid ""
"MongoDB supports no more than 100 levels of nesting for :term:`BSON "
"documents <document>`."
msgstr ""

#: ../source/reference/limits.txt:35
msgid "Naming Restrictions"
msgstr ""

#: ../source/reference/limits.txt:39
msgid ""
"Since database names are case *insensitive* in MongoDB, database names "
"cannot differ only by the case of the characters."
msgstr ""

#: ../source/reference/limits.txt:44
msgid ""
"For MongoDB deployments running on Windows, database names cannot contain"
" any of the following characters:"
msgstr ""

#: ../source/reference/limits.txt:51 ../source/reference/limits.txt:62
msgid "Also database names cannot contain the null character."
msgstr ""

#: ../source/reference/limits.txt:55
msgid ""
"For MongoDB deployments running on Unix and Linux systems, database names"
" cannot contain any of the following characters:"
msgstr ""

#: ../source/reference/limits.txt:66
msgid "Database names cannot be empty and must have fewer than 64 characters."
msgstr ""

#: ../source/reference/limits.txt:70
msgid ""
"Collection names should begin with an underscore or a letter character, "
"and *cannot*:"
msgstr ""

#: ../source/reference/limits.txt:73
msgid "contain the ``$``."
msgstr ""

#: ../source/reference/limits.txt:75
msgid "be an empty string (e.g. ``\"\"``)."
msgstr ""

#: ../source/reference/limits.txt:77
msgid "contain the null character."
msgstr ""

#: ../source/reference/limits.txt:79
msgid "begin with the ``system.`` prefix. (Reserved for internal use.)"
msgstr ""

#: ../source/reference/limits.txt:81
msgid ""
"If your collection name includes special characters, such as the "
"underscore character, or begins with numbers, then to access the "
"collection use the :method:`db.getCollection()` method in the "
":binary:`~bin.mongo` shell or a :api:`similar method for your driver <>`."
msgstr ""

#: ../source/includes/fact-collection-namespace-limit.rst:1
msgid ""
"The maximum length of the collection namespace, which includes the "
"database name, the dot (``.``) separator, and the collection name (i.e. "
"``<database>.<collection>``), is 120 bytes."
msgstr ""

#: ../source/includes/fact-document-field-name-restrictions.rst:1
msgid "Field names **cannot** contain the ``null`` character."
msgstr ""

#: ../source/includes/fact-document-field-name-restrictions.rst:3
msgid ""
"Top-level field names **cannot** start with the dollar sign (``$``) "
"character."
msgstr ""

#: ../source/includes/fact-document-field-name-restrictions.rst:5
msgid ""
"Otherwise, starting in MongoDB 3.6, the server permits storage of field "
"names that contain dots (i.e. ``.``) and dollar signs (i.e. ``$``)."
msgstr ""

#: ../source/includes/fact-document-field-name-restrictions.rst:11
msgid ""
"The MongoDB Query Language cannot always meaningfully express queries "
"over documents whose field names contain these characters (see "
":issue:`SERVER-30575`)."
msgstr ""

#: ../source/includes/fact-document-field-name-restrictions.rst:15
msgid ""
"Until support is added in the query language, the use of ``$`` and ``.`` "
"in field names is not recommended and is not supported by the official "
"MongoDB drivers."
msgstr ""

#: ../source/reference/limits.txt:97
msgid "Namespaces"
msgstr ""

#: ../source/reference/limits.txt:104 ../source/reference/limits.txt:132
msgid ":ref:`faq-restrictions-on-collection-names`"
msgstr ""

#: ../source/reference/limits.txt:111
msgid ""
"For the MMAPv1 the number of namespaces is limited to the size of the "
"namespace file divided by 628."
msgstr ""

#: ../source/reference/limits.txt:114
msgid ""
"A 16 megabyte namespace file can support approximately 24,000 namespaces."
" Each collection and index is a namespace."
msgstr ""

#: ../source/reference/limits.txt:117 ../source/reference/limits.txt:130
#: ../source/reference/limits.txt:266 ../source/reference/limits.txt:276
msgid "The WiredTiger storage engine is *not* subject to this limitation."
msgstr ""

#: ../source/reference/limits.txt:124
msgid ""
"For the MMAPv1 storage engine, namespace files can be no larger than 2047"
" megabytes."
msgstr ""

#: ../source/reference/limits.txt:127
msgid ""
"By default namespace files are 16 megabytes. You can configure the size "
"using the :setting:`~storage.mmapv1.nsSize` option."
msgstr ""

#: ../source/reference/limits.txt:137
msgid "Indexes"
msgstr ""

#: ../source/reference/limits.txt:142
msgid ""
"The *total size* of an index entry, which can include structural overhead"
" depending on the BSON type, must be *less than* 1024 bytes."
msgstr ""

#: ../source/includes/list-index-field-limit-behaviors.rst:1
msgid ""
"MongoDB versions 2.6 and greater implement a stronger enforcement of the "
"limit on :limit:`index key <Index Key Limit>`:"
msgstr ""

#: ../source/includes/fact-index-key-length-operation-behaviors.rst:3
msgid ""
"MongoDB will **not** create an index on a collection if the index entry "
"for an existing document exceeds the |limit|. Previous versions of "
"MongoDB would create the index but not index such documents."
msgstr ""

#: ../source/includes/fact-index-key-length-operation-behaviors.rst:3
msgid ""
"Reindexing operations will error if the index entry for an indexed field "
"exceeds the |limit|. Reindexing operations occur as part of "
":dbcommand:`compact` and :dbcommand:`repairDatabase` commands as well as "
"the :method:`db.collection.reIndex()` method."
msgstr ""

#: ../source/includes/fact-index-key-length-operation-behaviors.rst:8
msgid ""
"Because these operations drop *all* the indexes from a collection and "
"then recreate them sequentially, the error from the |limit| prevents "
"these operations from rebuilding any remaining indexes for the collection"
" and, in the case of the :dbcommand:`repairDatabase` command, from "
"continuing with the remainder of the process."
msgstr ""

#: ../source/includes/fact-index-key-length-operation-behaviors.rst:3
msgid ""
"MongoDB will not insert into an indexed collection any document with an "
"indexed field whose corresponding index entry would exceed the |limit|, "
"and instead, will return an error. Previous versions of MongoDB would "
"insert but not index such documents."
msgstr ""

#: ../source/includes/fact-index-key-length-operation-behaviors.rst:3
msgid ""
"Updates to the indexed field will error if the updated value causes the "
"index entry to exceed the |limit|."
msgstr ""

#: ../source/includes/fact-index-key-length-operation-behaviors.rst:6
msgid ""
"If an existing document contains an indexed field whose index entry "
"exceeds the limit, *any* update that results in the relocation of that "
"document on disk will error."
msgstr ""

#: ../source/includes/fact-index-key-length-operation-behaviors.rst:3
msgid ""
":binary:`~bin.mongorestore` and :binary:`~bin.mongoimport` will not "
"insert documents that contain an indexed field whose corresponding index "
"entry would exceed the |limit|."
msgstr ""

#: ../source/includes/fact-index-key-length-operation-behaviors.rst:3
msgid ""
"In MongoDB 2.6, secondary members of replica sets will continue to "
"replicate documents with an indexed field whose corresponding index entry"
" exceeds the |limit| on initial sync but will print warnings in the logs."
msgstr ""

#: ../source/includes/fact-index-key-length-operation-behaviors.rst:8
msgid ""
"Secondary members also allow index build and rebuild operations on a "
"collection that contains an indexed field whose corresponding index entry"
" exceeds the |limit| but with warnings in the logs."
msgstr ""

#: ../source/includes/fact-index-key-length-operation-behaviors.rst:12
msgid ""
"With *mixed version* replica sets where the secondaries are version 2.6 "
"and the primary is version 2.4, secondaries will replicate documents "
"inserted or updated on the 2.4 primary, but will print error messages in "
"the log if the documents contain an indexed field whose corresponding "
"index entry exceeds the |limit|."
msgstr ""

#: ../source/includes/fact-index-key-length-operation-behaviors.rst:3
msgid ""
"For existing sharded collections, :doc:`chunk migration </core/sharding-"
"balancer-administration>` will fail if the chunk has a document that "
"contains an indexed field whose index entry exceeds the |limit|."
msgstr ""

#: ../source/reference/limits.txt:156
msgid "A single collection can have *no more* than 64 indexes."
msgstr ""

#: ../source/reference/limits.txt:161
msgid ""
"Fully qualified index names, which includes the namespace and the dot "
"separators (i.e. ``<database name>.<collection name>.$<index name>``), "
"cannot be longer than 128 characters."
msgstr ""

#: ../source/reference/limits.txt:165
msgid ""
"By default, ``<index name>`` is the concatenation of the field names and "
"index type. You can explicitly specify the ``<index name>`` to the "
":method:`~db.collection.createIndex()` method to ensure that the fully "
"qualified index name does not exceed the limit."
msgstr ""

#: ../source/reference/limits.txt:172
msgid "There can be no more than 32 fields in a compound index."
msgstr ""

#: ../source/includes/fact-special-indexes-and-text.rst:1
msgid ""
"You cannot combine the |operation|, which requires a special :ref:`text "
"index <create-text-index>`, with a query operator that requires a "
"different type of special index. For example you cannot combine "
"|operation| with the :query:`$near` operator."
msgstr ""

#: ../source/includes/geo-data-limit-for-2dsphere.rst:1
msgid ""
"Fields with :doc:`2dsphere </core/2dsphere>` indexes must hold geometry "
"data in the form of :term:`coordinate pairs <legacy coordinate pairs>` or"
" :term:`GeoJSON` data. If you attempt to insert a document with non-"
"geometry data in a ``2dsphere`` indexed field, or build a ``2dsphere`` "
"index on a collection where the indexed field has non-geometry data, the "
"operation will fail."
msgstr ""

#: ../source/reference/limits.txt:186
msgid "The unique indexes limit in :ref:`limits-sharding-operations`."
msgstr ""

#: ../source/reference/limits.txt:190
msgid ""
"If the value of a field returned from a query that is :ref:`covered by an"
" index <covered-queries>` is ``NaN``, the type of that ``NaN`` value is "
"*always* ``double``."
msgstr ""

#: ../source/includes/fact-multikey-index-covered-query.rst:1
msgid ""
":ref:`Multikey indexes <index-type-multikey>` cannot cover queries over "
"array field(s)."
msgstr ""

#: ../source/includes/fact-geospatial-index-covered-query.rst:1
msgid ""
":ref:`Geospatial indexes <index-feature-geospatial>` cannot :ref:`cover a"
" query <covered-queries>`."
msgstr ""

#: ../source/includes/fact-index-build-default-memory-limit.rst:1
msgid ""
"You can build one or more indexes on a collection with the database "
"command :dbcommand:`createIndexes`. The default limit on memory usage for"
" a :dbcommand:`createIndexes` operation is 500 megabytes. You can "
"override this limit by setting the "
":parameter:`maxIndexBuildMemoryUsageMegabytes` server parameter."
msgstr ""

#: ../source/includes/fact-index-build-default-memory-limit.rst:7
msgid ""
":dbcommand:`createIndexes` uses a combination of memory and temporary "
"files on disk to complete index builds. Once the memory limit is reached,"
" :dbcommand:`createIndexes` uses temporary disk files in a subdirectory "
"named ``_tmp`` within the :option:`--dbpath <mongod --dbpath>` directory "
"for additional scratch space. The higher the memory limit is set, the "
"faster the index build can complete, but be careful not to set this limit"
" too high relative to available RAM or your system can run out of free "
"memory."
msgstr ""

#: ../source/includes/fact-index-build-memory-limit.rst:1
msgid ""
"Foreground index builds may be initiated either by a user command such as"
" :doc:`Create Index </reference/method/db.collection.createIndex/>` or by"
" an administrative process such as an :doc:`initial sync </core/replica-"
"set-sync>`. Both are subject to the limit set by "
":parameter:`maxIndexBuildMemoryUsageMegabytes`."
msgstr ""

#: ../source/includes/fact-index-build-memory-limit.rst:8
msgid ""
"An :doc:`initial sync operation </core/replica-set-sync>` populates only "
"one collection at a time and has no risk of exceeding the memory limit. "
"However, it is possible for a user to start foreground index builds on "
"multiple collections in multiple databases simultaneously and potentially"
" consume an amount of memory greater than the limit set in "
":parameter:`maxIndexBuildMemoryUsageMegabytes`."
msgstr ""

#: ../source/includes/fact-index-build-memory-limit.rst:17
msgid ""
"To minimize the impact of building an index on replica sets and sharded "
"clusters with replica set shards, use a rolling index build procedure as "
"described on :doc:`/tutorial/build-indexes-on-replica-sets`."
msgstr ""

#: ../source/reference/limits.txt:210
msgid ""
"The following index types only support simple binary comparison and do "
"not support :ref:`collation <collation>`:"
msgstr ""

#: ../source/reference/limits.txt:213
msgid ":doc:`text </core/index-text>` indexes,"
msgstr ""

#: ../source/reference/limits.txt:215
msgid ":doc:`2d </core/2d>` indexes, and"
msgstr ""

#: ../source/reference/limits.txt:217
msgid ":doc:`geoHaystack </core/geohaystack>` indexes."
msgstr ""

#: ../source/includes/extracts/collation-index-type-restrictions-addendum.rst:4
msgid ""
"To create a ``text``, a ``2d``, or a ``geoHaystack`` index on a "
"collection that has a non-simple collation, you must explicitly specify "
"``{collation: {locale: \"simple\"} }`` when creating the index."
msgstr ""

#: ../source/reference/limits.txt:222
msgid "Data"
msgstr ""

#: ../source/reference/limits.txt:226
msgid ""
"If you specify a maximum number of documents for a capped collection "
"using the ``max`` parameter to :dbcommand:`create`, the limit must be "
"less than 2\\ :sup:`32` documents. If you do not specify a maximum number"
" of documents when creating a capped collection, there is no limit on the"
" number of documents."
msgstr ""

#: ../source/reference/limits.txt:236
msgid ""
"The MMAPv1 storage engine limits each database to no more than 16000 data"
" files. This means that a single MMAPv1 database has a maximum size of "
"32TB. Setting the :setting:`storage.mmapv1.smallFiles` option reduces "
"this limit to 8TB."
msgstr ""

#: ../source/reference/limits.txt:245
msgid ""
"Using the MMAPv1 storage engine, a single :binary:`~bin.mongod` instance "
"cannot manage a data set that exceeds maximum virtual memory address "
"space provided by the underlying operating system."
msgstr ""

#: ../source/reference/limits.txt:249
msgid "Virtual Memory Limitations"
msgstr ""

#: ../source/reference/limits.txt:253
msgid "Operating System"
msgstr ""

#: ../source/reference/limits.txt:254
msgid "Journaled"
msgstr ""

#: ../source/reference/limits.txt:255
msgid "Not Journaled"
msgstr ""

#: ../source/reference/limits.txt:256
msgid "Linux"
msgstr ""

#: ../source/reference/limits.txt:257 ../source/reference/limits.txt:260
msgid "64 terabytes"
msgstr ""

#: ../source/reference/limits.txt:258 ../source/reference/limits.txt:261
msgid "128 terabytes"
msgstr ""

#: ../source/reference/limits.txt:259
msgid "Windows Server 2012 R2 and Windows 8.1"
msgstr ""

#: ../source/reference/limits.txt:262
msgid "Windows (otherwise)"
msgstr ""

#: ../source/reference/limits.txt:263
msgid "4 terabytes"
msgstr ""

#: ../source/reference/limits.txt:264
msgid "8 terabytes"
msgstr ""

#: ../source/reference/limits.txt:272
msgid ""
"For the MMAPv1 storage engine, the maximum number of collections in a "
"database is a function of the size of the namespace file and the number "
"of indexes of collections in the database."
msgstr ""

#: ../source/reference/limits.txt:278
msgid "See :limit:`Number of Namespaces` for more information."
msgstr ""

#: ../source/reference/limits.txt:281
msgid "Replica Sets"
msgstr ""

#: ../source/reference/limits.txt:287
msgid ""
"Replica sets can have up to 50 members. See :ref:`3.0-replica-sets-max-"
"members` for more information about specific driver compatibility with "
"large replica sets."
msgstr ""

#: ../source/reference/limits.txt:293
msgid ""
"Replica sets can have up to 7 voting members. For replica sets with more "
"than 7 total members, see :ref:`replica-set-non-voting-members`."
msgstr ""

#: ../source/reference/limits.txt:300
msgid ""
"If you do not explicitly specify an oplog size (i.e. with "
":setting:`~replication.oplogSizeMB` or :option:`--oplogSize <mongod "
"--oplogSize>`) MongoDB will create an oplog that is no larger than 50 "
"gigabytes."
msgstr ""

#: ../source/reference/limits.txt:308
msgid "Sharded Clusters"
msgstr ""

#: ../source/reference/limits.txt:310
msgid "Sharded clusters have the restrictions and thresholds described here."
msgstr ""

#: ../source/reference/limits.txt:315
msgid "Sharding Operational Restrictions"
msgstr ""

#: ../source/includes/limits-sharding-unavailable-operations.rst:1
msgid ""
"The :dbcommand:`group` does not work with sharding. Use "
":dbcommand:`mapReduce` or :dbcommand:`aggregate` instead."
msgstr ""

#: ../source/includes/limits-sharding-unavailable-operations.rst:4
msgid ":method:`db.eval()` is deprecated."
msgstr ""

#: ../source/includes/limits-sharding-unavailable-operations.rst:7
msgid ""
":method:`db.eval()` is incompatible with sharded collections. You may use"
" :method:`db.eval()` with un-sharded collections in a shard cluster."
msgstr ""

#: ../source/includes/limits-sharding-unavailable-operations.rst:11
msgid ""
":query:`$where` does not permit references to the ``db`` object from the "
":query:`$where` function. This is uncommon in un-sharded collections."
msgstr ""

#: ../source/includes/limits-sharding-unavailable-operations.rst:15
msgid ""
"The :dbcommand:`geoSearch` command is not supported in sharded "
"environments."
msgstr ""

#: ../source/includes/extracts/fact-covered-query-sharded-collection-covered-queries.rst:7
msgid ""
"Starting in MongoDB 3.0, an index cannot :ref:`cover <covered-queries>` a"
" query on a :term:`sharded <shard>` collection when run against a "
":binary:`~bin.mongos` if the index does not contain the shard key, with "
"the following exception for the ``_id`` index: If a query on a sharded "
"collection only specifies a condition on the ``_id`` field and returns "
"only the ``_id`` field, the ``_id`` index can cover the query when run "
"against a :binary:`~bin.mongos` even if the ``_id`` field is not the "
"shard key."
msgstr ""

#: ../source/includes/extracts/fact-covered-query-sharded-collection-covered-queries.rst:16
msgid ""
"In previous versions, an index cannot :ref:`cover <covered-queries>` a "
"query on a :term:`sharded <shard>` collection when run against a "
":binary:`~bin.mongos`."
msgstr ""

#: ../source/includes/limits-sharding-existing-collection-data-size.rst:1
msgid ""
"An existing collection can only be sharded if its size does not exceed "
"specific limits. These limits can be estimated based on the average size "
"of all :term:`shard key` values, and the configured :term:`chunk` size."
msgstr ""

#: ../source/includes/limits-sharding-existing-collection-data-size.rst:7
msgid ""
"These limits only apply for the initial sharding operation. Sharded "
"collections can grow to *any* size after successfully enabling sharding."
msgstr ""

#: ../source/includes/limits-sharding-existing-collection-data-size.rst:10
msgid ""
"Use the following formulas to calculate the *theoretical* maximum "
"collection size."
msgstr ""

#: ../source/includes/limits-sharding-existing-collection-data-size.rst:20
msgid "The maximum :term:`BSON` document size is 16MB or ``16777216`` bytes."
msgstr ""

#: ../source/includes/limits-sharding-existing-collection-data-size.rst:22
msgid "All conversions should use base-2 scale, e.g. 1024 kilobytes = 1 megabyte."
msgstr ""

#: ../source/includes/limits-sharding-existing-collection-data-size.rst:25
msgid ""
"If ``maxCollectionSize`` is less than or nearly equal to the target "
"collection, increase the chunk size to ensure successful initial "
"sharding. If there is doubt as to whether the result of the calculation "
"is too 'close' to the target collection size, it is likely better to "
"increase the chunk size."
msgstr ""

#: ../source/includes/limits-sharding-existing-collection-data-size.rst:31
msgid ""
"After successful initial sharding, you can reduce the chunk size as "
"needed. If you later reduce the chunk size, it may take time for all "
"chunks to split to the new size. See :doc:`/tutorial/modify-chunk-size-"
"in-sharded-cluster` for instructions on modifying chunk size."
msgstr ""

#: ../source/includes/limits-sharding-existing-collection-data-size.rst:37
msgid ""
"This table illustrates the approximate maximum collection sizes using the"
" formulas described above:"
msgstr ""

#: ../source/includes/limits-sharding-existing-collection-data-size.rst:44
msgid "Average Size of Shard Key Values"
msgstr ""

#: ../source/includes/limits-sharding-existing-collection-data-size.rst:45
msgid "512 bytes"
msgstr ""

#: ../source/includes/limits-sharding-existing-collection-data-size.rst:46
msgid "256 bytes"
msgstr ""

#: ../source/includes/limits-sharding-existing-collection-data-size.rst:47
msgid "128 bytes"
msgstr ""

#: ../source/includes/limits-sharding-existing-collection-data-size.rst:48
msgid "64 bytes"
msgstr ""

#: ../source/includes/limits-sharding-existing-collection-data-size.rst:49
msgid "Maximum Number of Splits"
msgstr ""

#: ../source/includes/limits-sharding-existing-collection-data-size.rst:50
msgid "32,768"
msgstr ""

#: ../source/includes/limits-sharding-existing-collection-data-size.rst:51
msgid "65,536"
msgstr ""

#: ../source/includes/limits-sharding-existing-collection-data-size.rst:52
msgid "131,072"
msgstr ""

#: ../source/includes/limits-sharding-existing-collection-data-size.rst:53
msgid "262,144"
msgstr ""

#: ../source/includes/limits-sharding-existing-collection-data-size.rst:54
msgid "Max Collection Size (64 MB Chunk Size)"
msgstr ""

#: ../source/includes/limits-sharding-existing-collection-data-size.rst:55
msgid "1 TB"
msgstr ""

#: ../source/includes/limits-sharding-existing-collection-data-size.rst:56
#: ../source/includes/limits-sharding-existing-collection-data-size.rst:60
msgid "2 TB"
msgstr ""

#: ../source/includes/limits-sharding-existing-collection-data-size.rst:57
#: ../source/includes/limits-sharding-existing-collection-data-size.rst:61
#: ../source/includes/limits-sharding-existing-collection-data-size.rst:65
msgid "4 TB"
msgstr ""

#: ../source/includes/limits-sharding-existing-collection-data-size.rst:58
#: ../source/includes/limits-sharding-existing-collection-data-size.rst:62
#: ../source/includes/limits-sharding-existing-collection-data-size.rst:66
msgid "8 TB"
msgstr ""

#: ../source/includes/limits-sharding-existing-collection-data-size.rst:59
msgid "Max Collection Size (128 MB Chunk Size)"
msgstr ""

#: ../source/includes/limits-sharding-existing-collection-data-size.rst:63
#: ../source/includes/limits-sharding-existing-collection-data-size.rst:67
msgid "16 TB"
msgstr ""

#: ../source/includes/limits-sharding-existing-collection-data-size.rst:64
msgid "Max Collection Size (256 MB Chunk Size)"
msgstr ""

#: ../source/includes/limits-sharding-existing-collection-data-size.rst:68
msgid "32 TB"
msgstr ""

#: ../source/includes/fact-single-modification-in-sharded-collections.rst:1
msgid ""
"All |single-modification-operation-names| operations for a sharded "
"collection that specify the ``justOne`` option must include the "
":term:`shard key` *or* the ``_id`` field in the query specification. "
"|single-modification-operation-names| operations specifying ``justOne`` "
"in a sharded collection which do not contain either the :term:`shard key`"
" or the ``_id`` field return an error."
msgstr ""

#: ../source/includes/limits-sharding-unique-indexes.rst:1
msgid ""
"MongoDB does not support unique indexes across shards, except when the "
"unique index contains the full shard key as a prefix of the index. In "
"these situations MongoDB will enforce uniqueness across the full key, not"
" a single field."
msgstr ""

#: ../source/includes/limits-sharding-maximum-documents-chunk.rst:3
msgid ""
"MongoDB cannot move a chunk if the number of documents in the chunk is "
"greater than 1.3 times the result of dividing the configured :ref:`chunk "
"size<sharding-chunk-size>` by the average document size. "
":method:`db.collection.stats()` includes the ``avgObjSize`` field, which "
"represents the average document size in the collection."
msgstr ""

#: ../source/reference/limits.txt:351
msgid "Shard Key Limitations"
msgstr ""

#: ../source/includes/limits-sharding-keysize.rst:1
msgid "A shard key cannot exceed 512 bytes."
msgstr ""

#: ../source/includes/limits-sharding-index-type.rst:1
msgid ""
"A :term:`shard key` index can be an ascending index on the shard key, a "
"compound index that start with the shard key and specify ascending order "
"for the shard key, or a :doc:`hashed index </core/index-hashed>`."
msgstr ""

#: ../source/includes/limits-sharding-index-type.rst:6
msgid ""
"A :term:`shard key` index cannot be an index that specifies a "
":doc:`multikey index </core/index-multikey>`, a :doc:`text index </core"
"/index-text>` or a :ref:`geospatial index <index-feature-geospatial>` on "
"the :term:`shard key` fields."
msgstr ""

#: ../source/includes/limits-sharding-shardkey-immutable.rst:1
msgid "If you must change a shard key:"
msgstr ""

#: ../source/includes/limits-sharding-shardkey-immutable.rst:3
msgid "Dump all data from MongoDB into an external format."
msgstr ""

#: ../source/includes/limits-sharding-shardkey-immutable.rst:5
msgid "Drop the original sharded collection."
msgstr ""

#: ../source/includes/limits-sharding-shardkey-immutable.rst:7
msgid "Configure sharding using the new shard key."
msgstr ""

#: ../source/includes/limits-sharding-shardkey-immutable.rst:9
msgid ""
":doc:`Pre-split </tutorial/create-chunks-in-sharded-cluster>` the shard "
"key range to ensure initial even distribution."
msgstr ""

#: ../source/includes/limits-sharding-shardkey-immutable.rst:12
msgid "Restore the dumped data into MongoDB."
msgstr ""

#: ../source/includes/limits-sharding-shardkey-document-immutable.rst:1
msgid ""
"Once you shard a collection, the shard key and the shard key values are "
"immutable; i.e."
msgstr ""

#: ../source/includes/limits-sharding-shardkey-document-immutable.rst:4
msgid "You cannot select a different shard key for that collection."
msgstr ""

#: ../source/includes/limits-sharding-shardkey-document-immutable.rst:6
msgid "You cannot update the values of the shard key fields."
msgstr ""

#: ../source/includes/limits-sharding-shardkey-monotonic-throughput.rst:1
msgid ""
"For clusters with high insert volumes, a shard keys with monotonically "
"increasing and decreasing keys can affect insert throughput. If your "
"shard key is the ``_id`` field, be aware that the default values of the "
"``_id`` fields are :term:`ObjectIds <ObjectId>` which have generally "
"increasing values."
msgstr ""

#: ../source/includes/limits-sharding-shardkey-monotonic-throughput.rst:7
msgid ""
"When inserting documents with monotonically increasing shard keys, all "
"inserts belong to the same :term:`chunk` on a single :term:`shard`. The "
"system eventually divides the chunk range that receives all write "
"operations and migrates its contents to distribute data more evenly. "
"However, at any moment the cluster directs insert operations only to a "
"single shard, which creates an insert throughput bottleneck."
msgstr ""

#: ../source/includes/limits-sharding-shardkey-monotonic-throughput.rst:14
msgid ""
"If the operations on the cluster are predominately read operations and "
"updates, this limitation may not affect the cluster."
msgstr ""

#: ../source/includes/limits-sharding-shardkey-monotonic-throughput.rst:17
msgid ""
"To avoid this constraint, use a :ref:`hashed shard key <sharding-hashed-"
"sharding>` or select a field that does not increase or decrease "
"monotonically."
msgstr ""

#: ../source/includes/limits-sharding-shardkey-monotonic-throughput.rst:21
msgid ""
":ref:`Hashed shard keys <sharding-hashed-sharding>` and :ref:`hashed "
"indexes <index-type-hashed>` store hashes of keys with ascending values."
msgstr ""

#: ../source/reference/limits.txt:374
msgid "Operations"
msgstr ""

#: ../source/reference/limits.txt:379
msgid ""
"If MongoDB cannot use an index to get documents in the requested sort "
"order, the combined size of all documents in the sort operation, plus a "
"small overhead, must be less than 32 megabytes."
msgstr ""

#: ../source/includes/fact-agg-memory-limit.rst:10
msgid ""
"Pipeline stages have a limit of 100 megabytes of RAM. If a stage exceeds "
"this limit, MongoDB will produce an error. To allow for the handling of "
"large datasets, use the ``allowDiskUse`` option to enable aggregation "
"pipeline stages to write data to temporary files."
msgstr ""

#: ../source/includes/fact-graphlookup-memory-restrictions.rst:1
msgid ""
"The :pipeline:`$graphLookup` stage must stay within the 100 megabyte "
"memory limit. If ``allowDiskUse: true`` is specified for the "
":method:`~db.collection.aggregate()` operation, the "
":pipeline:`$graphLookup` stage ignores the option. If there are other "
"stages in the :method:`~db.collection.aggregate()` operation, "
"``allowDiskUse: true`` option is in effect for these other stages."
msgstr ""

#: ../source/includes/fact-agg-memory-limit.rst:19
msgid ":ref:`sort-memory-limit` and :ref:`group-memory-limit`."
msgstr ""

#: ../source/includes/extracts/geospatial-queries-longitude-values.rst:2
msgid "For spherical queries, use the ``2dsphere`` index result."
msgstr ""

#: ../source/includes/extracts/geospatial-queries-longitude-values.rst:4
msgid ""
"The use of ``2d`` index for spherical queries may lead to incorrect "
"results, such as the use of the ``2d`` index for spherical queries that "
"wrap around the poles."
msgstr ""

#: ../source/includes/extracts/geospatial-valid-long-lat-values.rst:1
msgid "Valid longitude values are between ``-180`` and ``180``, both inclusive."
msgstr ""

#: ../source/includes/extracts/geospatial-valid-long-lat-values.rst:4
msgid "Valid latitude values are between ``-90`` and ``90`` (both inclusive)."
msgstr ""

#: ../source/includes/fact-geometry-hemisphere-limitation.rst:1
msgid ""
"For |geo-operator-method|, if you specify a single-ringed polygon that "
"has an area greater than a single hemisphere, include :query:`the custom "
"MongoDB coordinate reference system in the $geometry <$geometry>` "
"expression; otherwise, |geo-operator-method| queries for the "
"complementary geometry. For all other GeoJSON polygons with areas greater"
" than a hemisphere, |geo-operator-method| queries for the complementary "
"geometry."
msgstr ""

#: ../source/reference/limits.txt:409
msgid ""
"``100,000`` :doc:`writes </reference/command/nav-crud>` are allowed in a "
"single batch operation, defined by a single request to the server."
msgstr ""

#: ../source/reference/limits.txt:415
msgid ""
"The limit raises from ``1,000`` to ``100,000`` writes. This limit also "
"applies to legacy ``OP_INSERT`` messages."
msgstr ""

#: ../source/reference/limits.txt:418
msgid ""
"The :method:`Bulk()` operations in the :binary:`~bin.mongo` shell and "
"comparable methods in the drivers do not have this limit."
msgstr ""

#: ../source/reference/limits.txt:424
msgid ""
"In addition to being read-only, views have the following operation "
"restrictions:"
msgstr ""

#: ../source/includes/extracts/views-unsupported-rename.rst:1
msgid "You cannot rename :doc:`views </core/views>`."
msgstr ""

#: ../source/includes/extracts/views-unsupported-projection-operators.rst:1
msgid ""
":method:`~db.collection.find()` operations on views do not support the "
"following :doc:`projection </reference/operator/projection>` operators:"
msgstr ""

#: ../source/includes/extracts/views-unsupported-projection-operators.rst:5
msgid ":projection:`$`"
msgstr ""

#: ../source/includes/extracts/views-unsupported-projection-operators.rst:6
msgid ":projection:`$elemMatch`"
msgstr ""

#: ../source/includes/extracts/views-unsupported-projection-operators.rst:7
msgid ":projection:`$slice`"
msgstr ""

#: ../source/includes/extracts/views-unsupported-projection-operators.rst:8
msgid ":projection:`$meta`"
msgstr ""

#: ../source/includes/extracts/views-unsupported-text-search.rst:1
msgid ":doc:`Views </core/views>` do not support text search."
msgstr ""

#: ../source/includes/extracts/views-unsupported-mapReduce.rst:1
msgid ":doc:`Views </core/views>` do not support map-reduce operations."
msgstr ""

#: ../source/includes/extracts/views-unsupported-geoNear.rst:1
msgid ""
":doc:`Views </core/views>` do not support geoNear operations (i.e. "
":dbcommand:`geoNear` command and :pipeline:`$geoNear` pipeline stage)"
msgstr ""

#: ../source/reference/limits.txt:438
msgid "Sessions"
msgstr ""

#: ../source/includes/extracts/sessions-external-username-limit.rst:4
msgid ""
"To use sessions with ``$external`` authentication users (i.e. Kerberos, "
"LDAP, x.509 users), the usernames cannot be greater than 10k bytes."
msgstr ""

#: ../source/reference/limits.txt:446
msgid "Shell"
msgstr ""

#: ../source/includes/fact-mongo-prompt-size.rst:1
msgid ""
"The :binary:`~bin.mongo` shell prompt has a limit of 4095 codepoints for "
"each line. If you enter a line with more than 4095 codepoints, the shell "
"will truncate it."
msgstr ""

#~ msgid ""
#~ "By default namespace files are 16 "
#~ "megabytes. You can configure the size"
#~ " using the :setting:`nssize` option."
#~ msgstr ""

#~ msgid ""
#~ "The *total size* of an index key"
#~ " entry, which can include structural "
#~ "overhead depending on the BSON type, "
#~ "must be *less than* 1024 bytes."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB 2.6 implements a stronger "
#~ "enforcement of the limit on "
#~ ":limit:`index key length <Index Key>`:"
#~ msgstr ""

#~ msgid ""
#~ "MongoDB will **not** :method:`create an "
#~ "index <db.collection.ensureIndex()>` on a "
#~ "collection if the value of the "
#~ "index field in an existing document "
#~ "exceeds the |limit|. Previous versions "
#~ "of MongoDB would create the index "
#~ "but not index such documents."
#~ msgstr ""

#~ msgid ""
#~ "Reindexing operations will error if an"
#~ " indexed field exceeds the |limit|. "
#~ "Reindexing operations occur as part of"
#~ " :dbcommand:`compact` and :dbcommand:`repairDatabase`"
#~ " commands as well as the "
#~ ":method:`db.collection.reIndex()` method."
#~ msgstr ""

#~ msgid ""
#~ "Because these operations drop *all* the"
#~ " indexes from a collection and then"
#~ " recreate them sequentially, the error "
#~ "from the index key limit prevents "
#~ "these operations from rebuilding any "
#~ "remaining indexes for the collection "
#~ "and, in the case of the "
#~ ":dbcommand:`repairDatabase` command, from continuing"
#~ " with the remainder of the process."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB will not insert into an "
#~ "indexed collection any document with an"
#~ " indexed field value that exceeds the"
#~ " |limit|, and instead, will return an"
#~ " error. Previous versions of MongoDB "
#~ "would insert but not index such "
#~ "documents."
#~ msgstr ""

#~ msgid ""
#~ "Updates to the indexed field will "
#~ "error if the new value for the "
#~ "field exceeds the |limit|."
#~ msgstr ""

#~ msgid ""
#~ "If an existing document contains a "
#~ "value for the indexed field that "
#~ "exceeds the limit, *any* update that "
#~ "results in the relocation of that "
#~ "document on disk will error."
#~ msgstr ""

#~ msgid ""
#~ ":program:`mongorestore` and :program:`mongoimport` "
#~ "will not insert documents that contain"
#~ " indexed field value that exceeds the"
#~ " |limit|."
#~ msgstr ""

#~ msgid ""
#~ "In MongoDB 2.6, secondary members of "
#~ "replica sets will continue to replicate"
#~ " documents with an indexed field "
#~ "value that exceeds the |limit| on "
#~ "initial sync but will print warnings "
#~ "in the logs."
#~ msgstr ""

#~ msgid ""
#~ "Secondary members also allow index build"
#~ " and rebuild operations on a "
#~ "collection that contains an indexed "
#~ "field value that exceeds the |limit| "
#~ "but with warnings in the logs."
#~ msgstr ""

#~ msgid ""
#~ "With *mixed version* replica sets where"
#~ " the secondaries are version 2.6 and"
#~ " the primary is version 2.4, "
#~ "secondaries will replicate documents inserted"
#~ " or updated on the 2.4 primary, "
#~ "but will print error messages in "
#~ "the log if the documents contain "
#~ "indexed field value that exceeds the "
#~ "|limit|."
#~ msgstr ""

#~ msgid ""
#~ "For existing sharded collections, :doc:`chunk"
#~ " migration </core/sharding-chunk-migration>` "
#~ "will fail if the chunk has a "
#~ "document that contains an indexed field"
#~ " value that exceeds the |limit|."
#~ msgstr ""

#~ msgid ""
#~ "The names of indexes, including their"
#~ " namespace (i.e database and collection "
#~ "name), cannot be longer than 125 "
#~ "characters. The default index name is"
#~ " the concatenation of the field names"
#~ " and index directions."
#~ msgstr ""

#~ msgid ""
#~ "You can explicitly specify an index "
#~ "name to the :method:`~db.collection.ensureIndex()`"
#~ " helper if the default index name "
#~ "is too long."
#~ msgstr ""

#~ msgid "Windows"
#~ msgstr ""

#~ msgid ""
#~ "MongoDB does not support :ref:`covered "
#~ "queries <covered-queries>` from sharded "
#~ "collections."
#~ msgstr ""

#~ msgid ""
#~ "To avoid this constraint, use a "
#~ ":ref:`hashed shard key <sharding-hashed-"
#~ "sharding>`  or select a field that "
#~ "does not increase or decrease "
#~ "monotonically."
#~ msgstr ""

#~ msgid ""
#~ "Pipeline stages have a limit of "
#~ "100 megabytes of RAM. If a stage"
#~ " exceeds this limit, MongoDB will "
#~ "produce an error. To allow for the"
#~ " handling of large datasets, use the"
#~ " ``allowDiskUsage`` option to enable "
#~ "aggregation pipeline stages to write "
#~ "data to temporary files."
#~ msgstr ""

#~ msgid "A bulk operation can have at most 1000 operations."
#~ msgstr ""

#~ msgid ""
#~ "Database names are case sensitive even"
#~ " if the underlying file system is "
#~ "case insensitive. MongoDB does not "
#~ "permit database names that differ only"
#~ " by the case of the characters."
#~ msgstr ""

# e5cbfa12794044729b99eeaedc2806a7
#~ msgid ""
#~ "The maximum document size helps ensure"
#~ " that a single document cannot use"
#~ " excessive amount of RAM or, during"
#~ " transmission, excessive amount of "
#~ "bandwidth. To store documents larger "
#~ "than the maximum size, MongoDB provides"
#~ " the GridFS API. See :program:`mongofiles`"
#~ " and the documentation for your "
#~ ":doc:`driver </applications/drivers>` for more "
#~ "information about GridFS."
#~ msgstr ""

# 8e536fab5cde4f9fa43b1923a4442e31
#~ msgid ""
#~ "Each namespace, including database and "
#~ "collection name, must be shorter than"
#~ " 123 bytes."
#~ msgstr ""

# 64c203a7411047c4b692e31a85ec247a
#~ msgid ""
#~ "The limitation on the number of "
#~ "namespaces is the size of the "
#~ "namespace file divided by 628."
#~ msgstr ""

# ee055a87cf0a49dbbf90020950422bb2
#~ msgid "Namespace files can be no larger than 2047 megabytes."
#~ msgstr ""

# 45f974c9e00147f4bde7353db75df423
#~ msgid "There can be no more than 31 fields in a compound index."
#~ msgstr ""

# f42dab4b0d7c46a8abe638288cf0e4a4
#~ msgid ""
#~ "A single :program:`mongod` instance cannot "
#~ "manage a data set that exceeds "
#~ "maximum virtual memory address space "
#~ "provided by the underlying operating "
#~ "system."
#~ msgstr ""

# 4fea870e54ed41398c824a2418df1af6
#~ msgid ""
#~ "The maximum number of collections in "
#~ "a database is a function of the"
#~ " size of the namespace file and "
#~ "the number of indexes of collections "
#~ "in the database."
#~ msgstr ""

# 0a725d68da1e4282b05c74f2a400cb77
#~ msgid "Replica sets can have no more than 12 members."
#~ msgstr ""

# e051cf68331844c9b084ddbf2756600d
#~ msgid ""
#~ "Only 7 members of a replica set"
#~ " can have votes at any given "
#~ "time. See can vote :ref:`replica-set-"
#~ "non-voting-members` for more information"
#~ msgstr ""

# dc0e15b210494ed184a278ff44efdeaa
#~ msgid ""
#~ "The :update:`$isolated` update modifier does"
#~ " not work in sharded environments."
#~ msgstr ""

# 7bbcd4d9e61044d3b35a829bc633d709
#~ msgid ":operator:`$snapshot` queries do not work in sharded environments."
#~ msgstr ""

# c4b542c2e50d4d91b1265a74354a7fd8
#~ msgid ""
#~ "For existing collections that hold "
#~ "documents, MongoDB supports enabling sharding"
#~ " on *any* collections that contains "
#~ "less than 256 gigabytes of data. "
#~ "MongoDB *may* be able to shard "
#~ "collections with as many as 400 "
#~ "gigabytes depending on the distribution "
#~ "of document sizes. The precise size "
#~ "of the limitation is a function of"
#~ " the chunk size and the data "
#~ "size."
#~ msgstr ""

# 94700961d049413f85952666be05d04e
#~ msgid ""
#~ "Sharded collections may have *any* size,"
#~ " after successfully enabling sharding."
#~ msgstr ""

# 247a7e41b88c4ef0a6ae8cf9cf3580be
#~ msgid ""
#~ "All |single-modification-operation-names| "
#~ "operations for a sharded collection that"
#~ " specify the |single-modification-"
#~ "operation-option| option must include the"
#~ " :term:`shard key` *or* the ``_id`` "
#~ "field in the query specification. "
#~ "|single-modification-operation-names| operations"
#~ " specifying |single-modification-operation-"
#~ "option| in a sharded collection without"
#~ " the :term:`shard key` *or* the "
#~ "``_id`` field return an error."
#~ msgstr ""

# d8729cb6e0024ab697d645c3c46f307c
# 736b09e696a745adb4ec87de2372c1da
#~ msgid "See"
#~ msgstr ""

# e9e0b0e3f6ce4f77800a4ebbddd93a2a
#~ msgid ""
#~ "You cannot change a shard key "
#~ "after sharding the collection. If you"
#~ " must change a shard key:"
#~ msgstr ""

# 13da6384dddc48eba6276ad2bdde971f
#~ msgid ""
#~ "After you insert a document into a"
#~ " sharded collection, you cannot change "
#~ "the document's value for the field "
#~ "or fields that comprise the shard "
#~ "key. The :method:`~db.collection.update()` operation"
#~ " will not modify the value of a"
#~ " shard key in an existing document."
#~ msgstr ""

# c2b532d7155e4d2a82f40d2b8feb36ab
#~ msgid ""
#~ "When inserting documents with monotonically"
#~ " increasing shard keys, all inserts "
#~ "belong to the same :term:`chunk` on "
#~ "a single :term:`shard`. The system will"
#~ " eventually divide the chunk range "
#~ "that receives all write operations and"
#~ " migrate its contents to distribute "
#~ "data more evenly. However, at any "
#~ "moment the cluster can direct insert "
#~ "operations only to a single shard, "
#~ "which creates an insert throughput "
#~ "bottleneck."
#~ msgstr ""

# 7d56dfc2d98c43a3a5028f7ac4fa4ff6
#~ msgid ""
#~ "MongoDB will only return sorted results"
#~ " on fields without an index *if* "
#~ "the sort operation uses less than "
#~ "32 megabytes of memory."
#~ msgstr ""

# c28d79a803484c959e47dc250a3211a8
#~ msgid ""
#~ "Any geometry specified with :term:`GeoJSON`"
#~ " to |geo-operator-method| queries, "
#~ "**must** fit within a single hemisphere."
#~ " MongoDB interprets geometries larger than"
#~ " half of the sphere as queries "
#~ "for the smaller of the complementary "
#~ "geometries."
#~ msgstr ""

# cdb0af73699f46cd8b65a5d81501fffe
#~ msgid ":ref:`rn-2.2-database-name-restriction-windows`."
#~ msgstr ""

# 819be41430284f0abca9e0493b0fb521
#~ msgid ""
#~ "For MongoDB deployments running on "
#~ "Windows, MongoDB will not permit "
#~ "database names that include any of "
#~ "the following characters:"
#~ msgstr ""

# 3e513fabe786481f88d6628ebb4487ff
# 8251793987fb4e73bd4bc059fada5353
#~ msgid "Also, database names cannot contain the null character."
#~ msgstr ""

# a7f1db9e36ef4935a7b2687629e4a65b
#~ msgid ""
#~ "For MongoDB deployments running on Unix"
#~ " and Linux systems, MongoDB will not"
#~ " permit database names that include "
#~ "any of the following characters:"
#~ msgstr ""

# 307808d359aa4b4ab6b8d71f7561a36b
#~ msgid ""
#~ "In the :program:`mongo` shell, use "
#~ ":method:`db.getCollection()` to specify collection"
#~ " names that might interact with the"
#~ " shell or are not valid JavaScript."
#~ msgstr ""

# 6a4f11e7d27543ddb6c7a634f588d8fe
#~ msgid ""
#~ "Field names cannot contain dots (i.e."
#~ " ``.``), dollar signs (i.e. ``$``), "
#~ "or null characters. See :ref:`faq-"
#~ "dollar-sign-escaping` for an alternate "
#~ "approach."
#~ msgstr ""

#~ msgid ""
#~ "By default namespace files are 16 "
#~ "megabytes. You can configure the size"
#~ " using the :setting:`~storage.nsSize` option."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB 2.6 implements a stronger "
#~ "enforcement of the limit on "
#~ ":limit:`index key <Index Key Limit>`:"
#~ msgstr ""

#~ msgid ""
#~ "MongoDB will **not** :method:`create an "
#~ "index <db.collection.ensureIndex()>` on a "
#~ "collection if the index entry for "
#~ "an existing document exceeds the "
#~ "|limit|. Previous versions of MongoDB "
#~ "would create the index but not "
#~ "index such documents."
#~ msgstr ""

#~ msgid ""
#~ ":program:`mongorestore` and :program:`mongoimport` "
#~ "will not insert documents that contain"
#~ " an indexed field whose corresponding "
#~ "index entry would exceed the |limit|."
#~ msgstr ""

#~ msgid ""
#~ "For existing sharded collections, :doc:`chunk"
#~ " migration </core/sharding-chunk-migration>` "
#~ "will fail if the chunk has a "
#~ "document that contains an indexed field"
#~ " whose index entry exceeds the "
#~ "|limit|."
#~ msgstr ""

#~ msgid ""
#~ "Fully qualified index names, which "
#~ "includes the namespace and the dot "
#~ "separators (i.e. <database name>.<collection "
#~ "name>.$<index name>), cannot be longer "
#~ "than 128 characters."
#~ msgstr ""

#~ msgid ""
#~ "By default, ``<index name>`` is the "
#~ "concatenation of the field names and "
#~ "index type. You can explicitly specify"
#~ " the ``<index name>`` to the "
#~ ":method:`~db.collection.ensureIndex()` method to "
#~ "ensure that the fully qualified index"
#~ " name does not exceed the limit."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB does not support :ref:`covered "
#~ "queries <covered-queries>` for sharded "
#~ "collections."
#~ msgstr ""

#~ msgid ""
#~ ":doc:`Write commands </reference/command/nav-crud>`"
#~ " can accept no more than 1000 "
#~ "operations. The :method:`Bulk()` operations in"
#~ " the :program:`mongo` shell and comparable"
#~ " methods in the drivers do not "
#~ "have this limit."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB does not permit database names"
#~ " that differ only by the case "
#~ "of the characters."
#~ msgstr ""

