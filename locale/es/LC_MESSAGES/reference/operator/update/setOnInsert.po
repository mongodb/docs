# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: 2014-04-08 18:52+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# fe52dd4895744290b8d562eded3b5a7b
#: ../source/reference/operator/update/setOnInsert.txt:3
msgid "$setOnInsert"
msgstr ""

# 10ea29b0d2df424ba67a8bfd8109bf0e
#: ../source/reference/operator/update/setOnInsert.txt
msgid "On this page"
msgstr ""

# 40e1b5198bac4294b994086ca2a83e57
#: ../source/reference/operator/update/setOnInsert.txt:14
msgid "Definition"
msgstr ""

# 48562f89bcbe4a5691b7bca534127d39
#: ../source/reference/operator/update/setOnInsert.txt:20
msgid ""
"If an update operation with :ref:`upsert: true <upsert-parameter>` "
"results in an insert of a document, then :update:`$setOnInsert` assigns "
"the specified values to the fields in the document. If the update "
"operation does not result in an insert, :update:`$setOnInsert` does "
"nothing."
msgstr ""

# 2f151f00f53b4ba783e47a67f38ca674
#: ../source/reference/operator/update/setOnInsert.txt:26
msgid ""
"You can specify the ``upsert`` option for either the "
":method:`db.collection.update()` or "
":method:`db.collection.findAndModify()` methods."
msgstr ""

# acbef6529f0b464b888762c8a04c4fb8
#: ../source/includes/use-dot-notation.rst:1
msgid ""
"To specify a ``<field>`` in an embedded document or in an array, use "
":ref:`dot notation <document-dot-notation>`."
msgstr ""

# c91d97658888478ea1c91bbc267470dc
#: ../source/reference/operator/update/setOnInsert.txt:41
msgid "Example"
msgstr ""

# caeb6361a3ad4f11babf23c367111bd7
#: ../source/reference/operator/update/setOnInsert.txt:43
msgid "A collection named ``products`` contains no documents."
msgstr ""

# 9ecdacab31df42a09a80ae933a31f861
#: ../source/reference/operator/update/setOnInsert.txt:45
msgid ""
"Then, the following :method:`db.collection.update()` with :ref:`upsert: "
"true <upsert-parameter>` inserts a new document."
msgstr ""

# e51017e1c7184e3380acb337b52164bf
#: ../source/reference/operator/update/setOnInsert.txt:59
msgid ""
"MongoDB creates a new document with ``_id`` equal to ``1`` from the "
"``<query>`` condition, and then applies the :update:`$set` and "
":update:`$setOnInsert` operations to this document."
msgstr ""

# 9ae00490aa7c4015a063fae5d1aa7227
#: ../source/reference/operator/update/setOnInsert.txt:63
msgid "The ``products`` collection contains the newly-inserted document:"
msgstr ""

# c14d7fbd4d3c498e9b74a0cbc2e02f4e
#: ../source/reference/operator/update/setOnInsert.txt:69
msgid ""
"If the :method:`db.collection.update()` with :ref:`upsert: true <upsert-"
"parameter>` had found a matching document, then MongoDB performs an "
"update, applying the :update:`$set` operation but ignoring the "
":update:`$setOnInsert` operation."
msgstr ""

# 79b4dd6ca4644ca3887aed99bee8ccc3
#: ../source/reference/operator/update/setOnInsert.txt:74
msgid ":method:`db.collection.update()`, :method:`db.collection.findAndModify()`"
msgstr ""

#~ msgid ""
#~ "If an :term:`upsert` results in an "
#~ "insert of a document, then "
#~ ":update:`$setOnInsert` assigns the specified "
#~ "values to the fields in the "
#~ "document. You can specify an upsert "
#~ "by specifying the :term:`upsert` option "
#~ "for either the :method:`db.collection.update()` "
#~ "or :method:`db.collection.findAndModify()` methods. "
#~ "If the upsert results in an "
#~ ":doc:`update </core/write-operations>`, "
#~ ":update:`$setOnInsert` has no effect."
#~ msgstr ""

#~ msgid "Examples"
#~ msgstr ""

#~ msgid "Upsert Results in an Insert"
#~ msgstr ""

#~ msgid ""
#~ "Then, the following :method:`upsert "
#~ "<db.collection.update()>` operation performs an "
#~ "insert and applies the :update:`$setOnInsert`"
#~ " to set the field ``defaultQty`` to"
#~ " ``100``:"
#~ msgstr ""

#~ msgid "Upsert Results in an Update"
#~ msgstr ""

#~ msgid ""
#~ "If the :method:`db.collection.update()` or the"
#~ " :method:`db.collection.findAndModify()` method has "
#~ "the ``upsert`` flag and performs an "
#~ "update and not an insert, "
#~ ":update:`$setOnInsert` has no effect."
#~ msgstr ""

#~ msgid "A collection named ``products`` has the following document:"
#~ msgstr ""

#~ msgid ""
#~ "The following :method:`~db.collection.update()` with"
#~ " the *upsert* flag operation performs "
#~ "an update:"
#~ msgstr ""

#~ msgid ""
#~ "Because the :method:`~db.collection.update()` with"
#~ " *upsert* only performs an update, "
#~ "MongoDB ignores the :update:`$setOnInsert` "
#~ "operation and only applies the "
#~ ":update:`$set` operation."
#~ msgstr ""

#~ msgid ""
#~ "The ``products`` collection now contains "
#~ "the following modified document:"
#~ msgstr ""

#~ msgid ""
#~ "If an update operation with "
#~ ":ref:`upsert: true <upsert-parameter>` results"
#~ " in an insert of a document, "
#~ "then :update:`$setOnInsert` assigns the "
#~ "specified values to the fields in "
#~ "the document. If the update operation"
#~ " does not result in an insert, "
#~ ":update:`$setOnInsert` is ignored."
#~ msgstr ""

#~ msgid ""
#~ "The new document is created with "
#~ "``_id`` equal to ``1`` from the "
#~ "``<query>`` condition, and the :update:`$set`"
#~ " and :update:`$setOnInsert` operations are "
#~ "applied to this document."
#~ msgstr ""

