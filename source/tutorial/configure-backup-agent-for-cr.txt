:orphan:

=========================================
Configure Backup Agent for Authentication
=========================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. include:: /includes/legacy-agents/fact-backup-agent-deprecated.rst

MongoDB 4.0 supports the :manual:`SCRAM </core/security-scram/>`
authentication mechanism with the SHA-256 and SHA-1 hash functions.
``SCRAM-SHA-1`` (`RFC 5802 <https://tools.ietf.org/html/rfc5802>`_) and
``SCRAM-SHA-256`` (`RFC 7677 <https://tools.ietf.org/html/rfc7677>`_)
are IETF standards that define best practice methods for implementation of
challenge-response mechanisms for authenticating users with passwords.

In MongoDB 3.0 to 3.6, MongoDB's default authentication mechanism is
``SCRAM-SHA-1``. Prior to MongoDB 3.0, MongoDB used MongoDB Challenge
and Response (``MONGODB-CR``) as the default. ``MONGODB-CR`` is a
challenge-response mechanism that authenticates users through passwords.

The Backup Agent can use ``SCRAM-SHA-1`` or ``SCRAM-SHA-256`` to
authenticate to hosts that enforce access control. To authenticate
using ``SCRAM-SHA-1`` or ``SCRAM-SHA-256``, create a user
in the ``admin`` database with the appropriate roles in MongoDB.

.. include:: /includes/extracts/note-manage-agent-auth-with-automation-mongodbcr.rst

Procedures
----------

Create MongoDB User for the Agent
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/prerequisites-create-user-for-agent.rst

.. include:: /includes/considerations-agent-access-control.rst

MongoDB 3.0 and Later
`````````````````````

To back up MongoDB instances running 3.0 and later, create a user in
the ``admin`` database with an operation that resembles the following:

.. code-block:: javascript

   use admin
   db.createUser(
      {
        user: "<username>",
        pwd: "<password>",
        roles: [ { role: "backup", db: "admin" } ]
      }
   )

See :ref:`Access Control for MongoDB 3.0
<access-control-backup-3.0>` for more information on the
required access.

MongoDB 2.6
```````````

To back up MongoDB 2.6 release series instances, create a user in the
``admin`` database with an operation that resembles the following:

.. code-block:: javascript

   use admin
   db.createUser(
      {
        user: "<username>",
        pwd: "<password>",
        roles: [ 
           "clusterAdmin",
           "readAnyDatabase",
           "userAdminAnyDatabase",
           { role: "readWrite", db: "admin" },
           { role: "readWrite", db: "local" },
        ]
      }
   )

See :ref:`Access Control for MongoDB 2.6
<access-control-backup-2.6>` for more information on the
required access.

Host Settings
~~~~~~~~~~~~~

.. include:: /includes/fact-access-control-host-settings.rst
