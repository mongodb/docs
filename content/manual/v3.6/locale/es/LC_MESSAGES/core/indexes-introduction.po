# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: 2014-04-08 19:31+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# 616570a2cf2d4c56a0bdec52864eddf7
#: ../source/core/indexes-introduction.txt:6
msgid "Index Introduction"
msgstr ""

# fad8edcb00e540ed9b12728d5f94984b
#: ../source/core/indexes-introduction.txt:10
msgid ""
"Indexes support the efficient execution of queries in MongoDB. Without "
"indexes, MongoDB must perform a *collection scan*, i.e. scan every "
"document in a collection, to select those documents that match the query "
"statement. If an appropriate index exists for a query, MongoDB can use "
"the index to limit the number of documents it must inspect."
msgstr ""

# 4ab0012eb0104a6cb0b2f337ff41752d
#: ../source/core/indexes-introduction.txt:17
msgid ""
"Indexes are special data structures [#b-tree]_ that store a small portion"
" of the collection's data set in an easy to traverse form. The index "
"stores the value of a specific field or set of fields, ordered by the "
"value of the field. The ordering of the index entries supports efficient "
"equality matches and range-based query operations. In addition, MongoDB "
"can return sorted results by using the ordering in the index."
msgstr ""

# 38e106589a6d42a58caab536b45083d8
#: ../source/core/indexes-introduction.txt:25
msgid ""
"The following diagram illustrates a query that selects and orders the "
"matching documents using an index:"
msgstr ""

# 44de28e3d2b34d438edfaddece827e13
#: ../source/core/indexes-introduction.txt:30
msgid ""
"Fundamentally, indexes in MongoDB are similar to indexes in other "
"database systems. MongoDB defines indexes at the :term:`collection` level"
" and supports indexes on any field or sub-field of the documents in a "
"MongoDB collection."
msgstr ""

# 145cd5ec2e184b73a58ede6268765528
#: ../source/core/indexes-introduction.txt:35
msgid "MongoDB indexes use a B-tree data structure."
msgstr ""

# 4806bab977374c9c86ff2e307fd4aec1
#: ../source/core/indexes-introduction.txt:38
msgid "Index Types"
msgstr ""

# 7ad272e026dc4d6e9f58fdfbabf198cb
#: ../source/core/indexes-introduction.txt:40
msgid ""
"MongoDB provides a number of different index types to support specific "
"types of data and queries."
msgstr ""

# 41ff6dc1e6554bc399002cffbaca81ef
#: ../source/core/indexes-introduction.txt:44
msgid "Default ``_id``"
msgstr ""

# dffed2b955154420a8db3f278520a4c9
#: ../source/core/indexes-introduction.txt:46
msgid ""
"All MongoDB collections have an index on the ``_id`` field that exists by"
" default. If applications do not specify a value for ``_id`` the driver "
"or the :program:`mongod` will create an ``_id`` field with an "
":term:`ObjectId` value."
msgstr ""

# 8b9678512e41426f8b0b302a47b81582
#: ../source/core/indexes-introduction.txt:51
msgid ""
"The ``_id`` index is *unique* and prevents clients from inserting two "
"documents with the same value for the ``_id`` field."
msgstr ""

# e3052ad51be9422b985518948775c6a9
#: ../source/core/indexes-introduction.txt:57
msgid "Single Field"
msgstr ""

# d577b67da48546db85291c4e3e28c4cb
#: ../source/core/indexes-introduction.txt:59
msgid ""
"In addition to the MongoDB-defined ``_id`` index, MongoDB supports the "
"creation of user-defined ascending/descending indexes on a :doc:`single "
"field of a document </core/index-single>`."
msgstr ""

# 165a68d369b3497c96929e1ce1aa2c85
#: ../source/core/indexes-introduction.txt:65
msgid ""
"For a single-field index and sort operations, the sort order (i.e. "
"ascending or descending) of the index key does not matter because MongoDB"
" can traverse the index in either direction."
msgstr ""

# 05a8dc8c30fd495b805ec19d223032af
#: ../source/core/indexes-introduction.txt:69
msgid ""
"See :doc:`/core/index-single` and :ref:`sort-results-single-field` for "
"more information on single-field indexes."
msgstr ""

# 0c43132a8cca4f349d5eceba679db530
#: ../source/core/indexes-introduction.txt:73
msgid "Compound Index"
msgstr ""

# 0685a16b77984bd1a50909fc68cfc1a1
#: ../source/core/indexes-introduction.txt:75
msgid ""
"MongoDB also supports user-defined indexes on multiple fields, i.e. "
":doc:`compound indexes </core/index-compound>`."
msgstr ""

# f83c3bd707bf4d548323952e77669b13
#: ../source/core/indexes-introduction.txt:78
msgid ""
"The order of fields listed in a compound index has significance. For "
"instance, if a compound index consists of ``{ userid: 1, score: -1 }``, "
"the index sorts first by ``userid`` and then, within each ``userid`` "
"value, sorts by ``score``."
msgstr ""

# f508195fecb7444f9dd624496e5e89f3
#: ../source/core/indexes-introduction.txt:85
msgid ""
"For compound indexes and sort operations, the sort order (i.e. ascending "
"or descending) of the index keys can determine whether the index can "
"support a sort operation. See :ref:`index-ascending-and-descending` for "
"more information on the impact of index order on results in compound "
"indexes."
msgstr ""

# 1463d559fdf6499c8665781ac3bb0f6d
#: ../source/core/indexes-introduction.txt:91
msgid ""
"See :doc:`/core/index-compound` and :ref:`sort-on-multiple-fields` for "
"more information on compound indexes."
msgstr ""

# 5069984adba04bc8959ed0f5bc25f138
#: ../source/core/indexes-introduction.txt:95
msgid "Multikey Index"
msgstr ""

# 46d6ce8eb9e04505aa49fade82654b03
#: ../source/core/indexes-introduction.txt:97
msgid ""
"MongoDB uses :doc:`multikey indexes </core/index-multikey>` to index the "
"content stored in arrays. If you index a field that holds an array value,"
" MongoDB creates separate index entries for *every* element of the array."
" These :doc:`multikey indexes </core/index-multikey>` allow queries to "
"select documents that contain arrays by matching on element or elements "
"of the arrays. MongoDB automatically determines whether to create a "
"multikey index if the indexed field contains an array value; you do not "
"need to explicitly specify the multikey type."
msgstr ""

# 76b2ce174419481c855da16109e88397
#: ../source/core/indexes-introduction.txt:108
msgid ""
"See :doc:`/core/index-multikey` and :doc:`/core/multikey-index-bounds` "
"for more information on multikey indexes."
msgstr ""

# a361c5ababd640b985050f80b08ff336
#: ../source/core/indexes-introduction.txt:112
msgid "Geospatial Index"
msgstr ""

# d8b019c6fade491baa763a37ae4bc9aa
#: ../source/core/indexes-introduction.txt:114
msgid ""
"To support efficient queries of geospatial coordinate data, MongoDB "
"provides two special indexes: :doc:`2d indexes </core/2d>` that uses "
"planar geometry when returning results and :doc:`2sphere indexes "
"</core/2dsphere>` that use spherical geometry to return results."
msgstr ""

# 41295a9a54e34c14a56ec1297655f1b2
#: ../source/core/indexes-introduction.txt:119
msgid ""
"See :doc:`/core/geospatial-indexes` for a high level introduction to "
"geospatial indexes."
msgstr ""

# 018e45fb6edf4b34a6448316ce97dd2e
#: ../source/core/indexes-introduction.txt:123
msgid "Text Indexes"
msgstr ""

# 80f07259796546019619b820816615d9
#: ../source/core/indexes-introduction.txt:125
msgid ""
"MongoDB provides a ``text`` index type that supports searching for string"
" content in a collection. These text indexes do not store language-"
"specific *stop* words (e.g. \"the\", \"a\", \"or\") and *stem* the words "
"in a collection to only store root words."
msgstr ""

# 32664f6e65f64664b2f5ec3298b3ed79
#: ../source/core/indexes-introduction.txt:130
msgid ""
"See :doc:`/core/index-text` for more information on text indexes and "
"search."
msgstr ""

# c593b0ce408343eb82021d6855dbd1b6
#: ../source/core/indexes-introduction.txt:134
msgid "Hashed Indexes"
msgstr ""

# 6f9d282327644ba29ae2081250a28bd3
#: ../source/core/indexes-introduction.txt:136
msgid ""
"To support :ref:`hash based sharding <sharding-hashed-sharding>`, MongoDB"
" provides a :doc:`hashed index </core/index-hashed>` type, which indexes "
"the hash of the value of a field. These indexes have a more random "
"distribution of values along their range, but *only* support equality "
"matches and cannot support range-based queries."
msgstr ""

# dedb9a6f2cd940ce9025c361f1cd8a8c
#: ../source/core/indexes-introduction.txt:143
msgid "Index Properties"
msgstr ""

# 1c60be1723784254babefe0e0456c02b
#: ../source/core/indexes-introduction.txt:146
msgid "Unique Indexes"
msgstr ""

# 7729bf61c7a64933a6c82ae011d31569
#: ../source/core/indexes-introduction.txt:148
msgid ""
"The :doc:`unique </core/index-unique>` property for an index causes "
"MongoDB to reject duplicate values for the indexed field. Other than the "
"unique constraint, unique indexes are functionally interchangeable with "
"other MongoDB indexes."
msgstr ""

# bc15edab75f04edd9e27a3fed011d44e
#: ../source/core/indexes-introduction.txt:154
msgid "Sparse Indexes"
msgstr ""

# d69c43dbc2cd42bdae6b50c9344863b1
#: ../source/core/indexes-introduction.txt:156
msgid ""
"The :doc:`sparse </core/index-sparse>` property of an index ensures that "
"the index only contain entries for documents that have the indexed field."
" The index skips documents that *do not* have the indexed field."
msgstr ""

# 2c38191074474237ac770bd7a2f14084
#: ../source/core/indexes-introduction.txt:160
msgid ""
"You can combine the sparse index option with the unique index option to "
"reject documents that have duplicate values for a field but ignore "
"documents that do not have the indexed key."
msgstr ""

# 6904fc35a0c44fd6ab795bd76508d6d2
#: ../source/core/indexes-introduction.txt:165
msgid "TTL Indexes"
msgstr ""

# 26adbb14ed9348abb950d965e82edb72
#: ../source/core/indexes-introduction.txt:167
msgid ""
":doc:`TTL indexes </core/index-ttl>` are special indexes that MongoDB can"
" use to automatically remove documents from a collection after a certain "
"amount of time. This is ideal for certain types of information like "
"machine generated event data, logs, and session information that only "
"need to persist in a database for a finite amount of time."
msgstr ""

# 52f9c1b98f0d4669876845bce8b9c84e
#: ../source/core/indexes-introduction.txt:173
msgid "See: :doc:`/tutorial/expire-data` for implementation instructions."
msgstr ""

# 7cee85bc44f84492b72a600d5faee72e
#: ../source/core/indexes-introduction.txt:176
msgid "Index Use"
msgstr ""

# 7c8e2c62ec614ba5b1e2892675a404f8
#: ../source/core/indexes-introduction.txt:178
msgid ""
"Indexes can improve the efficiency of read operations. The "
":doc:`/tutorial/analyze-query-plan` tutorial provides an example of the "
"execution statistics of a query with and without an index."
msgstr ""

# 70df4c864dc544a0802c4ea739fc1e60
#: ../source/core/indexes-introduction.txt:182
msgid ""
"For information on how MongoDB chooses an index to use, see :ref:`query "
"optimizer <read-operations-query-optimization>`."
msgstr ""

# 78e4629861834b79b5cd966ef8ef12dc
#: ../source/core/indexes-introduction.txt:186
msgid "Covered Queries"
msgstr ""

# 79502622a8f6417bbd21f1c59af4c65a
#: ../source/core/indexes-introduction.txt:188
msgid ""
"When the query criteria and the :term:`projection` of a query include "
"*only* the indexed fields, MongoDB will return results directly from the "
"index *without* scanning any documents or bringing documents into memory."
" These covered queries can be *very* efficient."
msgstr ""

# f18c55e9fccd4b48bdae2c92d15d36b2
#: ../source/core/indexes-introduction.txt:195
msgid ""
"For more information on covered queries, see :ref:`read-operations-"
"covered-query`."
msgstr ""

# 01acb85fd19b450889441e7d2ef2bf35
#: ../source/core/indexes-introduction.txt:199
msgid "Index Intersection"
msgstr ""

# b998940f46574c1287f8b0c902f8c1f9
#: ../source/core/indexes-introduction.txt:203
msgid ""
"MongoDB can use the :doc:`intersection of indexes </core/index-"
"intersection>` to fulfill queries. For queries that specify compound "
"query conditions, if one index can fulfill a part of a query condition, "
"and another index can fulfill another part of the query condition, then "
"MongoDB can use the intersection of the two indexes to fulfill the query."
" Whether the use of a compound index or the use of an index intersection "
"is more efficient depends on the particular query and the system."
msgstr ""

# 375a54203e5b48ccb0c431d17f9fc93c
#: ../source/core/indexes-introduction.txt:212
msgid "For details on index intersection, see :doc:`/core/index-intersection`."
msgstr ""

# c09109eac843411a8fd1bc21378acf42
#: ../source/core/indexes-introduction.txt:215
msgid "Restrictions"
msgstr ""

# b8653d577b6c4d6a8891d4c7528c3e17
#: ../source/core/indexes-introduction.txt:217
msgid ""
"Certain restrictions apply to indexes, such as the length of the index "
"keys or the number of indexes per collection. See :ref:`Index Limitations"
" <index-limitations>` for details."
msgstr ""

# 93cbb2d3a2ed41868878cf42e8f650c7
#: ../source/core/indexes-introduction.txt:1
msgid "index"
msgstr ""

# 93cbb2d3a2ed41868878cf42e8f650c7
#: ../source/core/indexes-introduction.txt:1
msgid "overview"
msgstr ""

#~ msgid ""
#~ "Indexes support the efficient execution "
#~ "of queries in MongoDB. Without indexes"
#~ " MongoDB must scan every document in"
#~ " a collection to select those "
#~ "documents that match the query "
#~ "statement. These *collection scans* are "
#~ "inefficient because they require "
#~ ":program:`mongod` to process a larger "
#~ "volume of data than an index for"
#~ " each operation."
#~ msgstr ""

#~ msgid "Tip"
#~ msgstr ""

#~ msgid "**Sorted Results**"
#~ msgstr ""

#~ msgid "**Covered Results**"
#~ msgstr ""

#~ msgid ""
#~ "When the query criteria and the "
#~ ":term:`projection` of a query include "
#~ "*only* the indexed fields, MongoDB will"
#~ " return results directly from the "
#~ "index *without* scanning any documents "
#~ "or bringing documents into memory. These"
#~ " covered queries can be *very* "
#~ "efficient. Indexes can also cover "
#~ ":doc:`aggregation pipeline operations </core"
#~ "/aggregation-pipeline>`."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB provides an umber of different"
#~ " index types to support specific "
#~ "types of data and queries."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB provides a *beta* ``text`` index"
#~ " type that supports searching for "
#~ "string content in a collection. These"
#~ " text indexes do not store "
#~ "language-specific *stop* words (e.g. "
#~ "\"the\", \"a\", \"or\") and *stem* the"
#~ " words in a collection to only "
#~ "store root words."
#~ msgstr ""

# 4c66f78d55074a6ca2a0fe7fe21f1f48
#~ msgid ""
#~ "Indexes are special data structures "
#~ "[#b-tree]_ that store a small portion"
#~ " of the collection's data set in "
#~ "an easy to traverse form. The "
#~ "index stores the value of a "
#~ "specific field or set of fields, "
#~ "ordered by the value of the field."
#~ msgstr ""

# 9c43246ede7d4457bc48fff97dc12571
#~ msgid ""
#~ "If an appropriate index exists for "
#~ "a query, MongoDB can use the index"
#~ " to limit the number of documents "
#~ "it must inspect. In some cases, "
#~ "MongoDB can use the data from the"
#~ " index to determine which documents "
#~ "match a query. The following diagram "
#~ "illustrates a query that selects "
#~ "documents using an index."
#~ msgstr ""

# 201b7d9f6a7642328e286d1d736f820c
#~ msgid ""
#~ "Consider the documentation of the "
#~ ":ref:`query optimizer <read-operations-"
#~ "query-optimization>` for more information "
#~ "on the relationship between queries and"
#~ " indexes."
#~ msgstr ""

# 877a741e8b824266a2382fe2f763ca11
#~ msgid ""
#~ "Indexes can also optimize the "
#~ "performance of other operations in "
#~ "specific situations:"
#~ msgstr ""

# 59b2b7b97aa0476abedf0316a43234d9
#~ msgid ""
#~ "MongoDB can use indexes to return "
#~ "documents sorted by the index key "
#~ "directly from the index without "
#~ "requiring an additional sort phase."
#~ msgstr ""

# 10369decfefa44d6accab56ffb9ff1ca
#~ msgid ""
#~ "The ``_id`` index is *unique*, and "
#~ "prevents clients from inserting two "
#~ "documents with the same value for "
#~ "the ``_id`` field."
#~ msgstr ""

# b74aa9d684c34b2f9e29d651d45db336
#~ msgid ""
#~ "In addition to the MongoDB-defined "
#~ "``_id`` index, MongoDB supports user-"
#~ "defined indexes on a :doc:`single field"
#~ " of a document </core/index-single>`. "
#~ "Consider the following illustration of a"
#~ " single-field index:"
#~ msgstr ""

# 48d68cb11a664862bbe6571b10907c9e
#~ msgid ""
#~ "MongoDB *also* supports user-defined "
#~ "indexes on multiple fields. These "
#~ ":doc:`compound indexes </core/index-compound>` "
#~ "behave like single-field indexes; "
#~ "*however*, the query can select "
#~ "documents based on additional fields. "
#~ "The order of fields listed in a"
#~ " compound index has significance. For "
#~ "instance, if a compound index consists"
#~ " of ``{ userid: 1, score: -1 "
#~ "}``, the index sorts first by "
#~ "``userid`` and then, within each "
#~ "``userid`` value, sort by ``score``. "
#~ "Consider the following illustration of "
#~ "this compound index:"
#~ msgstr ""

# 1e0d5650830d498e9bc4e3492a15af54
#~ msgid "Consider the following illustration of a multikey index:"
#~ msgstr ""

# b33c63138fb6480e85b5cd91e78d60ca
#~ msgid ""
#~ "The :doc:`unique </core/index-unique>` "
#~ "property for an index causes MongoDB "
#~ "to reject duplicate values for the "
#~ "indexed field.  To create a :doc:`unique"
#~ " index </core/index-unique>` on a "
#~ "field that already has duplicate values,"
#~ " see :ref:`index-creation-duplicate-"
#~ "dropping` for index creation options. "
#~ "Other than the unique constraint, unique"
#~ " indexes are functionally interchangeable "
#~ "with other MongoDB indexes."
#~ msgstr ""

#~ msgid ""
#~ "Indexes support the efficient execution "
#~ "of queries in MongoDB. Without indexes,"
#~ " MongoDB must scan every document in"
#~ " a collection to select those "
#~ "documents that match the query "
#~ "statement. These *collection scans* are "
#~ "inefficient because they require "
#~ ":program:`mongod` to process a larger "
#~ "volume of data than an index for"
#~ " each operation."
#~ msgstr ""

#~ msgid "Optimization"
#~ msgstr ""

#~ msgid ""
#~ "Create indexes to support common and "
#~ "user-facing queries. Having these "
#~ "indexes will ensure that MongoDB only"
#~ " scans the smallest possible number "
#~ "of documents."
#~ msgstr ""

#~ msgid "Sorted Results"
#~ msgstr ""

#~ msgid "Covered Results"
#~ msgstr ""

