.. _authentication:

==============
Authentication
==============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Authentication is the process of verifying the identity of a client.
When access control (:doc:`authorization </core/authorization>`) is
enabled, MongoDB requires all clients to authenticate themselves in
order to determine their access.

Although authentication and :doc:`authorization </core/authorization>`
are closely connected, authentication is distinct from authorization:

- **Authentication** verifies the identity of a :ref:`user <users>`.
- **Authorization** determines the verified user's access to resources
  and operations.

Getting Started
---------------

To get started using access control, follow these tutorials:

- :ref:`enable-access-control`
- :ref:`create-users`
- :ref:`authentication-auth-as-user`

.. _available-authentication-mechanisms:

Authentication Mechanisms
-------------------------

MongoDB Community supports a number of :ref:`authentication mechanisms
<security-authentication-mechanisms>` that clients can use to verify
their identity:

- :ref:`authentication-scram` (*Default*)
- :ref:`x.509 Certificate Authentication <security-auth-x509>`.

In addition to the preceding mechanisms, MongoDB Atlas and MongoDB
Enterprise support the following mechanisms:

- :ref:`LDAP proxy authentication <security-auth-ldap>`, and
- :ref:`Kerberos authentication <security-auth-kerberos>`.

These mechanisms allow MongoDB to integrate into your
existing authentication system.


Internal / Membership Authentication
------------------------------------

In addition to verifying the identity of a client, MongoDB can require
members of replica sets and sharded clusters to :ref:`authenticate
their membership <inter-process-auth>` to their respective
replica set or sharded cluster. See :ref:`inter-process-auth`
for more information.

.. toctree::
   :titlesonly:
   :hidden:

   /core/security-users
   /core/authentication-mechanisms
   /core/authentication-mechanisms-enterprise
   /core/security-internal-authentication
   /core/localhost-exception
