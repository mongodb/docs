#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/reference/method/db.collection.bulkWrite.txt:3
msgid "db.collection.bulkWrite()"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:20
msgid "Performs multiple write operations with controls for order of execution."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:23
msgid ":method:`~db.collection.bulkWrite()` has the following syntax:"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.bulkWrite-params.rst:7
msgid "Parameter"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.bulkWrite-params.rst:9
msgid "Type"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.bulkWrite-params.rst:11
msgid "Description"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.bulkWrite-params.rst:13
msgid "``operations``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.bulkWrite-params.rst:15
msgid "array"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.bulkWrite-params.rst:17
#: ../source/includes/apiargs/method-db.collection.bulkWrite-params.rst:63
msgid "An array of :method:`~db.collection.bulkWrite()` write operations."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.bulkWrite-params.rst:20
#: ../source/includes/apiargs/method-db.collection.bulkWrite-params.rst:66
msgid "Valid operations are:"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.bulkWrite-params.rst:22
#: ../source/includes/apiargs/method-db.collection.bulkWrite-params.rst:68
msgid ":ref:`insertOne <bulkwrite-write-operations-insertOne>`"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.bulkWrite-params.rst:24
#: ../source/includes/apiargs/method-db.collection.bulkWrite-params.rst:70
msgid ":ref:`updateOne <bulkwrite-write-operations-updateOneMany>`"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.bulkWrite-params.rst:26
#: ../source/includes/apiargs/method-db.collection.bulkWrite-params.rst:72
msgid ":ref:`updateMany <bulkwrite-write-operations-updateOneMany>`"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.bulkWrite-params.rst:28
#: ../source/includes/apiargs/method-db.collection.bulkWrite-params.rst:74
msgid ":ref:`deleteOne <bulkwrite-write-operations-deleteOneMany>`"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.bulkWrite-params.rst:30
#: ../source/includes/apiargs/method-db.collection.bulkWrite-params.rst:76
msgid ":ref:`deleteMany <bulkwrite-write-operations-deleteOneMany>`"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.bulkWrite-params.rst:32
#: ../source/includes/apiargs/method-db.collection.bulkWrite-params.rst:78
msgid ":ref:`replaceOne <bulkwrite-write-operations-replaceOne>`"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.bulkWrite-params.rst:34
#: ../source/includes/apiargs/method-db.collection.bulkWrite-params.rst:80
msgid "See :ref:`bulkwrite-write-operations` for usage of each operation."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.bulkWrite-params.rst:38
msgid "``writeConcern``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.bulkWrite-params.rst:40
msgid "document"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.bulkWrite-params.rst:42
#: ../source/includes/apiargs/method-db.collection.bulkWrite-params.rst:86
msgid ""
"Optional. A document expressing the :doc:`write concern </reference"
"/write-concern>`. Omit to use the default write concern."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.bulkWrite-params.rst:47
msgid "``ordered``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.bulkWrite-params.rst:49
msgid "boolean"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.bulkWrite-params.rst:51
#: ../source/includes/apiargs/method-db.collection.bulkWrite-params.rst:93
msgid ""
"Optional. A boolean specifying whether the :binary:`~bin.mongod` instance"
" should perform an ordered or unordered operation execution. Defaults to "
"``true``."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.bulkWrite-params.rst:54
#: ../source/includes/apiargs/method-db.collection.bulkWrite-params.rst:96
msgid "See :ref:`bulkwrite-write-operations-executionofoperations`"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.bulkWrite-params.rst
msgid "param array operations"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.bulkWrite-params.rst
msgid "param document writeConcern"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.bulkWrite-params.rst
msgid "param boolean ordered"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt
msgid "Returns"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:37
msgid ""
"- A boolean ``acknowledged`` as ``true`` if the operation ran with   "
":term:`write concern` or ``false`` if write concern was disabled.  - A "
"count for each write operation.  - An array containing an ``_id`` for "
"each successfully inserted or   upserted documents."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:38
msgid ""
"A boolean ``acknowledged`` as ``true`` if the operation ran with "
":term:`write concern` or ``false`` if write concern was disabled."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:41
msgid "A count for each write operation."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:43
msgid ""
"An array containing an ``_id`` for each successfully inserted or upserted"
" documents."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:47
msgid "Behavior"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:49
msgid ""
":method:`~db.collection.bulkWrite()` takes an array of write operations "
"and executes each of them. By default operations are executed in order. "
"See :ref:`bulkwrite-write-operations-executionofoperations` for "
"controlling the order of write operation execution."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:58
msgid "Write Operations"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:63
msgid "insertOne"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:65
msgid "Inserts a single document into the collection."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:67
msgid "See :method:`db.collection.insertOne()`."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:78
msgid "updateOne and updateMany"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:82
msgid ""
"The ``updateOne`` and ``updateMany`` operations add support for "
"``arrayFilters`` parameter that determines which elements to modify in an"
" array field. Refer to :method:`db.collection.updateOne()` and "
":method:`db.collection.updateMany()` for details."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:89
msgid ""
"Add support for :ref:`collation <collation>`. Refer to "
":method:`db.collection.updateOne()` and "
":method:`db.collection.updateMany()` for details"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:93
msgid ""
"``updateOne`` updates a *single* document in the collection that matches "
"the filter. If multiple documents match, ``updateOne`` will update the "
"*first* matching document only. See :method:`db.collection.updateOne()`."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:111
msgid ""
"``updateMany`` updates *all* documents in the collection that match the "
"filter. See :method:`db.collection.updateMany()`."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:128
#: ../source/reference/method/db.collection.bulkWrite.txt:163
#: ../source/reference/method/db.collection.bulkWrite.txt:201
msgid ""
"Use :ref:`query selectors<query-selectors>` such as those used with "
":method:`~db.collection.find()` for the ``filter`` field."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:131
msgid ""
"Use :doc:`/reference/operator/update/` such as :update:`$set`, "
":update:`$unset`, or :update:`$rename` for the ``update`` field."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:135
#: ../source/reference/method/db.collection.bulkWrite.txt:169
msgid "By default, ``upsert`` is ``false``."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:140
msgid "replaceOne"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:144
msgid ""
"Add support for :ref:`collation <collation>`. Refer to "
":method:`db.collection.replaceOne()` for details"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:147
msgid ""
"``replaceOne`` replaces a *single* document in the collection that "
"matches the filter. If multiple documents match, ``replaceOne`` will "
"replace the *first* matching document only. See "
":method:`db.collection.replaceOne()`."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:166
msgid ""
"The ``replacement`` field cannot contain :doc:`update operators "
"</reference/operator/update>`."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:174
msgid "deleteOne and deleteMany"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:178
msgid ""
"Add support for :ref:`collation <collation>`. Refer to "
":method:`db.collection.deleteOne()` and "
":method:`db.collection.deleteMany()` for details"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:182
msgid ""
"``deleteOne`` deletes a *single* document in the collection that match "
"the filter. If multiple documents match, ``deleteOne`` will delete the "
"*first* matching document only. See :method:`db.collection.deleteOne()`."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:192
msgid ""
"``deleteMany`` deletes *all* documents in the collection that match the "
"filter. See :method:`db.collection.deleteMany()`."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:208
msgid "``_id`` Field"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:210
msgid ""
"If the document does not specify an :term:`_id` field, then "
":binary:`~bin.mongod` adds the ``_id`` field and assign a unique "
":method:`ObjectId` for the document before inserting or upserting it. "
"Most drivers create an ObjectId and insert the ``_id`` field, but the "
":binary:`~bin.mongod` will create and populate the ``_id`` if the driver "
"or application does not."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:217
msgid ""
"If the document contains an ``_id`` field, the ``_id`` value must be "
"unique within the collection to avoid duplicate key error."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:220
msgid ""
"Update or replace operations cannot specify an ``_id`` value that differs"
" from the original document."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:226
msgid "Execution of Operations"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:228
msgid ""
"The ``ordered`` parameter specifies whether "
":method:`~db.collection.bulkWrite()` will execute operations in order or "
"not. By default, operations are executed in order."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:232
msgid ""
"The following code represents a :method:`~db.collection.bulkWrite()` with"
" five operations."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:248
msgid ""
"In the default ``ordered : true`` state, each operation will be executed "
"in order, from the first operation ``insertOne`` to the last operation "
"``deleteMany``."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:252
msgid ""
"If ``ordered`` is set to false, operations may be reordered by "
":binary:`~bin.mongod` to increase performance. Applications should not "
"depend on order of operation execution."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:256
msgid ""
"The following code represents an unordered "
":method:`~db.collection.bulkWrite()` with six operations:"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:273
msgid ""
"With ``ordered : false``, the results of the operation may vary. For "
"example, the ``deleteOne`` or ``deleteMany`` may remove more or fewer "
"documents depending on whether the run before or after the ``insertOne``,"
" ``updateOne``, ``updateMany``, or ``replaceOne`` operations."
msgstr ""

#: ../source/includes/fact-bulkwrite-operation-batches.rst:1
msgid ""
"The number of operations in each group cannot exceed the value of the "
":limit:`maxWriteBatchSize <Write Command Batch Limit Size>` of the "
"database. As of MongoDB 3.6, this value is ``100,000``. This value is "
"shown in the :data:`isMaster.maxWriteBatchSize` field."
msgstr ""

#: ../source/includes/fact-bulkwrite-operation-batches.rst:6
msgid ""
"This limit prevents issues with oversized error messages. If a group "
"exceeds this :limit:`limit<Write Command Operation Limit Size>`, the "
"client driver divides the group into smaller groups with counts less than"
" or equal to the value of the limit. For example, with the "
"``maxWriteBatchSize`` value of ``100,000``, if the queue consists of "
"``200,000`` operations, the driver creates 2 groups, each with "
"``100,000`` operations."
msgstr ""

#: ../source/includes/fact-bulkwrite-operation-batches.rst:16
msgid ""
"The driver only divides the group into smaller groups when using the "
"high-level API. If using :doc:`db.runCommand() "
"</reference/method/db.runCommand/>` directly (for example, when writing a"
" driver), MongoDB throws an error when attempting to execute a write "
"batch which exceeds the limit."
msgstr ""

#: ../source/includes/fact-bulkwrite-operation-batches.rst:22
msgid ""
"Starting in MongoDB 3.6, once the error report for a single batch grows "
"too large, MongoDB truncates all remaining error messages to the empty "
"string. Currently, begins once there are at least 2 error messages with "
"total size greater than ``1MB``."
msgstr ""

#: ../source/includes/fact-bulkwrite-operation-batches.rst:27
msgid ""
"The sizes and grouping mechanics are internal performance details and are"
" subject to change in future versions."
msgstr ""

#: ../source/includes/fact-bulk-operation-sharded-cluster.rst:1
msgid ""
"Executing an :method:`ordered <db.collection.initializeOrderedBulkOp()>` "
"list of operations on a sharded collection will generally be slower than "
"executing an :method:`unordered "
"<db.collection.initializeUnorderedBulkOp()>` list since with an ordered "
"list, each operation must wait for the previous operation to finish."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:283
msgid "Capped Collections"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:285
msgid ""
":method:`~db.collection.bulkWrite()` write operations have restrictions "
"when used on a :term:`capped collection`."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:288
msgid ""
"``updateOne`` and ``updateMany`` throw a ``WriteError`` if the ``update``"
" criteria increases the size of the document being modified."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:291
msgid ""
"``replaceOne`` throws a ``WriteError`` if the ``replacement`` document "
"has a larger size than the original document."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:295
msgid ""
"``deleteOne`` and ``deleteMany`` throw a ``WriteError`` if used on a "
"capped collection."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:299
msgid "Error Handling"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:301
msgid ""
":method:`~db.collection.bulkWrite()` throws a ``BulkWriteError`` "
"exception on errors."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:304
msgid ""
"Excluding :doc:`/reference/write-concern` errors, ordered operations stop"
" after an error, while unordered operations continue to process any "
"remaining write operations in the queue."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:308
msgid ""
"Write concern errors are displayed in the ``writeConcernErrors`` field, "
"while all other errors are displayed in the ``writeErrors`` field. If an "
"error is encountered, the number of successful write operations are "
"displayed instead of the inserted ``_id`` values. Ordered operations "
"display the single error encountered while unordered operations display "
"each error in an array."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:316
msgid "Examples"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:321
msgid "Bulk Write Operations"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:323
#: ../source/reference/method/db.collection.bulkWrite.txt:412
msgid ""
"The ``characters`` collection in the ``guidebook`` database contains the "
"following documents:"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:331
msgid ""
"The following :method:`~db.collection.bulkWrite()` performs multiple "
"operations on the collection:"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:354
#: ../source/reference/method/db.collection.bulkWrite.txt:444
msgid "The operation returns the following:"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:373
msgid ""
"If the collection had contained a document with ``\"_id\" : 5\"`` before "
"executing the bulk write, then when the bulk write is executed, the "
"following duplicate key exception would be thrown for the second "
"insertOne:"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:402
msgid ""
"Since ``ordered`` is true by default, only the first operation completes "
"successfully. The rest are not executed. Running the "
":method:`~db.collection.bulkWrite()` with ``ordered : false`` would allow"
" the remaining operations to complete despite the error."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:410
msgid "Unordered Bulk Write"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:420
msgid ""
"The following :method:`~db.collection.bulkWrite()` performs multiple "
"``unordered`` operations on the ``characters`` collection. Note that one "
"of the ``insertOne`` stages has a duplicate ``_id`` value:"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:471
msgid ""
"Since this was an ``unordered`` operation, the writes remaining in the "
"queue were processed despite the exception."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:477
msgid "Bulk Write with Write Concern"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:479
msgid "The ``enemies`` collection contains the following documents:"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:488
msgid ""
"The following :method:`~db.collection.bulkWrite()` performs multiple "
"operations on the collection using a :ref:`write concern <wc-w>` value of"
" ``\"majority\"`` and :ref:`timeout <wc-wtimeout>` value of 100 "
"milliseconds:"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:526
msgid ""
"If the total time required for all required nodes in the replica set to "
"acknowledge the write operation is greater than ``wtimeout``, the "
"following ``writeConcernError`` is displayed when the ``wtimeout`` period"
" has passed."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:569
msgid ""
"The result set shows the operations executed since ``writeConcernErrors``"
" errors are *not* an indicator that any write operations failed."
msgstr ""

# 5ef1cab6be5548f895be8909a9f4f3f9
#~ msgid "On this page"
#~ msgstr ""

# 9d1cea1200ae4eb9bcafea80c222a658
#~ msgid ""
#~ "If the document does not specify "
#~ "an :term:`_id` field, then :program:`mongod`"
#~ " adds the ``_id`` field and assign"
#~ " a unique :method:`ObjectId` for the "
#~ "document before inserting or upserting "
#~ "it. Most drivers create an ObjectId "
#~ "and insert the ``_id`` field, but "
#~ "the :program:`mongod` will create and "
#~ "populate the ``_id`` if the driver "
#~ "or application does not."
#~ msgstr ""

# da6739f6ab7d4cd3aa4086a3dc102a5a
#~ msgid ""
#~ "If ``ordered`` is set to false, "
#~ "operations may be reordered by "
#~ ":program:`mongod` to increase performance. "
#~ "Applications should not depend on order"
#~ " of operation execution."
#~ msgstr ""

# 51038fcdec8f486095ec17f1c5418fef
#~ msgid ""
#~ "Each group of operations can have "
#~ "at most :limit:`1000 operations <Write "
#~ "Command Operation Limit Size>`. If a "
#~ "group exceeds this :limit:`limit<Write Command"
#~ " Operation Limit Size>`, MongoDB will "
#~ "divide the group into smaller groups "
#~ "of 1000 or less. For example, if"
#~ " the queue consists of 2000 "
#~ "operations, MongoDB creates 2 groups, "
#~ "each with 1000 operations."
#~ msgstr ""

# 18fb569410104c23b03981e3a17a7816
# 0c3ee3f1ab7a4f3891986e015bd2ace5
#~ msgid "The ``characters`` collection contains the following documents:"
#~ msgstr ""

# f50a88e567f546f7ba6b0a9b1c93e13d
#~ msgid ""
#~ "If the ``_id`` value for the "
#~ "second of the ``insertOne`` operations "
#~ "were a duplicate of an existing "
#~ "``_id``, the following exception would "
#~ "be thrown:"
#~ msgstr ""

# e1ef8d0988f140e1afca581922c333ef
#~ msgid ""
#~ "Since ``ordered`` was true by default,"
#~ " only the first operation completes "
#~ "successfully. The rest are not executed."
#~ " Running the :method:`~db.collection.bulkWrite()` "
#~ "with ``ordered : false`` would allow "
#~ "the remaining operations to complete "
#~ "despite the error."
#~ msgstr ""

