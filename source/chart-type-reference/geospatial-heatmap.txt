.. _geospatial-heatmap-type:

==================
Geospatial Heatmap
==================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

You can use geospatial heatmap charts to visualize how
geographic areas of a map compare to one another based on a given
criterion.

.. note::

   Heatmap charts can use a maximum of 10,000 documents. If you
   create a heatmap with a collection of more than 10,000
   documents, turn on :ref:`Sample Mode <charts-sample-mode>` or use a
   :ref:`filter <charts-filter-documents>`. Otherwise, your chart may
   use incomplete or misleading data.

Geospatial Heatmap Encoding Channels
------------------------------------

Coordinates
~~~~~~~~~~~

A :guilabel:`geopoint` encoding channel which defines the map
area of the chart. See the :ref:`Geopoint <geopoint-channel>` reference
page for more information about what types of data you can use in this
channel.

Intensity
~~~~~~~~~

.. include:: /includes/intensity-definition.rst

The :ref:`radius customization option <customize-radius>` dictates the 
size of the data markers
in :ref:`Geospatial Heatmaps <geospatial-heatmap-type>`. The color of
each data marker reflects the aggregated value of all data points
within that marker's radius.

.. example::

   If ten data points exist within the specified radius, the color
   displayed is based on the aggregated value of those ten data points.

.. note::

   Intensity shading is local to the map's current view. The most
   intense color is displayed for the most extreme aggregated values
   currently visible on the map, even if there are points outside the
   current view that are more extreme.

Legend
~~~~~~

Unlike other types of charts, the legend and the chart colors on
geospatial heatmaps change when the view changes. The color range is
based on the data in the current view, and may change when you pan or
zoom the map.

Customization Options
---------------------

The following customization options are specific to geospatial heatmap
charts. For general customization options, see :ref:`customize-charts`.

.. include:: /includes/customization/auto-set-viewport.rst

.. _customize-radius:

Radius
~~~~~~

You can adjust the radius of your data points. The radius is measured 
in pixels and defaults to ``30``.

Opacity
~~~~~~~

The :guilabel:`Opacity` level of a map modifies the degree to which
the chart's map data shows through the data point markers.

Geospatial heatmap charts default to ``100%``.

Custom Color Palette
~~~~~~~~~~~~~~~~~~~~

The color palette specifies the range of colors that corresponds to
relative aggregated values in your map. Geospatial heatmap charts use a 
gradient color picker.

To enable palette customization, toggle the 
:guilabel:`Custom Color Palette` switch in the :guilabel:`General` 
section.

For more information, see :ref:`Color Palette Customization
<color-palette-customization>`.

Examples
--------

The following chart is based on AirBnB data for the New York City area. 
It shows rental rate hot spots in a geospatial heatmap.

.. figure:: /images/charts/geo-type-heatmap.png
   :figwidth: 760px
   :alt: Geospatial heatmap example

The :guilabel:`Coordinates` channel uses the ``location`` database
field, which contains arrays of latitude-longitude pairs. The
:guilabel:`Intensity` field uses the ``monthly_price`` database field,
which contains monthly rental rates for each property in the database.

Tutorials
---------

See the following tutorials to build geospatial heatmap charts:

- :ref:`create-heatmap-chart-geojson`

- :ref:`create-heatmap-chart-numeric`

Prerequisites
~~~~~~~~~~~~~

The tutorials on this page use the ``sample_airbnb.listingsAndReviews`` 
and ``sample_geospatial.shipwrecks`` collections. Before starting, 
you must load the sample data on your cluster. To learn how to load 
the sample data provided by |service| into your
cluster, see :atlas:`Load Sample Data </sample-data/>`.

.. _create-heatmap-chart-geojson:

Create a Geospatial Heatmap Chart Using GeoJSON Points
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This tutorial demonstrates how to create a geospatial heatmap chart 
with fields that are :manual:`GeoJSON Points </reference/geojson/>`. 
The final chart displays a heatmap of average AirBnB prices in New York.

.. note::

   |charts-short| automatically determines if field types in your collection 
   are :manual:`GeoJSON Points </reference/geojson/>` by displaying 
   the :icon-charts:`geoglobe` icon. You can map these fields directly 
   to a geopoint channel type in the Chart Builder. For more information,
   see :ref:`Geopoint Channel Type <geopoint-channel>`.

.. procedure::
   :style: normal

   .. step:: Add a geospatial heatmap chart to your dashboard.
      
      a. From the :guilabel:`Dashboards` page, select the dashboard 
         where you want to add a new chart. For instructions on setting 
         up a dashboard, see :doc:`Dashboards </dashboards>`.

      #. Click :guilabel:`Add Chart`.

      #. In the :guilabel:`Select Data Source` modal, click the 
         :guilabel:`Project` tab. 
         
      #. In the cluster where you loaded the 
         sample data, select the ``listingsAndReviews`` collection 
         in the ``sample_airbnb`` database.

      #. In the :guilabel:`Chart Type` dropdown, click :guilabel:`Geo Heatmap`.

      For more details, see :ref:`create-new-chart`.

   .. step:: Add fields to your chart.

      a. Select the :guilabel:`Encode` tab. 

      #. Navigate to the :guilabel:`Fields` pane on the left side of the 
         Chart Builder. This section lists all available fields in the 
         ``listingsAndReviews`` collection.
      
      #. Drag the ``location`` geopoint field nested in the ``address``
         field to the :guilabel:`Coordinates` encoding channel.

      #. Drag the ``price`` field to the :guilabel:`Intensity` encoding 
         channel. Then, in the :guilabel:`Aggregate` dropdown that appears, 
         set the aggregation method to :guilabel:`mean`.

         |charts-short| displays the aggregated mean prices of 
         AirBnB listings across the world. The color gradient to the right
         represents the range of prices in the heatmap. A more intense 
         gradation reflects higher prices in the area.

         .. note::

            To customize colors, click the :guilabel:`Customize` tab.
            Under :guilabel:`General`, enable the 
            :guilabel:`Custom Color Palette` and set your preferred 
            colors. For more information, see
            :ref:`color-palette-customization`.

   .. step:: Filter your results.

      a. Select the :guilabel:`Filter` tab.

      #. Drag the ``market`` field nested in the ``address`` field
         to the :guilabel:`Filter` encoding channel.

      #. To filter your results to include only AirBnBs in New York, 
         click :guilabel:`Deselect All` and then select ``New York``.

   .. step:: Save the chart to your dashboard.
      
      a. Optionally, :guilabel:`Enter a title`
         or :guilabel:`Enter a description` for your chart.
         
      #. Click :guilabel:`Save and Close` 
         at the upper right of the chart builder view.

.. _create-heatmap-chart-numeric:

Create a Geospatial Heatmap Chart Using Numeric or Numeric Array Fields
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This tutorial demonstrates how to create a geospatial heatmap chart 
with numeric or numeric array fields. The final chart displays a 
heatmap of shipwrecks across the world.

.. procedure::
   :style: normal

   .. step:: Add a geospatial heatmap chart to your dashboard.
      
      a. From the :guilabel:`Dashboards` page, select the dashboard 
         where you want to add a new chart. For instructions on setting 
         up a dashboard, see :doc:`Dashboards </dashboards>`.

      #. Click :guilabel:`Add Chart`.

      #. In the :guilabel:`Select Data Source` modal, click the 
         :guilabel:`Project` tab. 
         
      #. In the cluster where you loaded the 
         sample data, select the ``shipwrecks`` collection 
         in the ``sample_geospatial`` database.

      #. In the :guilabel:`Chart Type` dropdown, click :guilabel:`Geo Heatmap`.

      For more details, see :ref:`create-new-chart`.

   .. step:: Add fields to your chart.

      a. Select the :guilabel:`Encode` tab. 

      #. Navigate to the :guilabel:`Fields` pane on the left side of 
         the Chart Builder. This section lists all available fields in
         the ``shipwrecks`` collection.
      
      #. Drag the ``coordinates`` numeric array field to the 
         :guilabel:`Coordinates` encoding channel. 
      
         .. note:: 
            
            Alternatively, you can specify the latitude and longitude
            coordinates separately. First, drag the ``latdec`` numeric field 
            to the :guilabel:`Coordinates` encoding channel. Once the 
            :guilabel:`Longitude` channel appears, drag the ``londec`` 
            numeric field to the corresponding channel.

      #. Drag the ``_id`` field to the :guilabel:`Intensity` encoding channel.
         The aggregation method is set to :guilabel:`count` by default.

         |charts-short| displays the aggregated count of shipwrecks 
         across the world. The color gradient to the right
         represents the range of count values in the heatmap. A more intense 
         gradation suggests that more shipwrecks have occured in the area.

         .. note::

            To customize colors, click the :guilabel:`Customize` tab.
            Under :guilabel:`General`, enable the 
            :guilabel:`Custom Color Palette` and set your preferred 
            colors. For more information, see
            :ref:`color-palette-customization`.

   .. step:: Save the chart to your dashboard.
      
      a. Optionally, :guilabel:`Enter a title`
         or :guilabel:`Enter a description` for your chart.
         
      #. Click :guilabel:`Save and Close` 
         at the upper right of the chart builder view.

Limitations
-----------

The maximum query response size for a geospatial heatmap is 50000 documents. 
