# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/command/eval.txt:3
msgid "eval"
msgstr ""

#: ../source/reference/command/eval.txt:17
msgid "Definition"
msgstr ""

#: ../source/reference/command/eval.txt:23
msgid "The :dbcommand:`eval` command evaluates JavaScript functions on the database server."
msgstr ""

#: ../source/reference/command/eval.txt:26
msgid "The :dbcommand:`eval` command has the following form:"
msgstr ""

#: ../source/reference/command/eval.txt:36
msgid "The command contains the following fields:"
msgstr ""

#: ../source/includes/apiargs/dbcommand-eval-param.rst:7
msgid "Field"
msgstr ""

#: ../source/includes/apiargs/dbcommand-eval-param.rst:9
msgid "Type"
msgstr ""

#: ../source/includes/apiargs/dbcommand-eval-param.rst:11
msgid "Description"
msgstr ""

#: ../source/includes/apiargs/dbcommand-eval-param.rst:13
msgid "``eval``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-eval-param.rst:15
msgid "function"
msgstr ""

#: ../source/includes/apiargs/dbcommand-eval-param.rst:17
#: ../source/includes/apiargs/dbcommand-eval-param.rst:47
msgid "A JavaScript function."
msgstr ""

#: ../source/includes/apiargs/dbcommand-eval-param.rst:21
msgid "``args``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-eval-param.rst:23
msgid "array"
msgstr ""

#: ../source/includes/apiargs/dbcommand-eval-param.rst:25
#: ../source/includes/apiargs/dbcommand-eval-param.rst:53
msgid "Optional. An array of arguments to pass to the JavaScript function. Omit if the function does not take arguments."
msgstr ""

#: ../source/includes/apiargs/dbcommand-eval-param.rst:29
msgid "``nolock``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-eval-param.rst:31
msgid "boolean"
msgstr ""

#: ../source/includes/apiargs/dbcommand-eval-param.rst:33
#: ../source/includes/apiargs/dbcommand-eval-param.rst:59
msgid "Optional. By default, :dbcommand:`eval` takes a global write lock before evaluating the JavaScript function. As a result, :dbcommand:`eval` blocks all other read and write operations to the database while the :dbcommand:`eval` operation runs. Set ``nolock`` to ``true`` on the :dbcommand:`eval` command to prevent the :dbcommand:`eval` command from taking the global write lock before evaluating the JavaScript. ``nolock`` does not impact whether operations within the JavaScript code itself takes a write lock."
msgstr ""

#: ../source/includes/apiargs/dbcommand-eval-param.rst:0
msgid "field function eval"
msgstr ""

#: ../source/includes/apiargs/dbcommand-eval-param.rst:0
msgid "field array args"
msgstr ""

#: ../source/includes/apiargs/dbcommand-eval-param.rst:0
msgid "field boolean nolock"
msgstr ""

#: ../source/includes/extracts/admonition-js-prevalence-eval.rst:3
msgid "JavaScript in MongoDB"
msgstr ""

#: ../source/includes/extracts/admonition-js-prevalence-eval.rst:5
msgid "Although :dbcommand:`eval` uses JavaScript, most interactions with MongoDB do not use JavaScript but use an :ecosystem:`idiomatic driver </drivers>` in the language of the interacting application."
msgstr ""

#: ../source/reference/command/eval.txt:43
msgid "Behavior"
msgstr ""

#: ../source/includes/admonitions-eval.rst:4
msgid "You must run |object| against the :term:`primary` member of a replica set. If you attempt to run |object| on a :term:`secondary` member, MongoDB will return an error."
msgstr ""

#: ../source/includes/admonitions-eval.rst:9
msgid "Write Lock"
msgstr ""

#: ../source/includes/fact-eval-lock.rst:1
msgid "By default, |object| takes a global write lock while evaluating the JavaScript function. As a result, |object| blocks all other read and write operations to the database while the |object| operation runs."
msgstr ""

#: ../source/includes/fact-eval-lock.rst:5
msgid "To prevent the taking of the global write lock while evaluating the JavaScript code, use the |nolockobject| with ``nolock`` set to ``true``. ``nolock`` does not impact whether the operations within the JavaScript code take write locks."
msgstr ""

#: ../source/includes/admonitions-eval.rst:13
msgid "For long running |object| operation, consider using either the :command:`eval` command with ``nolock: true`` or using :doc:`other server side code execution options </core/server-side-javascript>`."
msgstr ""

#: ../source/includes/admonitions-eval.rst:18
msgid "Sharded Data"
msgstr ""

#: ../source/includes/admonitions-eval.rst:20
msgid "You can not use |object| with :term:`sharded <sharding>` collections. In general, you should avoid using |object| in :term:`sharded clusters <sharded cluster>`; nevertheless, it is possible to use |object| with non-sharded collections and databases stored in a :term:`sharded cluster`."
msgstr ""

#: ../source/includes/admonitions-eval.rst:27
msgid "Access Control"
msgstr ""

#: ../source/includes/extracts/access-eval-eval.rst:1
msgid "If authorization is enabled, you must have access to all actions on all resources in order to run :dbcommand:`eval`. Providing such access is not recommended, but if your organization requires a user to run :dbcommand:`eval`, create a role that grants :authaction:`anyAction` on :ref:`resource-anyresource`. Do not assign this role to any other user."
msgstr ""

#: ../source/reference/command/eval.txt:50
msgid "Example"
msgstr ""

#: ../source/reference/command/eval.txt:52
msgid "The following example uses :dbcommand:`eval` to perform an increment and calculate the average on the server:"
msgstr ""

#: ../source/reference/command/eval.txt:59
msgid "The ``db`` in the function refers to the current database."
msgstr ""

#: ../source/reference/command/eval.txt:61
msgid "The :binary:`~bin.mongo` shell provides a helper method :method:`db.eval()` [#eval-shell-helper]_, so you can express the above as follows:"
msgstr ""

#: ../source/reference/command/eval.txt:68
msgid "If you want to use the server's interpreter, you must run :dbcommand:`eval`. Otherwise, the :binary:`~bin.mongo` shell's JavaScript interpreter evaluates functions entered directly into the shell."
msgstr ""

#: ../source/reference/command/eval.txt:73
msgid "If an error occurs, :dbcommand:`eval` throws an exception. The following invalid function uses the variable ``x`` without declaring it as an argument:"
msgstr ""

#: ../source/reference/command/eval.txt:86
msgid "The statement will result in the following exception:"
msgstr ""

#: ../source/reference/command/eval.txt:96
msgid ":doc:`/core/server-side-javascript`"
msgstr ""

#: ../source/includes/fact-eval-helper-method.rst:1
msgid "The helper :method:`db.eval()` in the :binary:`~bin.mongo` shell wraps the :dbcommand:`eval` command. Therefore, the helper method shares the characteristics and behavior of the underlying command with *one exception*: :method:`db.eval()` method does not support the ``nolock`` option."
msgstr ""

