.. _vector-search-integrations:
.. _ai-integrations:

=======================
MongoDB AI Integrations
=======================

.. default-domain:: mongodb

.. facet::
   :name: genre
   :values: reference

.. meta::
   :description: Integrate with your favorite AI frameworks, tools, and platforms to build AI applications and agents.
   :keywords: RAG, OpenAI, LangChain, LlamaIndex, LangGraph, CrewAI, Amazon Bedrock, Vertex AI, Mastra, integrations, chatbot, vector database, vector search, code example, java, python, node.js, C#, MCP, TypeScript

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

MongoDB and partners have developed specific product integrations to 
help you leverage MongoDB in your AI-powered applications 
and AI agents.

This page highlights notable AI integrations 
that MongoDB and partners have developed. 
You can use with popular AI providers 
and |llm|\s through their standard connection methods and 
|api|\s. For a complete list of integrations and partner 
services, see :ref:`explore-ecosystem`.

.. _ai-frameworks:

Frameworks
----------

You can use the following open-source frameworks to store custom data 
in your MongoDB clusters and implement features such as |rag| with {+avs+}.

.. list-table::
   :widths: 15 55 30
   :header-rows: 1

   * - Framework
     - Description
     - Documentation

   * - `LangChain <https://python.langchain.com/docs/introduction/>`__
     - Framework for building AI applications by using "chains," LangChain-specific components
       that can be combined together for various use cases. The LangChain MongoDB integration
       provides several components for |rag|.
     - | :ref:`Integrate with LangChain <langchain>`
       | :ref:`Integrate with LangChain JS/TS <langchain-js>`

   * - `LangChainGo <https://pkg.go.dev/github.com/tmc/langchaingo>`__
     - Brings LangChain capabilities to the Go ecosystem.
     - :ref:`Integrate with LangChainGo <langchaingo>`

   * - `LangChain4j <https://docs.langchain4j.dev/>`__
     - Brings LangChain capabilities to Java.
     - :ref:`Integrate with LangChain4j <langchain4j>`

   * - `LlamaIndex <https://docs.llamaindex.ai/en/stable/>`__
     - Framework that provides several tools for connecting custom data sources to |llm|\s
       and building |rag| applications.
     - :ref:`Integrate with LlamaIndex <llamaindex>`

   * - `Semantic Kernel <https://learn.microsoft.com/en-us/semantic-kernel/overview/>`__
     - Framework from Microsoft that combines various AI services with your applications for use cases including |rag|.
     - | :ref:`Integrate with Semantic Kernel C# <semantic-kernel-csharp>`
       | :ref:`Integrate with Semantic Kernel Python <semantic-kernel>`

   * - `Haystack <https://haystack.deepset.ai/integrations/mongodb>`__
     - Python framework for building custom applications with |llm|\s, embedding models, vector search, and more for use cases such as |rag|.
     - :ref:`Integrate with Haystack <haystack>`

   * - `Spring AI <https://spring.io/projects/spring-ai>`__
     - Applies Spring design principles to AI applications for use cases including |rag|.
     - :ref:`Integrate with Spring AI <spring-ai>`

Agent Frameworks
----------------

You can use the following open-source frameworks to build AI agents
and multi-agent applications that use MongoDB to implement features 
such as agentic RAG and agent memory. 

.. list-table::
   :widths: 15 55 30
   :header-rows: 1

   * - Framework
     - Description
     - Documentation

   * - `LangGraph <https://www.langchain.com/langgraph/>`__
     - Specialized framework within the LangChain ecosystem for building AI agents and complex multi-agent workflows,
       with support for persistence, streaming, and memory.
     - | :ref:`Integrate with LangGraph <langgraph>`
       | :ref:`Integrate with LangGraph.js <langgraph-js>`

   * - `CrewAI <https://docs.crewai.com/en/introduction>`__
     - Python framework for building autonomous AI agents with specialized roles and multi-agent applications
       with "crews" that can complete complex tasks by delegating work amongst themselves.
     - :ref:`Integrate with CrewAI <crewai>`

Platforms
---------

You can also integrate with the following enterprise platforms
to build generative AI applications. These platforms provide
pre-trained models and other tools to help you build AI 
applications and agents in production.

.. list-table::
   :widths: 15 55 30
   :header-rows: 1

   * - Platform
     - Description
     - Documentation

   * - `{+aws-bedrock+} <https://aws.amazon.com/bedrock/>`__
     - Fully-managed platform for building generative AI applications.
       Integrate MongoDB as a `knowledge base <https://aws.amazon.com/bedrock/knowledge-bases/>`__
       to store custom data in |service-fullname|, implement |rag|, and deploy agents.
     - :ref:`Integrate with Amazon Bedrock <amazon-bedrock>`

   * - `Google Vertex AI <https://cloud.google.com/vertex-ai>`__
     - Platform from |gcp| for building and deploying AI applications and agents.
       Includes tools and pre-trained models from Google that you can use with |service-fullname|
       for |rag| and other use cases such as natural language querying.
     - :ref:`Integrate with Google Vertex AI <google-vertex-ai>`

Tools
-----

You can integrate with the following
AI tools.

.. list-table::
   :widths: 15 55 30
   :header-rows: 1

   * - Tool
     - Description
     - Documentation

   * - `MongoDB MCP Server <https://www.mongodb.com/docs/mcp-server/>`__
     - Model Context Protocol (MCP) is an open standard for how LLMs connect to and
       interact with external resources and services. Use our official MCP Server
       implementation to interact with your MongoDB data and clusters from your
       agentic AI tools.
     - `MongoDB MCP Server Docs <https://www.mongodb.com/docs/mcp-server/>`__

   * - `n8n <https://n8n.io/>`__
     - No-code workflow automation tool that enables you to build agentic workflows through
       interactive nodes in a visual canvas. Supports multiple MongoDB
       nodes, including nodes for RAG and memory for your AI agents.
     - :ref:`Integrate with n8n <n8n>`

.. _community-maintained:

Community-Maintained Integrations
---------------------------------

The community maintains several integrations with MongoDB. 
These are integrations that are contributed to on an open-source basis but are not managed
directly by MongoDB. The following table highlights some of these integrations.

.. list-table::
   :widths: 15 55 30
   :header-rows: 1

   * - Integration
     - Description
     - Documentation

   * - `Mastra <https://mastra.ai/>`__
     - Open-source TypeScript framework that provides components 
       for building AI agents, including workflows, RAG, and evals. Use MongoDB for
       vector storage and retrieval, RAG, and memory.
     - :ref:`Integrate with Mastra <mastra>`

For questions or issues with these integrations, refer to the documentation and resources 
provided by the respective framework maintainers.

API Resources 
-------------

.. collapsible:: 
   :heading: Explore API Resources
   :sub_heading: Refer to the following resources as you develop with our integrations.
   :expanded: false

   .. include:: /includes/avs/ai-integrations/api-resources.rst

.. toctree::
   :titlesonly:

   Frameworks </ai-integrations/frameworks>
   Agent Frameworks </ai-integrations/agent-frameworks>
   Platforms </ai-integrations/platforms>
   Tools </ai-integrations/tools>
   API Resources </ai-integrations/ai-api-resources>
   