==========================================
Update Configuration of One Monitored Host
==========================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. include:: /includes/fact-groups-projects-synonyms.rst

Update the configuration of a monitored MongoDB process.

.. include:: /includes/api/base-api-uri.rst

Resource
--------

.. code-block:: http

   PATCH /groups/{PROJECT-ID}/hosts/{HOST-ID}

Request Path Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :widths: 20 20 60
   :header-rows: 1
   :stub-columns: 1

   * - Parameter
     - Type
     - Description

   * - PROJECT-ID
     - string
     - *(Required.)* Unique identifier of the project that owns this MongoDB process.

   * - HOST-ID
     - string
     - *(Required.)* Unique identifier of the host for the MongoDB process.

Request Query Parameters
~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/api/no-query-single-parameters.rst

Request Body Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :widths: 20 20 60
   :header-rows: 1
   :stub-columns: 1

   * - Name
     - Type
     - Description

   * - alertsEnabled
     - boolean
     - Set to ``true`` if alerts should be enabled for this MongoDB
       process.

   * - authMechanismName
     - string
     - Specify which authentication mechanism should be used to connect
       to this MongoDB process. Possible values are:

       .. include:: /includes/possibleValues-api-authMechanismName.rst

   * - logsEnabled
     - boolean
     - Set to ``true`` if |mms| should collect logs for this MongoDB
       process.

   * - muninPort
     - number
     - Set the port number `Munin <http://munin-monitoring.org/>`_ uses
       to collect hardware statistics for this MongoDB process.

       .. note::
          Use of Munin for hardware monitoring is deprecated. For
          more information on Munin and |mms|, see
          :doc:`/tutorial/configure-monitoring-munin-node`.

   * - password
     - string
     - Password for connecting to this MongoDB process. If the process's
       **authMechanismName** is ``SCRAM-SHA-1``, then you must include
       this field when creating the process or updating its credentials.
       However, it will never be exposed when a host entity is returned.

   * - profilerEnabled
     - boolean
     - Set to ``true`` if |mms| collects profile information from this
       MongoDB process.

   * - sslEnabled
     - boolean
     - Set to ``true`` if |tls-ssl| should be enabled for this MongoDB
       process. *(Conditional: Set to* ``true`` *if the*
       **authMechanismName** *is* ``MONGODB_X509`` *.)*

   * - username
     - string
     - *(Conditional: Specify if* **authMechanismName** *is*
       ``MONGODB_CR`` *or* ``SCRAM_SHA_1`` *.)* Specify username for
       connecting to this MongoDB process.

If **authMechanismName** is ``NONE`` then any existing values for
**username** and **password** are cleared. If
**authMechanismName** is ``SCRAM-SHA-1``, then you must provide both
the **username** and **password**.

Response
--------

.. include:: /includes/extracts/api-hosts-response-elements.rst

Example Request
---------------

.. only:: cloud

   .. cssclass:: copyable-code
   .. code-block:: sh
      :emphasize-lines: 6-11

      curl --user "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest \
       --header "Accept: application/json" \
       --header "Content-Type: application/json" \
       --include \
       --request PATCH "https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/hosts/{HOST-ID}?pretty=true" \
       --data '
         {
           "sslEnabled": true,
           "username": "mongodb",
           "password": "M0ng0DB!:)"
         }'

.. only:: onprem

   .. cssclass:: copyable-code
   .. code-block:: sh
      :emphasize-lines: 6-11

      curl --user "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest \
       --header "Accept: application/json" \
       --header "Content-Type: application/json" \
       --include \
       --request PATCH "https://{OPSMANAGER-HOST}:{PORT}/api/public/v1.0/groups/{PROJECT-ID}/hosts/{HOST-ID}?pretty=true" \
       --data '
         {
           "sslEnabled": true,
           "username": "mongodb",
           "password": "M0ng0DB!:)"
         }'

Example Response
----------------

Response Header
~~~~~~~~~~~~~~~

.. include:: /includes/api/api-headers/401.rst

.. include:: /includes/api/api-headers/200.rst

Response Body
~~~~~~~~~~~~~

.. code-block:: json
   :linenos:
   :emphasize-lines: 26

   {
     "alertsEnabled" : true,
     "authMechanismName" : "SCRAM-SHA-1",
     "clusterId" : "{CLUSTER-ID}",
     "created" : "2014-04-22T19:56:50Z",
     "deactivated" : false,
     "groupId" : "{PROJECT-ID}",
     "hasStartupWarnings" : false,
     "hidden" : false,
     "hostEnabled" : true,
     "hostname" : "server1.example.com",
     "id" : "{HOST-ID}",
     "ipAddress": "10.1.0.10",
     "journalingEnabled" : false,
     "lastDataSizeBytes" : 470208719,
     "lastIndexSizeBytes" : 110420592,
     "lastPing" : "2016-08-15T17:57:12Z",
     "links" : [  ],
     "logsEnabled" : false,
     "lowUlimit" : false,
     "muninEnabled" : false,
     "port" : 26000,
     "profilerEnabled" : false,
     "replicaSetName": "rs1",
     "replicaStateName" : "SECONDARY",
     "sslEnabled" : true,
     "typeName": "REPLICA_SECONDARY",
     "uptimeMsec": 489182394,
     "username" : "mongodb",
     "version" : "4.0.0"
   }
