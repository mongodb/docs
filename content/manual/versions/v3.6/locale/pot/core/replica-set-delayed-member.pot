# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/replica-set-delayed-member.txt:8
msgid "Delayed Replica Set Members"
msgstr ""

#: ../source/core/replica-set-delayed-member.txt:18
msgid "Delayed members contain copies of a :term:`replica set's <replica set>` data set. However, a delayed member's data set reflects an earlier, or delayed, state of the set. For example, if the current time is 09:52 and a member has a delay of an hour, the delayed member has no operation more recent than 08:52."
msgstr ""

#: ../source/core/replica-set-delayed-member.txt:24
msgid "Because delayed members are a \"rolling backup\" or a running \"historical\" snapshot of the data set, they may help you recover from various kinds of human error. For example, a delayed member can make it possible to recover from unsuccessful application upgrades and operator errors including dropped databases and collections."
msgstr ""

#: ../source/core/replica-set-delayed-member.txt:31
msgid "Considerations"
msgstr ""

#: ../source/core/replica-set-delayed-member.txt:34
msgid "Requirements"
msgstr ""

#: ../source/core/replica-set-delayed-member.txt:36
msgid "Delayed members:"
msgstr ""

#: ../source/core/replica-set-delayed-member.txt:38
msgid "**Must be** :ref:`priority 0 <replica-set-secondary-only-members>` members. Set the priority to 0 to prevent a delayed member from becoming primary."
msgstr ""

#: ../source/core/replica-set-delayed-member.txt:42
msgid "**Should be** :ref:`hidden <replica-set-hidden-members>` members. Always prevent applications from seeing and querying delayed members."
msgstr ""

#: ../source/core/replica-set-delayed-member.txt:46
msgid "*do* vote in :term:`elections <election>` for primary, if :rsconf:`members[n].votes` is set to 1."
msgstr ""

#: ../source/core/replica-set-delayed-member.txt:49
msgid "Behavior"
msgstr ""

#: ../source/core/replica-set-delayed-member.txt:51
msgid "Delayed members copy and apply operations from the source :term:`oplog` on a delay. When choosing the amount of delay, consider that the amount of delay:"
msgstr ""

#: ../source/core/replica-set-delayed-member.txt:54
msgid "must be equal to or greater than your expected maintenance window durations."
msgstr ""

#: ../source/core/replica-set-delayed-member.txt:56
msgid "must be *smaller* than the capacity of the oplog. For more information on oplog size, see :ref:`replica-set-oplog-sizing`."
msgstr ""

#: ../source/core/replica-set-delayed-member.txt:60
msgid "Write Concern"
msgstr ""

#: ../source/core/replica-set-delayed-member.txt:62
msgid "Delayed replica set members can acknowledge write operations issued with :writeconcern:`w: \\<number\\> <\\<number\\>>`. For write operations isued with :writeconcern:`w : \"majority\" <\"majority\">`, however, delayed members must also be voting members (i.e. :rsconf:`members[n].votes` greater than ``0``) to acknowledge the ``\"majority\"`` write operation. Non-voting replica set members (i.e. :rsconf:`members[n].votes` is ``0``) cannot contribute to acknowledging write operations with ``majority`` write concern."
msgstr ""

#: ../source/core/replica-set-delayed-member.txt:71
msgid "Delayed secondaries can return write acknowledgment no earlier than the configured :rsconf:`~members[n].slaveDelay`."
msgstr ""

#: ../source/core/replica-set-delayed-member.txt:75
msgid "Sharding"
msgstr ""

#: ../source/core/replica-set-delayed-member.txt:77
msgid "In sharded clusters, delayed members have limited utility when the :term:`balancer` is enabled. Because delayed members replicate chunk migrations with a delay, the state of delayed members in a sharded cluster are not useful for recovering to a previous state of the sharded cluster if any migrations occur during the delay window."
msgstr ""

#: ../source/core/replica-set-delayed-member.txt:84
msgid "Example"
msgstr ""

#: ../source/core/replica-set-delayed-member.txt:86
msgid "In the following 5-member replica set, the primary and all secondaries have copies of the data set. One member applies operations with a delay of 3600 seconds (one hour). This delayed member is also *hidden* and is a *priority 0 member*."
msgstr ""

#: ../source/core/replica-set-delayed-member.txt:94
msgid "Configuration"
msgstr ""

#: ../source/core/replica-set-delayed-member.txt:96
msgid "A delayed member has its :rsconf:`members[n].priority` equal to ``0``, :rsconf:`members[n].hidden` equal to ``true``, and its :rsconf:`members[n].slaveDelay` equal to the number of seconds of delay:"
msgstr ""

#: ../source/core/replica-set-delayed-member.txt:112
msgid "To configure a delayed member, see :doc:`/tutorial/configure-a-delayed-replica-set-member`."
msgstr ""

