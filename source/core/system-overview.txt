===================
|onprem| Components
===================

.. default-domain:: mongodb

An |onprem| installation consists of the :ref:`mms-application-package` and
optional :ref:`backup-daemon`. Each package also requires a
:ref:`backing MongoDB replica set <backing-database>` to hold operational data.

Network Diagram
---------------

.. include:: /images/opsmanager-network-diagram-automation.rst

.. _application:
.. _mms-application-package:

|application|
-------------

The front-end |application| contains the UI the end user interacts with, as
well as HTTPS services used by the Monitoring Agent and Backup Agent
to transmit data to and from |mms|. The components are stateless and start
automatically when the |application| starts.
Multiple instances of the |application| can run as
long as each instance has the same configuration. Users and agents can
interact with any instance.

For Monitoring, you need to install **only** the application
package. The application package consists of the following components:

- :ref:`mms-http-service`

- :ref:`backup-http-service`

.. _mms-http-service:

|http-service|
~~~~~~~~~~~~~~

The HTTP server runs on port ``8080`` by default.  This component
contains the web interface for managing |mms| users, monitoring of
MongoDB servers, and managing those serverâ€™s backups. Users can sign
up, create new accounts and groups, as well as join an existing
group.

.. todo:: Is this next sentence, below, redundant? The only endpoint in
   the |http-service| is 8080.

   The |mms| Web Server also contains endpoints used by the Monitoring Agent
   to report back information on monitored MongoDB instances.

.. _backup-http-service:

Backup HTTP Service
~~~~~~~~~~~~~~~~~~~

The HTTP server runs on port ``8081`` by default. The Backup HTTP Service
contains a set of web services used by the Backup Agent. The agent
retrieves its configuration from this service. The agent also sends
back initial sync and oplog data through this interface. There is no
user interaction with this service. The Backup HTTP service runs on
port ``8081`` by default.

The Backup HTTP Service exposes an endpoint that reports on the state of the
service and the underlying database to support monitoring of the Backup
service. This status also checks the connections from the service to the
:ref:`mms-application-database` and the :ref:`mms-backup-blockstore-database`. See
:ref:`backup-http-service-endpoint`.

.. _backup-daemon:

.. _head-db:

Backup Daemon
-------------

The Backup Daemon manages both the local copies of the backed-up databases
and each backup's snapshots. The daemon does scheduled work based on data
coming in to the Backup HTTP Service from the Backup Agents. No client
applications talk directly to the daemon. Its state and job queues come from
the :ref:`mms-application-database`.

The Backup Daemon's local copy of a backed-up deployment is called the
*head database*. The daemon stores all its head databases in its
:setting:`rootDirectory` path. To create each head database, the
daemon's server acts as though it were an "invisible" :term:`secondary`
for each :term:`replica set` designated for backup.

If you run multiple Backup Daemons, |onprem| selects the Backup Daemon to
use when a user enables backup for a deployment. The local copy of the
deployment resides with that daemon's server.

The daemon will take scheduled snapshots and store the snapshots in the
:ref:`Backup Blockstore database <mms-backup-blockstore-database>`. It will
also act on restore requests by retrieving data from the Blockstore and
delivering it to the requested destination.

:ref:`Multiple Backup Daemons <multiple-backup-daemons>` can increase your
storage by scaling horizontally and can provide **manual** failover.

The Backup Daemon exposes a health-check endpoint. See
:ref:`backup-daemon-endpoint`.

.. _backing-database:

Backing MongoDB Replica Sets
----------------------------

|mms| uses dedicated MongoDB databases to store the |application|'s
monitoring data and the Backup Daemon's snapshots. To ensure redundancy
and high availability, the backing databases
run as :term:`replica sets <replica set>`. The
backing replica sets host **only** |mms| data. You must :doc:`set up the
backing replica sets </tutorial/prepare-backing-mongodb-instances>` before
installing |onprem|.

.. _mms-application-database:

|application| Database
~~~~~~~~~~~~~~~~~~~~~~

This database contains application metadata used by the 
:ref:`mms-application-package`. The database stores:

- Monitoring data collected from Monitoring Agents.

- Metadata for |mms| users, groups, hosts, monitoring data, and backup
  state.

For topology and specifications, see
:ref:`mms-application-database-specifications`.

.. _mms-backup-blockstore-database:

Backup Blockstore Database
~~~~~~~~~~~~~~~~~~~~~~~~~~

This database contains all snapshots of databases backed up and oplogs
retained for point in time restores. The Backup Blockstore database requires
disk space proportional to the backed-up databases.

Configure the Blockstore as a replica set to provide durability and automatic
failover to the backup and restore components. The replica set must have at
least three members that hold data.

You **cannot** back up the Blockstore database with |onprem| Backup. To
back up |onprem| Backup, see :doc:`/tutorial/backup-the-backup-service`.

For additional specifications, see
:ref:`mms-blockstore-database-specifications`.
