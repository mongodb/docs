====
$mod
====

.. default-domain:: mongodb

.. operator:: $mod

   *Syntax*: ``{ field: { $mod: [ divisor, remainder ]} }``
   
   :operator:`$mod` selects the documents where the ``field`` value divided
   by the ``divisor`` has the specified ``remainder``.
   
   Consider the following example:
   
   .. code-block:: javascript
   
      db.inventory.find( { qty: { $mod: [ 4, 0 ] } } )
   
   This query will select all documents in the ``inventory`` collection
   where the ``qty`` field value modulo ``4`` equals ``0``, such as
   documents with ``qty`` value equal to ``0`` or ``12``.
   
   In some cases, you can query using the :operator:`$mod` operator
   rather than the more expensive :operator:`$where` operator. Consider
   the following example using the :operator:`$mod` operator:
   
   .. code-block:: javascript
   
      db.inventory.find( { qty: { $mod: [ 4, 0 ] } } )
   
   The above query is less expensive than the following query which
   uses the :operator:`$where` operator:
     
   .. code-block:: javascript
   
      db.inventory.find( { $where: "this.qty % 4 == 0" } )
      
   .. seealso::
   
      :method:`find() <db.collection.find()>`, :method:`update()
      <db.collection.update()>`, :operator:`$set`.
