# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/getting-started.txt:3
# c4ac2af72126418784ce156fabfeace3
msgid "Getting Started with MongoDB"
msgstr ""

#: ../source/tutorial/getting-started.txt:7
# 20484f0ada7e415abcb8278106f96f40
msgid "This tutorial provides an introduction to basic database operations using the :program:`mongo` shell. :program:`mongo` is a part of the standard MongoDB distribution and provides a full JavaScript environment with complete access to the JavaScript language and all standard functions as well as a full database interface for MongoDB. See the :api:`mongo JavaScript API <js>` documentation and the :program:`mongo` shell :doc:`JavaScript Method Reference </reference/method>`."
msgstr ""

#: ../source/tutorial/getting-started.txt:15
# d48b0e7fa6e846509202c378bbaa2649
msgid "The tutorial assumes that you're running MongoDB on a Linux or OS X operating system and that you have a running database server; MongoDB does support Windows and provides a Windows distribution with identical operation. For instructions on installing MongoDB and starting the database server, see the appropriate :doc:`installation </installation>` document."
msgstr ""

#: ../source/tutorial/getting-started.txt:23
# 01d2e178d68c4614896796d473f05b0a
msgid "Connect to a Database"
msgstr ""

#: ../source/tutorial/getting-started.txt:25
# 58593daa98d24f0691935230c2b72c87
msgid "In this section, you connect to the database server, which runs as :program:`mongod`, and begin using the :program:`mongo` shell to select a logical database within the database instance and access the help text in the :program:`mongo` shell."
msgstr ""

#: ../source/tutorial/getting-started.txt:31
# 331e78a39bed42cf9c585300e56a76f4
msgid "Connect to a :program:`mongod`"
msgstr ""

#: ../source/tutorial/getting-started.txt:33
# a7aab24d738b40babaa8affa9f249705
msgid "From a system prompt, start :program:`mongo` by issuing the :program:`mongo` command, as follows:"
msgstr ""

#: ../source/tutorial/getting-started.txt:40
# 1cf86212b4754bd2ba6ee64ed0b0e0be
msgid "By default, :program:`mongo` looks for a database server listening on port ``27017`` on the ``localhost`` interface. To connect to a server on a different port or interface, use the :option:`--port <mongo --port>` and :option:`--host <mongo --host>` options."
msgstr ""

#: ../source/tutorial/getting-started.txt:47
# 73d89bc4eb84459590bbb7be47657ca8
msgid "Select a Database"
msgstr ""

#: ../source/tutorial/getting-started.txt:49
# 03ed420a219143ceb1743ccc7ab02ab1
msgid "After starting the :program:`mongo` shell, your session will use the ``test`` database by default. At any time, issue the following operation at the :program:`mongo` shell to report the name of the current database:"
msgstr ""

#: ../source/tutorial/getting-started.txt:57
# bc4e1564c59548709fcae1e202fe00be
msgid "From the :program:`mongo` shell, display the list of databases, with the following operation:"
msgstr ""

#: ../source/tutorial/getting-started.txt:64
# 6de234aeeae54b76b620943f39a42f2b
msgid "Switch to a new database named ``mydb``, with the following operation:"
msgstr ""

#: ../source/tutorial/getting-started.txt:71
# 339a6960543147ed901fe93cfa3f208a
msgid "Confirm that your session has the ``mydb`` database as context, by checking the value of the ``db`` object, which returns the name of the current database, as follows:"
msgstr ""

#: ../source/tutorial/getting-started.txt:79
# e1ca03dd8a494f9b95e7e9b6723284a9
msgid "At this point, if you issue the ``show dbs`` operation again, it will not include the ``mydb`` database. MongoDB will not permanently create a database until you insert data into that database. The :ref:`getting-started-create-documents` section describes the process for inserting data."
msgstr ""

#: ../source/tutorial/getting-started.txt:85
# 724c9f01b30643c48547652e7fe73f03
msgid "``show databases`` also returns a list of databases."
msgstr ""

#: ../source/tutorial/getting-started.txt:89
# 3f58fd4124b94515862d9de173a6eb1f
msgid "Display ``mongo`` Help"
msgstr ""

#: ../source/tutorial/getting-started.txt:91
# 98c651598b6646c198d4f4ae0a1702d6
msgid "At any point, you can access help for the :program:`mongo` shell using the following operation:"
msgstr ""

#: ../source/tutorial/getting-started.txt:98
# cd88591653b64e87a8fbdb09ac27e516
msgid "Furthermore, you can append the ``.help()`` method to some JavaScript methods, any cursor object, as well as the ``db`` and ``db.collection`` objects to return additional help information."
msgstr ""

#: ../source/tutorial/getting-started.txt:105
# 662e540a438a4ae6988f993fcab47270
msgid "Create a Collection and Insert Documents"
msgstr ""

#: ../source/tutorial/getting-started.txt:107
# be4420956995424bb4629292b63cce1f
msgid "In this section, you insert documents into a new :term:`collection` named ``testData`` within the new :term:`database` named ``mydb``."
msgstr ""

#: ../source/tutorial/getting-started.txt:111
# 8d1cb21795614079a48e36a64742943b
msgid "MongoDB will create a collection implicitly upon its first use. You do not need to create a collection before inserting data. Furthermore, because MongoDB uses :ref:`dynamic schemas <faq-schema-free>`, you also need not specify the structure of your documents before inserting them into the collection."
msgstr ""

#: ../source/tutorial/getting-started.txt:117
# a18f163239e6485daccc1c8d4fdff0a0
msgid "From the :program:`mongo` shell, confirm you are in the ``mydb`` database by issuing the following:"
msgstr ""

#: ../source/tutorial/getting-started.txt:124
# 63de186199924dd6949c4308e573e7bf
msgid "If :program:`mongo` does not return ``mydb`` for the previous operation, set the context to the ``mydb`` database, with the following operation:"
msgstr ""

#: ../source/tutorial/getting-started.txt:132
# 1977a7af918e4998820665ecb7198cc5
msgid "Create two documents named ``j`` and ``k`` by using the following sequence of JavaScript operations:"
msgstr ""

#: ../source/tutorial/getting-started.txt:140
# ca0b114617f141d0a45ae492a39e3f9d
msgid "Insert the ``j`` and ``k`` documents into the ``testData`` collection with the following sequence of operations:"
msgstr ""

#: ../source/tutorial/getting-started.txt:148
# dcdb72660a6d4230909eaa22caee13f8
msgid "When you insert the first document, the :program:`mongod` will create both the ``mydb`` database and the ``testData`` collection."
msgstr ""

#: ../source/tutorial/getting-started.txt:151
# 9fc8ea90375c4a91af6df93c749eb7c4
msgid "Confirm that the ``testData`` collection exists. Issue the following operation:"
msgstr ""

#: ../source/tutorial/getting-started.txt:158
# d89749e3a1b548d9922a1485888d5ae5
msgid "The :program:`mongo` shell will return the list of the collections in the current (i.e. ``mydb``) database. At this point, the only collection with user data is ``testData``."
msgstr ""

#: ../source/tutorial/getting-started.txt:162
# 5ae4a042f0fd43c48235e74890d377d9
msgid "Confirm that the documents exist in the ``testData`` collection by issuing a query on the collection using the :method:`~db.collection.find()` method:"
msgstr ""

#: ../source/tutorial/getting-started.txt:170
# 5f1b555c4e32459b83d125c6bca73a79
msgid "This operation returns the following results. The :doc:`ObjectId </reference/object-id>` values will be unique:"
msgstr ""

#: ../source/tutorial/getting-started.txt:178
# a731fba4399941c3a1ef10de74fee24b
msgid "All MongoDB documents must have an ``_id`` field with a unique value.  These operations do not explicitly specify a value for the ``_id`` field, so :program:`mongo` creates a unique :doc:`ObjectId </reference/object-id>` value for the field before inserting it into the collection."
msgstr ""

#: ../source/tutorial/getting-started.txt:185
# 6e3ed0a64bbc49aeacb8917f02feb82b
msgid "Insert Documents using a For Loop or a JavaScript Function"
msgstr ""

#: ../source/tutorial/getting-started.txt:187
# 92dd2df73ea84c8ea830c2ced639da22
msgid "To perform the remaining procedures in this tutorial, first add more documents to your database using one or both of the procedures described in :doc:`/tutorial/generate-test-data`."
msgstr ""

#: ../source/tutorial/getting-started.txt:192
# 78b2be1200384c0f8737125e163eb966
msgid "Working with the Cursor"
msgstr ""

#: ../source/tutorial/getting-started.txt:194
# d5899d91edd44d798ba0a8829bca1ed0
msgid "When you query a :term:`collection`, MongoDB returns a \"cursor\" object that contains the results of the query. The :program:`mongo` shell then iterates over the cursor to display the results. Rather than returning all results at once, the shell iterates over the cursor 20 times to display the first 20 results and then waits for a request to iterate over the remaining results. In the shell, enter ``it`` to iterate over the next set of results."
msgstr ""

#: ../source/tutorial/getting-started.txt:202
# ce52bda1fa794298935e40f9e907f646
msgid "The procedures in this section show other ways to work with a cursor. For comprehensive documentation on cursors, see :ref:`crud-read-cursor`."
msgstr ""

#: ../source/tutorial/getting-started.txt:207
# 181ca0815531443c9f36e79e44ba4201
msgid "Iterate over the Cursor with a Loop"
msgstr ""

#: ../source/tutorial/getting-started.txt:209
# 51a45b3ee56145a4b595cc862428f8ab
msgid "Before using this procedure, add documents to a collection using one of the procedures in :doc:`/tutorial/generate-test-data`. You can name your database and collections anything you choose, but this procedure will assume the database named ``test`` and a collection named ``testData``."
msgstr ""

#: ../source/tutorial/getting-started.txt:215
# 1377dead3161489b857bae7d7f48d5dc
msgid "In the MongoDB JavaScript shell, query the ``testData`` collection and assign the resulting cursor object to the ``c`` variable:"
msgstr ""

#: ../source/tutorial/getting-started.txt:222
# 8978502ef4a9405e941093b6efc06b13
msgid "Print the full result set by using a ``while`` loop to iterate over the ``c`` variable:"
msgstr ""

#: ../source/tutorial/getting-started.txt:229
# 874a98bbb38c4ef4a88b07fe3d2d0ab0
msgid "The ``hasNext()`` function returns true if the cursor has documents. The ``next()`` method returns the next document. The ``printjson()`` method renders the document in a JSON-like format."
msgstr ""

#: ../source/tutorial/getting-started.txt:233
# d6818e27754541989df663d8e296829a
msgid "The operation displays all documents:"
msgstr ""

#: ../source/tutorial/getting-started.txt:243
# a6183348ffed44518670816f45cb2dc3
msgid "Use Array Operations with the Cursor"
msgstr ""

#: ../source/tutorial/getting-started.txt:245
# 24232a306adf40c2a5a47cf4dd44f912
msgid "The following procedure lets you manipulate a cursor object as if it were an array:"
msgstr ""

#: ../source/tutorial/getting-started.txt:248
# 1c529fb3d8af4bc8b1761defd9583557
msgid "In the :program:`mongo` shell, query the ``testData`` collection and assign the resulting cursor object to the ``c`` variable:"
msgstr ""

#: ../source/tutorial/getting-started.txt:255
# f15c09af7d96496b935bf9ef439c4bcc
msgid "To find the document at the array index ``4``, use the following operation:"
msgstr ""

#: ../source/tutorial/getting-started.txt:262
# 34bf794a641f4783ac064188cc00ed20
msgid "MongoDB returns the following:"
msgstr ""

#: ../source/tutorial/getting-started.txt:268
# d6139946d67e4affb40711b919fe9deb
msgid "When you access documents in a cursor using the array index notation, :program:`mongo` first calls the ``cursor.toArray()`` method and loads into RAM all documents returned by the cursor. The index is then applied to the resulting array. This operation iterates the cursor completely and exhausts the cursor."
msgstr ""

#: ../source/tutorial/getting-started.txt:274
# 04474d16413d46d6a96ba86b5020b6de
msgid "For very large result sets, :program:`mongo` may run out of available memory."
msgstr ""

#: ../source/tutorial/getting-started.txt:277
# 8d1b1e283ee24e40ad0ce410d04d5dac
msgid "For more information on the cursor, see :ref:`crud-read-cursor`."
msgstr ""

#: ../source/tutorial/getting-started.txt:280
# aff55bf45eca4189aee50f282665bcd3
msgid "Query for Specific Documents"
msgstr ""

#: ../source/tutorial/getting-started.txt:282
# b206284db49b415caabdb17922666041
msgid "MongoDB has a rich query system that allows you to select and filter the documents in a collection along specific fields and values. See :ref:`read-operations-query-document` and :doc:`/core/read-operations` for a full account of queries in MongoDB."
msgstr ""

#: ../source/tutorial/getting-started.txt:287
# 429e0dcf10a2434bb732ed4254001783
msgid "In this procedure, you query for specific documents in the ``testData`` :term:`collection` by passing a \"query document\" as a parameter to the :method:`~db.collection.find()` method. A query document specifies the criteria the query must match to return a document."
msgstr ""

#: ../source/tutorial/getting-started.txt:292
# ef8bc372cd3749d8ae222024931a5e03
msgid "In the :program:`mongo` shell, query for all documents where the ``x`` field has a value of ``18`` by passing the ``{ x : 18 }`` query document as a parameter to the :method:`~db.collection.find()` method:"
msgstr ""

#: ../source/tutorial/getting-started.txt:300
# 1835e22e586f4000bce570f1bc32849d
msgid "MongoDB returns one document that fits this criteria:"
msgstr ""

#: ../source/tutorial/getting-started.txt:307
# 0bdb6c4025ff4861a78d329815a70c5d
msgid "Return a Single Document from a Collection"
msgstr ""

#: ../source/tutorial/getting-started.txt:309
# 8af4cd4282654e9fa94a851d5d9c946b
msgid "With the :method:`~db.collection.findOne()` method you can return a single *document* from a MongoDB collection. The :method:`~db.collection.findOne()` method takes the same parameters as :method:`~db.collection.find()`, but returns a document rather than a cursor."
msgstr ""

#: ../source/tutorial/getting-started.txt:314
# adcc2303e13d4415b5bb58aa58fcd6d8
msgid "To retrieve one document from the ``testData`` collection, issue the following command:"
msgstr ""

#: ../source/tutorial/getting-started.txt:321
# d69cb62460b54c848c26ab54750ff704
msgid "For more information on querying for documents, see the :ref:`read-operations-query-document` and :doc:`/core/read-operations` documentation."
msgstr ""

#: ../source/tutorial/getting-started.txt:325
# 032e7d0196c546d29954f0b85b504d42
msgid "Limit the Number of Documents in the Result Set"
msgstr ""

#: ../source/tutorial/getting-started.txt:327
# dd400f2bba2f43418a5967299ac89ff7
msgid "To increase performance, you can constrain the size of the result by limiting the amount of data your application must receive over the network."
msgstr ""

#: ../source/tutorial/getting-started.txt:331
# c070268e41774cf3ae69530bee252412
msgid "To specify the maximum number of documents in the result set, call the :method:`~cursor.limit()` method on a cursor, as in the following command:"
msgstr ""

#: ../source/tutorial/getting-started.txt:339
# a76a1ad556a24824b41c33f047987e17
msgid "MongoDB will return the following result, with different :doc:`ObjectId </reference/object-id>` values:"
msgstr ""

#: ../source/tutorial/getting-started.txt:351
# 284edd8a57114081ae491c9557ee89e3
msgid "Next Steps with MongoDB"
msgstr ""

#: ../source/tutorial/getting-started.txt:353
# 107e2417865042eabe81ae4433b5f6ea
msgid "For more information on manipulating the documents in a database as you continue to learn MongoDB, consider the following resources:"
msgstr ""

#: ../source/tutorial/getting-started.txt:356
# ba19b2fb469749ad993130fe85b2cfcb
msgid ":doc:`/crud`"
msgstr ""

#: ../source/tutorial/getting-started.txt:357
# d02d60f180ae4dc18ecc89ae5f1c7486
msgid ":doc:`/reference/sql-comparison`"
msgstr ""

#: ../source/tutorial/getting-started.txt:358
# 18ca47e2479c4124b4c98af2af55eee4
msgid ":ecosystem:`MongoDB Drivers </drivers>`"
msgstr ""

#: ../source/includes/extracts/additional-resources-getting-started.rst:4
# a8f3e123e2da43dcbca5bd05ee9f95f5
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-getting-started.rst:6
# 15fdc2579fa445599bf400fd8fa0cafa
msgid "`MongoDB University: Free, Online Courses for Developers and DBAs <https://education.mongodb.com/>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-getting-started.rst:7
# 9098e82ee554411c860023ee91bdc1e4
msgid "`MongoDB Architecture Guide <https://www.mongodb.com/lp/whitepaper/architecture-guide>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-getting-started.rst:8
# dc93ee6bc55e47f4b0a1f32683915568
msgid "`MongoDB Administration 101 Presentation <http://www.mongodb.com/presentations/webinar-mongodb-administration-101>`_"
msgstr ""

