==============
db.aggregate()
==============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. versionadded:: 3.6

.. method:: db.aggregate()

   Runs a specified admin/diagnostic pipeline which does not require an 
   underlying collection. For aggregations on collection data, see
   :method:`db.collection.aggregate()`.

   The :method:`db.aggregate()` method has the following syntax:

   .. code-block:: javascript

      db.aggregate( [ <pipeline> ], { <options> } )

   - The ``pipeline`` parameter is an array of stages to execute. It
     must start with a compatible stage that does not require an
     underlying collection, such as :pipeline:`$currentOp` or 
     :pipeline:`$listLocalSessions`.

   - The ``options`` document can contain the following fields and values:

     .. include:: /includes/apiargs/method-db.collection.aggregate-options.rst

Example
-------

.. _admin-pipeline-currentOp:

Pipeline with ``$currentOp``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following example runs a pipeline with two stages. The first stage 
runs the :pipeline:`$currentOp` operation and the second stage filters the
results of that operation. 

.. code-block:: javascript

   use admin
   db.aggregate( [ { 
      $currentOp : { allUsers: true, idleConnections: true } }, { 
      $match : { shard: "shard01" } 
      }
   ] )
