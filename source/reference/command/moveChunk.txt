=========
moveChunk
=========

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. dbcommand:: moveChunk

   Internal administrative command. Moves :term:`chunks <chunk>` between
   :term:`shards <shard>`. Issue the :dbcommand:`moveChunk` command via
   a :binary:`~bin.mongos` instance while using the :term:`admin database`.
   Use the following forms:

   .. code-block:: javascript

      db.runCommand( { moveChunk : <namespace> ,
                       find : <query> ,
                       to : <string>,
                       _secondaryThrottle : <boolean>,
                       writeConcern: <document>,
                       _waitForDelete : <boolean> } )

   Alternately:

   .. code-block:: javascript

      db.runCommand( { moveChunk : <namespace> ,
                       bounds : <array> ,
                       to : <string>,
                       _secondaryThrottle : <boolean>,
                       writeConcern: <document>,
                       _waitForDelete : <boolean> } )

   The :dbcommand:`moveChunk` command has the following fields:

   .. include:: /includes/apiargs/command-moveChunk-field.rst

   The value of ``bounds`` takes the form:

   .. code-block:: javascript

      [ { hashedField : <minValue> } ,
        { hashedField : <maxValue> } ]

   The :ref:`chunk migration <sharding-chunk-migration>` section
   describes how chunks move between shards on MongoDB.

.. seealso:: :dbcommand:`split`, :method:`sh.moveChunk()`,
   :method:`sh.splitAt()`, and :method:`sh.splitFind()`.

Considerations
--------------

Only use the :dbcommand:`moveChunk` in special circumstances
such as preparing your :term:`sharded cluster` for an initial
ingestion of data, or a large bulk import operation.  In most cases
allow the balancer to create and balance chunks in sharded clusters.
See :doc:`/tutorial/create-chunks-in-sharded-cluster` for more information.

Behavior
--------

Indexes
~~~~~~~

.. versionchanged:: 3.0.0
   In previous versions, :dbcommand:`moveChunk` would build indexes as
   part of the migrations.

:dbcommand:`moveChunk` requires that all indexes exist on the
target (i.e. ``to`` ) shard before migration and returns an error if a
required index does not exist.

Meta Data Error
~~~~~~~~~~~~~~~

:dbcommand:`moveChunk` returns the following error message if another
metadata operation is in progress on the :data:`~config.chunks` collection:

.. code-block:: none

   errmsg: "The collection's metadata lock is already taken."

If another process, such as a balancer process, changes meta data
while :dbcommand:`moveChunk` is running, you may see this
error. You may retry the :dbcommand:`moveChunk` operation without
side effects.


.. admin-only
