======================================
Create One S3 Blockstore Configuration
======================================

.. default-domain:: mongodb

.. include:: /includes/styles/corrections.rst

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Configures one new s3 blockstore.

.. include:: /includes/api/base-admin-backup-api-uri.rst

Resource
--------

.. code-block:: http

   POST /snapshot/s3Configs

Request Path Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/api/no-path-parameters.rst

Request Query Parameters
~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/api/no-query-single-parameters.rst

Request Body Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/api/list-tables/admin-s3-blockstore-create-request-documents.rst

Response
--------

.. include:: /includes/api/list-tables/admin-s3-blockstore-response-documents.rst

Example Request
---------------

.. tabs::

   .. tab:: Keys Auth Method
      :tabid: keys

      .. code-block:: sh
         :linenos:
         :emphasize-lines: 6-23

         curl --user '{PUBLIC-KEY}:{PRIVATE-KEY}' --digest \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --include \
              --request POST 'https://{+opsmgr-url+}/api/public/v1.0/admin/backup/snapshot/s3Configs?pretty=true' \
              --data '{
                "id": "{S3-BLOCKSTORE-CONFIG-ID}",
                "assignmentEnabled": true,
                "pathStyleAccessEnabled": false,
                "awsAccessKey": "<access>",
                "awsSecretKey": "<secret>",
                "acceptedTos": true,
                "encryptedCredentials": false,
                "loadFactor": 50,
                "s3AuthMethod": "KEYS",
                "s3BucketEndpoint": "s3.amazonaws.com",
                "s3BucketName": "bucketname",
                "s3MaxConnections": 50,
                "sseEnabled": true,
                "uri": "mongodb://127.0.0.1:27017",
                "ssl": false,
                "writeConcern": "ACKNOWLEDGED"
              }'

   .. tab:: IAM Role Auth Method
      :tabid: iam

      .. code-block:: sh
         :linenos:
         :emphasize-lines: 6-21

         curl --user '{PUBLIC-KEY}:{PRIVATE-KEY}' --digest \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --include \
              --request POST 'https://{+opsmgr-url+}/api/public/v1.0/admin/backup/snapshot/s3Configs?pretty=true' \
              --data '{
                 "id": "{S3-BLOCKSTORE-CONFIG-ID}",
                 "assignmentEnabled": true,
                 "pathStyleAccessEnabled": false,
                 "acceptedTos": true,
                 "encryptedCredentials": false,
                 "loadFactor": 50,
                 "s3AuthMethod": "IAM_ROLE",
                 "s3BucketEndpoint": "s3.amazonaws.com",
                 "s3BucketName": "bucketname",
                 "s3MaxConnections": 50,
                 "sseEnabled": true,
                 "uri": "mongodb://127.0.0.1:27017",
                 "ssl": false,
                 "writeConcern": "ACKNOWLEDGED"
              }'

Example Response
----------------

Response Header
~~~~~~~~~~~~~~~

.. include:: /includes/api/api-headers/401.rst

.. include:: /includes/api/api-headers/200.rst

Response Body
~~~~~~~~~~~~~

.. tabs::
   :hidden:

   .. tab:: Keys Auth Method
      :tabid: keys

      .. code-block:: json
         :linenos:
         :copyable: false

         {
           "acceptedTos": true,
           "assignmentEnabled": true,
           "awsAccessKey": "<access>",
           "awsSecretKey": "<secret>",
           "encryptedCredentials": false,
           "id": "{S3-BLOCKSTORE-CONFIG-ID}",
           "links": [
             {
               "href": "https://{+opsmgr-url+}/api/public/v1.0/admin/backup/snapshot/s3Configs",
               "rel": "self"
             }
           ],
           "loadFactor": 50,
           "pathStyleAccessEnabled": false,
           "s3AuthMethod": "KEYS",
           "s3BucketEndpoint": "s3.amazonaws.com",
           "s3BucketName": "bucketname",
           "s3MaxConnections": 50,
           "sseEnabled": true,
           "ssl": false,
           "uri": "mongodb://127.0.0.1:27017",
           "writeConcern": "ACKNOWLEDGED"
         }

   .. tab:: IAM Role Auth Method
      :tabid: iam

      .. code-block:: json
         :linenos:
         :copyable: false

         {
           "acceptedTos": true,
           "assignmentEnabled": true,
           "encryptedCredentials": false,
           "id": "{S3-BLOCKSTORE-CONFIG-ID}",
           "links": [
             {
               "href": "https://{+opsmgr-url+}/api/public/v1.0/admin/backup/snapshot/s3Configs",
               "rel": "self"
             }
           ],
           "loadFactor": 50,
           "pathStyleAccessEnabled": false,
           "s3AuthMethod": "IAM_ROLE",
           "s3BucketEndpoint": "s3.amazonaws.com",
           "s3BucketName": "bucketname",
           "s3MaxConnections": 50,
           "sseEnabled": true,
           "ssl": false,
           "uri": "mongodb://127.0.0.1:27017",
           "writeConcern": "ACKNOWLEDGED"
         }
