===================================
Add Entries to Project IP Whitelist
===================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. include:: /includes/fact-projects-groups-synonyms.rst

.. important::

   .. include:: /includes/fact-project-user-whitelist.rst

   .. include:: /includes/api/fact-synchronous-whitelist-post.rst
  
.. include:: /includes/api-requirements.rst

.. include:: /includes/api-base-url-new.rst

Syntax
------

.. code-block:: none

   POST /groups/{GROUP-ID}/whitelist

Request Path Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1
   :widths: 15 10 75

   * - Path Element
     - Required/Optional
     - Description

   * - ``GROUP-ID``

     - Required.

     - The unique identifier for the :ref:`project <group-id>` to
       which you want to add one or more whitelist entries.

Request Query Parameters
~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/no-query-parameters-list.rst

Request Body Parameters
~~~~~~~~~~~~~~~~~~~~~~~

Specify an array of documents, where each document represents one
whitelist entry you want to add to the project. You must specify
an array even if you are only associating a single whitelist entry
to the project.

When you submit a ``POST`` request containing ``awsSecurityGroup``,
``ipAddress``, or ``cidrBlock`` values which are not already present in
the whitelist, |service| adds those entries to the list of existing
entries in the whitelist. |service| does *not* set the whitelist to only
contain the entries specified in the request.

.. list-table::
   :widths: 10 10 80
   :header-rows: 1

   * - Name
     - Type
     - Description

   * - ``awsSecurityGroup``
     - string
     - ID of the |aws| security group to whitelist. Mutually exclusive
       with ``cidrBlock`` and ``ipAddress``.

       .. note::

          You must :ref:`configure VPC peering <vpc-peering>` for your
          project before you can whitelist an |aws| security group.

   * - ``cidrBlock``
     - string
     - Whitelist entry in Classless Inter-Domain Routing (CIDR)
       notation. Mutually exclusive with ``awsSecurityGroup`` and
       ``ipAddress``.

   * - ``ipAddress``
     - string
     - Whitelisted IP address. Mutually exclusive with
       ``awsSecurityGroup`` and ``cidrBlock``.

   * - ``comment``
     - string
     - *Optional* Comment associated with the whitelist entry.

   * - ``deleteAfterDate``
     - date
     - *Optional* `ISO-8601
       <https://en.wikipedia.org/wiki/ISO_8601>`_-formatted UTC date
       after which |service| removes the entry from the whitelist. The
       specified date must be in the future and within one week of the
       time you make the API request.

       .. important::

          You cannot set AWS security groups as temporary whitelist
          entries.

       .. note::

          You may include an ISO-8601 time zone designator to ensure
          that the expiration date occurs with respect to the local
          time in the specified time zone.

Response
--------

.. include:: /includes/get-all-note.rst

Each element in the ``result`` array is one whitelist entry associated
to the project IP whitelist.

.. include:: /includes/list-table-whitelist-response-body.rst

Example Request
---------------

.. code-block:: shell

   curl --user "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest --include \
     --header "Accept: application/json" \
     --header "Content-Type: application/json" \
     --request POST "https://cloud.mongodb.com/api/atlas/v1.0/groups/5aec7afbf7d068e35a39809b/whitelist?pretty=true" \
     --data '
       [
         {
           "ipAddress" : "192.0.2.15",
           "comment" : "IP address for Application Server A"
         },
         {
           "cidrBlock" : "203.0.113.0/24",
           "comment" : "CIDR block for Application Server B - D"
         },
         {
           "awsSecurityGroup" : "sg-0026348ec11780bd1",
           "comment" : "Whitelisted AWS Security Group"
         }
       ]'

Example Response
----------------

.. code-block:: json

   {
     "links": [
       {
         "href": "https://cloud.mongodb.com/api/atlas/v1.0/groups/5aec7afbf7d068e35a39809b/whitelist?pageNum=1&itemsPerPage=100?pretty=true",
         "rel": "self"
       }
     ],
     "results": [
       {
         "cidrBlock": "192.0.2.0/24",
         "comment": "IP address for Application Server A",
         "groupId": "5aec7afbf7d068e35a39809b",
         "ipAddress": "192.0.2.15",
         "links": [
           {
             "href": "https://cloud.mongodb.com/api/atlas/v1.0/groups/5aec7afbf7d068e35a39809b/whitelist/192.0.2.15%2F24",
             "rel": "self"
           }
         ]
       },
       {
         "cidrBlock": "203.0.113.0/24",
         "comment": "CIDR block for Application Server B - D",
         "groupId": "5aec7afbf7d068e35a39809b",
         "links": [
           {
             "href": "https://cloud.mongodb.com/api/atlas/v1.0/groups/5aec7afbf7d068e35a39809b/whitelist/203.0.113.0%2F24",
             "rel": "self"
           }
         ]
       },
       {
         "awsSecurityGroup": "sg-0026348ec11780bd1",
         "comment": "Whitelisted AWS Security Group",
         "groupId": "5bbfb39280eef5488e6020c6",
         "links": [
           {
             "href" : "https://cloud.mongodb.com/api/atlas/v1.0/groups/5aec7afbf7d068e35a39809b/whitelist/sg-0026348ec11780bd1",
             "rel": "self"
           }
         ]
     ],
     "totalCount": 3
   }
