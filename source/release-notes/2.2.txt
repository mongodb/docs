=============================
Release Notes for MongoDB 2.2
=============================

.. default-domain:: mongodb

.. contents:: See the :doc:`full index of this page <2.2-changes>` for
              a complete list of changes included in 2.2.
   :backlinks: none
   :local:
   :depth: 1

Upgrading
---------

MongoDB 2.2 is a standard, incremental production release and works as
a drop-in replacement for MongoDB 2.0.

Preparation
~~~~~~~~~~~

If your MongoDB deployment uses authentication, upgrade your drivers
(i.e. client libraries) and :program:`mongos` instances before
upgrading your :program:`mongod` instances.

.. TODO insert the following line if we eventually have a section on
   this change. See the :ref:`driver changes <2.2-driver-changes>`
   section for more information.

Read through all release notes before upgrading, and ensure that no
changes will affect your deployment.

2.2 processes can inter-operate with 2.0 and 1.8 tools and processes
in replica sets and shard clusters, if you are not running with
authentication. As a result, you can safely upgrade the
:program:`mongod` and :program:`mongos` components of your deployment
in any order.

.. _2.2-upgrade-standalone:

Upgrading a Standalone ``mongod``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#. Download the v2.2 binaries from the `MongoDB Download Page`_.

#. Shutdown your :program:`mongod` instance, replace the existing
   binary with the 2.2 :program:`mongod` binary and restart MongoDB.

.. _`MongoDB Download Page`: http://downloads.mongodb.org/

.. _2.2-upgrade-replica-set:

Upgrading a Replica Set
~~~~~~~~~~~~~~~~~~~~~~~

While you may upgrade your replica set in any order, to minimize
downtime, use the following procedure:

#. Upgrade the :term:`secondary` members of the set one at a time by
   shutting down the :program:`mongod` and replacing the binary with
   the 2.2 binary.

#. Use the :func:`rs.stepDown()` to step down the primary to allow
   normal :ref:`failover <replica-set-failover>` procedure.

   :func:`rs.stepDown()` and :dbcommand:`replSetStepDown` provide for
   shorter and more consistent failover procedures than simply
   shutting down the primary directly.

   When the primary has stepped down, shut the instance down and
   upgrade by replacing the :program:`mongod` binary with the 2.2
   binary.

.. _2.2-upgrade-shard-cluster:

Upgrading a Shard Cluster
~~~~~~~~~~~~~~~~~~~~~~~~~

If your cluster uses authentication, use the following upgrade
procedure:

- Upgrade all :program:`mongos` instances *first*, in any order.

- Upgrade all of the :program:`mongod` config server instances *one at
  a time*. When you have *less* than *three* config servers active,
  the cluster metadata will be read-only which will prevent (and abort)
  all chunk migrations and chunk splits.

- Upgrade all remaining cluster components. Use the :ref:`upgrade
  procedure for replica sets <2.2-upgrade-replica-set>` for each of
  the shards and the :ref:`stand alone <2.2-upgrade-standalone>`
  procedure for each of the config servers. You may upgrade the
  components of your cluster in any order.

If your cluster *does not* use authentication, you may upgrade the
components of the cluster in any order, using the :ref:`upgrade
procedure for replica sets <2.2-upgrade-replica-set>` for each of the
shards and the :ref:`stand alone <2.2-upgrade-standalone>` procedure
for each of the config servers.

Changes
-------

Major Features
~~~~~~~~~~~~~~

Aggregation Framework
`````````````````````

The aggregation framework makes it possible to do aggregation
operations without needing to use :term:`map-reduce`. The
:dbcommand:`aggregate` command exposes the aggregation framework, and the
:func:`db.collection.aggregate()` helper in the :program:`mongo` shell
provides an interface to these operations. Consider the following
resources for background on the aggregation framework and its use:

- Documentation: :doc:`/applications/aggregation`

- Reference: :doc:`/reference/aggregation`

- Examples: :doc:`/tutorial/aggregation-examples`

TTL Collections
```````````````

TTL collections remove expired data from a collection, using a special
index and a background thread that deletes expired documents every
minute. These collections are useful as an alternative to
:term:`capped collections <capped collection>` in some cases, for data
warehousing and caching cases including: machine generated event data,
logs, and session information that only need to persist in a database
for a limited period of time.

For more information, see the :doc:`/tutorial/expire-data` tutorial.

Concurrency Improvements
````````````````````````

In 2.2 MongoDB increases the server's capacity for concurrent
operations with two key improvements:

#. :issue:`DB Level Locking <SERVER-4328>`
#. :issue:`Improved Yielding on Page Faults <SERVER-3357>`

To reflect these changes, MongoDB now provides changed and improved
reporting for concurrency and use, see the :ref:`locks` and
:ref:`server-status-record-stats` in :doc:`server status
</reference/server-status>` and in the output of
:func:`db.currentOp()` as well as :doc:`mongotop
</reference/mongotop>` and :doc:`mongostat </reference/mongostat>`.

.. TODO add links to current op output documentation when it happens.

Tag Aware Sharding
``````````````````

:wiki:`Documentation <Tag+Aware+Sharding>`

.. TODO see kristina's blog post.

Fully Supported Read Preference Semantics
`````````````````````````````````````````

All MongoDB clients and drivers now support full :ref:`read
preferences <replica-set-read-preference>` including consistent
support for a full range of :ref:`read preference modes
<replica-set-read-preference-modes>` and :ref:`tag sets
<replica-set-read-preference-tag-sets>`. This support extends to the
:program:`mongos` and applies identically to single replica sets, and
the replica sets for each shard in a :term:`shard cluster`.

Additional read preference support now exists in the :program:`mongo`
shell using the :func:`reaPref() <cursor.readPref()>` cursor method.

.. including tagging

Compatibility Changes
~~~~~~~~~~~~~~~~~~~~~

Authentication Changes
``````````````````````

In order to provide more reliable and robust support for
authentication clients, including drivers and :program:`mongos`
instances.

If your :program:`mongod` instances or cluster runs with
authentication:

- In sharded environments, 2.0 version :program:`mongos` instances are
  **not** compatible with 2.2 shard clusters running with
  authentication.

  You **must** use the :ref:`upgrade procedure for shard clusters
  <2.2-upgrade-shard-cluster>` and upgrade all :program:`mongos`
  instances *before* upgrading the shard to prevent rendering your
  cluster non-operational.

- For all drivers, use the latest release of your driver and check
  its release notes.

Drivers and :program:`mongos` instances that connect to
:program:`mongod` instances that do *not* have authentication enabled
are not affected by this issue.

.. _2.2-findandmodify-returns-null:

``findAndModify`` Returns Null Value for Upserts
````````````````````````````````````````````````

In version 2.2, for :term:`upsert` operations, :dbcommand:`findAndModify`
commands will now return the following output:

.. code-block:: javascript

   {'ok': 1.0, 'value': null}

In the :program:`mongo` shell, :dbcommand:`findAndModify` operations
running as upserts will only output a ``null`` value.

Previously, in version 2.0 these operations would return an empty
document, e.g. ``{ }``.

See: :issue:`SERVER-6226`.

Behavioral Changes
~~~~~~~~~~~~~~~~~~

Restrictions on Database Names
``````````````````````````````

Database names can no longer contain the following characters:

.. code-block:: none

   /\. "*<>:|?

The names of the data files include the database name.
If you attempt upgrade a database instance with one or more of these characters,
:program:`mongod` will refuse to start.

Change the name of these databases before upgrading.

.. _2.2-id-indexes-capped-collections:

``_id`` Fields and Indexes on Capped Collections
````````````````````````````````````````````````

All :term:`capped collections <capped collection>` now have an ``_id``
field by default *if* they exist outside of the ``local`` database,
and indexes on the ``_id`` field. This change only affects capped
collections created with 2.2 instances and does not impact existing
capped collections.

See: :issue:`SERVER-5516` for more information.

Windows Specific Changes
~~~~~~~~~~~~~~~~~~~~~~~~

Windows XP is Not Supported
```````````````````````````

As of 2.2, MongoDB does not support Windows XP. Please upgrade to a
more recent version of Windows to use the latest releases of
MongoDB. See :issue:`SERVER-5648` for more information.

Service Support for ``mongos.exe``
``````````````````````````````````

You may now run :program:`mongos.exe` instances as a Windows
Service. See the :doc:`/reference/mongos.exe` reference and
:ref:`tutorial-mongod-as-windows-service` for more information.

:issue:`SERVER-1589`

Log Rotate Command Support
``````````````````````````

:issue:`SERVER-2612`

Page Fault Detection
````````````````````

:issue:`SERVER-4538`

New Build Using SlimReadWrite Locks for Windows Concurrency
```````````````````````````````````````````````````````````

Labeled "2008+" on the `Downloads Page`_, this build for 64-bit
versions of Windows Server 2008 R2, Windows 7 or newer, offers
increased performance for over the standard 64 bit Windows build of
MongoDB. See :issue:`SERVER-3844` for more information.

.. _`Downloads Page`: http://www.mongodb.org/downloads

Tool Improvements
~~~~~~~~~~~~~~~~~

``mongodump`` Includes Indexes in Output with ``--collection`` Option
`````````````````````````````````````````````````````````````````````

:issue:`SERVER-808`

``mongooplog`` for Replaying Oplogs
```````````````````````````````````

:issue:`SERVER-3873`

Authentication Support for ``mongotop`` and ``mongostat``
`````````````````````````````````````````````````````````

:issue:`SERVER-3875`

:issue:`SERVER-3871`

Write Concern Support for ``mongoimport``
`````````````````````````````````````````

:issue:`SERVER-3937`

``mongodump`` Support for Reading from Secondaries
``````````````````````````````````````````````````

:issue:`SERVER-3854`

``mongoimport`` Support for full 16MB Documents
```````````````````````````````````````````````

:issue:`SERVER-4593`

Shell Improvements
~~~~~~~~~~~~~~~~~~

Improved Shell User Interface
```````````````````````````````

2.2 includes a number of changes that improve the overall quality and
consistency of the user interface for the :program:`mongo` shell:

- Full Unicode support.

- Bash-like line editing features.

  See :issue:`SERVER-4312` for more information.

- Multi-line command support in shell history.

  See :issue:`SERVER-3470` for more information.

- Windows support for ``edit`` command.

  See :issue:`SERVER-3998` for more information.

Helper to load Server-Side Functions
````````````````````````````````````

The :func:`db.loadServerScripts()` loads the contents of the current
database's ``system.js`` collection into the current :program:`mongo`
shell session.

See :issue:`SERVER-1651` for more information.

Support for Bulk Inserts
````````````````````````

:issue:`SERVER-3819`

Operations
~~~~~~~~~~

Support for Logging to Syslog
`````````````````````````````

See the :issue:`SERVER-2957` case and the documentation of
the :setting:`syslog` run-time option or the :option:`mongod --syslog`
and :option:`mongos --syslog` command line-options.

``touch`` Command
`````````````````

Added the :dbcommand:`touch` command to read the data and/or indexes
from a collection into memory.

See: :issue:`SERVER-2023` and :dbcommand:`touch` for more information.

``indexCounters`` No Longer Report Sampled Data
```````````````````````````````````````````````

:status:`indexCounters` now report actual counters that reflect index
use and state. In previous versions, these data were sampled. See
:issue:`SERVER-5784` and :status:`indexCounters` for more information.

Padding Specifiable on ``compact`` Command
``````````````````````````````````````````

:issue:`SERVER-4018`

.. TODO fix documentation and link

Replication
~~~~~~~~~~~

Replica Set Members will not Sync from Members Without Indexes Unless ``buildIndexes: false``
`````````````````````````````````````````````````````````````````````````````````````````````

:issue:`SERVER-4160`

Improved Logging for Replica Set Lag
````````````````````````````````````

:issue:`SERVER-3575`

Replica Set Members can Sync from Specific Members
``````````````````````````````````````````````````

The new :dbcommand:`replSetSyncFrom` command, and
:func:`rs.syncFrom()` helper in the :program:`mongo` shell make it
possible for you to manually configure from which member of the set a
replica will poll :term:`oplog` entries. Use these commands to
override the default selection logic if needed. Always exercise
caution with :dbcommand:`replSetSyncFrom` when overriding the default
behavior.

Map Reduce
~~~~~~~~~~

Improved Support for Sharded MapReduce
``````````````````````````````````````

:issue:`SERVER-4521`

Retry MapReduce Jobs on Config Error
````````````````````````````````````

:issue:`SERVER-4158`

Sharding Improvements
~~~~~~~~~~~~~~~~~~~~~

Index on Shard Keys Can Now Be a Compound Index
```````````````````````````````````````````````

:issue:`SERVER-1506`

Documentation: :ref:`sharding-shard-key-indexes`

Migration Thresholds Modified
`````````````````````````````

The :ref:`migration thresholds <sharding-migration-thresholds>` have
changed in 2.2 to permit more even distribution of :term:`chunks
<chunk>` in collections with smaller quantities of data. See the
:ref:`sharding-migration-thresholds` documentation for more
information.

Additional Improvements
~~~~~~~~~~~~~~~~~~~~~~~

``$timestamp`` Extended JSON format
```````````````````````````````````

:issue:`SERVER-3483`

Added Build Flag to Use System Libraries
````````````````````````````````````````

The Boost library, version 1.49, is now embeded in the MongoDB
code base.

.. TODO help the verbs

If you want to build MongoDB binaries using system Boost libraries,
you can pass ``scons`` the ``--use-system-boost`` flag, as follows:

.. code-block:: sh

   scons --use-system-boost

There is also a flag in ``scons`` if you want to build MongoDB using
all system libraries rather than the included versions of the
libraries, if desired. To build MongoDB with system libraries for all
libraries, use the following arguments to ``scons``:

.. code-block:: sh

   scons --use-system-all

See the :issue:`SERVER-3829` and :issue:`SERVER-5172` issues for more
information.

Resources
---------

- `MongoDB Downloads <http://mongodb.org/downloads>`_
- `All JIRA Issues resolved in 2.2 <https://jira.mongodb.org/secure/IssueNavigator.jspa?mode=hide&requestId=10907>`_
- `All Backward Incompatible Changes <https://jira.mongodb.org/secure/IssueNavigator.jspa?requestId=11225>`_
