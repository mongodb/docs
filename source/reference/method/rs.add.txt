========
rs.add()
========

.. default-domain:: mongodb

Definition
----------

.. method:: rs.add(host, arbiterOnly)

   Adds a member to a :term:`replica set`.

   .. include:: /reference/method/rs.add-param.rst

   You may specify new hosts in one of two ways:

   #. as a "hostname" with an optional port number to use the default
      configuration as in the :ref:`replica-set-add-member` example.

   #. as a configuration :term:`document`, as in the
      :ref:`replica-set-add-member-alternate-procedure` example.

   :method:`rs.add()` provides a wrapper around some of the
   functionality of the ":dbcommand:`replSetReconfig`" :term:`database
   command` and the corresponding shell helper
   :method:`rs.reconfig()`. See the :doc:`/reference/replica-configuration`
   document for full documentation of all replica set configuration
   options.

   This function might disconnect the shell briefly and force a
   reconnection. This occurs if adding the member triggers an election for
   primary. In such cases, the shell displays an error even if the command
   succeeds.

Example
-------

To add a :program:`mongod` accessible on the default port
``27017`` running on the host ``mongodb3.example.net``, use the
following :method:`rs.add()` invocation:

.. code-block:: javascript

   rs.add('mongodb3.example.net:27017')

If ``mongodb3.example.net`` is an arbiter, use the following form:

.. code-block:: javascript

   rs.add('mongodb3.example.net:27017', true)

To add ``mongodb3.example.net`` as a :ref:`secondary-only
<replica-set-secondary-only-members>` member of set, use the
following form of :method:`rs.add()`:

.. code-block:: javascript

   rs.add( { "_id": 3, "host": "mongodbd3.example.net:27017", "priority": 0 } )

Replace, ``3`` with the next unused ``_id`` value in the replica
set. See :method:`rs.conf()` to see the existing ``_id`` values
in the replica set configuration document.

See the :doc:`/reference/replica-configuration` and
:doc:`/administration/replica-sets` documents for more
information.
