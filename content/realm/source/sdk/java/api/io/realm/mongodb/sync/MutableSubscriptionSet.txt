.. meta::
   :robots: noindex, nosnippet


.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol



Interface MutableSubscriptionSet
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _io_realm_mongodb_sync_MutableSubscriptionSet:



io.realm.mongodb.sync
=====================

**Implemented interfaces:**



- :ref:`io.realm.mongodb.sync.SubscriptionSet <io_realm_mongodb_sync_SubscriptionSet>` 
- `java.lang.Iterable <https://docs.oracle.com/javase/7/docs/api/java/lang/Iterable.html>`__ 


A mutable subscription set is available when calling :ref:`SubscriptionSet.update(UpdateCallback) <io_realm_mongodb_sync_SubscriptionSet_update_UpdateCallback_>`  This is the only way to modify a :ref:`SubscriptionSet <io_realm_mongodb_sync_SubscriptionSet>` . :ref:`Subscription <io_realm_mongodb_sync_Subscription>` s can be either 

*managed* or *unmanaged*. Unmanaged subscriptions are those created by using :ref:`Subscription.create(RealmQuery) <io_realm_mongodb_sync_Subscription_create_RealmQuery_>`  or :ref:`Subscription.create(String, RealmQuery) <io_realm_mongodb_sync_Subscription_create_String__RealmQuery_>` , while managed subscriptions are the ones being returned from the subscription set.




.. seealso::


   
   - :ref:`SubscriptionSet for more information about subscription sets and flexible sync. <io_realm_mongodb_sync_SubscriptionSet>` 
      
      
      
   
   
   



Method Summary
==============

.. list-table::
   :header-rows: 1
   
   * - Modifier and Type
     - Method and Description
   
   * - public :ref:`Subscription <io_realm_mongodb_sync_Subscription>` 
     - | :ref:`add <io_realm_mongodb_sync_MutableSubscriptionSet_add>` (
       |  :ref:`Subscription <io_realm_mongodb_sync_Subscription>`  subscription
       | )
       
       
       Adds a new unmanaged subscription to the subscription set.
       
       
       
   
   * - public :ref:`Subscription <io_realm_mongodb_sync_Subscription>` 
     - | :ref:`addOrUpdate <io_realm_mongodb_sync_MutableSubscriptionSet_addOrUpdate>` (
       |  :ref:`Subscription <io_realm_mongodb_sync_Subscription>`  subscription
       | )
       
       
       Add a new subscription or update an existing named subscription.
       
       
       
   
   * - public **boolean**
     - | :ref:`remove <io_realm_mongodb_sync_MutableSubscriptionSet_remove>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  name
       | )
       
       
       Remove a named subscription.
       
       
       
   
   * - public **boolean**
     - | :ref:`remove <io_realm_mongodb_sync_MutableSubscriptionSet_remove>` (
       |  :ref:`Subscription <io_realm_mongodb_sync_Subscription>`  subscription
       | )
       
       
       Remove a managed subscription.
       
       
       
   
   * - public **boolean**
     - | :ref:`removeAll <io_realm_mongodb_sync_MutableSubscriptionSet_removeAll>` ()
       | 
       
       
       Remove all current managed subscriptions.
       
       
       
   
   * - public **boolean**
     - | :ref:`removeAll <io_realm_mongodb_sync_MutableSubscriptionSet_removeAll>` <**T** >(
       |  `java.lang.Class\<T> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  clazz
       | )
       
       
       Remove all subscriptions with queries on a given given model class.
       
       
       
   
   * - public **boolean**
     - | :ref:`removeAll <io_realm_mongodb_sync_MutableSubscriptionSet_removeAll>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  objectType
       | )
       
       
       Remove all subscriptions on a given :ref:`Subscription.getObjectType() <io_realm_mongodb_sync_Subscription_getObjectType__>` .
       
       
       
       
       
   
   


Inherited Methods
=================



Method Detail
=============

.. _add:

.. _add__:

.. _MutableSubscriptionSet_add:

.. _MutableSubscriptionSet_add__:

.. _io_realm_mongodb_sync_MutableSubscriptionSet_add:

.. _io_realm_mongodb_sync_MutableSubscriptionSet_add__:



add
----

.. _io_realm_mongodb_sync_MutableSubscriptionSet_add_io_realm_mongodb_sync_Subscription_:

.. _io_realm_mongodb_sync_MutableSubscriptionSet_add_Subscription_:

.. _add_io_realm_mongodb_sync_Subscription_:

.. _add_Subscription_:

.. _MutableSubscriptionSet_add_io_realm_mongodb_sync_Subscription_:

.. _MutableSubscriptionSet_add_Subscription_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`Subscription <io_realm_mongodb_sync_Subscription>`  :ref:`add <io_realm_mongodb_sync_MutableSubscriptionSet_add>` (
       |  :ref:`Subscription <io_realm_mongodb_sync_Subscription>`  subscription
       | )
       
       
       
   
   * - Adds a new unmanaged subscription to the subscription set.
       
       
       
       
       **Parameters**
       
       - ``subscription`` - unmanaged subscription to add.
          
          
          
       
       
       
       
       **Returns**
       
       the newly added managed subscription.
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if a subscription matching the provided one already exists.
          
          
          
       
       
       
       
       
   
   


.. _addOrUpdate:

.. _addOrUpdate__:

.. _MutableSubscriptionSet_addOrUpdate:

.. _MutableSubscriptionSet_addOrUpdate__:

.. _io_realm_mongodb_sync_MutableSubscriptionSet_addOrUpdate:

.. _io_realm_mongodb_sync_MutableSubscriptionSet_addOrUpdate__:



addOrUpdate
-----------

.. _io_realm_mongodb_sync_MutableSubscriptionSet_addOrUpdate_io_realm_mongodb_sync_Subscription_:

.. _io_realm_mongodb_sync_MutableSubscriptionSet_addOrUpdate_Subscription_:

.. _addOrUpdate_io_realm_mongodb_sync_Subscription_:

.. _addOrUpdate_Subscription_:

.. _MutableSubscriptionSet_addOrUpdate_io_realm_mongodb_sync_Subscription_:

.. _MutableSubscriptionSet_addOrUpdate_Subscription_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`Subscription <io_realm_mongodb_sync_Subscription>`  :ref:`addOrUpdate <io_realm_mongodb_sync_MutableSubscriptionSet_addOrUpdate>` (
       |  :ref:`Subscription <io_realm_mongodb_sync_Subscription>`  subscription
       | )
       
       
       
   
   * - Add a new subscription or update an existing named subscription. It isn't possible to update an anonymous subscription. These must removed and re-inserted.
       
       
       
       
       **Parameters**
       
       - ``subscription`` - anonymous or named subscription created via ``Subscription.create(...)`` , used to update a matching one within a specific set. It creates a new one in case there is no match..
          
          
          
          
          
       
       
       
       
       **Returns**
       
       the updated or inserted managed subscription.
       
       
       
       
       
       
       
   
   


.. _remove:

.. _remove__:

.. _MutableSubscriptionSet_remove:

.. _MutableSubscriptionSet_remove__:

.. _io_realm_mongodb_sync_MutableSubscriptionSet_remove:

.. _io_realm_mongodb_sync_MutableSubscriptionSet_remove__:



remove
------

.. _io_realm_mongodb_sync_MutableSubscriptionSet_remove_java_lang_String_:

.. _io_realm_mongodb_sync_MutableSubscriptionSet_remove_String_:

.. _remove_java_lang_String_:

.. _remove_String_:

.. _MutableSubscriptionSet_remove_java_lang_String_:

.. _MutableSubscriptionSet_remove_String_:

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`remove <io_realm_mongodb_sync_MutableSubscriptionSet_remove>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  name
       | )
       
       
       
   
   * - Remove a named subscription.
       
       
       
       
       **Parameters**
       
       - ``name`` - name of managed subscription to remove.
          
          
          
       
       
       
       
       **Returns**
       
       ``true``  if the subscription was removed, ``false``  if not.
       
       
       
       
       
       
       
       
       
   
   
.. _io_realm_mongodb_sync_MutableSubscriptionSet_remove_io_realm_mongodb_sync_Subscription_:

.. _io_realm_mongodb_sync_MutableSubscriptionSet_remove_Subscription_:

.. _remove_io_realm_mongodb_sync_Subscription_:

.. _remove_Subscription_:

.. _MutableSubscriptionSet_remove_io_realm_mongodb_sync_Subscription_:

.. _MutableSubscriptionSet_remove_Subscription_:

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`remove <io_realm_mongodb_sync_MutableSubscriptionSet_remove>` (
       |  :ref:`Subscription <io_realm_mongodb_sync_Subscription>`  subscription
       | )
       
       
       
   
   * - Remove a managed subscription.
       
       
       
       
       **Parameters**
       
       - ``subscription`` - managed subscription to remove
          
          
          
       
       
       
       
       **Returns**
       
       ``true``  if the subscription was removed, ``false``  if not.
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the subscription provided is unmanaged. Only managed subscriptions can be used as input.
          
          
          
       
       
       
       
       
   
   


.. _removeAll:

.. _removeAll__:

.. _MutableSubscriptionSet_removeAll:

.. _MutableSubscriptionSet_removeAll__:

.. _io_realm_mongodb_sync_MutableSubscriptionSet_removeAll:

.. _io_realm_mongodb_sync_MutableSubscriptionSet_removeAll__:



removeAll
---------

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`removeAll <io_realm_mongodb_sync_MutableSubscriptionSet_removeAll>` ()
       | 
       
       
       
   
   * - Remove all current managed subscriptions.
       
       
       
       
       
       
       **Returns**
       
       ``true``  if 1 or more subscriptions were removed, ``false``  if no subscriptions were removed.
       
       
       
       
       
       
       
       
       
   
   
.. _io_realm_mongodb_sync_MutableSubscriptionSet_removeAll_java_lang_Class_:

.. _io_realm_mongodb_sync_MutableSubscriptionSet_removeAll_Class_:

.. _removeAll_java_lang_Class_:

.. _removeAll_Class_:

.. _MutableSubscriptionSet_removeAll_java_lang_Class_:

.. _MutableSubscriptionSet_removeAll_Class_:

.. _io_realm_mongodb_sync_MutableSubscriptionSet_removeAll_Class_T__:

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`removeAll <io_realm_mongodb_sync_MutableSubscriptionSet_removeAll>` <**T** >(
       |  `java.lang.Class\<T> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  clazz
       | )
       
       
       
   
   * - Remove all subscriptions with queries on a given given model class.
       
       
       
       
       **Parameters**
       
       - ``clazz`` - subscriptions on this type will be removed.
          
          
          
       
       
       
       
       **Returns**
       
       ``true``  if 1 or more subscriptions were removed, ``false``  if no subscriptions were removed.
       
       
       
       
       
       
       
       
       
   
   
.. _io_realm_mongodb_sync_MutableSubscriptionSet_removeAll_java_lang_String_:

.. _io_realm_mongodb_sync_MutableSubscriptionSet_removeAll_String_:

.. _removeAll_java_lang_String_:

.. _removeAll_String_:

.. _MutableSubscriptionSet_removeAll_java_lang_String_:

.. _MutableSubscriptionSet_removeAll_String_:

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`removeAll <io_realm_mongodb_sync_MutableSubscriptionSet_removeAll>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  objectType
       | )
       
       
       
   
   * - Remove all subscriptions on a given :ref:`Subscription.getObjectType() <io_realm_mongodb_sync_Subscription_getObjectType__>` .
       
       
       
       
       
       
       **Parameters**
       
       - ``objectType`` - subscriptions on this object type will be removed.
          
          
          
       
       
       
       
       **Returns**
       
       ``true``  if 1 or more subscriptions were removed, ``false``  if no subscriptions were removed.
       
       
       
       
       
       
       
       
       
   
   



