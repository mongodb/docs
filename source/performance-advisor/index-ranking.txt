.. _pa-index-ranking:

====================
Review Index Ranking
====================

.. default-domain:: mongodb

.. facet::
   :name: genre
   :values: reference

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

The |pa| orders the :manual:`indexes </indexes>` that it suggests by
their respective :guilabel:`Impact`. :guilabel:`Impact` indicates
the estimated performance improvement that the suggested index would
bring.

How |pa| Suggests and Ranks Indexes
-----------------------------------

.. _query-shape-metrics:

The |pa| monitors queries that take longer than ``100`` milliseconds to
execute and groups these queries into common :term:`query shapes <query
shape>`. The |pa| calculates the inefficiency of each query shape by
considering the following aggregated metrics from queries which match
the shape:

- Amount of time spent executing the query.

- Number of documents scanned.

- Number of documents returned.

- Average object size.

To establish recommended indexes, the |pa| uses these metrics in a
formula to calculate the :guilabel:`Impact`, or performance improvement
that creating an index matching that query shape would cause. When the 
|pa| suggests indexes, it ranks the indexes by their 
:guilabel:`Impact`. The :guilabel:`Impact` is determined by the total 
wasted bytes read.

Index Field Order
-----------------

The type of query operation in the query shape affects the order of the
fields used to construct the index. In general, the |pa| ranks fields by
their :term:`cardinality`.

The following table shows how the |pa| ranks various operation types by
order of relative importance:

.. list-table::
   :header-rows: 1
   :widths: 10 20 20

   * - Rank
     - Operation Type
     - Example Operator

   * - 1
     - Equality match
     - :query:`$eq`

   * - 2
     - Array query
     - :query:`$in`

   * - 3
     - Range query
     - :query:`$gte`

   * - 4
     - Type query
     - :query:`$type`

   * - 5
     - Exists
     - :query:`$exists`

   * - 6
     - All other operators
     - :query:`$nearSphere`

   * - 7
     - Sort
     - :manual:`sort() </reference/method/cursor.sort/>`

Limiting Proposed Indexes
-------------------------

The |pa| doesn't suggest indexes that have more than 16 fields.

Also, the |pa| suggests the index only if the difference between 
scanned documents and returned documents is greater than 500 for 
impacted queries.


Index De-Duplication
~~~~~~~~~~~~~~~~~~~~

The |pa| de-duplicates overlapping indexes before it makes suggestions.
For example, consider if the |pa| calculates the following potential
suggested indexes:

.. code-block:: json
   :copyable: false

   { a : 1 }
   { a : 1, b : 1 }

Since ``{ a : 1 }`` is a prefix of ``{ a : 1, b : 1 }``, |pa|
suggests only ``{ a : 1, b : 1 }``. To learn more about index prefixes,
see :manual:`Prefixes </core/index-compound/#prefixes>`.

Example: New York City Taxi Data
--------------------------------

This example uses a database named ``cab-db`` that contains information 
about New York City taxi rides, with fields for the times of pickup and 
dropoff, ride distance, and a breakdown of ride costs. A typical 
document in the collection ``yellow`` looks like the following example:

.. code-block:: json
   :copyable: false

   {
    	"_id" : ObjectId("5db9daab0b2a17b7706cd6a3"),
    	"pickup_datetime" : "2014-06-30 02:09:23",
    	"dropoff_datetime" : "2014-06-30 02:20:36",
    	"passenger_count" : 2,
    	"trip_distance" : 3,
    	"fare_amount" : 12,
    	"tip_amount" : 2.6,
    	"total_amount" : 15.6
   }

The collection contains more than 10 million documents, so an 
application that needs to run queries based on specific field data will 
generate some very inefficient operations unless you properly index the 
collection.

Typical queries for this application search for documents that contain
a specific dropoff time, combined with one or more other fields. For
example:

.. _taxi-example-query:

.. code-block:: javascript
   :copyable: false

   db.yellow.find({ "dropoff_datetime": "2014-06-19 21:45:00",
                    "passenger_count": 1,
                    "trip_distance": {"$gt": 3 }
                  })

The |pa| recommends the following indexes to improve performance:

.. figure:: /images/suggested-indexes.png
   :figwidth: 700px
   :alt: Screen shot of suggested indexes

.. note::

   By default, the |pa| shows index recommendations for all collections
   in your cluster. To narrow the recommendations down to a specific
   collection, select one from the :guilabel:`Collection` dropdown
   menu.

The |pa| lists recommended indexes in order of performance impact, from
greatest to least.

The first recommendation is for an index on three fields:

- ``passenger_count``
- ``dropoff_datetime``
- ``trip_distance``

Click the :guilabel:`Create Index` button to create the index with
any desired additional options. To learn more about creating an index
in the |pa|, see :ref:`pa-create-suggested-indexes`.

If you create this index, you remove the need for the database engine 
to scan the entire collection to find documents that match the query, 
which improves performance. Queries with the shape shown in the 
:ref:`example <taxi-example-query>` return results in 50 milliseconds 
or less on the indexed collection, as opposed to several seconds on the 
unindexed collection.

.. note::

   You can also create indexes with the :ref:`{+atlas-ui+} 
   <atlas-ui-indexes>`.
