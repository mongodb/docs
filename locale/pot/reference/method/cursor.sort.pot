# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/cursor.sort.txt:3
# a5029ed4dd9e44ec9eaa16145ac2dd4d
msgid "cursor.sort()"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:8
# 870f427a59964445843d4510ae53d9be
msgid "Definition"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:12
# ab884e5a97514a59ae96eb5ecb0b0112
msgid "Specifies the order in which the query returns matching documents. You must apply :method:`~cursor.sort()` to the cursor before retrieving any documents from the database."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:16
# a92674a22b0b419eb72638dca7016aba
msgid "The :method:`~cursor.sort()` method has the following parameter:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:20
# fbdc9f39d50942b08d1164880ff22256
msgid "The ``sort`` parameter contains field and value pairs, in the following form:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:27
# 8baeb49a903d4ab697cfcae7b9a6d7f2
msgid "The sort document can specify :ref:`ascending or descending sort on existing fields <sort-asc-desc>` or :ref:`sort on computed metadata <sort-metadata>`."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:32
# 80e363587c3847c1b73299c7ba0d6038
msgid "Behaviors"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:35
# 4689eb81f07e46cd9a255151be1b5370
msgid "Result Ordering"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:37
# 57fa0d1935c94218a77e53cc8a5f5b47
msgid "Unless you specify the :method:`~cursor.sort()` method or use the :query:`$near` operator, MongoDB does **not** guarantee the order of query results."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:44
# f1d3a632c191461fb1717c5cc49c81ab
msgid "Ascending/Descending Sort"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:46
# 905a93413ac54997b2dcb5f31f0e61aa
msgid "Specify in the sort parameter the field or fields to sort by and a value of ``1`` or ``-1`` to specify an ascending or descending sort respectively."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:50
# e19db5d5b4794211ae67127a3e38ef00
msgid "The following sample document specifies a descending sort by the ``age`` field and then an ascending sort by the ``posts`` field:"
msgstr ""

#: ../source/includes/fact-sort-order.rst:1
# da17dbae5d2b4b0fb305fbe3d464f966
msgid "When comparing values of different :term:`BSON` types, MongoDB uses the following comparison order, from lowest to highest:"
msgstr ""

#: ../source/includes/fact-sort-order.rst:4
# c7f9fd815c574beb9cf844b12481aef9
msgid "MinKey (internal type)"
msgstr ""

#: ../source/includes/fact-sort-order.rst:5
# a8120a6e45eb494991058e9c48488b6b
msgid "Null"
msgstr ""

#: ../source/includes/fact-sort-order.rst:6
# b63104685a7f4bb89c536b29630eb291
msgid "Numbers (ints, longs, doubles)"
msgstr ""

#: ../source/includes/fact-sort-order.rst:7
# 14109f6522df49af906f7238b746d96b
msgid "Symbol, String"
msgstr ""

#: ../source/includes/fact-sort-order.rst:8
# f48cb114997542deb6dfacaf985caa21
msgid "Object"
msgstr ""

#: ../source/includes/fact-sort-order.rst:9
# 0a3e00087dbe4a03acc1bd7405333d66
msgid "Array"
msgstr ""

#: ../source/includes/fact-sort-order.rst:10
# 6231c8a964f044b5886db9a830babb04
msgid "BinData"
msgstr ""

#: ../source/includes/fact-sort-order.rst:11
# 7297845881a241edb23fe92a1d4466b4
msgid "ObjectId"
msgstr ""

#: ../source/includes/fact-sort-order.rst:12
# 29609a63ba1e48a49082a470e7b8b8e8
msgid "Boolean"
msgstr ""

#: ../source/includes/fact-sort-order.rst:13
# 0a71f906d3f34c95b05e12a6842330d1
msgid "Date"
msgstr ""

#: ../source/includes/fact-sort-order.rst:14
# 4077eb37eac74a8d9d29a478bb48aa57
msgid "Timestamp"
msgstr ""

#: ../source/includes/fact-sort-order.rst:15
# dde50b5eba27487d9150cbe86810e2ed
msgid "Regular Expression"
msgstr ""

#: ../source/includes/fact-sort-order.rst:16
# 90bbc7852daa453eb4412aaa7c30ab36
msgid "MaxKey (internal type)"
msgstr ""

#: ../source/includes/fact-sort-order.rst:18
# 7be8fe42f29e4600aa8001a2da184781
msgid "MongoDB treats some types as equivalent for comparison purposes. For instance, numeric types undergo conversion before comparison."
msgstr ""

#: ../source/includes/fact-sort-order.rst:21
# bae4402db1ac4f1fa3e055a1c8994e4a
msgid "Date objects sort before Timestamp objects. Previously Date and Timestamp objects sorted together."
msgstr ""

#: ../source/includes/fact-sort-order.rst:25
# 83942237931345bb83ed86f8823574de
msgid "The comparison treats a non-existent field as it would an empty BSON Object. As such, a sort on the ``a`` field in documents ``{ }`` and ``{ a: null }`` would treat the documents as equivalent in sort order."
msgstr ""

#: ../source/includes/fact-sort-order.rst:29
# 6fba41bc2105422d8a389762680f11c7
msgid "With arrays, a less-than comparison or an ascending sort compares the smallest element of arrays, and a greater-than comparison or a descending sort compares the largest element of the arrays. As such, when comparing a field whose value is a single-element array (e.g. ``[ 1 ]``) with non-array fields (e.g. ``2``), the comparison is between ``1`` and ``2``. A comparison of an empty array (e.g. ``[ ]``) treats the empty array as less than ``null`` or a missing field."
msgstr ""

#: ../source/includes/fact-sort-order.rst:37
# 8db9d7fbd1c74ec6865db22394afed69
msgid "MongoDB sorts ``BinData`` in the following order:"
msgstr ""

#: ../source/includes/fact-sort-order.rst:39
# 2caff5c7524f416f9fcd3cbe1b8a113e
msgid "First, the length or size of the data."
msgstr ""

#: ../source/includes/fact-sort-order.rst:41
# 2e1aac58228b409a9b570afb7d00a5f7
msgid "Then, by the BSON one-byte subtype."
msgstr ""

#: ../source/includes/fact-sort-order.rst:43
# 6f854e7d820641028798e63693a39af5
msgid "Finally, by the data, performing a byte-by-byte comparison."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:62
# b080235e9f2a44229fb8d63e2b47efc4
msgid "Metadata Sort"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:64
# 6e05d67db89c4c469a04f4ee6126332b
msgid "Specify in the sort parameter a new field name for the computed metadata and specify the :projection:`$meta` expression as its value."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:68
# ceb9e277e42e43ccabdee7e30c0c99bd
msgid "The following sample document specifies a descending sort by the ``\"textScore\"`` metadata:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:75
# 8308a771ae4847d0902165da46855732
msgid "The specified metadata determines the sort order. For example, the ``\"textScore\"`` metadata sorts in descending order. See :projection:`$meta` for details."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:80
# 81172bf62ac14c05839f483245b3f6d0
msgid "Limit Results"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:82
# bc974567308743f387fee66de4f7441f
msgid "The sort operation requires that the entire sort be able to complete within 32 megabytes."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:85
# 157e4c2308464cc7941016b4875396df
msgid "When the sort operation consumes more than 32 megabytes, MongoDB returns an error. To avoid this error, either create an index to support the sort operation or use :method:`~cursor.sort()` in conjunction with :method:`~cursor.limit()`. The specified limit must result in a number of documents that fall within the 32 megabyte limit."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:91
# b505d4fc0dfb49548db4e462c4a464e6
msgid "For example, if the following sort operation ``stocks_quotes`` exceeds the 32 megabyte limit:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:98
# fe05e0e3cb524a54bf4ad3c8270682df
msgid "Either create an index to support the sort operation:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:104
# 6439d79430da4fbabfc946996020b5ab
msgid "Or use :method:`~cursor.sort()` in conjunction with :method:`~cursor.limit()`:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:114
# 7feaf638e1134de69d4b762088dd8015
msgid "Interaction with :term:`Projection`"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:116
# 75b6274565964d65873d92dd35463941
msgid "When a set of results are both sorted and projected, the MongoDB query engine will always apply the sorting **first**."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:120
# 31a7b626bdf541f58112f36dca26d98f
msgid "Examples"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:122
# a37248ad8892459da8bb54469e54a0ce
msgid "A collection ``orders`` contain the following documents:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:133
# 49e9c66f20c84d28a5a3594e4a4c011d
msgid "The following query, which returns all documents from the ``orders`` collection, does not specify a sort order:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:140
# 982f2e810db64720908b0206938a0cdd
msgid "The query returns the documents in indeterminate order:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:151
# 3167d74d36624cdc89531a14aae6a81a
msgid "The following query specifies a sort on the ``amount`` field in descending order."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:158
# f4a7f43890044b4da0b84cca5a275ceb
msgid "The query returns the following documents, in descending order of ``amount``:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:170
# f34303b8351943d5a4811d3d83d152b7
msgid "The following query specifies the sort order using the fields from an embedded document ``item``. The query sorts first by the ``category`` field in ascending order, and then within each ``category``, by the ``type`` field in ascending order."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:179
# b841fe6be9fb48ad82e38872dc6569c4
msgid "The query returns the following documents, ordered first by the ``category`` field, and within each category, by the ``type`` field:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:195
# e7fdfafffc13420f8ca99ffae91ce645
msgid "Return in Natural Order"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:197
# b4a345608ff943969293a436eac1a198
msgid "The :operator:`$natural` parameter returns items according to their :term:`natural order` within the database. This ordering is an internal implementation feature, and you should not rely on any particular structure within it."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:203
# b4bc8d653cf64cb5a5501f7528c117df
msgid "Index Use"
msgstr ""

#: ../source/includes/fact-natural-parameter.rst:1
# ae5dd37f7c6f4f3d8d17b78ec138ea23
msgid "Queries that include a sort by :operator:`$natural` order do **not** use indexes to fulfill the query predicate with the following exception: If the query predicate is an equality condition on the ``_id`` field ``{ _id: <value> }``, then the query with the sort by :operator:`$natural` order can use the ``_id`` index."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:208
# 5f001e37750b408bbeb1f1055c2a05b3
msgid "MMAPv1"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:210
# e4e15643bccb4851a182cbe4f852ea64
msgid "Typically, the natural order reflects insertion order with the following exception for the MMAPv1 storage engine. For the MMAPv1 storage engine, the natural order does not reflect insertion order if the documents relocate because of :ref:`document growth <data-model-document-growth>` or remove operations free up space which are then taken up by newly inserted documents."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:217
# 1270d8ce007247acb7d2f4fbc126a483
msgid "Consider to following example which uses the MMAPv1 storage engine."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:219
# 814706c706744d2388b026110f18d939
msgid "The following sequence of operations inserts documents into the ``trees`` collection:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:229
# 41062d9eed694a22a4a3438e5b59848b
msgid "The following query returns the documents in the natural order:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:235
# fe7c17b371ac47999e9e9759d1be546b
msgid "The documents return in the following order:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:244
# f8bfa769cfa743939bf60b3f06ede8e6
msgid "Update a document such that the document outgrows its current allotted space:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:254
# 74efe6f8b74d43cfb5a354def3707802
msgid "Rerun the query to returns the documents in natural order:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:260
# 83e0fe25a1424af6b01e20ca944cf0b1
msgid "For MongoDB instances using MMAPv1, the documents return in the following natural order, which no longer reflects the insertion order:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:270
# 2b4910ed977547fbb6aa742a9e0f0c01
msgid ":operator:`$natural`"
msgstr ""

