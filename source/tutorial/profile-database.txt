.. _profile-database:
.. _query-profiler:

=========================
Monitor Query Performance
=========================

.. default-domain:: mongodb

.. facet::
   :name: genre
   :values: tutorial

.. meta::
   :keywords: profile

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

*Only available on M10+ {+clusters+} and {+serverless-instances+}*

The Query Profiler diagnoses and monitors performance issues. This
monitoring can expose slow-running queries and their key performance
statistics in the {+atlas-ui+}.

|service| collects and displays statistics from any of your :binary:`mongod <bin.mongod>`
instances. The Query Profiler identifies slow queries based on :ref:`log data <mongodb-logs>` 
from your ``mongod`` instances. |service| displays this data on 
the :guilabel:`Query Insights` tab in the :guilabel:`Query Profiler` 
section of an instance. 

.. note::

   The Query Profiler differs from the :manual:`Database Profiler 
   </tutorial/manage-the-database-profiler>`. The Query Profiler identifies 
   specific inefficient queries based on entries from your ``mongod`` logs.
   The Database Profiler returns detailed information about commands executed 
   on the ``mongod`` based on the specified :manual:`profiling level 
   </tutorial/manage-the-database-profiler/#profiling-levels>`. Changing the 
   profiling level doesn't impact the slow queries displayed in the Query 
   Profiler.

The |service| Query Profiler shows operations across your entire cluster by default.
You can select to view operations from a specific shard or nodes within a shard 
using the :guilabel:`Host Selector` dropdown. The :guilabel:`Query Insights` tab 
displays information to reveal slow database operations 
over a set time frame, such as the following:

- :guilabel:`Operation Execution Time`
- :guilabel:`Server Execution Time` ({+serverless-instances+})

It displays this data in both a chart and a table that each can filter
on aspect and time frame.

.. tip::

   You can use :query:`$comment` to add descriptive information
   that will appear in the Query Profiler to the query predicate. 
   This information makes it easier to analyze your Query Profiler data.

The |service| Query Profiler supports binning operations of the same type 
running on the same collection around the same timestamp in order to 
support additional datapoints. 

In order to support additional datapoints, the |service| Query Profiler supports 
binning operations that meet the following critera:

- The operations are of the same operation type.
- The operations are running on the same namespace.
- The operations have matching ``hasSort`` and ``usedIndex`` boolean values.
- The operations are executed around the same timestamp.

|service| manages the threshold for slow operations for each
``mongod`` host based on average operation execution time on 
that host. This threshold can be changed using the 
:method:`db.setProfilingLevel <db.setProfilingLevel>` 
{+mongosh+} command.

.. note::

   Changing the threshold for slow operations using 
   :method:`db.setProfilingLevel <db.setProfilingLevel>` can impact 
   performance and system log settings. Carefully 
   consider any performance and security implications before you use 
   :method:`db.setProfilingLevel <db.setProfilingLevel>` to adjust 
   the Query Profiler settings on a production deployment. Query 
   Profiler settings reset to default values following a node restart. 

   Additionally, zooming in on the x axis of the scatterplot will refetch slow 
   operations and may provide more detailed fidelity of slow operations during 
   the selected timeframe.

.. note::

   To opt out of the |service|-managed slow operation threshold and
   use a fixed slow query threshold of 100 milliseconds instead,
   use the {+atlas-admin-api+}. See :oas-atlas-op:`Disable Managed Slow 
   Operation Threshold </disableManagedSlowOperationThreshold>`. 
   For ``M0``, ``M2``, ``M5`` clusters and {+serverless-instances+}, 
   |service| disables the |service|-managed slow query operation 
   threshold by default and you can't enable it.

.. _atlas-considerations-profile-database:

Considerations
--------------

.. important:: Please read the following considerations before you enable the Query Profiler.

Security
~~~~~~~~

Profile data may include sensitive information including the content of
database queries. Ensure that exposing this data to |service| is
consistent with your information security practices.

Data Analysis Limitations
~~~~~~~~~~~~~~~~~~~~~~~~~

The Query Profiler displays approximately 100,000 sampled logs at a
time. It shows all the logs if 100,000 or less logs were
recorded in the selected hosts and time range.

Data Display Limitations
~~~~~~~~~~~~~~~~~~~~~~~~

|service| displays no more than 100,000 data points in the
:guilabel:`Query Profiler` charts.

Log data is processed in batches. Data can be delayed up to five
minutes from realtime.

Log Quantity
````````````

.. include:: /includes/log-rate-limiting.rst

Required Access
---------------
   
To enable or disable Performance Advisor and the Query Profiler 
for a project, you must have the :authrole:`Project Owner` role for 
the project or the :authrole:`Organization Owner` role on its parent 
organization.

Enable and Disable the Query Profiler
-------------------------------------

|service| enables the Query Profiler by default.

To disable the Query Profiler:

.. procedure::
   :style: normal

   .. include:: /includes/nav/steps-project-settings.rst

   .. step:: Disable the Query Profiler.

      In the :guilabel:`Database Monitoring Tools` section, toggle
      :guilabel:`Performance Advisor and Profiler` to :guilabel:`Off`.

.. _atlas-profiler-interface:

Access the Query Profiler
-------------------------

To access the Query Profiler:

- For a {+cluster+}:
  
  a. Click :guilabel:`View Monitoring` for that instance in the project 
     panel.
     
  #. Click the :guilabel:`Query Insights` tab.
  
  #. Click the :guilabel:`Query Profiler` tab.

  .. note::

      When you access the Query Profiler at the {+cluster+} level, the 
      Query Profiler displays the all your data from the log on the 
      :term:`primary` and :term:`secondary` nodes.

- For a {+serverless-instance+}, click the :guilabel:`Monitoring` tab.

.. _atlas-profiler-chart:

Query Profiler Chart
~~~~~~~~~~~~~~~~~~~~

Above the chart, select the metric and time period you want to see.

1. Select the metric from the :guilabel:`Display` menu. |service| 
   accepts:

   - Default: :guilabel:`Operation Execution Time` or 
     :guilabel:`Server Execution Time` ({+serverless-instances+})

   - :guilabel:`Keys Examined`
   - :guilabel:`Docs Returned`
   - :guilabel:`Examined:Returned Ratio`
   - :guilabel:`Num Yields`
   - :guilabel:`Response Length`

#. Select the time period from the :guilabel:`View Last` menu.
   |service| accepts:

   - 5 days
   - 24 hr (default)
   - 12 hr
   - 8 hr
   - 1 hr
   - 10 min

To view a full query and its execution statistics, click on the point 
representing it on the chart. You can also click and drag along the x and y axes
to zoom in on a specific subset of collected data. Viewing more details on a 
binned group of operations selects a random operation from the group. 
You must zoom in to view details about a particular operation within a binned 
group of operations. 

.. _atlas-profiler-table:
.. _atlas-profiler-table-set-filter:

Query Profiler Table
~~~~~~~~~~~~~~~~~~~~

Above the table, select the namespace, operation type, and metric you
wish to profile:

1. Click :guilabel:`All Namespaces` to change which combination of
   databases and collections to profile.

#. Click :guilabel:`All Operations` to change which operations you want
   to profile.

#. Click :guilabel:`Operation Execution Time` or 
   :guilabel:`Server Execution Time` ({+serverless-instances+}) to 
   change which metric you want to profile. |service| accepts:

   - Default: :guilabel:`Operation Execution Time` or 
     :guilabel:`Server Execution Time` ({+serverless-instances+})

   - :guilabel:`Keys Examined`
   - :guilabel:`Docs Returned`
   - :guilabel:`Examined:Returned Ratio`
   - :guilabel:`Num Yields`
   - :guilabel:`Response Length`
