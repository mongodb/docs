.. _atlasproject-custom-resource:

================================
``AtlasProject`` Custom Resource
================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

The ``AtlasProject`` custom resource configures the project in 
|service|. When you create the ``AtlasProject`` custom resource, 
|ak8so| tries to create a new project in |service|.
   
|ak8so| does one of the following actions:
   
- Creates a new project in the organization that the connection 
  |k8s-secret| configures.
- Reuses an existing project. In this case, |ak8so| verifies 
  whether a project with ``spec.name`` exists. If the project exists, 
  |ak8so| skips creation. After the reconciliation, |ak8so| updates 
  the ``status.id`` field with the id of the project.

The ``AtasProject`` custom resouce has an optional 
:setting:`spec.connectionSecretRef.name` parameter. This parameter 
overrides the default ``global`` connection |k8s-secret|. To 
:ref:`connect <ak8so-access-to-atlas-ref>` to the {+atlas-admin-api+}, 
|ak8so| reads the organization ID and :ref:`API keys 
<about-org-api-keys>` from |ak8so| |k8s-secrets|.
   
You can also edit the ``AtlasProject`` custom resource specification to 
configure the following options:

- An :ref:`IP access list <add-to-access-list>` with the 
  :setting:`spec.projectIpAccessList` parameter. This IP access list 
  grants network access to |service| clusters in the project.

- The :ref:`maintenance window <configure-maintenance-window>` with
  the :setting:`spec.maintenanceWindow` parameter. The maintenance
  window sets the hour and day that |service| starts weekly
  maintenance on your {+database-deployments+}.

- :ref:`Network peering <ak8so-network-peering>` with the
  :setting:`spec.networkPeers` parameter. Network peering allows you to
  connect securely to your |aws|, |azure|, or |gcp| |vpc|.

- :ref:`Private endpoints <ak8so-private-endpoint>` with the 
  :setting:`spec.privateEndpoints` parameter.

- :ref:`X.509 authentication <ak8so-x509>` with the
  :setting:`spec.X509CertRef.name` parameter.
   
If you remove the ``AtlasProject`` resource from your |k8s| cluster, 
|ak8so| removes the project from |service|. You must remove all the 
clusters in the project beforehand. Otherwise, |service| rejects the 
delete request.

Example
-------

The following example shows an ``AtlasProject`` custom resource 
specification:

.. code-block::

   apiVersion: atlas.mongodb.com/v1
   kind: AtlasProject
   metadata:
    name: my-project
   spec:
    name: Test project
    connectionSecretRef:
      name: my-atlas-key
    projectIpAccessList:
      - ipAddress: "192.0.2.15"
        comment: "IP address for Application Server A"
      - cidrBlock: "203.0.113.0/24"
        comment: "CIDR block for Application Server B - D" 
   status:
     conditions:
     - lastTransitionTime: "2021-03-18T16:32:19Z"
       status: "True"
       type: Ready
     - lastTransitionTime: "2021-03-18T16:32:19Z"
       status: "True"
       type: ProjectReady
     - lastTransitionTime: "2021-03-18T16:32:19Z"
       status: "True"
       type: IPAccessListReady
     id: 604a47de73cdsfh1977239021
     observedGeneration: 1

.. _prometheus-example:

Prometheus Example
------------------

The following example shows an ``AtlasProject`` custom resource 
specification that integrates with Prometheus:

.. code-block::

   apiVersion: atlas.mongodb.com/v1
   kind: AtlasProject
   metadata:
     name: my-project
   spec:
     name: TestPrometheusIntegration
     connectionSecretRef:
       name: my-atlas-key
     projectIpAccessList:
       - ipAddress: "0.0.0.0/1"
         comment: "Everyone has access. For test purposes only."
       - ipAddress: "128.0.0.0/1"
         comment: "Everyone has access. For test purposes only."
     integrations:
       - type: "PROMETHEUS"
         enabled: "true"
         username: "prometheus-user"
         passwordRef:
           name: "password-name"
           namespace: "password-namespace"
         scheme: "http"
         serviceDiscovery: "http"

To learn more, see :ref:`ak8so-integrate-third-party`.

.. include:: /includes/fact-ak8so-grafana.rst

.. _maintenance-window-example:

Maintenance Window Example
--------------------------

The following example shows an ``AtlasProject`` custom resource 
specification that sets the maintenance window to 5:00 AM every Tuesday with automatic deferral disabled:

.. code-block::

   apiVersion: atlas.mongodb.com/v1
   kind: AtlasProject
   metadata:
    name: my-project
   spec:
    name: Test project
    projectIpAccessList:
      - ipAddress: "192.0.2.15"
        comment: "IP address for Application Server A"
   maintenanceWindow:
    dayOfWeek: 3
    hourOfDay: 5
    autoDefer: false

Parameters
----------

This section describes the ``AtlasProject`` custom resource parameters:

.. setting:: spec.name

   *Type*: string

   *Required*

   Name of the project created or updated in |service|. The name 
   length must not exceed 64 characters. The name can contain only 
   letters, numbers, spaces, dashes, and underscores.

.. setting:: spec.connectionSecretRef.name

   *Type*: string

   *Optional*

   Name of the |k8s-secret| with the organization ID and :ref:`API keys 
   <about-org-api-keys>` that |ak8so| uses to :ref:`connect 
   <ak8so-access-to-atlas-ref>` to |service|. 
   If unspecified, |ak8so| uses the default ``global`` secret.

.. setting:: spec.cloudProviderAccessRoles

   *Type*: array

   *Optional*

   List that contains your :ref:`unified cloud provider access 
   <ak8so-unified-access>` settings.

.. setting:: spec.cloudProviderAccessRoles.iamAssumedRoleArn

   *Type*: string

   *Conditional*

   Unique |aws| |arn| that identifies the |iam| access role that 
   |service| assumes. If you want to 
   :ref:`set up unified cloud provider access <ak8so-unified-access>`,
   you must specify this setting.

.. setting:: spec.cloudProviderAccessRoles.providerName

   *Type*: string

   *Conditional*

   Cloud provider for the access role that |service| assumes. |ak8so|
   supports ``AWS`` for unified cloud provider access. If you want to
   :ref:`set up unified cloud provider access 
   <ak8so-unified-access>`, you must specify this setting.

.. setting:: spec.integrations

   *Type*: array

   *Optional*

   List that contains your :ref:`third-party integration 
   <ak8so-integrate-third-party>` settings. The parameters that you 
   must specify depend on the third-party service that you want to 
   configure:

   .. include:: /includes/list-tabel-integration-settings.rst

.. setting:: spec.integrations.accountId

   *Type*: string

   *Conditional*

   Unique string that identidies your New Relic account. If you want to 
   integrate with New Relic, you must specify this setting.

.. setting:: spec.integrations.apiKeyRef.name

   *Type*: string

   *Conditional*

   Human-readable label that identifies your API key for Datadog, 
   Opsgenie, or VictorOps. If you want to integrate with Datadog, 
   Opsgenie, or VictorOps, you must specify this setting.

.. setting:: spec.integrations.apiKeyRef.namespace

   *Type*: string

   *Conditional*

   Namespace that contains your API key for Datadog, Opsgenie, or 
   VictorOps. If you want to integrate with Datadog, 
   Opsgenie, or VictorOps, you must specify this setting.

.. setting:: spec.integrations.apiTokenRef.name

   *Type*: string

   *Conditional*

   Human-readable label that identifies your API token for Slack or 
   Flowdock. If you want to integrate with Slack or Flowdock, you must 
   specify this setting.

.. setting:: spec.integrations.apiTokenRef.namespace

   *Type*: string

   *Conditional*

   Namespace that contains your API token or Slack or Flowdock. If you 
   want to integrate with Slack or Flowdock, you must specify this 
   setting.

.. setting:: spec.integrations.enabled

   *Type*: boolean

   *Conditional*

   Flag that indicates whether your {+cluster+} has Prometheus enabled. 
   If you want to integrate with Prometheus, you must specify this 
   setting as ``true``. 

.. setting:: spec.integrations.flowName

   *Type*: string

   *Conditional*

   Human-readable label that identifies your Flowdock flow. If you want 
   to integrate with Flowdock, you must specify this setting.

.. setting:: spec.integrations.licenseKeyRef.name

   *Type*: string

   *Conditional*

   Human-readable label that identifies your license key for New Relic. 
   If you want to integrate with New Relic, you must specify this 
   setting.

.. setting:: spec.integrations.licenseKeyRef.namespace

   *Type*: string

   *Conditional*

   Namespace that contains your license key for New Relic. If you want 
   to integrate with New Relic, you must specify this setting.

.. setting:: spec.integrations.microsoftTeamsWebhookURL

   *Type*: string

   *Conditional*

   String that specifies your Microsoft Teams incoming webhook |url|. 
   If you want to integrate with Mircosoft Teams, you must specify this 
   setting.

.. setting:: spec.integrations.orgName

   *Type:* string

   *Conditional*

   Human-readable string that identifies your Flowdock organization. If 
   you want to integrate with Flowdock, you must specify this setting.

.. setting:: spec.integrations.passwordRef.name

   *Type:* string

   *Conditional*

   Human-readable label that identifies your Prometheus password. If 
   you want to integrate with Prometheus, you must specify this setting.

.. setting:: spec.integrations.passwordRef.namespace

   *Type:* string

   *Conditional*

   Namespace that contains your Prometheus password. If you want to 
   integrate with Prometheus, you must specify this setting. 

.. setting:: spec.integrations.readTokenRef.name

   *Type*: string

   *Conditional*

   Human-readable label that identifies your Insights Query Key for New 
   Relic. If you want to integrate with New Relic, you must specify 
   this setting.

.. setting:: spec.integrations.readTokenRef.namespace

   *Type*: string

   *Conditional*

   Namespace that contains your Insights Query Key for New Relic. If 
   you want to integrate with New Relic, you must specify this setting.

.. setting:: spec.integrations.region

   *Type*: string

   *Conditional*

   *Default*: ``US``

   String value that indicates the API URL to use for Datadog or 
   Opsgenie. If you want to integrate 
   with Datadog or Opsgenie, you must specify this setting.

   Values for Opsgenie include ``US`` or ``EU``. 

   .. include:: /includes/fact-datadog-supported-regions-api.rst

.. setting:: spec.integrations.routingKeyRef.name

   *Type*: string

   *Conditional*

   Human-readable label that identifies your routing key for VictorOps. 
   If you want to integrate with VictorOps, you must specify this 
   setting.

.. setting:: spec.integrations.routingKeyRef.namespace

   *Type*: string

   *Conditional*

   Namespace that contains your routing key for VictorOps. If you want 
   to integrate with VictorOps, you must specify this setting.

.. setting:: spec.integrations.secretRef.name

   *Type*: string

   *Conditional*

   Human-readable label that identifies your Webhook secret. If you 
   want to integrate with Webhook Settings, you must specify this 
   setting.

.. setting:: spec.integrations.secretRef.namespace

   *Type*: string

   *Conditional*

   Namespace that contains your Webhook secret. If you 
   want to integrate with Webhook Settings, you must specify this 
   setting.

.. setting:: spec.integrations.scheme

   *Type*: string

   *Conditional*

   String that indicates the Prometheus protocol scheme configured for 
   requests. Values include ``http`` or ``https``. If you want to 
   integrate with Prometheus, you must specify this setting.

.. setting:: spec.integrations.serviceDiscovery

   *Type*: string

   *Conditional*

   Human-readable label that indicates the Prometheus service discovery 
   method to use. Values include ``file`` or ``http``. If you want to 
   integrate with Prometheus, you must specify this setting.

.. setting:: spec.integrations.serviceKeyRef.name

   *Type*: string

   *Conditional*

   Human-readable label that identifies your service key for PagerDuty. 
   If you want to integrate with PagerDuty, you must specify this 
   setting.

.. setting:: spec.integrations.serviceKeyRef.namespace

   *Type*: string

   *Conditional*

   Namespace that contains your service key for PagerDuty. If you want 
   to integrate with PagerDuty, you must specify this setting.

.. setting:: spec.integrations.type

   *Type*: string

   *Conditional*

   String value that indicates the third-party service to integrate 
   with |service|. Values include:

   - ``DATADOG``
   - ``FLOWDOCK``
   - ``MICROSOFT_TEAMS``
   - ``NEW_RELIC``
   - ``OPS_GENIE``
   - ``PAGER_DUTY``
   - ``PROMETHEUS``
   - ``SLACK``
   - ``VICTOR_OPS``
   - ``WEBHOOK``

   If you want to integrate with a third-party service, you must 
   specify this setting.

.. setting:: spec.integrations.url

   *Type*: string

   *Conditional*

   String that specifies your Webhook |url|. If you want to integrate 
   with Webhook Settings, you must specify this setting.

.. setting:: spec.integrations.username

   *Type*: string

   *Conditional*

   Human-readable label that identifies the Prometheus user. If you 
   want to integrate with Prometheus, you must specify this setting.

.. setting:: spec.integrations.writeTokenRef.name

   *Type*: string

   *Conditional*

   Human-readable label that identifies your write token for New Relic. 
   If you want to integrate with New Relic, you must specify this 
   setting.

.. setting:: spec.integrations.writeTokenRef.namespace

   *Type*: string

   *Conditional*

   Namespace that contains your write token for New Relic. If you want 
   to integrate with New Relic, you must specify this setting.

.. setting:: spec.maintenanceWindow

   *Type*: object

   *Optional*

   List that contains your maintenance window settings. You can specify
   the following body parameters:

   .. include:: /includes/api/list-tables/maintenance-window-request.rst

   .. include:: /includes/fact-urgent-maintenance.rst

.. setting:: spec.maintenanceWindow.autoDefer

   *Type*: boolean

   *Conditional*

   Flag that indicates whether |service| should defer all maintenance
   windows for one week after you enable them.

.. setting:: spec.maintenanceWindow.defer

   *Type*: boolean

   *Conditional*

   Flag that indicates whether |service| should defer scheduled
   maintenance. You must schedule maintenance before you can
   successfully defer maintenance. 
   :setting:`spec.maintenanceWindow.defer` and 
   :setting:`spec.maintenanceWindow.startASAP` can't both be set to
   ``true`` at the same time.

   .. important::

      While :setting:`spec.maintenanceWindow.defer` is set to ``true``,
      |ak8so| defers scheduled maintenance every time you apply changes
      to the ``AtlasProject`` custom resource. If you set
      :setting:`spec.maintenanceWindow.defer` to ``true``, you should
      change :setting:`spec.maintenanceWindow.defer` to ``false`` after
      you apply changes.

.. setting:: spec.maintenanceWindow.dayOfWeek

   *Type*: number

   *Conditional*

   One-based integer that represents the day of the week that the
   maintenance window starts. Use the following table to find the
   integer that corresponds to each day:
   
   .. list-table::
      :header-rows: 1
      :widths: 60 40

      * - Day of Week
        - Integer

      * - Sunday
        - **1**

      * - Monday
        - **2**

      * - Tuesday
        - **3**

      * - Wednesday
        - **4**

      * - Thursday
        - **5**

      * - Friday
        - **6**

      * - Saturday
        - **7**
   
   If you want to configure the maintenance window for your project,
   you must specify this setting.

.. setting:: spec.maintenanceWindow.hourOfDay

   *Type*: number

   *Conditional*

   Zero-based integer that represents the hour of the of the day that
   the maintenance window starts according to a 24-hour clock. Use
   ``0`` for midnight and ``12`` for noon. If you want to configure the
   maintenance window for your project, you must specify this setting.

.. setting:: spec.maintenanceWindow.startASAP

   *Type*: boolean

   *Conditional*

   Flag that indicates whether |service| should immediately start
   maintenance. :setting:`spec.maintenanceWindow.defer` and
   :setting:`spec.maintenanceWindow.startASAP` can't both be set to
   ``true`` at the same time.

   .. important::

      While :setting:`spec.maintenanceWindow.startASAP` is set to
      ``true``, |ak8so| starts maintenance every time you apply changes
      to the ``AtlasProject`` custom resource. If you set
      :setting:`spec.maintenanceWindow.startASAP` to ``true``, you
      should change :setting:`spec.maintenanceWindow.startASAP` to
      ``false`` after you apply changes.

.. setting:: spec.networkPeers

   *Type*: array

   *Optional*

   List that contains the :ref:`network peering 
   <ak8so-network-peering>` configurations for the project.

.. setting:: spec.projectIpAccessList

   *Type*: array

   *Required*

   IP access list that grants network access to |service| clusters in 
   the project. You can specify the following body parameters:

   .. include:: /includes/api/list-tables/requests/access-list.rst

.. setting:: spec.privateEndpoints

   *Type*: array

   *Optional*

   List that contains the :ref:`private endpoint 
   <ak8so-private-endpoint>` configurations for the project.
 
.. setting:: spec.X509CertRef.name

   *Type*: string

   *Optional*

   Human-readable label that identifies the |k8s-secret| for the 
   :ref:`X.509 certificate <ak8so-x509>`.
