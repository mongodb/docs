.. _create-cluster-storage:

=========================
Customize Cluster Storage
=========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Each cluster tier comes with a default set of resources.
Clusters of size M10 and larger provide the ability to customize
your storage capacity.

.. figure:: /images/customize-storage.png
   :figwidth: 720px
   :alt: Image showing storage customization

|service| provides the following storage configuration options,
depending on the selected cloud provider and cluster tier.

.. _storage-class-ui:

Cluster Class
-------------

Clusters of size M40 and larger offer multiple options, including:

- :guilabel:`Low CPU`
- :guilabel:`General`
- :guilabel:`Local NVM SSD`

All production environments can use the :guilabel:`General` option.

Select the :guilabel:`Class` box with your preferred speed.
Changes to cluster class affect :ref:`cost <instance-size-costs>`.

.. _storage-class-low-cpu-ui:

Low CPU Class
~~~~~~~~~~~~~

The :guilabel:`Low CPU` option offers a lower-cost alternative for 
applications that require more memory and fewer CPUs. This option 
includes half the vCPUs of an instance with the :guilabel:`General` 
option. For example, a :guilabel:`General` M40 instance includes 4 
vCPUs, while a :guilabel:`Low CPU` M40 instance includes 2 vCPUs. 
Depending on the cluster tier, this option may also include fewer max connections. For more information, see :ref:`connection-limits`.

NVMe Storage on AWS
~~~~~~~~~~~~~~~~~~~



AWS-backed clusters have the additional option of using
:guilabel:`Local NVMe SSD` storage. Locally attached ephemeral
:ref:`NVMe SSDs <nvme-storage>` offer the highest level of speed and
performance.

.. _storage-capacity-ui:

Storage Capacity
----------------

The size of the server data volume. To change this, either:

- Specify the exact disk size in the text box, *or*

- Move the slide bar until the text box displays your preferred disk
  size.

Changes to storage capacity affect :ref:`cost <instance-size-costs>`.

.. note::

   MongoDB uses a small portion of your specified storage capacity for
   buffer files, journal files, and log files to ensure proper cluster
   operation.

Oplog Scaling Behavior
~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/autoscale-oplog.rst

.. _change-storage-capacity-aws:

Changing Storage Capacity on |aws|
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

|aws| allows one storage capacity upgrade every six hours. When you
upgrade a cluster's storage capacity for the first time during a
six-hour period, |service| modifies the size of the servers' data
volumes with zero downtime. If you upgrade the cluster's storage
capacity again within six hours, |service| provisions new volumes and
synchronizes data from the old to the new volumes to work around the
|aws| limitation. During this time, you can still access your cluster,
but each node that |aws| modifies is unavailable until |aws| attaches
the new volume.

|aws| does not allow in-place storage capacity downgrades. If you
downgrade a cluster's storage capacity, |service| provisions new
volumes and synchronizes data from the old to the new volumes to work
around the |aws| limitation. During this time, you can still access
your cluster, but each node that |aws| modifies is unavailable until
|aws| attaches the new volume.

This behavior also applies when you enable storage auto-scaling and
|service| changes cluster storage.

To learn more about |aws| volume modification limitations, see
:aws:`Requirements When Modifying Volumes </AWSEC2/latest/UserGuide/modify-volume-requirements.html#elastic-volumes-limitations>`
in the |aws| documentation.

.. _change-storage-capacity-azure:

Changing Storage Capacity on |azure|
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

When you change a cluster's storage capacity, |service| modifies the
size of the servers' data volumes in a rolling manner with zero
downtime.

|service| increases the storage capacity in place without copying data
or performing an :manual:`initial sync </core/replica-set-sync/#initial-sync>`.
However, |azure| does not allow in-place storage capacity downgrades.
If you downgrade a cluster's storage capacity, |service| replaces each
node and performs an initial sync for each node in the cluster.

.. note::

   An initial sync copies data across the network and rebuilds all
   indexes.

During this time, you can still access your cluster, but each node that
|azure| modifies is unavailable until the initial sync for that node
completes.

.. important::

   For large clusters, initial syncs for each node might take several
   hours to complete.

.. _change-storage-capacity-multi:

Changing Storage Capacity for Multi-Cloud Provider Clusters
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

|service| selects the lowest common denominator across the three
cloud providers. This ensures consistency across the multi-cloud deployment.

You can't adjust the |iops| for your multi-cloud cluster.

If your multi-cloud cluster includes |azure|, storage capacity can be
changed only in preset increments.

.. _storage-iops-ui:

IOPS (configurable for AWS only)
--------------------------------

.. include:: /includes/cluster-settings/provision-iops-note.rst

.. _configuration-storage-considerations:

Minimum Disk Capacity to RAM Ratios
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-aws-minimum-iops.rst

|service| has a 4 TB disk capacity limit on a single replica set,
regardless of cluster tier. To expand total cluster storage beyond 4
TB, enable :ref:`sharding <cluster-option-sharding>`.

.. seealso::

   To learn more about the default resources and available
   configuration options for each cloud service provider, see:

   - :ref:`AWS Configuration Options <amazon-aws-configuration-options>`
   - :ref:`GCP Configuration Options <google-gcp-configuration-options>`
   - :ref:`Azure Configuration Options <microsoft-azure-configuration-options>`.

Auto-Scale Cluster Tier and Storage Capacity
--------------------------------------------

.. include:: /includes/fact-auto-scaling-availability.rst

Use :guilabel:`Auto-scale` options to configure your cluster to
automatically scale your cluster tier, storage capacity, or both in
response to cluster usage. Cluster storage auto-scaling is enabled by
default.

.. include:: /includes/fact-auto-scaling-and-migration.rst

.. figure:: /images/autoscale.png
   :figwidth: 720px
   :alt: Image showing the auto-scaling cluster options.

To configure your cluster to automatically scale its cluster tier,
check the :guilabel:`Cluster tier` checkbox. When you
enable cluster tier scaling, by default, your cluster can only scale
up. To allow your cluster to scale down, check the
:guilabel:`Allow cluster to be scaled down` checkbox. Specify a
range of cluster tiers to which your cluster can scale.

To opt out of cluster storage scaling, un-check the :guilabel:`Storage`
checkbox.

To learn more about cluster auto-scaling and when auto-scaling occurs,
see :ref:`how-auto-scale-works`.

.. seealso:: 

   - :ref:`cluster-autoscaling`
   - :ref:`connection-limits`
