# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/query/expr.txt:3
msgid "$expr"
msgstr ""

#: ../source/reference/operator/query/expr.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/operator/query/expr.txt:20
msgid "Allows the use of aggregation expressions within the query language."
msgstr ""

#: ../source/reference/operator/query/expr.txt:23
msgid ":query:`$expr` has the following syntax:"
msgstr ""

#: ../source/reference/operator/query/expr.txt:29
msgid "The arguments can be any valid :ref:`expression <aggregation-expressions>`. For more information on expressions, see :ref:`aggregation-expressions`."
msgstr ""

#: ../source/reference/operator/query/expr.txt:34
msgid "Behavior"
msgstr ""

#: ../source/reference/operator/query/expr.txt:36
msgid ":query:`$expr` can build query expressions that compare fields from the same document in a :pipeline:`$match` stage."
msgstr ""

#: ../source/reference/operator/query/expr.txt:39
msgid "If the :pipeline:`$match` stage is part of a :pipeline:`$lookup` stage, :query:`$expr` can compare fields using ``let`` variables. See :ref:`lookup-multiple-joins` for an example."
msgstr ""

#: ../source/reference/operator/query/expr.txt:44
msgid "Examples"
msgstr ""

#: ../source/reference/operator/query/expr.txt:47
msgid "Compare Two Fields from A Single Document"
msgstr ""

#: ../source/reference/operator/query/expr.txt:49
msgid "Consider an ``monthlyBudget`` collection with the following documents:"
msgstr ""

#: ../source/reference/operator/query/expr.txt:59
msgid "The following operation uses :query:`$expr` to find documents where the ``spent`` amount exceeds the ``budget``:"
msgstr ""

#: ../source/reference/operator/query/expr.txt:66
#: ../source/reference/operator/query/expr.txt:111
msgid "The operation returns the following results:"
msgstr ""

#: ../source/reference/operator/query/expr.txt:76
msgid "Using ``$expr`` With Conditional Statements"
msgstr ""

#: ../source/reference/operator/query/expr.txt:78
msgid "Consider a ``supplies`` collection with the following documents. If the ``qty`` is at least ``100``, a ``50%`` discount is applied. Otherwise, a ``25%`` discount is applied:"
msgstr ""

#: ../source/reference/operator/query/expr.txt:89
msgid "The following operation uses :query:`$expr` with :expression:`$cond` to mimic a conditional statement. It finds documents where the ``price`` is less than ``5`` after the applied discounts."
msgstr ""

#: ../source/reference/operator/query/expr.txt:93
msgid "If the document has a ``qty`` value greater than or equal to ``100``, the query divides the ``price`` by ``2``. Otherwise, it divides the ``price`` by ``4``:"
msgstr ""

