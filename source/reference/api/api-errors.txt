======================
Atlas API Error Codes
======================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: twocols

.. _400: https://httpstatuses.com/400
.. _401: https://httpstatuses.com/401
.. _402: https://httpstatuses.com/402
.. _403: https://httpstatuses.com/403
.. _404: https://httpstatuses.com/404
.. _409: https://httpstatuses.com/409
.. _429: https://httpstatuses.com/429
.. _500: https://httpstatuses.com/500


.. raw:: html

   <style type="text/css">
     code.descname { font-size: 80% }
   </style>

.. list-table::
   :header-rows: 1
   :widths: 40 5 45


   * - Error
     - HTTP Code
     - Description

   * - .. apierror:: ADDRESS_ALREADY_IN_WHITELIST
     - `409`_
     - The specified address is already on the whitelist.

   * - .. apierror:: ALREADY_EXPIRED
     - `400`_
     - Cannot update an entity that has already expired.

   * - .. apierror:: API_KEY_CANNOT_CREATE_GROUP
     - `401`_
     - :ref:`API Keys <atlas-prog-api-key>` cannot create
       :doc:`groups </tutorial/manage-projects>`.

   * - .. apierror:: API_KEY_CANNOT_CREATE_ORG
     - `401`_
     - :ref:`API Keys <atlas-prog-api-key>` cannot create
       :doc:`organizations </tutorial/manage-organizations>`.

   * - .. apierror:: API_KEY_NOT_FOUND
     - `400`_
     - No :ref:`API Key <atlas-prog-api-key>` with ID {API-KEY-ID}
       exists.

   * - .. apierror:: API_KEY_WHITELIST_ACCESS_DENIED
     - `400`_
     - :ref:`API Key <atlas-prog-api-key>` whitelists are only
       accessible by the API Key or by a user administrator.

   * - .. apierror:: API_KEY_WHITELIST_NOT_FOUND
     - `404`_
     - The specified IP address does not exist in the
       corresponding :ref:`API Key <atlas-prog-api-key>` whitelist.

   * - .. apierror:: ATLAS_FTS_ANALYZER_NAME_NOT_UNIQUE
     - `400`_
     - :ref:`Analyzer <analyzers-ref>` names must be unique within
       each cluster.

   * - .. apierror:: ATLAS_FTS_ANALYZER_NAME_CANNOT_REUSED
     - `400`_
     - Built-in :ref:`analyzer <analyzers-ref>` names may not be used
       for user-defined analyzers.

   * - .. apierror:: ATLAS_BACKUP_CANCEL_SHARD_RESTORE_JOB_NOT_ALLOWED
     - `500`_
     - Cannot cancel a restore job of an individual shard. Please
       cancel the entire sharded cluster restore job.

   * - .. apierror:: ATLAS_BACKUP_CONFLICTING_OPTIONS
     - `409`_
     - Cannot turn backupEnabled and providerBackupEnabled on at the
       same time.

   * - .. apierror:: ATLAS_BACKUP_TYPE_SWAP_NOT_ALLOWED
     - `409`_
     - Cannot flip backupEnabled and providerBackupEnabled at the same
       time. Please do in two phases.

   * - .. apierror:: ATLAS_CLUSTER_VERSION_DEPRECATED
     - `400`_
     - MongoDB version is deprecated in Atlas.

   * - .. apierror:: ATLAS_CUSTOM_ROLE_HAS_NO_PERMISSIONS
     - `400`_
     - Custom roles must have one or more user privilege actions or
       inherited roles.

   * - .. apierror:: ATLAS_CUSTOM_ROLE_IN_USE_BY_ROLES
     - `409`_
     - Deleting specified custom role would leave the following roles
       with no actions or inherited roles <variable>.

   * - .. apierror:: ATLAS_CUSTOM_ROLE_IN_USE_BY_USERS
     - `409`_
     - Deleting specified custom role would leave the following users
       without a role <variable>.

   * - .. apierror:: ATLAS_CUSTOM_ROLE_INVALID_NAME
     - `400`_
     - The role name, \<variable>\

   * - .. apierror:: ATLAS_CUSTOM_ROLE_NAME_ALREADY_EXISTS
     - `409`_
     - A custom role with the name <variable> already exists.

   * - .. apierror:: ATLAS_CUSTOM_ROLE_NOT_FOUND
     - `404`_
     - The specified custom db role <variable> does not exist.

   * - .. apierror:: ATLAS_DUPLICATE_CUSTOM_ROLE_ACTION
     - `400`_
     - A custom role cannot have duplicate actions.

   * - .. apierror:: ATLAS_FTS_DUPLICATE_INDEX
     - `400`_
     - The collection already has a |fts| index with the specified
       name. A collection cannot have multiple indexes with the same
       name.

   * - .. apierror:: ATLAS_GENERAL_ERROR
     - `400`_
     - Reason <variable>.

   * - .. apierror:: ATLAS_GROUP
     - `404`_
     - Group <variable> is an Atlas group; use the Atlas Public API at
       /api/atlas/v1.0 to access it.

   * - .. apierror:: ATLAS_INVALID_AUTH_SETTINGS
     - `400`_
     - Invalid authentication settings. Users cannot be configured for
       SCRAM and LDAP authentication.

   * - .. apierror:: ATLAS_INVALID_CIDR_BLOCK
     - `400`_
     - Atlas CIDR <variable> must be a /21 block.

   * - .. apierror:: ATLAS_INVALID_CIDR_RANGE
     - `400`_
     - Atlas CIDR <variable> must be in private range.

   * - .. apierror:: ATLAS_INVALID_CUSTOM_ROLE_ASSIGNMENT
     - `400`_
     - If assigned a custom DB role, a user can only be assigned one
       role.

   * - .. apierror:: ATLAS_INVALID_CUSTOM_ROLE_CIRCULAR_DEPENDENCY
     - `400`_
     - One or more of the specified inherited roles creates a circular
       dependency.

   * - .. apierror:: ATLAS_INVALID_CUSTOM_ROLE_INHERITANCE
     - `400`_
     - One or more of the specified inherited roles do not exist.

   * - .. apierror:: ATLAS_INVALID_CUSTOM_ROLE_INHERITED_SCOPE
     - `400`_
     - One or more of the specified inherited roles have an invalid
       scope.

   * - .. apierror:: ATLAS_INVALID_CUSTOM_ROLE_RESTRICTED
     - `400`_
     - Cannot create custom role <variable> because a built-in role
       with that name already exists.

   * - .. apierror:: ATLAS_INVALID_CUSTOM_ROLE_SELF_REFERENTIAL
     - `400`_
     - A custom DB role cannot inherit from itself.

   * - .. apierror:: ATLAS_INVALID_LDAP_NAME
     - `400`_
     - The LDAP name specified in the username field, <variable>, is
       not a valid LDAP name according to RFC 2253.

   * - .. apierror:: ATLAS_INVALID_MAINTENANCE_WINDOW_DAY_OF_WEEK
     - `400`_
     - Invalid Day of Week. Value should be between 1 and 7 ,Sunday =
       1).

   * - .. apierror:: ATLAS_INVALID_MAINTENANCE_WINDOW_HOUR_OF_DAY
     - `400`_
     - Invalid Hour of Day. Value should be between 0 and 23.

   * - .. apierror:: ATLAS_INVALID_RESOURCE
     - `400`_
     - One or more of the selected actions was applied to an incorrect
       resource.

   * - .. apierror:: ATLAS_INVALID_ROLE
     - `400`_
     - The specified role <variable>@<variable> does not exist.

   * - .. apierror:: ATLAS_INVALID_ROLE_DATABASE
     - `400`_
     - The specified role <variable> only exists for database
       <variable>.

   * - .. apierror:: ATLAS_INVALID_USERNAME
     - `400`_
     - The specified username <variable> is not valid for an Atlas
       database user.

   * - .. apierror:: ATLAS_MAINTENANCE_ALREADY_SCHEDULED
     - `400`_
     - The upcoming maintenance has already been scheduled. The
       maintenance window cannot be adjusted until current maintenance
       is finished.

   * - .. apierror:: ATLAS_MAINTENANCE_NOT_SCHEDULED
     - `400`_
     - There is no maintenance scheduled for this project.

   * - .. apierror:: ATLAS_MAINTENANCE_WINDOW_NOT_DEFINED
     - `400`_
     - No maintenance window defined for project. This action is only
       supported for projects with user defined maintenance windows.

   * - .. apierror:: ATLAS_NETWORK_PERMISSIONS_LIMIT_EXCEEDED
     - `403`_
     - Too many network permission entries. Only <variable> entries are
       supported.

   * - .. apierror:: ATLAS_NUM_MAINTENANCE_DEFERRALS_EXCEEDED
     - `400`_
     - Scheduled maintenance for a group cannot be deferred more than
       twice.

   * - .. apierror:: ATLAS_RESERVED_CUSTOM_ROLE_RESTRICTED
     - `400`_
     - Cannot create custom role <variable> because the prefix \xgen-\
       is reserved for built-in roles.

   * - .. apierror:: ATLAS_RESTRICTED_COLLECTION
     - `400`_
     - The specified collection <variable> for the role
       <variable>@<variable> is restricted.

   * - .. apierror:: ATLAS_RESTRICTED_ROLE
     - `400`_
     - The specified role <variable>@<variable> is restricted.

   * - .. apierror:: ATLAS_USER_NOT_USER_EDITABLE
     - `400`_
     - This user can only be edited by the system.

   * - .. apierror:: ATLAS_WHITELIST_NOT_FOUND
     - `404`_
     - IP Address <variable> not on Atlas whitelist for group
       <variable>.

   * - .. apierror:: ATTRIBUTE_READ_ONLY
     - `400`_
     - The attribute <variable> is read-only and cannot be changed by
       the user.

   * - .. apierror:: AUTH_TYPE_CANNOT_BE_CHANGED
     - `409`_
     - Cannot modify the authentication type of an existing database
       user.

   * - .. apierror:: AUTOMATED_RESTORE_OF_SHARD_NOT_ALLOWED
     - `400`_
     - Not allowed to do an automated restore of individual shard
       snapshots of a sharded cluster.

   * - .. apierror:: AUTOSCALING_UNSUPPORTED
     - `400`_
     - Cannot set auto-scaling. <variable>.

   * - .. apierror:: AWS_CUSTOMER_MASTER_KEY_NOT_FOUND
     - `404`_
     - No AWS customer master key found for group <variable>.

   * - .. apierror:: AWS_KMS_CUSTOMER_MASTER_KEY_NOT_ENABLED
     - `400`_
     - AWS KMS Customer Master Key is not enabled.

   * - .. apierror:: AWS_KMS_CUSTOMER_MASTER_KEY_PENDING_DELETION
     - `400`_
     - AWS KMS Customer Master Key is pending deletion.

   * - .. apierror:: AWS_KMS_CUSTOMER_MASTER_KEY_PENDING_IMPORT
     - `400`_
     - AWS KMS Customer Master Key is pending import.

   * - .. apierror:: AWS_KMS_REGION_NOT_SUPPORTED
     - `400`_
     - Region is not supported by AWS KMS.

   * - .. apierror:: AZURE_KEY_VAULT_ENVIRONMENT_NOT_SUPPORTED
     - `400`_
     - Environment not supported for Azure Key Vault.

   * - .. apierror:: AZURE_KEY_VAULT_KEY_EXPIRED
     - `400`_
     - The key has expired.

   * - .. apierror:: AZURE_KEY_VAULT_KEY_EXPIRING
     - `400`_
     - The key cannot be used because it will expire within the next 48
       hours.

   * - .. apierror:: AZURE_KEY_VAULT_KEY_IDENTIFIER_INVALID_FORMAT
     - `400`_
     - Invalid format for Azure Key Vault Key Identifier.

   * - .. apierror:: AZURE_KEY_VAULT_KEY_NOT_ACTIVE
     - `400`_
     - The key must not be used before its \nbf\

   * - .. apierror:: AZURE_KEY_VAULT_KEY_NOT_ENABLED
     - `400`_
     - Key not enabled.

   * - .. apierror:: AZURE_KEY_VAULT_KEY_NOT_FOUND
     - `400`_
     - No Azure Key Vault key found for the provided credentials.

   * - .. apierror:: BACKUP_CONFIG_NOT_FOUND
     - `404`_
     - No backup configuration exists for cluster <variable> in group
       <variable>.

   * - .. apierror:: BAD_WHITELIST_ADD_REQUEST
     - `400`_
     - Should not specify both the IP address and the CIDR block.

   * - .. apierror:: CANNOT_ADD_IP_ADDRESS_TO_API_KEY_WHITELIST
     - `400`_
     - The specified address cannot be added to whitelists. |service|
        does not allow certain IP addresses to be whitelisted, such as
        ``0.0.0.0/32``.

   * - .. apierror:: CANNOT_CANCEL_AUTOMATED_RESTORE
     - `400`_
     - Automated restore cannot be cancelled.

   * - .. apierror:: CANNOT_CHANGE_ENCRYPTION_AT_REST_PROVIDER
     - `409`_
     - To choose a different Encryption at Rest provider, please
       disable and re-enable this feature. This will decrypt your data
       and allow you to encrypt it with a different Encryption at Rest
       provider.

   * - .. apierror:: CANNOT_CHANGE_GEOSHARDED_CLUSTER_TYPE
     - `400`_
     - A geo sharded cluster cannot be changed to a different cluster
       type.

   * - .. apierror:: CANNOT_CHANGE_GROUP_NAME
     - `403`_
     - Current user is not authorized to change group name.

   * - .. apierror:: CANNOT_CLOSE_GROUP_ACTIVE_ATLAS_CLUSTERS
     - `409`_
     - Cannot close group while it has active clusters; please
       terminate all clusters.

   * - .. apierror:: CANNOT_CLOSE_GROUP_ACTIVE_BACKUP
     - `409`_
     - Cannot close group while it has active backups; please terminate
       all backups.

   * - .. apierror:: CANNOT_CREATE_ATLAS_ORG
     - `400`_
     - Atlas organizations cannot be created via Ops Manager.

   * - .. apierror:: CANNOT_CREATE_EMPTY_TEAM
     - `403`_
     - A team must have at least one user.

   * - .. apierror:: CANNOT_CREATE_PAUSED_CLUSTER
     - `400`_
     - Cluster <variable> cannot be created in a paused state.

   * - .. apierror:: CANNOT_DECREASE_DISK_SIZE
     - `500`_
     - Not enough data to determine if decreasing disk size is safe.

   * - .. apierror:: CANNOT_DELETE_LAST_OWNER
     - `403`_
     - You cannot delete the last project owner.

   * - .. apierror:: CANNOT_DELETE_TEAM_ASSIGNED_TO_PROJECT
     - `403`_
     - You cannot delete a team that has at least one project assigned
       to it. Make sure to remove the team from all project before
       deleting it.

   * - .. apierror:: CANNOT_DISABLE_ENCRYPTION_AT_REST
     - `409`_
     - Cannot disable Encryption at Rest on the group because it is
       still enabled on one or more clusters in the group.

   * - .. apierror:: CANNOT_DOWNLOAD_SNAPSHOT_WITH_ENCRYPTION
     - `400`_
     - Cannot download snapshots with Encryption at Rest enabled.

   * - .. apierror:: CANNOT_ENABLE_ENCRYPTION_AT_REST
     - `409`_
     - Cannot enable Encryption at Rest on the group because there are
       one or more clusters with continuous backup enabled.

   * - .. apierror:: CANNOT_MODIFY_CLUSTER_WITH_RUNNING_LIVE_IMPORT
     - `409`_
     - Cannot modify a cluster with a running live import.

   * - .. apierror:: CANNOT_PAUSE_CLUSTER_WITH_PENDING_CHANGES
     - `409`_
     - Cannot pause a cluster with pending changes.

   * - .. apierror:: CANNOT_REMOVE_CALLER_FROM_WHITELIST
     - `400`_
     - Cannot remove the IP address from the whitelist from which
       the request originated.

   * - .. apierror:: CANNOT_RESTORE_TO_TARGET
     - `403`_
     - Cannot restore with insufficient permission on source snapshot
       or target cluster.

   * - .. apierror:: CANNOT_UPDATE_AND_PAUSE_CLUSTER
     - `409`_
     - Cannot update and pause cluster <variable> at the same time.

   * - .. apierror:: CANNOT_UPDATE_PAUSED_CLUSTER
     - `409`_
     - Cannot update cluster <variable> while it is paused or being
       paused.

   * - .. apierror:: CANNOT_USE_AWS_SECURITY_GROUP_WITHOUT_VPC_PEERING_CONNECTION
     - `409`_
     - Cannot use aws security groups as whitelist entries without a
       vpc peering connection.

   * - .. apierror:: CANNOT_USE_ENCRYPTION_AT_REST_BACKUP_TYPE
     - `400`_
     - Cannot use Encryption at Rest with clusters running continuous
       backup.

   * - .. apierror:: CANNOT_USE_ENCRYPTION_AT_REST_GCP
     - `400`_
     - Cannot use Encryption at Rest with GCP clusters.

   * - .. apierror:: CANNOT_USE_ENCRYPTION_AT_REST_SHARDED
     - `400`_
     - Cannot use Encryption at Rest with sharded clusters.

   * - .. apierror:: CANNOT_USE_ENCRYPTION_AT_REST_TENANT
     - `400`_
     - Cannot use Encryption at Rest with tenant clusters.

   * - .. apierror:: CHECKPOINT_NOT_FOUND
     - `404`_
     - No checkpoint with ID <variable> exists for cluster <variable>.

   * - .. apierror:: CLOUD_PROVIDER_CONTAINER_NOT_FOUND
     - `404`_
     - An invalid cloud provider container ID <variable> was specified.

   * - .. apierror:: CLUSTER_ALREADY_REQUESTED_DELETION
     - `400`_
     - The cluster <variable> has already been requested for deletion.

   * - .. apierror:: CLUSTER_CANNOT_CHANGE_NAME
     - `400`_
     - Cannot change name of cluster during an update.

   * - .. apierror:: CLUSTER_CANNOT_CHANGE_PROVIDER_NAME
     - `400`_
     - Cannot change the cloud provider of a cluster.

   * - .. apierror:: CLUSTER_DISK_IOPS_INVALID
     - `400`_
     - The cluster's disk IOPS of <variable> is invalid. For a disk of size <variable>
       on cluster <variable>, the IOPS must be <variable>.

   * - .. apierror:: CLUSTER_DISK_SIZE_INVALID
     - `400`_
     - The cluster's disk size of <variable> GB is greater than the maximum
       disk size of <variable> GB for cluster tier <variable>.

   * - .. apierror:: CLUSTER_DISK_SIZE_NOT_WHOLE_NUMBER
     - `400`_
     - The cluster's disk size of <variable> GB is invalid. The disk size
       must be a positive whole number.

   * - .. apierror:: CLUSTER_NAME_INVALID
     - `400`_
     - The cluster name <variable> is invalid. The name can only
       contain ASCII letters, numbers, and hyphens.

   * - .. apierror:: CLUSTER_NAME_NOT_FOUND
     - `404`_
     - No cluster with name \<variable>\ exists in group <variable>.

   * - .. apierror:: CLUSTER_NAME_TOO_LONG
     - `400`_
     - Cluster name <variable> is limited to <variable> characters.

   * - .. apierror:: CLUSTER_NOT_FOUND
     - `404`_
     - No cluster with ID <variable> exists in group <variable>.

   * - .. apierror:: CLUSTER_NUM_SHARDS_INVALID
     - `400`_
     - The cluster's shard count must be between 1 and <variable>.

   * - .. apierror:: CLUSTER_REPLICATION_FACTOR_INVALID
     - `400`_
     - The cluster's replication factor must be either 3, 5, or 7.

   * - .. apierror:: CLUSTER_RESTORE_IN_PROGRESS_CANNOT_UPDATE
     - `400`_
     - Cluster restore in progress

   * - .. apierror:: CLUSTER_UPGRADE_INVALID
     - `400`_
     - Cluster cannot be upgraded, as specified upgrade version is
       below the current version.

   * - .. apierror:: COLLECTION_ROLES_LIMIT_EXCEEDED
     - `403`_
     - Exceeded maximum number of collection level permissions. This
       group can define at most <variable> collection level roles.

   * - .. apierror:: COMMON_PASSWORD
     - `400`_
     - The password provided is too weak, as it can be found in most
       commonly used password lists.

   * - .. apierror:: CONTAINERS_IN_USE
     - `409`_
     - Cannot modify in use containers. <variable>.

   * - .. apierror:: CONTINUOUS_BACKUP_NOT_SUPPORTED
     - `409`_
     - Continuous backup is not supported for groups with Encryption at
       Rest enabled. Please use Cloud Provider Snapshot backups.

   * - .. apierror:: CROSS_REGION_NETWORK_PERMISSIONS_LIMIT_EXCEEDED
     - `403`_
     - Cannot have more than <variable> cross-region network permissions.

   * - .. apierror:: CUSTOM_ROLES_LIMIT_EXCEEDED
     - `403`_
     - Exceeded maximum number of custom roles.

   * - .. apierror:: DATABASE_NAME_CANNOT_BE_CHANGED
     - `409`_
     - Cannot modify the authentication database of an existing
       database user.

   * - .. apierror:: DATABASE_NAME_INVALID_ADMIN
     - `400`_
     - Database name invalid. <variable> can only be created on the
       admin database.

   * - .. apierror:: DATABASE_NAME_INVALID_EXTERNAL
     - `400`_
     - Database name invalid. Externally authenticated users can only
       be created on the $external database.

   * - .. apierror:: DATABASE_USERNAME_CANNOT_BE_CHANGED
     - `409`_
     - Cannot modify the username of an existing database user.

   * - .. apierror:: DISK_SIZE_GB_TOO_SMALL
     - `400`_
     - The selected disk size is smaller than the amount of data
       currently used.

   * - .. apierror:: DUAL_REPLICATION_SPEC_SPECIFIED
     - `400`_
     - Both replicationSpec and replicationSpecs fields were specified.
       Only one of these two should be provided.

   * - .. apierror:: DUPLICATE_ADDRESSES_IN_INPUT
     - `400`_
     - Two or more of the IP addresses being added to the whitelist are
       the same.

   * - .. apierror:: DUPLICATE_CLUSTER_NAME
     - `400`_
     - A cluster named <variable> is already present in group
       <variable>.

   * - .. apierror:: DUPLICATE_DATABASE_ROLES
     - `400`_
     - Duplicate database roles specified for user <variable>
       <variable>.

   * - .. apierror:: DUPLICATE_MANAGED_NAMESPACE
     - `400`_
     - Managed Namespace <variable> already exists.

   * - .. apierror:: DUPLICATE_ZONE_NAME
     - `400`_
     - Zone names must be unique across all zones.

   * - .. apierror:: ENCRYPTION_AT_REST_NOT_ENABLED
     - `400`_
     - Encryption at Rest is not enabled for group <variable>.

   * - .. apierror:: EXPIRATION_DATE_EXCEEDS_MAX
     - `400`_
     - The specified expiration date can be at most <variable> days in the
       future.

   * - .. apierror:: EXPIRATION_DATE_IN_PAST
     - `400`_
     - The specified expiration date must be in the future.

   * - .. apierror:: GOOGLE_CLOUD_KMS_KEY_VERSION_DESTROY_SCHEDULED
     - `400`_
     - Key version is scheduled for destruction.

   * - .. apierror:: GOOGLE_CLOUD_KMS_KEY_VERSION_DESTROYED
     - `400`_
     - Key version is destroyed.

   * - .. apierror:: GOOGLE_CLOUD_KMS_KEY_VERSION_DISABLED
     - `400`_
     - Key version is disabled.

   * - .. apierror:: GOOGLE_CLOUD_KMS_KEY_VERSION_NOT_FOUND
     - `400`_
     - Cannot find key version '<variable>'.

   * - .. apierror:: GOOGLE_CLOUD_KMS_KEY_VERSION_PENDING_GENERATION
     - `400`_
     - Key version is pending generation.

   * - .. apierror:: GROUP_ALREADY_EXISTS
     - `409`_
     - A group with name \<variable>\ already exists.

   * - .. apierror:: GROUP_NAME_NOT_FOUND
     - `404`_
     - No group with name \<variable>\ exists.

   * - .. apierror:: GROUP_NOT_FOUND
     - `404`_
     - No group with ID <variable> exists.

   * - .. apierror:: GROUP_USERS_LIMIT_EXCEEDED
     - `403`_
     - Groups can contain at most <variable> database users.

   * - .. apierror:: HOURLY_BILLING_LIMIT_EXCEEDED
     - `403`_
     - The hourly billing limit has been exceeded.

   * - .. apierror:: INSUFFICIENT_INSTANCE_SIZE
     - `400`_
     - |fts| indexes require a cluster tier of ``M30`` or greater.

   * - .. apierror:: INVALID_API_KEY_DESC
     - `400`_
     - The API key description is required, and must be between 1 and
       250 characters long.

   * - .. apierror:: INVALID_ATLAS_GROUP
     - `404`_
     - Atlas group <variable> is in an invalid state and cannot be
       loaded.

   * - .. apierror:: INVALID_ATTRIBUTE
     - `400`_
     - Invalid attribute <variable> specified.

   * - .. apierror:: INVALID_AWS_CREDENTIALS
     - `400`_
     - Invalid AWS credentials.

   * - .. apierror:: INVALID_AZURE_CREDENTIALS
     - `400`_
     - Invalid Azure credentials.

   * - .. apierror:: INVALID_BACKUP_POLICY
     - `400`_
     - The specified backup policy is invalid.

   * - .. apierror:: INVALID_BI_CONNECTOR_READ_PREFERENCE_FOR_TOPOLOGY
     - `400`_
     - You cannot set the ``biConnector.readPreference`` value of a
       cluster to ``analytics`` if you have no analytics nodes in the
       cluster.

       You cannot remove all analytics nodes from a cluster if the
       cluster's ``biConnector.readPreference`` value is ``analytics``.

   * - .. apierror:: INVALID_CLUSTER_CONFIGURATION
     - `400`_
     - The specified cluster configuration is not valid.

   * - .. apierror:: INVALID_COLLECTION_NAME
     - `400`_
     - Invalid collection names specified <variable>. See
       :manual:`Restrictions on Collection Names </reference/limits#Restriction-on-Collection-Names>`
       for details.

   * - .. apierror:: INVALID_ENCRYPTION_AT_REST_PROVIDER
     - `400`_
     - An invalid Encryption at Rest provider <variable> was specified.

   * - .. apierror:: INVALID_GOOGLE_CLOUD_CREDENTIALS
     - `400`_
     - Invalid Google Cloud credentials.

   * - .. apierror:: INVALID_GROUP_ID
     - `404`_
     - An invalid group ID <variable> was specified.

   * - .. apierror:: INVALID_GROUP_NAME
     - `400`_
     - An invalid group name \<variable>\ was specified.

   * - .. apierror:: INVALID_GROUP_NAME_10GEN
     - `400`_
     - Group name cannot contain \10gen-\ or \-10gen\.

   * - .. apierror:: INVALID_GROUP_TOKEN
     - `400`_
     - A group tag must be a string ,alphanumeric, periods,
       underscores, and dashes) of length + GroupSvc.MAX_TAG_LENGTH +
       characters or less.

   * - .. apierror:: INVALID_HOSTNAME
     - `400`_
     - Invalid hostname <variable>.

   * - .. apierror:: INVALID_IOPS_OUT_OF_BOUNDS
     - `400`_
     - The IOPS value <variable> is not valid. It must be between the
       minimum and maximum values returned in the machine configuration
       options.

   * - .. apierror:: INVALID_IP_ADDRESS_OR_CIDR_NOTATION
     - `400`_
     - The address <variable> must be in valid IP address or CIDR
       notation.

   * - .. apierror:: INVALID_LOCATION_CODE
     - `400`_

     - Invalid location code <variable>. A list of valid codes is
       `available <https://cloud.mongodb.com/static/atlas/country_iso_codes.txt>`__.

   * - .. apierror:: INVALID_NUM_OF_SNAPSHOTS_TO_RETAIN
     - `400`_
     - Number of snapshots to retain must be greater than 0.

   * - .. apierror:: INVALID_RESTORE_WINDOW
     - `400`_
     - Invalid number of restore window days specified.

   * - .. apierror:: INVALID_PATH_PARAMETER
     - `400`_
     - Invalid path parameter <variable> specified.

   * - .. apierror:: INVALID_PROVIDER
     - `400`_
     - No provider <variable> exists.

   * - .. apierror:: INVALID_REFERENCE_HOUR_OF_DAY
     - `400`_
     - Snapshot schedule reference hour must be between 0 and 23,
       inclusive.

   * - .. apierror:: INVALID_REFERENCE_MINUTE_OF_HOUR
     - `400`_
     - Snapshot schedule reference minute must be between 0 and 59,
       inclusive.

   * - .. apierror:: INVALID_REGION
     - `400`_
     - No region <variable> exists for provider <variable>.

   * - .. apierror:: INVALID_ROLE_FOR_ORG
     - `400`_
     - Role <role> invalid for organization <orgId>.

   * - .. apierror:: INVALID_ROUTE_TABLE_CIDR
     - `400`_
     - The address <variable> must be within the private ranges
       [\10.0.0.0/8\

   * - .. apierror:: INVALID_SAMPLE_REFRESH_INTERVAL_BI_CONNECTOR
     - `400`_
     - Your BI Connector sample refresh interval must be greater than
       or equal to zero.

   * - .. apierror:: INVALID_SAMPLE_SIZE_BI_CONNECTOR
     - `400`_
     - Your BI Connector schema sample size must be greater than or
       equal to zero.

   * - .. apierror:: INVALID_SNAPSHOT_RESTORE_ENCRYPTION
     - `400`_
     - Encryption settings of targert cluster and source snapshot are
       different.

   * - .. apierror:: INVALID_USERNAME
     - `400`_
     - The specified username is not a valid email address.

   * - .. apierror:: LDAP_VERIFY_CONNECTIVITY_NO_AVAILABLE_CLUSTERS
     - `400`_
     - No clusters available to perform LDAP connectivity verification
       for groupId <variable>. At least one active cluster running
       MongoDB version 3.4 or greater is required.

   * - .. apierror:: LDAP_VERIFY_CONNECTIVITY_NO_AVAILABLE_INSTANCES
     - `400`_
     - No cluster nodes are available to perform LDAP connectivity
       verification for groupId <variable>.

   * - .. apierror:: LDAP_VERIFY_CONNECTIVITY_NO_AVAILABLE_MONGODB_PACKAGE
     - `400`_
     - No MongoDB package available to perform LDAP connectivity
       verification for group <variable>.

   * - .. apierror:: LDAP_VERIFY_CONNECTIVITY_REQUEST_NOT_FOUND
     - `404`_
     - LDAP connectivity verification request <variable> not found for
       group <variable>.

   * - .. apierror:: MISSING_API_KEY_ROLES
     - `400`_
     - API keys must have at least one valid role.

   * - .. apierror:: MISSING_ATTRIBUTE
     - `400`_
     - The required attribute <variable> was not specified.

   * - .. apierror:: MISSING_ATTRIBUTES
     - `400`_
     - The required attributes <variable> were not specified.

   * - .. apierror:: MISSING_ENCRYPTION_AT_REST_PROVIDER
     - `400`_
     - At least one Encryption at Rest provider must be specified.

   * - .. apierror:: MISSING_QUERY_PARAMETER
     - `400`_
     - The required query parameter <variable> was not specified.

   * - .. apierror:: MONGODB_VERSION_INVALID
     - `400`_
     - An invalid MongoDB version <variable> was specified.

   * - .. apierror:: MULTIPLE_GROUPS
     - `409`_
     - Multiple groups exist with the specified name.

   * - .. apierror:: NETWORK_PERMISSION_EXPIRATION_NOT_SUPPORTED
     - `400`_
     - Expiration dates are only supported for IP addresses.

   * - .. apierror:: NO_CAPACITY
     - `409`_
     - Cannot find the AWS capacity for group <variable>.

   * - .. apierror:: NO_COMMON_INSTANCE_FAMILY
     - `400`_
     - Cluster configuration is invalid. There is no common supported
       cluster family in the selected regions.

   * - .. apierror:: NO_PAYMENT_INFORMATION_FOUND
     - `402`_
     - No payment information was found for group <variable>.

   * - .. apierror:: NO_PERMISSION_TO_ENCRYPT_DECRYPT
     - `400`_
     - The provided credentials do not have permission to encrypt or
       decrypt with the key.

   * - .. apierror:: NOT_ATLAS_GROUP
     - `404`_
     - Group <variable> is not an Atlas group; use the Cloud Manager
       API at /api/public/v1.0 to access it.

   * - .. apierror:: NOT_ATLAS_ORG
     - `404`_
     - Organization <variable> is not an Atlas organization; use the
       Cloud Manager API at /api/public/v1.0 to access it.

   * - .. apierror:: NOT_IN_GROUP
     - `401`_
     - The current user is not in the group, or the group does not
       exist.

   * - .. apierror:: NOT_ORG_GROUP_CREATOR
     - `401`_
     - The currently logged in user does not have the group creator
       role in organization <variable>.

   * - .. apierror:: NVME_STORAGE_CONTINUOUS_BACKUP_UNSUPPORTED
     - `400`_
     - Continuous backup is enabled for this project and is unsupported
       for deployments with NVMe storage.

   * - .. apierror:: NVME_STORAGE_PROVIDER_BACKUP_REQUIRED
     - `400`_
     - Cloud Provider Snapshot backups must be enabled for deployments
       with NVMe storage.

   * - .. apierror:: OPLOG_SIZE_MB_LESS_THAN_990
     - `400`_
     - Your oplog size cannot be changed to < 990 MB on MongoDB 3.6+.

   * - .. apierror:: OPLOG_SIZE_MB_LESS_THAN_EQUAL_ZERO
     - `400`_
     - Your oplog size cannot be <= 0.

   * - .. apierror:: OPLOG_SIZE_MB_TOO_BIG
     - `400`_
     - Your oplogSizeMB is too big. <variable>.

   * - .. apierror:: OPLOG_SIZE_MB_TOO_SMALL
     - `400`_
     - Your oplogSizeMB is too small. <variable>.

   * - .. apierror:: ORG_NOT_FOUND
     - `404`_
     - No organization with ID <variable> exists.

   * - .. apierror:: OUT_OF_CAPACITY
     - `409`_
     - The requested region is currently out of capacity for the
       requested cluster tier.

   * - .. apierror:: OVERLAPPING_ATLAS_CIDR_BLOCK
     - `409`_
     - The CIDR block <variable> overlaps with an Atlas CIDR block.

   * - .. apierror:: OVERLAPPING_BACKUP_PLANS_NOT_SUPPORTED
     - `409`_
     - A project's cluster backups must be either Continuous or Cloud
       Provider Snapshots, currently a mix is not supported.

   * - .. apierror:: OVERLAPPING_CIDR_BLOCK
     - `409`_
     - The CIDR block <variable> overlaps with another peer's CIDR
       block.

   * - .. apierror:: PEER_ALREADY_EXISTS
     - `409`_
     - The peer with AWS Account ID <variable> and VPC ID <variable>
       already exists.

   * - .. apierror:: PEER_ALREADY_REQUESTED_DELETION
     - `409`_
     - The peer with ID <variable> in has already been requested for
       deletion.

   * - .. apierror:: PEER_INVALID_STATE
     - `409`_
     - The peer with ID <variable> in group <variable> cannot be
       updated in its current state.

   * - .. apierror:: PEER_MAXIMUM_REACHED
     - `409`_
     - The maximum number of peering connections <variable> has been
       reached.

   * - .. apierror:: PEER_NOT_FOUND
     - `404`_
     - No peer with ID <variable> exists in group <variable>.

   * - .. apierror:: PERMANENT_ENTITY_CANNOT_BE_MADE_TEMPORARY
     - `400`_
     - A permanent entity cannot be made temporary.

   * - .. apierror:: PROVIDER_BACKUP_NOT_SUPPORTED
     - `400`_
     - Provider snapshot backups are not supported for this type of
       provider.

   * - .. apierror:: QUERY_ENGINE_CANNOT_ASSUME_ROLE
     - `400`_
     - {+data-lake+} could not validate the |aws| IAM ARN provided
       for the specified {+data-lake-store+}. For complete
       documentation on {+data-lake+} |aws| access permissions, see
       :doc:`/tutorial/data-lake-deploy`.

   * - .. apierror:: REGION_UNAVAILABLE
     - `409`_
     - The selected region <variable> is unavailable for use.

   * - .. apierror:: RESOURCE_NOT_FOUND
     - `404`_
     - No |fts| index with ID <INDEX-ID> exists for cluster <clusterName>.

   * - .. apierror:: RESTORE_JOB_NOT_FOUND
     - `404`_
     - No restore job with ID <variable> exists for cluster <variable>.

   * - .. apierror:: RESTORE_JOB_NOT_FOUND_IN_GROUP
     - `404`_
     - No restore job with ID <variable> exists in group <variable>.

   * - .. apierror:: SHARDED_CLUSTER_CANT_BECOME_REPLICA_SET
     - `400`_
     - A sharded cluster cannot become a replica set.

   * - .. apierror:: SHARDING_NOT_SUPPORTED
     - `400`_
     - Sharding is not supported for the selected cluster tier
       <variable>.

   * - .. apierror:: SNAPSHOT_NOT_FOUND
     - `404`_
     - No snapshot with ID <variable> exists for cluster <variable>.

   * - .. apierror:: TEAM_NOT_IN_GROUP
     - `404`_
     - The team in your request is not assigned to this group.

   * - .. apierror:: TENANT_CLUSTER_PROCESS_ARGS_NOT_SUPPORTED
     - `400`_
     - Cannot set custom process args for tenant clusters.

   * - .. apierror:: TENANT_CLUSTER_UPDATE_UNSUPPORTED
     - `400`_
     - Cannot update a M0/M2/M5 cluster through the public API.

   * - .. apierror:: TOO_MANY_GROUP_TOKENS
     - `400`_
     - Groups are limited to + GroupSvc.MAX_TAGS_PER_GROUP +  tags.

   * - .. apierror:: UNEXPECTED_ERROR
     - `500`_
     - Unexpected error.

   * - .. apierror:: UNSUPPORTED_DELIVERY_METHOD
     - `400`_
     - The specified delivery method is not supported.

   * - .. apierror:: UNSUPPORTED_MONGODB_VERSION_FOR_FTS
     - `400`_
     - Atlas only supports |fts| for clusters running MongoDB version
       4.2 or higher.

   * - .. apierror:: UNSUPPORTED_ROLE
     - `400`_
     - The provided role is not supported.

   * - .. apierror:: UNSUPPORTED_VERSION_FOR_LDAP_AUTHENTICATION
     - `400`_
     - LDAP authentication requires all clusters to run MongoDB version
       3.4 or higher.

   * - .. apierror:: USER_ALREADY_EXISTS
     - `409`_
     - A user with username <variable> already exists.

   * - .. apierror:: USER_NOT_FOUND
     - `404`_
     - No user with ID <variable> exists.

   * - .. apierror:: USER_UNAUTHORIZED
     - `401`_
     - Current user is not authorized to perform this action.

   * - .. apierror:: USERNAME_NOT_FOUND
     - `404`_
     - No user with username <variable> exists.
