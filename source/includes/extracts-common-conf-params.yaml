ref: param-default-format
content: |

  .. datalakeconf:: databases.[n].collections.[n].dataSources.[n].defaultFormat

     *Optional.* Specifies the default format {+data-lake-short+} assumes
     if it encounters a file without an extension while searching the
     :datalakeconf:`~databases.[n].collections.[n].dataSources.[n].storeName`.
   
     If omitted, {+data-lake-short+} attempts to detect the file type by 
     processing a few bytes of the file.
   
     .. note::
   
        If your file format is ``CSV`` or ``TSV``, you must include a header 
        row in your data. See :ref:`data-lake-csv-tsv-data` for more 
        information.
      
     The following values are valid for the ``defaultFormat`` field:
      
     ``.json, .json.gz, .bson, .bson.gz, .avro, .avro.gz, .orc, .tsv, .tsv.gz, 
     .csv, .csv.gz, .parquet``

     .. seealso:: 

        :ref:`data-lake-data-formats`
---
ref: cli-param-collection-name
content: |
  Either the name of the collection to which {+data-lake-short+} maps the data 
  contained in the {+data-lake-store+} or the wildcard ``"*"`` to dynamically 
  create collections. 
---
ref: cli-param-default-format
content: | 
  The format that {+data-lake-short+} defaults to if it encounters a file 
  without an extension while querying the {+data-lake-store+}. If omitted, 
  {+data-lake-short+} attempts to detect the file type by processing a few 
  bytes of the file. The following values are valid: 
   
  ``.json, .json.gz, .bson, .bson.gz, .avro, .avro.gz, .orc, .tsv, .tsv.gz, 
  .csv, .csv.gz, .parquet``
...
