.. index:: index; hashed
.. _index-type-hashed:

============
Hashed Index
============

.. default-domain:: mongodb

.. versionadded:: 2.4

Hashed indexes maintain entries with hashes of the values of the
indexed field. The hashing function collapses embedded documents and
computes the hash for the entire value but does not support multi-key
(i.e. arrays) indexes.

Hashed indexes support :doc:`sharding </core/sharding-introduction>` a
collection using a :ref:`hashed shard key <sharding-hashed-sharding>`.
Using a hashed shard key to shard a collection ensures a more even
distribution of data. See
:doc:`/tutorial/shard-collection-with-a-hashed-shard-key` for more
details.

MongoDB can use the ``hashed`` index to support equality queries, but
``hashed`` indexes do not support range queries.

You may not create compound indexes that have ``hashed`` index fields
or specify a unique constraint on a ``hashed`` index; however, you can
create both a ``hashed`` index and an ascending/descending (i.e.
non-hashed) index on the same field: MongoDB will use the scalar index
for range queries.

.. _hashed-index-warning:

.. include:: /includes/warning-hashed-index-floating-point.rst

Create a ``hashed`` index using an operation that resembles the
following:

.. code-block:: javascript

   db.active.createIndex( { a: "hashed" } )

This operation creates a hashed index for the ``active`` collection on
the ``a`` field.

.. COMMENTED OUT the footnote.. Used to belong to a point item that was
   removed 6 months ago.
   .. [#hash-size] The hash stored in the ``hashed`` index is 64 bits of the
      128 bit ``md5`` hash.
