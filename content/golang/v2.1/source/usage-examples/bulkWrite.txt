.. _golang-bulk-ops-usage-example:

=======================
Perform Bulk Operations
=======================

You can perform bulk write operations on a collection by using the
``BulkWrite()`` method.

Example
-------

.. include:: /includes/usage-examples/run-example-tip.rst

This example uses the following ``Restaurant`` struct as a model for documents
in the ``restaurants`` collection:

.. literalinclude:: /includes/usage-examples/code-snippets/bulk.go
   :start-after: start-restaurant-struct
   :end-before: end-restaurant-struct
   :language: go 
   :copyable: 
   :dedent:

The ``omitempty`` :ref:`struct tag<golang-struct-tags>` omits the corresponding 
field from the inserted document when left empty.

The following example performs the following in order on the ``restaurants``
collection:

- Matches a document in which the ``name`` is "Cafe Tomato" and replaces it with a new document
- Matches a document in which the ``name`` is "Cafe Zucchini" and updates
  the value to "Zucchini Land"

.. literalinclude:: /includes/usage-examples/code-snippets/bulk.go
   :start-after: begin bulk
   :end-before: end bulk
   :language: go
   :dedent:

View a `fully runnable example <{+example+}/bulk.go>`__

Expected Result
---------------

After you run the full example, you can find the following document
in the ``restaurants`` collection:

.. code-block:: json
   :copyable: false

   {
     "_id": ObjectId("..."),
     "name": "Zucchini Land",
     "cuisine": "French"
   }

For an example on how to find a document, see :ref:`golang-find-one`.

Additional Information
----------------------

To learn more about performing bulk write operations on a collection
and handling potential errors, see :ref:`golang-bulk`.

API Documentation
~~~~~~~~~~~~~~~~~

- `BulkWrite() <{+api+}/mongo#Collection.BulkWrite>`__
- `NewUpdateOneModel() <{+api+}/mongo#NewUpdateOneModel>`__
- `NewReplaceOneModel() <{+api+}/mongo#NewReplaceOneModel>`__
