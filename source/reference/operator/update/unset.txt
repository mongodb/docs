======
$unset
======

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. topic:: Disambiguation

   The following page refers to the update operator :update:`$unset`.
   For the aggregation stage :pipeline:`$unset`, available starting in
   MongoDB 4.2, see :pipeline:`$unset`.

.. update:: $unset

   The :update:`$unset` operator deletes a particular field. Consider
   the following syntax:

   .. code-block:: javascript

     { $unset: { <field1>: "", ... } }

   The specified value in the :update:`$unset` expression (i.e. ``""``)
   does not impact the operation.

   .. include:: /includes/use-dot-notation.rst

Behavior
--------

If the field does not exist, then :update:`$unset` does nothing (i.e.
no operation).

When used with :update:`$` to match an array element, :update:`$unset`
replaces the matching element with ``null`` rather than removing the
matching element from the array. This behavior keeps consistent the
array size and element positions.

Example
-------

The following :method:`~db.collection.update()` operation uses the
:update:`$unset` operator to remove the fields ``quantity`` and
``instock`` from the *first* document in the ``products`` collection
where the field ``sku`` has a value of ``unknown``.

.. code-block:: javascript

   db.products.update(
      { sku: "unknown" },
      { $unset: { quantity: "", instock: "" } }
   )

.. seealso::

   :method:`db.collection.update()`,

   :method:`db.collection.findAndModify()`
