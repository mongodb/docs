# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/create-an-auto-incrementing-field.txt:3
# a7f88c8349044edda8906253c29a6252
msgid "Create an Auto-Incrementing Sequence Field"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:8
# 6bc637d518604522893f72fb325df4ed
msgid "Synopsis"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:10
# cb7d93dc7d31440e99efde10bbd16183
msgid "MongoDB reserves the ``_id`` field in the top level of all documents as a primary key. ``_id`` must be unique, and always has an index with a :ref:`unique constraint <index-type-unique>`. However, except for the unique constraint you can use any value for the ``_id`` field in your collections. This tutorial describes two methods for creating an incrementing sequence number for the ``_id`` field using the following:"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:18
# 70479c7f9e804bfeb0ea376c56e47098
msgid ":ref:`auto-increment-counters-collection`"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:20
# dc4b827cde56446c845bd2ec2230a2ec
msgid ":ref:`auto-increment-optimistic-loop`"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:23
# a8224df39b1345f4927585e2a8c8e240
msgid "Considerations"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:25
# 024002dfc1c447b2b66ee573b6b930c4
msgid "Generally in MongoDB, you would not use an auto-increment pattern for the ``_id`` field, or any field, because it does not scale for databases with large numbers of documents. Typically the default value :term:`ObjectId <objectid>` is more ideal for the ``_id``."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:31
# d88446e1ed434ce7afd86522e2acc086
msgid "Procedures"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:36
# 5a7d0e51c5ee4ba8b1f85ca6207aeda5
msgid "Use Counters Collection"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:39
# 5030d28bcf1242269655b7d345788cfa
msgid "Counter Collection Implementation"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:40
# e4a694e56ad14335a7af7f79bc300869
msgid "Use a separate ``counters`` collection to track the *last* number sequence used. The ``_id`` field contains the sequence name and the ``seq`` field contains the last value of the sequence."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:44
# f214b42bf2594092838ed75ac1103c89
msgid "Insert into the ``counters`` collection, the initial value for the ``userid``:"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:55
# f6dd7bda1f5f43528a630681f653ca86
msgid "Create a ``getNextSequence`` function that accepts a ``name`` of the sequence. The function uses the :method:`~db.collection.findAndModify()` method to atomically increment the ``seq`` value and return this new value:"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:74
# adeeb68959b041c8a2ec660149375c44
msgid "Use this ``getNextSequence()`` function during :method:`~db.collection.insert()`."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:93
#: ../source/tutorial/create-an-auto-incrementing-field.txt:250
# 2d45d7d6488c4a0faade503c9b1e69f9
# 7e5a3bb516224cfb8bcc7e297b4901ed
msgid "You can verify the results with :method:`~db.collection.find()`:"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:99
#: ../source/tutorial/create-an-auto-incrementing-field.txt:256
# 9267e55a275f40f7b728d37923270585
# d535a67c30d14b3180a45444ffbb7f7c
msgid "The ``_id`` fields contain incrementing sequence values:"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:113
# 2d09f25a573148e0add5beb5524089b9
msgid "``findAndModify`` Behavior"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:115
# ebf99e3ed8b942f0ab9a503441a7267a
msgid "When :method:`~db.collection.findAndModify()` includes the ``upsert: true`` option **and** the query field(s) is not uniquely indexed, the method could insert a document multiple times in certain circumstances. For instance, if multiple clients each invoke the method with the same query condition and these methods complete the find phase before any of methods perform the modify phase, these methods could insert the same document."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:123
# 738d61ab88da4dac9c23c66fe323e57e
msgid "In the ``counters`` collection example, the query field is the ``_id`` field, which always has a unique index. Consider that the :method:`~db.collection.findAndModify()` includes the ``upsert: true`` option, as in the following modified example:"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:144
# d093552a6b7a40b6aed4569e9711fe66
msgid "If multiple clients were to invoke the ``getNextSequence()`` method with the same ``name`` parameter, then the methods would observe one of the following behaviors:"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:148
# 766b005e5ffe46b2b648716c2904788b
msgid "Exactly one :method:`~db.collection.findAndModify()` would successfully insert a new document."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:151
# 1b2e49fd7f494c3da1b24bc01de882ed
msgid "Zero or more :method:`~db.collection.findAndModify()` methods would update the newly inserted document."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:154
# ef15c6264a454bc3bb5bc0dd239f3b41
msgid "Zero or more :method:`~db.collection.findAndModify()` methods would fail when they attempted to insert a duplicate."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:157
# 92b3846c357c4018823bb04013a33604
msgid "If the method fails due to a unique index constraint violation, retry the method. Absent a delete of the document, the retry should not fail."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:164
# 2cee93694b4c41158932e342acf4c6de
msgid "Optimistic Loop"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:166
# b9daa74961004276add212a37824a752
msgid "In this pattern, an *Optimistic Loop* calculates the incremented ``_id`` value and attempts to insert a document with the calculated ``_id`` value. If the insert is successful, the loop ends. Otherwise, the loop will iterate through possible ``_id`` values until the insert is successful."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:172
# 853777852a2e442e9be2098d5e427c77
msgid "Create a function named ``insertDocument`` that performs the \"insert if not present\" loop. The function wraps the :method:`~db.collection.insert()` method and takes a ``doc`` and a ``targetCollection`` arguments."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:177
# edf172cecc634a27ac7fc2f59982d6e0
msgid "The :method:`db.collection.insert()` method now returns a :ref:`writeresults-insert` object that contains the status of the operation. Previous versions required an extra :method:`db.getLastErrorObj()` method call."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:208
# 08e3fa6211aa41e080abb364b78710e7
msgid "The ``while (1)`` loop performs the following actions:"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:210
# aecf1358e2a540c5b9d2899a377d586e
msgid "Queries the ``targetCollection`` for the document with the maximum ``_id`` value."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:213
# dd53304c46364fb5b805f18663c5e87b
msgid "Determines the next sequence value for ``_id`` by:"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:215
# 3958b2a9cafd40a497c6dd7571eedc5a
msgid "adding ``1`` to the returned ``_id`` value if the returned cursor points to a document."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:218
# 535ba9625a84435a946e51d88d274367
msgid "otherwise: it sets the next sequence value to ``1`` if the returned cursor points to no document."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:221
# 54e38ab597104a0b9739b60866d09932
msgid "For the ``doc`` to insert, set its ``_id`` field to the calculated sequence value ``seq``."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:224
# 43d7ba7f33a648f6982faa0860a40cf5
msgid "Insert the ``doc`` into the ``targetCollection``."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:226
# ba3aa1fd5a874243bb2ab5ddb692d96b
msgid "If the insert operation errors with duplicate key, repeat the loop.  Otherwise, if the insert operation encounters some other error or if the operation succeeds, break out of the loop."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:230
# f1a75d905e6d4712b184de0ffb910260
msgid "Use the ``insertDocument()`` function to perform an insert:"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:269
# c1130d33d6884e558927c5b9f47d38fd
msgid "The ``while`` loop may iterate many times in collections with larger insert volumes."
msgstr ""

