title: Assign the current configuration values to a variable.
stepnum: 1
ref: assign-rsconf
pre: |
  In the :program:`mongo` shell, assign the :method:`rs.conf()` method to a variable:
action:
  language: javascript
  code: cfg = rs.conf()
---
title: Assign priority values.
stepnum: 2
ref: assign-priority-values
pre: |
  For each member of the replica set, assign a priority value for the
  :data:`~local.system.replset.members` array by updating the ``cfg`` variable:
action:
  language: javascript
  code: |
     cfg.members[0].priority = 2
     cfg.members[1].priority = 1
     cfg.members[2].priority = 0.5
     cfg.members[3].priority = 0
post: |
   ``0``, ``1``, ``2``, and ``3`` are the array index values, not the ``_id``
   values returned by the :method:`rs.conf()` method.

   This sequence of operations reconfigures the replica set with the
   following priority settings:

      - Member at array index ``0`` has a priority of ``2`` so that it becomes primary under most circumstances.

      - Member at ``1`` has a priority of ``1``, which is the default value. Member ``1`` becomes primary if no member with a *higher* priority is eligible.

      - Member at ``2`` has a priority of ``0.5``, which makes it less likely to become primary than other members but doesn't prohibit the possibility.

      - Member at ``3`` has a priority of ``0``. Member at ``3`` **cannot** become the :term:`primary` member under any circumstances.
---
title: Update replica set configuration.
ref: update-replica-set-configuration
stepnum: 3
pre: |
  Pass the variable with updated priority values to :method:`rs.reconfig()` method:
action:
  language: javascript
  code: rs.reconfig(cfg)
...