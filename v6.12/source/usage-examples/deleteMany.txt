.. _node-usage-deletemany:

=========================
Delete Multiple Documents
=========================

.. default-domain:: mongodb

You can delete multiple documents in a collection at once using the
`collection.deleteMany() <{+api+}/classes/Collection.html#deleteMany>`__ method.
Pass a query document to the ``deleteMany()`` method to specify a subset
of documents in the collection to delete. If you do not provide a query
document (or if you provide an empty document), MongoDB matches all documents
in the collection and deletes them. While you can use ``deleteMany()``
to delete all documents in a collection, consider using
`drop() <{+api+}/classes/Collection.html#drop>`__ instead for better performance
and clearer code.

You can specify more options in the ``options`` object passed in
the second parameter of the ``deleteMany()`` method. For more detailed
information, see the
`deleteMany() API documentation <{+api+}/classes/Collection.html#deleteMany>`__.

Example
-------

The following snippet deletes multiple documents from the ``movies``
collection. It uses a **query document** that configures the query to
match and delete movies with the title "Santa Claus".

.. include:: /includes/connect-guide-note.rst

.. tabs::

   .. tab:: JavaScript
      :tabid: javascript

      .. literalinclude:: /code-snippets/usage-examples/deleteMany.js
         :language: javascript
         :linenos:

   .. tab:: TypeScript
      :tabid: typescript

      .. literalinclude:: /code-snippets/usage-examples/deleteMany.ts
         :language: typescript
         :linenos:

Running the preceding example for the first time, you see the following output:

.. code-block:: none
   :copyable: false

   Deleted 19 documents

If you run the example more than once, you see the following output because
you deleted the matching documents in the first run:

.. code-block:: none
   :copyable: false

   Deleted 0 documents
