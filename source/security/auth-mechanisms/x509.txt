.. _ruby-authentication-x509:

=====
X.509
=====

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: certificate, code example

Overview
--------

In the **X.509** authentication mechanism, the server and client use the
:wikipedia:`TLS <Transport_Layer_Security>` protocol to exchange X.509 public-key
certificates. You can use this mechanism to authenticate to MongoDB Atlas, MongoDB
Enterprise Advanced, and MongoDB Community Edition.

.. tip:: X.509 Mechanism

   To learn how to use TLS/SSL with the {+driver-short+},
   see :ref:`TLS/SSL <ruby-tls>`.

   For more information about X.509 certificates, see
   :ref:`X.509 <x509-client-authentication>` in the {+mdb-server+} manual.

Code Placeholders 
~~~~~~~~~~~~~~~~~

The code examples on this page use the following placeholders:

- ``+srv``: Include this option in your connection string prefix only if you are connecting
  to a MongoDB Atlas cluster. To learn more about the ``+srv`` option, see
  :manual:`Connection String Formats </reference/connection-string/#connection-string-formats>`
  in the {+mdb-server+} manual.
- ``<hostname>``: The network address of your MongoDB deployment.
- ``<port>``: The port number of the MongoDB deployment. If you omit this parameter,
  the driver uses the default port number (``27017``). You don't need a port number
  when connecting to a MongoDB Atlas cluster.
- ``<username>``: The username of the user associated with the X.509
  certificate. The username must match the distinguished subject name of the certificate.
  If you omit this parameter, the MongoDB deployment infers the username
  from the X.509 certificate.
- ``<password>``: The password for the X.509 certificate.

To use the code examples on this page, replace these placeholders with your own values.

Using X.509 Authentication in Your Application
----------------------------------------------

X.509 authentication requires the use of TLS encryption with
certificate validation. To authenticate the client, you will need a valid TLS certificate
and private encryption key. These can be stored in separate files, or together in one ``.pem`` file.

.. note::

   Even if the certificate and private key are stored in the same file, you must specify the
   path to that file in both the ``ssl_cert`` and ``ssl_key`` options.

Select the :guilabel:`Connection String` or :guilabel:`Client Options` tab to
see the corresponding syntax:

.. tabs::

   .. tab:: Connection String
      :tabid: default-connection-string

      .. code-block:: ruby

         client = Mongo::Client.new("mongodb[+srv]://<hostname>[:<port>]/?authSource=$external&authMechanism=MONGODB-X509")


   .. tab:: Client Options
      :tabid: default-mongo-credential

      .. code-block:: ruby

         client = Mongo::Client.new('<host>',
                           auth_mech: :mongodb_x509,
                           ssl: true,
                           ssl_cert: '/path/to/client.pem',
                           ssl_key: '/path/to/client.pem',
                           ssl_ca_cert: '/path/to/ca.pem')


API Documentation
-----------------

To learn more about any of the MongoDB methods and types used on this
page, see the following API documentation:

- :ruby-api:`Mongo::Client <Client.html>`
