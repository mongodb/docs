.. meta::
   :robots: noindex, nosnippet

.. _flutter-add-sync-to-app:

=======================================
Add Device Sync to an App - Flutter SDK
=======================================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 3
   :class: singlecol


Set up Device Sync
------------------

.. procedure::

   .. step:: Configure Atlas Device Sync in App Services

      Before you can use Device Sync with the Realm Flutter SDK, you must create
      an Atlas App Services App with Device Sync and authentication enabled.

      To learn how to set up Device Sync in your App, refer to :ref:`realm-sync-get-started`
      in the App Services documentation.

      To set up authentication, refer to :ref:`users-and-authentication` in the App Services documentation.
   
   .. step:: Connect to the App Services Backend

      Initialize the an :flutter-sdk:`App <realm/App/App.html>` instance to connect
      to your App Services App.
      Pass the App ID for your App, which you can :ref:`find in the App Services UI
      <find-your-app-id>`.

      .. literalinclude:: /examples/generated/flutter/add_sync_to_app.snippet.connect-to-app.dart
        :language: dart

   .. step:: Authenticate a user

      :ref:`Authenticate a user <flutter-authenticate>` in your client project.
      This example uses :ref:`anonymous authentication <flutter-login-anonymous>`.

      .. literalinclude:: /examples/generated/flutter/add_sync_to_app.snippet.log-in.dart
        :language: dart

   .. step:: Open a Synced Realm

      Use a Flexible Sync configuration to :ref:`open the realm as a synced realm <flutter-open-synced-realm>`.
      Also :ref:`add a subscription <flutter-flexible-sync-manage-subscriptions>`
      to synchronize data matching the subscription query.

      .. literalinclude:: /examples/generated/flutter/add_sync_to_app.snippet.opened-synced-realm.dart
        :language: dart

Use the Realm
-------------

The syntax to :ref:`read <flutter-read-data>`, :ref:`write
<flutter-write-operations>`, and
:ref:`watch for changes <flutter-react-to-changes>` on a
synced realm is identical to the syntax for non-synced realms.
While you work with local data, a background thread integrates,
uploads, and downloads changesets.

The following code creates a new ``Car`` object and writes it to the realm:

.. literalinclude:: /examples/generated/flutter/add_sync_to_app.snippet.write.dart
   :language: dart
