# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: 2013-12-16 23:09+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/reference/operator/meta/max.txt:3
msgid "$max"
msgstr ""

#: ../source/reference/operator/meta/max.txt:14
msgid "Definition"
msgstr ""

#: ../source/includes/extracts/mongo-shell-deprecated-meta-operator-max.rst:6
msgid "Deprecated in the ``mongo`` Shell since v3.2"
msgstr ""

#: ../source/includes/extracts/mongo-shell-deprecated-meta-operator-max.rst:5
msgid ""
"Starting in v3.2, the :operator:`$max` operator is deprecated in the "
":binary:`~bin.mongo` shell. In the :binary:`~bin.mongo` shell, use "
":method:`cursor.max()` instead."
msgstr ""

#: ../source/reference/operator/meta/max.txt:20
msgid ""
"Specify a :operator:`$max` value to specify the *exclusive* upper bound "
"for a specific index in order to constrain the results of "
":method:`~db.collection.find()`. The :operator:`$max` specifies the upper"
" bound for *all* keys of a specific index *in order*."
msgstr ""

#: ../source/reference/operator/meta/max.txt:25
msgid ""
"The :binary:`~bin.mongo` shell provides the :method:`~cursor.max()` "
"wrapper method:"
msgstr ""

#: ../source/reference/operator/meta/max.txt:32
msgid "You can also specify :operator:`$max` with either of the two forms:"
msgstr ""

#: ../source/reference/operator/meta/max.txt:40
msgid "Behavior"
msgstr ""

#: ../source/reference/operator/meta/max.txt:43
msgid "Interaction with Index Selection"
msgstr ""

#: ../source/reference/operator/meta/max.txt:45
msgid ""
"Because :method:`~cursor.max()` requires an index on a field, and forces "
"the query to use this index, you may prefer the :query:`$lt` operator for"
" the query if possible. Consider the following example:"
msgstr ""

#: ../source/reference/operator/meta/max.txt:54
msgid ""
"The query uses the index on the ``age`` field, even if the index on "
"``_id`` may be better."
msgstr ""

#: ../source/reference/operator/meta/max.txt:58
msgid "Index Bounds"
msgstr ""

#: ../source/reference/operator/meta/max.txt:60
msgid "If you use :operator:`$max` with :operator:`$min` to specify a range:"
msgstr ""

#: ../source/reference/operator/meta/max.txt:62
msgid ""
"the index bounds specified in :operator:`$min` and :operator:`$max` must "
"both refer to the keys of the same index."
msgstr ""

#: ../source/reference/operator/meta/max.txt:65
msgid ""
"the bound specified by :operator:`$max` must be greater than the bound "
"specified by :operator:`$min`."
msgstr ""

#: ../source/reference/operator/meta/max.txt:71
msgid "``$max`` without ``$min``"
msgstr ""

#: ../source/includes/fact-query-min-max.rst:1
msgid ""
"The :operator:`min` and :operator:`max` operators indicate that the "
"system should avoid normal query planning. Instead they construct an "
"index scan where the index bounds are explicitly specified by the values "
"given in :operator:`min` and :operator:`max`."
msgstr ""

#: ../source/includes/fact-query-min-max.rst:8
msgid ""
"If one of the two boundaries is not specified, the query plan will be an "
"index scan that is unbounded on one side. This may degrade performance "
"compared to a query containing neither operator, or one that uses both "
"operators to more tightly constrain the index scan."
msgstr ""

#: ../source/reference/operator/meta/max.txt:76
msgid "Examples"
msgstr ""

#: ../source/reference/operator/meta/max.txt:78
msgid "The following examples use the :binary:`~bin.mongo` shell wrappers."
msgstr ""

#: ../source/reference/operator/meta/max.txt:81
msgid "Specify Exclusive Upper Bound"
msgstr ""

#: ../source/reference/operator/meta/max.txt:83
msgid ""
"Consider the following operations on a collection named ``collection`` "
"that has an index ``{ age: 1 }``:"
msgstr ""

#: ../source/reference/operator/meta/max.txt:90
msgid ""
"This operation limits the query to those documents where the field "
"``age`` is less than ``100`` and forces a query plan which scans the ``{ "
"age: 1 }`` index from :bsontype:`MinKey <data_minkey>` to 100."
msgstr ""

#: ../source/reference/operator/meta/max.txt:95
msgid "Index Selection"
msgstr ""

#: ../source/reference/operator/meta/max.txt:97
msgid ""
"You can explicitly specify the corresponding index with "
":method:`~cursor.hint()`. Otherwise, MongoDB selects the index using the "
"fields in the :operator:`$max` and :operator:`$min` bounds; however, if "
"multiple indexes exist on same fields with different sort orders, the "
"selection of the index may be ambiguous."
msgstr ""

#: ../source/reference/operator/meta/max.txt:103
msgid ""
"Consider a collection named ``collection`` that has the following two "
"indexes:"
msgstr ""

#: ../source/reference/operator/meta/max.txt:111
msgid ""
"Without explicitly using :method:`~cursor.hint()`, MongoDB may select "
"either index for the following operation:"
msgstr ""

#: ../source/reference/operator/meta/max.txt:119
msgid "Use with ``$min``"
msgstr ""

#: ../source/reference/operator/meta/max.txt:121
msgid ""
"Use :operator:`$max` alone or in conjunction with :operator:`$min` to "
"limit results to a specific range for the *same* index, as in the "
"following example:"
msgstr ""

#: ../source/reference/operator/meta/max.txt:129
msgid ""
"The bound specified by :operator:`$max` must be greater than the bound "
"specified by :operator:`$min`."
msgstr ""

# 76f6d48b6ab14fdabff7600af7d26b0c
#~ msgid ""
#~ "Specify a :operator:`$max` value to "
#~ "specify the *exclusive* upper bound for"
#~ " a specific index in order to "
#~ "constrain the results of "
#~ ":method:`~db.collection.find()`. The :program:`mongo` "
#~ "shell provides the :method:`~cursor.max()` "
#~ "wrapper method:"
#~ msgstr ""

# 1131116ad2b64c6ab927a4152b6eeac1
#~ msgid "You can also specify the option with either of the two forms:"
#~ msgstr ""

# cf466399ae7d4ba3ba08a4fa0862d0b3
#~ msgid ""
#~ "The :operator:`$max` specifies the upper "
#~ "bound for *all* keys of a specific"
#~ " index *in order*."
#~ msgstr ""

# aa6acc6a2f13433c81121122c3a5c743
#~ msgid ""
#~ "This operation limits the query to "
#~ "those documents where the field ``age``"
#~ " is less than ``100`` using the "
#~ "index ``{ age: 1 }``."
#~ msgstr ""

# ac7776e684ec4e7eb56e2dafab1572d1
#~ msgid ""
#~ "You can explicitly specify the "
#~ "corresponding index with :method:`~cursor.hint()`."
#~ " Otherwise, MongoDB selects the index "
#~ "using the fields in the ``indexBounds``;"
#~ " however, if multiple indexes exist "
#~ "on same fields with different sort "
#~ "orders, the selection of the index "
#~ "may be ambiguous."
#~ msgstr ""

