# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/tutorial/configure-mongo-shell.txt:3
msgid "Configure the ``mongo`` Shell"
msgstr ""

#: ../source/tutorial/configure-mongo-shell.txt:16
msgid "Customize the Prompt"
msgstr ""

#: ../source/tutorial/configure-mongo-shell.txt:18
msgid ""
"You may modify the content of the prompt by setting the variable "
"``prompt`` in the :binary:`~bin.mongo` shell. The ``prompt`` variable can"
" hold strings as well as JavaScript code. If ``prompt`` holds a function "
"that returns a string, :binary:`~bin.mongo` can display dynamic "
"information in each prompt."
msgstr ""

#: ../source/tutorial/configure-mongo-shell.txt:24
msgid ""
"You can add the logic for the prompt in the :ref:`.mongorc.js <mongo-"
"mongorc-file>` file to set the prompt each time you start up the "
":binary:`~bin.mongo` shell."
msgstr ""

#: ../source/tutorial/configure-mongo-shell.txt:29
msgid "Customize Prompt to Display Number of Operations"
msgstr ""

#: ../source/tutorial/configure-mongo-shell.txt:31
msgid ""
"For example,to create a :binary:`~bin.mongo` shell prompt with the number"
" of operations issued in the current session, define the following "
"variables in the :binary:`~bin.mongo` shell:"
msgstr ""

#: ../source/tutorial/configure-mongo-shell.txt:42
#: ../source/tutorial/configure-mongo-shell.txt:64
#: ../source/tutorial/configure-mongo-shell.txt:84
msgid "The prompt would then resemble the following:"
msgstr ""

#: ../source/tutorial/configure-mongo-shell.txt:51
msgid "Customize Prompt to Display Database and Hostname"
msgstr ""

#: ../source/tutorial/configure-mongo-shell.txt:53
msgid ""
"To create a :binary:`~bin.mongo` shell prompt in the form of "
"``<database>@<hostname>$``, define the following variables:"
msgstr ""

#: ../source/tutorial/configure-mongo-shell.txt:71
msgid "Customize Prompt to Display Up Time and Document Count"
msgstr ""

#: ../source/tutorial/configure-mongo-shell.txt:73
msgid ""
"To create a :binary:`~bin.mongo` shell prompt that contains the system up"
" time *and* the number of documents in the current database, define the "
"following ``prompt`` variable in the :binary:`~bin.mongo` shell:"
msgstr ""

#: ../source/tutorial/configure-mongo-shell.txt:91
msgid "Use an External Editor in the ``mongo`` Shell"
msgstr ""

#: ../source/tutorial/configure-mongo-shell.txt:93
msgid ""
"You can use your own editor in the :binary:`~bin.mongo` shell by setting "
"the :envvar:`EDITOR` environment variable *before* starting the "
":binary:`~bin.mongo` shell."
msgstr ""

#: ../source/tutorial/configure-mongo-shell.txt:102
msgid ""
"Once in the :binary:`~bin.mongo` shell, you can edit with the specified "
"editor by typing ``edit <variable>`` or ``edit <function>``, as in the "
"following example:"
msgstr ""

#: ../source/tutorial/configure-mongo-shell.txt:106
msgid "Define a function ``myFunction``:"
msgstr ""

#: ../source/tutorial/configure-mongo-shell.txt:112
msgid "Edit the function using your editor:"
msgstr ""

#: ../source/tutorial/configure-mongo-shell.txt:118
msgid ""
"The command should open the ``vim`` edit session. When finished with the "
"edits, save and exit ``vim`` edit session."
msgstr ""

#: ../source/tutorial/configure-mongo-shell.txt:121
msgid ""
"In the :binary:`~bin.mongo` shell, type ``myFunction`` to see the "
"function definition:"
msgstr ""

#: ../source/tutorial/configure-mongo-shell.txt:128
msgid "The result should be the changes from your saved edit:"
msgstr ""

#: ../source/tutorial/configure-mongo-shell.txt:138
msgid ""
"As :binary:`~bin.mongo` shell interprets code edited in an external "
"editor, it may modify code in functions, depending on the JavaScript "
"compiler. For example, :binary:`~bin.mongo` may convert ``1+1`` to ``2`` "
"or remove comments. The actual changes affect only the appearance of the "
"code and will vary based on the version of JavaScript used but will not "
"affect the semantics of the code."
msgstr ""

#: ../source/tutorial/configure-mongo-shell.txt:146
msgid "Change the ``mongo`` Shell Batch Size"
msgstr ""

#: ../source/tutorial/configure-mongo-shell.txt:148
msgid ""
"The :method:`db.collection.find()` method is the JavaScript method to "
"retrieve documents from a :term:`collection`. The "
":method:`db.collection.find()` method returns a :term:`cursor` to the "
"results; however, in the :binary:`~bin.mongo` shell, if the returned "
"cursor is not assigned to a variable using the ``var`` keyword, then the "
"cursor is automatically iterated up to 20 times to print up to the first "
"20 documents that match the query. The :binary:`~bin.mongo` shell will "
"prompt ``Type it`` to iterate another 20 times."
msgstr ""

#: ../source/tutorial/configure-mongo-shell.txt:157
msgid ""
"You can set the ``DBQuery.shellBatchSize`` attribute to change the number"
" of documents from the default value of ``20``, as in the following "
"example which sets it to ``10``:"
msgstr ""

