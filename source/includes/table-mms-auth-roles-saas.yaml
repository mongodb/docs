# This table is embedded in source/management/permissions.txt
section: layout
header: [ meta.header1, meta.header2, meta.header3 ]
rows:
  - 1: [ content.product1, content.mms, content.mms ]
  - 2: [ content.product2, content.dbprof, content.dbprof ]
  - 3: [ content.product3, content.nodbstats, content.nodbstats ]
  - 4: [ content.product4, content.no_backup, content.backup ]
---
# table metadata, as meta.<key>
section: meta
header1: ""
header2: |
  Single Instance: in a :program:`mongo` shell connected to the :program:`mongod`.
header3: |
  MongoDB Deployment: in a :program:`mongo` shell connected to either the replica set :manual:`primary </core/replica-set-primary>` **or** a :program:`mongos`.
---
# table content, as content.<key>
section: content
product1: |
   MMS Monitoring
product2: |
   MMS Monitoring with Database Profiling
product3: |
   MMS Monitoring *without* ``dbStats``
product4: |
   MMS Backup
mms: |
   .. code-block:: javascript

      use admin
      db.addUser( { user: "<username>",
                    pwd: "<password>",
                    roles: [ "clusterAdmin",
                             "readAnyDatabase"
                           ]
                   } )
dbprof: |
   .. code-block:: javascript

      use admin
      db.addUser( { user: "<username>",
                    pwd: "<password>",
                    roles: [ "clusterAdmin",
                             "readAnyDatabase",
                             "dbAdminAnyDatabase"
                           ]
                   } )
backup: |
   .. code-block:: javascript

      use admin
      db.addUser( { user: "<username>",
                    pwd: "<password>",
                    roles: [ "clusterAdmin",
                             "readAnyDatabase",
                             "userAdminAnyDatabase"
                           ]
                    otherDBRoles: { local: ["readWrite"],
                                    admin: ["readWrite"] }
                   } )
nodbstats: |
   .. code-block:: javascript

      use admin
      db.addUser( { user: "<username>",
                    pwd: "<password>",
                    roles: [ "clusterAdmin"
                           ]
                   } )

no_backup: |
   MMS Backup does not support standalone deployments.
...
