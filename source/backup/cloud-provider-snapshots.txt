.. _backup-cloud-provider:

========================
Cloud Provider Snapshots
========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. include:: /includes/fact-atlas-free-tier-limits.rst

|service| Cloud Provider Snapshots provide localized backup storage
using the native snapshot functionality of the cluster's cloud service
provider.

|service| supports cloud provider snapshots for
:ref:`Microsoft Azure <microsoft-azure>`,
:ref:`Amazon Web Services (AWS) <amazon-aws>`, and
:ref:`Google Cloud Provider (GCP) <google-gcp>` backed clusters.

You can enable cloud provider snapshots during the
:doc:`cluster creation </create-new-cluster>` or during the
:doc:`modification of an existing cluster </scale-cluster>`.
From the cluster configuration modal, toggle
``Do you want to enable backup?`` to ``Yes`` and select the
:guilabel:`Cloud Provider Snapshots` card.

.. include:: /includes/extracts/backup-selection-cloud-provider.rst

.. note::

   |service| supports Cloud Provider Snapshots for sharded clusters
   running MongoDB version 3.4+ with the following limitations:

   * |service| does not guarantee :ref:`causal consistency <causal-consistency>`
     of your data.

   * You cannot restore an existing snapshot to a cluster after you
     change that cluster's topology by adding or removing a shard.
     However, you can restore an existing snapshot to another cluster
     with a matching topology.

   * You cannot :manual:`manually migrate chunks </tutorial/migrate-chunks-in-sharded-cluster>`
     in a cluster during a snapshot without the risk of creating an
     inconsistent shapshot.

.. _encrypted-cloud-provider-snapshot:

Cloud Provider Snapshots with Encryption at Rest
------------------------------------------------

|service| encrypts all snapshot volumes, ensuring the security of
cluster data at rest (Encryption at Rest). For projects and clusters
using :ref:`security-kms-encryption`, |service| applies an additional
layer of encryption to your snapshot storage volumes using the 
Key Management Service (KMS) provider configured for the cluster.

.. note::

   Cloud Provider Snapshots with Encryption at Rest is not currently
   available for GCP-backed clusters.

.. tabs::

   tabs:

   - id: aws-kms

     name: "AWS Identity and Access Management (IAM)"

     content: |

       For clusters using :doc:`AWS IAM </security-aws-kms>` as their
       Key Management Service, |service| uses the project's 
       customer master key (CMK) and AWS 
       :abbr:`IAM (Identity and Access Management)` user credentials at 
       the time of the snapshot to automatically encrypt the snapshot 
       data files. This is an additional layer of encryption on the 
       existing encryption applied to all |service| storage and snapshot 
       volumes.

       |service| stores the unique ID of the 
       :abbr:`CMK (customer master key)` and the AWS 
       :abbr:`IAM (Identity and Access Management)` user credentials 
       used to access the :abbr:`CMK (customer master key)`. |service| 
       uses this information when restoring the snapshot. For complete 
       documentation on restoring an encrypted snapshot, 
       see :ref:`restore-encrypted-snapshot`.

       To view the key used to encrypt a snapshot:

       #. From the :guilabel:`Clusters` view of the |service| UI, click 
          on the cluster name.

       #. Click the :guilabel:`Backup` tab, then click 
          :guilabel:`Snapshots`.

       #. Note the :guilabel:`Encryption Key ID` for each snapshot in 
          the cluster. |service| lists the 
          :abbr:`CMK (Customer Master Key)` used to encrypt the 
          snapshot. Unencrypted snapshots display
          :guilabel:`Not enabled`.

       .. include:: /includes/fact-encrypted-backups-master-key-requirements.rst

   - id: azure-kms

     name: "Azure Key Vault"

     content: |

       For clusters using :doc:`Azure Key Vault </security-azure-kms>`
       as their Key Management Service, |service| uses the project's
       Key Identifier, Key Vault Credentials, and Active Directory
       application account credentials at the time of the snapshot to
       automatically encrypt the snapshot data files. This is an
       additional layer of encryption on the existing encryption 
       applied to all |service| storage and snapshot volumes.

       |service| stores the unique ID of the 
       Azure Key Identifier used the encrypt the snapshot. |service|
       also stores the Azure Key Vault
       credentials and the Active Domain application account
       credentials used to access the Key Identifier. 
       |service| uses this information when restoring the snapshot. 
       For complete documentation on restoring an encrypted snapshot, 
       see :ref:`restore-encrypted-snapshot`.

       To view the key used to encrypt a snapshot:

       #. From the :guilabel:`Clusters` view of the |service| UI, click 
          on the cluster name.

       #. Click the :guilabel:`Backup` tab, then click 
          :guilabel:`Snapshots`.

       #. Note the :guilabel:`Encryption Key ID` for each snapshot in 
          the cluster. |service| lists the Key Identifier
          used to encrypt the snapshot. Unencrypted snapshots display
          :guilabel:`Not enabled`.

       .. include:: /includes/fact-encrypted-backups-master-key-requirements.rst

For complete documentation on configuring Encryption at Rest using
your Key Management for an |service| project,
see :doc:`/security-kms-encryption`. You can then either
:ref:`deploy <create-cluster-enable-encryption>` a new cluster
:ref:`enable <scale-cluster-enable-encryption>` an existing cluster
with Encryption at Rest using your Key Management.

Single Region Cluster Backups
-----------------------------

.. tabs::

     tabs:
     - id: aws-gcp
       name: AWS / GCP
       content: |

         |service| selects the :term:`primary` member of the cluster
         *at the time you enable snapshots for the cluster*. |service|
         stores the snapshots in the same cloud region as the cluster.
         |service| retains snapshots based on the :ref:`retention policy
         <cloud-provider-retention-policy>`.

         .. include:: /images/cloud-provider-snapshot-single-region-primary.rst

         |service| continues to use that member and its
         corresponding region for snapshots and snapshot storage, even
         if that member is no longer the primary.

         .. include:: /images/cloud-provider-snapshot-single-region-secondary.rst

         |service| automatically creates a new snapshot storage volume
         if the existing snapshot storage volume becomes invalid.
         |service| creates the new volume in the same region as the
         cluster's current primary. |service| then takes a full-copy
         snapshot to maintain backup availability and continues using
         that member and its corresponding region for further
         incremental snapshots.

         Events that can trigger storage invalidation include:

         - Changing the |service| cluster instance size,
         - Modifying the |service| cluster's storage volume or speed,
         - Changing the |service| cluster's :abbr:`AWS (Amazon Web Services)` region, and
         - Maintenance performed by |service| or :abbr:`AWS (Amazon Web Services)`.

         To manually reset the snapshot target and storage, disable and
         re-enable backups for the cluster. Disabling |service| backups
         removes all snapshots for the cluster.
         For more information on snapshot retention, see
         :ref:`cloud-provider-retention-policy`.

     - id: azure
       name: Azure
       content: |

         |service| always selects the :term:`primary` member of the
         cluster for backup snapshots and stores the 
         snapshots in the same cloud region as the cluster. |service| 
         retains snapshots based on the 
         :ref:`retention policy <cloud-provider-retention-policy>`.

         .. include:: /images/cloud-provider-snapshot-single-region-primary.rst

         If that member steps down
         to a :term:`secondary`, |service| changes the snapshot
         target to the current :term:`primary`.

         .. include:: /images/cloud-provider-snapshot-single-region-moved-primary.rst

Multi-Region Cluster Backups
----------------------------

.. tabs::

     tabs:
  
     - id: aws-gcp
       name: AWS / GCP
       content: |

         |service| selects the :term:`primary` member of the cluster
         *at the time you enable snapshots for the cluster* for backup
         snapshots. |service| stores the snapshots in the same region as
         the primary member. |service| retains snapshots based on the
         :ref:`retention policy <cloud-provider-retention-policy>`.

         .. include:: /images/cloud-provider-snapshot-multi-region-primary.rst

         If the member steps down to a :term:`secondary`, |service|
         continues to use that member for snapshots. |service|
         continues storing snapshots in the same region as that member,
         even if the primary is in a different region.

         .. include:: /images/cloud-provider-snapshot-multi-region-secondary.rst

         |service| automatically creates a new snapshot storage volume
         if the existing snapshot storage volume becomes invalid.
         |service| creates the new volume in the same region as the
         cluster's current primary. |service| then takes a full-copy
         snapshot to maintain backup availability and continues using
         that member and its corresponding region for further
         incremental snapshots.

         Events that can trigger storage invalidation include:

         - Changing the |service| cluster instance size,
         - Modifying the |service| cluster's storage volume or speed,
         - Changing the |service| cluster's :abbr:`AWS (Amazon Web Services)` region, and
         - Maintenance performed by |service| or :abbr:`AWS (Amazon Web Services)`.

         To manually reset the snapshot target and storage, disable and
         re-enable backups for the cluster. Disabling |service| backups
         removes all snapshots for the cluster.
         For more information on snapshot retention, see
         :ref:`cloud-provider-retention-policy`.
  
     - id: azure
       name: Azure
       content: |
  
         |service| always selects the :term:`primary` member of the
         cluster for backup snapshots and stores the snapshots
         in the same region as the primary member. |service| retains 
         snapshots based on the 
         :ref:`retention policy <cloud-provider-retention-policy>`.

         .. include:: /images/cloud-provider-snapshot-multi-region-primary.rst

         If that member steps down
         to a :term:`secondary`, |service| changes the snapshot
         target to the current :term:`primary`.

         .. include:: /images/cloud-provider-snapshot-multi-region-moved-primary.rst

         |service| stores subsequent snapshots in the region of the
         new primary member.

.. _sharded-global-cluster-backup:

Global Cluster Backups
----------------------

|service| provides backups for :doc:`Global Clusters </global-clusters>`
using Cloud Provider Snapshots as their backup method. |service| restores
the shards in the source cluster to the corresponding shards in the target
cluster using the same order as specified in the cluster configuration.
For example, ``shard0`` in the source cluster is restored to ``shard0``
in the target cluster.

.. note::

   If you used the API to create your Global Cluster, the zones are defined
   in the ``replicationSpecs`` parameter in the :doc:`Create a Cluster
   </reference/api/clusters-create-one>` and :doc:`Modify a Cluster
   </reference/api/clusters-modify-one>` APIs.


If the cluster configurations of the source and target clusters do not match,
shard data may migrate to a different cloud provider zone than where it
resided in the source cluster. After |service| completes the restore
operation, the MongoDB :term:`balancer` for the target cluster migrates the
data back to the zone where it resided in the source cluster if
your clusters meet the following requirements:

* Both clusters have enabled a |global-write-cluster| on the same collection

* Both clusters use the same :term:`shard key` for the |global-write|-enabled
  collection

.. note::

   If the |global-write|-enabled collection on the target cluster does not
   contain any data, the MongoDB balancer for the cluster automatically distributes
   any data that you later add to the collection among the target cluster's
   shards.

To enable global writes on the target cluster:

1. Click :guilabel:`Collections` beneath the target cluster on the
   :guilabel:`Clusters` page.

#. Click :guilabel:`Enable Global Writes`.

.. _cloud-provider-backup-schedule:
.. _cloud-provider-retention-policy:

Snapshot Scheduling and Retention Policy
----------------------------------------

|service| takes the first snapshot when you enable cloud provider
snapshots for a cluster and takes subsequent snapshots of the cluster
every 24 hours from that point in time. By default, |service| retains
the last 3 snapshots for each cluster.

You can view and customize the snapshot schedule and retention settings:

#. From the :guilabel:`Clusters` view, click on the cluster name.
#. Click on the :guilabel:`Backup` tab.
#. Click :guilabel:`Backup Policy`.

|service| displays the UTC snapshot time using the 24-hour clock format.
To modify the snapshot time, click the dropdown for the :guilabel:`hr`
or :guilabel:`min` and select your preferred hour or minute for
|service| to take snapshots. The first snapshot taken after updating
the snapshot schedule occurs within 24 hours, breaking the default
behavior of one snapshot every 24 hours. All subsequent
snapshots occur once every 24 hours at the configured point in time.

|service| displays the number of snapshots to retain in a text
input field. Type in your preferred number of snapshots for retention.
Changing the number of retained snapshots effects the total cost
of backups for the cluster. For complete documentation on cloud provider
snapshot billing, see :ref:`billing-backup-cloud-provider-snapshots`.
If you decrease the number of retained snapshots, |service|
immediately deletes the extra snapshots.

Click :guilabel:`Save Changes` to save any changes you've made to either
the snapshot schedule or retention settings.

.. important::

   If you disable cloud provider snapshots for a cluster or terminate a
   cluster that had snapshots enabled, |service| immediately
   deletes the backup snapshots for that cluster. For clusters not
   using :ref:`security-kms-encryption`
   you can :ref:`download the latest snapshot 
   <restore-cloud-provider-snapshot-download>` to preserve any data
   stored in the cluster.

.. _cloud-provider-snapshots-on-demand:
.. _on-demand-snapshots:

On-Demand Snapshots
-------------------

|service| takes on-demand snapshots immediately, unlike scheduled
snapshots which occur at :doc:`regular intervals </reference/api/cloud-provider-snapshot-schedule>`.
If there is already an on-demand snapshot with a status of ``queued`` or
``inProgress``, you must wait until |service| has completed the on-demand
snapshot before taking another. If there is already a scheduled snapshot
with a status of ``queued`` or ``inProgress``, you may queue an on-demand
snapshot. You must have the :authrole:`Organization Owner` or :authrole:`Project Owner`
role to successfully call this endpoint.

To take an on-demand snapshot:

1. From the :guilabel:`Clusters` view, click the :icon:`ellipsis-h` button
   below the cluster name and select :guilabel:`Take Snapshot Now`.

#. In the :guilabel:`On-Demand Snapshot` modal, enter the following:

   a. In the :guilabel:`Retention` box, enter the number of days that
      you want |service| to retain the snapshot.

   b. In the :guilabel:`Description` box, enter a descriptive name
      for the snapshot.

#. Click :guilabel:`Take Snapshot`.

Click the :guilabel:`Backup` tab, then click :guilabel:`Snapshots` for
the cluster to view the on-demand snapshot.

.. note::

   The :guilabel:`Take Snapshot Now` button also appears on the :guilabel:`Snapshots`
   page for the cluster.
