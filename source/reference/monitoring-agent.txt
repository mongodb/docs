==============================
Monitoring Agent Configuration
==============================

.. default-domain:: mongodb

Configuration File
------------------

The location of the Monitoring Agent configuration file depends on your
operating system:

- RHEL, CentOS, Amazon Linux, and Ubuntu all use a package manager to
  install the agent. The package manager creates the following agent
  configuration file:

  ``/etc/mongodb-mms/monitoring-agent.config``

- OS X, Windows, and other Linux systems use either a ``tar`` or ``msi``
  file for the installation. The Monitoring Agent stores its configuration
  in the following file:

  ``<installation directory>/monitoring-agent.config``

Settings
--------

.. _monitoring-agent-connection-settings:

Connection Settings
~~~~~~~~~~~~~~~~~~~

For the Monitoring Agent communication with the MMS Servers, the following
connection settings are **required**:

.. msetting:: mmsApiKey

   *Type*: string

   The MMS agent API key for a MMS group. To retrieve the key from the MMS
   interface, click the :guilabel:`Administration` tab, then the
   :guilabel:`Agents` page, and then the link for your operating system.
   MMS will display the MMS API key used by your MMS group.

   For example:

   .. code-block:: ini

      mmsApiKey=abc123

.. msetting:: mmsBaseUrl

   *Type*: string

   The URL of the MMS Web Server.

.. only:: onprem

   Set this to the URL of your MMS HTTP Service.
   For example:

   .. code-block:: ini

      mmsBaseUrl=http://example.com:8080

HTTP Proxy Settings
~~~~~~~~~~~~~~~~~~~

.. msetting:: httpProxy

   .. versionadded:: 2.3.1

   *Type*: string

   To connect to the MMS HTTP Service via a proxy, specify the URL of
   the proxy. For example:

   .. code-block:: ini

      httpProxy=http://example-proxy.com:8080

.. _monitoring-agent-ssl-settings:

MongoDB SSL Settings
~~~~~~~~~~~~~~~~~~~~

Specify these settings when the Monitoring Agent is connecting to MongoDB
instances with SSL.

.. msetting:: useSslForAllConnections

   *Type*: boolean

   Set to ``true`` to enables SSL support globally and to use SSL for all
   MongoDB connections. Setting this to ``true`` overrides any per-host
   SSL settings configured in the |mms| interface.

   When ``true``, |mms| requires that you also specify a value for
   the``sslTrustedServerCertificates`` setting.

.. msetting:: sslClientCertificate

   *Type*: string

   The path to the private key, client certificate, and
   optional intermediate certificates in PEM format. The agent will
   use the client certificate when connecting to any configured MongoDB that
   use SSL and require client certificates, i.e. that are running using the
   :option:`--sslCAFile <mongod --sslCAFile>` option.

.. msetting:: sslClientCertificatePassword

   *Type*: string

   The password needed to decrypt the private key in the sslClientCertificate
   file. This setting is only necessary if the client certificate PEM file is
   encrypted.

.. msetting:: sslTrustedServerCertificates

   *Type*: string

   The path on disk that contains the trusted certificate authority certificates
   in PEM format. These certificates will verify the server certificate
   returned from any MongoDBs running with SSL. For example:

   .. code-block:: ini

      sslTrustedServerCertificates=/etc/mongodb-mms/mongodb-certs.pem

.. msetting:: sslRequireValidServerCertificates

   *Type*: boolean

   Use this option to disable certificate verification by setting this
   value to ``false``. That configuration is only recommended for
   testing purposes as it makes connections susceptible to man-in-the-middle
   attacks.

.. _mongodb-kerberos-settings:

MongoDB Kerberos Settings
~~~~~~~~~~~~~~~~~~~~~~~~~

See :doc:`/tutorial/connect-to-hosts-with-kerberos-authentication`

.. msetting:: krb5Principal

   *Type*: string

   The Kerberos principal used by the agent. For example:

   .. code-block:: ini

      krb5Principal=mmsagent/myhost@EXAMPLE.COM

.. msetting:: krb5Keytab

   *Type*: string

   The *absolute* path to Kerberos principal's keytab file. For
   example:

   .. code-block:: ini

      krb5Keytab=/etc/mongodb-mms/mms-monitoring-agent.keytab

.. mesetting:: gsappiServiceName

   *Type*: string

   The default service name used by MongoDB is ``mongodb`` can specify
   a custom service name with the :msetting:`gssapiServiceName` option.

.. _server-monitoring-ssl:

MMS Server SSL Settings
~~~~~~~~~~~~~~~~~~~~~~~

.. only:: onprem

   Advanced SSL settings used by the Monitoring Agent when communicating to the
   MMS HTTP Service.

.. only:: classic or cloud

   Advanced SSL settings used by the Monitoring Agent when communicating to the
   MMS HTTP Service.

.. msetting:: sslTrustedMMSServerCertificate

   By default the Monitoring Agent will use the trusted root CAs installed on the
   system. If the agent cannot find the trusted root CAs, configure
   these settings manually.

   .. only:: onprem

      If the MMS HTTP Service uses a self-signed SSL certificate, you
      *must* specify :msetting:`sslTrustedMMSServerCertificate`.

   The path on disk that contains the trusted certificate authority certificates
   in PEM format. The agent will use this certificate to verify that
   the agent is communicating with the designated MMS HTTP
   Service. For example:

   .. code-block:: ini

      sslTrustedMMSServerCertificate=/etc/mongodb-mms/mms-certs.pem

.. only:: onprem

   .. msetting:: sslRequireValidMMSServerCertificates

      *Type*: boolean

      You can disable certificate verification by setting this value
      to  ``false``. That configuration is only recommended for
      testing purposes as it makes connections susceptible to
      *man-in-the-middle* attacks.

Munin Settings
~~~~~~~~~~~~~~

See :doc:`/tutorial/configure-monitoring-munin-node` for information on
configuring Munin-node.

.. msetting:: enableMunin

   *Type*: boolean

   Set to ``false`` if you do not with the Monitoring Agent to
   collect hardware statistics via Munin-node. The default is
   ``true``. If the agent detects ``munin-node``, MMS will collect
   hardware statistics.

Deprecated Settings
~~~~~~~~~~~~~~~~~~~

MongoDB Authentication Settings
+++++++++++++++++++++++++++++++

If all monitored MongoDB instances use the same MONGODB-CR
credentials, you may use these settings. Setting the username and
password here will override any configuration in the MMS UI.

See :doc:`/reference/required-access-monitoring-agent` for information
on the privileges needed for this user.

.. msetting:: globalAuthUsername

   *Type*: string

   The MongoDB username that the Monitoring Agent will use to connect.
   **This value overrides all other usernames configured for the
   Monitoring Agent.**

   Example:

   .. code-block:: ini

      globalAuthUsername=mms-monitoring-agent

.. msetting:: globalAuthPassword

   *Type*: string

   The password for the ``globalAuthUsername`` user. **This value
   overrides all other passwords configured for the Monitoring Agent.**

   Example:

   .. code-block:: ini

      globalAuthPassword=somePassword
