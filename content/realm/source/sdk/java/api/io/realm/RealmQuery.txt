.. meta::
   :robots: noindex, nosnippet


.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol



Class RealmQuery
^^^^^^^^^^^^^^^^

.. _io_realm_RealmQuery:



io.realm
========


 | `java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ 
 | 		io.realm.RealmQuery


A RealmQuery encapsulates a query on a :ref:`io.realm.Realm <io_realm_Realm>`  or a :ref:`io.realm.RealmResults <io_realm_RealmResults>`  using the Builder pattern. The query is executed using either :ref:`findAll() <io_realm_RealmQuery_findAll__>`  or :ref:`findFirst() <io_realm_RealmQuery_findFirst__>` .

The input to many of the query functions take a field name as String. Note that this is not type safe. If a RealmObject class is refactored care has to be taken to not break any queries.

A :ref:`io.realm.Realm <io_realm_Realm>`  is unordered, which means that there is no guarantee that querying a Realm will return the objects in the order they where inserted. Use :ref:`sort(String) <io_realm_RealmQuery_sort_String_>`  (String)} and similar methods if a specific order is required.



A RealmQuery cannot be passed between different threads.

Results are obtained quickly most of the times. However, launching heavy queries from the UI thread may result in a drop of frames or even ANRs. If you want to prevent these behaviors, you can instantiate a Realm using a :ref:`RealmConfiguration <io_realm_RealmConfiguration>`  that explicitly sets :ref:`RealmConfiguration.Builder.allowQueriesOnUiThread(boolean) <io_realm_RealmConfiguration_Builder_allowQueriesOnUiThread_boolean_>`  to ``false`` . This way queries will be forced to be launched from a non-UI thread. Alternatively, you can also use :ref:`findAllAsync() <io_realm_RealmQuery_findAllAsync__>`  or :ref:`findFirstAsync() <io_realm_RealmQuery_findFirstAsync__>` .






.. seealso::


   
   - `Builder pattern <http://en.wikipedia.org/wiki/Builder_pattern>`__ 
      
      
      
      
   - :ref:`Realm.where(Class) <io_realm_Realm_where_Class_>` 
      
      
      
   - :ref:`RealmResults.where() <io_realm_RealmResults_where__>` 
      
      
      
   
   
   



Method Summary
==============

.. list-table::
   :header-rows: 1
   
   * - Modifier and Type
     - Method and Description
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`alwaysFalse <io_realm_RealmQuery_alwaysFalse>` ()
       | 
       
       
       This predicate will never match, resulting in the query always returning 0 results.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`alwaysTrue <io_realm_RealmQuery_alwaysTrue>` ()
       | 
       
       
       This predicate will always match.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`and <io_realm_RealmQuery_and>` ()
       | 
       
       
       Logical-and two conditions Realm automatically applies logical-and between all query statements, so this is intended only as a mean to increase readability.
       
       
       
   
   * - public **double**
     - | :ref:`average <io_realm_RealmQuery_average>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       Returns the average of a given field.
       
       
       
   
   * - public **Decimal128**
     - | :ref:`averageDecimal128 <io_realm_RealmQuery_averageDecimal128>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       Returns the average of a given field.
       
       
       
   
   * - public **Decimal128**
     - | :ref:`averageRealmAny <io_realm_RealmQuery_averageRealmAny>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       Returns the average of a given field.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`beginGroup <io_realm_RealmQuery_beginGroup>` ()
       | 
       
       
       Begin grouping of conditions ("left parenthesis").
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`beginsWith <io_realm_RealmQuery_beginsWith>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  :ref:`RealmAny <io_realm_RealmAny>`  value, 
       |  :ref:`Case <io_realm_Case>`  casing
       | )
       
       
       Condition that the value of field begins with the specified substring.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`beginsWith <io_realm_RealmQuery_beginsWith>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  value, 
       |  :ref:`Case <io_realm_Case>`  casing
       | )
       
       
       Condition that the value of field begins with the specified substring.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`beginsWith <io_realm_RealmQuery_beginsWith>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  :ref:`RealmAny <io_realm_RealmAny>`  value
       | )
       
       
       Condition that the value of field begins with the specified string.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`beginsWith <io_realm_RealmQuery_beginsWith>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  value
       | )
       
       
       Condition that the value of field begins with the specified string.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`between <io_realm_RealmQuery_between>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **Decimal128** from, 
       |  **Decimal128** to
       | )
       
       
       Between condition.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`between <io_realm_RealmQuery_between>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  :ref:`RealmAny <io_realm_RealmAny>`  from, 
       |  :ref:`RealmAny <io_realm_RealmAny>`  to
       | )
       
       
       Between condition.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`between <io_realm_RealmQuery_between>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `Date <https://docs.oracle.com/javase/7/docs/api/java/util/Date.html>`__  from, 
       |  `Date <https://docs.oracle.com/javase/7/docs/api/java/util/Date.html>`__  to
       | )
       
       
       Between condition.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`between <io_realm_RealmQuery_between>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **float** from, 
       |  **float** to
       | )
       
       
       Between condition.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`between <io_realm_RealmQuery_between>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **double** from, 
       |  **double** to
       | )
       
       
       Between condition.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`between <io_realm_RealmQuery_between>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **long** from, 
       |  **long** to
       | )
       
       
       Between condition.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`between <io_realm_RealmQuery_between>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **int** from, 
       |  **int** to
       | )
       
       
       Between condition.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`contains <io_realm_RealmQuery_contains>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  :ref:`RealmAny <io_realm_RealmAny>`  value, 
       |  :ref:`Case <io_realm_Case>`  casing
       | )
       
       
       Condition that value of field contains the specified substring.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`contains <io_realm_RealmQuery_contains>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  value, 
       |  :ref:`Case <io_realm_Case>`  casing
       | )
       
       
       Condition that value of field contains the specified substring.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`contains <io_realm_RealmQuery_contains>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  :ref:`RealmAny <io_realm_RealmAny>`  value
       | )
       
       
       Condition that value of field contains the specified substring.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`contains <io_realm_RealmQuery_contains>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  value
       | )
       
       
       Condition that value of field contains the specified substring.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`containsEntry <io_realm_RealmQuery_containsEntry>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `java.util.Map.Entry\<java.lang.String, ?> <https://docs.oracle.com/javase/7/docs/api/java/util/Map/Entry.html>`__  entry
       | )
       
       
       Condition that value, if a dictionary field, contains the specified entry.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`containsKey <io_realm_RealmQuery_containsKey>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  key
       | )
       
       
       Condition that value, if a dictionary field, contains the specified key.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`containsValue <io_realm_RealmQuery_containsValue>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **ObjectId** value
       | )
       
       
       Condition that value, if a dictionary field, contains the specified value.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`containsValue <io_realm_RealmQuery_containsValue>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **Decimal128** value
       | )
       
       
       Condition that value, if a dictionary field, contains the specified value.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`containsValue <io_realm_RealmQuery_containsValue>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `Date <https://docs.oracle.com/javase/7/docs/api/java/util/Date.html>`__  value
       | )
       
       
       Condition that value, if a dictionary field, contains the specified value.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`containsValue <io_realm_RealmQuery_containsValue>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **byte[]** value
       | )
       
       
       Condition that value, if a dictionary field, contains the specified value.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`containsValue <io_realm_RealmQuery_containsValue>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  value
       | )
       
       
       Condition that value, if a dictionary field, contains the specified value.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`containsValue <io_realm_RealmQuery_containsValue>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `Float <https://docs.oracle.com/javase/7/docs/api/java/lang/Float.html>`__  value
       | )
       
       
       Condition that value, if a dictionary field, contains the specified value.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`containsValue <io_realm_RealmQuery_containsValue>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `Double <https://docs.oracle.com/javase/7/docs/api/java/lang/Double.html>`__  value
       | )
       
       
       Condition that value, if a dictionary field, contains the specified value.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`containsValue <io_realm_RealmQuery_containsValue>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `Long <https://docs.oracle.com/javase/7/docs/api/java/lang/Long.html>`__  value
       | )
       
       
       Condition that value, if a dictionary field, contains the specified value.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`containsValue <io_realm_RealmQuery_containsValue>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `Integer <https://docs.oracle.com/javase/7/docs/api/java/lang/Integer.html>`__  value
       | )
       
       
       Condition that value, if a dictionary field, contains the specified value.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`containsValue <io_realm_RealmQuery_containsValue>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `Short <https://docs.oracle.com/javase/7/docs/api/java/lang/Short.html>`__  value
       | )
       
       
       Condition that value, if a dictionary field, contains the specified value.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`containsValue <io_realm_RealmQuery_containsValue>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `Byte <https://docs.oracle.com/javase/7/docs/api/java/lang/Byte.html>`__  value
       | )
       
       
       Condition that value, if a dictionary field, contains the specified value.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`containsValue <io_realm_RealmQuery_containsValue>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `Boolean <https://docs.oracle.com/javase/7/docs/api/java/lang/Boolean.html>`__  value
       | )
       
       
       Condition that value, if a dictionary field, contains the specified value.
       
       
       
   
   * - public **long**
     - | :ref:`count <io_realm_RealmQuery_count>` ()
       | 
       
       
       Counts the number of objects that fulfill the query conditions.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`distinct <io_realm_RealmQuery_distinct>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  firstFieldName, 
       |  `java.lang.String[] <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  remainingFieldNames
       | )
       
       
       Selects a distinct set of objects of a specific class.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`endGroup <io_realm_RealmQuery_endGroup>` ()
       | 
       
       
       End grouping of conditions ("right parenthesis") which was opened by a call to ``beginGroup()`` .
       
       
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`endsWith <io_realm_RealmQuery_endsWith>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  :ref:`RealmAny <io_realm_RealmAny>`  value, 
       |  :ref:`Case <io_realm_Case>`  casing
       | )
       
       
       Condition that the value of field ends with the specified substring.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`endsWith <io_realm_RealmQuery_endsWith>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  value, 
       |  :ref:`Case <io_realm_Case>`  casing
       | )
       
       
       Condition that the value of field ends with the specified substring.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`endsWith <io_realm_RealmQuery_endsWith>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  :ref:`RealmAny <io_realm_RealmAny>`  value
       | )
       
       
       Condition that the value of field ends with the specified string.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`endsWith <io_realm_RealmQuery_endsWith>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  value
       | )
       
       
       Condition that the value of field ends with the specified string.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`equalTo <io_realm_RealmQuery_equalTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **ObjectId** value
       | )
       
       
       Equal-to comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`equalTo <io_realm_RealmQuery_equalTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **Decimal128** value
       | )
       
       
       Equal-to comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`equalTo <io_realm_RealmQuery_equalTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  :ref:`RealmAny <io_realm_RealmAny>`  value, 
       |  :ref:`Case <io_realm_Case>`  casing
       | )
       
       
       Equal-to comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`equalTo <io_realm_RealmQuery_equalTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  value, 
       |  :ref:`Case <io_realm_Case>`  casing
       | )
       
       
       Equal-to comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`equalTo <io_realm_RealmQuery_equalTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  value
       | )
       
       
       Equal-to comparison.
       
       
       
   
   * - public :ref:`RealmResults <io_realm_RealmResults>` 
     - | :ref:`findAll <io_realm_RealmQuery_findAll>` ()
       | 
       
       
       Finds all objects that fulfill the query conditions.
       
       
       
   
   * - public :ref:`RealmResults <io_realm_RealmResults>` 
     - | :ref:`findAllAsync <io_realm_RealmQuery_findAllAsync>` ()
       | 
       
       
       Finds all objects that fulfill the query conditions.
       
       
       
   
   * - public **E**
     - | :ref:`findFirst <io_realm_RealmQuery_findFirst>` ()
       | 
       
       
       Finds the first object that fulfills the query conditions.
       
       
       
   
   * - public **E**
     - | :ref:`findFirstAsync <io_realm_RealmQuery_findFirstAsync>` ()
       | 
       
       
       Similar to :ref:`findFirst() <io_realm_RealmQuery_findFirst__>`  but runs asynchronously on a worker thread.
       
       
       
       
       
   
   * - public `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ 
     - | :ref:`getDescription <io_realm_RealmQuery_getDescription>` ()
       | 
       
       
       Returns a textual description of this query.
       
       
       
   
   * - public **long**
     - | :ref:`getQueryPointer <io_realm_RealmQuery_getQueryPointer>` ()
       | 
       
       
       Returns the pointer to the underlying C++ query.
       
       
       
   
   * - public :ref:`Realm <io_realm_Realm>` 
     - | :ref:`getRealm <io_realm_RealmQuery_getRealm>` ()
       | 
       
       
       Returns the :ref:`Realm <io_realm_Realm>`  instance to which this query belongs.
       
       
       
       
       
   
   * - public `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ 
     - | :ref:`getTypeQueried <io_realm_RealmQuery_getTypeQueried>` ()
       | 
       
       
       Returns the internal Realm name of the type being queried.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`greaterThan <io_realm_RealmQuery_greaterThan>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **ObjectId** value
       | )
       
       
       Greater-than comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`greaterThan <io_realm_RealmQuery_greaterThan>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **Decimal128** value
       | )
       
       
       Greater-than comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`greaterThan <io_realm_RealmQuery_greaterThan>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  :ref:`RealmAny <io_realm_RealmAny>`  value
       | )
       
       
       Greater-than comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`greaterThan <io_realm_RealmQuery_greaterThan>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `Date <https://docs.oracle.com/javase/7/docs/api/java/util/Date.html>`__  value
       | )
       
       
       Greater-than comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`greaterThan <io_realm_RealmQuery_greaterThan>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **float** value
       | )
       
       
       Greater-than comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`greaterThan <io_realm_RealmQuery_greaterThan>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **double** value
       | )
       
       
       Greater-than comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`greaterThan <io_realm_RealmQuery_greaterThan>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **long** value
       | )
       
       
       Greater-than comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`greaterThan <io_realm_RealmQuery_greaterThan>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **int** value
       | )
       
       
       Greater-than comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`greaterThanOrEqualTo <io_realm_RealmQuery_greaterThanOrEqualTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **ObjectId** value
       | )
       
       
       Greater-than-or-equal-to comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`greaterThanOrEqualTo <io_realm_RealmQuery_greaterThanOrEqualTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **Decimal128** value
       | )
       
       
       Greater-than-or-equal-to comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`greaterThanOrEqualTo <io_realm_RealmQuery_greaterThanOrEqualTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `Date <https://docs.oracle.com/javase/7/docs/api/java/util/Date.html>`__  value
       | )
       
       
       Greater-than-or-equal-to comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`greaterThanOrEqualTo <io_realm_RealmQuery_greaterThanOrEqualTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **float** value
       | )
       
       
       Greater-than-or-equal-to comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`greaterThanOrEqualTo <io_realm_RealmQuery_greaterThanOrEqualTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **double** value
       | )
       
       
       Greater-than-or-equal-to comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`greaterThanOrEqualTo <io_realm_RealmQuery_greaterThanOrEqualTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **long** value
       | )
       
       
       Greater-than-or-equal-to comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`greaterThanOrEqualTo <io_realm_RealmQuery_greaterThanOrEqualTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **int** value
       | )
       
       
       Greater-than-or-equal-to comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`in <io_realm_RealmQuery_in>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  :ref:`io.realm.RealmAny[] <io_realm_RealmAny>`  values
       | )
       
       
       In comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`in <io_realm_RealmQuery_in>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `java.util.Date[] <https://docs.oracle.com/javase/7/docs/api/java/util/Date.html>`__  values
       | )
       
       
       In comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`in <io_realm_RealmQuery_in>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `java.lang.Boolean[] <https://docs.oracle.com/javase/7/docs/api/java/lang/Boolean.html>`__  values
       | )
       
       
       In comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`in <io_realm_RealmQuery_in>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `java.lang.Float[] <https://docs.oracle.com/javase/7/docs/api/java/lang/Float.html>`__  values
       | )
       
       
       In comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`in <io_realm_RealmQuery_in>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `java.lang.Double[] <https://docs.oracle.com/javase/7/docs/api/java/lang/Double.html>`__  values
       | )
       
       
       In comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`in <io_realm_RealmQuery_in>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `java.lang.Long[] <https://docs.oracle.com/javase/7/docs/api/java/lang/Long.html>`__  values
       | )
       
       
       In comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`in <io_realm_RealmQuery_in>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `java.lang.Integer[] <https://docs.oracle.com/javase/7/docs/api/java/lang/Integer.html>`__  values
       | )
       
       
       In comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`in <io_realm_RealmQuery_in>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `java.lang.Short[] <https://docs.oracle.com/javase/7/docs/api/java/lang/Short.html>`__  values
       | )
       
       
       In comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`in <io_realm_RealmQuery_in>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `java.lang.Byte[] <https://docs.oracle.com/javase/7/docs/api/java/lang/Byte.html>`__  values
       | )
       
       
       In comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`in <io_realm_RealmQuery_in>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `java.lang.String[] <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  values, 
       |  :ref:`Case <io_realm_Case>`  casing
       | )
       
       
       In comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`in <io_realm_RealmQuery_in>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `java.lang.String[] <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  values
       | )
       
       
       In comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`isEmpty <io_realm_RealmQuery_isEmpty>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       Condition that finds values that are considered "empty" i.e., an empty list, the 0-length string or byte array.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`isNotEmpty <io_realm_RealmQuery_isNotEmpty>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       Condition that finds values that are considered "Not-empty" i.e., a list, a string or a byte array with not-empty values.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`isNotNull <io_realm_RealmQuery_isNotNull>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       Tests if a field is not ``null`` .
       
       
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`isNull <io_realm_RealmQuery_isNull>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       Tests if a field is ``null`` .
       
       
       
       
       
   
   * - public **boolean**
     - | :ref:`isValid <io_realm_RealmQuery_isValid>` ()
       | 
       
       
       Checks if :ref:`io.realm.RealmQuery <io_realm_RealmQuery>`  is still valid to use i.e., the :ref:`io.realm.Realm <io_realm_Realm>`  instance hasn't been closed and any parent :ref:`io.realm.RealmResults <io_realm_RealmResults>`  is still valid.
       
       
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`lessThan <io_realm_RealmQuery_lessThan>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **ObjectId** value
       | )
       
       
       Less-than comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`lessThan <io_realm_RealmQuery_lessThan>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **Decimal128** value
       | )
       
       
       Less-than comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`lessThan <io_realm_RealmQuery_lessThan>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **long** value
       | )
       
       
       Less-than comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`lessThan <io_realm_RealmQuery_lessThan>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **int** value
       | )
       
       
       Less-than comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`lessThanOrEqualTo <io_realm_RealmQuery_lessThanOrEqualTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **ObjectId** value
       | )
       
       
       Less-than-or-equal-to comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`lessThanOrEqualTo <io_realm_RealmQuery_lessThanOrEqualTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **Decimal128** value
       | )
       
       
       Less-than-or-equal-to comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`lessThanOrEqualTo <io_realm_RealmQuery_lessThanOrEqualTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **long** value
       | )
       
       
       Less-than-or-equal-to comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`lessThanOrEqualTo <io_realm_RealmQuery_lessThanOrEqualTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **int** value
       | )
       
       
       Less-than-or-equal-to comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`like <io_realm_RealmQuery_like>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  :ref:`RealmAny <io_realm_RealmAny>`  value, 
       |  :ref:`Case <io_realm_Case>`  casing
       | )
       
       
       Condition that the value of field matches with the specified substring, with wildcards:
       
       - '\*' matches [0, n] unicode chars
          
          
       - '?' matches a single unicode char.
          
          
       
       
       
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`like <io_realm_RealmQuery_like>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  value, 
       |  :ref:`Case <io_realm_Case>`  casing
       | )
       
       
       Condition that the value of field matches with the specified substring, with wildcards:
       
       - '\*' matches [0, n] unicode chars
          
          
       - '?' matches a single unicode char.
          
          
       
       
       
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`like <io_realm_RealmQuery_like>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  :ref:`RealmAny <io_realm_RealmAny>`  value
       | )
       
       
       Condition that the value of field matches with the specified substring, with wildcards:
       
       - '\*' matches [0, n] unicode chars
          
          
       - '?' matches a single unicode char.
          
          
       
       
       
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`like <io_realm_RealmQuery_like>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  value
       | )
       
       
       Condition that the value of field matches with the specified substring, with wildcards:
       
       - '\*' matches [0, n] unicode chars
          
          
       - '?' matches a single unicode char.
          
          
       
       
       
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`limit <io_realm_RealmQuery_limit>` (
       |  **long** limit
       | )
       
       
       Limits the number of objects returned in case the query matched more objects.
       
       
       
   
   * - public `Number <https://docs.oracle.com/javase/7/docs/api/java/lang/Number.html>`__ 
     - | :ref:`max <io_realm_RealmQuery_max>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       Finds the maximum value of a field.
       
       
       
   
   * - public :ref:`RealmAny <io_realm_RealmAny>` 
     - | :ref:`maxRealmAny <io_realm_RealmQuery_maxRealmAny>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       Finds the maximum value of a :ref:`RealmAny <io_realm_RealmAny>`  field.
       
       
       
       
       
   
   * - public `Date <https://docs.oracle.com/javase/7/docs/api/java/util/Date.html>`__ 
     - | :ref:`maximumDate <io_realm_RealmQuery_maximumDate>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       Finds the maximum value of a field.
       
       
       
   
   * - public `Number <https://docs.oracle.com/javase/7/docs/api/java/lang/Number.html>`__ 
     - | :ref:`min <io_realm_RealmQuery_min>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       Finds the minimum value of a field.
       
       
       
   
   * - public :ref:`RealmAny <io_realm_RealmAny>` 
     - | :ref:`minRealmAny <io_realm_RealmQuery_minRealmAny>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       Finds the minimum value of a :ref:`RealmAny <io_realm_RealmAny>`  field.
       
       
       
       
       
   
   * - public `Date <https://docs.oracle.com/javase/7/docs/api/java/util/Date.html>`__ 
     - | :ref:`minimumDate <io_realm_RealmQuery_minimumDate>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       Finds the minimum value of a field.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`not <io_realm_RealmQuery_not>` ()
       | 
       
       
       Negate condition.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`notEqualTo <io_realm_RealmQuery_notEqualTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **ObjectId** value
       | )
       
       
       Not-equal-to comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`notEqualTo <io_realm_RealmQuery_notEqualTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **Decimal128** value
       | )
       
       
       Not-equal-to comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`notEqualTo <io_realm_RealmQuery_notEqualTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  :ref:`RealmAny <io_realm_RealmAny>`  value, 
       |  :ref:`Case <io_realm_Case>`  casing
       | )
       
       
       Not-equal-to comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`notEqualTo <io_realm_RealmQuery_notEqualTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  value, 
       |  :ref:`Case <io_realm_Case>`  casing
       | )
       
       
       Not-equal-to comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`notEqualTo <io_realm_RealmQuery_notEqualTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  value
       | )
       
       
       Not-equal-to comparison.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`or <io_realm_RealmQuery_or>` ()
       | 
       
       
       Logical-or two conditions.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`rawPredicate <io_realm_RealmQuery_rawPredicate>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  predicate, 
       |  `java.lang.Object[] <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__  arguments
       | )
       
       
       Create a text-based predicate using the Realm Query Language.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`sort <io_realm_RealmQuery_sort>` (
       |  `java.lang.String[] <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldNames, 
       |  :ref:`io.realm.Sort[] <io_realm_Sort>`  sortOrders
       | )
       
       
       Sorts the query result by the specific field names in the provided orders.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`sort <io_realm_RealmQuery_sort>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName1, 
       |  :ref:`Sort <io_realm_Sort>`  sortOrder1, 
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName2, 
       |  :ref:`Sort <io_realm_Sort>`  sortOrder2
       | )
       
       
       Sorts the query result by the specific field names in the provided orders.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`sort <io_realm_RealmQuery_sort>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  :ref:`Sort <io_realm_Sort>`  sortOrder
       | )
       
       
       Sorts the query result by the specified field name and order.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`sort <io_realm_RealmQuery_sort>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       Sorts the query result by the specific field name in ascending order.
       
       
       
   
   * - public `Number <https://docs.oracle.com/javase/7/docs/api/java/lang/Number.html>`__ 
     - | :ref:`sum <io_realm_RealmQuery_sum>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       Calculates the sum of a given field.
       
       
       
   
   


Inherited Methods
=================



- Methods inherited from class `java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ : ``getClass`` , ``hashCode`` , ``equals`` , ``clone`` , ``toString`` , ``notify`` , ``notifyAll`` , ``wait`` , ``wait`` , ``wait`` , ``finalize`` 




Method Detail
=============

.. _alwaysFalse:

.. _alwaysFalse__:

.. _RealmQuery_alwaysFalse:

.. _RealmQuery_alwaysFalse__:

.. _io_realm_RealmQuery_alwaysFalse:

.. _io_realm_RealmQuery_alwaysFalse__:



alwaysFalse
-----------

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`alwaysFalse <io_realm_RealmQuery_alwaysFalse>` ()
       | 
       
       
       
   
   * - This predicate will never match, resulting in the query always returning 0 results.
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _alwaysTrue:

.. _alwaysTrue__:

.. _RealmQuery_alwaysTrue:

.. _RealmQuery_alwaysTrue__:

.. _io_realm_RealmQuery_alwaysTrue:

.. _io_realm_RealmQuery_alwaysTrue__:



alwaysTrue
----------

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`alwaysTrue <io_realm_RealmQuery_alwaysTrue>` ()
       | 
       
       
       
   
   * - This predicate will always match.
       
       
       
       
       
       
       
       
       
       
       
   
   


.. _and:

.. _and__:

.. _RealmQuery_and:

.. _RealmQuery_and__:

.. _io_realm_RealmQuery_and:

.. _io_realm_RealmQuery_and__:



and
----

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`and <io_realm_RealmQuery_and>` ()
       | 
       
       
       
   
   * - Logical-and two conditions Realm automatically applies logical-and between all query statements, so this is intended only as a mean to increase readability.
       
       
       
       
       
       
       **Returns**
       
       the query object
       
       
       
       
       
       
       
   
   


.. _average:

.. _average__:

.. _RealmQuery_average:

.. _RealmQuery_average__:

.. _io_realm_RealmQuery_average:

.. _io_realm_RealmQuery_average__:



average
-------

.. _io_realm_RealmQuery_average_java_lang_String_:

.. _io_realm_RealmQuery_average_String_:

.. _average_java_lang_String_:

.. _average_String_:

.. _RealmQuery_average_java_lang_String_:

.. _RealmQuery_average_String_:

.. list-table::
   :header-rows: 1
   
   * - | public **double** :ref:`average <io_realm_RealmQuery_average>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       
   
   * - Returns the average of a given field. Does not support dotted field notation.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to calculate average on. Only number fields are supported.
          
          
          
       
       
       
       
       **Returns**
       
       the average for the given field amongst objects in query results. This will be of type double for all types of number fields. If no objects exist or they all have ``null``  as the value for the given field, ``0``  will be returned. When computing the average, objects with ``null``  values are ignored.
       
       
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field is not a number type.
          
          
          
       - :ref:`RealmException <io_realm_exceptions_RealmException>`  - if called from the UI thread after opting out via :ref:`RealmConfiguration.Builder.allowQueriesOnUiThread(boolean) <io_realm_RealmConfiguration_Builder_allowQueriesOnUiThread_boolean_>` .
          
          
          
          
          
       
       
       
       
       
   
   


.. _averageDecimal128:

.. _averageDecimal128__:

.. _RealmQuery_averageDecimal128:

.. _RealmQuery_averageDecimal128__:

.. _io_realm_RealmQuery_averageDecimal128:

.. _io_realm_RealmQuery_averageDecimal128__:



averageDecimal128
-----------------

.. _io_realm_RealmQuery_averageDecimal128_java_lang_String_:

.. _io_realm_RealmQuery_averageDecimal128_String_:

.. _averageDecimal128_java_lang_String_:

.. _averageDecimal128_String_:

.. _RealmQuery_averageDecimal128_java_lang_String_:

.. _RealmQuery_averageDecimal128_String_:

.. list-table::
   :header-rows: 1
   
   * - | public **Decimal128** :ref:`averageDecimal128 <io_realm_RealmQuery_averageDecimal128>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       
   
   * - Returns the average of a given field. Does not support dotted field notation.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to calculate average on. Only Decimal128 fields is supported. For other number types consider using :ref:`average(String) <io_realm_RealmQuery_average_String_>` .
          
          
          
          
          
       
       
       
       
       **Returns**
       
       the average for the given field amongst objects in query results. This will be of type Decimal128. If no objects exist or they all have ``null``  as the value for the given field ``0``  will be returned. When computing the average, objects with ``null``  values are ignored.
       
       
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field is not a Decimal128 type.
          
          
          
       - :ref:`RealmException <io_realm_exceptions_RealmException>`  - if called from the UI thread after opting out via :ref:`RealmConfiguration.Builder.allowQueriesOnUiThread(boolean) <io_realm_RealmConfiguration_Builder_allowQueriesOnUiThread_boolean_>` .
          
          
          
          
          
       
       
       
       
       
   
   


.. _averageRealmAny:

.. _averageRealmAny__:

.. _RealmQuery_averageRealmAny:

.. _RealmQuery_averageRealmAny__:

.. _io_realm_RealmQuery_averageRealmAny:

.. _io_realm_RealmQuery_averageRealmAny__:



averageRealmAny
---------------

.. _io_realm_RealmQuery_averageRealmAny_java_lang_String_:

.. _io_realm_RealmQuery_averageRealmAny_String_:

.. _averageRealmAny_java_lang_String_:

.. _averageRealmAny_String_:

.. _RealmQuery_averageRealmAny_java_lang_String_:

.. _RealmQuery_averageRealmAny_String_:

.. list-table::
   :header-rows: 1
   
   * - | public **Decimal128** :ref:`averageRealmAny <io_realm_RealmQuery_averageRealmAny>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       
   
   * - Returns the average of a given field. Does not support dotted field notation.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to calculate average on. Only RealmAny fields are supported. For other types consider using :ref:`average(String) <io_realm_RealmQuery_average_String_>` .
          
          
          
          
          
       
       
       
       
       **Returns**
       
       the average for the given field amongst objects in query results. This will be of type Decimal128. If no objects exist or they all have ``null``  as the value for the given field ``0``  will be returned. When computing the average, objects with ``null``  values are ignored.
       
       
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field is not a RealmAny type.
          
          
          
       - :ref:`RealmException <io_realm_exceptions_RealmException>`  - if called from the UI thread after opting out via :ref:`RealmConfiguration.Builder.allowQueriesOnUiThread(boolean) <io_realm_RealmConfiguration_Builder_allowQueriesOnUiThread_boolean_>` .
          
          
          
          
          
       
       
       
       
       
   
   


.. _beginGroup:

.. _beginGroup__:

.. _RealmQuery_beginGroup:

.. _RealmQuery_beginGroup__:

.. _io_realm_RealmQuery_beginGroup:

.. _io_realm_RealmQuery_beginGroup__:



beginGroup
----------

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`beginGroup <io_realm_RealmQuery_beginGroup>` ()
       | 
       
       
       
   
   * - Begin grouping of conditions ("left parenthesis"). A group must be closed with a call to ``endGroup()`` .
       
       
       
       
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       
       
       
       
       .. seealso::
       
       
          
          - :ref:`endGroup() <io_realm_RealmQuery_endGroup__>` 
             
             
             
          
          
          
       
       
   
   


.. _beginsWith:

.. _beginsWith__:

.. _RealmQuery_beginsWith:

.. _RealmQuery_beginsWith__:

.. _io_realm_RealmQuery_beginsWith:

.. _io_realm_RealmQuery_beginsWith__:



beginsWith
----------

.. _io_realm_RealmQuery_beginsWith_java_lang_String_io_realm_RealmAny_io_realm_Case_:

.. _io_realm_RealmQuery_beginsWith_java_lang_String__io_realm_RealmAny__io_realm_Case_:

.. _io_realm_RealmQuery_beginsWith_java_lang_String_io_realm_RealmAny_Case_:

.. _io_realm_RealmQuery_beginsWith_java_lang_String__io_realm_RealmAny__Case_:

.. _io_realm_RealmQuery_beginsWith_java_lang_String_RealmAny_io_realm_Case_:

.. _io_realm_RealmQuery_beginsWith_java_lang_String__RealmAny__io_realm_Case_:

.. _io_realm_RealmQuery_beginsWith_java_lang_String_RealmAny_Case_:

.. _io_realm_RealmQuery_beginsWith_java_lang_String__RealmAny__Case_:

.. _io_realm_RealmQuery_beginsWith_String_io_realm_RealmAny_io_realm_Case_:

.. _io_realm_RealmQuery_beginsWith_String__io_realm_RealmAny__io_realm_Case_:

.. _io_realm_RealmQuery_beginsWith_String_io_realm_RealmAny_Case_:

.. _io_realm_RealmQuery_beginsWith_String__io_realm_RealmAny__Case_:

.. _io_realm_RealmQuery_beginsWith_String_RealmAny_io_realm_Case_:

.. _io_realm_RealmQuery_beginsWith_String__RealmAny__io_realm_Case_:

.. _io_realm_RealmQuery_beginsWith_String_RealmAny_Case_:

.. _io_realm_RealmQuery_beginsWith_String__RealmAny__Case_:

.. _beginsWith_java_lang_String_io_realm_RealmAny_io_realm_Case_:

.. _beginsWith_java_lang_String__io_realm_RealmAny__io_realm_Case_:

.. _beginsWith_java_lang_String_io_realm_RealmAny_Case_:

.. _beginsWith_java_lang_String__io_realm_RealmAny__Case_:

.. _beginsWith_java_lang_String_RealmAny_io_realm_Case_:

.. _beginsWith_java_lang_String__RealmAny__io_realm_Case_:

.. _beginsWith_java_lang_String_RealmAny_Case_:

.. _beginsWith_java_lang_String__RealmAny__Case_:

.. _beginsWith_String_io_realm_RealmAny_io_realm_Case_:

.. _beginsWith_String__io_realm_RealmAny__io_realm_Case_:

.. _beginsWith_String_io_realm_RealmAny_Case_:

.. _beginsWith_String__io_realm_RealmAny__Case_:

.. _beginsWith_String_RealmAny_io_realm_Case_:

.. _beginsWith_String__RealmAny__io_realm_Case_:

.. _beginsWith_String_RealmAny_Case_:

.. _beginsWith_String__RealmAny__Case_:

.. _RealmQuery_beginsWith_java_lang_String_io_realm_RealmAny_io_realm_Case_:

.. _RealmQuery_beginsWith_java_lang_String__io_realm_RealmAny__io_realm_Case_:

.. _RealmQuery_beginsWith_java_lang_String_io_realm_RealmAny_Case_:

.. _RealmQuery_beginsWith_java_lang_String__io_realm_RealmAny__Case_:

.. _RealmQuery_beginsWith_java_lang_String_RealmAny_io_realm_Case_:

.. _RealmQuery_beginsWith_java_lang_String__RealmAny__io_realm_Case_:

.. _RealmQuery_beginsWith_java_lang_String_RealmAny_Case_:

.. _RealmQuery_beginsWith_java_lang_String__RealmAny__Case_:

.. _RealmQuery_beginsWith_String_io_realm_RealmAny_io_realm_Case_:

.. _RealmQuery_beginsWith_String__io_realm_RealmAny__io_realm_Case_:

.. _RealmQuery_beginsWith_String_io_realm_RealmAny_Case_:

.. _RealmQuery_beginsWith_String__io_realm_RealmAny__Case_:

.. _RealmQuery_beginsWith_String_RealmAny_io_realm_Case_:

.. _RealmQuery_beginsWith_String__RealmAny__io_realm_Case_:

.. _RealmQuery_beginsWith_String_RealmAny_Case_:

.. _RealmQuery_beginsWith_String__RealmAny__Case_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`beginsWith <io_realm_RealmQuery_beginsWith>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  :ref:`RealmAny <io_realm_RealmAny>`  value, 
       |  :ref:`Case <io_realm_Case>`  casing
       | )
       
       
       
   
   * - Condition that the value of field begins with the specified substring.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the substring.
          
          
          
       - ``casing`` - how to handle casing. Setting this to :ref:`Case.INSENSITIVE <io_realm_Case_INSENSITIVE>`  only works for Latin-1 characters.
          
          
          
          
          
       
       
       
       
       **Returns**
       
       the query object
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_beginsWith_java_lang_String_java_lang_String_io_realm_Case_:

.. _io_realm_RealmQuery_beginsWith_java_lang_String__java_lang_String__io_realm_Case_:

.. _io_realm_RealmQuery_beginsWith_java_lang_String_java_lang_String_Case_:

.. _io_realm_RealmQuery_beginsWith_java_lang_String__java_lang_String__Case_:

.. _io_realm_RealmQuery_beginsWith_java_lang_String_String_io_realm_Case_:

.. _io_realm_RealmQuery_beginsWith_java_lang_String__String__io_realm_Case_:

.. _io_realm_RealmQuery_beginsWith_java_lang_String_String_Case_:

.. _io_realm_RealmQuery_beginsWith_java_lang_String__String__Case_:

.. _io_realm_RealmQuery_beginsWith_String_java_lang_String_io_realm_Case_:

.. _io_realm_RealmQuery_beginsWith_String__java_lang_String__io_realm_Case_:

.. _io_realm_RealmQuery_beginsWith_String_java_lang_String_Case_:

.. _io_realm_RealmQuery_beginsWith_String__java_lang_String__Case_:

.. _io_realm_RealmQuery_beginsWith_String_String_io_realm_Case_:

.. _io_realm_RealmQuery_beginsWith_String__String__io_realm_Case_:

.. _io_realm_RealmQuery_beginsWith_String_String_Case_:

.. _io_realm_RealmQuery_beginsWith_String__String__Case_:

.. _beginsWith_java_lang_String_java_lang_String_io_realm_Case_:

.. _beginsWith_java_lang_String__java_lang_String__io_realm_Case_:

.. _beginsWith_java_lang_String_java_lang_String_Case_:

.. _beginsWith_java_lang_String__java_lang_String__Case_:

.. _beginsWith_java_lang_String_String_io_realm_Case_:

.. _beginsWith_java_lang_String__String__io_realm_Case_:

.. _beginsWith_java_lang_String_String_Case_:

.. _beginsWith_java_lang_String__String__Case_:

.. _beginsWith_String_java_lang_String_io_realm_Case_:

.. _beginsWith_String__java_lang_String__io_realm_Case_:

.. _beginsWith_String_java_lang_String_Case_:

.. _beginsWith_String__java_lang_String__Case_:

.. _beginsWith_String_String_io_realm_Case_:

.. _beginsWith_String__String__io_realm_Case_:

.. _beginsWith_String_String_Case_:

.. _beginsWith_String__String__Case_:

.. _RealmQuery_beginsWith_java_lang_String_java_lang_String_io_realm_Case_:

.. _RealmQuery_beginsWith_java_lang_String__java_lang_String__io_realm_Case_:

.. _RealmQuery_beginsWith_java_lang_String_java_lang_String_Case_:

.. _RealmQuery_beginsWith_java_lang_String__java_lang_String__Case_:

.. _RealmQuery_beginsWith_java_lang_String_String_io_realm_Case_:

.. _RealmQuery_beginsWith_java_lang_String__String__io_realm_Case_:

.. _RealmQuery_beginsWith_java_lang_String_String_Case_:

.. _RealmQuery_beginsWith_java_lang_String__String__Case_:

.. _RealmQuery_beginsWith_String_java_lang_String_io_realm_Case_:

.. _RealmQuery_beginsWith_String__java_lang_String__io_realm_Case_:

.. _RealmQuery_beginsWith_String_java_lang_String_Case_:

.. _RealmQuery_beginsWith_String__java_lang_String__Case_:

.. _RealmQuery_beginsWith_String_String_io_realm_Case_:

.. _RealmQuery_beginsWith_String__String__io_realm_Case_:

.. _RealmQuery_beginsWith_String_String_Case_:

.. _RealmQuery_beginsWith_String__String__Case_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`beginsWith <io_realm_RealmQuery_beginsWith>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  value, 
       |  :ref:`Case <io_realm_Case>`  casing
       | )
       
       
       
   
   * - Condition that the value of field begins with the specified substring.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the substring.
          
          
          
       - ``casing`` - how to handle casing. Setting this to :ref:`Case.INSENSITIVE <io_realm_Case_INSENSITIVE>`  only works for Latin-1 characters.
          
          
          
          
          
       
       
       
       
       **Returns**
       
       the query object
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_beginsWith_java_lang_String_io_realm_RealmAny_:

.. _io_realm_RealmQuery_beginsWith_java_lang_String__io_realm_RealmAny_:

.. _io_realm_RealmQuery_beginsWith_java_lang_String_RealmAny_:

.. _io_realm_RealmQuery_beginsWith_java_lang_String__RealmAny_:

.. _io_realm_RealmQuery_beginsWith_String_io_realm_RealmAny_:

.. _io_realm_RealmQuery_beginsWith_String__io_realm_RealmAny_:

.. _io_realm_RealmQuery_beginsWith_String_RealmAny_:

.. _io_realm_RealmQuery_beginsWith_String__RealmAny_:

.. _beginsWith_java_lang_String_io_realm_RealmAny_:

.. _beginsWith_java_lang_String__io_realm_RealmAny_:

.. _beginsWith_java_lang_String_RealmAny_:

.. _beginsWith_java_lang_String__RealmAny_:

.. _beginsWith_String_io_realm_RealmAny_:

.. _beginsWith_String__io_realm_RealmAny_:

.. _beginsWith_String_RealmAny_:

.. _beginsWith_String__RealmAny_:

.. _RealmQuery_beginsWith_java_lang_String_io_realm_RealmAny_:

.. _RealmQuery_beginsWith_java_lang_String__io_realm_RealmAny_:

.. _RealmQuery_beginsWith_java_lang_String_RealmAny_:

.. _RealmQuery_beginsWith_java_lang_String__RealmAny_:

.. _RealmQuery_beginsWith_String_io_realm_RealmAny_:

.. _RealmQuery_beginsWith_String__io_realm_RealmAny_:

.. _RealmQuery_beginsWith_String_RealmAny_:

.. _RealmQuery_beginsWith_String__RealmAny_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`beginsWith <io_realm_RealmQuery_beginsWith>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  :ref:`RealmAny <io_realm_RealmAny>`  value
       | )
       
       
       
   
   * - Condition that the value of field begins with the specified string.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the string.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_beginsWith_java_lang_String_java_lang_String_:

.. _io_realm_RealmQuery_beginsWith_java_lang_String__java_lang_String_:

.. _io_realm_RealmQuery_beginsWith_java_lang_String_String_:

.. _io_realm_RealmQuery_beginsWith_java_lang_String__String_:

.. _io_realm_RealmQuery_beginsWith_String_java_lang_String_:

.. _io_realm_RealmQuery_beginsWith_String__java_lang_String_:

.. _io_realm_RealmQuery_beginsWith_String_String_:

.. _io_realm_RealmQuery_beginsWith_String__String_:

.. _beginsWith_java_lang_String_java_lang_String_:

.. _beginsWith_java_lang_String__java_lang_String_:

.. _beginsWith_java_lang_String_String_:

.. _beginsWith_java_lang_String__String_:

.. _beginsWith_String_java_lang_String_:

.. _beginsWith_String__java_lang_String_:

.. _beginsWith_String_String_:

.. _beginsWith_String__String_:

.. _RealmQuery_beginsWith_java_lang_String_java_lang_String_:

.. _RealmQuery_beginsWith_java_lang_String__java_lang_String_:

.. _RealmQuery_beginsWith_java_lang_String_String_:

.. _RealmQuery_beginsWith_java_lang_String__String_:

.. _RealmQuery_beginsWith_String_java_lang_String_:

.. _RealmQuery_beginsWith_String__java_lang_String_:

.. _RealmQuery_beginsWith_String_String_:

.. _RealmQuery_beginsWith_String__String_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`beginsWith <io_realm_RealmQuery_beginsWith>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  value
       | )
       
       
       
   
   * - Condition that the value of field begins with the specified string.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the string.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   


.. _between:

.. _between__:

.. _RealmQuery_between:

.. _RealmQuery_between__:

.. _io_realm_RealmQuery_between:

.. _io_realm_RealmQuery_between__:



between
-------

.. _io_realm_RealmQuery_between_java_lang_String_Decimal128_Decimal128_:

.. _io_realm_RealmQuery_between_java_lang_String__Decimal128__Decimal128_:

.. _io_realm_RealmQuery_between_String_Decimal128_Decimal128_:

.. _io_realm_RealmQuery_between_String__Decimal128__Decimal128_:

.. _between_java_lang_String_Decimal128_Decimal128_:

.. _between_java_lang_String__Decimal128__Decimal128_:

.. _between_String_Decimal128_Decimal128_:

.. _between_String__Decimal128__Decimal128_:

.. _RealmQuery_between_java_lang_String_Decimal128_Decimal128_:

.. _RealmQuery_between_java_lang_String__Decimal128__Decimal128_:

.. _RealmQuery_between_String_Decimal128_Decimal128_:

.. _RealmQuery_between_String__Decimal128__Decimal128_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`between <io_realm_RealmQuery_between>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **Decimal128** from, 
       |  **Decimal128** to
       | )
       
       
       
   
   * - Between condition.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``from`` - lowest value (inclusive).
          
          
          
       - ``to`` - highest value (inclusive).
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_between_java_lang_String_io_realm_RealmAny_io_realm_RealmAny_:

.. _io_realm_RealmQuery_between_java_lang_String__io_realm_RealmAny__io_realm_RealmAny_:

.. _io_realm_RealmQuery_between_java_lang_String_io_realm_RealmAny_RealmAny_:

.. _io_realm_RealmQuery_between_java_lang_String__io_realm_RealmAny__RealmAny_:

.. _io_realm_RealmQuery_between_java_lang_String_RealmAny_io_realm_RealmAny_:

.. _io_realm_RealmQuery_between_java_lang_String__RealmAny__io_realm_RealmAny_:

.. _io_realm_RealmQuery_between_java_lang_String_RealmAny_RealmAny_:

.. _io_realm_RealmQuery_between_java_lang_String__RealmAny__RealmAny_:

.. _io_realm_RealmQuery_between_String_io_realm_RealmAny_io_realm_RealmAny_:

.. _io_realm_RealmQuery_between_String__io_realm_RealmAny__io_realm_RealmAny_:

.. _io_realm_RealmQuery_between_String_io_realm_RealmAny_RealmAny_:

.. _io_realm_RealmQuery_between_String__io_realm_RealmAny__RealmAny_:

.. _io_realm_RealmQuery_between_String_RealmAny_io_realm_RealmAny_:

.. _io_realm_RealmQuery_between_String__RealmAny__io_realm_RealmAny_:

.. _io_realm_RealmQuery_between_String_RealmAny_RealmAny_:

.. _io_realm_RealmQuery_between_String__RealmAny__RealmAny_:

.. _between_java_lang_String_io_realm_RealmAny_io_realm_RealmAny_:

.. _between_java_lang_String__io_realm_RealmAny__io_realm_RealmAny_:

.. _between_java_lang_String_io_realm_RealmAny_RealmAny_:

.. _between_java_lang_String__io_realm_RealmAny__RealmAny_:

.. _between_java_lang_String_RealmAny_io_realm_RealmAny_:

.. _between_java_lang_String__RealmAny__io_realm_RealmAny_:

.. _between_java_lang_String_RealmAny_RealmAny_:

.. _between_java_lang_String__RealmAny__RealmAny_:

.. _between_String_io_realm_RealmAny_io_realm_RealmAny_:

.. _between_String__io_realm_RealmAny__io_realm_RealmAny_:

.. _between_String_io_realm_RealmAny_RealmAny_:

.. _between_String__io_realm_RealmAny__RealmAny_:

.. _between_String_RealmAny_io_realm_RealmAny_:

.. _between_String__RealmAny__io_realm_RealmAny_:

.. _between_String_RealmAny_RealmAny_:

.. _between_String__RealmAny__RealmAny_:

.. _RealmQuery_between_java_lang_String_io_realm_RealmAny_io_realm_RealmAny_:

.. _RealmQuery_between_java_lang_String__io_realm_RealmAny__io_realm_RealmAny_:

.. _RealmQuery_between_java_lang_String_io_realm_RealmAny_RealmAny_:

.. _RealmQuery_between_java_lang_String__io_realm_RealmAny__RealmAny_:

.. _RealmQuery_between_java_lang_String_RealmAny_io_realm_RealmAny_:

.. _RealmQuery_between_java_lang_String__RealmAny__io_realm_RealmAny_:

.. _RealmQuery_between_java_lang_String_RealmAny_RealmAny_:

.. _RealmQuery_between_java_lang_String__RealmAny__RealmAny_:

.. _RealmQuery_between_String_io_realm_RealmAny_io_realm_RealmAny_:

.. _RealmQuery_between_String__io_realm_RealmAny__io_realm_RealmAny_:

.. _RealmQuery_between_String_io_realm_RealmAny_RealmAny_:

.. _RealmQuery_between_String__io_realm_RealmAny__RealmAny_:

.. _RealmQuery_between_String_RealmAny_io_realm_RealmAny_:

.. _RealmQuery_between_String__RealmAny__io_realm_RealmAny_:

.. _RealmQuery_between_String_RealmAny_RealmAny_:

.. _RealmQuery_between_String__RealmAny__RealmAny_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`between <io_realm_RealmQuery_between>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  :ref:`RealmAny <io_realm_RealmAny>`  from, 
       |  :ref:`RealmAny <io_realm_RealmAny>`  to
       | )
       
       
       
   
   * - Between condition.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``from`` - lowest value (inclusive).
          
          
          
       - ``to`` - highest value (inclusive).
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_between_java_lang_String_java_util_Date_java_util_Date_:

.. _io_realm_RealmQuery_between_java_lang_String__java_util_Date__java_util_Date_:

.. _io_realm_RealmQuery_between_java_lang_String_java_util_Date_Date_:

.. _io_realm_RealmQuery_between_java_lang_String__java_util_Date__Date_:

.. _io_realm_RealmQuery_between_java_lang_String_Date_java_util_Date_:

.. _io_realm_RealmQuery_between_java_lang_String__Date__java_util_Date_:

.. _io_realm_RealmQuery_between_java_lang_String_Date_Date_:

.. _io_realm_RealmQuery_between_java_lang_String__Date__Date_:

.. _io_realm_RealmQuery_between_String_java_util_Date_java_util_Date_:

.. _io_realm_RealmQuery_between_String__java_util_Date__java_util_Date_:

.. _io_realm_RealmQuery_between_String_java_util_Date_Date_:

.. _io_realm_RealmQuery_between_String__java_util_Date__Date_:

.. _io_realm_RealmQuery_between_String_Date_java_util_Date_:

.. _io_realm_RealmQuery_between_String__Date__java_util_Date_:

.. _io_realm_RealmQuery_between_String_Date_Date_:

.. _io_realm_RealmQuery_between_String__Date__Date_:

.. _between_java_lang_String_java_util_Date_java_util_Date_:

.. _between_java_lang_String__java_util_Date__java_util_Date_:

.. _between_java_lang_String_java_util_Date_Date_:

.. _between_java_lang_String__java_util_Date__Date_:

.. _between_java_lang_String_Date_java_util_Date_:

.. _between_java_lang_String__Date__java_util_Date_:

.. _between_java_lang_String_Date_Date_:

.. _between_java_lang_String__Date__Date_:

.. _between_String_java_util_Date_java_util_Date_:

.. _between_String__java_util_Date__java_util_Date_:

.. _between_String_java_util_Date_Date_:

.. _between_String__java_util_Date__Date_:

.. _between_String_Date_java_util_Date_:

.. _between_String__Date__java_util_Date_:

.. _between_String_Date_Date_:

.. _between_String__Date__Date_:

.. _RealmQuery_between_java_lang_String_java_util_Date_java_util_Date_:

.. _RealmQuery_between_java_lang_String__java_util_Date__java_util_Date_:

.. _RealmQuery_between_java_lang_String_java_util_Date_Date_:

.. _RealmQuery_between_java_lang_String__java_util_Date__Date_:

.. _RealmQuery_between_java_lang_String_Date_java_util_Date_:

.. _RealmQuery_between_java_lang_String__Date__java_util_Date_:

.. _RealmQuery_between_java_lang_String_Date_Date_:

.. _RealmQuery_between_java_lang_String__Date__Date_:

.. _RealmQuery_between_String_java_util_Date_java_util_Date_:

.. _RealmQuery_between_String__java_util_Date__java_util_Date_:

.. _RealmQuery_between_String_java_util_Date_Date_:

.. _RealmQuery_between_String__java_util_Date__Date_:

.. _RealmQuery_between_String_Date_java_util_Date_:

.. _RealmQuery_between_String__Date__java_util_Date_:

.. _RealmQuery_between_String_Date_Date_:

.. _RealmQuery_between_String__Date__Date_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`between <io_realm_RealmQuery_between>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `Date <https://docs.oracle.com/javase/7/docs/api/java/util/Date.html>`__  from, 
       |  `Date <https://docs.oracle.com/javase/7/docs/api/java/util/Date.html>`__  to
       | )
       
       
       
   
   * - Between condition.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``from`` - lowest value (inclusive).
          
          
          
       - ``to`` - highest value (inclusive).
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_between_java_lang_String_float_float_:

.. _io_realm_RealmQuery_between_java_lang_String__float__float_:

.. _io_realm_RealmQuery_between_String_float_float_:

.. _io_realm_RealmQuery_between_String__float__float_:

.. _between_java_lang_String_float_float_:

.. _between_java_lang_String__float__float_:

.. _between_String_float_float_:

.. _between_String__float__float_:

.. _RealmQuery_between_java_lang_String_float_float_:

.. _RealmQuery_between_java_lang_String__float__float_:

.. _RealmQuery_between_String_float_float_:

.. _RealmQuery_between_String__float__float_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`between <io_realm_RealmQuery_between>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **float** from, 
       |  **float** to
       | )
       
       
       
   
   * - Between condition.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``from`` - lowest value (inclusive).
          
          
          
       - ``to`` - highest value (inclusive).
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_between_java_lang_String_double_double_:

.. _io_realm_RealmQuery_between_java_lang_String__double__double_:

.. _io_realm_RealmQuery_between_String_double_double_:

.. _io_realm_RealmQuery_between_String__double__double_:

.. _between_java_lang_String_double_double_:

.. _between_java_lang_String__double__double_:

.. _between_String_double_double_:

.. _between_String__double__double_:

.. _RealmQuery_between_java_lang_String_double_double_:

.. _RealmQuery_between_java_lang_String__double__double_:

.. _RealmQuery_between_String_double_double_:

.. _RealmQuery_between_String__double__double_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`between <io_realm_RealmQuery_between>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **double** from, 
       |  **double** to
       | )
       
       
       
   
   * - Between condition.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``from`` - lowest value (inclusive).
          
          
          
       - ``to`` - highest value (inclusive).
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_between_java_lang_String_long_long_:

.. _io_realm_RealmQuery_between_java_lang_String__long__long_:

.. _io_realm_RealmQuery_between_String_long_long_:

.. _io_realm_RealmQuery_between_String__long__long_:

.. _between_java_lang_String_long_long_:

.. _between_java_lang_String__long__long_:

.. _between_String_long_long_:

.. _between_String__long__long_:

.. _RealmQuery_between_java_lang_String_long_long_:

.. _RealmQuery_between_java_lang_String__long__long_:

.. _RealmQuery_between_String_long_long_:

.. _RealmQuery_between_String__long__long_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`between <io_realm_RealmQuery_between>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **long** from, 
       |  **long** to
       | )
       
       
       
   
   * - Between condition.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``from`` - lowest value (inclusive).
          
          
          
       - ``to`` - highest value (inclusive).
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_between_java_lang_String_int_int_:

.. _io_realm_RealmQuery_between_java_lang_String__int__int_:

.. _io_realm_RealmQuery_between_String_int_int_:

.. _io_realm_RealmQuery_between_String__int__int_:

.. _between_java_lang_String_int_int_:

.. _between_java_lang_String__int__int_:

.. _between_String_int_int_:

.. _between_String__int__int_:

.. _RealmQuery_between_java_lang_String_int_int_:

.. _RealmQuery_between_java_lang_String__int__int_:

.. _RealmQuery_between_String_int_int_:

.. _RealmQuery_between_String__int__int_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`between <io_realm_RealmQuery_between>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **int** from, 
       |  **int** to
       | )
       
       
       
   
   * - Between condition.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``from`` - lowest value (inclusive).
          
          
          
       - ``to`` - highest value (inclusive).
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   


.. _contains:

.. _contains__:

.. _RealmQuery_contains:

.. _RealmQuery_contains__:

.. _io_realm_RealmQuery_contains:

.. _io_realm_RealmQuery_contains__:



contains
--------

.. _io_realm_RealmQuery_contains_java_lang_String_io_realm_RealmAny_io_realm_Case_:

.. _io_realm_RealmQuery_contains_java_lang_String__io_realm_RealmAny__io_realm_Case_:

.. _io_realm_RealmQuery_contains_java_lang_String_io_realm_RealmAny_Case_:

.. _io_realm_RealmQuery_contains_java_lang_String__io_realm_RealmAny__Case_:

.. _io_realm_RealmQuery_contains_java_lang_String_RealmAny_io_realm_Case_:

.. _io_realm_RealmQuery_contains_java_lang_String__RealmAny__io_realm_Case_:

.. _io_realm_RealmQuery_contains_java_lang_String_RealmAny_Case_:

.. _io_realm_RealmQuery_contains_java_lang_String__RealmAny__Case_:

.. _io_realm_RealmQuery_contains_String_io_realm_RealmAny_io_realm_Case_:

.. _io_realm_RealmQuery_contains_String__io_realm_RealmAny__io_realm_Case_:

.. _io_realm_RealmQuery_contains_String_io_realm_RealmAny_Case_:

.. _io_realm_RealmQuery_contains_String__io_realm_RealmAny__Case_:

.. _io_realm_RealmQuery_contains_String_RealmAny_io_realm_Case_:

.. _io_realm_RealmQuery_contains_String__RealmAny__io_realm_Case_:

.. _io_realm_RealmQuery_contains_String_RealmAny_Case_:

.. _io_realm_RealmQuery_contains_String__RealmAny__Case_:

.. _contains_java_lang_String_io_realm_RealmAny_io_realm_Case_:

.. _contains_java_lang_String__io_realm_RealmAny__io_realm_Case_:

.. _contains_java_lang_String_io_realm_RealmAny_Case_:

.. _contains_java_lang_String__io_realm_RealmAny__Case_:

.. _contains_java_lang_String_RealmAny_io_realm_Case_:

.. _contains_java_lang_String__RealmAny__io_realm_Case_:

.. _contains_java_lang_String_RealmAny_Case_:

.. _contains_java_lang_String__RealmAny__Case_:

.. _contains_String_io_realm_RealmAny_io_realm_Case_:

.. _contains_String__io_realm_RealmAny__io_realm_Case_:

.. _contains_String_io_realm_RealmAny_Case_:

.. _contains_String__io_realm_RealmAny__Case_:

.. _contains_String_RealmAny_io_realm_Case_:

.. _contains_String__RealmAny__io_realm_Case_:

.. _contains_String_RealmAny_Case_:

.. _contains_String__RealmAny__Case_:

.. _RealmQuery_contains_java_lang_String_io_realm_RealmAny_io_realm_Case_:

.. _RealmQuery_contains_java_lang_String__io_realm_RealmAny__io_realm_Case_:

.. _RealmQuery_contains_java_lang_String_io_realm_RealmAny_Case_:

.. _RealmQuery_contains_java_lang_String__io_realm_RealmAny__Case_:

.. _RealmQuery_contains_java_lang_String_RealmAny_io_realm_Case_:

.. _RealmQuery_contains_java_lang_String__RealmAny__io_realm_Case_:

.. _RealmQuery_contains_java_lang_String_RealmAny_Case_:

.. _RealmQuery_contains_java_lang_String__RealmAny__Case_:

.. _RealmQuery_contains_String_io_realm_RealmAny_io_realm_Case_:

.. _RealmQuery_contains_String__io_realm_RealmAny__io_realm_Case_:

.. _RealmQuery_contains_String_io_realm_RealmAny_Case_:

.. _RealmQuery_contains_String__io_realm_RealmAny__Case_:

.. _RealmQuery_contains_String_RealmAny_io_realm_Case_:

.. _RealmQuery_contains_String__RealmAny__io_realm_Case_:

.. _RealmQuery_contains_String_RealmAny_Case_:

.. _RealmQuery_contains_String__RealmAny__Case_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`contains <io_realm_RealmQuery_contains>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  :ref:`RealmAny <io_realm_RealmAny>`  value, 
       |  :ref:`Case <io_realm_Case>`  casing
       | )
       
       
       
   
   * - Condition that value of field contains the specified substring.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the substring.
          
          
          
       - ``casing`` - how to handle casing. Setting this to :ref:`Case.INSENSITIVE <io_realm_Case_INSENSITIVE>`  only works for Latin-1 characters.
          
          
          
          
          
       
       
       
       
       **Returns**
       
       The query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_contains_java_lang_String_java_lang_String_io_realm_Case_:

.. _io_realm_RealmQuery_contains_java_lang_String__java_lang_String__io_realm_Case_:

.. _io_realm_RealmQuery_contains_java_lang_String_java_lang_String_Case_:

.. _io_realm_RealmQuery_contains_java_lang_String__java_lang_String__Case_:

.. _io_realm_RealmQuery_contains_java_lang_String_String_io_realm_Case_:

.. _io_realm_RealmQuery_contains_java_lang_String__String__io_realm_Case_:

.. _io_realm_RealmQuery_contains_java_lang_String_String_Case_:

.. _io_realm_RealmQuery_contains_java_lang_String__String__Case_:

.. _io_realm_RealmQuery_contains_String_java_lang_String_io_realm_Case_:

.. _io_realm_RealmQuery_contains_String__java_lang_String__io_realm_Case_:

.. _io_realm_RealmQuery_contains_String_java_lang_String_Case_:

.. _io_realm_RealmQuery_contains_String__java_lang_String__Case_:

.. _io_realm_RealmQuery_contains_String_String_io_realm_Case_:

.. _io_realm_RealmQuery_contains_String__String__io_realm_Case_:

.. _io_realm_RealmQuery_contains_String_String_Case_:

.. _io_realm_RealmQuery_contains_String__String__Case_:

.. _contains_java_lang_String_java_lang_String_io_realm_Case_:

.. _contains_java_lang_String__java_lang_String__io_realm_Case_:

.. _contains_java_lang_String_java_lang_String_Case_:

.. _contains_java_lang_String__java_lang_String__Case_:

.. _contains_java_lang_String_String_io_realm_Case_:

.. _contains_java_lang_String__String__io_realm_Case_:

.. _contains_java_lang_String_String_Case_:

.. _contains_java_lang_String__String__Case_:

.. _contains_String_java_lang_String_io_realm_Case_:

.. _contains_String__java_lang_String__io_realm_Case_:

.. _contains_String_java_lang_String_Case_:

.. _contains_String__java_lang_String__Case_:

.. _contains_String_String_io_realm_Case_:

.. _contains_String__String__io_realm_Case_:

.. _contains_String_String_Case_:

.. _contains_String__String__Case_:

.. _RealmQuery_contains_java_lang_String_java_lang_String_io_realm_Case_:

.. _RealmQuery_contains_java_lang_String__java_lang_String__io_realm_Case_:

.. _RealmQuery_contains_java_lang_String_java_lang_String_Case_:

.. _RealmQuery_contains_java_lang_String__java_lang_String__Case_:

.. _RealmQuery_contains_java_lang_String_String_io_realm_Case_:

.. _RealmQuery_contains_java_lang_String__String__io_realm_Case_:

.. _RealmQuery_contains_java_lang_String_String_Case_:

.. _RealmQuery_contains_java_lang_String__String__Case_:

.. _RealmQuery_contains_String_java_lang_String_io_realm_Case_:

.. _RealmQuery_contains_String__java_lang_String__io_realm_Case_:

.. _RealmQuery_contains_String_java_lang_String_Case_:

.. _RealmQuery_contains_String__java_lang_String__Case_:

.. _RealmQuery_contains_String_String_io_realm_Case_:

.. _RealmQuery_contains_String__String__io_realm_Case_:

.. _RealmQuery_contains_String_String_Case_:

.. _RealmQuery_contains_String__String__Case_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`contains <io_realm_RealmQuery_contains>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  value, 
       |  :ref:`Case <io_realm_Case>`  casing
       | )
       
       
       
   
   * - Condition that value of field contains the specified substring.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the substring.
          
          
          
       - ``casing`` - how to handle casing. Setting this to :ref:`Case.INSENSITIVE <io_realm_Case_INSENSITIVE>`  only works for Latin-1 characters.
          
          
          
          
          
       
       
       
       
       **Returns**
       
       The query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_contains_java_lang_String_io_realm_RealmAny_:

.. _io_realm_RealmQuery_contains_java_lang_String__io_realm_RealmAny_:

.. _io_realm_RealmQuery_contains_java_lang_String_RealmAny_:

.. _io_realm_RealmQuery_contains_java_lang_String__RealmAny_:

.. _io_realm_RealmQuery_contains_String_io_realm_RealmAny_:

.. _io_realm_RealmQuery_contains_String__io_realm_RealmAny_:

.. _io_realm_RealmQuery_contains_String_RealmAny_:

.. _io_realm_RealmQuery_contains_String__RealmAny_:

.. _contains_java_lang_String_io_realm_RealmAny_:

.. _contains_java_lang_String__io_realm_RealmAny_:

.. _contains_java_lang_String_RealmAny_:

.. _contains_java_lang_String__RealmAny_:

.. _contains_String_io_realm_RealmAny_:

.. _contains_String__io_realm_RealmAny_:

.. _contains_String_RealmAny_:

.. _contains_String__RealmAny_:

.. _RealmQuery_contains_java_lang_String_io_realm_RealmAny_:

.. _RealmQuery_contains_java_lang_String__io_realm_RealmAny_:

.. _RealmQuery_contains_java_lang_String_RealmAny_:

.. _RealmQuery_contains_java_lang_String__RealmAny_:

.. _RealmQuery_contains_String_io_realm_RealmAny_:

.. _RealmQuery_contains_String__io_realm_RealmAny_:

.. _RealmQuery_contains_String_RealmAny_:

.. _RealmQuery_contains_String__RealmAny_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`contains <io_realm_RealmQuery_contains>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  :ref:`RealmAny <io_realm_RealmAny>`  value
       | )
       
       
       
   
   * - Condition that value of field contains the specified substring.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the substring.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_contains_java_lang_String_java_lang_String_:

.. _io_realm_RealmQuery_contains_java_lang_String__java_lang_String_:

.. _io_realm_RealmQuery_contains_java_lang_String_String_:

.. _io_realm_RealmQuery_contains_java_lang_String__String_:

.. _io_realm_RealmQuery_contains_String_java_lang_String_:

.. _io_realm_RealmQuery_contains_String__java_lang_String_:

.. _io_realm_RealmQuery_contains_String_String_:

.. _io_realm_RealmQuery_contains_String__String_:

.. _contains_java_lang_String_java_lang_String_:

.. _contains_java_lang_String__java_lang_String_:

.. _contains_java_lang_String_String_:

.. _contains_java_lang_String__String_:

.. _contains_String_java_lang_String_:

.. _contains_String__java_lang_String_:

.. _contains_String_String_:

.. _contains_String__String_:

.. _RealmQuery_contains_java_lang_String_java_lang_String_:

.. _RealmQuery_contains_java_lang_String__java_lang_String_:

.. _RealmQuery_contains_java_lang_String_String_:

.. _RealmQuery_contains_java_lang_String__String_:

.. _RealmQuery_contains_String_java_lang_String_:

.. _RealmQuery_contains_String__java_lang_String_:

.. _RealmQuery_contains_String_String_:

.. _RealmQuery_contains_String__String_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`contains <io_realm_RealmQuery_contains>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  value
       | )
       
       
       
   
   * - Condition that value of field contains the specified substring.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the substring.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   


.. _containsEntry:

.. _containsEntry__:

.. _RealmQuery_containsEntry:

.. _RealmQuery_containsEntry__:

.. _io_realm_RealmQuery_containsEntry:

.. _io_realm_RealmQuery_containsEntry__:



containsEntry
-------------

.. _io_realm_RealmQuery_containsEntry_java_lang_String_java_util_Map_Entry_:

.. _io_realm_RealmQuery_containsEntry_java_lang_String__java_util_Map_Entry_:

.. _io_realm_RealmQuery_containsEntry_java_lang_String_Entry_:

.. _io_realm_RealmQuery_containsEntry_java_lang_String__Entry_:

.. _io_realm_RealmQuery_containsEntry_java_lang_String_Map_Entry_:

.. _io_realm_RealmQuery_containsEntry_java_lang_String__Map_Entry_:

.. _io_realm_RealmQuery_containsEntry_String_java_util_Map_Entry_:

.. _io_realm_RealmQuery_containsEntry_String__java_util_Map_Entry_:

.. _io_realm_RealmQuery_containsEntry_String_Entry_:

.. _io_realm_RealmQuery_containsEntry_String__Entry_:

.. _io_realm_RealmQuery_containsEntry_String_Map_Entry_:

.. _io_realm_RealmQuery_containsEntry_String__Map_Entry_:

.. _containsEntry_java_lang_String_java_util_Map_Entry_:

.. _containsEntry_java_lang_String__java_util_Map_Entry_:

.. _containsEntry_java_lang_String_Entry_:

.. _containsEntry_java_lang_String__Entry_:

.. _containsEntry_java_lang_String_Map_Entry_:

.. _containsEntry_java_lang_String__Map_Entry_:

.. _containsEntry_String_java_util_Map_Entry_:

.. _containsEntry_String__java_util_Map_Entry_:

.. _containsEntry_String_Entry_:

.. _containsEntry_String__Entry_:

.. _containsEntry_String_Map_Entry_:

.. _containsEntry_String__Map_Entry_:

.. _RealmQuery_containsEntry_java_lang_String_java_util_Map_Entry_:

.. _RealmQuery_containsEntry_java_lang_String__java_util_Map_Entry_:

.. _RealmQuery_containsEntry_java_lang_String_Entry_:

.. _RealmQuery_containsEntry_java_lang_String__Entry_:

.. _RealmQuery_containsEntry_java_lang_String_Map_Entry_:

.. _RealmQuery_containsEntry_java_lang_String__Map_Entry_:

.. _RealmQuery_containsEntry_String_java_util_Map_Entry_:

.. _RealmQuery_containsEntry_String__java_util_Map_Entry_:

.. _RealmQuery_containsEntry_String_Entry_:

.. _RealmQuery_containsEntry_String__Entry_:

.. _RealmQuery_containsEntry_String_Map_Entry_:

.. _RealmQuery_containsEntry_String__Map_Entry_:

.. _io_realm_RealmQuery_containsEntry_String__Map_Entry_String_____:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`containsEntry <io_realm_RealmQuery_containsEntry>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `java.util.Map.Entry\<java.lang.String, ?> <https://docs.oracle.com/javase/7/docs/api/java/util/Map/Entry.html>`__  entry
       | )
       
       
       
   
   * - Condition that value, if a dictionary field, contains the specified entry.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``entry`` - the entry to search for.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field name isn't valid.
          
          
          
       
       
       
       
       
   
   


.. _containsKey:

.. _containsKey__:

.. _RealmQuery_containsKey:

.. _RealmQuery_containsKey__:

.. _io_realm_RealmQuery_containsKey:

.. _io_realm_RealmQuery_containsKey__:



containsKey
-----------

.. _io_realm_RealmQuery_containsKey_java_lang_String_java_lang_String_:

.. _io_realm_RealmQuery_containsKey_java_lang_String__java_lang_String_:

.. _io_realm_RealmQuery_containsKey_java_lang_String_String_:

.. _io_realm_RealmQuery_containsKey_java_lang_String__String_:

.. _io_realm_RealmQuery_containsKey_String_java_lang_String_:

.. _io_realm_RealmQuery_containsKey_String__java_lang_String_:

.. _io_realm_RealmQuery_containsKey_String_String_:

.. _io_realm_RealmQuery_containsKey_String__String_:

.. _containsKey_java_lang_String_java_lang_String_:

.. _containsKey_java_lang_String__java_lang_String_:

.. _containsKey_java_lang_String_String_:

.. _containsKey_java_lang_String__String_:

.. _containsKey_String_java_lang_String_:

.. _containsKey_String__java_lang_String_:

.. _containsKey_String_String_:

.. _containsKey_String__String_:

.. _RealmQuery_containsKey_java_lang_String_java_lang_String_:

.. _RealmQuery_containsKey_java_lang_String__java_lang_String_:

.. _RealmQuery_containsKey_java_lang_String_String_:

.. _RealmQuery_containsKey_java_lang_String__String_:

.. _RealmQuery_containsKey_String_java_lang_String_:

.. _RealmQuery_containsKey_String__java_lang_String_:

.. _RealmQuery_containsKey_String_String_:

.. _RealmQuery_containsKey_String__String_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`containsKey <io_realm_RealmQuery_containsKey>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  key
       | )
       
       
       
   
   * - Condition that value, if a dictionary field, contains the specified key.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``key`` - the key to search for.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field name isn't valid.
          
          
          
       
       
       
       
       
   
   


.. _containsValue:

.. _containsValue__:

.. _RealmQuery_containsValue:

.. _RealmQuery_containsValue__:

.. _io_realm_RealmQuery_containsValue:

.. _io_realm_RealmQuery_containsValue__:



containsValue
-------------

.. _io_realm_RealmQuery_containsValue_java_lang_String_ObjectId_:

.. _io_realm_RealmQuery_containsValue_java_lang_String__ObjectId_:

.. _io_realm_RealmQuery_containsValue_String_ObjectId_:

.. _io_realm_RealmQuery_containsValue_String__ObjectId_:

.. _containsValue_java_lang_String_ObjectId_:

.. _containsValue_java_lang_String__ObjectId_:

.. _containsValue_String_ObjectId_:

.. _containsValue_String__ObjectId_:

.. _RealmQuery_containsValue_java_lang_String_ObjectId_:

.. _RealmQuery_containsValue_java_lang_String__ObjectId_:

.. _RealmQuery_containsValue_String_ObjectId_:

.. _RealmQuery_containsValue_String__ObjectId_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`containsValue <io_realm_RealmQuery_containsValue>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **ObjectId** value
       | )
       
       
       
   
   * - Condition that value, if a dictionary field, contains the specified value.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to search for.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field name isn't valid.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_containsValue_java_lang_String_Decimal128_:

.. _io_realm_RealmQuery_containsValue_java_lang_String__Decimal128_:

.. _io_realm_RealmQuery_containsValue_String_Decimal128_:

.. _io_realm_RealmQuery_containsValue_String__Decimal128_:

.. _containsValue_java_lang_String_Decimal128_:

.. _containsValue_java_lang_String__Decimal128_:

.. _containsValue_String_Decimal128_:

.. _containsValue_String__Decimal128_:

.. _RealmQuery_containsValue_java_lang_String_Decimal128_:

.. _RealmQuery_containsValue_java_lang_String__Decimal128_:

.. _RealmQuery_containsValue_String_Decimal128_:

.. _RealmQuery_containsValue_String__Decimal128_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`containsValue <io_realm_RealmQuery_containsValue>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **Decimal128** value
       | )
       
       
       
   
   * - Condition that value, if a dictionary field, contains the specified value.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to search for.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field name isn't valid.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_containsValue_java_lang_String_java_util_Date_:

.. _io_realm_RealmQuery_containsValue_java_lang_String__java_util_Date_:

.. _io_realm_RealmQuery_containsValue_java_lang_String_Date_:

.. _io_realm_RealmQuery_containsValue_java_lang_String__Date_:

.. _io_realm_RealmQuery_containsValue_String_java_util_Date_:

.. _io_realm_RealmQuery_containsValue_String__java_util_Date_:

.. _io_realm_RealmQuery_containsValue_String_Date_:

.. _io_realm_RealmQuery_containsValue_String__Date_:

.. _containsValue_java_lang_String_java_util_Date_:

.. _containsValue_java_lang_String__java_util_Date_:

.. _containsValue_java_lang_String_Date_:

.. _containsValue_java_lang_String__Date_:

.. _containsValue_String_java_util_Date_:

.. _containsValue_String__java_util_Date_:

.. _containsValue_String_Date_:

.. _containsValue_String__Date_:

.. _RealmQuery_containsValue_java_lang_String_java_util_Date_:

.. _RealmQuery_containsValue_java_lang_String__java_util_Date_:

.. _RealmQuery_containsValue_java_lang_String_Date_:

.. _RealmQuery_containsValue_java_lang_String__Date_:

.. _RealmQuery_containsValue_String_java_util_Date_:

.. _RealmQuery_containsValue_String__java_util_Date_:

.. _RealmQuery_containsValue_String_Date_:

.. _RealmQuery_containsValue_String__Date_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`containsValue <io_realm_RealmQuery_containsValue>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `Date <https://docs.oracle.com/javase/7/docs/api/java/util/Date.html>`__  value
       | )
       
       
       
   
   * - Condition that value, if a dictionary field, contains the specified value.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to search for.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field name isn't valid.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_containsValue_java_lang_String_byte_:

.. _io_realm_RealmQuery_containsValue_java_lang_String__byte_:

.. _io_realm_RealmQuery_containsValue_java_lang_String_byte____:

.. _io_realm_RealmQuery_containsValue_java_lang_String__byte____:

.. _io_realm_RealmQuery_containsValue_String_byte_:

.. _io_realm_RealmQuery_containsValue_String__byte_:

.. _io_realm_RealmQuery_containsValue_String_byte____:

.. _io_realm_RealmQuery_containsValue_String__byte____:

.. _containsValue_java_lang_String_byte_:

.. _containsValue_java_lang_String__byte_:

.. _containsValue_java_lang_String_byte____:

.. _containsValue_java_lang_String__byte____:

.. _containsValue_String_byte_:

.. _containsValue_String__byte_:

.. _containsValue_String_byte____:

.. _containsValue_String__byte____:

.. _RealmQuery_containsValue_java_lang_String_byte_:

.. _RealmQuery_containsValue_java_lang_String__byte_:

.. _RealmQuery_containsValue_java_lang_String_byte____:

.. _RealmQuery_containsValue_java_lang_String__byte____:

.. _RealmQuery_containsValue_String_byte_:

.. _RealmQuery_containsValue_String__byte_:

.. _RealmQuery_containsValue_String_byte____:

.. _RealmQuery_containsValue_String__byte____:

.. _io_realm_RealmQuery_containsValue_String__byte[]_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`containsValue <io_realm_RealmQuery_containsValue>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **byte[]** value
       | )
       
       
       
   
   * - Condition that value, if a dictionary field, contains the specified value.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to search for.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field name isn't valid.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_containsValue_java_lang_String_java_lang_String_:

.. _io_realm_RealmQuery_containsValue_java_lang_String__java_lang_String_:

.. _io_realm_RealmQuery_containsValue_java_lang_String_String_:

.. _io_realm_RealmQuery_containsValue_java_lang_String__String_:

.. _io_realm_RealmQuery_containsValue_String_java_lang_String_:

.. _io_realm_RealmQuery_containsValue_String__java_lang_String_:

.. _io_realm_RealmQuery_containsValue_String_String_:

.. _io_realm_RealmQuery_containsValue_String__String_:

.. _containsValue_java_lang_String_java_lang_String_:

.. _containsValue_java_lang_String__java_lang_String_:

.. _containsValue_java_lang_String_String_:

.. _containsValue_java_lang_String__String_:

.. _containsValue_String_java_lang_String_:

.. _containsValue_String__java_lang_String_:

.. _containsValue_String_String_:

.. _containsValue_String__String_:

.. _RealmQuery_containsValue_java_lang_String_java_lang_String_:

.. _RealmQuery_containsValue_java_lang_String__java_lang_String_:

.. _RealmQuery_containsValue_java_lang_String_String_:

.. _RealmQuery_containsValue_java_lang_String__String_:

.. _RealmQuery_containsValue_String_java_lang_String_:

.. _RealmQuery_containsValue_String__java_lang_String_:

.. _RealmQuery_containsValue_String_String_:

.. _RealmQuery_containsValue_String__String_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`containsValue <io_realm_RealmQuery_containsValue>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  value
       | )
       
       
       
   
   * - Condition that value, if a dictionary field, contains the specified value.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to search for.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field name isn't valid.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_containsValue_java_lang_String_java_lang_Float_:

.. _io_realm_RealmQuery_containsValue_java_lang_String__java_lang_Float_:

.. _io_realm_RealmQuery_containsValue_java_lang_String_Float_:

.. _io_realm_RealmQuery_containsValue_java_lang_String__Float_:

.. _io_realm_RealmQuery_containsValue_String_java_lang_Float_:

.. _io_realm_RealmQuery_containsValue_String__java_lang_Float_:

.. _io_realm_RealmQuery_containsValue_String_Float_:

.. _io_realm_RealmQuery_containsValue_String__Float_:

.. _containsValue_java_lang_String_java_lang_Float_:

.. _containsValue_java_lang_String__java_lang_Float_:

.. _containsValue_java_lang_String_Float_:

.. _containsValue_java_lang_String__Float_:

.. _containsValue_String_java_lang_Float_:

.. _containsValue_String__java_lang_Float_:

.. _containsValue_String_Float_:

.. _containsValue_String__Float_:

.. _RealmQuery_containsValue_java_lang_String_java_lang_Float_:

.. _RealmQuery_containsValue_java_lang_String__java_lang_Float_:

.. _RealmQuery_containsValue_java_lang_String_Float_:

.. _RealmQuery_containsValue_java_lang_String__Float_:

.. _RealmQuery_containsValue_String_java_lang_Float_:

.. _RealmQuery_containsValue_String__java_lang_Float_:

.. _RealmQuery_containsValue_String_Float_:

.. _RealmQuery_containsValue_String__Float_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`containsValue <io_realm_RealmQuery_containsValue>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `Float <https://docs.oracle.com/javase/7/docs/api/java/lang/Float.html>`__  value
       | )
       
       
       
   
   * - Condition that value, if a dictionary field, contains the specified value.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to search for.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field name isn't valid.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_containsValue_java_lang_String_java_lang_Double_:

.. _io_realm_RealmQuery_containsValue_java_lang_String__java_lang_Double_:

.. _io_realm_RealmQuery_containsValue_java_lang_String_Double_:

.. _io_realm_RealmQuery_containsValue_java_lang_String__Double_:

.. _io_realm_RealmQuery_containsValue_String_java_lang_Double_:

.. _io_realm_RealmQuery_containsValue_String__java_lang_Double_:

.. _io_realm_RealmQuery_containsValue_String_Double_:

.. _io_realm_RealmQuery_containsValue_String__Double_:

.. _containsValue_java_lang_String_java_lang_Double_:

.. _containsValue_java_lang_String__java_lang_Double_:

.. _containsValue_java_lang_String_Double_:

.. _containsValue_java_lang_String__Double_:

.. _containsValue_String_java_lang_Double_:

.. _containsValue_String__java_lang_Double_:

.. _containsValue_String_Double_:

.. _containsValue_String__Double_:

.. _RealmQuery_containsValue_java_lang_String_java_lang_Double_:

.. _RealmQuery_containsValue_java_lang_String__java_lang_Double_:

.. _RealmQuery_containsValue_java_lang_String_Double_:

.. _RealmQuery_containsValue_java_lang_String__Double_:

.. _RealmQuery_containsValue_String_java_lang_Double_:

.. _RealmQuery_containsValue_String__java_lang_Double_:

.. _RealmQuery_containsValue_String_Double_:

.. _RealmQuery_containsValue_String__Double_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`containsValue <io_realm_RealmQuery_containsValue>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `Double <https://docs.oracle.com/javase/7/docs/api/java/lang/Double.html>`__  value
       | )
       
       
       
   
   * - Condition that value, if a dictionary field, contains the specified value.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to search for.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field name isn't valid.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_containsValue_java_lang_String_java_lang_Long_:

.. _io_realm_RealmQuery_containsValue_java_lang_String__java_lang_Long_:

.. _io_realm_RealmQuery_containsValue_java_lang_String_Long_:

.. _io_realm_RealmQuery_containsValue_java_lang_String__Long_:

.. _io_realm_RealmQuery_containsValue_String_java_lang_Long_:

.. _io_realm_RealmQuery_containsValue_String__java_lang_Long_:

.. _io_realm_RealmQuery_containsValue_String_Long_:

.. _io_realm_RealmQuery_containsValue_String__Long_:

.. _containsValue_java_lang_String_java_lang_Long_:

.. _containsValue_java_lang_String__java_lang_Long_:

.. _containsValue_java_lang_String_Long_:

.. _containsValue_java_lang_String__Long_:

.. _containsValue_String_java_lang_Long_:

.. _containsValue_String__java_lang_Long_:

.. _containsValue_String_Long_:

.. _containsValue_String__Long_:

.. _RealmQuery_containsValue_java_lang_String_java_lang_Long_:

.. _RealmQuery_containsValue_java_lang_String__java_lang_Long_:

.. _RealmQuery_containsValue_java_lang_String_Long_:

.. _RealmQuery_containsValue_java_lang_String__Long_:

.. _RealmQuery_containsValue_String_java_lang_Long_:

.. _RealmQuery_containsValue_String__java_lang_Long_:

.. _RealmQuery_containsValue_String_Long_:

.. _RealmQuery_containsValue_String__Long_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`containsValue <io_realm_RealmQuery_containsValue>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `Long <https://docs.oracle.com/javase/7/docs/api/java/lang/Long.html>`__  value
       | )
       
       
       
   
   * - Condition that value, if a dictionary field, contains the specified value.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to search for.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field name isn't valid.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_containsValue_java_lang_String_java_lang_Integer_:

.. _io_realm_RealmQuery_containsValue_java_lang_String__java_lang_Integer_:

.. _io_realm_RealmQuery_containsValue_java_lang_String_Integer_:

.. _io_realm_RealmQuery_containsValue_java_lang_String__Integer_:

.. _io_realm_RealmQuery_containsValue_String_java_lang_Integer_:

.. _io_realm_RealmQuery_containsValue_String__java_lang_Integer_:

.. _io_realm_RealmQuery_containsValue_String_Integer_:

.. _io_realm_RealmQuery_containsValue_String__Integer_:

.. _containsValue_java_lang_String_java_lang_Integer_:

.. _containsValue_java_lang_String__java_lang_Integer_:

.. _containsValue_java_lang_String_Integer_:

.. _containsValue_java_lang_String__Integer_:

.. _containsValue_String_java_lang_Integer_:

.. _containsValue_String__java_lang_Integer_:

.. _containsValue_String_Integer_:

.. _containsValue_String__Integer_:

.. _RealmQuery_containsValue_java_lang_String_java_lang_Integer_:

.. _RealmQuery_containsValue_java_lang_String__java_lang_Integer_:

.. _RealmQuery_containsValue_java_lang_String_Integer_:

.. _RealmQuery_containsValue_java_lang_String__Integer_:

.. _RealmQuery_containsValue_String_java_lang_Integer_:

.. _RealmQuery_containsValue_String__java_lang_Integer_:

.. _RealmQuery_containsValue_String_Integer_:

.. _RealmQuery_containsValue_String__Integer_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`containsValue <io_realm_RealmQuery_containsValue>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `Integer <https://docs.oracle.com/javase/7/docs/api/java/lang/Integer.html>`__  value
       | )
       
       
       
   
   * - Condition that value, if a dictionary field, contains the specified value.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to search for
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field name isn't valid.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_containsValue_java_lang_String_java_lang_Short_:

.. _io_realm_RealmQuery_containsValue_java_lang_String__java_lang_Short_:

.. _io_realm_RealmQuery_containsValue_java_lang_String_Short_:

.. _io_realm_RealmQuery_containsValue_java_lang_String__Short_:

.. _io_realm_RealmQuery_containsValue_String_java_lang_Short_:

.. _io_realm_RealmQuery_containsValue_String__java_lang_Short_:

.. _io_realm_RealmQuery_containsValue_String_Short_:

.. _io_realm_RealmQuery_containsValue_String__Short_:

.. _containsValue_java_lang_String_java_lang_Short_:

.. _containsValue_java_lang_String__java_lang_Short_:

.. _containsValue_java_lang_String_Short_:

.. _containsValue_java_lang_String__Short_:

.. _containsValue_String_java_lang_Short_:

.. _containsValue_String__java_lang_Short_:

.. _containsValue_String_Short_:

.. _containsValue_String__Short_:

.. _RealmQuery_containsValue_java_lang_String_java_lang_Short_:

.. _RealmQuery_containsValue_java_lang_String__java_lang_Short_:

.. _RealmQuery_containsValue_java_lang_String_Short_:

.. _RealmQuery_containsValue_java_lang_String__Short_:

.. _RealmQuery_containsValue_String_java_lang_Short_:

.. _RealmQuery_containsValue_String__java_lang_Short_:

.. _RealmQuery_containsValue_String_Short_:

.. _RealmQuery_containsValue_String__Short_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`containsValue <io_realm_RealmQuery_containsValue>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `Short <https://docs.oracle.com/javase/7/docs/api/java/lang/Short.html>`__  value
       | )
       
       
       
   
   * - Condition that value, if a dictionary field, contains the specified value.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to search for.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field name isn't valid.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_containsValue_java_lang_String_java_lang_Byte_:

.. _io_realm_RealmQuery_containsValue_java_lang_String__java_lang_Byte_:

.. _io_realm_RealmQuery_containsValue_java_lang_String_Byte_:

.. _io_realm_RealmQuery_containsValue_java_lang_String__Byte_:

.. _io_realm_RealmQuery_containsValue_String_java_lang_Byte_:

.. _io_realm_RealmQuery_containsValue_String__java_lang_Byte_:

.. _io_realm_RealmQuery_containsValue_String_Byte_:

.. _io_realm_RealmQuery_containsValue_String__Byte_:

.. _containsValue_java_lang_String_java_lang_Byte_:

.. _containsValue_java_lang_String__java_lang_Byte_:

.. _containsValue_java_lang_String_Byte_:

.. _containsValue_java_lang_String__Byte_:

.. _containsValue_String_java_lang_Byte_:

.. _containsValue_String__java_lang_Byte_:

.. _containsValue_String_Byte_:

.. _containsValue_String__Byte_:

.. _RealmQuery_containsValue_java_lang_String_java_lang_Byte_:

.. _RealmQuery_containsValue_java_lang_String__java_lang_Byte_:

.. _RealmQuery_containsValue_java_lang_String_Byte_:

.. _RealmQuery_containsValue_java_lang_String__Byte_:

.. _RealmQuery_containsValue_String_java_lang_Byte_:

.. _RealmQuery_containsValue_String__java_lang_Byte_:

.. _RealmQuery_containsValue_String_Byte_:

.. _RealmQuery_containsValue_String__Byte_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`containsValue <io_realm_RealmQuery_containsValue>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `Byte <https://docs.oracle.com/javase/7/docs/api/java/lang/Byte.html>`__  value
       | )
       
       
       
   
   * - Condition that value, if a dictionary field, contains the specified value.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to search for.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field name isn't valid.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_containsValue_java_lang_String_java_lang_Boolean_:

.. _io_realm_RealmQuery_containsValue_java_lang_String__java_lang_Boolean_:

.. _io_realm_RealmQuery_containsValue_java_lang_String_Boolean_:

.. _io_realm_RealmQuery_containsValue_java_lang_String__Boolean_:

.. _io_realm_RealmQuery_containsValue_String_java_lang_Boolean_:

.. _io_realm_RealmQuery_containsValue_String__java_lang_Boolean_:

.. _io_realm_RealmQuery_containsValue_String_Boolean_:

.. _io_realm_RealmQuery_containsValue_String__Boolean_:

.. _containsValue_java_lang_String_java_lang_Boolean_:

.. _containsValue_java_lang_String__java_lang_Boolean_:

.. _containsValue_java_lang_String_Boolean_:

.. _containsValue_java_lang_String__Boolean_:

.. _containsValue_String_java_lang_Boolean_:

.. _containsValue_String__java_lang_Boolean_:

.. _containsValue_String_Boolean_:

.. _containsValue_String__Boolean_:

.. _RealmQuery_containsValue_java_lang_String_java_lang_Boolean_:

.. _RealmQuery_containsValue_java_lang_String__java_lang_Boolean_:

.. _RealmQuery_containsValue_java_lang_String_Boolean_:

.. _RealmQuery_containsValue_java_lang_String__Boolean_:

.. _RealmQuery_containsValue_String_java_lang_Boolean_:

.. _RealmQuery_containsValue_String__java_lang_Boolean_:

.. _RealmQuery_containsValue_String_Boolean_:

.. _RealmQuery_containsValue_String__Boolean_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`containsValue <io_realm_RealmQuery_containsValue>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `Boolean <https://docs.oracle.com/javase/7/docs/api/java/lang/Boolean.html>`__  value
       | )
       
       
       
   
   * - Condition that value, if a dictionary field, contains the specified value.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to search for.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field name isn't valid.
          
          
          
       
       
       
       
       
   
   


.. _count:

.. _count__:

.. _RealmQuery_count:

.. _RealmQuery_count__:

.. _io_realm_RealmQuery_count:

.. _io_realm_RealmQuery_count__:



count
-----

.. list-table::
   :header-rows: 1
   
   * - | public **long** :ref:`count <io_realm_RealmQuery_count>` ()
       | 
       
       
       
   
   * - Counts the number of objects that fulfill the query conditions.
       
       
       
       
       
       
       **Returns**
       
       the number of matching objects.
       
       
       
       
       **Throws**
       
       - `java.lang.UnsupportedOperationException <https://docs.oracle.com/javase/7/docs/api/java/lang/UnsupportedOperationException.html>`__  - if the query is not valid ("syntax error").
          
          
          
       - :ref:`RealmException <io_realm_exceptions_RealmException>`  - if called from the UI thread after opting out via :ref:`RealmConfiguration.Builder.allowQueriesOnUiThread(boolean) <io_realm_RealmConfiguration_Builder_allowQueriesOnUiThread_boolean_>` .
          
          
          
          
          
       
       
       
       
       
   
   


.. _distinct:

.. _distinct__:

.. _RealmQuery_distinct:

.. _RealmQuery_distinct__:

.. _io_realm_RealmQuery_distinct:

.. _io_realm_RealmQuery_distinct__:



distinct
--------

.. _io_realm_RealmQuery_distinct_java_lang_String_java_lang_String_:

.. _io_realm_RealmQuery_distinct_java_lang_String__java_lang_String_:

.. _io_realm_RealmQuery_distinct_java_lang_String_String_:

.. _io_realm_RealmQuery_distinct_java_lang_String__String_:

.. _io_realm_RealmQuery_distinct_java_lang_String_String____:

.. _io_realm_RealmQuery_distinct_java_lang_String__String____:

.. _io_realm_RealmQuery_distinct_String_java_lang_String_:

.. _io_realm_RealmQuery_distinct_String__java_lang_String_:

.. _io_realm_RealmQuery_distinct_String_String_:

.. _io_realm_RealmQuery_distinct_String__String_:

.. _io_realm_RealmQuery_distinct_String_String____:

.. _io_realm_RealmQuery_distinct_String__String____:

.. _distinct_java_lang_String_java_lang_String_:

.. _distinct_java_lang_String__java_lang_String_:

.. _distinct_java_lang_String_String_:

.. _distinct_java_lang_String__String_:

.. _distinct_java_lang_String_String____:

.. _distinct_java_lang_String__String____:

.. _distinct_String_java_lang_String_:

.. _distinct_String__java_lang_String_:

.. _distinct_String_String_:

.. _distinct_String__String_:

.. _distinct_String_String____:

.. _distinct_String__String____:

.. _RealmQuery_distinct_java_lang_String_java_lang_String_:

.. _RealmQuery_distinct_java_lang_String__java_lang_String_:

.. _RealmQuery_distinct_java_lang_String_String_:

.. _RealmQuery_distinct_java_lang_String__String_:

.. _RealmQuery_distinct_java_lang_String_String____:

.. _RealmQuery_distinct_java_lang_String__String____:

.. _RealmQuery_distinct_String_java_lang_String_:

.. _RealmQuery_distinct_String__java_lang_String_:

.. _RealmQuery_distinct_String_String_:

.. _RealmQuery_distinct_String__String_:

.. _RealmQuery_distinct_String_String____:

.. _RealmQuery_distinct_String__String____:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`distinct <io_realm_RealmQuery_distinct>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  firstFieldName, 
       |  `java.lang.String[] <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  remainingFieldNames
       | )
       
       
       
   
   * - Selects a distinct set of objects of a specific class. When multiple distinct fields are given, all unique combinations of values in the fields will be returned. In case of multiple matches, it is undefined which object is returned. Unless the result is sorted, then the first object will be returned.
       
       
       
       
       **Parameters**
       
       - ``firstFieldName`` - first field name to use when finding distinct objects.
          
          
          
       - ``remainingFieldNames`` - remaining field names when determining all unique combinations of field values.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if field names is empty or ``null`` , does not exist, is an unsupported type, or points to a linked field.
          
          
          
          
          
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if distinct field names were already defined.
          
          
          
       
       
       
       
       
   
   


.. _endGroup:

.. _endGroup__:

.. _RealmQuery_endGroup:

.. _RealmQuery_endGroup__:

.. _io_realm_RealmQuery_endGroup:

.. _io_realm_RealmQuery_endGroup__:



endGroup
--------

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`endGroup <io_realm_RealmQuery_endGroup>` ()
       | 
       
       
       
   
   * - End grouping of conditions ("right parenthesis") which was opened by a call to ``beginGroup()`` .
       
       
       
       
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       
       
       
       
       .. seealso::
       
       
          
          - :ref:`beginGroup() <io_realm_RealmQuery_beginGroup__>` 
             
             
             
          
          
          
       
       
   
   


.. _endsWith:

.. _endsWith__:

.. _RealmQuery_endsWith:

.. _RealmQuery_endsWith__:

.. _io_realm_RealmQuery_endsWith:

.. _io_realm_RealmQuery_endsWith__:



endsWith
--------

.. _io_realm_RealmQuery_endsWith_java_lang_String_io_realm_RealmAny_io_realm_Case_:

.. _io_realm_RealmQuery_endsWith_java_lang_String__io_realm_RealmAny__io_realm_Case_:

.. _io_realm_RealmQuery_endsWith_java_lang_String_io_realm_RealmAny_Case_:

.. _io_realm_RealmQuery_endsWith_java_lang_String__io_realm_RealmAny__Case_:

.. _io_realm_RealmQuery_endsWith_java_lang_String_RealmAny_io_realm_Case_:

.. _io_realm_RealmQuery_endsWith_java_lang_String__RealmAny__io_realm_Case_:

.. _io_realm_RealmQuery_endsWith_java_lang_String_RealmAny_Case_:

.. _io_realm_RealmQuery_endsWith_java_lang_String__RealmAny__Case_:

.. _io_realm_RealmQuery_endsWith_String_io_realm_RealmAny_io_realm_Case_:

.. _io_realm_RealmQuery_endsWith_String__io_realm_RealmAny__io_realm_Case_:

.. _io_realm_RealmQuery_endsWith_String_io_realm_RealmAny_Case_:

.. _io_realm_RealmQuery_endsWith_String__io_realm_RealmAny__Case_:

.. _io_realm_RealmQuery_endsWith_String_RealmAny_io_realm_Case_:

.. _io_realm_RealmQuery_endsWith_String__RealmAny__io_realm_Case_:

.. _io_realm_RealmQuery_endsWith_String_RealmAny_Case_:

.. _io_realm_RealmQuery_endsWith_String__RealmAny__Case_:

.. _endsWith_java_lang_String_io_realm_RealmAny_io_realm_Case_:

.. _endsWith_java_lang_String__io_realm_RealmAny__io_realm_Case_:

.. _endsWith_java_lang_String_io_realm_RealmAny_Case_:

.. _endsWith_java_lang_String__io_realm_RealmAny__Case_:

.. _endsWith_java_lang_String_RealmAny_io_realm_Case_:

.. _endsWith_java_lang_String__RealmAny__io_realm_Case_:

.. _endsWith_java_lang_String_RealmAny_Case_:

.. _endsWith_java_lang_String__RealmAny__Case_:

.. _endsWith_String_io_realm_RealmAny_io_realm_Case_:

.. _endsWith_String__io_realm_RealmAny__io_realm_Case_:

.. _endsWith_String_io_realm_RealmAny_Case_:

.. _endsWith_String__io_realm_RealmAny__Case_:

.. _endsWith_String_RealmAny_io_realm_Case_:

.. _endsWith_String__RealmAny__io_realm_Case_:

.. _endsWith_String_RealmAny_Case_:

.. _endsWith_String__RealmAny__Case_:

.. _RealmQuery_endsWith_java_lang_String_io_realm_RealmAny_io_realm_Case_:

.. _RealmQuery_endsWith_java_lang_String__io_realm_RealmAny__io_realm_Case_:

.. _RealmQuery_endsWith_java_lang_String_io_realm_RealmAny_Case_:

.. _RealmQuery_endsWith_java_lang_String__io_realm_RealmAny__Case_:

.. _RealmQuery_endsWith_java_lang_String_RealmAny_io_realm_Case_:

.. _RealmQuery_endsWith_java_lang_String__RealmAny__io_realm_Case_:

.. _RealmQuery_endsWith_java_lang_String_RealmAny_Case_:

.. _RealmQuery_endsWith_java_lang_String__RealmAny__Case_:

.. _RealmQuery_endsWith_String_io_realm_RealmAny_io_realm_Case_:

.. _RealmQuery_endsWith_String__io_realm_RealmAny__io_realm_Case_:

.. _RealmQuery_endsWith_String_io_realm_RealmAny_Case_:

.. _RealmQuery_endsWith_String__io_realm_RealmAny__Case_:

.. _RealmQuery_endsWith_String_RealmAny_io_realm_Case_:

.. _RealmQuery_endsWith_String__RealmAny__io_realm_Case_:

.. _RealmQuery_endsWith_String_RealmAny_Case_:

.. _RealmQuery_endsWith_String__RealmAny__Case_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`endsWith <io_realm_RealmQuery_endsWith>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  :ref:`RealmAny <io_realm_RealmAny>`  value, 
       |  :ref:`Case <io_realm_Case>`  casing
       | )
       
       
       
   
   * - Condition that the value of field ends with the specified substring.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the substring.
          
          
          
       - ``casing`` - how to handle casing. Setting this to :ref:`Case.INSENSITIVE <io_realm_Case_INSENSITIVE>`  only works for Latin-1 characters.
          
          
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_endsWith_java_lang_String_java_lang_String_io_realm_Case_:

.. _io_realm_RealmQuery_endsWith_java_lang_String__java_lang_String__io_realm_Case_:

.. _io_realm_RealmQuery_endsWith_java_lang_String_java_lang_String_Case_:

.. _io_realm_RealmQuery_endsWith_java_lang_String__java_lang_String__Case_:

.. _io_realm_RealmQuery_endsWith_java_lang_String_String_io_realm_Case_:

.. _io_realm_RealmQuery_endsWith_java_lang_String__String__io_realm_Case_:

.. _io_realm_RealmQuery_endsWith_java_lang_String_String_Case_:

.. _io_realm_RealmQuery_endsWith_java_lang_String__String__Case_:

.. _io_realm_RealmQuery_endsWith_String_java_lang_String_io_realm_Case_:

.. _io_realm_RealmQuery_endsWith_String__java_lang_String__io_realm_Case_:

.. _io_realm_RealmQuery_endsWith_String_java_lang_String_Case_:

.. _io_realm_RealmQuery_endsWith_String__java_lang_String__Case_:

.. _io_realm_RealmQuery_endsWith_String_String_io_realm_Case_:

.. _io_realm_RealmQuery_endsWith_String__String__io_realm_Case_:

.. _io_realm_RealmQuery_endsWith_String_String_Case_:

.. _io_realm_RealmQuery_endsWith_String__String__Case_:

.. _endsWith_java_lang_String_java_lang_String_io_realm_Case_:

.. _endsWith_java_lang_String__java_lang_String__io_realm_Case_:

.. _endsWith_java_lang_String_java_lang_String_Case_:

.. _endsWith_java_lang_String__java_lang_String__Case_:

.. _endsWith_java_lang_String_String_io_realm_Case_:

.. _endsWith_java_lang_String__String__io_realm_Case_:

.. _endsWith_java_lang_String_String_Case_:

.. _endsWith_java_lang_String__String__Case_:

.. _endsWith_String_java_lang_String_io_realm_Case_:

.. _endsWith_String__java_lang_String__io_realm_Case_:

.. _endsWith_String_java_lang_String_Case_:

.. _endsWith_String__java_lang_String__Case_:

.. _endsWith_String_String_io_realm_Case_:

.. _endsWith_String__String__io_realm_Case_:

.. _endsWith_String_String_Case_:

.. _endsWith_String__String__Case_:

.. _RealmQuery_endsWith_java_lang_String_java_lang_String_io_realm_Case_:

.. _RealmQuery_endsWith_java_lang_String__java_lang_String__io_realm_Case_:

.. _RealmQuery_endsWith_java_lang_String_java_lang_String_Case_:

.. _RealmQuery_endsWith_java_lang_String__java_lang_String__Case_:

.. _RealmQuery_endsWith_java_lang_String_String_io_realm_Case_:

.. _RealmQuery_endsWith_java_lang_String__String__io_realm_Case_:

.. _RealmQuery_endsWith_java_lang_String_String_Case_:

.. _RealmQuery_endsWith_java_lang_String__String__Case_:

.. _RealmQuery_endsWith_String_java_lang_String_io_realm_Case_:

.. _RealmQuery_endsWith_String__java_lang_String__io_realm_Case_:

.. _RealmQuery_endsWith_String_java_lang_String_Case_:

.. _RealmQuery_endsWith_String__java_lang_String__Case_:

.. _RealmQuery_endsWith_String_String_io_realm_Case_:

.. _RealmQuery_endsWith_String__String__io_realm_Case_:

.. _RealmQuery_endsWith_String_String_Case_:

.. _RealmQuery_endsWith_String__String__Case_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`endsWith <io_realm_RealmQuery_endsWith>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  value, 
       |  :ref:`Case <io_realm_Case>`  casing
       | )
       
       
       
   
   * - Condition that the value of field ends with the specified substring.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the substring.
          
          
          
       - ``casing`` - how to handle casing. Setting this to :ref:`Case.INSENSITIVE <io_realm_Case_INSENSITIVE>`  only works for Latin-1 characters.
          
          
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_endsWith_java_lang_String_io_realm_RealmAny_:

.. _io_realm_RealmQuery_endsWith_java_lang_String__io_realm_RealmAny_:

.. _io_realm_RealmQuery_endsWith_java_lang_String_RealmAny_:

.. _io_realm_RealmQuery_endsWith_java_lang_String__RealmAny_:

.. _io_realm_RealmQuery_endsWith_String_io_realm_RealmAny_:

.. _io_realm_RealmQuery_endsWith_String__io_realm_RealmAny_:

.. _io_realm_RealmQuery_endsWith_String_RealmAny_:

.. _io_realm_RealmQuery_endsWith_String__RealmAny_:

.. _endsWith_java_lang_String_io_realm_RealmAny_:

.. _endsWith_java_lang_String__io_realm_RealmAny_:

.. _endsWith_java_lang_String_RealmAny_:

.. _endsWith_java_lang_String__RealmAny_:

.. _endsWith_String_io_realm_RealmAny_:

.. _endsWith_String__io_realm_RealmAny_:

.. _endsWith_String_RealmAny_:

.. _endsWith_String__RealmAny_:

.. _RealmQuery_endsWith_java_lang_String_io_realm_RealmAny_:

.. _RealmQuery_endsWith_java_lang_String__io_realm_RealmAny_:

.. _RealmQuery_endsWith_java_lang_String_RealmAny_:

.. _RealmQuery_endsWith_java_lang_String__RealmAny_:

.. _RealmQuery_endsWith_String_io_realm_RealmAny_:

.. _RealmQuery_endsWith_String__io_realm_RealmAny_:

.. _RealmQuery_endsWith_String_RealmAny_:

.. _RealmQuery_endsWith_String__RealmAny_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`endsWith <io_realm_RealmQuery_endsWith>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  :ref:`RealmAny <io_realm_RealmAny>`  value
       | )
       
       
       
   
   * - Condition that the value of field ends with the specified string.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the string.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_endsWith_java_lang_String_java_lang_String_:

.. _io_realm_RealmQuery_endsWith_java_lang_String__java_lang_String_:

.. _io_realm_RealmQuery_endsWith_java_lang_String_String_:

.. _io_realm_RealmQuery_endsWith_java_lang_String__String_:

.. _io_realm_RealmQuery_endsWith_String_java_lang_String_:

.. _io_realm_RealmQuery_endsWith_String__java_lang_String_:

.. _io_realm_RealmQuery_endsWith_String_String_:

.. _io_realm_RealmQuery_endsWith_String__String_:

.. _endsWith_java_lang_String_java_lang_String_:

.. _endsWith_java_lang_String__java_lang_String_:

.. _endsWith_java_lang_String_String_:

.. _endsWith_java_lang_String__String_:

.. _endsWith_String_java_lang_String_:

.. _endsWith_String__java_lang_String_:

.. _endsWith_String_String_:

.. _endsWith_String__String_:

.. _RealmQuery_endsWith_java_lang_String_java_lang_String_:

.. _RealmQuery_endsWith_java_lang_String__java_lang_String_:

.. _RealmQuery_endsWith_java_lang_String_String_:

.. _RealmQuery_endsWith_java_lang_String__String_:

.. _RealmQuery_endsWith_String_java_lang_String_:

.. _RealmQuery_endsWith_String__java_lang_String_:

.. _RealmQuery_endsWith_String_String_:

.. _RealmQuery_endsWith_String__String_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`endsWith <io_realm_RealmQuery_endsWith>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  value
       | )
       
       
       
   
   * - Condition that the value of field ends with the specified string.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the string.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   


.. _equalTo:

.. _equalTo__:

.. _RealmQuery_equalTo:

.. _RealmQuery_equalTo__:

.. _io_realm_RealmQuery_equalTo:

.. _io_realm_RealmQuery_equalTo__:



equalTo
-------

.. _io_realm_RealmQuery_equalTo_java_lang_String_ObjectId_:

.. _io_realm_RealmQuery_equalTo_java_lang_String__ObjectId_:

.. _io_realm_RealmQuery_equalTo_String_ObjectId_:

.. _io_realm_RealmQuery_equalTo_String__ObjectId_:

.. _equalTo_java_lang_String_ObjectId_:

.. _equalTo_java_lang_String__ObjectId_:

.. _equalTo_String_ObjectId_:

.. _equalTo_String__ObjectId_:

.. _RealmQuery_equalTo_java_lang_String_ObjectId_:

.. _RealmQuery_equalTo_java_lang_String__ObjectId_:

.. _RealmQuery_equalTo_String_ObjectId_:

.. _RealmQuery_equalTo_String__ObjectId_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`equalTo <io_realm_RealmQuery_equalTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **ObjectId** value
       | )
       
       
       
   
   * - Equal-to comparison.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to compare with.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_equalTo_java_lang_String_Decimal128_:

.. _io_realm_RealmQuery_equalTo_java_lang_String__Decimal128_:

.. _io_realm_RealmQuery_equalTo_String_Decimal128_:

.. _io_realm_RealmQuery_equalTo_String__Decimal128_:

.. _equalTo_java_lang_String_Decimal128_:

.. _equalTo_java_lang_String__Decimal128_:

.. _equalTo_String_Decimal128_:

.. _equalTo_String__Decimal128_:

.. _RealmQuery_equalTo_java_lang_String_Decimal128_:

.. _RealmQuery_equalTo_java_lang_String__Decimal128_:

.. _RealmQuery_equalTo_String_Decimal128_:

.. _RealmQuery_equalTo_String__Decimal128_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`equalTo <io_realm_RealmQuery_equalTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **Decimal128** value
       | )
       
       
       
   
   * - Equal-to comparison.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to compare with.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_equalTo_java_lang_String_io_realm_RealmAny_io_realm_Case_:

.. _io_realm_RealmQuery_equalTo_java_lang_String__io_realm_RealmAny__io_realm_Case_:

.. _io_realm_RealmQuery_equalTo_java_lang_String_io_realm_RealmAny_Case_:

.. _io_realm_RealmQuery_equalTo_java_lang_String__io_realm_RealmAny__Case_:

.. _io_realm_RealmQuery_equalTo_java_lang_String_RealmAny_io_realm_Case_:

.. _io_realm_RealmQuery_equalTo_java_lang_String__RealmAny__io_realm_Case_:

.. _io_realm_RealmQuery_equalTo_java_lang_String_RealmAny_Case_:

.. _io_realm_RealmQuery_equalTo_java_lang_String__RealmAny__Case_:

.. _io_realm_RealmQuery_equalTo_String_io_realm_RealmAny_io_realm_Case_:

.. _io_realm_RealmQuery_equalTo_String__io_realm_RealmAny__io_realm_Case_:

.. _io_realm_RealmQuery_equalTo_String_io_realm_RealmAny_Case_:

.. _io_realm_RealmQuery_equalTo_String__io_realm_RealmAny__Case_:

.. _io_realm_RealmQuery_equalTo_String_RealmAny_io_realm_Case_:

.. _io_realm_RealmQuery_equalTo_String__RealmAny__io_realm_Case_:

.. _io_realm_RealmQuery_equalTo_String_RealmAny_Case_:

.. _io_realm_RealmQuery_equalTo_String__RealmAny__Case_:

.. _equalTo_java_lang_String_io_realm_RealmAny_io_realm_Case_:

.. _equalTo_java_lang_String__io_realm_RealmAny__io_realm_Case_:

.. _equalTo_java_lang_String_io_realm_RealmAny_Case_:

.. _equalTo_java_lang_String__io_realm_RealmAny__Case_:

.. _equalTo_java_lang_String_RealmAny_io_realm_Case_:

.. _equalTo_java_lang_String__RealmAny__io_realm_Case_:

.. _equalTo_java_lang_String_RealmAny_Case_:

.. _equalTo_java_lang_String__RealmAny__Case_:

.. _equalTo_String_io_realm_RealmAny_io_realm_Case_:

.. _equalTo_String__io_realm_RealmAny__io_realm_Case_:

.. _equalTo_String_io_realm_RealmAny_Case_:

.. _equalTo_String__io_realm_RealmAny__Case_:

.. _equalTo_String_RealmAny_io_realm_Case_:

.. _equalTo_String__RealmAny__io_realm_Case_:

.. _equalTo_String_RealmAny_Case_:

.. _equalTo_String__RealmAny__Case_:

.. _RealmQuery_equalTo_java_lang_String_io_realm_RealmAny_io_realm_Case_:

.. _RealmQuery_equalTo_java_lang_String__io_realm_RealmAny__io_realm_Case_:

.. _RealmQuery_equalTo_java_lang_String_io_realm_RealmAny_Case_:

.. _RealmQuery_equalTo_java_lang_String__io_realm_RealmAny__Case_:

.. _RealmQuery_equalTo_java_lang_String_RealmAny_io_realm_Case_:

.. _RealmQuery_equalTo_java_lang_String__RealmAny__io_realm_Case_:

.. _RealmQuery_equalTo_java_lang_String_RealmAny_Case_:

.. _RealmQuery_equalTo_java_lang_String__RealmAny__Case_:

.. _RealmQuery_equalTo_String_io_realm_RealmAny_io_realm_Case_:

.. _RealmQuery_equalTo_String__io_realm_RealmAny__io_realm_Case_:

.. _RealmQuery_equalTo_String_io_realm_RealmAny_Case_:

.. _RealmQuery_equalTo_String__io_realm_RealmAny__Case_:

.. _RealmQuery_equalTo_String_RealmAny_io_realm_Case_:

.. _RealmQuery_equalTo_String__RealmAny__io_realm_Case_:

.. _RealmQuery_equalTo_String_RealmAny_Case_:

.. _RealmQuery_equalTo_String__RealmAny__Case_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`equalTo <io_realm_RealmQuery_equalTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  :ref:`RealmAny <io_realm_RealmAny>`  value, 
       |  :ref:`Case <io_realm_Case>`  casing
       | )
       
       
       
   
   * - Equal-to comparison.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to compare with.
          
          
          
       - ``casing`` - how to handle casing. Setting this to :ref:`Case.INSENSITIVE <io_realm_Case_INSENSITIVE>`  only works for Latin-1 characters.
          
          
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_equalTo_java_lang_String_java_lang_String_io_realm_Case_:

.. _io_realm_RealmQuery_equalTo_java_lang_String__java_lang_String__io_realm_Case_:

.. _io_realm_RealmQuery_equalTo_java_lang_String_java_lang_String_Case_:

.. _io_realm_RealmQuery_equalTo_java_lang_String__java_lang_String__Case_:

.. _io_realm_RealmQuery_equalTo_java_lang_String_String_io_realm_Case_:

.. _io_realm_RealmQuery_equalTo_java_lang_String__String__io_realm_Case_:

.. _io_realm_RealmQuery_equalTo_java_lang_String_String_Case_:

.. _io_realm_RealmQuery_equalTo_java_lang_String__String__Case_:

.. _io_realm_RealmQuery_equalTo_String_java_lang_String_io_realm_Case_:

.. _io_realm_RealmQuery_equalTo_String__java_lang_String__io_realm_Case_:

.. _io_realm_RealmQuery_equalTo_String_java_lang_String_Case_:

.. _io_realm_RealmQuery_equalTo_String__java_lang_String__Case_:

.. _io_realm_RealmQuery_equalTo_String_String_io_realm_Case_:

.. _io_realm_RealmQuery_equalTo_String__String__io_realm_Case_:

.. _io_realm_RealmQuery_equalTo_String_String_Case_:

.. _io_realm_RealmQuery_equalTo_String__String__Case_:

.. _equalTo_java_lang_String_java_lang_String_io_realm_Case_:

.. _equalTo_java_lang_String__java_lang_String__io_realm_Case_:

.. _equalTo_java_lang_String_java_lang_String_Case_:

.. _equalTo_java_lang_String__java_lang_String__Case_:

.. _equalTo_java_lang_String_String_io_realm_Case_:

.. _equalTo_java_lang_String__String__io_realm_Case_:

.. _equalTo_java_lang_String_String_Case_:

.. _equalTo_java_lang_String__String__Case_:

.. _equalTo_String_java_lang_String_io_realm_Case_:

.. _equalTo_String__java_lang_String__io_realm_Case_:

.. _equalTo_String_java_lang_String_Case_:

.. _equalTo_String__java_lang_String__Case_:

.. _equalTo_String_String_io_realm_Case_:

.. _equalTo_String__String__io_realm_Case_:

.. _equalTo_String_String_Case_:

.. _equalTo_String__String__Case_:

.. _RealmQuery_equalTo_java_lang_String_java_lang_String_io_realm_Case_:

.. _RealmQuery_equalTo_java_lang_String__java_lang_String__io_realm_Case_:

.. _RealmQuery_equalTo_java_lang_String_java_lang_String_Case_:

.. _RealmQuery_equalTo_java_lang_String__java_lang_String__Case_:

.. _RealmQuery_equalTo_java_lang_String_String_io_realm_Case_:

.. _RealmQuery_equalTo_java_lang_String__String__io_realm_Case_:

.. _RealmQuery_equalTo_java_lang_String_String_Case_:

.. _RealmQuery_equalTo_java_lang_String__String__Case_:

.. _RealmQuery_equalTo_String_java_lang_String_io_realm_Case_:

.. _RealmQuery_equalTo_String__java_lang_String__io_realm_Case_:

.. _RealmQuery_equalTo_String_java_lang_String_Case_:

.. _RealmQuery_equalTo_String__java_lang_String__Case_:

.. _RealmQuery_equalTo_String_String_io_realm_Case_:

.. _RealmQuery_equalTo_String__String__io_realm_Case_:

.. _RealmQuery_equalTo_String_String_Case_:

.. _RealmQuery_equalTo_String__String__Case_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`equalTo <io_realm_RealmQuery_equalTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  value, 
       |  :ref:`Case <io_realm_Case>`  casing
       | )
       
       
       
   
   * - Equal-to comparison.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to compare with.
          
          
          
       - ``casing`` - how to handle casing. Setting this to :ref:`Case.INSENSITIVE <io_realm_Case_INSENSITIVE>`  only works for Latin-1 characters.
          
          
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_equalTo_java_lang_String_java_lang_String_:

.. _io_realm_RealmQuery_equalTo_java_lang_String__java_lang_String_:

.. _io_realm_RealmQuery_equalTo_java_lang_String_String_:

.. _io_realm_RealmQuery_equalTo_java_lang_String__String_:

.. _io_realm_RealmQuery_equalTo_String_java_lang_String_:

.. _io_realm_RealmQuery_equalTo_String__java_lang_String_:

.. _io_realm_RealmQuery_equalTo_String_String_:

.. _io_realm_RealmQuery_equalTo_String__String_:

.. _equalTo_java_lang_String_java_lang_String_:

.. _equalTo_java_lang_String__java_lang_String_:

.. _equalTo_java_lang_String_String_:

.. _equalTo_java_lang_String__String_:

.. _equalTo_String_java_lang_String_:

.. _equalTo_String__java_lang_String_:

.. _equalTo_String_String_:

.. _equalTo_String__String_:

.. _RealmQuery_equalTo_java_lang_String_java_lang_String_:

.. _RealmQuery_equalTo_java_lang_String__java_lang_String_:

.. _RealmQuery_equalTo_java_lang_String_String_:

.. _RealmQuery_equalTo_java_lang_String__String_:

.. _RealmQuery_equalTo_String_java_lang_String_:

.. _RealmQuery_equalTo_String__java_lang_String_:

.. _RealmQuery_equalTo_String_String_:

.. _RealmQuery_equalTo_String__String_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`equalTo <io_realm_RealmQuery_equalTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  value
       | )
       
       
       
   
   * - Equal-to comparison.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to compare with.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   


.. _findAll:

.. _findAll__:

.. _RealmQuery_findAll:

.. _RealmQuery_findAll__:

.. _io_realm_RealmQuery_findAll:

.. _io_realm_RealmQuery_findAll__:



findAll
-------

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmResults <io_realm_RealmResults>`  :ref:`findAll <io_realm_RealmQuery_findAll>` ()
       | 
       
       
       
   
   * - Finds all objects that fulfill the query conditions.Launching heavy queries from the UI thread may result in a drop of frames or even ANRs. **We do not recommend doing so and therefore it is not allowed by default.** If you want to prevent these behaviors you can obtain a Realm using a :ref:`RealmConfiguration <io_realm_RealmConfiguration>`  that explicitly sets :ref:`RealmConfiguration.Builder.allowQueriesOnUiThread(boolean) <io_realm_RealmConfiguration_Builder_allowQueriesOnUiThread_boolean_>`  to ``false`` . This way you will be forced to launch your queries from a non-UI thread, otherwise calls to this method will throw a :ref:`RealmException <io_realm_exceptions_RealmException>` . Alternatively, you can use :ref:`findAllAsync() <io_realm_RealmQuery_findAllAsync__>` .
       
       
       
       
       
       
       
       
       
       
       **Returns**
       
       a :ref:`io.realm.RealmResults <io_realm_RealmResults>`  containing objects. If no objects match the condition, a list with zero objects is returned.
       
       
       
       
       
       
       **Throws**
       
       - :ref:`RealmException <io_realm_exceptions_RealmException>`  - if called from the UI thread after opting out via :ref:`RealmConfiguration.Builder.allowQueriesOnUiThread(boolean) <io_realm_RealmConfiguration_Builder_allowQueriesOnUiThread_boolean_>` .
          
          
          
          
          
       
       
       
       
       
       
       .. seealso::
       
       
          
          - :ref:`io.realm.RealmResults <io_realm_RealmResults>` 
             
             
             
          
          
          
       
       
   
   


.. _findAllAsync:

.. _findAllAsync__:

.. _RealmQuery_findAllAsync:

.. _RealmQuery_findAllAsync__:

.. _io_realm_RealmQuery_findAllAsync:

.. _io_realm_RealmQuery_findAllAsync__:



findAllAsync
------------

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmResults <io_realm_RealmResults>`  :ref:`findAllAsync <io_realm_RealmQuery_findAllAsync>` ()
       | 
       
       
       
   
   * - Finds all objects that fulfill the query conditions. This method is only available from a Looper thread.
       
       
       
       
       
       
       **Returns**
       
       immediately an empty :ref:`RealmResults <io_realm_RealmResults>` . Users need to register a listener :ref:`io.realm.RealmResults.addChangeListener(RealmChangeListener) <io_realm_RealmResults_addChangeListener_RealmChangeListener_>`  to be notified when the query completes.
       
       
       
       
       
       
       
       
       
       
       .. seealso::
       
       
          
          - :ref:`io.realm.RealmResults <io_realm_RealmResults>` 
             
             
             
          
          
          
       
       
   
   


.. _findFirst:

.. _findFirst__:

.. _RealmQuery_findFirst:

.. _RealmQuery_findFirst__:

.. _io_realm_RealmQuery_findFirst:

.. _io_realm_RealmQuery_findFirst__:



findFirst
---------

.. list-table::
   :header-rows: 1
   
   * - | public **E** :ref:`findFirst <io_realm_RealmQuery_findFirst>` ()
       | 
       
       
       
   
   * - Finds the first object that fulfills the query conditions.Launching heavy queries from the UI thread may result in a drop of frames or even ANRs. **We do not recommend doing so, but it is allowed by default.** If you want to prevent these behaviors you can obtain a Realm using a :ref:`RealmConfiguration <io_realm_RealmConfiguration>`  that explicitly sets :ref:`RealmConfiguration.Builder.allowQueriesOnUiThread(boolean) <io_realm_RealmConfiguration_Builder_allowQueriesOnUiThread_boolean_>`  to ``false`` . This way you will be forced to launch your queries from a non-UI thread, otherwise calls to this method will throw a :ref:`RealmException <io_realm_exceptions_RealmException>` . Alternatively, you can use :ref:`findFirstAsync() <io_realm_RealmQuery_findFirstAsync__>` .
       
       
       
       
       
       
       
       
       
       
       **Returns**
       
       the object found or ``null``  if no object matches the query conditions.
       
       
       
       
       
       
       **Throws**
       
       - :ref:`RealmException <io_realm_exceptions_RealmException>`  - if called from the UI thread after opting out via :ref:`RealmConfiguration.Builder.allowQueriesOnUiThread(boolean) <io_realm_RealmConfiguration_Builder_allowQueriesOnUiThread_boolean_>` .
          
          
          
          
          
       
       
       
       
       
       
       .. seealso::
       
       
          
          - :ref:`io.realm.RealmObject <io_realm_RealmObject>` 
             
             
             
          
          
          
       
       
   
   


.. _findFirstAsync:

.. _findFirstAsync__:

.. _RealmQuery_findFirstAsync:

.. _RealmQuery_findFirstAsync__:

.. _io_realm_RealmQuery_findFirstAsync:

.. _io_realm_RealmQuery_findFirstAsync__:



findFirstAsync
--------------

.. list-table::
   :header-rows: 1
   
   * - | public **E** :ref:`findFirstAsync <io_realm_RealmQuery_findFirstAsync>` ()
       | 
       
       
       
   
   * - Similar to :ref:`findFirst() <io_realm_RealmQuery_findFirst__>`  but runs asynchronously on a worker thread. A listener should be registered to the returned :ref:`RealmObject <io_realm_RealmObject>`  to get the notification when query completes. The registered listener will also be triggered if there are changes made to the queried :ref:`RealmObject <io_realm_RealmObject>` . If the :ref:`RealmObject <io_realm_RealmObject>`  is deleted, the listener will be called one last time and then stop. The query will not be re-run.
       
       
       
       
       
       
       
       
       **Returns**
       
       immediately an empty :ref:`RealmObject <io_realm_RealmObject>`  with ``isLoaded() == false`` . Trying to access any field on the returned object before it is loaded will throw an ``IllegalStateException`` .
       
       
       
       
       
       
       **Throws**
       
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if this is called on a non-looper thread.
          
          
          
       
       
       
       
       
   
   


.. _getDescription:

.. _getDescription__:

.. _RealmQuery_getDescription:

.. _RealmQuery_getDescription__:

.. _io_realm_RealmQuery_getDescription:

.. _io_realm_RealmQuery_getDescription__:



getDescription
--------------

.. list-table::
   :header-rows: 1
   
   * - | public `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  :ref:`getDescription <io_realm_RealmQuery_getDescription>` ()
       | 
       
       
       
   
   * - Returns a textual description of this query.
       
       
       
       
       
       
       **Returns**
       
       the textual description of the query.
       
       
       
       
       
       
       
   
   


.. _getQueryPointer:

.. _getQueryPointer__:

.. _RealmQuery_getQueryPointer:

.. _RealmQuery_getQueryPointer__:

.. _io_realm_RealmQuery_getQueryPointer:

.. _io_realm_RealmQuery_getQueryPointer__:



getQueryPointer
---------------

.. list-table::
   :header-rows: 1
   
   * - | public **long** :ref:`getQueryPointer <io_realm_RealmQuery_getQueryPointer>` ()
       | 
       
       
       
   
   * - Returns the pointer to the underlying C++ query. This method is only public due to architectural design choices that are hard to work around and should be considered internal and can change without warning.
       
       
       
       
       
       
       **Returns**
       
       the pointer to the underlying C++ query.
       
       
       
       
       
       
       
   
   


.. _getRealm:

.. _getRealm__:

.. _RealmQuery_getRealm:

.. _RealmQuery_getRealm__:

.. _io_realm_RealmQuery_getRealm:

.. _io_realm_RealmQuery_getRealm__:



getRealm
--------

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`Realm <io_realm_Realm>`  :ref:`getRealm <io_realm_RealmQuery_getRealm>` ()
       | 
       
       
       
   
   * - Returns the :ref:`Realm <io_realm_Realm>`  instance to which this query belongs.
       
       Calling **Realm.close()** on the returned instance is discouraged as it is the same as calling it on the original Realm instance which may cause the Realm to fully close invalidating the query.
       
       
       
       
       
       
       
       
       
       
       **Returns**
       
       :ref:`Realm <io_realm_Realm>`  instance this query belongs to.
       
       
       
       
       
       
       **Throws**
       
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if the Realm is an instance of :ref:`DynamicRealm <io_realm_DynamicRealm>`  or the :ref:`Realm <io_realm_Realm>`  was already closed.
          
          
          
          
          
       
       
       
       
       
   
   


.. _getTypeQueried:

.. _getTypeQueried__:

.. _RealmQuery_getTypeQueried:

.. _RealmQuery_getTypeQueried__:

.. _io_realm_RealmQuery_getTypeQueried:

.. _io_realm_RealmQuery_getTypeQueried__:



getTypeQueried
--------------

.. list-table::
   :header-rows: 1
   
   * - | public `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  :ref:`getTypeQueried <io_realm_RealmQuery_getTypeQueried>` ()
       | 
       
       
       
   
   * - Returns the internal Realm name of the type being queried.
       
       
       
       
       
       
       **Returns**
       
       the internal name of the Realm model class being queried.
       
       
       
       
       
       
       
   
   


.. _greaterThan:

.. _greaterThan__:

.. _RealmQuery_greaterThan:

.. _RealmQuery_greaterThan__:

.. _io_realm_RealmQuery_greaterThan:

.. _io_realm_RealmQuery_greaterThan__:



greaterThan
-----------

.. _io_realm_RealmQuery_greaterThan_java_lang_String_ObjectId_:

.. _io_realm_RealmQuery_greaterThan_java_lang_String__ObjectId_:

.. _io_realm_RealmQuery_greaterThan_String_ObjectId_:

.. _io_realm_RealmQuery_greaterThan_String__ObjectId_:

.. _greaterThan_java_lang_String_ObjectId_:

.. _greaterThan_java_lang_String__ObjectId_:

.. _greaterThan_String_ObjectId_:

.. _greaterThan_String__ObjectId_:

.. _RealmQuery_greaterThan_java_lang_String_ObjectId_:

.. _RealmQuery_greaterThan_java_lang_String__ObjectId_:

.. _RealmQuery_greaterThan_String_ObjectId_:

.. _RealmQuery_greaterThan_String__ObjectId_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`greaterThan <io_realm_RealmQuery_greaterThan>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **ObjectId** value
       | )
       
       
       
   
   * - Greater-than comparison.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to compare with.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_greaterThan_java_lang_String_Decimal128_:

.. _io_realm_RealmQuery_greaterThan_java_lang_String__Decimal128_:

.. _io_realm_RealmQuery_greaterThan_String_Decimal128_:

.. _io_realm_RealmQuery_greaterThan_String__Decimal128_:

.. _greaterThan_java_lang_String_Decimal128_:

.. _greaterThan_java_lang_String__Decimal128_:

.. _greaterThan_String_Decimal128_:

.. _greaterThan_String__Decimal128_:

.. _RealmQuery_greaterThan_java_lang_String_Decimal128_:

.. _RealmQuery_greaterThan_java_lang_String__Decimal128_:

.. _RealmQuery_greaterThan_String_Decimal128_:

.. _RealmQuery_greaterThan_String__Decimal128_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`greaterThan <io_realm_RealmQuery_greaterThan>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **Decimal128** value
       | )
       
       
       
   
   * - Greater-than comparison.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to compare with.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_greaterThan_java_lang_String_io_realm_RealmAny_:

.. _io_realm_RealmQuery_greaterThan_java_lang_String__io_realm_RealmAny_:

.. _io_realm_RealmQuery_greaterThan_java_lang_String_RealmAny_:

.. _io_realm_RealmQuery_greaterThan_java_lang_String__RealmAny_:

.. _io_realm_RealmQuery_greaterThan_String_io_realm_RealmAny_:

.. _io_realm_RealmQuery_greaterThan_String__io_realm_RealmAny_:

.. _io_realm_RealmQuery_greaterThan_String_RealmAny_:

.. _io_realm_RealmQuery_greaterThan_String__RealmAny_:

.. _greaterThan_java_lang_String_io_realm_RealmAny_:

.. _greaterThan_java_lang_String__io_realm_RealmAny_:

.. _greaterThan_java_lang_String_RealmAny_:

.. _greaterThan_java_lang_String__RealmAny_:

.. _greaterThan_String_io_realm_RealmAny_:

.. _greaterThan_String__io_realm_RealmAny_:

.. _greaterThan_String_RealmAny_:

.. _greaterThan_String__RealmAny_:

.. _RealmQuery_greaterThan_java_lang_String_io_realm_RealmAny_:

.. _RealmQuery_greaterThan_java_lang_String__io_realm_RealmAny_:

.. _RealmQuery_greaterThan_java_lang_String_RealmAny_:

.. _RealmQuery_greaterThan_java_lang_String__RealmAny_:

.. _RealmQuery_greaterThan_String_io_realm_RealmAny_:

.. _RealmQuery_greaterThan_String__io_realm_RealmAny_:

.. _RealmQuery_greaterThan_String_RealmAny_:

.. _RealmQuery_greaterThan_String__RealmAny_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`greaterThan <io_realm_RealmQuery_greaterThan>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  :ref:`RealmAny <io_realm_RealmAny>`  value
       | )
       
       
       
   
   * - Greater-than comparison.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to compare with.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_greaterThan_java_lang_String_java_util_Date_:

.. _io_realm_RealmQuery_greaterThan_java_lang_String__java_util_Date_:

.. _io_realm_RealmQuery_greaterThan_java_lang_String_Date_:

.. _io_realm_RealmQuery_greaterThan_java_lang_String__Date_:

.. _io_realm_RealmQuery_greaterThan_String_java_util_Date_:

.. _io_realm_RealmQuery_greaterThan_String__java_util_Date_:

.. _io_realm_RealmQuery_greaterThan_String_Date_:

.. _io_realm_RealmQuery_greaterThan_String__Date_:

.. _greaterThan_java_lang_String_java_util_Date_:

.. _greaterThan_java_lang_String__java_util_Date_:

.. _greaterThan_java_lang_String_Date_:

.. _greaterThan_java_lang_String__Date_:

.. _greaterThan_String_java_util_Date_:

.. _greaterThan_String__java_util_Date_:

.. _greaterThan_String_Date_:

.. _greaterThan_String__Date_:

.. _RealmQuery_greaterThan_java_lang_String_java_util_Date_:

.. _RealmQuery_greaterThan_java_lang_String__java_util_Date_:

.. _RealmQuery_greaterThan_java_lang_String_Date_:

.. _RealmQuery_greaterThan_java_lang_String__Date_:

.. _RealmQuery_greaterThan_String_java_util_Date_:

.. _RealmQuery_greaterThan_String__java_util_Date_:

.. _RealmQuery_greaterThan_String_Date_:

.. _RealmQuery_greaterThan_String__Date_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`greaterThan <io_realm_RealmQuery_greaterThan>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `Date <https://docs.oracle.com/javase/7/docs/api/java/util/Date.html>`__  value
       | )
       
       
       
   
   * - Greater-than comparison.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to compare with.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_greaterThan_java_lang_String_float_:

.. _io_realm_RealmQuery_greaterThan_java_lang_String__float_:

.. _io_realm_RealmQuery_greaterThan_String_float_:

.. _io_realm_RealmQuery_greaterThan_String__float_:

.. _greaterThan_java_lang_String_float_:

.. _greaterThan_java_lang_String__float_:

.. _greaterThan_String_float_:

.. _greaterThan_String__float_:

.. _RealmQuery_greaterThan_java_lang_String_float_:

.. _RealmQuery_greaterThan_java_lang_String__float_:

.. _RealmQuery_greaterThan_String_float_:

.. _RealmQuery_greaterThan_String__float_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`greaterThan <io_realm_RealmQuery_greaterThan>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **float** value
       | )
       
       
       
   
   * - Greater-than comparison.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to compare with.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_greaterThan_java_lang_String_double_:

.. _io_realm_RealmQuery_greaterThan_java_lang_String__double_:

.. _io_realm_RealmQuery_greaterThan_String_double_:

.. _io_realm_RealmQuery_greaterThan_String__double_:

.. _greaterThan_java_lang_String_double_:

.. _greaterThan_java_lang_String__double_:

.. _greaterThan_String_double_:

.. _greaterThan_String__double_:

.. _RealmQuery_greaterThan_java_lang_String_double_:

.. _RealmQuery_greaterThan_java_lang_String__double_:

.. _RealmQuery_greaterThan_String_double_:

.. _RealmQuery_greaterThan_String__double_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`greaterThan <io_realm_RealmQuery_greaterThan>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **double** value
       | )
       
       
       
   
   * - Greater-than comparison.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to compare with.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_greaterThan_java_lang_String_long_:

.. _io_realm_RealmQuery_greaterThan_java_lang_String__long_:

.. _io_realm_RealmQuery_greaterThan_String_long_:

.. _io_realm_RealmQuery_greaterThan_String__long_:

.. _greaterThan_java_lang_String_long_:

.. _greaterThan_java_lang_String__long_:

.. _greaterThan_String_long_:

.. _greaterThan_String__long_:

.. _RealmQuery_greaterThan_java_lang_String_long_:

.. _RealmQuery_greaterThan_java_lang_String__long_:

.. _RealmQuery_greaterThan_String_long_:

.. _RealmQuery_greaterThan_String__long_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`greaterThan <io_realm_RealmQuery_greaterThan>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **long** value
       | )
       
       
       
   
   * - Greater-than comparison.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to compare with.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_greaterThan_java_lang_String_int_:

.. _io_realm_RealmQuery_greaterThan_java_lang_String__int_:

.. _io_realm_RealmQuery_greaterThan_String_int_:

.. _io_realm_RealmQuery_greaterThan_String__int_:

.. _greaterThan_java_lang_String_int_:

.. _greaterThan_java_lang_String__int_:

.. _greaterThan_String_int_:

.. _greaterThan_String__int_:

.. _RealmQuery_greaterThan_java_lang_String_int_:

.. _RealmQuery_greaterThan_java_lang_String__int_:

.. _RealmQuery_greaterThan_String_int_:

.. _RealmQuery_greaterThan_String__int_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`greaterThan <io_realm_RealmQuery_greaterThan>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **int** value
       | )
       
       
       
   
   * - Greater-than comparison.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to compare with.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   


.. _greaterThanOrEqualTo:

.. _greaterThanOrEqualTo__:

.. _RealmQuery_greaterThanOrEqualTo:

.. _RealmQuery_greaterThanOrEqualTo__:

.. _io_realm_RealmQuery_greaterThanOrEqualTo:

.. _io_realm_RealmQuery_greaterThanOrEqualTo__:



greaterThanOrEqualTo
--------------------

.. _io_realm_RealmQuery_greaterThanOrEqualTo_java_lang_String_ObjectId_:

.. _io_realm_RealmQuery_greaterThanOrEqualTo_java_lang_String__ObjectId_:

.. _io_realm_RealmQuery_greaterThanOrEqualTo_String_ObjectId_:

.. _io_realm_RealmQuery_greaterThanOrEqualTo_String__ObjectId_:

.. _greaterThanOrEqualTo_java_lang_String_ObjectId_:

.. _greaterThanOrEqualTo_java_lang_String__ObjectId_:

.. _greaterThanOrEqualTo_String_ObjectId_:

.. _greaterThanOrEqualTo_String__ObjectId_:

.. _RealmQuery_greaterThanOrEqualTo_java_lang_String_ObjectId_:

.. _RealmQuery_greaterThanOrEqualTo_java_lang_String__ObjectId_:

.. _RealmQuery_greaterThanOrEqualTo_String_ObjectId_:

.. _RealmQuery_greaterThanOrEqualTo_String__ObjectId_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`greaterThanOrEqualTo <io_realm_RealmQuery_greaterThanOrEqualTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **ObjectId** value
       | )
       
       
       
   
   * - Greater-than-or-equal-to comparison.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to compare with.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_greaterThanOrEqualTo_java_lang_String_Decimal128_:

.. _io_realm_RealmQuery_greaterThanOrEqualTo_java_lang_String__Decimal128_:

.. _io_realm_RealmQuery_greaterThanOrEqualTo_String_Decimal128_:

.. _io_realm_RealmQuery_greaterThanOrEqualTo_String__Decimal128_:

.. _greaterThanOrEqualTo_java_lang_String_Decimal128_:

.. _greaterThanOrEqualTo_java_lang_String__Decimal128_:

.. _greaterThanOrEqualTo_String_Decimal128_:

.. _greaterThanOrEqualTo_String__Decimal128_:

.. _RealmQuery_greaterThanOrEqualTo_java_lang_String_Decimal128_:

.. _RealmQuery_greaterThanOrEqualTo_java_lang_String__Decimal128_:

.. _RealmQuery_greaterThanOrEqualTo_String_Decimal128_:

.. _RealmQuery_greaterThanOrEqualTo_String__Decimal128_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`greaterThanOrEqualTo <io_realm_RealmQuery_greaterThanOrEqualTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **Decimal128** value
       | )
       
       
       
   
   * - Greater-than-or-equal-to comparison.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to compare with.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_greaterThanOrEqualTo_java_lang_String_java_util_Date_:

.. _io_realm_RealmQuery_greaterThanOrEqualTo_java_lang_String__java_util_Date_:

.. _io_realm_RealmQuery_greaterThanOrEqualTo_java_lang_String_Date_:

.. _io_realm_RealmQuery_greaterThanOrEqualTo_java_lang_String__Date_:

.. _io_realm_RealmQuery_greaterThanOrEqualTo_String_java_util_Date_:

.. _io_realm_RealmQuery_greaterThanOrEqualTo_String__java_util_Date_:

.. _io_realm_RealmQuery_greaterThanOrEqualTo_String_Date_:

.. _io_realm_RealmQuery_greaterThanOrEqualTo_String__Date_:

.. _greaterThanOrEqualTo_java_lang_String_java_util_Date_:

.. _greaterThanOrEqualTo_java_lang_String__java_util_Date_:

.. _greaterThanOrEqualTo_java_lang_String_Date_:

.. _greaterThanOrEqualTo_java_lang_String__Date_:

.. _greaterThanOrEqualTo_String_java_util_Date_:

.. _greaterThanOrEqualTo_String__java_util_Date_:

.. _greaterThanOrEqualTo_String_Date_:

.. _greaterThanOrEqualTo_String__Date_:

.. _RealmQuery_greaterThanOrEqualTo_java_lang_String_java_util_Date_:

.. _RealmQuery_greaterThanOrEqualTo_java_lang_String__java_util_Date_:

.. _RealmQuery_greaterThanOrEqualTo_java_lang_String_Date_:

.. _RealmQuery_greaterThanOrEqualTo_java_lang_String__Date_:

.. _RealmQuery_greaterThanOrEqualTo_String_java_util_Date_:

.. _RealmQuery_greaterThanOrEqualTo_String__java_util_Date_:

.. _RealmQuery_greaterThanOrEqualTo_String_Date_:

.. _RealmQuery_greaterThanOrEqualTo_String__Date_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`greaterThanOrEqualTo <io_realm_RealmQuery_greaterThanOrEqualTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `Date <https://docs.oracle.com/javase/7/docs/api/java/util/Date.html>`__  value
       | )
       
       
       
   
   * - Greater-than-or-equal-to comparison.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to compare with.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_greaterThanOrEqualTo_java_lang_String_float_:

.. _io_realm_RealmQuery_greaterThanOrEqualTo_java_lang_String__float_:

.. _io_realm_RealmQuery_greaterThanOrEqualTo_String_float_:

.. _io_realm_RealmQuery_greaterThanOrEqualTo_String__float_:

.. _greaterThanOrEqualTo_java_lang_String_float_:

.. _greaterThanOrEqualTo_java_lang_String__float_:

.. _greaterThanOrEqualTo_String_float_:

.. _greaterThanOrEqualTo_String__float_:

.. _RealmQuery_greaterThanOrEqualTo_java_lang_String_float_:

.. _RealmQuery_greaterThanOrEqualTo_java_lang_String__float_:

.. _RealmQuery_greaterThanOrEqualTo_String_float_:

.. _RealmQuery_greaterThanOrEqualTo_String__float_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`greaterThanOrEqualTo <io_realm_RealmQuery_greaterThanOrEqualTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **float** value
       | )
       
       
       
   
   * - Greater-than-or-equal-to comparison.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to compare with.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_greaterThanOrEqualTo_java_lang_String_double_:

.. _io_realm_RealmQuery_greaterThanOrEqualTo_java_lang_String__double_:

.. _io_realm_RealmQuery_greaterThanOrEqualTo_String_double_:

.. _io_realm_RealmQuery_greaterThanOrEqualTo_String__double_:

.. _greaterThanOrEqualTo_java_lang_String_double_:

.. _greaterThanOrEqualTo_java_lang_String__double_:

.. _greaterThanOrEqualTo_String_double_:

.. _greaterThanOrEqualTo_String__double_:

.. _RealmQuery_greaterThanOrEqualTo_java_lang_String_double_:

.. _RealmQuery_greaterThanOrEqualTo_java_lang_String__double_:

.. _RealmQuery_greaterThanOrEqualTo_String_double_:

.. _RealmQuery_greaterThanOrEqualTo_String__double_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`greaterThanOrEqualTo <io_realm_RealmQuery_greaterThanOrEqualTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **double** value
       | )
       
       
       
   
   * - Greater-than-or-equal-to comparison.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to compare with.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_greaterThanOrEqualTo_java_lang_String_long_:

.. _io_realm_RealmQuery_greaterThanOrEqualTo_java_lang_String__long_:

.. _io_realm_RealmQuery_greaterThanOrEqualTo_String_long_:

.. _io_realm_RealmQuery_greaterThanOrEqualTo_String__long_:

.. _greaterThanOrEqualTo_java_lang_String_long_:

.. _greaterThanOrEqualTo_java_lang_String__long_:

.. _greaterThanOrEqualTo_String_long_:

.. _greaterThanOrEqualTo_String__long_:

.. _RealmQuery_greaterThanOrEqualTo_java_lang_String_long_:

.. _RealmQuery_greaterThanOrEqualTo_java_lang_String__long_:

.. _RealmQuery_greaterThanOrEqualTo_String_long_:

.. _RealmQuery_greaterThanOrEqualTo_String__long_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`greaterThanOrEqualTo <io_realm_RealmQuery_greaterThanOrEqualTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **long** value
       | )
       
       
       
   
   * - Greater-than-or-equal-to comparison.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to compare with.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_greaterThanOrEqualTo_java_lang_String_int_:

.. _io_realm_RealmQuery_greaterThanOrEqualTo_java_lang_String__int_:

.. _io_realm_RealmQuery_greaterThanOrEqualTo_String_int_:

.. _io_realm_RealmQuery_greaterThanOrEqualTo_String__int_:

.. _greaterThanOrEqualTo_java_lang_String_int_:

.. _greaterThanOrEqualTo_java_lang_String__int_:

.. _greaterThanOrEqualTo_String_int_:

.. _greaterThanOrEqualTo_String__int_:

.. _RealmQuery_greaterThanOrEqualTo_java_lang_String_int_:

.. _RealmQuery_greaterThanOrEqualTo_java_lang_String__int_:

.. _RealmQuery_greaterThanOrEqualTo_String_int_:

.. _RealmQuery_greaterThanOrEqualTo_String__int_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`greaterThanOrEqualTo <io_realm_RealmQuery_greaterThanOrEqualTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **int** value
       | )
       
       
       
   
   * - Greater-than-or-equal-to comparison.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to compare with.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   


.. _in:

.. _in__:

.. _RealmQuery_in:

.. _RealmQuery_in__:

.. _io_realm_RealmQuery_in:

.. _io_realm_RealmQuery_in__:



in
----

.. _io_realm_RealmQuery_in_java_lang_String_io_realm_RealmAny_:

.. _io_realm_RealmQuery_in_java_lang_String__io_realm_RealmAny_:

.. _io_realm_RealmQuery_in_java_lang_String_RealmAny_:

.. _io_realm_RealmQuery_in_java_lang_String__RealmAny_:

.. _io_realm_RealmQuery_in_java_lang_String_RealmAny____:

.. _io_realm_RealmQuery_in_java_lang_String__RealmAny____:

.. _io_realm_RealmQuery_in_String_io_realm_RealmAny_:

.. _io_realm_RealmQuery_in_String__io_realm_RealmAny_:

.. _io_realm_RealmQuery_in_String_RealmAny_:

.. _io_realm_RealmQuery_in_String__RealmAny_:

.. _io_realm_RealmQuery_in_String_RealmAny____:

.. _io_realm_RealmQuery_in_String__RealmAny____:

.. _in_java_lang_String_io_realm_RealmAny_:

.. _in_java_lang_String__io_realm_RealmAny_:

.. _in_java_lang_String_RealmAny_:

.. _in_java_lang_String__RealmAny_:

.. _in_java_lang_String_RealmAny____:

.. _in_java_lang_String__RealmAny____:

.. _in_String_io_realm_RealmAny_:

.. _in_String__io_realm_RealmAny_:

.. _in_String_RealmAny_:

.. _in_String__RealmAny_:

.. _in_String_RealmAny____:

.. _in_String__RealmAny____:

.. _RealmQuery_in_java_lang_String_io_realm_RealmAny_:

.. _RealmQuery_in_java_lang_String__io_realm_RealmAny_:

.. _RealmQuery_in_java_lang_String_RealmAny_:

.. _RealmQuery_in_java_lang_String__RealmAny_:

.. _RealmQuery_in_java_lang_String_RealmAny____:

.. _RealmQuery_in_java_lang_String__RealmAny____:

.. _RealmQuery_in_String_io_realm_RealmAny_:

.. _RealmQuery_in_String__io_realm_RealmAny_:

.. _RealmQuery_in_String_RealmAny_:

.. _RealmQuery_in_String__RealmAny_:

.. _RealmQuery_in_String_RealmAny____:

.. _RealmQuery_in_String__RealmAny____:

.. _io_realm_RealmQuery_in_String__RealmAny[]_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`in <io_realm_RealmQuery_in>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  :ref:`io.realm.RealmAny[] <io_realm_RealmAny>`  values
       | )
       
       
       
   
   * - In comparison. This allows you to test if objects match any value in an array of values.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``values`` - array of values to compare with. If ``null``  or the empty array is provided the query will never match any results.
          
          
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field isn't a Date field.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_in_java_lang_String_java_util_Date_:

.. _io_realm_RealmQuery_in_java_lang_String__java_util_Date_:

.. _io_realm_RealmQuery_in_java_lang_String_Date_:

.. _io_realm_RealmQuery_in_java_lang_String__Date_:

.. _io_realm_RealmQuery_in_java_lang_String_Date____:

.. _io_realm_RealmQuery_in_java_lang_String__Date____:

.. _io_realm_RealmQuery_in_String_java_util_Date_:

.. _io_realm_RealmQuery_in_String__java_util_Date_:

.. _io_realm_RealmQuery_in_String_Date_:

.. _io_realm_RealmQuery_in_String__Date_:

.. _io_realm_RealmQuery_in_String_Date____:

.. _io_realm_RealmQuery_in_String__Date____:

.. _in_java_lang_String_java_util_Date_:

.. _in_java_lang_String__java_util_Date_:

.. _in_java_lang_String_Date_:

.. _in_java_lang_String__Date_:

.. _in_java_lang_String_Date____:

.. _in_java_lang_String__Date____:

.. _in_String_java_util_Date_:

.. _in_String__java_util_Date_:

.. _in_String_Date_:

.. _in_String__Date_:

.. _in_String_Date____:

.. _in_String__Date____:

.. _RealmQuery_in_java_lang_String_java_util_Date_:

.. _RealmQuery_in_java_lang_String__java_util_Date_:

.. _RealmQuery_in_java_lang_String_Date_:

.. _RealmQuery_in_java_lang_String__Date_:

.. _RealmQuery_in_java_lang_String_Date____:

.. _RealmQuery_in_java_lang_String__Date____:

.. _RealmQuery_in_String_java_util_Date_:

.. _RealmQuery_in_String__java_util_Date_:

.. _RealmQuery_in_String_Date_:

.. _RealmQuery_in_String__Date_:

.. _RealmQuery_in_String_Date____:

.. _RealmQuery_in_String__Date____:

.. _io_realm_RealmQuery_in_String__Date[]_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`in <io_realm_RealmQuery_in>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `java.util.Date[] <https://docs.oracle.com/javase/7/docs/api/java/util/Date.html>`__  values
       | )
       
       
       
   
   * - In comparison. This allows you to test if objects match any value in an array of values.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``values`` - array of values to compare with. If ``null``  or the empty array is provided the query will never match any results.
          
          
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field isn't a Date field.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_in_java_lang_String_java_lang_Boolean_:

.. _io_realm_RealmQuery_in_java_lang_String__java_lang_Boolean_:

.. _io_realm_RealmQuery_in_java_lang_String_Boolean_:

.. _io_realm_RealmQuery_in_java_lang_String__Boolean_:

.. _io_realm_RealmQuery_in_java_lang_String_Boolean____:

.. _io_realm_RealmQuery_in_java_lang_String__Boolean____:

.. _io_realm_RealmQuery_in_String_java_lang_Boolean_:

.. _io_realm_RealmQuery_in_String__java_lang_Boolean_:

.. _io_realm_RealmQuery_in_String_Boolean_:

.. _io_realm_RealmQuery_in_String__Boolean_:

.. _io_realm_RealmQuery_in_String_Boolean____:

.. _io_realm_RealmQuery_in_String__Boolean____:

.. _in_java_lang_String_java_lang_Boolean_:

.. _in_java_lang_String__java_lang_Boolean_:

.. _in_java_lang_String_Boolean_:

.. _in_java_lang_String__Boolean_:

.. _in_java_lang_String_Boolean____:

.. _in_java_lang_String__Boolean____:

.. _in_String_java_lang_Boolean_:

.. _in_String__java_lang_Boolean_:

.. _in_String_Boolean_:

.. _in_String__Boolean_:

.. _in_String_Boolean____:

.. _in_String__Boolean____:

.. _RealmQuery_in_java_lang_String_java_lang_Boolean_:

.. _RealmQuery_in_java_lang_String__java_lang_Boolean_:

.. _RealmQuery_in_java_lang_String_Boolean_:

.. _RealmQuery_in_java_lang_String__Boolean_:

.. _RealmQuery_in_java_lang_String_Boolean____:

.. _RealmQuery_in_java_lang_String__Boolean____:

.. _RealmQuery_in_String_java_lang_Boolean_:

.. _RealmQuery_in_String__java_lang_Boolean_:

.. _RealmQuery_in_String_Boolean_:

.. _RealmQuery_in_String__Boolean_:

.. _RealmQuery_in_String_Boolean____:

.. _RealmQuery_in_String__Boolean____:

.. _io_realm_RealmQuery_in_String__Boolean[]_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`in <io_realm_RealmQuery_in>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `java.lang.Boolean[] <https://docs.oracle.com/javase/7/docs/api/java/lang/Boolean.html>`__  values
       | )
       
       
       
   
   * - In comparison. This allows you to test if objects match any value in an array of values.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``values`` - array of values to compare with. If ``null``  or the empty array is provided the query will never match any results.
          
          
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field isn't a Boolean. or empty.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_in_java_lang_String_java_lang_Float_:

.. _io_realm_RealmQuery_in_java_lang_String__java_lang_Float_:

.. _io_realm_RealmQuery_in_java_lang_String_Float_:

.. _io_realm_RealmQuery_in_java_lang_String__Float_:

.. _io_realm_RealmQuery_in_java_lang_String_Float____:

.. _io_realm_RealmQuery_in_java_lang_String__Float____:

.. _io_realm_RealmQuery_in_String_java_lang_Float_:

.. _io_realm_RealmQuery_in_String__java_lang_Float_:

.. _io_realm_RealmQuery_in_String_Float_:

.. _io_realm_RealmQuery_in_String__Float_:

.. _io_realm_RealmQuery_in_String_Float____:

.. _io_realm_RealmQuery_in_String__Float____:

.. _in_java_lang_String_java_lang_Float_:

.. _in_java_lang_String__java_lang_Float_:

.. _in_java_lang_String_Float_:

.. _in_java_lang_String__Float_:

.. _in_java_lang_String_Float____:

.. _in_java_lang_String__Float____:

.. _in_String_java_lang_Float_:

.. _in_String__java_lang_Float_:

.. _in_String_Float_:

.. _in_String__Float_:

.. _in_String_Float____:

.. _in_String__Float____:

.. _RealmQuery_in_java_lang_String_java_lang_Float_:

.. _RealmQuery_in_java_lang_String__java_lang_Float_:

.. _RealmQuery_in_java_lang_String_Float_:

.. _RealmQuery_in_java_lang_String__Float_:

.. _RealmQuery_in_java_lang_String_Float____:

.. _RealmQuery_in_java_lang_String__Float____:

.. _RealmQuery_in_String_java_lang_Float_:

.. _RealmQuery_in_String__java_lang_Float_:

.. _RealmQuery_in_String_Float_:

.. _RealmQuery_in_String__Float_:

.. _RealmQuery_in_String_Float____:

.. _RealmQuery_in_String__Float____:

.. _io_realm_RealmQuery_in_String__Float[]_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`in <io_realm_RealmQuery_in>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `java.lang.Float[] <https://docs.oracle.com/javase/7/docs/api/java/lang/Float.html>`__  values
       | )
       
       
       
   
   * - In comparison. This allows you to test if objects match any value in an array of values.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``values`` - array of values to compare with. If ``null``  or the empty array is provided the query will never match any results.
          
          
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field isn't a Float field.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_in_java_lang_String_java_lang_Double_:

.. _io_realm_RealmQuery_in_java_lang_String__java_lang_Double_:

.. _io_realm_RealmQuery_in_java_lang_String_Double_:

.. _io_realm_RealmQuery_in_java_lang_String__Double_:

.. _io_realm_RealmQuery_in_java_lang_String_Double____:

.. _io_realm_RealmQuery_in_java_lang_String__Double____:

.. _io_realm_RealmQuery_in_String_java_lang_Double_:

.. _io_realm_RealmQuery_in_String__java_lang_Double_:

.. _io_realm_RealmQuery_in_String_Double_:

.. _io_realm_RealmQuery_in_String__Double_:

.. _io_realm_RealmQuery_in_String_Double____:

.. _io_realm_RealmQuery_in_String__Double____:

.. _in_java_lang_String_java_lang_Double_:

.. _in_java_lang_String__java_lang_Double_:

.. _in_java_lang_String_Double_:

.. _in_java_lang_String__Double_:

.. _in_java_lang_String_Double____:

.. _in_java_lang_String__Double____:

.. _in_String_java_lang_Double_:

.. _in_String__java_lang_Double_:

.. _in_String_Double_:

.. _in_String__Double_:

.. _in_String_Double____:

.. _in_String__Double____:

.. _RealmQuery_in_java_lang_String_java_lang_Double_:

.. _RealmQuery_in_java_lang_String__java_lang_Double_:

.. _RealmQuery_in_java_lang_String_Double_:

.. _RealmQuery_in_java_lang_String__Double_:

.. _RealmQuery_in_java_lang_String_Double____:

.. _RealmQuery_in_java_lang_String__Double____:

.. _RealmQuery_in_String_java_lang_Double_:

.. _RealmQuery_in_String__java_lang_Double_:

.. _RealmQuery_in_String_Double_:

.. _RealmQuery_in_String__Double_:

.. _RealmQuery_in_String_Double____:

.. _RealmQuery_in_String__Double____:

.. _io_realm_RealmQuery_in_String__Double[]_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`in <io_realm_RealmQuery_in>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `java.lang.Double[] <https://docs.oracle.com/javase/7/docs/api/java/lang/Double.html>`__  values
       | )
       
       
       
   
   * - In comparison. This allows you to test if objects match any value in an array of values.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``values`` - array of values to compare with. If ``null``  or the empty array is provided the query will never match any results.
          
          
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field isn't a Double field. empty.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_in_java_lang_String_java_lang_Long_:

.. _io_realm_RealmQuery_in_java_lang_String__java_lang_Long_:

.. _io_realm_RealmQuery_in_java_lang_String_Long_:

.. _io_realm_RealmQuery_in_java_lang_String__Long_:

.. _io_realm_RealmQuery_in_java_lang_String_Long____:

.. _io_realm_RealmQuery_in_java_lang_String__Long____:

.. _io_realm_RealmQuery_in_String_java_lang_Long_:

.. _io_realm_RealmQuery_in_String__java_lang_Long_:

.. _io_realm_RealmQuery_in_String_Long_:

.. _io_realm_RealmQuery_in_String__Long_:

.. _io_realm_RealmQuery_in_String_Long____:

.. _io_realm_RealmQuery_in_String__Long____:

.. _in_java_lang_String_java_lang_Long_:

.. _in_java_lang_String__java_lang_Long_:

.. _in_java_lang_String_Long_:

.. _in_java_lang_String__Long_:

.. _in_java_lang_String_Long____:

.. _in_java_lang_String__Long____:

.. _in_String_java_lang_Long_:

.. _in_String__java_lang_Long_:

.. _in_String_Long_:

.. _in_String__Long_:

.. _in_String_Long____:

.. _in_String__Long____:

.. _RealmQuery_in_java_lang_String_java_lang_Long_:

.. _RealmQuery_in_java_lang_String__java_lang_Long_:

.. _RealmQuery_in_java_lang_String_Long_:

.. _RealmQuery_in_java_lang_String__Long_:

.. _RealmQuery_in_java_lang_String_Long____:

.. _RealmQuery_in_java_lang_String__Long____:

.. _RealmQuery_in_String_java_lang_Long_:

.. _RealmQuery_in_String__java_lang_Long_:

.. _RealmQuery_in_String_Long_:

.. _RealmQuery_in_String__Long_:

.. _RealmQuery_in_String_Long____:

.. _RealmQuery_in_String__Long____:

.. _io_realm_RealmQuery_in_String__Long[]_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`in <io_realm_RealmQuery_in>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `java.lang.Long[] <https://docs.oracle.com/javase/7/docs/api/java/lang/Long.html>`__  values
       | )
       
       
       
   
   * - In comparison. This allows you to test if objects match any value in an array of values.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``values`` - array of values to compare with. If ``null``  or the empty array is provided the query will never match any results.
          
          
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field isn't a Long field. empty.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_in_java_lang_String_java_lang_Integer_:

.. _io_realm_RealmQuery_in_java_lang_String__java_lang_Integer_:

.. _io_realm_RealmQuery_in_java_lang_String_Integer_:

.. _io_realm_RealmQuery_in_java_lang_String__Integer_:

.. _io_realm_RealmQuery_in_java_lang_String_Integer____:

.. _io_realm_RealmQuery_in_java_lang_String__Integer____:

.. _io_realm_RealmQuery_in_String_java_lang_Integer_:

.. _io_realm_RealmQuery_in_String__java_lang_Integer_:

.. _io_realm_RealmQuery_in_String_Integer_:

.. _io_realm_RealmQuery_in_String__Integer_:

.. _io_realm_RealmQuery_in_String_Integer____:

.. _io_realm_RealmQuery_in_String__Integer____:

.. _in_java_lang_String_java_lang_Integer_:

.. _in_java_lang_String__java_lang_Integer_:

.. _in_java_lang_String_Integer_:

.. _in_java_lang_String__Integer_:

.. _in_java_lang_String_Integer____:

.. _in_java_lang_String__Integer____:

.. _in_String_java_lang_Integer_:

.. _in_String__java_lang_Integer_:

.. _in_String_Integer_:

.. _in_String__Integer_:

.. _in_String_Integer____:

.. _in_String__Integer____:

.. _RealmQuery_in_java_lang_String_java_lang_Integer_:

.. _RealmQuery_in_java_lang_String__java_lang_Integer_:

.. _RealmQuery_in_java_lang_String_Integer_:

.. _RealmQuery_in_java_lang_String__Integer_:

.. _RealmQuery_in_java_lang_String_Integer____:

.. _RealmQuery_in_java_lang_String__Integer____:

.. _RealmQuery_in_String_java_lang_Integer_:

.. _RealmQuery_in_String__java_lang_Integer_:

.. _RealmQuery_in_String_Integer_:

.. _RealmQuery_in_String__Integer_:

.. _RealmQuery_in_String_Integer____:

.. _RealmQuery_in_String__Integer____:

.. _io_realm_RealmQuery_in_String__Integer[]_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`in <io_realm_RealmQuery_in>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `java.lang.Integer[] <https://docs.oracle.com/javase/7/docs/api/java/lang/Integer.html>`__  values
       | )
       
       
       
   
   * - In comparison. This allows you to test if objects match any value in an array of values.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``values`` - array of values to compare with. If ``null``  or the empty array is provided the query will never match any results.
          
          
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field isn't a Integer field.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_in_java_lang_String_java_lang_Short_:

.. _io_realm_RealmQuery_in_java_lang_String__java_lang_Short_:

.. _io_realm_RealmQuery_in_java_lang_String_Short_:

.. _io_realm_RealmQuery_in_java_lang_String__Short_:

.. _io_realm_RealmQuery_in_java_lang_String_Short____:

.. _io_realm_RealmQuery_in_java_lang_String__Short____:

.. _io_realm_RealmQuery_in_String_java_lang_Short_:

.. _io_realm_RealmQuery_in_String__java_lang_Short_:

.. _io_realm_RealmQuery_in_String_Short_:

.. _io_realm_RealmQuery_in_String__Short_:

.. _io_realm_RealmQuery_in_String_Short____:

.. _io_realm_RealmQuery_in_String__Short____:

.. _in_java_lang_String_java_lang_Short_:

.. _in_java_lang_String__java_lang_Short_:

.. _in_java_lang_String_Short_:

.. _in_java_lang_String__Short_:

.. _in_java_lang_String_Short____:

.. _in_java_lang_String__Short____:

.. _in_String_java_lang_Short_:

.. _in_String__java_lang_Short_:

.. _in_String_Short_:

.. _in_String__Short_:

.. _in_String_Short____:

.. _in_String__Short____:

.. _RealmQuery_in_java_lang_String_java_lang_Short_:

.. _RealmQuery_in_java_lang_String__java_lang_Short_:

.. _RealmQuery_in_java_lang_String_Short_:

.. _RealmQuery_in_java_lang_String__Short_:

.. _RealmQuery_in_java_lang_String_Short____:

.. _RealmQuery_in_java_lang_String__Short____:

.. _RealmQuery_in_String_java_lang_Short_:

.. _RealmQuery_in_String__java_lang_Short_:

.. _RealmQuery_in_String_Short_:

.. _RealmQuery_in_String__Short_:

.. _RealmQuery_in_String_Short____:

.. _RealmQuery_in_String__Short____:

.. _io_realm_RealmQuery_in_String__Short[]_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`in <io_realm_RealmQuery_in>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `java.lang.Short[] <https://docs.oracle.com/javase/7/docs/api/java/lang/Short.html>`__  values
       | )
       
       
       
   
   * - In comparison. This allows you to test if objects match any value in an array of values.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``values`` - array of values to compare with. If ``null``  or the empty array is provided the query will never match any results.
          
          
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field isn't a Short field.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_in_java_lang_String_java_lang_Byte_:

.. _io_realm_RealmQuery_in_java_lang_String__java_lang_Byte_:

.. _io_realm_RealmQuery_in_java_lang_String_Byte_:

.. _io_realm_RealmQuery_in_java_lang_String__Byte_:

.. _io_realm_RealmQuery_in_java_lang_String_Byte____:

.. _io_realm_RealmQuery_in_java_lang_String__Byte____:

.. _io_realm_RealmQuery_in_String_java_lang_Byte_:

.. _io_realm_RealmQuery_in_String__java_lang_Byte_:

.. _io_realm_RealmQuery_in_String_Byte_:

.. _io_realm_RealmQuery_in_String__Byte_:

.. _io_realm_RealmQuery_in_String_Byte____:

.. _io_realm_RealmQuery_in_String__Byte____:

.. _in_java_lang_String_java_lang_Byte_:

.. _in_java_lang_String__java_lang_Byte_:

.. _in_java_lang_String_Byte_:

.. _in_java_lang_String__Byte_:

.. _in_java_lang_String_Byte____:

.. _in_java_lang_String__Byte____:

.. _in_String_java_lang_Byte_:

.. _in_String__java_lang_Byte_:

.. _in_String_Byte_:

.. _in_String__Byte_:

.. _in_String_Byte____:

.. _in_String__Byte____:

.. _RealmQuery_in_java_lang_String_java_lang_Byte_:

.. _RealmQuery_in_java_lang_String__java_lang_Byte_:

.. _RealmQuery_in_java_lang_String_Byte_:

.. _RealmQuery_in_java_lang_String__Byte_:

.. _RealmQuery_in_java_lang_String_Byte____:

.. _RealmQuery_in_java_lang_String__Byte____:

.. _RealmQuery_in_String_java_lang_Byte_:

.. _RealmQuery_in_String__java_lang_Byte_:

.. _RealmQuery_in_String_Byte_:

.. _RealmQuery_in_String__Byte_:

.. _RealmQuery_in_String_Byte____:

.. _RealmQuery_in_String__Byte____:

.. _io_realm_RealmQuery_in_String__Byte[]_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`in <io_realm_RealmQuery_in>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `java.lang.Byte[] <https://docs.oracle.com/javase/7/docs/api/java/lang/Byte.html>`__  values
       | )
       
       
       
   
   * - In comparison. This allows you to test if objects match any value in an array of values.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``values`` - array of values to compare with. If ``null``  or the empty array is provided the query will never match any results.
          
          
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field isn't a Byte field.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_in_java_lang_String_java_lang_String_io_realm_Case_:

.. _io_realm_RealmQuery_in_java_lang_String__java_lang_String__io_realm_Case_:

.. _io_realm_RealmQuery_in_java_lang_String_java_lang_String_Case_:

.. _io_realm_RealmQuery_in_java_lang_String__java_lang_String__Case_:

.. _io_realm_RealmQuery_in_java_lang_String_String_io_realm_Case_:

.. _io_realm_RealmQuery_in_java_lang_String__String__io_realm_Case_:

.. _io_realm_RealmQuery_in_java_lang_String_String_Case_:

.. _io_realm_RealmQuery_in_java_lang_String__String__Case_:

.. _io_realm_RealmQuery_in_java_lang_String_String____io_realm_Case_:

.. _io_realm_RealmQuery_in_java_lang_String__String_____io_realm_Case_:

.. _io_realm_RealmQuery_in_java_lang_String_String____Case_:

.. _io_realm_RealmQuery_in_java_lang_String__String_____Case_:

.. _io_realm_RealmQuery_in_String_java_lang_String_io_realm_Case_:

.. _io_realm_RealmQuery_in_String__java_lang_String__io_realm_Case_:

.. _io_realm_RealmQuery_in_String_java_lang_String_Case_:

.. _io_realm_RealmQuery_in_String__java_lang_String__Case_:

.. _io_realm_RealmQuery_in_String_String_io_realm_Case_:

.. _io_realm_RealmQuery_in_String__String__io_realm_Case_:

.. _io_realm_RealmQuery_in_String_String_Case_:

.. _io_realm_RealmQuery_in_String__String__Case_:

.. _io_realm_RealmQuery_in_String_String____io_realm_Case_:

.. _io_realm_RealmQuery_in_String__String_____io_realm_Case_:

.. _io_realm_RealmQuery_in_String_String____Case_:

.. _io_realm_RealmQuery_in_String__String_____Case_:

.. _in_java_lang_String_java_lang_String_io_realm_Case_:

.. _in_java_lang_String__java_lang_String__io_realm_Case_:

.. _in_java_lang_String_java_lang_String_Case_:

.. _in_java_lang_String__java_lang_String__Case_:

.. _in_java_lang_String_String_io_realm_Case_:

.. _in_java_lang_String__String__io_realm_Case_:

.. _in_java_lang_String_String_Case_:

.. _in_java_lang_String__String__Case_:

.. _in_java_lang_String_String____io_realm_Case_:

.. _in_java_lang_String__String_____io_realm_Case_:

.. _in_java_lang_String_String____Case_:

.. _in_java_lang_String__String_____Case_:

.. _in_String_java_lang_String_io_realm_Case_:

.. _in_String__java_lang_String__io_realm_Case_:

.. _in_String_java_lang_String_Case_:

.. _in_String__java_lang_String__Case_:

.. _in_String_String_io_realm_Case_:

.. _in_String__String__io_realm_Case_:

.. _in_String_String_Case_:

.. _in_String__String__Case_:

.. _in_String_String____io_realm_Case_:

.. _in_String__String_____io_realm_Case_:

.. _in_String_String____Case_:

.. _in_String__String_____Case_:

.. _RealmQuery_in_java_lang_String_java_lang_String_io_realm_Case_:

.. _RealmQuery_in_java_lang_String__java_lang_String__io_realm_Case_:

.. _RealmQuery_in_java_lang_String_java_lang_String_Case_:

.. _RealmQuery_in_java_lang_String__java_lang_String__Case_:

.. _RealmQuery_in_java_lang_String_String_io_realm_Case_:

.. _RealmQuery_in_java_lang_String__String__io_realm_Case_:

.. _RealmQuery_in_java_lang_String_String_Case_:

.. _RealmQuery_in_java_lang_String__String__Case_:

.. _RealmQuery_in_java_lang_String_String____io_realm_Case_:

.. _RealmQuery_in_java_lang_String__String_____io_realm_Case_:

.. _RealmQuery_in_java_lang_String_String____Case_:

.. _RealmQuery_in_java_lang_String__String_____Case_:

.. _RealmQuery_in_String_java_lang_String_io_realm_Case_:

.. _RealmQuery_in_String__java_lang_String__io_realm_Case_:

.. _RealmQuery_in_String_java_lang_String_Case_:

.. _RealmQuery_in_String__java_lang_String__Case_:

.. _RealmQuery_in_String_String_io_realm_Case_:

.. _RealmQuery_in_String__String__io_realm_Case_:

.. _RealmQuery_in_String_String_Case_:

.. _RealmQuery_in_String__String__Case_:

.. _RealmQuery_in_String_String____io_realm_Case_:

.. _RealmQuery_in_String__String_____io_realm_Case_:

.. _RealmQuery_in_String_String____Case_:

.. _RealmQuery_in_String__String_____Case_:

.. _io_realm_RealmQuery_in_String__String[]__Case_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`in <io_realm_RealmQuery_in>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `java.lang.String[] <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  values, 
       |  :ref:`Case <io_realm_Case>`  casing
       | )
       
       
       
   
   * - In comparison. This allows you to test if objects match any value in an array of values.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``values`` - array of values to compare with. If ``null``  or the empty array is provided the query will never match any results.
          
          
          
          
          
       - ``casing`` - how casing is handled. :ref:`Case.INSENSITIVE <io_realm_Case_INSENSITIVE>`  works only for the Latin-1 characters.
          
          
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field isn't a String field.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_in_java_lang_String_java_lang_String_:

.. _io_realm_RealmQuery_in_java_lang_String__java_lang_String_:

.. _io_realm_RealmQuery_in_java_lang_String_String_:

.. _io_realm_RealmQuery_in_java_lang_String__String_:

.. _io_realm_RealmQuery_in_java_lang_String_String____:

.. _io_realm_RealmQuery_in_java_lang_String__String____:

.. _io_realm_RealmQuery_in_String_java_lang_String_:

.. _io_realm_RealmQuery_in_String__java_lang_String_:

.. _io_realm_RealmQuery_in_String_String_:

.. _io_realm_RealmQuery_in_String__String_:

.. _io_realm_RealmQuery_in_String_String____:

.. _io_realm_RealmQuery_in_String__String____:

.. _in_java_lang_String_java_lang_String_:

.. _in_java_lang_String__java_lang_String_:

.. _in_java_lang_String_String_:

.. _in_java_lang_String__String_:

.. _in_java_lang_String_String____:

.. _in_java_lang_String__String____:

.. _in_String_java_lang_String_:

.. _in_String__java_lang_String_:

.. _in_String_String_:

.. _in_String__String_:

.. _in_String_String____:

.. _in_String__String____:

.. _RealmQuery_in_java_lang_String_java_lang_String_:

.. _RealmQuery_in_java_lang_String__java_lang_String_:

.. _RealmQuery_in_java_lang_String_String_:

.. _RealmQuery_in_java_lang_String__String_:

.. _RealmQuery_in_java_lang_String_String____:

.. _RealmQuery_in_java_lang_String__String____:

.. _RealmQuery_in_String_java_lang_String_:

.. _RealmQuery_in_String__java_lang_String_:

.. _RealmQuery_in_String_String_:

.. _RealmQuery_in_String__String_:

.. _RealmQuery_in_String_String____:

.. _RealmQuery_in_String__String____:

.. _io_realm_RealmQuery_in_String__String[]_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`in <io_realm_RealmQuery_in>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `java.lang.String[] <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  values
       | )
       
       
       
   
   * - In comparison. This allows you to test if objects match any value in an array of values.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``values`` - array of values to compare with. If ``null``  or the empty array is provided the query will never match any results.
          
          
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field isn't a String field.
          
          
          
       
       
       
       
       
   
   


.. _isEmpty:

.. _isEmpty__:

.. _RealmQuery_isEmpty:

.. _RealmQuery_isEmpty__:

.. _io_realm_RealmQuery_isEmpty:

.. _io_realm_RealmQuery_isEmpty__:



isEmpty
-------

.. _io_realm_RealmQuery_isEmpty_java_lang_String_:

.. _io_realm_RealmQuery_isEmpty_String_:

.. _isEmpty_java_lang_String_:

.. _isEmpty_String_:

.. _RealmQuery_isEmpty_java_lang_String_:

.. _RealmQuery_isEmpty_String_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`isEmpty <io_realm_RealmQuery_isEmpty>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       
   
   * - Condition that finds values that are considered "empty" i.e., an empty list, the 0-length string or byte array.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field name isn't valid or its type isn't either a RealmList, String or byte array.
          
          
          
       
       
       
       
       
   
   


.. _isNotEmpty:

.. _isNotEmpty__:

.. _RealmQuery_isNotEmpty:

.. _RealmQuery_isNotEmpty__:

.. _io_realm_RealmQuery_isNotEmpty:

.. _io_realm_RealmQuery_isNotEmpty__:



isNotEmpty
----------

.. _io_realm_RealmQuery_isNotEmpty_java_lang_String_:

.. _io_realm_RealmQuery_isNotEmpty_String_:

.. _isNotEmpty_java_lang_String_:

.. _isNotEmpty_String_:

.. _RealmQuery_isNotEmpty_java_lang_String_:

.. _RealmQuery_isNotEmpty_String_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`isNotEmpty <io_realm_RealmQuery_isNotEmpty>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       
   
   * - Condition that finds values that are considered "Not-empty" i.e., a list, a string or a byte array with not-empty values.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field name isn't valid or its type isn't either a RealmList, String or byte array.
          
          
          
       
       
       
       
       
   
   


.. _isNotNull:

.. _isNotNull__:

.. _RealmQuery_isNotNull:

.. _RealmQuery_isNotNull__:

.. _io_realm_RealmQuery_isNotNull:

.. _io_realm_RealmQuery_isNotNull__:



isNotNull
---------

.. _io_realm_RealmQuery_isNotNull_java_lang_String_:

.. _io_realm_RealmQuery_isNotNull_String_:

.. _isNotNull_java_lang_String_:

.. _isNotNull_String_:

.. _RealmQuery_isNotNull_java_lang_String_:

.. _RealmQuery_isNotNull_String_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`isNotNull <io_realm_RealmQuery_isNotNull>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       
   
   * - Tests if a field is not ``null`` . Only works for nullable fields.
       
       
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field name.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field is not nullable.
          
          
          
       
       
       
       
       
       
       .. seealso::
       
       
          
          - :ref:`Required for further infomation. <io_realm_annotations_Required>` 
             
             
             
          
          
          
       
       
   
   


.. _isNull:

.. _isNull__:

.. _RealmQuery_isNull:

.. _RealmQuery_isNull__:

.. _io_realm_RealmQuery_isNull:

.. _io_realm_RealmQuery_isNull__:



isNull
------

.. _io_realm_RealmQuery_isNull_java_lang_String_:

.. _io_realm_RealmQuery_isNull_String_:

.. _isNull_java_lang_String_:

.. _isNull_String_:

.. _RealmQuery_isNull_java_lang_String_:

.. _RealmQuery_isNull_String_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`isNull <io_realm_RealmQuery_isNull>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       
   
   * - Tests if a field is ``null`` . Only works for nullable fields.
       
       For link queries, if any part of the link path is ``null``  the whole path is considered to be ``null``  e.g., ``isNull("linkField.stringField")``  will be considered to be ``null``  if either ``linkField``  or ``linkField.stringField``  is ``null`` .
       
       
       
       
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field name.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field is not nullable.
          
          
          
       
       
       
       
       
       
       .. seealso::
       
       
          
          - :ref:`Required for further infomation. <io_realm_annotations_Required>` 
             
             
             
          
          
          
       
       
   
   


.. _isValid:

.. _isValid__:

.. _RealmQuery_isValid:

.. _RealmQuery_isValid__:

.. _io_realm_RealmQuery_isValid:

.. _io_realm_RealmQuery_isValid__:



isValid
-------

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`isValid <io_realm_RealmQuery_isValid>` ()
       | 
       
       
       
   
   * - Checks if :ref:`io.realm.RealmQuery <io_realm_RealmQuery>`  is still valid to use i.e., the :ref:`io.realm.Realm <io_realm_Realm>`  instance hasn't been closed and any parent :ref:`io.realm.RealmResults <io_realm_RealmResults>`  is still valid.
       
       
       
       
       
       
       
       
       **Returns**
       
       ``true``  if still valid to use, ``false``  otherwise.
       
       
       
       
       
       
       
       
       
   
   


.. _lessThan:

.. _lessThan__:

.. _RealmQuery_lessThan:

.. _RealmQuery_lessThan__:

.. _io_realm_RealmQuery_lessThan:

.. _io_realm_RealmQuery_lessThan__:



lessThan
--------

.. _io_realm_RealmQuery_lessThan_java_lang_String_ObjectId_:

.. _io_realm_RealmQuery_lessThan_java_lang_String__ObjectId_:

.. _io_realm_RealmQuery_lessThan_String_ObjectId_:

.. _io_realm_RealmQuery_lessThan_String__ObjectId_:

.. _lessThan_java_lang_String_ObjectId_:

.. _lessThan_java_lang_String__ObjectId_:

.. _lessThan_String_ObjectId_:

.. _lessThan_String__ObjectId_:

.. _RealmQuery_lessThan_java_lang_String_ObjectId_:

.. _RealmQuery_lessThan_java_lang_String__ObjectId_:

.. _RealmQuery_lessThan_String_ObjectId_:

.. _RealmQuery_lessThan_String__ObjectId_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`lessThan <io_realm_RealmQuery_lessThan>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **ObjectId** value
       | )
       
       
       
   
   * - Less-than comparison.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to compare with.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_lessThan_java_lang_String_Decimal128_:

.. _io_realm_RealmQuery_lessThan_java_lang_String__Decimal128_:

.. _io_realm_RealmQuery_lessThan_String_Decimal128_:

.. _io_realm_RealmQuery_lessThan_String__Decimal128_:

.. _lessThan_java_lang_String_Decimal128_:

.. _lessThan_java_lang_String__Decimal128_:

.. _lessThan_String_Decimal128_:

.. _lessThan_String__Decimal128_:

.. _RealmQuery_lessThan_java_lang_String_Decimal128_:

.. _RealmQuery_lessThan_java_lang_String__Decimal128_:

.. _RealmQuery_lessThan_String_Decimal128_:

.. _RealmQuery_lessThan_String__Decimal128_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`lessThan <io_realm_RealmQuery_lessThan>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **Decimal128** value
       | )
       
       
       
   
   * - Less-than comparison.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to compare with.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_lessThan_java_lang_String_long_:

.. _io_realm_RealmQuery_lessThan_java_lang_String__long_:

.. _io_realm_RealmQuery_lessThan_String_long_:

.. _io_realm_RealmQuery_lessThan_String__long_:

.. _lessThan_java_lang_String_long_:

.. _lessThan_java_lang_String__long_:

.. _lessThan_String_long_:

.. _lessThan_String__long_:

.. _RealmQuery_lessThan_java_lang_String_long_:

.. _RealmQuery_lessThan_java_lang_String__long_:

.. _RealmQuery_lessThan_String_long_:

.. _RealmQuery_lessThan_String__long_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`lessThan <io_realm_RealmQuery_lessThan>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **long** value
       | )
       
       
       
   
   * - Less-than comparison.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to compare with.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_lessThan_java_lang_String_int_:

.. _io_realm_RealmQuery_lessThan_java_lang_String__int_:

.. _io_realm_RealmQuery_lessThan_String_int_:

.. _io_realm_RealmQuery_lessThan_String__int_:

.. _lessThan_java_lang_String_int_:

.. _lessThan_java_lang_String__int_:

.. _lessThan_String_int_:

.. _lessThan_String__int_:

.. _RealmQuery_lessThan_java_lang_String_int_:

.. _RealmQuery_lessThan_java_lang_String__int_:

.. _RealmQuery_lessThan_String_int_:

.. _RealmQuery_lessThan_String__int_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`lessThan <io_realm_RealmQuery_lessThan>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **int** value
       | )
       
       
       
   
   * - Less-than comparison.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to compare with.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   


.. _lessThanOrEqualTo:

.. _lessThanOrEqualTo__:

.. _RealmQuery_lessThanOrEqualTo:

.. _RealmQuery_lessThanOrEqualTo__:

.. _io_realm_RealmQuery_lessThanOrEqualTo:

.. _io_realm_RealmQuery_lessThanOrEqualTo__:



lessThanOrEqualTo
-----------------

.. _io_realm_RealmQuery_lessThanOrEqualTo_java_lang_String_ObjectId_:

.. _io_realm_RealmQuery_lessThanOrEqualTo_java_lang_String__ObjectId_:

.. _io_realm_RealmQuery_lessThanOrEqualTo_String_ObjectId_:

.. _io_realm_RealmQuery_lessThanOrEqualTo_String__ObjectId_:

.. _lessThanOrEqualTo_java_lang_String_ObjectId_:

.. _lessThanOrEqualTo_java_lang_String__ObjectId_:

.. _lessThanOrEqualTo_String_ObjectId_:

.. _lessThanOrEqualTo_String__ObjectId_:

.. _RealmQuery_lessThanOrEqualTo_java_lang_String_ObjectId_:

.. _RealmQuery_lessThanOrEqualTo_java_lang_String__ObjectId_:

.. _RealmQuery_lessThanOrEqualTo_String_ObjectId_:

.. _RealmQuery_lessThanOrEqualTo_String__ObjectId_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`lessThanOrEqualTo <io_realm_RealmQuery_lessThanOrEqualTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **ObjectId** value
       | )
       
       
       
   
   * - Less-than-or-equal-to comparison.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to compare with.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_lessThanOrEqualTo_java_lang_String_Decimal128_:

.. _io_realm_RealmQuery_lessThanOrEqualTo_java_lang_String__Decimal128_:

.. _io_realm_RealmQuery_lessThanOrEqualTo_String_Decimal128_:

.. _io_realm_RealmQuery_lessThanOrEqualTo_String__Decimal128_:

.. _lessThanOrEqualTo_java_lang_String_Decimal128_:

.. _lessThanOrEqualTo_java_lang_String__Decimal128_:

.. _lessThanOrEqualTo_String_Decimal128_:

.. _lessThanOrEqualTo_String__Decimal128_:

.. _RealmQuery_lessThanOrEqualTo_java_lang_String_Decimal128_:

.. _RealmQuery_lessThanOrEqualTo_java_lang_String__Decimal128_:

.. _RealmQuery_lessThanOrEqualTo_String_Decimal128_:

.. _RealmQuery_lessThanOrEqualTo_String__Decimal128_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`lessThanOrEqualTo <io_realm_RealmQuery_lessThanOrEqualTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **Decimal128** value
       | )
       
       
       
   
   * - Less-than-or-equal-to comparison.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to compare with.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_lessThanOrEqualTo_java_lang_String_long_:

.. _io_realm_RealmQuery_lessThanOrEqualTo_java_lang_String__long_:

.. _io_realm_RealmQuery_lessThanOrEqualTo_String_long_:

.. _io_realm_RealmQuery_lessThanOrEqualTo_String__long_:

.. _lessThanOrEqualTo_java_lang_String_long_:

.. _lessThanOrEqualTo_java_lang_String__long_:

.. _lessThanOrEqualTo_String_long_:

.. _lessThanOrEqualTo_String__long_:

.. _RealmQuery_lessThanOrEqualTo_java_lang_String_long_:

.. _RealmQuery_lessThanOrEqualTo_java_lang_String__long_:

.. _RealmQuery_lessThanOrEqualTo_String_long_:

.. _RealmQuery_lessThanOrEqualTo_String__long_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`lessThanOrEqualTo <io_realm_RealmQuery_lessThanOrEqualTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **long** value
       | )
       
       
       
   
   * - Less-than-or-equal-to comparison.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to compare with.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_lessThanOrEqualTo_java_lang_String_int_:

.. _io_realm_RealmQuery_lessThanOrEqualTo_java_lang_String__int_:

.. _io_realm_RealmQuery_lessThanOrEqualTo_String_int_:

.. _io_realm_RealmQuery_lessThanOrEqualTo_String__int_:

.. _lessThanOrEqualTo_java_lang_String_int_:

.. _lessThanOrEqualTo_java_lang_String__int_:

.. _lessThanOrEqualTo_String_int_:

.. _lessThanOrEqualTo_String__int_:

.. _RealmQuery_lessThanOrEqualTo_java_lang_String_int_:

.. _RealmQuery_lessThanOrEqualTo_java_lang_String__int_:

.. _RealmQuery_lessThanOrEqualTo_String_int_:

.. _RealmQuery_lessThanOrEqualTo_String__int_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`lessThanOrEqualTo <io_realm_RealmQuery_lessThanOrEqualTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **int** value
       | )
       
       
       
   
   * - Less-than-or-equal-to comparison.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to compare with.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   


.. _like:

.. _like__:

.. _RealmQuery_like:

.. _RealmQuery_like__:

.. _io_realm_RealmQuery_like:

.. _io_realm_RealmQuery_like__:



like
----

.. _io_realm_RealmQuery_like_java_lang_String_io_realm_RealmAny_io_realm_Case_:

.. _io_realm_RealmQuery_like_java_lang_String__io_realm_RealmAny__io_realm_Case_:

.. _io_realm_RealmQuery_like_java_lang_String_io_realm_RealmAny_Case_:

.. _io_realm_RealmQuery_like_java_lang_String__io_realm_RealmAny__Case_:

.. _io_realm_RealmQuery_like_java_lang_String_RealmAny_io_realm_Case_:

.. _io_realm_RealmQuery_like_java_lang_String__RealmAny__io_realm_Case_:

.. _io_realm_RealmQuery_like_java_lang_String_RealmAny_Case_:

.. _io_realm_RealmQuery_like_java_lang_String__RealmAny__Case_:

.. _io_realm_RealmQuery_like_String_io_realm_RealmAny_io_realm_Case_:

.. _io_realm_RealmQuery_like_String__io_realm_RealmAny__io_realm_Case_:

.. _io_realm_RealmQuery_like_String_io_realm_RealmAny_Case_:

.. _io_realm_RealmQuery_like_String__io_realm_RealmAny__Case_:

.. _io_realm_RealmQuery_like_String_RealmAny_io_realm_Case_:

.. _io_realm_RealmQuery_like_String__RealmAny__io_realm_Case_:

.. _io_realm_RealmQuery_like_String_RealmAny_Case_:

.. _io_realm_RealmQuery_like_String__RealmAny__Case_:

.. _like_java_lang_String_io_realm_RealmAny_io_realm_Case_:

.. _like_java_lang_String__io_realm_RealmAny__io_realm_Case_:

.. _like_java_lang_String_io_realm_RealmAny_Case_:

.. _like_java_lang_String__io_realm_RealmAny__Case_:

.. _like_java_lang_String_RealmAny_io_realm_Case_:

.. _like_java_lang_String__RealmAny__io_realm_Case_:

.. _like_java_lang_String_RealmAny_Case_:

.. _like_java_lang_String__RealmAny__Case_:

.. _like_String_io_realm_RealmAny_io_realm_Case_:

.. _like_String__io_realm_RealmAny__io_realm_Case_:

.. _like_String_io_realm_RealmAny_Case_:

.. _like_String__io_realm_RealmAny__Case_:

.. _like_String_RealmAny_io_realm_Case_:

.. _like_String__RealmAny__io_realm_Case_:

.. _like_String_RealmAny_Case_:

.. _like_String__RealmAny__Case_:

.. _RealmQuery_like_java_lang_String_io_realm_RealmAny_io_realm_Case_:

.. _RealmQuery_like_java_lang_String__io_realm_RealmAny__io_realm_Case_:

.. _RealmQuery_like_java_lang_String_io_realm_RealmAny_Case_:

.. _RealmQuery_like_java_lang_String__io_realm_RealmAny__Case_:

.. _RealmQuery_like_java_lang_String_RealmAny_io_realm_Case_:

.. _RealmQuery_like_java_lang_String__RealmAny__io_realm_Case_:

.. _RealmQuery_like_java_lang_String_RealmAny_Case_:

.. _RealmQuery_like_java_lang_String__RealmAny__Case_:

.. _RealmQuery_like_String_io_realm_RealmAny_io_realm_Case_:

.. _RealmQuery_like_String__io_realm_RealmAny__io_realm_Case_:

.. _RealmQuery_like_String_io_realm_RealmAny_Case_:

.. _RealmQuery_like_String__io_realm_RealmAny__Case_:

.. _RealmQuery_like_String_RealmAny_io_realm_Case_:

.. _RealmQuery_like_String__RealmAny__io_realm_Case_:

.. _RealmQuery_like_String_RealmAny_Case_:

.. _RealmQuery_like_String__RealmAny__Case_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`like <io_realm_RealmQuery_like>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  :ref:`RealmAny <io_realm_RealmAny>`  value, 
       |  :ref:`Case <io_realm_Case>`  casing
       | )
       
       
       
   
   * - Condition that the value of field matches with the specified substring, with wildcards:
       
       - '\*' matches [0, n] unicode chars
          
          
       - '?' matches a single unicode char.
          
          
       
       
       
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the wildcard string.
          
          
          
       - ``casing`` - how to handle casing. Setting this to :ref:`Case.INSENSITIVE <io_realm_Case_INSENSITIVE>`  only works for Latin-1 characters.
          
          
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_like_java_lang_String_java_lang_String_io_realm_Case_:

.. _io_realm_RealmQuery_like_java_lang_String__java_lang_String__io_realm_Case_:

.. _io_realm_RealmQuery_like_java_lang_String_java_lang_String_Case_:

.. _io_realm_RealmQuery_like_java_lang_String__java_lang_String__Case_:

.. _io_realm_RealmQuery_like_java_lang_String_String_io_realm_Case_:

.. _io_realm_RealmQuery_like_java_lang_String__String__io_realm_Case_:

.. _io_realm_RealmQuery_like_java_lang_String_String_Case_:

.. _io_realm_RealmQuery_like_java_lang_String__String__Case_:

.. _io_realm_RealmQuery_like_String_java_lang_String_io_realm_Case_:

.. _io_realm_RealmQuery_like_String__java_lang_String__io_realm_Case_:

.. _io_realm_RealmQuery_like_String_java_lang_String_Case_:

.. _io_realm_RealmQuery_like_String__java_lang_String__Case_:

.. _io_realm_RealmQuery_like_String_String_io_realm_Case_:

.. _io_realm_RealmQuery_like_String__String__io_realm_Case_:

.. _io_realm_RealmQuery_like_String_String_Case_:

.. _io_realm_RealmQuery_like_String__String__Case_:

.. _like_java_lang_String_java_lang_String_io_realm_Case_:

.. _like_java_lang_String__java_lang_String__io_realm_Case_:

.. _like_java_lang_String_java_lang_String_Case_:

.. _like_java_lang_String__java_lang_String__Case_:

.. _like_java_lang_String_String_io_realm_Case_:

.. _like_java_lang_String__String__io_realm_Case_:

.. _like_java_lang_String_String_Case_:

.. _like_java_lang_String__String__Case_:

.. _like_String_java_lang_String_io_realm_Case_:

.. _like_String__java_lang_String__io_realm_Case_:

.. _like_String_java_lang_String_Case_:

.. _like_String__java_lang_String__Case_:

.. _like_String_String_io_realm_Case_:

.. _like_String__String__io_realm_Case_:

.. _like_String_String_Case_:

.. _like_String__String__Case_:

.. _RealmQuery_like_java_lang_String_java_lang_String_io_realm_Case_:

.. _RealmQuery_like_java_lang_String__java_lang_String__io_realm_Case_:

.. _RealmQuery_like_java_lang_String_java_lang_String_Case_:

.. _RealmQuery_like_java_lang_String__java_lang_String__Case_:

.. _RealmQuery_like_java_lang_String_String_io_realm_Case_:

.. _RealmQuery_like_java_lang_String__String__io_realm_Case_:

.. _RealmQuery_like_java_lang_String_String_Case_:

.. _RealmQuery_like_java_lang_String__String__Case_:

.. _RealmQuery_like_String_java_lang_String_io_realm_Case_:

.. _RealmQuery_like_String__java_lang_String__io_realm_Case_:

.. _RealmQuery_like_String_java_lang_String_Case_:

.. _RealmQuery_like_String__java_lang_String__Case_:

.. _RealmQuery_like_String_String_io_realm_Case_:

.. _RealmQuery_like_String__String__io_realm_Case_:

.. _RealmQuery_like_String_String_Case_:

.. _RealmQuery_like_String__String__Case_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`like <io_realm_RealmQuery_like>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  value, 
       |  :ref:`Case <io_realm_Case>`  casing
       | )
       
       
       
   
   * - Condition that the value of field matches with the specified substring, with wildcards:
       
       - '\*' matches [0, n] unicode chars
          
          
       - '?' matches a single unicode char.
          
          
       
       
       
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the wildcard string.
          
          
          
       - ``casing`` - how to handle casing. Setting this to :ref:`Case.INSENSITIVE <io_realm_Case_INSENSITIVE>`  only works for Latin-1 characters.
          
          
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_like_java_lang_String_io_realm_RealmAny_:

.. _io_realm_RealmQuery_like_java_lang_String__io_realm_RealmAny_:

.. _io_realm_RealmQuery_like_java_lang_String_RealmAny_:

.. _io_realm_RealmQuery_like_java_lang_String__RealmAny_:

.. _io_realm_RealmQuery_like_String_io_realm_RealmAny_:

.. _io_realm_RealmQuery_like_String__io_realm_RealmAny_:

.. _io_realm_RealmQuery_like_String_RealmAny_:

.. _io_realm_RealmQuery_like_String__RealmAny_:

.. _like_java_lang_String_io_realm_RealmAny_:

.. _like_java_lang_String__io_realm_RealmAny_:

.. _like_java_lang_String_RealmAny_:

.. _like_java_lang_String__RealmAny_:

.. _like_String_io_realm_RealmAny_:

.. _like_String__io_realm_RealmAny_:

.. _like_String_RealmAny_:

.. _like_String__RealmAny_:

.. _RealmQuery_like_java_lang_String_io_realm_RealmAny_:

.. _RealmQuery_like_java_lang_String__io_realm_RealmAny_:

.. _RealmQuery_like_java_lang_String_RealmAny_:

.. _RealmQuery_like_java_lang_String__RealmAny_:

.. _RealmQuery_like_String_io_realm_RealmAny_:

.. _RealmQuery_like_String__io_realm_RealmAny_:

.. _RealmQuery_like_String_RealmAny_:

.. _RealmQuery_like_String__RealmAny_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`like <io_realm_RealmQuery_like>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  :ref:`RealmAny <io_realm_RealmAny>`  value
       | )
       
       
       
   
   * - Condition that the value of field matches with the specified substring, with wildcards:
       
       - '\*' matches [0, n] unicode chars
          
          
       - '?' matches a single unicode char.
          
          
       
       
       
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the wildcard string.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_like_java_lang_String_java_lang_String_:

.. _io_realm_RealmQuery_like_java_lang_String__java_lang_String_:

.. _io_realm_RealmQuery_like_java_lang_String_String_:

.. _io_realm_RealmQuery_like_java_lang_String__String_:

.. _io_realm_RealmQuery_like_String_java_lang_String_:

.. _io_realm_RealmQuery_like_String__java_lang_String_:

.. _io_realm_RealmQuery_like_String_String_:

.. _io_realm_RealmQuery_like_String__String_:

.. _like_java_lang_String_java_lang_String_:

.. _like_java_lang_String__java_lang_String_:

.. _like_java_lang_String_String_:

.. _like_java_lang_String__String_:

.. _like_String_java_lang_String_:

.. _like_String__java_lang_String_:

.. _like_String_String_:

.. _like_String__String_:

.. _RealmQuery_like_java_lang_String_java_lang_String_:

.. _RealmQuery_like_java_lang_String__java_lang_String_:

.. _RealmQuery_like_java_lang_String_String_:

.. _RealmQuery_like_java_lang_String__String_:

.. _RealmQuery_like_String_java_lang_String_:

.. _RealmQuery_like_String__java_lang_String_:

.. _RealmQuery_like_String_String_:

.. _RealmQuery_like_String__String_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`like <io_realm_RealmQuery_like>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  value
       | )
       
       
       
   
   * - Condition that the value of field matches with the specified substring, with wildcards:
       
       - '\*' matches [0, n] unicode chars
          
          
       - '?' matches a single unicode char.
          
          
       
       
       
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the wildcard string.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   


.. _limit:

.. _limit__:

.. _RealmQuery_limit:

.. _RealmQuery_limit__:

.. _io_realm_RealmQuery_limit:

.. _io_realm_RealmQuery_limit__:



limit
-----

.. _io_realm_RealmQuery_limit_long_:

.. _limit_long_:

.. _RealmQuery_limit_long_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`limit <io_realm_RealmQuery_limit>` (
       |  **long** limit
       | )
       
       
       
   
   * - Limits the number of objects returned in case the query matched more objects.Note that when using this method in combination with :ref:`sort(String) <io_realm_RealmQuery_sort_String_>`  and :ref:`distinct(String, String...) <io_realm_RealmQuery_distinct_String__String____>`  they will be executed in the order they where added which can affect the end result.
       
       
       
       
       
       
       
       
       **Parameters**
       
       - ``limit`` - a limit that is ``≥ 1`` .
          
          
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the provided ``limit``  is less than 1.
          
          
          
          
          
       
       
       
       
       
   
   


.. _max:

.. _max__:

.. _RealmQuery_max:

.. _RealmQuery_max__:

.. _io_realm_RealmQuery_max:

.. _io_realm_RealmQuery_max__:



max
----

.. _io_realm_RealmQuery_max_java_lang_String_:

.. _io_realm_RealmQuery_max_String_:

.. _max_java_lang_String_:

.. _max_String_:

.. _RealmQuery_max_java_lang_String_:

.. _RealmQuery_max_String_:

.. list-table::
   :header-rows: 1
   
   * - | public `Number <https://docs.oracle.com/javase/7/docs/api/java/lang/Number.html>`__  :ref:`max <io_realm_RealmQuery_max>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       
   
   * - Finds the maximum value of a field.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to look for a maximum on. Only number fields are supported.
          
          
          
       
       
       
       
       **Returns**
       
       if no objects exist or they all have ``null``  as the value for the given field, ``null``  will be returned. Otherwise the maximum value is returned. When determining the maximum value, objects with ``null``  values are ignored.
       
       
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field is not a number type.
          
          
          
       - :ref:`RealmException <io_realm_exceptions_RealmException>`  - if called from the UI thread after opting out via :ref:`RealmConfiguration.Builder.allowQueriesOnUiThread(boolean) <io_realm_RealmConfiguration_Builder_allowQueriesOnUiThread_boolean_>` .
          
          
          
          
          
       
       
       
       
       
   
   


.. _maxRealmAny:

.. _maxRealmAny__:

.. _RealmQuery_maxRealmAny:

.. _RealmQuery_maxRealmAny__:

.. _io_realm_RealmQuery_maxRealmAny:

.. _io_realm_RealmQuery_maxRealmAny__:



maxRealmAny
-----------

.. _io_realm_RealmQuery_maxRealmAny_java_lang_String_:

.. _io_realm_RealmQuery_maxRealmAny_String_:

.. _maxRealmAny_java_lang_String_:

.. _maxRealmAny_String_:

.. _RealmQuery_maxRealmAny_java_lang_String_:

.. _RealmQuery_maxRealmAny_String_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmAny <io_realm_RealmAny>`  :ref:`maxRealmAny <io_realm_RealmQuery_maxRealmAny>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       
   
   * - Finds the maximum value of a :ref:`RealmAny <io_realm_RealmAny>`  field.
       
       
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field containing a RealmAny value.
          
          
          
       
       
       
       
       **Returns**
       
       if no objects exist or they all have ``null``  as the value for the given RealmAny field, :ref:`RealmAny.Type.NULL <io_realm_RealmAny_Type_NULL>`  will be returned. Otherwise the maximum RealmAny is returned. When determining the maximum RealmAny, objects with ``null``  values are ignored. See the :ref:`RealmAny <io_realm_RealmAny>`  documentation for more details on how RealmAny values are compared.
       
       
       
       
       
       
       **Throws**
       
       - `java.lang.UnsupportedOperationException <https://docs.oracle.com/javase/7/docs/api/java/lang/UnsupportedOperationException.html>`__  - if the query is not valid ("syntax error").
          
          
          
       
       
       
       
       
   
   


.. _maximumDate:

.. _maximumDate__:

.. _RealmQuery_maximumDate:

.. _RealmQuery_maximumDate__:

.. _io_realm_RealmQuery_maximumDate:

.. _io_realm_RealmQuery_maximumDate__:



maximumDate
-----------

.. _io_realm_RealmQuery_maximumDate_java_lang_String_:

.. _io_realm_RealmQuery_maximumDate_String_:

.. _maximumDate_java_lang_String_:

.. _maximumDate_String_:

.. _RealmQuery_maximumDate_java_lang_String_:

.. _RealmQuery_maximumDate_String_:

.. list-table::
   :header-rows: 1
   
   * - | public `Date <https://docs.oracle.com/javase/7/docs/api/java/util/Date.html>`__  :ref:`maximumDate <io_realm_RealmQuery_maximumDate>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       
   
   * - Finds the maximum value of a field.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field name.
          
          
          
       
       
       
       
       **Returns**
       
       if no objects exist or they all have ``null``  as the value for the given date field, ``null``  will be returned. Otherwise the maximum date is returned. When determining the maximum date, objects with ``null``  values are ignored.
       
       
       
       
       
       
       **Throws**
       
       - `java.lang.UnsupportedOperationException <https://docs.oracle.com/javase/7/docs/api/java/lang/UnsupportedOperationException.html>`__  - if the query is not valid ("syntax error").
          
          
          
       
       
       
       
       
   
   


.. _min:

.. _min__:

.. _RealmQuery_min:

.. _RealmQuery_min__:

.. _io_realm_RealmQuery_min:

.. _io_realm_RealmQuery_min__:



min
----

.. _io_realm_RealmQuery_min_java_lang_String_:

.. _io_realm_RealmQuery_min_String_:

.. _min_java_lang_String_:

.. _min_String_:

.. _RealmQuery_min_java_lang_String_:

.. _RealmQuery_min_String_:

.. list-table::
   :header-rows: 1
   
   * - | public `Number <https://docs.oracle.com/javase/7/docs/api/java/lang/Number.html>`__  :ref:`min <io_realm_RealmQuery_min>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       
   
   * - Finds the minimum value of a field.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to look for a minimum on. Only number fields are supported.
          
          
          
       
       
       
       
       **Returns**
       
       if no objects exist or they all have ``null``  as the value for the given field, ``null``  will be returned. Otherwise the minimum value is returned. When determining the minimum value, objects with ``null``  values are ignored.
       
       
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field is not a number type.
          
          
          
       - :ref:`RealmException <io_realm_exceptions_RealmException>`  - if called from the UI thread after opting out via :ref:`RealmConfiguration.Builder.allowQueriesOnUiThread(boolean) <io_realm_RealmConfiguration_Builder_allowQueriesOnUiThread_boolean_>` .
          
          
          
          
          
       
       
       
       
       
   
   


.. _minRealmAny:

.. _minRealmAny__:

.. _RealmQuery_minRealmAny:

.. _RealmQuery_minRealmAny__:

.. _io_realm_RealmQuery_minRealmAny:

.. _io_realm_RealmQuery_minRealmAny__:



minRealmAny
-----------

.. _io_realm_RealmQuery_minRealmAny_java_lang_String_:

.. _io_realm_RealmQuery_minRealmAny_String_:

.. _minRealmAny_java_lang_String_:

.. _minRealmAny_String_:

.. _RealmQuery_minRealmAny_java_lang_String_:

.. _RealmQuery_minRealmAny_String_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmAny <io_realm_RealmAny>`  :ref:`minRealmAny <io_realm_RealmQuery_minRealmAny>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       
   
   * - Finds the minimum value of a :ref:`RealmAny <io_realm_RealmAny>`  field.
       
       
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field containing a RealmAny value.
          
          
          
       
       
       
       
       **Returns**
       
       if no objects exist or they all have ``null``  as the value for the given RealmAny field, :ref:`RealmAny.Type.NULL <io_realm_RealmAny_Type_NULL>`  will be returned. Otherwise the minimum RealmAny is returned. When determining the minimum RealmAny, objects with ``null``  values are ignored. See the :ref:`RealmAny <io_realm_RealmAny>`  documentation for more details on how RealmAny values are compared.
       
       
       
       
       
       
       **Throws**
       
       - `java.lang.UnsupportedOperationException <https://docs.oracle.com/javase/7/docs/api/java/lang/UnsupportedOperationException.html>`__  - if the query is not valid ("syntax error").
          
          
          
       - :ref:`RealmException <io_realm_exceptions_RealmException>`  - if called from the UI thread after opting out via :ref:`RealmConfiguration.Builder.allowQueriesOnUiThread(boolean) <io_realm_RealmConfiguration_Builder_allowQueriesOnUiThread_boolean_>` .
          
          
          
          
          
       
       
       
       
       
   
   


.. _minimumDate:

.. _minimumDate__:

.. _RealmQuery_minimumDate:

.. _RealmQuery_minimumDate__:

.. _io_realm_RealmQuery_minimumDate:

.. _io_realm_RealmQuery_minimumDate__:



minimumDate
-----------

.. _io_realm_RealmQuery_minimumDate_java_lang_String_:

.. _io_realm_RealmQuery_minimumDate_String_:

.. _minimumDate_java_lang_String_:

.. _minimumDate_String_:

.. _RealmQuery_minimumDate_java_lang_String_:

.. _RealmQuery_minimumDate_String_:

.. list-table::
   :header-rows: 1
   
   * - | public `Date <https://docs.oracle.com/javase/7/docs/api/java/util/Date.html>`__  :ref:`minimumDate <io_realm_RealmQuery_minimumDate>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       
   
   * - Finds the minimum value of a field.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field name
          
          
          
       
       
       
       
       **Returns**
       
       if no objects exist or they all have ``null``  as the value for the given date field, ``null``  will be returned. Otherwise the minimum date is returned. When determining the minimum date, objects with ``null``  values are ignored.
       
       
       
       
       
       
       **Throws**
       
       - `java.lang.UnsupportedOperationException <https://docs.oracle.com/javase/7/docs/api/java/lang/UnsupportedOperationException.html>`__  - if the query is not valid ("syntax error").
          
          
          
       - :ref:`RealmException <io_realm_exceptions_RealmException>`  - if called from the UI thread after opting out via :ref:`RealmConfiguration.Builder.allowQueriesOnUiThread(boolean) <io_realm_RealmConfiguration_Builder_allowQueriesOnUiThread_boolean_>` .
          
          
          
          
          
       
       
       
       
       
   
   


.. _not:

.. _not__:

.. _RealmQuery_not:

.. _RealmQuery_not__:

.. _io_realm_RealmQuery_not:

.. _io_realm_RealmQuery_not__:



not
----

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`not <io_realm_RealmQuery_not>` ()
       | 
       
       
       
   
   * - Negate condition.
       
       
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       
       
       
   
   


.. _notEqualTo:

.. _notEqualTo__:

.. _RealmQuery_notEqualTo:

.. _RealmQuery_notEqualTo__:

.. _io_realm_RealmQuery_notEqualTo:

.. _io_realm_RealmQuery_notEqualTo__:



notEqualTo
----------

.. _io_realm_RealmQuery_notEqualTo_java_lang_String_ObjectId_:

.. _io_realm_RealmQuery_notEqualTo_java_lang_String__ObjectId_:

.. _io_realm_RealmQuery_notEqualTo_String_ObjectId_:

.. _io_realm_RealmQuery_notEqualTo_String__ObjectId_:

.. _notEqualTo_java_lang_String_ObjectId_:

.. _notEqualTo_java_lang_String__ObjectId_:

.. _notEqualTo_String_ObjectId_:

.. _notEqualTo_String__ObjectId_:

.. _RealmQuery_notEqualTo_java_lang_String_ObjectId_:

.. _RealmQuery_notEqualTo_java_lang_String__ObjectId_:

.. _RealmQuery_notEqualTo_String_ObjectId_:

.. _RealmQuery_notEqualTo_String__ObjectId_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`notEqualTo <io_realm_RealmQuery_notEqualTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **ObjectId** value
       | )
       
       
       
   
   * - Not-equal-to comparison.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to compare with.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_notEqualTo_java_lang_String_Decimal128_:

.. _io_realm_RealmQuery_notEqualTo_java_lang_String__Decimal128_:

.. _io_realm_RealmQuery_notEqualTo_String_Decimal128_:

.. _io_realm_RealmQuery_notEqualTo_String__Decimal128_:

.. _notEqualTo_java_lang_String_Decimal128_:

.. _notEqualTo_java_lang_String__Decimal128_:

.. _notEqualTo_String_Decimal128_:

.. _notEqualTo_String__Decimal128_:

.. _RealmQuery_notEqualTo_java_lang_String_Decimal128_:

.. _RealmQuery_notEqualTo_java_lang_String__Decimal128_:

.. _RealmQuery_notEqualTo_String_Decimal128_:

.. _RealmQuery_notEqualTo_String__Decimal128_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`notEqualTo <io_realm_RealmQuery_notEqualTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  **Decimal128** value
       | )
       
       
       
   
   * - Not-equal-to comparison.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to compare with.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_notEqualTo_java_lang_String_io_realm_RealmAny_io_realm_Case_:

.. _io_realm_RealmQuery_notEqualTo_java_lang_String__io_realm_RealmAny__io_realm_Case_:

.. _io_realm_RealmQuery_notEqualTo_java_lang_String_io_realm_RealmAny_Case_:

.. _io_realm_RealmQuery_notEqualTo_java_lang_String__io_realm_RealmAny__Case_:

.. _io_realm_RealmQuery_notEqualTo_java_lang_String_RealmAny_io_realm_Case_:

.. _io_realm_RealmQuery_notEqualTo_java_lang_String__RealmAny__io_realm_Case_:

.. _io_realm_RealmQuery_notEqualTo_java_lang_String_RealmAny_Case_:

.. _io_realm_RealmQuery_notEqualTo_java_lang_String__RealmAny__Case_:

.. _io_realm_RealmQuery_notEqualTo_String_io_realm_RealmAny_io_realm_Case_:

.. _io_realm_RealmQuery_notEqualTo_String__io_realm_RealmAny__io_realm_Case_:

.. _io_realm_RealmQuery_notEqualTo_String_io_realm_RealmAny_Case_:

.. _io_realm_RealmQuery_notEqualTo_String__io_realm_RealmAny__Case_:

.. _io_realm_RealmQuery_notEqualTo_String_RealmAny_io_realm_Case_:

.. _io_realm_RealmQuery_notEqualTo_String__RealmAny__io_realm_Case_:

.. _io_realm_RealmQuery_notEqualTo_String_RealmAny_Case_:

.. _io_realm_RealmQuery_notEqualTo_String__RealmAny__Case_:

.. _notEqualTo_java_lang_String_io_realm_RealmAny_io_realm_Case_:

.. _notEqualTo_java_lang_String__io_realm_RealmAny__io_realm_Case_:

.. _notEqualTo_java_lang_String_io_realm_RealmAny_Case_:

.. _notEqualTo_java_lang_String__io_realm_RealmAny__Case_:

.. _notEqualTo_java_lang_String_RealmAny_io_realm_Case_:

.. _notEqualTo_java_lang_String__RealmAny__io_realm_Case_:

.. _notEqualTo_java_lang_String_RealmAny_Case_:

.. _notEqualTo_java_lang_String__RealmAny__Case_:

.. _notEqualTo_String_io_realm_RealmAny_io_realm_Case_:

.. _notEqualTo_String__io_realm_RealmAny__io_realm_Case_:

.. _notEqualTo_String_io_realm_RealmAny_Case_:

.. _notEqualTo_String__io_realm_RealmAny__Case_:

.. _notEqualTo_String_RealmAny_io_realm_Case_:

.. _notEqualTo_String__RealmAny__io_realm_Case_:

.. _notEqualTo_String_RealmAny_Case_:

.. _notEqualTo_String__RealmAny__Case_:

.. _RealmQuery_notEqualTo_java_lang_String_io_realm_RealmAny_io_realm_Case_:

.. _RealmQuery_notEqualTo_java_lang_String__io_realm_RealmAny__io_realm_Case_:

.. _RealmQuery_notEqualTo_java_lang_String_io_realm_RealmAny_Case_:

.. _RealmQuery_notEqualTo_java_lang_String__io_realm_RealmAny__Case_:

.. _RealmQuery_notEqualTo_java_lang_String_RealmAny_io_realm_Case_:

.. _RealmQuery_notEqualTo_java_lang_String__RealmAny__io_realm_Case_:

.. _RealmQuery_notEqualTo_java_lang_String_RealmAny_Case_:

.. _RealmQuery_notEqualTo_java_lang_String__RealmAny__Case_:

.. _RealmQuery_notEqualTo_String_io_realm_RealmAny_io_realm_Case_:

.. _RealmQuery_notEqualTo_String__io_realm_RealmAny__io_realm_Case_:

.. _RealmQuery_notEqualTo_String_io_realm_RealmAny_Case_:

.. _RealmQuery_notEqualTo_String__io_realm_RealmAny__Case_:

.. _RealmQuery_notEqualTo_String_RealmAny_io_realm_Case_:

.. _RealmQuery_notEqualTo_String__RealmAny__io_realm_Case_:

.. _RealmQuery_notEqualTo_String_RealmAny_Case_:

.. _RealmQuery_notEqualTo_String__RealmAny__Case_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`notEqualTo <io_realm_RealmQuery_notEqualTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  :ref:`RealmAny <io_realm_RealmAny>`  value, 
       |  :ref:`Case <io_realm_Case>`  casing
       | )
       
       
       
   
   * - Not-equal-to comparison.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to compare with.
          
          
          
       - ``casing`` - how casing is handled. :ref:`Case.INSENSITIVE <io_realm_Case_INSENSITIVE>`  works only for the Latin-1 characters.
          
          
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_notEqualTo_java_lang_String_java_lang_String_io_realm_Case_:

.. _io_realm_RealmQuery_notEqualTo_java_lang_String__java_lang_String__io_realm_Case_:

.. _io_realm_RealmQuery_notEqualTo_java_lang_String_java_lang_String_Case_:

.. _io_realm_RealmQuery_notEqualTo_java_lang_String__java_lang_String__Case_:

.. _io_realm_RealmQuery_notEqualTo_java_lang_String_String_io_realm_Case_:

.. _io_realm_RealmQuery_notEqualTo_java_lang_String__String__io_realm_Case_:

.. _io_realm_RealmQuery_notEqualTo_java_lang_String_String_Case_:

.. _io_realm_RealmQuery_notEqualTo_java_lang_String__String__Case_:

.. _io_realm_RealmQuery_notEqualTo_String_java_lang_String_io_realm_Case_:

.. _io_realm_RealmQuery_notEqualTo_String__java_lang_String__io_realm_Case_:

.. _io_realm_RealmQuery_notEqualTo_String_java_lang_String_Case_:

.. _io_realm_RealmQuery_notEqualTo_String__java_lang_String__Case_:

.. _io_realm_RealmQuery_notEqualTo_String_String_io_realm_Case_:

.. _io_realm_RealmQuery_notEqualTo_String__String__io_realm_Case_:

.. _io_realm_RealmQuery_notEqualTo_String_String_Case_:

.. _io_realm_RealmQuery_notEqualTo_String__String__Case_:

.. _notEqualTo_java_lang_String_java_lang_String_io_realm_Case_:

.. _notEqualTo_java_lang_String__java_lang_String__io_realm_Case_:

.. _notEqualTo_java_lang_String_java_lang_String_Case_:

.. _notEqualTo_java_lang_String__java_lang_String__Case_:

.. _notEqualTo_java_lang_String_String_io_realm_Case_:

.. _notEqualTo_java_lang_String__String__io_realm_Case_:

.. _notEqualTo_java_lang_String_String_Case_:

.. _notEqualTo_java_lang_String__String__Case_:

.. _notEqualTo_String_java_lang_String_io_realm_Case_:

.. _notEqualTo_String__java_lang_String__io_realm_Case_:

.. _notEqualTo_String_java_lang_String_Case_:

.. _notEqualTo_String__java_lang_String__Case_:

.. _notEqualTo_String_String_io_realm_Case_:

.. _notEqualTo_String__String__io_realm_Case_:

.. _notEqualTo_String_String_Case_:

.. _notEqualTo_String__String__Case_:

.. _RealmQuery_notEqualTo_java_lang_String_java_lang_String_io_realm_Case_:

.. _RealmQuery_notEqualTo_java_lang_String__java_lang_String__io_realm_Case_:

.. _RealmQuery_notEqualTo_java_lang_String_java_lang_String_Case_:

.. _RealmQuery_notEqualTo_java_lang_String__java_lang_String__Case_:

.. _RealmQuery_notEqualTo_java_lang_String_String_io_realm_Case_:

.. _RealmQuery_notEqualTo_java_lang_String__String__io_realm_Case_:

.. _RealmQuery_notEqualTo_java_lang_String_String_Case_:

.. _RealmQuery_notEqualTo_java_lang_String__String__Case_:

.. _RealmQuery_notEqualTo_String_java_lang_String_io_realm_Case_:

.. _RealmQuery_notEqualTo_String__java_lang_String__io_realm_Case_:

.. _RealmQuery_notEqualTo_String_java_lang_String_Case_:

.. _RealmQuery_notEqualTo_String__java_lang_String__Case_:

.. _RealmQuery_notEqualTo_String_String_io_realm_Case_:

.. _RealmQuery_notEqualTo_String__String__io_realm_Case_:

.. _RealmQuery_notEqualTo_String_String_Case_:

.. _RealmQuery_notEqualTo_String__String__Case_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`notEqualTo <io_realm_RealmQuery_notEqualTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  value, 
       |  :ref:`Case <io_realm_Case>`  casing
       | )
       
       
       
   
   * - Not-equal-to comparison.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to compare with.
          
          
          
       - ``casing`` - how casing is handled. :ref:`Case.INSENSITIVE <io_realm_Case_INSENSITIVE>`  works only for the Latin-1 characters.
          
          
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_notEqualTo_java_lang_String_java_lang_String_:

.. _io_realm_RealmQuery_notEqualTo_java_lang_String__java_lang_String_:

.. _io_realm_RealmQuery_notEqualTo_java_lang_String_String_:

.. _io_realm_RealmQuery_notEqualTo_java_lang_String__String_:

.. _io_realm_RealmQuery_notEqualTo_String_java_lang_String_:

.. _io_realm_RealmQuery_notEqualTo_String__java_lang_String_:

.. _io_realm_RealmQuery_notEqualTo_String_String_:

.. _io_realm_RealmQuery_notEqualTo_String__String_:

.. _notEqualTo_java_lang_String_java_lang_String_:

.. _notEqualTo_java_lang_String__java_lang_String_:

.. _notEqualTo_java_lang_String_String_:

.. _notEqualTo_java_lang_String__String_:

.. _notEqualTo_String_java_lang_String_:

.. _notEqualTo_String__java_lang_String_:

.. _notEqualTo_String_String_:

.. _notEqualTo_String__String_:

.. _RealmQuery_notEqualTo_java_lang_String_java_lang_String_:

.. _RealmQuery_notEqualTo_java_lang_String__java_lang_String_:

.. _RealmQuery_notEqualTo_java_lang_String_String_:

.. _RealmQuery_notEqualTo_java_lang_String__String_:

.. _RealmQuery_notEqualTo_String_java_lang_String_:

.. _RealmQuery_notEqualTo_String__java_lang_String_:

.. _RealmQuery_notEqualTo_String_String_:

.. _RealmQuery_notEqualTo_String__String_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`notEqualTo <io_realm_RealmQuery_notEqualTo>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  value
       | )
       
       
       
   
   * - Not-equal-to comparison.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to compare.
          
          
          
       - ``value`` - the value to compare with.
          
          
          
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if one or more arguments do not match class or field type.
          
          
          
       
       
       
       
       
   
   


.. _or:

.. _or__:

.. _RealmQuery_or:

.. _RealmQuery_or__:

.. _io_realm_RealmQuery_or:

.. _io_realm_RealmQuery_or__:



or
----

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`or <io_realm_RealmQuery_or>` ()
       | 
       
       
       
   
   * - Logical-or two conditions.
       
       
       
       
       
       
       **Returns**
       
       the query object.
       
       
       
       
       
       
       
   
   


.. _rawPredicate:

.. _rawPredicate__:

.. _RealmQuery_rawPredicate:

.. _RealmQuery_rawPredicate__:

.. _io_realm_RealmQuery_rawPredicate:

.. _io_realm_RealmQuery_rawPredicate__:



rawPredicate
------------

.. _io_realm_RealmQuery_rawPredicate_java_lang_String_java_lang_Object_:

.. _io_realm_RealmQuery_rawPredicate_java_lang_String__java_lang_Object_:

.. _io_realm_RealmQuery_rawPredicate_java_lang_String_Object_:

.. _io_realm_RealmQuery_rawPredicate_java_lang_String__Object_:

.. _io_realm_RealmQuery_rawPredicate_java_lang_String_Object____:

.. _io_realm_RealmQuery_rawPredicate_java_lang_String__Object____:

.. _io_realm_RealmQuery_rawPredicate_String_java_lang_Object_:

.. _io_realm_RealmQuery_rawPredicate_String__java_lang_Object_:

.. _io_realm_RealmQuery_rawPredicate_String_Object_:

.. _io_realm_RealmQuery_rawPredicate_String__Object_:

.. _io_realm_RealmQuery_rawPredicate_String_Object____:

.. _io_realm_RealmQuery_rawPredicate_String__Object____:

.. _rawPredicate_java_lang_String_java_lang_Object_:

.. _rawPredicate_java_lang_String__java_lang_Object_:

.. _rawPredicate_java_lang_String_Object_:

.. _rawPredicate_java_lang_String__Object_:

.. _rawPredicate_java_lang_String_Object____:

.. _rawPredicate_java_lang_String__Object____:

.. _rawPredicate_String_java_lang_Object_:

.. _rawPredicate_String__java_lang_Object_:

.. _rawPredicate_String_Object_:

.. _rawPredicate_String__Object_:

.. _rawPredicate_String_Object____:

.. _rawPredicate_String__Object____:

.. _RealmQuery_rawPredicate_java_lang_String_java_lang_Object_:

.. _RealmQuery_rawPredicate_java_lang_String__java_lang_Object_:

.. _RealmQuery_rawPredicate_java_lang_String_Object_:

.. _RealmQuery_rawPredicate_java_lang_String__Object_:

.. _RealmQuery_rawPredicate_java_lang_String_Object____:

.. _RealmQuery_rawPredicate_java_lang_String__Object____:

.. _RealmQuery_rawPredicate_String_java_lang_Object_:

.. _RealmQuery_rawPredicate_String__java_lang_Object_:

.. _RealmQuery_rawPredicate_String_Object_:

.. _RealmQuery_rawPredicate_String__Object_:

.. _RealmQuery_rawPredicate_String_Object____:

.. _RealmQuery_rawPredicate_String__Object____:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`rawPredicate <io_realm_RealmQuery_rawPredicate>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  predicate, 
       |  `java.lang.Object[] <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__  arguments
       | )
       
       
       
   
   * - Create a text-based predicate using the Realm Query Language. This predicate can be combined with other raw or type safe predicates, it accepts Realm values as arguments.Class and property names used in the raw predicate can be either the names defined in the Realm Model classes or the internal names defined using the :ref:`io.realm.annotations.RealmClass <io_realm_annotations_RealmClass>`  or :ref:`io.realm.annotations.RealmField <io_realm_annotations_RealmField>`  annotations. If a class or property name contains spaces those must be escaped.
       
       
       
       Arguments are defined in the string predicate as $argument_index, where $argument_index is a decimal integer that specifies the position of the argument in the argument list. The first argument is referenced by $0, the second by $1, etc.See `these docs <https://docs.mongodb.com/realm-sdks/js/latest/tutorial-query-language.html>`__  for a more detailed description of the Realm Query Language.
       
        Examples:
        
       
       .. code-block:: java
       
          
           RealmQuery<Person> query = realm.where(Person.class);
          
           // Simple query
           query.rawPredicate("name = 'Jane'");
          
           // Spaces in property name
           query.rawPredicate("my\ property = 'Jane'");
          
           // Multiple predicates
           query.rawPredicate("name = 'Jane' OR name = 'John'")
          
           // Collection queries
           query.rawPredicate("children.@count > 3")
           query.rawPredicate("ALL children.age > 18")
          
           // Sub queries
           query.rawPredicate("SUBQUERY(children, $child, $child.age > 21 AND $child.gender = 'male').@count > 0");
          
           // Sort, Distinct, Limit
           query.rawPredicate("name = 'Jane' SORT(lastName ASC) DISTINCT(city) LIMIT(5)");
          
           // Arguments
           query.rawPredicate("name = $0 AND age > $1", "Jane", 18);
           
       
       
        
       
       
       
       
       
       
       **Parameters**
       
       - ``predicate`` - a Realm Query Language predicate.
          
          
          
       - ``arguments`` - Realm values for the predicate.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if there is an syntax error.
          
          
          
       
       
       
       
       
   
   


.. _sort:

.. _sort__:

.. _RealmQuery_sort:

.. _RealmQuery_sort__:

.. _io_realm_RealmQuery_sort:

.. _io_realm_RealmQuery_sort__:



sort
----

.. _io_realm_RealmQuery_sort_java_lang_String_io_realm_Sort_:

.. _io_realm_RealmQuery_sort_java_lang_String__io_realm_Sort_:

.. _io_realm_RealmQuery_sort_java_lang_String_Sort_:

.. _io_realm_RealmQuery_sort_java_lang_String__Sort_:

.. _io_realm_RealmQuery_sort_java_lang_String_Sort____:

.. _io_realm_RealmQuery_sort_java_lang_String__Sort____:

.. _io_realm_RealmQuery_sort_String_io_realm_Sort_:

.. _io_realm_RealmQuery_sort_String__io_realm_Sort_:

.. _io_realm_RealmQuery_sort_String_Sort_:

.. _io_realm_RealmQuery_sort_String__Sort_:

.. _io_realm_RealmQuery_sort_String_Sort____:

.. _io_realm_RealmQuery_sort_String__Sort____:

.. _io_realm_RealmQuery_sort_String____io_realm_Sort_:

.. _io_realm_RealmQuery_sort_String_____io_realm_Sort_:

.. _io_realm_RealmQuery_sort_String____Sort_:

.. _io_realm_RealmQuery_sort_String_____Sort_:

.. _io_realm_RealmQuery_sort_String____Sort____:

.. _io_realm_RealmQuery_sort_String_____Sort____:

.. _sort_java_lang_String_io_realm_Sort_:

.. _sort_java_lang_String__io_realm_Sort_:

.. _sort_java_lang_String_Sort_:

.. _sort_java_lang_String__Sort_:

.. _sort_java_lang_String_Sort____:

.. _sort_java_lang_String__Sort____:

.. _sort_String_io_realm_Sort_:

.. _sort_String__io_realm_Sort_:

.. _sort_String_Sort_:

.. _sort_String__Sort_:

.. _sort_String_Sort____:

.. _sort_String__Sort____:

.. _sort_String____io_realm_Sort_:

.. _sort_String_____io_realm_Sort_:

.. _sort_String____Sort_:

.. _sort_String_____Sort_:

.. _sort_String____Sort____:

.. _sort_String_____Sort____:

.. _RealmQuery_sort_java_lang_String_io_realm_Sort_:

.. _RealmQuery_sort_java_lang_String__io_realm_Sort_:

.. _RealmQuery_sort_java_lang_String_Sort_:

.. _RealmQuery_sort_java_lang_String__Sort_:

.. _RealmQuery_sort_java_lang_String_Sort____:

.. _RealmQuery_sort_java_lang_String__Sort____:

.. _RealmQuery_sort_String_io_realm_Sort_:

.. _RealmQuery_sort_String__io_realm_Sort_:

.. _RealmQuery_sort_String_Sort_:

.. _RealmQuery_sort_String__Sort_:

.. _RealmQuery_sort_String_Sort____:

.. _RealmQuery_sort_String__Sort____:

.. _RealmQuery_sort_String____io_realm_Sort_:

.. _RealmQuery_sort_String_____io_realm_Sort_:

.. _RealmQuery_sort_String____Sort_:

.. _RealmQuery_sort_String_____Sort_:

.. _RealmQuery_sort_String____Sort____:

.. _RealmQuery_sort_String_____Sort____:

.. _io_realm_RealmQuery_sort_String[]__Sort[]_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`sort <io_realm_RealmQuery_sort>` (
       |  `java.lang.String[] <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldNames, 
       |  :ref:`io.realm.Sort[] <io_realm_Sort>`  sortOrders
       | )
       
       
       
   
   * - Sorts the query result by the specific field names in the provided orders. Later fields will only be used if the previous field values are equal.Sorting is currently limited to character sets in 'Latin Basic', 'Latin Supplement', 'Latin Extended A', 'Latin Extended B' (UTF-8 range 0-591). For other character sets, sorting will have no effect.
       
       
       
       
       
       
       **Parameters**
       
       - ``fieldNames`` - an array of field names to sort by.
          
          
          
       - ``sortOrders`` - how to sort the field names.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field name does not exist.
          
          
          
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if a sorting order was already defined.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_sort_java_lang_String_io_realm_Sort_java_lang_String_io_realm_Sort_:

.. _io_realm_RealmQuery_sort_java_lang_String__io_realm_Sort__java_lang_String__io_realm_Sort_:

.. _io_realm_RealmQuery_sort_java_lang_String_io_realm_Sort_java_lang_String_Sort_:

.. _io_realm_RealmQuery_sort_java_lang_String__io_realm_Sort__java_lang_String__Sort_:

.. _io_realm_RealmQuery_sort_java_lang_String_io_realm_Sort_String_io_realm_Sort_:

.. _io_realm_RealmQuery_sort_java_lang_String__io_realm_Sort__String__io_realm_Sort_:

.. _io_realm_RealmQuery_sort_java_lang_String_io_realm_Sort_String_Sort_:

.. _io_realm_RealmQuery_sort_java_lang_String__io_realm_Sort__String__Sort_:

.. _io_realm_RealmQuery_sort_java_lang_String_Sort_java_lang_String_io_realm_Sort_:

.. _io_realm_RealmQuery_sort_java_lang_String__Sort__java_lang_String__io_realm_Sort_:

.. _io_realm_RealmQuery_sort_java_lang_String_Sort_java_lang_String_Sort_:

.. _io_realm_RealmQuery_sort_java_lang_String__Sort__java_lang_String__Sort_:

.. _io_realm_RealmQuery_sort_java_lang_String_Sort_String_io_realm_Sort_:

.. _io_realm_RealmQuery_sort_java_lang_String__Sort__String__io_realm_Sort_:

.. _io_realm_RealmQuery_sort_java_lang_String_Sort_String_Sort_:

.. _io_realm_RealmQuery_sort_java_lang_String__Sort__String__Sort_:

.. _io_realm_RealmQuery_sort_String_io_realm_Sort_java_lang_String_io_realm_Sort_:

.. _io_realm_RealmQuery_sort_String__io_realm_Sort__java_lang_String__io_realm_Sort_:

.. _io_realm_RealmQuery_sort_String_io_realm_Sort_java_lang_String_Sort_:

.. _io_realm_RealmQuery_sort_String__io_realm_Sort__java_lang_String__Sort_:

.. _io_realm_RealmQuery_sort_String_io_realm_Sort_String_io_realm_Sort_:

.. _io_realm_RealmQuery_sort_String__io_realm_Sort__String__io_realm_Sort_:

.. _io_realm_RealmQuery_sort_String_io_realm_Sort_String_Sort_:

.. _io_realm_RealmQuery_sort_String__io_realm_Sort__String__Sort_:

.. _io_realm_RealmQuery_sort_String_Sort_java_lang_String_io_realm_Sort_:

.. _io_realm_RealmQuery_sort_String__Sort__java_lang_String__io_realm_Sort_:

.. _io_realm_RealmQuery_sort_String_Sort_java_lang_String_Sort_:

.. _io_realm_RealmQuery_sort_String__Sort__java_lang_String__Sort_:

.. _io_realm_RealmQuery_sort_String_Sort_String_io_realm_Sort_:

.. _io_realm_RealmQuery_sort_String__Sort__String__io_realm_Sort_:

.. _io_realm_RealmQuery_sort_String_Sort_String_Sort_:

.. _io_realm_RealmQuery_sort_String__Sort__String__Sort_:

.. _sort_java_lang_String_io_realm_Sort_java_lang_String_io_realm_Sort_:

.. _sort_java_lang_String__io_realm_Sort__java_lang_String__io_realm_Sort_:

.. _sort_java_lang_String_io_realm_Sort_java_lang_String_Sort_:

.. _sort_java_lang_String__io_realm_Sort__java_lang_String__Sort_:

.. _sort_java_lang_String_io_realm_Sort_String_io_realm_Sort_:

.. _sort_java_lang_String__io_realm_Sort__String__io_realm_Sort_:

.. _sort_java_lang_String_io_realm_Sort_String_Sort_:

.. _sort_java_lang_String__io_realm_Sort__String__Sort_:

.. _sort_java_lang_String_Sort_java_lang_String_io_realm_Sort_:

.. _sort_java_lang_String__Sort__java_lang_String__io_realm_Sort_:

.. _sort_java_lang_String_Sort_java_lang_String_Sort_:

.. _sort_java_lang_String__Sort__java_lang_String__Sort_:

.. _sort_java_lang_String_Sort_String_io_realm_Sort_:

.. _sort_java_lang_String__Sort__String__io_realm_Sort_:

.. _sort_java_lang_String_Sort_String_Sort_:

.. _sort_java_lang_String__Sort__String__Sort_:

.. _sort_String_io_realm_Sort_java_lang_String_io_realm_Sort_:

.. _sort_String__io_realm_Sort__java_lang_String__io_realm_Sort_:

.. _sort_String_io_realm_Sort_java_lang_String_Sort_:

.. _sort_String__io_realm_Sort__java_lang_String__Sort_:

.. _sort_String_io_realm_Sort_String_io_realm_Sort_:

.. _sort_String__io_realm_Sort__String__io_realm_Sort_:

.. _sort_String_io_realm_Sort_String_Sort_:

.. _sort_String__io_realm_Sort__String__Sort_:

.. _sort_String_Sort_java_lang_String_io_realm_Sort_:

.. _sort_String__Sort__java_lang_String__io_realm_Sort_:

.. _sort_String_Sort_java_lang_String_Sort_:

.. _sort_String__Sort__java_lang_String__Sort_:

.. _sort_String_Sort_String_io_realm_Sort_:

.. _sort_String__Sort__String__io_realm_Sort_:

.. _sort_String_Sort_String_Sort_:

.. _sort_String__Sort__String__Sort_:

.. _RealmQuery_sort_java_lang_String_io_realm_Sort_java_lang_String_io_realm_Sort_:

.. _RealmQuery_sort_java_lang_String__io_realm_Sort__java_lang_String__io_realm_Sort_:

.. _RealmQuery_sort_java_lang_String_io_realm_Sort_java_lang_String_Sort_:

.. _RealmQuery_sort_java_lang_String__io_realm_Sort__java_lang_String__Sort_:

.. _RealmQuery_sort_java_lang_String_io_realm_Sort_String_io_realm_Sort_:

.. _RealmQuery_sort_java_lang_String__io_realm_Sort__String__io_realm_Sort_:

.. _RealmQuery_sort_java_lang_String_io_realm_Sort_String_Sort_:

.. _RealmQuery_sort_java_lang_String__io_realm_Sort__String__Sort_:

.. _RealmQuery_sort_java_lang_String_Sort_java_lang_String_io_realm_Sort_:

.. _RealmQuery_sort_java_lang_String__Sort__java_lang_String__io_realm_Sort_:

.. _RealmQuery_sort_java_lang_String_Sort_java_lang_String_Sort_:

.. _RealmQuery_sort_java_lang_String__Sort__java_lang_String__Sort_:

.. _RealmQuery_sort_java_lang_String_Sort_String_io_realm_Sort_:

.. _RealmQuery_sort_java_lang_String__Sort__String__io_realm_Sort_:

.. _RealmQuery_sort_java_lang_String_Sort_String_Sort_:

.. _RealmQuery_sort_java_lang_String__Sort__String__Sort_:

.. _RealmQuery_sort_String_io_realm_Sort_java_lang_String_io_realm_Sort_:

.. _RealmQuery_sort_String__io_realm_Sort__java_lang_String__io_realm_Sort_:

.. _RealmQuery_sort_String_io_realm_Sort_java_lang_String_Sort_:

.. _RealmQuery_sort_String__io_realm_Sort__java_lang_String__Sort_:

.. _RealmQuery_sort_String_io_realm_Sort_String_io_realm_Sort_:

.. _RealmQuery_sort_String__io_realm_Sort__String__io_realm_Sort_:

.. _RealmQuery_sort_String_io_realm_Sort_String_Sort_:

.. _RealmQuery_sort_String__io_realm_Sort__String__Sort_:

.. _RealmQuery_sort_String_Sort_java_lang_String_io_realm_Sort_:

.. _RealmQuery_sort_String__Sort__java_lang_String__io_realm_Sort_:

.. _RealmQuery_sort_String_Sort_java_lang_String_Sort_:

.. _RealmQuery_sort_String__Sort__java_lang_String__Sort_:

.. _RealmQuery_sort_String_Sort_String_io_realm_Sort_:

.. _RealmQuery_sort_String__Sort__String__io_realm_Sort_:

.. _RealmQuery_sort_String_Sort_String_Sort_:

.. _RealmQuery_sort_String__Sort__String__Sort_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`sort <io_realm_RealmQuery_sort>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName1, 
       |  :ref:`Sort <io_realm_Sort>`  sortOrder1, 
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName2, 
       |  :ref:`Sort <io_realm_Sort>`  sortOrder2
       | )
       
       
       
   
   * - Sorts the query result by the specific field names in the provided orders. ``fieldName2``  is only used in case of equal values in ``fieldName1`` .
       
       Sorting is currently limited to character sets in 'Latin Basic', 'Latin Supplement', 'Latin Extended A', 'Latin Extended B' (UTF-8 range 0-591). For other character sets, sorting will have no effect.
       
       
       
       
       
       
       **Parameters**
       
       - ``fieldName1`` - first field name
          
          
          
       - ``sortOrder1`` - sort order for first field
          
          
          
       - ``fieldName2`` - second field name
          
          
          
       - ``sortOrder2`` - sort order for second field
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field name does not exist.
          
          
          
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if a sorting order was already defined.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_sort_java_lang_String_io_realm_Sort_:

.. _io_realm_RealmQuery_sort_java_lang_String__io_realm_Sort_:

.. _io_realm_RealmQuery_sort_java_lang_String_Sort_:

.. _io_realm_RealmQuery_sort_java_lang_String__Sort_:

.. _io_realm_RealmQuery_sort_String_io_realm_Sort_:

.. _io_realm_RealmQuery_sort_String__io_realm_Sort_:

.. _io_realm_RealmQuery_sort_String_Sort_:

.. _io_realm_RealmQuery_sort_String__Sort_:

.. _sort_java_lang_String_io_realm_Sort_:

.. _sort_java_lang_String__io_realm_Sort_:

.. _sort_java_lang_String_Sort_:

.. _sort_java_lang_String__Sort_:

.. _sort_String_io_realm_Sort_:

.. _sort_String__io_realm_Sort_:

.. _sort_String_Sort_:

.. _sort_String__Sort_:

.. _RealmQuery_sort_java_lang_String_io_realm_Sort_:

.. _RealmQuery_sort_java_lang_String__io_realm_Sort_:

.. _RealmQuery_sort_java_lang_String_Sort_:

.. _RealmQuery_sort_java_lang_String__Sort_:

.. _RealmQuery_sort_String_io_realm_Sort_:

.. _RealmQuery_sort_String__io_realm_Sort_:

.. _RealmQuery_sort_String_Sort_:

.. _RealmQuery_sort_String__Sort_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`sort <io_realm_RealmQuery_sort>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName, 
       |  :ref:`Sort <io_realm_Sort>`  sortOrder
       | )
       
       
       
   
   * - Sorts the query result by the specified field name and order.Sorting is currently limited to character sets in 'Latin Basic', 'Latin Supplement', 'Latin Extended A', 'Latin Extended B' (UTF-8 range 0-591). For other character sets, sorting will have no effect.
       
       
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field name to sort by.
          
          
          
       - ``sortOrder`` - how to sort the results.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field name does not exist.
          
          
          
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if a sorting order was already defined.
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmQuery_sort_java_lang_String_:

.. _io_realm_RealmQuery_sort_String_:

.. _sort_java_lang_String_:

.. _sort_String_:

.. _RealmQuery_sort_java_lang_String_:

.. _RealmQuery_sort_String_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`sort <io_realm_RealmQuery_sort>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       
   
   * - Sorts the query result by the specific field name in ascending order.Sorting is currently limited to character sets in 'Latin Basic', 'Latin Supplement', 'Latin Extended A', 'Latin Extended B' (UTF-8 range 0-591). For other character sets, sorting will have no effect.
       
       
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field name to sort by.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field name does not exist.
          
          
          
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if a sorting order was already defined.
          
          
          
       
       
       
       
       
   
   


.. _sum:

.. _sum__:

.. _RealmQuery_sum:

.. _RealmQuery_sum__:

.. _io_realm_RealmQuery_sum:

.. _io_realm_RealmQuery_sum__:



sum
----

.. _io_realm_RealmQuery_sum_java_lang_String_:

.. _io_realm_RealmQuery_sum_String_:

.. _sum_java_lang_String_:

.. _sum_String_:

.. _RealmQuery_sum_java_lang_String_:

.. _RealmQuery_sum_String_:

.. list-table::
   :header-rows: 1
   
   * - | public `Number <https://docs.oracle.com/javase/7/docs/api/java/lang/Number.html>`__  :ref:`sum <io_realm_RealmQuery_sum>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName
       | )
       
       
       
   
   * - Calculates the sum of a given field.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - the field to sum. Only number and RealmAny fields are supported.
          
          
          
       
       
       
       
       **Returns**
       
       the sum of fields of the matching objects. If no objects exist or they all have ``null``  as the value for the given field, ``0``  will be returned. When computing the sum, objects with ``null``  values are ignored. When applied to a RealmAny field, only numeric values will be summed up (Byte/Integer/Integer/Long/Float/Double/Decimal128) and the returning type will be ``Decimal128`` .
       
       
       
       
       
       
       **Throws**
       
       - `java.lang.IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field is not a number type.
          
          
          
       - :ref:`RealmException <io_realm_exceptions_RealmException>`  - if called from the UI thread after opting out via :ref:`RealmConfiguration.Builder.allowQueriesOnUiThread(boolean) <io_realm_RealmConfiguration_Builder_allowQueriesOnUiThread_boolean_>` .
          
          
          
          
          
       
       
       
       
       
   
   



