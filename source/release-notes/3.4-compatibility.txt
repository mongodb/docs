:orphan:

==============================================
Compatibility Changes in 3.4 Release Candidate
==============================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. include:: /includes/3.4.rst

See also :doc:`/release-notes/3.4`.

Sharded Cluster Changes
-----------------------

.. COMMENT to docs:  this section can be singlesourced since we refer to it in both rel notes and compatibility page (figured these changes are significant enought to place in both places)

``shardsvr`` Requirement
~~~~~~~~~~~~~~~~~~~~~~~~

For a 3.4 sharded cluster, :program:`mongod` instances for the
shards **must** explicitly specify its role as a ``shardsvr``,
either via the configuration file setting
:setting:`sharding.clusterRole` or via the command line option
:option:`--shardsvr`.

.. note::

   Default port for :program:`mongod` instances with the ``shardsvr``
   role is ``27018``. To use a different port, specify
   :setting:`net.port` setting or ``--port`` option.

.. COMMENT To DOCS TEAM: Ensure that in all our sharding tutorials we specify shardsvr.

3.4 ``mongos`` and Earlier Versions of ``mongod``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Version 3.4 :program:`mongos` instances cannot connect to earlier
versions of :program:`mongod` instances.

Removal for Configuration Options
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 3.4 removes the following configuration options from
the :program:`mongos`:

- ``sharding.chunkSize`` configuration file setting and
  :option:`--chunkSize` command-line option

- ``sharding.autoSplit`` configuration file setting and
  :option:`--noAutoSplit` command line option

Removal of Support for SCCC Config Servers
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

3.4 sharded clusters no longer support the use of mirrored (SCCC)
:program:`mongod` instances as config servers. The use of SCCC config
servers, deprecated in the 3.2 release, is no longer valid. Instead,
deploy your config servers as a replica set (CSRS).

To upgrade your sharded cluster to version 3.4, the config servers must
be running as a replica set.

To convert your existing config servers from SCCC to CSRS, see
:doc:`/tutorial/upgrade-config-servers-to-replica-set`.

.. seealso:: 

   :ref:`Sharded Cluster Release Notes Section <3.4-rel-notes-sharded-cluster>`

.. _3.4-compatibility-deprecated:

Deprecated Operations
---------------------

.. _group-deprecation:

``group``
~~~~~~~~~

Mongodb 3.4 deprecates the following commands and :program:`mongo`
shell methods:

- :dbcommand:`group` command and :method:`db.collection.group()`.
  Use :method:`db.collection.aggregate()` or
  :method:`db.collection.mapReduce()` instead.

.. _aggregate-wo-cursor-deprecation:

``aggregate`` without ``cursor``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/deprecation-aggregate-wo-cursor.rst

Stricter Validation of Index Specifications
-------------------------------------------

MongoDB 3.4 enforces a stricter validation of index specification
during :dbcommand:`createIndexes` and
:method:`db.collection.createIndex()` operations. The enforcement does
not apply to existing indexes.

Stricter validation include the following:

- Ensuring that the value in the index key pattern ``key: value`` is
  valid. Specifically, value can be:

  .. list-table::
     :header-rows: 1

     * - Value
       - Description

     * - A number greater than 0
       - For ascending index

     * - A number less than 0 
       - For descending index
 
     * - String "text", "2dsphere", "2d", or "hashed"
       - For special index types

  For example, the following operations are no longer valid:

  .. code-block:: javascript

     db.collection.createIndex( { x: 0 } );
     db.collection.createIndex( { y: "text2d" } );
     db.collection.createIndex( { z: NaN } );
     db.collection.createIndex( { x: 1, unique: true } )

- Ensuring that the specified :doc:`index options
  </core/index-properties>` are valid. Previous versions ignored
  invalid options. For example, the following operations are no longer
  valid:

  .. code-block:: javascript

     db.collection.createIndex( { y: 1 }, { uniques2: true} ); 
     db.collection.createIndex( { z: 1 }, { expireAfterSec: 350 } )

.. _3.4-general-compatibility:

General Compatibility Changes
-----------------------------

- Removal of deprecated ``textSearchEnabled`` parameter. Starting from
  version 2.6, MongoDB enables the text search feature by default.

- Removal of :program:`mongosniff`. In MongoDB 3.4,
  :program:`mongosniff` is replaced by :program:`mongoreplay`, which
  offers a more flexible superset of :program:`mongosniff`'s
  functionality.

.. _3.4-compatibility-enabled:

Backwards Incompatible Features
-------------------------------

Some 3.4 features persist data that are backwards-incompatible with
MongoDB 3.2. These features require that
``featureCompatibilityVersion`` be set to ``"3.4"``, and if you need to
downgrade, you must remove data related to these features from your
database before downgrading.

The following 3.4 features persist data that earlier MongogDB versions
cannot correctly handle:

- :ref:`3.4-relnotes-views`

- :ref:`3.4-relnotes-collation`

- :ref:`3.4-decimal`

- Index version ``v: 2``. ``v:2`` indexes add support for collation and
  decimal data type. Earlier index versions support neither collation
  nor the decimal data type.
  
  Indexes created in MongoDB 3.4 default to ``v: 2`` if
  ``featureCompatibilityVersion: "3.4"``. Otherwise, they default to
  ``v: 1``.

For new 3.4 deployments, ``featureCompatibilityVersion`` is ``"3.4"``.

When :ref:`upgrading from 3.2 <3.4-upgrade>`, the
``featureCompatibilityVersion`` is ``"3.2"`` until you update the
``featureCompatibilityVersion`` to ``"3.4"``. Until you update the
``featureCompatibilityVersion`` to ``"3.4"``, the aforementioned
backwards-incompatible features are not enabled.

Earlier versions of MongoDB will not start if the database contains
views, collation specifications, or ``v:2`` indexes. If the data
contains the decimal data type, operations against these documents may
fail.

.. _3.4-driver-compatibility:

Driver Compatibility Changes
----------------------------

To use the various new features such as the new :ref:`3.4-decimal` and
:ref:`collation` with a MongoDB driver, an upgrade to a driver version
that supports these features is necessary.
