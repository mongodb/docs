=============================================
Get One Backup Configuration from One Project
=============================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. include:: /includes/fact-groups-projects-synonyms.rst

.. include:: /includes/api/base-api-uri.rst

Resource
--------

.. code-block:: http

   GET /groups/{PROJECT-ID}/backupConfigs/{CLUSTER-ID}

Request Parameters
------------------

Request Path Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :widths: 20 20 60
   :header-rows: 1
   :stub-columns: 1

   * - Parameter
     - Type
     - Description

   * - PROJECT-ID
     - string
     - *(Required.)* The unique identifier for the project that holds the cluster with
       the backup configuration you want to find.

   * - CLUSTER-ID
     - string
     - *(Required.)* The unique indentifier of the cluster whose backup configuration
       you want to find.

Request Query Parameters
~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/api/no-query-single-parameters.rst

Request Body Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/api/no-body-parameters.rst

Response
--------

.. only:: cloud

   .. list-table::
      :widths: 10 10 80
      :header-rows: 1
      :stub-columns: 1

      * - Name
        - Type
        - Description

      * - clusterId
        - string
        - Unique identifier of the cluster that this backup configuration is for.

      * - excludedNamespaces
        - string array
        - A list of database names and collection names to omit from
          the backup. Each string is a namespace in the form of
          ``{database}`` or ``{database}.{collection}``. If this field
          is present the ``includedNamespaces`` field cannot be
          present.

          You must send the new full list of excluded namespaces,
          including any that were already listed.

          If the new list removes any namespaces from the previous
          list, you must also set the ``syncSource`` field, as the
          removal of an excluded namespace necessitates a full resync.
          Without the ``syncSource`` field, the request will fail.

          If the new list only adds to the previous list, you do not
          need to set ``syncSource``.

      * - groupId
        - string
        - Unique identifier of the project that owns this backup
          configuration.

      * - includedNamespaces
        - string array
        - A list of database names and collection names to include in
          the backup. Each string is a namespace in the form of
          ``{database}`` or ``{database}.{collection}``. Any namespace
          **not listed** in this array **will not be backed up**. If
          this field is present the ``excludedNamespaces`` field cannot
          be present.

          You must send the new full list of included namespaces,
          including any that were already listed.

          If the new list adds any namespaces to the previous list, you
          must also set the ``syncSource`` field, as the addition of an
          included namespace necessitates a full resync. Without the
          ``syncSource`` field, the request will fail.

          If the new list only removes namespaces from the previous
          list, you do not need to set ``syncSource``.

      * - links
        - object array
        - .. include:: /includes/api/links-explanation.rst

      * - sslEnabled
        - boolean
        - Is SSL enabled for the sync source database?

      * - statusName
        - string
        - The current (or desired) status of the backup configuration.
          Possible values are:

          - ``INACTIVE``
          - ``PROVISIONING``
          - ``STARTED``
          - ``STOPPED``
          - ``TERMINATING``

      * - storageEngineName
        - string
        - The storage engine used for the backup. Possible values are:

          - ``MEMORY_MAPPED``
          - ``WIRED_TIGER``

.. only:: onprem

   .. list-table::
      :widths: 10 10 80
      :header-rows: 1
      :stub-columns: 1

      * - Name
        - Type
        - Description

      * - clusterId
        - string
        - Unique identifier of the cluster that this backup
          configuration is for.

      * - encryptionEnabled
        - boolean
        - Specifies whether encryption is enabled for the backup
          configuration. You must include the ``syncSource`` field when
          enabling encryption for a backup configuration. For existing
          backups in a project, enabling encryption requires an initial
          backup sync to recreate the backupsâ€™ head databases.

      * - excludedNamespaces
        - string array
        - A list of database names and collection names to omit from
          the backup. Each string is a namespace in the form of
          ``{database}`` or ``{database}.{collection}``. If this field
          is present the ``includedNamespaces`` field cannot be
          present.

          You must send the new full list of excluded namespaces,
          including any that were already listed.

          If the new list removes any namespaces from the previous
          list, you must also set the ``syncSource`` field, as the
          removal of an excluded namespace necessitates a full resync.
          Without the ``syncSource`` field, the request will fail.

          If the new list only adds to the previous list, you do not
          need to set ``syncSource``.

      * - groupId
        - string
        - Unique identifier of the project that owns this backup
          configuration.

      * - includedNamespaces
        - string array
        - A list of database names and collection names to include in
          the backup. Each string is a namespace in the form of
          ``{database}`` or ``{database}.{collection}``. Any namespace
          **not listed** in this array **will not be backed up**. If
          this field is present the ``excludedNamespaces`` field cannot
          be present.

          You must send the new full list of included namespaces,
          including any that were already listed.

          If the new list adds any namespaces to the previous list, you
          must also set the ``syncSource`` field, as the addition of an
          included namespace necessitates a full resync. Without the
          ``syncSource`` field, the request will fail.

          If the new list only removes namespaces from the previous
          list, you do not need to set ``syncSource``.

      * - links
        - object array
        - .. include:: /includes/api/links-explanation.rst

      * - sslEnabled
        - boolean
        - Is SSL enabled for the sync source database?

      * - statusName
        - string
        - The current (or desired) status of the backup configuration.
          Possible values are:

          - ``INACTIVE``
          - ``PROVISIONING``
          - ``STARTED``
          - ``STOPPED``
          - ``TERMINATING``

      * - storageEngineName
        - string
        - The storage engine used for the backup. Possible values are:

          - ``MEMORY_MAPPED``
          - ``WIRED_TIGER``

Example Request
---------------

.. only:: cloud

   .. cssclass:: copyable-code
   .. code-block:: sh

      curl --user "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest \
       --header "Accept: application/json" \
       --include
       --request GET "https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/backupConfigs/{CLUSTER-ID}"

.. only:: onprem

   .. cssclass:: copyable-code
   .. code-block:: sh

      curl --user "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest \
       --header "Accept: application/json" \
       --include
       --request GET "https://{opsManagerHost}:{port}/api/public/v1.0/groups/{PROJECT-ID}/backupConfigs/{CLUSTER-ID}"

Example Response
~~~~~~~~~~~~~~~~

Response Header
~~~~~~~~~~~~~~~

.. include:: /includes/api/api-headers/401.rst

.. include:: /includes/api/api-headers/200.rst

Response Body
~~~~~~~~~~~~~

.. only:: cloud

   .. code-block:: json

      {
        "clusterId" : "{CLUSTER-ID}",
        "excludedNamespaces" : [ ],
        "groupId" : "{PROJECT-ID}",
        "includedNamespaces" : [ ],
        "links" : []
        "sslEnabled" : false,
        "statusName" : "STARTED",
        "storageEngineName" : "WIRED_TIGER"
      }

.. only:: onprem

   .. code-block:: json

      {
        "clusterId" : "{CLUSTER-ID}",
        "encryptionEnabled" : false,
        "excludedNamespaces" : [ ],
        "groupId" : "{PROJECT-ID}",
        "includedNamespaces" : [ ],
        "links" : []
        "sslEnabled" : false,
        "statusName" : "STARTED",
        "storageEngineName" : "WIRED_TIGER"
      }
