# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/faq/mongo.txt:3
# 5a0d594e38c645cca6354f11a766794c
msgid "FAQ: The ``mongo`` Shell"
msgstr ""

#: ../source/faq/mongo.txt:10
# 9189b75063284648bc3424b153fa07f3
msgid "How can I enter multi-line operations in the ``mongo`` shell?"
msgstr ""

#: ../source/faq/mongo.txt:12
# acb350e2eed74d5e8db83c0c6b4af862
msgid "If you end a line with an open parenthesis (``'('``), an open brace (``'{'``), or an open bracket (``'['``), then the subsequent lines start with ellipsis (``\"...\"``) until you enter the corresponding closing parenthesis (``')'``), the closing brace (``'}'``) or the closing bracket (``']'``). The :program:`mongo` shell waits for the closing parenthesis, closing brace, or the closing bracket before evaluating the code, as in the following example:"
msgstr ""

#: ../source/faq/mongo.txt:27
# 38982f9a93a6487aabf676ffd4ccfcf6
msgid "You can exit the line continuation mode if you enter two blank lines, as in the following example:"
msgstr ""

#: ../source/faq/mongo.txt:40
# 28ae2b2c50ed438c85e47f04fa96447e
msgid "How can I access different databases temporarily?"
msgstr ""

#: ../source/faq/mongo.txt:42
# d01cdf22e33840cb9c507700a68c4a38
msgid "You can use :method:`db.getSiblingDB()` method to access another database without switching databases, as in the following example which first switches to the ``test`` database and then accesses the ``sampleDB`` database from the ``test`` database:"
msgstr ""

#: ../source/faq/mongo.txt:56
# e7bd8f8e2c804a7185c154cbfeb0c1a0
msgid "Does the ``mongo`` shell support tab completion and other keyboard shortcuts?"
msgstr ""

#: ../source/faq/mongo.txt:58
# d4d92aaf52c3453ea860594dd855afda
msgid "The :program:`mongo` shell supports keyboard shortcuts. For example,"
msgstr ""

#: ../source/faq/mongo.txt:60
# 1fce4169ebd0452c80d11e971b8c80a0
msgid "Use the up/down arrow keys to scroll through command history. See :ref:`.dbshell <mongo-dbshell-file>` documentation for more information on the ``.dbshell`` file."
msgstr ""

#: ../source/faq/mongo.txt:64
# 8a32b3a8a87e4d9ea1c25c7653f4175d
msgid "Use ``<Tab>`` to autocomplete or to list the completion possibilities, as in the following example which uses ``<Tab>`` to complete the method name starting with the letter ``'c'``:"
msgstr ""

#: ../source/faq/mongo.txt:72
# cbf2349785fe4d3cb2afd4d82af49e4b
msgid "Because there are many collection methods starting with the letter ``'c'``, the ``<Tab>`` will list the various methods that start with ``'c'``."
msgstr ""

#: ../source/faq/mongo.txt:76
# e5aa33785f244c9189aa9187d4e10a48
msgid "For a full list of the shortcuts, see :ref:`Shell Keyboard Shortcuts <mongo-keyboard-shortcuts>`"
msgstr ""

#: ../source/faq/mongo.txt:79
# f2681f099396414fbe26290535afde3e
msgid "How can I customize the ``mongo`` shell prompt?"
msgstr ""

#: ../source/faq/mongo.txt:83
# 7677feac754449dbb4e4fa3f8b202291
msgid "You can change the :program:`mongo` shell prompt by setting the ``prompt`` variable. This makes it possible to display additional information in the prompt."
msgstr ""

#: ../source/faq/mongo.txt:87
# dde3ce701cce4ba0aba928a016c32930
msgid "Set ``prompt`` to any string or arbitrary JavaScript code that returns a string, consider the following examples:"
msgstr ""

#: ../source/faq/mongo.txt:90
# aa0076cdffb1444f8f925f7fe1c25f6e
msgid "Set the shell prompt to display the hostname and the database issued:"
msgstr ""

#: ../source/faq/mongo.txt:97
#: ../source/faq/mongo.txt:111
# 0a3ba997ed2a419b80dff4ded5d9449b
# 22b38d17f277496caa482a4e29c3c9c2
msgid "The :program:`mongo` shell prompt should now reflect the new prompt:"
msgstr ""

#: ../source/faq/mongo.txt:103
# 39aae4bc7963412d9fc9c1c3a74479c0
msgid "Set the shell prompt to display the database statistics:"
msgstr ""

#: ../source/faq/mongo.txt:117
# 812824166eae4ecb9e585effcb0f77e4
msgid "You can add the logic for the prompt in the :ref:`.mongorc.js <mongo-mongorc-file>` file to set the prompt each time you start up the :program:`mongo` shell."
msgstr ""

#: ../source/faq/mongo.txt:122
# e60edfdad3e348d8bf290604613cc07d
msgid "Can I edit long shell operations with an external text editor?"
msgstr ""

#: ../source/faq/mongo.txt:126
# 4e87e0653c8e4dd99336ff200538344e
msgid "You can use your own editor in the :program:`mongo` shell by setting the :envvar:`EDITOR` environment variable before starting the :program:`mongo` shell. Once in the :program:`mongo` shell, you can edit with the specified editor by typing ``edit <variable>`` or ``edit <function>``, as in the following example:"
msgstr ""

#: ../source/faq/mongo.txt:132
# 178ada4ebf3f41cebea63454e822a0a9
msgid "Set the :envvar:`EDITOR` variable from the command line prompt:"
msgstr ""

#: ../source/faq/mongo.txt:138
# 85ceb7a26e85427da9a0c94189c9d20e
msgid "Start the :program:`mongo` shell:"
msgstr ""

#: ../source/faq/mongo.txt:144
# 017a5f84be0d486399829cba21e12fb7
msgid "Define a function ``myFunction``:"
msgstr ""

#: ../source/faq/mongo.txt:150
# e288259b68af432d8c07c21b6faaf228
msgid "Edit the function using your editor:"
msgstr ""

#: ../source/faq/mongo.txt:156
# 79714cb6197e4608950e16e5ee9468d0
msgid "The command should open the ``vim`` edit session. Remember to save your changes."
msgstr ""

#: ../source/faq/mongo.txt:159
# c292340cc24f47ff8fdb620a360c5aa0
msgid "Type ``myFunction`` to see the function definition:"
msgstr ""

#: ../source/faq/mongo.txt:165
# f942565e90814b6db190d6fa13e6ca40
msgid "The result should be the changes from your saved edit:"
msgstr ""

