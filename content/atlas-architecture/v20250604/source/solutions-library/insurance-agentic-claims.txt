.. _arch-center-is-agentic-claim:

==================================================
AI Agent Workflows for Insurance Claims Processing
==================================================

.. facet::
   :name: genre
   :values: tutorial

.. meta:: 
   :keywords: RAG, Atlas, Insurance, Claims Processing, Agentic AI, Artificial Intelligence
   :description: Learn how to streamline the claims processing workflows with MongoDB and AI agents.
   
.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Discover how MongoDB and LangGraph can help insurance companies
streamline claims processing and provide a better customer experience.

**Use cases:** `Gen AI <https://www.mongodb.com/use-cases/artificial-intelligence>`__, 
`Content Management <https://www.mongodb.com/solutions/use-cases/content-management>`__

**Industries:** `Insurance <https://www.mongodb.com/industries/insurance>`__,
`Financial Services <https://www.mongodb.com/industries/financial-services>`__,
`Retail <https://www.mongodb.com/industries/retail>`__,
`Healthcare <https://www.mongodb.com/solutions/industries/healthcare>`__

**Products:** `MongoDB Atlas <http://mongodb.com/atlas>`__, 
`MongoDB Atlas Vector Search <https://www.mongodb.com/products/platform/atlas-vector-search>`__

**Partners:** `Anthropic <https://cloud.mongodb.com/ecosystem/anthropic>`__,
`AWS <https://cloud.mongodb.com/ecosystem/amazon-web-services>`__,
`Cohere <https://cloud.mongodb.com/ecosystem/cohere>`__,
`LangChain <https://cloud.mongodb.com/ecosystem/langchain>`__

Solution Overview
-----------------

Agentic AI is transforming the insurance industry, enabling autonomous
systems to perceive, reason, and act independently. AI agents are
autonomous, allowing them to be goal-driven and operate without precise
instructions. Insurers are heavily investing in these technologies to
overcome legacy system limitations, deliver personalized customer
experiences, and to capitalize on the `$80 billion AI insurance market
projected by 2032
<https://binariks.com/blog/artificial-intelligence-ai-in-insurance-market/>`__. 

Efficient claims processing is important when modernizing the insurance
industry. AI tools like :abbr:`NLP (Natural Language Processing)`, image
classification, and vector embedding help insurers perform the following
tasks:

- Generate precise catastrophe impact assessments. 

- Expedite claims routing with richer metadata. 

- Prevent litigation with better analysis.

- Minimize financial losses using more accurate risk evaluations.

However, applying AI to production scenarios can present challenges when
balancing reliability and flexibility. Too much autonomy can lead to
unpredictable outcomes, while overly restrictive constraints can reduce
the autonomy of agents.

To overcome these challenges, this solution shows how an AI agent can
help you streamline claims operations and enhance customer satisfaction
with a multi-step claims processing workflow. In this workflow, the
agent handles accident photos, evaluates damage, and verifies insurance
coverage. :abbr:`LLMs (Large Language Models)` analyze policy
information and related documents retrieved from MongoDB Atlas Vector
Search. The outcomes are then stored in a MongoDB Atlas database.

Reference Architecture
----------------------

To help agents understand their context, craft a prompt that describes
their scope and objectives when you define your agent instance. This
solution uses the following prompt:

"You are a claims handler assistant for an insurance company. Your goal
is to help claim handlers understand the scope of the current claim and
provide relevant information to help them make an informed decision. In
particular, based on the description of the accident, you need to fetch
and summarize relevant insurance guidelines so that the handler can
determine the coverage and process the claim accordingly. Present your
findings in a clear and extremely concise manner.”

In addition to defining tasks, you need to specify which tools the agent
can use and how to use them. This system uses Vector Search and writes
to the database, as represented in the image below.

.. figure:: /includes/images/industry-solutions/insurance-agentic-workflow.svg
   :figwidth: 1200px
   :alt: Agentic Workflow

   Figure 1. Steps of the agentic workflow

Vector Search maps the vectorized image description to the related
vectorized policy, which includes the coverage description for that
class of accident. The agent uses the policy and the related coverages
to recommend next actions and assign a work order to a claims handler.
Then, it writes to the database to store this information.

Additionally, the solution uses the following technologies:

- `Cohere <https://cohere.com/>`__’s embedding model. 

- `Anthropic <https://www.anthropic.com/>`__’s LLM as the agent’s
  brain. 

- `LangGraph <https://www.langchain.com/langgraph>`__ as the agentic
  framework.

Build the Solution
------------------

To replicate this solution, follow the instructions in the ``README`` of
this solution's `GitHub repository
<https://github.com/mongodb-industry-solutions/Insurance-agentic>`__.
This process includes the following steps:

1. Log in to MongoDB Atlas and create your database.

#. Create the specified collections.

#. Set up your Vector Search index.

#. Create an AWS account and set up your Bedrock models.

#. Set up and run the backend.

#. Set up and run the frontend.

#. Configure Docker containers.

After following these steps, you can run the app.

Key Learnings
-------------

- **AI agents simplify claims processing:** AI agents automate the
  process of finding policies and coverages, eliminating the need to
  navigate multiple systems, read lengthy PDFs, and summarize
  information.

- **Agentic AI can drive transformative change:** AI agents have an
  unprecedented level of autonomy with their capabilities to reason,
  perceive, and act. Insurers must embrace experimentation and integrate
  these technologies into their systems and processes to remain
  competitive.

- **MongoDB's flexible document model enables easy data access:** Agents
  can easily access structured and unstructured data stored in MongoDB
  by using APIs or the MongoDB MCP server. This allows agents to handle
  complex and contextual interactions.

Authors
-------

- Luca Napoli, MongoDB 

Learn More
----------

- :ref:`arch-center-is-image-search`

- :ref:`arch-center-is-call-centers`

- :ref:`arch-center-is-claim-management`