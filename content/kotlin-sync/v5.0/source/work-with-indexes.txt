.. _kotlin-sync-work-with-indexes:

=================
Work with Indexes
=================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. facet::
   :name: genre
   :values: reference
 
.. meta::
   :keywords: query, optimization, efficiency

.. toctree::

   /indexes/single-field-index.txt
   /indexes/compound-index.txt
   /indexes/atlas-search-index.txt

Overview
--------

In this guide, you can learn how to use **indexes** with the {+driver-short+}.
Indexes can improve the efficiency of queries and add functionality to querying and
storing documents.

Without indexes, MongoDB must scan every document in a collection to find the
documents that match each query. These collection scans are slow and can negatively affect
the performance of your application. However, if an appropriate index exists for a query,
MongoDB can use the index to limit the documents it must inspect.

Operational Considerations
~~~~~~~~~~~~~~~~~~~~~~~~~~

To improve query performance, build indexes on fields that appear often in
your application's queries and operations that return sorted results. Each
index that you add consumes disk space and memory when active, so we recommend
that you track index memory and disk usage for capacity planning. In addition,
when a write operation updates an indexed field, MongoDB updates the related
index, which can negatively impact performance for write operations.

You can use :manual:`wildcard indexes </core/index-wildcard/>` in your MongoDB application
to query against fields whose names are not known in advance or are arbitrary. Wildcard
indexes are not designed to replace workload-based index planning.

For more information about designing your data model and choosing indexes appropriate for your application, see the
:manual:`Data Modeling and Indexes </core/data-model-operations/#indexes>` guide
in the {+mdb-server+} manual.

Sample Data
~~~~~~~~~~~

The examples in this guide use the ``movies`` collection in the ``sample_mflix``
database from the :atlas:`Atlas sample datasets </sample-data>`. To learn how to create a
free MongoDB Atlas cluster and load the sample datasets, see the
:atlas:`Get Started with Atlas </getting-started>` guide.

Create an Index
---------------

MongoDB supports several different index types to help query your data.
The following pages describe the most common index types and provide sample
code for creating each index type.

- :ref:`kotlin-sync-single-field-index`
- :ref:`kotlin-sync-compound-index`
- :ref:`kotlin-sync-atlas-search-index`

Remove an Index
---------------

You can remove any unused index except the default unique index on the
``_id`` field.

The following sections show how to remove a single index or how to remove all
indexes in a collection.

Delete a Single Index
~~~~~~~~~~~~~~~~~~~~~

Pass an index name to the ``dropIndex()`` method to remove an index from a collection.

The following example removes an index with the name ``"_title_"`` from the ``movies``
collection:

.. literalinclude:: /includes/indexes/indexes.kt
   :language: kotlin
   :start-after: start-remove-index
   :end-before: end-remove-index
   :dedent:

.. note::

   You cannot remove a single field from a compound text index. You must
   drop the entire index and create a new one to update the indexed
   fields.

Delete All Indexes
~~~~~~~~~~~~~~~~~~

You can drop all indexes by calling the ``dropIndexes()`` method on your collection:

.. literalinclude:: /includes/indexes/indexes.kt
   :language: kotlin
   :start-after: start-remove-all-indexes
   :end-before: end-remove-all-indexes
   :dedent:

API Documentation
~~~~~~~~~~~~~~~~~

To learn more about any of the methods or types discussed in this
guide, see the following API documentation:

- `createIndex() <{+api+}/mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/create-index.html>`__
- `createIndexes() <{+api+}/mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/create-indexes.html>`__
- `dropIndex() <{+api+}/mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/drop-index.html>`__
- `dropIndexes() <{+api+}/mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/drop-indexes.html>`__
