ref: run-sort-date-query-nodejs
stepnum: 1
title: "Run an |fts| query against the indexed field and sort the results very fast."
content: |
  a. Create a file named ``sort-date-for-speed.js``. 
  #. Copy and paste the following code into the
     ``sort-date-for-speed.js`` file.

     The code example performs the following tasks:

     - Imports ``mongodb``, MongoDB's Node.js driver.
     - Creates an instance of the ``MongoClient`` class to establish a 
       connection to your |service| cluster.

     - .. include:: /includes/extracts/fts-sort-date-for-speed-constant-desc.rst 

       .. include:: /includes/extracts/fts-sort-date-for-speed-stage.rst

     - Iterates over the cursor to print the documents that match the 
       query.

     .. literalinclude:: /includes/fts-tutorial/sort/date-tutorial.js
        :language: javascript
        :linenos:
        :dedent:
        :emphasize-lines: 5

  #. .. include:: /includes/fact-fts-driver-connection-string.rst
  #. Run the following command to query your collection: 

     .. io-code-block::
        :copyable: true

        .. input::
           :language: bash

           node sort-date-for-speed.js

        .. output::
           :language: javascript
           :visible: true

           {
             title: 'Summer of Blood',
             released: 2014-04-17T00:00:00.000Z,
             score: 99.34720611572266
           }
           {
             title: 'Summer in February',
             released: 2014-01-17T00:00:00.000Z,
             score: 62.58031463623047
           }
           {
             title: 'Summertime',
             released: 2014-08-01T00:00:00.000Z,
             score: 59.17375564575195
           }
           {
             title: 'Summer Nights',
             released: 2015-01-28T00:00:00.000Z,
             score: 34.810577392578125
           }
           {
             title: 'Summer Games',
             released: 2012-02-08T00:00:00.000Z,
             score: 15.98293399810791
           }
...
