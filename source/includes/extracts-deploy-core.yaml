ref: deploy-replica-set-id
content: |
  - :guilabel:`Replica Set Id`
  - The name of your replica set deployment. You cannot change 
    this once set. This setting corresponds to the 
    :rsconf:`_id <rsconf._id>` replica configuration option.
---
ref: deploy-replica-set-settings
content: |
  - :guilabel:`Replica Set Settings`
  - An overview of each process associated with the replica set.
    Each row represents a deployment component. Click the
    arrow to the left of the process name to display nested
    components, if any.

    You can configure the MongoDB server version, data directory, 
    and log path of each process.

---
ref: deploy-process-name
content: |

  - :guilabel:`Process Name`
  - Initially lists the name of the replica set. Click the
    arrow to the left of the replica set name to list the hostname
    of each server where |mms| will deploy a 
    :binary:`~bin.mongod` process.

    Modifying any of the available settings on the replica set 
    row changes the corresponding value for all processes in the 
    replica set.
---
ref: deploy-version
content: |

  - :guilabel:`Version` 
  - The MongoDB server version the replica set member runs.
 
    If the dropdown menu does not include the MongoDB version
    you want for your deployment, you must enable it in the
    :doc:`Version Manager
    </tutorial/configure-available-mongodb-version>`.

---
ref: deploy-data-directory
content: |

  - :guilabel:`Data Directory`
  - The directory where the :binary:`~bin.mongod` process stores 
    data files. This setting corresponds to the 
    :setting:`storage.dbPath` :binary:`~bin.mongod` configuration file 
    option.
---
ref: deploy-log-file
content: |
  - :guilabel:`Log File`
  - The directory where the :binary:`~bin.mongod` process stores 
    its log files. This setting corresponds to the 
    :setting:`systemLog.path` :binary:`~bin.mongod` configuration file 
    option.
---
ref: deploy-member-configuration-member
content: |

  - :guilabel:`Member` 
  - The replica set member's role. By default, 
    each member is a voting member that bears data.
 
    You may select a new member type from the dropdown menu:
 
    - :manual:`Arbiter </core/replica-set-arbiter>`
 
      Corresponds to the 
      :rsconf:`arbiterOnly <rsconf.members[n].arbiterOnly>`
      replica configuration option.
 
    - :manual:`Hidden </core/replica-set-hidden-member>`
 
      Corresponds to the
      :rsconf:`hidden <rsconf.members[n].hidden>`
      replica configuration option.
 
    - :manual:`Delayed Hidden </core/replica-set-delayed-member>`
 
      Corresponds to the
      :rsconf:`slaveDelay <rsconf.members[n].slaveDelay>`
      and :rsconf:`hidden <rsconf.members[n].hidden>`
      replica configuration options.

---
ref: deploy-member-configuration-hostname
content: |

  - :guilabel:`Hostname` 
  - The hostname to deploy the replica set
    member on. You can only deploy to hosts under |mms| automation.
    See :doc:`/tutorial/add-servers-automation/` for complete
    documentation on adding servers to |mms| automation.

---
ref: deploy-member-configuration-port
content: |
  - :guilabel:`Port` 
  - The :abbr:`IANA (Internet Assigned Numbers Authority)` port 
    number for the :binary:`~bin.mongod` process. This setting 
    corresponds to the :setting:`net.port` 
    :binary:`~bin.mongod` configuration file option.
---
ref: deploy-member-configuration-votes
content: |
  - :guilabel:`Votes` 
  - The number of votes that the replica set member has during 
    elections. This setting corresponds to the 
    :rsconf:`votes <rsconf.members[n].votes>` :binary:`~bin.mongod` 
    replica set configuration option.
---
ref: deploy-member-configuration-priority
content: |
  - :guilabel:`Priority`
  - The priority of the member during elections. This setting
    corresponds to the 
    :rsconf:`priority <rsconf.members[n].votes>`
    :binary:`~bin.mongod` replica set configuration option.

---
ref: deploy-member-configuration-delay
content: |
  - :guilabel:`Delay`
  - The number of seconds "behind" the primary member this
    member should "lag". This setting corresponds to the
    :rsconf:`slaveDelay <rsconf.members[n].slaveDelay>`
    :binary:`~bin.mongod` replica set configuration option.

---
ref: deploy-member-configuration-build-indexes
content: |
  - :guilabel:`Build Indexes`
  - Indicates whether the :binary:`~bin.mongod` builds
    :manual:`indexes </indexes>` for the member. This setting
    corresponds to the
    :rsconf:`buildIndexes <rsconf.members[n].buildIndexes>`
    :binary:`~bin.mongod` replica set configuration option.
---
ref: deploy-member-configuration-tags
content: |
  - :guilabel:`Tags`
  - The tag or tags associated to the replica set. 
    This setting corresponds to the
    :rsconf:`tags <rsconf.members[n].tags>`
    :binary:`~bin.mongod` replica set configuration option.

    For complete documentation on replica set tags, see
    :manual:`Replica Set Tags </tutorial/configure-replica-set-tag-sets/>`
    
---
ref: deploy-member-configuration-add-mongod
content: |
  - :guilabel:`Add a Mongod`
  - Adds an additional :binary:`~bin.mongod` process as a replica set
    member.
---
ref: deploy-member-replication-protocol-version
content: |
  - :guilabel:`Protocol Version`
  - The replication protocol version used by the replica set.
    This setting corresponds to the
    :rsconf:`protocolVersion <rsconf.protocolVersion>`
    replica set configuration option.

    For more information, see :manual:`Replica Set Protocol Versions 
    </reference/replica-set-protocol-versions/>`.
---
ref: deploy-member-replication-chaining-allowed
content: |
  - :guilabel:`Chaining Allowed`
  - Indicates whether the replica set allows :term:`secondary`
    members to replicate from other secondary members. This setting
    corresponds to the
    :rsconf:`chainingAllowed <rsconf.settings.chainingAllowed>`
    replica set configuration option.
---
ref: deploy-member-replication-write-concern-majority-journal-default
content: |
  - :guilabel:`Write Concern Majority Journal Default`
  - Determines the behavior of 
    :writeconcern:`{w:"majority"} <writeconcern."majority">`
    write concern if the write concern does not explicitly
    specify the journal option 
    :writeconcern:`j <writeconcern.j>`. This setting corresponds to the
    :rsconf:`writeConcernMajorityJournalDefault 
    <rsconf.writeConcernMajorityJournalDefault>`
    replica set configuration option.
---
ref: deploy-member-replication-heartbeat-timeouts
content: |
  - :guilabel:`Heartbeat Timeout (secs)`
  - Number of seconds that the replica set members wait for a
    successful heartbeat from each other. This setting corresponds to 
    the :rsconf:`heartbeatTimeoutSecs 
    <rsconf.settings.heartbeatTimeoutSecs>`
    replica set configuration option.
---
ref: deploy-member-replication-election-timeout
content: |
  - :guilabel:`Election Timeout (ms)`
  - The time limit in milliseconds for detecting when a replica
    set's :term:`primary` is unreachable. This setting corresponds to 
    the :rsconf:`electionTimeoutMillis 
    <rsconf.settings.electionTimeoutMillis>`
    replica set configuration option.
---
ref: deploy-member-replication-catch-up-timeout
content: |
  - :guilabel:`CatchUp Timeout (ms)`
  - The time limit in milliseconds for a newly elected
    :term:`primary` to sync, or catch up, with the other replica
    set members that may have more recent writes. This setting 
    corresponds to the 
    :rsconf:`catchUpTimeoutMillis 
    <rsconf.settings.catchUpTimeoutMillis>`
    replica set configuration option.
---
ref: deploy-member-replication-catch-up-takeover-delay
content: |
  - :guilabel:`CatchUp Takeover Delay (ms)`
  - The time in milliseconds a node waits to initiate a 
    *catchup takeover* after determining it is ahead of the
    current :term:`primary`. This setting corresponds to the 
    :rsconf:`catchUpTakeoverDelayMillis 
    <rsconf.settings.catchUpTakeoverDelayMillis>`
    replica set configuration option.
...