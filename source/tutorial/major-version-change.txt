====================================
Atlas Major Version Change Procedure
====================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

|service| enables you to upgrade the major version of an |service|
cluster at any time by 
:ref:`modifying the cluster <scale-cluster-version>`.

This procedure guides you through creating a staging cluster for
the purpose of testing your applications against the new 
MongoDB version. While optional, MongoDB strongly recommends
using this procedure to ensure your production application experiences
the smoothest possible transition to the new MongoDB version.

Considerations
--------------

There are a few things to be aware of before starting the upgrade
procedure:

- Your cluster must be in a healthy state before upgrading.

- You can only upgrade your |service| cluster one major version at a
  time. You cannot skip any major versions when upgrading your
  cluster.

- Each major version contains some features which may not be
  backward-compatible with previous versions. When upgrading to a new
  major version, check the :manual:`Release Notes </release-notes>` for
  changes which may affect your applications.

A. Log into your |service| user account
---------------------------------------

Go to |service|_ to log into
your |service| user account.

.. important::

   The |service| user you log in as *must* have the 
   :authrole:`Project Owner` role in the |service| 
   :ref:`project <projects>` that contains the cluster you want to 
   upgrade.

B. Create an |service| cluster for your staging environment
-----------------------------------------------------------

You can skip this step if you already have an |service| cluster
as your staging environment.

To open the cluster creation modal, click the 
:guilabel:`Build a New Cluster` button. Configure the staging cluster 
to match your production cluster. You do not have to enable backup for 
the staging cluster.

See :doc:`/create-new-cluster` for documentation on creating a new
|service| cluster. 

.. important::

   If selecting a smaller |service| instance size for the staging
   cluster, take into consideration that any performance tests run
   may not be representative of the performance of the upgraded 
   production cluster. You may also need to select a larger storage
   size depending on the amount of data you want to mirror to your
   staging cluster.

C. Refresh the staging cluster with production cluster data
-----------------------------------------------------------

You can skip this step if you already have an up-to-date |service| 
cluster as a staging environment.

If you have :doc:`backups enabled </backup-cluster>` for the production
cluster, :doc:`restore the most recent snapshot </restoration>` and
choose the staging cluster as the destination.

If you do *not* have backups enabled for the production cluster, 
use |service| :doc:`Live Import </import/live-import>` to mirror data
from your production cluster to the staging cluster. The live migration
documentation includes specific instructions for creating staging
environments.

D. Point your staging application at the staging cluster
--------------------------------------------------------

Update your staging application to point at your
staging cluster. For instructions on retrieving the MongoDB 
driver-friendly connection string for the staging
cluster, see :doc:`/driver-connection`.

Confirm that your application can connect successfully to the
staging cluster *and* that the application operates as expected.

E. (Optional) Upgrade your application to the latest MongoDB drivers
--------------------------------------------------------------------

Upgrading your application to the latest MongoDB drivers for your
cluster's MongoDB version enables full access to the features 
provided by the newer MongoDB version. You may also find better 
performance or stability with newer driver versions. 
See :doc:`/driver-connection` for documentation on the 
recommended MongoDB driver for a given MongoDB version and connection 
examples.

If you encounter a bug after upgrading your application, 
file a ticket in the :driver:`JIRA project for your MongoDB driver <>`.

F. Update the staging cluster to the new major MongoDB version
--------------------------------------------------------------

1. Click the ellipsis :guilabel:`...` icon for your staging cluster
   to open the cluster modification modal.

#. Select :guilabel:`Edit Configuration`.

#. :ref:`Change the cluster version <scale-cluster-version>` to
   the desired major MongoDB Version.

   .. important::
   
      You cannot downgrade the MongoDB version of a |service| cluster. 
      If you want to redeploy the staging environment with the original
      MongoDB version, you must terminate and re-create the cluster.

#. Click :guilabel:`Confirm & Deploy` to deploy your changes. 

|service| automatically begins upgrading the cluster. Consider measuring
the time required by |service| to upgrade the cluster to set a general
expectation for your production cluster upgrade.

:ref:`File a support ticket <major-version-upgrade-support>` if you
encounter version-specific issues with the upgraded staging cluster.

G. Test your application against the upgraded staging cluster
-------------------------------------------------------------

Perform any required performance and operational testing of the staging
cluster.

:ref:`File a support ticket <major-version-upgrade-support>` if you
encounter version-specific issues with the upgraded staging cluster.

.. important::

   The major version upgrade requires at least one replica set election.
   Use the staging cluster as an opportunity to test your application's
   resiliance to primary failover. See
   :doc:`/tutorial/test-failover` for complete documentation.

H. Upgrade your production cluster to the target MongoDB version
----------------------------------------------------------------

Once you are confident in the performance and operation of
your staging cluster, repeating the :doc:`upgrade </scale-cluster>`
procedure for your production cluster. 

Once |service| completes the upgrade process, check that your
production applications are still connected and operating normally.

If you upgraded your staging application with newer MongoDB drivers
*and* are satisfied with the performance and operation,
consider scheduling a maintenance period for upgrading your production
applications.

:ref:`File a High Priority support ticket 
<major-version-upgrade-support>` if you
encounter problems with the upgraded production cluster.

.. _major-version-upgrade-support:

Support for major version upgrades
----------------------------------

If you have any questions regarding migration support beyond what is covered
in this documentation, or if you encounter an error during migration, please
file a support ticket through the |service| UI.

To file a support ticket,

#. Click :guilabel:`Support` in the left-hand navigation.

#. For :guilabel:`Atlas Issue Category`, select ``Other``.

#. For :guilabel:`Priority`, select ``Medium Priority``. If the issue
   affects your production cluster, please select ``High Priority``.

#. For :guilabel:`Request Summary`, please include 
   ``Major Version Upgrade`` in the summary.

#. For :guilabel:`More details`, please include any other relevant 
   details to your question or major version upgrade error.
