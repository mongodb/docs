title: "Set up a database user in the target |service| cluster."
level: 4
ref: mongoimport-user-target
content: |

   To run |mongoimport| to write to |service| cluster, you
   must specify a database user that has :manual:`readWrite
   </reference/built-in-roles/#readWrite>` privileges in the database
   into which to import data.
   For example, a user with :atlasrole:`Atlas admin`
   role provides these privileges.

   If no such user exists, create the user:

   #. In the :guilabel:`Security` section of the left navigation, click
      :guilabel:`Database Access`. The :guilabel:`Database Users` tab
      displays.

   #. Click :icon-fa5:`plus` :guilabel:`Add New Database User`.

   #. Add an :guilabel:`Atlas admin` user.
---
title: "Open the connect dialog."
level: 4
ref: mongoimport-connect-dialog
content: |

   a. Click :guilabel:`Databases` in the top-left corner of |service|. 
   
   #. From the :guilabel:`{+Database-Deployments+}` view, click :guilabel:`Connect` for
      the |service| cluster into which you want to migrate data.
      
---
title: "Update IP Access List."
level: 4
ref: mongoimport-ip-access-list
content: |
  If the host where you will run |mongoimport| is not in the
  :doc:`IP Access List </security/ip-access-list>`, update the list.
  You can specify either:

  - The public IP address of the server on which |mongoimport|
    will run, or

  - If set up for |vpc| peering, either the peer's |vpc| |cidr| block
    (or a subnet) or the peer |vpc|\'s Security Group, if you chose
    |aws| as your cloud provider.
---
title: "Copy the target cluster URI / host information."
level: 4
ref: connect
content: |

   .. include:: /includes/extracts/uri-connection-mongoimport.rst

---
title: "Run mongoimport."
level: 4
ref: mongoimport-run
pre: |
   The following example imports data from the file
   ``/somedir/myFileToImport.json`` into collection ``myData`` in the
   ``testdb`` database. The operation includes the ``--drop`` option to
   drop the collection first if the collection exists.
   
   Using ``--uri``:

   
   .. code-block:: none
   
      mongoimport --uri "mongodb://root:<PASSWORD>@atlas-host1:27017,atlas-host2:27017,atlas-host3:27017/<DATABASE>?ssl=true&replicaSet=myAtlasRS&authSource=admin" --collection myData --drop --file /somedir/myFileToImport.json
   
   Using ``--host``:

   
   .. code-block:: none
   
      mongoimport --host myAtlasRS/atlas-host1:27017,atlas-host2:27017,atlas-host3:27017 --ssl -u myAtlasAdminUser -p 'myAtlasPassword' --authenticationDatabase admin  --db testdb --collection myData --drop --file /somedir/myFileToImport.json
   
   Add/edit the :binary:`mongoimport <bin.mongoimport>` command line
   options as appropriate for your deployment.
   See :binary:`mongoimport <bin.mongoimport>` for more |mongoimport|
   options.
...
