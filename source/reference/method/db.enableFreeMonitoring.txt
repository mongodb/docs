=========================
db.enableFreeMonitoring()
=========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. method:: db.enableFreeMonitoring()

   .. versionadded:: 4.0
   
      Available for MongoDB Community Edition.

   Enables :doc:`free monitoring </administration/free-monitoring>` for
   standalones and replica sets and returns the free monitoring status.s

   .. important::

      To run :method:`db.enableFreeMonitoring()`, you must have
      specified :option:`--enableFreeMonitoring <mongod
      --enableFreeMonitoring>` command-line option or
      :setting:`cloud.monitoring.free.state` configuration file set to
      ``runtime``.
   
      Otherwise, you can only enable or disable at startup. See
      :option:`--enableFreeMonitoring <mongod --enableFreeMonitoring>`
      command-line option or :setting:`cloud.monitoring.free.state` for
      details.

   The :method:`db.enableFreeMonitoring()` method is a wrapper around
   the :dbcommand:`setFreeMonitoring` command.

Behavior
--------

Once enabled, the free monitoring state remains enabled until
explicitly disabled. That is, you do not need to re-enable each time
you start the server.

Once enabled, you are provided with a unique URL where you can access
your monitored data.

When enabled, the monitored data is uploaded periodically. The
monitored data expires after 24 hours. That is, you can only access
monitored data that has been uploaded within the past 24 hours.

For the frequency with which data is uploaded, see
:serverstatus:`freeMonitoring.retryIntervalSecs`.

Access Control
--------------

When running with access control, the user must have the
:authaction:`setFreeMonitoring` and
:authaction:`checkFreeMonitoringStatus` privilege actions on the
:ref:`cluster <resource-document>`. That is, a user must have a
:ref:`role <roles>` that grants the following :ref:`privilege
<privileges>`:

.. code-block:: javascript

   { resource: { cluster : true }, actions: [ "setFreeMonitoring" , "checkFreeMonitoringStatus"] }

The built-in role :authrole:`clusterMonitor` role provides this
privilege.


Example
-------

To enable free monitoring, run the following from the
:binary:`~bin.mongo` shell:

.. code-block:: javascript

   db.enableFreeMonitoring()

This starts the registration process for free monitoring. The method
returns your free monitoring status:

.. code-block:: javascript

   {
      "state" : "enabled",
      "message" : "To see your monitoring data, navigate to the unique URL below.\nAnyone you share the URL with will also be able to view this page.\n\nhttps://cloud.mongodb.com/freemonitoring/mongo/MSBjZTZhNTJmOS0yODg1\n\nYou can disable monitoring at any time by running db.disableFreeMonitoring().",
      "url" : "https://cloud.mongodb.com/freemonitoring/mongo/MSBjZTZhNTJmOS0yODg1",
      "userReminder" : "",
      "ok" : 1
   }

.. tip::

   You can also use :method:`db.getFreeMonitoringStatus()` any time to
   check your free monitoring status.

.. seealso::

   :method:`db.disableFreeMonitoring()`


