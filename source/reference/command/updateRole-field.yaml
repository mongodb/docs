object:
  name: updateRole
  type: dbcommand
field:
  optional: false
  type: field
name: updateRole
type: string
position: 1
description: |
  The role to update.
---
object:
  name: updateRole
  type: dbcommand
field:
  optional: true
  type: field
name: privileges
type: array
position: 2
description: |
  Required if you do not specify :data:`~admin.system.roles.roles` array.
  The privileges to grant the role. An update to the ``privileges``
  array overrides the previous array's values. For the syntax for
  specifying a privilege, see the :data:`~admin.system.roles.privileges`
  array.
---
object:
  name: updateRole
  type: dbcommand
field:
  optional: true
  type: field
name: roles
type: array
position: 3
description: |
  Required if you do not specify :data:`~admin.system.roles.privileges` array.
  The roles from which this role inherits privileges. An update to the
  ``roles`` array overrides the previous array's values. You can specify
  both :ref:`system roles <system-user-roles>` and custom roles created
  with :dbcommand:`createRole`. The array can take both documents and
  strings. Specify a role as a document if the role exists in another
  database. Specify the role as a string name if it exists in the
  current database. For more information on specifying roles, see the
  :data:`~admin.system.roles.roles` array.
---
object:
  name: updateRole
  type: dbcommand
field:
  optional: true
  type: field
name: writeConcern
type: document
position: 4
description: |
  The level of :doc:`write concern </reference/write-concern>` for the
  update operation. The ``writeConcern`` document takes the same
  fields aas the :dbcommand:`getLastError` command.
...
