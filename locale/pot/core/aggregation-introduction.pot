# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/aggregation-introduction.txt:3
# d2bd20c4f4ad4db88addb86e40bd918e
msgid "Aggregation Introduction"
msgstr ""

#: ../source/core/aggregation-introduction.txt:9
# 824b6e76f652406b9d318fc987f94f2d
msgid "*Aggregations* are operations that process data records and return computed results. MongoDB provides a rich set of aggregation operations that examine and perform calculations on the data sets. Running data aggregation on the :program:`mongod` instance simplifies application code and limits resource requirements."
msgstr ""

#: ../source/core/aggregation-introduction.txt:17
# 462a4533234a45819b3edb74142689f4
msgid "Like queries, aggregation operations in MongoDB use :term:`collections <collection>` of documents as an input and return results in the form of one or more documents."
msgstr ""

#: ../source/core/aggregation-introduction.txt:22
# 9bfb38fb4b554189a02f7dd6bdb38113
msgid "Aggregation Modalities"
msgstr ""

#: ../source/core/aggregation-introduction.txt:25
# e1a4f5e061de42ee99224d34697f77b9
msgid "Aggregation Pipelines"
msgstr ""

#: ../source/core/aggregation-introduction.txt:27
# 6c79bcffc7df4defb669e99c4d77d23b
msgid "MongoDB 2.2 introduced a new :doc:`aggregation framework </core/aggregation-pipeline>`, modeled on the concept of data processing pipelines. Documents enter a multi-stage pipeline that transforms the documents into an aggregated result."
msgstr ""

#: ../source/core/aggregation-introduction.txt:32
# e7042870a75244ef80e2792a6c73bb2c
msgid "The most basic pipeline stages provide *filters* that operate like queries and *document transformations* that modify the form of the output document."
msgstr ""

#: ../source/core/aggregation-introduction.txt:36
# 228e13acb48a4aed9c611c9a685f8ade
msgid "Other pipeline operations provide tools for grouping and sorting documents by specific field or fields as well as tools for aggregating the contents of arrays, including arrays of documents. In addition, pipeline stages can use :ref:`operators <aggregation-expression-operators>` for tasks such as calculating the average or concatenating a string."
msgstr ""

#: ../source/core/aggregation-introduction.txt:43
# 96eb95e1887a43fb87cc20cd1e4f7810
msgid "The pipeline provides efficient data aggregation using native operations within MongoDB, and is the preferred method for data aggregation in MongoDB."
msgstr ""

#: ../source/core/aggregation-introduction.txt:50
# 903e3e77922b410193b008e950d116b3
msgid "Map-Reduce"
msgstr ""

#: ../source/core/aggregation-introduction.txt:52
# eecfc39b2dc0437880072e6e2184c9d9
msgid "MongoDB also provides :doc:`map-reduce </core/map-reduce>` operations to perform aggregation. In general, map-reduce operations have two phases: a *map* stage that processes each document and *emits* one or more objects for each input document, and *reduce* phase that combines the output of the map operation. Optionally, map-reduce can have a *finalize* stage to make final modifications to the result. Like other aggregation operations, map-reduce can specify a query condition to select the input documents as well as sort and limit the results."
msgstr ""

#: ../source/core/aggregation-introduction.txt:61
# d64286b138c04c3498238280b34157b2
msgid "Map-reduce uses custom JavaScript functions to perform the map and reduce operations, as well as the optional *finalize* operation. While the custom JavaScript provide great flexibility compared to the aggregation pipeline, in general, map-reduce is less efficient and more complex than the aggregation pipeline."
msgstr ""

#: ../source/core/aggregation-introduction.txt:67
# b560090725aa42a587f6b08876f4a963
msgid "Starting in MongoDB 2.4, certain :program:`mongo` shell functions and properties are inaccessible in map-reduce operations. MongoDB 2.4 also provides support for multiple JavaScript operations to run at the same time. Before MongoDB 2.4, JavaScript code executed in a single thread, raising concurrency issues for map-reduce."
msgstr ""

#: ../source/core/aggregation-introduction.txt:77
# 81ca5bfbd781401584f49b5fb1010072
msgid "Single Purpose Aggregation Operations"
msgstr ""

#: ../source/core/aggregation-introduction.txt:79
# 9488e43e2a434b66aed704c501be007a
msgid "For a number of common :doc:`single purpose aggregation operations </core/single-purpose-aggregation>`, MongoDB provides special purpose database commands. These common aggregation operations are: returning a count of matching documents, returning the distinct values for a field, and grouping data based on the values of a field. All of these operations aggregate documents from a single collection. While these operations provide simple access to common aggregation processes, they lack the flexibility and capabilities of the aggregation pipeline and map-reduce."
msgstr ""

#: ../source/core/aggregation-introduction.txt:92
# 309b8083bf714ff9beed3f1dace07276
msgid "Additional Features and Behaviors"
msgstr ""

#: ../source/core/aggregation-introduction.txt:94
# 3b869400429f4b2fac209a56271650a3
msgid "Both the aggregation pipeline and map-reduce can operate on a :doc:`sharded collection </core/sharding-introduction>`. Map-reduce operations can also output to a sharded collection. See :doc:`/core/aggregation-pipeline-sharded-collections` and :doc:`/core/map-reduce-sharded-collections` for details."
msgstr ""

#: ../source/core/aggregation-introduction.txt:100
# cbf556f4708d4ac78446b1ca90d22725
msgid "The aggregation pipeline can use indexes to improve its performance during some of its stages. In addition, the aggregation pipeline has an internal optimization phase. See :ref:`aggregation-pipeline-operators-and-performance` and :doc:`/core/aggregation-pipeline-optimization` for details."
msgstr ""

#: ../source/core/aggregation-introduction.txt:106
# 80e1c59a947449e69bb31924c48444a8
msgid "For a feature comparison of the aggregation pipeline, map-reduce, and the special group functionality, see :doc:`/reference/aggregation-commands-comparison`."
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:4
# 8702cf2248a3421ea0070dffb37259b8
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:6
# e1ee5b9bc1fd4a8880a22e92480d59d2
msgid "`MongoDB Analytics: Learn Aggregation by Example: Exploratory Analytics and Visualization Using Flight Data <http://www.mongodb.com/presentations/mongodb-analytics-learn-aggregation-example-exploratory-analytics-and-visualization>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:7
# fa651031107b482c9fe92b4e95e2dd31
msgid "`MongoDB for Time Series Data: Analyzing Time Series Data Using the Aggregation Framework and Hadoop <http://www.mongodb.com/presentations/mongodb-time-series-data-part-2-analyzing-time-series-data-using-aggregation-framework>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:8
# 63930106082e423ab69a3c1fdc8cbaf6
msgid "`The Aggregation Framework <https://www.mongodb.com/presentations/aggregation-framework-0>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:9
# 3be6ca9e4c74441da23d1f9dcc14d655
msgid "`Webinar: Exploring the Aggregation Framework <https://www.mongodb.com/webinar/exploring-the-aggregation-framework>`_"
msgstr ""

