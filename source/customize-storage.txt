.. _create-cluster-storage:

=============================
Customize {+Cluster+} Storage
=============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Each {+cluster+} tier comes with a default set of resources.
``M10+`` {+clusters+} provide the ability to customize
your storage capacity.

|service| provides the following storage configuration options,
depending on the selected cloud provider and cluster tier.

.. _storage-class-ui:

{+Cluster+} Class
-----------------

``M40+`` {+clusters+} offer multiple options, including:

- :guilabel:`Low CPU`
- :guilabel:`General`
- :guilabel:`Local NVMe SSD`

All production environments can use the :guilabel:`General` option.

Select the :guilabel:`Class` box with your preferred speed.
Changes to cluster class affect :ref:`cost <instance-size-costs>`.

.. _storage-class-low-cpu-ui:

Low CPU Class
~~~~~~~~~~~~~

Generally, the :guilabel:`Low CPU` option offers a lower-cost 
alternative for applications that require more memory and fewer CPUs. 
This option includes half the vCPUs of an instance with the 
:guilabel:`General` option of the same tier. For example, a 
:guilabel:`General` ``M40`` instance includes 4 vCPUs, while a 
:guilabel:`Low CPU` ``M40`` instance includes 2 vCPUs. Depending on the 
cluster tier, this option may also include fewer max connections. To 
learn more, see :ref:`connection-limits`.

NVMe Storage
~~~~~~~~~~~~

You can select the :guilabel:`Local NVMe SSD` storage option for some
{+dedicated-clusters+} that run on |aws| or |azure|. Locally attached 
ephemeral :ref:`NVMe SSDs <nvme-storage>` offer the highest level of speed and performance.

.. include:: /includes/fact-nvme-fcbis.rst

.. note::
   
   |service| doesn't support |nvme| {+clusters+} on |gcp|.

.. _storage-capacity-ui:

Storage Capacity
----------------

To change the server data volume size, do one of the following tasks:

- Move the slider until the text box displays your preferred disk size.
- Specify the exact disk size in the text box.

For |azure|-specific instructions, see :ref:`<change-storage-capacity-azure>`.

Changes to storage capacity affect :ref:`cost <instance-size-costs>`.

.. note::

   MongoDB uses a small portion of your specified storage capacity for
   buffer files, journal files, and log files to ensure proper 
   {+cluster+} operation. In no-overwrite storage engines like 
   the :manual:`WiredTiger storage engine </core/wiredtiger/>`, 
   you should expect to use approximately 20% more disk space than your 
   compressed data occupies.

.. _oplog-size-behavior:

Oplog Size Behavior
~~~~~~~~~~~~~~~~~~~

.. include:: /includes/autoscale-oplog.rst

.. _change-storage-capacity-aws:

Change Storage Capacity or |iops| on |aws|
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

|service| handles changes differently based on whether you want to 
increase or decrease storage capacity or storage throughput
(|iops|) on |aws|.

Increase Capacity or Throughput
```````````````````````````````

If previous changes are completed, |aws| usually takes about six hours to 
increase storage capacity or |iops|. However, this time frame can vary 
depending on the data size stored on disk. To learn more, see the 
:aws:`AWS documentation </AWSEC2/latest/UserGuide/monitoring-volume-modifications.html#>`.
|service| supports more changes within the time frame for volume modification 
changes. 

How |service| handles additional changes within the time frame for volume 
modification changes depends on the size of your hosts' data volumes and 
the time when you make the change.

- For the first change, |service| modifies data volumes in place without
  downtime.
- For later changes:

  .. list-table::
     :header-rows: 1
  
     * - Data Volume Size
       - Time Since Last Storage Change
       - Action |service| Takes

     * - Less than 1TB
       - Less than 5h30m
       - |service| provisions new volumes and syncs the data from
         the old volumes. If |service| provisions new volumes, 
         you can access your {+cluster+}. You can't access *nodes* 
         that |aws| modifies until |aws| attaches the new volume.

     * - Less than 1TB
       - More than 5h30m
       - |service| waits until the volume modification takes effect, then
         modifies the hosts' data volumes in place without downtime.

     * - More than 1TB
       - Any
       - |service| waits until the volume modification takes effect, then
         modifies the hosts' data volumes in place without downtime.
         This takes less time than provisioning new volumes and syncing
         data from the old to the new volumes.

Before you apply your storage capacity or |iops| increases, the
:guilabel:`Review Changes` page describes how |service| approaches the
increase.

The :guilabel:`Database Deployments` page displays a banner if |service|
waits until a six-hour window closes before modifying your {+cluster+}'s
storage capacity or |iops|.

These behaviors apply when |service| changes capacity during
:ref:`auto-scaling <cluster-autoscaling>`.

To learn more about |aws|\'s limitations, see the
:aws:`AWS documentation </AWSEC2/latest/UserGuide/modify-volume-requirements.html#elastic-volumes-limitations>`.

Decrease Capacity or Throughput
```````````````````````````````

- |aws| doesn't allow you to reduce storage *capacity* in place.

  |service| *can* reduce storage capacity in place. |service|
  provisions new volumes then syncs data from the old to the new
  volumes. This works around the |aws| limitation.

- |aws| *does* allow you to reduce |iops| without migrating data.

.. _change-storage-capacity-azure:

Extend Storage Capacity and |iops| on |azure|
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

For :guilabel:`Low CPU` or :guilabel:`General` {+clusters+} deployed on |azure|,
you can extend |iops| and the data volumes' storage capacity in the {+atlas-ui+}.

If you increase disk storage for :guilabel:`Low CPU` or :guilabel:`General`
{+clusters+}, you can:

- Receive more |iops| on {+clusters+} in the same {+cluster+} tier.
- Use these {+clusters+} for hosting applications with high IO workload requirements
  without having to configure sharding to spread the applications' workload across
  servers.

The following statements describe the options you have in the {+atlas-ui+}
for |iops| and storage management on |azure| {+clusters+}.

1. Initially, when you choose an |azure| :guilabel:`Low CPU` or
   :guilabel:`General` {+cluster+}, |service| assigns the default storage
   size and |iops| based on the tier you choose.
2. Depending on the specific characteristics of the storage volumes used
   in your region and whether the {+cluster+} is in the
   :ref:`region that supports extended storage <microsoft-azure-supported-regions>`,
   you can do one of the following actions:

   - If your region doesn't :ref:`support extended storage <microsoft-azure-supported-regions>`,
     you can change storage capacity only in preset amounts and can't change
     the IOPS using the slider.
   - If your region :ref:`supports extended storage <microsoft-azure-supported-regions>`,
     you can use the :guilabel:`Storage` slider to increase the default storage
     capacity within the same tier. |service| also increases |iops| to correspond
     to the increased storage size.

3. If, after you increase the storage volume's size, the increased number
   of |iops| still isn't sufficient, and the {+cluster+}'s tier is in a
   :ref:`region that supports extended storage <microsoft-azure-supported-regions>`,
   you can further extend the number of |iops| using the :guilabel:`IOPS` slider,
   without changing the {+cluster+} tier.
4. In addition, you can also expand the total {+cluster+} storage beyond
   the default limits for the {+cluster+}'s tier in
   :ref:`regions that support extended storage <microsoft-azure-supported-regions>`.
   You enable extended storage sizes in the :ref:`Project Settings <project-settings>`.

The following sections describe how to increase the storage size and |iops|.

- :ref:`change-storage-azure-steps`
- :ref:`extend-iops-azure-steps`

.. _change-storage-azure-steps:

Change Data Volume Size on |azure|
`````````````````````````````````````
To change the server's data volume size:

1. :ref:`View the cluster details <view-cluster-details>`.
2. In the :guilabel:`Cluster tier` > :guilabel:`Storage` section, you can
   do one of the following actions, depending on the region:

   - If your region :ref:`supports extended storage <microsoft-azure-supported-regions>`,
     move the slider to the right and choose your preferred disk size.

     The text box to the right of the slider changes dynamically and indicates
     the new disk size. |service| also increases |iops| to correspond to
     the increased storage size.

   - If your region doesn't support extended storage, you can increase the
     disk capacity in preset amounts. In this case, |service| doesn't increase
     |iops|.

   Regardless of the option for increasing storage, |service| increases
   the storage capacity in place without copying data or performing an
   :manual:`initial sync </core/replica-set-sync/#initial-sync>`.

   .. note::

      If you change to another region or to a multi-region {+cluster+},
      the specific storage volume capabilities or extended storage might
      be unavailable. The {+atlas-ui} notifies you that your |iops| will
      be reduced. This change might impact the application's performance,
      the speed of restoring data from a backup, or copying backups from
      these regions to other regions. To preserve the same performance,
      continue using the same region. To learn more, see
      :ref:`regions that support extended storage <microsoft-azure-supported-regions>`.

   |azure| doesn't allow decreasing the storage capacity in place. To downgrade
   the storage capacity of a {+cluster+} on |azure|, |service| provisions new
   volumes, and then syncs data from the old to the new volumes. Before you apply
   your storage capacity downgrades, the :guilabel:`Review Changes` page notifies
   you that |service| triggers a rolling restart of your {+cluster+} when you
   make this change.

   An initial sync copies data across the network and rebuilds all indexes. During
   this time, you can still access your {+cluster+}, but each node that |azure|
   modifies remains unavailable until the node's initial sync completes. For large
   {+clusters+}, initial syncs for each node might take several hours to complete.

To expand the total {+cluster+} storage beyond the limits for the {+cluster+}
tier, you can enable extended storage in the :ref:`Project Settings <project-settings>`
for :ref:`regions that support extended storage <microsoft-azure-supported-regions>`.

.. _extend-iops-azure-steps:

Extend |iops| on |azure|
``````````````````````````````

The following procedure describes how to obtain extended |iops|, **on top of**
the number of IOPS that you receive when you :ref:`increase <change-storage-azure-steps>`
the storage size within the same {+cluster+} tier.

You can change the number of |iops| for ``M40+`` |service| {+clusters+}
for :ref:`regions that support extended storage <microsoft-azure-supported-regions>`.

To extend the number of |iops|:

1. :ref:`View the cluster details <view-cluster-details>`.
2. In the :guilabel:`Cluster tier`, change to the ``M40`` or higher {+cluster+} tier.
   The |iops| slider displays in the :guilabel:`IOPS` section.
3. If you haven't already, :ref:`increasee <change-storage-azure-steps>`
   the storage size.
4. If your application requires additional IOPS on top of increased IOPS
   that you received by increasing storage, you can extend IOPS further.
   Move the :guilabel:`IOPS` slider to the right and choose your preferred
   number of |iops|. Extending |iops| affects :ref:`cost <instance-storage-speed>`.

.. _change-storage-capacity-gcp:

Change Storage Capacity on |gcp|
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

When you change a cluster's storage capacity, |service| modifies the
size of the servers' data volumes in a rolling manner with zero
downtime.

|service| increases the storage capacity in place without copying data
or performing an :manual:`initial sync
</core/replica-set-sync/#initial-sync>`.
However, |gcp| doesn't allow in-place storage capacity downgrades.

If you downgrade the storage capacity of a {+cluster+}, |service| 
provisions new volumes, and then syncs data from the old to the new 
volumes.

Before you apply your storage capacity changes, the
:guilabel:`Review Changes` page notifies you that |service| triggers a 
rolling restart of your {+cluster+} when you make this change.

.. include:: /includes/cluster-settings/extended-storage-limit.rst

.. _change-storage-capacity-multi:

Change Storage Capacity for Multi-Cloud Provider {+Clusters+}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

|service| selects the lowest common denominator across the three
cloud providers. This ensures consistency across the multi-cloud 
deployment.

You can't adjust the |iops| for your multi-cloud {+cluster+}.

.. _storage-iops-ui:

IOPS (AWS Only)
---------------

AWS-backed ``M30+`` {+clusters+} offer the option to provision |iops|.

Provisioned IOPS vs Standard IOPS in AWS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Provisioned |iops| let you customize the maximum |iops| rate for your
{+cluster+}. They also:

- Deliver their configured |iops| rate more consistently when compared 
  to standard |iops|.
- Lower your {+cluster+}'s p90 latency (measurement of the 
  server's response time). 90 percent of server requests have responses 
  faster than the p90 latency value, so a lower p90 latency value means 
  a generally faster response time.

To learn more about the merits of using provisioned vs standard |iops|,
see :aws:`Amazon EBS-optimized instances
</AWSEC2/latest/UserGuide/ebs-optimized.html>`. See the following 
summary:

- General Purpose SSD volumes are designed to deliver their baseline
  performance 99% of the time.

- Provisioned IOPS SSD volumes are designed to deliver their provisioned
  performance 99.9% of the time.

.. note:: 

   Changes to |iops| provisioning affects characteristics, performance,
   and :ref:`cost <instance-storage-speed>`. When you select
   :guilabel:`Provision IOPS`, the storage changes from
   **General Purpose SSD** volumes to **Provisioned IOPS SSD** volumes.

Configure the IOPS Rate
~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/cluster-settings/provision-iops-note.rst

.. _configuration-storage-considerations:

Minimum Disk Capacity to RAM Ratios
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/cluster-settings/minimum-iops.rst

.. include:: /includes/cluster-settings/extended-storage-limit.rst

.. seealso::

   To learn more about the default resources and available
   configuration options for each cloud service provider, see:

   - :ref:`AWS Configuration Options <amazon-aws-configuration-options>`
   - :ref:`GCP Configuration Options <google-gcp-configuration-options>`
   - :ref:`Azure Configuration Options 
     <microsoft-azure-configuration-options>`.

Auto-Scale {+Cluster+} Tier and Storage Capacity
------------------------------------------------

.. include:: /includes/fact-auto-scaling-availability.rst

For new clusters, |service| automatically enables {+cluster+} tier
auto-scaling and storage auto-scaling.

Use :guilabel:`Auto-scale` options to configure your {+cluster+} to
automatically scale your {+cluster tier+}, storage capacity, or both in
response to {+cluster+} usage.

.. include:: /includes/fact-auto-scaling-and-migration.rst

You can :ref:`opt out <opt-out-autoscaling>` of {+cluster+} tier and 
storage auto-scaling. To learn more, see 
:ref:`howitworks-scale-cluster-tier` and 
:ref:`howitworks-scale-cluster-storage`.

.. seealso:: 

   - :ref:`cluster-autoscaling`
   - :ref:`connection-limits`
