============
db.getUser()
============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. method:: db.getUser(username, args)

   Returns user information for a specified user. Run this method on the
   user's database. If the user doesn't exist in the database,
   :method:`db.getUser()` returns ``null``. 

   The :method:`db.getUser()` method has the following parameters:

   .. code-block:: none

      db.getUser( "<username>", { 
         showCredentials: <Boolean>,
         showCustomData: <Boolean>,
         showPrivileges: <Boolean>,
         showAuthenticationRestrictions: <Boolean>,
         filter: <document>
      } )
      
      

   .. list-table::
      :header-rows: 1
      :widths: 20 20 80
   
      * - Parameter
        - Type
        - Description
   
      * - ``username``
        - string
        - The name of the user for which to retrieve information.

      * - ``args``
        - document
        - Optional. A document specifying additional arguments.

   The ``args`` document supports the following fields:

   .. list-table::
      :header-rows: 1
      :widths: 20 20 80
   
      * - Field
        - Type
        - Description
   
      * - ``showCredentials``
        - boolean
        - Optional. Set to ``true`` to display the user's password
          hash.
          
          By default, this field is ``false``.

      * - ``showCustomData``
        - boolean
        - Optional. Set to ``false`` to omit the user's ``customData``
          from the output.
          
          By default, this field is ``true``.

          .. versionadded:: 5.2

      * - ``showPrivileges``
        - boolean
        - Optional. Set to ``true`` to show the user's full set
          of privileges, including expanded information for the
          inherited roles.
          
          By default, this field is ``false``.
          
          If viewing all users, you cannot specify this field.

      * - ``showAuthenticationRestrictions``
        - boolean
        - Optional. Set to ``true`` to show the user's
          authentication restrictions.
          
          By default, this field is ``false``.
    
          If viewing all users, you cannot specify this field.

      * - ``filter``
        - document
        - Optional. A document that specifies :pipeline:`$match` stage
          conditions to return information for users that match the
          filter conditions.

   :method:`db.getUser()` wraps the :dbcommand:`usersInfo: \<username\> <usersInfo>` command.
   
   For details on output, see :dbcommand:`usersInfo`.

Compatibility
-------------

This method is available in deployments hosted in the following
environments:

.. include:: /includes/fact-environments-no-atlas-support.rst

.. include:: /includes/fact-environments-onprem-only.rst

Required Access
---------------

.. include:: /includes/access-user-info.rst

Examples
--------

The following operations return information about an example
``appClient`` user in an ``accounts`` database:

.. code-block:: javascript

   use accounts
   db.getUser("appClient")

Example output:

.. code-block:: javascript
   :copyable: false

   {
      _id: 'accounts.appClient',
      userId: UUID("1c2fc1bf-c4dc-4a22-8b04-3971349ce0dc"),
      user: 'appClient',
      db: 'accounts',
      roles: [],
      mechanisms: [ 'SCRAM-SHA-1', 'SCRAM-SHA-256' ]
   }

Omit Custom Data from Output
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. versionadded:: 5.2

   To omit a user's custom data from the :method:`db.getUser()` output,
   set the ``showCustomData`` option to ``false``.

.. include:: /includes/fact-omit-custom-data-example-setup.rst

To retrieve the user but omit the custom data from the output, run
:method:`db.getUser()` with ``showCustomData`` set to ``false``:

.. code-block:: javascript

   db.getSiblingDB("products").getUser(
      "accountAdmin01",
      { showCustomData: false }
   )

Example output:

.. code-block:: javascript
   :copyable: false

   {
      _id: 'products.accountAdmin01',
      userId: UUID("0955afc1-303c-4683-a029-8e17dd5501f4"),
      user: 'accountAdmin01',
      db: 'products',
      roles: [ { role: 'readWrite', db: 'products' } ],
      mechanisms: [ 'SCRAM-SHA-1', 'SCRAM-SHA-256' ]
   }
