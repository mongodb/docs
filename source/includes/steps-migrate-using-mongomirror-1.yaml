title: "Set up MongoDB user in the source replica set."
level: 4
ref: mongomirror-user-source
content: |

   If the source replica set requires authentication, you must specify
   a source MongoDB user that has privileges to read any database,
   including the ``local`` database. For example, a user with
   :manual:`backup </reference/built-in-roles/#backup>` role provides
   these privileges.

   If the source replica set requires authentication and no such user
   exists, create the user in your source MongoDB replica set. For
   example, if the source replica set uses SCRAM-SHA1 authentication:

   #. Connect a :binary:`mongo <bin.mongo>` shell to the primary.

   #. Switch to the ``admin`` database and create a user with the  ``backup`` role.

      .. class:: copyable-code
      .. code-block:: javascript

         use admin
         db.createUser( { user: "mySourceUser", pwd: "mySourceP@$$word", roles: [ "backup" ] } )
---
title: "Set up MongoDB user in the target |service| cluster."
level: 4
ref: mongomirror-user-target
content: |

   You must specify an |service| MongoDB user with the
   :authrole:`Atlas admin` role to run :binary:`~bin.mongomirror`.
   See :ref:`add-mongodb-users` for documentation on creating an 
   |service| MongoDB user.

   If no such user exists, create the user:

   #. Go to :guilabel:`Clusters` view, select the :guilabel:`Security`
      tab, and then :guilabel:`Users`.

   #. Click :guilabel:`Add New User`.

   #. Add an :guilabel:`Atlas admin` user.
---
title: "Open the connect dialog." 
level: 4
ref: mongomirror-connect-dialog
content: |
   From the :guilabel:`Clusters` view, click :guilabel:`Connect` for
   the |service| cluster into which you want to migrate data.
---
title: "Update IP Whitelist."
level: 4
ref: connect-details
content: |

  If the host where you will run :binary:`~bin.mongomirror` is not in the
  :doc:`IP Whitelist </security-whitelist>`, update the list. You can
  specify either:
     
  - The public IP address of the server on which :binary:`~bin.mongomirror` will run, or
  
  - If set up for VPC peering, either the peer's VPC CIDR block (or a
    subnet) or the peer VPC's Security Group.
---
title: "Copy the target cluster host information."
level: 4
ref: connect
content: |

   #. Click :guilabel:`Connect Your Application`.
   #. Click :guilabel:`I am using driver 3.4 or earlier`. 
   #. Copy the connection string and paste into your preferred text editor.
   
   The connection string should look similar to the following example. 
   This example has been broken into multiple lines for readability:

   .. code-block:: shell
      :copyable: false

      mongodb://<username>:<PASSWORD>@
        00.foo.mongodb.net:27017,
        01.foo.mongodb.net:27017,
        02.foo.mongodb.net:27017/test?
        ssl=true&replicaSet=myAtlasRS&authSource=admin

   Copy the value of ``replicaSet`` and append the host list as comma
   separated values, similar to the following:

   .. code-block:: shell
      :copyable: false

      myAtlasRS/00.foo.mongodb.net:27017,01.foo.mongodb.net:27017,02.foo.mongodb.net:27017

   Use this value for the :option:`--destination <--destination>` option
   in the next step.
 
---
title: "Start ``mongomirror``."
level: 4
ref: mongomirror-run
pre: |

   Start :binary:`~bin.mongomirror` with the following options:

   - :option:`--host <--host>` set to the host string of the source cluster.
   - :option:`--ssl <--ssl>` set to true if the source cluster has TLS/SSL enabled.
   - :option:`--username <--username>` to the source cluster username created for this procedure.
   - :option:`--password <--password>` to the password for the source cluster username.
   - :option:`--authenticationDatabase <--authenticationDatabase>` to the database in the source cluster where the username specified to `--username` was created.
   - :option:`--destination <--destination>` to the |service| cluster host string.
   - :option:`--destinationUsername <--destinationUsername>` to the target |service| cluster username.
   - :option:`--destinationPassword <--destinationPassword>` to the password for the target |service| cluster username.

   Your final command should resemble the following example:

action:
   copyable: true
   language: sh
   code: |
      mongomirror --host "MySourceRS/host1.example.net:27017,host2.example.net:27017,host3.example.net:27017" \
         --ssl "true" \
         --username "mySourceUser" \
         --password "mySourceP@$$word" \
         --authenticationDatabase "admin" \
         --destination "myAtlasRS/00.foo.mongodb.net:27017,01.foo.mongodb.net:27017,02.foo.mongodb.net:27017" \
         --destinationUsername "myAtlasAdminUser" \
         --destinationPassword "atlasPassword"
post: |
   See :ref:`mongomirror-options` for more :binary:`~bin.mongomirror`
   options.
...
