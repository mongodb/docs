title:
  text: Create an index on a single field.
  character: "`"
stepnum: 1
pre: |
  Create an ascending index on the ``ord_date`` field of the ``orders``
  collection. Such an index would support the queries found in
  :doc:`/tutorial/query-matching-with-operator`.
ref: ""
action:
  language: javascript
  code: |
     db.orders.ensureIndex( { ord_date: 1 } )
post: |
  The :method:`~db.collection.ensureIndex()` only creates an index if
  the index does not exist.
---
title:
  text: Review the returned object.
  character: "`"
stepnum: 2
ref: ""
pre: |
  The method returns a document with the status of the operation.
action:
  language: javascript
  code: |
      {
         "createdCollectionAutomatically" : false,
         "numIndexesBefore" : 1,
         "numIndexesAfter" : 2,
         "ok" : 1
      }
post: |
  The ``createdCollectionAutomatically`` indicates if the operation
  created a collection. If a collection does not exist, MongoDB
  creates the collection as part of the indexing
  operation.

  The ``numIndexesBefore`` indicates the number of indexes existing
  before the method call. In the example, the ``1`` existing index
  refers to the ``_id`` index which MongoDB automatically creates upon
  the creation of the collection.

  The ``numIndexesAfter`` indicates the number of indexes existing
  after the method call. If the index has been successfully created,
  this number should be one greater than ``numIndexesBefore``.

  The ``ok`` indicates that the method did not encounter any errors.
---
title:
  text: Create an index on a field in an embedded document.
  character: "`"
ref: ""
stepnum: 3
pre: |
  To create an index on a field within an embedded document, use the
  :term:`dot notation`. Dot notation requires quotes around the dotted
  field name.

  The following example creates an index on the ``location`` field in
  the ``shipping`` embedded document.
action:
  language: javascript
  code: |
     db.orders.ensureIndex( { "shipping.location": 1 } )
---
title:
  text: Review the returned object.
  character: "`"
stepnum: 4
ref: ""
pre: |
  The method returns a document with the status of the operation.
action:
  language: javascript
  code: |
      {
         "createdCollectionAutomatically" : false,
         "numIndexesBefore" : 2,
         "numIndexesAfter" : 3,
         "ok" : 1
      }

post: |
  The ``numIndexesAfter`` of ``3`` versus the ``numIndexesBefore`` of
  ``2`` indicates that the method created a new index.
---
title:
  text: Attempt to recreate an existing index.
  character: "`"
ref: ""
stepnum: 5
pre: |
  The :method:`~db.collection.ensureIndex()` only creates an index if
  the index does not exist. If an index already exist with the exact
  same index specifications, the method does not create another index.

  Attempt to recreate the index from the previous step.
action:
   language: javascript
   code: |
      db.orders.ensureIndex( { "shipping.location": 1 } )
---
title:
  text: Review the returned object.
  character: "`"
stepnum: 6
ref: ""
pre: |
  The method returns a document with the status of the operation.
action:
  language: javascript
  code: |
    { "numIndexesBefore" : 3, "note" : "all indexes already exist", "ok" : 1 }
post: |
  The ``note`` contains a message stating that ``"all indexes already
  exist"``, indicating that the method did not create another index.
...
