# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: 2014-04-08 18:34+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/tutorial/change-oplog-size.txt:3
msgid "Change the Size of the Oplog"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:15
msgid ""
"This procedure changes the size of the oplog on each member of a replica "
"set using the :dbcommand:`replSetResizeOplog` command, starting with the "
":term:`secondary` members before proceeding to the :term:`primary`."
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:22
msgid ""
"You can only run :dbcommand:`replSetResizeOplog` on replica set member's "
"running with the :ref:`Wired Tiger storage engine <storage-wiredtiger>`."
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:26
msgid ""
"Perform these steps on each :term:`secondary` replica set member *first*."
" Once you have changed the oplog size for all secondary members, perform "
"these steps on the :term:`primary`."
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:31
msgid "A. Connect to the replica set member"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:33
msgid "Connect to the replica set member using the :binary:`~bin.mongo` shell:"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:41
msgid ""
"If the replica set enforces :ref:`authentication <authentication>`, you "
"must authenticate as a user with privileges to modify the ``local`` "
"database, such as the :authrole:`clusterManager` or "
":authrole:`clusterAdmin` role."
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:47
msgid "B. (Optional) Verify the current size of the oplog"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:49
msgid ""
"To view the current size of the oplog, switch to the ``local`` database "
"and run :method:`db.collection.stats()` against the ``oplog.rs`` "
"collection. :method:`~db.collection.stats()` displays the oplog size as "
":data:`~collStats.maxSize`."
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:60
msgid "The ``maxSize`` field displays the collection size in bytes."
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:63
msgid "C. Change the oplog size of the replica set member"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:65
msgid ""
"To change the size, run the :dbcommand:`replSetResizeOplog` passing the "
"desired size in megabytes as the ``size`` parameter. The specified size "
"must be greater than ``990``, or 990 megabytes."
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:69
msgid ""
"The following operation changes the oplog size of the replica set member "
"to 16 gigabytes, or 16000 megabytes."
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:79
msgid "D. (Optional) Compact ``oplog.rs`` to reclaim disk space"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:81
msgid ""
"Reducing the size of the oplog does *not* automatically reclaim the disk "
"space allocated to the original oplog size. You must run "
":dbcommand:`compact` against the ``oplog.rs`` collection in the ``local``"
" database to reclaim disk space. There are no benefits to running "
"``compact`` on the ``oplog.rs`` collection after increasing the oplog "
"size."
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:90
msgid ""
"The replica set member cannot replicate oplog entries while the "
"``compact`` operation is ongoing. While ``compact`` runs, the member may "
"fall so far behind the primary that it cannot resume replication. The "
"likelihood of a member becoming \"stale\" during the ``compact`` "
"procedure increases with cluster write throughput, and may be further "
"exacerbated by the reduced oplog size."
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:97
msgid ""
"Consider scheduling a maintenance window during which writes are "
"throttled or stopped to mitigate the risk of the member becoming "
"\"stale\" and requiring a :ref:`full resync <resync-replica-member>`."
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:101
msgid ""
"Do **not** run ``compact`` against the primary replica set member. "
"Connect a :binary:`mongo <bin.mongo>` shell to the primary and run "
":method:`rs.stepDown()`. If successful, the primary steps down and closes"
" all open connections. Reconnect the :binary:`mongo <bin.mongo>` shell to"
" the member and run the ``compact`` command on the member."
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:107
msgid ""
"The following operation runs the ``compact`` command against the "
"``oplog.rs`` collection:"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:115
msgid ""
"For clusters enforcing :ref:`authentication <authentication>`, "
"authenticate as a user with the :authaction:`compact` privilege action on"
" the ``local`` database and the ``oplog.rs`` collection. For complete "
"documentation on :dbcommand:`compact` authentication requirements, see "
":ref:`compact-authentication`."
msgstr ""

# 42c2bbed9ecc4447bb7cd234049431c3
#~ msgid ""
#~ "The :term:`oplog` exists internally as a"
#~ " :term:`capped collection`, so you cannot"
#~ " modify its size in the course "
#~ "of normal operations. In most cases "
#~ "the :ref:`default oplog size <replica-"
#~ "set-oplog-sizing>` is an acceptable "
#~ "size; however, in some situations you"
#~ " may need a larger or smaller "
#~ "oplog. For example, you might need "
#~ "to change the oplog size if your"
#~ " applications perform large numbers of "
#~ "multi-updates or deletes in short "
#~ "periods of time."
#~ msgstr ""

# 4fe4208f5a114d7e8888ecf5fc042194
#~ msgid ""
#~ "This tutorial describes how to resize"
#~ " the oplog. For a detailed "
#~ "explanation of oplog sizing, see :ref"
#~ ":`replica-set-oplog-sizing`.  For details"
#~ " how oplog size affects :term:`delayed "
#~ "members <delayed member>` and affects "
#~ ":term:`replication lag`, see :ref:`replica-"
#~ "set-delayed-members`."
#~ msgstr ""

# 4185f0b211d84a7a975b3c669b2f0a2d
#~ msgid "Overview"
#~ msgstr ""

# 8e2661847569435483ffd538bc8e42da
#~ msgid ""
#~ "To change the size of the oplog,"
#~ " you must perform maintenance on each"
#~ " member of the replica set in "
#~ "turn. The procedure requires: stopping "
#~ "the :program:`mongod` instance and starting"
#~ " as a standalone instance, modifying "
#~ "the oplog size, and restarting the "
#~ "member."
#~ msgstr ""

# 64fd1b9b9f2a41e886ee1c7f6a504262
#~ msgid ""
#~ "Always start rolling replica set "
#~ "maintenance with the secondaries, and "
#~ "finish with the maintenance on primary"
#~ " member."
#~ msgstr ""

# 0c53e380c7ef4b05afd5224e29b5f829
#~ msgid "Procedure"
#~ msgstr ""

# e4b18bc0b7a94c0784d71f05e122186c
#~ msgid "Restart the member in standalone mode."
#~ msgstr ""

# 581bb6c475344a1a9dc0e4f20ce5ec12
#~ msgid "Tip"
#~ msgstr ""

# af47d4e485e942a39818f1ae6cf70593
#~ msgid ""
#~ "Recreate the oplog with the new "
#~ "size and with an old oplog entry"
#~ " as a seed."
#~ msgstr ""

# e33116cd093641768f023f388b4c0da1
#~ msgid "Restart the :program:`mongod` instance as a member of the replica set."
#~ msgstr ""

# 7860b1842b254a7d9b94d7a21a37d512
#~ msgid "Restart a Secondary in Standalone Mode on a Different Port"
#~ msgstr ""

# 089ed1bdb11f45cda555eb979cf4b372
#~ msgid ""
#~ "Shut down the :program:`mongod` instance "
#~ "for one of the non-primary members"
#~ " of your replica set. For example,"
#~ " to shut down, use the "
#~ ":method:`db.shutdownServer()` method:"
#~ msgstr ""

# 2e9bb405a6dc4f32847cb1e6f2f94484
#~ msgid ""
#~ "Restart this :program:`mongod` as a "
#~ "standalone instance running on a "
#~ "different port and *without* the "
#~ ":option:`--replSet <mongod --replSet>` parameter."
#~ " Use a command similar to the "
#~ "following:"
#~ msgstr ""

# c6d8c236b7a84fbbad7a858a61b70b95
#~ msgid "Create a Backup of the Oplog (Optional)"
#~ msgstr ""

# 7e99835d2646409a9018f8e8cef46247
#~ msgid ""
#~ "Optionally, backup the existing oplog on"
#~ " the standalone instance, as in the"
#~ " following example:"
#~ msgstr ""

# 6c7adeb464074ebe9ccf5e1fa9521918
#~ msgid "Recreate the Oplog with a New Size and a Seed Entry"
#~ msgstr ""

# a21e4b1fc1fd46d0931a90f8fa8c2b31
#~ msgid ""
#~ "Save the last entry from the "
#~ "oplog. For example, connect to the "
#~ "instance using the :program:`mongo` shell, "
#~ "and enter the following command to "
#~ "switch to the ``local`` database:"
#~ msgstr ""

# 32a14d43284b4282a5c537a5ce450c4a
#~ msgid ""
#~ "In :program:`mongo` shell scripts you "
#~ "can use the following operation to "
#~ "set the ``db`` object:"
#~ msgstr ""

# 6164247f795b45de9ed6bf23346f3879
#~ msgid ""
#~ "Use the :method:`db.collection.save()` method "
#~ "and a sort on reverse :term:`natural "
#~ "order` to find the last entry and"
#~ " save it to a temporary collection:"
#~ msgstr ""

# b45046adef9e4207bd6e2bac4212367e
#~ msgid "To see this oplog entry, use the following operation:"
#~ msgstr ""

# df38b1fa47db4336b410bd05e858f01b
#~ msgid "Remove the Existing Oplog Collection"
#~ msgstr ""

# d2d59d3d43ea402891f4cf5f6ce44a98
#~ msgid ""
#~ "Drop the old ``oplog.rs`` collection in"
#~ " the ``local`` database. Use the "
#~ "following command:"
#~ msgstr ""

# c8962664a6914a95a9241f9bb0adfa5c
#~ msgid "This returns ``true`` in the shell."
#~ msgstr ""

# cdf40c260a034ae1b5506b9fb742386b
#~ msgid "Create a New Oplog"
#~ msgstr ""

# 0b2b46ebd86842e9b22d7cee10f68431
#~ msgid ""
#~ "Use the :dbcommand:`create` command to "
#~ "create a new oplog of a different"
#~ " size. Specify the ``size`` argument "
#~ "in bytes. A value of ``2 * "
#~ "1024 * 1024 * 1024`` will create"
#~ " a new oplog that's 2 gigabytes:"
#~ msgstr ""

# be1efa71aba7476e815ceabc2de6d70a
#~ msgid "Upon success, this command returns the following status:"
#~ msgstr ""

# a8d01127c27b46b4a76484ed963fdb94
#~ msgid "Insert the Last Entry of the Old Oplog into the New Oplog"
#~ msgstr ""

# ffadaa0eb15f438a8209e39fd7ca8a97
#~ msgid ""
#~ "Insert the previously saved last entry"
#~ " from the old oplog into the "
#~ "new oplog. For example:"
#~ msgstr ""

# a239a9541c4c4b01af7e5f3d09055f62
#~ msgid "To confirm the entry is in the new oplog, use the following operation:"
#~ msgstr ""

# de521f17cd3d451e933b950232eb1bf7
#~ msgid "Restart the Member"
#~ msgstr ""

# 788c8ca41f80468686c9acab1605fc63
#~ msgid ""
#~ "Restart the :program:`mongod` as a "
#~ "member of the replica set on its"
#~ " usual port. For example:"
#~ msgstr ""

# 878d1bc9032d41088742bdd7b0371668
#~ msgid ""
#~ "The replica set member will recover "
#~ "and \"catch up\" before it is "
#~ "eligible for election to primary."
#~ msgstr ""

# 36a349261dd848b1b4ea5ef88f7239af
#~ msgid "Repeat Process for all Members that may become Primary"
#~ msgstr ""

# 25bf387c2417411897e3e997a7f8342e
#~ msgid ""
#~ "Repeat this procedure for all members"
#~ " you want to change the size of"
#~ " the oplog. Repeat the procedure for"
#~ " the primary as part of the "
#~ "following step."
#~ msgstr ""

# dbd845aab54449f9b8cd582c4ec702d1
#~ msgid "Change the Size of the Oplog on the Primary"
#~ msgstr ""

# c4f89f6ab3da4e0ea269b922e218311a
#~ msgid ""
#~ "To finish the rolling maintenance "
#~ "operation, step down the primary with"
#~ " the :method:`rs.stepDown()` method and "
#~ "repeat the oplog resizing procedure "
#~ "above."
#~ msgstr ""

#~ msgid ""
#~ "Ensure that the ``temp`` temporary "
#~ "collection is empty by dropping the "
#~ "collection:"
#~ msgstr ""

