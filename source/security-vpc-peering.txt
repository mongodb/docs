.. _vpc-peering:

===================================
Set up a Network Peering Connection
===================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. include:: /includes/fact-atlas-free-tier-limits.rst

|service| supports :wikipedia:`Network Peering
</Virtual_private_cloud>` connections for |aws|, |gcp|, and
|azure|-backed and multi-cloud clusters.

.. important::

   To set up a Network Peering connection, you must have either the
   :authrole:`Project Owner` or :authrole:`Organization Owner` role.

.. _create-network-peer-connection:

Configure an |service| Network Peering Connection
-------------------------------------------------

To configure |service| Network Peering for a cluster, perform the
procedure on the tab corresponding to your cluster's cloud provider.
You also configure the |service| |vpc| |cidr| during this procedure.

To configure the |service| |cidr| without configuring Network Peering,
see :doc:`Create a New Network Peering Container </reference/api/vpc-create-container>`.
You must use the |api| to configure the |service| |cidr| without
Network Peering.

.. tabs-cloud-providers::

   .. tab::
      :tabid: aws

      AWS VPC Peering Prerequisites
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      .. include:: /includes/fact-aws-vpc-prereqs.rst

      Configure Network Peering for an AWS-backed Cluster
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      To configure |service| |vpc| Peering for an |aws|\-backed
      cluster:

      .. include:: /includes/steps/vpc-aws.rst

      You must add your |vpc| |cidr| block address (or subset)
      or the Security Group associated with the peer |vpc| to
      the :ref:`whitelist <access-list>` before your new |vpc|
      peer can connect to your |service| cluster.

      .. seealso::

         `CIDR Subnet Selection for MongoDB Atlas <https://www.mongodb.com/blog/post/cidr-subnet-selection-for-mongodb-atlas>`_

      .. note:: Using Custom DNS

         Effective 31 March 2020, |service| has removed the
         connection limitations for all existing and new
         |aws| clusters using custom |dns|.

         .. seealso::
   
            :ref:`FAQ on changes to AWS network peering <atlas_20200331>`.

   .. tab::
      :tabid: gcp

      .. note::

         Effective 31 March 2020, |service| has removed the
         **Peering-Only Mode** limitations for all existing and new
         |gcp| clusters. To learn how to use these new
         features, see the :ref:`FAQ on changes to GCP network peering <atlas-faq-azure-gcp-peering-only>`

      Configure VPC Peering for a GCP-backed Cluster
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      To configure |service| |vpc| Peering for a |gcp|\-backed
      cluster:

      .. include:: /includes/steps/vpc-gcp.rst

      You must add your |vpc| |cidr| block address (or subset)
      associated with the peer |vpc| to the
      :ref:`IP access list <access-list>` before your new |vpc| peer can connect to your |service| cluster.

      .. seealso::

         :gcp:`Auto mode IP ranges </vpc/docs/vpc#ip-ranges>`.

   .. tab::
      :tabid: azure

      .. note::

         Effective 31 March 2020, |service| has removed the
         **Peering-Only Mode** limitations for all existing and new
         Azure clusters. To learn how to use these new features, see
         the :ref:`FAQ on changes to Azure network peering <atlas-faq-azure-gcp-peering-only>`

      Azure Roles Required to Configure a Network Peering Connection
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      To learn the |azure| roles that you need to create a Network
      Peering connection, see the :azure:`Azure documentation
      </virtual-network/virtual-network-manage-peering#permissions>`.

      Configure Network Peering for an Azure-backed Cluster
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      To configure Network Peering for an |azure|-backed cluster:

      .. include:: /includes/steps/network-peering-azure.rst

      You must add the |cidr| block address (or subset)
      associated with the peer VNet to the
      :ref:`whitelist <access-list>` before your network peer
      can connect to your |service| cluster.

Network Peering Architectures
------------------------------

Multiple cloud-hosted applications might need to connect securely to the
same |service| project.

Network Peering between an |service| VPC and Two Virtual Networks with Identical CIDR Blocks
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Consider a case where two applications use virtual
networks (VPC, VNet) with identical IP |cidr| blocks. You want both applications
to securely connect to the same |service| cluster via VPC peering. To achieve this,
create one network peering connection between each application's virtual network
and your |service| cluster.

Cloud provider virtual networks canâ€™t peer to each other if they have
identical CIDR blocks. However, you can peer each of the applications' virtual networks
with the |service| virtual network if the |service| virtual network includes two 
non-overlapping |cidr| blocks. Configure each of the peering connections to have
non-overlapping route-back |cidr| blocks in the |service| virtual network.

Follow this general process:

1. Before you deploy any clusters, :ref:`create a network peering 
   connection <create-network-peer-connection>`
   for each virtual network that you want to peer with |service|. You
   do this by creating a |cidr| block in the |service| virtual network
   for each application's virtual network. 

#. In the virtual network's configuration for your cloud provider, 
   establish routing between each of your application's virtual networks
   and their respective |service| CIDR blocks. 

#. Deploy your |service| cluster.

.. example::
   
   Consider two applications in the same |aws| account in the same region. 
   Each application has its own |vpc|. The |vpc|\s have identical |cidr| 
   blocks. These VPCs can't peer with each other. You must configure each 
   application's |vpc| as a peer to the |service| |vpc|.
   
   .. list-table:: 
      :header-rows: 1
      :widths: 25 25 25
   
      * - Application's VPC name
        - CIDR block
        - Subnet
      * - ``app-tier-vpc-1``
        - 10.4.0.0/16
        - ``subnet1``: 10.5.0.0./16
      * - ``app-tier-vpc-2``
        - 10.4.0.0/16
        - ``subnet2``: 10.6.0.0/16

   To peer each application's |vpc| to the |service| VPC before you deploy 
   your |service| cluster:

   1. Create a network peering connection to peer |service| with your 
      first application's |vpc|.

      a. Click the :guilabel:`Peering` tab.
   
      #. Select :guilabel:`Peering Connection`.
   
      #. Select :guilabel:`AWS` and click :guilabel:`Next`.
      
      #. Complete the |aws| |vpc| fields and enter details for the first
         application's |vpc|:
         
         - :guilabel:`Account ID`

         - :guilabel:`VPC ID`

         - :guilabel:`VPC CIDR`

         - :guilabel:`Application VPC Region`.
        
      #. Type the first |cidr| block, **10.5.0.0/24**, into the
         :guilabel:`VPC CIDR` field in the :guilabel:`Atlas VPC`
         section.
         
      #. Click :guilabel:`Initiate Peering`.

   #. Create a network peering connection to peer |service| with your 
      second application's |vpc|.

      a. Click the :guilabel:`Peering` tab.
   
      #. Select :guilabel:`Peering Connection`.
   
      #. Select :guilabel:`AWS` and click :guilabel:`Next`.
    
      #. Complete the |aws| |vpc| fields and enter details for the second
         application's |vpc|:

         - :guilabel:`Account ID`

         - :guilabel:`VPC ID`

         - :guilabel:`VPC CIDR`

         - :guilabel:`Application VPC Region`.
      
      #. Type the second |cidr| block, **10.6.0.0/24**, into the
         :guilabel:`VPC CIDR` field in the :guilabel:`Atlas VPC`
         section.
      
      #. Click :guilabel:`Initiate Peering`.
      
   #. In |aws|, configure each of your application's |vpc|\s to route 
      back to their respective |cidr| blocks in |service|. For information,
      see :aws:`Updating your route tables for a VPC peering connection </vpc/latest/peering/vpc-peering-routing.html>`. 

      - ``app-vpc-1`` with CIDR 10.4.0.0/16 routes back to ``subnet1`` 
        in the CIDR **10.5.0.0/24**
      - ``app-vpc-2`` with CIDR 10.4.0.0/16 routes back to ``subnet2``
        in the CIDR **10.6.0.0/24**
     
   When complete, the routes for ``app-vpc-1`` and ``app-vpc-2``
   should match the following table:

   .. list-table:: 
      :header-rows: 1
      :widths: 25 25 50

      * - Network
        - Destination
        - Origin
      * - ``app-vpc-1``
        - 10.4.0.0/16
        - local
      * - 
        - 10.5.0.0/16
        - peer to the |service| |vpc|
      * - ``app-vpc-2``
        - 10.4.0.0/16
        - local
      * - 
        - 10.6.0.0/16
        - peer to the |service| |vpc|   

