.. _arch-center-examples:

=========================================
Authorization and Authentication Examples
=========================================

.. default-domain:: mongodb

.. facet::
   :name: genre
   :values: reference

.. meta:   
   :description: Learn about the different authorization and authentication mechanisms that Atlas supports.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: onecol


The following examples show how to implement our recommendations for authentication 
and authorization for different access types. The examples show how to implement 
the recommendations using both the |service| CLI and Terraform.

To learn about Terraform, see :ref:`getting-started-terraform` and the
`MongoDB Atlas Provider Terraform docs <https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs>`__. 

.. tabs::

   .. tab:: CLI
      :tabid: cli

      |service| UI
      ~~~~~~~~~~~~

      For access to the |service| UI:
      
      - Implement :atlas:`{+ip-access-list+}s </security/ip-access-list/>`. 
        For example, 

        .. code-block::

           atlas organizations apiKeys accessLists create --apiKey <API_KEY_ID> --ip <IP_ADDRESS>
 
      - Implement :ref:`Federated Authentication <arch-center-federated_auth>` or 
        |service| credentials and :ref:`Multi-factor Authentication (MFA) <arch-center-mfa>`.

        To set up Federated Auth, use the 
        :atlas:`atlas-federatedAuthentication </command/atlas-federatedAuthentication/>` 
        and related commands. You can then use the :atlas:`atlas-users-invite </command/atlas-users-invite/>` 
        command to invite users to your organization and projects.

        To get started, use the following command: 

        .. code-block::

           atlas federatedAuthentication --help

        .. note::

           For users that authenticate with SSO, you will also need to configure 
           the SSO Identity Provider. 

        For more information, see :ref:`atlas-federated-authentication`.

      Database Access
      ~~~~~~~~~~~~~~~

      Workforce (Human) Access
      `````````````````````````

      For workforce database access:

      - Use :atlas:`Workforce Identity Federation </workforce-oidc/>`.

      - Use the :atlascli:`atlas-dbusers-certs-create <command/atlas-dbusers-certs-create>`
        command to create Atlas-managed MFA (Multi-Factor Authentication)
        :atlas:`X.509 client </security-self-managed-x509>`  certificates.

        .. note::

           To use self-managed certificates, you must first configure 
           :atlas:`X.509 </operator/v2.7/ak8so-x509/>`:

           .. code-block::

              atlas dbusers certs create --username <USERNAME> --projectId <PROJECT_ID> [--monthsUntilExpiration <MONTHS>] [--output json]


      Workload (Machine) Access
      `````````````````````````

      For workload (machine) access, use :atlas:`Workload Identity Federation </workload-oidc/>`.


      API Access
      ~~~~~~~~~~

      Use the :atlas:`serviceAccounts </command/atlas-api-serviceAccounts/>` 
      and related commands to create and manage Service Accounts.
      For example, 

      .. code-block:: shell

         atlas api serviceAccounts createServiceAccount [options]

      For development and test environments, you can also use 
      :atlas:`API keys </command/atlas-projects-apikeys-create/>`. For example, 

      .. code-block:: shell

         atlas organizations apiKeys create [options]


   .. tab:: Terraform
      :tabid: Terraform

      The following examples demonstrate how to configure
      authentication and authorization. Before you can create
      resources with Terraform, you must: 

      - :ref:`Create your paying organization <configure-paying-org>` and 
        :ref:`create an API key <atlas-admin-api-access>` for the paying 
        organization. Store your API key as environment variables by running the
        following command in the terminal: 

        .. code-block::

           export MONGODB_ATLAS_PUBLIC_KEY="<insert your public key here>"
           export MONGODB_ATLAS_PRIVATE_KEY="<insert your private key here>"

      - `Install Terraform <https://developer.hashicorp.com/terraform/tutorials/aws-get-started/install-cli>`__

      Common Files 
      ~~~~~~~~~~~~

      You must create the following files for each example. Place
      the files for each example in their own directory. Change
      the IDs and names to use your values. Then run the commands
      to initialize Terraform, view the Terraform plan, and apply
      the changes. 

      azure.tf 
      ````````

      .. include:: /includes/examples/terraform/tf-example-auth-tfazure.rst

      variables.tf 
      ````````````

      .. include:: /includes/examples/terraform/staging-prod/tf-example-auth-variables-stagingprod.rst

      terraform.tfvars 
      ````````````````
      .. include:: /includes/examples/terraform/staging-prod/tf-example-auth-tfvars-stagingprod.rst

      outputs.tf 
      ``````````

      .. include:: /includes/examples/terraform/staging-prod/tf-example-auth-tfoutputs-stagingprod.rst

      Configure Federated Settings for Identity Provider 
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      Use the following to set up an :abbr:`OIDC (OpenID Connect)`
      federated identity provider in |service|, for using it with
      |azure|. It allows access by using OIDC tokens issued by |azure|
      Active Directory. 

      .. include:: /includes/examples/terraform/staging-prod/tf-example-auth-oidc-stagingprod.rst

      Use the following to create an :abbr:`OIDC (OpenID Connect)`
      federated authentication user. 

      .. include:: /includes/examples/terraform/staging-prod/tf-example-auth-create-oidc-user-stagingprod.rst

      Configure Custom Role 
      ~~~~~~~~~~~~~~~~~~~~~

      Use the following to create a custom role named ``my_custom_role``
      which allows update, add, and delete operations on any collection
      in the database named ``myDb``.

      .. include:: /includes/examples/terraform/staging-prod/tf-example-auth-create-custom-role-stagingprod.rst


.. include:: /includes/complete-examples-terraform.rst 


For an example of an |service| project with the |service| role assigned
to a specific group, see :ref:`Examples <arch-center-hierarchy>`.
