=========
rolesInfo
=========

.. default-domain:: mongodb

Definition
----------

.. dbcommand:: rolesInfo

   Returns information for the specified role(s).

   The command has the following fields:

   .. include:: /reference/command/rolesInfo-field.rst

To specify a single role, specify the role by a document that includes the
role's name and database:

.. code-block:: javascript
 
   rolesInfo: { role: "<rolename>", db: "<database>" }

Alternately, if the role exists in the database on which the command runs,
you can instead specify the role just by its name:

.. code-block:: javascript
 
   rolesInfo: "<rolename>"

To specify multiple roles, specify an array of roles. Specify each role in
the array as a document or string. Use a string only if the role exists on
the database on which the command runs:

.. code-block:: javascript

   rolesInfo: [ "<rolename1>", { role: "<rolename2>", db: "<database>" }, { role: "<rolename3>", db: "<database>" }, ... ]

To specify all roles in the database on which the command runs, specify
``1``:

.. code-block:: javascript

   rolesInfo: 1

Required Access
---------------

.. include:: /includes/access-roles-info.rst

Examples
--------

View Information for a Single Role
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following command returns the role inheritance information for the
role ``associate`` defined in the ``products`` database:

.. code-block:: javascript

   db.runCommand( { rolesInfo: { role: "associate", db: "products" } } )

If the :dbcommand:`rolesInfo` command is run on the ``products``
database, you can specify the role by its name only, as in:

.. code-block:: javascript

   db.getSiblingDB("products"). runCommand( { rolesInfo: "associate" } )

The following command returns *both* the role inheritance and the
privileges for the role ``associate`` defined in the ``products``
database:

.. code-block:: javascript

   db.runCommand( { rolesInfo: { role: "associate", db: "products" },
                    showPrivileges: true
                } )

View Information for Several Roles
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To view information for several roles, use an array of roles:

.. code-block:: javascript

   db.runCommand( { rolesInfo: [
                                 { role: "associate", db: "products" },
                                 { role: "manager", db: "resources" },
                               ]
                } )

To return *both* the role inheritance and the privileges for the roles,
include the showPrivileges field:

.. code-block:: javascript

   db.runCommand( { rolesInfo: [
                                 { role: "associate", db: "products" },
                                 { role: "manager", db: "resources" },
                               ],
                    showPrivileges: true
                } )

View All Roles for a Database
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To view all roles defined on the database the command is run, use a
command document that resembles the following:

.. code-block:: javascript

    db.runCommand( { rolesInfo: 1 } )

When viewing all roles, you can also include the ``showPrivileges``
field in the command:

.. code-block:: javascript

    db.runCommand( { rolesInfo: 1, showPrivileges: 1 } )
