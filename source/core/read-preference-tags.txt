

.. _replica-set-read-preference-tag-sets:

========================
Read Preference Tag Sets
========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

If a replica set member or members are associated with
:rsconf:`~members[n].tags`, you can specify a tag set (array of tag
specification documents) in the read preference to target those members.

To :ref:`configure <replica-set-configuration-document>` a member with
tags, set :rsconf:`members[n].tags` to a document that contains the tag
name and value pairs. The value of the tags must be a string.

.. code-block:: javascript
   :copyable: false
   
   { "<tag1>": "<string1>", "<tag2>": "<string2>",... }

Then, you can include a tag set in the read preference to target tagged
members. A tag set is an array of tag specification documents, where
each tag specification document contains one or more tag/value pairs.

.. code-block:: javascript
   :copyable: false

   [ { "<tag1>": "<string1>", "<tag2>": "<string2>",... }, ... ]

To find replica set members, MongoDB tries each document in succession
until a match is found.  See :ref:`read-pref-order-matching` for details.

For example, if a secondary member has the following
:rsconf:`members[n].tags`:

.. code-block:: javascript

   { "region": "South", "datacenter": "A" }

Then, the following tags sets can direct read operations to the aforementioned
secondary (or other members with the same tags):
 
.. code-block:: javascript
   :copyable: false
   
   [ { "region": "South", "datacenter": "A" }, { } ]     // Find members with both tag values. If none are found, read from any eligible member.
   [ { "region": "South" }, { "datacenter": "A" }, { } ] // Find members with the specified region tag. Only if not found, then find members with the specified datacenter tag. If none are found, read from any eligible member.
   [ { "datacenter": "A" }, { "region": "South" }, { } ] // Find members with the specified datacenter tag. Only if not found, then find members with the specified region tag. If none are found, read from any eligible member.
   [ { "region": "South" }, { } ]                        // Find members with the specified region tag value. If none are found, read from any eligible member.
   [ { "datacenter": "A" }, { } ]                        // Find members with the specified datacenter tag value. If none are found, read from any eligible member.
   [ { } ]                                               // Find any eligible member.

.. _read-pref-order-matching:
.. _read-preference-tag-order-matching:

Order of Tag Matching
---------------------

If the tag set lists multiple documents, MongoDB tries each document in
succession until a match is found. Once a match is found, that tag
specification document is used to find all eligible matching members,
and the remaining tag specification documents are ignored. If no
members match any of the tag specification documents, the read
operation returns with an error.

.. tip::

   To avoid an error if no members match any of the tag specifications,
   you can add an empty document ``{ }`` as the last element of the tag
   set to read from any eligible member.

For example, consider the following tag set with three tag
specification documents:

.. code-block:: javascript
   :copyable: false

   [ { "region": "South", "datacenter": "A" },  { "rack": "rack-1" }, { } ]  

First, MongoDB tries to find members tagged with both ``"region":
"South"`` and ``"datacenter": "A"``.

.. code-block:: none
   :copyable: false

   { "region": "South", "datacenter": "A" }
      

- If a member is found, the remaining tag specification documents are
  not considered. Instead, MongoDB uses this tag specification document
  to find all eligible members.

- Else, MongoDB tries to find members with the tags specified in the
  second document

  .. code-block:: none
     :copyable: false

     { "rack": "rack-1" }

  - If a member is found tagged, the remaining tag specification
    document is not considered. Instead, MongoDB uses this tag
    specification document to find all eligible members.

  - Else, the third document is considered. 
  
    .. code-block:: none
       :copyable: false

       { }

    The empty document matches any eligible member.

Tag Set and Read Preference Modes
---------------------------------

Tags are not compatible with mode :readmode:`primary`, and in general,
only apply when :ref:`selecting <replica-set-read-preference-behavior-member-selection>`
a :term:`secondary` member of a set for a read operation. However, the
:readmode:`nearest` read mode, when combined with a tag set, selects
the matching member with the lowest network latency. This member may be a
primary or secondary.

.. list-table::
   :header-rows: 1
   :widths: 20 80

   * - Mode
     - Notes

   * - :readmode:`primaryPreferred`
     - Specified tag set only applies if selecting eligible secondaries.

   * - :readmode:`secondary`
     - Specified tag set always applies.

   * - :readmode:`secondaryPreferred`
     -  Specified tag set only applies if selecting eligible secondaries.

   * - :readmode:`nearest`

     -  Specified tag set applies whether selecting either primary or eligible secondaries.

For information on the interaction between the :ref:`modes
<replica-set-read-preference-modes>` and tag sets, refer to the
:ref:`specific read preference mode documentation
<replica-set-read-preference-modes>`.

For information on configuring tag sets, see the
:doc:`/tutorial/configure-replica-set-tag-sets` tutorial.
