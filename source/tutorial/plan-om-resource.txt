.. _plan-om-resource:

==============================
Plan Your Ops Manager Resource
==============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. include:: /includes/styles/corrections.rst

MongoDB |onprem-link| is an enterprise application that manages,
backs up, and monitors MongoDB deployments. With |onprem|, you can scale
and upgrade MongoDB, optimize queries, perform point-in-time restores,
receive performance alerts, and more. To easily manage and maintain
|onprem| and its underlying database, you can use the
|k8s-op| to run |onprem| as a container on |k8s|.

Before you deploy an |onprem| resource, make sure you read the
:ref:`considerations <om-rsrc-considerations>` and complete
the :ref:`prerequisites <om-rsrc-prereqs>`.

Architecture
------------

The |k8s-op-short| manages and monitors each ``MongoDBOpsManager``
:k8sdocs:`custom resource
</concepts/extend-kubernetes/api-extension/custom-resources/>` through a
:ref:`resource definition file <k8s-om-specification>` that you
:ref:`create <deploy-om-container>`. Every time you create or update a
resource definition, the |k8s-op-short| performs the following
reconciliation process: 

1. The |k8s-op-short| creates or updates the |k8s-statefulset| that runs
   the :ref:`mms-application-database`. The Application Database is
   always deployed as a :ref:`replica-set <app-db-topology>` with
   :ref:`SCRAM-SHA authentication <app-db-auth>` enabled. Each database
   |k8s-pod| runs an instance of the MongoDB Agent which is configured
   directly by the |k8s-op-short|. 

#. The |k8s-op-short| creates or updates the |k8s-statefulset| that runs
   the |onprem| |k8s-pods|. The |onprem| instance connects to the Application Database. 

#. The |k8s-op-short| ensures the |k8s-statefulset| for
   the :ref:`backup-daemon` is running unless :ref:`backup
   <om-rsrc-backup>` is disabled. The |k8s-statefulset| consists of a
   single |k8s-pod|. The Backup Daemon connects to the Application
   Database.

#. The |k8s-op-short| registers the :ref:`first user <om-first-user>`
   with the :authrole:`Global Owner` role and saves a public API key to a secret for later use. 

#. The |k8s-op-short| configures the Backup Daemon using
   |onprem| |api| according to the :opsmgrkube:`spec.backup.enabled`
   specification in the |onprem| :ref:`resource definition
   <k8s-om-specification>`.

.. _om-rsrc-considerations:

Considerations
--------------

Encryption Key
~~~~~~~~~~~~~~

The |k8s-op-short| generates an encryption key to protect
sensitive information in the :ref:`mms-application-database`. The
|k8s-op-short| saves this key in a |k8s-secret| in the same namespace as
the |onprem| resource. The |k8s-op-short| names the secret
``<om-resource-name>-gen-key``. 

If you remove the |onprem| resource, the key remains stored in the
secret on the |k8s| cluster. If you stored the Application Database in a
|k8s-pv| and you create another |onprem| resource with the same name,
the |k8s-op-short| reuses the secret. If you create an |onprem| resource
with a different name, then |k8s-op-short| creates a new secret and
Application Database, and the old secret isn't reused. 

Application Database
~~~~~~~~~~~~~~~~~~~~

.. _app-db-topology:

Topology
++++++++

When you create an instance of |onprem| through the |k8s-op-short|, the
:ref:`mms-application-database` is deployed as a :term:`replica set`.
You can't configure the Application Database as a :term:`standalone`
database or :term:`sharded cluster`. If you
have concerns about performance or size requirements for the Application
Database, contact `MongoDB Support
<https://support.mongodb.com/welcome>`__.  

.. _app-db-auth:

Authentication
++++++++++++++

The |k8s-op-short| enforces ``SCRAM-SHA-1``
:manual:`authentication </core/security-scram/#scram-mechanisms>` on the
Application Database. 

The |k8s-op-short| creates the database user which |onprem| uses to
connect to the Application Database. This database user has the
following attributes:

.. list-table::
   :widths: 30 70
   :stub-columns: 1

   * - Username
     - ``mongodb-ops-manager``

   * - Authentication Database
     - ``admin``
  
   * - Roles
     - | :authrole:`readWriteAnyDatabase`
       | :authrole:`dbAdminAnyDatabase`
       | :authrole:`clusterMonitor`

The |onprem| database user's name and roles cannot be modified. However,
you can set the database user's password by :ref:`creating a
secret <om-db-user-secret>` and can later update the password by editing
that secret. If you don't create a secret, or if you delete a previously
created secret, then the |k8s-op-short| automatically generates a password and stores it internally.

If you need to authenticate to the Application Database as a
different user:

1. Deploy the |onprem| resource 
2. :manual:`Add a new user </reference/method/db.createUser/>` to
   the database using the ``mongo`` shell.

.. _app-db-offline:

Offline Deployments
+++++++++++++++++++

The |k8s-op-short| bundles MongoDB Enterprise version {+bndl-version+}
with the :opsmgr:`Application Database
</core/system-overview/#application-database>` image to enable offline
deployments of |onprem| resources.  

To deploy |onprem| inside |k8s| without an Internet connection, omit the
:opsmgrkube:`spec.applicationDatabase.version` setting or leave the
value empty. 

When you upgrade the |k8s-op-short|, the Application
Database performs a rolling upgrade for new patch releases of MongoDB,
such as from ``4.2.2-ent`` to ``4.2.3-ent``. However, the Application
Database does not automatically upgrade between major versions,
such as from ``4.2.2-ent`` to ``4.4.0-ent``.

.. _om-rsrc-backup:

Backup
~~~~~~

|k8s-op-short| enables :ref:`mms-backup-functional-overview` by default.
The |k8s-op-short| deploys a |k8s-statefulset| comprised of one pod to
host the :ref:`backup-daemon`, and then creates a |k8s-pvc| and
|k8s-pv| for the Backup Daemon's :term:`head database` . The
|k8s-op-short| uses the :opsmgr:`Ops Manager API </reference/api/>` to
enable the Backup Daemon and configure the head database.

.. important::

   To configure Backup, you must create MongoDB database resources
   for the :term:`oplog store <oplog store database>` and |s3|
   :term:`snapshot store <s3 snapshot store>`. The |onprem| resource
   remains in a ``Pending`` state until these Backup resources are
   configured.

Oplog Store
+++++++++++
You must deploy a three-member replica set to store your :term:`oplog
slices <Oplog Slice>`.

.. include:: /includes/admonitions/fact-backing-db-auth.rst

S3 Snapshot Store
+++++++++++++++++
To configure an |s3| :opsmgr:`snapshot store
</reference/glossary/#term-s3-snapshot-store>`, you must:

- Have an oplog store already configured.
- Create an |aws| |s3| or |s3|-compatible bucket to store your database
  Backup :opsmgr:`snapshots </reference/glossary/#term-snapshot>`.
- Deploy a three-member replica set to store snapshot metadata.

You can update any additional |s3| :opsmgr:`configuration settings
</tutorial/manage-s3-blockstore-storage/#provide-the-s3-blockstore-details>`
that are not managed by the |k8s-op-short| through the |application|.

Ops Manager Application Access
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

By default, the |k8s-op-short| doesn't create a |k8s| service to route 
traffic originating from outside of the |k8s| cluster to the |onprem| 
application.

To access the |onprem| application, you can:

- Configure the |k8s-op-short| to create a |k8s| service.
- Create a |k8s| service manually. MongoDB recommends using a 
  ``LoadBalancer`` |k8s| service if your cloud provider supports it.
- If you're using OpenShift, use 
  `routes <https://docs.openshift.com/enterprise/3.0/architecture/core_concepts/routes.html>`__.
- Use a third-party service, such as Istio.

The simplest method is configuring the |k8s-op-short| to create a |k8s| 
service that routes external traffic to the |onprem| application. The 
|onprem| deployment procedure instructs you to add the following 
settings to the |k8s-obj| specification that configures the |k8s-op-short| 
to create a service:

- ``spec.``:opsmgrkube:`~spec.externalConnectivity`
- ``spec.externalConnectivity.``:opsmgrkube:`~spec.externalConnectivity.type`

.. _mdb-resource-deployment-locations:

Managing External MongoDB Deployments
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

When you deploy |onprem| with the |k8s-op-short|, |onprem| can manage
MongoDB database resources deployed:

- To the same |k8s| cluster as |onprem|.
- Outside of |k8s| clusters.

If |onprem| will manage MongoDB database resources deployed to different 
|k8s| clusters than |onprem| or outside of |k8s| clusters, you must:

1. Add the ``mms.centralUrl`` setting to ``spec.configuration`` in the 
   |onprem| resource specification.

   Set the value to the URL by which |onprem| is exposed outside of the 
   |k8s| cluster:

   .. code-block:: yaml

      spec:
        configuration:
          mms.centralUrl: https://a9a8f8566e0094380b5c257746627b82-1037623671.us-east-1.elb.example.com:8080/

#. :ref:`Update the ConfigMaps <example-k8s-configmap>` referenced by 
   all MongoDB database resources inside the |k8s| cluster that you 
   deployed with the |k8s-op-short|.
   
   Set ``data.baseUrl`` to the same value of the 
   :opsmgrkube:`spec.configuration.mms.centralUrl <spec.configuration>`
   setting in the |onprem| resource specification.

   .. important::

      This includes the ConfigMaps that the `MongoDB database resources 
      for the oplog and snapshot stores reference 
      <../tutorial/deploy-om-container.html#deploy-mongodb-database-resources-to-complete-the-backup-configuration>`__.

.. _om-rsrc-prereqs:

Prerequisites
-------------

1. If you have not already, run the following command to execute all 
   ``kubectl`` commands in the namespace you :ref:`created <k8s-prerequisites>`:

   .. code-block:: sh

      kubectl config set-context $(kubectl config current-context) --namespace=<namespace>

#. :doc:`Install </tutorial/install-k8s-operator>` the |k8s-op| 1.4.1
   or newer.   

#. Ensure that the host on which you want to deploy |onprem| has a
   minimum of five gigabytes of memory.

.. _om-first-user:

4. Create a |k8s| |k8s-secret| for an admin user in the same |k8s-ns| as
   the |onprem| resource.

   When you deploy the |onprem| resource, |onprem| creates a user with
   these credentials and grants it the :authrole:`Global Owner`
   role. Use these credentials to log in to |onprem|
   for the first time. Once |onprem| is deployed, you should change the
   password or remove this secret.
   
   .. code-block:: sh

      kubectl create secret generic <adminusercredentials> \
        --from-literal=Username="<username>" \
        --from-literal=Password="<password>" \ 
        --from-literal=FirstName="<firstname>" \ 
        --from-literal=LastName="<lastname>"

.. _om-db-user-secret:

5. (*Optional*) To set the password for the |onprem| database user, 
   create a |k8s-secret| in the same |k8s-ns| as the |onprem| resource. 
   
   The |k8s-op-short| creates the database user that |onprem| uses to
   connect to the :ref:`mms-application-database`. You can set the
   password for this database user by invoking the following command to
   create a secret:
   
   .. code-block:: sh

      kubectl create secret generic <om-db-user-secret-name> \
        --from-literal=password="<om-db-user-password>"

   .. note::
      
      If you choose to create a secret for the |onprem| database user,
      you must specify the secret's
      :opsmgrkube:`~spec.applicationDatabase.passwordSecretKeyRef.name`
      in the |onprem| resource definition. By default, the
      |k8s-op-short| looks for the password value in the ``password``
      key. If you stored the password value in a different key, you
      must also specify that
      :opsmgrkube:`~spec.applicationDatabase.passwordSecretKeyRef.key`
      name in the |onprem| resource definition.

   If you don't create a secret, then the |k8s-op-short| automatically
   generates a password and stores it internally. For more information,
   see :ref:`app-db-auth`.

#. (*Optional*). To configure Backup to an |s3| snapshot store, create
   a |k8s-secret| in the same namespace as the |onprem| resource.  

   This secret stores your |s3| credentials so that the
   |k8s-op-short| can connect |onprem| to your |aws| |s3| or
   |s3|-compatible bucket. The secret must contain the following
   key-value pairs: 

   .. list-table::
      :widths: 30 70

      * - Key
        - Value
      
      * - ``accessKey``
        - The access key ID of the user who owns the |s3| or 
          |s3|-compatible bucket. 
      
      * - ``secretKey``
        - The secret key of the user who owns the |s3| or 
          |s3|-compatible bucket. 
          
   To create the secret, invoke the following command:
      
   .. code-block:: sh

      kubectl create secret generic <my-aws-s3-credentials> \
        --from-literal=accessKey="<AKIAIOSFODNN7EXAMPLE>" \
        --from-literal=secretKey="<wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY>"

   To learn more about managing |s3| blockstore snapshot storage, see the :opsmgr:`Prerequisites
   </tutorial/manage-s3-blockstore-storage/#prerequisites>`.
