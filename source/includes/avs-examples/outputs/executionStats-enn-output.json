{
  explainVersion: '1',
  stages: [
    {
      '$vectorSearch': {
        index: 'vector_index',
        path: 'plot_embedding',
        queryVector: [
            -0.0016261312,   -0.028070757,   -0.011342932,    -0.012775794,
            ...
            -0.0060913274,   -0.007130985,   -0.013109017,    -0.009710136
        ],
        exact: true,
        limit: 10,
        explain: {
          query: {
            type: 'ExactVectorSearchQuery',
            args: {
              field: '$type:knnVector/plot_embedding',
              similarityFunction: 'dotProduct',
              filter: {
                type: 'DefaultQuery',
                args: { queryType: 'FieldExistsQuery' },
                stats: {
                  context: {
                    millisElapsed: 0.029472,
                    invocationCounts: {
                      createWeight: Long('1'),
                      createScorer: Long('2')
                    }
                  },
                  match: {
                    millisElapsed: 0.234054,
                    invocationCounts: { nextDoc: Long('3403') }
                  },
                  score: { millisElapsed: 0 }
                }
              }
            },
            stats: {
              context: {
                millisElapsed: 0.050328,
                invocationCounts: { createWeight: Long('1'), createScorer: Long('2') }
              },
              match: {
                millisElapsed: 0.622028,
                invocationCounts: { nextDoc: Long('3403') }
              },
              score: {
                millisElapsed: 3.03997,
                invocationCounts: {
                  score: Long('3402'),
                  setMinCompetitiveScore: Long('71')
                }
              }
            }
          },
          collectors: {
            allCollectorStats: {
              millisElapsed: 3.601357,
              invocationCounts: {
                collect: Long('3402'),
                competitiveIterator: Long('1'),
                setScorer: Long('1')
              }
            },
            facet: { collectorStats: { millisElapsed: 0 } }
          },
          metadata: {
            mongotVersion: '1.44.0',
            mongotHostName: '<hostname>.mongodb.net',
            indexName: 'vector_index',
            totalLuceneDocs: 3483
          },
          resourceUsage: {
            majorFaults: Long('0'),
            minorFaults: Long('0'),
            userTimeMs: Long('0'),
            systemTimeMs: Long('0'),
            maxReportingThreads: 1,
            numBatches: 1
          }
        }
      },
      nReturned: Long('0'),
      executionTimeMillisEstimate: Long('12')
    },
    {
      '$_internalSearchIdLookup': { limit: Long('10') },
      nReturned: Long('0'),
      executionTimeMillisEstimate: Long('12')
    }
  ],
  queryShapeHash: '9EFFBE6AC5B8DC66D20DB8939CF3ED6669D0C09BB6938C17AD3FB8C7793765B8',
  serverInfo: {
    host: '<hostname>.mongodb.net',
    port: 27017,
    version: '8.0.5',
    gitVersion: 'cb9e2e5e552ee39dea1e39d7859336456d0c9820'
  },
  serverParameters: {
    internalQueryFacetBufferSizeBytes: 104857600,
    internalQueryFacetMaxOutputDocSizeBytes: 104857600,
    internalLookupStageIntermediateDocumentMaxSizeBytes: 104857600,
    internalDocumentSourceGroupMaxMemoryBytes: 104857600,
    internalQueryMaxBlockingSortMemoryUsageBytes: 104857600,
    internalQueryProhibitBlockingMergeOnMongoS: 0,
    internalQueryMaxAddToSetBytes: 104857600,
    internalDocumentSourceSetWindowFieldsMaxMemoryBytes: 104857600,
    internalQueryFrameworkControl: 'trySbeRestricted',
    internalQueryPlannerIgnoreIndexWithCollationForRegex: 1
  },
  command: {
    aggregate: 'embedded_movies',
    pipeline: [
      {
        '$vectorSearch': {
          index: 'vector_index',
          path: 'plot_embedding',
          queryVector: [
              -0.0016261312,   -0.028070757,   -0.011342932,    -0.012775794,
              ...
              -0.0060913274,   -0.007130985,   -0.013109017,    -0.009710136
          ],
          exact: true,
          limit: 10
        }
      }
    ],
    cursor: {},
    '$db': 'sample_mflix'
  },
  ok: 1,
  '$clusterTime': {
    clusterTime: Timestamp({ t: 1740782184, i: 1 }),
    signature: {
      hash: Binary.createFromBase64('tpxoW70Y+Z5HmDqaswag+matLQQ=', 0),
      keyId: Long('7446434162581438465')
    }
  },
  operationTime: Timestamp({ t: 1740782184, i: 1 })
}
