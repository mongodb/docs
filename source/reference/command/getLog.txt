======
getLog
======

.. default-domain:: mongodb

.. dbcommand:: getLog

   The :dbcommand:`getLog` command returns a document with a ``log``
   array that contains recent messages from the :program:`mongod`
   process log. The :dbcommand:`getLog` command has the following
   syntax:

   .. code-block:: javascript

      { getLog: <log> }

   Replace ``<log>`` with one of the following values:

   - ``global`` - returns the combined output of all recent log
     entries.

   - ``rs`` - if the :program:`mongod` is part of a :term:`replica
     set`, :dbcommand:`getLog` will return recent notices related to
     replica set activity.

   - ``startupWarnings`` - will return logs that *may* contain errors
     or warnings from MongoDB's log from when the current process
     started. If :program:`mongod` started without warnings, this
     filter may return an empty array.

   You may also specify an asterisk (e.g. ``*``) as the ``<log>``
   value to return a list of available log filters. The following
   interaction from the :program:`mongo` shell connected to a replica
   set:

   .. code-block:: javascript

      db.adminCommand({getLog: "*" })
      { "names" : [ "global", "rs", "startupWarnings" ], "ok" : 1 }

   :dbcommand:`getLog` returns events from a RAM cache of the
   :program:`mongod` events and *does not* read log data from the log
   file.
