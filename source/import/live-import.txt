.. _live-import-replica:

======================================
Live Migrate Your Replica Set to Atlas
======================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

|service| can perform a live migration of a source replica set to an
|service| cluster, keeping the cluster in sync with the remote source
until you cut your applications over to the |service| cluster. To begin,
click on the ellipsis :guilabel:`...` button and choose :guilabel:`Migrate Data
to this Cluster` from the dropdown menu.

.. note::

   On the Cluster list, the ellipsis :guilabel:`...` button appears beneath the
   cluster name, as shown below. When you view a cluster's details, the ellipsis
   :guilabel:`...` appears on the right-hand side of the screen, next to the 
   :guilabel:`Connect` and :guilabel:`Configuration` buttons.

.. figure:: /images/live-migrate.png

.. note::

   You cannot select an ``M0`` (Free Tier) or ``M2/M5`` shared cluster as
   the source or destination for live migration. To migrate data from an
   ``M0`` (Free Tier) or ``M2/M5`` shared cluster to a paid cluster, see
   :doc:`/scale-cluster`.

|service| requires a period of downtime during the cut over process. 
Consider scheduling a maintenance period for your application to
cover this downtime and allow |service| live migration to fully
sync with the source cluster data.

For a procedure on live migrating a sharded cluster, see 
:doc:`/import/live-import-sharded`.

Prerequisites
-------------

.. _live-import-upgrade-path:

Upgrade Path
~~~~~~~~~~~~

|service| live migration supports the following migration paths:

.. list-table::
   :header-rows: 1

   * - Source Replica Set MongoDB Version
     - Destination |service| Replica Set MongoDB Version

   * - 2.6
     - 3.2 or 3.4 or 3.6

   * - 3.0
     - 3.2 or 3.4 or 3.6

   * - 3.2
     - 3.2 or 3.4 or 3.6

   * - 3.4
     - 3.4 or 3.6

   * - 3.6
     - 3.6

.. admonition:: 3.2 End of Life
   :class: important

   .. include:: /includes/extracts/fact-3.2-eol-upgrade.rst

.. important::

   Users migrating from a MongoDB 2.6 cluster should take particular
   care to update and test their applications in context of the 
   destination |service| cluster. In general, whenever migrating
   to a newer version of MongoDB, plan for updating and testing
   your application in context of the destination migration cluster.

.. _live-import-ip-whitelist:

Network Access
~~~~~~~~~~~~~~

Source Cluster Firewall Must Allow Access from Live Migration Server
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

|service| Live Migration process streams data through a 
MongoDB-controlled application server. |service| provides the IP ranges
of the MongoDB Live Migration servers during the Live Migration
process. Grant these IP ranges access to your source cluster to allow 
connectivity to the MongoDB Live Migration server.

|Service| Cluster IP Whitelist Must Allow Access From Your Application Servers
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

|service| only allows connections to a cluster from entries in the projectâ€™s
:doc:`whitelist </security-whitelist>`. You must add IP addresses such as
application servers to the project whitelist manually. Do this before beginning
the migration procedure.

|service| temporarily adds the IP address of the |service| migration
servers to the project whitelist. During the migration procedure, you
cannot edit or delete this entry. |service| removes the entry
automatically once the procedure completes.

For documentation on adding entries to the |service| whitelist, see
:doc:`/security-whitelist`.

.. _live-import-migration-validation:

Pre-Migration Validation
~~~~~~~~~~~~~~~~~~~~~~~~

|service| performs a number of validation checks on the source
and destination cluster before starting the Live Migration procedure.

- The source cluster is a replica set.
  
  If the source is a standalone,
  :manual:`convert the standalone to a replica set first </tutorial/convert-standalone-to-replica-set>`
  before using :doc:`Live Migration </import/live-import>`.

- The destination |service| cluster must be a replica set.

.. _live-import-security:

Source Cluster Security
~~~~~~~~~~~~~~~~~~~~~~~

|service| only supports 
:ref:`SCRAM <authentication-scram>` for
connecting to source clusters enforcing authentication.

If the source cluster enforces authentication, create a user with the
same name and password that exists on every shard *and* the config
server replica set. The user must have permission to:

- Read all databases and collections.
- Read the oplog.

The :authrole:`readWriteAnyDatabase` and :authrole:`clusterAdmin` 
built-in roles provide sufficient privilege for |service| to perform the 
Live Migration procedure. Create a user with these roles on the
``admin`` database.

Specify the user name and password to |service| when prompted by
the Live Migration procedure.

If the source cluster uses a different authentication mechanism, to connect
you can use the :doc:`/import/mongomirror` tool to migrate data from the
source cluster to the destination |service| cluster.

Considerations
--------------

Destination Cluster Configuration
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

When configuring the destination cluster, consider the following:

- The live migration process streams data through a migration application
  server running in AWS US-East. This implicitly requires two network hops to
  reach the destination cluster irrespective of the location of the source and
  destination clusters. Due to the potential latency, the live migration
  application may not be able to keep up with a source cluster that has an
  extremely heavy write load. You can instead use the
  :doc:`mongomirror </reference/mongomirror>` tool directly from the source cluster,
  pointing to the destination |service| cluster.

- The live migration process may not be able to keep up with a source cluster
  whose write workload is greater than what can be transferred and applied to
  the destination cluster. You may need to scale the destination cluster up to
  a instance with more processing power, bandwidth or disk IO.

- The destination |service| cluster must be a replica set.

- You cannot select an ``M0`` (Free Tier) or ``M2/M5`` shared tier 
  cluster as the destination for live migration.

- Do **not** change the ``featureCompatibilityVersion`` flag while
  |service| Live Migrate is running.

MongoDB Users and Roles
~~~~~~~~~~~~~~~~~~~~~~~

|service| does not migrate any user or role data to the destination 
cluster.

If the source cluster enforced authentication, you must re-create the
credentials used by your applications on the destination |service|
cluster. |service| uses :ref:`SCRAM <authentication-scram>` for
user authentication. See :doc:`/security-add-mongodb-users` for a
tutorial on creating MongoDB users in |service|.

Procedure
---------

.. admonition:: Staging and Production Migrations
   :class: note

   Consider performing this procedure twice. Perform a partial migration
   that stops at the :guilabel:`Perform the Cutover` step *first*. This
   creates an up-to-date |service|-backed staging cluster to test
   application behavior and performance 
   using the latest 
   :driver:`driver version </driver-compatibility-reference>` that
   supports the MongoDB version of the |service| cluster.

   Once you have tested your application, perform the full migration
   procedure using a separate |service| cluster to create your
   |service|-backed production environment.

.. important::

   Avoid making changes to the source cluster configuration while the
   Live Migration procedure runs, such as removing replica set members
   or modifying :binary:`mongod <bin.mongod>` runtime settings
   like ``featureCompatibilityVersion``. 

.. include:: /includes/steps/atlas-live-import.rst

.. _live-migration-support:

Migration Support
-----------------

If you have any questions regarding migration support beyond what is covered
in this documentation, or if you encounter an error during migration, please
file a support ticket through the |service| UI.

To file a support ticket,

#. Click :guilabel:`Support` in the left-hand navigation

#. For :guilabel:`Atlas Issue Category`, select ``Other``

#. For :guilabel:`Priority`, select the appropriate priority. For questions,
   please select ``Medium Priority``. If there was a failure in migration,
   please select ``High Priority``.

#. For :guilabel:`Request Summary`, please include ``Live Migration`` in the
   your summary.

#. For :guilabel:`More details`, please include any other relevant details to
   your question or migration error.
