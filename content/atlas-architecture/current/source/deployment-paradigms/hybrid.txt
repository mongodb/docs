.. _arch-center-paradigms-hybrid:

==========================
Hybrid Deployment Paradigm
==========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: onecol

The hybrid {+service+} deployments are a combination of cloud and 
self-managed deployments.

The cloud deployments can be the following deployments:

- :ref:`Single-region <arch-center-paradigms-single>` is typically used 
  when cost is a factor and the low risk of regional failure is 
  acceptable.

- :ref:`Multi-region <arch-center-paradigms-multi-region>` is typically 
  used to enhance protection in the case of a regional outage and to 
  improve the performance and availability for some some applications 
  by locating data closer to users.

You can create self-managed deployments using:
  
- :manual:`MongoDB Enterprise </administration/install-enterprise/>` is 
  typically used for production, testing, and development environments 
  that have additional requirements for advanced security, operations 
  and integrations.

- :manual:`MongoDB Community </administration/install-community/>` is 
  typically used for development and testing environments that require 
  additional or bespoke configuration.

- :ref:`MongoDB Atlas Local Deployment <arch-center-local-deployment>` 
  is driven using the {+atlas-cli+}, deployed using Docker, and 
  typically used for simple, complete local deployments for development 
  scenarios.

Hybrid deployments allow you to keep some data on premises for
development or compliance, while still leveraging
the following benefits of {+service+} cloud deployments:

- Scalability and cost savings
- High availability and low latency on a regional or global scale
- Features to help meet cloud compliance requirements for 
  :ref:`data sovereignty <arch-center-compliance-data-sovereignty>` 

.. note::

   {+service+} does not support splitting a single cluster to span the 
   two deployment types.

The following diagram shows one example of a hybrid deployment, in 
which an application has one cluster in an AWS region and an on-prem 
cluster:

.. figure:: /includes/images/hybrid.svg
   :figwidth: 750px
   :alt: An image showing a single-region, three-node cloud deployment and a three-node on-premise deployment.

Use Case for Hybrid Deployments
-------------------------------

A hybrid deployment may be best for you if you have
the following requirements:

- You want to deploy your production workloads in the cloud, which
  allows you to scale your resources based on the needs of your
  application and pay only for the resources you use.
- You want to develop on local {+clusters+}, which reduces
  costs when compared to cloud-hosted development.

If this is your use case, we recommend that you deploy locally 
by using the :atlascli:`{+atlas-cli+} </atlas-cli-deploy-local>`. You
can deploy your cloud databases as single-region, multi-region, and 
multi-cloud.

Use the following resources to select your cloud deployment type based
on your cloud needs:

- :ref:`arch-center-paradigms-single`
- :ref:`arch-center-paradigms-multi-region`
- :ref:`arch-center-paradigms-multi-cloud`

Recommendations for Hybrid Deployments
--------------------------------------

The {+atlas-arch-center+} does not currently cover recommendations
specific to hybrid deployments. Contact {+ps+}
team to create a custom landing zone for your {+service+} hybrid
deployments.

- :ref:`arch-center-single-region-rec-summary`
- :ref:`arch-center-multi-region-rec-summary`

Create Hybrid Deployments
-------------------------

To create a hybrid deployment:

1. :ref:`Configure your cloud deployments 
   <arch-center-config-cloud-deplorment>`.

#. Do one of the following steps to configure your self-managed 
   deployments:
   
   - Install MongoDB for :ref:`self-managed deployments 
     <arch-center-self-managed-deployment>`.

   - Create a :ref:`local {+service+} deployment 
     <arch-center-local-deployment>` with the {+atlas-cli+} for 
     devlopment and testing.

.. _arch-center-config-cloud-deplorment:

Configure Cloud Deployments
~~~~~~~~~~~~~~~~~~~~~~~~~~~

To learn how to configure cloud deployments and learn about the
different types of nodes you can add, see :atlas:`Create a Cluster 
</tutorial/create-new-cluster/>` in the {+service+} documentation.

.. _arch-center-self-managed-deployment:

Install MongoDB for Self-Managed Deployments
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To learn how to configure an on-premise self-managed deployment, see 
:manual:`Install MongoDB </installation/>` for self-managed deployments 
in MongoDB Enterprise or MongoDB Community.

.. _arch-center-local-deployment:

Create a Local Deployment
~~~~~~~~~~~~~~~~~~~~~~~~~

To learn how to configure a local deployment with the {+atlas-cli+} for 
development and testing, see :atlascli:`Create a Local {+service+} Deployment </atlas-cli-deploy-local>`.
