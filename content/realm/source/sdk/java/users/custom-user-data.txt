.. meta::
   :robots: noindex, nosnippet

.. _java-custom-user-data:

===========================
Custom User Data - Java SDK
===========================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

You can read arbitrary data about your application users, known as
custom user data, directly within your java application. For example,
you might store a user's preferred language, date of birth, or local
timezone. To learn more about custom user data, see :ref:`Enable Custom
User Data <custom-user-data>`.

.. include:: /includes/use-custom-data-note.rst

.. _java-read-a-users-custom-data:
.. _java-access-custom-user-data:

Read a User's Custom Data
-------------------------

You can read the custom user data of a currently logged in user
through that user's ``User`` object. You cannot edit custom user data
through a ``User`` object. To edit custom user data, see
:ref:`Update Custom User Data <java-update-custom-user-data>`.
To access the data, call the
:java-sdk:`User.customData() <io/realm/mongodb/User.html#getCustomData-->`
method on the ``User`` object of a logged in user:

.. tabs-realm-languages::
   
   .. tab::
       :tabid: kotlin

       .. literalinclude:: /examples/generated/java/sync/AccessCustomUserDataTest.snippet.read-custom-user-data.kt
         :language: kotlin
         :emphasize-lines: 6
         :copyable: false

   .. tab::
       :tabid: java

       .. literalinclude:: /examples/generated/java/sync/AccessCustomUserDataTest.snippet.read-custom-user-data.java
         :language: java
         :emphasize-lines: 6
         :copyable: false

.. warning:: Custom Data May Be Stale
   
   Atlas App Services does not dynamically update the value of
   :java-sdk:`User.customData() <io/realm/mongodb/User.html#getCustomData-->`
   immediately when underlying data changes. Instead, App Services
   fetches the most recent version of custom user data whenever a user
   refreshes their :ref:`access token <user-sessions>`, which occurs
   during most SDK operations that contact the App Services back end.
   Realm refreshes access tokens every 30 minutes, so custom
   user data can be stale for no more than 30 minutes.

   If you require the most recent version of custom user data, use the
   :java-sdk:`User.refreshCustomData()
   <io/realm/mongodb/User.html#refreshCustomData-->` method to request
   the latest version of a user's custom data.

.. _java-create-a-users-custom-data-document:
.. _java-create-custom-user-data:

Create a User's Custom Data Document
------------------------------------

.. tip::

   To create, update, or delete custom user data, you will need the following
   information from your custom user data configuration:

   - the custom user data cluster

   - the custom user data database

   - the custom user data collection in which custom
     user data documents are stored

   - the user ID field used to map custom user data documents
     to users (via user ID)

   You can find this information in the App Services UI on the
   :guilabel:`App Users` page under the :guilabel:`Custom User Data` tab.

To create custom user data for a user, create a MongoDB document in the
custom user data collection. The user ID field of the document should
contain the the user's user ID. The following example uses
:ref:`MongoDB Data Access <java-mongodb-data-access>` to insert a
document containing the user ID of the currently logged in user and a
``favoriteColor`` value into the custom user data collection:

.. tabs-realm-languages::
   
   .. tab::
       :tabid: kotlin

       .. literalinclude:: /examples/generated/java/sync/AccessCustomUserDataTest.snippet.create-custom-user-data.kt
         :language: kotlin
         :emphasize-lines: 11
         :copyable: false

   .. tab::
       :tabid: java

       .. literalinclude:: /examples/generated/java/sync/AccessCustomUserDataTest.snippet.create-custom-user-data.java
         :language: java
         :emphasize-lines: 11,12
         :copyable: false


You can add any number of arbitrary fields and values to the custom user
data document when you create it. The user ID field is the only
requirement for the document to become available on the ``User`` object
as custom user data.

.. _java-update-a-users-custom-data:
.. _java-update-custom-user-data:

Update a User's Custom Data
---------------------------

You can update custom user data using :ref:`MongoDB Data Access
<java-mongodb-data-access>`, Realm :ref:`Sync
<java-sync-data>`, :compass:`MongoDB Compass </>`, 
or the :atlas:`MongoDB Atlas Data
Explorer </data-explorer/>`.

To update a user's custom user data with MongoDB Data Access, edit the
MongoDB document whose user ID field contains the user ID of the user.

.. tip::
   
   To determine a user's ID, access the ``User.id`` property or find the user in the App Services UI
   on the :guilabel:`App Users` page under the :guilabel:`Users` tab.

The following example uses :ref:`MongoDB Data Access
<java-mongodb-data-access>` to update the ``favoriteColor`` field of
the the document containing the user ID of the currently logged in user
in the custom user data collection:

.. tabs-realm-languages::
   
   .. tab::
       :tabid: kotlin

       .. literalinclude:: /examples/generated/java/sync/AccessCustomUserDataTest.snippet.update-custom-user-data.kt
         :language: kotlin
         :emphasize-lines: 11
         :copyable: false

   .. tab::
       :tabid: java

       .. literalinclude:: /examples/generated/java/sync/AccessCustomUserDataTest.snippet.update-custom-user-data.java
         :language: java
         :emphasize-lines: 11,12
         :copyable: false
