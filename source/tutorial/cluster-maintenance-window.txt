.. meta::
   :keywords: atlas cli, atlas ui

.. _configure-maintenance-window:

============================
Configure Maintenance Window
============================

.. default-domain:: mongodb

.. facet::
   :name: genre
   :values: tutorial

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

You can set the hour of the day when |service| should start weekly
maintenance on your cluster. This setting is optional and is not
required for most clusters. Configure maintenance windows from your
:ref:`project settings <project-settings>`.

Typically, you do not need to manually configure a maintenance window.
|service| performs maintenance automatically in a rolling manner to preserve 
continuous availability for :ref:`resilient applications <resilient-application>`.
You can use the :ref:`Test Failover <test-failover>` capability to ensure that 
your application is resilient to replica set elections.

Configuring maintenance windows provides more control over the timing of 
maintenance by allowing maintenance that requires replica set elections to occur 
at your preferred time of day, and other standard updates to occur outside of 
business-critical hours.

Maintenance Window Considerations
---------------------------------

Urgent Maintenance Activities
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

|service| may perform urgent maintenance activities (such as security patches 
for zero-day vulnerabilities) as soon as necessary without regard to configured 
maintenance windows or protected hours.

Ongoing Maintenance Operations
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Once you schedule a maintenance window for your cluster, you cannot
change it until any ongoing maintenance operations have completed.

MongoDB Database Upgrades
~~~~~~~~~~~~~~~~~~~~~~~~~

If maintenance includes a MongoDB patch version upgrade, |service| displays the 
current and target versions in the console.

Maintenance Requires Replica Set Elections
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

|service| performs maintenance the same way as the maintenance
procedure described in the
:manual:`MongoDB Manual </tutorial/perform-maintence-on-replica-set-members/>`.
This procedure requires at least one
:manual:`replica set election </core/replica-set-elections>` during
the maintenance window per replica set.

Use the :ref:`Test Failover <test-failover>` capability to ensure
that your application is resilient to replica set elections.

Maintenance Starts As Close to the Start of the Window As Possible
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Maintenance always begins as close to the scheduled time as possible, but 
in-progress cluster updates or unexpected system issues could delay the start 
time.

Potential for Brief Performance Degradation during Maintenance
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you have low :ref:`Disk IOPS <disk-io-util>`, your cluster could experience 
a brief performance degradation during maintenance while MongoDB repopulates 
the WiredTiger storage engine. See 
:manual:`Journaling and the WiredTiger Storage Engine </core/journaling/#journaling-wiredTiger>` 
to learn more.

Protected Hours Considerations
------------------------------

In addition to configuring a maintenance window, you can set daily protected 
hours, which is a window of time during which |service| avoids performing 
standard updates.

Maintenance vs. Standard Updates
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

|service| automatically performs maintenance during the maintenance window. However, 
|service| may perform standard updates that do not involve a cluster restart or 
impact workload performance, outside of the maintenance window. When you enable 
protected hours, |service| performs standard updates outside of the protected hours 
window. 

Protected Hours Range
~~~~~~~~~~~~~~~~~~~~~

The length of your protected hours window cannot exceed 18 hours.

Required Access
---------------

To manage maintenance windows, you must have 
:authrole:`Organization Owner` or :authrole:`Project Owner` access 
to the project.

Procedure
---------

Open Your Project Settings
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/steps-view-modify-project-settings.rst

.. _maintenance-window-protected-hours:

View and Configure Maintenance Window
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. tabs::

   .. tab:: {+atlas-cli+}
      :tabid: atlascli

      .. include:: /includes/extracts/atlas-maintenanceWindows-describe-and-update.rst

   .. tab:: {+atlas-ui+}
      :tabid: ui

      To view and configure the maintenance window using the 
      {+atlas-ui+}:

      1. Click the :guilabel:`Set Maintenance Window` button to display the maintenance window settings.

      #. Set the day and time that you want |service| to start
         maintenance on your project.

      #. If you want |service| to automatically defer any scheduled
         maintenance for one week, click
         :guilabel:`Automatically defer maintenance for one week`.

      #. To set a range of protected hours in which |service| avoids performing
         standard updates, toggle the :guilabel:`Turn on protected hours`
         setting to :guilabel:`On`. You can set a maximum time range of 18 hours a day.

      #. Click :guilabel:`Save` to keep your changes or click
         :guilabel:`Cancel` to discard them.

Clear Your Maintenance Window Configuration Settings
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you configured a preferred maintenance window start time, you can
clear the settings using the {+atlas-cli+} or the {+atlas-ui+}. Clearing your maintenance window configuration restores the default
maintenance window settings.

.. tabs::

   .. tab:: {+atlas-cli+}
      :tabid: atlascli

      .. include:: /includes/extracts/atlas-maintenanceWindows-clear.rst

   .. tab:: {+atlas-ui+}
      :tabid: ui

      To clear the configured maintenance window using the 
      {+atlas-ui+}, toggle the :guilabel:`Set Maintenance Window` setting to :guilabel:`Off`.

Respond to Required Maintenance
-------------------------------

When maintenance is required, |service|:

- Displays a banner in your project's cluster list showing the date and
  time when the maintenance is scheduled.

- Sends a notification email to users with the
  :authrole:`Project Owner` role between 48 and 72 hours before the
  scheduled maintenance.

  .. note::

     To configure how you receive scheduled maintenance window
     notifications, see :ref:`configure-mw-alert`.

.. tabs::

   .. tab:: {+atlas-cli+}
      :tabid: atlascli

      .. include:: /includes/extracts/atlas-maintenanceWindows-defer.rst

   .. tab:: {+atlas-ui+}
      :tabid: ui

      With this information, you can choose one of three options in the
      {+atlas-ui+}:

      1. Do nothing. The maintenance occurs during your scheduled
         maintenance window.

      2. Select :guilabel:`Begin Maintenance Now`. The scheduled
         maintenance starts immediately. If you choose this option,
         |service| asks you to confirm it in a separate modal.

      3. Select :guilabel:`Defer Maintenance for One Week`. The
         scheduled maintenance starts during your preferred
         maintenance window one week after the given scheduled
         maintenance date and time. If you choose this option, |service| asks you to confirm it in a separate modal.

         .. include:: /includes/fact-defer-maintenance-max.rst

Maintenance Version Upgrades during Maintenance Windows
-------------------------------------------------------

If |service| will upgrade the MongoDB maintenance version on one of
your clusters during the next maintenance window, the cluster's card
displays the target MongoDB maintenance version.

.. figure:: /images/minor-version-upgrade-during-mw.png
   :alt: Screenshot of electable nodes across three regions
   :figwidth: 300px
