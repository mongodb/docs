.. _capped-collections-convert:

==============================
Convert a Collection to Capped
==============================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. facet::
   :name: genre
   :values: tutorial

To convert a non-capped collection to a :ref:`capped collection
<manual-capped-collection>`, use the :dbcommand:`convertToCapped`
database command.

The ``convertToCapped`` command holds a database-exclusive lock for the
duration of the operation. Other operations that lock the same database
are blocked until the ``convertToCapped`` operation completes.

About this Task
---------------

.. include:: /includes/capped-collections/use-ttl-index.rst

Before you Begin
----------------

Create a non-capped collection called ``log2``:

.. code-block:: javascript

   db.createCollection("log2")

Steps
-----

.. procedure::
   :style: normal

   .. step:: Convert the collection to a capped collection

      To convert the ``log2`` collection to a capped collection, run the
      :dbcommand:`convertToCapped` command:

      .. code-block:: javascript

         db.runCommand( {
            convertToCapped: "log2",
            size: 100000
         } )

      The ``log2`` collection has a maximum size of 100,000 bytes.

   .. step:: Confirm that the collection is capped

      To confirm that the ``log2`` collection is now capped, use the
      :method:`~db.collection.isCapped()` method:

      .. io-code-block::
         :copyable: true

         .. input::
            :language: javascript

            db.log2.isCapped()

         .. output::
            :language: javascript

               true

Learn More
----------

- :ref:`faq-concurrency-database-lock`

- :ref:`capped-collections-change-size`

- :ref:`capped-collections-query`
