ref: wildcard-index-example-pre
content: |
  
  Consider a collection ``products_catalog`` where documents may contain a
  ``product_attributes`` field. The ``product_attributes`` field can
  contain a variety of arbitrary subfields, including embedded documents
  and arrays: 

  .. code-block:: text
     :copyable: false

     {
       "_id" : ObjectId("5c1d358bf383fbee028aea0b"),
       "product_name" : "Blaster Gauntlet",
       "product_attributes" : {
          "elements" : [ "Fire" , "Water" ],
          "price" : 250
          ...
       }
     },
     {
       "_id" : ObjectId("5c1d358bf383fbee028aea0c"),
       "product_name" : "Super Suit",
       "product_attributes" : {
          "superFlight" : true,
          "resistance" : [ "Bludgeoning", "Piercing", "Slashing" ]
          ...
       },
     }

---
ref: wildcard-index-summary
content: |

  MongoDB indexes any scalar values associated with the specified field
  path or paths, where the index key includes the full path to the
  field. For fields that contain subdocuments, MongoDB descends into the
  document and creates index keys for any field-value pairs in the
  document. For fields that are arrays, MongoDB creates an index key
  for each value in the  array similar to 
  :ref:`multikey <index-type-multikey>` indexing  behavior.

  .. important::

      Wildcard indexes are not designed to replace workload-based index
      planning. For more information on creating indexes to support
      queries, see :ref:`create-indexes-to-support-queries`.
      
---
ref: wildcard-index-fcv
content: |
  You must set the :binary:`mongod <bin.mongod>`
  :ref:`featureCompatibilityVersion <view-fcv>` (fCV) to 4.2 before you
  can create wildcard indexes. For instructions on setting the fCV, see 
  :ref:`4.2-compatibility-enabled`.
---
ref: wildcard-index-limitations
content: |

  Wildcard indexes have limitations in functionality as compared to a
  normal single-field index. For example, wildcard indexes do not
  support the following index types or properties:

  - :doc:`Compound </core/index-compound>`
  - :doc:`TTL </core/index-ttl>`
  - :doc:`Text </core/index-text>`
  - :doc:`2d (Geospatial) </core/geospatial-indexes>`
  - :doc:`2dsphere (Geospatial) </core/2dsphere>`
  - :doc:`Hashed </core/index-hashed>`
  - :doc:`Unique </core/index-unique>`

  For complete documentation on wildcard index limitations, see
  :ref:`wildcard-index-limitations`.
---
ref: wildcard-index-id
content: |

  Wildcard indexes omit the ``_id`` field by default. To include the
  ``_id`` field in the wildcard index, you must explicitly include it
  in the ``wildcardProjection`` document (i.e. ``{ "_id" : 1 }``).
---
ref: wildcard-index-id-exclusion
content: |

  As MongoDB includes an index on ``_id`` by default, wildcard
  indexes omit the ``_id`` field. To include the ``_id`` field in the
  wildcard index, you must explicitly include it in the
  ``wildcardProjection`` document: 

  .. code-block:: json

     "wildcardProjection" : { 
       "_id" : 1 
     }

  The ``_id`` field is the **only** field you can specify along with
  field exclusions.
...