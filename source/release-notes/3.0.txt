=============================
Release Notes for MongoDB 3.0
=============================

.. default-domain:: mongodb

*February 3, 2015*

MongoDB 3.0 is now available. Key features include support for
WiredTiger storage engine, pluggable storage engine API,
``SCRAM-SHA-1`` authentication mechanism, and improved ``explain``
functionality.

Major Changes
-------------

Pluggable Storage Engine API
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 3.0 introduces pluggable storage engine API that allows third
parties to develop storage engines with MongoDB.

WiredTiger
~~~~~~~~~~

MongoDB 3.0 introduces support for the `WiredTiger
<http://wiredtiger.com>`_ storage engine. With the support for
WiredTiger, MongoDB now supports two storage engines:

- MMAPv1, the storage engine available in previous versions of MongoDB,
  and

- `WiredTiger <http://wiredtiger.com>`_, available only in the 64-bit
  MongoDB 3.0 versions. 

WiredTiger Usage
````````````````

MongoDB 3.0 uses the MMAPv1 engine as the default storage engine.
WiredTiger supports all MongoDB features, including operations that
report on server, database, and collection statistics. Switching to
WiredTiger, however, requires a change to the :ref:`on-disk storage
format <3.0-compatibility-data-file>`. For instructions on changing the
storage engine to WiredTiger, see :doc:`/release-notes/3.0-upgrade`.

MongoDB 3.0 replica sets and sharded clusters can have members with
different storage engines; however, performance can vary according to
workload. For details, :doc:`/release-notes/3.0-upgrade`.

The WiredTiger storage engine requires the latest official MongoDB
drivers. For more information, see
:ref:`3.0-compatibility-drivers-wired-tiger`.
  
The on-disk index format for WiredTiger indexes changed in 2.8.0-rc5.
To upgrade from earlier pre-release versions of MongoDB with
WiredTiger, you will need to run the :program:`mongod` instance with
``--repair``.

.. seealso:: :ref:`3.0-compatibility-touch`

WiredTiger Configuration
````````````````````````

To configure the behavior and properties of the ``wiredTiger`` storage
engine, see :setting:`storage.wiredTiger` configuration options. You
can set :ref:`WiredTiger options on the command line
<cli-wiredtiger-options>`.

WiredTiger Concurrency and Compression
``````````````````````````````````````

The 3.0 WiredTiger storage engine provides document-level locking and
compression. 

By default, WiredTiger compresses collection data using :term:`snappy`
compression library. For indexes, WiredTiger uses :term:`prefix
compression` on all indexes by default.

MMAPv1 Improvements
~~~~~~~~~~~~~~~~~~~

MMAPv1 Concurrency Improvement
``````````````````````````````

In version 3.0, the MMAPv1 storage engine adds support for
collection-level locking.

MMAPv1 Configuration Changes
````````````````````````````

To the support of multiple storage engines, some configuration settings
for MMAPv1 have changed. See
:ref:`3.0-compatibility-configuration-file`.

.. _3.0-mmapv1-padding:

MMAPv1 Record Allocation Behavior Changes
`````````````````````````````````````````

The default allocation strategy for collections in instances that use
``mmapv1`` is :collflag:`powerOf2Sizes`. To remove all record padding
set :collflag:`noPadding` or specify the ``noPadding`` option to
:method:`db.createCollection()`.

.. seealso:: :ref:`3.0-compatiblity-record-alloc`

.. _3.0-replica-sets:

Replica Sets
------------

Increased Number of Replica Set Members
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB replica sets now support larger maximum replica set sizes up
to 50 members. As in earlier releases, replica sets may only have a
maximum of 7 voting members.

The following drivers support larger replica sets:

- C# (.NET) Driver 1.10
- Java Driver 2.13
- Python Driver (PyMongo) 3.0+
- Ruby Driver 2.0+
- Node.JS Driver 2.0+

Because the C, C++, Perl, PHP, and earlier versions of the Ruby,
Python, and Node.JS drivers discover and monitor replica set members
serially, these drivers are not suitable for use with large replica
sets.

Pymongo 3.0, the Ruby Driver 2.0, and the Node.JS Driver 2.0 are currently
in development.

.. _3.0-replica-sets-step-down:

Replica Set Step Down Behavior Changes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The process that a :term:`primary` member of a :term:`replica set`
uses to step down has the following changes:

- Before stepping down, :dbcommand:`replSetStepDown` will attempt to
  terminate long running user operations that would block the primary
  from stepping down, such as an index build, a write operation or a
  map-reduce job.

- The :dbcommand:`replSetStepDown` will wait for an electable
  secondary to catch up to the state of the primary before stepping
  down. Previously a primary would wait 10 seconds for a secondary to
  catch up before stepping down. This change will help prevent
  rollbacks.

- :dbcommand:`replSetStepDown` now allows users to specify a
  ``secondaryCatchUpPeriodSecs`` parameter to specify how long the
  primary should wait for a secondary to catch up before stepping
  down.

.. _3.0-replica-sets-operational-changes:

Other Replica Set Operational Changes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Initial sync builds indexes more efficiently for each collection and
  applies oplog entries in batches using threads.

- Definition of :ref:`w: "majority" <wc-w>` write concern changed to
  mean majority of *voting* nodes.

- Stronger restrictions on :doc:`/reference/replica-configuration`. For
  details, see :ref:`3.0-compatibility-repl-set-config`.

- For pre-existing collections on secondary members, no longer build
  missing ``_id`` indexes automatically.

.. seealso:: :ref:`3.0-compatibility-rs`

.. _3.0-sharded-clusters:

Sharded Clusters
----------------

MongoDB 3.0 provides the following enhancements to sharded clusters:

- Adds a new :method:`sh.removeTagRange()` helper to improve management
  of sharded collections with tags. The new
  :method:`sh.removeTagRange()` method acts as a complement to
  :method:`sh.addTagRange()`.

- Provides a more predictable read preference behavior.
  :program:`mongos` instances no longer pin connections to members of
  replica sets when performing read operations. Instead,
  :program:`mongos` reevaluates :doc:`read preferences
  </core/read-preference>` for every operation to provide a more
  predictable read preference behavior when read preferences change.

- Provides a new ``writeConcern`` setting to configure the :doc:`write
  concern </core/write-concern>` of chunk migration operations. You can
  configure the ``writeConcern`` setting for the :ref:`balancer
  <sharded-cluster-config-secondary-throttle>` as well as for
  :dbcommand:`moveChunk` and :dbcommand:`cleanupOrphaned` commands.

- Improves visibility of balancer operations. :method:`sh.status()`
  includes information about the state of the balancer. See
  :method:`sh.status()` for details.

.. seealso:: :ref:`3.0-compatibility-sharded-cluster`

Security Improvements
---------------------

MongoDB 3.0 includes the following security enhancments:

- Adds a new ``SCRAM-SHA-1`` password authentication mechanism.

- Increases restrictions when using the :ref:`localhost-exception` to
  access MongoDB. For details, see :ref:`3.0-compatibility-localhost`.

.. seealso::
   :ref:`3.0-compatibility-security-changes`,

Improvements
------------

New Query Introspection System
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 3.0 includes a new query introspection system that provides an
improved output format and a finer-grained introspection into both
query plan and query execution.

For details, see the new :method:`db.collection.explain()` method and
the new :dbcommand:`explain` command as well as the updated
:method:`cursor.explain()` method.

For information on the format of the new output, see
:doc:`/reference/explain-results`.

.. _3.0-logging-improvements:

Enhanced Logging
~~~~~~~~~~~~~~~~

To improve usability of the log messages for diagnosis, MongoDB
categorizes some log messages under specific components, or operations,
and provides the ability to set the verbosity level for these
components. For information, see :doc:`/reference/log-messages`.

.. _3.0-tools-enhancements:

MongoDB Tools Enhancements
~~~~~~~~~~~~~~~~~~~~~~~~~~

All MongoDB tools are now written in go and maintained as a separate
project.

- Smaller binaries.

- New options for parallelized :program:`mongodump` and
  :program:`mongorestore`. You can control the number of collections
  that :program:`mongorestore` will restore at a time with the
  ``--numParallelCollections`` option.

- New options ``-excludeCollection`` and
  ``--excludeCollectionsWithPrefix`` for :program:`mongodump` to
  exclude collections

- :program:`mongorestore` can now accept BSON data input from standard
  input in addition to reading BSON data from file.

- :program:`mongostat` and :program:`mongotop` can now return output
  in JSON format with the ``--json`` option.

- Added configurable :term:`write concern` to :program:`mongoimport`,
  :program:`mongorestore`, and :program:`mongofiles`. Use the
  ``--writeConcern`` option.

- :program:`mongofiles` now allows you to configure the GridFS prefix
  with the ``--prefix`` option so that you can use custom namespaces
  and store multiple GridFS namespaces in a single database.

.. seealso:: :ref:`3.0-compatibility-tools`

Indexes
~~~~~~~

- Background index builds will no longer automatically interrupt if
  :dbcommand:`dropDatabase`, :dbcommand:`dropIndexes`,
  :dbcommand:`drop` occur. The :dbcommand:`dropDatabase`,
  :dbcommand:`dropIndexes`, :dbcommand:`drop` commands will still fail
  with ``background job in progress``, as in 2.6

- If you specify multiple indexes to the :dbcommand:`createIndexes`
  command,

  - the command only scans the collection once, and

  - if at least one index is to be built in the foreground, the
    operation will build all the specified indexes in the foreground.

- For sharded collections, indexes can now :ref:`cover queries
  <read-operations-covered-query>` that execute against the
  :program:`mongos` if the index includes the shard key.

.. seealso::
   :ref:`3.0-compatibility-indexes` in
   :doc:`/release-notes/3.0-compatibility`

Query Enhancements
~~~~~~~~~~~~~~~~~~

MongoDB 3.0 includes the following query enhancements:

- For geospatial queries, adds support for "big" polygons for
  :query:`$geoIntersects` and :query:`$geoWithin` queries. "Big"
  polygons are single-ringed GeoJSON polygons with areas greater than
  that of a single hemisphere. See :query:`$geometry`,
  :query:`$geoIntersects`, and :query:`$geoWithin` for details.

- For :method:`~db.collection.aggregate()`, adds a new
  :expression:`$dateToString` operator to facilitate converting a date
  to a formatted string.

- Adds the :query:`$eq` query operator to query for equality conditions.

.. seealso:: :ref:`3.0-geo-near-compatibility`

MongoDB Enterprise Features
---------------------------

:doc:`/core/auditing` in MongoDB Enterprise can filter on CRUD
operations. For information, see :ref:`audit-filter`.

Additional Information
----------------------

Changes Affecting Compatibility
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. class:: hidden

   .. toctree::

      /release-notes/3.0-compatibility

Some changes in 3.0 can affect :doc:`compatibility
</release-notes/3.0-compatibility>` and may require user actions. For a
detailed list of compatibility changes, see
:doc:`/release-notes/3.0-compatibility`.

Upgrade Process
~~~~~~~~~~~~~~~

.. class:: hidden

   .. toctree::

      /release-notes/3.0-upgrade
      /release-notes/3.0-downgrade

See :doc:`/release-notes/3.0-upgrade` for full upgrade instructions.

Download
~~~~~~~~

To download MongoDB 3.0, go to the `downloads page`_.

.. _`downloads page`: http://www.mongodb.org/downloads

Additional Resources
~~~~~~~~~~~~~~~~~~~~

- `All Third Party License Notices <https://github.com/mongodb/mongo/blob/v3.0/distsrc/THIRD-PARTY-NOTICES>`_.

- `All JIRA issues resolved in 3.0 <https://jira.mongodb.org/secure/IssueNavigator.jspa?reset=true&jqlQuery=project+%3D+SERVER+AND+fixVersion+in+%28%222.7.0%22%2C%20%222.7.1%22%2C%20%222.7.2%22%2C%20%222.7.3%22%2C%20%222.7.4%22%2C%20%222.7.5%22%2C%222.7.6%22%2C%222.7.7%22%2C%222.7.8%22%2C%20%222.8.0-rc1%22%2C%20%222.8.0-rc2%22%2C%20%222.8.0-rc3%22%2C%20%222.8.0-rc4%22%2C%20%222.8.0-rc5%22%2C%20%223.0.0-rc6%22%2C%20%223.0.0-rc7%22%2C%20%223.0.0-rc8%22%2C%223.0.0%22%2C%20%223.0%22%29>`_.
