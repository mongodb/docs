======================
Upgrade MongoDB to 3.0
======================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

In the general case, the upgrade from MongoDB 2.6 to 3.0 is a
binary-compatible "drop-in" upgrade: shut down the :binary:`~bin.mongod`
instances and replace them with :binary:`~bin.mongod` instances running
3.0. **However**, before you attempt any upgrade please familiarize
yourself with the content of this document, particularly the procedure
for :ref:`upgrading sharded clusters <3.0-upgrade-cluster>`.

If you need guidance on upgrading to 3.0, `MongoDB offers consulting
<https://www.mongodb.com/products/consulting?tck=docs_server#major_version_upgrade>`_
to help ensure a smooth transition without interruption to your
MongoDB application.

.. _3.0-upgrade-considerations:

Upgrade Recommendations and Checklists
--------------------------------------

When upgrading, consider the following:

Upgrade Requirements
~~~~~~~~~~~~~~~~~~~~

To upgrade an existing MongoDB deployment to 3.0, you must be running
2.6. If you're running a version of MongoDB before 2.6, you *must*
upgrade to 2.6 before upgrading to 3.0. 
See :v2.6:`Upgrade to 2.6 </release-notes/2.6-upgrade>` for the procedure to upgrade from 2.4
to 2.6. Once upgraded to MongoDB 2.6, you **cannot** downgrade to any
version earlier than MongoDB 2.4.

If your existing MongoDB deployment is already running with
authentication and authorization, your user data model ``authSchema``
must be at least version 3. To verify the version of your existing
``authSchema``, see :ref:`legacy-auth-model-removed`. To upgrade your
``authSchema`` version, see
:doc:`Upgrade Authorization Data </release-notes/2.6-upgrade-authorization>` for details.

Preparedness
~~~~~~~~~~~~

Before upgrading MongoDB, always test your application in a staging
environment before deploying the upgrade to your production
environment.

Some changes in MongoDB 3.0 require manual checks and intervention.
Before beginning your upgrade, see the
:v3.0:`Compatibility Changes in MongoDB 3.0 </release-notes/3.0-compatibility>` document to ensure that your
applications and deployments are compatible with MongoDB 3.0. Resolve
the incompatibilities in your deployment before starting the upgrade.

Downgrade Limitations
~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-3.0-downgrade-path.rst

If you upgrade to 3.0 and have run ``authSchemaUpgrade``, you
**cannot** downgrade to 2.6 without disabling ``--auth`` or
restoring a pre-upgrade backup, as ``authSchemaUpgrade``
discards the ``MONGODB-CR`` credentials used in 2.6. See
:ref:`3.0-upgrade-auth-schema`.

Upgrade MongoDB Processes
-------------------------

.. _3.0-upgrade-standalone:

Upgrade Standalone ``mongod`` Instance to MongoDB 3.0
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following steps outline the procedure to upgrade a standalone
:binary:`~bin.mongod` from version 2.6 to 3.0. To upgrade from version
2.4 to 3.0, :v2.6:`upgrade to version 2.6 </release-notes/2.6-upgrade>`
*first*, and then use the following procedure to upgrade from 2.6 to 3.0.

Upgrade Binaries
````````````````

If you installed MongoDB from the MongoDB ``apt``, ``yum``, or ``zypper``
repositories, you should upgrade to 3.0 using your package manager. Follow the
appropriate :v3.0:`installation instructions </administration/install-on-linux>`
for your Linux system. This will involve adding a repository for the new
release, then performing the actual upgrade.

Otherwise, you can manually upgrade MongoDB:

..  include:: /includes/steps/3.0-upgrade-mongod.rst

.. _3.0-upgrade-wiredtiger-standalone:

Change Storage Engine for Standalone to WiredTiger
``````````````````````````````````````````````````

To change the storage engine for a standalone :binary:`~bin.mongod`
instance to WiredTiger, see
:doc:`/tutorial/change-standalone-wiredtiger`.

.. _3.0-upgrade-replica-set:

Upgrade a Replica Set to 3.0
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Prerequisites
`````````````

- If the oplog contains entries generated by versions of MongoDB
  that precede version 2.2.1, you must wait for the entries to be
  overwritten by later versions *before* you can upgrade to MongoDB
  3.0. For more information, see :ref:`3.0-oplog-format-change`

- :ref:`Stricter validation in MongoDB 3.0
  <3.0-compatibility-repl-set-config>` of replica set configuration
  may invalidate previously-valid replica set configuration,
  preventing replica sets from starting in MongoDB 3.0. For more
  information, see :ref:`3.0-compatibility-repl-set-config`.

- All replica set members must be running version 2.6 before you can upgrade
  them to version 3.0. To upgrade a replica set from an earlier MongoDB
  version, :v2.6:`upgrade all members of the replica set to version 2.6
  </release-notes/2.6-upgrade>` *first*, and then follow the procedure
  to upgrade from MongoDB 2.6 to 3.0.

Upgrade Binaries
`````````````````

You can upgrade from MongoDB 2.6 to 3.0 using a "rolling" upgrade to
minimize downtime by upgrading the members individually while the other
members are available:

.. include:: /includes/steps/3.0-upgrade-replica-set.rst

Replica set failover is not instant and will render the set
unavailable to accept writes until the failover process
completes. This may take 30 seconds or more: schedule the
upgrade procedure during a scheduled maintenance window.

.. _3.0-upgrade-repl-set-wiredtiger:

Change Replica Set Storage Engine to WiredTiger
```````````````````````````````````````````````

To change the storage engine for a replica set to WiredTiger,
see :doc:`/tutorial/change-replica-set-wiredtiger`.

.. _3.0-upgrade-cluster:

Upgrade a Sharded Cluster to 3.0
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Only upgrade sharded clusters to 3.0 if **all** members of the
cluster are currently running instances of 2.6. The only supported
upgrade path for sharded clusters running 2.4 is via 2.6. The upgrade
process checks all components of the cluster and will produce warnings
if any component is running version 2.4.

Considerations
``````````````

The upgrade process does not require any downtime. However, while you
upgrade the sharded cluster, ensure that clients do not make changes
to the collection meta-data. For example, during the upgrade, do **not**
do any of the following:

- :method:`sh.enableSharding()`

- :method:`sh.shardCollection()`

- :method:`sh.addShard()`

- :method:`db.createCollection()`

- :method:`db.collection.drop()`

- :method:`db.dropDatabase()`

- any operation that creates a database

- any other operation that modifies the cluster metadata in any
  way. See :doc:`/reference/sharding` for a complete list
  of sharding commands. Note, however, that not all commands on
  the :doc:`/reference/sharding` page modifies the
  cluster meta-data.

Upgrade Sharded Clusters
````````````````````````

*Optional but Recommended.* As a precaution, take a backup of the
``config`` database *before* upgrading the sharded cluster.

.. include:: /includes/steps/3.0-upgrade-sharded-cluster.rst

.. _3.0-upgrade-cluster-wiredtiger:

Change Sharded Cluster Storage Engine to WiredTiger
```````````````````````````````````````````````````

For a sharded cluster in MongoDB 3.0, you can choose to update the
shards to use WiredTiger storage engine and have the config servers use
MMAPv1. If you update the config servers to use WiredTiger, you must
update all three config servers to use WiredTiger.

To change a sharded cluster to use WiredTiger, see
:doc:`/tutorial/change-sharded-cluster-wiredtiger`.

.. |action| replace:: Upgrade
.. |version-new| replace:: 3.0
.. |version-stop| replace:: 2.6

.. _3.0-upgrade-auth-schema:

Upgrade Existing ``MONGODB-CR`` Users to Use ``SCRAM-SHA-1``
------------------------------------------------------------

After upgrading the binaries, see :ref:`3.0-scram` for details on
``SCRAM-SHA-1`` upgrade scenarios.

.. include:: /includes/2.6-3.0-upgrade-downgrade-procedure.rst

.. _`MongoDB Download Page`: http://www.mongodb.org/downloads?tck=docs_server
