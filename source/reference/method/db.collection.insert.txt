======================
db.collection.insert()
======================

.. default-domain:: mongodb

.. method:: db.collection.insert(document)
   
   The :method:`insert() <db.collection.insert()>` method inserts a
   document or documents into a collection.

   .. versionchanged:: 2.2
      The :method:`insert() <db.collection.insert()>` method can accept
      an array of documents to perform a bulk insert of the
      documents into the collection.
   
   Consider the following behaviors of the :method:`insert()
   <db.collection.insert()>` method:
   
   - If the collection does not exist, then the :method:`insert()
     <db.collection.insert()>` method will create the collection.

   - If the document does not specify an :term:`_id` field,
     then MongoDB will add the ``_id`` field and assign a unique
     :term:`objectid` for the document before inserting.
     
   - If the document specifies a new field, then the
     :method:`insert() <db.collection.insert()>` method inserts the
     document with the new field and *no* schema change is
     necessary to the collection or the existing documents.
   
   The :method:`insert() <db.collection.insert()>` method takes one of
   the following parameters:

   :param document: 
   
          A document to insert into the collection.

   :param array documents: 

          .. versionadded:: 2.2

          An array of documents to insert into the collection.

   .. examples-begin

   Consider the following examples of the :method:`insert()
   <db.collection.insert()>` method.
   
   - To insert a single document and have MongoDB generate the unique
     ``_id``, omit the ``_id`` field in the document and pass
     the document to the :method:`insert() <db.collection.insert()>`
     method as in the following:

     .. code-block:: javascript

        db.products.insert( { item: "card", qty: 15 } )

     The query will insert into the ``products`` collection a new
     document with the field ``item`` set to ``card``, the field
     ``qty`` set to ``15`` and the field ``_id`` set to a unique
     ``objectid``:
     
     .. code-block:: javascript
     
        { "_id" : ObjectId("5063114bd386d8fadbd6b004"), "item" : "card", "qty" : 15 }
     
   - To insert a single document where you specify the ``_id``
     field, include the ``_id`` field set to a unique identifier
     and pass the document to the
     :method:`insert() <db.collection.insert()>` method as in the
     following:

     .. code-block:: javascript

        db.products.insert( { _id: 10, item: "box", qty: 20 } )

     The query will insert into the ``products`` collection a new
     document with the field ``_id`` set to ``10``,
     the field ``item`` set to ``box``, the field
     ``qty`` set to ``20``:
     
     .. code-block:: javascript
     
        { "_id" : 10, "item" : "box", "qty" : 20 }
        
   - To insert multiple documents, pass an array of documents to the
     :method:`insert() <db.collection.insert()>` method as in the
     following:

     .. code-block:: javascript

        db.products.insert( [ { _id: 11, item: "pencil", qty: 50, type: "no.2" },
                              {          item: "pen", qty: 20 }, 
                              {          item: "eraser", qty: 25 } ] )

     The query will insert into the ``products`` collection three documents:
     
     - A document with the fields ``_id`` set to ``11``, ``item``
       set to ``pencil``, ``qty`` set to ``50``, and the ``type`` set
       to ``no.2``.
         
     - A document with the fields ``_id`` set to a unique
       ``objectid``, ``item`` set to ``pen``,
       and ``qty`` set to ``20``.
          
     - A document with the fields ``_id`` set to a unique
       ``objectid``, ``item`` set to
       ``eraser``, and ``qty`` set to ``25``.
             
     .. code-block:: javascript
     
        { "_id" : 11, "item" : "pencil", "qty" : 50, "type" : "no.2" }
        { "_id" : ObjectId("50631bc0be4617f17bb159ca"), "item" : "pen", "qty" : 20 }
        { "_id" : ObjectId("50631bc0be4617f17bb159cb"), "item" : "eraser", "qty" : 25 }

     Notice that the addition of the new field ``type`` for the first
     document did not require any changes to either the
     collection or the other documents.

   .. examples-end
