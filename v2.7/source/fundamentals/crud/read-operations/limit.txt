.. _rust-limit-guide:

====================================
Limit the Number of Returned Results
====================================

.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: read operation, code example, pipeline, customize output 

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

In this guide, you can learn how to use the {+driver-long+} to perform **limit**
operations. These operations specify the number of documents returned from a
read operation.

Use the ``limit()`` method to cap the number of documents that a read operation
can return. The operation returns fewer documents if there are not enough
documents present to reach the specified limit. 

If you use the ``limit()`` method with the ``skip()`` method, the skip applies
first, and the limit only applies to the remaining documents. To learn more
about skip operations, see the :ref:`Skip Returned Results <rust-skip-guide>`
guide.

Sample Data for Examples
------------------------

The examples in this guide use the following ``Book`` struct as a model for
documents in the ``books`` collection:

.. literalinclude:: /includes/fundamentals/code-snippets/crud/limit.rs
   :start-after: start-book-struct
   :end-before: end-book-struct
   :language: rust
   :dedent:

The following code shows how to insert sample data into the ``books``
collection:

.. literalinclude:: /includes/fundamentals/code-snippets/crud/limit.rs
   :start-after: start-sample-data
   :end-before: end-sample-data
   :language: rust
   :dedent:

Limit Documents
---------------

You can specify the maximum number of documents to return in a query or in an
aggregation pipeline.

.. _rust-limit-method:

Query Results Example
~~~~~~~~~~~~~~~~~~~~~

To limit the number of documents returned, you can initialize a ``FindOptions``
instance and specify the number of documents you want to limit using the
``limit()`` method. Then, pass your ``FindOptions`` struct as a parameter to the
``find()`` method.

This example runs a ``find()`` operation that performs the following actions:

- Filters the results to only include documents where the ``length`` field is
  greater than ``1000``
- Sorts the results in ascending order of their ``length`` field values
- Limits the results to the first two documents

.. io-code-block::
   :copyable: true

   .. input:: /includes/fundamentals/code-snippets/crud/limit.rs
      :start-after: start-limit-example
      :end-before: end-limit-example
      :language: rust
      :dedent:

   .. output::
      :language: console
      :visible: false

      Book { name: "Atlas Shrugged", author: "Rand", length: 1088 }
      Book { name: "A Dance with Dragons", author: "Martin", length: 1104 }

.. _rust-aggregation-limit:

Aggregation Example
~~~~~~~~~~~~~~~~~~~

You can use the ``$limit`` stage in an aggregation pipeline to limit returned
results. To learn more about aggregation operations, see the
:ref:`rust-aggregation` guide.

This example runs an aggregation pipeline that performs the following actions:

- Sorts the results in descending order of their ``length`` field values
- Limits the returned results to the first two documents

.. io-code-block::
   :copyable: true

   .. input:: /includes/fundamentals/code-snippets/crud/limit.rs
      :start-after: start-aggregation-limit-example
      :end-before: end-aggregation-limit-example
      :language: rust
      :dedent:

   .. output::
      :language: console
      :visible: false

      Document({"_id": ObjectId("..."), "name": String("Les Mis√©rables"), "author": String("Hugo"), "length": Int32(1462)})
      Document({"_id": ObjectId("..."), "name": String("A Dance with Dragons"), "author": String("Martin"), "length": Int32(1104)})

Additional Information
----------------------

To learn more about the operations mentioned in this guide, see the following guides:

- :ref:`rust-query-guide`
- :ref:`rust-retrieve-guide`
- :ref:`rust-aggregation`
- :ref:`rust-sort-guide`

API Documentation
~~~~~~~~~~~~~~~~~

To learn more about any of the methods or types discussed in this guide, see the
following API documentation:

- `find() <{+api+}/struct.Collection.html#method.find>`__
- `FindOptions <{+api+}/options/struct.FindOptions.html>`__
- `Cursor <{+api+}/struct.Cursor.html>`__
- `aggregate() <{+api+}/struct.Collection.html#method.aggregate>`__