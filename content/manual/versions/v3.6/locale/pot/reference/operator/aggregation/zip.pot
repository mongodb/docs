# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/aggregation/zip.txt:3
msgid "$zip (aggregation)"
msgstr ""

#: ../source/reference/operator/aggregation/zip.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/operator/aggregation/zip.txt:20
msgid "Transposes an array of input arrays so that the first element of the output array would be an array containing, the first element of the first input array, the first element of the second input array, etc."
msgstr ""

#: ../source/reference/operator/aggregation/zip.txt:25
msgid "For example, :expression:`$zip` would transform ``[ [ 1, 2, 3 ], [ \"a\", \"b\", \"c\" ] ]`` into ``[ [ 1, \"a\" ], [ 2, \"b\" ], [ 3, \"c\" ] ]``."
msgstr ""

#: ../source/reference/operator/aggregation/zip.txt:29
msgid ":expression:`$zip` has the following syntax:"
msgstr ""

#: ../source/reference/operator/aggregation/zip.txt:45
msgid "Operand"
msgstr ""

#: ../source/reference/operator/aggregation/zip.txt:46
msgid "Description"
msgstr ""

#: ../source/reference/operator/aggregation/zip.txt:48
msgid "``inputs``"
msgstr ""

#: ../source/reference/operator/aggregation/zip.txt:50
msgid "An array of :ref:`expressions <aggregation-expressions>` that resolve to arrays. The elements of these input arrays combine to form the arrays of the output array."
msgstr ""

#: ../source/includes/extracts/agg-expression-null-operand-zip.rst:1
msgid "If  any of the ``inputs`` arrays resolves to a value of ``null`` or refers to a missing field, :expression:`$zip` returns ``null``."
msgstr ""

#: ../source/includes/extracts/agg-expression-null-operand-zip.rst:4
msgid "If any of the ``inputs`` arrays does not resolve to an array or ``null`` nor refers to a missing field, :expression:`$zip` returns an error."
msgstr ""

#: ../source/reference/operator/aggregation/zip.txt:56
msgid "``useLongestLength``"
msgstr ""

#: ../source/reference/operator/aggregation/zip.txt:58
msgid "A boolean which specifies whether the length of the longest array determines the number of arrays in the output array."
msgstr ""

#: ../source/reference/operator/aggregation/zip.txt:61
msgid "The default value is ``false``: the shortest array length determines the number of arrays in the output array."
msgstr ""

#: ../source/reference/operator/aggregation/zip.txt:64
msgid "``defaults``"
msgstr ""

#: ../source/reference/operator/aggregation/zip.txt:66
msgid "An array of default element values to use if the input arrays have different lengths. You must specify ``useLongestLength: true`` along with this field, or else :expression:`$zip` will return an error."
msgstr ""

#: ../source/reference/operator/aggregation/zip.txt:71
msgid "If ``useLongestLength: true`` but ``defaults`` is empty or not specified, :expression:`$zip` uses ``null`` as the default value."
msgstr ""

#: ../source/reference/operator/aggregation/zip.txt:75
msgid "If specifying a non-empty ``defaults``, you must specify a default for *each* input array or else :expression:`$zip` will return an error."
msgstr ""

#: ../source/reference/operator/aggregation/zip.txt:80
msgid "Behavior"
msgstr ""

#: ../source/reference/operator/aggregation/zip.txt:82
msgid "The input arrays do not need to be of the same length. By default, the output array has the length of the shortest input array, but the ``useLongestLength`` option instructs :expression:`$zip` to output an array as long as the longest input array."
msgstr ""

#: ../source/reference/operator/aggregation/zip.txt:92
#: ../source/reference/operator/aggregation/zip.txt:147
msgid "Example"
msgstr ""

#: ../source/reference/operator/aggregation/zip.txt:93
msgid "Results"
msgstr ""

#: ../source/reference/operator/aggregation/zip.txt:141
msgid "Because ``useLongestLength: true``, ``$zip`` will pad the shorter input arrays with the corresponding ``defaults`` elements."
msgstr ""

#: ../source/reference/operator/aggregation/zip.txt:144
msgid "This yields ``[ [ 1, 2, 4 ], [ \"a\", 3, \"c\" ] ]``."
msgstr ""

#: ../source/reference/operator/aggregation/zip.txt:150
msgid "Matrix Transposition"
msgstr ""

#: ../source/reference/operator/aggregation/zip.txt:152
msgid "A collection called ``matrices`` contains the following documents:"
msgstr ""

#: ../source/reference/operator/aggregation/zip.txt:161
msgid "To compute the transpose of each 3x2 matrix in this collection, you can use the following aggregation operation:"
msgstr ""

#: ../source/reference/operator/aggregation/zip.txt:181
msgid "This will return the following 2x3 matrices:"
msgstr ""

#: ../source/reference/operator/aggregation/zip.txt:189
msgid "Filtering and Preserving Indexes"
msgstr ""

#: ../source/reference/operator/aggregation/zip.txt:191
msgid "You can use ``$zip`` with :expression:`$filter` to obtain a subset of elements in an array, saving the original index alongside each retained element."
msgstr ""

#: ../source/reference/operator/aggregation/zip.txt:195
msgid "A collection called ``pages`` contains the following document:"
msgstr ""

#: ../source/reference/operator/aggregation/zip.txt:207
msgid "The following aggregation pipeline will first zip the elements of the ``pages`` array together with their index, and then filter out only the pages with at least one review:"
msgstr ""

#: ../source/reference/operator/aggregation/zip.txt:237
msgid "This will return the following document:"
msgstr ""

