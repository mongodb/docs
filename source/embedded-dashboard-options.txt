.. _embedded-dashboard-options:

==========================
Embedded Dashboard Options
==========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

You can customize the appearance and behavior of your embedded 
dashboards with a variety of options. Options are available to 
dashboards embedded with the :ref:`Embedding SDK 
<embedding-charts-sdk>` and embedded within :ref:`iframes 
<embedding-dashboards-iframe>`.

.. note::

   To embed dashboards, you must configure embedding
   options on your data sources. For instructions, see
   :ref:`embedding-dashboards`.

.. _sdk-option-reference-dashboard:
.. _embed-options-refresh-dashboard:
.. _dashboard-display-theme:

.. tabs::

   tabs:
     - id: embedding-sdk-options
       name: Embedding SDK
       content: |
         The Embedding SDK psrovides the JavaScript ``createDashboard`` 
         method for rendering a dashboard within a web page. You can 
         use options to control many aspects of a dashboard (for 
         example, its height and width).

         .. example::

            The following example demonstrates how to use the 
            ``createDashboard`` method with options that specify the 
            height and width of the dashboard.
    
            .. code-block:: javascript
    
               const dashboard = sdk.createDashboard({
                 dashboardId: "8d4dff93-e7ca-4ccd-a622-e20e8a100197",
                 baseUrl: "https://charts.mongodb.com/dashboards-embedding-examples-hmewt",
                 height: 300,
                 width: 400
               });

         The following options are available to ``createDashboard``:

         .. list-table::
            :header-rows: 1
            :widths: 10 10 70 10
         
            * - Option
              - Type
              - Description
              - Required?
         
            * - ``baseUrl``
              - string
              - Base URL of the dashboard.
              - yes
         
            * - ``dashboardID``
              - string
              - Unique string that identifies the dashboard.
              - yes
         
            * - ``height``
              - number
              - Height of the dashboard. If omitted, it 
                defaults to the height of its container. If a value is 
                provided without units, it is assumed to be pixels (px).
              - no
         
            * - ``width``
              - number
              - Width of the dashboard. If omitted, it 
                defaults to the width of its container. If a value is 
                provided without units, it is assumed to be pixels (px).
              - no
         
            * - ``autoRefresh``
              - boolean
              - Flag that specifies whether the dashboard automatically 
                refreshes. If omitted, dashboards don't automatically 
                refresh.

                Use this option with the ``maxDataAge`` option to
                configure how often the dashboard refreshes. 
              - no

            * - ``maxDataAge``
              - number
              - Maximum age of data to load from the cache
                when loading or refreshing the dashbnoard. If omitted,
                |charts| renders the dashboard with data from the cache 
                only if the data is less than one hour old.

                To learn how |charts| loads data from the cache when
                loading or refreshing the dashboard based on the
                ``autoRefresh`` and ``maxDataAge`` values, see
                :ref:`auto-refresh-behavior-dashboard`.

              - no
         
            * - ``theme``
              - string
              - :ref:`Theme <dashboard-display-theme>` to use on the 
                dashboard. Valid options are:
         
                - ``light`` for a light background with dark text and 
                  dashboard elements, or
         
                - ``dark`` for a dark background with light text and 
                  dashboard elements.
         
                If omitted, defaults to ``light``.
              - no
         
            * - ``background``
              - string
              - Background color to apply to your dashboard instead 
                of the ``theme`` background. You can specify:
         
                - A color hex code
         
                - A |css| color name
         
                - ``transparent`` for a transparent background
         
                If no background is provided, the background color 
                defaults to the current ``theme``:
         
                - ``#F1F5F4`` for the ``light`` theme, or
         
                - ``#12212C`` for the ``dark`` theme.
              - no
         
            * - ``showAttribution``
              - boolean
              - Specifies whether to display the 
                :guilabel:`MongoDB` logo below the dashboard. Defaults 
                to ``true``.
              - no
         
            * - ``getUserToken``
              - object
              - Function that returns a ``base64``-encoded |jwt| token. 
                |charts-short| validates this token to determine 
                whether to render an authenticated dashboard.
         
                If you enabled authenticated access, |charts| renders 
                the authenticated dashboard view only if |charts-short| 
                can validate the token using the 
                :doc:`configured authentication providers 
                </configure-auth-providers>`. If the token is invalid,
                |charts-short| doesn't render the dashboard.
                
                If you enabled unauthenticated access, |charts| always 
                renders the unauthenticated dashboard view.
         
                .. seealso::
                
                   :ref:`jwt-sdk-tutorial`
         
              - no

         After the dashboard is created, you can control the 
         configuration of the dashboard by calling methods on the 
         ``Dashboard`` instance returned by 
         ``DashboardsEmbedSDK.createDashboard({ ... })``.

         .. example::

            The example code snippets configures the following 
            options for a Dashboard instance named ``dashboard``:
            
            - The theme to ``dark``
            - The automatic refresh rate to every 30 seconds
   
            .. code-block:: javascript
   
               dashboard.setTheme("dark");
               dashboard.setAutoRefresh(true);
               dashboard.setMaxDataAge(30);

         .. list-table::
            :header-rows: 1
            :widths: 50 50

            * - Method
              - Description

            * - ``setAutoRefresh``
              - Flag that specifies whether the dashboard refreshes 
                automatically. If omitted, dashboards don't 
                refresh automatically.

                Use this method with the ``setMaxDataAge`` method to
                configure how often the dashboard refreshes.

            * - ``setMaxDataAge``
              - Maximum age of data to load from the cache
                when loading or refreshing the dashboard. If omitted,
                |charts| renders the dashboard with data from the cache 
                only if the data is less than one hour old.

                To learn how |charts| loads data from the cache when
                loading or refreshing the dashboard based on the
                ``setAutoRefresh`` and ``setMaxDataAge`` values, see
                :ref:`auto-refresh-behavior-dashboard`.

            * - ``setTheme(theme: 'dark' | 'light')``
              - Current theme of the embedded dashboard. When 
                setting the theme to ``dark``, ensure that 
                your dashboard's background color has appropriate 
                contrast so that the information is visible.

            * - ``getChart('<chartID>')``
              - Retrieves a specific chart from the embedded dashboard
                using the chart's ``chartId`` string. After calling this 
                method, you can :ref:`highlight elements <highlight-chart-elements>`
                or :ref:`filter data <filter-embedded-sdk>` on the chart.

         .. seealso::

            - `Embedding SDK API Documentation
              <https://www.npmjs.com/package/@mongodb-js/charts-embed-dom>`__

            - `Embedding SDK examples
              <https://github.com/mongodb-js/charts-embed-sdk/blob/master/examples>`__

     - id: iframe
       name: iframe
       content: |
         You can set dashboard options within an iframe by adding 
         inline style tags and by adding query parameters to the 
         dashboard URL. Inline style tags allow you to specify display 
         options such as height, width, background color, and border 
         width. Query parameters allow you to specify  a light or dark 
         display theme.
  
         Configure Auto Refresh and Data Caching Behavior
         ------------------------------------------------
         
         Use the ``autoRefresh`` query parameter to configure the 
         dashboard to refresh automatically. 
         
         Use the ``maxDataAge`` query parameter to:
         
         - Determine the interval at which the dashboard refreshes if
           ``autoRefresh`` is ``true``.
         - Configure the maximum age of data to load from the cache when
           loading or manually refreshing the dashboard if 
           ``autoRefresh`` is ``false`` or omitted. 
         
           To learn how |charts| loads data from the cache when loading
           or refreshing the dashboard based on the ``autoRefresh`` and
           ``maxDataAge`` values, see 
           :ref:`auto-refresh-behavior-dashboard`.
         
         Use the options on the 
         :guilabel:`Unauthenticated` tab on the 
         :guilabel:`Embed dashboard` dialog to customize the 
         ``autoRefresh`` value in the iframe snippet. 
         
         .. example::
         
            The following iframe embeds a dashboard which automatically
            refreshes every 30 seconds as defined by the
            ``autoRefresh=true`` and the ``maxDataAge=30`` query
            parameters:
         
            .. code-block:: html
         
               <iframe style="border: none;border-radius: 2px;box-shadow: 0 2px
               10px 0 rgba(70, 76, 79, .2);" width="640" height="480" src="
               {charts-host}/embed/dashboards?id=b3ca720f-4b4a-40b4-a726-e7dc0c49aa1c&
               autoRefresh=true&maxDataAge=30"></iframe>
         
         Considerations
         ~~~~~~~~~~~~~~
         
         - The minimum cache duration is 10 seconds. If ``autoRefresh``
           is ``true`` and you specify a ``maxDataAge`` value that is 
           less than ``10``, the dashboard refreshes every ``10`` 
           seconds.
         
         - If you specify a ``maxDataAge`` value that isn't an
           integer or is less than ``-1``, |charts-short| returns an 
           :ref:`error <embedded-errors>`. 
         
         
         Specify a Display Theme
         -----------------------
         
         Use the ``theme`` query parameter to select a display theme:
         
         - ``light``: optimizes dashboard axes and text for 
           presentation against a light or white background.
         - ``dark``: optimizes dashboard axes and text for 
           presentation against a dark or black background.
         
         Choosing a ``theme`` value updates only the iframe snippet 
         that you use to embed the dashboard in your application. The 
         dashboard isn't saved with a ``theme`` value. The dashboard 
         renders with the light theme by default. Embedded dashboards 
         that don't include the theme parameter also render with the 
         light theme.
         
         .. note::
            Choosing the ``light`` or  ``dark`` theme doesn't change 
            the color palette that dashboard data elements use. All 
            bars and marks display using the default palette or the 
            custom palette the dashboard author chooses.
         
            For example, if you choose a dashboard bar to render in 
            black, choosing the ``dark`` theme doesn't change the 
            color of this bar to make it more visible against a dark 
            background.
         
         Customize Display Options
         -------------------------
         
         |charts| adds inline style properties to the iframe snippet 
         you copy from the UI. These inline style properties add a 
         background color and a border with a box shadow to the 
         embedded dashboard based on the theme you select:
         
         - ``light`` theme ``background``: ``#F1F5F4``
         - ``dark`` theme ``background``: ``#12212C``
         - ``border``: ``none``
         - ``border-radius``: ``2px``
         - ``box-shadow``: ``0 2px 10px 0 rgba(70, 76, 79, .2)``
         - ``width``: ``640``
         - ``height``: ``480``
         
         Change the values of the inline style properties to change how 
         the embedded dashboard displays in your application.

         Background Color
         ~~~~~~~~~~~~~~~~
         
         - Change the value of the ``background`` property to any value 
           supported by the ``background`` CSS property to display the 
           dashboard against it. See `background 
           <https://developer.mozilla.org/en-US/docs/Web/CSS/background>`__
           in the MDN Web Docs for more information.
         
         - Change the ``background`` property to ``transparent`` to
           display the dashboard with a transparent background, allowing
           your application's background to display through the 
           dashboard.

         - Remove the ``background`` property to use the default
           background color of the theme you choose:

           - ``#F1F5F4`` for the ``light`` theme (default), or
         
           - ``#12212C`` for the ``dark`` theme.
         
         Dashboard Border
         ~~~~~~~~~~~~~~~~

         Modify or remove the following properties to customize or 
         remove the dashboard border:
         
         - ``border``
         - ``border-radius``
         - ``box-shadow`` 
         
         Display Theme
         ~~~~~~~~~~~~~

         You can change the value of the ``theme`` query parameter in 
         the iframe snippet after you paste it into your application. 
         If you do, you must adjust the iframe's inline style 
         properties to match the theme you choose.
         
         .. example::
         
            If you change the ``theme`` from ``light`` to ``dark``, 
            adjust the value of the ``background`` property in the 
            iframe snippet to display the dashboard against a dark 
            background.
         
            Dashboard using ``light`` theme with default ``light`` 
            theme ``background`` of ``#F1F5F4``:
         
            .. figure:: /images/charts/dashboard-light-theme-default.png
               :figwidth: 540
               :alt: Dashboard displayed using the light theme with light theme style.
         
            Dashboard using ``dark`` theme with default ``dark`` 
            theme ``background`` of ``#12212C``:
         
            .. figure:: /images/charts/dashboard-dark-theme-values.png
               :figwidth: 540
               :alt: Dashboard displayed using the dark theme with dark theme style.
         
         Iframe Example
         ~~~~~~~~~~~~~~
         
         The following iframe embeds a dashboard with the ``dark`` 
         theme with the default ``dark`` theme inline style properties. 
         The code is formatted for readability.
         
         .. code-block:: html
            :copyable: false
            :emphasize-lines: 2,3
         
            <iframe style="
            background: #21313C;border: none;border-radius: 2px;
            box-shadow: 0 2px 10px 0 rgba(70, 76, 79, .2);" 
            width="640" height="480" src="
            https://charts.mongodb.com/charts-crllr/embed/dashboards?id=a1b2c3d4-a1b2-c3d4-9766-47b0b2daaff3&
            theme=dark
            "></iframe>
         
         Remove the MongoDB Logo
         ~~~~~~~~~~~~~~~~~~~~~~~
         
         Use the ``attribution`` query parameter with a value of 
         ``false`` to display your embedded dashboard without the 
         ``MongoDB`` logo.
         
         The following iframe snippet renders a dashboard that does not 
         display the ``MongoDB`` logo:
         
         .. code-block:: html
            :copyable: false
            :emphasize-lines: 8
         
            <iframe 
            style="background: #FFFFFF;border: none;border-radius: 2px;
            box-shadow: 0 2px 10px 0 rgba(70, 76, 79, .2);" 
            width="640" height="480" src="
            https://charts.mongodb.com/mongodb-charts-twsqq/embed/dashboards
            ?id=a1b2c3d4-a1b2-c3d4-9766-47b0b2daaff3&
            theme=light&
            attribution=false
            "></iframe>

.. _auto-refresh-behavior-dashboard:

Auto Refresh and Data Caching Behavior
--------------------------------------

The following table describes how |charts| loads data from the cache
when loading or refreshing the dashboard based on the
``autoRefresh`` and  ``maxDataAge`` values.

.. include:: /includes/autorefresh-maxdataage-values.rst
