.. meta::
   :robots: noindex, nosnippet 

======================================
$listLocalSessions (aggregation stage)
======================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. pipeline:: $listLocalSessions

   Lists the sessions cached in memory by the :binary:`~bin.mongod` or
   :binary:`~bin.mongos` instance.

   .. important::

      When a user creates a session on a :binary:`~bin.mongod` or
      :binary:`~bin.mongos` instance, the record of the session initially
      exists only in-memory on the instance; i.e. the record is local
      to the instance. Periodically, the instance will sync its cached
      sessions to the :data:`system.sessions <config.system.sessions>`
      collection in the ``config`` database, at which time, they are
      visible to :pipeline:`$listSessions` and all members of the
      deployment. Until the session record exists in the
      ``system.sessions`` collection, you can only list the session via
      the :pipeline:`$listLocalSessions` operation.

   The :pipeline:`$listLocalSessions` operation uses the :method:`db.aggregate()`
   method and *not* the :method:`db.collection.aggregate()`.

   To run :pipeline:`$listLocalSessions`, it must be the first stage in
   the pipeline.

   The stage has the following syntax:

   .. code-block:: javascript

      { $listLocalSessions: <document> }

   The :pipeline:`$listLocalSessions` stage takes a document with one
   of the following contents:

   .. list-table::
      :header-rows: 1
      :widths: 70 30

      * - Field

        - Description

      * - ``{ }``

        - If running with access control, returns all sessions for the
          current authenticated user.

          If running without access control, returns all sessions.

      * - ``{ users: [ { user: <user>, db: <db> }, ... ] }``

        - Returns all sessions for the specified users. If running with
          access control, the authenticated user must have privileges
          with :authaction:`listSessions` action on the cluster to list
          sessions for other users.

      * - ``{ allUsers: true }``

        - Returns all sessions for all users. If running with access
          control, the authenticated user must have privileges with
          :authaction:`listSessions` action on the cluster.

Restrictions
------------

``$listLocalSessions`` is not allowed in :doc:`transactions </core/transactions>`.

Examples
--------

.. tabs-drivers::

   .. tab::
      :tabid: shell

      List All Local Sessions
      ~~~~~~~~~~~~~~~~~~~~~~~

      From the connected :binary:`mongod` / :binary:`mongos` instance's
      in-memory cache of sessions, the following aggregation operation lists
      all sessions:

      .. note::

         If running with access control, the current user must have
         privileges with :authaction:`listSessions` action on the cluster.

      .. code-block:: javascript

         db.aggregate( [  { $listLocalSessions: { allUsers: true } } ] )

      List All Local Sessions for the Specified Users
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      From the connected :binary:`mongod` or :binary:`mongos` instance's
      in-memory cache, the following aggregation operation lists all the
      sessions for the specified user ``myAppReader@test``:

      .. note::

         If running with access control and the current user is not the
         specified user, the current user must
         have privileges with :authaction:`listSessions` action on the cluster.

      .. code-block:: javascript

         db.aggregate( [ { $listLocalSessions: { users: [ { user: "myAppReader", db: "test" } ] } } ] )

      List All Local Sessions for the Current User
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      From the connected :binary:`mongod` / :binary:`mongos` instance's
      in-memory cache, the following aggregation operation lists all sessions
      for the current user **if** run with access control:

      .. code-block:: javascript

         db.aggregate( [ { $listLocalSessions: { } } ] )

      If run **without** access control, the operation lists all local
      sessions.

   .. tab::
      :tabid: nodejs

      To use the {+node-driver-full+} to add a ``$listLocalSessions`` stage to an
      aggregation pipeline, use the ``$listLocalSessions`` operator in a pipeline
      object.

      List All Local Sessions
      ~~~~~~~~~~~~~~~~~~~~~~~

      The following aggregation operation lists all local sessions:

      .. literalinclude:: /includes/driver-examples/node/aggregation/examples.js
         :start-after: //start listLocalSessionsAll
         :end-before: //end listLocalSessionsAll
         :language: javascript
         :dedent: 2

      .. note::

         If running with access control, the current user must have privileges
         with :authaction:`listSessions` action on the cluster.

      List All Local Sessions for the Specified Users
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      The following aggregation operation lists all the sessions for the
      specified user ``myAppReader@test``:   

      .. literalinclude:: /includes/driver-examples/node/aggregation/examples.js
         :start-after: //start listLocalSessionsSpec
         :end-before: //end listLocalSessionsSpec
         :language: javascript
         :dedent: 2   

      .. note::

         If running with access control and the current user is not the
         specified user, the current user must have privileges with
         :authaction:`listSessions` action on the cluster.

      List All Local Sessions for the Current User
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      If run with access control, the following aggregation operation lists 
      all sessions for the current user:

      .. literalinclude:: /includes/driver-examples/node/aggregation/examples.js
         :start-after: //start listLocalSessionsCurrent
         :end-before: //end listLocalSessionsCurrent
         :language: javascript
         :dedent: 2  
      
      If run without access control, the operation lists all local sessions.
