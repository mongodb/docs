.. _live-import-replica:

===========================================================
Legacy Live Migration (Pull) of Replica Sets to {+service+}
===========================================================

.. meta::
   :description: Migrate a replica set to Atlas using live migration, detailing prerequisites, network access, and cutover steps.

.. default-domain:: mongodb

.. facet::
   :name: genre
   :values: tutorial

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. include:: /includes/flex-serverless-dont-use.rst

.. include:: /includes/fact-c2c.rst

|service| can pull a source replica set to an |service| {+cluster+} using
the legacy live migration process. |service| syncs from the source to the destination
{+cluster+} until you cut your applications over to the destination |service|
{+cluster+}.

Once you reach the cutover step in the following procedure, stop
writes to the source {+cluster+}. Stop your application instances,
point them to the |service| {+cluster+}, and restart them.


Restrictions
------------

- You can't select an ``M0`` (Free Tier) or a {+Flex-cluster+} as the source or destination
  for legacy live migration (pull). To migrate data from an ``M0`` (Free Tier)
  cluster or from a {+Flex-cluster+} to a paid {+cluster+},
  :doc:`change the cluster tier and type </scale-cluster>`.

- Legacy live migration (pull) doesn't support MongoDB 8.0 or rapid releases
  as the source or destination {+cluster+} version.

- Legacy live migration (pull) is not supported for sharded {+clusters+}.

  .. include:: /includes/fact-no-sharded-legacy-pull-live-migration.rst

- Legacy live migration (pull) doesn't support :ref:`VPC peering <vpc-peering>` or
  :ref:`private endpoints <private-endpoint>` for either the source or
  destination {+cluster+}.
- Legacy live migration (pull) doesn't support migrating source replica sets
  that contain :manual:`time series collections </core/timeseries-collections/>`.
- .. include:: /includes/fact-live-migration-host-alerts.rst

Required Access
---------------

.. include:: /includes/atlas-roles/pull-live-migrate.rst

Prerequisites
-------------

- Provide the hostname of the :term:`primary` node to the live migration
  service.

- .. include:: /includes/fact-migrate-drop-geoHaystack.rst

- If the {+cluster+} runs with authentication, grant the user that will
  run the migration process the following permissions:

  - Read all databases and collections on the host.
  - Read access to the primary node's :term:`oplog`.

To learn more :ref:`live-import-security`.

.. include:: /includes/note-source-cluster-readiness.rst

.. _live-import-upgrade-path:

Migration Path
~~~~~~~~~~~~~~

|service| live migration (pull) supports the following migration paths:

.. include:: /includes/list-tables/mongomirror-upgrade-path.rst

Network Access
~~~~~~~~~~~~~~~

.. _live-import-ip-access-list:

.. include:: /includes/import/network-access.rst

.. _live-import-migration-validation:

Pre-Migration Validation
~~~~~~~~~~~~~~~~~~~~~~~~

Before starting the pull live migration procedure, |service| runs validation
checks on the source and destination {+clusters+}.

- The source {+cluster+} is a replica set.

  If the source {+cluster+} is a standalone,
  :manual:`convert the standalone to a replica set first </tutorial/convert-standalone-to-replica-set>`
  before using the :doc:`pull-type live migration </import/live-import>`.

- The destination |service| {+cluster+} is a replica set.

.. note::

   To run the migration process for a replica set, |service| discovers
   the host names for the replica set based on the hostname you provide.
   If this fails, |service| migrates the replica set using your provided
   reachable hostname. To learn more, see :ref:`Network Access <live-import-ip-access-list>`.

.. _live-import-security:

Source {+Cluster+} Security
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/source-cluster-security.rst

If the source {+cluster+} uses a different authentication mechanism to
connect, you can use |mongomirror| to migrate data from the source {+cluster+}
to the destination |service| {+cluster+}.

.. _live-import-pull-security-of-migration-servers:

How MongoDB Secures its Live Migration Servers
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-live-migration-pull-security-of-lm-server.rst

Index Key Limits
~~~~~~~~~~~~~~~~

.. include:: /includes/fact-failIndexKeyTooLong-import.rst

Considerations
--------------

.. include:: /includes/fact-network-encryption-pull-migration.rst

Database Users and Roles
~~~~~~~~~~~~~~~~~~~~~~~~

|service| doesn't migrate any user or role data to the destination {+cluster+}.

.. include:: /includes/fact-create-atlas-user.rst

If the source {+cluster+} enforces authentication, you must recreate the
credentials that your applications use on the destination |service| {+cluster+}.
|service| uses :ref:`SCRAM <authentication-scram>` for user authentication.
To learn more, see :doc:`/security-add-mongodb-users`.

Destination {+Cluster+} Configuration
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

When you configure the destination {+cluster+}, consider the following:

.. include:: /includes/fact-live-migration-destination-cluster.rst

.. include:: /includes/fact-live-migration-perf-target-cluster.rst

- The destination |service| {+cluster+} must be a replica set.

- You can't select an ``M0`` (Free Tier) or a {+Flex-cluster+} as
  the destination {+cluster+} for live migration.

- Don't change the ``featureCompatibilityVersion`` flag while
  |service| live migration is running.

Avoid Workloads on the Target {+Cluster+}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-mongomirror-no-workloads-target-cluster.rst

Avoid Cloud Backups
~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-avoid-backups.rst

Avoid Namespace Changes
~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-mongomirror-namespace-changes.rst

Avoid Elections
~~~~~~~~~~~~~~~

.. include:: /includes/fact-avoid-elections.rst

Migrate Your {+Cluster+}
------------------------

.. note:: Staging and Production Migrations

   Consider running this procedure twice. Run a partial migration
   that stops at the :guilabel:`Perform the Cutover` step *first*. This
   creates an up-to-date |service|-backed staging {+cluster+} to test
   application behavior and performance using the latest
   :driver:`driver version </driver-compatibility-reference>` that
   supports the MongoDB version of the |service| {+cluster+}.

   After you test your application, run the full migration
   procedure using a separate |service| {+cluster+} to create your
   |service|-backed production environment.

.. important::

   Avoid making changes to the source {+cluster+} configuration while the
   live migration process runs, such as removing replica set members
   or modifying :binary:`mongod <bin.mongod>` runtime settings, such as
   ``featureCompatibilityVersion``.

.. include:: /includes/pre-migration-checklist.rst

Procedure
~~~~~~~~~

.. include:: /includes/steps-atlas-live-import.rst

Migration Support
-----------------

.. _live-migration-support:

.. include:: /includes/import/migration-email-failure.rst

.. include:: /includes/live-migration-support.rst
