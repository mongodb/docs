===================================
Configure a Secondary's Sync Target
===================================

.. default-domain:: mongodb

Overview
--------

Secondaries capture data from the primary member to maintain an up to date
copy of the sets' data. However, by default secondaries may automatically
change their sync targets to secondary members based on changes in the
ping time between members and the state of other membersâ€™ replication. See
:doc:`/core/replica-set-sync` and
:doc:`/tutorial/manage-chained-replication` for more information.

For some deployments, implementing a custom replication sync topology may
be more effective than the default sync target selection logic. MongoDB
provides the ability to specify a host to use as a sync target.

To override the default sync target selection logic, you may manually
configure a :term:`secondary` member's sync target to temporarily pull
:term:`oplog` entries. The following provide access to this functionality:

- :dbcommand:`replSetSyncFrom` command, or

- :method:`rs.syncFrom()` helper in the :program:`mongo` shell

Considerations
--------------

Sync Logic
~~~~~~~~~~

Only modify the default sync logic as needed, and always exercise
caution.  :method:`rs.syncFrom()` will not affect an in-progress
initial sync operation. To affect the sync target for the initial sync, run
:method:`rs.syncFrom()` operation *before* initial sync.  This must be done
in the window between adding the new member rs.add() and when the intial 
sync starts

If you run :method:`rs.syncFrom()` during initial sync, MongoDB
produces no error messages, but the sync target will not change until
after the initial sync operation.

Persistence
~~~~~~~~~~~

:dbcommand:`replSetSyncFrom` and :method:`rs.syncFrom()` provide a
temporary override of default behavior. :program:`mongod` will revert
to the default sync behavior in the following situations:

- The :program:`mongod` instance restarts.

- The connection between the :program:`mongod` and the sync target
  closes.

.. versionchanged:: 2.4
   The sync target falls more than 30 seconds behind another member of
   the replica set; the :program:`mongod` will revert to the default
   sync target.

Target
~~~~~~

The member to sync from must be a valid source for data in the set.
To sync from a member, the member must:

- Have data. It cannot be an arbiter, in startup or recovering mode, and
  must be able to answer data queries.

- Be accessible.

- Be a member of the same set in the replica set configuration.

- Build indexes with the
  :data:`~replSetGetConfig.members[n].buildIndexes` setting.

- A different member of the set, to prevent syncing from itself.

If you attempt to replicate from a member that is more than 10 seconds
behind the current member, :program:`mongod` will log a warning but will
still replicate from the lagging member.

If you run :dbcommand:`replSetSyncFrom` during initial sync, MongoDB
produces no error messages, but the sync target will not change until
after the initial sync operation.

Procedure
---------

To use the :dbcommand:`replSetSyncFrom` command in the :program:`mongo` shell:

.. code-block:: javascript

   db.adminCommand( { replSetSyncFrom: "hostname<:port>" } );

To use the :method:`rs.syncFrom()` helper in the :program:`mongo` shell:

.. code-block:: javascript

   rs.syncFrom("hostname<:port>");
