.. meta::
   :robots: nosnippet

:orphan:

.. _migrate-hosting-graphql:

====================================================
Migrate Static Hosting and GraphQL From App Services
====================================================

.. meta::
  :description: Learn how to migrate GraphQL and your static assets away from Atlas App Services.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. banner::
   :variant:  warning

   GraphQL and Static Hosting are deprecated and will be discontinued
   on **September 30, 2025**.

As of **September 30, 2024** , GraphQL and Static Hosting are deprecated for Atlas App
Services. GraphQL and Static Hosting services will be discontinued on September 
30, 2025.

If you use GraphQL or Static Hosting, you should migrate to other providers
before the services are discontinued. Below, you can find migration guides
for official, trusted MongoDB partners that offer best-in-class alternative
solutions. These migration guides offer step by step guidance for how to
transition off of our services, and have been created in collaboration with our
partners.

GraphQL Providers
-----------------

The following GraphQL providers can help you keep your projects running.

Apollo
~~~~~~

Apollo provides a developer platform and open-source tools and SDKs—including
Apollo Server—to unify your data and services. Apollo Server is a
spec-compliant, production-ready server library that can use data from any
source, including MongoDB Atlas.

Refer to :ref:`Migrate GraphQL to Apollo <migrate-apollo>` for details.

Hasura
~~~~~~

Hasura empowers developers to rapidly build and deploy GraphQL and REST APIs on
MongoDB and many other data sources. By radically cutting down API development
times, Hasura enables rapid access to data, reduces friction across teams and
services, and enables enterprises to shorten time to market on data-powered
products and features.

Refer to :ref:`Migrate GraphQL to Hasura <migrate-hasura>` for details.

WunderGraph
~~~~~~~~~~~

WunderGraph is a comprehensive developer platform that comes equipped with an
extensive variety of open-source tools and software development kits (SDKs).

One of these integral tools is a Backend for Frontend (BFF) Framework. This BFF
Framework serves as a robust, specification-compliant server library ready to be
implemented in production environments. The notable feature of this library is
its ability to integrate data from any source whatsoever. This includes, but is
not limited to, data from MongoDB Atlas. Also, if you plan on using GraphQL
Federation, take a look at WunderGraph Cosmo.

Refer to :ref:`Migrate GraphQL to WunderGraph <migrate-wundergraph>` for details.

Neurelo
~~~~~~~

Neurelo is a platform for developers designed to simplify the process of working
with databases. It provides a powerful database abstraction with API-first
approach, instantly transforming databases into REST and GraphQL APIs.

Refer to :ref:`Migrate GraphQL to Neurelo <migrate-neurelo>` for details.

Render
~~~~~~

Render is a cloud application platform that helps developers flexibly deploy and
scale their apps and services. You can host your GraphQL API on Render alongside
the rest of your stack (frontend and backend). Your GraphQL servers can fetch
from all of the same data sources, including MongoDB Atlas.

On Render, you can auto-deploy code from a Git repo, configure private network
communication, autoscale services, and more.

Refer to :ref:`Migrate GraphQL to Render <migrate-render-graphql>` for details.

Static Hosting Providers
------------------------

The following static hosting providers can help you keep your projects running.

Netlify
~~~~~~~

Netlify provides developers with the platform and workflow to focus on building
websites and apps without dedicating time and resources on labor-intensive
operations. Developers are enabled to build and deploy future-proof web apps and
websites with modern, composable tooling that works with all modern frontend
frameworks. With support for static site generation (SSG), server-side rendering
(SSR) and incremental site regeneration (ISR), Netlify's managed frontend cloud
and CI/CD can support the growing needs of your App Services application.

Refer to :ref:`Migrate Static Hosting to Netlify <migrate-netlify>` for details.

Vercel
~~~~~~

Vercel is a frontend cloud for hosting web sites and apps, including static
sites, single-page applications (SPAs), dynamic server-rendered applications,
and more. It is compatible with your App Services application.

Refer to :ref:`Migrate Static Hosting to Vercel <migrate-vercel>` for details.

Render
~~~~~~

Render is a cloud application platform that helps developers flexibly deploy and
scale their apps and services. You can host your static sites on Render
alongside the rest of your stack (frontend and backend). All static sites
deployed on Render are served over a global CDN with automatic management of TLS
certificates.

You can auto-deploy from a Git repo, preview changes before you merge a pull
request, roll back changes when you need to, and more. Render hosts static sites
for free.

Refer to :ref:`Migrate Static Hosting to Render <migrate-render-hosting>` for
details.

AWS S3 Blob Storage
-------------------

If you are solely using the MongoDB Atlas Hosting service as a blob store for
static content and are not hosting a client application, follow the steps below
to migrate from using Atlas Hosting to using your own S3 bucket.

Refer to :ref:`Migrate to Your Own S3 Bucket <migrate-blob>` for details.
