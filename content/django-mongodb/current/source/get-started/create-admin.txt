.. _django-get-started-create-admin:

====================
Create an Admin Site
====================

.. facet::
   :name: genre
   :values: tutorial

.. meta::
   :keywords: app, odm, code example

You can create a {+framework+} admin site to edit your application's 
data from a web interface. To learn more about the {+framework+} admin
site and its features, see `The Django admin site <{+django-docs+}/ref/contrib/admin/>`__
in the {+framework+} documentation.

.. procedure::
   :style: connected

   .. step:: Create an admin user

      Before creating an admin site, you must create a user
      who can log in to the site. 
      
      From your project's root directory, run the following command to create
      an admin user:
      
      .. code-block:: bash

         python manage.py createsuperuser

      Then, your terminal prompts you for a username, email address,
      and password. For each prompt, enter the following information
      to create a user with the specified credentials and press "enter"
      after each entry:

      .. code-block:: bash
         :copyable: false

         Username: admin
         Email address: admin@example.com
         Password: <admin-password>
         Password (again): <admin-password>

      Replace the ``<admin-password>`` placeholder with your user's password.

   .. step:: Enter the admin site

      Run the following code to start your server:
    
      .. code-block:: bash

         python manage.py runserver

      Once your server is running, visit the http://127.0.0.1:8000/admin/ 
      URL to see the admin site. This site displays the following login
      screen:

      .. figure:: /includes/figures/django_admin_login.png
         :alt: The login screen on the {+framework+} admin page.
     
      Enter the username and password created in the previous step to log in to
      the site. 

   .. step:: Access your "sample_mflix" app from the admin site

      After logging in to the admin site, you can see the following information:

      .. figure:: /includes/figures/django_admin_index.png
         :alt: The initial content displayed on the Django admin site.

      You can edit your project's authentication configuration by selecting
      the :guilabel:`Groups` or :guilabel:`Users` row in the 
      :guilabel:`Authentication and Authorization` table.
      
      To edit the data in the ``users`` sample collection, represented by your
      ``Viewer`` model, navigate to your project's ``sample_mflix/admin.py`` file
      and paste the following code:
      
      .. code-block:: python

         from django.contrib import admin

         from .models import Viewer

         admin.site.register(Viewer)

      Now, your admin site displays the following information:

      .. figure:: /includes/figures/django_admin_model.png
         :alt: The content displayed on the Django admin site after registering a model.
   
   .. step:: Select a Viewer object

      You can view the data stored in a ``Viewer`` object that
      has a ``name`` value of ``"Abigail Carter"``. You created
      this object in the :ref:`django-get-started-write` step
      of this tutorial.

      Click on the :guilabel:`Viewers` row of the :guilabel:`SAMPLE_MFLIX`
      table to see a list of viewers. The admin site displays the following
      list:
      
      .. figure:: /includes/figures/django_admin_viewers.png
         :alt: The list of viewers displayed on the admin site.
      
      Then, click on :guilabel:`Abigail Carter` at the top of the list.
      The site displays the :guilabel:`Name` and :guilabel:`Email` of
      the selected viewer:

      .. figure:: /includes/figures/django_admin_edit_viewer.png
         :alt: The information of your selected viewer.

   .. step:: Edit the data in a Viewer object

      To edit the ``email`` field of the viewer, select the 
      box that contains the text ``"abigail.carter@fakegmail.com"``.
      Delete this text and replace it with ``"acarter1@fakegmail.com"``,
      as shown in the following image:
      
      .. figure:: /includes/figures/django_admin_new_email.png
         :alt: The updated email address of your viewer.

      Then, click the :guilabel:`SAVE` button below the viewer's 
      information to save your changes.

After completing these steps, you can access the {+framework+}
admin site and use it to edit your ``Viewer`` objects.