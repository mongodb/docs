.. _atlasproject-custom-resource:

================================
``AtlasProject`` Custom Resource
================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

The ``AtlasProject`` custom resource configures the project in 
|service|. When you create the ``AtlasProject`` custom resource, 
|ak8so| tries to create a new project in |service|.

.. include:: /includes/fact-ak8so-crds.rst
   
|ak8so| does one of the following actions:
   
- Creates a new project in the organization that the connection 
  |k8s-secret| configures.
- Reuses an existing project. In this case, |ak8so| verifies 
  whether a project with ``spec.name`` exists. If the project exists, 
  |ak8so| skips creation. After the reconciliation, |ak8so| updates 
  the ``status.id`` field with the id of the project.

You can use the :setting:`spec.connectionSecretRef.name` parameter
to set the connection |k8s-secret| for  the ``AtlasProject`` custom 
resource. This parameter overrides the default ``global`` connection 
|k8s-secret|.

.. include:: /includes/fact-ak8so-connection-secret-namespace.rst

To :ref:`connect <ak8so-access-to-atlas-ref>` to the 
{+atlas-admin-api+}, |ak8so| reads the organization ID and 
:ref:`API keys <about-org-api-keys>` from |ak8so| |k8s-secrets|.
   
You can also edit the ``AtlasProject`` custom resource specification to 
configure the following options:

- An :ref:`IP access list <add-to-access-list>` with the 
  :setting:`spec.projectIpAccessList` parameter. This IP access list 
  grants network access to |service| clusters in the project.

- :ref:`Teams <ak8so-team>` with the :setting:`spec.teams` parameter. A team 
  lets you grant an access role to an entire group of |service| users for a 
  particular project.

- The :ref:`maintenance window <configure-maintenance-window>` with
  the :setting:`spec.maintenanceWindow` parameter. The maintenance
  window sets the hour and day that |service| starts weekly
  maintenance on your {+database-deployments+}.

- :ref:`Network peering <ak8so-network-peering>` with the
  :setting:`spec.networkPeers` parameter. Network peering allows you to
  connect securely to your |aws|, |azure|, or |gcp| |vpc|.

- :ref:`Encryption at rest using customer-managed keys <ak8so-ear>`
  with the :setting:`spec.encryptionAtRest` parameter. Encryption at
  rest using customer-managed keys allows you to add an additional
  layer of security by using your cloud provider's |kms| together with
  the MongoDB :manual:`encrypted storage engine 
  </core/security-encryption-at-rest>`.

- :ref:`Private endpoints <ak8so-private-endpoint>` with the 
  :setting:`spec.privateEndpoints` parameter.

- :ref:`X.509 authentication <ak8so-x509>` with the
  :setting:`spec.x509CertRef.name` parameter.

- Project settings with the :setting:`spec.settings` parameter, including settings to enable and disable the following:

  - Collection of database statistics in :ref:`cluster metrics <monitor-cluster-metrics>`
  - :ref:`Data explorer <atlas-ui>`
  - :ref:`Performance Advisor <performance-advisor>`
  - :ref:`Realtime Performance Panel <review-real-time-metrics>`
  - :ref:`Schema Advisor <schema-suggestions>`

  - :ref:`Project alerts configurations <ak8so-alert-configurations>`
    with the :setting:`spec.alertConfigurationSyncEnabled` 
    and :setting:`spec.alertConfigurations` parameters.

    For information on how these settings interact,
    see the :ref:`ak8so-ac-considerations`.

If you remove the ``AtlasProject`` resource from your |k8s| cluster, 
|ak8so| removes the project from |service|. You must remove all the 
clusters in the project beforehand. Otherwise, |service| rejects the 
delete request.

Example
-------

The following example shows an ``AtlasProject`` custom resource 
specification:

.. code-block::

   apiVersion: atlas.mongodb.com/v1
   kind: AtlasProject
   metadata:
    name: my-project
    labels:
      ​​app.kubernetes.io/version: 1.6.0
   spec:
    name: Test project
    connectionSecretRef:
      name: my-atlas-key
      label: atlas.mongodb.com/type=credentials
    projectIpAccessList:
      - ipAddress: "192.0.2.15"
        comment: "IP address for Application Server A"
      - cidrBlock: "203.0.113.0/24"
        comment: "CIDR block for Application Server B - D" 

.. _prometheus-example:

Prometheus Example
------------------

The following example shows an ``AtlasProject`` custom resource 
specification that integrates with Prometheus:

.. code-block::

   apiVersion: atlas.mongodb.com/v1
   kind: AtlasProject
   metadata:
     name: my-project
     labels:
      ​​app.kubernetes.io/version: 1.6.0
   spec:
     name: TestPrometheusIntegration
     connectionSecretRef:
       name: my-atlas-key
     projectIpAccessList:
       - ipAddress: "0.0.0.0/1"
         comment: "Everyone has access. For test purposes only."
       - ipAddress: "128.0.0.0/1"
         comment: "Everyone has access. For test purposes only."
     integrations:
       - type: "PROMETHEUS"
         enabled: "true"
         username: "prometheus-user"
         passwordRef:
           name: "password-name"
           namespace: "password-namespace"
         scheme: "http"
         serviceDiscovery: "http"

To learn more, see :ref:`ak8so-integrate-third-party`.

.. include:: /includes/fact-ak8so-grafana.rst

.. _teams-example:

Teams Example
-------------

The following example shows an ``AtlasProject`` custom resource 
specification that gives the ``green-leaf-team`` the :authrole:`Organization Owner` 
role for this project. The team members are defined in the 
:ref:`AtlasTeam custom resource <atlasteam-custom-resource>`.

.. code-block::

   apiVersion: atlas.mongodb.com/v1
   kind: AtlasProject
   metadata:
     name: my-project
     labels:
      ​​app.kubernetes.io/version: 1.6.0
   spec:
     name: Test project
     teams:
       - teamRef:
           name: green-leaf-team
         roles:
         - ORGANIZATION_OWNER

To learn more, see :ref:`ak8so-team`.

.. _maintenance-window-example:

Maintenance Window Example
--------------------------

The following example shows an ``AtlasProject`` custom resource 
specification that sets the maintenance window to 5:00 AM every Tuesday with automatic deferral disabled:

.. code-block::

   apiVersion: atlas.mongodb.com/v1
   kind: AtlasProject
   metadata:
    name: my-project
    labels:
      ​​app.kubernetes.io/version: 1.6.0
   spec:
    name: Test project
    projectIpAccessList:
      - ipAddress: "192.0.2.15"
        comment: "IP address for Application Server A"
   maintenanceWindow:
    dayOfWeek: 3
    hourOfDay: 5
    autoDefer: false

.. _project-settings-example:

Project Settings Example
------------------------

The following example shows an ``AtlasProject`` custom resource 
specification that disables the collection of database statistics in
:ref:`cluster metrics <monitor-cluster-metrics>`, 
:ref:`data explorer <atlas-ui>`, :ref:`Performance Advisor
<performance-advisor>`, :ref:`Realtime Performance Panel
<review-real-time-metrics>`, and :ref:`Schema Advisor
<schema-suggestions>`.

.. code-block::

   apiVersion: atlas.mongodb.com/v1
   kind: AtlasProject
   metadata:
    name: my-project
    labels:
      ​​app.kubernetes.io/version: 1.6.0
   spec:
    name: Test project
    projectIpAccessList:
      - ipAddress: "192.0.2.15"
        comment: "IP address for Application Server A"
    settings:
      isCollectDatabaseSpecificsStatisticsEnabled: false
      isDataExplorerEnabled: false
      isExtendedStorageSizesEnabled: false
      isPerformanceAdvisorEnabled: false
      isRealtimePerformancePanelEnabled: false
      isSchemaAdvisorEnabled: false

.. _ak8so-ac-example:

Alert Configuration Example
---------------------------

The following example shows an ``AtlasProject`` custom resource
specification that configures an alert that triggers if the oplog
window reaches less than one hour:

.. code-block::

   apiVersion: atlas.mongodb.com/v1
   kind: AtlasProject
   metadata:
     name: my-project
     labels:
      ​​app.kubernetes.io/version: 1.6.0
   spec:
     name: Test Atlas Operator Project
     connectionSecretRef:
       name: my-atlas-key
     alertConfigurations:
       - eventTypeName: "REPLICATION_OPLOG_WINDOW_RUNNING_OUT",
         enabled: true,
         notifications:
         -  delayMin: 0
            emailEnabled: true
            intervalMin: 60
            roles: [ "GROUP_OWNER" ]
            smsEnabled: false
            typeName: "GROUP" 
         threshold: 
            operator: "LESS_THAN",
            threshold: "1",
            units: "HOURS"
     alertConfigurationSyncEnabled: true
     withDefaultAlertsSettings: false

.. _ak8so-tp-ac-example:

Third-Party Alert Configuration Example
---------------------------------------

The following example shows an ``AtlasProject`` custom resource
specification that configures an alert that sends notifications through 
Slack:

.. code-block::

   apiVersion: atlas.mongodb.com/v1
   kind: AtlasProject
   metadata:
     name: my-project
     labels:
      ​​app.kubernetes.io/version: 1.6.0
   spec:
     name: Test Atlas Operator Project
     connectionSecretRef:
       name: my-atlas-key
     alertConfigurations:
       - eventTypeName: "REPLICATION_OPLOG_WINDOW_RUNNING_OUT",
         enabled: true,
         notifications:
         -  delayMin: 0
            emailEnabled: true
            intervalMin: 60
            roles: [ "GROUP_OWNER" ]
            smsEnabled: false
            - typeName: "SLACK"
              apiTokenRef:
                name: key-name
                namespace: key-namespace
         threshold: 
            operator: "LESS_THAN",
            threshold: "1",
            units: "HOURS"
     alertConfigurationSyncEnabled: true
     withDefaultAlertsSettings: false

Parameters
----------

This section describes the ``AtlasProject`` custom resource parameters:

.. setting:: spec.name

   *Type*: string

   *Required*

   Name of the project created or updated in |service|. The name 
   length must not exceed 64 characters. The name can contain only 
   letters, numbers, spaces, dashes, and underscores.

.. setting:: spec.alertConfigurations

   *Type: array of objects*

   *Optional*

   List that contains :ref:`alert configurations <configure-alerts>` 
   for this project.

   If you use this setting, you must also set 
   :setting:`spec.alertConfigurationSyncEnabled` to ``true``
   for |ak8so| to modify project alert configurations.

   If you omit or leave this setting empty, |ak8so| doesn't alter the project's
   alert configurations. If creating a project, |service| applies 
   the default project alert configurations.

.. setting:: spec.alertConfigurations.eventTypeName

   *Type: string*

   *Required*

   Event that triggers an alert that this alert configration describes.

   To learn about the values that |ak8so| accepts,
   see the request body schema for the
   :oas-atlas-op:`Create One Alert Configuration in One Project 
   <createOneAlertConfigurationInOneProject>` endpoint
   in the MongoDB Atlas Administration API documentation.

.. setting:: spec.alertConfigurations.enabled

  *Type: boolean*

  *Optional*

  *Default*: ``false``

  Flag that indicates whether this alert configuration is enabled.
  If omitted, defaults to ``false``.

.. setting:: spec.alertConfigurations.matchers

   *Type: array of objects*

   *Conditional*

   List of rules that determine whether |service| checks an object 
   for the alert configuration. You can filter using the matchers 
   array if :setting:`spec.alertConfigurations.eventTypeName` 
   specifies an event for a host, replica set, or sharded {+cluster+}.

.. setting:: spec.alertConfigurations.matchers.fieldName

   *Type: string*

   *Conditional*

   Human-readable label that identifies the parameter in the target object that |service| checks. 
   The parameter must match all rules for |service| to check for 
   alert configurations.

   |ak8so| accepts the following values:

   - ``CLUSTER_NAME``
   - ``HOSTNAME``
   - ``HOSTNAME_AND_PORT``
   - ``PORT``
   - ``REPLICA_SET_NAME``
   - ``SHARD_NAME``
   - ``TYPE_NAME``

   |ak8so| requires this setting if you include an object in the  
   :setting:`spec.alertConfigurations.matchers`
   array.

.. setting:: spec.alertConfigurations.matchers.operator

   *Type: string*

   *Conditional*

   Comparison operator to apply when checking the current metric value 
   against :setting:`spec.alertConfigurations.matchers.value`.

   |ak8so| accepts the following values:

   - ``EQUALS`` 
   - ``CONTAINS`` 
   - ``STARTS_WITH`` 
   - ``ENDS_WITH`` 
   - ``NOT_EQUALS`` 
   - ``NOT_CONTAINS`` 
   - ``REGEX``

   |ak8so| requires this setting if you include an object in the  
   :setting:`spec.alertConfigurations.matchers`
   array.

.. setting:: spec.alertConfigurations.matchers.value

   *Type: string*

   *Conditional*

   Value to match or exceed using the specified
   :setting:`spec.alertConfigurations.matchers.operator`.

   |ak8so| requires this setting if you include an object in the  
   :setting:`spec.alertConfigurations.matchers`
   array.

.. setting:: spec.alertConfigurations.metricThreshold

   *Type: object*

   *Conditional*

   Threshold for the metric that, when exceeded, triggers an alert.

   |ak8so| requires this setting when
   :setting:`spec.alertConfigurations.eventTypeName` is 
   ``OUTSIDE_METRIC_THRESHOLD``.

.. setting:: spec.alertConfigurations.metricThreshold.metricName

   *Type: string*

   *Conditional*

   Human-readable label that identifies the metric against 
   which |service| checks the configured
   :setting:`spec.alertConfigurations.metricThreshold.threshold`.

   To learn about the values that |ak8so| accepts,
   see the request body schema for the
   :oas-atlas-op:`Create One Alert Configuration in One Project 
   <createOneAlertConfigurationInOneProject>` endpoint
   in the MongoDB Atlas Administration API documentation.

   |ak8so| requires this setting if you include the  
   :setting:`spec.alertConfigurations.metricThreshold`
   object.

.. setting:: spec.alertConfigurations.metricThreshold.mode

   *Type: string*

   *Optional*

   *Default*: ``AVERAGE``

   |service| computes the current metric value as an average.

   |ak8so| accepts only a value of ``AVERAGE``.

.. setting:: spec.alertConfigurations.metricThreshold.operator

   *Type: string*

   *Conditional*

   Comparison operator to apply when checking the current metric value.

   |ak8so| accepts the following values:

   - ``GREATER_THAN``
   - ``LESS_THAN``

   |ak8so| requires this setting if you include the  
   :setting:`spec.alertConfigurations.metricThreshold`
   object.

.. setting:: spec.alertConfigurations.metricThreshold.threshold

   *Type: integer*

   *Conditional*

   Value of metric that, when exceeded, triggers an alert.

   |ak8so| requires this setting if you include the  
   :setting:`spec.alertConfigurations.metricThreshold`
   object.

.. setting:: spec.alertConfigurations.metricThreshold.units

   *Type: string*

   *Conditional*

   Element used to express the quantity. This value can be an 
   element of time, storage capacity, and so on

   |ak8so| accepts the following values:

   - ``BITS``
   - ``BYTES``
   - ``DAYS``
   - ``GIGABITS``
   - ``GIGABYTES``
   - ``HOURS``
   - ``KILOBITS``
   - ``KILOBYTES``
   - ``MEGABITS``
   - ``MEGABYTES``
   - ``MILLISECONDS``
   - ``MINUTES``
   - ``PETABYTES``
   - ``RAW``
   - ``SECONDS``
   - ``TERABYTES``

   |ak8so| requires this setting if you include the  
   :setting:`spec.alertConfigurations.metricThreshold`
   object.

.. setting:: spec.alertConfigurations.notifications

   *Type: array*

   *Conditional*

   List that describes the notifications that |service| 
   sends for alerts that this alert configuration describes.

.. setting:: spec.alertConfigurations.notifications.apiToken

   *Type: string*

   *Conditional*

   Slack API token or Bot token that |service| needs to send 
   alert notifications via Slack. If the token later becomes 
   invalid, |service| sends an email to the project owners. 
   If the token remains invalid, |service| removes the token.

   |ak8so| requires this setting, or 
   :setting:`spec.alertConfigurations.notifications.apiTokenRef.name` 
   and :setting:`spec.alertConfigurations.notifications.apiTokenRef.namespace` if you set 
   :setting:`spec.alertConfigurations.notifications.typeName`
   to ``SLACK``.

   .. important::

      We recommend that you use :setting:`spec.alertConfigurations.notifications.apiTokenRef.name` 
      and :setting:`spec.alertConfigurations.notifications.apiTokenRef.namespace` instead of this setting.

   .. setting:: spec.alertConfigurations.notifications.apiTokenRef.name

   *Type*: string

   *Conditional*

   Name of the opaque |k8s-secret| that contains a single ``password`` 
   field with your API token for Slack.

   .. include:: /includes/fact-ak8so-label-secret.rst
   
   If you want notifications through Slack, you must 
   specify this setting or 
   :setting:`spec.alertConfigurations.notifications.apiToken`.

   .. important::

      We recommend that you use this setting instead of 
      :setting:`spec.alertConfigurations.notifications.apiToken`.

.. setting:: spec.alertConfigurations.notifications.apiTokenRef.namespace

   *Type*: string

   *Conditional*

   Namespace that contains your API token for Slack. If you 
   want notifictions through Slack, you must specify this 
   setting or 
   :setting:`spec.alertConfigurations.notifications.apiToken`.

   .. important::

      We recommend that you use this setting instead of 
      :setting:`spec.alertConfigurations.notifications.apiToken`.

.. setting:: spec.alertConfigurations.notifications.channelName

   *Type: string*

   *Conditional*

   Human-readable label that identifies the Slack channel to which |service| sends alert 
   notifications. 
   
   |ak8so| requires this setting when  you set
   :setting:`spec.alertConfigurations.notifications.typeName`
   to ``SLACK``.

.. setting:: spec.alertConfigurations.notifications.datadogApiKey

   *Type: string*

   *Conditional*

   Datadog API key that |service| needs to send alert 
   notifications to Datadog. You can find this API key 
   in the Datadog dashboard.

   |ak8so| requires this setting, or :setting:`spec.alertConfigurations.notifications.datadogApiKeyRef.name`
   and :setting:`spec.alertConfigurations.notifications.datadogApiKeyRef.namespace` if you set 
   :setting:`spec.alertConfigurations.notifications.typeName`
   to ``DATADOG``.

   .. important::

      We recommend that you use :setting:`spec.alertConfigurations.notifications.datadogApiKeyRef.name`
      and :setting:`spec.alertConfigurations.notifications.datadogApiKeyRef.namespace` instead of this setting.

.. setting:: spec.alertConfigurations.notifications.datadogApiKeyRef.name

   *Type*: string

   *Conditional*

   Name of the opaque |k8s-secret| that contains a single ``password`` 
   field with the API key for Datadog. If you want notifications 
   through Datadog, you must specify this setting or 
   :setting:`spec.alertConfigurations.notifications.datadogApiKey`.

   .. include:: /includes/fact-ak8so-label-secret.rst

   .. important::

      We recommend that you use this setting instead of 
      :setting:`spec.alertConfigurations.notifications.datadogApiKey`.

.. setting:: spec.alertConfigurations.notifications.datadogApiKeyRef.namespace

   *Type*: string

   *Conditional*

   Namespace that contains your API key for Datadog. If you want 
   notifications through Datadog, you must specify this setting or 
   :setting:`spec.alertConfigurations.notifications.datadogApiKey`.

   .. important::

      We recommend that you use this setting instead of 
      :setting:`spec.alertConfigurations.notifications.datadogApiKey`.

.. setting:: spec.alertConfigurations.notifications.datadogRegion

   *Type: string*

   *Optional*

   *Default*: ``US``

   Datadog region that indicates which API Uniform Resource Locator
   (URL) to use.

   |ak8so| accepts the following values:

   - ``US``
   - ``EU``

.. setting:: spec.alertConfigurations.notifications.delayMins

   *Type: integer*

   *Optional*

   *Default*: ``0``

   Number of minutes that |service| waits after it detects 
   an alert condition before it sends out the first notification.

.. setting:: spec.alertConfigurations.notifications.emailAddress

   *Type: string*

   *Conditional* 

   Email address to which |service| sends alert notifications. 
   
   |ak8so| requires this setting if you set
   :setting:`spec.alertConfigurations.notifications.typeName`
   to ``EMAIL``.
   
   |ak8so| doesn't require this setting to send 
   email notifications when you set
   :setting:`spec.alertConfigurations.notifications.typeName`
   to one of the following values:

   - ``GROUP``
   - ``ORG``
   - ``TEAM``
   - ``USERS``

   To send emails to one |service| user or group of users, set the 
   :setting:`spec.alertConfigurations.notifications.emailEnabled` parameter.

.. setting:: spec.alertConfigurations.notifications.emailEnabled

   *Type: boolean*

   *Conditional*

   Flag that indicates whether |service| sends email notifications.

   |ak8so| requires this setting when you set
   :setting:`spec.alertConfigurations.notifications.typeName`
   to one of the following values:

   - ``GROUP``
   - ``ORG``
   - ``TEAM``

.. setting:: spec.alertConfigurations.notifications.intervalMin

   *Type: integer*

   *Optional*

   .. what's the default value here?

   Number of minutes to wait between successive notifications. 
   |service| sends notifications until someone acknowledges 
   the unacknowledged alert. |ak8so| accepts values greater
   than or equal to ``5``.

   PagerDuty, VictorOps, and OpsGenie notifications don't 
   use this field. Configure and manage the notification 
   interval within each of those services.

.. setting:: spec.alertConfigurations.notifications.microsoftTeamsWebhookUrl

   *Type: string*

   *Conditional*

   Microsoft Teams Webhook Uniform Resource Locator (URL) that 
   |service| needs to send this notification via Microsoft Teams. 
   If the URL later becomes invalid, |service| sends an email to 
   the project owners. If the key remains invalid, |service| removes it.

   |ak8so| requires this setting if you set
   :setting:`spec.alertConfigurations.notifications.typeName`
   to ``MICROSOFT_TEAMS``.

.. setting:: spec.alertConfigurations.notifications.mobileNumber

   *Type: string*

   *Conditional*

   Mobile phone number to which |service| sends alert notifications.

   |ak8so| requires this setting if you set 
   :setting:`spec.alertConfigurations.notifications.typeName`
   to ``SMS``.

.. setting:: spec.alertConfigurations.notifications.opsGenieApiKey

   *Type: string*

   *Conditional*

   API Key that |service| needs to send this notification via Opsgenie.
   If the key later becomes invalid, |service| sends an email to the 
   project owners. If the key remains invalid, |service| removes it.

   |ak8so| requires this setting, or :setting:`spec.alertConfigurations.notifications.opsGenieApiKeyRef.name`
   and :setting:`spec.alertConfigurations.notifications.opsGenieApiKeyRef.namespace` if you set 
   :setting:`spec.alertConfigurations.notifications.typeName`
   to ``OPS_GENIE``.

   .. important::

      We recommend that you use :setting:`spec.alertConfigurations.notifications.opsGenieApiKeyRef.name`
      and :setting:`spec.alertConfigurations.notifications.opsGenieApiKeyRef.namespace` instead of this setting.

.. setting:: spec.alertConfigurations.notifications.opsGenieApiKeyRef.name

   *Type*: string

   *Conditional*

   Name of the opaque |k8s-secret| that contains a single ``password`` 
   field with the API key for Opsgenie. If you want notifications 
   through Opsgenie, you must specify this setting or 
   :setting:`spec.alertConfigurations.notifications.opsGenieApiKey`.

   .. include:: /includes/fact-ak8so-label-secret.rst

   .. important::

      We recommend that you use this setting instead of 
      :setting:`spec.alertConfigurations.notifications.opsGenieApiKey`.

.. setting:: spec.alertConfigurations.notifications.opsGenieApiKeyRef.namespace

   *Type*: string

   *Conditional*

   Namespace that contains your API key for Opsgenie. If you want 
   notifications through Opsgenie, you must specify this setting or 
   :setting:`spec.alertConfigurations.notifications.opsGenieApiKey`.

   .. important::

      We recommend that you use this setting instead of 
      :setting:`spec.alertConfigurations.notifications.opsGenieApiKey`.

.. setting:: spec.alertConfigurations.notifications.opsGenieRegion

   *Type: string*

   *Optional*

   *Default*: ``US``

   Opsgenie region that indicates which API Uniform Resource Locator 
   (URL) to use. 
   
   |ak8so| accepts the following values:

   - ``US``
   - ``EU``

   |ak8so| applies this setting if you set 
   :setting:`spec.alertConfigurations.notifications.typeName`
   to ``OPS_GENIE``.

.. setting:: spec.alertConfigurations.notifications.roles

   *Type: array*

   *Optional*

   List that contains the one or more organization or 
   project roles that receive the configured alert.
   If you include this parameter, |service| sends 
   alerts only to users assigned the roles you specify 
   in the list. If you omit this parameter, |service| 
   sends alerts to users assigned any role.

   |ak8so| accepts the following values:

   - ``GROUP_CLUSTER_MANAGER``
   - ``GROUP_DATA_ACCESS_ADMIN``
   - ``GROUP_DATA_ACCESS_READ_ONLY`` 
   - ``GROUP_DATA_ACCESS_READ_WRITE`` 
   - ``GROUP_OWNER``
   - ``GROUP_READ_WRITE`` 
   - ``ORG_OWNER`` 
   - ``ORG_MEMBER`` 
   - ``ORG_GROUP_CREATOR``
   - ``ORG_BILLING_ADMIN`` 
   - ``ORG_READ_ONLY``

   |ak8so| applies this setting when you set
   :setting:`spec.alertConfigurations.notifications.typeName`
   to one of the following values:

   - ``GROUP``
   - ``ORG``

.. setting:: spec.alertConfigurations.notifications.serviceKey

   *Type: string*

   *Conditional*

   PagerDuty service key that |service| needs to send 
   notifications via PagerDuty. If the key later becomes 
   invalid, |service| sends an email to the project 
   owners. If the key remains invalid, |service| removes it.

   |ak8so| requires this setting, or :setting:`spec.alertConfigurations.notifications.serviceKeyRef.name`
   and :setting:`spec.alertConfigurations.notifications.serviceKeyRef.namespace` if you set 
   :setting:`spec.alertConfigurations.notifications.typeName`
   to ``PAGER_DUTY``.

   .. important::

      We recommend that you use :setting:`spec.alertConfigurations.notifications.serviceKeyRef.name`
      and :setting:`spec.alertConfigurations.notifications.serviceKeyRef.namespace` instead of this setting.

.. setting:: spec.alertConfigurations.notifications.serviceKeyRef.name

   *Type*: string

   *Conditional*

   Name of the opaque |k8s-secret| that contains a single ``password`` 
   field with the API key for PagerDuty. If you want notifications 
   through PagerDuty, you must specify this setting or 
   :setting:`spec.alertConfigurations.notifications.serviceKey`.

   .. include:: /includes/fact-ak8so-label-secret.rst

   .. important::

      We recommend that you use this setting instead of 
      :setting:`spec.alertConfigurations.notifications.serviceKey`.

.. setting:: spec.alertConfigurations.notifications.serviceKeyRef.namespace

   *Type*: string

   *Conditional*

   Namespace that contains your API key for PagerDuty. If you want 
   notifications through PagerDuty, you must specify this setting or 
   :setting:`spec.alertConfigurations.notifications.serviceKey`.

   .. important::

      We recommend that you use this setting instead of 
      :setting:`spec.alertConfigurations.notifications.serviceKey`.

.. setting:: spec.alertConfigurations.notifications.severity

   *Type: string*

   *Optional*

   .. is there a default value here?

   Degree of seriousness given to this notification.

   |ak8so| accepts the following values:

   - ``CRITICAL``
   - ``ERROR``
   - ``WARNING``

.. setting:: spec.alertConfigurations.notifications.smsEnabled

   *Type: boolean*

   *Conditional*

   Flag that indicates whether |service| sends text message 
   notifications.

   |ak8so| requires this setting when you set
   :setting:`spec.alertConfigurations.notifications.typeName`
   to one of the following values:

   - ``GROUP``
   - ``ORG``
   - ``TEAM``

.. setting:: spec.alertConfigurations.notifications.teamId

   *Type: string*

   *Conditional*

   Unique 24-hexadecimal digit string that identifies one 
   |service| team.

   |ak8so| requires this setting if you set 
   :setting:`spec.alertConfigurations.notifications.typeName`
   to ``TEAM``.

.. setting:: spec.alertConfigurations.notifications.teamName

   *Type: string*

   *Conditional*

   Name of the |service| team that receives this notification. 

   |ak8so| requires this setting if you set 
   :setting:`spec.alertConfigurations.notifications.typeName`
   to ``TEAM``.

.. setting:: spec.alertConfigurations.notifications.typeName

   *Type: string*

   *Conditional*

   Human-readable label that displays the alert notification type.
   This setting is required if you specify a value for the 
   :setting:`spec.alertConfigurations.notifications` setting.
   |service| supports the following values:

   - ``DATADOG``
   - ``EMAIL``
   - ``OPS-GENIE``
   - ``ORG``
   - ``PAGER_DUTY``
   - ``PROMETHEUS``
   - ``SLACK``
   - ``SMS``
   - ``TEAM``
   - ``USER``
   - ``VICTOR_OPS``
   - ``WEBHOOK``

.. setting:: spec.alertConfigurations.notifications.username

   *Type: string*

   *Conditional*

   |service| username of the person to whom |service| sends 
   notifications. Specify only |service| users who belong to 
   the project that owns the alert configuration.

   |ak8so| requires this setting if you set
   :setting:`spec.alertConfigurations.notifications.typeName`
   to ``USER``.

.. setting:: spec.alertConfigurations.notifications.victorOpsApiKey

   *Type: string*

   *Conditional*

   API key that |service| needs to send alert notifications 
   to Splunk On-Call. If the key later becomes invalid, 
   |service| sends an email to the project owners. If the 
   key remains invalid, |service| removes it.

   |ak8so| requires this setting if you set 
   :setting:`spec.alertConfigurations.notifications.typeName`
   to ``VICTOR_OPS``.

   |ak8so| requires this setting, or :setting:`spec.alertConfigurations.notifications.victorOpsSecretRef.name`
   and :setting:`spec.alertConfigurations.notifications.victorOpsSecretRef.namespace` if you set 
   :setting:`spec.alertConfigurations.notifications.typeName`
   to ``VICTOR_OPS``.

   .. important::

      We recommend that you use :setting:`spec.alertConfigurations.notifications.victorOpsSecretRef.name`
      and :setting:`spec.alertConfigurations.notifications.victorOpsSecretRef.namespace` instead of this setting.

.. setting:: spec.alertConfigurations.notifications.victorOpsSecretRef.name

   *Type*: string

   *Conditional*

   Name of the opaque |k8s-secret| that contains a single ``password`` 
   field with the API key for Splunk On-Call. If you want notifications 
   through Splunk On-Call, you must specify this setting 
   or :setting:`spec.alertConfigurations.notifications.victorOpsApiKey`.

   .. include:: /includes/fact-ak8so-label-secret.rst

   .. important::

      We recommend that you use this setting instead of 
      :setting:`spec.alertConfigurations.notifications.victorOpsApiKey`.

.. setting:: spec.alertConfigurations.notifications.victorOpsSecretRef.namespace

   *Type*: string

   *Conditional*

   Namespace that contains your API key for Splunk 
   On-Call. If you want notifications through Splunk 
   On-Call, you must specify this setting or 
   :setting:`spec.alertConfigurations.notifications.victorOpsApiKey`.

   .. important::

      We recommend that you use this setting instead of 
      :setting:`spec.alertConfigurations.notifications.victorOpsApiKey`.


.. setting:: spec.alertConfigurations.notifications.victorOpsRoutingKey

   *Type: string*

   *Conditional*

   Routing key that |service| needs to send alert notifications 
   to Splunk On-Call. If the key later becomes invalid, 
   |service| sends an email to the project owners. If the 
   key remains invalid, |service| removes it.

   |ak8so| requires this setting if you set 
   :setting:`spec.alertConfigurations.notifications.typeName`
   to ``VICTOR_OPS``.

.. setting:: spec.alertConfigurations.notifications.webhookSecret

   *Type: string*

   *Optional*

   Authentication secret for a webhook-based alert.

   |ak8so| applies this setting if you set 
   :setting:`spec.alertConfigurations.notifications.typeName`
   to ``WEBHOOK``.

.. setting:: spec.alertConfigurations.notifications.webhookUrl

   *Type: string*

   *Conditional*

   String that indicates your webhook URL.

   |ak8so| requires this setting if you set 
   :setting:`spec.alertConfigurations.notifications.typeName`
   to ``WEBHOOK``.

.. setting:: spec.alertConfigurations.threshold

   *Type: object*

   *Conditional*

   Limit that triggers an alert when exceeded.

   |ak8so| applies this setting if you set 
   :setting:`spec.alertConfigurations.eventTypeName`
   to a value other than ``OUTSIDE_METRIC_THRESHOLD``.

.. setting:: spec.alertConfigurations.threshold.operator

   *Type: string*

   *Conditional*

   Comparison operator to apply when |service| checks the current metric value.

   |ak8so| accepts the following values:

   - ``GREATER_THAN``
   - ``LESS_THAN``

   |ak8so| requires this setting if you include the  
   :setting:`spec.alertConfigurations.threshold`
   object.

.. setting:: spec.alertConfigurations.threshold.threshold

   *Type: integer*

   *Conditional*

   Value of metric that, when exceeded, triggers an alert.

   |ak8so| requires this setting if you include the  
   :setting:`spec.alertConfigurations.threshold`
   object.

.. setting:: spec.alertConfigurations.threshold.units

   *Type: string*

   *Conditional*

   Element that expresses the quantity. You can specify an 
   element of time, storage capacity, and so on.

   |ak8so| accepts the following values:

   - ``BITS``
   - ``BYTES``
   - ``DAYS``
   - ``GIGABITS``
   - ``GIGABYTES``
   - ``HOURS``
   - ``KILOBITS``
   - ``KILOBYTES``
   - ``MEGABITS``
   - ``MEGABYTES``
   - ``MILLISECONDS``
   - ``MINUTES``
   - ``PETABYTES``
   - ``RAW``
   - ``SECONDS``
   - ``TERABYTES``

   |ak8so| requires this setting if you include the  
   :setting:`spec.alertConfigurations.threshold`
   object.

.. setting:: spec.alertConfigurationSyncEnabled

   *Type: boolean*

   *Optional*

   *Default*: ``false``

   Flag that indicates whether |ak8so| applies the project
   alert settings defined in :setting:`spec.alertConfigurations`. 
   If you omit or set to this parameter to ``false``,
   |ak8so| doesn't syncronize the project's alert 
   configurations with the ones that you define in 
   the ``AtlasProject`` custom resource.

   For information on how this setting interacts with
   :setting:`spec.withDefaultAlertsSettings`,
   see the :ref:`ak8so-ac-considerations`.

.. setting:: spec.auditing.auditAuthorizationSuccess

   *Type*: boolean

   *Optional*

   *Default*: ``false``
   
   Flag that indicates whether to direct the auditing system to capture
   successful authentication attempts for audit filters using the 
   ``"atype" : "authCheck"`` auditing event. To set this parameter to 
   ``true``, you must set :setting:`spec.auditing.enabled` to ``true``.
   To learn more, see :manual:`auditAuthorizationSuccess 
   </reference/parameters/#param.auditAuthorizationSuccess>`.

   .. include:: /includes/fact-auditAuthorizationSuccess.rst

.. setting:: spec.auditing.auditFilter

   *Type*: string

   *Optional*

   JSON-formatted auditing filter. You might need to escape the
   JSON string to remove characters that could prevent parsing,
   such as single or double-quotes. To specify a value for this 
   setting, you must set :setting:`spec.auditing.enabled` to ``true``.

   To view example auditing filters, see 
   :ref:`auditing-filter-example`. To learn more about configuring 
   MongoDB auditing filters, see 
   :ref:`configure-custome-auditing-filter`.

.. setting:: spec.auditing.enabled

   *Type*: boolean

   *Conditional*

   *Default*: ``false``

   Flag that indicates whether to enable auditing for the project. To 
   specify a value for :setting:`spec.auditing.auditFilter`, or to set 
   :setting:`spec.auditing.auditAuthorizationSuccess` to ``true``, you 
   must specify this setting. To learn more, see 
   :ref:`enable-audit-logs`.


.. setting:: spec.connectionSecretRef.name

   *Type*: string

   *Optional*

   Name of the opaque |k8s-secret| that contains a single ``password`` 
   field with the organization ID and :ref:`API keys 
   <about-org-api-keys>` that |ak8so| uses to :ref:`connect 
   <ak8so-access-to-atlas-ref>` to |service|. 
   If unspecified, |ak8so| uses the default ``global`` secret.

   .. include:: /includes/fact-ak8so-label-secret.rst

   .. include:: /includes/fact-ak8so-connection-secret-namespace.rst

.. setting:: spec.connectionSecretRef.namespace

   *Type*: string

   *Optional*

   |k8s-Ns| that contains the |k8s-secret| with the organization ID 
   and :ref:`API keys <about-org-api-keys>` that |ak8so| uses to 
   :ref:`connect <ak8so-access-to-atlas-ref>` to |service|. 
   If unspecified, |ak8so| keeps connection secrets in the same 
   |k8s-ns| as the :ref:`atlasproject-custom-resource`.

.. setting:: spec.cloudProviderAccessRoles

   *Type*: array

   *Optional*

   List that contains your :ref:`unified cloud provider access 
   <ak8so-unified-access>` settings.

.. setting:: spec.cloudProviderAccessRoles.iamAssumedRoleArn

   *Type*: string

   *Conditional*

   Unique |aws| |arn| that identifies the |iam| access role that 
   |service| assumes. If you want to 
   :ref:`set up unified cloud provider access <ak8so-unified-access>`,
   you must specify this setting.

.. setting:: spec.cloudProviderAccessRoles.providerName

   *Type*: string

   *Conditional*

   Cloud provider for the access role that |service| assumes. |ak8so|
   supports ``AWS`` for unified cloud provider access. If you want to
   :ref:`set up unified cloud provider access 
   <ak8so-unified-access>`, you must specify this setting.

.. setting:: spec.customRoles

   *Type*: object

   *Optional*

   Object that contains your custom role specifications. To learn 
   more, see :ref:`ak8so-configure-custom-database-roles`.

.. setting:: spec.customRoles.roleName

   *Type*: string

   *Optional*

   Human-readable label that identifies the custom role.

   .. include:: /includes/fact-custom-role-name-restrictions.rst

.. setting:: spec.customRoles.actions

   *Type*: array

   *Optional*
 
   List of objects that represents the individual
   :manual:`privilege actions </reference/privilege-actions/>`
   that the role grants.

.. setting:: spec.customRoles.actions.action

   *Type*: string

   *Optional*

   Human-readable label that identifies the privilege action. For a 
   complete list of actions available in the {+atlas-admin-api+}, see 
   :atlas:`/reference/custom-role-actions`.

.. setting:: spec.customRoles.actions.resources

   *Type*: array

   *Optional*

   List of objects that indicate a database and collection
   on which the action is granted, or indicates that the
   action is granted on the :manual:`cluster resource
   </reference/resource-document/#cluster-resource>`.

.. setting:: spec.customRoles.actions.resources.cluster

   *Type*: boolean

   *Optional*

   Flag that indicates that the action is granted on the 
   :manual:`cluster resource 
   </reference/resource-document/#cluster-resource>`.

   .. note::

      This parameter is mutually exclusive with the
      :setting:`spec.customRoles.actions.resources.collection` and
      :setting:`spec.customRoles.actions.resources.db` parameters.

.. setting:: spec.customRoles.actions.resources.collection

   *Type*: string

   *Optional*

   Human-readable label that identifies the collection on which the 
   action is granted. If this value is an empty string, the action is 
   granted on all collections within the database specified in the 
   :setting:`spec.customRoles.actions.resources.db` parameter.

   .. note::

      This parameter is mutually exclusive with the
      :setting:`spec.customRoles.actions.resources.cluster` parameter.

.. setting:: spec.customRoles.actions.resources.db

   *Type*: string

   *Optional*

   Human-readable label that indentifies the database on which the 
   action is granted.

   .. note::

      This parameter is mutually exclusive with the
      :setting:`spec.customRoles.actions.resources.cluster` parameter.

.. setting:: spec.customRoles.inheritedRoles

   *Type*: array

   *Optional*

   List of objects that represent key-value pairs that 
   indicate the inherited role and the database on which the role is 
   granted.

.. setting:: spec.customRoles.inheritedRoles.db

   *Type*: string

   *Optional*

   Human-readable label that identifies the database on which the 
   inherited role is granted.

   .. note::

      This value should be ``admin`` for all roles except
      :manual:`read </reference/built-in-roles/#read>` and
      :manual:`readWrite </reference/built-in-roles/#readWrite>`.

.. setting:: spec.customRoles.inheritedRoles.role

   *Type*: string

   *Optional*

   Human-readable label that identifies the inherited role. You can 
   specify another custom role or a :manual:`built-in role 
   </reference/built-in-roles/>`.

.. setting:: spec.encryptionAtRest

   *Type*: array

   *Optional*

   List that contains the configurations for 
   :ref:`encryption at rest using customer-managed keys
   <ak8so-ear>` for the project.

.. setting:: spec.encryptionAtRest.awsKms

   *Type*: object

   *Optional*

   List that contains the configurations to use |aws| |kms| for
   :ref:`encryption at rest using customer-managed keys
   <ak8so-ear>` for the project.

.. setting:: spec.encryptionAtRest.awsKms.secretRef.name

   *Type*: string

   *Optional*
    
   Name of the opaque |k8s-secret| that contains your |aws| credentials.

   .. include:: /includes/fact-ak8so-label-secret.rst
                    
.. setting:: spec.encryptionAtRest.awsKms.secretRef.namespace

   *Type*: string

   *Optional* 
   
   Namespace that contains your |aws| credentials. If unspecified, this 
   parameter defaults to the namespace of the ``AtlasProject`` custom 
   resource.

.. setting:: spec.encryptionAtRest.azureKeyVault

   *Type*: object

   *Optional*

   List that contains the configurations to use |azure| Key Vault for
   :ref:`encryption at rest using customer-managed keys
   <ak8so-ear>` for the project.

.. setting:: spec.encryptionAtRest.azureKeyVault.secretRef.name

   *Type*: string

   *Optional*
    
   Name of the opaque |k8s-secret| that contains your |azure| 
   credentials.

   .. include:: /includes/fact-ak8so-label-secret.rst
                    
.. setting:: spec.encryptionAtRest.azureKeyVault.secretRef.namespace

   *Type*: string

   *Optional* 
   
   Namespace that contains your |azure| credentials. If unspecified, 
   this parameter defaults to the namespace of the ``AtlasProject`` 
   custom resource.

.. setting:: spec.encryptionAtRest.googleCloudKms

   *Type*: object

   *Optional*

   List that contains the configurations to use {+gcp+} |kms| for
   :ref:`encryption at rest using customer-managed keys
   <ak8so-ear>` for the project.

.. setting:: spec.encryptionAtRest.googleCloudKms.secretRef.name

   *Type*: string

   *Optional*
    
   Name of the opaque |k8s-secret| that contains your |gcp| credentials.

   .. include:: /includes/fact-ak8so-label-secret.rst
                    
.. setting:: spec.encryptionAtRest.googleCloudKms.secretRef.namespace

   *Type*: string

   *Optional* 
   
   Namespace that contains your |gcp| credentials. If unspecified, 
   this parameter defaults to the namespace of the ``AtlasProject`` 
   custom resource.

.. setting:: spec.integrations

   *Type*: array

   *Optional*

   List that contains your :ref:`third-party integration 
   <ak8so-integrate-third-party>` settings. The parameters that you 
   must specify depend on the third-party service that you want to 
   configure:

   .. include:: /includes/list-tabel-integration-settings.rst

.. setting:: spec.integrations.accountId

   *Type*: string

   *Conditional*

   Unique string that identifies your New Relic account. If you want to 
   integrate with New Relic, you must specify this setting.

.. setting:: spec.integrations.apiKeyRef.name

   *Type*: string

   *Conditional*

   Name of the opaque |k8s-secret| that contains a single ``password`` 
   field with the API key for Datadog, Opsgenie, or VictorOps. If you 
   want to integrate with Datadog, Opsgenie, or VictorOps, you must 
   specify this setting.

   .. include:: /includes/fact-ak8so-label-secret.rst

.. setting:: spec.integrations.apiKeyRef.namespace

   *Type*: string

   *Conditional*

   Namespace that contains your API key for Datadog, Opsgenie, or 
   VictorOps. If you want to integrate with Datadog, 
   Opsgenie, or VictorOps, you must specify this setting.

.. setting:: spec.integrations.apiTokenRef.name

   *Type*: string

   *Conditional*

   Name of the opaque |k8s-secret| that contains a single ``password`` 
   field with the API token for Slack. If you want to integrate with 
   Slack, you must specify this setting.

   .. include:: /includes/fact-ak8so-label-secret.rst

.. setting:: spec.integrations.apiTokenRef.namespace

   *Type*: string

   *Conditional*

   Namespace that contains your API token for Slack. If you 
   want to integrate with Slack, you must specify this 
   setting.

.. setting:: spec.integrations.enabled

   *Type*: boolean

   *Conditional*

   Flag that indicates whether your {+cluster+} has Prometheus enabled. 
   If you want to integrate with Prometheus, you must specify this 
   setting as ``true``. 

.. setting:: spec.integrations.licenseKeyRef.name

   *Type*: string

   *Conditional*

   Name of the opaque |k8s-secret| that contains a single ``password`` 
   field with the license key for New Relic. If you want to integrate 
   with New Relic, you must specify this setting.

   .. include:: /includes/fact-ak8so-label-secret.rst

.. setting:: spec.integrations.licenseKeyRef.namespace

   *Type*: string

   *Conditional*

   Namespace that contains your license key for New Relic. If you want 
   to integrate with New Relic, you must specify this setting.

.. setting:: spec.integrations.microsoftTeamsWebhookURL

   *Type*: string

   *Conditional*

   String that specifies your Microsoft Teams incoming webhook |url|. 
   If you want to integrate with Mircosoft Teams, you must specify this 
   setting.

.. setting:: spec.integrations.passwordRef.name

   *Type:* string

   *Conditional*

   Name of the opaque |k8s-secret| that contains a single ``password`` 
   field with the Prometheus password. If you want to integrate with 
   Prometheus, you must specify this setting.

   .. include:: /includes/fact-ak8so-label-secret.rst

.. setting:: spec.integrations.passwordRef.namespace

   *Type:* string

   *Conditional*

   Namespace that contains your Prometheus password. If you want to 
   integrate with Prometheus, you must specify this setting. 

.. setting:: spec.integrations.readTokenRef.name

   *Type*: string

   *Conditional*

   Name of the opaque |k8s-secret| that contains a single ``password`` 
   field with the Insights Query Key for New Relic. If you want to 
   integrate with New Relic, you must specify this setting.

   .. include:: /includes/fact-ak8so-label-secret.rst

.. setting:: spec.integrations.readTokenRef.namespace

   *Type*: string

   *Conditional*

   Namespace that contains your Insights Query Key for New Relic. If 
   you want to integrate with New Relic, you must specify this setting.

.. setting:: spec.integrations.region

   *Type*: string

   *Conditional*

   *Default*: ``US``

   String value that indicates the API URL to use for Datadog or 
   Opsgenie. If you want to integrate 
   with Datadog or Opsgenie, you must specify this setting.

   Values for Opsgenie include ``US`` or ``EU``. 

   .. include:: /includes/fact-datadog-supported-regions-api.rst

.. setting:: spec.integrations.routingKeyRef.name

   *Type*: string

   *Conditional*

   Name of the opaque |k8s-secret| that contains a single ``password`` 
   field with the routing key for VictorOps. If you want to integrate 
   with VictorOps, you must specify this setting.

   .. include:: /includes/fact-ak8so-label-secret.rst

.. setting:: spec.integrations.routingKeyRef.namespace

   *Type*: string

   *Conditional*

   Namespace that contains your routing key for VictorOps. If you want 
   to integrate with VictorOps, you must specify this setting.

.. setting:: spec.integrations.secretRef.name

   *Type*: string

   *Conditional*

   Name of the opaque |k8s-secret| that contains a single ``password`` 
   field with the Webhook secret. If you want to integrate with Webhook 
   Settings, you must specify this setting.

   .. include:: /includes/fact-ak8so-label-secret.rst

.. setting:: spec.integrations.secretRef.namespace

   *Type*: string

   *Conditional*

   Namespace that contains your Webhook secret. If you 
   want to integrate with Webhook Settings, you must specify this 
   setting.

.. setting:: spec.integrations.scheme

   *Type*: string

   *Conditional*

   String that indicates the Prometheus protocol scheme configured for 
   requests. Values include ``http`` or ``https``. If you want to 
   integrate with Prometheus, you must specify this setting.

.. setting:: spec.integrations.serviceDiscovery

   *Type*: string

   *Conditional*

   Human-readable label that indicates the Prometheus service discovery 
   method to use. Values include ``file`` or ``http``. If you want to 
   integrate with Prometheus, you must specify this setting.

.. setting:: spec.integrations.serviceKeyRef.name

   *Type*: string

   *Conditional*

   Name of the opaque |k8s-secret| that contains a single ``password`` 
   field with the service key for PagerDuty. If you want to integrate 
   with PagerDuty, you must specify this setting.

   .. include:: /includes/fact-ak8so-label-secret.rst

.. setting:: spec.integrations.serviceKeyRef.namespace

   *Type*: string

   *Conditional*

   Namespace that contains your service key for PagerDuty. If you want 
   to integrate with PagerDuty, you must specify this setting.

.. setting:: spec.integrations.type

   *Type*: string

   *Conditional*

   String value that indicates the third-party service to integrate 
   with |service|. Values include:

   - ``DATADOG``
   - ``MICROSOFT_TEAMS``
   - ``NEW_RELIC``
   - ``OPS_GENIE``
   - ``PAGER_DUTY``
   - ``PROMETHEUS``
   - ``SLACK``
   - ``VICTOR_OPS``
   - ``WEBHOOK``

   If you want to integrate with a third-party service, you must 
   specify this setting.

.. setting:: spec.integrations.url

   *Type*: string

   *Conditional*

   String that specifies your Webhook |url|. If you want to integrate 
   with Webhook Settings, you must specify this setting.

.. setting:: spec.integrations.username

   *Type*: string

   *Conditional*

   Human-readable label that identifies the Prometheus user. If you 
   want to integrate with Prometheus, you must specify this setting.

.. setting:: spec.integrations.writeTokenRef.name

   *Type*: string

   *Conditional*

   Name of the opaque |k8s-secret| that contains a single ``password`` 
   field with the write token for New Relic. If you want to integrate 
   with New Relic, you must specify this setting.

   .. include:: /includes/fact-ak8so-label-secret.rst

.. setting:: spec.integrations.writeTokenRef.namespace

   *Type*: string

   *Conditional*

   Namespace that contains your write token for New Relic. If you want 
   to integrate with New Relic, you must specify this setting.

.. setting:: spec.maintenanceWindow

   *Type*: object

   *Optional*

   List that contains your maintenance window settings. You can specify
   the following body parameters:

   .. include:: /includes/api/list-tables/maintenance-window-request.rst

   .. include:: /includes/fact-urgent-maintenance.rst

.. setting:: spec.maintenanceWindow.autoDefer

   *Type*: boolean

   *Conditional*

   Flag that indicates whether |service| should defer all maintenance
   windows for one week after you enable them.

.. setting:: spec.maintenanceWindow.defer

   *Type*: boolean

   *Conditional*

   Flag that indicates whether |service| should defer scheduled
   maintenance. You must schedule maintenance before you can
   successfully defer maintenance. 
   :setting:`spec.maintenanceWindow.defer` and 
   :setting:`spec.maintenanceWindow.startASAP` can't both be set to
   ``true`` at the same time.

   .. important::

      While :setting:`spec.maintenanceWindow.defer` is set to ``true``,
      |ak8so| defers scheduled maintenance every time you apply changes
      to the ``AtlasProject`` custom resource. If you set
      :setting:`spec.maintenanceWindow.defer` to ``true``, you should
      change :setting:`spec.maintenanceWindow.defer` to ``false`` after
      you apply changes.

.. setting:: spec.maintenanceWindow.dayOfWeek

   *Type*: number

   *Conditional*

   One-based integer that represents the day of the week that the
   maintenance window starts. Use the following table to find the
   integer that corresponds to each day:
   
   .. list-table::
      :header-rows: 1
      :widths: 60 40

      * - Day of Week
        - Integer

      * - Sunday
        - **1**

      * - Monday
        - **2**

      * - Tuesday
        - **3**

      * - Wednesday
        - **4**

      * - Thursday
        - **5**

      * - Friday
        - **6**

      * - Saturday
        - **7**
   
   If you want to configure the maintenance window for your project,
   you must specify this setting.

.. setting:: spec.maintenanceWindow.hourOfDay

   *Type*: number

   *Conditional*

   Zero-based integer that represents the hour of the of the day that
   the maintenance window starts according to a 24-hour clock. Use
   ``0`` for midnight and ``12`` for noon. If you want to configure the
   maintenance window for your project, you must specify this setting.

.. setting:: spec.maintenanceWindow.startASAP

   *Type*: boolean

   *Conditional*

   Flag that indicates whether |service| should immediately start
   maintenance. :setting:`spec.maintenanceWindow.defer` and
   :setting:`spec.maintenanceWindow.startASAP` can't both be set to
   ``true`` at the same time.

   .. important::

      While :setting:`spec.maintenanceWindow.startASAP` is set to
      ``true``, |ak8so| starts maintenance every time you apply changes
      to the ``AtlasProject`` custom resource. If you set
      :setting:`spec.maintenanceWindow.startASAP` to ``true``, you
      should change :setting:`spec.maintenanceWindow.startASAP` to
      ``false`` after you apply changes.

.. setting:: spec.networkPeers

   *Type*: array

   *Optional*

   List that contains the :ref:`network peering 
   <ak8so-network-peering>` configurations for the project.

.. setting:: spec.regionUsageRestrictions 

   *Type*: string 

   *Optional* 

   Designates the project's |aws| region for :atlas:`Atlas for
   Government </government/overview/supported-features/>` only. You can
   specify one of the following values: 

   - ``NONE``: If you set ``regionUsageRestrictions`` to ``NONE``, value
     defaults to ``COMMERCIAL_FEDRAMP_REGIONS_ONLY``. This is the
     default if you omit ``regionUsageRestrictions``. 
   - ``GOV_REGIONS_ONLY``: Indicates project is restricted to |aws|
     GovCloud regions that meet more stringent U.S. government security 
     requirements. To learn more, see the `AWS GovCloud documentation
     <https://aws.amazon.com/govcloud-us/?whats-new-ess.sort-by=item.additionalFields.postDateTime&whats-new-ess.sort-order=desc>`__.
   - ``COMMERCIAL_FEDRAMP_REGIONS_ONLY``: Indicates project is
     restricted to |aws| `FedRamp <https://www.fedramp.gov/>`__ Moderate 
     standard regions.  

.. setting:: spec.projectIpAccessList

   *Type*: array

   *Required*

   IP access list that grants network access to |service| clusters in 
   the project. You can specify the following body parameters:

   .. include:: /includes/api/list-tables/requests/access-list.rst

.. setting:: spec.settings

   *Type*: object

   *Optional*

   List that contains your project settings.

.. setting:: spec.settings.isCollectDatabaseSpecificsStatisticsEnabled

   *Type*: boolean

   *Optional*

   Flag that indicates whether your project has collection of database
   statistics in :ref:`cluster metrics <monitor-cluster-metrics>`
   enabled.

.. setting:: spec.settings.isDataExplorerEnabled

   *Type*: boolean

   *Optional*

   Flag that indicates whether your project has :ref:`data explorer
   <atlas-ui>` enabled.

.. setting:: spec.settings.isExtendedStorageSizesEnabled

   *Type*: boolean

   *Optional*

   Flag that indicates whether to enable extended storage sizes for the
   specified project. To learn more about enabling extended storage, 
   see :ref:`Manage Project Settings <project-settings>`.
   
.. setting:: spec.settings.isPerformanceAdvisorEnabled

   *Type*: boolean

   *Optional*

   Flag that indicates whether your project has 
   :ref:`Performance Advisor <performance-advisor>` enabled.

.. setting:: spec.settings.isRealtimePerformancePanelEnabled

   *Type*: boolean

   *Optional*

   Flag that indicates whether your project has 
   :ref:`Realtime Performance Panel <review-real-time-metrics>` enabled.

.. setting:: spec.settings.isSchemaAdvisorEnabled

   *Type*: boolean

   *Optional*

   Flag that indicates whether your project has :ref:`Schema Advisor
   <schema-suggestions>` enabled.

.. setting:: spec.privateEndpoints

   *Type*: array

   *Optional*

   List that contains the :ref:`private endpoint 
   <ak8so-private-endpoint>` configurations for the project.
 
.. setting:: spec.teams

   *Type*: object

   *Optional*

   Object that contains your team specifications. To learn more, see :ref:`ak8so-team`.

.. setting:: spec.teams.teamRef.name

   *Type*: string

   *Conditional*

   Human-readable label from the :ref:`atlasteam-custom-resource` in the 
   :setting:`metadata.name` field. If you want to assign a :ref:`team <ak8so-team>` 
   to this project, you must specify this setting.

.. setting:: spec.teams.teamRef.namespace

   *Type*: string

   *Conditional*

   Namespace specified in the :ref:`atlasteam-custom-resource` if other than ``default``.

.. setting:: spec.teams.teamRef.roles

   *Type*: string

   *Conditional*

   :ref:`user-roles` that a team uses for this project. If you want to assign a 
   :ref:`team <ak8so-team>` to this project, you must specify this setting.

.. setting:: spec.withDefaultAlertsSettings

   *Type*: boolean

   *Optional*

   *Default*: ``true``

   Flag that indicates whether |ak8so| creates a project
   with the :ref:`default alert configurations <default-alert-settings>`.
   If omitted, defaults to ``true``.

   If you use this setting, you must also set 
   :setting:`spec.alertConfigurationSyncEnabled` to ``true``
   for |ak8so| to modify project alert configurations.

   If you set this parameter to ``false`` when you 
   create a project, |service| doesn't add the default
   alert configurations to your project.

   This setting has no effect on existing projects.

   For information on how this setting interacts with
   :setting:`spec.alertConfigurationSyncEnabled`,
   see the :ref:`ak8so-ac-considerations`.

.. setting:: spec.x509CertRef.name

   *Type*: string

   *Optional*

   Name of the ``kubernetes.io/tls`` |k8s-secret| for the 
   :ref:`X.509 certificate <ak8so-x509>`.

   .. include:: /includes/fact-ak8so-label-secret.rst
