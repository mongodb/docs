ref: alert-overview
edition: onprem
content: | 

  For each :doc:`group </tutorial/manage-alert-configurations>` or
  :doc:`global </tutorial/manage-global-alerts>` alert you create, you must set 
  target and a condition or metric. The *target* points to what changed: the 
  |mms| component. If your *condition* becomes true or a *metric* falls below or 
  rises above your set threshold, |mms| triggers an alert. 

---
ref: alert-overview
edition: cloud
content: |
  
  For each :doc:`alert </tutorial/manage-alert-configurations>` you create,
  you must set target and a condition or metric. The *target* points to what
  changed: the |mms| component. If your *condition* becomes true or a *metric*
  falls below or rises above your set threshold, |mms| triggers an alert.

---
ref: alert-conf-call-failure
edition: onprem
content: |

  .. list-table::
     :widths: 30 70
     :stub-columns: 1

     * - Backup Agent has too many conf call failures
       - Available only as a :doc:`global alert </tutorial/manage-global-alerts>`.

         Sends an alert when the cluster topology as known by monitoring does
         not match the backup configuration from conf calls made by the Backup
         Agent. |onprem| sends the alert after the number of attempts
         specified in the :setting:`maximumFailedConfCalls
         <mms.alerts.BackupAgentConfCallFailure.maximumFailedConfCalls>` setting.

---
ref: alert-conf-call-failure
edition: cloud
content: ""
---
ref: alert-global-alerts
edition: onprem
content: |

  .. list-table::
     :widths: 30 70
     :stub-columns: 1

     * - Backup could not be assigned to a backup daemon
       - Available only as a :doc:`global alert </tutorial/manage-global-alerts>`.

         Sends an alert if a backup job fails to bind to a Backup Daemon. A
         job might fail to bind if, for example:

         - No :term:`primary` is found for the backed-up replica set. At the
           time the binding occurred, the Monitoring Agent did not detect a
           primary. Ensure that the replica set is healthy.
   
         - Not enough space is available on any Backup Daemon.

         In both cases, resolve the issue and then :doc:`restart the initial
         sync of the backup </tutorial/enable-backup>`.

         As an alternative, you can manually bind jobs to daemons through the
         :guilabel:`Admin` interface. See :ref:`jobs-page` for more information.

     * - Backup has reached a high number of retries
       - Available only as a :doc:`global alert </tutorial/manage-global-alerts>`.

         Sends an alert if the same task fails repeatedly. This could happen,
         for example, during maintenance. :ref:`Check the corresponding job
         log <jobs-page>` for an error message explaining the problem.

         Contact MongoDB Support if you need help interpreting the error message.

     * - Backup is in an unexpected state
       - Available only as a :doc:`global alert </tutorial/manage-global-alerts>`.

         Sends an alert when something unexpected happened and the Backup
         state for the replica set is ``broken``. You must resync the backed-
         up replica set, as described in the :doc:`/tutorial/resync-backup`
         procedure.

         In case of a :alert:`Backup is in an unexpected state` alert,
         :ref:`check the corresponding job log <jobs-page>` for an error message
         explaining the problem. Contact MongoDB Support if you need help
         interpreting the error message.

     * - Replica set has a late snapshot
       - Available only as a :doc:`global alert </tutorial/manage-global-alerts>`.

         Sends an alert if a snapshot has failed to complete before the next
         snapshot is scheduled to begin. :ref:`Check the job log <jobs-page>`
         in the |mms| Admin interface for any obvious errors.

     * - Sync slice transfer has not progressed in...
       - Available only as a :doc:`global alert </tutorial/manage-global-alerts>`.

         Sends an alert when an :term:`initial sync` has started but then
         subsequently stalled. A number of issues can cause this, including:

         - processes that are down (agents, ingest, backing databases)
         - network issues
         - incorrect authentication credentials

     * - Backup job is busy for...
       - Available only as a :doc:`global alert </tutorial/manage-global-alerts>`.

         Sends an alert when a backup job has taken longer than the time
         specified. This could occur if you have an overloaded Backup Daemon
         or blockstore. :ref:`Check the corresponding job log <jobs-page>` for
         error messages. Contact MongoDB Support if you need help interpreting
         the error message.

---
ref: alert-global-alerts
edition: cloud
content: ""
---
ref: alert-host-down
edition: cloud
content: |

  .. list-table::
     :widths: 30 70
     :stub-columns: 1

     * - Host is exposed to the public Internet

       - The host is exposed to the public Internet. When configured, |mms|
         tries to make a socket connection to your hosts. If |mms| is able to
         connect, |mms| triggers the alert because the host is not behind a
         firewall and does not have authentication enabled.
           
         |mms| runs this check once each day.

         This is a weak security validation and should not replace other
         auditing or intrusion detection system procedures.

     * - Host is down
       - |mms| does not receive a ping from a host for more than 9 minutes.
         Under normal operation, the Monitoring Agent connects to each
         monitored host about once per minute. |mms| waits 9 minutes before
         triggering the alert to minimize false positives, as would occur
         during a host restart.

         If the host continues to be unreachable, the Monitoring Agent
         eventually reduces ping frequency to every 5 minutes for a
         :program:`mongod` and every 20 minutes for a :program:`mongos`. If a
         :program:`mongod` or :program:`mongos` again becomes reachable, |mms|
         recognizes the process within 5 minutes.

         If |mms| Automation does not manage a :program:`mongos` process and
         that process remains unreachable for 30 days, |mms| removes the
         process from the :guilabel:`Deployment` tab. However, if you restart
         the :program:`mongos` process, |mms| detects it.

         To resolve this alert, see :doc:`/reference/alerts/host-down`.

---
ref: alert-host-down
edition: onprem
content: |

  .. list-table::
     :widths: 30 70
     :stub-columns: 1

     * - Host is down
       - |mms| does not receive a ping from a host for more than 4 minutes.
         Under normal operation, the Monitoring Agent connects to each
         monitored host about once per minute. |mms| waits 4 minutes before
         triggering the alert to minimize false positives, as would occur
         during a host restart.

         If the host continues to be unreachable, the Monitoring Agent
         eventually reduces ping frequency to every 5 minutes for a
         :program:`mongod` and every 20 minutes for a :program:`mongos`. If a
         :program:`mongod` or :program:`mongos` again becomes reachable, |mms|
         recognizes the process within 5 minutes.

         If |mms| Automation does not manage a :program:`mongos` process and
         that process remains unreachable for 30 days, |mms| removes the
         process from the :guilabel:`Deployment` tab. However, if you restart
         the :program:`mongos` process, |mms| detects it.

         To resolve this alert, see :doc:`/reference/alerts/host-down`.

...
