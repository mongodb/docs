# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: 2014-04-08 19:37+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# bf928bbed88b44a1ba120f1d58b1d934
#: ../source/reference/command/planCacheSetFilter.txt:3
msgid "planCacheSetFilter"
msgstr ""

# 7f0ea2c717cd4a61a6887b2301c35611
#: ../source/reference/command/planCacheSetFilter.txt
msgid "On this page"
msgstr ""

# 5215cd20e54d4783b1be5cdd9bab2fff
#: ../source/reference/command/planCacheSetFilter.txt:14
msgid "Definition"
msgstr ""

# 72805c86a28e4bca87e6b0751ce74918
#: ../source/reference/command/planCacheSetFilter.txt:20
msgid ""
"Set an :ref:`index filter <index-filters>` for a collection. If an index "
"filter already exists for the :term:`query shape`, the command overrides "
"the previous index filter."
msgstr ""

# c2dbf7c180974468984eb54b4ade6782
#: ../source/reference/command/planCacheSetFilter.txt:24
msgid "The command has the following syntax:"
msgstr ""

# 2a22b730d199422db6eb30a0c9bbbaaa
#: ../source/reference/command/planCacheSetFilter.txt:38
msgid "The :dbcommand:`planCacheSetFilter` command has the following field:"
msgstr ""

# b8cda93fd6b546ebbc801e7e11c68f88
#: ../source/reference/command/planCacheSetFilter.txt:42
msgid ""
"Index filters only exist for the duration of the server process and do "
"not persist after shutdown; however, you can also clear existing index "
"filters using the :dbcommand:`planCacheClearFilters` command."
msgstr ""

# c2ee51ec8e4a4111a6361fb45d5e073d
#: ../source/reference/command/planCacheSetFilter.txt:47
msgid "Required Access"
msgstr ""

# 47a57632e0dd4f32849ff759843a9933
#: ../source/reference/command/planCacheSetFilter.txt:49
msgid ""
"A user must have access that includes the "
":authaction:`planCacheIndexFilter` action."
msgstr ""

# 0f3a09733dfd4ec1b8c33485eea866fa
#: ../source/reference/command/planCacheSetFilter.txt:55
msgid "Examples"
msgstr ""

# 83166437160744f985e3464d5557489d
#: ../source/reference/command/planCacheSetFilter.txt:58
msgid "Set Filter on Query Shape Consisting of Predicate Only"
msgstr ""

# 84da79844f7f45eba8ca10887ae5b505
#: ../source/reference/command/planCacheSetFilter.txt:60
msgid ""
"The following example creates an index filter on the ``orders`` "
"collection such that for queries that consist only of an equality match "
"on the ``status`` field without any projection and sort, the query "
"optimizer evaluates only the two specified indexes and the collection "
"scan for the winning plan:"
msgstr ""

# 35cd57b7259e4aae9c35b8528476e0a8
#: ../source/reference/command/planCacheSetFilter.txt:79
msgid ""
"In the query predicate, only the structure of the predicate, including "
"the field names, are significant; the values are insignificant. As such, "
"the created filter applies to the following operations:"
msgstr ""

# 65ee87d19a03436e8202e5f9c7e5eac5
#: ../source/reference/command/planCacheSetFilter.txt:88
msgid ""
"To see whether MongoDB will apply an index filter for a query shape, "
"check the :data:`~explain.queryPlanner.indexFilterSet` field of either "
"the :method:`db.collection.explain()` or the :method:`cursor.explain()` "
"method."
msgstr ""

# 532d1a7ed2ac417587be16e01b6f3afb
#: ../source/reference/command/planCacheSetFilter.txt:94
msgid "Set Filter on Query Shape Consisting of Predicate, Projection, and Sort"
msgstr ""

# 44df58c4ecbd4b99a61a15fd776dd3e0
#: ../source/reference/command/planCacheSetFilter.txt:96
msgid ""
"The following example creates an index filter for the ``orders`` "
"collection. The filter applies to queries whose predicate is an equality "
"match on the ``item`` field, where only the ``quantity`` field is "
"projected and an ascending sort by ``order_date`` is specified."
msgstr ""

# 0baa8a34008143e29b022bdfc4bb0bc0
#: ../source/reference/command/planCacheSetFilter.txt:115
msgid ""
"For the query shape, the query optimizer will only consider indexed plans"
" which use the index ``{ item: 1, order_date: 1, quantity: 1 }``."
msgstr ""

# 1d9b46d8e2ae43e1b7b97f278c1570b2
#: ../source/reference/command/planCacheSetFilter.txt:119
msgid ":dbcommand:`planCacheClearFilters`, :dbcommand:`planCacheListFilters`"
msgstr ""

# ae463536f7494d61bc32a33e483c4e19
#~ msgid ""
#~ "The following example creates an index"
#~ " filter on the ``orders`` collection "
#~ "such that for queries that consists "
#~ "only of an equality match on the"
#~ " ``status`` field without any projection"
#~ " and sort, the query optimizer "
#~ "evaluates only the two specified indexes"
#~ " and the collection scan for the "
#~ "winning plan:"
#~ msgstr ""

# d69fb37b5b82445b9400a9ba535dcc7c
#~ msgid ""
#~ "To see whether MongoDB applied an "
#~ "index filter for a query, check "
#~ "the :data:`explain.filterSet` field of the "
#~ ":method:`~cursor.explain()` output."
#~ msgstr ""

