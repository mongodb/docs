.. _swift-language-center:

====================
MongoDB Swift Driver
====================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: twocols

Introduction
------------

Welcome to the documentation site for the official MongoDB Swift
driver. You can add the driver to your application to work with MongoDB
in Swift. Download it with the
`Swift Package Manager <https://www.swift.org/package-manager/>`__ or
set up a runnable project with examples from our Usage Guide.

.. important::

   The Swift driver is no longer under active development as of 2022.

- `Usage Guide <https://github.com/mongodb/mongo-swift-driver#example-usage>`__

- `API Reference <https://mongodb.github.io/mongo-swift-driver>`__

- `Changelog <https://github.com/mongodb/mongo-swift-driver/releases>`__

- `Source Code <https://github.com/mongodb/mongo-swift-driver/>`__


Installation
------------

See `Installation <https://github.com/mongodb/mongo-swift-driver#installation>`__

.. _connect-atlas-swift-driver:

Connect to MongoDB Atlas
------------------------

.. include:: /includes/atlas-connect-blurb.rst

.. tabs::

   .. tab:: Synchronous API
      :tabid: swift-sync

      .. code-block:: swift

         import MongoSwiftSync

         defer {
             // free driver resources
             cleanupMongoSwift()
         }

         // replace the following string with your connection uri
         let uri = "mongodb+srv://<db_username>:<db_password>@<cluster-address>/test?w=majority"
         let client = try MongoClient(uri)

         // print a list of database names
         print (try client.listDatabaseNames())

         // your application logic

   .. tab:: Asynchronous API
      :tabid: swift-async

      .. code-block:: swift

         import MongoSwift
         import NIO

         let elg = MultiThreadedEventLoopGroup(numberOfThreads: 4)

         // replace the following string with your connection uri
         let uri = "mongodb+srv://<db_username>:<db_password>@<cluster-address>/test?w=majority"

         let client = try MongoClient(
             uri,
             using: elg
         )

         defer {
             // clean up driver resources
             try? client.syncClose()
             cleanupMongoSwift()

             // shut down EventLoopGroup
             try? elg.syncShutdownGracefully()
         }

         // print a list of database names
         print(try client.listDatabaseNames().wait())

         // your application logic

.. include:: /includes/serverless-compatibility.rst

Connect to a MongoDB Server on Your Local Machine
-------------------------------------------------

.. include:: /includes/localhost-connection.rst

To test whether you can connect to your server, replace the connection
string in the :ref:`Connect to MongoDB Atlas <connect-atlas-swift-driver>` code
example and run it.

Compatibility
-------------

MongoDB Compatibility
~~~~~~~~~~~~~~~~~~~~~

The compatibility table in this section specifies the recommended version or
versions of the MongoDB Swift driver for use with a specific version of MongoDB.

The first column lists the driver version.

.. sharedinclude:: dbx/lifecycle-schedule-callout.rst

.. include:: /includes/mongodb-compatibility-table-swift.rst

Language Compatibility
~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/language-compatibility-table-swift.rst

.. include:: /includes/about-driver-compatibility.rst

.. include:: /includes/help-links-swift.rst
