==========================
$sortByCount (aggregation)
==========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. pipeline:: $sortByCount
   
   .. versionadded:: 3.4
   
   Groups incoming documents based on the value of a specified
   expression, then computes the count of documents in each distinct
   group.
   
   Each output document contains two fields: an ``_id`` field
   containing the distinct grouping value, and a ``count`` field
   containing the number of documents belonging to that grouping or
   category.
   
   The documents are sorted by ``count`` in descending order.
    
   The :pipeline:`$sortByCount` stage has the following prototype form:

   .. code-block:: javascript

      { $sortByCount:  <expression> }
   
   .. list-table::
      :header-rows: 1
      :widths: 20 80

      * - Field
        - Description

      * - ``expression``

        - :ref:`Expression <aggregation-expressions>` to group by. You
          can specify any expression except for a document literal.

          To specify a :ref:`field path <agg-quick-ref-field-paths>`,
          prefix the field name with a dollar sign ``$`` and enclose it
          in quotes. For example, to group by the field ``employee``,
          specify ``"$employee"`` as the expression.

          .. code-block:: javascript

             { $sortByCount:  "$employee" }

          Although you cannot specify a document literal for the group
          by expression, you can, however, specify a field or an
          expression that evaluates to a document. For example, if
          ``employee`` and ``business`` fields are document fields,
          then the following :expression:`$mergeObjects` expression,
          which evaluates to a document, is a valid argument to
          :pipeline:`$sortByCount`:

          .. code-block:: javascript

             { $sortByCount: { $mergeObjects: [ "$employee", "$business" ] } }

          However, the following example with the document literal
          expression is invalid:

          .. code-block:: javascript

             { $sortByCount: { lname: "$employee.last", fname: "$employee.first" } }

   .. seealso::

   :doc:`/reference/bson-type-comparison-order/`

Behavior
--------
       
The :pipeline:`$sortByCount` stage is equivalent to the
following :pipeline:`$group` + :pipeline:`$sort` sequence:

.. code-block:: javascript

   { $group: { _id: <expression>, count: { $sum: 1 } } },
   { $sort: { count: -1 } }

Example
-------

Consider a collection ``exhibits`` with the following documents:

.. code-block:: javascript
      
   { "_id" : 1, "title" : "The Pillars of Society", "artist" : "Grosz", "year" : 1926, "tags" : [ "painting", "satire", "Expressionism", "caricature" ] }
   { "_id" : 2, "title" : "Melancholy III", "artist" : "Munch", "year" : 1902, "tags" : [ "woodcut", "Expressionism" ] }
   { "_id" : 3, "title" : "Dancer", "artist" : "Miro", "year" : 1925, "tags" : [ "oil", "Surrealism", "painting" ] }
   { "_id" : 4, "title" : "The Great Wave off Kanagawa", "artist" : "Hokusai", "tags" : [ "woodblock", "ukiyo-e" ] }
   { "_id" : 5, "title" : "The Persistence of Memory", "artist" : "Dali", "year" : 1931, "tags" : [ "Surrealism", "painting", "oil" ] }
   { "_id" : 6, "title" : "Composition VII", "artist" : "Kandinsky", "year" : 1913, "tags" : [ "oil", "painting", "abstract" ] }
   { "_id" : 7, "title" : "The Scream", "artist" : "Munch", "year" : 1893, "tags" : [ "Expressionism", "painting", "oil" ] }
   { "_id" : 8, "title" : "Blue Flower", "artist" : "O'Keefe", "year" : 1918, "tags" : [ "abstract", "painting" ] }

The following operation :pipeline:`unwinds <$unwind>` the ``tags``
array and uses the :pipeline:`$sortByCount` stage to count the
number of documents associated with each tag:

.. code-block:: javascript

   db.exhibits.aggregate( [ { $unwind: "$tags" },  { $sortByCount: "$tags" } ] )   

The operation returns the following documents, sorted in descending
order by count:

.. code-block:: javascript
   
   { "_id" : "painting", "count" : 6 }
   { "_id" : "oil", "count" : 4 }
   { "_id" : "Expressionism", "count" : 3 }
   { "_id" : "Surrealism", "count" : 2 }
   { "_id" : "abstract", "count" : 2 }
   { "_id" : "woodblock", "count" : 1 }
   { "_id" : "woodcut", "count" : 1 }
   { "_id" : "ukiyo-e", "count" : 1 }
   { "_id" : "satire", "count" : 1 }
   { "_id" : "caricature", "count" : 1 }

