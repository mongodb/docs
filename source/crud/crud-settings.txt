.. _java-configure-custom-crud:

==============================
Configure Custom CRUD Settings
==============================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. facet::
   :name: genre
   :values: reference

Overview
--------

In this guide, you can learn about how the {+driver-short+} configures CRUD
operations for ``MongoDatabase`` and ``MongoCollection`` instances. 

.. include:: /includes/crud/read-write-pref-concerns.rst

By default, ``MongoDatabase`` and ``MongoCollection`` instances inherit their preferences
and concerns from the ``MongoClient`` that accesses them. See the
:ref:`Configure Client-level CRUD Settings <configure-client-crud>` page for
more information. However, you can apply custom settings to your individual databases and
collections by using the following methods: 

- `MongoDatabase.withReadConcern() <{+driver-api+}/MongoDatabase.html#withReadConcern(com.mongodb.ReadConcern)>`__

- `MongoDatabase.withReadPreference() <{+driver-api+}/MongoDatabase.html#withReadPreference(com.mongodb.ReadPreference)>`__

- `MongoDatabase.withWriteConcern() <{+driver-api+}/MongoDatabase.html#withWriteConcern(com.mongodb.WriteConcern)>`__

- `MongoCollection.withReadConcern() <{+driver-api+}/MongoCollection.html#withReadConcern(com.mongodb.ReadConcern)>`__

- `MongoCollection.withReadPreference() <{+driver-api+}/MongoCollection.html#withReadPreference(com.mongodb.ReadPreference)>`__

- `MongoCollection.withWriteConcern() <{+driver-api+}/MongoCollection.html#withWriteConcern(com.mongodb.WriteConcern)>`__

.. tip::

   The ``withReadConcern()``, ``withReadPreference()``, and
   ``withWriteConcern`` methods create a new instance of a
   ``MongoDatabase`` or ``MongoCollection`` with the desired preference
   or concern. The ``MongoDatabase`` or ``MongoCollection`` upon which
   the method is called retains its original preference and concern
   settings.