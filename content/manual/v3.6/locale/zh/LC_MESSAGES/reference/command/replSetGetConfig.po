#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/reference/command/replSetGetConfig.txt:3
msgid "replSetGetConfig"
msgstr ""

#: ../source/reference/command/replSetGetConfig.txt:16
msgid "Definition"
msgstr ""

#: ../source/reference/command/replSetGetConfig.txt:20
msgid ""
"Returns a document that describes the current configuration of the "
":term:`replica set`. To invoke the command directly, use the following "
"operation:"
msgstr ""

#: ../source/reference/command/replSetGetConfig.txt:28
msgid ""
"In the :binary:`~bin.mongo` shell, you can access the data provided by "
":dbcommand:`replSetGetConfig` using the :method:`rs.conf()` method, as in"
" the following:"
msgstr ""

#: ../source/reference/command/replSetGetConfig.txt:39
msgid "Output Example"
msgstr ""

#: ../source/includes/replica-set-conf-document-output.rst:1
msgid ""
"The following document provides a representation of a replica set "
"configuration document. The configuration of your replica set may include"
" only a subset of these settings:"
msgstr ""

#: ../source/reference/command/replSetGetConfig.txt:43
msgid ""
"For description of the configuration settings, see :doc:`/reference"
"/replica-configuration`."
msgstr ""

#: ../source/reference/command/replSetGetConfig.txt:46
msgid ":method:`rs.conf()`, :method:`rs.reconfig()`"
msgstr ""

#~ msgid "Replica Set Configuration Fields"
#~ msgstr ""

#~ msgid "*Type*: string"
#~ msgstr ""

#~ msgid ""
#~ "The name of the replica set. Once"
#~ " set, you cannot change the name "
#~ "of a replica set."
#~ msgstr ""

#~ msgid ""
#~ ":data:`~replSetGetConfig._id` *must* be identical"
#~ " to the :setting:`replication.replSetName` or "
#~ "the value of `--replSet` specified to"
#~ " :program:`mongod` on the command line."
#~ msgstr ""

#~ msgid "See"
#~ msgstr ""

#~ msgid ""
#~ "An incrementing number used to "
#~ "distinguish revisions of the replica set"
#~ " configuration object from previous "
#~ "iterations of the configuration."
#~ msgstr ""

#~ msgid "``members``"
#~ msgstr ""

#~ msgid "*Type*: array"
#~ msgstr ""

#~ msgid ""
#~ "An array of member configuration "
#~ "documents, one for each member of "
#~ "the replica set. The "
#~ ":data:`~replSetGetConfig.members` array is a "
#~ "zero-indexed array."
#~ msgstr ""

#~ msgid ""
#~ "Each member-specific configuration document"
#~ " can contain the following fields:"
#~ msgstr ""

#~ msgid "*Type*: integer"
#~ msgstr ""

#~ msgid ""
#~ "A numeric identifier of every member "
#~ "in the replica set. Once set, you"
#~ " cannot change the "
#~ ":data:`~replSetGetConfig.members[n]._id` of a "
#~ "member."
#~ msgstr ""

#~ msgid ""
#~ "When updating the replica configuration "
#~ "object, access the replica set members"
#~ " in the :data:`~replSetGetConfig.members` array"
#~ " with the **array index**. The array"
#~ " index begins with ``0``. Do **not**"
#~ " confuse this index value with the"
#~ " value of the "
#~ ":data:`~replSetGetConfig.members[n]._id` field in "
#~ "each document in the "
#~ ":data:`~replSetGetConfig.members` array."
#~ msgstr ""

#~ msgid "The hostname and, if specified, the port number, of the set member."
#~ msgstr ""

#~ msgid "The hostname name must be resolvable for every host in the replica set."
#~ msgstr ""

#~ msgid ""
#~ ":data:`~replSetGetConfig.members[n].host` cannot hold "
#~ "a value that resolves to ``localhost``"
#~ " or the local interface unless *all*"
#~ " members of the set are on "
#~ "hosts that resolve to ``localhost``."
#~ msgstr ""

#~ msgid "*Optional*."
#~ msgstr ""

#~ msgid "*Type*: boolean"
#~ msgstr ""

#~ msgid "*Default*: false"
#~ msgstr ""

#~ msgid ""
#~ "A boolean that identifies an arbiter."
#~ " A value of ``true`` indicates that"
#~ " the member is an arbiter."
#~ msgstr ""

#~ msgid ""
#~ "When using the :method:`rs.addArb()` method"
#~ " to add an arbiter, the method "
#~ "automatically sets "
#~ ":data:`~replSetGetConfig.members[n].arbiterOnly` to "
#~ "``true`` for the added member."
#~ msgstr ""

#~ msgid "*Default*: true"
#~ msgstr ""

#~ msgid ""
#~ "A boolean that indicates whether the "
#~ ":program:`mongod` builds :term:`indexes <index>` "
#~ "on this member. You can only set"
#~ " this value when adding a member "
#~ "to a replica set. You cannot "
#~ "change :data:`~replSetGetConfig.members[n].buildIndexes` "
#~ "field after the member has been "
#~ "added to the set. To add a "
#~ "member, see :method:`rs.add()` and "
#~ ":method:`rs.reconfig()`."
#~ msgstr ""

#~ msgid ""
#~ "Do not set to ``false`` for "
#~ ":program:`mongod` instances that receive "
#~ "queries from clients."
#~ msgstr ""

#~ msgid ""
#~ "Setting ``buildIndexes`` to ``false`` may "
#~ "be useful if **all** the following "
#~ "conditions are true:"
#~ msgstr ""

#~ msgid ""
#~ "you are only using this instance "
#~ "to perform backups using :program:`mongodump`,"
#~ " *and*"
#~ msgstr ""

#~ msgid "this member will receive no queries, *and*"
#~ msgstr ""

#~ msgid "index creation and maintenance overburdens the host system."
#~ msgstr ""

#~ msgid ""
#~ "Even if set to ``false``, secondaries"
#~ " *will* build indexes on the ``_id``"
#~ " field in order to facilitate "
#~ "operations required for replication."
#~ msgstr ""

#~ msgid ""
#~ "If you set "
#~ ":data:`~replSetGetConfig.members[n].buildIndexes` to "
#~ "``false``, you must also set "
#~ ":data:`~replSetGetConfig.members[n].priority` to ``0``."
#~ " If :data:`~replSetGetConfig.members[n].priority` is"
#~ " not ``0``, MongoDB will return an"
#~ " error when attempting to add a "
#~ "member with "
#~ ":data:`~replSetGetConfig.members[n].buildIndexes` equal to"
#~ " ``false``."
#~ msgstr ""

#~ msgid ""
#~ "To ensure the member receives no "
#~ "queries, you should make all instances"
#~ " that do not build indexes hidden."
#~ msgstr ""

#~ msgid ""
#~ "Other secondaries cannot replicate from "
#~ "a member where "
#~ ":data:`~replSetGetConfig.members[n].buildIndexes` is "
#~ "false."
#~ msgstr ""

#~ msgid ""
#~ "When this value is ``true``, the "
#~ "replica set hides this instance and "
#~ "does not include the member in the"
#~ " output of :method:`db.isMaster()` or "
#~ ":dbcommand:`isMaster`. This prevents read "
#~ "operations (i.e. queries) from ever "
#~ "reaching this host by way of "
#~ "secondary :term:`read preference`."
#~ msgstr ""

#~ msgid ":ref:`Hidden Replica Set Members <replica-set-hidden-members>`"
#~ msgstr ""

#~ msgid "*Type*: Number, between 0 and 1000."
#~ msgstr ""

#~ msgid "*Default*: 1.0"
#~ msgstr ""

#~ msgid ""
#~ "A number that indicates the relative "
#~ "eligibility of a member to become "
#~ "a :term:`primary`."
#~ msgstr ""

#~ msgid ""
#~ "Specify higher values to make a "
#~ "member *more* eligible to become "
#~ ":term:`primary`, and lower values to "
#~ "make the member *less* eligible. "
#~ "Priorities are only used in comparison"
#~ " to each other. Members of the "
#~ "set will veto election requests from "
#~ "members when another eligible member has"
#~ " a higher priority value. Changing "
#~ "the balance of priority in a "
#~ "replica set will trigger an election."
#~ msgstr ""

#~ msgid ""
#~ "A :data:`~replSetGetConfig.members[n].priority` of "
#~ "``0`` makes it impossible for a "
#~ "member to become primary."
#~ msgstr ""

#~ msgid ":ref:`Replica Set Elections <replica-set-elections>`."
#~ msgstr ""

#~ msgid "*Type*: document"
#~ msgstr ""

#~ msgid "*Default*: none"
#~ msgstr ""

#~ msgid ""
#~ "A :term:`tag set` document containing "
#~ "mappings of arbitrary keys and values."
#~ " These documents describe replica set "
#~ "members in order to customize "
#~ ":doc:`write concern </reference/write-concern>` "
#~ "and :doc:`read preference </reference/read-"
#~ "preference>` and thereby allow configurable"
#~ " data center awareness."
#~ msgstr ""

#~ msgid ""
#~ "This field is only present if "
#~ "there are tags assigned to the "
#~ "member. See :doc:`/tutorial/configure-replica-"
#~ "set-tag-sets` for more information."
#~ msgstr ""

#~ msgid ""
#~ "Use :data:`~replSetGetConfig.replicaset.members[n].tags` "
#~ "to configure write concerns in "
#~ "conjunction with "
#~ ":data:`~replSetGetConfig.settings.getLastErrorModes` and "
#~ ":data:`~replSetGetConfig.settings.getLastErrorDefaults`."
#~ msgstr ""

#~ msgid "In tag sets, all tag values must be strings."
#~ msgstr ""

#~ msgid ""
#~ "For more information on configuring tag"
#~ " sets for read preference and write"
#~ " concern, see :doc:`/tutorial/configure-"
#~ "replica-set-tag-sets`."
#~ msgstr ""

#~ msgid "*Default*: 0"
#~ msgstr ""

#~ msgid ""
#~ "The number of seconds \"behind\" the "
#~ "primary that this replica set member "
#~ "should \"lag\"."
#~ msgstr ""

#~ msgid ""
#~ "Use this option to create :ref:`delayed"
#~ " members <replica-set-delayed-members>`."
#~ " Delayed members maintain a copy of"
#~ " the data that reflects the state "
#~ "of the data at some time in "
#~ "the past."
#~ msgstr ""

#~ msgid ":doc:`/core/replica-set-delayed-member`"
#~ msgstr ""

#~ msgid "*Default*: 1"
#~ msgstr ""

#~ msgid ""
#~ "The number of votes a server will"
#~ " cast in a :ref:`replica set election"
#~ " <replica-set-elections>`. The number "
#~ "of votes each member has is either"
#~ " ``1`` or ``0``, and :ref:`arbiters "
#~ "<replica-set-arbiters>` always have exactly"
#~ " ``1`` vote."
#~ msgstr ""

#~ msgid ""
#~ "A replica set can have up to "
#~ ":limit:`50 members <Number of Members of"
#~ " a Replica Set>` but only 7 "
#~ "voting members. If you need more "
#~ "than 7 members in one replica set,"
#~ " set :data:`~replSetGetConfig.members[n].votes` to "
#~ "``0`` for the additional non-voting "
#~ "members."
#~ msgstr ""

#~ msgid ""
#~ "Members cannot have "
#~ ":data:`~replSetGetConfig.members[n].votes` greater than"
#~ " ``1``. For details, see :ref:`3.0"
#~ "-compatibility-repl-set-config`."
#~ msgstr ""

#~ msgid "``settings``"
#~ msgstr ""

#~ msgid ""
#~ "A document that contains configuration "
#~ "options that apply to the whole "
#~ "replica set."
#~ msgstr ""

#~ msgid ""
#~ "The :data:`~replSetGetConfig.settings` document "
#~ "contain the following fields:"
#~ msgstr ""

#~ msgid ""
#~ "When :data:`~replSetGetConfig.settings.chainingAllowed` is"
#~ " ``true``, the replica set allows "
#~ ":term:`secondary` members to replicate from"
#~ " other secondary members. When "
#~ ":data:`~replSetGetConfig.settings.chainingAllowed` is "
#~ "``false``, secondaries can replicate only "
#~ "from the :term:`primary`."
#~ msgstr ""

#~ msgid ":doc:`/tutorial/manage-chained-replication`"
#~ msgstr ""

#~ msgid ""
#~ "A document that specifies the "
#~ ":doc:`write concern </core/replica-set-"
#~ "write-concern>` for the replica set. "
#~ "The replica set will use this "
#~ "write concern only when :ref:`write "
#~ "operations <write-methods-incompatibility>` or"
#~ " :dbcommand:`getLastError` specify no other "
#~ "write concern."
#~ msgstr ""

#~ msgid ""
#~ "If :data:`~replSetGetConfig.settings.getLastErrorDefaults` "
#~ "is not set, the default write "
#~ "concern for the replica set only "
#~ "requires confirmation from the primary."
#~ msgstr ""

#~ msgid ""
#~ "A document used to define an "
#~ "extended :term:`write concern` through the "
#~ "use of :data:`~replSetGetConfig.members[n].tags`. "
#~ "The extended :term:`write concern` can "
#~ "provide :term:`data-center awareness`."
#~ msgstr ""

#~ msgid ""
#~ "For example, the following document "
#~ "defines an extended write concern named"
#~ " ``eastCoast`` and associates with a "
#~ "write to a member that has the "
#~ "``east`` tag."
#~ msgstr ""

#~ msgid ""
#~ "Write operations to the replica set "
#~ "can use the extended write concern, "
#~ "e.g. ``{ w: \"eastCoast\" }``."
#~ msgstr ""

#~ msgid ""
#~ "See :doc:`/tutorial/configure-replica-set-"
#~ "tag-sets` for more information and "
#~ "example."
#~ msgstr ""

#~ msgid "*Type*: int"
#~ msgstr ""

#~ msgid "*Default*: 10"
#~ msgstr ""

#~ msgid ""
#~ "Number of seconds that the replica "
#~ "set members wait for a successful "
#~ "heartbeat from each other. If a "
#~ "member does not respond in time, "
#~ "other members mark the delinquent member"
#~ " as inaccessible."
#~ msgstr ""

#~ msgid ""
#~ "In the :program:`mongo` shell, you can"
#~ " access the data provided by "
#~ ":dbcommand:`replSetGetConfig` using the "
#~ ":method:`rs.conf()` method, as in the "
#~ "following:"
#~ msgstr ""

#~ msgid "On this page"
#~ msgstr ""

