# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/db.repairDatabase.txt:3
msgid "db.repairDatabase()"
msgstr ""

#: ../source/reference/method/db.repairDatabase.txt:15
msgid ":method:`db.repairDatabase()` provides a wrapper around the database command :dbcommand:`repairDatabase`, and has the same effect as the run-time option :option:`mongod --repair` option, limited to *only* the current database. See :dbcommand:`repairDatabase` for full documentation."
msgstr ""

#: ../source/reference/method/db.repairDatabase.txt:22
msgid "Behavior"
msgstr ""

#: ../source/includes/warning-repair.rst:3
msgid "Before using :dbcommand:`repairDatabase`, make a backup copy of the dbpath directory."
msgstr ""

#: ../source/includes/warning-repair.rst:6
msgid "Avoid running :dbcommand:`repairDatabase` against a replica set. If you are trying to repair a :term:`replica set` member, and you have access to an intact copy of your data (e.g. a recent backup or an intact member of the :term:`replica set`), you should restore from that intact copy (see :doc:`/tutorial/resync-replica-set-member`), and **not** use :dbcommand:`repairDatabase`."
msgstr ""

#: ../source/includes/warning-repair.rst:14
msgid "Only use the :dbcommand:`repairDatabase` command and associated wrappers, including :method:`db.repairDatabase()` and :option:`mongod --repair`, if you have no other options. These operations remove and do not save any corrupt data during the repair process."
msgstr ""

#: ../source/includes/note-repair.rst:1
msgid "If you are running with :term:`journaling <journal>` enabled, there is almost never any need to run :dbcommand:`repairDatabase` unless you need to recover from a disk-level data corruption. In the event of an unclean shutdown, the server will be able to restore the data files to a clean state automatically."
msgstr ""

#: ../source/reference/method/db.repairDatabase.txt:30
msgid "The :method:`db.repairDatabase()` is now available for secondary as well as primary members of replica sets."
msgstr ""

