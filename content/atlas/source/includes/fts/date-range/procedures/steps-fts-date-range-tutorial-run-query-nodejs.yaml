ref: run-date-range-query-nodejs
stepnum: 1
title: "Run a |fts| ``compound`` query with two clauses on the
       ``movies`` collection."
content: |

  a. Create a file named ``date-range.js``. 
  #. Copy and paste the following code into the
     ``date-range.js`` file.

     The code example performs the following tasks:

     - Imports ``mongodb``, MongoDB's Node.js driver.
     - Creates an instance of the ``MongoClient`` class to establish a 
       connection to your cluster.

     - Uses the following ``compound`` operator clauses to query the collection:

       .. include:: /includes/fts/extracts/fts-date-range-clauses.rst

       .. include:: /includes/fts/extracts/fts-date-range-stages.rst

     - Iterates over the cursor to print the documents that match the 
       query.
       
     .. literalinclude:: /includes/fts/date-range/tutorial.js
        :language: javascript
        :linenos:
        :dedent:
        :emphasize-lines: 5

  #. .. include:: /includes/fts/facts/fact-fts-driver-connection-string.rst
  #. Run the following command to query your collection: 
  
     .. io-code-block::
        
        .. input::
           :language: bash
     
           node date-range.js

        .. output::
           :language: javascript
           :visible: true

           {
             genres: [ 'Action', 'Adventure', 'Sci-Fi' ],
             title: 'Terminator Genisys',
             released: 2015-07-01T00:00:00.000Z,
             score: 2
           }
           {
            genres: [ 'Comedy', 'Drama', 'Music' ],
            title: 'Magic Mike XXL',
            released: 2015-07-01T00:00:00.000Z,
            score: 2
           }
           {
             genres: [ 'Documentary', 'Biography', 'Drama' ],
             title: 'Mala Mala',
             released: 2015-07-01T00:00:00.000Z,
             score: 2
           }
           {
             genres: [ 'Comedy', 'Drama' ],
             title: 'Home Care',
             released: 2015-07-01T00:00:00.000Z,
             score: 2
           }
           {
             genres: [ 'Documentary', 'News' ],
             title: 'Bitcoin: The End of Money as We Know It',
             released: 2015-07-01T00:00:00.000Z,
             score: 2
           }
           {
             genres: [ 'Drama', 'Mystery', 'Sci-Fi' ],
             title: 'Pig',
             released: 2015-07-02T00:00:00.000Z,
             score: 1.9681909084320068
           }

  .. include:: /includes/fts/extracts/fts-date-range-results.rst

---
ref: run-date-range-complex-query-nodejs
stepnum: 2
title: "Run a |fts| ``compound`` query with three clauses on the
       ``movies`` collection."
content: |

  a. Create a file named ``date-range-complex.js``. 
  #. Copy and paste the following code into the
     ``date-range-complex.js`` file.

     The code example performs the following tasks:

     - Imports ``mongodb``, MongoDB's Node.js driver.
     - Creates an instance of the ``MongoClient`` class to establish a 
       connection to your cluster.

     - Adds on to the previous example.

       .. include:: /includes/fts/extracts/fts-date-range-complex-clauses.rst

     - Iterates over the cursor to print the documents that match the 
       query.
       
     .. literalinclude:: /includes/fts/date-range/complex-tutorial.js
        :language: javascript
        :linenos:
        :dedent:
        :emphasize-lines: 5

  #. .. include:: /includes/fts/facts/fact-fts-driver-connection-string.rst
  #. Run the following command to query your collection: 
  
     .. io-code-block::
        
        .. input::
           :language: bash
     
           node date-range-complex.js

        .. output::
           :language: javascript
           :visible: true

           {
             genres: [ 'Action', 'Adventure', 'Sci-Fi' ],
             title: 'Terminator Genisys',
             released: 2015-07-01T00:00:00.000Z,
             score: 2
           }
           {
             genres: [ 'Comedy', 'Drama', 'Music' ],
             title: 'Magic Mike XXL',
             released: 2015-07-01T00:00:00.000Z,
             score: 2
           }
           {
             genres: [ 'Comedy', 'Drama' ],
             title: 'Home Care',
             released: 2015-07-01T00:00:00.000Z,
             score: 2
           }
           {
             genres: [ 'Drama', 'Mystery', 'Sci-Fi' ],
             title: 'Pig',
             released: 2015-07-02T00:00:00.000Z,
             score: 1.9681909084320068
           }
           {
             genres: [ 'Drama', 'History', 'Romance' ],
             title: 'Gold Coast',
             released: 2015-07-02T00:00:00.000Z,
             score: 1.9681909084320068
           }
           {
             genres: [ 'Animation', 'Family' ],
             title: 'Zarafa',
             released: 2015-07-03T00:00:00.000Z,
             score: 1.9383430480957031
           }

  .. include:: /includes/fts/extracts/fts-date-range-results.rst

...
