# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: 2014-04-08 18:48+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/reference/operator/aggregation/group.txt:3
msgid "$group (aggregation)"
msgstr ""

#: ../source/reference/operator/aggregation/group.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/operator/aggregation/group.txt:18
msgid ""
"Groups documents by some specified expression and outputs to the next "
"stage a document for each distinct grouping. The output documents contain"
" an ``_id`` field which contains the distinct group by key. The output "
"documents can also contain computed fields that hold the values of some "
"accumulator expression grouped by the :pipeline:`$group`\\'s ``_id`` "
"field. :pipeline:`$group` does *not* order its output documents."
msgstr ""

#: ../source/reference/operator/aggregation/group.txt:26
msgid "The :pipeline:`$group` stage has the following prototype form:"
msgstr ""

#: ../source/reference/operator/aggregation/group.txt:32
msgid ""
"The ``_id`` field is *mandatory*; however, you can specify an ``_id`` "
"value of null, or any other constant value, to calculate accumulated "
"values for all the input documents as a whole."
msgstr ""

#: ../source/reference/operator/aggregation/group.txt:36
msgid ""
"The remaining computed fields are *optional* and computed using the "
"``<accumulator>`` operators."
msgstr ""

#: ../source/reference/operator/aggregation/group.txt:39
msgid ""
"The ``_id`` and the ``<accumulator>`` expressions can accept any valid "
":ref:`expression <aggregation-expressions>`. For more information on "
"expressions, see :ref:`aggregation-expressions`."
msgstr ""

#: ../source/reference/operator/aggregation/group.txt:44
msgid "Considerations"
msgstr ""

#: ../source/reference/operator/aggregation/group.txt:47
msgid "Accumulator Operator"
msgstr ""

#: ../source/reference/operator/aggregation/group.txt:49
msgid ""
"The ``<accumulator>`` operator must be one of the following accumulator "
"operators:"
msgstr ""

#: ../source/includes/extracts/agg-operators-accumulators-group.rst:7
msgid "Name"
msgstr ""

#: ../source/includes/extracts/agg-operators-accumulators-group.rst:8
msgid "Description"
msgstr ""

#: ../source/includes/extracts/agg-operators-accumulators-group.rst:10
msgid ":group:`$addToSet`"
msgstr ""

#: ../source/includes/extracts/agg-operators-accumulators-group.rst:12
msgid ""
"Returns an array of *unique* expression values for each group. Order of "
"the array elements is undefined."
msgstr ""

#: ../source/includes/extracts/agg-operators-accumulators-group.rst:15
msgid ":group:`$avg`"
msgstr ""

#: ../source/includes/extracts/agg-operators-accumulators-group.rst:17
msgid "Returns an average of numerical values. Ignores non-numeric values."
msgstr ""

#: ../source/includes/extracts/agg-operators-accumulators-group.rst:19
msgid ":group:`$first`"
msgstr ""

#: ../source/includes/extracts/agg-operators-accumulators-group.rst:21
msgid ""
"Returns a value from the first document for each group. Order is only "
"defined if the documents are in a defined order."
msgstr ""

#: ../source/includes/extracts/agg-operators-accumulators-group.rst:24
msgid ":group:`$last`"
msgstr ""

#: ../source/includes/extracts/agg-operators-accumulators-group.rst:26
msgid ""
"Returns a value from the last document for each group. Order is only "
"defined if the documents are in a defined order."
msgstr ""

#: ../source/includes/extracts/agg-operators-accumulators-group.rst:29
msgid ":group:`$max`"
msgstr ""

#: ../source/includes/extracts/agg-operators-accumulators-group.rst:31
msgid "Returns the highest expression value for each group."
msgstr ""

#: ../source/includes/extracts/agg-operators-accumulators-group.rst:33
msgid ":expression:`$mergeObjects`"
msgstr ""

#: ../source/includes/extracts/agg-operators-accumulators-group.rst:35
msgid ""
"Returns a document created by combining the input documents for each "
"group."
msgstr ""

#: ../source/includes/extracts/agg-operators-accumulators-group.rst:38
msgid ":group:`$min`"
msgstr ""

#: ../source/includes/extracts/agg-operators-accumulators-group.rst:40
msgid "Returns the lowest expression value for each group."
msgstr ""

#: ../source/includes/extracts/agg-operators-accumulators-group.rst:42
msgid ":group:`$push`"
msgstr ""

#: ../source/includes/extracts/agg-operators-accumulators-group.rst:44
msgid "Returns an array of expression values for each group."
msgstr ""

#: ../source/includes/extracts/agg-operators-accumulators-group.rst:47
msgid ":group:`$stdDevPop`"
msgstr ""

#: ../source/includes/extracts/agg-operators-accumulators-group.rst:49
msgid "Returns the population standard deviation of the input values."
msgstr ""

#: ../source/includes/extracts/agg-operators-accumulators-group.rst:51
msgid ":group:`$stdDevSamp`"
msgstr ""

#: ../source/includes/extracts/agg-operators-accumulators-group.rst:53
msgid "Returns the sample standard deviation of the input values."
msgstr ""

#: ../source/includes/extracts/agg-operators-accumulators-group.rst:55
msgid ":group:`$sum`"
msgstr ""

#: ../source/includes/extracts/agg-operators-accumulators-group.rst:57
msgid "Returns a sum of numerical values. Ignores non-numeric values."
msgstr ""

#: ../source/reference/operator/aggregation/group.txt:57
msgid "``$group`` Operator and Memory"
msgstr ""

#: ../source/reference/operator/aggregation/group.txt:59
msgid ""
"The :pipeline:`$group` stage has a limit of 100 megabytes of RAM. By "
"default, if the stage exceeds this limit, :pipeline:`$group` will produce"
" an error. However, to allow for the handling of large datasets, set the "
":method:`allowDiskUse <db.collection.aggregate()>` option to ``true`` to "
"enable :pipeline:`$group` operations to write to temporary files. See "
":method:`db.collection.aggregate()` method and the :dbcommand:`aggregate`"
" command for details."
msgstr ""

#: ../source/reference/operator/aggregation/group.txt:67
msgid ""
"MongoDB introduces a limit of 100 megabytes of RAM for the "
":pipeline:`$group` stage as well as the :method:`allowDiskUse "
"<db.collection.aggregate()>` option to handle operations for large "
"datasets."
msgstr ""

#: ../source/reference/operator/aggregation/group.txt:74
msgid "Examples"
msgstr ""

#: ../source/reference/operator/aggregation/group.txt:79
msgid "Calculate Count, Sum, and Average"
msgstr ""

#: ../source/reference/operator/aggregation/group.txt:81
#: ../source/reference/operator/aggregation/group.txt:155
msgid "Given a collection ``sales`` with the following documents:"
msgstr ""

#: ../source/reference/operator/aggregation/group.txt:92
msgid "Group by Month, Day, and Year"
msgstr ""

#: ../source/reference/operator/aggregation/group.txt:94
msgid ""
"The following aggregation operation uses the :pipeline:`$group` stage to "
"group the documents by the month, day, and year and calculates the total "
"price and the average quantity as well as counts the documents per each "
"group:"
msgstr ""

#: ../source/reference/operator/aggregation/group.txt:114
msgid "The operation returns the following results:"
msgstr ""

#: ../source/reference/operator/aggregation/group.txt:123
msgid "Group by ``null``"
msgstr ""

#: ../source/reference/operator/aggregation/group.txt:125
msgid ""
"The following aggregation operation specifies a group ``_id`` of "
"``null``, calculating the total price and the average quantity as well as"
" counts for all documents in the collection:"
msgstr ""

#: ../source/reference/operator/aggregation/group.txt:144
#: ../source/reference/operator/aggregation/group.txt:172
msgid "The operation returns the following result:"
msgstr ""

#: ../source/reference/operator/aggregation/group.txt:153
msgid "Retrieve Distinct Values"
msgstr ""

#: ../source/reference/operator/aggregation/group.txt:165
msgid ""
"The following aggregation operation uses the :pipeline:`$group` stage to "
"group the documents by the item to retrieve the distinct item values:"
msgstr ""

#: ../source/reference/operator/aggregation/group.txt:183
msgid "Pivot Data"
msgstr ""

#: ../source/reference/operator/aggregation/group.txt:185
msgid "A collection ``books`` contains the following documents:"
msgstr ""

#: ../source/reference/operator/aggregation/group.txt:196
msgid "Group ``title`` by ``author``"
msgstr ""

#: ../source/reference/operator/aggregation/group.txt:198
msgid ""
"The following aggregation operation pivots the data in the ``books`` "
"collection to have titles grouped by authors."
msgstr ""

#: ../source/reference/operator/aggregation/group.txt:209
#: ../source/reference/operator/aggregation/group.txt:233
msgid "The operation returns the following documents:"
msgstr ""

#: ../source/reference/operator/aggregation/group.txt:219
msgid "Group Documents by ``author``"
msgstr ""

#: ../source/reference/operator/aggregation/group.txt:221
msgid ""
"The following aggregation operation uses the :variable:`$$ROOT <ROOT>` "
"system variable to group the documents by authors. The resulting "
"documents must not exceed the :limit:`BSON Document Size` limit."
msgstr ""

#: ../source/reference/operator/aggregation/group.txt:256
msgid ""
"The :doc:`/tutorial/aggregation-zip-code-data-set` tutorial provides an "
"extensive example of the :pipeline:`$group` operator in a common use "
"case."
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:4
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:6
msgid ""
"`MongoDB Analytics: Learn Aggregation by Example: Exploratory Analytics "
"and Visualization Using Flight Data <http://www.mongodb.com/presentations"
"/mongodb-analytics-learn-aggregation-example-exploratory-analytics-and-"
"visualization?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:7
msgid ""
"`MongoDB for Time Series Data: Analyzing Time Series Data Using the "
"Aggregation Framework and Hadoop <http://www.mongodb.com/presentations"
"/mongodb-time-series-data-part-2-analyzing-time-series-data-using-"
"aggregation-framework?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:8
msgid ""
"`The Aggregation Framework <https://www.mongodb.com/presentations"
"/aggregation-framework-0?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:9
msgid ""
"`Webinar: Exploring the Aggregation Framework "
"<https://www.mongodb.com/webinar/exploring-the-aggregation-"
"framework?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:10
msgid ""
"`Quick Reference Cards <https://www.mongodb.com/lp/misc/quick-reference-"
"cards?jmp=docs>`_"
msgstr ""

#~ msgid ""
#~ "Groups documents together for the "
#~ "purpose of calculating aggregate values "
#~ "based on a collection of documents. "
#~ "In practice, :pipeline:`$group` often supports"
#~ " tasks such as average page views "
#~ "for each page in a website on "
#~ "a daily basis."
#~ msgstr ""

#~ msgid "The output of :pipeline:`$group` is not ordered."
#~ msgstr ""

#~ msgid ""
#~ "The output of :pipeline:`$group` depends "
#~ "on how you define groups. Begin by"
#~ " specifying an identifier (i.e. an "
#~ "``_id`` field) for the group you're "
#~ "creating with this pipeline. For this"
#~ " ``_id`` field, you can specify "
#~ "various expressions, including a single "
#~ "field from the documents in the "
#~ "pipeline, a computed value from a "
#~ "previous stage, a document that consists"
#~ " of multiple fields, and other valid"
#~ " expressions, such as constant or "
#~ "subdocument fields. You can use "
#~ ":pipeline:`$project` operators in expressions "
#~ "for the ``_id`` field."
#~ msgstr ""

#~ msgid ""
#~ "The following example of an ``_id`` "
#~ "field specifies a document that consists"
#~ " of multiple fields:"
#~ msgstr ""

#~ msgid ""
#~ "Every :pipeline:`$group` expression **must** "
#~ "specify an ``_id`` field. In addition"
#~ " to the ``_id`` field, :pipeline:`$group`"
#~ " expression can include computed fields."
#~ " These other fields must use one "
#~ "of the following :term:`accumulators "
#~ "<accumulator>`:"
#~ msgstr ""

#~ msgid ""
#~ "With the exception of the ``_id`` "
#~ "field, :pipeline:`$group` cannot output nested"
#~ " documents."
#~ msgstr ""

#~ msgid "Tip"
#~ msgstr ""

#~ msgid ""
#~ "Use :pipeline:`$project` as needed to "
#~ "rename the grouped field after a "
#~ ":pipeline:`$group` operation."
#~ msgstr ""

#~ msgid "Variables"
#~ msgstr ""

#~ msgid ""
#~ "You can use variables in expressions "
#~ "for the :pipeline:`$group` phase. See "
#~ ":expression:`$let` and :expression:`$map`."
#~ msgstr ""

#~ msgid ""
#~ "The system variables :variable:`$$CURRENT "
#~ "<CURRENT>` and :variable:`$$ROOT <ROOT>` are"
#~ " also available directly. See :ref"
#~ ":`group-stage-pivot-using-ROOT` for "
#~ "an example."
#~ msgstr ""

#~ msgid ""
#~ "The :pipeline:`$group` stage has a limit"
#~ " of 100 megabytes of RAM. By "
#~ "default, if the stage exceeds this "
#~ "limit, :pipeline:`$group` will produce an "
#~ "error. However, to allow for the "
#~ "handling of large datasets, set the "
#~ "``allowDiskUse`` option to ``true`` to "
#~ "enable :pipeline:`$group` operations to write"
#~ " to temporary files. See the "
#~ "``allowDiskUse`` option in "
#~ ":method:`db.collection.aggregate()` method and the"
#~ " :dbcommand:`aggregate` command for details."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB introduces a limit of 100 "
#~ "megabytes of RAM for the "
#~ ":pipeline:`$group` stage."
#~ msgstr ""

#~ msgid "Calculate Count and Sum"
#~ msgstr ""

#~ msgid "Consider the following example:"
#~ msgstr ""

#~ msgid ""
#~ "This aggregation pipeline groups by the"
#~ " ``author`` field and computes two "
#~ "fields, ``docsPerAuthor`` and ``viewsPerAuthor``,"
#~ " per each group. The ``docsPerAuthor`` "
#~ "field is a counter field that uses"
#~ " the :group:`$sum` operator to add "
#~ "``1`` for each document with a "
#~ "given author. The ``viewsPerAuthor`` field "
#~ "is the sum of the values in "
#~ "the ``pageViews`` field for each group."
#~ msgstr ""

#~ msgid ":ref:`push-with-root`"
#~ msgstr ""

#~ msgid ""
#~ "The ``_id`` field is *mandatory*; "
#~ "however, you can specify an ``_id`` "
#~ "value of null to calculate accumulated"
#~ " values for all the input documents"
#~ " as a whole."
#~ msgstr ""

#~ msgid "Returns a sum for each group. Ignores non-numeric values."
#~ msgstr ""

#~ msgid "Returns an average for each group. Ignores non-numeric values."
#~ msgstr ""

