title: Start a ``mongod`` Process
ref: start-mongod 
level: 4
stepnum: 1
content: |
  If :manual:`mongod </reference/program/mongod/>` is not already
  running on your local system, start it from the command line in
  the MongoDB program directory. You can create the default data
  directory at ``C:\data\db`` or specify a different directory
  with the ``--dbpath`` option.

  .. code-block:: ps1

     mkdir C:\data\db

  .. code-block:: ps1

     "C:\Program Files\MongoDB\Server\3.6\bin\mongod.exe"
---
title: Import a Sample Dataset
ref: import-dataset
level: 4
stepnum: 2
content: |
  Make sure your MongoDB instance has at least one collection with
  some data for testing purposes. A sample dataset with United States
  ZIP code information (3.2 MB) is available at
  `media.mongodb.org/zips.json <http://media.mongodb.org/zips.json>`_.

  .. note::

     To save the ZIP code dataset directly to disk, right click on
     the link and select ``"Save Link As..."`` This tutorial assumes
     that the saved file is in the directory
     ``C:\data``.

  Import the dataset into MongoDB. The following command imports
  the ``zips.json`` file into a collection named ``zips`` in a
  database named ``test``:

  .. code-block:: ps1

     "C:\Program Files\MongoDB\Server\3.6\bin\mongoimport.exe" --db test --collection zips --file "C:\data\zips.json"

  See the MongoDB manual for help with :manual:`mongoimport
  </reference/program/mongoimport>`, the :manual:`mongo shell
  program </reference/program/mongo/>`, and :manual:`CRUD operations
  </crud/>`.

---
title: Start a ``mongosqld`` Process
ref: start-mongosqld
level: 4
stepnum: 3
content: |
  Start a :binary:`~bin.mongosqld` process from the command line in the
  |bi-short| program directory.

  .. code-block:: ps1

     "C:\Program Files\MongoDB\Connector for BI\2.3\bin\mongosqld.exe"

  With no command line options, ``mongosqld`` generates a schema from
  all the user-accessible collections in your MongoDB instance. For
  more information about specifying database namespaces for |bi-short|
  to work with, see the :binary:`~bin.mongosqld` reference page.

  If ``mongosqld`` starts correctly, the last line of on-screen output
  declares the namespaces it has found for its schema. For example, the
  following output indicates that ``mongosqld`` started correctly and
  sampled the ``zips`` namespace.

  .. code-block:: ps1
     :copyable: false

     [schemaDiscovery] mapped schema for 1 namespaces: "test" (1): ["zips"]

---
title: Create a Data Source Name (DSN)
ref: create-a-dsn
level: 4
stepnum: 3
content: |
  Create a System DSN by following instructions in the :ref:`tutorial
  <create-system-dsn-bi-connector>`. For the
  purposes of this local test installation you can leave the
  :guilabel:`User`, :guilabel:`Password` and :guilabel:`Authentication`
  fields blank, because :binary:`~bin.mongosqld` is running without the
  :option:`--auth <mongosqld --auth>` option.

  .. figure:: /images/bi-connector/windows-odbc-dsn2.png
     :alt: Windows ODBC DSN
     :figwidth: 550px
     :align: center

  When you press the :guilabel:`Test` button you should see the
  :guilabel:`Connection Successful` result.
---
title: Start an SQL Client or BI Tool 
ref: start-sql-client
level: 4
stepnum: 4
content: |
  To learn how to connect from your BI Tool, see 
  :doc:`several applications </client-applications>`.
  
...
