=========
aggregate
=========

.. default-domain:: mongodb

.. dbcommand:: aggregate

   .. versionadded:: 2.1.0

   :dbcommand:`aggregate` implements the :term:`aggregation
   framework`. Consider the following prototype form:

   .. code-block:: javascript

      { aggregate: "[collection]", pipeline: [pipeline] }

   Where ``[collection]`` specifies the name of the collection that
   contains the data that you wish to aggregate. The ``pipeline``
   argument holds an array that contains the specification for the
   aggregation operation. Consider the following example from the
   :doc:`aggregation documentation </core/aggregation>`.

   .. code-block:: javascript

      db.runCommand(
      { aggregate : "article", pipeline : [
        { $project : {
           author : 1,
           tags : 1,
        } },
        { $unwind : "$tags" },
        { $group : {
           _id : "$tags",
           authors : { $addToSet : "$author" }
        } }
       ] }
      );

   More typically this operation would use the
   :method:`~db.collection.aggregate()` helper in the :program:`mongo`
   shell, and would resemble the following:

   .. code-block:: javascript

      db.article.aggregate(
        { $project : {
           author : 1,
           tags : 1,
        } },
        { $unwind : "$tags" },
        { $group : {
           _id : "$tags",
           authors : { $addToSet : "$author" }
        } }
      );

   .. include:: /includes/fact-agg-helper-exception.rst

   For more aggregation documentation, please see:

   - :doc:`/core/aggregation`
   - :doc:`/reference/aggregation`
   - :doc:`/tutorial/aggregation-examples`
