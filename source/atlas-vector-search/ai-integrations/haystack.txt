.. _haystack:

=========================================
Get Started with the Haystack Integration
=========================================

.. default-domain:: mongodb

.. facet::
   :name: genre
   :values: tutorial

.. facet::
   :name: programming_language
   :values: python

.. meta::
   :description: Integrate Atlas Vector Search with Haystack to build Gen AI applications and implement RAG.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

You can integrate {+avs+} with `Haystack
<https://haystack.deepset.ai/integrations/mongodb>`__
to build custom applications with |llm|\s and implement 
retrieval-augmented generation (RAG). This tutorial demonstrates
how to start using {+avs+} with Haystack to perform
semantic search on your data and build a |rag| implementation.
Specifically, you perform the following actions:

#. Set up the environment.
#. Create an {+avs+} index.
#. Store custom data on |service|.
#. Implement |rag| by using {+avs+} to answer questions on your data.

Background
----------

Haystack is a framework for building custom applications with 
|llm|\s, embedding models, and vector search. 
By integrating {+avs+} with Haystack, you can use 
|service| as a vector database and use {+avs+} to
implement |rag| by retrieving semantically similar documents 
from your data. To learn more about |rag|,
see :ref:`ai-key-concepts`.

Prerequisites
-------------

To complete this tutorial, you must have the following:

- An |service| {+cluster+} running MongoDB version 6.0.11, 7.0.2, or later
  (including :abbr:`RCs (Release Candidates)`).

- An OpenAI API Key. You must have a paid OpenAI account with credits
  available for API requests.

- A notebook to run your Python project such as `Colab <https://colab.research.google.com>`__.

  .. include:: /includes/fact-colab-ip-address.rst
   
Set Up the Environment
----------------------

You must first set up the environment for this tutorial. 
Create an interactive Python notebook by saving a file 
with the ``.ipynb`` extension, and then run the 
following code snippets in the notebook:

.. include:: /includes/ai-integrations/haystack/haystack-set-up-environment.rst

Create the {+avs+} Index
------------------------------------

.. note::

   To create an {+avs+} index, you must have :authrole:`Project Data Access 
   Admin` or higher access to the |service| project.

In this section, you create the ``haystack_db`` database 
and ``test`` collection to store your custom data.
Then, to enable vector search queries on your data, you 
create an {+avs+} index.

.. include:: /includes/ai-integrations/haystack/haystack-create-index.rst

Store Custom Data in |service|
------------------------------

In this section, you instantiate |service| as a vector database, 
also called a `document store <https://docs.haystack.deepset.ai/docs/mongodbatlasdocumentstore>`__.
Then, you create vector embeddings from custom data and store 
these documents in a collection in |service|. Paste and 
run the following code snippets in your notebook.

.. include:: /includes/ai-integrations/haystack/haystack-store-custom-data.rst

Answer Questions on Your Data
-----------------------------

This section demonstrates how to implement |rag| in your 
application with {+avs+} and Haystack.

.. include:: /includes/ai-integrations/haystack/haystack-perform-qa.rst

Next Steps
----------

MongoDB also provides the following developer resources:

- :website:`Building RAG Pipelines With Haystack and MongoDB Atlas
  </developer/products/atlas/haystack-ai-mongodb-atlas-vector-demo/>`
- :github:`Interactive Python Notebook
  </mongodb-developer/GenAI-Showcase/blob/main/notebooks/rag/Haystack_MongoDB_Atlas_RAG.ipynb>`
- `Hugging Face Space <https://huggingface.co/spaces/MongoDB/Haystack-MongoDB-Integration-Chat>`__
- :github:`MongoDB Developer GitHub Repository </mongodb-developer>`

.. seealso:: 

   - `Haystack Integrations <https://haystack.deepset.ai/integrations/mongodb>`__
   - `Haystack Documentation <https://docs.haystack.deepset.ai/docs/mongodbatlasdocumentstore>`__
   - `Haystack API Reference <https://docs.haystack.deepset.ai/reference/integrations-mongodb-atlas>`__
