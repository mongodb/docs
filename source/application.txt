==============
|mms| Overview
==============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

|mms-full| can automate, monitor, and back up your MongoDB 
infrastructure.  

.. _automation:

Automation
----------

|mms| Automation enables you to configure and maintain MongoDB nodes 
and clusters.

.. only:: onprem

   .. image:: /figures/how-it-works-ops.png
      :alt: "Automation coordinates MongoDB instances running in a public cloud, in your private data center, or on your local system."
      :width: 700px
      :align: center

.. only:: cloud

   .. image:: /figures/how-it-works.png
      :alt: "Automation coordinates MongoDB instances running in a public cloud, in your private data center, or on your local system."
      :width: 700px
      :align: center

How it Works
~~~~~~~~~~~~

:doc:`{+aagent+}s </tutorial/nav/automation-agent>` on each 
MongoDB host maintain your deployments. You can 
:doc:`install </tutorial/nav/install-automation-agent>` the {+aagent+} so it can :doc:`provision hosts </tutorial/nav/add-servers>` and 
:doc:`deploy clusters </tutorial/nav/manage-hosts>` in your MongoDB 
infrastructure.

The {+aagent+} also maintains the 
Monitoring and
{+bagent+} and starts, restarts, and 
upgrades the agents as needed.

Automation allows only one Monitoring or {+bagent+}s per host. It 
removes additional agents. 

.. example::

   When maintaining {+bagent+}s, Automation removes a {+bagent+} 
   from a host that has two {+bagent+}s.

.. _monitoring-functional-overview:

Monitoring
----------

|mms| Monitoring provides real-time reporting, visualization, and 
alerting on key database and hardware indicators.

How it Works
~~~~~~~~~~~~

A lightweight :doc:`Monitoring Agent </tutorial/nav/monitoring-agent>`
runs within your infrastructure and collects statistics from the nodes 
in your MongoDB deployment. The agent transmits database statistics 
back to |mms| to report deployment status in real time. You can 
:doc:`set alerts </tutorial/nav/alerts>` on indicators you choose.

.. _mms-backup-functional-overview:

Backup
------

The |mms| {+bagent+} provides scheduled 
:doc:`snapshots </tutorial/nav/backup-use-operations>` and 
point-in-time 
:doc:`recovery </tutorial/nav/backup-restore-deployments>` 
of your MongoDB :term:`replica sets <replica set>` and
:term:`sharded clusters <sharded cluster>`.

How it Works
~~~~~~~~~~~~

A lightweight {+bagent+} runs within your infrastructure and backs up
data from the MongoDB processes you have specified.

.. note::

   .. include:: /includes/fact-backup-standalone-restriction.rst

.. _data-backup:

Backup Data
~~~~~~~~~~~

When you start backing up a MongoDB deployment, the agent performs an
:term:`initial sync` of the deployment's data as if it were creating a
new, "invisible" member of a :term:`replica set`. For a sharded 
cluster, the agent syncs each shard's :term:`primary` member and each
:term:`config server`. The agent sends the initial sync and 
:term:`oplog` data over |https| back to |mms|.

.. include:: /includes/extracts/functional-overview-data-backup.rst

The {+bagent+} executes the initial sync and the tailing of the oplog
using standard MongoDB queries. The cluster being backed up is unaware
of the additional copy of the backup data.

The {+bagent+} uses a MongoDB instance version equal to or
greater than the version of the replica set it backs up.

The {+bagent+} takes and stores snapshots based on a user-defined 
:ref:`snapshot retention policy <snapshot-frequency-and-retention>`.
Sharded cluster snapshots temporarily stop the balancer so that they 
can insert a marker token into all shards and config servers in the 
cluster. |mms| takes a :term:`snapshot` when the marker tokens appear 
in the snapshot data.

.. cond:: onprem

   The procedures used to reduce the storage space required to store a 
   :term:`snapshot` depend on where it is stored:

   .. list-table::
      :header-rows: 1
      :widths: 25 75
      
      * - Snapshot Store
        - Description
      
      * - MongoDB blockstore
        - Only the differences of each successive :term:`snapshot` are
          stored. Compression and block-level :term:`deduplication`
          reduce the size of snapshot data.

      * - |aws| |s3| bucket
        - Only the differences of each successive :term:`snapshot` are
          stored. Compression and block-level :term:`deduplication`
          reduce the size of snapshot data.

      * - File system store
        - Depending on the configuration, compression reduces the size
          of the :term:`snapshot` data.

All snapshots represent a full backup. 

To learn more about how to configure backups, see 
:doc:`Backup Configuration Options </core/backup-preparations>`.

.. cond:: cloud

   Monthly backup costs for |mms| are based on the size per-gigabyte
   of your most recent snapshot. To learn about |mms| backup pricing,
   see :ref:`Backup Costs <backup-pricing>`.

.. _restores:

Restore Data
~~~~~~~~~~~~

|mms| {+bagent+}s can restore data from a complete scheduled 
snapshot or from a selected point between snapshots.

- For :term:`sharded clusters <sharded cluster>` you can restore from 
  :ref:`checkpoints <checkpoint>` between snapshots.
- For :term:`replica sets <replica set>`, you can restore from selected
  points in time.

When you restore from a :term:`snapshot`, |mms| reads directly from 
the snapshot storage and you can download the snapshot files from an 
|https| link.

When you restore from a checkpoint or point in time, |mms| first
restores a full snapshot from the snapshot storage and then applies 
stored :term:`oplogs <oplog>` until the specified point is reached. 
|mms| delivers the snapshot and oplog updates using the same |https| 
mechanisms. To enable checkpoints, see 
:ref:`enable-cluster-checkpoints`.

.. only:: onprem

   You can configure how much of the oplog you want to keep per backup.
   This affects how much time a checkpoint and point-in-time restore 
   can cover.

.. include:: /includes/extracts/server-pool-intro.rst

.. include:: /includes/extracts/toc-application-introduction.rst
