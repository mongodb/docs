#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/core/sharded-cluster-query-router.txt:7
msgid "mongos"
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:17
msgid ""
"MongoDB :binary:`~bin.mongos` instances route queries and write "
"operations to :term:`shards <shard>` in a sharded cluster. "
":binary:`~bin.mongos` provide the only interface to a sharded cluster "
"from the perspective of applications. Applications never connect or "
"communicate directly with the shards."
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:23
msgid ""
"The :binary:`~bin.mongos` tracks what data is on which shard by caching "
"the metadata from the :ref:`config servers <sharded-cluster-config-"
"server>`. The :binary:`~bin.mongos` uses the metadata to route operations"
" from applications and clients to the :binary:`~bin.mongod` instances. A "
":binary:`~bin.mongos` has no *persistent* state and consumes minimal "
"system resources."
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:30
msgid ""
"The most common practice is to run :binary:`~bin.mongos` instances on the"
" same systems as your application servers, but you can maintain "
":binary:`~bin.mongos` instances on the shards or on other dedicated "
"resources."
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:36
msgid "Routing And Results Process"
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:38
msgid ""
"A :binary:`~bin.mongos` instance routes a query to a :term:`cluster "
"<sharded cluster>` by:"
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:41
msgid ""
"Determining the list of :term:`shards <shard>` that must receive the "
"query."
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:44
msgid "Establishing a cursor on all targeted shards."
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:46
msgid ""
"The :binary:`~bin.mongos` then merges the data from each of the targeted "
"shards and returns the result document. Certain query modifiers, such as "
":ref:`sorting<sharding-mongos-sort>`, are performed on a shard such as "
"the :term:`primary shard` before :binary:`~bin.mongos` retrieves the "
"results."
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:54
msgid ""
"For :doc:`aggregation operations </core/aggregation-pipeline>` that run "
"on multiple shards, if the operations do not require running on the "
"database's :term:`primary shard`, these operations may route the results "
"back to the :binary:`~bin.mongos` where the results are then merged."
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:60
msgid ""
"There are two cases in which a pipeline is ineligible to run on "
":binary:`~bin.mongos`."
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:63
msgid ""
"The first case occurs when the merge part of the split pipeline contains "
"a stage which *must* run on a primary shard. For instance, if ``$lookup``"
" requires access to an unsharded collection in the same database as the "
"sharded collection on which the aggregation is running, the merge is "
"obliged to run on the primary shard."
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:69
msgid ""
"The second case occurs when the merge part of the split pipeline contains"
" a stage which may write temporary data to disk, such as ``$group``, and "
"the client has specified ``allowDiskUse:true``. In this case, assuming "
"that there are no other stages in the merge pipeline which require the "
"primary shard, the merge will run on a randomly-selected shard in the set"
" of shards targeted by the aggregation."
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:77
msgid ""
"For more information on how the work of aggregation is split among "
"components of a sharded cluster query, use ``explain:true`` as a "
"parameter to the :method:`~db.collection.aggregation()` call. The return "
"will include three json objects. ``mergeType`` shows where the stage of "
"the merge happens (\"primaryShard\", \"anyShard\", or \"mongos\"). "
"``splitPipeline`` shows which operations in your pipeline have run on "
"individual shards. ``shards`` shows the work each shard has done."
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:85
msgid ""
"In some cases, when the :term:`shard key` or a prefix of the shard key is"
" a part of the query, the :binary:`~bin.mongos` performs a :ref:`targeted"
" operation<sharding-mongos-targeted>`, routing queries to a subset of "
"shards in the cluster."
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:90
msgid ""
":binary:`~bin.mongos` performs a :ref:`broadcast operation<sharding-"
"mongos-broadcast>` for queries that do *not* include the :term:`shard "
"key`, routing queries to *all* shards in the cluster. Some queries that "
"do include the shard key may still result in a broadcast operation "
"depending on the distribution of data in the cluster and the selectivity "
"of the query."
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:97
msgid ""
"See :ref:`sharding-query-isolation` for more on targeted and broadcast "
"operations."
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:101
msgid "How ``mongos`` Handles Query Modifiers"
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:106
msgid "Sorting"
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:108
msgid ""
"If the result of the query is not sorted, the :binary:`~bin.mongos` "
"instance opens a result cursor that \"round robins\" results from all "
"cursors on the shards."
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:113
msgid "Limits"
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:115
msgid ""
"If the query limits the size of the result set using the "
":method:`~cursor.limit()` cursor method, the :binary:`~bin.mongos` "
"instance passes that limit to the shards and then re-applies the limit to"
" the result before returning the result to the client."
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:121
msgid "Skips"
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:123
msgid ""
"If the query specifies a number of records to *skip* using the "
":method:`~cursor.skip()` cursor method, the :binary:`~bin.mongos` "
"*cannot* pass the skip to the shards, but rather retrieves unskipped "
"results from the shards and skips the appropriate number of documents "
"when assembling the complete result."
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:129
msgid ""
"When used in conjunction with a :method:`~cursor.limit()`, the "
":binary:`~bin.mongos` will pass the *limit* plus the value of the "
":method:`~cursor.skip()` to the shards to improve the efficiency of these"
" operations."
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:135
msgid "Confirm Connection to ``mongos`` Instances"
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:137
msgid ""
"To detect if the MongoDB instance that your client is connected to is "
":binary:`~bin.mongos`, use the :dbcommand:`isMaster` command. When a "
"client connects to a :binary:`~bin.mongos`, :dbcommand:`isMaster` returns"
" a document with a ``msg`` field that holds the string ``isdbgrid``. For "
"example:"
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:153
msgid ""
"If the application is instead connected to a :binary:`~bin.mongod`, the "
"returned document does not include the ``isdbgrid`` string."
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:162
msgid "Targeted Operations vs. Broadcast Operations"
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:164
msgid ""
"Generally, the fastest queries in a sharded environment are those that "
":binary:`~bin.mongos` route to a single shard, using the :term:`shard "
"key` and the cluster meta data from the :ref:`config server <sharding-"
"config-server>`. These :ref:`targeted operations<sharding-mongos-"
"targeted>` use the shard key value to locate the shard or subset of "
"shards that satisfy the query document."
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:171
msgid ""
"For queries that don't include the shard key, :binary:`~bin.mongos` must "
"query all shards, wait for their responses and then return the result to "
"the application. These \"scatter/gather\" queries can be long running "
"operations."
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:178
msgid "Broadcast Operations"
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:180
msgid ""
":binary:`~bin.mongos` instances broadcast queries to all shards for the "
"collection **unless** the :binary:`~bin.mongos` can determine which shard"
" or subset of shards stores this data."
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:186
msgid ""
"After the :binary:`~bin.mongos` receives responses from all shards, it "
"merges the data and returns the result document. The performance of a "
"broadcast operation depends on the overall load of the cluster, as well "
"as variables like network latency, individual shard load, and number of "
"documents returned per shard. Whenever possible, favor operations that "
"result in :ref:`targeted operation<sharding-mongos-targeted>` over those "
"that result in a broadcast operation."
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:194
msgid "Multi-update operations are always broadcast operations."
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:196
msgid ""
"The :method:`~db.collection.updateMany()` and "
":method:`~db.collection.deleteMany()` methods are broadcast operations, "
"unless the query document specifies the shard key in full."
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:203
msgid "Targeted Operations"
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:205
msgid ""
":binary:`~bin.mongos` can route queries that include the shard key or the"
" prefix of a :term:`compound<compound index>` shard key a specific shard "
"or set of shards. :binary:`~bin.mongos` uses the shard key value to "
"locate the :term:`chunk` whose range includes the shard key value and "
"directs the query at the :term:`shard` containing that chunk."
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:213
msgid "For example, if the shard key is:"
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:219
msgid ""
"The :binary:`~bin.mongos` program *can* route queries that include the "
"full shard key or either of the following shard key prefixes at a "
"specific shard or set of shards:"
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:228
msgid ""
"All :method:`~db.collection.insertOne()` operations target to one shard. "
"Each document in the :method:`~db.collection.insertMany()` array targets "
"to a single shard, but there is no guarantee all documents in the array "
"insert into a single shard."
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:233
msgid ""
"All :method:`~db.collection.updateOne()`, "
":method:`~db.collection.replaceOne()` and "
":method:`~db.collection.deleteOne()` operations *must* include the "
":term:`shard key` or ``_id`` in the query document. MongoDB returns an "
"error if these methods are used without the shard key or ``_id``."
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:239
msgid ""
"Depending on the distribution of data in the cluster and the selectivity "
"of the query, :binary:`~bin.mongos` may still perform a :ref:`broadcast "
"operation<sharding-mongos-broadcast>` to fulfill these queries."
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:244
msgid "Index Use"
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:246
msgid ""
"If the query does not include the :term:`shard key`, the "
":binary:`~bin.mongos` must send the query to all shards as a "
"\"scatter/gather\" operation. Each shard will, in turn, use *either* the "
"shard key index or another more efficient index to fulfill the query."
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:251
msgid ""
"If the query includes multiple sub-expressions that reference the fields "
"indexed by the shard key *and* the secondary index, the "
":binary:`~bin.mongos` can route the queries to a specific shard and the "
"shard will use the index that will allow it to fulfill most efficiently."
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:258
msgid "Sharded Cluster Security"
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:260
msgid ""
"Use :doc:`/core/security-internal-authentication` to enforce intra-"
"cluster security and prevent unauthorized cluster components from "
"accessing the cluster. You must start each :binary:`~bin.mongod` or "
":binary:`~bin.mongos` in the cluster with the appropriate security "
"settings in order to enforce internal authentication."
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:266
msgid ""
"See :doc:`/tutorial/deploy-sharded-cluster-with-keyfile-access-control` "
"for a tutorial on deploying a secured sharded cluster."
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:270
msgid "Cluster Users"
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:272
msgid ""
"Sharded clusters support :doc:`/core/authorization` *(RBAC)* for "
"restricting unauthorized access to cluster data and operations. You must "
"start each :binary:`~bin.mongod` in the cluster, including the "
":term:`config servers <config server>`, with the :option:`--auth <mongod "
"--auth>` option in order to enforce RBAC. Alternatively, enforcing "
":doc:`/core/security-internal-authentication` for inter-cluster security "
"also enables user access controls via RBAC."
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:279
msgid ""
"With RBAC enforced, clients must specify a :option:`--username <mongo "
"--username>`, :option:`--password <mongo --password>`, and "
":option:`--authenticationDatabase <mongo --authenticationDatabase>` when "
"connecting to the :binary:`~bin.mongos` in order to access cluster "
"resources."
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:284
msgid ""
"Each cluster has its own cluster users. These users cannot be used to "
"access individual shards."
msgstr ""

#: ../source/core/sharded-cluster-query-router.txt:287
msgid ""
"See :doc:`/tutorial/enable-authentication` for a tutorial on enabling "
"adding users to an RBAC-enabled MongoDB deployment."
msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid "Sharded Cluster Query Routing"
#~ msgstr ""

#~ msgid "Routing Process"
#~ msgstr ""

#~ msgid ""
#~ "A :program:`mongos` instance uses the "
#~ "following processes to route queries and"
#~ " return results."
#~ msgstr ""

#~ msgid "How ``mongos`` Determines which Shards Receive a Query"
#~ msgstr ""

#~ msgid ""
#~ "In some cases, when the :term:`shard "
#~ "key` or a prefix of the shard "
#~ "key is a part of the query, "
#~ "the :program:`mongos` can route the "
#~ "query to a subset of the shards."
#~ " Otherwise, the :program:`mongos` must "
#~ "direct the query to *all* shards "
#~ "that hold documents for that collection."
#~ msgstr ""

#~ msgid "Example"
#~ msgstr ""

#~ msgid "Given the following shard key:"
#~ msgstr ""

#~ msgid ""
#~ "Depending on the distribution of chunks"
#~ " in the cluster, the :program:`mongos` "
#~ "may be able to target the query"
#~ " at a subset of shards, if the"
#~ " query contains the following fields:"
#~ msgstr ""

#~ msgid ""
#~ "If the query specifies sorted results"
#~ " using the :method:`~cursor.sort()` cursor "
#~ "method, the :program:`mongos` instance passes"
#~ " the :operator:`$orderby` option to the "
#~ "shards. The primary shard for the "
#~ "database receives and performs a merge"
#~ " sort for all results before "
#~ "returning the data to the client "
#~ "via the :program:`mongos`."
#~ msgstr ""

#~ msgid ""
#~ "If the query specifies a number of"
#~ " records to *skip* using the "
#~ ":method:`~cursor.skip()` cursor method, the "
#~ ":program:`mongos` *cannot* pass the skip "
#~ "to the shards, but rather retrieves "
#~ "unskipped results from the shards and"
#~ " skips the appropriate number of "
#~ "documents when assembling the complete "
#~ "result. However, when used in "
#~ "conjunction with a :method:`~cursor.limit()`, "
#~ "the :program:`mongos` will pass the "
#~ "*limit* plus the value of the "
#~ ":method:`~cursor.skip()` to the shards to "
#~ "improve the efficiency of these "
#~ "operations."
#~ msgstr ""

#~ msgid "Detect Connections to :program:`mongos` Instances"
#~ msgstr ""

#~ msgid "Broadcast Operations and Targeted Operations"
#~ msgstr ""

#~ msgid "In general, operations in a sharded environment are either:"
#~ msgstr ""

#~ msgid ""
#~ "Broadcast to all shards in the "
#~ "cluster that hold documents in a "
#~ "collection"
#~ msgstr ""

#~ msgid ""
#~ "Targeted at a single shard or a"
#~ " limited group of shards, based on"
#~ " the shard key"
#~ msgstr ""

#~ msgid ""
#~ "For best performance, use targeted "
#~ "operations whenever possible. While some "
#~ "operations must broadcast to all shards,"
#~ " you can ensure MongoDB uses targeted"
#~ " operations whenever possible by always "
#~ "including the shard key."
#~ msgstr ""

#~ msgid ""
#~ "The :method:`~db.collection.remove()` operation is"
#~ " always a broadcast operation, unless "
#~ "the operation specifies the shard key"
#~ " in full."
#~ msgstr ""

#~ msgid "All :method:`~db.collection.insert()` operations target to one shard."
#~ msgstr ""

#~ msgid ""
#~ "All single :method:`~db.collection.update()` "
#~ "(including :term:`upsert` operations) and "
#~ ":method:`~db.collection.remove()` operations must "
#~ "target to one shard."
#~ msgstr ""

#~ msgid ""
#~ "All |single-modification-operation-names| "
#~ "operations for a sharded collection that"
#~ " specify the |single-modification-"
#~ "operation-option| option must include the"
#~ " :term:`shard key` *or* the ``_id`` "
#~ "field in the query specification. "
#~ "|single-modification-operation-names| operations"
#~ " specifying |single-modification-operation-"
#~ "option| in a sharded collection without"
#~ " the :term:`shard key` *or* the "
#~ "``_id`` field return an error."
#~ msgstr ""

#~ msgid ""
#~ "For queries that include the shard "
#~ "key or portion of the shard key,"
#~ " :program:`mongos` can target the query "
#~ "at a specific shard or set of "
#~ "shards. This is the case only if"
#~ " the portion of the shard key "
#~ "included in the query is a "
#~ "*prefix* of the shard key. For "
#~ "example, if the shard key is:"
#~ msgstr ""

#~ msgid ""
#~ "Depending on the distribution of data"
#~ " in the cluster and the selectivity"
#~ " of the query, :program:`mongos` may "
#~ "still have to contact multiple shards"
#~ " [#possible-all]_ to fulfill these "
#~ "queries."
#~ msgstr ""

#~ msgid ""
#~ ":program:`mongos` will route some queries, "
#~ "even some that include the shard "
#~ "key, to all shards, if needed."
#~ msgstr ""

#~ msgid "Sharded and Non-Sharded Data"
#~ msgstr ""

#~ msgid ""
#~ "Sharding operates on the collection "
#~ "level. You can shard multiple "
#~ "collections within a database or have"
#~ " multiple databases with sharding enabled."
#~ " [#sharding-databases]_ However, in "
#~ "production deployments, some databases and "
#~ "collections will use sharding, while "
#~ "other databases and collections will "
#~ "only reside on a single shard."
#~ msgstr ""

#~ msgid ""
#~ "Regardless of the data architecture of"
#~ " your :term:`sharded cluster`, ensure that"
#~ " all queries and operations use the"
#~ " :term:`mongos` router to access the "
#~ "data cluster. Use the :program:`mongos` "
#~ "even for operations that do not "
#~ "impact the sharded data."
#~ msgstr ""

#~ msgid ""
#~ "As you configure sharding, you will "
#~ "use the :dbcommand:`enableSharding` command to"
#~ " enable sharding for a database. This"
#~ " simply makes it possible to use "
#~ "the :dbcommand:`shardCollection` command on a"
#~ " collection within that database."
#~ msgstr ""

#~ msgid ""
#~ "For :doc:`aggregation operations </core"
#~ "/aggregation-pipeline>` that run on "
#~ "multiple shards, if the operations do"
#~ " not require running on the "
#~ "database's primary shard, these operations "
#~ "can route the results to any shard"
#~ " to merge the results and avoid "
#~ "overloading the primary shard for that"
#~ " database."
#~ msgstr ""

# 4e2d5753160d40b0b2f864aa7eec87e7
#~ msgid "On this page"
#~ msgstr ""

# 909466abf184441a9b807ef36a61dc9d
#~ msgid ""
#~ "MongoDB :program:`mongos` instances route "
#~ "queries and write operations to "
#~ ":term:`shards <shard>` in a sharded "
#~ "cluster. :program:`mongos` provide the only"
#~ " interface to a sharded cluster from"
#~ " the perspective of applications. "
#~ "Applications never connect or communicate "
#~ "directly with the shards."
#~ msgstr ""

# e2fbed9e0e384e81b22f5942ecfe9f16
#~ msgid ""
#~ "The :program:`mongos` tracks what data "
#~ "is on which shard by caching the"
#~ " metadata from the :ref:`config servers "
#~ "<sharded-cluster-config-server>`. The "
#~ ":program:`mongos` uses the metadata to "
#~ "route operations from applications and "
#~ "clients to the :program:`mongod` instances."
#~ " A :program:`mongos` has no *persistent*"
#~ " state and consumes minimal system "
#~ "resources."
#~ msgstr ""

# 64af74cc88234883aabe7b076ef9a5dd
#~ msgid ""
#~ "The most common practice is to run"
#~ " :program:`mongos` instances on the same"
#~ " systems as your application servers, "
#~ "but you can maintain :program:`mongos` "
#~ "instances on the shards or on "
#~ "other dedicated resources."
#~ msgstr ""

# 21d0aeac69484024853e3417e5f20cc7
#~ msgid ""
#~ "A :program:`mongos` instance routes a "
#~ "query to a :term:`cluster <sharded "
#~ "cluster>` by:"
#~ msgstr ""

# aa67a1638191495a82ee766f0811d8e9
#~ msgid ""
#~ "The :program:`mongos` then merges the "
#~ "data from each of the targeted "
#~ "shards and returns the result document."
#~ " Certain query modifiers, such as "
#~ ":ref:`sorting<sharding-mongos-sort>`, are "
#~ "performed on a shard such as the"
#~ " :term:`primary shard` before :program:`mongos`"
#~ " retrieves the results."
#~ msgstr ""

# 98be1995295346db850401be2f08e35a
#~ msgid ""
#~ "For :doc:`aggregation operations </core"
#~ "/aggregation-pipeline>` that run on "
#~ "multiple shards, if the operations do"
#~ " not require running on the "
#~ "database's :term:`primary shard`, these "
#~ "operations can route the results to "
#~ "any shard to merge the results and"
#~ " avoid overloading the primary shard "
#~ "for that database."
#~ msgstr ""

# 466e23de619441e8aed632d4abaad2fd
#~ msgid ""
#~ "In some cases, when the :term:`shard "
#~ "key` or a prefix of the shard "
#~ "key is a part of the query, "
#~ "the :program:`mongos` performs a "
#~ ":ref:`targeted operation<sharding-mongos-targeted>`,"
#~ " routing queries to a subset of "
#~ "shards in the cluster."
#~ msgstr ""

# 861bf1dc58734300964987039f7da943
#~ msgid ""
#~ ":program:`mongos` performs a :ref:`broadcast "
#~ "operation<sharding-mongos-broadcast>` for "
#~ "queries that do *not* include the "
#~ ":term:`shard key`, routing queries to "
#~ "*all* shards in the cluster. Some "
#~ "queries that do include the shard "
#~ "key may still result in a "
#~ "broadcast operation depending on the "
#~ "distribution of data in the cluster "
#~ "and the selectivity of the query."
#~ msgstr ""

# 43e10e13a8ef4d85b54d91543b9420ff
#~ msgid ""
#~ "If the result of the query is "
#~ "not sorted, the :program:`mongos` instance "
#~ "opens a result cursor that \"round "
#~ "robins\" results from all cursors on "
#~ "the shards."
#~ msgstr ""

# c1609bc41f924314a2def60f0730cf86
#~ msgid ""
#~ "If the query specifies sorted results"
#~ " using the :method:`~cursor.sort()` cursor "
#~ "method, the :program:`mongos` instance passes"
#~ " the :operator:`$orderby` option to the "
#~ "shards. The :term:`primary shard` for "
#~ "the database receives and performs a "
#~ "merge sort for all results before "
#~ "returning the data to the client "
#~ "via the :program:`mongos`."
#~ msgstr ""

# dcae7acf5904466a85ee4902f6212ffe
#~ msgid ""
#~ "If the query limits the size of"
#~ " the result set using the "
#~ ":method:`~cursor.limit()` cursor method, the "
#~ ":program:`mongos` instance passes that limit"
#~ " to the shards and then re-"
#~ "applies the limit to the result "
#~ "before returning the result to the "
#~ "client."
#~ msgstr ""

# c1770737ce2442efbe71a091e8fae1b9
#~ msgid ""
#~ "If the query specifies a number of"
#~ " records to *skip* using the "
#~ ":method:`~cursor.skip()` cursor method, the "
#~ ":program:`mongos` *cannot* pass the skip "
#~ "to the shards, but rather retrieves "
#~ "unskipped results from the shards and"
#~ " skips the appropriate number of "
#~ "documents when assembling the complete "
#~ "result."
#~ msgstr ""

# 380681f7f0fd4ecfb4a85023fd3f4afa
#~ msgid ""
#~ "When used in conjunction with a "
#~ ":method:`~cursor.limit()`, the :program:`mongos` "
#~ "will pass the *limit* plus the "
#~ "value of the :method:`~cursor.skip()` to "
#~ "the shards to improve the efficiency "
#~ "of these operations."
#~ msgstr ""

# 2d8446ef14ff42d39c6252782ed155f2
#~ msgid ""
#~ "To detect if the MongoDB instance "
#~ "that your client is connected to "
#~ "is :program:`mongos`, use the "
#~ ":dbcommand:`isMaster` command. When a client"
#~ " connects to a :program:`mongos`, "
#~ ":dbcommand:`isMaster` returns a document with"
#~ " a ``msg`` field that holds the "
#~ "string ``isdbgrid``. For example:"
#~ msgstr ""

# d0c11770c8d0402d86100d85d1913ace
#~ msgid ""
#~ "If the application is instead connected"
#~ " to a :program:`mongod`, the returned "
#~ "document does not include the "
#~ "``isdbgrid`` string."
#~ msgstr ""

# 2260f59bcc93415d907a9f61a306c2ea
#~ msgid "Query Isolation"
#~ msgstr ""

# 4d178a0bac0e468c94864fd57ca9ed81
#~ msgid ""
#~ "Generally, the fastest queries in a "
#~ "sharded environment are those that "
#~ ":program:`mongos` route to a single "
#~ "shard, using the :term:`shard key` and"
#~ " the cluster meta data from the "
#~ ":ref:`config server <sharding-config-server>`."
#~ " These :ref:`targeted operations<sharding-"
#~ "mongos-targeted>` use the shard key "
#~ "value to locate the shard or "
#~ "subset of shards that satisfy the "
#~ "query document."
#~ msgstr ""

# 2feb1ac01fd24a57a4839fa68e756e46
#~ msgid ""
#~ "For queries that don't include the "
#~ "shard key, :program:`mongos` must query "
#~ "all shards, wait for their responses "
#~ "and then return the result to the"
#~ " application. These \"scatter/gather\" queries"
#~ " can be long running operations."
#~ msgstr ""

# 7072e68c236041fdaca2bfa8609f989a
#~ msgid ""
#~ ":program:`mongos` instances broadcast queries "
#~ "to all shards for the collection "
#~ "**unless** the :program:`mongos` can determine"
#~ " which shard or subset of shards "
#~ "stores this data."
#~ msgstr ""

# f6c22e2dac8541dbb9f437ca9cd64000
#~ msgid ""
#~ "Once the :program:`mongos` has received "
#~ "a response from all shard, it "
#~ "merges the data and returns the "
#~ "result document. The performance of a"
#~ " broadcast operation depends on the "
#~ "overall load of the cluster, as "
#~ "well as variables like network latency,"
#~ " individual shard load, and number of"
#~ " documents returned per shard. Whenever "
#~ "possible, favor operations that result "
#~ "in :ref:`targeted operation<sharding-mongos-"
#~ "targeted>` over those that result in "
#~ "a broadcast operation."
#~ msgstr ""

# 79aa4db1039d4b79b04592371d59f586
#~ msgid ""
#~ ":program:`mongos` can route queries that "
#~ "include the shard key or the "
#~ "prefix of a :term:`compound<compound index>`"
#~ " shard key a specific shard or "
#~ "set of shards. :program:`mongos` uses "
#~ "the shard key value to locate the"
#~ " :term:`chunk` whose range includes the "
#~ "shard key value and directs the "
#~ "query at the :term:`shard` containing "
#~ "that chunk."
#~ msgstr ""

# d69c243d83954a81b62501aeadf1b90c
#~ msgid ""
#~ "The :program:`mongos` program *can* route "
#~ "queries that include the full shard "
#~ "key or either of the following "
#~ "shard key prefixes at a specific "
#~ "shard or set of shards:"
#~ msgstr ""

# 81ba6ec9d35d418b9fe22ae3d612b7f5
#~ msgid ""
#~ "Depending on the distribution of data"
#~ " in the cluster and the selectivity"
#~ " of the query, :program:`mongos` may "
#~ "still perform a :ref:`broadcast operation"
#~ "<sharding-mongos-broadcast>` to fulfill "
#~ "these queries."
#~ msgstr ""

# 87c24f3d14494673be5682ca8067332f
#~ msgid ""
#~ "If the query does not include the"
#~ " :term:`shard key`, the :program:`mongos` "
#~ "must send the query to all shards"
#~ " as a \"scatter/gather\" operation. Each"
#~ " shard will, in turn, use *either*"
#~ " the shard key index or another "
#~ "more efficient index to fulfill the "
#~ "query."
#~ msgstr ""

# 7eaa313c007f4a47b5e6a851d0acf824
#~ msgid ""
#~ "If the query includes multiple sub-"
#~ "expressions that reference the fields "
#~ "indexed by the shard key *and* the"
#~ " secondary index, the :program:`mongos` can"
#~ " route the queries to a specific "
#~ "shard and the shard will use the"
#~ " index that will allow it to "
#~ "fulfill most efficiently."
#~ msgstr ""

# 4bbd2009309c422a954b316b90e40868
#~ msgid ""
#~ "Use :doc:`/core/security-internal-authentication`"
#~ " to enforce intra-cluster security "
#~ "and prevent unauthorized cluster components"
#~ " from accessing the cluster. You must"
#~ " start each :program:`mongod` or "
#~ ":program:`mongos` in the cluster with "
#~ "the appropriate security settings in "
#~ "order to enforce internal authentication."
#~ msgstr ""

# cc865ce1db984d02aa86e6201dbd6280
#~ msgid ""
#~ "Sharded clusters support :doc:`/core/authorization`"
#~ " *(RBAC)* for restricting unauthorized "
#~ "access to cluster data and operations."
#~ " You must start each :program:`mongod` "
#~ "in the cluster, including the "
#~ ":term:`config servers <config server>`, with"
#~ " the :option:`--auth` option in order "
#~ "to enforce RBAC. Alternatively, enforcing "
#~ ":doc:`/core/security-internal-authentication` for"
#~ " inter-cluster security also enables "
#~ "user access controls via RBAC."
#~ msgstr ""

# 1bce0aef78914e34a05d7dac1d521ecd
#~ msgid ""
#~ "With RBAC enforced, clients must specify"
#~ " a :option:`--username`, :option:`--password`, "
#~ "and :option:`--authenticationDatabase` when "
#~ "connecting to the :program:`mongos` in "
#~ "order to access cluster resources."
#~ msgstr ""

# 09640d3cc89240658e7e95db6aefa970
#~ msgid "shard key"
#~ msgstr ""

# 09640d3cc89240658e7e95db6aefa970
#~ msgid "query isolation"
#~ msgstr ""

