======================================================
Compatibility Changes in MongoDB 3.6 Release Candidate
======================================================

.. default-domain:: mongodb

.. include:: /includes/in-dev.rst

Security Compatibility Changes
------------------------------

MongoDB 3.6 removes the deprecated HTTP interface and REST API to
MongoDB.

.. list-table::
   :header-rows: 1
   :widths: 60 40

   * - Configuration Settings
     - ``mongod/mongos`` option

   * - | ``net.http.enabled``
       | ``net.http.JSONPEnabled``
       | ``net.http.port``
       | ``net.http.RESTInterfaceEnabled``

     - | ``httpinterface``
       | ``nohttpinterface``
       | ``jsonp``
       | ``rest``

.. _3.6-bind_ip-compatibility:

Localhost Binding Compatibility Changes
-------------------------------------

.. include:: /includes/fact-default-bind-ip.rst

.. include:: /includes/fact-bind-to-all-ips.rst

General Compatibility Changes
-----------------------------

.. _3.6-compatibility-arbiter-priority:

Arbiter and Priority
~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-arbiter-priority.rst

.. _aggregate-compatibility:

``aggregate`` Command and Results
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 3.6 removes the option for the :dbcommand:`aggregate` command
to return its results as a single document.

If you run the :dbcommand:`aggregate` command, you must include either
the ``cursor`` option or the ``explain`` option.

Rather than run the :dbcommand:`aggregate` command directly, most users
should use the :method:`db.collection.aggregate()` helper provided in
the mongo shell or the equivalent helper in their driver. These helpers
return a cursor unless using the ``explain`` option.

Stricter Validation of ``$pop`` Arguments
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in 3.6 [#upgraded]_, :update:`$pop` operator performs
a stricter validation of its argument to require either:

- ``-1`` to remove the first element of an array, or

- ``1`` to remove the last element in an array.

In earlier versions, :update:`$pop` allowed:

- any value less than ``0`` to remove the first element of an array, and

- any value greater than or equal to ``0`` as well as non-numeric value
  to remove the last element in an array.

.. [#upgraded]

   Affects MongoDB deployments with ``featureCompatibilityVersion`` set
   to ``3.6``; e.g. new 3.6 deployments, upgraded deployments that have
   set ``featureCompatibilityVersion`` to ``3.6``.

.. _3.6-pushall-compatibility:

Remove ``$pushAll`` Update Operator
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 3.6 removes the deprecated ``$pushAll`` operator. The operator
has been deprecated since 2.4.

Instead of ``$pushAll``, use the :update:`$push` operator with the
:update:`$each` modifier. For example:

.. code-block:: javascript

   db.students.update(
      { name: "joe" },
      { $push: { scores: { $each: [ 90, 92, 85 ] } } }
   )

.. _3.6-validate-compatibility:

``validate`` Operation
~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-validate-wiredtiger-full-option.rst

For more information on the validate operation, see the
:dbcommand:`validate` command and the
:method:`db.collection.validate()` method.

.. _3.6-type-array-compatibility:

``$type : 'array'`` Behavior Change
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in 3.6, ``$type : "array"`` and ``$type : 4`` expressions match array
fields that contain any element type.

In earlier versions, ``$type : 'array'`` would only match with fields
that contained a nested array.

For example, a collection named ``c`` contains two documents:

.. code-block:: javascript

   {
      "_id": 1,
      "a": [
         1,
         2,
         3
      ]
   },
   {
      "_id": 2,
      "a": [
         1,
         2,
         [ 3, 4 ]
      ]
   }

In 3.4 and earlier versions of MongoDB, the following query returns any 
document in which field ``a`` contains an element of :term:`BSON` 
type ``array``.

.. code-block:: javascript

  db.c.find( { 'a' : { $type : 'array' } } )

The above query, exhibiting behavior from before 3.6, will return the 
second document.

.. code-block:: javascript

   {
      "_id": 2,
      "a": [
         1,
         2,
         [ 3, 4 ]
      ]
   }

Starting in 3.6, the same query returns both documents in the collection
because the ``$type`` query can now detect that field ``'a'`` is 
itself an array.

.. code-block:: javascript

   {
      "_id": 1,
      "a": [
         1,
         2,
         3
      ]
   },
   {
      "_id": 2,
      "a": [
         1,
         2,
         [ 3, 4 ]
      ]
   }

If upgrading from a MongoDB 3.4.x  deployment that has partial indexes whose
``partialFilterExpression`` includes a ``$type : "array"`` or ``$type : 4``
expression, you must rebuild these indexes after upgrading to avoid conflicting
``$type : 'array'`` semantics.

For more information on the ``$type : 'array'`` expression, see
:ref:`document-querying-by-array-type`.

.. _3.6-index-asterisk:

Indexes Named ``*``
-------------------

Starting in 3.6, you cannot specify ``*`` as the index name during
index creation nor can you delete indexes named ``*`` by specifying the
index keys.

To delete exisitng indexes named ``*``, delete the index before
upgrading. To rename them, delete and recreate the index.

Platform Support
----------------

MongoDB 3.6 discontinues support for versions of Windows prior to Windows
Server 2008 R2 and Windows 7.

.. _3.6-compatibility-enabled:

Backwards Incompatible Features
-------------------------------

.. include:: /includes/3.6-backwards-incompatible-features.rst

To set the ``featureCompatibilityVersion``, see
:dbcommand:`setFeatureCompatibilityVersion` command.

3.6 deployments have the following default
``featureCompatibilityVersion`` values:

.. include:: /includes/list-table-featureCompatibilityVersion-defaults.rst

