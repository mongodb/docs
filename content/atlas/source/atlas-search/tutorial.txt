.. _fts-tutorial-ref:

========================
|fts| Quick Start
========================

.. default-domain:: mongodb

.. facet::
   :name: programming_language
   :values: csharp, java, javascript/typescript, python, shell, go, kotlin
   
.. meta::
   :keywords: code example, sample dataset, Node.js, MongoDB Shell, search tester, MongoDB Atlas, C#, Java (Sync), Kotlin (Coroutine), Atlas CLI, Python, JSON, java sync, atlas ui, node.js, go, prerequisites, role required
   :description: Learn how to get started with Atlas Search by creating a search index, querying your collection, and processing your search results.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

|fts| is an embedded full-text search in |service-fullname| 
that gives you a seamless, scalable experience for building 
relevance-based app features. This quick start describes 
how to get started in the following steps:

1. Create an |fts| index on a sample collection.

#. Build an |fts| query to search the collection.
   You will learn how to:
  
   - Run a basic query to search for a term in a field
   - Use an operator to refine your search
   - Add a search option to process your results

*Time required: 15 minutes*   

.. note:: 

   This tutorial includes examples for a selection of clients. 
   For all supported clients, see the
   :ref:`Indexes <fts-manage-indexes>` and 
   :ref:`Queries <ref-query-management>` pages.

.. _create-fts-index:

Create an |fts| Index
---------------------

.. collapsible::
   :heading: What is an Atlas Search Index?
   :expanded: false

   An |fts| index is a data structure that categorizes data in an easily
   searchable format. It maps terms with documents that
   contain those terms to enable fast retrieval of documents
   at query-time. 
   
   You must configure an |fts| index to query data using |fts|. 
   We recommend that you index the fields that you regularly 
   use to sort or filter your data.

   To learn more, see :ref:`fts-manage-indexes`.

In this section, you create an |fts| index on the sample 
:ref:`movies <mflix-movies>` collection. You can create the 
|fts| index in either an |service| {+cluster+} or a
deployment hosted on your local computer.

.. |search-type| replace:: :guilabel:`Atlas Search`
.. |index-name| replace:: ``default``
.. |collection| replace:: ``movies`` collection
.. |collection-name| replace:: ``movies`` collection
.. |database| replace:: ``sample_mflix`` database
.. |database-name| replace:: ``sample_mflix`` database
.. |index-name| replace:: ``default``

.. tabs-selector:: drivers

.. tabs::

   .. tab:: {+service+} {+Cluster+}
      :tabid: cloud

      .. include:: /includes/fts/quickstart/steps-fts-quick-start-create-index-atlas.rst

   .. tab:: Local Deployment
      :tabid: local

      .. include:: /includes/fts/quickstart/steps-fts-quick-start-create-index-local.rst

.. _fts-tutorial-run-query:

Build an |fts| Query
--------------------

.. collapsible::
   :heading: What are Atlas Search queries?
   :expanded: false

   |fts| queries take the form of an :manual:`aggregation pipeline stage 
   </aggregation>`. You use |fts| primarily with the :pipeline:`$search` stage, 
   which must be the first stage in the query pipeline. You can also use 
   this stage in conjunction with other stages in your pipeline.

   When you run an |fts| query, |fts| uses the search index to
   locate and retrieve relevant data from the collection. 
   |fts| also provides the :pipeline:`$searchMeta` stage, 
   multiple sub-pipelines, and several query 
   :ref:`operators <operators-ref>` and :ref:`collectors <collectors-ref>` 
   that you can use to further refine your search results. 

   To learn more, see :ref:`fts-about-queries`.

In this section, you run queries against the indexed collection.
   
.. tabs-drivers::

   .. tab::
      :tabid: atlas-ui

      .. include:: /includes/fts/quickstart/steps-fts-tutorial-run-query-atlas-ui.rst

   .. tab::
      :tabid: shell

      .. include:: /includes/fts/quickstart/steps-fts-tutorial-run-query.rst

   .. tab::
      :tabid: compass

      .. include:: /includes/fts/quickstart/steps-fts-tutorial-run-query-compass.rst

   .. tab::
      :tabid: csharp

      .. include:: /includes/fts/quickstart/steps-fts-tutorial-run-query-csharp.rst

   .. tab:: 
      :tabid: go

      .. include:: /includes/fts/quickstart/steps-fts-tutorial-run-query-go.rst

   .. tab:: 
      :tabid: java-sync 

      .. include:: /includes/fts/quickstart/steps-fts-tutorial-run-query-java.rst

   .. tab:: 
      :tabid: kotlin-coroutine

      .. include:: /includes/fts/quickstart/steps-fts-tutorial-run-query-kotlin.rst

   .. tab::
      :tabid: nodejs

      .. include:: /includes/fts/quickstart/steps-fts-tutorial-run-query-nodejs.rst

   .. tab::
      :tabid: python

      .. include:: /includes/fts/quickstart/steps-fts-tutorial-run-query-python.rst
   
   .. tab::
      :tabid: rust

      .. include:: /includes/fts/quickstart/steps-fts-tutorial-run-query-rust.rst

Continue Learning 
-----------------

Run Autocomplete and Partial Match Queries
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You can use |fts| to run autocomplete and partial queries
that return results for partial words. This is useful to retrieve 
results with increasing accuracy as more characters
are entered in your application's search field. You must 
index the fields as the |fts| :ref:`autocomplete
<bson-data-types-autocomplete>` type to use the :ref:`autocomplete <autocomplete-ref>` 
operator.

To get started, see :ref:`partial-match-tutorial`.

Group Search Results with Facets
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You can use |fts| to run facet queries that group search results
by string, date, or numeric values. You must create an index 
with a :ref:`facet definition <fts-facet-definition>` to use the
:ref:`fts-facet-ref` collector.

To get started, see :ref:`facet-tutorial`.

Use the {+playground+}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Use the `{+playground+} <https://search-playground.mongodb.com/>`__. 
to try different |fts| features by configuring search indexes and running 
queries without an |service| account, {+cluster+}, or collection. 

To learn more, see :ref:`fts-playground`.

Learn with a Course
~~~~~~~~~~~~~~~~~~~

To learn more about |fts|, you can take Unit 1 of the
:mdbu-course:`Atlas Search Course on MongoDB University
</learning-paths/atlas-search>`. The 2.25 hour unit includes an 
overview of |fts| and lessons on how to create |fts| indexes, use 
:pipeline:`$search` with different operators, and generate search 
:ref:`facets <fts-facet-ref>`.

.. _fts-video-section:

Learn by Watching
~~~~~~~~~~~~~~~~~

You can also watch the following videos to 
learn more about |fts|:

.. collapsible::
   :heading: Video: What is Atlas Search?
   :sub_heading: Watch an overview of Atlas Search and how to get started.
   :expanded: false

   Watch an overview of |service| and |fts| and get started setting up
   |fts| for your data. The video demonstrates how to load sample data on
   your {+cluster+}, create an |fts| index, and run a sample query using
   :guilabel:`Search Tester` and :guilabel:`Data Explorer`. 

   *Duration: 10 Minutes*

   .. video:: https://youtu.be/HsS0z3eOCSQ

.. collapsible::
   :heading: Video: Atlas Search Indexes and Queries
   :sub_heading: Watch a video that demonstrates how to configure an Atlas Search index and run queries.
   :expanded: false

   Follow along with the following video to learn how to configure your 
   |fts| index and run queries from your application. 

   *Duration: 7 Minutes*

   .. video:: https://youtu.be/3fRCD_QptVQ

.. collapsible::
   :heading: Video: Restaurant Finder Demo
   :sub_heading: Watch a video tutorial that demonstrates a demo application that uses Atlas Search.
   :expanded: false

   Follow along with the following video tutorial walk-through that 
   demonstrates how to build |fts| queries for a Restaurant Finder demo 
   application, which is also available at `www.atlassearchrestaurants.com 
   <https://www.atlassearchrestaurants.com/>`__.

   *Duration: 20 Minutes*

   .. video:: https://youtu.be/s2kXYZRE7pA

.. toctree::
   :titlesonly:

   Autocomplete and Partial Matching </atlas-search/tutorial/partial-match>
   Facets <atlas-search/tutorial/facet-tutorial>
