=========================
Install the |k8s-op-full|
=========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. include:: /includes/styles/corrections.rst

.. include:: /includes/note-k8s-supported-in-om4.rst

|k8s-op-full| allows you to deploy MongoDB deployment items with |k8s|
and |onprem|. This Operator uses |k8s| and |onprem| |api| methods to
deploy standalone, replica set, and sharded cluster deployments that
|onprem| manages.

.. note::

   This tutorial presumes some knowledge of |k8s|, but does link to
   relevant |k8s| documentation where possible. If you are unfamiliar
   with |k8s|, please review that documentation first.

Prerequisites
-------------

|onprem| Prerequisites
~~~~~~~~~~~~~~~~~~~~~~

To install the |k8s-op-full|, you must:

1. Have or generate a :ref:`Public API Key <generate-public-api-key>`.

#. Grant the user with this new Public API Key the
   :authrole:`Project Owner` role.

#. Add the |ipaddr| or |cidr| block of any hosts that serve the
   |k8s-op-short| to the
   :ref:`API Whitelist <configure-access-to-whitelisted-ops>`.

#. *(Optional).* Have or create an |onprem|
   :opsmgr:`Organization </tutorial/manage-organizations>`.

   .. note::

      Unlike earlier |k8s-op-short| versions, use the Operator to
      create your |mms| project. The Operator adds additional metadata
      to Projects that it creates to help manage the deployments.

.. _k8s-prerequisites:

|k8s| Prerequisites
~~~~~~~~~~~~~~~~~~~

1. Have a |k8s| solution available to use.

   If you need a |k8s| solution, see the |k8s|
   `documentation on picking the right solution <https://kubernetes.io/docs/setup/pick-right-solution/>`__.

#. Clone the `MongoDB Enterprise Kubernetes Operator repository <https://github.com/mongodb/mongodb-enterprise-kubernetes>`__.

   .. code-block:: sh

      git clone https://github.com/mongodb/mongodb-enterprise-kubernetes.git

   .. note::

      You can use `Helm <https://helm.sh/>`__ to install the
      |k8s-op-short|. To learn how to install Helm, see its
      `documentation on GitHub <https://github.com/kubernetes/helm>`__

#. Create a |k8s-ns| for your |k8s| deployment. By default, The
   |k8s-op-short| uses the ``mongodb`` namespace. To simplify your
   installation, consider creating a namespace labeled ``mongodb``
   using the following |kubectl| command:

   .. code-block:: sh

      kubectl create namespace mongodb

   If you do not want to use the ``mongodb`` namespace, you can label
   your namespace anything you like:

   .. code-block:: sh

      kubectl create namespace <namespaceName>

Considerations
--------------

|k8s| Compatibility
~~~~~~~~~~~~~~~~~~~

|k8s-op-full| is compatible with |k8s| v1.11 or later.

Only One Operator per Namespace
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The |k8s-op-full| can only exist in one |k8s-ns|. Your deployment can have:

- One cluster-wide |k8s-op-short| or
- Multiple Kubernetes Operators in their own namespaces

Do not try to deploy more than one Kubernetes Operator in the same
namespace as another Operator. Multiple Operators cannot coordinate
with one another within the same namespace.

.. _default namespace: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/#viewing-namespaces

.. _install-k8s-operator:

Install the |k8s-op-full|
-------------------------

.. tabs::

   tabs:
     - id: kubectl
       name: Online using kubectl
       content: |

         .. _install-k8s-operator-kubectl:

         .. admonition:: Use the same namespace throughout
            :class: note

            The following examples assume that you created a |k8s-ns|
            using the default |k8s-op-short| namespace of ``mongodb``.
            If you specified a different label for your namespace when
            you :ref:`created it <k8s-prerequisites>`, change all
            values for ``metadata.namespace`` to that namespace.

            To change the label for the namespace for the following
            deployment to ``production``, edit all values for
            ``metadata.namespace`` in ``mongodb-enterprise.yaml``:

            .. code-block:: yaml
               :emphasize-lines: 8, 16

               ##---
               # Source: mongodb-enterprise-operator/templates/serviceaccount.yaml
               ---
               apiVersion: v1
               kind: ServiceAccount
               metadata:
                 name: mongodb-enterprise-operator
                 namespace: production
               ##---
               # Source: mongodb-enterprise-operator/templates/operator.yaml
               ---
               apiVersion: apps/v1
               kind: Deployment
               metadata:
                 name: mongodb-enterprise-operator
                 namespace: production

               ---
               # Example truncated
               ---
               ...

         1. Change to the directory in which you cloned the repository.

         #. Install the |k8s-crds| for MongoDB deployments using the
            following |kubectl| command:

            .. code-block:: sh

               kubectl apply -f crds.yaml

         #. If you use `OpenShift <https://www.openshift.com/>`__ as
            your |k8s| orchestrator, you need to allow OpenShift to
            manage the Security Context for the |k8s-op-short|.

            Change the ``MANAGED_SECURITY_CONTEXT`` value as described
            in the next step.

         #. You can edit the Operator |yaml| file to further customize
            your Operator before installing it.

            a. Open your ``mongodb-enterprise.yaml`` in your preferred
               text editor.

            #. You may need to add one or more of the following
               options:

               .. include:: /includes/list-table-k8s-kubectl-install-options.rst

         #. Install the |k8s-op-short| using the following
            |kubectl| command:

            .. code-block:: sh

               kubectl apply -f mongodb-enterprise.yaml

         To troubleshoot your |k8s-op-short|, see
         :ref:`review-k8s-op-logs`.

         .. include:: /includes/fact-remove-k8s-resources-first.rst

     - id: helmonline
       name: Online using Helm
       content: |

         .. _install-k8s-operator-helm:

         If you have not already installed Helm, follow the 
         instructions on `GitHub <https://github.com/kubernetes/helm>`__
         to install it.

         1. Change to the directory in which you cloned the repository.

         #. Install the |k8s-op-short| using the following
            ``helm`` command:

            .. code-block:: sh

               helm template public/helm_chart > operator.yaml
               kubectl apply -f operator.yaml 

            You can customize your Chart before installing it by using
            the ``--set`` option. For this Chart, you may need to add
            one or more of the following options:

            .. include:: /includes/list-table-k8s-helm-install-options-online.rst

         To troubleshoot your |k8s-op-short|, see
         :ref:`review-k8s-op-logs`.

         .. include:: /includes/fact-remove-k8s-resources-first.rst

     - id: helmoffline
       name: Offline using Helm and Docker
       content: |

         Before continuing, install Helm following the instructions on
         `GitHub <https://github.com/kubernetes/helm>`__

         To install the |k8s-op-short| on a host not connected to the
         Internet, you have two options, you can download the
         |k8s-op-short| files from either:

         .. tabs::

            tabs:
              - id: internet
                name: The Internet
                content: |

                  1. Connect to the Internet.

                  #. Use ``docker`` to request the files.

                     .. code-block:: sh

                        docker pull quay.io/mongodb/mongodb-enterprise-operator:0.1; \
                        docker pull quay.io/mongodb/mongodb-enterprise-database:0.1

                  #. Disconnect from the Internet.

                  #. Install the |k8s-op-short| with modified pull
                     policy values using the following ``helm``
                     command:

                     .. code-block:: sh

                        helm template --set registry.pullPolicy=IfNotPresent \
                          public/helm_chart > operator.yaml
                        kubectl apply -f operator.yaml 

                     You can further customize your Chart before
                     installing it by using the ``--set`` option. For
                     this Chart, you may need to add one or more of the
                     following options:

                     .. include:: /includes/list-table-k8s-helm-install-options-offline.rst

                  To troubleshoot your |k8s-op-short|, see
                  :ref:`review-k8s-op-logs`.

                  .. include:: /includes/fact-remove-k8s-resources-first.rst

              - id: host
                name: Another Host
                content: |

                  #. Use ``docker`` to request the files on a host
                     connected to the Internet.

                     .. code-block:: sh

                        docker pull quay.io/mongodb/mongodb-enterprise-operator:0.1; \
                        docker pull quay.io/mongodb/mongodb-enterprise-database:0.1

                  #. Save the Operator files to transferrable files.

                     .. code-block:: sh

                        docker save quay.io/mongodb/mongodb-enterprise-operator:0.1 -o mongodb-enterprise-operator.tar; \
                        docker save quay.io/mongodb/mongodb-enterprise-database:0.1 -o mongodb-enterprise-database.tar

                  #. Copy these ``.tar`` files to the host running the
                     |k8s| ``docker`` daemon.

                  #. Import the ``.tar`` files into ``docker``.

                     .. code-block:: sh

                        docker import mongodb-enterprise-operator.tar quay.io/mongodb/mongodb-enterprise-operator:0.1; \
                        docker import mongodb-enterprise-database.tar quay.io/mongodb/mongodb-enterprise-database:0.1

                  #. Install the |k8s-op-short| with modified pull
                     policy values using the following ``helm``
                     command:

                     .. code-block:: sh

                        helm template --set registry.pullPolicy=IfNotPresent \
                          public/helm_chart > operator.yaml
                        kubectl apply -f operator.yaml 

                     You can further customize your Chart before
                     installing it by using the ``--set`` option. For
                     this Chart, you may need to add one or more of the
                     following options:

                     .. include:: /includes/list-table-k8s-helm-install-options-offline.rst

                  To troubleshoot your |k8s-op-short|, see
                  :ref:`review-k8s-op-logs`.

                  .. include:: /includes/fact-remove-k8s-resources-first.rst

.. _create-k8s-project:

Create your |onprem| Project and |k8s| |k8s-configmap|
------------------------------------------------------

The |k8s-op-full| uses a |k8s| |k8s-configmap| to link to your
|onprem| :opsmgr:`Project </tutorial/manage-projects>`. To create a
|k8s-op-short| ConfigMap, you need to edit 4 lines of the
:ref:`example ConfigMap <example-k8s-configmap>` |yaml| file and apply
the ConfigMap:

1. Copy the following :ref:`example ConfigMap <example-k8s-configmap>`.

   .. _example-k8s-configmap:

   .. literalinclude:: /reference/k8s/example-configmap.yaml
      :language: yaml
      :emphasize-lines: 5-6, 8-10

#. Open your preferred text editor and paste the example
   |k8s-configmap| into a new text file.

#. Change the following four lines:

   .. list-table::
      :widths: 20 20 40 20
      :header-rows: 1

      * - Key
        - Type
        - Description
        - Example

      * - ``metadata.name``
        - string
        - Label for a |k8s| |k8s-obj|.

          .. seealso::

             - :setting:`metadata.name`
             - |k8s| documentation on `names <https://kubernetes.io/docs/concepts/overview/working-with-objects/names/>`__.
               This name must follow :rfc:`RFC1123 <1123>` naming
               conventions, using only lowercase alphanumeric
               characters, '-' or '.', and must start and end with an
               alphanumeric character.

        - ``myconfigmap``

      * - ``metadata.namespace``
        - string
        - Scope of object names. Used to limit what can be managed to
          a subset of all |k8s-objs|. The default value is ``mongodb``.

          .. important::
             The |k8s-op-short|, |k8s-secret|, and |k8s-mdbrsc|\s
             *must* be created in the same |k8s-ns|.

          .. seealso::

             - :setting:`metadata.namespace`
             - |k8s| documentation on |k8s-nss|

        - ``mongodb``

      * - ``data.projectName``
        - string
        - Label for your |mms|
          :opsmgr:`Project </tutorial/manage-projects>`.

          .. admonition:: Let |k8s-op-short| create the Project
             :class: important

             The |k8s-op-short| creates the |mms| Project if it does
             not exist. It is **strongly recommended** to use the
             Operator to create a new Project for |k8s| to manage. The
             Operator adds additional internal information to Projects
             that it creates.

          If you need or want to use an existing Project, you can find
          the ``projectName`` by clicking the :guilabel:`All Clusters`
          link at the top left of the screen, then either search by
          name in the :guilabel:`Search` box or scroll to find the
          name in the list. Each card in this list represents the
          combination of one **Organization** and **Project**.

        - ``Development``

      * - ``data.orgId``
        - string
        - 24 character hex string that uniquely identifies your
          MongoDB :opsmgr:`Organization </tutorial/manage-organizations>`.
          You can find the ``orgId`` in your |onprem| |url|:

          1. Click the :guilabel:`Context` menu.
          2. Select your Organization.
          3. Copy the value from the |url|.

          .. important::

             This field is *optional*. If you omit the ``orgId``,
             |onprem| creates an Organization called ``projectName``
             that contains a Project also called ``projectName``.

             You must have the :authrole:`Organization Project Creator`
             role to create a new project
             *within an existing organization*.

             .. admonition:: Limited to Cloud or Ops Manager Organizations

                If you set this value, it can be for a Cloud Manager or
                an Ops Manager organization only. If you try to use an
                Atlas organization, the |k8s-op-short| may not work as
                intended.

        - | ``https://ops.example.com:8443/``
          | ``v2#/org/<orgId>/projects``

      * - ``data.baseUrl``
        - string
        - |url| to your |application| including the |fqdn| and port
          number.

          .. note::

             You may use |cloud-short| for the ``data.baseUrl`` value.

        - ``https://ops.example.com:8443``

#. Save this file with a ``.yaml`` file extension.

#. Invoke the following |k8s| command to create your |k8s-configmap|:

   .. code-block:: sh

      kubectl apply -f <myconfigmap.yaml>

   .. important::

      All subsequent ``kubectl`` commands you invoke must add the
      ``-n`` option with the :setting:`metadata.namespace` you
      specified in your |k8s-configmap|.

#. Invoke the following |k8s| command to verify your |k8s-configmap|:

   .. code-block:: sh

      kubectl describe configmaps <myconfigmap> -n <metadata.namespace>

   .. admonition:: *Always include the namespace option with* ``kubectl``
         :class: important

         |kubectl| defaults to an empty namespace if you do not specify
         the ``-n`` option, resulting in deployment failures. You must
         specify the value of the ``<metadata.namespace>`` field.
         The |k8s-op-short|, |k8s-secret|, and |k8s-mdbrsc|\s should
         run in the same unique namespace.

   This command returns a ConfigMap description in the shell:

   .. code-block:: sh

      Name:           <myconfigmap>
      Namespace:      <metadata.namespace>
      Labels:         <none>
      Annotations:    <none>

.. _create-k8s-credentials:
.. _create-k8s-secret:

Create Credentials
------------------

For the |k8s-op-short| to create or update |k8s-objs| in your |onprem|
Project, you need to store your username and
:ref:`Public API Key <generate-public-api-key>` as a |k8s|
|k8s-secret|. Creating a secret stores authentication credentials so
only |k8s| can access them.

Multiple secrets can exist in the same namespace. Each user should
have their own secret.

To create your |k8s| secret:

1. Make sure you have your |onprem| username and Public API Key.

   If you do not have your Public API Key, you need to generate a new
   :ref:`Public API Key <generate-public-api-key>`.

2. Invoke the following |k8s| command to create your secret:

   .. code-block:: sh

      kubectl -n <metadata.namespace> \
        create secret generic <myCredentials> \
        --from-literal="user=<first.last@example.com>" \
        --from-literal="publicApiKey=<my-public-api-key>"

   .. note::

      The ``-n`` flag limits the |k8s-ns| to which this secret
      applies. All MongoDB |k8s| resources must be in the same
      namespace with the |k8s-secrets| and |k8s-configmaps|. The
      |k8s-op-short| does not use either the secrets or ConfigMaps.

3. Invoke the following |k8s| command to verify your secret:

   .. code-block:: sh

      kubectl describe secrets/<myCredentials> -n <metadata.namespace>

   This command returns a secret description in the shell:

   .. code-block:: sh

      Name:         <myCredentials>
      Namespace:    <metadata.namespace>
      Labels:       <none>
      Annotations:  <none>

      Type:  Opaque

      Data
      ====
      publicApiKey:  31 bytes
      user:          22 bytes

Next Steps
----------

Now that you installed the |k8s-op-full|, you are ready to deploy
MongoDB resources. For more information on deploying MongoDB resources,
see:

<<<<<<< HEAD
.. include:: /includes/fact-remove-k8s-resources-first.rst
=======
- :doc:`/tutorial/deploy-standalone`
- :doc:`/tutorial/deploy-replica-set`
- :doc:`/tutorial/deploy-sharded-cluster`
>>>>>>> DOCSP-5002 - Refactor upgrade for v0.11
