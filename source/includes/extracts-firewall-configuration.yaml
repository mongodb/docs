ref: firewall-configuration
edition:
  - cloud
content: |

  |mms| requires access on the following ports and whitelisted IP addresses.

  Required Outbound Access
  ------------------------

  The agents connect to |mms| on port ``443``. Whether you provision your
  servers on a cloud service provider or on your own network, configure your
  network infrastructure to allow outbound connections on port ``443``.

  If you wish to restrict outbound access on port ``443`` to specific IP
  addresses, you must whitelist the following addresses and domains.

  IP Addresses for GET and POST
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  Whitelist the following IP addresses:

  - ``54.173.82.137``

  - ``54.175.147.155``
  
  - ``52.21.89.200``

  - ``52.206.222.245``

  This allows the agents to ``GET`` and ``POST`` to the 
  ``api-agents.mongodb.com`` and
  ``api-backup.mongodb.com`` servers.

  Domain for Download of MongoDB Binaries
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  The Automation Agents require outbound access to the following domains,
  depending on your MongoDB edition, for downloading MongoDB binaries:

  .. list-table::
     :header-rows: 1
     :widths: 10,20,30,40

     * - MongoDB Edition
       - Whitelist Domain
       - IP Ranges
       - Service Provider
       
     * - Community
       - ``fastdl.mongodb.org``
       - `IP ranges for CloudFront <http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/LocationsOfEdgeServers.html>`_.

         The IP ranges for CloudFront change frequently.
       - Amazon CloudFront

     * - `Enterprise <http://www.mongodb.com/products/mongodb-enterprise>`_
       - ``downloads.mongodb.com``
       -
       -

     * - Custom Build of MongoDB
       - URL accessible to the Automation Agent
       - 
       - 
   
  .. note: 
     The custom build's ``Git Version`` field must be set to the target binary's
     ``mongod --version``.

  Required Inbound Access
  -----------------------

  .. _backup-scp-restores-inbound-access:

  Backup SCP Restores
  ~~~~~~~~~~~~~~~~~~~

  If you use SCP as the :ref:`delivery method <delivery-methods-file-formats>` when
  restoring a snapshot, you must grant SSH access to the following ranges at minimum:

  - ``4.71.186.128/25``

  - ``4.35.16.128/25``

  .. important::

     MongoDB reserves the right to change these IP addresses at any time
     without user notice.

  Required Ports on Your Network
  ------------------------------

  All MongoDB processes in a deployment must be accessible to all |mms| agents
  managing processes in that deployment. Therefore, all MongoDB ports must be
  open to every server that hosts an Automation, Monitoring or Backup Agent.

  .. example:: 
     
     If you are running MongoDB processes on ``27000``, ``27017`` and
     ``27020``, then those three ports must be open from all servers that are
     hosting an Agent.

---
ref: firewall-configuration
edition: onprem
content: |

  |mms| connects with a number of services. This page explains the ports that
  must be opened to deploy the various components used with an |onprem|
  deployment.

  The specific ports that must be open on any intermediate firewalls depend
  upon what capabilities are enabled, such as encryption, authentication, and
  monitoring.

  .. include:: /images/network-ports.rst

  .. tip:: 

     All ports listed in the following sections are either the port specified in
     the documentation for MongoDB installations or the
     `known ports <http://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.txt>`_ 
     for the specific service assigned by the
     :abbr:`IANA (Internet Assigned Numbers Authority)`. If the port number
     can be changed, it is noted after the table in each section.

     To run |onprem| without an Internet connection, see
     :doc:`/tutorial/configure-local-mode/` to ensure you have all of
     the necessary binaries to run |onprem| without an Internet 
     connection.

  Open Ports to Access |onprem|
  -----------------------------

  |onprem| requires the following minimum network port requirements: 

  * Both |onprem| users and |onprem| agents must be able to connect to the
    |onprem| application over :abbr:`HTTP (HyperText Transport Protocol)` or
    :abbr:`HTTPS (HyperText Transport Protocol Secure)`.

  * |onprem| must be able to connect to the :program:`mongod` running the
    |onprem| application MongoDB databases.

  * For each |onprem| project, |onprem| agents must be able to connect to all
    client MongoDB processes (``mongod`` or ``mongos``).

  * The |onprem| application must also be able to send email to |onprem|
    users.

  To use |onprem|, open the following ports to the specified servers. 

  .. list-table::
     :header-rows: 1
     :widths: 15,10,10,15,35,15

     * - Service
       - Default Port
       - Transport
       - Direction
       - Purpose
       - Uses SSL?
       
     * - :abbr:`HTTP (HyperText Transport Protocol)`
       - 8080
       - :abbr:`TCP (Transmission Control Protocol)`
       - Inbound
       - Provides a web connection to |onprem| from users and |onprem| agents.
       - No

     * - :abbr:`HTTPS (HyperText Transport Protocol Secure)`
       - 8443
       - :abbr:`TCP (Transmission Control Protocol)`
       - Inbound
       - Provides a secure web connection to |onprem| from users and |onprem|
         agents.
       - Yes

     * - :abbr:`HTTP (HyperText Transport Protocol)` or :abbr:`HTTPS
         (HyperText Transport Protocol Secure)`
       - 8090
       - :abbr:`TCP (Transmission Control Protocol)`
       - Inbound
       - Provides a health-check endpoint for monitoring |onprem| through a
         monitoring service like Zabbix or Nagios. It is only available
         through ``localhost`` and is disabled by default.

         To enable it, see :ref:`enable-debug-endpoints`. When enabled,
         you can access the endpoint at:
         
         .. code-block:: http

            http://127.0.0.1:8090/health

         .. important::
            This port is only accessible from ``localhost`` (or
            ``127.0.0.1``). The port number *can* be changed from ``8090`` to
            another value.


         The API endpoint provides the ability to check connections
         from the :abbr:`HTTP (HyperText Transport Protocol)` Service to the 
         :ref:`Ops Manager Application Database <mms-application-database>` 
         and the :ref:`Backup Snapshot Storage <mms-backup-blockstore-database>`.

         A successful response returns the following:

         .. code-block:: json

           {
             "mms_db": "OK",
             "backup_db": "OK"
           }
       - Optional

     * - MongoDB
       - 27017
       - :abbr:`TCP (Transmission Control Protocol)`
       - Outbound
       - Connects to MongoDB application, backup and client databases.
       - Optional

     * - :abbr:`SMTP (Simple Mail Transport Protocol)`
       - 587
       - :abbr:`TCP (Transmission Control Protocol)`
       - Outbound
       - Sends emails from |onprem| to an 
         :abbr:`SMTP (Simple Mail Transport Protocol)` server or to 
         `AWS SES <https://aws.amazon.com/ses/>`_. 
       - Optional

  .. note::
     - To set a non-default port for |onprem|, see :doc:`/tutorial/manage-ports/`.

     - To configure a different port for the application database, see
       :setting:`mongo.mongoUri`.

     - To configure a different port for a client database, see
       :doc:`/tutorial/deploy-standalone`, :doc:`/tutorial/deploy-replica-set`, 
       or :doc:`/tutorial/deploy-sharded-cluster` for a new deployment
       or :doc:`/tutorial/add-existing-mongodb-processes` for an existing
       deployment.

  Open Ports to Access |onprem| and MongoDB Hosts
  -----------------------------------------------

  Most |onprem| administration can be performed through the user interface.
  Some procedures require access to the operating system. To permit your
  administrators to access your |onprem| as well as MongoDB hosts, open the
  following ports to those hosts.

  .. list-table::
     :header-rows: 1
     :widths: 15,10,10,15,35,15

     * - Service
       - Default Port
       - Transport
       - Direction
       - Purpose
       - Uses SSL?
       
     * - :abbr:`ssh (Secure Shell)`
       - 22
       - :abbr:`TCP (Transmission Control Protocol)`
       - Inbound
       - Linux System administration.
       - Yes
       
     * - :abbr:`RDP (Remote Desktop Connection)`
       - 3389
       - :abbr:`TCP (Transmission Control Protocol)`
       - Inbound
       - Windows System administration.
       - No

  Open Ports to Back Up and Restore MongoDB Instances using |onprem|
  ------------------------------------------------------------------

  |onprem| can back up MongoDB databases to one or more storage systems: a
  MongoDB database (:term:`blockstore`), an S3 bucket (S3 blockstore) or a
  file system (:term:`file system store <File System Store>`). To back up
  MongoDB servers, open the following ports to the preferred backup hosts
  (blockstore, S3 snapshot store and/or file system snapshot store):

  .. list-table::
     :header-rows: 1
     :widths: 15,10,10,15,35,15

     * - Service
       - Default Port
       - Transport
       - Direction
       - Purpose
       - Uses SSL?
       
     * - MongoDB
       - 27017
       - :abbr:`TCP (Transmission Control Protocol)`
       - Outbound
       - Back up snapshots of entire database to Blockstore or snapshot metadata to S3 Blockstore
         metadata database.
       - Optional 

     * - :abbr:`HTTPS (HyperText Transport Protocol Secure)`
       - 443
       - :abbr:`TCP (Transmission Control Protocol)`
       - Outbound
       - Back up database snapshot data to S3 bucket.
       - Yes

     * - :abbr:`NFS (Network File System)`
       - 2049
       - :abbr:`TCP (Transmission Control Protocol)`
       - Outbound
       - Back up database snapshots to UNIX-/Linux-based file system.
       - No

     * - :abbr:`CIFS (Common Internet File System)`
       - 3020
       - :abbr:`TCP (Transmission Control Protocol)`
       - Outbound
       - Back up database snapshots to Windows-based file system.
       - No

     * - :abbr:`scp (Secure Copy)`
       - 22
       - :abbr:`TCP (Transmission Control Protocol)`
       - Outbound
       - Restore snapshot to a server.
       - Yes

  Snapshots can also be restored using the link displayed in the |onprem|
  application. The same ports needed to use |onprem| would need to be open for
  the user to download the snapshot.

  To find the download link, click :guilabel:`Backup`, then the
  :guilabel:`Restore History` tab, then click the :guilabel:`download` link
  next to the snapshot.

  .. note::
     - To configure a different port for the Blockstore, see
       :doc:`/tutorial/manage-blockstore-storage`. 

     - To configure a different port for the S3 Snapshot Store metadata
       database, see :doc:`/tutorial/manage-s3-blockstore-storage`.

  Open Ports to Integrate |onprem| with SNMP
  ------------------------------------------

  Open the following ports between |onprem| and your :abbr:`SNMP (Simple
  Network Management Protocol)` Manager to send and receive :abbr:`SNMP
  (Simple Network Management Protocol)` trap notifications from your 
  MongoDB deployments to |onprem|.

  .. list-table::
     :header-rows: 1
     :widths: 15,10,10,15,35,15

     * - Service
       - Default Port
       - Transport
       - Direction
       - Purpose
       - Uses SSL?
       
     * - :abbr:`SNMP (Simple Network Management Protocol)`
       - 162
       - :abbr:`UDP (User Datagram Protocol)`
       - Outbound
       - Send Traps to SNMP Manager.
       - No

     * - :abbr:`SNMP (Simple Network Management Protocol)`
       - 11611
       - :abbr:`UDP (User Datagram Protocol)`
       - Inbound
       - Receive requests from SNMP Manager.
       - No

  .. note::
     To configure |onprem| to use :abbr:`SNMP (Simple Network Management
     Protocol)` on non-standard ports, see :ref:`snmp-heartbeat-configure`.

  Open Ports to Provide Additional Monitoring for |onprem|
  --------------------------------------------------------

  .. important:: 
     As of Automation Agent 2.7.0, using Munin to monitor hardware has been
     deprecated in favor of the native cross-platform hardware monitoring
     available to managed deployments through the Automation Agent.

  Beyond |onprem|'s built-in monitoring capability, it can use the `Munin
  Graphing Framework <http://munin-monitoring.org>`_ to provide additional
  monitoring on UNIX/Linux-based MongoDB instances and hosts.

  .. list-table::
     :header-rows: 1
     :widths: 15,10,10,15,35,15

     * - Service
       - Default Port
       - Transport
       - Direction
       - Purpose
       - Uses SSL?
       
     * - munin-node
       - 4949
       - :abbr:`TCP (Transmission Control Protocol)`
       - Inbound
       - Provides :abbr:`CPU (Central Processing Unit)` and disk throughput
         and latency metrics.
       - No

  To configure the ``munin-node`` package, see 
  :doc:`/tutorial/configure-monitoring-munin-node`.

  Open Ports to Authenticate |onprem| Users using LDAP
  ----------------------------------------------------

  MongoDB Enterprise users :doc:`can use Lightweight Directory Access Protocol
  </tutorial/configure-for-ldap-authentication/>` (LDAP) to authenticate
  |onprem| users. To authenticate using :abbr:`LDAP (Lightweight Directory
  Access Protocol)`, open the following ports on |onprem| and your :abbr:`LDAP
  (Lightweight Directory Access Protocol)` server.

  .. list-table::
     :header-rows: 1
     :widths: 15,10,10,15,35,15

     * - Service
       - Default Port
       - Transport
       - Direction
       - Purpose
       - Uses SSL?
       
     * - :abbr:`LDAP (Lightweight Directory Access Protocol)`
       - 389
       - :abbr:`UDP (User Datagram Protocol)`
       - Both
       - Authenticate and/or authorize |onprem| users against :abbr:`LDAP
         (Lightweight Directory Access Protocol)` server.
       - No

     * - :abbr:`LDAPS (Lightweight Directory Access Protocol Secure)`
       - 636
       - :abbr:`UDP (User Datagram Protocol)`
       - Both
       - Authenticate and/or authorize |onprem| users against :abbr:`LDAP
         (Lightweight Directory Access Protocol)` server.
       - Yes

  To configure the |onprem| :abbr:`LDAP (Lightweight Directory Access
  Protocol)` :abbr:`URI (Uniform Resource Identifier)` strings, including
  configuring a non-standard port, see :ref:`ldap-settings`.

  Open Ports to Authenticate with MongoDB
  -----------------------------------------

  MongoDB Enterprise users can use Kerberos or :abbr:`LDAP (Lightweight
  Directory Access Protocol)` to authenticate MongoDB users. To authenticate
  using :abbr:`LDAP (Lightweight Directory Access Protocol)` or Kerberos, open
  the following ports between the MongoDB client databases, |onprem|, and the
  Kerberos or :abbr:`LDAP (Lightweight Directory Access Protocol)` server(s).

  .. list-table::
     :header-rows: 1
     :widths: 15,10,10,15,35,15

     * - Service
       - Default Port
       - Transport
       - Direction
       - Purpose
       - Uses SSL?
       
     * - Kerberos
       - 88
       - :abbr:`TCP (Transmission Control Protocol)` / :abbr:`UDP (User Datagram Protocol)`
       - Outbound
       - Request authentication for MongoDB users against Kerberos
         server.
       - No

     * - Kerberos
       - 88
       - :abbr:`UDP (User Datagram Protocol)`
       - Inbound
       - Receive authentication for MongoDB users against Kerberos
         server.
       - No

     * - :abbr:`LDAP (Lightweight Directory Access Protocol)`
       - 389
       - :abbr:`UDP (User Datagram Protocol)`
       - Both
       - Authenticate and/or authorize MongoDB users against :abbr:`LDAP
         (Lightweight Directory Access Protocol)` server.
       - No

     * - :abbr:`LDAPS (Lightweight Directory Access Protocol Secure)`
       - 636
       - :abbr:`UDP (User Datagram Protocol)`
       - Both
       - Authenticate and/or authorize MongoDB users against :abbr:`LDAP
         (Lightweight Directory Access Protocol)` server.
       - Yes

  To configure Kerberos for authentication to the |onprem| application
  database, see :ref:`configuration-kerberos-settings`.

  Open Ports to Manage Encryption Keys using KMIP
  -----------------------------------------------

  MongoDB databases using the WiredTiger storage engine can be encrypted on
  disk. The encryption method requires another server to manage the encryption
  keys. To manage encryption keys using Key Management Interoperability
  Protocol (KMIP), open the following port between the hosts running the
  Backup Daemons and the :abbr:`KMIP (Key Management Interoperability
  Protocol)` server(s).

  .. list-table::
     :header-rows: 1
     :widths: 15,10,10,15,35,15

     * - Service
       - Default Port
       - Transport
       - Direction
       - Purpose
       - Uses SSL?
       
     * - :abbr:`KMIP (Key Management Interoperability Protocol)`
       - 5696
       - :abbr:`TCP (Transmission Control Protocol)`
       - Outbound
       - Send messages between MongoDB databases and 
         :abbr:`KMIP (Key Management Interoperability Protocol)` server.
       - No

  .. note:: 
     If you change the port for the :abbr:`KMIP (Key Management
     Interoperability Protocol)` server, see :doc:`/tutorial/encrypt-snapshots` 
     to configure |onprem| to use that new port.

...
