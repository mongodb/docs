.. _analyzers-ref:

===========================
Process Data with Analyzers
===========================

.. default-domain:: mongodb

.. meta::
   :keywords: combine tokenizer with filter, create index
   :description: Learn about the different MongoDB Search analyzers and how each one controls the way MongoDB Search returns the contents of a string field.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

You can control how |fts| turns a ``string`` field's contents into searchable
terms using *analyzers*. Analyzers are policies that combine a tokenizer, which
extracts tokens from text, with filters that you define. |fts|
applies your filters to the tokens to create indexable terms that correct for differences
in punctuation, capitalization, filler words, and more.

You can specify analyzers in your index definition for |fts| to use when building an index 
or searching your database. You can also specify :ref:`alternate (multi) analyzers <ref-multi-analyzers>`
to use when indexing individual fields, or define your own :ref:`custom analyzers <custom-analyzers>`.

Syntax 
------

The following tabs show the syntax of the analyzer options you can configure in your index definition:

.. tabs:: 

   .. tab:: Index Analyzer
      :tabid: index-analyzer-syntax

      You can specify an index analyzer for |fts| to apply to string fields 
      when building an index using the ``analyzer`` option in your |fts| index definition.

      |fts| applies the top-level analyzer to all fields in the index definition
      unless you specify a different analyzer for a field within the ``mappings.fields`` definition 
      for your field.

      If you omit the ``analyzer`` option, |fts| defaults to using the :ref:`ref-standard-analyzer`. 

      .. literalinclude:: /includes/fts/syntax/fts-index-analyzer-syntax.json
         :language: json
         :linenos:
         :copyable: false
         :emphasize-lines: 2,7 
         
   .. tab:: Search Analyzer 
      :tabid: search-analyzer-syntax

      You can specify a search analyzer for |fts| to apply to query text using 
      the ``searchAnalyzer`` option in your |fts| index definition.

      If you omit the ``searchAnalyzer`` option, |fts| defaults to using the analyzer
      that you specify for the ``analyzer`` option. If you omit both options, |fts| 
      defaults to using the :ref:`ref-standard-analyzer`. 

      .. literalinclude:: /includes/fts/syntax/fts-search-analyzer-syntax.json
         :language: json
         :linenos: 
         :copyable: false
         :emphasize-lines: 2

   .. tab:: Multi Analyzer
      :tabid: multi-analyzer-syntax

      You can specify an alternate analyzer for |fts| to apply to string fields when building an 
      index using the ``multi`` option in your |fts| index definition.

      To use the alternate analyzer in a |fts| query, you must specify the name of the alternate analyzer in the ``multi`` field 
      of your query operator's :ref:`query path <ref-path>`. 

      To learn more, see :ref:`ref-multi-analyzers`.  

      .. literalinclude:: /includes/fts/syntax/fts-multi-analyzer-syntax.json 
         :language: json
         :linenos:
         :copyable: false
         :emphasize-lines: 7-12

   .. tab:: Custom Analyzer
      :tabid: custom-analyzer-syntax

      You can define one or more custom analyzers to transform, filter, and group sequences
      of characters using the ``analyzers`` option in your |fts| index. 

      To use a custom analyzer that you define, specify its ``name`` value in your index definition's
      ``analyzer``, ``searchAnalyzer``, or ``multi.analyzer`` option. 

      To learn more, see :ref:`custom-analyzers`. 

      .. literalinclude:: /includes/fts/syntax/fts-custom-analyzer-syntax.json 
         :language: json
         :linenos:
         :copyable: false
         :emphasize-lines: 6-13    

.. seealso:: Learn by Watching

   Watch this video to see how |fts| uses analyzers to break documents into 
   searchable units and build an inverted index. 

   *Duration: 8 Minutes*

   .. video:: https://youtu.be/XrJG994YxD8

.. _ref-built-in-analyzers:

Analyzers 
---------

|fts| provides the following built-in analyzers:

.. list-table::
   :header-rows: 1
   :widths: 20 80

   * - Analyzer
     - Description

   * - :ref:`Standard <ref-standard-analyzer>`
     - Uses the default analyzer for all |fts| indexes and queries.

   * - :ref:`Simple <ref-simple-analyzer>`
     - Divides text into searchable terms wherever it finds a
       non-letter character.

   * - :ref:`Whitespace <ref-whitespace-analyzer>`
     - Divides text into searchable terms wherever it finds a
       whitespace character.

   * - :ref:`Keyword <ref-keyword-analyzer>`
     - Indexes text fields as single terms.

   * - :ref:`Language <ref-language-analyzers>`
     - Provides a set of language-specific text analyzers.

If you don't specify an analyzer in your index definition, MongoDB uses the default
:ref:`standard <ref-standard-analyzer>` analyzer.

.. _ref-built-in-normalizers:

Normalizers 
-----------

Normalizers produce only a single token at the end of analysis. You can
configure normalizers only in the field definition for the |fts|
:ref:`token <bson-data-types-token>` type. |fts| provides the following
normalizers:  

.. list-table::
   :header-rows: 1
   :widths: 20 80

   * - Normalizer
     - Description

   * - ``lowercase``
     - Transforms text in string fields to lowercase and creates a
       single token for the whole string.

   * - ``none``
     - Doesn't perform any transformation, but still creates a single
       token.  

Learn More
----------

To learn more about analyzers, see
`Analyzing Analyzers to Build The Right Search Index For Your App <https://www.mongodb.com/developer/products/atlas/analyzing-analyzers-build-search-index-app/>`__
in the MongoDB Developer Center.


.. toctree::
   :titlesonly:

   Standard </atlas-search/analyzers/standard>
   Simple </atlas-search/analyzers/simple>
   Whitespace </atlas-search/analyzers/whitespace>
   Keyword </atlas-search/analyzers/keyword>
   Language </atlas-search/analyzers/language>
   Multi </atlas-search/analyzers/multi>
   Custom </atlas-search/analyzers/custom>
