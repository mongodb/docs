object:
  name: db.createCollection
  type: method
field:
  optional: true
  type: field
name: capped
type: Boolean
position: 1
description: |
  Enables a :term:`capped collection`. To create a capped collection,
  specify ``true``. If you specify ``true``, you must also set a maximum
  size in the ``size`` field.
---
object:
  name: db.createCollection
  type: method
field:
  optional: true
  type: field
name: autoIndexId
type: Boolean
position: 2
description: |
  Specify ``false`` to disable the automatic creation of an index on the
  ``_id`` field. Before 2.2, the default value for ``autoIndexId`` was
  ``false``. See :ref:`2.2-id-indexes-capped-collections` for more
  information.

  Do **not** set ``autoIndexId`` to ``true`` for replicated
  collections.
---
object:
  name: db.createCollection
  type: method
field:
  optional: true
  type: field
name: size
type: number
position: 3
description: |
  Specifies a maximum size in bytes for a capped collection. The
  ``size`` field is required for capped collections, and ignored for
  other collections.
---
object:
  name: db.createCollection
  type: method
field:
  optional: true
  type: field
name: max
type: number
position: 4
description: |
  The maximum number of documents allowed in the capped collection. The
  ``size`` limit takes precedence over this limit. If a capped
  collection reaches its maximum ``size`` before it reaches the maximum
  number of documents, MongoDB removes old documents. If you prefer to
  use this limit, ensure that the ``size`` limit, which is required, is
  sufficient to contain the documents limit.
---
object:
  name: db.createCollection
  type: method
field:
  optional: true
  type: field
name: usePowerOf2Sizes
type: boolean
position: 5
description: |

  
  .. deprecated:: 2.8
     For ``mmapv1``, all collections have
     :collflag:`usePowerOf2Sizes` allocation unless the ``noPadding``
     option is ``true``.
## The description here must start with a blank line to render
## correctly.
---
object:
  name: db.createCollection
  type: method
field:
  optional: true
  type: field
name: noPadding
type: boolean
position: 5
description: |

  
  .. versionchanged:: 2.8
     For ``mmapv1``, ``noPadding`` flag removes all additional space in the record
     allocation, so that the allocation does not permit documents to grow
     after insertion without a new allocation. Defaults to
     ``false``. Use for insert-only workloads.
## The description here must start with a blank line to render
## correctly.
---
object:
  name: db.createCollection
  type: method
field:
  optional: true
  type: field
name: storageEngine
type: document
position: 6
description: |

  
  .. versionadded:: 2.8

  Allows users to specify configuration to the storage engine on a
  per-collection basis when creating a collection. The value of the
  ``storageEngine`` option should take the following form:e

  .. code-block:: javascript

     { <storage-engine-name>: <options> }

  Storage engine configuration specified when creating collections are
  validated and logged to the :term:`oplog` during replication to
  support replica sets with members that use different storage
  engines.
...
