===================================
Configure Multiple Backup Databases
===================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Overview
--------

If you use the :term:`Backup Blockstore Database` for snapshot storage, then
you can :ref:`add new blockstores <add-blockstore>` to your
data center if existing ones have reached capacity. 

If you use a file system store for snapshot storage, then
you can :ref:`add new file system stores <add-filestore>` to your
data center if existing ones have reached capacity. 

If needed, you can also deploy blockstores or filestores in multiple data
centers and assign backups of particular MongoDB deployments to particular
data centers, as described in the following sections. You assign backups to data centers by
attaching specific |onprem| :term:`groups <group>` to specific blockstores.

Deploy snapshot stores to multiple data centers when:

- Two sets of backed up data cannot have co-located storage for
  regulatory reasons.

- You have multiple data centers and want to reduce cross-data center
  network traffic by keeping each snapshot store in the data center it
  backs.

This tutorial sets up two blockstores in two separate data centers and
attaches a separate group to each.

Prerequisites
-------------

If a :term:`Backup Blockstore Database` is used:

Each data center hosts a :term:`Backup Blockstore Database`
and requires its own :ref:`application`,
:ref:`backup-daemon`, and :doc:`Backup Agent </tutorial/nav/install-backup-agent>`

The two |application| instances must share a single dedicated
:ref:`mms-application-database`. You can put members of the |application|
Database replica set in each data center.

Configure each Backup Agent to use the URL for its local
|application|. You can configure each |application| to use a different
hostname, or you can use split-horizon DNS to point each agent to its
local |application|.

The |application| Database and the Backup Blockstore Databases are
MongoDB databases and can run as :term:`standalones <standalone>` or
:term:`replica sets <replica set>`. For production deployments, use
replica sets to provide database :manual:`high availability
</core/replica-set-high-availability>`.

Procedures
----------

Provision Servers in Each Data Center
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Each server must meet the cumulative hardware and software requirements
for the components it runs. See :doc:`/core/requirements`.

All servers running Backup and |application| Databases use MongoDB. They must meet the configuration requirements in the :manual:`MongoDB Production Notes </administration/production-notes>`.

Install MongoDB
~~~~~~~~~~~~~~~

Install MongoDB on the servers that host the:

- |application| Database
- Blockstore Databases

See :manual:`Install MongoDB </installation>` in the MongoDB manual to
find the correct install procedure for your operating system. 

To run replica sets for the |application| Database and Blockstore Databases, see :manual:`Deploy a Replica Set </tutorial/deploy-replica-set>` in the MongoDB manual.

Install the |application|
~~~~~~~~~~~~~~~~~~~~~~~~~

Install the |application| in each data center but **do not** perform the
step to *start* the service. See :doc:`/tutorial/nav/install-application`
to find the procedure for your operating system.

In the step for configuring the ``conf-mms.properties`` file, use the same
|application| URL. For example, in both data centers,
set :setting:`mms.centralUrl` to point to the server in Data Center 1:

.. code-block:: sh

   mms.centralUrl = <application-server-in-data-center-1>:<8080>

Start the |application|
~~~~~~~~~~~~~~~~~~~~~~~

The |application| creates a ``gen.key`` file on initial startup. You
must start the |application| in one data center and copy its ``gen.key``
file **before** starting the other |application|. |onprem| uses the same
``gen.key`` file for **all** servers in both data centers.

The ``gen.key`` file is binary. You cannot copy the contents: you must
copy the file using something like SCP.

|onprem| uses the ``gen.key`` to encrypt data at rest in the databases and
to encrypt credentials via the :ref:`credentials tool
<encrypt-mongodb-user-credentials>`. 

.. note::
   See the :ref:`gen-key` in the :doc:`/tutorial/configure-application-high-availability` page.

.. include:: /includes/steps/configure-backup-data-locality-start-application.rst

Install the Backup Daemon
~~~~~~~~~~~~~~~~~~~~~~~~~

Install and start the Backup Daemon in each data center. 

.. note::
   See :doc:`/tutorial/nav/install-application` for instructions for your
   operating system.

Bind Groups to Backup Resources
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/steps/configure-backup-data-locality-bind-groups.rst
