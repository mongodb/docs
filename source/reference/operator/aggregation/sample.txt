=====================
$sample (aggregation)
=====================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. pipeline:: $sample

   .. versionadded:: 3.2

   Randomly selects the specified number of documents from its input.

   The :pipeline:`$sample` stage has the following syntax: 

   .. code-block:: javascript

      { $sample: { size: <positive integer> } }

Behavior
--------

In order to get N random documents:

- If N is greater than or equal to 5% of the total documents in the
  collection, :pipeline:`$sample` performs a collection scan, performs
  a sort, and then select the top N documents. As such, the
  :pipeline:`$sample` stage is subject to the :ref:`sort memory
  restrictions <sort-memory-limit>`.

- If N is less than 5% of the total documents in the collection,

  - If using :doc:`/core/wiredtiger`, :pipeline:`$sample` uses a
    pseudo-random cursor over the collection to sample N documents.

  - If using :doc:`/core/mmapv1`, :pipeline:`$sample` uses the ``_id``
    index to randomly select N documents.

:pipeline:`$sample` can use a pseudo-random cursor to find documents
if:
   
- It is the first stage in the aggregation pipeline
- N is less than 5% of the total documents in the collection
- The collection contains over 100 documents

Otherwise :pipeline:`$sample` performs a random sort on the
incoming documents and selects the first N documents.

.. warning::

   :pipeline:`$sample` may output the same document more than once in
   its result set. For more information, see :ref:`cursor-isolation`.

Example
--------

Given a collection named ``users`` with the following documents:

.. code-block:: javascript

   { "_id" : 1, "name" : "dave123", "q1" : true, "q2" : true }
   { "_id" : 2, "name" : "dave2", "q1" : false, "q2" : false  }
   { "_id" : 3, "name" : "ahn", "q1" : true, "q2" : true  }
   { "_id" : 4, "name" : "li", "q1" : true, "q2" : false  }
   { "_id" : 5, "name" : "annT", "q1" : false, "q2" : true  }
   { "_id" : 6, "name" : "li", "q1" : true, "q2" : true  }
   { "_id" : 7, "name" : "ty", "q1" : false, "q2" : true  }

The following aggregation operation randomly selects ``3`` documents from the
collection:

.. code-block:: javascript

   db.users.aggregate(
      [ { $sample: { size: 3 } } ]
   )

The operation returns three random documents.
