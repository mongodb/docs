# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/build-indexes-on-replica-sets.txt:8
# 407af7fc39064ce883a3a64ea0543f48
msgid "Build Indexes on Replica Sets"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:12
# 0ba887627028415cbbe9413faeb2b504
msgid "For replica sets, secondaries will begin building indexes *after* the :term:`primary` finishes building the index. In :term:`sharded clusters <sharded cluster>`, the :program:`mongos` will send :method:.createIndex() <db.collection.createIndex()>` to the primary members of the replica set for each shard, which then replicate to the secondaries after the primary finishes building the index."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:19
# 462bbe44d26a44e791d46aec673c8e88
msgid "To minimize the impact of building an index on your replica set, use the following procedure to build indexes:"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:0
# 14d0c5ff72df45f3afd9d2c63c97c0e2
msgid "See"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:26
# 0f6e72a9dd09433c8cee215a2da4aee3
msgid "Considerations"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:28
# b2f2413ed26c4ea4a321f73fda32aaa3
msgid "Ensure that your :term:`oplog` is large enough to permit the indexing or re-indexing operation to complete without falling too far behind to catch up. See the :ref:`oplog sizing <replica-set-oplog-sizing>` documentation for additional information."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:34
# cec68d918dd04dadb92b603ee3432131
msgid "This procedure *does* take one member out of the replica set at a time. However, this procedure will only affect one member of the set at a time rather than *all* secondaries at the same time."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:38
# ff68533d43a045a1a00921a44c48bfaa
msgid "Do **not** use this procedure when building a :ref:`unique index <index-type-unique>` with the ``dropDups`` option."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:41
# dc79c962cad74e89b4b02e09cb6dae3e
msgid "Before version 2.6 :ref:`Background index creation operations <index-creation-background>` become *foreground* indexing operations on :term:`secondary` members of replica sets. After 2.6, background index builds replicate as background index builds on the secondaries."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:49
# 3b16c357abef424eafc619a9a7ba3a1a
msgid "Procedure"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:53
# fe585594eab54d8db0a648efcb522e83
msgid "If you need to build an index in a :term:`sharded cluster`, repeat the following procedure for each replica set that provides each :term:`shard`."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:60
# 56e9ff04909f49bea7b6a9cf250f32b7
msgid "Stop One Secondary"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:62
# 803e0a2b27df4a35948bcbd5e86fd205
msgid "Stop the :program:`mongod` process on one secondary. Restart the :program:`mongod` process *without* the :option:`--replSet <mongod --replSet>` option and running on a different port. [#different-port]_ This instance is now in \"standalone\" mode."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:67
# 3b094e8cf8d0426baa0cdb46e457ff79
msgid "For example, if your :program:`mongod` *normally* runs with on the default port of ``27017`` with the :option:`--replSet <mongod --replSet>` option you would use the following invocation:"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:75
# e56385c784bf4ed49960c1c88169c642
msgid "By running the :program:`mongod` on a different port, you ensure that the other members of the replica set and all clients will not contact the member while you are building the index."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:83
# b13620ee0b974af18a64f14969f219fc
msgid "Build the Index"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:85
# 625255ce27b743dd973efec79a5e3567
msgid "Create the new index using the :method:`~db.collection.createIndex()` in the :program:`mongo` shell, or comparable method in your driver. This operation will create or rebuild the index on this :program:`mongod` instance"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:90
# 15f4bd2ebf144480bef6b45c6b7dd990
msgid "For example, to create an ascending index on the ``username`` field of the ``records`` collection, use the following :program:`mongo` shell operation:"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:98
# 88ee1c37c34c45d18e0d7a359923172c
msgid ":doc:`/tutorial/create-an-index` and :doc:`/tutorial/create-a-compound-index` for more information."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:104
# 67048abaf3d640448f5f3ec6f1090b71
msgid "Restart the Program ``mongod``"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:106
# 7b5ff85be63149faa720e650f52d0360
msgid "When the index build completes, start the :program:`mongod` instance with the :option:`--replSet <mongod --replSet>` option on its usual port:"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:113
# 3c9c22f80368447dbdf5bbb17dd1d9cb
msgid "Modify the port number (e.g. ``27017``) or the replica set name (e.g. ``rs0``) as needed."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:116
# 29136a037cc94e94a0fe2bd1998244e9
msgid "Allow replication to catch up on this member."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:119
# 3089d8f3bca34d5589111909e6ec8541
msgid "Build Indexes on all Secondaries"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:121
# e6ee3f146061420ca7d9939d33505c26
msgid "Secondary members can now :doc:`build indexes in the background </tutorial/build-indexes-in-the-background>`. Previously all index builds on secondaries were in the foreground."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:126
# 4b0c4e98af794e4bb0032dc3081da916
msgid "For each secondary in the set, build an index according to the following steps:"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:129
#: ../source/tutorial/build-indexes-on-replica-sets.txt:149
# 11bb337dca2948cd8067a6a99f340414
# 451b761e25a24204ac1db5edb2507755
msgid ":ref:`tutorial-index-on-replica-sets-stop-one-member`"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:130
#: ../source/tutorial/build-indexes-on-replica-sets.txt:151
# b6e28a54492f41eba8db9c2099eec52d
# e4233eafd2da4eeeb0719d01c2730499
msgid ":ref:`tutorial-index-on-replica-sets-build-index`"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:131
#: ../source/tutorial/build-indexes-on-replica-sets.txt:153
# 395c1f0451614cf5a4d5c1cc71e4ad00
# ffc9abd432074de5b12a950eb01c381b
msgid ":ref:`tutorial-index-on-replica-sets-restart-mongod`"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:134
# 9dbd87ee315342679a9fbf86790f3969
msgid "Build the Index on the Primary"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:136
# e6b532a99e5848ca922ba7d7e11b3d89
msgid "To build an index on the primary you can either:"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:138
# 938bf9b36e4b44329e2a8bb87dfcdd64
msgid ":doc:`Build the index in the background </tutorial/build-indexes-in-the-background>` on the primary."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:141
# bc885d7ef63a4d799500a0f0372d8a29
msgid "Step down the primary using the :method:`rs.stepDown()` method in the :program:`mongo` shell to cause the current primary to become a secondary graceful and allow the set to elect another member as primary."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:146
# 6c1a0cd4568e425a8c5b13aa56e750c3
msgid "Then repeat the index building procedure, listed below, to build the index on the primary:"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:155
# 2bd84758ff794f49acbb39b9e91276d5
msgid "Building the index on the background, takes longer than the foreground index build and results in a less compact index structure. Additionally, the background index build may impact write performance on the primary. However, building the index in the background allows the set to be continuously up for write operations during while MongoDB builds the index."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:1
#: ../source/tutorial/build-indexes-on-replica-sets.txt:2
# 7b9a09d2326240c8b1c01e0bee16f0bf
# 82dc331a3fc3480facb49607beb161d6
msgid "index"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:1
#: ../source/tutorial/build-indexes-on-replica-sets.txt:2
# 7b9a09d2326240c8b1c01e0bee16f0bf
# 82dc331a3fc3480facb49607beb161d6
msgid "replica set"
msgstr ""

