.. _adf-create-store-cmd:

===============
``createStore``
===============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

The ``createStore`` command creates a store in the 
{+fdi+} storage configuration. Click on the tab below to 
learn more about creating a {+fdi+} store for the data 
source.

.. tabs:: 

   .. tab:: S3  
      :tabid: s3

      This tab contains the syntax and parameters for creating a 
      {+fdi+} store for data in |aws| |s3| bucket.

   .. tab:: Atlas Cluster 
      :tabid: atlas 

      This tab contains the syntax and parameters for creating a 
      {+fdi+} store for data in an |service| cluster. 

   .. tab:: HTTP 
      :tabid: http 

      This tab contains the syntax and parameters for creating a 
      |http| {+fdi+} store for data in files hosted at publicly 
      accessible |url|\s.

      .. include:: /includes/extracts/fact-http-beta-message.rst

   .. tab:: Atlas Data Lake Datasets 
      :tabid: adl 

      This tab contains the syntax and parameters for creating a 
      {+fdi+} store for {+adl+} datasets.

.. _adf-create-store-cmd-syntax:

Syntax 
------

.. tabs:: 
   :hidden:

   .. tab:: S3 Configuration 
      :tabid: s3

      .. code-block:: sh 
         :copyable: true

         db.runCommand({ createStore: <store-name>, provider: <storage-provider>, region: <region-name>, bucket: <bucket-name>, additionalStorageClasses: [ <storage-classes> ], delimiter: <delimiter>, prefix: <prefix>, public: true|false })

   .. tab:: Atlas Configuration 
      :tabid: atlas 

      .. code-block:: sh
         :copyable: true

         db.runCommand({ createStore: <store-name>, provider: <storage-provider>, clusterName: <cluster-name>, projectId: <project-id>, readPreference: {mode: <read-preference-mode>, tagSets: [[{name: <name>, value: <value>},...],...], maxStalenessSeconds: <number-of-seconds>} })

   .. tab:: HTTP Configuration
      :tabid: http 

      .. code-block:: sh
         :copyable: true

         db.runCommand({ createStore: <store-name>, provider: <storage-provider>, allowInsecure: true|false, urls: [ <url> ], defaultFormat: <file-extension> })

   .. tab:: Atlas Data Lake Configuration
      :tabid: adl 

      .. code-block:: sh
         :copyable: true

         db.runCommand({ createStore: <store-name>, provider: "dls:aws", region: <data-lake-region> })

.. _adf-create-store-cmd-params:

Parameters 
----------

.. tabs:: 
   :hidden:

   .. tab:: S3 Configuration
      :tabid: s3

      .. include:: /includes/list-table-create-store-cli-common-params.rst

      .. list-table::
         :widths: 27 10 53 10 

         * - ``region``
           - string
           - Region in which the ``bucket`` is hosted. For a list of 
             valid region names, see :atlas:`Amazon Web 
             Services (AWS) </reference/amazon-aws/#amazon-aws>`.
           - yes

         * - ``bucket`` 
           - string 
           - Name of the bucket in which data is stored. Must exactly 
             match the name of an |s3| bucket which {+df+} 
             can access given the configured |aws| |iam| credentials.
           - yes

         * - ``additionalStorageClasses`` 
           - array of strings 
           - Array of |aws| |s3| `storage classes 
             <https://aws.amazon.com/s3/storage-classes/>`__. {+adf+} 
             will include the files in these storage classes in the 
             query results. Valid values are: 

             - ``INTELLIGENT_TIERING`` to include files in the 
               `Intelligent Tiering <https://aws.amazon.com/s3/storage-classes/#Unknown_or_changing_access>`__ 
               storage class.
             - ``STANDARD_IA`` to include files in the 
               `Standard-Infrequent Access 
               <https://aws.amazon.com/s3/storage-classes/#Infrequent_access>`__ 
               storage class.

             .. note:: 

                Files in the `Standard 
                <https://aws.amazon.com/s3/storage-classes/#General_purpose>`__ 
                storage class are supported by default.

           - no

         * - ``delimiter`` 
           - string 
           - Character used to separate path segments in the 
             {+fdi+} store. If ommitted, defaults to ``"/"``.
           - no

         * - ``public`` 
           - boolean 
           - Flag that indicates whether or not the bucket is public. 
             Valid values are:

             - ``true`` to not use the |aws| |iam| role to access the 
               bucket
             - ``false`` to require the |aws| |iam| role to access the 
               bucket
             
             If ommitted, defaults to ``false``.
           - no

         * - ``prefix`` 
           - string 
           - Value prepended to the ``path``. If ommitted, defaults to 
             ``""``.
           - no

   .. tab:: Atlas Configuration 
      :tabid: atlas 

      .. include:: /includes/list-table-create-store-cli-common-params.rst

      .. list-table::
         :widths: 27 15 48 10 

         * - ``clusterName`` 
           - string 
           - Name of the |service| cluster on which the store is based.
           - yes

         * - ``projectId`` 
           - string 
           - Unique identifier of the project that contains the 
             |service| cluster. If not specified, {+adf+} assumes that
             the cluster is located in the same project as the {+fdi+}.
           - no

         * - ``readPreference``
           - document 
           - Cluster :manual:`read preference 
             </core/read-preference/>`, which describes how to route 
             read requests to the cluster.
           - no 

         * - | ``readPreference``
             | ``.mode``
           - string
           - :manual:`Read preference mode 
             </core/read-preference/#read-preference-modes>` that 
             specifies which replica set member to route the read 
             requests to. Value can be one of the following:

             .. include:: /includes/data-federation/fact-read-preference-modes.rst
           - no

         * - | ``readPreference``
             | ``.tagSets``
           - array of strings 
           - Arrays of :manual:`tag sets </core/read-preference-tags/>` 
             or tag specification documents that contain name and value 
             pairs for the replica set member. If specified, {+adf+} 
             routes read requests to replica set member or members that 
             are associated with the specified tags. To learn more, see 
             :manual:`Read Preference Tag Sets 
             </manual/core/read-preference-tags/>`.

             .. note:: 

                {+adf+} doesn't support this parameter for sharded 
                clusters.

           - no 

         * - | ``readPreference``
             | ``.maxStalenessSeconds``
           - int 
           - Maximum replication lag, or “staleness”, for reads from 
             secondaries. To learn more about ``maxStalenessSeconds``, 
             see :manual:`Read Preference maxStalenessSeconds 
             </core/read-preference-staleness/>`. 
           - no

   .. tab:: HTTP Configuration 
      :tabid: http 

      .. include:: /includes/list-table-create-store-cli-common-params.rst

      .. list-table::
         :widths: 27 15 48 10 

         * - ``allowInsecure`` 
           - boolean 
           - .. include:: /includes/extracts/cli-param-allow-insecure.rst
           - no

         * - ``urls`` 
           - array of strings or an empty array
           - One or more publicly accessible |url|\s. You 
             can't specify |url|\s that require authentication. If 
             empty or omitted, the :ref:`storageGenerateConfig 
             <adf-storagegenconfig>` command will not generate any 
             virtual databases or collections that reference the 
             {+fdi+} store.
           - no

         * - ``defaultFormat`` 
           - string
           - .. include:: /includes/extracts/cli-param-default-format.rst

             If included, the specified format only applies to the 
             |url|\s in the store.
           - no

   .. tab:: Atlas Data Lake Configuration 
      :tabid: adl 

      .. include:: /includes/list-table-create-store-cli-common-params.rst

      .. list-table::
         :widths: 27 15 48 10 

         * - ``region`` 
           - string 
           - Region of your {+dl+} dataset. If you have multiple 
             datasets in different regions, you must add a store for 
             each region to map data in that region to virtual 
             databases and collections in {+fdi+}\s.
           - yes

.. _adf-create-store-cmd-output:

Output 
------

The command prints the following output if it succeeds. If the command
fails, see :ref:`adf-create-store-cmd-errors` for recommended solutions.

.. tabs:: 
   :hidden:

   .. tab:: S3 Configuration 
      :tabid: s3

      .. code-block:: json 
         :copyable: false

        {
          "ok": 1,
          "store": {
            "name": "<store-name>",
            "region": "<region-name>",
            "bucket": "<bucket-name>",
            "additionalStorageClasses": ["<storage-classes>"]
            "delimiter": "<delimiter>",
            "prefix": "<prefix>",
            "provider": "<storage-provider>"
          }
        }

   .. tab:: Atlas Configuration 
      :tabid: atlas 

      .. code-block:: json
         :copyable: false

         {
	         "ok" : 1,
	         "store" : {
		         "name" : "<store-name>",
		         "provider" : "<storage-provider>",
		         "clusterName" : "<cluster-name>",
		         "projectId" : "<project-id>",
		         "readPreference" : {
			        "mode" : "<read-preference-mode>",
			        "tagSets" : [[{"name": "<name>", "value": "<value>"},...],...],
			        "maxStalenessSeconds" : <number-of-seconds>
		         }
	         }
         }

   .. tab:: HTTP Configuration 
      :tabid: http 

      .. code-block:: json
         :copyable: false

         {
	         "ok" : 1,
	         "store" : {
		         "name" : "<store-name>",
		         "provider" : "<storage-provider>",
		         "allowInsecure" : true|false,
		         "urls" : [
			         "<url>"
		         ],
		         "defaultFormat: "<file-extension>"
	         }
         }

   .. tab:: Atlas Data Lake Configuration 
      :tabid: adl 

      .. code-block:: json
         :copyable: false

         {
           ok: 1,
           store: { 
             name: '<store-name>', 
             provider: 'dls:aws', 
             region: '<data-lake-dataset-region>' 
           }
         }

.. _adf-create-store-cmd-egs:

Example
-------

The following example uses the ``createStore`` command to create a new
{+fdi+} store called ``myStore``.

.. tabs:: 
   :hidden:

   .. tab:: S3 Configuration 
      :tabid: s3

      .. io-code-block::
         :copyable: true

         .. input::
            :language: javascript 

            use sample
            db.runCommand({ createStore: "myStore", provider: "s3", region: "us-east-1", bucket: "my-bucket", "additionalStorageClasses" : ["STANDARD_IA","INTELLIGENT_TIERING"], prefix: "/sample" })

         .. output::
            :language: json

            {
              "ok": 1,
              "store": {
                "name": "myStore",
                "region": "us-east-1",
                "bucket": "my-bucket",
                "additionalStorageClasses" : [
			            "STANDARD_IA",
			            "INTELLIGENT_TIERING"
		            ],
                "delimiter": "/",
                "prefix": "/sample",
                "provider": "s3"
              }
            }

   .. tab:: Atlas Configuration 
      :tabid: atlas 

      .. io-code-block::
         :copyable: true
   
         .. input::
            :language: javascript 

            use sample
            db.runCommand({ createStore: "myStore", provider: "atlas", clusterName: "myTestCluster", projectId: "<project-id>", "readPreference": {"mode": "secondary", "tagSets": [[{"name": "provider", "value": "AWS" }, {"name": "region", "value": "US_EAST_1"}]], "maxStalenessSeconds": 120} })

         .. output::
            :language: json

            {
	            "ok" : 1,
	            "store" : {
		            "name" : "myStore",
		            "provider" : "atlas",
		            "clusterName" : "myTestCluster",
		            "projectId" : "<project-id>",
		            "readPreference" : {
			            "mode" : "secondary",
			            "tagSets": [[{"name": "provider", "value": "AWS" }, {"name": "region", "value": "US_EAST_1"}]],
			            "maxStalenessSeconds" : 120
		            }
	            }
            }

   .. tab:: HTTP Configuration 
      :tabid: http 

      .. io-code-block::
         :copyable: true
   
         .. input::
            :language: javascript 

            use sample 
            db.runCommand({ createStore: "myStore", provider: "http", urls: ["https://atlas-data-lake.s3.amazonaws.com/json/sample_airbnb/listingsAndReviews","http://example.mongodb.com/sampleData"], allowInsecure: true, defaultFormat: ".json" })

         .. output::
            :language: json

            {
	            "ok" : 1,
	            "store" : {
		            "name" : "http-store",
		            "provider" : "http",
		            "urls" : [
			            "https://atlas-data-lake.s3.amazonaws.com/json/sample_airbnb/listingsAndReviews",
			            "http://example.mongodb.com/sampleData"
		            ],
		            "defaultFormat" : ".json"
		            "allowInsecure" : true
	            }
            }

   .. tab:: Atlas Data Lake Configuration 
      :tabid: adl 

      .. io-code-block::
         :copyable: true
   
         .. input::
            :language: javascript 

            use sample 
            db.runCommand({ createStore: "myStore", provider: "dls:aws", region: "us-east-1" })

         .. output::
            :language: json

            {
              ok: 1,
              store: { 
                name: 'myStore', 
                provider: 'dls:aws', 
                region: 'us-east-1' 
              }
            }

.. _adf-create-store-cmd-errors:

Troubleshoot Errors 
-------------------

If the command fails, it returns one of the following errors.

**Reason:**  a {+fdi+} store with the name specified in
``createStore`` already exists.

.. code-block:: json 
   :copyable: false 

   {
     "ok": 0,
     "errmsg": "store <store-name> already exists",
     "code": 2,
     "codeName": "BadValue"
   }

**Solution:** Specify a unique name for the {+fdi+} store.

**Reason:** The specified ``provider`` isn't recognized.

.. code-block:: json 
   :copyable: false 

   {
     "ok": 0,
     "errmsg": "unrecognized store provider <storage-provider>",
     "code": 2,
     "codeName": "BadValue"
   }

**Solution:** Ensure that you specify a valid storage provider.

.. tabs:: 
   :hidden:

   .. tab:: S3 Configuration 
      :tabid: s3

   .. tab:: Atlas Configuration 
      :tabid: atlas 

   .. tab:: HTTP Configuration 
      :tabid: http

      **Reason:** One or more given |url|\s contain insecure |http| scheme. 

      .. code-block:: json 
         :copyable: false 

         {
	         "ok" : 0,
	         "errmsg" : "store 'httpStore': the insecure HTTP scheme is not supported by default - please add a 'allowInsecure: true' flag to the store or datasource to query from such URLs, correlationID = 16332c6eddf7b32776fde638",
	         "code" : 72,
	         "codeName" : "InvalidOptions"
         }

      **Solution:** Specify |url|\s with the secure |https| scheme. If the 
      specified |url|\s have the insecure |http| scheme, set the ``allowInsecure`` flag to ``true``. Note that setting the 
      ``allowInsecure`` flag to ``true`` leaves your data vulnerable to 
      man-in-the-middle attacks.

   .. tab:: Atlas Data Lake Configuration 
      :tabid: adl 
