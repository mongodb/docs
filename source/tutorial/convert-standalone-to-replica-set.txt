=====================================
Convert a Standalone to a Replica Set
=====================================

.. default-domain:: mongodb

While :term:`standalone` MongoDB instances are useful for testing,
development and trivial deployments, for production use,
:term:`replica sets <replica set>` provide required robustness and
disaster recovery. This tutorial describes how to convert an existing
standalone instance into a three-member replica set. If you're
deploying a replica set "fresh," without any existing MongoDB data or
instance, see :doc:`/tutorial/deploy-replica-set`.

For more information on :doc:`replica sets, their use, and
administration </replication>`, see:

- :doc:`/core/replication`,
- :doc:`/core/replica-set-architectures`,
- :doc:`/tutorial/expand-replica-set`
- :doc:`/tutorial/add-replica-set-arbiter`
- :doc:`/tutorial/remove-replica-set-member`
- :doc:`/tutorial/replace-replica-set-member`
- :doc:`/tutorial/adjust-replica-set-member-priority`
- :doc:`/tutorial/resync-replica-set-member`
- :doc:`/tutorial/configure-replica-set-secondary-sync-target`
- :doc:`/tutorial/configure-a-delayed-replica-set-member`
- :doc:`/tutorial/configure-a-hidden-replica-set-member`
- :doc:`/tutorial/configure-a-non-voting-replica-set-member`
- :doc:`/tutorial/configure-secondary-only-replica-set-member`
- :doc:`/tutorial/manage-chained-replication`
- :doc:`/tutorial/troubleshoot-replica-sets`, and
- :doc:`/applications/replication`.

.. note::

   If you're converting a standalone instance into a replica set that
   is a :term:`shard` in a :term:`sharded cluster` you must change the
   shard host information in the :term:`config database`. While
   connected to a :program:`mongos` instance with a :program:`mongo`
   shell, issue a command in the following form:

   .. code-block:: javascript

      db.getSiblingDB("config").shards.save( {_id: "<name>", host: "<replica-set>/<member,><member,><...>" } )

   Replace ``<name>`` with the name of the shard, replace
   ``<replica-set>`` with the name of the replica set, and replace
   ``<member,><member,><>`` with the list of the members of the
   replica set.

   After completing this operation you must restart all
   :program:`mongos` instances. When possible you should restart all
   components of the replica sets (i.e. all :program:`mongos` and all
   shard :program:`mongod` instances.)

Procedure
---------

This procedure assumes you have a :term:`standalone` instance of MongoDB
installed. If you have not already installed MongoDB, see the
:ref:`installation tutorials <tutorials-installation>`.

1. Shut down the your MongoDB instance and then restart using
   the :option:`--replSet <mongod --replSet>` option and the name of the
   :term:`replica set`, which is ``rs0`` in the example below.

   Use a command similar to the following:

   .. code-block:: sh

      mongod --port 27017 --dbpath /srv/mongodb/db0 --replSet rs0

   Replace ``/srv/mongodb/db0`` with the path of your
   :setting:`dbpath`.

   This starts the instance as a member of a replica set named ``rs0``.
   For more information on configuration options, see
   :doc:`/reference/configuration-options` and the :doc:`/reference/mongod`.

#. Open a :program:`mongo` shell and connect to the :program:`mongod`
   instance. In a new system shell session, use the following command
   to start a :program:`mongo` shell:

   .. code-block:: sh

      mongo

#. Use :method:`rs.initiate()` to initiate the replica set:

   .. code-block:: javascript

      rs.initiate()

   The set is now operational. To return the replica set
   configuration, call the :method:`rs.conf()` method. To check the
   status of the replica set, use :method:`rs.status()`.

#. Now add additional replica set members. On two distinct systems,
   start two new standalone :program:`mongod` instances. Then, in the
   :program:`mongo` shell instance connected to the first
   :program:`mongod` instance, issue a command in the following form:

   .. code-block:: javascript

      rs.add("<hostname><:port>")

   Replace ``<hostname>`` and ``<port>`` with the resolvable hostname
   and port of the :program:`mongod` instance you want to add to the
   set. Repeat this operation for each :program:`mongod` that you want
   to add to the set.

   For more information on adding hosts to a replica set, see the
   :doc:`/tutorial/expand-replica-set` document.
