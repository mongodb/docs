#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/reference/command/findAndModify.txt:3
msgid "findAndModify"
msgstr ""

#: ../source/reference/command/findAndModify.txt:18
msgid "Definition"
msgstr ""

#: ../source/reference/command/findAndModify.txt:22
msgid ""
"The :dbcommand:`findAndModify` command modifies and returns a single "
"document. By default, the returned document does not include the "
"modifications made on the update. To return the document with the "
"modifications made on the update, use the ``new`` option."
msgstr ""

#: ../source/reference/command/findAndModify.txt:27
msgid "The command has the following syntax:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:46
msgid "The :dbcommand:`findAndModify` command takes the following fields:"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:7
#: ../source/includes/apiargs/dbcommand-findAndModify-lastErrorObject.rst:7
#: ../source/includes/apiargs/dbcommand-findAndModify-return.rst:7
msgid "Field"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:9
#: ../source/includes/apiargs/dbcommand-findAndModify-lastErrorObject.rst:9
#: ../source/includes/apiargs/dbcommand-findAndModify-return.rst:9
msgid "Type"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:11
#: ../source/includes/apiargs/dbcommand-findAndModify-lastErrorObject.rst:11
#: ../source/includes/apiargs/dbcommand-findAndModify-return.rst:11
msgid "Description"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:13
msgid "``query``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:15
#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:27
#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:47
#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:68
#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:98
#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:125
#: ../source/includes/apiargs/dbcommand-findAndModify-lastErrorObject.rst:23
#: ../source/includes/apiargs/dbcommand-findAndModify-return.rst:15
#: ../source/includes/apiargs/dbcommand-findAndModify-return.rst:24
msgid "document"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:17
#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:155
msgid ""
"Optional. The selection criteria for the modification. The ``query`` "
"field employs the same :ref:`query selectors <query-selectors>` as used "
"in the :method:`db.collection.find()` method. Although the query may "
"match multiple documents, |operation| **will only select one document to "
"modify**."
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:25
msgid "``sort``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:29
#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:165
msgid ""
"Optional. Determines which document the operation modifies if the query "
"selects multiple documents. |operation| modifies the first document in "
"the sort order specified by this argument."
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:35
msgid "``remove``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:37
#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:58
#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:78
#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:86
#: ../source/includes/apiargs/dbcommand-findAndModify-lastErrorObject.rst:15
msgid "boolean"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:39
#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:173
msgid ""
"Must specify either the ``remove`` or the ``update`` field. Removes the "
"document specified in the ``query`` field. Set this to ``true`` to remove"
" the selected document . The default is ``false``."
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:45
msgid "``update``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:49
#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:181
msgid ""
"Must specify either the ``remove`` or the ``update`` field. Performs an "
"update of the selected document. The ``update`` field employs the same "
":ref:`update operators <update-operators>` or ``field: value`` "
"specifications to modify the selected document."
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:56
msgid "``new``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:60
#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:190
msgid ""
"Optional. When ``true``, returns the modified document rather than the "
"original. The |operation| method ignores the ``new`` option for "
"``remove`` operations. The default is ``false``."
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:66
msgid "``fields``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:70
#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:198
msgid ""
"Optional. A subset of fields to return. The ``fields`` document specifies"
" an inclusion of a field with ``1``, as in: ``fields: { <field1>: 1, "
"<field2>: 1, ... }``. See :ref:`projection <read-operations-projection>`."
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:76
msgid "``upsert``"
msgstr ""

#: ../source/includes/extracts/findAndModify-behavior-method.rst:1
msgid "Optional. Used in conjuction with the ``update`` field."
msgstr ""

#: ../source/includes/extracts/findAndModify-behavior-method.rst:3
msgid "When ``true``, :method:`~db.collection.findAndModify()` either:"
msgstr ""

#: ../source/includes/extracts/findAndModify-behavior-method.rst:5
msgid ""
"Creates a new document if no documents match the ``query``. For more "
"details see :ref:`upsert behavior <upsert-behavior>`."
msgstr ""

#: ../source/includes/extracts/findAndModify-behavior-method.rst:8
msgid "Updates a single document that matches the ``query``."
msgstr ""

#: ../source/includes/extracts/findAndModify-behavior-method.rst:10
msgid ""
"To avoid multiple upserts, ensure that the ``query`` fields are "
":ref:`uniquely indexed <index-type-unique>`."
msgstr ""

#: ../source/includes/extracts/findAndModify-behavior-method.rst:13
msgid "Defaults to ``false``."
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:84
msgid "``bypassDocumentValidation``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:88
#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:212
msgid ""
"Optional. Enables :samp:`findAndModify` to bypass document validation "
"during the operation. This lets you update documents that do not meet the"
" validation requirements."
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:96
msgid "``writeConcern``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:100
#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:222
msgid ""
"Optional. A document expressing the :doc:`write concern </reference"
"/write-concern>`. Omit to use the default write concern."
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:107
msgid "``maxTimeMS``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:109
msgid "integer"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:111
#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:231
msgid ""
"Optional. Specifies a time limit in milliseconds for processing the "
"operation."
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:115
msgid "``findAndModify``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:117
msgid "string"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:119
#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:237
msgid "The collection against which to run the command."
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:123
msgid "``collation``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:127
#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:243
msgid "Optional."
msgstr ""

#: ../source/includes/extracts/collation-option.rst:1
msgid "Specifies the :ref:`collation <collation>`  to use for the operation."
msgstr ""

#: ../source/includes/extracts/collation-description.rst:1
msgid ""
":doc:`Collation </reference/collation>` allows users to specify language-"
"specific rules for string comparison, such as rules for lettercase and "
"accent marks."
msgstr ""

#: ../source/includes/extracts/collation-option-specification.rst:2
msgid "The collation option has the following syntax:"
msgstr ""

#: ../source/includes/extracts/collation-option-specification.rst:17
msgid ""
"When specifying collation, the ``locale`` field is mandatory; all other "
"collation fields are optional. For descriptions of the fields, see :ref"
":`collation-document-fields`."
msgstr ""

#: ../source/includes/extracts/collation-option.rst:7
msgid ""
"If the collation is unspecified but the collection has a default "
"collation (see :method:`db.createCollection()`), the operation uses the "
"collation specified for the collection."
msgstr ""

#: ../source/includes/extracts/collation-unspecified.rst:1
msgid ""
"If no collation is specified for the collection or for the operations, "
"MongoDB uses the simple binary comparison used in prior versions for "
"string comparisons."
msgstr ""

#: ../source/includes/extracts/collation-single-per-operation.rst:2
msgid ""
"You cannot specify multiple collations for an operation. For example, you"
" cannot specify different collations per field, or if performing a find "
"with a sort, you cannot use one collation for the find and another for "
"the sort."
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:133
msgid "``arrayFilters``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:135
msgid "array"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:137
#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:251
msgid ""
"Optional. An array of filter documents that determines which array "
"elements to modify for an update operation on an array field."
msgstr ""

#: ../source/includes/extracts/arrayFilters-details.rst:2
msgid ""
"In the update document, use the :update:`$[\\<identifier\\>]` filtered "
"positional operator to define an identifier, which you then reference in "
"the array filter documents. You cannot have an array filter document for "
"an identifier if the identifier is not included in the update document."
msgstr ""

#: ../source/includes/extracts/arrayFilters-details.rst:9
msgid ""
"The ``<identifier>`` must begin with a lowercase letter and contain only "
"alphanumeric characters."
msgstr ""

#: ../source/includes/extracts/arrayFilters-details.rst:12
msgid ""
"You can include the same identifier multiple times in the update "
"document; however, for each distinct identifier (``$[identifier]``) in "
"the update document, you must specify **exactly one** corresponding array"
" filter document. That is, you cannot specify multiple array filter "
"documents for the same identifier. For example, if the update statement "
"includes the identifier ``x`` (possibly multiple times), you cannot "
"specify the following for ``arrayFilters`` that includes 2 separate "
"filter documents for ``x``:"
msgstr ""

#: ../source/includes/extracts/arrayFilters-details.rst:28
msgid ""
"However, you can specify compound conditions on the same identifier in a "
"single filter document, such as in the following examples:"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:143
#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst:257
msgid "For examples, see :ref:`findAndModify-command-arrayFilters`."
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst
msgid "field document query"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst
msgid "field document sort"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst
msgid "field boolean remove"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst
msgid "field document update"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst
msgid "field boolean new"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst
msgid "field document fields"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst
msgid "field boolean upsert"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst
msgid "field boolean bypassDocumentValidation"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst
msgid "field document writeConcern"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst
msgid "field integer maxTimeMS"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst
msgid "field string findAndModify"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst
msgid "field document collation"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-field.rst
msgid "field array arrayFilters"
msgstr ""

#: ../source/reference/command/findAndModify.txt:54
msgid "Output"
msgstr ""

#: ../source/reference/command/findAndModify.txt:56
msgid ""
"The :dbcommand:`findAndModify` command returns a document with the "
"following fields:"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-return.rst:13
#: ../source/reference/command/findAndModify.txt:73
msgid "``value``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-return.rst:17
#: ../source/includes/apiargs/dbcommand-findAndModify-return.rst:45
msgid ""
"Contains the command's returned value. See :ref:`findandmodify-value-"
"field` for details."
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-return.rst:22
#: ../source/reference/command/findAndModify.txt:64
msgid "``lastErrorObject``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-return.rst:26
#: ../source/includes/apiargs/dbcommand-findAndModify-return.rst:52
msgid ""
"Contains information about updated documents. See :ref:`findandmodify-"
"lastErrorObject` for details."
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-return.rst:31
msgid "``ok``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-return.rst:33
msgid "number"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-return.rst:35
#: ../source/includes/apiargs/dbcommand-findAndModify-return.rst:59
msgid ""
"Contains the command's execution status. ``1`` on success, or ``0`` if an"
" error occurred."
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-return.rst
msgid "field document value"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-return.rst
msgid "field document lastErrorObject"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-return.rst
msgid "field number ok"
msgstr ""

#: ../source/reference/command/findAndModify.txt:66
msgid "The ``lastErrorObject`` embedded document contains the following fields:"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-lastErrorObject.rst:13
msgid "``updatedExisting``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-lastErrorObject.rst:17
#: ../source/includes/apiargs/dbcommand-findAndModify-lastErrorObject.rst:35
msgid ""
"Contains ``true`` if an ``update`` operation modified an existing "
"document."
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-lastErrorObject.rst:21
msgid "``upserted``"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-lastErrorObject.rst:25
#: ../source/includes/apiargs/dbcommand-findAndModify-lastErrorObject.rst:41
msgid ""
"Contains the :ref:`objectid` of the inserted document if an ``update`` "
"operation with ``upsert: true`` resulted in a new document."
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-lastErrorObject.rst
msgid "field boolean updatedExisting"
msgstr ""

#: ../source/includes/apiargs/dbcommand-findAndModify-lastErrorObject.rst
msgid "field document upserted"
msgstr ""

#: ../source/reference/command/findAndModify.txt:75
msgid ""
"For ``remove`` operations, ``value`` contains the removed document if the"
" query matches a document. If the query does not match a document to "
"remove, ``value`` contains ``null``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:79
msgid ""
"For ``update`` operations, the ``value`` embedded document contains the "
"following:"
msgstr ""

#: ../source/includes/extracts/fact-findandmodify-command-return.rst:1
msgid "If the ``new`` parameter is not set or is ``false``:"
msgstr ""

#: ../source/includes/extracts/fact-findandmodify-command-return.rst:3
msgid "the pre-modification document if the query matches a document;"
msgstr ""

#: ../source/includes/extracts/fact-findandmodify-command-return.rst:5
#: ../source/includes/extracts/fact-findandmodify-command-return.rst:13
msgid "otherwise, ``null``."
msgstr ""

#: ../source/includes/extracts/fact-findandmodify-command-return.rst:7
msgid "If ``new`` is ``true``:"
msgstr ""

#: ../source/includes/extracts/fact-findandmodify-command-return.rst:9
msgid "the modified document if the query returns a match;"
msgstr ""

#: ../source/includes/extracts/fact-findandmodify-command-return.rst:11
msgid ""
"the inserted document if ``upsert: true`` and no document matches the "
"query;"
msgstr ""

#: ../source/includes/extracts/fact-findandmodify-command-return.rst:17
msgid ""
"In previous versions, if for the update, ``sort`` is specified, and "
"``upsert: true``, and the ``new`` option is not set or ``new: false``, "
":dbcommand:`findAndModify` returns an empty document ``{}`` in the  "
"``value`` field instead of ``null``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:85
msgid "Behavior"
msgstr ""

#: ../source/reference/command/findAndModify.txt:88
msgid "Upsert and Unique Index"
msgstr ""

#: ../source/reference/command/findAndModify.txt:90
msgid ""
"When the :dbcommand:`findAndModify` command includes the ``upsert: true``"
" option **and** the query field(s) is not uniquely indexed, the command "
"could insert a document multiple times in certain circumstances."
msgstr ""

#: ../source/reference/command/findAndModify.txt:94
msgid ""
"Consider an example where no document with the name ``Andy`` exists and "
"multiple clients issue the following command:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:109
msgid ""
"If all the commands finish the ``query`` phase before any command starts "
"the ``modify`` phase, **and** there is no unique index on the ``name`` "
"field, the commands may each perform an upsert, creating multiple "
"duplicate documents."
msgstr ""

#: ../source/reference/command/findAndModify.txt:114
msgid ""
"To prevent the creation of multiple duplicate documents, create a "
":ref:`unique index <index-type-unique>` on the ``name`` field. With the "
"unique index in place, then the multiple :dbcommand:`findAndModify` "
"commands will exhibit one of the following behaviors:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:120
msgid ""
"Exactly one :dbcommand:`findAndModify` successfully inserts a new "
"document."
msgstr ""

#: ../source/reference/command/findAndModify.txt:123
msgid ""
"Zero or more :dbcommand:`findAndModify` commands update the newly "
"inserted document."
msgstr ""

#: ../source/reference/command/findAndModify.txt:126
msgid ""
"Zero or more :dbcommand:`findAndModify` commands fail when they attempt "
"to insert a duplicate. If the command fails due to a unique index "
"constraint violation, you can retry the command. Absent a delete of the "
"document, the retry should not fail."
msgstr ""

#: ../source/reference/command/findAndModify.txt:132
msgid "Sharded Collections"
msgstr ""

#: ../source/reference/command/findAndModify.txt:134
msgid ""
"When using :dbcommand:`findAndModify` in a :term:`sharded <sharding>` "
"environment, the ``query`` must contain the :term:`shard key` for all "
"operations against the shard cluster. :dbcommand:`findAndModify` "
"operations issued against :binary:`~bin.mongos` instances for non-sharded"
" collections function normally."
msgstr ""

#: ../source/reference/command/findAndModify.txt:142
msgid "Document Validation"
msgstr ""

#: ../source/includes/extracts/bypassDocumentValidation-findAndModify.rst:1
msgid ""
"The :dbcommand:`findAndModify` command adds support for the "
"``bypassDocumentValidation`` option, which lets you bypass :doc:`document"
" validation </core/schema-validation>` when inserting or updating "
"documents in a collection with validation rules."
msgstr ""

#: ../source/reference/command/findAndModify.txt:149
msgid "Comparisons with the ``update`` Method"
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:1
msgid ""
"When updating a document, |operation| and the "
":method:`~db.collection.update()` method operate differently:"
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:4
msgid ""
"By default, both operations modify a single document. However, the "
":method:`~db.collection.update()` method with its ``multi`` option can "
"modify more than one document."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:8
msgid ""
"If multiple documents match the update criteria, for |operation|, you can"
" specify a ``sort`` to provide some measure of control on which document "
"to update."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:12
msgid ""
"With the default behavior of the :method:`~db.collection.update()` "
"method, you cannot specify which single document to update when multiple "
"documents match."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:16
msgid ""
"By default, |operation| returns |return-object|. To obtain the updated "
"document, use the ``new`` option."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:19
msgid ""
"The :method:`~db.collection.update()` method returns a "
":method:`WriteResult` object that contains the status of the operation. "
"To return the updated document, use the :method:`~db.collection.find()` "
"method. However, other updates may have modified the document between "
"your update and the document retrieval. Also, if the update modified only"
" a single document but multiple documents matched, you will need to use "
"additional logic to identify the updated document."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:27
msgid ""
"When modifying a *single* document, both |operation| and the "
":method:`~db.collection.update()` method *atomically* update the "
"document. See :doc:`/core/write-operations-atomicity` for more details "
"about interactions and order of operations of these methods."
msgstr ""

#: ../source/reference/command/findAndModify.txt:158
msgid "Examples"
msgstr ""

#: ../source/reference/command/findAndModify.txt:161
msgid "Update and Return"
msgstr ""

#: ../source/reference/command/findAndModify.txt:163
msgid ""
"The following command updates an existing document in the ``people`` "
"collection where the document matches the ``query`` criteria:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:177
msgid "This command performs the following actions:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:179
msgid ""
"The ``query`` finds a document in the ``people`` collection where the "
"``name`` field has the value ``Tom``, the ``state`` field has the value "
"``active`` and the ``rating`` field has a value :operator:`greater than "
"<$gt>` 10."
msgstr ""

#: ../source/reference/command/findAndModify.txt:184
msgid ""
"The ``sort`` orders the results of the query in ascending order. If "
"multiple documents meet the ``query`` condition, the command will select "
"for modification the first document as ordered by this ``sort``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:189
msgid ""
"The ``update`` :operator:`increments <$inc>` the value of the ``score`` "
"field by 1."
msgstr ""

#: ../source/reference/command/findAndModify.txt:192
msgid "The command returns a document with the following fields:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:194
msgid ""
"The ``lastErrorObject`` field that contains the details of the command, "
"including the field ``updatedExisting`` which is ``true``, and"
msgstr ""

#: ../source/reference/command/findAndModify.txt:198
msgid ""
"The ``value`` field that contains the original (i.e. pre-modification) "
"document selected for this update:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:223
msgid ""
"To return the modified document in the ``value`` field, add the "
"``new:true`` option to the command."
msgstr ""

#: ../source/reference/command/findAndModify.txt:226
msgid ""
"If no document match the ``query`` condition, the command returns a "
"document that contains ``null`` in the ``value`` field:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:234
msgid ""
"The :binary:`~bin.mongo` shell and many :term:`drivers <driver>` provide "
"a :method:`~db.collection.findAndModify()` helper method. Using the shell"
" helper, this previous operation can take the following form:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:247
msgid ""
"However, the :method:`~db.collection.findAndModify()` shell helper method"
" returns only the unmodified document, or if ``new`` is ``true``, the "
"modified document."
msgstr ""

#: ../source/reference/command/findAndModify.txt:262
msgid "``upsert: true``"
msgstr ""

#: ../source/reference/command/findAndModify.txt:264
msgid ""
"The following :dbcommand:`findAndModify` command includes the ``upsert: "
"true`` option for the ``update`` operation to either update a matching "
"document or, if no matching document exists, create a new document:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:280
msgid "If the command finds a matching document, the command performs an update."
msgstr ""

#: ../source/reference/command/findAndModify.txt:282
msgid ""
"If the command does **not** find a matching document, the ``update`` with"
" :term:`upsert: true <upsert>` operation results in an insertion and "
"returns a document with the following fields:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:286
msgid ""
"The ``lastErrorObject`` field that contains the details of the command, "
"including the field ``upserted`` that contains the ``_id`` value of the "
"newly inserted document, and"
msgstr ""

#: ../source/reference/command/findAndModify.txt:290
msgid "The ``value`` field containing ``null``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:305
msgid "Return New Document"
msgstr ""

#: ../source/reference/command/findAndModify.txt:307
msgid ""
"The following :dbcommand:`findAndModify` command includes both ``upsert: "
"true`` option and the ``new:true`` option. The command either updates a "
"matching document and returns the updated document or, if no matching "
"document exists, inserts a document and returns the newly inserted "
"document in the ``value`` field."
msgstr ""

#: ../source/reference/command/findAndModify.txt:313
msgid ""
"In the following example, no document in the ``people`` collection "
"matches the ``query`` condition:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:329
msgid "The command returns the newly inserted document in the ``value`` field:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:355
msgid "Sort and Remove"
msgstr ""

#: ../source/reference/command/findAndModify.txt:357
msgid ""
"By including a ``sort`` specification on the ``rating`` field, the "
"following example removes from the ``people`` collection a single "
"document with the ``state`` value of ``active`` and the lowest ``rating``"
" among the matching documents:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:373
msgid "The command returns the deleted document:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:397
msgid "Specify Collation"
msgstr ""

#: ../source/reference/command/findAndModify.txt:401
msgid "A collection ``myColl`` has the following documents:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:409
msgid "The following operation includes the :ref:`collation <collation>` option:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:424
msgid "The operation returns the following document:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:444
msgid "Specify ``arrayFilters`` for an Array Update Operations"
msgstr ""

#: ../source/includes/extracts/arrayFilters-blurb.rst:4
msgid ""
"Starting in MongoDB 3.6, when updating an array field, you can specify "
"``arrayFilters`` that determine which array elements to update."
msgstr ""

#: ../source/reference/command/findAndModify.txt:449
msgid "Update Elements Match ``arrayFilters`` Criteria"
msgstr ""

#: ../source/reference/command/findAndModify.txt:451
msgid "Create a collection ``students`` with the following documents:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:463
msgid ""
"To modify all elements that are greater than or equal to ``100`` in the "
"``grades`` array, use the positional :update:`$[\\<identifier\\>]` "
"operator with the ``arrayFilters`` option:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:480
#: ../source/reference/command/findAndModify.txt:534
msgid ""
"The operation updates the ``grades`` field for a single document, and "
"after the operation, the collection has the following documents:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:491
msgid "Update Specific Elements of an Array of Documents"
msgstr ""

#: ../source/reference/command/findAndModify.txt:493
msgid "Create a collection ``students2`` with the following documents:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:516
msgid ""
"To modify the value of the ``mean`` field for all elements in the "
"``grades`` array where the grade is greater than or equal to ``85``, use "
"the positional :update:`$[\\<identifier\\>]` operator with the "
"``arrayFilters``:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:557
msgid ":ref:`perform-findAndModify-linearizable-reads`"
msgstr ""

#~ msgid "The return document contains the following fields:"
#~ msgstr ""

#~ msgid "The ``lastErrorObject`` field that returns the details of the command:"
#~ msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid "The ``value`` field that returns either:"
#~ msgstr ""

#~ msgid "the original (i.e. pre-modification) document if ``new`` is false, or"
#~ msgstr ""

#~ msgid "the modified or inserted document if ``new: true``."
#~ msgstr ""

#~ msgid "The ``ok`` field that returns the status of the command."
#~ msgstr ""

#~ msgid "If the :dbcommand:`findAndModify` finds no matching document, then:"
#~ msgstr ""

#~ msgid "The method returns the deleted document:"
#~ msgstr ""

#~ msgid ":doc:`/tutorial/perform-findAndModify-quorum-reads`"
#~ msgstr ""

# 1798affc56e448b08469afea75b6d310
#~ msgid "On this page"
#~ msgstr ""

# 7462913b646c4d20b4d922de54f02859
#~ msgid ""
#~ "When using :dbcommand:`findAndModify` in a "
#~ ":term:`sharded <sharding>` environment, the "
#~ "``query`` must contain the :term:`shard "
#~ "key` for all operations against the "
#~ "shard cluster. :dbcommand:`findAndModify` operations"
#~ " issued against :program:`mongos` instances "
#~ "for non-sharded collections function "
#~ "normally."
#~ msgstr ""

# 32a096b611e840c4a1157e8755d9367b
#~ msgid ""
#~ "The :dbcommand:`findAndModify` command adds "
#~ "support for the ``bypassDocumentValidation`` "
#~ "option, which lets you bypass "
#~ ":ref:`document validation <3.2-rel-notes-"
#~ "document-validation>` when inserting or "
#~ "updating documents in a collection with"
#~ " validation rules."
#~ msgstr ""

# 4868b3ba735e4d4a87321116731380a4
#~ msgid ""
#~ "The :program:`mongo` shell and many "
#~ ":term:`drivers <driver>` provide a "
#~ ":method:`~db.collection.findAndModify()` helper method."
#~ " Using the shell helper, this "
#~ "previous operation can take the "
#~ "following form:"
#~ msgstr ""

# 046358a883b6498983076576b8a3bc3e
#~ msgid ""
#~ "The ``lastErrorObject`` field that contains"
#~ " the details of the command, "
#~ "including the field ``upserted`` that "
#~ "contains the ``ObjectId`` of the newly"
#~ " inserted document, and"
#~ msgstr ""

