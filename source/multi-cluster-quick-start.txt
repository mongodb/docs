.. _multi-cluster-quick-start-ref:
.. _multi-cluster-secure-tls:

====================================
Multi-Kubernetes-Cluster Quick Start
====================================

.. default-domain:: mongodb

.. meta::
   :keywords: multicluster, multi-cluster
   :description: Deploy a MongoDB replica set across multiple Kubernetes clusters using GKE and Istio with this quick start guide.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Use the quick start to deploy a MongoDB replica set across three |k8s|
member clusters, using |gke| and |istio| service mesh.

Before you begin:

- Learn about :ref:`multi-Kubernetes-cluster deployments <multi-cluster-overview-ref>`
- Review the list of :ref:`multi-Kubernetes-cluster services and tools <multi-cluster-services-tools-ref>`
- Complete the :ref:`prerequisites <multi-cluster-prereqs>`

.. note::

   The following procedures scope your |multi-cluster| to a single
   |k8s-ns| named ``mongodb``. You can configure your |multi-cluster| to
   watch resources in :ref:`multiple namespaces <mc-cluster-many-namespaces-ref>`
   or :ref:`all namespaces <mc-cluster-all-namespaces-ref>`.

Prefer to Learn by Watching?
-----------------------------

Follow along with this video tutorial walk-through that demonstrates how to
create a |multi-cluster|.

*Duration: 12 Minutes*

`Deploying a MongoDB Replica Set across Multiple Kubernetes Clusters <https://www.youtube.com/watch?v=iPvoqxbFJd8>`__

.. _multi-cluster-qs-prerequisites:

Prerequisites
-------------

Before you create a |multi-cluster| using the quick start, 
complete the following tasks:

Review the General Prerequisites
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Ensure you meet the general prerequisite before you proceed. To learn 
more, see :ref:`General Prerequisites <multi-cluster-prereqs>`.

Set Environment Variables and GKE Zones
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Set the environment variables with cluster names and the
`available GKE zones <https://cloud.google.com/compute/docs/regions-zones#available>`__
where you deploy the clusters, as in this example:

.. code-block:: sh

   export MDB_GKE_PROJECT={GKE project name}

   export MDB_CENTRAL_CLUSTER_ZONE="us-west1-a"

   export MDB_CLUSTER_1_ZONE="us-west1-b"

   export MDB_CLUSTER_2_ZONE="us-east1-b"

   export MDB_CLUSTER_3_ZONE="us-central1-a"

   export MDB_CENTRAL_CLUSTER_FULL_NAME="gke_${MDB_GKE_PROJECT}_${MDB_CENTRAL_CLUSTER_ZONE}_${MDB_CENTRAL_CLUSTER}"

   export MDB_CLUSTER_1_FULL_NAME="gke_${MDB_GKE_PROJECT}_${MDB_CLUSTER_1_ZONE}_${MDB_CLUSTER_1}"
   export MDB_CLUSTER_2_FULL_NAME="gke_${MDB_GKE_PROJECT}_${MDB_CLUSTER_2_ZONE}_${MDB_CLUSTER_2}"
   export MDB_CLUSTER_3_FULL_NAME="gke_${MDB_GKE_PROJECT}_${MDB_CLUSTER_3_ZONE}_${MDB_CLUSTER_3}"

Set up GKE Clusters
~~~~~~~~~~~~~~~~~~~

Set up |gke| clusters:

.. include:: /includes/steps/multi-cluster-set-gke.rst

.. _multi-cluster-user-auth-clusters-ref:

Obtain User Authentication Credentials for Central and Member Clusters
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Obtain user authentication credentials for the central and member |k8s|
clusters and save the credentials. You will later use these credentials
for running ``kubectl`` commands on these clusters.

Run the following commands:

.. code-block:: sh

   gcloud container clusters get-credentials $MDB_CENTRAL_CLUSTER \
     --zone=$MDB_CENTRAL_CLUSTER_ZONE

   gcloud container clusters get-credentials $MDB_CLUSTER_1 \
     --zone=$MDB_CLUSTER_1_ZONE

   gcloud container clusters get-credentials $MDB_CLUSTER_2 \
     --zone=$MDB_CLUSTER_2_ZONE

   gcloud container clusters get-credentials $MDB_CLUSTER_3 \
     --zone=$MDB_CLUSTER_3_ZONE

.. _multi-cluster-tls-overview:

Deploy a MongoDBMultiCluster Resource
--------------------------------------

Select the appropriate tab based on whether you want to encrypt replica
set connections in your |multi-clusters| using |tls| certificates.

.. tabs::

   .. tab:: With TLS-Encrypted Connections
      :tabid: encrypted

      You can use the following procedures in this
      :guilabel:`TLS-Encrypted Connections` tab:

      - Deploy a |mongodb-multi|
      - Renew TLS Certificates for a |mongodb-multi|

      These procedures establish |tls|-encrypted connections between
      MongoDB hosts in a replica set, and between client applications and
      MongoDB deployments.
  
      Before you begin, you must have valid certificates for |tls| encryption.

      .. include:: /includes/steps/multi-cluster-quick-start-tls.rst

      Renew TLS Certificates for a MongoDBMultiCluster Resource
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      Renew your |tls| certificates periodically using the following procedure.

      .. include:: /includes/steps/deploy-k8s-multi-cluster-rs-tls-custom-renew.rst

   .. tab:: With Non-Encrypted Connections
      :tabid: non-encrypted

      This procedure doesn't encrypt connections between MongoDB hosts in
      a replica set, and between client applications and MongoDB deployments.

      .. include:: /includes/steps/multi-cluster-quick-start.rst

Next Steps
----------

After deploying your MongoDB replica set across three |k8s|
member clusters, you can add a database user so you can connect to your MongoDB database. 
See :ref:`k8s-manage-db-users`.
