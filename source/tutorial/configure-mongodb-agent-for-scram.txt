==========================================
Configure MongoDB Agent for Authentication
==========================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

MongoDB supports the following authentication mechanisms depending on your MongoDB version:

.. list-table::
   :header-rows: 1
   :widths: 30 70

   * - MongoDB Version
     - Default Authentication Mechanism

   * - 4.0 or later
     - :manual:`SCRAM </core/security-scram/>` authentication
       mechanisms with the ``SHA-256`` and ``SHA-1`` hash functions.
       ``SCRAM-SHA-1`` (:rfc:`RFC 5802 <5802>`) and ``SCRAM-SHA-256``
       (:rfc:`RFC 7677 <7677>`) are |ietf| standards that define best
       practice methods for implementation of challenge-response
       mechanisms for authenticating users with passwords.

   * - 3.0 to 3.6
     - :manual:`SCRAM </core/security-scram/>` authentication mechanism
       with``SHA-1`` hash function.

   * - 2.6 or earlier
     - MongoDB Challenge and Response (``MONGODB-CR``). ``MONGODB-CR``
       is a challenge-response mechanism that authenticates users
       through passwords.

Prerequisites
-------------

Configure Deployments to Use Authentication
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-mdbagent-access-control-host-settings.rst

Configure the MongoDB Agent for Authentication
----------------------------------------------

The {+mdbagent+} can use ``SCRAM-SHA-1`` or ``SCRAM-SHA-256``
to authenticate to hosts that enforce access control.

.. include:: /includes/extracts/note-manage-mdbagent-auth-with-automation.rst

.. tabs::

   .. tab:: Deployments Managed by {+aagent+}
      :tabid: automation

      When you install the {+mdbagent+} with {+aagent+}, |mms|
      automatically creates a user for authentication. This user
      (``mms-automation``) is created in the ``admin`` database with
      the correct privileges for each {+mdbagent+} function.

      Configure these credentials in |mms|.

      1. Navigate to :guilabel:`Deployment` :icon-fa5:`arrow-right`
         :guilabel:`Security` :icon-fa5:`arrow-right`
         :guilabel:`Edit Settings` :icon-fa5:`arrow-right`
         :guilabel:`Edit Credentials`.

      .. cond:: cloud

         2. Continue through the modal until you see the
            :guilabel:`Configure Cloud Manager Agents` page

      .. cond:: onprem

         2. Continue through the modal until you see the
            :guilabel:`Configure Ops Manager Agents` page

      3. Add the appropriate credentials:

         .. list-table::
            :header-rows: 1
            :widths: 30 70

            * - Setting
              - Value

            * - :guilabel:`{+mdbagent+} Username`
              - Enter the {+mdbagent+} username.

            * - :guilabel:`{+mdbagent+} Password`
              - Enter the password for the {+mdbagent+} username.

   .. tab:: Deployments Not Managed by {+aagent+}
      :tabid: monitoring-backup-only

      Each {+mdbagent+} function uses a different set of 
      |mongo| shell commands to configure a user with the 
      appropriate roles and privileges.

      .. tabs::

         .. tab:: {+bagent+}
            :tabid: backup

            User creation commands very depending on the version of
            MongoDB that you use:

            .. tabs::

               .. tab:: MongoDB 3.0 or later
                  :tabid: backup-mdb-v3.0+

                  To back up MongoDB instances running 3.0 and later,
                  create a user in the ``admin`` database with an
                  operation that resembles the following:

                  .. code-block:: javascript

                     db.getSiblingDB("admin").createUser(
                        {
                           user: "<username>",
                           pwd: "<password>",
                           roles: [ { role: "backup", db: "admin" } ]
                        }
                     )

                  To learn how to configure access control, see
                  :ref:`Access Control for MongoDB 3.0
                  <access-control-backup-3.0>`.

               .. tab:: MongoDB 2.6
                  :tabid: backup-mdb-v2.6

                  To back up MongoDB 2.6 release series instances,
                  create a user in the ``admin`` database with an
                  operation that resembles the following:

                  .. code-block:: javascript

                     db.getSiblingDB("admin").createUser(
                       {
                         user: "<username>",
                         pwd: "<password>",
                         roles: [ 
                            "clusterAdmin",
                            "readAnyDatabase",
                            "userAdminAnyDatabase",
                            { role: "readWrite", db: "admin" },
                            { role: "readWrite", db: "local" },
                         ]
                       }
                     )

                  See :ref:`Access Control for MongoDB 2.6
                  <access-control-backup-2.6>` for more information on
                  the required access.

            **Configure {+bagent+} Credentials**

            After you create the user for the {+bagent+} function, add
            the credentials to the Backup Settings.

            1. Navigate to :guilabel:`Backup` :icon-fa5:`arrow-right`
               :guilabel:`<backup-deployment>` :icon-fa5:`arrow-right`
               :icon-mms:`ellipsis` :icon-fa5:`arrow-right`
               :guilabel:`Edit Credentials`.

            2. Click :guilabel:`Credentials`.

            3. Add the appropriate credentials:

               .. list-table::
                  :header-rows: 1
                  :widths: 30 70

                  * - Setting
                    - Value

                  * - :guilabel:`{+bagent+} Username`
                    - Enter the {+bagent+} username.

                  * - :guilabel:`{+bagent+} Password`
                    - Enter the password for the {+bagent+} username.

         .. tab:: Monitoring
            :tabid: monitoring

            User creation commands vary depending on the version of
            MongoDB that you use:

            .. tabs::

               .. tab:: MongoDB 2.6 or later
                  :tabid: monitoring-mbd-v2.6+

                  To monitor MongoDB 2.6 instances, create a MongoDB
                  user in the ``admin`` database with an operation that
                  resembles the following:

                  .. code-block:: javascript

                     db.getSiblingDB("admin").createUser(
                        {
                           user: "<username>",
                           pwd: "<password>",
                           roles: [ { role: "clusterMonitor", db: "admin"
                           } ]
                        }
                     )

                  To learn more about the required roles, see
                  :ref:`Access Control for MongoDB 2.6
                  <access-control-monitoring-agent-2.6>`.

               .. tab:: MongoDB 2.4
                  :tabid: monitoring-mdb-v2.4

                  To monitor MongoDB 2.4 instances, create a MongoDB
                  user in the ``admin`` database with an operation that
                  resembles the following:

                  .. code-block:: javascript

                     db.getSiblingDB("admin").addUser( 
                        {
                           user: "<username>",
                           pwd: "<password>",
                           roles: [ 
                              "clusterAdmin",
                              "readAnyDatabase"
                           ]
                        }
                     )

                  To choose which MongoDB roles to provide for
                  {+magent+}, see :ref:`Access Control for MongoDB
                  2.4<access-control-2.4>`.

            **Configure {+magent+} Credentials**

            After you create the user for the {+magent+} function, add
            the credentials to the Monitoring Settings.

            1. Navigate to :guilabel:`Deployment`
               :icon-fa5:`arrow-right` :guilabel:`<deployment>`
               :icon-fa5:`arrow-right` :icon-mms:`ellipsis`
               :icon-fa5:`arrow-right` :guilabel:`Monitoring Settings`.

            2. Click :guilabel:`Credentials`.

            3. Add the appropriate credentials:

               .. list-table::
                  :header-rows: 1
                  :widths: 30 70

                  * - Setting
                    - Value

                  * - :guilabel:`{+magent+} Username`
                    - Enter the {+magent+} username.

                  * - :guilabel:`{+magent+} Password`
                    - Enter the password for the {+magent+} username.
