ref: fts-synonyms-tutorial-step1
level: 4
stepnum: 1
inherit:
  file: steps-fts-tutorial-run-query-kotlin.yaml
  ref: verify-dependencies-kotlin
---
ref: run-simple-query-kotlin
level: 4
stepnum: 2
title: "Run simple |fts| queries on the ``movies`` collection."
content: |
  These code examples perform the following tasks:

  - Imports ``mongodb`` packages and dependencies.
  - Establishes a connection to your |service| cluster.
  - Prints the documents that match the query from the ``AggregateFlow`` instance.

  |fts| query results vary based on the type of word mapping defined in 
  the synonyms source collection. 

  .. tabs:: 

     .. tab:: equivalent Mapping Type
        :tabid: equivalent

        a. Create a file named ``SynonymsEquivalentQuery.kt``.
        #. Copy and paste the following code into the file.

           The code example contains the following stages:
           
           - :pipeline:`$search` stage to search the ``title`` field 
             for the word ``automobile`` and uses the synonym mapping 
             definition named ``transportSynonyms`` to search for words 
             configured as synonyms of the query word ``automobile`` in 
             the synonyms source collection named 
             ``transport_synonyms``. 
           - :pipeline:`$limit` stage to limit the output to 10 
             results. 
           - :pipeline:`$project` stage to exclude all fields except 
             ``title`` and add a field named ``score``.

           .. literalinclude:: /includes/fts/synonyms/synonyms-equivalent-query.kt
              :language: kotlin
              :linenos:
              :dedent:
              :emphasize-lines: 10

        #. .. include:: /includes/fts/facts/fact-fts-driver-connection-string.rst

        #. Run the ``SynonymsEquivalentQuery.kt`` file.

           When you run the ``SynonymsEquivalentQuery.kt`` program in your IDE, it
           prints the following documents:

           .. code-block:: none
              :copyable: false
        
              Document{{title=Cars, score=4.140600204467773}}
              Document{{title=Planes, Trains & Automobiles, score=3.8122920989990234}}
              Document{{title=Blue Car, score=3.348478317260742}}
              Document{{title=Used Cars, score=3.348478317260742}}
              Document{{title=Cars 2, score=3.348478317260742}}
              Document{{title=Stealing Cars, score=3.348478317260742}}
              Document{{title=Cop Car, score=3.348478317260742}}
              Document{{title=Car Wash, score=3.348478317260742}}
              Document{{title=The Cars That Eat People, score=2.810762405395508}}
              Document{{title=Revenge of the Electric Car, score=2.810762405395508}}

           .. include:: /includes/fts/extracts/fts-synonyms-tutorial-equivalent-query-output.rst

     .. tab:: explicit Mapping Type
        :tabid: explicit

        a. Create a file named ``SynonymsExplicitQuery.kt``.
        #. Copy and paste the following code into the file.

           The code example contains the following stages:
           
           - :pipeline:`$search` stage to search the ``title`` field 
             for the word ``boat`` and uses the synonym mapping 
             definition named ``transportSynonyms`` to search for words 
             configured as synonyms of the query word ``boat`` in the 
             synonyms source collection named ``transport_synonyms``. 
           - :pipeline:`$limit` stage to limit the output to 10 
             results. 
           - :pipeline:`$project` stage to exclude all fields except 
             ``title`` and add a field named ``score``.

           .. literalinclude:: /includes/fts/synonyms/synonyms-explicit-query.kt
              :language: kotlin
              :linenos:
              :dedent:
              :emphasize-lines: 10

        #. .. include:: /includes/fts/facts/fact-fts-driver-connection-string.rst

        #. Run the ``SynonymsExplicitQuery.kt`` file.

           When you run the ``SynonymsExplicitQuery.kt`` program in your IDE, it
           prints the following documents:

           .. code-block:: none
              :copyable: false
        
              Document{{title=Vessel, score=5.3159894943237305}}
              Document{{title=Boats, score=4.597315311431885}}
              Document{{title=Sailing to Paradise, score=4.299008369445801}}
              Document{{title=And the Ship Sails On, score=4.299008369445801}}
              Document{{title=Broken Vessels, score=4.299008369445801}}
              Document{{title=Boat Trip, score=3.717820644378662}}
              Document{{title=Boat People, score=3.717820644378662}}
              Document{{title=Jack Goes Boating, score=3.1207938194274902}}
              Document{{title=The Glass Bottom Boat, score=3.1207938194274902}}
              Document{{title=Raspberry Boat Refugee, score=3.1207938194274902}}

           .. include:: /includes/fts/extracts/fts-synonyms-tutorial-explicit-query-output.rst

---
ref: run-advanced-query-kotlin
level: 4
stepnum: 3
title: "Run advanced |fts| queries if you created the index with
  multiple synonym mappings."
content: |
  These code examples perform the following tasks:

  - Imports ``mongodb`` packages and dependencies.
  - Establishes a connection to your |service| cluster.
  - Prints the documents that match the query from the ``AggregateFlow`` instance.

  |fts| query results vary based on the type of word mapping defined in 
  the synonyms source collection. 

  .. tabs:: 

     .. tab:: equivalent Mapping Type
        :tabid: equivalent

        a. Create a file named ``SynonymsEquivalentQuery.kt``.
        #. Copy and paste the following code into the file.

           The code example contains the following stages:
           
           - :pipeline:`$search` stage to search the ``title`` field 
             for the word ``automobile`` and uses the synonym mapping 
             definition named ``transportSynonyms`` to search for words 
             configured as synonyms of the query word ``automobile`` in 
             the synonyms source collection named 
             ``transport_synonyms``. The query searches the ``title`` 
             field for the word ``attire`` also and  uses the synonym 
             mapping definition named ``attireSynonyms`` to search for 
             words configured as synonyms of the query word ``attire`` 
             in the synonyms source collection named 
             ``attire_synonyms``. 
           - :pipeline:`$limit` stage to limit the output to 10 
             results.
           - :pipeline:`$project` stage to exclude all fields except 
             ``title`` and add a field named ``score``.

           .. literalinclude:: /includes/fts/synonyms/equivalent-advanced-query.kt
              :language: kotlin
              :linenos:
              :dedent:
              :emphasize-lines: 10

        #. .. include:: /includes/fts/facts/fact-fts-driver-connection-string.rst

        #. Run the ``SynonymsEquivalentQuery.kt`` file.

           When you run the ``SynonymsEquivalentQuery.kt`` program in your IDE, it
           prints the following documents:

           .. code-block:: none
              :copyable: false
        
              Document{{title=The Dress, score=4.852960586547852}}
              Document{{title=Cars, score=4.140600204467773}}
              Document{{title=27 Dresses, score=3.9245595932006836}}
              Document{{title=Planes, Trains & Automobiles, score=3.8122920989990234}}
              Document{{title=Car Wash, score=3.348478317260742}}
              Document{{title=Used Cars, score=3.348478317260742}}
              Document{{title=Blue Car, score=3.348478317260742}}
              Document{{title=Cars 2, score=3.348478317260742}}
              Document{{title=Stealing Cars, score=3.348478317260742}}
              Document{{title=Cop Car, score=3.348478317260742}}

           .. include:: /includes/fts/extracts/fts-synonyms-tutorial-equivalent-advanced-query-output.rst

     .. tab:: explicit Mapping Type
        :tabid: explicit

        a. Create a file named ``SynonymsExplicitQuery.kt``.
        #. Copy and paste the following code into the file.

           The code example contains the following stages:
           
           - :pipeline:`$search` stage to search the ``title`` field 
             for the word ``boat`` and uses the synonym mapping 
             definition named ``transportSynonyms`` to search for words 
             configured as synonyms of the query word ``boat`` in the 
             synonyms source collection named ``transport_synonyms``. 
             The query searches the ``title`` field for the word 
             ``hat`` also and uses the synonym mapping definition named 
             ``attireSynonyms`` to search for words configured as 
             synonyms of the query word ``hat`` in the synonyms source 
             collection named ``attire_synonyms``. 
           - :pipeline:`$limit` stage to limit the output to 10 
             results.
           - :pipeline:`$project` stage to exclude all fields except 
             ``title`` and add a field named ``score``.

           .. literalinclude:: /includes/fts/synonyms/explicit-advanced-query.kt
              :language: kotlin
              :linenos:
              :dedent:
              :emphasize-lines: 10

        #. .. include:: /includes/fts/facts/fact-fts-driver-connection-string.rst

        #. Run the ``SynonymsExplicitQuery.kt`` file.

           When you run the ``SynonymsExplicitQuery.kt`` program in your IDE, it
           prints the following documents:

           .. code-block:: none
              :copyable: false
        
              Document{{title=Fedora, score=5.6159772872924805}}
              Document{{title=Vessel, score=5.3159894943237305}}
              Document{{title=Boats, score=4.597315311431885}}
              Document{{title=And the Ship Sails On, score=4.299008369445801}}
              Document{{title=Broken Vessels, score=4.299008369445801}}
              Document{{title=Sailing to Paradise, score=4.299008369445801}}
              Document{{title=Top Hat, score=4.01986026763916}}
              Document{{title=A Hatful of Rain, score=4.01986026763916}}
              Document{{title=Boat People, score=3.717820644378662}}
              Document{{title=Boat Trip, score=3.717820644378662}}

           .. include:: /includes/fts/extracts/fts-synonyms-tutorial-explicit-advanced-query-output.rst
