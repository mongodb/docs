#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/reference/operator/aggregation/redact.txt:3
msgid "$redact (aggregation)"
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:20
msgid ""
"Restricts the contents of the documents based on information stored in "
"the documents themselves."
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:25
msgid "The :pipeline:`$redact` stage has the following prototype form:"
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:31
msgid ""
"The argument can be any valid :ref:`expression <aggregation-expressions>`"
" as long as it resolves to `$$DESCEND`_, `$$PRUNE`_, or `$$KEEP`_ system "
"variables. For more information on expressions, see :ref:`aggregation-"
"expressions`."
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:40
msgid "System Variable"
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:42
msgid "Description"
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:44
msgid "_`$$DESCEND`"
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:46
msgid ""
":pipeline:`$redact` returns the fields at the current document level, "
"excluding embedded documents. To include embedded documents and embedded "
"documents within arrays, apply the :expression:`$cond` expression to the "
"embedded documents to determine access for these embedded documents."
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:52
msgid "_`$$PRUNE`"
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:54
msgid ""
":pipeline:`$redact` excludes all fields at this current document/embedded"
" document level, **without** further inspection of any of the excluded "
"fields. This applies even if the excluded field contains embedded "
"documents that may have different access levels."
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:60
msgid "_`$$KEEP`"
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:62
msgid ""
":pipeline:`$redact` returns or keeps all fields at this current "
"document/embedded document level, **without** further inspection of the "
"fields at this level. This applies even if the included field contains "
"embedded documents that may have different access levels."
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:69
msgid "Examples"
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:71
msgid ""
"The examples in this section use the :method:`db.collection.aggregate()` "
"helper provided in the 2.6 version of the :binary:`~bin.mongo` shell."
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:76
msgid "Evaluate Access at Every Document Level"
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:78
msgid ""
"A ``forecasts`` collection contains documents of the following form where"
" the ``tags`` field lists the different access values for that "
"document/embedded document level; i.e. a value of ``[ \"G\", \"STLW\" ]``"
" specifies either ``\"G\"`` or ``\"STLW\"`` can access the data:"
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:112
msgid ""
"A user has access to view information with either the tag ``\"STLW\"`` or"
" ``\"G\"``. To run a query on all documents with year ``2014`` for this "
"user, include a :pipeline:`$redact` stage as in the following:"
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:133
#: ../source/reference/operator/aggregation/redact.txt:226
msgid "The aggregation operation returns the following \"redacted\" document:"
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:156
msgid ":expression:`$size`, :expression:`$setIntersection`"
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:159
msgid "Exclude All Fields at a Given Level"
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:161
msgid "A collection ``accounts`` contains the following document:"
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:195
msgid ""
"In this example document, the ``level`` field determines the access level"
" required to view the data."
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:198
msgid ""
"To run a query on all documents with status ``A`` and exclude *all* "
"fields contained in a document/embedded document at level ``5``, include "
"a :pipeline:`$redact` stage that specifies the system variable "
"``\"$$PRUNE\"`` in the ``then`` field:"
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:220
msgid ""
"The :pipeline:`$redact` stage evaluates the ``level`` field to determine "
"access. If the ``level`` field equals ``5``, then exclude all fields at "
"that level, even if the excluded field contains embedded documents that "
"may have different ``level`` values, such as the ``shipping_addr`` field."
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:237
msgid ""
"The result set shows that the :pipeline:`$redact` stage excluded the "
"field ``cc`` as a whole, including the ``shipping_addr`` field which "
"contained embedded documents that had ``level`` field values equal to "
"``3`` and not ``5``."
msgstr ""

#: ../source/reference/operator/aggregation/redact.txt:242
msgid ""
":doc:`/tutorial/implement-field-level-redaction` for steps to set up "
"multiple combinations of access for the same data."
msgstr ""

#~ msgid ""
#~ "The examples in this section use "
#~ "the :method:`db.collection.aggregate()` helper "
#~ "provided in the 2.6 version of the"
#~ " :program:`mongo` shell."
#~ msgstr ""

#~ msgid "On this page"
#~ msgstr ""

