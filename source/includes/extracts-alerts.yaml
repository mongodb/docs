ref: alert-overview
content: | 

  For each :doc:`project </tutorial/manage-alert-configurations>` or
  :doc:`global </tutorial/manage-global-alerts>` alert you create, you must
  set a target and a condition or metric. The *target* points to what changed:
  the |mms| component. If your *condition* becomes true or a *metric* meets
  your set threshold, |mms| triggers an alert. To learn more, see 
  :ref:`alerts-workflow`.

---
ref: alert-conf-call-failure
content: |

  .. list-table::
     :widths: 30 70
     :stub-columns: 1

     * - {+bagent+} has too many conf call failures
       - The cluster topology known to monitoring does not match the backup
         configuration from :term:`conf calls <conf call>` the {+bagent+}
         makes. 

         The number of attempts meets the threshold you specified in
         :setting:`maximumFailedConfCalls
         <mms.alerts.BackupAgentConfCallFailure.maximumFailedConfCalls>`
         setting.

         .. note:: :doc:`Global alert </tutorial/manage-global-alerts>` only

---
ref: alert-global-alerts
content: |

  .. list-table::
     :widths: 30 70
     :stub-columns: 1

     * - Backup could not be assigned to a backup daemon

       - A backup job fails to bind to a Backup Daemon. 

         .. example::

            Reasons that a job might fail to bind include, but are not
            limited to:

            - No :manual:`primary </reference/glossary/#std-term-primary>` is found for the backed-up replica
              set. At the time the binding occurred, the {+magent+} did not detect a primary. Ensure that the replica
              set is healthy.
     
            - Not enough space is available on any Backup Daemon.

            In both cases, resolve the issue and then :doc:`restart the
            initial sync of the backup </tutorial/enable-backup>`.

            As an alternative, you can manually bind jobs to daemons
            through the :guilabel:`Admin` interface. See
            :ref:`jobs-page` for more information.

         .. note:: :doc:`Global alert </tutorial/manage-global-alerts>` only

     * - Backup has reached a high number of retries

       - Sends an alert if the same task fails repeatedly. This could
         happen, for example, during maintenance. :ref:`Check the
         corresponding job log <jobs-page>` for an error message
         explaining the problem.

         Contact MongoDB Support if you need help interpreting the
         error message.

         .. note:: :doc:`Global alert </tutorial/manage-global-alerts>` only

     * - Backup is in an unexpected state

       - Something unexpected happened and the Backup state for the
         replica set is ``broken``. You must resync the backed-up
         replica set, as described in the
         :doc:`/tutorial/resync-backup` procedure.

         In case of a ``Backup is in an unexpected state`` alert,
         :ref:`check the corresponding job log <jobs-page>` for an
         error message explaining the problem. Contact MongoDB Support
         if you need help interpreting the error message.

         .. note:: :doc:`Global alert </tutorial/manage-global-alerts>` only

     * - Replica set has a late snapshot

       - A snapshot has failed to complete before the next snapshot is
         scheduled to begin. :ref:`Check the job log <jobs-page>` in
         the |mms| Admin interface for any errors.

         .. note:: :doc:`Global alert </tutorial/manage-global-alerts>` only

     * - Sync slice transfer has not progressed in...

       - An :opsmgr:`inital sync </reference/glossary/#term-initial-sync>` has started but then subsequently
         stalled. Issues that can cause this, include, but are not
         limited to:

         - processes that are down (agents, ingest, backing databases)
         - network issues
         - incorrect authentication credentials

         .. note:: :doc:`Global alert </tutorial/manage-global-alerts>` only

     * - Backup job is busy for...

       - One backup job has been working for more hours within a
         24-hour period than your specified threshold.

         Different backup jobs share :term:`Backup Daemons <Backup
         Daemon>` or :opsmgr:`snapshot stores </reference/glossary/#term-snapshot-store>`. Backup
         job execution time can vary. Long running backup jobs can
         cause the remaining jobs to fall behind or fail. Set this
         metric to how long you expect backups should take to complete
         in your deployment.

         You should :ref:`check the corresponding job log <jobs-page>`
         for error messages. Contact MongoDB Support if you need help
         interpreting the error message.

         .. note:: :doc:`Global alert </tutorial/manage-global-alerts>` only

---

ref: alert-host-down
content: |

  .. list-table::
     :widths: 30 70
     :stub-columns: 1

     * - Host is down
       - |mms| does not receive a ping from a host for more than 4
         minutes. Under normal operation, the {+magent+} connects
         to each monitored host about once per minute. |mms| waits 4
         minutes before triggering the alert to minimize false
         positives, as would occur during a host restart.

         If the host continues to be unreachable, the {+magent+}
         eventually reduces ping frequency to every 5 minutes for a
         :manual:`mongod </reference/program/mongod/#mongodb-binary-bin.mongod>` and every 20 minutes for a
         :manual:`mongos </reference/program/mongos/#mongodb-binary-bin.mongos>`. If a :manual:`mongod </reference/program/mongod/#mongodb-binary-bin.mongod>` or
         :manual:`mongos </reference/program/mongos/#mongodb-binary-bin.mongos>` again becomes reachable, |mms| recognizes
         the process within 5 minutes.

         If |mms| Automation does not manage a :manual:`mongos </reference/program/mongos/#mongodb-binary-bin.mongos>`
         process and that process remains unreachable for 30 days,
         |mms| removes the process from the :guilabel:`Deployment` tab.
         However, if you restart the :manual:`mongos </reference/program/mongos/#mongodb-binary-bin.mongos>` process, |mms|
         detects it.

         To resolve this alert, see :doc:`/reference/alerts/host-down`.

...
