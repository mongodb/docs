=============
``mongodrdl``
=============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. meta::
   :description: The mongodrdl command reference page.

Description
-----------

.. binary:: mongodrdl

.. include:: /includes/fact-bi-enterprise.rst

``mongodrdl`` is a relational schema management tool for the |bi|. The
``mongodrdl`` binary can:

- :commandoption:`Produce a schema <sample>` based on the contents of
  one or more MongoDB :term:`collections <collection>` and write them
  out into ``.drdl`` files used by :binary:`~bin.mongosqld`.

- :commandoption:`Upload <upload>` a ``.drdl`` file's schema to the
  MongoDB deployment your |bi-short| is reading from.

- :commandoption:`Download <download>` stored schemas from your MongoDB
  deployment.

- :commandoption:`Delete <delete>` stored schemas from your MongoDB
  deployment.

- :commandoption:`Name <name-schema>` stored schemas in your MongoDB
  deployment for easier management.

You can edit a ``.drdl`` file manually to customize the |bi-short|'s
schema. To learn more about the ``.drdl`` format and manually editing
``.drdl`` files, see :ref:`schema-with-drdl-file`.

To learn more about all |bi-short| schema management options,
see :doc:`/schema-configuration`.

.. include:: /includes/fact-restart-mongosqld.rst

Syntax
------

``mongodrdl`` uses the following syntax:

.. code-block:: sh

   mongodrdl [<command>] [<options...>]


Default Minimum TLS Version
---------------------------

.. versionadded:: 2.6

The default minimum TLS version is 1.1 for outgoing connections
from :binary:`~bin.mongodrdl` to MongoDB.

You can adjust this setting with the :option:`--minimumTLSVersion
<mongodrdl --minimumTLSVersion>` option.

Commands
--------

.. versionadded:: 2.11

The behavior of ``mongodrdl`` is determined by one of the
following commands. If no command is specified, ``mongodrdl``
samples the specified namespace.

.. include:: /includes/options/commandoption-mongodrdl-sample.rst

.. include:: /includes/options/commandoption-mongodrdl-list-schema-ids.rst

.. include:: /includes/options/commandoption-mongodrdl-list-schema-names.rst

.. include:: /includes/options/commandoption-mongodrdl-upload.rst

.. include:: /includes/options/commandoption-mongodrdl-download.rst

.. include:: /includes/options/commandoption-mongodrdl-delete.rst

.. include:: /includes/options/commandoption-mongodrdl-name-schema.rst

.. _mongodrdl-command-line-options:

Options
-------

Core Options
~~~~~~~~~~~~

.. program:: mongodrdl

.. include:: /includes/options/option-mongodrdl-help.rst

.. include:: /includes/options/option-mongodrdl-version.rst

.. include:: /includes/options/option-mongodrdl-verbose.rst

.. include:: /includes/options/option-mongodrdl-quiet.rst

.. include:: /includes/options/option-mongodrdl-uri.rst

.. include:: /includes/options/option-mongodrdl-host.rst

.. include:: /includes/options/option-mongodrdl-port.rst

.. include:: /includes/options/option-mongodrdl-db.rst

.. include:: /includes/options/option-mongodrdl-collection.rst

.. include:: /includes/options/option-mongodrdl-customFilterField.rst

.. include:: /includes/options/option-mongodrdl-out.rst

.. include:: /includes/options/option-mongodrdl-sampleSize.rst

.. include:: /includes/options/option-mongodrdl-uuidSubtype3Encoding.rst

.. include:: /includes/options/option-mongodrdl-preJoined.rst

.. include:: /includes/options/option-mongodrdl-schema.rst

.. include:: /includes/options/option-mongodrdl-name.rst

.. include:: /includes/options/option-mongodrdl-schemaSource.rst

TLS/SSL Options
~~~~~~~~~~~~~~~

.. include:: /includes/options/option-mongodrdl-ssl.rst

.. include:: /includes/options/option-mongodrdl-sslCAFile.rst

.. include:: /includes/options/option-mongodrdl-sslPEMKeyFile.rst

.. include:: /includes/options/option-mongodrdl-sslPEMKeyPassword.rst

.. include:: /includes/options/option-mongodrdl-sslCRLFile.rst

.. include:: /includes/options/option-mongodrdl-sslAllowInvalidCertificates.rst

.. include:: /includes/options/option-mongodrdl-sslAllowInvalidHostnames.rst

.. include:: /includes/options/option-mongodrdl-sslFIPSMode.rst

.. include:: /includes/options/option-mongodrdl-minimumTLSVersion.rst

.. _mongodrdl-auth-options: 

Authentication Options
~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/options/option-mongodrdl-username.rst

.. include:: /includes/options/option-mongodrdl-password.rst

.. include:: /includes/options/option-mongodrdl-authenticationDatabase.rst

.. include:: /includes/options/option-mongodrdl-authenticationMechanism.rst

.. include:: /includes/options/option-mongodrdl-gssapiServiceName.rst

.. include:: /includes/options/option-mongodrdl-gssapiHostName.rst

.. _mongodrdl-custom-filters:

Custom Filters
~~~~~~~~~~~~~~

|bi-short| uses a MongoDB :manual:`aggregation pipeline </aggregation>`
to perform queries against a MongoDB database.
You can add a special field to your schema to pass a custom
MongoDB :manual:`$match </reference/operator/aggregation/match>`
query string to your MongoDB instance.

Use the ``--customFilterField`` option with :binary:`~bin.mongodrdl` to name
a custom filter field. This field passes a native MongoDB
:manual:`$match </reference/operator/aggregation/match>`
stage to use as the first stage of the aggregation pipeline,
which filters any results returned from MongoDB.
The |bi-short| applies this stage before any additional stages
pushed down from SQL.

The query can refer to any field in the collection, even if the fields
are not exposed in the relational schema.

For an example of custom filter usage, see
:ref:`mongodrdl-custom-filters-example`.

.. _mongodrdl-usage-examples:

Usage Examples
--------------

Schema Generation Example
~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-mongodrdl-example.rst

.. _mongodrdl-custom-filters-example:

Custom Filter Example
~~~~~~~~~~~~~~~~~~~~~

To use this field, specify the ``--customFilterField`` flag with the name you
want this field to have:

.. code-block:: sh

   mongodrdl [ other options ] --customFilterField _MONGOFILTER -o schema.drdl

Your DRDL file ``schema.drdl`` will include the following field in every generated table:

.. code-block:: yaml

   - Name: _MONGOFILTER
     MongoType: mongo.Filter
     SqlName: _MONGOFILTER
     SqlType: varchar

To add the special MongoDB query stage to your standard SQL, use the following
SQL syntax:

.. code-block:: sql

   SELECT <normal>
     FROM <tablename>
     WHERE <normal conditions> AND
         _MONGOFILTER='{ <json string that represents query to use> }'

   SELECT name,age
     FROM users
     WHERE active='t' AND
         _MONGOFILTER='{"addr":{"$elemMatch":{"city":"Springfield","state":"CA"}}}'

The |bi-short| will translate the above SQL into the following MongoDB
:manual:`aggregation </aggregation>` expression:

.. code-block:: javascript

   db.users.aggregate([
      {$match:{"addr":{"$elemMatch":{"city":"Springfield","state":"CA"}}},
      {$match:{"active":true}},
      {$project:{"name":1, "age":1}}
   ]);

You can use this custom filter in any business intelligence tool by filtering
on your special field and providing the value to match as a single quoted string
representing valid :term:`JSON`. All quotes inside the JSON must be double
quotes.

Authentication Example
~~~~~~~~~~~~~~~~~~~~~~

If your MongoDB server is running with :manual:`authentication
</core/authentication/>` enabled, you must specify a username,
password, and authentication database as options to your
:binary:`~bin.mongodrdl` command.

To create a :ref:`.drdl <drdl>` file from a
:manual:`mongod </reference/mongod>` instance with authentication
enabled, use the following command format:


.. code-block:: shell

   mongodrdl --host myhost.example.net:27017 \
             --username dbUser \
             --password myPassword \
             --db reports \
             --collection FY2017 \
             --authenticationDatabase admin \
             --out schema.drdl

MongoDB Atlas Example
---------------------

`MongoDB Atlas <https://docs.atlas.mongodb.com/>`_ is a cloud service
for running, monitoring, and maintaining MongoDB deployments, including
the provisioning of dedicated servers for MongoDB instances.

.. note::

   MongoDB Atlas offers a hosted |bi-short|. You can't use the ``.drdl``
   file output of the ``mongodrdl`` command in the Atlas-hosted |bi-short|.
   Atlas |bi-short| requires sampling that has an adjustable sample
   refresh interval and sample size.

   For more information on the Atlas-hosted |bi-short|, see :ref:`bi-connection`.

If you are running the |bi-short| locally and wish to create a
:ref:`.drdl <drdl>` file from an Atlas database, use the
following command format:


.. code-block:: shell

   mongodrdl --host <domain0>.mongodb.net:27017,<domain1>.mongodb.net:27017,... \
             --username <username> \
             --password <password> \
             --ssl \
             --authenticationDatabase admin \
             --db <database> \
             --out schema.drdl
