#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/geospatial-indexes.txt:3
msgid "``2d`` Index Internals"
msgstr "``2d`` 索引原理"

#: ../source/core/geospatial-indexes.txt:13
msgid ""
"This document provides a more in-depth explanation of the internals of "
"MongoDB's ``2d`` geospatial indexes. This material is not necessary for "
"normal operations or application development but may be useful for "
"troubleshooting and for further understanding."
msgstr ""
"这篇文档对MongoDB的 ``2d`` 地理索引提供了更深层次的内在机制解释。这份材料对于"
"普通操作或者应用开发并不是必要的，但是对于故障排除或者想要更多了解的用户也许"
"有用。"

#: ../source/core/geospatial-indexes.txt:21
msgid "Calculation of Geohash Values for ``2d`` Indexes"
msgstr "为 ``2d`` 索引计算Geohash值"

#: ../source/core/geospatial-indexes.txt:23
msgid ""
"When you create a geospatial index on :term:`legacy coordinate pairs <legacy "
"coordinate pairs>`, MongoDB computes :term:`geohash` values for the "
"coordinate pairs within the specified :ref:`location range <geospatial-"
"indexes-range>` and then indexes the geohash values."
msgstr ""
"当您基于 :term:`普通坐标 <legacy coordinate pairs>` 创建索引，MongoDB会在给"
"定 :ref:`位置范围 <geospatial-indexes-range>` 内的为坐标计算 :term:`geohash` "
"并索引该geohash值。"

#: ../source/core/geospatial-indexes.txt:28
msgid ""
"To calculate a geohash value, recursively divide a two-dimensional map into "
"quadrants. Then assign each quadrant a two-bit value. For example, a two-bit "
"representation of four quadrants would be:"
msgstr ""
"为了计算geohash， 需要迭代地把一个二维区域划分为四个象限。然后，给每个象限赋"
"予一个2-bit值。例如，四个象限的2-bit值如下："

#: ../source/core/geospatial-indexes.txt:38
msgid ""
"These two-bit values (``00``, ``01``, ``10``, and ``11``) represent each of "
"the quadrants and all points within each quadrant. For a geohash with two "
"bits of resolution, all points in the bottom left quadrant would have a "
"geohash of ``00``. The top left quadrant would have the geohash of ``01``. "
"The bottom right and top right would have a geohash of ``10`` and ``11``, "
"respectively."
msgstr ""
"这些2-bit值 (``00``, ``01``, ``10``,  ``11``) 分别代表了一个象限和在这个象限"
"内的所有点。求解时，所有在左下角象限的点将会拥有geohash ``00``. 左上角象限的"
"点的geohash会是 ``01`` .依此类推，右下角和右上角的geohash分别是 ``10`` 和 "
"``11`` 。"

#: ../source/core/geospatial-indexes.txt:45
msgid ""
"To provide additional precision, continue dividing each quadrant into sub-"
"quadrants. Each sub-quadrant would have the geohash value of the containing "
"quadrant concatenated with the value of the sub-quadrant. The geohash for "
"the upper-right quadrant is ``11``, and the geohash for the sub-quadrants "
"would be (clockwise from the top left): ``1101``, ``1111``, ``1110``, and "
"``1100``, respectively."
msgstr ""
"为了能更精确的索引，继续把每个象限划分为子象限。 每个子象限也一样会有"
"geohash， 由父象限的geohash和子象限的geohash拼接在一起。右上角象限的geohash"
"是 ``11`` ，所以它的子象限的geohash将是(从左上开始，顺时针方向)   "
"``1101`` ,  ``1111`` , ``1110`` , 和 ``1100`` 。"

#: ../source/core/geospatial-indexes.txt:62
msgid "Multi-location Documents for ``2d`` Indexes"
msgstr "多个位置数据的文档的 ``2d`` 索引"


#: ../source/core/geospatial-indexes.txt:84

msgid ""
"The values of the array may be either arrays, as in ``[ 55.5, 42.3 ]``, or "
"embedded documents, as in ``{ lng : 55.5 , lat : 42.3 }``."
msgstr "数组中的元素坐标， 可以是数组形式， 如 "

#: ../source/core/geospatial-indexes.txt:87
msgid ""
"You could then create a geospatial index on the ``locs`` field, as in the "
"following:"
msgstr "您可以在 ``locs`` 键上创建一个地理索引如下："

#: ../source/core/geospatial-indexes.txt:94
msgid ""
"You may also model the location data as a field inside of an embedded "
"document. In this case, the document would contain a field (e.g. "
"``addresses``) that holds an array of documents where each document has a "
"field (e.g. ``loc:``) that holds location coordinates. For example:"
msgstr ""
"也许，您把位置数据建模为子文档中的一个键。在这种情况下，文档中应该有一个键(例"
"如 ``addresses`` ) 存储了子文档数组， 其中每篇子文档都有一个键(例如 ``loc:"
"`` )存储着位置坐标。如下："

#: ../source/core/geospatial-indexes.txt:115
msgid ""
"You could then create the geospatial index on the ``addresses.loc`` field as "
"in the following example:"
msgstr "那么， 您可以在 ``addresses.loc`` 键上创建地理索引，如下："

#: ../source/core/geospatial-indexes.txt:122
msgid ""
"To include the location field with the distance field in multi-location "
"document queries, specify ``includeLocs: true`` in the :dbcommand:`geoNear` "
"command."
msgstr ""


#: ../source/core/geospatial-indexes.txt:0
msgid "On this page"
msgstr ""

#: ../source/core/geospatial-indexes.txt:65
msgid ""
":doc:`2dsphere </core/2dsphere>` indexes can cover multiple geospatial "
"fields in a document, and can express lists of points using :ref:`geojson-"
"multipoint` embedded documents."
msgstr ""

#: ../source/core/geospatial-indexes.txt:69
msgid ""
"While ``2d`` geospatial indexes do not support more than one geospatial "
"field in a document, you can use a :ref:`multi-key index <index-type-multi-"
"key>` to index multiple coordinate pairs in a single document. In the "
"simplest example you may have a field (e.g. ``locs``) that holds an array of"
" coordinates, as in the following example:"
msgstr ""

#~ msgid "Support for multiple locations in a document."
#~ msgstr ""

#~ msgid ""
#~ "While ``2d`` geospatial indexes do not support more than one set of "
#~ "coordinates in a document, you can use a :ref:`multi-key index <index-type-"
#~ "multi-key>` to index multiple coordinate pairs in a single document. In the "
#~ "simplest example you may have a field (e.g. ``locs``) that holds an array of"
#~ " coordinates, as in the following example:"
#~ msgstr ""

