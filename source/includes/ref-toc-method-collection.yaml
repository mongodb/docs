name: ":method:`db.collection.aggregate()`"
file: /reference/method/db.collection.aggregate
description: "Provides access to the :doc:`aggregation pipeline </core/aggregation>`."
---
name: ":method:`db.collection.count()`"
file: /reference/method/db.collection.count
description: "Wraps :dbcommand:`count` to return a count of the number of documents in a collection or matching a query."
---
name: ":method:`db.collection.createIndex()`"
file: /reference/method/db.collection.createIndex
description: "Builds an index on a collection. Use :method:`db.collection.ensureIndex()`."
---
name: ":method:`db.collection.getIndexStats()`"
file: /reference/method/db.collection.getIndexStats
description: "Renders a human-readable view of the data collected by :dbcommand:`indexStats` which reflects B-tree utilization."
---
name: ":method:`db.collection.indexStats()`"
file: /reference/method/db.collection.indexStats
description: "Renders a human-readable view of the data collected by :dbcommand:`indexStats` which reflects B-tree utilization."
---
name: ":method:`db.collection.dataSize()`"
file: /reference/method/db.collection.dataSize
description: "Returns the size of the collection. Wraps the :data:`~collStats.size` field in the output of the :dbcommand:`collStats`."
---
name: ":method:`db.collection.distinct()`"
file: /reference/method/db.collection.distinct
description: "Returns an array of documents that have distinct values for the specified field."
---
name: ":method:`db.collection.drop()`"
file: /reference/method/db.collection.drop
description: "Removes the specified collection from the database."
---
name: ":method:`db.collection.dropIndex()`"
file: /reference/method/db.collection.dropIndex
description: "Removes a specified index on a collection."
---
name: ":method:`db.collection.dropIndexes()`"
file: /reference/method/db.collection.dropIndexes
description: "Removes all indexes on a collection."
---
name: ":method:`db.collection.ensureIndex()`"
file: /reference/method/db.collection.ensureIndex
description: "Creates an index if it does not currently exist. If the index exists :method:`~db.collection.ensureIndex()` does nothing."
---
name: ":method:`db.collection.find()`"
file: /reference/method/db.collection.find
description: "Performs a query on a collection and returns a cursor object."
---
name: ":method:`db.collection.findAndModify()`"
file: /reference/method/db.collection.findAndModify
description: "Atomically modifies and returns a single document."
---
name: ":method:`db.collection.findOne()`"
file: /reference/method/db.collection.findOne
description: "Performs a query and returns a single document."
---
name: ":method:`db.collection.getIndexes()`"
file: /reference/method/db.collection.getIndexes
description: "Returns an array of documents that describe the existing indexes on a collection."
---
name: ":method:`db.collection.getShardDistribution()`"
file: /reference/method/db.collection.getShardDistribution
description: "For collections in sharded clusters, :method:`db.collection.getShardDistribution()` reports data of :term:`chunk` distribution."
---
name: ":method:`db.collection.getShardVersion()`"
file: /reference/method/db.collection.getShardVersion
description: "Internal diagnostic method for shard cluster."
---
name: ":method:`db.collection.group()`"
file: /reference/method/db.collection.group
description: "Provides simple data aggregation function. Groups documents in a collection by a key, and processes the results. Use :method:`~db.collection.aggregate()` for more complex data aggregation."
---
name: ":method:`db.collection.insert()`"
file: /reference/method/db.collection.insert
description: "Creates a new document in a collection."
---
name: ":method:`db.collection.isCapped()`"
file: /reference/method/db.collection.isCapped
description: "Reports if a collection is a :term:`capped collection`."
---
name: ":method:`db.collection.mapReduce()`"
file: /reference/method/db.collection.mapReduce
description: "Performs map-reduce style data aggregation."
---
name: ":method:`db.collection.reIndex()`"
file: /reference/method/db.collection.reIndex
description: "Rebuilds all existing indexes on a collection."
---
name: ":method:`db.collection.remove()`"
file: /reference/method/db.collection.remove
description: "Deletes documents from a collection."
---
name: ":method:`db.collection.renameCollection()`"
file: /reference/method/db.collection.renameCollection
description: "Changes the name of a collection."
---
name: ":method:`db.collection.save()`"
file: /reference/method/db.collection.save
description: "Provides a wrapper around an :method:`~db.collection.insert()` and :method:`~db.collection.update()` to insert new documents."
---
name: ":method:`db.collection.stats()`"
file: /reference/method/db.collection.stats
description: "Reports on the state of a collection. Provides a wrapper around the :dbcommand:`collStats`."
---
name: ":method:`db.collection.storageSize()`"
file: /reference/method/db.collection.storageSize
description: "Reports the total size used by the collection in bytes. Provides a wrapper around the :data:`~collStats.storageSize` field of the :dbcommand:`collStats` output."
---
name: ":method:`db.collection.totalSize()`"
file: /reference/method/db.collection.totalSize
description: "Reports the total size of a collection, including the size of all documents and all indexes on a collection."
---
name: ":method:`db.collection.totalIndexSize()`"
file: /reference/method/db.collection.totalIndexSize
description: "Reports the total size used by the indexes on a collection. Provides a wrapper around the :data:`~collStats.totalIndexSize` field of the :dbcommand:`collStats` output."
---
name: ":method:`db.collection.update()`"
file: /reference/method/db.collection.update
description: "Modifies a document in a collection."
---
name: ":method:`db.collection.validate()`"
file: /reference/method/db.collection.validate
description: "Performs diagnostic operations on a collection."
...
