.. meta::
   :robots: noindex, nosnippet

.. _node-data-types-dictionaries:

==========================
Dictionaries - Node.js SDK
==========================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. versionadded:: 10.5.0

Overview
--------
You can use the ``dictionary`` data type to manage a collection of unique String
keys paired with values. The ``dictionary`` data maps to the Javascript
:mdn:`Object <Web/JavaScript/Reference/Global_Objects/Object>` type. 

Realm Object Models
-------------------

To define a dictionary of mixed values in your schema, set the data type
of your field to an empty object, ``"{}"``. Alternatively, to create a
dictionary with values of a specific type, add the data type before the
brackets. For instance, ``"int{}"`` to specify that dictionary values must be
integers or ``"string{}"`` to specify that dictionary values must be strings.

.. literalinclude:: /examples/generated/node/data-types.snippet.define-dictionary-in-schema.js
    :language: javascript

.. include:: /includes/map-key-string-limitations.rst

.. literalinclude:: /examples/generated/node/data-types.snippet.percent-encode-disallowed-characters.js
   :language: javascript

Create an Object with a  Dictionary Value
-----------------------------------------
Create an object with a dictionary value by running the :js-sdk:`realm.create()
<classes/Realm-1.html#create>` method within a write transaction. 

.. literalinclude:: /examples/generated/node/data-types.snippet.create-realm-obj-with-dictionary.js
    :language: javascript

Query for Objects with a Dictionary Property
--------------------------------------------
To filter a query, run :js-sdk:`collection.filtered()
<classes/OrderedCollection.html#filtered>` to specify a subset of results based on the
value(s) of one or more object properties. You can specify results based on the value of a 
dictionary's properties by using :mdn:`bracket-notation <Web/JavaScript/Reference/Operators/Property_accessors>`.

You can also determine whether a results collection has a certain key or value
by using ``<dictionary>.@keys`` or ``<dictionary>.@values``. For instance, if
you had a ``Person`` collection with a nested ``home`` dictionary, you could
return all ``Person`` objects with a ``home`` with a ``"price"`` property by
running the query: ``home.@keys = "price"``.

.. literalinclude:: /examples/generated/node/data-types.snippet.query-a-dictionary.js
    :language: javascript

Add a Listener to a Dictionary
------------------------------
You can add a listener to a dictionary by running the
:js-sdk:`dictionary.addListener() <classes/Dictionary.html#addListener>` 
method. The ``addListener`` method's callback function has two parameters, 
the changed dictionary and an array of changes describing how the dictionary 
was changed.

.. note:: 

   Learn more about :ref:`change notifications <node-change-notifications>`.

.. literalinclude:: /examples/generated/node/data-types.snippet.add-a-listener-to-a-dictionary.js
    :language: javascript

Update a Dictionary
-------------------
To update a dictionary's properties, use dot notation or the ``dictionary.put()`` method.

.. literalinclude:: /examples/generated/node/data-types.snippet.update-a-dictionary.js
    :language: javascript

Delete Members of a Dictionary
------------------------------
To delete members of a dictionary, use the ``dictionary.remove()`` method with an array of properties to remove from the dictionary.

.. literalinclude:: /examples/generated/node/data-types.snippet.remove-fields-of-the-dictionary.js
    :language: javascript


