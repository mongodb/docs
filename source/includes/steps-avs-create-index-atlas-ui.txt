.. procedure:: 
   :style: normal 

   .. include:: /includes/nav/steps-db-deployments-page.rst

   .. include:: /includes/nav/steps-atlas-search.rst

   .. step:: Create an {+avs+} index.

      To create, click :guilabel:`Create Search Index`.

   .. step:: Select :guilabel:`JSON Editor` under :guilabel:`Atlas Vector Search` and click :guilabel:`Next`.

       .. figure:: /images/avs-create-index.png 
          :figwidth: 100%
          :alt: Screenshot of create Atlas Vector Search index 

   .. step:: Enter the :guilabel:`Index Name`, and set the :guilabel:`Database and Collection`.

      a. In the :guilabel:`Index Name` field, enter a name for the index.

         Index name must be unique within the namespace, regardless of
         the index type.

      #. In the :guilabel:`Database and Collection` section, find the 
         database, and select the collection.

   .. step:: Specify an index definition.

      An {+avs+} index resembles the following example: 

      .. code-block:: json
         :copyable: true 
         :linenos:

         {
           "fields":[ 
             {
               "type": "vector",
               "path": <field-to-index>,
               "numDimensions": <number-of-dimensions>,
               "similarity": "euclidean | cosine | dotProduct"
             },
             {
               "type": "filter",
               "path": "<field-to-index>"
             },
             ...
           ]
         }

      To learn more about the fields in the index, see
      :ref:`avs-types-vector-search`. 

   .. step:: Click :guilabel:`Next` to review the index. 

   .. step:: Click :guilabel:`Create Search Index`.

   .. step:: Close the :guilabel:`You're All Set!` Modal Window.

      A modal window displays to let you know your index is building. 
      Click the :guilabel:`Close` button.

   .. step:: Wait for the index to finish building.

      The index should take about one minute to build. While it
      builds, the :guilabel:`Status` column reads ``Build in
      Progress``. When it finishes building, the
      :guilabel:`Status` column reads ``Active``.
