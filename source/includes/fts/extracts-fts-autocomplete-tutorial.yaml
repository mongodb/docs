ref: fts-autocomplete-query-tasks
content: | 

  - Imports ``mongodb`` packages and dependencies.
  - Establishes a connection to your |service| cluster.
  - Uses the following pipeline stages: 
    
    .. include:: /includes/fts/extracts/fts-autocomplete-stages.rst 

  - Iterates over the cursor to print the documents that match the query.

---
ref: fts-autocomplete-query-advanced-tasks
content: | 

  - Imports ``mongodb`` packages and dependencies.
  - Establishes a connection to your |service| cluster.
  - Uses the following pipeline stages: 
    
    .. include:: /includes/fts/extracts/fts-autocomplete-advanced-stages.rst 

  - Iterates over the cursor to print the documents that match the query.

---
ref: fts-autocomplete-stages
content: | 

  - :pipeline:`$search` to search the ``title`` field using the ``autocomplete`` 
    operator for words that begin with the characters 
    ``ger``
  - :manual:`$limit </reference/operator/aggregation/limit>` stage to 
    limit the output to 20 results 
  - :manual:`$project </reference/operator/aggregation/project>` stage 
    to exclude all fields except ``title``

---
ref: fts-autocomplete-advanced-stages
content: | 

  - :pipeline:`$search` to search the ``title`` and ``plot`` fields using the 
    ``autocomplete`` operator for words that begin with the characters 
    ``pri``
  - :manual:`$limit </reference/operator/aggregation/limit>` stage to 
    limit the output to 5 results 
  - :manual:`$project </reference/operator/aggregation/project>` stage 
    to exclude all fields except ``title`` and ``plot``

---
ref: fts-autocomplete-basic-example-desc
content: | 

  In this section, you will connect to your |service| cluster and run the sample 
  queries against the ``title`` field in the ``sample_mflix.movies`` collection 
  using the ``autocomplete`` operator. This sample query uses a sequence of 
  characters to find movie titles that include words that begin with the input 
  character string.

---
ref: fts-autocomplete-basic-example-result
content: | 

  In these results, the characters ``ger`` appear at the beginning of a word in 
  all the titles. |fts| returns results that begin with the specified query 
  string because the ``title`` field is indexed using the ``edgeGram`` 
  tokenization strategy. |fts| includes ``Gèraldine`` and ``Rece do gèry`` in 
  the results because we set ``foldDiacritics`` to ``true``.

---
ref: fts-autocomplete-advanced-example-desc
content: | 

  In this section, you will connect to your |service| cluster and run the sample 
  queries against the ``title`` and ``plot`` fields in the 
  ``sample_mflix.movies`` collection using the ``autocomplete`` and ``compound`` 
  operators. This sample query uses a sequence of characters to find movie 
  titles and corresponding plots with words that begin with the same input 
  character string.

--- 
ref: fts-autocomplete-advanced-example-result
content: |

  In these results, the characters ``pri`` appear at the beginning of a word in 
  all the titles and plots. |fts| returns results that begin with the specified 
  query string because the ``title`` and ``plot`` fields are indexed using the 
  ``edgeGram`` tokenization strategy.  

...
