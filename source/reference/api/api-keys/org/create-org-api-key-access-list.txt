=======================================================
Create Access List Entries for One Organization API Key
=======================================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol



.. include:: /includes/api/base-api-uri.rst

Create one or more new access list entries for the specified
:ref:`API Key <mms-prog-api-key>`.

Resource
--------

.. code-block:: http

   POST /orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accessList

Request Path Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :widths: 15 10 75
   :header-rows: 1

   * - Name
     - Type
     - Description

   * - ``ORG-ID``
     - string
     - Unique identifier for the :ref:`organization <organizations>`
       to which the target |api| Key belongs. Use the
       :doc:`/orgs
       </reference/api/organizations/organization-get-all>` endpoint
       to retrieve all organizations to which the authenticated
       user has access.

   * - ``API-KEY-ID``
     - string
     - Unique identifier for the Organization |api| Key for which you
       want to create a new access list entry.

Request Query Parameters
~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/api/no-query-parameters.rst

Request Body Parameters
~~~~~~~~~~~~~~~~~~~~~~~

Specify an array of documents, where each document represents one
access list entry you want to add to the project. You must specify an
array even if you are only associating a single access list entry to the
project.

When you submit a ``POST`` request containing ``ipAddress`` or
``cidrBlock`` values which are not already present in the access list,
|mms| adds those entries to the list of existing entries in the
access list. |mms| does not set the access list to only contain the
entries specified in the request.

.. note::

   |mms| supports up to 500 |api| Keys within a single
   organization.

In the following table, ``[i]`` represents an array index.

.. list-table::
   :widths: 15 10 75
   :header-rows: 1

   * - Name
     - Type
     - Description

   * - ``[i].ipAddress``
     - string
     - IP address to be added to the access list for the
       API key. This field is mutually exclusive with the
       ``cidrBlock`` field.

   * - ``[i].cidrBlock``
     - string
     - Access list entry in |cidr| notation to be added for the
       API key. This field is mutually exclusive with the
       ``ipAddress`` field.

Response
--------

.. include:: /includes/api/get-all-note.rst

Each object within the ``results`` array is one access list entry.

.. include:: /includes/api/list-tables/apiKey-org-get-access-list-response.rst

Example Request
---------------

.. cond:: cloud

   .. code-block:: sh
      :linenos:
      :emphasize-lines: 8

      curl --user '{USER-ID}:{API-KEY}' --digest \
      --header 'Accept: application/json' \
      --header 'Content-Type: application/json' \
      --include \
      --request POST "https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accessList?pretty=true" \
      --data '
        [{
          "ipAddress" : "77.54.32.11"
        }]'

.. cond:: onprem

   .. code-block:: sh
      :linenos:
      :emphasize-lines: 8

      curl --user '{USER-ID}:{API-KEY}' --digest \
      --header 'Accept: application/json' \
      --header 'Content-Type: application/json' \
      --include \
      --request POST "https://{+opsmgr-url+}/api/public/v1.0/orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accessList?pretty=true" \
      --data '
        [{
          "ipAddress" : "77.54.32.11"
        }]'

Example Response
----------------

Response Header
~~~~~~~~~~~~~~~

.. include:: /includes/api/api-headers/401.rst

.. include:: /includes/api/api-headers/200.rst

Response Body
~~~~~~~~~~~~~

.. cond:: cloud

   .. code-block:: json
      :copyable: false
      :linenos:
      :emphasize-lines: 18, 21

      {
        "links" : [ {
          "href" : "https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accessList?pretty=true&pageNum=1&itemsPerPage=100",
          "rel" : "self"
        } ],
        "results" : [ {
          "cidrBlock" : "206.252.195.126/32",
          "count" : 47,
          "created" : "2019-01-24T16:26:37Z",
          "ipAddress" : "206.252.195.126",
          "lastUsed" : "2019-01-25T16:32:47Z",
          "lastUsedAddress" : "206.252.195.126",
          "links" : [ {
            "href" : "https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accessList/206.252.195.126",
            "rel" : "self"
          } ]
        }, {
          "cidrBlock" : "76.54.32.11/32",
          "count" : 0,
          "created" : "2019-01-24T21:09:05Z",
          "ipAddress" : null,
          "links" : [ {
            "href" : "https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accessList/76.54.32.11",
            "rel" : "self"
          } ]
        } ],
        "totalCount" : 2
      }

.. cond:: onprem

   .. code-block:: json
      :copyable: false
      :linenos:
      :emphasize-lines: 18, 21

      {
        "links" : [ {
          "href" : "https://{+opsmgr-url+}/api/public/v1.0/orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accessList?pretty=true&pageNum=1&itemsPerPage=100",
          "rel" : "self"
        } ],
        "results" : [ {
          "cidrBlock" : "206.252.195.126/32",
          "count" : 47,
          "created" : "2019-01-24T16:26:37Z",
          "ipAddress" : "206.252.195.126",
          "lastUsed" : "2019-01-25T16:32:47Z",
          "lastUsedAddress" : "206.252.195.126",
          "links" : [ {
            "href" : "https://{+opsmgr-url+}/api/public/v1.0/orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accessList/206.252.195.126",
            "rel" : "self"
          } ]
        }, {
          "cidrBlock" : "76.54.32.11/32",
          "count" : 0,
          "created" : "2019-01-24T21:09:05Z",
          "ipAddress" : null,
          "links" : [ {
            "href" : "https://{+opsmgr-url+}/api/public/v1.0/orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accessList/76.54.32.11",
            "rel" : "self"
          } ]
        } ],
        "totalCount" : 2
      }
