=====
split
=====

.. default-domain:: mongodb

.. dbcommand:: split

   The :dbcommand:`split` command creates new :term:`chunks <chunk>`
   in a :term:`sharded <sharding>` environment. While splitting is
   typically managed automatically by the :program:`mongos` instances,
   this command makes it possible for administrators to manually
   create splits.

   In most clusters, MongoDB will manage all chunk creation and
   distribution operations without manual intervention.

   You must issue the :dbcommand:`split` command while connected
   to the ``admin`` database of a :program:`mongos` instance.

   .. code-block:: javascript

      db.runCommand( { split: <database>.<collection>, find: <document> } )

   Or:

   .. code-block:: javascript

      db.runCommand( { split: <database>.<collection>, middle: <document key> } )

   Or:

   .. code-block:: javascript

      db.runCommand( { split: <database>.<collection>, bounds: [ <lower>, <upper> ] } )


   :param string split:

      The name of the :term:`collection` where the :term:`chunk`
      exists. Specify the collection's full namespace, including the
      database name.

   :param document find:

      A document contained in the chunk that will be selected for splitting.

      Do not use ``find`` on a collection with a :term:`hashed shard key`.

      You must specify only one of: ``find``, ``bounds``, or ``middle``.


   :param array bounds:

      .. versionadded:: 2.4

      Specify the bounds of a specific chunk to split in half.  The
      array must consist of two documents specifying the lower and upper
      shard key values of a chunk to split.  The values must match the
      minimum and maximum values of an existing chunk. You must specify
      only one of: ``find``, ``bounds``, or ``middle``.

      This option is used primarily to support chunks with
      hashed shard keys.

   :param document middle:

      The document key which will be used as a split point.
      A document with this key does not need to exist.
      You must specify only one of: ``find``, ``bounds``, or ``middle``.

   .. include:: /includes/warning-splitting-chunks.rst

   .. example::

      .. code-block:: javascript

         db.runCommand( { split : "test.people" , find : { _id : 99 } } )

      This command splits a chunk of the collection
      ``people`` in the ``test`` database. This will split the chunk
      that contains the document that matches the query ``{ _id : 99
      }`` approximately in half. If the document specified by the query does not
      exist, the :dbcommand:`split` will divide the chunk in half.

   .. example::

      To define an arbitrary split point, use the following form:

      .. code-block:: javascript

         db.runCommand( { split : "test.people" , middle : { _id : 99 } } )

      This form is typically used when :term:`pre-splitting` data in a
      collection.

   .. example::

      To split a specific chunk in half using the minimum and maximum values of the
      :term:`hashed shard key` of that chunk use the following:

      .. code-block:: javascript

         db.runCommand( { split: "test.people" ,
                        bounds : [ NumberLong("-5838464104018346494"), NumberLong("-5557153028469814163")] } )

   The :ref:`chunk migration <sharding-chunk-migration>` section
   describes how chunks move between shards on MongoDB.

   :dbcommand:`split` will return the following if another
   metadata operation is taking place on the chunk's collection:

   .. code-block:: none

      errmsg: "The collection's metadata lock is already taken."


   :dbcommand:`split` is an administrative command that is only
   available for :program:`mongos` instances.

   If another process, such as a balancer process, changes meta data while
   ``split`` is running, you may see this error. You may retry the
   ``split`` operation without side effects


   .. seealso:: :dbcommand:`moveChunk`,
                :method:`sh.moveChunk()`,
                :method:`sh.splitAt()`,
                :method:`sh.splitFind()`
