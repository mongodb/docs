# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: 2014-04-08 18:35+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/tutorial/build-a-2d-index.txt:5
msgid "Create a ``2d`` Index"
msgstr ""

#: ../source/tutorial/build-a-2d-index.txt:15
msgid ""
"To build a geospatial ``2d`` index, use the "
":method:`db.collection.createIndex()` method and specify ``2d``. Use the "
"following syntax:"
msgstr ""

#: ../source/tutorial/build-a-2d-index.txt:25
msgid "The ``2d`` index uses the following optional index-specification options:"
msgstr ""

#: ../source/tutorial/build-a-2d-index.txt:38
msgid "Define Location Range for a ``2d`` Index"
msgstr ""

#: ../source/tutorial/build-a-2d-index.txt:40
msgid ""
"By default, a ``2d`` index assumes longitude and latitude and has "
"boundaries of -180 **inclusive** and 180 **non-inclusive**. If documents "
"contain coordinate data outside of the specified range, MongoDB returns "
"an error."
msgstr ""

#: ../source/tutorial/build-a-2d-index.txt:45
msgid ""
"The default boundaries allow applications to insert documents with "
"invalid latitudes greater than 90 or less than -90. The behavior of "
"geospatial queries with such invalid points is not defined."
msgstr ""

#: ../source/tutorial/build-a-2d-index.txt:50
msgid "On ``2d`` indexes you can change the location range."
msgstr ""

#: ../source/tutorial/build-a-2d-index.txt:52
msgid ""
"You can build a ``2d`` geospatial index with a location range other than "
"the default. Use the ``min`` and ``max`` options when creating the index."
" Use the following syntax:"
msgstr ""

#: ../source/tutorial/build-a-2d-index.txt:64
msgid "Define Location Precision for a ``2d`` Index"
msgstr ""

#: ../source/tutorial/build-a-2d-index.txt:66
msgid ""
"By default, a ``2d`` index on legacy coordinate pairs uses 26 bits of "
"precision, which is roughly equivalent to 2 feet or 60 centimeters of "
"precision using the default range of -180 to 180. Precision is measured "
"by the size in bits of the :term:`geohash` values used to store location "
"data. You can configure geospatial indexes with up to 32 bits of "
"precision."
msgstr ""

#: ../source/tutorial/build-a-2d-index.txt:73
msgid ""
"Index precision does not affect query accuracy. The actual grid "
"coordinates are always used in the final query processing. Advantages to "
"lower precision are a lower processing overhead for insert operations and"
" use of less space. An advantage to higher precision is that queries scan"
" smaller portions of the index to return results."
msgstr ""

#: ../source/tutorial/build-a-2d-index.txt:79
msgid ""
"To configure a location precision other than the default, use the "
"``bits`` option when creating the index. Use following syntax:"
msgstr ""

#: ../source/tutorial/build-a-2d-index.txt:87
msgid ""
"For information on the internals of geohash values, see :ref:`geospatial-"
"indexes-geohash`."
msgstr ""

# f12691d544754c80b987ef5eba9b6186
#~ msgid ""
#~ "To build a geospatial ``2d`` index, "
#~ "use the :method:`ensureIndex() "
#~ "<db.collection.ensureIndex()>` method and specify"
#~ " ``2d``. Use the following syntax:"
#~ msgstr ""

# 27976750561b4b248f27e6ef9380e155
#~ msgid ""
#~ "By default, a ``2d`` index assumes "
#~ "longitude and latitude and has "
#~ "boundaries of -180 inclusive and 180 "
#~ "non-inclusive (i.e. ``[ -180 , 180"
#~ " )``). If documents contain coordinate "
#~ "data outside of the specified range, "
#~ "MongoDB returns an error."
#~ msgstr ""

