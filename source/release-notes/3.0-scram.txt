.. _3.0-scram:

==========================
Upgrade to ``SCRAM-SHA-1``
==========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Overview
--------

MongoDB 3.0 includes support for the :ref:`SCRAM-SHA-1
<authentication-scram-sha-1>` challenge-response user authentication
mechanism, which changes how MongoDB uses and stores user credentials.

For deployments that already contain user authentication data, to use
the ``SCRAM-SHA-1`` mechanism, you must upgrade the authentication
schema in addition to upgrading the MongoDB processes.

You may, alternatively, opt to continue to use the ``MONGODB-CR``
challenge-response mechanism and skip this upgrade.

See :ref:`upgrade-scram-scenarios` for details.

.. _upgrade-scram-scenarios:

Upgrade Scenarios
~~~~~~~~~~~~~~~~~

The following scenarios are possible when upgrading from 2.6 to 3.0:

Continue to Use ``MONGODB-CR``
``````````````````````````````

If you are upgrading from a 2.6 database with **existing** user
authentication data, to continue to use ``MONGODB-CR`` for existing 
challenge-response users, **no upgrade to
the existing user data is required**. However, new challenge-response users
created in 3.0 will use the following authentication mechanism:

- If you populated MongoDB 3.0 user data by importing the 2.6 user
  authentication data, including user data, new challenge-response
  users created in MongoDB 3.0 will use ``SCRAM-SHA1``.

- If you run MongoDB 3.0 binary against the 2.6 data files, including
  the user authentication data files, new challenge-response users
  created in MongoDB 3.0 will continue to use the ``MONGODB-CR``.

You can execute the upgrade to ``SCRAM-SHA-1`` at any
point in the future.

Use ``SCRAM-SHA-1``
```````````````````

- If you are starting with a new 3.0 installation without any users or
  upgrading from a 2.6 database that has no users, to use
  ``SCRAM-SHA-1``, **no user data upgrade is required**. All newly
  created users will have the correct format for ``SCRAM-SHA-1``.

- If you are upgrading from a 2.6 database with **existing** user data,
  to use ``SCRAM-SHA-1``, follow the steps in
  :ref:`3.0-upgrade-mongodb-cr-to-scram`.

.. important::

   Before you attempt any upgrade, familiarize yourself with the
   :ref:`3.0-scram-considerations` as the upgrade to ``SCRAM-SHA-1`` is
   **irreversible** short of restoring from backups.

Recommendation
~~~~~~~~~~~~~~

``SCRAM-SHA-1`` represents a significant improvement in security over
``MONGODB-CR``, the previous default authentication mechanism: you are
strongly urged to upgrade. For advantages of using ``SCRAM-SHA-1``,
see :ref:`SCRAM-SHA-1 <authentication-scram-sha-1>`.

.. _3.0-scram-considerations:

Considerations
--------------

Backwards Incompatibility
~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-upgrade-scram-irreversible.rst

Upgrade Binaries
~~~~~~~~~~~~~~~~

Before upgrading the authentication model, you should
first upgrade MongoDB binaries to 3.0. For sharded clusters, ensure
that **all** cluster components are 3.0.

.. _considerations-scram-sha-1-drivers:

Upgrade Drivers
~~~~~~~~~~~~~~~

You must upgrade all drivers used by applications that will connect to
upgraded database instances to version that support ``SCRAM-SHA-1``.
The minimum driver versions that support ``SCRAM-SHA-1`` are:

.. |driver-compatibility-heading| replace:: Version

.. include:: /includes/list-table-3.0-driver-compatibility.rst

See the :ecosystem:`MongoDB Drivers Page </drivers>` for links to
download upgraded drivers.

Requirements
~~~~~~~~~~~~

To upgrade the authentication model, you must have a user in the
``admin`` database with the role :authrole:`userAdminAnyDatabase`.

Timing
~~~~~~

Because downgrades are more difficult after you upgrade the user
authentication model, once you upgrade the MongoDB binaries to
version 3.0, allow your MongoDB deployment to run for a day or two
before following this procedure.

This allows 3.0 some time to "burn in" and decreases the likelihood
of downgrades occurring after the user privilege model upgrade. The
user authentication and access control will continue to work as
it did in 2.6.

If you decide to upgrade the user authentication
model immediately instead of waiting the recommended "burn in"
period, then for sharded clusters, you must wait at least 10 seconds
after upgrading the sharded clusters to run the authentication
upgrade command.

Replica Sets
~~~~~~~~~~~~

For a replica set, it is only necessary to run the upgrade process on
the :term:`primary` as the changes will automatically replicate to
the secondaries.

Sharded Clusters
~~~~~~~~~~~~~~~~

For a sharded cluster, connect to one :binary:`~bin.mongos` instance and run the
upgrade procedure to upgrade the cluster's authentication data. By
default, the procedure will upgrade the authentication data of the
shards as well.

To override this behavior, run :dbcommand:`authSchemaUpgrade` with the
``upgradeShards: false`` option. If you choose to
override, you must run the upgrade procedure on the :binary:`~bin.mongos`
first, and then run the procedure on the :term:`primary` members of
each shard.

For a sharded cluster, do **not** run the upgrade process directly
against the :doc:`config servers
</core/sharded-cluster-config-servers>`. Instead, perform the upgrade
process using one :binary:`~bin.mongos` instance to interact with the
config database.

.. _3.0-upgrade-mongodb-cr-to-scram:

Upgrade 2.6 ``MONGODB-CR`` Users to ``SCRAM-SHA-1``
---------------------------------------------------

.. warning::

   .. include:: /includes/fact-upgrade-scram-irreversible.rst

.. important::

   To use the ``SCRAM-SHA-1`` authentication mechanism, a driver
   upgrade is **necessary** if your current driver version does not
   support ``SCRAM-SHA-1``. See :ref:`required driver versions
   <considerations-scram-sha-1-drivers>` for details.

.. include:: /includes/steps/3.0-upgrade-mongodb-cr-to-scram.rst

Result
------

After this procedure is complete, all users in the database will have
``SCRAM-SHA-1``-style credentials, and any subsequently-created users
will also have this type of credentials.
