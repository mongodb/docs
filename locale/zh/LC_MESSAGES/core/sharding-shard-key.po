#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/sharding-shard-key.txt:10
msgid "Shard Keys"
msgstr "片键"

#: ../source/core/sharding-shard-key.txt:20
msgid ""
"The shard key determines the distribution of the collection's :term:"
"`documents <document>` among the cluster's :term:`shards <shard>`. The shard "
"key is either an indexed :term:`field` or an indexed compound field that "
"exists in every document in the collection."
msgstr ""
"片键决定了集群中一个集合的 :term:`documents <document>` 在不同 :term:`shards "
"<shard>` 中的分布.片键字段必须被索引,且在集合中的每条记录都不能为空,可以是单"
"个字段或复合字段."

#: ../source/core/sharding-shard-key.txt:26
msgid ""
"MongoDB partitions data in the collection using ranges of shard key values. "
"Each range, or :term:`chunk`, defines a non-overlapping range of shard key "
"values. MongoDB distributes the chunks, and their documents, among the "
"shards in the cluster."
msgstr ""
"MongoDB使用片键的范围把数据分布在分片中,每个范围,又称为数据块,定义了一个不重"
"叠的片键范围,MongoDB把数据块与他们存储的文档分布到集群中的不同分片中."

#: ../source/core/sharding-shard-key.txt:33
msgid ""
"When a chunk grows beyond the :ref:`chunk size <sharding-chunk-size>`, "
"MongoDB attempts to :term:`split <split>` the chunk into smaller chunks, "
"always based on ranges in the shard key."
msgstr ""
"当一个数据块的大小超过 :ref:`数据块最大大小 <sharding-chunk-size>` 时,MongoDB"
"会依据片键的范围将数据块 :term:`分裂为 <split>` 更小的数据块."

#: ../source/core/sharding-shard-key.txt:38
msgid "Considerations"
msgstr "注意事项"

#: ../source/core/sharding-shard-key.txt:40
msgid ""
"Shard keys are immutable and cannot be changed after insertion. See the :ref:"
"`system limits for sharded cluster <limits-sharding>` for more information."
msgstr ""
"片键在写入后不能被改变,参见 :ref:`集合的限制 <limits-sharding>` 以获取更多信"
"息."

#: ../source/core/sharding-shard-key.txt:44
msgid ""
"The index on the shard key **cannot** be a :ref:`multikey index <index-type-"
"multikey>`."
msgstr "片键上的索引 **不能** 是 :ref:`多键索引 <index-type-multikey>`"

#: ../source/core/sharding-shard-key.txt:50
msgid "Hashed Shard Keys"
msgstr "哈希片键"

#: ../source/core/sharding-shard-key.txt:54
msgid ""
"Hashed shard keys use a :ref:`hashed index <index-hashed-index>` of a single "
"field as the :term:`shard key` to partition data across your sharded cluster."
msgstr ""
"哈希片键使用单字段上的 :ref:`哈希索引 <index-hashed-index>` 进行数据在分片之"
"间的分发."

#: ../source/core/sharding-shard-key.txt:58
msgid ""
"The field you choose as your hashed shard key should have a good "
"cardinality, or large number of different values. Hashed keys work well with "
"fields that increase monotonically like :term:`ObjectId` values or "
"timestamps."
msgstr ""
"被选为片键的字段必须有足够大的基数,或者足够多的不同的值,对于单调递增的字段,"
"如 :term:`ObjectId` 或者时间戳,哈希索引效果更好."

#: ../source/core/sharding-shard-key.txt:63
msgid ""
"If you shard an empty collection using a hashed shard key, MongoDB will "
"automatically create and migrate chunks so that each shard has two chunks.  "
"You can control how many chunks MongoDB will create with the "
"``numInitialChunks`` parameter to :dbcommand:`shardCollection` or by "
"manually creating chunks on the empty collection using the :dbcommand:"
"`split` command."
msgstr ""
"如果在一个空的集合创建哈希片键,MongoDB会自动创建并迁移数据块,以保证每个分片上"
"都有两个数据块,你可以在执行 :dbcommand:`shardCollection` 指定 "
"``numInitialChunks`` 参数以控制初始化时MongoDB创建的数据块数目,或者手动调用 :"
"dbcommand:`split` 命令在分片上分裂数据块."

#: ../source/core/sharding-shard-key.txt:70
msgid ""
"To shard a collection using a hashed shard key, see :doc:`/tutorial/shard-"
"collection-with-a-hashed-shard-key`."
msgstr ""
"要在集合上使用哈希片键,参见 :doc:`/tutorial/shard-collection-with-a-hashed-"
"shard-key` ."

#: ../source/includes/tip-applications-do-not-need-to-compute-hashes.rst:0
msgid "Tip"
msgstr "小技巧"

#: ../source/includes/tip-applications-do-not-need-to-compute-hashes.rst:3
msgid ""
"MongoDB automatically computes the hashes when resolving queries using "
"hashed indexes.  Applications do **not** need to compute hashes."
msgstr ""
"对使用了哈希片键分片的集合进行请求时,MongoDB会自动计算哈希值,应用方 **不需要** "
"解析哈希值."

#: ../source/core/sharding-shard-key.txt:76
msgid "Impacts of Shard Keys on Cluster Operations"
msgstr "片键对集群操作的影响"

#: ../source/core/sharding-shard-key.txt:78
msgid ""
"The shard key affects write and query performance by determining how the "
"MongoDB partitions data in the cluster and how effectively the :program:"
"`mongos` instances can direct operations to the cluster. Consider the "
"following operational impacts of shard key selection:"
msgstr ""
"片键可以影响数据在分片间的分布,也影响 :program:`mongos` 对集群直接操作的效率,"
"因此可以影响集群的读写性能, 可以考虑以下的操作受片键的影响. "

#: ../source/core/sharding-shard-key.txt:88
msgid "Write Scaling"
msgstr "写扩展"

#: ../source/core/sharding-shard-key.txt:90
msgid ""
"Some possible shard keys will allow your application to take advantage of "
"the increased write capacity that the cluster can provide, while others do "
"not. Consider the following example where you shard by the values of the "
"default :term:`_id` field, which is :term:`ObjectId`."
msgstr ""
"一些片键会使应用程序能够达到集群能够提供的最大的写性能,有一些则不能,比如使用"
"默认的 :term:`_id` 做片键的情况."

#: ../source/core/sharding-shard-key.txt:95
msgid ""
"MongoDB generates ``ObjectId`` values upon document creation to produce a "
"unique identifier for the object. However, the most significant bits of data "
"in this value represent a time stamp, which means that they increment in a "
"regular and predictable pattern. Even though this value has :ref:`high "
"cardinality <sharding-shard-key-cardinality>`, when using this, *any date, "
"or other monotonically increasing number* as the shard key, all insert "
"operations will be storing data into a single chunk, and therefore, a single "
"shard. As a result, the write capacity of this shard will define the "
"effective write capacity of the cluster."
msgstr ""
"在插入文档时,MongoDB会生成一个全局唯一的 ``ObjectId`` 标识符_id,不过,需要注意"
"的一点是, 这个标识符的前几位代表时间戳,这意味着_id是以常规的并且可预测的方式"
"增长,即使_id有 :ref:`大的基数<sharding-shard-key-cardinality>` ,在使用 *_id或"
"者任意其他单调递增的数据* 作为片键时,所有的写入操作都会集中到一个分片中"

#: ../source/core/sharding-shard-key.txt:106
msgid ""
"A shard key that increases monotonically will not hinder performance if you "
"have a very low insert rate, or if most of your write operations are :method:"
"`~db.collection.update()` operations distributed through your entire data "
"set. Generally, choose shard keys that have *both* high cardinality and will "
"distribute write operations across the *entire cluster*."
msgstr ""
"不过,如果你的写入频率很低或者大多都是 :method:`~db.collection.update()` 操作,"
"单调递增的片键不会对性能有很大影响,一般来说,选择的片键要 *同时* 具有较大的基"
"数与将请求分布在整个集群中两个特性."

#: ../source/core/sharding-shard-key.txt:113
msgid ""
"Typically, a computed shard key that has some amount of \"randomness,\" such "
"as ones that include a cryptographic hash (i.e. MD5 or SHA1) of other "
"content in the document, will allow the cluster to scale write operations. "
"However, random shard keys do not typically provide :ref:`query isolation "
"<sharding-shard-key-query-isolation>`, which is another important "
"characteristic of shard keys."
msgstr ""
"通常,一个经过计算的片键会有一定的\"随机性\",比如一个包含了其他字段加密哈希(例"
"如 MD5或者SHA1)的片键,会使集群具有较好的写扩展性能.不过,随机的片键通常不会提"
"供 :ref:`查询隔离 <sharding-shard-key-query-isolation>` 的特性,而查询隔离同样"
"是片键一个很重要的特性."

#: ../source/core/sharding-shard-key.txt:120
msgid ""
"MongoDB makes it possible to shard a collection on a hashed index. This can "
"greatly improve write scaling. See :doc:`/tutorial/shard-collection-with-a-"
"hashed-shard-key`."
msgstr ""
"MongoDB可以使用哈希片键为数据库分片,哈希片键提供了较好的写扩展性能,参见 :doc:"
"`/tutorial/shard-collection-with-a-hashed-shard-key` 获得更多细节."

#: ../source/core/sharding-shard-key.txt:128
msgid "Querying"
msgstr "查询"

#: ../source/core/sharding-shard-key.txt:130
msgid ""
"The :program:`mongos` provides an interface for applications to interact "
"with sharded clusters that hides the complexity of :term:`data partitioning "
"<partition>`. A :program:`mongos` receives queries from applications, and "
"uses metadata from the :ref:`config server <sharding-config-server>`, to "
"route queries to the :program:`mongod` instances with the appropriate data. "
"While the :program:`mongos` succeeds in making all querying operational in "
"sharded environments, the :term:`shard key` you select can have a profound "
"affect on query performance."
msgstr ""
" :program:`mongos` 隐藏了集群内部复杂的 :term:`数据分区 <partition>`,为应用提"
"供了访问集群的统一入口, :program:`mongos` 接收来自应用的查询,并根据从 :ref:`"
"配置服务器 <sharding-config-server>` 取得的集群元信息,将查询分发到相应的 :"
"program:`mongod` 中.在集群中,由于 :program:`mongos` 处理所有查询请求,因此片键"
"的选择会对集群的性能产生很大的影响."

#: ../source/core/sharding-shard-key.txt:140
msgid ""
"The :doc:`/core/sharded-cluster-query-router` and :ref:`config server "
"<sharding-config-server>` sections for a more general overview of querying "
"in sharded environments."
msgstr ""
"参见文档 :doc:`/core/sharded-cluster-query-router` 与文档 :ref:`配置服务器 "
"<sharding-config-server>` 部分以获得关于集群环境概览与查询的详细信息."

#: ../source/core/sharding-shard-key.txt:148
msgid "Query Isolation"
msgstr "查询隔离"

#: ../source/core/sharding-shard-key.txt:150
msgid ""
"Generally, the fastest queries in a sharded environment are those that "
":program:`mongos` will route to a single shard, using the :term:`shard key` "
"and the cluster meta data from the :ref:`config server <sharding-config-"
"server>`. For queries that don't include the shard key, :program:`mongos` "
"must query all shards, wait for their responses and then return the result "
"to the application. These \"scatter/gather\" queries can be long running "
"operations."
msgstr ""

#: ../source/core/sharding-shard-key.txt:158
msgid ""
"If your query includes the first component of a compound shard key [#shard-"
"key-index]_, the :program:`mongos` can route the query directly to a single "
"shard, or a small number of shards, which provides better performance. Even "
"if you query values of the shard key that reside in different chunks, the "
":program:`mongos` will route queries directly to specific shards."
msgstr ""

#: ../source/core/sharding-shard-key.txt:165
msgid "To select a shard key for a collection:"
msgstr "为集合选择一个好的片键"

#: ../source/core/sharding-shard-key.txt:167
msgid ""
"determine the most commonly included fields in queries for a given "
"application"
msgstr "在给定的应用中,确定一个查询中最常见的字段."

#: ../source/core/sharding-shard-key.txt:170
msgid "find which of these operations are most performance dependent."
msgstr "确认这些操作中哪个对性能依赖最严重."

#: ../source/core/sharding-shard-key.txt:174
msgid ""
"If this field has low cardinality (i.e not sufficiently selective) you "
"should add a second field to the shard key making a compound shard key. The "
"data may become more splittable with a compound shard key."
msgstr ""
"如果这个字段基数比较低(即没有足够的选择性),你需要添加第二个字段,构成复合字段"
"片键,在使用复合片键时,数据可以被更好地分离."

#: ../source/core/sharding-shard-key.txt:0
msgid "See"
msgstr "注意"


#: ../source/core/sharding-shard-key.txt:189

msgid "Sorting"
msgstr "排序"

#: ../source/core/sharding-shard-key.txt:191
msgid ""
"In sharded systems, the :program:`mongos` performs a merge-sort of all "
"sorted query results from the shards. See :doc:`/core/sharded-cluster-query-"
"router` and :ref:`index-sort` for more information."
msgstr ""
"在集群中, :program:`mongos` 对从所有分片返回的数据进行合并排序,参见 :doc:`/"
"core/sharded-cluster-query-router` 和 :ref:`index-sort` 以获得更多信息."

#: ../source/core/sharding-shard-key.txt:197
msgid "Indivisible Chunks"
msgstr ""

#: ../source/core/sharding-shard-key.txt:199
msgid ""
"An insufficiently granular shard key can result in chunks that are "
"\"unsplittable\". See :ref:`shard-key-selection-divisible` for more "
"information."
msgstr ""

#: ../source/core/sharding-shard-key.txt:204
msgid "Additional Information"
msgstr ""

#: ../source/core/sharding-shard-key.txt:206
msgid ":doc:`/tutorial/choose-a-shard-key`"
msgstr ""

#: ../source/core/sharding-shard-key.txt:208
msgid ":doc:`/tutorial/shard-collection-with-a-hashed-shard-key`."
msgstr ""

#: ../source/core/sharding-shard-key.txt:1

#: ../source/core/sharding-shard-key.txt:1
#: ../source/core/sharding-shard-key.txt:84
#: ../source/core/sharding-shard-key.txt:144

msgid "shard key"
msgstr "片键"

#: ../source/core/sharding-shard-key.txt:1
msgid "sharding"
msgstr "分片"

#: ../source/core/sharding-shard-key.txt:84
msgid "write scaling"
msgstr "写扩展"

#: ../source/core/sharding-shard-key.txt:144
msgid "query isolation"
msgstr ""

#: ../source/core/sharding-shard-key.txt:0
msgid "On this page"
msgstr ""

#: ../source/core/sharding-shard-key.txt:182
msgid ""
"In many ways, you can think of the shard key a cluster-wide index. However, "
"be aware that sharded systems cannot enforce cluster-wide unique indexes "
"*unless* the unique field is in the shard key. Consider the :doc:`/indexes` "
"page for more information on indexes and compound indexes."
msgstr ""

#~ msgid ""
#~ "In many ways, you can think of the shard key a cluster-wide index. However, "
#~ "be aware that sharded systems cannot enforce cluster-wide unique indexes "
#~ "*unless* the unique field is in the shard key. Consider the "
#~ ":doc:`/core/indexes` page for more information on indexes and compound "
#~ "indexes."
#~ msgstr ""
