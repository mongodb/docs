.. _documents-records:

================
Record Documents
================

.. default-domain:: mongodb

Record documents store the database's data. Each record document is
equivalent to a row in an :term:`RDBMS`. Record documents are grouped
into :term:`collections <collection>`, which are the equivalent of RDBMS
tables.

The following is an example record document:

  .. code-block:: javascript

     {
       _id: 1,
       name: { first: 'John', last: 'Backus' },
       birth: new Date('Dec 03, 1924'),
       death: new Date('Mar 17, 2007'),
       contribs: [ 'Fortran', 'ALGOL', 'Backus-Naur Form', 'FP' ],
       awards: [
                 { award: 'National Medal of Science',
                   year: 1975,
                   by: 'National Science Foundation' },
                 { award: 'Turing Award',
                   year: 1977,
                   by: 'ACM' }
               ]
     }

The document contains the following fields:

- ``_id``, which must hold a unique value and is *immutable*.

- ``name`` that holds another *document*. This sub-document contains
  the fields ``first`` and ``last``, which both hold *strings*.

- ``birth`` and ``death`` that both have *date* types.

- ``contribs`` that holds an *array of strings*.

- ``awards`` that holds an *array of documents*.

Attributes of Record Documents
------------------------------

Record documents have the following attributes:

- .. include:: /includes/fact-document-max-size.rst

- .. include:: /includes/fact-document-field-name-restrictions.rst

.. include:: /includes/note-insert-id-field.rst

The ``_id`` Field
-----------------

The ``_id`` field has the following behavior and constraints:

- In documents, the ``_id`` field is always indexed for regular
  collections.

- The ``_id`` field may contain values of any :doc:`BSON data type
  </core/bson-types>`, other than an array.

  .. warning:: To ensure functioning replication, do not store values
     that are of the BSON regular expression type in the ``_id``
     field.

     .. See :issue:`SERVER-9562` for more information.

The following are common options for storing values for ``_id``:

- Use an :doc:`ObjectId </reference/object-id>`.

- Use a natural unique identifier, if available. This saves space and
  avoids an additional index.

- Generate an auto-incrementing number. See
  :doc:`/tutorial/create-an-auto-incrementing-field`.

- Generate a UUID in your application code. For a more efficient
  storage of the UUID values in the collection and in the ``_id``
  index, store the UUID as a value of the BSON ``BinData`` type.

  .. include:: /includes/fact-bindata-storage-optimization.rst

- Use your driver's BSON UUID facility to generate UUIDs. Be aware
  that driver implementations may implement UUID serialization and
  deserialization logic differently, which may not be fully compatible
  with other drivers. See your :api:`driver documentation <>` for
  information concerning UUID interoperability.
