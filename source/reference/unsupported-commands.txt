=============================================
Unsupported Commands in ``M0/M2/M5`` Clusters
=============================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: onecol

.. |starter| replace:: ``M0`` Free Tier and ``M2``/``M5`` shared starter cluster

|service| |starter|\s don't support all functionality available to
other clusters.

.. important::

   |starter|\s don't support read or write operations on the ``admin``
   database.

To learn more about ``M0``/``M2``/``M5`` limitations, see
:ref:`atlas-free-tier`.

.. _free-shard-commands-with-limits:

Limited Commands
----------------

The following commands can be run with limitations in |starter|\s:

.. list-table::
   :header-rows: 1
   :widths: 15 85

   * - Command
     - Limitation

   * - :dbcommand:`aggregate`
     -

       - Limits the ``maxTimeMs`` parameter to 600 seconds
         (``600000``).
       - Ignores the ``allowDiskUsage`` parameter.
       - Doesn't support :manual:`$accumulator 
         </reference/operator/aggregation/accumulator/>` and 
         :manual:`$function </reference/operator/aggregation/function/>` 
         operators.

   * - :dbcommand:`count`
     -

       - Doesn't support the :query:`$where` operator.
       - Limits the :dbcommand:`count` operation on the ``local``
         database to the ``system.replset`` and  ``oplog.rs`` collections.

   * - :dbcommand:`distinct`
     - Doesn't support :query:`$where` operator.

   * - :dbcommand:`find`

     -

       - Doesn't support the :query:`$where` operator.
       - Limits the :dbcommand:`find` operation on the ``local`` database to the ``oplog.rs`` collection.
       - Limits the :dbcommand:`find` operation to using an equality condition when
         querying the ``ns`` field in the ``oplog.rs`` collection on
         the ``local`` database.

         .. code-block:: json

            { "ns" : "test.foo" }

   * - :dbcommand:`getParameter`

     - Limits execution to these two documents:

       - ``{ "getParameter": 1, "authSchemaVersion": 1 }``
       - ``{ "getParameter": 1, "authenticationMechanisms": 1 }``

   * - :method:`db.killOp()`
     - Limits the :method:`db.killOp()` method to any operation that
       the MongoDB user associated with the same |service| account has
       run.

   * - :dbcommand:`serverStatus`
     - Limits response to the following fields:

       .. hlist::
          :columns: 2

          - ``$clusterTime.clusterTime``
          - ``$clusterTime.operationTime``
          - ``$clusterTime.signature.hash``
          - ``$clusterTime.signature.keyId``
          - ``$clusterTime.signature``
          - ``asserts.msg``
          - ``asserts.regular``
          - ``asserts.rollovers``
          - ``asserts.user``
          - ``asserts.warning``
          - ``atlasVersion.gitVersion``
          - ``atlasVersion.version``
          - ``connections.available``
          - ``connections.current``
          - ``connections.totalCreated``
          - ``extra_info.note``
          - ``extra_info.page_faults``
          - ``host``
          - ``localTime``
          - ``mem.bits``
          - ``mem.mapped``
          - ``mem.mappedWithJournal``
          - ``mem.resident``
          - ``mem.supported``
          - ``mem.virtual``
          - ``metrics.atlas.bytesInWrites``
          - ``metrics.atlas.connectionPool.totalCreated``
          - ``network.bytesIn``
          - ``network.bytesOut``
          - ``network.numRequests``
          - ``ok``
          - ``opcounters.command``
          - ``opcounters.delete``
          - ``opcounters.getmore``
          - ``opcounters.insert``
          - ``opcounters.query``
          - ``opcounters.update``
          - ``opcountersRepl.command``
          - ``opcountersRepl.delete``
          - ``opcountersRepl.getmore``
          - ``opcountersRepl.insert``
          - ``opcountersRepl.query``
          - ``opcountersRepl.update``
          - ``pid``
          - ``process``
          - ``repl.electionId``
          - ``repl.hosts[]``
          - ``repl.ismaster``
          - ``repl.lastWrite.lastWriteDate``
          - ``repl.lastWrite.majorityOpTime.t``
          - ``repl.lastWrite.majorityOpTime.ts``
          - ``repl.lastWrite.majorityWriteDate``
          - ``repl.lastWrite.opTime.t``
          - ``repl.lastWrite.opTime.ts``
          - ``repl.me``
          - ``repl.primary``
          - ``repl.rbid``
          - ``repl.secondary``
          - ``repl.setName``
          - ``repl.setVersion``
          - ``repl.tags.nodeType``
          - ``repl.tags.provider``
          - ``repl.tags.region``
          - ``repl.tags``
          - ``storageEngine.backupCursorOpen``
          - ``storageEngine.dropPendingIdents``
          - ``storageEngine.name``
          - ``storageEngine.oldestRequiredTimestampForCrashRecovery``
          - ``storageEngine.persistent``
          - ``storageEngine.readOnly``
          - ``storageEngine.supportsCommittedReads``
          - ``storageEngine.supportsPendingDrops``
          - ``storageEngine.supportsSnapshotReadConcern``
          - ``uptime``
          - ``uptimeEstimate``
          - ``uptimeMillis``
          - ``version``

   * - :dbcommand:`usersInfo`

     - Limits to the following document:

       .. code-block:: json

          { "user": "<MYUSER>", "db": "admin" }

.. _free-shard-unsupported-commands:

Unsupported Commands
--------------------

The following commands are unsupported:

.. note::

   The commands available for clusters of all other tiers, ``M10`` and
   larger, correspond to the privileges defined for the built-in
   |service| MongoDB roles.

   .. seealso::

      To learn more about permissions, see
      :ref:`Atlas User Privileges <atlas-user-privileges>`.

.. hlist::
   :columns: 3

   - ``_migrateClone``
   - ``_recvChunkAbort``
   - ``_recvChunkCommit``
   - ``_recvChunkStart``
   - ``_recvChunkStatus``
   - ``_transferMods``
   - :authaction:`appendOplogNote`
   - :dbcommand:`applyOps`
   - :dbcommand:`authenticate`
   - :authaction:`authSchemaUpgrade`
   - :dbcommand:`checkShardingIndex`
   - :dbcommand:`cleanupOrphaned`
   - ``cloneCollection``
   - :dbcommand:`cloneCollectionAsCapped`
   - :dbcommand:`compact`
   - :dbcommand:`connPoolSync`
   - ``copydbgetnonce``
   - ``copydbsaslstart``
   - :dbcommand:`createRole`
   - :dbcommand:`createUser`
   - ``currentOpCtx``
   - :dbcommand:`dataSize`
   - :dbcommand:`dbHash`
   - :dbcommand:`diagLogging`
   - :dbcommand:`dropAllRolesFromDatabase`
   - :dbcommand:`dropAllUsersFromDatabase`
   - :dbcommand:`dropRole`
   - ``enableFreeMonitoring``
   - ``forcerror``
   - :dbcommand:`fsync`
   - :dbcommand:`fsyncUnlock`
   - ``getDiagnosticData``
   - ``getPrevError``
   - :dbcommand:`getShardMap`
   - :dbcommand:`getShardVersion`
   - :dbcommand:`grantPrivilegesToRole`
   - :dbcommand:`grantRolesToRole`
   - :dbcommand:`grantRolesToUser`
   - ``handshake``
   - :dbcommand:`invalidateUserCache`
   - :dbcommand:`killAllSessions`
   - :dbcommand:`killAllSessionsByPattern`
   - :dbcommand:`killSessions`
   - :dbcommand:`lockInfo`
   - :dbcommand:`logRotate`
   - ``shardedFinish``
   - :dbcommand:`mapReduce`
   - :dbcommand:`planCacheClear`
   - :dbcommand:`planCacheClearFilters`
   - :dbcommand:`planCacheListFilters`
   - ``planCacheListPlans``
   - ``planCacheListQueryShapes``
   - :dbcommand:`planCacheSetFilter`
   - :dbcommand:`reIndex`
   - ``repairCursor``
   - ``repairDatabase``
   - ``replSetDeclareElectionWinner``
   - ``replSetElect``
   - :dbcommand:`replSetFreeze`
   - ``replSetFresh``
   - :dbcommand:`replSetGetConfig`
   - ``replSetGetRBID``
   - :dbcommand:`replSetGetStatus`
   - :authaction:`replSetHeartbeat`
   - :dbcommand:`replSetInitiate`
   - :dbcommand:`replSetMaintenance`
   - :dbcommand:`replSetReconfig`
   - ``replSetRequestVotes``
   - :dbcommand:`replSetStepDown`
   - ``replSetStepUp``
   - :dbcommand:`replSetSyncFrom`
   - ``replSetUpdatePosition``
   - :dbcommand:`resetError`
   - :authaction:`resync`
   - :dbcommand:`revokePrivilegesFromRole`
   - :dbcommand:`revokeRolesFromRole`
   - :dbcommand:`revokeRolesFromUser`
   - :dbcommand:`setFeatureCompatibilityVersion`
   - ``setLogLevel``
   - :dbcommand:`setParameter`
   - ``setProfilingLevel``
   - :dbcommand:`shutdown`
   - :dbcommand:`updateRole`
   - :dbcommand:`updateUser`
   - :dbcommand:`validate`

.. note:: Limitation for ``mongorestore``

   As |starter|\s don't support :dbcommand:`applyOps` they don't
   support the
   :manual:`--oplogReplay </reference/program/mongorestore#cmdoption-mongorestore-oplogreplay>`
   option for |mongorestore| either.

Aggregation Pipeline
--------------------

.. include:: /includes/fact-planCacheStats-not-supported.rst
