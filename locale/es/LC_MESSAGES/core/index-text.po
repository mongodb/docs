# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: 2014-04-08 19:27+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# 6edf860863c54c24b063188efd64bdf4
#: ../source/core/index-text.txt:5
msgid "Text Indexes"
msgstr ""

# fb782b3e67b046f198b3e4339d73f632
#: ../source/core/index-text.txt
msgid "On this page"
msgstr ""

# 4cfd2040427740ffa768346bd71fdebd
#: ../source/core/index-text.txt:17
msgid ""
"Starting in MongoDB 3.2, MongoDB introduces a version 3 of the ``text`` "
"index. Key features of the new version of the index are:"
msgstr ""

# 2aea7861c34d45b0ad54323b780c3d90
#: ../source/core/index-text.txt:20
msgid "Improved :ref:`case insensitivity <text-index-case-insensitivity>`"
msgstr ""

# 9f3dd92a8fee4cae991e336f3f25e281
#: ../source/core/index-text.txt:22
msgid ":ref:`Diacritic insensitivity <text-index-diacritic-insensitivity>`"
msgstr ""

# 55fdd7dbb29d4e77a8256ea85c5d815c
#: ../source/core/index-text.txt:24
msgid ""
"Additional :ref:`delimiters for tokenization <text-index-tokenization-"
"delimiters>`"
msgstr ""

# c78696c86d214a659c71be895fe8fbaa
#: ../source/core/index-text.txt:27
msgid ""
"Starting in MongoDB 3.2, version 3 is the default version for new "
"``text`` indexes."
msgstr ""

# 95c1651155904c2699e316b761178627
#: ../source/core/index-text.txt:31
msgid "Overview"
msgstr ""

# 2b5c53c3178d414d88c3d38bab7b8463
#: ../source/includes/fact-text-index.rst:1
msgid ""
"MongoDB provides :ref:`text indexes <index-feature-text>` to support text"
" search queries on string content. ``text`` indexes can include any field"
" whose value is a string or an array of string elements."
msgstr ""

# b78f16bc392141cbbf59f4ff0b1eae38
#: ../source/core/index-text.txt:38
msgid "Create Text Index"
msgstr ""

# a2fc491d632d437996111a86f8db8dad
# 03699bd338934447a251a013b41a9cc1
#: ../source/includes/fact-text-index-limit-one.rst:1
msgid "A collection can have at most **one** ``text`` index."
msgstr ""

# 33982d516e614d24b0c69332f96c10ab
#: ../source/core/index-text.txt:44
msgid ""
"To create a ``text`` index, use the :method:`db.collection.createIndex()`"
" method. To index a field that contains a string or an array of string "
"elements, include the field and specify the string literal ``\"text\"`` "
"in the index document, as in the following example:"
msgstr ""

# cd91fb28e8c54ebb8e984badb813839c
#: ../source/core/index-text.txt:54
msgid ""
"You can index multiple fields for the ``text`` index. The following "
"example creates a ``text`` index on the fields ``subject`` and "
"``comments``:"
msgstr ""

# 62668b50ab85463a9735f1398190ad26
#: ../source/core/index-text.txt:67
msgid ""
"A :doc:`compound index </core/index-compound>` can include ``text`` index"
" keys in combination with ascending/descending index keys. For more "
"information, see :ref:`text-index-compound`."
msgstr ""

# c3b1b887bc2041578c6573e30f9350ed
#: ../source/core/index-text.txt:71
msgid ""
"In order to drop a ``text`` index, use the index name. See :ref:`drop-"
"text-index` for more information."
msgstr ""

# 038757c02bdc4332a6720b76685e2252
#: ../source/core/index-text.txt:75
msgid "Specify Weights"
msgstr ""

# 8cf635023a0c488692a40d2f281b29e6
#: ../source/includes/fact-text-index-weight.rst:1
msgid ""
"For a ``text`` index, the *weight* of an indexed field denotes the "
"significance of the field relative to the other indexed fields in terms "
"of the text search score."
msgstr ""

# 06e5f553b98e431da35f1147c03508b0
#: ../source/includes/fact-text-index-weight.rst:5
msgid ""
"For each indexed field in the document, MongoDB multiplies the number of "
"matches by the weight and sums the results. Using this sum, MongoDB then "
"calculates the score for the document. See :projection:`$meta` operator "
"for details on returning and sorting by text scores."
msgstr ""

# 60377270040e4c1f84d8d6675074584f
#: ../source/includes/fact-text-index-weight.rst:10
msgid ""
"The default weight is 1 for the indexed fields. To adjust the weights for"
" the indexed fields, include the ``weights`` option in the "
":method:`db.collection.createIndex()` method."
msgstr ""

# e28e57bcdf594af5a8115fb5ffe79d4b
#: ../source/core/index-text.txt:79
msgid ""
"For more information using weights to control the results of a text "
"search, see :doc:`/tutorial/control-results-of-text-search`."
msgstr ""

# e57f9c2f7b9e4a7eb6fce4f05c5cd9e8
#: ../source/core/index-text.txt:85
msgid "Wildcard Text Indexes"
msgstr ""

# 10c98ac754be43a997a2152db7d7fbfc
#: ../source/core/index-text.txt:87
msgid ""
"When creating a ``text`` index on multiple fields, you can also use the "
"wildcard specifier (``$**``). With a wildcard text index, MongoDB indexes"
" every field that contains string data for each document in the "
"collection. The following example creates a text index using the wildcard"
" specifier:"
msgstr ""

# a496a8c5ccd846fcace2b6702cfb0301
#: ../source/core/index-text.txt:97
msgid ""
"This index allows for text search on all fields with string content. Such"
" an index can be useful with highly unstructured data if it is unclear "
"which fields to include in the text index or for ad-hoc querying."
msgstr ""

# c0e2ad319ff64a7da0bda08acd1c3137
#: ../source/core/index-text.txt:102
msgid ""
"Wildcard text indexes are ``text`` indexes on multiple fields. As such, "
"you can assign weights to specific fields during index creation to "
"control the ranking of the results. For more information using weights to"
" control the results of a text search, see :doc:`/tutorial/control-"
"results-of-text-search`."
msgstr ""

# 098e943353b847f8ad7c79ac3d8692a8
#: ../source/core/index-text.txt:108
msgid ""
"Wildcard text indexes, as with all text indexes, can be part of a "
"compound indexes. For example, the following creates a compound index on "
"the field ``a`` as well as the wildcard specifier:"
msgstr ""

# 73a7207428054287b437eb064087e7ae
#: ../source/core/index-text.txt:116
msgid ""
"As with all :ref:`compound text indexes <text-index-compound>`, since the"
" ``a`` precedes the text index key, in order to perform a :query:`$text` "
"search with this index, the query predicate must include an equality "
"match conditions ``a``. For information on compound text indexes, see "
":ref:`Compound Text Indexes <text-index-compound>`."
msgstr ""

# 5c27622adf6c41f28c478579190b58d9
#: ../source/core/index-text.txt:125
msgid "Case Insensitivity"
msgstr ""

# cf923e2a4d754bc698e62003ed2367a0
#: ../source/core/index-text.txt:129
msgid ""
"The version 3 ``text`` index supports the common ``C``, simple ``S``, and"
" for Turkish languages, the special ``T`` case foldings as specified in "
"`Unicode 8.0 Character Database Case Folding "
"<http://www.unicode.org/Public/8.0.0/ucd/CaseFolding.txt>`_."
msgstr ""

# 40b782c9daf7416e943fe01b0784b649
#: ../source/core/index-text.txt:136
msgid ""
"The case foldings expands the case insensitivity of the ``text`` index to"
" include characters with diacritics, such as ``é`` and ``É``, and "
"characters from non-Latin alphabets, such as \"И\" and \"и\" in the "
"Cyrillic alphabet."
msgstr ""

# 59646d96e03649988eae80567ce3ea37
#: ../source/core/index-text.txt:148
msgid ""
"Version 3 of the ``text`` index is also :ref:`diacritic insensitive "
"<text-index-diacritic-insensitivity>`. As such, the index also does not "
"distinguish between ``é``, ``É``, ``e``, and ``E``."
msgstr ""

# 6e9567ca35e74ddf8f2d0af1878dc103
#: ../source/core/index-text.txt:152
msgid ""
"Previous versions of the ``text`` index are case insensitive for "
"``[A-z]`` only; i.e. case insensitive for non-diacritics Latin characters"
" only . For all other characters, earlier versions of the text index "
"treat them as distinct."
msgstr ""

# 71241df2890946059272e760d52a6bb9
#: ../source/core/index-text.txt:160
msgid "Diacritic Insensitivity"
msgstr ""

# 1ab0b97cf12a4e21a8971deeea01d362
#: ../source/core/index-text.txt:164
msgid ""
"With version 3, ``text`` index is diacritic insensitive. That is, the "
"index does not distinguish between characters that contain diacritical "
"marks and their non-marked counterpart, such as ``é``, ``ê``, and ``e``. "
"More specifically, the ``text`` index strips the characters categorized "
"as diacritics in `Unicode 8.0 Character Database Prop List "
"<http://www.unicode.org/Public/8.0.0/ucd/PropList.txt>`_."
msgstr ""

# 9a8ec43c516f45108d296efb1e3f4c8c
#: ../source/core/index-text.txt:171
msgid ""
"Version 3 of the ``text`` index is also :ref:`case insensitive <text-"
"index-case-insensitivity>` to characters with diacritics. As such, the "
"index also does not distinguish between ``é``, ``É``, ``e``, and ``E``."
msgstr ""

# 36ae964404dc47979cb97301844cf025
#: ../source/core/index-text.txt:176
msgid ""
"Previous versions of the ``text`` index treat characters with diacritics "
"as distinct."
msgstr ""

# 0b3a2486b6a840388390cf5915c64c43
#: ../source/core/index-text.txt:182
msgid "Tokenization Delimiters"
msgstr ""

# 3fa60360fd58471fb4f55e52bf60fc52
#: ../source/core/index-text.txt:186
msgid ""
"For tokenization, version 3 ``text`` index uses the delimiters "
"categorized under ``Dash``, ``Hyphen``, ``Pattern_Syntax``, "
"``Quotation_Mark``, ``Terminal_Punctuation``, and ``White_Space`` in "
"`Unicode 8.0 Character Database Prop List "
"<http://www.unicode.org/Public/8.0.0/ucd/PropList.txt>`_."
msgstr ""

# d63e1eeeb92148b7a949005bc255b0be
#: ../source/core/index-text.txt:192
msgid ""
"For example, if given a string ``\"Il a dit qu'il «était le meilleur "
"joueur du monde»\"``, the ``text`` index treats ``«``, ``»``, and spaces "
"as delimiters."
msgstr ""

# 732059b54c2642a0bc0ef0466aa71523
#: ../source/core/index-text.txt:196
msgid ""
"Previous versions of the index treat ``«`` as part of the term "
"``\"«était\"`` and ``»`` as part of the term ``\"monde»\"``."
msgstr ""

# 5d706a89f2854108a8d112161db5d673
#: ../source/core/index-text.txt:200
msgid "Index Entries"
msgstr ""

# 3014131a7b5b4d0d87946a3690de2060
#: ../source/core/index-text.txt:202
msgid ""
"``text`` index tokenizes and stems the terms in the indexed fields for "
"the index entries. ``text`` index stores one index entry for each unique "
"stemmed term in each indexed field for each document in the collection. "
"The index uses simple :ref:`language-specific <text-index-supported-"
"languages>` suffix stemming."
msgstr ""

# 4143a90b241e46f19c197290bb7fe1e2
#: ../source/core/index-text.txt:211
msgid "Supported Languages and Stop Words"
msgstr ""

# 212dd18f7b5b417189c0287461db383e
#: ../source/core/index-text.txt:213
msgid ""
"MongoDB supports text search for various languages. ``text`` indexes drop"
" language-specific stop words (e.g. in English, ``the``, ``an``, ``a``, "
"``and``, etc.) and use simple language-specific suffix stemming. For a "
"list of the supported languages, see :ref:`text-search-languages`."
msgstr ""

# 4d892ba1f476478fba3158c339babcf3
#: ../source/includes/fact-text-search-language-none.rst:3
msgid ""
"If you specify a language value of ``\"none\"``, then the |text-obj| uses"
" simple tokenization with no list of stop words and no stemming."
msgstr ""

# 8161eeef0e1743fd802823aae44fa387
#: ../source/core/index-text.txt:222
msgid ""
"To specify a language for the ``text`` index, see :doc:`/tutorial"
"/specify-language-for-text-index`."
msgstr ""

# df7807f2daf3420c86473a3a2d6f601b
#: ../source/core/index-text.txt:226
msgid "``sparse`` Property"
msgstr ""

# 0db3adf2d97b4f28bb02266dc32ec9f4
#: ../source/core/index-text.txt:228
msgid ""
"``text`` indexes are :doc:`sparse </core/index-sparse>` by default and "
"ignore the :doc:`sparse: true </core/index-sparse>` option. If a document"
" lacks a ``text`` index field (or the field is ``null`` or an empty "
"array), MongoDB does not add an entry for the document to the ``text`` "
"index. For inserts, MongoDB inserts the document but does not add to the "
"``text`` index."
msgstr ""

# f056fd557ee141e6b6ced317ea82bedd
#: ../source/core/index-text.txt:235
msgid ""
"For a compound index that includes a ``text`` index key along with keys "
"of other types, only the ``text`` index field determines whether the "
"index references a document. The other keys do not determine whether the "
"index references the documents or not."
msgstr ""

# 8d52ca84859840e3b43111622a127564
#: ../source/core/index-text.txt:241
msgid "Restrictions"
msgstr ""

# ef977ac6fcd5478a80d49ca388f8fb3a
#: ../source/core/index-text.txt:244
msgid "One Text Index Per Collection"
msgstr ""

# 5a212198ef1e4cd7970bcde21169b118
#: ../source/core/index-text.txt:249
msgid "Text Search and Hints"
msgstr ""

# 3772d8fb24e5400ea9ab126d1158591b
#: ../source/includes/fact-hint-text-query-restriction.rst:3
msgid ""
"You cannot use :method:`~cursor.hint()` if the query includes a "
":query:`$text` query expression."
msgstr ""

# 88da30ad626147368de46cca306bbd8e
#: ../source/core/index-text.txt:256
msgid "Text Index and Sort"
msgstr ""

# 7afad0da2d044f169b73636c3ba1c79b
#: ../source/core/index-text.txt:258
msgid ""
"Sort operations cannot obtain sort order from a ``text`` index, even from"
" a :ref:`compound text index <text-index-compound>`; i.e. sort operations"
" cannot use the ordering in the text index."
msgstr ""

# 94822fa91e2f489e8150bbc54588ddb9
#: ../source/core/index-text.txt:265
msgid "Compound Index"
msgstr ""

# dc3e6ddfa60b4c1ca8a2d36f67e5b8ba
#: ../source/core/index-text.txt:267
msgid ""
"A :doc:`compound index </core/index-compound>` can include a ``text`` "
"index key in combination with ascending/descending index keys. However, "
"these compound indexes have the following restrictions:"
msgstr ""

# 631938468c3a49579563329fa4c69c62
#: ../source/includes/fact-compound-index-with-text-restrictions.rst:1
msgid ""
"A compound ``text`` index cannot include any other special index types, "
"such as :ref:`multi-key <index-type-multi-key>` or :ref:`geospatial "
"<index-feature-geospatial>` index fields."
msgstr ""

# f2c9660513e8450f8c7d831754cb2352
#: ../source/includes/fact-compound-index-with-text-restrictions.rst:5
msgid ""
"If the compound ``text`` index includes keys **preceding** the ``text`` "
"index key, to perform a :query:`$text` search, the query predicate must "
"include **equality match conditions** on the preceding keys."
msgstr ""

# c8120d96e09e40868030f77c3e68ffac
#: ../source/core/index-text.txt:273
msgid "See also :ref:`text-index-and-sort` for additional limitations."
msgstr ""

# 67a468b34c4443ab856dd1488040267f
#: ../source/core/index-text.txt:275
msgid ""
"For an example of a compound text index, see :doc:`/tutorial/limit-"
"number-of-items-scanned-for-text-search`."
msgstr ""

# 8212120e994548a3ad760128943fdf9c
#: ../source/core/index-text.txt:281
msgid "Drop a Text Index"
msgstr ""

# cd0e8b944afd4d5aa8f6b12dab28d0ec
#: ../source/core/index-text.txt:283
msgid ""
"To drop a ``text`` index, pass the *name* of the index to the "
":method:`db.collection.dropIndex()` method. To get the name of the index,"
" run the :method:`db.collection.getIndexes()` method."
msgstr ""

# b0b4e71cbc0b4d9cae85a78a72da43c8
#: ../source/core/index-text.txt:287
msgid ""
"For information on the default naming scheme for ``text`` indexes as well"
" as overriding the default name, see :doc:`/tutorial/avoid-text-index-"
"name-limit`."
msgstr ""

# f960dfbc48c640139b415dd8d11b320d
#: ../source/core/index-text.txt:292
msgid "Storage Requirements and Performance Costs"
msgstr ""

# cc797ea6ade54317ba7530ea0cc34e14
#: ../source/core/index-text.txt:294
msgid ""
"``text`` indexes have the following storage requirements and performance "
"costs:"
msgstr ""

# 1c93d3c4e10b4f5e90dbce2892fa391f
#: ../source/core/index-text.txt:297
msgid ""
"``text`` indexes can be large. They contain one index entry for each "
"unique post-stemmed word in each indexed field for each document "
"inserted."
msgstr ""

# 24a6309c24f14b40a97810a9e811f4f6
#: ../source/core/index-text.txt:301
msgid ""
"Building a ``text`` index is very similar to building a large multi-key "
"index and will take longer than building a simple ordered (scalar) index "
"on the same data."
msgstr ""

# f2ca4a3c11fa48e693a9480f9275a24f
#: ../source/core/index-text.txt:305
msgid ""
"When building a large ``text`` index on an existing collection, ensure "
"that you have a sufficiently high limit on open file descriptors. See the"
" :doc:`recommended settings </reference/ulimit>`."
msgstr ""

# 134db32d6a6042519108e5273e5935c0
#: ../source/core/index-text.txt:309
msgid ""
"``text`` indexes will impact insertion throughput because MongoDB must "
"add an index entry for each unique post-stemmed word in each indexed "
"field of each new source document."
msgstr ""

# 103f886b8e334a2baa325bc4246022d6
#: ../source/core/index-text.txt:313
msgid ""
"Additionally, ``text`` indexes do not store phrases or information about "
"the proximity of words in the documents. As a result, phrase queries will"
" run much more effectively when the entire collection fits in RAM."
msgstr ""

# 6fcbcf61d28540a99f89af62befe0d0b
#: ../source/core/index-text.txt:319
msgid "Text Search Support"
msgstr ""

# 83a785f6b5e8484b9231f4a90991296c
#: ../source/core/index-text.txt:321
msgid ""
"The ``text`` index supports :query:`$text` query operations. For examples"
" of text search, see the :query:`$text reference page <$text>`. For "
"examples of :query:`$text` operations in aggregation pipelines, see "
":doc:`/tutorial/text-search-in-aggregation`."
msgstr ""

#~ msgid ""
#~ "MongoDB supports text search for various"
#~ " languages. ``text`` indexes drop "
#~ "language-specific stop words (e.g. in "
#~ "English, “the,” “an,” “a,” “and,” etc.)"
#~ " and uses simple language-specific "
#~ "suffix stemming. For a list of the"
#~ " supported languages, see :ref:`text-"
#~ "search-languages`."
#~ msgstr ""

#~ msgid ""
#~ "To specify a language for the "
#~ "``text`` index, see :doc:`/tutorial/specify-"
#~ "language-for-text-index`"
#~ msgstr ""

# 3a22c58b193e4b4db866516d33d302e3
#~ msgid ""
#~ "MongoDB provides ``text`` indexes to "
#~ "support text search of string content"
#~ " in documents of a collection."
#~ msgstr ""

# d71cd4594ff840359ec82a5947b68894
#~ msgid ""
#~ "``text`` indexes can include any field"
#~ " whose value is a string or an"
#~ " array of string elements. To perform"
#~ " queries that access the ``text`` "
#~ "index, use the :query:`$text` query "
#~ "operator."
#~ msgstr ""

# 74db75b92e7540eaa8ce57103525c15a
#~ msgid ""
#~ "MongoDB enables the text search feature"
#~ " by default. In MongoDB 2.4, you "
#~ "need to enable the text search "
#~ "feature manually to create ``text`` "
#~ "indexes and perform :ref:`text search "
#~ "<index-text-text-search>`."
#~ msgstr ""

# 2ef91b63485a4ea2a6cb3bed5c0be984
#~ msgid ""
#~ "To create a ``text`` index, use "
#~ "the :method:`db.collection.ensureIndex()` method. To"
#~ " index a field that contains a "
#~ "string or an array of string "
#~ "elements, include the field and specify"
#~ " the string literal ``\"text\"`` in "
#~ "the index document, as in the "
#~ "following example:"
#~ msgstr ""

# b3f1b72b48694eacba799c83c6f8877a
#~ msgid ""
#~ "For examples of creating ``text`` "
#~ "indexes on multiple fields, see "
#~ ":doc:`/tutorial/create-text-index-on-"
#~ "multiple-fields`."
#~ msgstr ""

# 0c7e01fc6f1641e98ca373d87b42181d
#~ msgid ""
#~ "If the index language is English, "
#~ "``text`` indexes are case-insensitive "
#~ "for non-diacritics; i.e. case "
#~ "insensitive for ``[A-z]``."
#~ msgstr ""

# c91e65e2b26443b0859190e5a5135be2
#~ msgid "See :doc:`/tutorial/limit-number-of-items-scanned-for-text-search`."
#~ msgstr ""

# c6ee4b87f7fa4e6084110523938974d6
#~ msgid ""
#~ "``text`` indexes change the space "
#~ "allocation method for all future record"
#~ " allocations in a collection to "
#~ ":collflag:`usePowerOf2Sizes`."
#~ msgstr ""

# 4092b74532fe42dd8f6659f0d3d0ba0e
#~ msgid "Text Search"
#~ msgstr ""

# 04841959998b4a44a1e29d97b6c26e78
#~ msgid ""
#~ "Text search supports the search of "
#~ "string content in documents of a "
#~ "collection. MongoDB provides the "
#~ ":query:`$text` operator to perform text "
#~ "search in queries and in "
#~ ":doc:`aggregation pipelines </tutorial/text-"
#~ "search-in-aggregation>`."
#~ msgstr ""

# 58953e566a7e4a2d9c6578c598611ed1
#~ msgid "The text search process:"
#~ msgstr ""

# b97f4547fb6b4d54b98ff88d042d22a0
#~ msgid ""
#~ "tokenizes and stems the search term(s)"
#~ " during both the index creation and"
#~ " the text command execution."
#~ msgstr ""

# 4cc01298a2074c858d1432d5a0204d04
#~ msgid ""
#~ "assigns a score to each document "
#~ "that contains the search term in "
#~ "the indexed fields. The score determines"
#~ " the relevance of a document to "
#~ "a given search query."
#~ msgstr ""

# 37e34be39a0e42378779f006c8a12404
#~ msgid ""
#~ "The :query:`$text` operator can search "
#~ "for words and phrases. The query "
#~ "matches on the complete stemmed words."
#~ " For example, if a document field "
#~ "contains the word ``blueberry``, a "
#~ "search on the term ``blue`` will "
#~ "not match the document. However, a "
#~ "search on either ``blueberry`` or "
#~ "``blueberries`` will match."
#~ msgstr ""

# 5506418eab254eeaac91087e2b699521
#~ msgid ""
#~ "For information and examples on various"
#~ " text search patterns, see the "
#~ ":query:`$text` query operator. For examples"
#~ " of text search in aggregation "
#~ "pipeline, see :doc:`/tutorial/text-search-"
#~ "in-aggregation`."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB supports text search for various"
#~ " languages. ``text`` indexes drop "
#~ "language-specific stop words (e.g. in "
#~ "English, \"the\", \"an\", \"a\", \"and\", "
#~ "etc.) and uses simple language-specific"
#~ " suffix stemming. For a list of "
#~ "the supported languages, see :ref:`text-"
#~ "search-languages`."
#~ msgstr ""

#~ msgid ""
#~ "``text`` indexes are :doc:`sparse </core"
#~ "/index-sparse>` by default and ignores "
#~ "the :doc:`sparse: true </core/index-sparse>`"
#~ " option. If a document lacks a "
#~ "``text`` index field (or the field "
#~ "is ``null`` or an empty array), "
#~ "MongoDB does not add an entry for"
#~ " the document to the ``text`` index."
#~ " For inserts, MongoDB inserts the "
#~ "document but does not add to the"
#~ " ``text`` index."
#~ msgstr ""

#~ msgid ""
#~ "For a compound index that includes "
#~ "a ``text`` index key along with "
#~ "keys of other types, only the "
#~ "``text`` index field determine whether "
#~ "the index references a document. The "
#~ "other keys do not determine whether "
#~ "the index references the documents or"
#~ " not."
#~ msgstr ""

#~ msgid ""
#~ "To drop a ``text`` index, pass the"
#~ " name of the index to the "
#~ ":method:`db.collection.dropIndex()` method. To get"
#~ " the name of the index, run the"
#~ " :method:`~db.collection.getIndexes()` method."
#~ msgstr ""

