:template: guide

.. _guide-search-facet:

========================================================
Querying with Facets
========================================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Overview
--------

.. short-description::

   Retrieve documents in MongoDB with counts of specific values.

In this guide, you will learn how to run a query with the facet 
operator.

.. time:: 15

What You'll Need
----------------

- A MongoDB account. See :ref:`guides-create-atlas-account`.
- An Atlas cluster. See :ref:`guides-create-a-cluster`.
- Sample datasets :ref:`loaded into your cluster <guides-load-sample-data>`.

Procedure
---------

.. procedure::
   :style: normal

   .. include:: /includes/navigate_to_collections.rst

   .. step:: Create a search index with facets.

      .. include:: /includes/create_index_sample_sales.rst

         .. step:: Click :guilabel:`Refine Your Index`. In the 
            :guilabel:`Index Configuration` pane, toggle off
            :guilabel:`Dynamic Mapping`.

         .. step:: In the :guilabel:`Field Mappings` pane, click
            :guilabel:`Add Field Mapping`. In the modal window, select 
            ``purchaseMethod`` from the :guilabel:`Field Name` dropdown menu.

         .. step:: From the :guilabel:`Data Type` dropdown menu, select 
            ``String``. Click :guilabel:`Add` at the bottom of the 
            modal window. Leave the :guilabel:`Index Configurations` 
            values unchanged, and click :guilabel:`Add` at the bottom 
            of the modal window.  

         .. step:: In the :guilabel:`Field Mappings` pane, click
            :guilabel:`Add Field Mapping`. In the modal window, select 
            ``storeLocation`` from the :guilabel:`Field Name` dropdown 
            menu.

         .. step:: From the :guilabel:`Data Type` dropdown, select 
            ``StringFacet``. Click :guilabel:`Add` at the bottom of the
            modal window.

         .. step: Click :guilabel:`Save Changes`, then click 
            :guilabel:`Create Search Index`. Wait for the 
            :guilabel:`Status` column to read :guilabel:`Active`.

         You now have a search index that enables faceted queries.

   .. step:: Run a query on your index using the Aggregation Pipeline.

      .. procedure::
         :style: connected

         .. step:: Click the 
            :guilabel:`Aggregation` tab.

         .. step:: If you do not see a pipeline with an initial
            stage window in the right pane, click 
            :guilabel:`Create New` and select :guilabel:`Pipeline`.

         .. step:: In the Aggregation pane, click on the dropdown menu
            labeled :guilabel:`Select...` and select the 
            :guilabel:`$searchMeta` stage.

         .. step:: Replace the placeholder code with the following
            ``compound`` operator:

            .. code-block:: json

               {
               "facet": {
                  "operator": {
                     "text": {
                     "query": ["In store"],
                     "path": "purchaseMethod"
                     }
                  },
                  "facets": {
                     "locationFacet": {
                     "type": "string",
                     "path": "storeLocation",
                     }
                  }
               }
               }

         .. step:: Review the results of the compound search in the
            right-hand pane. The following sample document is shown 
            partially expanded.

            .. code-block:: json
               :copyable: false

               count: Object
               lowerBound: 2819
               facet: Object
               locationFacet: Object
                  buckets: Array
                     0: Object
                     id: "Denver"
                     count: 864
                     1: Object
                     id: "Seattle"
                     count: 648
                     2: Object
                     3: Object
                     4: Object
                     5: Object


            The ``count`` field returns the number of
            records with a ``purchaseMethod`` value of ``In store``.
            The ``facet`` field returns an array of ``buckets`` that
            show how many of the matching records belong to each
            ``storeLocation``.

Summary
-------

If you successfully completed the procedure in this guide, you have
created an Atlas Search index with faceting, and created an aggregation
pipeline that leverages faceting to organize matching records into
categories for improved visibility.

.. guide-next::