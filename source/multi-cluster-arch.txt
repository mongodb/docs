.. _multi-cluster-arch-ref:

===========================
Multi-Cluster Architecture
===========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. _multi-cluster-beta-limitations:

Features Not Available in the Beta Release
------------------------------------------

.. important::
   Use the beta release of the |multi-clusters| only in development
   environments.

The following features of the |k8s-op-full| and the underlying |k8s|
clusters are not available in the beta release of the |multi-clusters|:

- Sharded cluster deployments
- LDAP authentication
- |onprem| version earlier than 5.0.7

.. _multi-cluster-capabilities:

Multi-Cluster Capabilities
--------------------------

This section describes the multi-cluster capabilities that you can
configure using the same procedures as for single clusters deployed with
the |k8s-op-short|. Other multi-cluster capabilities have their own
documentation in this guide.

.. list-table::
   :header-rows: 1
   :widths: 30 70

   * - Capability
     - Description

   * - Use |dns-srv| records for MongoDB access in |multi-clusters|
     - To connect to the |multi-cluster| database as a user, you can use
       the ``connectionString.standardSrv``: :manual:`DNS seed list connection string </reference/connection-string/#dns-seed-list-connection-format>`.
       This string is included in the secret that the |k8s-op-short| creates
       for your |multi-cluster|. Use the same procedure for connecting to
       the |multi-cluster| as for single clusters deployed with |k8s-op-short|.
       See :ref:`Connect to a MongoDB Database Resource from Inside Kubernetes <connect-from-inside-k8s>`,
       and select the tab :guilabel:`Using the Kubernetes Secret`.

   * - Secure database users in |multi-clusters|
     - Use these procedures:

       - :ref:`Configure database users with SCRAM authentication <k8s-manage-db-users-scram>`
       - :ref:`Manage database users in deployments that use TLS and X.509 for internal cluster authentication <k8s-manage-db-users-x509>`
       
       These procedures are the same as for single clusters
       deployed with |k8s-op-short|, with the following exceptions:

       - The procedures apply to replica sets only. Multi-cluster
         deployments :ref:`do not support creating sharded clusters <multi-cluster-beta-limitations>`.
       - In the ``mongodbResourceRef``, specify the name of the multi-cluster
         replica set: ``name: "<my-multi-cluster-replica-set>"``.

   * - Configure queryable backups for |onprem| resources
     - If you deploy |onprem| with the |k8s-op-short|, the central
       cluster may also host |onprem|. In this case, you can
       :ref:`configure queryable backups <configure-om-queryable-backups>`
       for |onprem| resources.

.. _multi-cluster-diagram:

Multi-Cluster Deployment Architecture
-------------------------------------

The |k8s-op-full| runs in a central |k8s| cluster.

The central cluster holds the ``MongoDBMulti`` CustomResource spec for
the MongoDB replica set.
The member |k8s| clusters host the MongoDB replica sets.

If you deploy |onprem| with the |k8s-op-short|, the central cluster may also host |onprem|.
|istio| manages the discovery of MongoDB nodes deployed in different
|k8s| member clusters.

You can host your application on any of the member clusters inside the
Istio service mesh, either on |k8s| clusters outside of the ones that you
deploy with the |k8s-op-short|, or on the member clusters that you deploy
as part of this tutorial.

The |k8s-op-full| performs these actions:

- Identifies the cluster on which to deploy the MongoDB replica set
  using the corresponding ``MongoDBMulti`` CustomResource spec, and
  deploys the MongoDB replica sets.

- Watches for the ``MongoDBMulti`` CustomResource spec creation in the
  central cluster.

- Uses the mounted ``kubeconfig`` file to communicate with member clusters.

- Watches for the ``CentralCluster`` and ``MemberCluster`` events to
  confirm that the |multi-cluster| is in the desired state.

- Reconciles resources. Creates the necessary resources, such as
  Configmaps, Secrets, Service objects, and Statefulset objects in
  each member cluster corresponding to the number of replica set members
  in the MongoDB cluster.

  .. include:: /includes/facts/fact-can-change-secret-storage-tool.rst

The following diagram shows the high-level architecture of a |multi-cluster|
across regions and availability zones:

.. figure:: /images/multi-cluster-arch.svg
   :alt: Diagram showing the high-level architecture of a multi-cluster
         deployment across regions and availability zones using the
         MongoDB Enterprise Kubernetes Operator
   :figwidth: 600px
