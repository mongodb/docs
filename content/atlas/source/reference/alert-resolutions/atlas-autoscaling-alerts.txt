.. _atlas-autoscaling-alerts:

=======================
Fix Auto-Scaling Issues
=======================

.. default-domain:: mongodb

.. meta::
   :keywords: alerts, operational nodes, analytics nodes, cluster tier, scaling up, scaling down
   :description: Learn about each project-level Atlas auto-scaling alert

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

You can configure :ref:`Atlas autoscaling alerts 
<alert-conditions-autoscaling>` and alert conditions in the project 
:ref:`alert settings <configure-alerts>` modal. You can also view auto-scaling
events in the :ref:`project's Activity Feed <view-activity-feed>`.

Alert Conditions
----------------

To trigger alerts, you can configure the following alert conditions in
the project-level :ref:`alert settings <configure-alerts>` page.

- :alert:`Auto-scaling: Compute auto-scaling initiated for base tier <Auto-scaling: Compute auto-scaling initiated for base tier>`
  occurs if |service| starts compute auto-scaling for any of the :term:`operational nodes <operational node>`
  in your dedicated {+cluster+}. |service| can scale disk capacity as part
  of this event.

- :alert:`Auto-scaling: Compute auto-scaling initiated for analytics tier <Auto-scaling: Compute auto-scaling initiated for analytics tier>`
  occurs if |service| starts compute auto-scaling for any of
  the :term:`analytics nodes <analytics node>` in your dedicated {+cluster+}.
  |service| can scale disk capacity as part of this event.

- :alert:`Auto-scaling: Compute auto-scaling down didn't initiate for base tier due to storage requirements
  <Auto-scaling: Compute auto-scaling down didn't initiate for base tier due to storage requirements>`
  occurs if |service| couldn't start compute auto-scaling for any of
  the :term:`operational nodes <operational node>` in your dedicated {+cluster+}
  as the configured storage size isn't supported by the target {+cluster+} tier.

- :alert:`Auto-scaling: Compute auto-scaling down didn't initiate for analytics tier due to storage requirements
  <Auto-scaling: Compute auto-scaling down didn't initiate for analytics tier due to storage requirements>`
  occurs if |service| couldn't start compute auto-scaling for any of
  the :term:`analytics nodes <analytics node>` in your dedicated {+cluster+}
  as the configured storage size isn't supported by the target {+cluster+} tier.

- :alert:`Auto-scaling: Compute auto-scaling didn't initiate for base tier due to maximum configured cluster tier
  <Auto-scaling: Compute auto-scaling didn't initiate for base tier due to maximum configured cluster tier>`
  occurs if |service| couldn't scale up an :term:`operational node <operational node>`
  because your {+cluster+} reached a maximum {+cluster+} tier configured for auto-scaling.

- :alert:`Auto-scaling: Compute auto-scaling didn't initiate for analytics tier due to maximum configured cluster tier
  <Auto-scaling: Compute auto-scaling didn't initiate for analytics tier due to maximum configured cluster tier>`
  occurs if |service| couldn't scale up an :term:`analytics node <analytics node>`
  because your {+cluster+} reached a maximum {+cluster+} tier configured for auto-scaling.

- :alert:`Auto-scaling: Compute auto-scaling didn't initiate for base tier due to insufficient oplog size
  <Auto-scaling: Compute auto-scaling didn't initiate for base tier due to insufficient oplog size>`
  occurs if |service| couldn't scale up an :term:`operational node <operational node>`
  due to insufficient :term:`oplog` size. To learn more, see :ref:`set-oplog-min-window`.

- :alert:`Auto-scaling: Compute auto-scaling didn't initiate for analytics tier due to insufficient oplog size <Auto-scaling: Compute auto-scaling didn't initiate for analytics tier due to insufficient oplog size>`
  occurs if |service| couldn't scale up an :term:`analytics node <analytics node>`
  due to insufficient :term:`oplog` size. To learn more, see :ref:`set-oplog-min-window`.

- :alert:`Auto-scaling: Disk auto-scaling initiated <Auto-scaling: Disk auto-scaling initiated>`
  occurs when |service| starts auto-scaling disk capacity.

- :alert:`Auto-scaling: Disk auto-scaling didn't initiate due to the cluster reaching maximum available disk size
  <Auto-scaling: Disk auto-scaling didn't initiate due to the cluster reaching maximum available disk size>`
  occurs if |service| couldn't scale up the disk size because the {+cluster+}
  has reached maximum available disk size.

- :alert:`Auto-scaling: Disk auto-scaling didn't initiate due to insufficient oplog size
  <Auto-scaling: Disk auto-scaling didn't initiate due to insufficient oplog size>`
  occurs if |service| couldn't scale up the disk size because the {+cluster+}\'s oplog
  size isn't sufficient. To learn more, see :ref:`set-oplog-min-window`.

Common Triggers
---------------

Auto-scaling alerts occur by default for your {+cluster+} when |service|
triggers them. You can change who receives these alerts and their distribution.
To learn more about how auto-scaling behaves, see :ref:`cluster-autoscaling`.

Automatic scaling might not occur when a {+cluster+} receives a burst of activity,
such as a bulk insert. To reduce the risk of running out of resources during
automatic scaling up events, monitor your {+cluster+} during bulk inserts and
other workload spikes.

Fix the Immediate Problem
-------------------------

If your {+cluster+} nodes run out of memory or disk space, you can
:ref:`upgrade your cluster <scale-cluster-instance>` to fix the immediate
problem. You can select a {+cluster+} tier with more memory, storage, and |iops|.


Monitor Your Progress
---------------------

See :ref:`Monitor cluster metrics <monitor-cluster-metrics>`.


