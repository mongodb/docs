.. meta::
   :robots: noindex, nosnippet


.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol



Class DynamicRealm
^^^^^^^^^^^^^^^^^^

.. _io_realm_DynamicRealm:



io.realm
========


 | `java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ 
 | 		**io.realm.BaseRealm**
 | 					io.realm.DynamicRealm


DynamicRealm is a dynamic variant of :ref:`io.realm.Realm <io_realm_Realm>` . This means that all access to data and/or queries are done using string based class names instead of class type references.

This is useful during migrations or when working with string-based data like CSV or XML files.

The same :ref:`io.realm.RealmConfiguration <io_realm_RealmConfiguration>`  can be used to open a Realm file in both dynamic and typed mode, but modifying the schema while having both a typed and dynamic version open is highly discouraged and will most likely crash the typed Realm. During migrations only a DynamicRealm will be open.



Dynamic Realms do not enforce schemas or schema versions and :ref:`RealmMigration <io_realm_RealmMigration>`  code is not used even if it has been defined in the :ref:`RealmConfiguration <io_realm_RealmConfiguration>` .



This means that the schema is not created or validated until a Realm has been opened in typed mode. If a Realm file is opened in dynamic mode first it will not contain any information about classes and fields, and any queries for classes defined by the schema will fail.




.. seealso::


   
   - :ref:`Realm <io_realm_Realm>` 
      
      
      
   - :ref:`RealmSchema <io_realm_RealmSchema>` 
      
      
      
   
   
   



Nested Class Summary
====================

.. list-table::
   :header-rows: 1
   
   * - Modifier and Type
     - Class and Description
   
   * - ``public static interface`` 
     - :ref:`DynamicRealm.Transaction <io_realm_DynamicRealm_Transaction>` 
       
   
   * - ``public abstract static`` 
     - :ref:`DynamicRealm.Callback <io_realm_DynamicRealm_Callback>` 
       
   
   


Method Summary
==============

.. list-table::
   :header-rows: 1
   
   * - Modifier and Type
     - Method and Description
   
   * - public **void**
     - | :ref:`addChangeListener <io_realm_DynamicRealm_addChangeListener>` (
       |  :ref:`io.realm.RealmChangeListener\<io.realm.DynamicRealm> <io_realm_RealmChangeListener>`  listener
       | )
       
       
       Adds a change listener to the Realm.
       
       
       
   
   * - public **<any>**
     - | :ref:`asFlowable <io_realm_DynamicRealm_asFlowable>` ()
       | 
       
       
       Returns an RxJava Flowable that monitors changes to this Realm.
       
       
       
   
   * - public :ref:`DynamicRealmObject <io_realm_DynamicRealmObject>` 
     - | :ref:`createEmbeddedObject <io_realm_DynamicRealm_createEmbeddedObject>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  className, 
       |  :ref:`DynamicRealmObject <io_realm_DynamicRealmObject>`  parentObject, 
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  parentProperty
       | )
       
       
       Instantiates and adds a new embedded object to the Realm.
       
       
       
   
   * - public :ref:`DynamicRealmObject <io_realm_DynamicRealmObject>` 
     - | :ref:`createObject <io_realm_DynamicRealm_createObject>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  className, 
       |  `Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__  primaryKeyValue
       | )
       
       
       Creates an object with a given primary key.
       
       
       
   
   * - public :ref:`DynamicRealmObject <io_realm_DynamicRealmObject>` 
     - | :ref:`createObject <io_realm_DynamicRealm_createObject>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  className
       | )
       
       
       Instantiates and adds a new object to the Realm.
       
       
       
   
   * - public **void**
     - | :ref:`delete <io_realm_DynamicRealm_delete>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  className
       | )
       
       
       Deletes all objects of the specified class from the Realm.
       
       
       
   
   * - public **void**
     - | :ref:`executeTransaction <io_realm_DynamicRealm_executeTransaction>` (
       |  :ref:`DynamicRealm.Transaction <io_realm_DynamicRealm_Transaction>`  transaction
       | )
       
       
       Executes a given transaction on the DynamicRealm.
       
       
       
   
   * - public :ref:`RealmAsyncTask <io_realm_RealmAsyncTask>` 
     - | :ref:`executeTransactionAsync <io_realm_DynamicRealm_executeTransactionAsync>` (
       |  :ref:`DynamicRealm.Transaction <io_realm_DynamicRealm_Transaction>`  transaction, 
       |  :ref:`DynamicRealm.Transaction.OnSuccess <io_realm_DynamicRealm_Transaction_OnSuccess>`  onSuccess, 
       |  :ref:`DynamicRealm.Transaction.OnError <io_realm_DynamicRealm_Transaction_OnError>`  onError
       | )
       
       
       Similar to :ref:`executeTransactionAsync(Transaction) <io_realm_DynamicRealm_executeTransactionAsync_Transaction_>` , but also accepts an OnSuccess and OnError callbacks.
       
       
       
       
       
   
   * - public :ref:`RealmAsyncTask <io_realm_RealmAsyncTask>` 
     - | :ref:`executeTransactionAsync <io_realm_DynamicRealm_executeTransactionAsync>` (
       |  :ref:`DynamicRealm.Transaction <io_realm_DynamicRealm_Transaction>`  transaction, 
       |  :ref:`DynamicRealm.Transaction.OnError <io_realm_DynamicRealm_Transaction_OnError>`  onError
       | )
       
       
       Similar to :ref:`executeTransactionAsync(Transaction) <io_realm_DynamicRealm_executeTransactionAsync_Transaction_>` , but also accepts an OnError callback.
       
       
       
       
       
   
   * - public :ref:`RealmAsyncTask <io_realm_RealmAsyncTask>` 
     - | :ref:`executeTransactionAsync <io_realm_DynamicRealm_executeTransactionAsync>` (
       |  :ref:`DynamicRealm.Transaction <io_realm_DynamicRealm_Transaction>`  transaction, 
       |  :ref:`DynamicRealm.Transaction.OnSuccess <io_realm_DynamicRealm_Transaction_OnSuccess>`  onSuccess
       | )
       
       
       Similar to :ref:`executeTransactionAsync(Transaction) <io_realm_DynamicRealm_executeTransactionAsync_Transaction_>` , but also accepts an OnSuccess callback.
       
       
       
       
       
   
   * - public :ref:`RealmAsyncTask <io_realm_RealmAsyncTask>` 
     - | :ref:`executeTransactionAsync <io_realm_DynamicRealm_executeTransactionAsync>` (
       |  :ref:`DynamicRealm.Transaction <io_realm_DynamicRealm_Transaction>`  transaction
       | )
       
       
       Similar to :ref:`executeTransaction(Transaction) <io_realm_DynamicRealm_executeTransaction_Transaction_>`  but runs asynchronously on a worker thread.
       
       
       
       
       
   
   * - public :ref:`DynamicRealm <io_realm_DynamicRealm>` 
     - | :ref:`freeze <io_realm_DynamicRealm_freeze>` ()
       | 
       
       
       Returns a frozen snapshot of the current Realm.
       
       
       
   
   * - public static :ref:`DynamicRealm <io_realm_DynamicRealm>` 
     - | :ref:`getInstance <io_realm_DynamicRealm_getInstance>` (
       |  :ref:`RealmConfiguration <io_realm_RealmConfiguration>`  configuration
       | )
       
       
       Realm static constructor that returns a dynamic variant of the Realm instance defined by provided :ref:`io.realm.RealmConfiguration <io_realm_RealmConfiguration>` .
       
       
       
       
       
   
   * - public static :ref:`RealmAsyncTask <io_realm_RealmAsyncTask>` 
     - | :ref:`getInstanceAsync <io_realm_DynamicRealm_getInstanceAsync>` (
       |  :ref:`RealmConfiguration <io_realm_RealmConfiguration>`  configuration, 
       |  :ref:`DynamicRealm.Callback <io_realm_DynamicRealm_Callback>`  callback
       | )
       
       
       The creation of the first Realm instance per :ref:`RealmConfiguration <io_realm_RealmConfiguration>`  in a process can take some time as all initialization code need to run at that point (Setting up the Realm, validating schemas and creating initial data).
       
       
       
       
       
   
   * - public :ref:`RealmSchema <io_realm_RealmSchema>` 
     - | :ref:`getSchema <io_realm_DynamicRealm_getSchema>` ()
       | 
       
       
       Returns the mutable schema for this Realm.
       
       
       
   
   * - public **boolean**
     - | :ref:`isEmpty <io_realm_DynamicRealm_isEmpty>` ()
       | 
       
       
       Checks if this :ref:`io.realm.Realm <io_realm_Realm>`  contains any objects.
       
       
       
       
       
   
   * - public **void**
     - | :ref:`removeAllChangeListeners <io_realm_DynamicRealm_removeAllChangeListeners>` ()
       | 
       
       
       Removes all user-defined change listeners.
       
       
       
   
   * - public **void**
     - | :ref:`removeChangeListener <io_realm_DynamicRealm_removeChangeListener>` (
       |  :ref:`io.realm.RealmChangeListener\<io.realm.DynamicRealm> <io_realm_RealmChangeListener>`  listener
       | )
       
       
       Removes the specified change listener.
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - | :ref:`where <io_realm_DynamicRealm_where>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  className
       | )
       
       
       Returns a RealmQuery, which can be used to query the provided class.
       
       
       
   
   


Inherited Methods
=================



- Methods inherited from class `java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ : ``getClass`` , ``hashCode`` , ``equals`` , ``clone`` , ``toString`` , ``notify`` , ``notifyAll`` , ``wait`` , ``wait`` , ``wait`` , ``finalize`` 
- Methods inherited from class **io.realm.BaseRealm**: ``setAutoRefresh`` , ``isAutoRefresh`` , ``refresh`` , ``isInTransaction`` , ``addListener`` , ``removeListener`` , ``asFlowable`` , ``removeAllListeners`` , ``writeCopyTo`` , ``writeEncryptedCopyTo`` , ``waitForChange`` , ``stopWaitForChange`` , ``beginTransaction`` , ``commitTransaction`` , ``cancelTransaction`` , ``freeze`` , ``isFrozen`` , ``getNumberOfActiveVersions`` , ``checkIfValid`` , ``checkAllowQueriesOnUiThread`` , ``checkAllowWritesOnUiThread`` , ``checkIfInTransaction`` , ``checkIfValidAndInTransaction`` , ``getPath`` , ``getConfiguration`` , ``getVersion`` , ``close`` , ``isClosed`` , ``isEmpty`` , ``getSchema`` , ``getSubscriptions`` , ``deleteAll`` , ``migrateRealm`` , ``finalize`` 




Method Detail
=============

.. _addChangeListener:

.. _addChangeListener__:

.. _DynamicRealm_addChangeListener:

.. _DynamicRealm_addChangeListener__:

.. _io_realm_DynamicRealm_addChangeListener:

.. _io_realm_DynamicRealm_addChangeListener__:



addChangeListener
-----------------

.. _io_realm_DynamicRealm_addChangeListener_io_realm_RealmChangeListener_:

.. _io_realm_DynamicRealm_addChangeListener_RealmChangeListener_:

.. _addChangeListener_io_realm_RealmChangeListener_:

.. _addChangeListener_RealmChangeListener_:

.. _DynamicRealm_addChangeListener_io_realm_RealmChangeListener_:

.. _DynamicRealm_addChangeListener_RealmChangeListener_:

.. _io_realm_DynamicRealm_addChangeListener_RealmChangeListener_DynamicRealm__:

.. list-table::
   :header-rows: 1
   
   * - | public **void** :ref:`addChangeListener <io_realm_DynamicRealm_addChangeListener>` (
       |  :ref:`io.realm.RealmChangeListener\<io.realm.DynamicRealm> <io_realm_RealmChangeListener>`  listener
       | )
       
       
       
   
   * - Adds a change listener to the Realm.The listeners will be executed when changes are committed by this or another thread.
       
       Realm instances are cached per thread. For that reason it is important to remember to remove listeners again either using :ref:`removeChangeListener(RealmChangeListener) <io_realm_DynamicRealm_removeChangeListener_RealmChangeListener_>`  or :ref:`removeAllChangeListeners() <io_realm_DynamicRealm_removeAllChangeListeners__>` . Not doing so can cause memory leaks.
       
       
       
       
       
       
       
       
       **Parameters**
       
       - ``listener`` - the change listener.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the change listener is ``null`` .
          
          
          
          
          
       
       
       
       
       
       
       .. seealso::
       
       
          
          - :ref:`io.realm.RealmChangeListener <io_realm_RealmChangeListener>` 
             
             
             
          - :ref:`removeChangeListener(RealmChangeListener) <io_realm_DynamicRealm_removeChangeListener_RealmChangeListener_>` 
             
             
             
          - :ref:`removeAllChangeListeners() <io_realm_DynamicRealm_removeAllChangeListeners__>` 
             
             
             
          - **refresh()**
             
             
             
          
          
          
       
       
   
   


.. _asFlowable:

.. _asFlowable__:

.. _DynamicRealm_asFlowable:

.. _DynamicRealm_asFlowable__:

.. _io_realm_DynamicRealm_asFlowable:

.. _io_realm_DynamicRealm_asFlowable__:



asFlowable
----------

.. list-table::
   :header-rows: 1
   
   * - | public **<any>** :ref:`asFlowable <io_realm_DynamicRealm_asFlowable>` ()
       | 
       
       
       
   
   * - Returns an RxJava Flowable that monitors changes to this Realm. It will emit the current state when subscribed to. Items will continually be emitted as the Realm is updated - ``onComplete``  will never be called.
       
       Items emitted from Realm Flowables are frozen (See **freeze()**. This means that they are immutable and can be read on any thread.
       
       
       
       Realm Flowables always emit items from the thread holding the live Realm. This means that if you need to do further processing, it is recommend to observe the values on a computation scheduler:
       
       
       
       .. code-block:: java
       
          realm.asFlowable()
           .observeOn(Schedulers.computation())
           .map(rxRealm -> doExpensiveWork(rxRealm))
           .observeOn(AndroidSchedulers.mainThread())
           .subscribe( ... );
           
       
       
       
       
       
       If you would like the ``asFlowable()``  to stop emitting items, you can instruct RxJava to only emit only the first item by using the ``first()``  operator:
       
       
       
        
       
       .. code-block:: java
       
          
           realm.asFlowable().first().subscribe( ... ); // You only get the results once
           
       
       
        
       
       
       
       
       
       
       
       
       **Returns**
       
       RxJava Observable that only calls ``onNext`` . It will never call ``onComplete``  or ``OnError`` .
       
       
       
       
       
       
       
       
       **Overrides**
       
       ``asFlowable`` in class **BaseRealm**
       
       
   
   


.. _createEmbeddedObject:

.. _createEmbeddedObject__:

.. _DynamicRealm_createEmbeddedObject:

.. _DynamicRealm_createEmbeddedObject__:

.. _io_realm_DynamicRealm_createEmbeddedObject:

.. _io_realm_DynamicRealm_createEmbeddedObject__:



createEmbeddedObject
--------------------

.. _io_realm_DynamicRealm_createEmbeddedObject_java_lang_String_io_realm_DynamicRealmObject_java_lang_String_:

.. _io_realm_DynamicRealm_createEmbeddedObject_java_lang_String__io_realm_DynamicRealmObject__java_lang_String_:

.. _io_realm_DynamicRealm_createEmbeddedObject_java_lang_String_io_realm_DynamicRealmObject_String_:

.. _io_realm_DynamicRealm_createEmbeddedObject_java_lang_String__io_realm_DynamicRealmObject__String_:

.. _io_realm_DynamicRealm_createEmbeddedObject_java_lang_String_DynamicRealmObject_java_lang_String_:

.. _io_realm_DynamicRealm_createEmbeddedObject_java_lang_String__DynamicRealmObject__java_lang_String_:

.. _io_realm_DynamicRealm_createEmbeddedObject_java_lang_String_DynamicRealmObject_String_:

.. _io_realm_DynamicRealm_createEmbeddedObject_java_lang_String__DynamicRealmObject__String_:

.. _io_realm_DynamicRealm_createEmbeddedObject_String_io_realm_DynamicRealmObject_java_lang_String_:

.. _io_realm_DynamicRealm_createEmbeddedObject_String__io_realm_DynamicRealmObject__java_lang_String_:

.. _io_realm_DynamicRealm_createEmbeddedObject_String_io_realm_DynamicRealmObject_String_:

.. _io_realm_DynamicRealm_createEmbeddedObject_String__io_realm_DynamicRealmObject__String_:

.. _io_realm_DynamicRealm_createEmbeddedObject_String_DynamicRealmObject_java_lang_String_:

.. _io_realm_DynamicRealm_createEmbeddedObject_String__DynamicRealmObject__java_lang_String_:

.. _io_realm_DynamicRealm_createEmbeddedObject_String_DynamicRealmObject_String_:

.. _io_realm_DynamicRealm_createEmbeddedObject_String__DynamicRealmObject__String_:

.. _createEmbeddedObject_java_lang_String_io_realm_DynamicRealmObject_java_lang_String_:

.. _createEmbeddedObject_java_lang_String__io_realm_DynamicRealmObject__java_lang_String_:

.. _createEmbeddedObject_java_lang_String_io_realm_DynamicRealmObject_String_:

.. _createEmbeddedObject_java_lang_String__io_realm_DynamicRealmObject__String_:

.. _createEmbeddedObject_java_lang_String_DynamicRealmObject_java_lang_String_:

.. _createEmbeddedObject_java_lang_String__DynamicRealmObject__java_lang_String_:

.. _createEmbeddedObject_java_lang_String_DynamicRealmObject_String_:

.. _createEmbeddedObject_java_lang_String__DynamicRealmObject__String_:

.. _createEmbeddedObject_String_io_realm_DynamicRealmObject_java_lang_String_:

.. _createEmbeddedObject_String__io_realm_DynamicRealmObject__java_lang_String_:

.. _createEmbeddedObject_String_io_realm_DynamicRealmObject_String_:

.. _createEmbeddedObject_String__io_realm_DynamicRealmObject__String_:

.. _createEmbeddedObject_String_DynamicRealmObject_java_lang_String_:

.. _createEmbeddedObject_String__DynamicRealmObject__java_lang_String_:

.. _createEmbeddedObject_String_DynamicRealmObject_String_:

.. _createEmbeddedObject_String__DynamicRealmObject__String_:

.. _DynamicRealm_createEmbeddedObject_java_lang_String_io_realm_DynamicRealmObject_java_lang_String_:

.. _DynamicRealm_createEmbeddedObject_java_lang_String__io_realm_DynamicRealmObject__java_lang_String_:

.. _DynamicRealm_createEmbeddedObject_java_lang_String_io_realm_DynamicRealmObject_String_:

.. _DynamicRealm_createEmbeddedObject_java_lang_String__io_realm_DynamicRealmObject__String_:

.. _DynamicRealm_createEmbeddedObject_java_lang_String_DynamicRealmObject_java_lang_String_:

.. _DynamicRealm_createEmbeddedObject_java_lang_String__DynamicRealmObject__java_lang_String_:

.. _DynamicRealm_createEmbeddedObject_java_lang_String_DynamicRealmObject_String_:

.. _DynamicRealm_createEmbeddedObject_java_lang_String__DynamicRealmObject__String_:

.. _DynamicRealm_createEmbeddedObject_String_io_realm_DynamicRealmObject_java_lang_String_:

.. _DynamicRealm_createEmbeddedObject_String__io_realm_DynamicRealmObject__java_lang_String_:

.. _DynamicRealm_createEmbeddedObject_String_io_realm_DynamicRealmObject_String_:

.. _DynamicRealm_createEmbeddedObject_String__io_realm_DynamicRealmObject__String_:

.. _DynamicRealm_createEmbeddedObject_String_DynamicRealmObject_java_lang_String_:

.. _DynamicRealm_createEmbeddedObject_String__DynamicRealmObject__java_lang_String_:

.. _DynamicRealm_createEmbeddedObject_String_DynamicRealmObject_String_:

.. _DynamicRealm_createEmbeddedObject_String__DynamicRealmObject__String_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`DynamicRealmObject <io_realm_DynamicRealmObject>`  :ref:`createEmbeddedObject <io_realm_DynamicRealm_createEmbeddedObject>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  className, 
       |  :ref:`DynamicRealmObject <io_realm_DynamicRealmObject>`  parentObject, 
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  parentProperty
       | )
       
       
       
   
   * - Instantiates and adds a new embedded object to the Realm.This method should only be used to create objects of types marked as embedded.
       
       
       
       
       
       
       **Parameters**
       
       - ``className`` - the class name of the object to create.
          
          
          
       - ``parentObject`` - The parent object which should hold a reference to the embedded object. If the parent property is a list the embedded object will be added to the end of that list.
          
          
          
       - ``parentProperty`` - the property in the parent class which holds the reference.
          
          
          
       
       
       
       
       **Returns**
       
       the newly created embedded object.
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if ``clazz``  is not an embedded class or if the property in the parent class cannot hold objects of the appropriate type.
          
          
          
          
          
       
       
       
       
       
       
       .. seealso::
       
       
          
          - :ref:`RealmClass.embedded() <io_realm_annotations_RealmClass_embedded__>` 
             
             
             
          
          
          
       
       
   
   


.. _createObject:

.. _createObject__:

.. _DynamicRealm_createObject:

.. _DynamicRealm_createObject__:

.. _io_realm_DynamicRealm_createObject:

.. _io_realm_DynamicRealm_createObject__:



createObject
------------

.. _io_realm_DynamicRealm_createObject_java_lang_String_java_lang_Object_:

.. _io_realm_DynamicRealm_createObject_java_lang_String__java_lang_Object_:

.. _io_realm_DynamicRealm_createObject_java_lang_String_Object_:

.. _io_realm_DynamicRealm_createObject_java_lang_String__Object_:

.. _io_realm_DynamicRealm_createObject_String_java_lang_Object_:

.. _io_realm_DynamicRealm_createObject_String__java_lang_Object_:

.. _io_realm_DynamicRealm_createObject_String_Object_:

.. _io_realm_DynamicRealm_createObject_String__Object_:

.. _createObject_java_lang_String_java_lang_Object_:

.. _createObject_java_lang_String__java_lang_Object_:

.. _createObject_java_lang_String_Object_:

.. _createObject_java_lang_String__Object_:

.. _createObject_String_java_lang_Object_:

.. _createObject_String__java_lang_Object_:

.. _createObject_String_Object_:

.. _createObject_String__Object_:

.. _DynamicRealm_createObject_java_lang_String_java_lang_Object_:

.. _DynamicRealm_createObject_java_lang_String__java_lang_Object_:

.. _DynamicRealm_createObject_java_lang_String_Object_:

.. _DynamicRealm_createObject_java_lang_String__Object_:

.. _DynamicRealm_createObject_String_java_lang_Object_:

.. _DynamicRealm_createObject_String__java_lang_Object_:

.. _DynamicRealm_createObject_String_Object_:

.. _DynamicRealm_createObject_String__Object_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`DynamicRealmObject <io_realm_DynamicRealmObject>`  :ref:`createObject <io_realm_DynamicRealm_createObject>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  className, 
       |  `Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__  primaryKeyValue
       | )
       
       
       
   
   * - Creates an object with a given primary key. Classes without a primary key defined must use :ref:`createObject(String) <io_realm_DynamicRealm_createObject_String_>` } instead.
       
       
       
       
       
       
       
       
       **Returns**
       
       the new object. All fields will have default values for their type, except for the primary key field which will have the provided value.
       
       
       
       
       **Throws**
       
       - :ref:`RealmException <io_realm_exceptions_RealmException>`  - if object could not be created due to the primary key being invalid.
          
          
          
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if the model clazz does not have a primary key defined.
          
          
          
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the ``primaryKeyValue``  doesn't have a value that can be converted to the expected value.
          
          
          
          
          
       
       
       
       
       
   
   
.. _io_realm_DynamicRealm_createObject_java_lang_String_:

.. _io_realm_DynamicRealm_createObject_String_:

.. _createObject_java_lang_String_:

.. _createObject_String_:

.. _DynamicRealm_createObject_java_lang_String_:

.. _DynamicRealm_createObject_String_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`DynamicRealmObject <io_realm_DynamicRealmObject>`  :ref:`createObject <io_realm_DynamicRealm_createObject>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  className
       | )
       
       
       
   
   * - Instantiates and adds a new object to the Realm.
       
       
       
       
       **Parameters**
       
       - ``className`` - the class name of the object to create.
          
          
          
       
       
       
       
       **Returns**
       
       the new object.
       
       
       
       
       **Throws**
       
       - :ref:`RealmException <io_realm_exceptions_RealmException>`  - if the object could not be created.
          
          
          
       
       
       
       
       
   
   


.. _delete:

.. _delete__:

.. _DynamicRealm_delete:

.. _DynamicRealm_delete__:

.. _io_realm_DynamicRealm_delete:

.. _io_realm_DynamicRealm_delete__:



delete
------

.. _io_realm_DynamicRealm_delete_java_lang_String_:

.. _io_realm_DynamicRealm_delete_String_:

.. _delete_java_lang_String_:

.. _delete_String_:

.. _DynamicRealm_delete_java_lang_String_:

.. _DynamicRealm_delete_String_:

.. list-table::
   :header-rows: 1
   
   * - | public **void** :ref:`delete <io_realm_DynamicRealm_delete>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  className
       | )
       
       
       
   
   * - Deletes all objects of the specified class from the Realm.
       
       
       
       
       **Parameters**
       
       - ``className`` - the class for which all objects should be removed.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if the Realm is closed or called from an incorrect thread.
          
          
          
       
       
       
       
       
   
   


.. _executeTransaction:

.. _executeTransaction__:

.. _DynamicRealm_executeTransaction:

.. _DynamicRealm_executeTransaction__:

.. _io_realm_DynamicRealm_executeTransaction:

.. _io_realm_DynamicRealm_executeTransaction__:



executeTransaction
------------------

.. _io_realm_DynamicRealm_executeTransaction_io_realm_DynamicRealm_Transaction_:

.. _io_realm_DynamicRealm_executeTransaction_Transaction_:

.. _io_realm_DynamicRealm_executeTransaction_DynamicRealm_Transaction_:

.. _executeTransaction_io_realm_DynamicRealm_Transaction_:

.. _executeTransaction_Transaction_:

.. _executeTransaction_DynamicRealm_Transaction_:

.. _DynamicRealm_executeTransaction_io_realm_DynamicRealm_Transaction_:

.. _DynamicRealm_executeTransaction_Transaction_:

.. _DynamicRealm_executeTransaction_DynamicRealm_Transaction_:

.. list-table::
   :header-rows: 1
   
   * - | public **void** :ref:`executeTransaction <io_realm_DynamicRealm_executeTransaction>` (
       |  :ref:`DynamicRealm.Transaction <io_realm_DynamicRealm_Transaction>`  transaction
       | )
       
       
       
   
   * - Executes a given transaction on the DynamicRealm. **beginTransaction()** and **commitTransaction()** will be called automatically. If any exception is thrown during the transaction **cancelTransaction()** will be called instead of **commitTransaction()**.
       
       Calling this method from the UI thread will throw a :ref:`RealmException <io_realm_exceptions_RealmException>` . Doing so may result in a drop of frames or even ANRs. We recommend calling this method from a non-UI thread or using :ref:`executeTransactionAsync(Transaction) <io_realm_DynamicRealm_executeTransactionAsync_Transaction_>`  instead.
       
       
       
       
       
       
       
       
       **Parameters**
       
       - ``transaction`` - :ref:`Transaction <io_realm_DynamicRealm_Transaction>`  to execute.
          
          
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the ``transaction``  is ``null`` .
          
          
          
          
          
       - :ref:`RealmException <io_realm_exceptions_RealmException>`  - if called from the UI thread, unless an explicit opt-in has been declared in :ref:`RealmConfiguration.Builder.allowWritesOnUiThread(boolean) <io_realm_RealmConfiguration_Builder_allowWritesOnUiThread_boolean_>` .
          
          
          
          
          
       
       
       
       
       
   
   


.. _executeTransactionAsync:

.. _executeTransactionAsync__:

.. _DynamicRealm_executeTransactionAsync:

.. _DynamicRealm_executeTransactionAsync__:

.. _io_realm_DynamicRealm_executeTransactionAsync:

.. _io_realm_DynamicRealm_executeTransactionAsync__:



executeTransactionAsync
-----------------------

.. _io_realm_DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction_io_realm_DynamicRealm_Transaction_OnSuccess_io_realm_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction__io_realm_DynamicRealm_Transaction_OnSuccess__io_realm_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction_io_realm_DynamicRealm_Transaction_OnSuccess_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction__io_realm_DynamicRealm_Transaction_OnSuccess__OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction_io_realm_DynamicRealm_Transaction_OnSuccess_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction__io_realm_DynamicRealm_Transaction_OnSuccess__DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction_OnSuccess_io_realm_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction__OnSuccess__io_realm_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction_OnSuccess_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction__OnSuccess__OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction_OnSuccess_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction__OnSuccess__DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction_DynamicRealm_Transaction_OnSuccess_io_realm_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction__DynamicRealm_Transaction_OnSuccess__io_realm_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction_DynamicRealm_Transaction_OnSuccess_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction__DynamicRealm_Transaction_OnSuccess__OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction_DynamicRealm_Transaction_OnSuccess_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction__DynamicRealm_Transaction_OnSuccess__DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_Transaction_io_realm_DynamicRealm_Transaction_OnSuccess_io_realm_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_Transaction__io_realm_DynamicRealm_Transaction_OnSuccess__io_realm_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_Transaction_io_realm_DynamicRealm_Transaction_OnSuccess_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_Transaction__io_realm_DynamicRealm_Transaction_OnSuccess__OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_Transaction_io_realm_DynamicRealm_Transaction_OnSuccess_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_Transaction__io_realm_DynamicRealm_Transaction_OnSuccess__DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_Transaction_OnSuccess_io_realm_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_Transaction__OnSuccess__io_realm_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_Transaction_OnSuccess_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_Transaction__OnSuccess__OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_Transaction_OnSuccess_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_Transaction__OnSuccess__DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_Transaction_DynamicRealm_Transaction_OnSuccess_io_realm_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_Transaction__DynamicRealm_Transaction_OnSuccess__io_realm_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_Transaction_DynamicRealm_Transaction_OnSuccess_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_Transaction__DynamicRealm_Transaction_OnSuccess__OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_Transaction_DynamicRealm_Transaction_OnSuccess_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_Transaction__DynamicRealm_Transaction_OnSuccess__DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction_io_realm_DynamicRealm_Transaction_OnSuccess_io_realm_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction__io_realm_DynamicRealm_Transaction_OnSuccess__io_realm_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction_io_realm_DynamicRealm_Transaction_OnSuccess_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction__io_realm_DynamicRealm_Transaction_OnSuccess__OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction_io_realm_DynamicRealm_Transaction_OnSuccess_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction__io_realm_DynamicRealm_Transaction_OnSuccess__DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction_OnSuccess_io_realm_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction__OnSuccess__io_realm_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction_OnSuccess_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction__OnSuccess__OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction_OnSuccess_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction__OnSuccess__DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction_DynamicRealm_Transaction_OnSuccess_io_realm_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction__DynamicRealm_Transaction_OnSuccess__io_realm_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction_DynamicRealm_Transaction_OnSuccess_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction__DynamicRealm_Transaction_OnSuccess__OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction_DynamicRealm_Transaction_OnSuccess_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction__DynamicRealm_Transaction_OnSuccess__DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_io_realm_DynamicRealm_Transaction_io_realm_DynamicRealm_Transaction_OnSuccess_io_realm_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_io_realm_DynamicRealm_Transaction__io_realm_DynamicRealm_Transaction_OnSuccess__io_realm_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_io_realm_DynamicRealm_Transaction_io_realm_DynamicRealm_Transaction_OnSuccess_OnError_:

.. _executeTransactionAsync_io_realm_DynamicRealm_Transaction__io_realm_DynamicRealm_Transaction_OnSuccess__OnError_:

.. _executeTransactionAsync_io_realm_DynamicRealm_Transaction_io_realm_DynamicRealm_Transaction_OnSuccess_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_io_realm_DynamicRealm_Transaction__io_realm_DynamicRealm_Transaction_OnSuccess__DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_io_realm_DynamicRealm_Transaction_OnSuccess_io_realm_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_io_realm_DynamicRealm_Transaction__OnSuccess__io_realm_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_io_realm_DynamicRealm_Transaction_OnSuccess_OnError_:

.. _executeTransactionAsync_io_realm_DynamicRealm_Transaction__OnSuccess__OnError_:

.. _executeTransactionAsync_io_realm_DynamicRealm_Transaction_OnSuccess_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_io_realm_DynamicRealm_Transaction__OnSuccess__DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_io_realm_DynamicRealm_Transaction_DynamicRealm_Transaction_OnSuccess_io_realm_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_io_realm_DynamicRealm_Transaction__DynamicRealm_Transaction_OnSuccess__io_realm_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_io_realm_DynamicRealm_Transaction_DynamicRealm_Transaction_OnSuccess_OnError_:

.. _executeTransactionAsync_io_realm_DynamicRealm_Transaction__DynamicRealm_Transaction_OnSuccess__OnError_:

.. _executeTransactionAsync_io_realm_DynamicRealm_Transaction_DynamicRealm_Transaction_OnSuccess_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_io_realm_DynamicRealm_Transaction__DynamicRealm_Transaction_OnSuccess__DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_Transaction_io_realm_DynamicRealm_Transaction_OnSuccess_io_realm_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_Transaction__io_realm_DynamicRealm_Transaction_OnSuccess__io_realm_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_Transaction_io_realm_DynamicRealm_Transaction_OnSuccess_OnError_:

.. _executeTransactionAsync_Transaction__io_realm_DynamicRealm_Transaction_OnSuccess__OnError_:

.. _executeTransactionAsync_Transaction_io_realm_DynamicRealm_Transaction_OnSuccess_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_Transaction__io_realm_DynamicRealm_Transaction_OnSuccess__DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_Transaction_OnSuccess_io_realm_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_Transaction__OnSuccess__io_realm_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_Transaction_OnSuccess_OnError_:

.. _executeTransactionAsync_Transaction__OnSuccess__OnError_:

.. _executeTransactionAsync_Transaction_OnSuccess_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_Transaction__OnSuccess__DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_Transaction_DynamicRealm_Transaction_OnSuccess_io_realm_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_Transaction__DynamicRealm_Transaction_OnSuccess__io_realm_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_Transaction_DynamicRealm_Transaction_OnSuccess_OnError_:

.. _executeTransactionAsync_Transaction__DynamicRealm_Transaction_OnSuccess__OnError_:

.. _executeTransactionAsync_Transaction_DynamicRealm_Transaction_OnSuccess_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_Transaction__DynamicRealm_Transaction_OnSuccess__DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_DynamicRealm_Transaction_io_realm_DynamicRealm_Transaction_OnSuccess_io_realm_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_DynamicRealm_Transaction__io_realm_DynamicRealm_Transaction_OnSuccess__io_realm_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_DynamicRealm_Transaction_io_realm_DynamicRealm_Transaction_OnSuccess_OnError_:

.. _executeTransactionAsync_DynamicRealm_Transaction__io_realm_DynamicRealm_Transaction_OnSuccess__OnError_:

.. _executeTransactionAsync_DynamicRealm_Transaction_io_realm_DynamicRealm_Transaction_OnSuccess_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_DynamicRealm_Transaction__io_realm_DynamicRealm_Transaction_OnSuccess__DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_DynamicRealm_Transaction_OnSuccess_io_realm_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_DynamicRealm_Transaction__OnSuccess__io_realm_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_DynamicRealm_Transaction_OnSuccess_OnError_:

.. _executeTransactionAsync_DynamicRealm_Transaction__OnSuccess__OnError_:

.. _executeTransactionAsync_DynamicRealm_Transaction_OnSuccess_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_DynamicRealm_Transaction__OnSuccess__DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_DynamicRealm_Transaction_DynamicRealm_Transaction_OnSuccess_io_realm_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_DynamicRealm_Transaction__DynamicRealm_Transaction_OnSuccess__io_realm_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_DynamicRealm_Transaction_DynamicRealm_Transaction_OnSuccess_OnError_:

.. _executeTransactionAsync_DynamicRealm_Transaction__DynamicRealm_Transaction_OnSuccess__OnError_:

.. _executeTransactionAsync_DynamicRealm_Transaction_DynamicRealm_Transaction_OnSuccess_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_DynamicRealm_Transaction__DynamicRealm_Transaction_OnSuccess__DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction_io_realm_DynamicRealm_Transaction_OnSuccess_io_realm_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction__io_realm_DynamicRealm_Transaction_OnSuccess__io_realm_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction_io_realm_DynamicRealm_Transaction_OnSuccess_OnError_:

.. _DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction__io_realm_DynamicRealm_Transaction_OnSuccess__OnError_:

.. _DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction_io_realm_DynamicRealm_Transaction_OnSuccess_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction__io_realm_DynamicRealm_Transaction_OnSuccess__DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction_OnSuccess_io_realm_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction__OnSuccess__io_realm_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction_OnSuccess_OnError_:

.. _DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction__OnSuccess__OnError_:

.. _DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction_OnSuccess_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction__OnSuccess__DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction_DynamicRealm_Transaction_OnSuccess_io_realm_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction__DynamicRealm_Transaction_OnSuccess__io_realm_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction_DynamicRealm_Transaction_OnSuccess_OnError_:

.. _DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction__DynamicRealm_Transaction_OnSuccess__OnError_:

.. _DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction_DynamicRealm_Transaction_OnSuccess_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction__DynamicRealm_Transaction_OnSuccess__DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_Transaction_io_realm_DynamicRealm_Transaction_OnSuccess_io_realm_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_Transaction__io_realm_DynamicRealm_Transaction_OnSuccess__io_realm_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_Transaction_io_realm_DynamicRealm_Transaction_OnSuccess_OnError_:

.. _DynamicRealm_executeTransactionAsync_Transaction__io_realm_DynamicRealm_Transaction_OnSuccess__OnError_:

.. _DynamicRealm_executeTransactionAsync_Transaction_io_realm_DynamicRealm_Transaction_OnSuccess_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_Transaction__io_realm_DynamicRealm_Transaction_OnSuccess__DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_Transaction_OnSuccess_io_realm_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_Transaction__OnSuccess__io_realm_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_Transaction_OnSuccess_OnError_:

.. _DynamicRealm_executeTransactionAsync_Transaction__OnSuccess__OnError_:

.. _DynamicRealm_executeTransactionAsync_Transaction_OnSuccess_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_Transaction__OnSuccess__DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_Transaction_DynamicRealm_Transaction_OnSuccess_io_realm_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_Transaction__DynamicRealm_Transaction_OnSuccess__io_realm_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_Transaction_DynamicRealm_Transaction_OnSuccess_OnError_:

.. _DynamicRealm_executeTransactionAsync_Transaction__DynamicRealm_Transaction_OnSuccess__OnError_:

.. _DynamicRealm_executeTransactionAsync_Transaction_DynamicRealm_Transaction_OnSuccess_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_Transaction__DynamicRealm_Transaction_OnSuccess__DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction_io_realm_DynamicRealm_Transaction_OnSuccess_io_realm_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction__io_realm_DynamicRealm_Transaction_OnSuccess__io_realm_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction_io_realm_DynamicRealm_Transaction_OnSuccess_OnError_:

.. _DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction__io_realm_DynamicRealm_Transaction_OnSuccess__OnError_:

.. _DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction_io_realm_DynamicRealm_Transaction_OnSuccess_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction__io_realm_DynamicRealm_Transaction_OnSuccess__DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction_OnSuccess_io_realm_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction__OnSuccess__io_realm_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction_OnSuccess_OnError_:

.. _DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction__OnSuccess__OnError_:

.. _DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction_OnSuccess_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction__OnSuccess__DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction_DynamicRealm_Transaction_OnSuccess_io_realm_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction__DynamicRealm_Transaction_OnSuccess__io_realm_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction_DynamicRealm_Transaction_OnSuccess_OnError_:

.. _DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction__DynamicRealm_Transaction_OnSuccess__OnError_:

.. _DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction_DynamicRealm_Transaction_OnSuccess_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction__DynamicRealm_Transaction_OnSuccess__DynamicRealm_Transaction_OnError_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmAsyncTask <io_realm_RealmAsyncTask>`  :ref:`executeTransactionAsync <io_realm_DynamicRealm_executeTransactionAsync>` (
       |  :ref:`DynamicRealm.Transaction <io_realm_DynamicRealm_Transaction>`  transaction, 
       |  :ref:`DynamicRealm.Transaction.OnSuccess <io_realm_DynamicRealm_Transaction_OnSuccess>`  onSuccess, 
       |  :ref:`DynamicRealm.Transaction.OnError <io_realm_DynamicRealm_Transaction_OnError>`  onError
       | )
       
       
       
   
   * - Similar to :ref:`executeTransactionAsync(Transaction) <io_realm_DynamicRealm_executeTransactionAsync_Transaction_>` , but also accepts an OnSuccess and OnError callbacks.
       
       
       
       
       
       
       **Parameters**
       
       - ``transaction`` - :ref:`Transaction <io_realm_DynamicRealm_Transaction>`  to execute.
          
          
          
          
          
       - ``onSuccess`` - callback invoked when the transaction succeeds.
          
          
          
       - ``onError`` - callback invoked when the transaction fails.
          
          
          
       
       
       
       
       **Returns**
       
       a :ref:`RealmAsyncTask <io_realm_RealmAsyncTask>`  representing a cancellable task.
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the ``transaction``  is ``null`` , or if the realm is opened from another thread.
          
          
          
          
          
       
       
       
       
       
   
   
.. _io_realm_DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction_io_realm_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction__io_realm_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction__OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction__DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_Transaction_io_realm_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_Transaction__io_realm_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_Transaction__OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_Transaction_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_Transaction__DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction_io_realm_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction__io_realm_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction__OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction_DynamicRealm_Transaction_OnError_:

.. _io_realm_DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction__DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_io_realm_DynamicRealm_Transaction_io_realm_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_io_realm_DynamicRealm_Transaction__io_realm_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_io_realm_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_io_realm_DynamicRealm_Transaction__OnError_:

.. _executeTransactionAsync_io_realm_DynamicRealm_Transaction_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_io_realm_DynamicRealm_Transaction__DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_Transaction_io_realm_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_Transaction__io_realm_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_Transaction_OnError_:

.. _executeTransactionAsync_Transaction__OnError_:

.. _executeTransactionAsync_Transaction_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_Transaction__DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_DynamicRealm_Transaction_io_realm_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_DynamicRealm_Transaction__io_realm_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_DynamicRealm_Transaction__OnError_:

.. _executeTransactionAsync_DynamicRealm_Transaction_DynamicRealm_Transaction_OnError_:

.. _executeTransactionAsync_DynamicRealm_Transaction__DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction_io_realm_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction__io_realm_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction__OnError_:

.. _DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction__DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_Transaction_io_realm_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_Transaction__io_realm_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_Transaction__OnError_:

.. _DynamicRealm_executeTransactionAsync_Transaction_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_Transaction__DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction_io_realm_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction__io_realm_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction__OnError_:

.. _DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction_DynamicRealm_Transaction_OnError_:

.. _DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction__DynamicRealm_Transaction_OnError_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmAsyncTask <io_realm_RealmAsyncTask>`  :ref:`executeTransactionAsync <io_realm_DynamicRealm_executeTransactionAsync>` (
       |  :ref:`DynamicRealm.Transaction <io_realm_DynamicRealm_Transaction>`  transaction, 
       |  :ref:`DynamicRealm.Transaction.OnError <io_realm_DynamicRealm_Transaction_OnError>`  onError
       | )
       
       
       
   
   * - Similar to :ref:`executeTransactionAsync(Transaction) <io_realm_DynamicRealm_executeTransactionAsync_Transaction_>` , but also accepts an OnError callback.
       
       
       
       
       
       
       **Parameters**
       
       - ``transaction`` - :ref:`Transaction <io_realm_DynamicRealm_Transaction>`  to execute.
          
          
          
          
          
       - ``onError`` - callback invoked when the transaction fails.
          
          
          
       
       
       
       
       **Returns**
       
       a :ref:`RealmAsyncTask <io_realm_RealmAsyncTask>`  representing a cancellable task.
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the ``transaction``  is ``null`` , or if the realm is opened from another thread.
          
          
          
          
          
       
       
       
       
       
   
   
.. _io_realm_DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction_io_realm_DynamicRealm_Transaction_OnSuccess_:

.. _io_realm_DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction__io_realm_DynamicRealm_Transaction_OnSuccess_:

.. _io_realm_DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction_OnSuccess_:

.. _io_realm_DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction__OnSuccess_:

.. _io_realm_DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction_DynamicRealm_Transaction_OnSuccess_:

.. _io_realm_DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction__DynamicRealm_Transaction_OnSuccess_:

.. _io_realm_DynamicRealm_executeTransactionAsync_Transaction_io_realm_DynamicRealm_Transaction_OnSuccess_:

.. _io_realm_DynamicRealm_executeTransactionAsync_Transaction__io_realm_DynamicRealm_Transaction_OnSuccess_:

.. _io_realm_DynamicRealm_executeTransactionAsync_Transaction_OnSuccess_:

.. _io_realm_DynamicRealm_executeTransactionAsync_Transaction__OnSuccess_:

.. _io_realm_DynamicRealm_executeTransactionAsync_Transaction_DynamicRealm_Transaction_OnSuccess_:

.. _io_realm_DynamicRealm_executeTransactionAsync_Transaction__DynamicRealm_Transaction_OnSuccess_:

.. _io_realm_DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction_io_realm_DynamicRealm_Transaction_OnSuccess_:

.. _io_realm_DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction__io_realm_DynamicRealm_Transaction_OnSuccess_:

.. _io_realm_DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction_OnSuccess_:

.. _io_realm_DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction__OnSuccess_:

.. _io_realm_DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction_DynamicRealm_Transaction_OnSuccess_:

.. _io_realm_DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction__DynamicRealm_Transaction_OnSuccess_:

.. _executeTransactionAsync_io_realm_DynamicRealm_Transaction_io_realm_DynamicRealm_Transaction_OnSuccess_:

.. _executeTransactionAsync_io_realm_DynamicRealm_Transaction__io_realm_DynamicRealm_Transaction_OnSuccess_:

.. _executeTransactionAsync_io_realm_DynamicRealm_Transaction_OnSuccess_:

.. _executeTransactionAsync_io_realm_DynamicRealm_Transaction__OnSuccess_:

.. _executeTransactionAsync_io_realm_DynamicRealm_Transaction_DynamicRealm_Transaction_OnSuccess_:

.. _executeTransactionAsync_io_realm_DynamicRealm_Transaction__DynamicRealm_Transaction_OnSuccess_:

.. _executeTransactionAsync_Transaction_io_realm_DynamicRealm_Transaction_OnSuccess_:

.. _executeTransactionAsync_Transaction__io_realm_DynamicRealm_Transaction_OnSuccess_:

.. _executeTransactionAsync_Transaction_OnSuccess_:

.. _executeTransactionAsync_Transaction__OnSuccess_:

.. _executeTransactionAsync_Transaction_DynamicRealm_Transaction_OnSuccess_:

.. _executeTransactionAsync_Transaction__DynamicRealm_Transaction_OnSuccess_:

.. _executeTransactionAsync_DynamicRealm_Transaction_io_realm_DynamicRealm_Transaction_OnSuccess_:

.. _executeTransactionAsync_DynamicRealm_Transaction__io_realm_DynamicRealm_Transaction_OnSuccess_:

.. _executeTransactionAsync_DynamicRealm_Transaction_OnSuccess_:

.. _executeTransactionAsync_DynamicRealm_Transaction__OnSuccess_:

.. _executeTransactionAsync_DynamicRealm_Transaction_DynamicRealm_Transaction_OnSuccess_:

.. _executeTransactionAsync_DynamicRealm_Transaction__DynamicRealm_Transaction_OnSuccess_:

.. _DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction_io_realm_DynamicRealm_Transaction_OnSuccess_:

.. _DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction__io_realm_DynamicRealm_Transaction_OnSuccess_:

.. _DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction_OnSuccess_:

.. _DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction__OnSuccess_:

.. _DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction_DynamicRealm_Transaction_OnSuccess_:

.. _DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction__DynamicRealm_Transaction_OnSuccess_:

.. _DynamicRealm_executeTransactionAsync_Transaction_io_realm_DynamicRealm_Transaction_OnSuccess_:

.. _DynamicRealm_executeTransactionAsync_Transaction__io_realm_DynamicRealm_Transaction_OnSuccess_:

.. _DynamicRealm_executeTransactionAsync_Transaction_OnSuccess_:

.. _DynamicRealm_executeTransactionAsync_Transaction__OnSuccess_:

.. _DynamicRealm_executeTransactionAsync_Transaction_DynamicRealm_Transaction_OnSuccess_:

.. _DynamicRealm_executeTransactionAsync_Transaction__DynamicRealm_Transaction_OnSuccess_:

.. _DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction_io_realm_DynamicRealm_Transaction_OnSuccess_:

.. _DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction__io_realm_DynamicRealm_Transaction_OnSuccess_:

.. _DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction_OnSuccess_:

.. _DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction__OnSuccess_:

.. _DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction_DynamicRealm_Transaction_OnSuccess_:

.. _DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction__DynamicRealm_Transaction_OnSuccess_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmAsyncTask <io_realm_RealmAsyncTask>`  :ref:`executeTransactionAsync <io_realm_DynamicRealm_executeTransactionAsync>` (
       |  :ref:`DynamicRealm.Transaction <io_realm_DynamicRealm_Transaction>`  transaction, 
       |  :ref:`DynamicRealm.Transaction.OnSuccess <io_realm_DynamicRealm_Transaction_OnSuccess>`  onSuccess
       | )
       
       
       
   
   * - Similar to :ref:`executeTransactionAsync(Transaction) <io_realm_DynamicRealm_executeTransactionAsync_Transaction_>` , but also accepts an OnSuccess callback.
       
       
       
       
       
       
       **Parameters**
       
       - ``transaction`` - :ref:`Transaction <io_realm_DynamicRealm_Transaction>`  to execute.
          
          
          
          
          
       - ``onSuccess`` - callback invoked when the transaction succeeds.
          
          
          
       
       
       
       
       **Returns**
       
       a :ref:`RealmAsyncTask <io_realm_RealmAsyncTask>`  representing a cancellable task.
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the ``transaction``  is ``null`` , or if the realm is opened from another thread.
          
          
          
          
          
       
       
       
       
       
   
   
.. _io_realm_DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction_:

.. _io_realm_DynamicRealm_executeTransactionAsync_Transaction_:

.. _io_realm_DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction_:

.. _executeTransactionAsync_io_realm_DynamicRealm_Transaction_:

.. _executeTransactionAsync_Transaction_:

.. _executeTransactionAsync_DynamicRealm_Transaction_:

.. _DynamicRealm_executeTransactionAsync_io_realm_DynamicRealm_Transaction_:

.. _DynamicRealm_executeTransactionAsync_Transaction_:

.. _DynamicRealm_executeTransactionAsync_DynamicRealm_Transaction_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmAsyncTask <io_realm_RealmAsyncTask>`  :ref:`executeTransactionAsync <io_realm_DynamicRealm_executeTransactionAsync>` (
       |  :ref:`DynamicRealm.Transaction <io_realm_DynamicRealm_Transaction>`  transaction
       | )
       
       
       
   
   * - Similar to :ref:`executeTransaction(Transaction) <io_realm_DynamicRealm_executeTransaction_Transaction_>`  but runs asynchronously on a worker thread.
       
       
       
       
       
       
       **Parameters**
       
       - ``transaction`` - :ref:`Transaction <io_realm_DynamicRealm_Transaction>`  to execute.
          
          
          
          
          
       
       
       
       
       **Returns**
       
       a :ref:`RealmAsyncTask <io_realm_RealmAsyncTask>`  representing a cancellable task.
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the ``transaction``  is ``null`` , or if the Realm is opened from another thread.
          
          
          
          
          
       
       
       
       
       
   
   


.. _freeze:

.. _freeze__:

.. _DynamicRealm_freeze:

.. _DynamicRealm_freeze__:

.. _io_realm_DynamicRealm_freeze:

.. _io_realm_DynamicRealm_freeze__:



freeze
------

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`DynamicRealm <io_realm_DynamicRealm>`  :ref:`freeze <io_realm_DynamicRealm_freeze>` ()
       | 
       
       
       
   
   * - Returns a frozen snapshot of the current Realm. This Realm can be read and queried from any thread without throwing an `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__ . A frozen Realm has its own lifecycle and can be closed by calling **close()**, but fully closing the Realm that spawned the frozen copy will also close the frozen Realm.
       
       Frozen data can be queried as normal, but trying to mutate it in any way or attempting to register any listener will throw an `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__ .
       
       
       
       Note: Keeping a large number of Realms with different versions alive can have a negative impact on the filesize of the Realm. In order to avoid such a situation, it is possible to set :ref:`RealmConfiguration.Builder.maxNumberOfActiveVersions(long) <io_realm_RealmConfiguration_Builder_maxNumberOfActiveVersions_long_>` .
       
       
       
       
       
       
       
       
       
       
       **Returns**
       
       a frozen copy of this Realm.
       
       
       
       
       
       
       **Overrides**
       
       ``freeze`` in class **BaseRealm**
       
       
   
   


.. _getInstance:

.. _getInstance__:

.. _DynamicRealm_getInstance:

.. _DynamicRealm_getInstance__:

.. _io_realm_DynamicRealm_getInstance:

.. _io_realm_DynamicRealm_getInstance__:



getInstance
-----------

.. _io_realm_DynamicRealm_getInstance_io_realm_RealmConfiguration_:

.. _io_realm_DynamicRealm_getInstance_RealmConfiguration_:

.. _getInstance_io_realm_RealmConfiguration_:

.. _getInstance_RealmConfiguration_:

.. _DynamicRealm_getInstance_io_realm_RealmConfiguration_:

.. _DynamicRealm_getInstance_RealmConfiguration_:

.. list-table::
   :header-rows: 1
   
   * - | public static :ref:`DynamicRealm <io_realm_DynamicRealm>`  :ref:`getInstance <io_realm_DynamicRealm_getInstance>` (
       |  :ref:`RealmConfiguration <io_realm_RealmConfiguration>`  configuration
       | )
       
       
       
   
   * - Realm static constructor that returns a dynamic variant of the Realm instance defined by provided :ref:`io.realm.RealmConfiguration <io_realm_RealmConfiguration>` . Dynamic Realms do not care about schemaVersion and schemas, so opening a DynamicRealm will never trigger a migration.
       
       
       
       
       
       
       
       
       **Returns**
       
       the DynamicRealm defined by the configuration.
       
       
       
       
       **Throws**
       
       - :ref:`RealmFileException <io_realm_exceptions_RealmFileException>`  - if an error happened when accessing the underlying Realm file.
          
          
          
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if ``configuration``  argument is ``null`` .
          
          
          
          
          
       
       
       
       
       
       
       .. seealso::
       
       
          
          - :ref:`RealmConfiguration for details on how to configure a Realm. <io_realm_RealmConfiguration>` 
             
             
             
          
          
          
       
       
   
   


.. _getInstanceAsync:

.. _getInstanceAsync__:

.. _DynamicRealm_getInstanceAsync:

.. _DynamicRealm_getInstanceAsync__:

.. _io_realm_DynamicRealm_getInstanceAsync:

.. _io_realm_DynamicRealm_getInstanceAsync__:



getInstanceAsync
----------------

.. _io_realm_DynamicRealm_getInstanceAsync_io_realm_RealmConfiguration_io_realm_DynamicRealm_Callback_:

.. _io_realm_DynamicRealm_getInstanceAsync_io_realm_RealmConfiguration__io_realm_DynamicRealm_Callback_:

.. _io_realm_DynamicRealm_getInstanceAsync_io_realm_RealmConfiguration_Callback_:

.. _io_realm_DynamicRealm_getInstanceAsync_io_realm_RealmConfiguration__Callback_:

.. _io_realm_DynamicRealm_getInstanceAsync_io_realm_RealmConfiguration_DynamicRealm_Callback_:

.. _io_realm_DynamicRealm_getInstanceAsync_io_realm_RealmConfiguration__DynamicRealm_Callback_:

.. _io_realm_DynamicRealm_getInstanceAsync_RealmConfiguration_io_realm_DynamicRealm_Callback_:

.. _io_realm_DynamicRealm_getInstanceAsync_RealmConfiguration__io_realm_DynamicRealm_Callback_:

.. _io_realm_DynamicRealm_getInstanceAsync_RealmConfiguration_Callback_:

.. _io_realm_DynamicRealm_getInstanceAsync_RealmConfiguration__Callback_:

.. _io_realm_DynamicRealm_getInstanceAsync_RealmConfiguration_DynamicRealm_Callback_:

.. _io_realm_DynamicRealm_getInstanceAsync_RealmConfiguration__DynamicRealm_Callback_:

.. _getInstanceAsync_io_realm_RealmConfiguration_io_realm_DynamicRealm_Callback_:

.. _getInstanceAsync_io_realm_RealmConfiguration__io_realm_DynamicRealm_Callback_:

.. _getInstanceAsync_io_realm_RealmConfiguration_Callback_:

.. _getInstanceAsync_io_realm_RealmConfiguration__Callback_:

.. _getInstanceAsync_io_realm_RealmConfiguration_DynamicRealm_Callback_:

.. _getInstanceAsync_io_realm_RealmConfiguration__DynamicRealm_Callback_:

.. _getInstanceAsync_RealmConfiguration_io_realm_DynamicRealm_Callback_:

.. _getInstanceAsync_RealmConfiguration__io_realm_DynamicRealm_Callback_:

.. _getInstanceAsync_RealmConfiguration_Callback_:

.. _getInstanceAsync_RealmConfiguration__Callback_:

.. _getInstanceAsync_RealmConfiguration_DynamicRealm_Callback_:

.. _getInstanceAsync_RealmConfiguration__DynamicRealm_Callback_:

.. _DynamicRealm_getInstanceAsync_io_realm_RealmConfiguration_io_realm_DynamicRealm_Callback_:

.. _DynamicRealm_getInstanceAsync_io_realm_RealmConfiguration__io_realm_DynamicRealm_Callback_:

.. _DynamicRealm_getInstanceAsync_io_realm_RealmConfiguration_Callback_:

.. _DynamicRealm_getInstanceAsync_io_realm_RealmConfiguration__Callback_:

.. _DynamicRealm_getInstanceAsync_io_realm_RealmConfiguration_DynamicRealm_Callback_:

.. _DynamicRealm_getInstanceAsync_io_realm_RealmConfiguration__DynamicRealm_Callback_:

.. _DynamicRealm_getInstanceAsync_RealmConfiguration_io_realm_DynamicRealm_Callback_:

.. _DynamicRealm_getInstanceAsync_RealmConfiguration__io_realm_DynamicRealm_Callback_:

.. _DynamicRealm_getInstanceAsync_RealmConfiguration_Callback_:

.. _DynamicRealm_getInstanceAsync_RealmConfiguration__Callback_:

.. _DynamicRealm_getInstanceAsync_RealmConfiguration_DynamicRealm_Callback_:

.. _DynamicRealm_getInstanceAsync_RealmConfiguration__DynamicRealm_Callback_:

.. list-table::
   :header-rows: 1
   
   * - | public static :ref:`RealmAsyncTask <io_realm_RealmAsyncTask>`  :ref:`getInstanceAsync <io_realm_DynamicRealm_getInstanceAsync>` (
       |  :ref:`RealmConfiguration <io_realm_RealmConfiguration>`  configuration, 
       |  :ref:`DynamicRealm.Callback <io_realm_DynamicRealm_Callback>`  callback
       | )
       
       
       
   
   * - The creation of the first Realm instance per :ref:`RealmConfiguration <io_realm_RealmConfiguration>`  in a process can take some time as all initialization code need to run at that point (Setting up the Realm, validating schemas and creating initial data). This method places the initialization work in a background thread and deliver the Realm instance to the caller thread asynchronously after the initialization is finished.
       
       
       
       
       
       
       **Parameters**
       
       - ``configuration`` - :ref:`RealmConfiguration <io_realm_RealmConfiguration>`  used to open the Realm.
          
          
          
          
          
       - ``callback`` - invoked to return the results.
          
          
          
       
       
       
       
       **Returns**
       
       a :ref:`RealmAsyncTask <io_realm_RealmAsyncTask>`  representing a cancellable task.
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if a null :ref:`RealmConfiguration <io_realm_RealmConfiguration>`  or a null :ref:`Callback <io_realm_DynamicRealm_Transaction_Callback>`  is provided.
          
          
          
          
          
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if it is called from a non-Looper or `android.app.IntentService <https://developer.android.com/reference/android/app/IntentService>`__  thread.
          
          
          
          
          
       
       
       
       
       
       
       .. seealso::
       
       
          
          - :ref:`Callback for more details. <io_realm_DynamicRealm_Transaction_Callback>` 
             
             
             
          
          
          
       
       
   
   


.. _getSchema:

.. _getSchema__:

.. _DynamicRealm_getSchema:

.. _DynamicRealm_getSchema__:

.. _io_realm_DynamicRealm_getSchema:

.. _io_realm_DynamicRealm_getSchema__:



getSchema
---------

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmSchema <io_realm_RealmSchema>`  :ref:`getSchema <io_realm_DynamicRealm_getSchema>` ()
       | 
       
       
       
   
   * - Returns the mutable schema for this Realm.
       
       
       
       
       
       
       **Returns**
       
       The :ref:`RealmSchema <io_realm_RealmSchema>`  for this Realm.
       
       
       
       
       
       
       
       
       **Overrides**
       
       ``getSchema`` in class **BaseRealm**
       
       
   
   


.. _isEmpty:

.. _isEmpty__:

.. _DynamicRealm_isEmpty:

.. _DynamicRealm_isEmpty__:

.. _io_realm_DynamicRealm_isEmpty:

.. _io_realm_DynamicRealm_isEmpty__:



isEmpty
-------

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`isEmpty <io_realm_DynamicRealm_isEmpty>` ()
       | 
       
       
       
   
   * - Checks if this :ref:`io.realm.Realm <io_realm_Realm>`  contains any objects.
       
       
       
       
       
       
       
       
       **Returns**
       
       ``true``  if empty, \@{code false} otherwise.
       
       
       
       
       
       
       
       
       **Overrides**
       
       ``isEmpty`` in class **BaseRealm**
       
       
   
   


.. _removeAllChangeListeners:

.. _removeAllChangeListeners__:

.. _DynamicRealm_removeAllChangeListeners:

.. _DynamicRealm_removeAllChangeListeners__:

.. _io_realm_DynamicRealm_removeAllChangeListeners:

.. _io_realm_DynamicRealm_removeAllChangeListeners__:



removeAllChangeListeners
------------------------

.. list-table::
   :header-rows: 1
   
   * - | public **void** :ref:`removeAllChangeListeners <io_realm_DynamicRealm_removeAllChangeListeners>` ()
       | 
       
       
       
   
   * - Removes all user-defined change listeners.
       
       
       
       
       
       
       
       
       **Throws**
       
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if you try to remove listeners from a non-Looper Thread.
          
          
          
       
       
       
       
       
       
       .. seealso::
       
       
          
          - :ref:`io.realm.RealmChangeListener <io_realm_RealmChangeListener>` 
             
             
             
          
          
          
       
       
   
   


.. _removeChangeListener:

.. _removeChangeListener__:

.. _DynamicRealm_removeChangeListener:

.. _DynamicRealm_removeChangeListener__:

.. _io_realm_DynamicRealm_removeChangeListener:

.. _io_realm_DynamicRealm_removeChangeListener__:



removeChangeListener
--------------------

.. _io_realm_DynamicRealm_removeChangeListener_io_realm_RealmChangeListener_:

.. _io_realm_DynamicRealm_removeChangeListener_RealmChangeListener_:

.. _removeChangeListener_io_realm_RealmChangeListener_:

.. _removeChangeListener_RealmChangeListener_:

.. _DynamicRealm_removeChangeListener_io_realm_RealmChangeListener_:

.. _DynamicRealm_removeChangeListener_RealmChangeListener_:

.. _io_realm_DynamicRealm_removeChangeListener_RealmChangeListener_DynamicRealm__:

.. list-table::
   :header-rows: 1
   
   * - | public **void** :ref:`removeChangeListener <io_realm_DynamicRealm_removeChangeListener>` (
       |  :ref:`io.realm.RealmChangeListener\<io.realm.DynamicRealm> <io_realm_RealmChangeListener>`  listener
       | )
       
       
       
   
   * - Removes the specified change listener.
       
       
       
       
       **Parameters**
       
       - ``listener`` - the change listener to be removed.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the change listener is ``null`` .
          
          
          
          
          
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if you try to remove a listener from a non-Looper Thread.
          
          
          
       
       
       
       
       
       
       .. seealso::
       
       
          
          - :ref:`io.realm.RealmChangeListener <io_realm_RealmChangeListener>` 
             
             
             
          
          
          
       
       
   
   


.. _where:

.. _where__:

.. _DynamicRealm_where:

.. _DynamicRealm_where__:

.. _io_realm_DynamicRealm_where:

.. _io_realm_DynamicRealm_where__:



where
-----

.. _io_realm_DynamicRealm_where_java_lang_String_:

.. _io_realm_DynamicRealm_where_String_:

.. _where_java_lang_String_:

.. _where_String_:

.. _DynamicRealm_where_java_lang_String_:

.. _DynamicRealm_where_String_:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`RealmQuery <io_realm_RealmQuery>`  :ref:`where <io_realm_DynamicRealm_where>` (
       |  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  className
       | )
       
       
       
   
   * - Returns a RealmQuery, which can be used to query the provided class.
       
       
       
       
       **Parameters**
       
       - ``className`` - the class of the object which is to be queried.
          
          
          
       
       
       
       
       **Returns**
       
       a RealmQuery, which can be used to query for specific objects of provided type.
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the class doesn't exist.
          
          
          
       
       
       
       
       
       
       .. seealso::
       
       
          
          - :ref:`io.realm.RealmQuery <io_realm_RealmQuery>` 
             
             
             
          
          
          
       
       
   
   



