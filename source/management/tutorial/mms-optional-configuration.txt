==========================
MMS Optional Configuration
==========================

.. default-domain:: mongodb

Overview
--------

A number of optional services provide additional functionality to MMS, for
example, SMS alerts, password management, and LDAP authentication. Each
service requires its own configuration process.

Prerequisites
-------------

|monitoring| has the following *optional* dependencies which depend on
which services you configure and add.

- A Twilio API account for SMS alerting integration.
- A Graphite hostname / port for charting the MMS server's internal health.
- An SNMP trap receiver for periodic heartbeat traps about MMS
  server's internal health.
- An LDAP server to authenticate users who access MMS.

Procedure
---------

Twilio
~~~~~~

To receive alert notifications via SMS, signup for a Twilio account at
`<http://www.twilio.com/docs/quickstart>`_ and enter your account ID, API
token, and Twilio phone number into the following properties:

.. code-block:: ini

   twilio.account.sid=
   twilio.auth.token=
   twilio.from.num=


SNMP
~~~~

.. versionadded:: 1.3.0

The MIB file is available for download at:
`<http://downloads.mongodb.com/on-prem-monitoring/MMS-MONGODB-MIB.txt>`_

You can configure the On-Prem MMS Server to send a periodic heartbeat trap notification
(v2c) that contain an internal health assessment of the MMS
Server.

The MMS Server can send traps to one or more endpoints on the standard
SNMP UDP port 162.

There are three configuration options that affect the heartbeat
behavior:

.. code-block:: ini

   # Listening UDP port for SNMP. (Note: Setting to less than 1024 will require running MMS server with root privileges.)
   snmp.listen.port=11611 #default

   # Period in seconds between heartbeat notifications
   snmp.default.heartbeat.interval=300 #default

   # Optional comma-separated list of hosts where 'heartbeat' traps will be sent on standard UDP port 162.
   # Leaving blank (the default) disables the SNMP heartbeat functionality
   snmp.default.hosts=

Password Manager
~~~~~~~~~~~~~~~~

.. versionadded:: 1.3.0

You can configure the password policy for MMS user accounts with the
following properties:

.. code-block:: ini

   # The number of previous passwords to remember. A remembered password can not be reused.
   mms.password.minChangesBeforeReuse=

   # The number of failed login attempts before an account becomes locked. An account can only be
   # unlocked by an MMS Administrator.
   mms.password.maxFailedAttemptsBeforeAccountLock=

   # The number of days before an account that has not visisted the MMS website should be locked.
   mms.password.maxDaysInactiveBeforeAccountLock=

   # The number of days a password can be in use before it must be changed.
   mms.password.maxDaysBeforeChangeRequired=

Session Management
~~~~~~~~~~~~~~~~~~

.. versionadded:: 1.3.0

You can configure the number of hours before a session on the MMS
website expires with the following property:

.. code-block:: ini

   mms.session.maxHours=

LDAP
~~~~

You can use an LDAP server to authenticate user access to MMS. See
:doc:`/management/tutorial/authenticate-with-ldap` for details.

