#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/tutorial/analyze-query-plan.txt:3
msgid "Analyze Query Performance"
msgstr ""

#: ../source/includes/fact-explain-collection-method.rst:1
msgid ""
":method:`db.collection.explain()` provides information on the execution "
"of other operations, such as :method:`db.collection.update()`. See "
":method:`db.collection.explain()` for details."
msgstr ""

#: ../source/tutorial/analyze-query-plan.txt:38
msgid "Evaluate the Performance of a Query"
msgstr ""

#: ../source/tutorial/analyze-query-plan.txt:40
msgid "Consider a collection ``inventory`` with the following documents:"
msgstr ""

#: ../source/tutorial/analyze-query-plan.txt:68
msgid "Query with No Index"
msgstr ""

#: ../source/tutorial/analyze-query-plan.txt:232
msgid ""
"The difference between the number of matching documents and the number of"
" examined documents may suggest that, to improve efficiency, the query "
"might benefit from the use of an index."
msgstr ""

#: ../source/tutorial/analyze-query-plan.txt:239
msgid "Query with Index"
msgstr ""

#: ../source/tutorial/analyze-query-plan.txt:241
msgid ""
"To support the query on the ``quantity`` field, add an index on the "
"``quantity`` field:"
msgstr ""

#: ../source/tutorial/analyze-query-plan.txt:405
msgid ""
"Without the index, the query would scan the whole collection of ``10`` "
"documents to return ``3`` matching documents. The query also had to scan "
"the entirety of each document, potentially pulling them into memory. This"
" results in an expensive and potentially slow query operation."
msgstr ""

#: ../source/tutorial/analyze-query-plan.txt:411
msgid ""
"When run with an index, the query scanned ``3`` index entries and ``3`` "
"documents to return ``3`` matching documents, resulting in a very "
"efficient query."
msgstr ""

#: ../source/includes/extracts/additional-resources-performance-eval.rst:4
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-performance-eval.rst:6
msgid ""
"`MongoDB Performance Evaluation and Tuning Consulting Package "
"<https://www.mongodb.com/products/consulting?jmp=docs#performance_evaluation>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-performance-eval.rst:7
msgid ""
"`MongoDB Atlas: For a simple way to run, monitor, and maintain cloud-"
"hosted MongoDB deployments "
"<https://www.mongodb.com/cloud/atlas?jmp=docs>`_"
msgstr ""

#~ msgid ""
#~ "The :method:`cursor.explain(\"executionStats\") "
#~ "<cursor.explain()>` and the "
#~ ":method:`db.collection.explain(\"executionStats\") "
#~ "<db.collection.explain()>` methods provide "
#~ "statistics about the performance of a"
#~ " query. This data output can be "
#~ "useful in measuring if and how a"
#~ " query uses an index."
#~ msgstr ""

#~ msgid ""
#~ "The following query retrieves documents "
#~ "where the ``quantity`` field has a "
#~ "value between ``100`` and ``200``, "
#~ "inclusive:"
#~ msgstr ""

#~ msgid "The query returns the following documents:"
#~ msgstr ""

#~ msgid ""
#~ "To view the query plan selected, "
#~ "use the :method:`~cursor.explain(\"executionStats\")` "
#~ "method:"
#~ msgstr ""

#~ msgid ":method:`~cursor.explain()` returns the following results:"
#~ msgstr ""

#~ msgid ""
#~ ":data:`queryPlanner.winningPlan.stage "
#~ "<explain.queryPlanner.winningPlan.stage>` displays "
#~ "``COLLSCAN`` to indicate a collection "
#~ "scan."
#~ msgstr ""

#~ msgid ""
#~ ":data:`executionStats.nReturned "
#~ "<explain.executionStats.nReturned>` displays ``3`` "
#~ "to indicate that the query matches "
#~ "and returns three documents."
#~ msgstr ""

#~ msgid ""
#~ ":data:`executionStats.totalDocsExamined "
#~ "<explain.executionStats.totalDocsExamined>` display ``10``"
#~ " to indicate that MongoDB had to "
#~ "scan ten documents (i.e. all documents"
#~ " in the collection) to find the "
#~ "three matching documents."
#~ msgstr ""

#~ msgid ""
#~ "To view the query plan statistics, "
#~ "use the :method:`~cursor.explain(\"executionStats\")` "
#~ "method:"
#~ msgstr ""

#~ msgid "The :method:`~cursor.explain()` method returns the following results:"
#~ msgstr ""

#~ msgid ""
#~ ":data:`queryPlanner.winningPlan.inputStage.stage "
#~ "<explain.queryPlanner.winningPlan.inputStage>` displays "
#~ "``IXSCAN`` to indicate index use."
#~ msgstr ""

#~ msgid ""
#~ ":data:`executionStats.totalKeysExamined "
#~ "<explain.executionStats.totalKeysExamined>` display ``3``"
#~ " to indicate that MongoDB scanned "
#~ "three index entries."
#~ msgstr ""

#~ msgid ""
#~ ":data:`executionStats.totalDocsExamined "
#~ "<explain.executionStats.totalDocsExamined>` display ``3``"
#~ " to indicate that MongoDB scanned "
#~ "three documents."
#~ msgstr ""

#~ msgid ""
#~ "When run with an index, the query"
#~ " scanned ``3`` index entries and "
#~ "``3`` documents to return ``3`` matching"
#~ " documents. Without the index, to "
#~ "return the ``3`` matching documents, the"
#~ " query had to scan the whole "
#~ "collection, scanning ``10`` documents."
#~ msgstr ""

#~ msgid "Compare Performance of Indexes"
#~ msgstr ""

#~ msgid ""
#~ "To manually compare the performance of"
#~ " a query using more than one "
#~ "index, you can use the "
#~ ":method:`~cursor.hint()` method in conjunction "
#~ "with the :method:`~cursor.explain()` method."
#~ msgstr ""

#~ msgid "Consider the following query:"
#~ msgstr ""

#~ msgid ""
#~ "To support the query, add a "
#~ ":doc:`compound index </core/index-compound>`. "
#~ "With :doc:`compound indexes </core/index-"
#~ "compound>`, the order of the fields "
#~ "matter."
#~ msgstr ""

#~ msgid ""
#~ "For example, add the following two "
#~ "compound indexes. The first index orders"
#~ " by ``quantity`` field first, and "
#~ "then the ``type`` field. The second "
#~ "index orders by ``type`` first, and "
#~ "then the ``quantity`` field."
#~ msgstr ""

#~ msgid "Evaluate the effect of the first index on the query:"
#~ msgstr ""

#~ msgid "The :method:`~cursor.explain()` method returns the following output:"
#~ msgstr ""

#~ msgid ""
#~ "MongoDB scanned ``5`` index keys "
#~ "(:data:`executionStats.totalKeysExamined "
#~ "<explain.executionStats.totalKeysExamined>`) to return "
#~ "``2`` matching documents "
#~ "(:data:`executionStats.nReturned "
#~ "<explain.executionStats.nReturned>`)."
#~ msgstr ""

#~ msgid "Evaluate the effect of the second index on the query:"
#~ msgstr ""

#~ msgid ""
#~ "MongoDB scanned ``2`` index keys "
#~ "(:data:`executionStats.totalKeysExamined "
#~ "<explain.executionStats.totalKeysExamined>`) to return "
#~ "``2`` matching documents "
#~ "(:data:`executionStats.nReturned "
#~ "<explain.executionStats.nReturned>`)."
#~ msgstr ""

#~ msgid ""
#~ "For this example query, the compound "
#~ "index ``{ type: 1, quantity: 1 }``"
#~ " is more efficient than the compound"
#~ " index ``{ quantity: 1, type: 1 "
#~ "}``."
#~ msgstr ""

#~ msgid ""
#~ ":doc:`/core/query-optimization`, :doc:`/core/query-"
#~ "plans`, :doc:`/tutorial/optimize-query-"
#~ "performance-with-indexes-and-projections`, "
#~ ":doc:`/applications/indexes`"
#~ msgstr ""

#~ msgid "On this page"
#~ msgstr ""

