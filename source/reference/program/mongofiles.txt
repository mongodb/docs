==============
``mongofiles``
==============

.. default-domain:: mongodb

.. |tool-binary| replace:: mongofiles

.. only:: (not man)

   .. binary:: mongofiles

Synopsis
--------

The :program:`mongofiles` utility makes it possible to manipulate files
stored in your MongoDB instance in :term:`GridFS` objects from the
command line. It is particularly useful as it provides an interface
between objects stored in your file system and GridFS.

All :program:`mongofiles` commands have the following form:

.. code-block:: sh

   mongofiles <options> <commands> <filename>

The components of the :program:`mongofiles` command are:

1. :ref:`Options <mongofiles-options>`. You may use one or more of
   these options to control the behavior of :program:`mongofiles`.

2. :ref:`Commands <mongofiles-commands>`. Use one of these commands to
   determine the action of :program:`mongofiles`.

3. A filename which is either: the name of a file on your local's file
   system, or a GridFS object.

:program:`mongofiles`, like :program:`mongodump`, :program:`mongoexport`,
:program:`mongoimport`, and :program:`mongorestore`, can access data
stored in a MongoDB data directory without requiring a running
:program:`mongod` instance, if no other :program:`mongod` is running.

.. important:: For :term:`replica sets <replica set>`,
   :program:`mongofiles` can only read from the set's
   ':term:`primary`.

.. _mongofiles-options:

Options
-------

.. program:: mongofiles

.. include:: /includes/options-mongofiles.rst

.. _mongofiles-commands:

Commands
--------

.. describe:: list <prefix>

   Lists the files in the GridFS store. The characters specified after
   ``list`` (e.g. ``<prefix>``) optionally limit the list of
   returned items to files that begin with that string of characters.

.. describe:: search <string>

   Lists the files in the GridFS store with names that match any
   portion of ``<string>``.

.. describe:: put <filename>

   Copy the specified file from the local file system into GridFS
   storage.

   Here, ``<filename>`` refers to the name the object will have in
   GridFS, and :program:`mongofiles` assumes that this reflects the name the
   file has on the local file system. If the local filename is
   different use the :option:`mongofiles --local` option.

.. describe:: get <filename>

   Copy the specified file from GridFS storage to the local file
   system.

   Here, ``<filename>`` refers to the name the object will have in
   GridFS, and :program:`mongofiles` assumes that this reflects the name the
   file has on the local file system. If the local filename is
   different use the :option:`mongofiles --local` option.

.. describe:: delete <filename>

   Delete the specified file from GridFS storage.

Examples
--------

To return a list of all files in a :term:`GridFS` collection in the
``records`` database, use the following invocation at the system shell:

.. code-block:: sh

   mongofiles -d records list

This :program:`mongofiles` instance will connect to the
:program:`mongod` instance running on the ``27017`` localhost
interface to specify the same operation on a different port or
hostname, and issue a command that resembles one of the following:

.. code-block:: sh

   mongofiles --port 37017 -d records list
   mongofiles --hostname db1.example.net -d records list
   mongofiles --hostname db1.example.net --port 37017 -d records list

Modify any of the following commands as needed if you're connecting
the :program:`mongod` instances on different ports or hosts.

To upload a file named ``32-corinth.lp`` to the GridFS collection in
the ``records`` database, you can use the following command:

.. code-block:: sh

   mongofiles -d records put 32-corinth.lp

To delete the ``32-corinth.lp`` file from this GridFS collection in
the ``records`` database, you can use the following command:

.. code-block:: sh

   mongofiles -d records delete 32-corinth.lp

To search for files in the GridFS collection in the ``records``
database that have the string ``corinth`` in their names, you can use
following command:

.. code-block:: sh

   mongofiles -d records search corinth

To list all files in the GridFS collection in the ``records`` database
that begin with the string ``32``, you can use the following command:

.. code-block:: sh

   mongofiles -d records list 32

To fetch the file from the GridFS collection in the ``records``
database named ``32-corinth.lp``, you can use the following command:

.. code-block:: sh

   mongofiles -d records get 32-corinth.lp
