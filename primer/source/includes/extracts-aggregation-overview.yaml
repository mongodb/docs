ref: aggregation-overview
replacement:
  aggregate: :method:`~db.collection.aggregate()`
inherit:
  ref: _aggregation-overview
  file: extracts-aggregation-overview-base.yaml
edition: shell
post: |

  .. code-block:: javascript

     db.collection.aggregate( [ <stage1>, <stage2>, ... ] )
---
ref: aggregation-overview
replacement:
  aggregate: :py:meth:`~pymongo.collection.Collection.aggregate()`
inherit:
  ref: _aggregation-overview
  file: extracts-aggregation-overview-base.yaml
edition: python

post: |

  .. code-block:: python

     db.collection.aggregate([<stage1>, <stage2>, ...])

---
ref: aggregation-overview
replacement:
  aggregate: "`aggregate <http://mongodb.github.io/node-mongodb-native/2.0/api/Collection.html#aggregate>`_"
inherit:
  ref: _aggregation-overview
  file: extracts-aggregation-overview-base.yaml
edition: node
post: |

  .. code-block:: javascript

     db.collection.aggregate( [ <stage1>, <stage2>, ... ] )

---
ref: aggregation-overview
inherit:
  ref: _aggregation-overview
  file: extracts-aggregation-overview-base.yaml
edition: cpp
content: |
  MongoDB can perform aggregation operations, such as grouping by a
  specified key and evaluating a total or a count for each distinct group.

  You can use the {{aggregate}} method to
  perform a stage-based aggregation. The
  {{aggregate}} method accepts as its argument a pipeline
  of stages, where each :manual:`stage
  </meta/aggregation-quick-reference>`, processed sequentially, describes
  a data processing step.

  .. _aggregate: http://mongodb.github.io/mongo-cxx-driver/classmongocxx_1_1collection.html#aa93a46c9e07878fbddeb3ca29af71fc4
replacement:
  aggregate: "aggregate_"
...
