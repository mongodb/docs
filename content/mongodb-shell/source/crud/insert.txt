.. _mongosh-insert:

================
Insert Documents
================

.. default-domain:: mongodb

.. facet::
   :name: genre
   :values: reference

.. meta:: 
   :description: Insert single or multiple documents into a MongoDB collection.
   :keywords: server, atlas, sample dataset

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

The MongoDB shell provides the following methods to insert documents
into a collection:

- To insert a single document, use :method:`db.collection.insertOne()`.

- To insert multiple documents, use
  :method:`db.collection.insertMany()`.

.. include:: /includes/fact-sample-data-examples.rst

Insert a Single Document
------------------------

:method:`db.collection.insertOne()` inserts a *single*
:ref:`document<bson-document-format>` into a collection. If the document
does not specify an ``_id`` field, MongoDB adds the ``_id`` field with
an ObjectId value to the new document. See
:ref:`write-op-insert-behavior`.

.. example::

   To insert a new document into the ``sample_mflix.movies`` collection:

   .. code-block:: javascript

      use sample_mflix

      db.movies.insertOne(
        {
          title: "The Favourite",
          genres: [ "Drama", "History" ],
          runtime: 121,
          rated: "R",
          year: 2018,
          directors: [ "Yorgos Lanthimos" ],
          cast: [ "Olivia Colman", "Emma Stone", "Rachel Weisz" ],
          type: "movie"
        }
      )

   :method:`~db.collection.insertOne()` returns a document that
   includes the newly inserted document's ``_id`` field value.

   To retrieve the inserted document,
   :ref:`read the collection <mongosh-read>`:

   .. code-block:: javascript

      db.movies.find( { title: "The Favourite" } )

   To ensure you return the document you inserted, you can instead
   query by ``_id``.

Insert Multiple Documents
-------------------------

:method:`db.collection.insertMany()` can insert *multiple*
:ref:`documents <bson-document-format>` into a collection. Pass an array
of documents to the method. If the documents do not specify an ``_id``
field, MongoDB adds the ``_id`` field with an ObjectId value to each
document. See :ref:`write-op-insert-behavior`.

.. example::

   To insert two new documents into the ``sample_mflix.movies``
   collection:

   .. code-block:: javascript

      use sample_mflix

      db.movies.insertMany([
         {
            title: "Jurassic World: Fallen Kingdom",
            genres: [ "Action", "Sci-Fi" ],
            runtime: 130,
            rated: "PG-13",
            year: 2018,
            directors: [ "J. A. Bayona" ],
            cast: [ "Chris Pratt", "Bryce Dallas Howard", "Rafe Spall" ],
            type: "movie"
          },
          {
            title: "Tag",
            genres: [ "Comedy", "Action" ],
            runtime: 105,
            rated: "R",
            year: 2018,
            directors: [ "Jeff Tomsic" ],
            cast: [ "Annabelle Wallis", "Jeremy Renner", "Jon Hamm" ],
            type: "movie"
          }
      ])

   :method:`~db.collection.insertMany()` returns a document that
   includes the newly inserted documents' ``_id`` field values.

   To :ref:`read documents in the collection <mongosh-read>`:

   .. code-block:: javascript
    
      db.movies.find( {} )

Insert Behavior
---------------

To learn more about the specific behavior of inserting documents,
see :ref:`write-op-insert-behavior`.

Learn More
----------

- To see more examples of inserting documents into a collection, see
  the :method:`~db.collection.insertOne()` and
  :method:`db.collection.insertMany()` method pages.

- To see all available methods to insert documents into a collection,
  see :manual:`Additional Methods for Inserts
  </reference/insert-methods/#additional-inserts>`
