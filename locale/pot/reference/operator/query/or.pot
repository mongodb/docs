# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/query/or.txt:3
# 8f0af6f04b514e0296e3813753d70a31
msgid "$or"
msgstr ""

#: ../source/reference/operator/query/or.txt:9
# def5b08007c34a2c8ce01637260e4432
msgid "The :query:`$or` operator performs a logical ``OR`` operation on an array of *two or more* ``<expressions>`` and selects the documents that satisfy *at least* one of the ``<expressions>``. The :query:`$or` has the following syntax:"
msgstr ""

#: ../source/reference/operator/query/or.txt:18
# 9ee2ae362b1048b29af3095cca0fef95
msgid "Consider the following example:"
msgstr ""

#: ../source/reference/operator/query/or.txt:24
# 07625113cd9941829f8cc3edc8dfbcac
msgid "This query will select all documents in the ``inventory`` collection where either the ``quantity`` field value is less than ``20`` **or** the ``price`` field value equals ``10``."
msgstr ""

#: ../source/reference/operator/query/or.txt:29
# 4f5a7d7faee24de2be6128a7d742dfff
msgid "Behaviors"
msgstr ""

#: ../source/reference/operator/query/or.txt:34
# 2eafd040bff84eb8852f81d2187e2126
msgid "``$or`` Clauses and Indexes"
msgstr ""

#: ../source/reference/operator/query/or.txt:36
# 66c3a13d156a4316a1d1333f8400eebc
msgid "When evaluating the clauses in the :query:`$or` expression, MongoDB either performs a collection scan or, if all the clauses are supported by indexes, MongoDB performs index scans. That is, for MongoDB to use indexes to evaluate an :query:`$or` expression, all the clauses in the :query:`$or` expression must be supported by indexes. Otherwise, MongoDB will perform a collection scan."
msgstr ""

#: ../source/reference/operator/query/or.txt:43
# 30362e3e0ae9495d861b72dac7d4541f
msgid "When using indexes with :query:`$or` queries, each clause of an :query:`$or` can use its own index.  Consider the following query:"
msgstr ""

#: ../source/reference/operator/query/or.txt:50
# ea679ba7d2694346bdc5b21fef24082a
msgid "To support this query, rather than a compound index, you would create one index on ``quantity`` and another index on ``price``:"
msgstr ""

#: ../source/reference/operator/query/or.txt:58
# 9a3e27c61a8945a78d1cac2a43ba7c4c
msgid "MongoDB can use all but the :doc:`geoHaystack </core/geohaystack>` index to support :query:`$or` clauses."
msgstr ""

#: ../source/reference/operator/query/or.txt:64
# dc99a6bde04443eebb5adde8cfac2417
msgid "``$or`` and ``text`` Queries"
msgstr ""

#: ../source/reference/operator/query/or.txt:68
# 0cc3ab7185674fbc92e04993f12941dc
msgid "If :query:`$or` includes a :query:`$text` query, all clauses in the :query:`$or` array must be supported by an index. This is because a :query:`$text` query *must* use an index, and :query:`$or` can only use indexes if all its clauses are supported by indexes. If the :query:`$text` query cannot use an index, the query will return an error."
msgstr ""

#: ../source/reference/operator/query/or.txt:76
# b28da8f9873745738187dac755531e53
msgid "``$or`` and GeoSpatial Queries"
msgstr ""

#: ../source/reference/operator/query/or.txt:80
# f456c29600614097a6868f649cf42a92
msgid ":operator:`$or` supports :doc:`geospatial clauses </reference/operator/query-geospatial>` with the following exception for the near clause (near clause includes :query:`$nearSphere` and :query:`$near`). :operator:`$or` cannot contain a near clause with any other clause."
msgstr ""

#: ../source/reference/operator/query/or.txt:87
# a053cc56f3e44a14abc3b47d3248188a
msgid "``$or`` and Sort Operations"
msgstr ""

#: ../source/reference/operator/query/or.txt:91
# a13c15af8ed242a3850bc7425bc2b956
msgid "When executing :query:`$or` queries with a :method:`~cursor.sort()`, MongoDB can now use indexes that support the :query:`$or` clauses. Previous versions did not use the indexes."
msgstr ""

#: ../source/reference/operator/query/or.txt:96
# 397603edad494e6b9a27b0e7976511ec
msgid "``$or`` versus ``$in``"
msgstr ""

#: ../source/reference/operator/query/or.txt:98
# 5dc46ad66d6d4c8280d45932eccd593c
msgid "When using :query:`$or` with ``<expressions>`` that are equality checks for the value of the same field, use the :query:`$in` operator instead of the :query:`$or` operator."
msgstr ""

#: ../source/reference/operator/query/or.txt:102
# 9d94d2824fc947b3bbdb893b8bae0602
msgid "For example, to select all documents in the ``inventory`` collection where the ``quantity`` field value equals either ``20`` *or* ``50``, use the :query:`$in` operator:"
msgstr ""

#: ../source/reference/operator/query/or.txt:111
# 132d96a644cf49e6841ddb1eafa7a797
msgid "Nested ``$or`` Clauses"
msgstr ""

#: ../source/reference/operator/query/or.txt:113
# c0a2c9c89811443da10ac7c0444c69e4
msgid "You may nest :query:`$or` operations."
msgstr ""

#: ../source/reference/operator/query/or.txt:115
# 930383817ca7485ca647d5034d55c584
msgid ":query:`$and`, :method:`~db.collection.find()`, :method:`~cursor.sort()`, :query:`$in`"
msgstr ""

