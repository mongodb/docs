=========
mapReduce
=========

.. default-domain:: mongodb

.. dbcommand:: mapReduce

   The :dbcommand:`mapReduce` command allows you to run
   :term:`map-reduce` aggregation operations over a collection. The
   :dbcommand:`mapReduce` command has the following prototype
   form: 

   .. code-block:: javascript

      db.runCommand(
                     { 
                       mapReduce: <collection>,
                       map: <function>,
                       reduce: <function>,
                       out: <output>,
                       query: <document>,
                       sort: <document>,
                       limit: <number>,
                       finalize: <function>,
                       scope: <document>,
                       jsMode: <boolean>,
                       verbose: <boolean>
                     }
                   )

   Pass the name of the collection to the ``mapReduce`` command
   (i.e. ``<collection>``) to use as the source documents to perform
   the map reduce operation. The command also accepts the following
   parameters: 

   .. include:: /reference/command/mapReduce-field.rst

   The following is a prototype usage of the :dbcommand:`mapReduce`
   command:

   .. code-block:: javascript

      var mapFunction = function() { ... };
      var reduceFunction = function(key, values) { ... };

      db.runCommand(
                     {
                       mapReduce: 'orders',
                       map: mapFunction,
                       reduce: reduceFunction,
                       out: { merge: 'map_reduce_results', db: 'test' },
                       query: { ord_date: { $gt: new Date('01/01/2012') } }
                     }
                   )

   .. |javascript-using-operation| replace:: :dbcommand:`mapReduce` uses
   .. include:: /includes/admonition-javascript-prevalence.rst

.. note::

   .. versionchanged:: 2.4

   .. include:: /includes/fact-group-map-reduce-where-limitations-in-24.rst

.. _mapreduce-map-cmd:

.. include:: /includes/parameters-map-reduce.rst
   :start-after: start-map
   :end-before: end-map

.. _mapreduce-reduce-cmd:

.. include:: /includes/parameters-map-reduce.rst
   :start-after: start-reduce
   :end-before: end-reduce

.. _mapreduce-out-cmd:

.. include:: /includes/parameters-map-reduce.rst
   :start-after: start-out
   :end-before: end-out

.. _mapreduce-finalize-cmd:

.. include:: /includes/parameters-map-reduce.rst
   :start-after: start-finalize
   :end-before: end-finalize

Examples
--------

In the :program:`mongo` shell, the :method:`db.collection.mapReduce()`
method is a wrapper around the :dbcommand:`mapReduce` command. The
following examples use the :method:`db.collection.mapReduce()` method:

.. include:: /includes/examples-map-reduce.rst
   :start-after: map-reduce-document-prototype-begin

For more information and examples, see the 
:doc:`Map-Reduce </core/map-reduce>` page and
:doc:`/tutorial/perform-incremental-map-reduce`.

.. seealso::

   - :doc:`/tutorial/troubleshoot-map-function`

   - :doc:`/tutorial/troubleshoot-reduce-function`

   - :method:`db.collection.mapReduce()`

   - :doc:`/core/aggregation`

.. slave-ok
