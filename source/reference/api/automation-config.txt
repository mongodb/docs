=================================
Automation Configuration Resource
=================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Overview
--------

The Public API provides the ``automationConfig`` endpoint to let you
manipulate your groupâ€™s :doc:`deployment configuration
</reference/cluster-configuration>`. The configuration, also referred to as
the "automation configuration," defines the various MongoDB clusters, replica
sets and standalones in the deployment and defines how each process runs. The
Automation Agents build the deployment according to the goals specified. Each
Automation Agent is responsible for the MongoDB processes that run on its
host. The configuration also defines the deployment's Monitoring and Backup
Agents and can optionally specify which version of the Automation Agent to
run.

When a running MongoDB process matches its defined configuration, the process is in "goal
state." When all processes on all hosts are in goal state, the deployment
itself is in goal state.

For example deployment configurations, please see the following page on GitHub:
`<https://github.com/10gen-labs/mms-api-examples/tree/master/automation/>`_.

Endpoints
---------

Get the Automation Configuration
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Retrieve the current automation configuration for a group.

.. code-block:: none
   
   GET /api/public/v1.0/groups/GROUP-ID/automationConfig

Update the Automation Configuration
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Update a group's automation configuration. For steps for updating an
automation configuration, see :doc:`/tutorial/create-cluster-with-api`.

.. code-block:: none

   PUT /api/public/v1.0/groups/GROUP-ID/automationConfig

To update the configuration through the ``automationConfig`` endpoint,
send an object that :ref:`contains a specific subset of the
configuration's fields <automation-configuration-sample-entity>`. This is
the same subset as you receive when you retrieve the configuration through
the endpoint.

When you submit updates, |mms| makes internal modifications to the data
and then saves your new configuration version. For example, |mms| might
add a field to each specified community MongoDB
version to indicate where the agents download them from.

The Automation Agents continuously poll |mms| for changes to the
configuration and fetch configuration updates when they occur. The agents
then adjust the states of their live processes to match. For a tutorial on
updating a deployment using the API, see
:doc:`/tutorial/create-cluster-with-api`.

.. _concurrent-cluster-config:

.. warning:: 
   There is **no protection** in the Public API to prevent
   concurrent modifications. If two administrators both start with a
   configuration based on the current version, make their own
   modifications, and then submit their modifications, the later
   modification wins.

Other Representations of the Automation Configuration
-----------------------------------------------------

.. only:: onprem

   Users with the :ref:`global role <global-roles>` can view the internal
   representation of the configuration. In |mms|, click
   :guilabel:`Deployment`, then the :guilabel:`More` drop-down list, then
   :guilabel:`Raw AutomationConfig`. The raw configuration shows the internal
   representation of the configuration that |mms| stores, including fields
   that should **not** be updated through the API.

The Automation Agent stores a copy of the configuration in the
``mms-cluster-config-backup.json`` file. The agent stores the most recent
version of configuration **with which the agent was able to reach goal
state**. If an agent is not able to process configuration changes, it
continues to store an older version of the configuration.

.. _automation-configuration-sample-entity:

Automation Configuration Entity
-------------------------------

This section describes the fields that comprise the automation configuration.
For additional examples, see the following page on GitHub:
`<https://github.com/10gen-labs/mms-api-examples/tree/master/automation/>`_.

.. contents:: This section includes the following:
   :local:
   :backlinks: none
   :depth: 1
   :class: twocols

Configuration Version
~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/automation-configuration-version.rst

Download Base
~~~~~~~~~~~~~

.. include:: /includes/automation-configuration-options.rst

MongoDB Versions Specifications
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/automation-configuration-mongoDbVersions.rst

Automation Agent
~~~~~~~~~~~~~~~~

.. include:: /includes/automation-configuration-agentVersion.rst

Monitoring Agent
~~~~~~~~~~~~~~~~

.. include:: /includes/automation-configuration-monitoringVersions.rst

Backup Agent
~~~~~~~~~~~~

.. include:: /includes/automation-configuration-backupVersions.rst

MongoDB Instances
~~~~~~~~~~~~~~~~~

.. include:: /includes/automation-configuration-processes.rst

Replica Sets
~~~~~~~~~~~~

.. include:: /includes/automation-configuration-replicaSets.rst

Sharded Clusters
~~~~~~~~~~~~~~~~

.. include:: /includes/automation-configuration-sharding.rst

Cluster Balancer
~~~~~~~~~~~~~~~~

.. include:: /includes/automation-configuration-balancer.rst

Authentication
~~~~~~~~~~~~~~

.. include:: /includes/automation-configuration-auth.rst

SSL
~~~

.. include:: /includes/automation-configuration-ssl.rst

MongoDB Roles
~~~~~~~~~~~~~

.. include:: /includes/automation-configuration-roles.rst

Kerberos
~~~~~~~~

.. include:: /includes/automation-configuration-kerberos.rst

Indexes
~~~~~~~

.. include:: /includes/automation-configuration-indexConfigs.rst
