==================================
Frequently Asked Questions: Backup
==================================

.. default-domain:: mongodb

MMS Backup creates backups of MongoDB replica sets and sharded
clusters. After an initial sync to MongoDB's datacenters, MMS Backup
tails the operation log (:manual:`oplog </core/replica-set-oplog/>`)
to provide a continuous backup with point-in-time recovery of replica
sets and consistent snapshots of sharded clusters. For more
information, please review these frequently asked questions or create
an MMS Backup account.

Requirements
------------

What version of MongoDB does |backup| require?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To back up a sharded cluster, |backup|
requires version 2.4.3 or later.

To back up a replica set, |backup| requires
version 2.2 or later.

What MongoDB permissions does the Backup Agent require?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you are backing up a MongoDB instance that has authentication enabled,
the Backup Agent requires elevated privileges, as described in
:ref:`required-permissions-mms-backup`.

.. seealso:: `User Privilege Roles in MongoDB <http://docs.mongodb.org/manual/reference/user-privileges/>`_.

Are there any limits to the types of deployments |backup| supports?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Yes. |backup| does not currently support standalone deployments.
|backup| has full support for replica sets and sharded clusters.

Why doesn't |backup| support standalone deployments?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

After an initial sync of your data to MMS, |backup| copies
data from the :term:`oplog` to provide a continuous backup with
point-in-time recovery. |backup| does not support standalone servers,
which do not have an oplog. To support backup with a single
:program:`mongod` instance, you can run a one-node
replica set.

.. seealso:: :manual:`Convert a Standalone to a Replica Set </tutorial/convert-standalone-to-replica-set/>`.

How Does MMS Measure Data Size?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MMS uses the following conversions to measure snapshot size and to measure
how much oplog data has been processed:

- 1 MB = 1024\ :sup:`2` bytes

- 1 GB = 1024\ :sup:`3` bytes

- 1 TB = 1024\ :sup:`4` bytes

Interface
---------

How can I verify that I'm running the latest version of the Backup Agent?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If your Backup Agent is out of date, it will be highlighted in red on
the :guilabel:`Agents` tab of the "Hosts" page in the MMS interface.

Why is my Backup Agent highlighted in red?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If your agent is highlighted in red on the :guilabel:`Agents` tab of
the "Hosts" page, your agent is out of date. For instructions on
updating the agent, see the :doc:`installation instructions
</tutorial/nav/backup-getting-started>`.

Operations
----------

How does |backup| work?
~~~~~~~~~~~~~~~~~~~~~~~

You install the Backup Agent on a server in the same deployment with
your MongoDB infrastructure. The agent conducts an initial sync of
your data to MMS. After the initial sync, the agent tails the
:manual:`oplog </manual/core/replica-set-oplog/>` to provide a
continuous backup of your deployment.

Where should I run the Backup Agent?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The Backup Agent can run anywhere in your infrastructure that has
access to your ``mongod`` instances. To avoid contention for network
and CPU resources, *do not* run the Backup Agent on the same hosts that
provide your ``mongod`` instances.

The Backup Agent has the same performance profile impact as a secondary. For
the initial backup, the load scales with the size of your data set. Once an
initial backup exists, the load scales with oplog gigabytes used per hour.

Can I run the Backup and Monitoring Agents on a Single System?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/faq-backup-and-monitoring-agent-on-one-server.rst

Can I run multiple Backup Agents to achieve high availability?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You can run multiple Backup Agents for high availability. If you do, the
Backup Agents must run on different hosts.

When you run multiple Backup Agents, only one agent per group or
environment is the **primary agent**. The primary agent performs the
backups. The remaining agents are completely idle, except to log their
status as standbys and to periodically ask MMS whether they should become
the primary.

Will the MongoDB Backup Service impact my production databases?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

|backup| will typically have minimal impact on
production MongoDB deployments. This impact will be similar to that of
adding a new :term:`secondary` to a :term:`replica set`.

By default, the Backup Agent will perform its initial sync,
the most resource intensive operation for |backup|, against
a secondary member of the replica set to limit its impact.
You may optionally configure the Backup Agent to
perform the initial sync against the replica set's :term:`primary`,
although this will increase the impact of the initial sync operation.

Does the Backup Agent modify my database?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The Backup Agent writes a small token into the oplog of the source
database every hour. These tokens provide a heartbeat for |backup|
and have no effect on the source deployment. Each token is
less than 100 bytes.

.. only:: saas

   Is my data safe?
   ~~~~~~~~~~~~~~~~

   Yes, MMS uses enterprise-grade hardware co-located in secure data centers to
   store all user data. The Backup Agent transmits all data using SSL. The data
   is not encrypted at rest. |backup| requires two-factor authentication to
   provide any data for restores.

   Is there a limit to Backup size?
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   |backup| works optimally for deployments in which each replica set has
   a data size of less than 2 TB. Within a sharded cluster, this means
   that |backup| is optimized for clusters where each shard has a data
   size of less than 2 TB.

   There is currently no limit on the total size of snapshot storage.

   If you wish to use |backup| for a larger deployment, please
   `contact us <https://mms.mongodb.com/links/support>`_ for more information.

What is the load on the database during the initial Backup sync?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The impact of the initial backup synchronization should be similar to
syncing a new secondary replica set member. The Backup Agent does not
throttle its activity, and attempts to perform the sync as quickly as
possible.

Can I backup my standalone deployment?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

No. |backup| does not currently support standalone
deployments. To convert to a replica set, consult MongoDB's `replication
documentation <http://docs.mongodb.org/manual/replication/>`_.

How do I perform maintenance on a Replica Set with Backup enabled?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Most operations in a replica set are replicated via the oplog and are
thus captured by the backup process. Some operations, however, make
changes that are *not* replicated: for these operations you *must*
have the Backup service resync from your set to include the changes.

The following operations are not replicated and therefore require
resync:

- Renaming or deleting a database by deleting the data files in the data
  directory. As an alternative, remove databases using an operation
  that MongoDB will replicate, such as :method:`db.dropDatabase()` from
  the :program:`mongo` shell.

- Changing any data while the instance is running as a :term:`standalone`.

- Using :dbcommand:`compact` or :dbcommand:`repairDatabase` to reclaim a
  significant amount of space. This is not strictly necessary but will
  ensure that the MMS copy of the data is resized, which means quicker
  restores and lower costs.

.. seealso:: :manual:`Maintenance Operations for Replica Set Members
   </tutorial/perform-maintence-on-replica-set-members>`.

Does the Backup Agent Support SSL?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. only:: saas

   The Backup Agent *always* connects to the MMS servers using an SSL (HTTPS)
   connection.

The Backup Agent can connect to replica sets and shared clusters
configured with SSL. See the :ref:`Backup Agent Configuration <backup-ssl>`
documentation for more information.

How Do I Delete a Backup Snapshot?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You can delete replica set backup snapshots and snapshots for replica sets in a
sharded cluster set if the snapshots are not needed for point-in-time restores.
See :doc:`/tutorial/delete-backup-snapshots` for details.

Configuration
-------------

What are "excluded namespaces"?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Excluded namespaces are databases and collections that MMS will not
back up. This is useful for large databases or collections that
contain data that you will not need to restore: caches and logs, for example.

How can I prevent |backup| from backing up a collection?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

|backup| allows you to specify "excluded namespaces", which are
collections or databases that you do not want MMS to back up.

You can specify the namespaces to exclude when you initially enable
backup on a replica set or sharded cluster, or can edit the list at
any time by selecting the ":guilabel:`gear icon`" in the
:guilabel:`Sharded Cluster Status` or :guilabel:`Replcia Set Status`
tables in MMS.

How can I change which namespaces are on the "excluded namespaces" list?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Click on the ":guilabel:`gear icon`" next to the name of the replica
set or sharded cluster whose excluded namespaces you want to modify in the
:guilabel:`Sharded Cluster Status` or :guilabel:`Replcia Set Status`
tables in MMS. A modal window will open, where you can add
databases or collections to the list, or remove list items by clicking
on the red :guilabel:`x` icon.

Removing a namespace from the excluded namespaces list necessitates a
re-sync. |backup| handles this re-sync.

.. only:: hosted

   How can I use backup if Backup Jobs Fail to Bind?
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   The most common reason that jobs fail to bind to a Backup daemon is
   when no daemon has space for local copy of the backed up replica
   set.

   To increase capacity so that the backup job can bind, you can:

   - add an additional backup daemon.

   - increase the size of the file system that holds the
     :setting:`rootDirectory` directory.

   - move the :setting:`rootDirectory` data to a new volume with more
     space, and create a symlink or configure the file system mount
     points so that the daemon can access the data using the original
     path.

   How do I resolve ``applyOps`` Errors During Backups?
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   If you notice *consistent* errors in ``applyOps`` commands in your
   Backup logs, it *may* indicate that the daemon has run out of space.

   To increase space on a daemon to support continued operations, you
   can:

   - increase the size of the file system that holds the
     :setting:`rootDirectory` directory.

   - move the :setting:`rootDirectory` data to a new volume with more
     space, and create a symlink or configure the file system mount
     points so that the daemon can access the data using the original
     path.

Restoration
-----------

MMS Backup produces a copy of your data files that you can use to seed a
new deployment. For an overview of restore, see :ref:`restores`.

How can MMS provide point-in-time restores for any point in time?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Although it is faster to provide a restore for the time at which a
snapshot was actually stored, this might not be ideal when restoring a
replica set or sharded cluster. In consequence, the Backup service
can build a restore to any point in time within a 24-hour period by
replaying the oplog to the desired time.

For details, see the :doc:`procedures for restoring replica sets and sharded clusters
</tutorial/nav/backup-restoration>`.

Can I take snapshots more or less often than every 6 hours?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

No, MMS does not support a snapshot schedule with more frequent
snapshots. See :doc:`Activate MMS Backup for a Replica
Set </tutorial/enable-backup-for-replica-set>` and :doc:`Activate MMS
Backup for a Sharded Cluster
</tutorial/enable-backup-for-sharded-cluster>` for more information on
configuring backup snapshot schedules.

.. _backup-faq-retention:

Can I set my own snapshot retention policy?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Yes. Backup snapshot retention is configurable.

The default snapshot retention policy is to maintain:

- 6-hour interval snapshots for 2 days,
- Daily snapshots stored for 1 week,
- Weekly snapshots stored for 1 month, and
- Monthly snapshots stored for 1 year.

You can customize both the frequency and schedule of snapshots that
MMS captures. This allows you to tune your backup strategy based on
your requirements.

For example you may choose to capture more frequent snapshots for the
most mission critical data, and capture snapshots less frequently for
less critical data.

.. only:: saas

   Customizable snapshot retention polices give you greater control over your
   backup costs. The pricing for MMS Backup depends on both snapshot storage
   and oplog processing. By adjusting your retention policy, you can control
   your snapshot storage costs. You can also control backup costs by excluding
   non-critical databases and collections.

See :doc:`Activate MMS Backup for a Replica Set
</tutorial/enable-backup-for-replica-set/>` and :doc:`Activate MMS
Backup for a Sharded Cluster
</tutorial/enable-backup-for-sharded-cluster/>` for details about
configuring snapshot retention frequency and excluding namespaces for
non-critical databases and collections.

.. only:: saas

   How many copies of my data does the Backup Service store?
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Although we only charge you for only one copy of the data, |backup| stores
   at least 3 copies of your data in at least 2 geographic locations to ensure
   redundancy.

How long does it take to create a restore?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

All snapshots are set in compressed form from |backup| to your
infrastructure.

.. only:: saas

   Within the US, |backup| sends snapshots at 50-100 Mbps. Assuming a
   compression factor of 4x and transmission speeds of 50 Mbps, a 250 GB
   snapshot will take 2.5 hours.

In addition, point-in-time restores that require creating a new
snapshot take additional time, which depends on the size of the
scheduled snapshot and the amount the oplog entries that |backup| must
apply to the preceding snapshot to roll forward to the requested
point-in-time of the backup.

Does |backup| perform any data validation?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

|backup| conducts basic corruption checks and provides an alert if any
component (e.g., the agent) is down or broken, but does not perform
explicit data validation. When it detects corruption, |backup| errs on
the side of caution and invalidates the current backup and sends an
alert.

How do I restore? What do I get when I restore?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You can request a restore via MMS, where you can then choose which
snapshot to restore and how you want |backup| to deliver the
restore. All restores require
2-factor authentication. MMS will send an authorization code via SMS
code to your administrator. You must enter the authorization code into
the backup interface to begin the restore process.

.. include:: /includes/fact-two-factor-auth-India-limit.rst

|backup| delivers restores as ``tar.gz`` archives of
MongoDB data files.

Restore delivery options are:

- **SCP to your Infrastructure**: |backup| will transmit the
  backup to your infrastructure over a secure channel.  You must
  provide connection information for a host in your deployment.

- **Download**: |backup| will make your restore data
  available using a custom, one-time-use URL.

What is the SCP public key for |mms|?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

|mms| generates an SSH public key on a per user basis to
use when for delivering backups via SCP. To generate a public key, go
to the "Settings" page and choose "Backup and Restore Public Key,"
then type in a passphrase and click on "Generate a New Public Key".

The public key will generate an SSH key and display it. Add this key
to your authorized hosts file.

See the :ref:`Restore via Secure Copy <scp-ssh>` documentation
for more information about granting access via SSH public key.


How does Backup handle Rollbacks?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If your MongoDB deployment experiences a :manual:`rollback
</core/replica-set-rollbacks>`, then MMS Backup also rolls back.

Backup detects the rollback when a :term:`tailing cursor <tailable
cursor>` finds a mismatch in timestamps or hashes of write operations.
Backup enters a rollback state and tests three points in the oplog of your
replica set's :term:`primary` to locate a common point in history. MMS rollback differs
from MongoDB :term:`secondary` rollback in that the common point does not
necessarily have to be the most *recent* common point.

When Backup finds a common point, the service invalidates oplog entries
and snapshots beyond that point and rolls back to the most recent snapshot
before the common point. Backup then resumes normal operations.

If MMS cannot find a common point, a :manual:`resync
</tutorial/resync-replica-set-member>` is required.

.. only:: saas

   Pricing
   -------

   For information about MMS backup pricing, please see the `MMS Backup
   Pricing page <https://mms.mongodb.com/pricing>`_.
