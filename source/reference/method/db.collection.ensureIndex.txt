===========================
db.collection.ensureIndex()
===========================

.. default-domain:: mongodb

Definition
----------

.. method:: db.collection.ensureIndex(keys, options)

   Creates an index on the specified field if the index does not
   already exist.

   The :method:`~db.collection.ensureIndex()` method has the following fields:

   .. include:: /reference/method/db.collection.ensureIndex-param.rst

.. _ensureIndex-options:

Options
-------

The ``options`` document contains a set of options that controls the
creation of the index. Different index types can have additional
options specific for that type.

Options for All Index Types
~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following options are available for all index types unless
otherwise specified:

.. include:: /reference/method/db.collection.ensureIndex-options-param.rst

Options for ``text`` Indexes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following options are available for :doc:`text </core/index-text>`
indexes only:

.. include:: /reference/method/db.collection.ensureIndex-options-text.rst

Options for ``2dsphere`` Indexes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following option is available for :doc:`2dsphere </core/2dsphere>`
indexes only:

.. include:: /reference/method/db.collection.ensureIndex-options-2dsphere.rst

Options for ``2d`` Indexes
~~~~~~~~~~~~~~~~~~~~~~~~~~

The following options are available for :doc:`2d </core/2d>` indexes
only:

.. include:: /reference/method/db.collection.ensureIndex-options-2d.rst

Options for ``geoHaystack`` Indexes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following option is available for :doc:`geoHaystack </core/geohaystack>`
indexes only:

.. include:: /reference/method/db.collection.ensureIndex-options-geohaystack.rst

Behaviors
---------

The :method:`~db.collection.ensureIndex()` method has the behaviors
described here.

- To add or change index options you must drop the index using the
  :method:`~db.collection.dropIndex()` method and issue another
  :method:`~db.collection.ensureIndex()` operation
  with the new options.

  If you create an index with one set of options, and then issue
  the :method:`~db.collection.ensureIndex()` method
  with the same index fields and different options without
  first dropping the index,
  :method:`~db.collection.ensureIndex()` will *not* rebuild the existing
  index with the new options.

- If you call multiple :method:`~db.collection.ensureIndex()`
  methods with the same index specification at the same time, only
  the first operation will succeed, all other operations will have
  no effect.

- Non-background indexing operations will block all other
  operations on a database.

-  .. include:: /includes/fact-index-key-length-operation-behaviors.rst
      :start-after: index-field-limit-ensureIndex
      :end-before: .. index-field-limit-reIndex

   .. versionchanged:: 2.6

   .. |limit| replace:: :limit:`Maximum Index Key Length <Index Key>`

Examples
--------

Create an Ascending Index on a Single Field
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following example creates an ascending index on the field
``orderDate``.

.. code-block:: javascript

   db.collection.ensureIndex( { orderDate: 1 } )

If the ``keys`` document specifies more than one field, then
:method:`~db.collection.ensureIndex()` creates a :term:`compound
index`.

Create an Index on a Multiple Fields
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following example creates a compound index on the
``orderDate`` field (in ascending order) and the ``zipcode``
field (in descending order.)

.. code-block:: javascript

   db.collection.ensureIndex( { orderDate: 1, zipcode: -1 } )

A compound index cannot include a :ref:`hashed index <index-type-hashed>`
component.

.. note::

   The order of an index is important for supporting
   :method:`~cursor.sort()` operations using the index.

.. seealso::

   - The :doc:`/indexes` section of this manual for full
     documentation of indexes and indexing in MongoDB.

   - :doc:`/core/index-text` for details on creating ``text``
     indexes.

   - :ref:`index-feature-geospatial` and
     :ref:`index-geohaystack-index` for geospatial queries.

   - :ref:`index-feature-ttl` for expiration of data.

   - :method:`db.collection.getIndexes()` to view the specifications of
     existing indexes for a collection.
