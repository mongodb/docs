.. _convert-to-serverless:

=========================================================
Convert a {+Shared-Cluster+} to a {+Serverless-Instance+}
=========================================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

You can edit the {+database-deployment+} configuration in the 
{+atlas-ui+} to convert a {+Shared-cluster+} (``M0``, ``M2``, or
``M5``) to a {+Serverless-instance+}. When you
convert a {+Shared-cluster+} to a {+Serverless-instance+}, you can also
change the cloud provider, region, and backup options.

To learn more about the use cases for {+clusters+} and 
{+Serverless-instances+} and determine which is best for you, see
:ref:`create-new-database-deployment`.

|service| doesn't support conversion from a {+dedicated-cluster+} to a 
{+Serverless-instance+}.

.. important:: A {+Serverless-instance+} can't convert to a {+cluster+}

   You can't convert a 
   {+Serverless-instance+} back to a {+cluster+}. To move your data
   back to a {+cluster+}, you must manually migrate to a new 
   {+cluster+} of the same MongoDB version as your 
   {+Serverless-instance+} using :dbtools:`mongodump </mongodump>` and
   :dbtools:`mongorestore </mongorestore>`. To learn more, see
   :ref:`convert-serverless-to-dedicated`. If the
   {+Serverless-instance+} runs on a rapid release version of MongoDB,
   you can't migrate to a {+Shared-cluster+}. To learn more, see the
   :ref:`convert-shared-cluster-op-considerations`.
     
   Read the :ref:`considerations
   <convert-to-serverless-considerations>` carefully before you proceed
   with the conversion to a {+Serverless-instance+}.

.. _convert-to-serverless-considerations:

Considerations
--------------

Consider the following factors before you convert a
{+Shared-cluster+} to a {+Serverless-instance+}:

Limitations
~~~~~~~~~~~

{+Serverless-instances+} don't support the same features as 
{+Shared-clusters+}. If you change your {+Shared-cluster+} to a 
{+Serverless-instance+}, you lose access to the following features.

.. include:: /includes/fact-serverless-adding-features.rst

.. list-table::
   :header-rows: 1
   :widths: 30 70

   * - Configuration/Operation
     - Notes

   * - Select Cloud Service Provider Regions
     - You can deploy both {+Shared-clusters+} and 
       {+Serverless-instances+} in a subset of regions on |aws|, |gcp|,
       and |azure|, but {+Serverless-instances+} support fewer regions
       across all cloud service providers. To learn more about the
       supported cloud provider regions for each 
       {+database-deployment+} type, see:

       - :ref:`Amazon Web Services (AWS) <amazon-aws>`
       - :ref:`Google Cloud Platform (GCP) <google-gcp>`
       - :ref:`Microsoft Azure <microsoft-azure>`

       If your current cloud provider region is unsupported for 
       {+Serverless-instances+}, |service| alerts you before conversion
       and lets you choose a new cloud provider and region.

   * - Select Driver Version Support
     - Some driver versions that {+Shared-clusters+} support are
       unsupported for {+Serverless-instances+}. If you connect to 
       |service| using a driver, check the :ref:`atlas-serverless-drivers`.

To see the full list of limitations for {+Serverless-instances+}, see 
:ref:`serverless-instance-limitations`. |service| supports some
features listed in the :ref:`serverless-instance-limitations` only for 
{+dedicated-clusters+}, so the features might be unsupported for your 
current {+Shared-cluster+} tier.

Compatibility
~~~~~~~~~~~~~

- You can't convert a {+Shared-cluster+} to a {+Serverless-instance+}
  if you connected the {+cluster+} to any of the following:

  - :appservices:`{+atlas-app-services+}</>`
  - :ref:`{+fts+} <fts-top-ref>`
  
  You must :ref:`disconnect the 
  {+Shared-cluster+} from these features
  <convert-to-serverless-prereqs>` before you convert to a 
  {+Serverless-instance+}.

  .. note::

     You can convert your {+Shared-cluster+} to a 
     {+Serverless-instance+} 15-20 minutes after you disconnect it from
     :appservices:`{+atlas-app-services+}</>`
     and :ref:`{+fts+} <fts-top-ref>`.


- You can't convert a {+cluster+} that contains a 
  :term:`capped collection` to a {+Serverless-instance+}.
  
- You can't convert a {+cluster+} to a {+Serverless-instance+} if you
  use :manual:`collation </reference/collation/>` on the {+cluster+}'s
  collections, indexes, or queries.

- You can't convert a paused ``M0`` {+cluster+} to a 
  {+Serverless-instance+}. You must :ref:`resume the paused {+cluster+}
  <resume-cluster>` before you change it to a 
  {+Serverless-instance+}.

.. _convert-shared-cluster-op-considerations:

Operational Considerations
~~~~~~~~~~~~~~~~~~~~~~~~~~

- {+Shared-clusters+} always follow a :ref:`major release
  <major-releases>` cadence. {+Serverless-instances+} always run on the
  latest MongoDB release, which may be a rapid release. |service|
  automatically upgrades to the latest MongoDB version when you convert
  to a {+Serverless-instance+}, but you should:

  - Ensure that the latest MongoDB version is compatible with your
    application.
  - Consider that you can't reverse conversion to a 
    {+Serverless-instance+}. To revert to using a {+cluster+} after you
    convert to a {+Serverless-instance+}, you must use 
    :dbtools:`mongodump </mongodump>` and 
    :dbtools:`mongorestore </mongorestore>` to manually migrate your data
    to a new {+cluster+}. 
    
    :dbtools:`mongodump </mongodump>` and :dbtools:`mongorestore 
    </mongodump>` support migration only between 
    {+database-deployments+} of the same MongoDB version. As a result,
    if the MongoDB version of the {+Serverless-instance+} is later than
    all available major versions for {+Shared-clusters+}, you can
    migrate only to a {+dedicated-cluster+} until the next major
    version release.

  To learn more about release cadences, see :ref:`release-cadence`.

- You can connect to a {+Serverless-instance+} only using a 
  :manual:`DNS seed list connection string 
  </reference/connection-string/#dns-seed-list-connection-format>`. 
  If you use a different connection string
  format to connect to your {+Shared-cluster+}, change your connection
  string after you convert to a {+Serverless-instance+}.
  To learn more and find your connection string, see
  :ref:`connect-to-database-deployment`.

- If you use {+charts+}, all existing charts that use this {+cluster+}
  won't render until you `update the data source 
  <https://www.mongodb.com/docs/charts/data-sources/#std-label-edit-data-source>`__ 
  to the respective collection in the new {+Serverless-instance+}.

Downtime During Conversion
~~~~~~~~~~~~~~~~~~~~~~~~~~

Your {+database-deployment+} must go offline while it converts to a 
{+Serverless-instance+}. As a result:

- You can't read/write to the {+database-deployment+} while |service|
  converts a {+Shared-cluster+} to a {+Serverless-instance+}.
- |service| doesn't preserve sessions, transactions, retryable writes,
  and change streams from before the conversion.

.. _convert-shared-cluster-billing:

Billing Considerations
~~~~~~~~~~~~~~~~~~~~~~

- {+Serverless-instances+} offer pay-per-operation pricing. You
  pay only for the Processing Units consumed by your database 
  operations and storage consumed by your data and indexes. To learn
  more, see :ref:`<serverless-instance-costs>`.
- |service| selects :guilabel:`Serverless Continuous Backup` by default
  when you convert a {+Shared-cluster+} to a {+Serverless-instance+}.
  To learn about the costs associated with continuous backup, see the
  Continuous Backup row of the Usage Cost Summary in 
  :ref:`<serverless-instance-costs>`.

.. _convert-to-serverless-prereqs:

Prerequisites
-------------

Before you convert to a {+Serverless-instance+}, disconnect your 
{+Shared-cluster+} from {+atlas-app-services+} and {+fts+}:

- To disconnect your {+cluster+} from {+atlas-app-services+}, you must
  unlink the {+cluster+} as a :appservices:`data source 
  </manage-apps/configure/config/data_sources/>` from all of your apps.
  To learn more, see :appservices:`Update an App 
  </manage-apps/configure/update-app/>`.
- To disconnect your {+cluster+} from {+fts+}, you must delete all 
  {+fts+} indexes for your {+cluster+}. To learn more, see
  :ref:`ref-delete-index`.

Convert Your {+Shared-Cluster+}
-------------------------------

After you complete the prerequisites, to convert
your {+Shared-cluster+} to a {+Serverless-instance+}:

.. procedure::
   :style: normal

   .. step:: Click :guilabel:`Edit Config` on your :guilabel:`Clusters` page.

   .. step:: Select your cluster from the drop-down menu.

   .. step:: Click :guilabel:`Serverless`.

   .. step:: (Optional) Change the cloud provider and region.

      If your current cloud provider region is unsupported for 
      {+Serverless-instances+}, |service| alerts you and chooses the
      default region for your cloud provider. You can select another
      cloud provider and region or accept the default selections.

      If your current cloud provider region is supported, the
      :guilabel:`Cloud Provider & Region` section is collapsed. You can
      expand the section and select another cloud provider and region.

   .. step:: (Optional) Change the backup options.

      |service| offers the following backup options for
      {+Serverless-instances+}:

      .. include:: /includes/list-table-serverless-backup-options.rst

      |service| selects :guilabel:`Serverless Continuous Backup` by
      default. To change to :guilabel:`Basic Backup`, expand the
      :guilabel:`Additional Settings` section and select 
      :guilabel:`Basic Backup`.

   .. step:: Read and acknowledge the considerations.

      Check the box next to 
      :guilabel:`I understand and agree to the considerations of converting to a {+Serverless-instance+}`.

   .. step:: Click :guilabel:`Review Changes`.

   .. step:: Review the changes and click :guilabel:`Apply Changes`.

      You can use a :manual:`DNS seed list connection string 
      </reference/connection-string/#dns-seed-list-connection-format>`
      to connect to your new {+Serverless-instance+}.
