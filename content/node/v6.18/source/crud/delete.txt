.. _node-fundamentals-delete:
.. _node-delete:

================
Delete Documents
================

.. meta::
   :description: Learn how to use deleteOne() and deleteMany() methods in the MongoDB Node.js Driver to remove documents from a collection based on specified query criteria.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. facet::
   :name: genre
   :values: reference

.. meta:: 
   :keywords: code example, node.js, delete data

Overview
--------

In this section, we show you how to call the write operations to **remove**
documents from a collection in your MongoDB database.

Delete
------

If you want to remove existing documents from a collection, you can
use ``deleteOne()`` to remove one document or ``deleteMany()`` for one or
more documents. These methods accept a query document that matches the
documents you want to delete.

.. note::

  If your application uses information about the deleted document after deletion,
  you can use the
  `collection.findOneAndDelete() <{+api+}/classes/Collection.html#findOneAndDelete>`__
  method, which has a similar interface to ``deleteOne()`` but also
  returns the deleted document.

You can specify the document or documents to be deleted by the
``deleteOne()`` or ``deleteMany()`` write operations in a JSON object as
follows:

.. code-block:: javascript

   const doc = {
     pageViews: {
       $gt: 10,
       $lt: 32768
     }
   };

To delete the first matching document using the ``deleteOne()`` method or
to delete all matching documents using the ``deleteMany()`` method, pass the
document as the method parameter:

.. code-block:: javascript

   const deleteResult = await myColl.deleteOne(doc);
   const deleteManyResult = await myColl.deleteMany(doc);

You can print the number of documents deleted by the operation by
accessing the ``deletedCount`` field of the result for each of the
method calls above as follows:

.. code-block:: javascript

   console.dir(deleteResult.deletedCount);
   console.dir(deleteManyResult.deletedCount);

If the delete operation is successful, these statements print the number of documents
deleted by the associated operation.

.. _node-usage-deleteone:

deleteOne() Example: Full File
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/crud/example-intro.rst

.. include:: /includes/crud/example-identical-code.rst

The following code is a complete, standalone file that performs a delete one
operation:

.. literalinclude:: /code-snippets/usage-examples/deleteOne.js
   :language: javascript
   :linenos:

Running the preceding example results in the following output:

.. code-block:: none
   :copyable: false

   Successfully deleted one document.

If you run the example more than once, the code produces the following output
because you deleted the matching document in the first run:

.. code-block:: none
   :copyable: false

   No documents matched the query. Deleted 0 documents.

.. _node-usage-deletemany:

deleteMany() Example: Full File
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/crud/example-intro.rst

The following code is a complete, standalone file that performs a delete many
operation:

.. tabs::

   .. tab:: JavaScript
      :tabid: javascript

      .. literalinclude:: /code-snippets/usage-examples/deleteMany.js
         :language: javascript
         :linenos:

   .. tab:: TypeScript
      :tabid: typescript

      .. literalinclude:: /code-snippets/usage-examples/deleteMany.ts
         :language: typescript
         :linenos:

Running the preceding example for the first time results in the following output:

.. code-block:: none
   :copyable: false

   Deleted 19 documents

If you run the example more than once, you see the following output because
you deleted the matching documents in the first run:

.. code-block:: none
   :copyable: false

   Deleted 0 documents

API Documentation
-----------------

To learn more about any of the types or methods discussed in this guide, see the
following API documentation:

- `MongoClient <{+api+}/classes/MongoClient.html>`__
- `Db <{+api+}/classes/Db.html>`__
- `Collection <{+api+}/classes/Collection.html>`__
- `deleteOne() <{+api+}/classes/Collection.html#deleteOne>`__
- `deleteMany() <{+api+}/classes/Collection.html#deleteMany>`__