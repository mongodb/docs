==============
MongoDB Charts
==============

.. default-domain:: mongodb

Introduction
------------

MongoDB Charts is a tool to create visual representations of
your MongoDB data. Data visualization is a key component to providing a
clear understanding of your data, highlighting correlations between
variables and making it easy to discern patterns and trends within your
dataset. You can use MongoDB Charts to visualize data both in the form
of graphical charts and in tabular formats.

MongoDB Charts also makes communicating your data a straightforward
process by providing built-in tools to easily share your data across
a variety of platforms.

MongoDB Charts Features
-----------------------

One of the most powerful features of MongoDB Charts is its built-in
:manual:`aggregation </aggregation>` functionality. Aggregation allows
you to process your collection data by a variety of metrics and perform
calculations such as mean and standard deviation to provide further
insight into your data.

Further, MongoDB Charts is able to handle document-based data,
including nested documents and arrays. This gives you the flexibility
of structuring data how it fits best for your application while
still retaining powerful visualization capabilities.

MongoDB Charts Concepts
-----------------------

The following elements of MongoDB Charts provide the flow of data
from its source to a visual representation:

.. list-table::
   :header-rows: 1
   :widths: 20 80

   * - Element
     - Description

   * - Data Source
     - A reference to a MongoDB collection which contains the data you
       wish to visualize. Note that deleting a data source has no
       effect on the underlying MongoDB collection. For information on
       connecting to and managing a data source, see
       :doc:`Data Sources <data-sources>`.

   * - Chart
     - A visualization which maps to a *single* data source.

   * - Dashboard
     - A group of one or more charts.

Dashboards are the cornerstone of MongoDB Charts as they are
where you create and view your data visualizations. For details
on how to create, manage, and share dashboards, see
:doc:`Dashboards <dashboards>`.

.. note::

   Since a chart can only display data from a single collection,
   dashboards which combine multiple charts are not only useful, but
   necessary for visualizing data from multiple collections in a single
   view. This can lead to new insights into your data which may not be
   immediately apparent.

.. example::

   The following dashboard contains two charts, each with distinct
   focal points into a collection containing movie data:

   .. figure:: /images/charts/charts-dashboard.png
      :figwidth: 721px
      :lightbox:
      :alt: Sample Charts dashboard

  .. class:: hidden

     .. toctree::
        :titlesonly:

        /installation
        /dashboards
        /data-sources
        /building-charts
