title: "Set up MongoDB user in the target |service| cluster."
level: 4
ref: mongoimport-user-target
content: |

   To run :program:`mongoimport` to write to |service| cluster, you
   must specify a MongoDB user that has :manual:`readWrite
   </reference/built-in-roles/#readWrite>` privileges in the database
   into which to import data.
   For example, a user with :atlasrole:`Atlas admin`
   role provides these privileges.

   If no such user exists, create the user:

   #. Go to :guilabel:`Clusters` view, select the :guilabel:`Security`
      tab, and then :guilabel:`Users`.

   #. Click :guilabel:`Add New User`.

   #. Add an :guilabel:`Atlas admin` user.
---
title: "Open the connect dialog." 
level: 4
ref: mongoimport-connect-dialog
content: |
   From the :guilabel:`Clusters` view, click :guilabel:`Connect` for
   the |service| cluster into which you want to migrate data.
---
title: "Update IP Whitelist."
level: 4
ref: mongoimport-whitelist
content: |
  If the host where you will run :program:`mongoimport` is not in the
  :doc:`IP Whitelist </security-whitelist>`, update the list. You can
  specify either:
     
  - The public IP address of the server on which :program:`mongoimport` will run, or
  
  - If set up for VPC peering, either the peer's VPC CIDR block (or a
    subnet) or the peer VPC's Security Group.
---
title: "Copy the target cluster host information."
level: 4
ref: connect
content: |
   From the connect dialog, get the cluster host information. This
   information is specified to :program:`mongoimport` in the
   ``--host`` option.
   
   If the |service| cluster is a replica set, you must also retrieve
   the replica set name. For example:
      
   .. code-block:: none

      myAtlasRS/atlas-host1:27017,atlas-host2:27017,atlas-host3:27017

---
title: "Run mongoimport."
level: 4
ref: mongoimport-run
pre: |
   The following operation imports data from the file
   ``/somedir/myFileToImport.json`` into collection ``myData`` in the
   ``testdb`` database. The operation includes the ``--drop`` option to
   drop the collection first if the collection exists. 
action: 
   copyable: true
   language: sh
   code: |
      mongoimport --host myAtlasRS/atlas-host1:27017,atlas-host2:27017,atlas-host3:27017 --ssl -u myAtlasAdminUser -p atlasPassw0Rd --authenticationDatabase admin  \
         --db testdb --collection myData --drop --file /somedir/myFileToImport.json
post: |

   Add/edit the :program:`mongoimport <bin.mongoimport>` command line
   options as appropriate for your deployment.
   See :program:`mongoimport <bin.mongoimport>` for more :program:`mongoimport`
   options.
...
