# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: 2014-04-08 19:12+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# 498121fc7b2942db8a35dc60fd261a51
#: ../source/reference/method/cursor.sort.txt:3
msgid "cursor.sort()"
msgstr ""

# 02680a538c594a89a09b009c33f77871
#: ../source/reference/method/cursor.sort.txt
msgid "On this page"
msgstr ""

# ccb798f01b164f669dd3c08d82b59d34
#: ../source/reference/method/cursor.sort.txt:14
msgid "Definition"
msgstr ""

# fdfde020246b4334a5a02a3234864969
#: ../source/reference/method/cursor.sort.txt:18
msgid ""
"Specifies the order in which the query returns matching documents. You "
"must apply :method:`~cursor.sort()` to the cursor before retrieving any "
"documents from the database."
msgstr ""

# 881dec4ed370471ab4c40afe972d93e2
#: ../source/reference/method/cursor.sort.txt:22
msgid "The :method:`~cursor.sort()` method has the following parameter:"
msgstr ""

# bcee1d030c2d44b0b353be78917a04e5
#: ../source/reference/method/cursor.sort.txt:26
msgid ""
"The ``sort`` parameter contains field and value pairs, in the following "
"form:"
msgstr ""

# 26f0dc0c05fc43cda9fd3e93cf03347a
#: ../source/reference/method/cursor.sort.txt:33
msgid ""
"The sort document can specify :ref:`ascending or descending sort on "
"existing fields <sort-asc-desc>` or :ref:`sort on computed metadata "
"<sort-metadata>`."
msgstr ""

# fb0b9ae369004be9a36eb906dff8bbbb
#: ../source/reference/method/cursor.sort.txt:38
msgid "Behaviors"
msgstr ""

# 18b5c951db0741ecaf6b4b87338c5002
#: ../source/reference/method/cursor.sort.txt:41
msgid "Result Ordering"
msgstr ""

# c0ffbea898614e909379467123b4bb69
#: ../source/reference/method/cursor.sort.txt:43
msgid ""
"Unless you specify the :method:`~cursor.sort()` method or use the "
":query:`$near` operator, MongoDB does **not** guarantee the order of "
"query results."
msgstr ""

# d6b12998a36d4cee9f97f896987865a9
#: ../source/reference/method/cursor.sort.txt:50
msgid "Ascending/Descending Sort"
msgstr ""

# de0152e5a46e49fc9de85a2635dac725
#: ../source/reference/method/cursor.sort.txt:52
msgid ""
"Specify in the sort parameter the field or fields to sort by and a value "
"of ``1`` or ``-1`` to specify an ascending or descending sort "
"respectively."
msgstr ""

# eebb1c20076a4f42bb589e3d68faa176
#: ../source/reference/method/cursor.sort.txt:56
msgid ""
"The following sample document specifies a descending sort by the ``age`` "
"field and then an ascending sort by the ``posts`` field:"
msgstr ""

# ccf7d7f9dd4b4532a0d2d706145c52b9
#: ../source/includes/fact-sort-order.rst:1
msgid ""
"When comparing values of different :ref:`BSON types <bson-types>`, "
"MongoDB uses the following comparison order, from lowest to highest:"
msgstr ""

# e57c5c340e674728aac606ec79d1ffbb
#: ../source/includes/fact-sort-order.rst:4
msgid "MinKey (internal type)"
msgstr ""

# fd572ba69d9b46e5abc198a14628df5a
#: ../source/includes/fact-sort-order.rst:5
msgid "Null"
msgstr ""

# 78c2f59cc5b547da8d18a3c282da0c7a
#: ../source/includes/fact-sort-order.rst:6
msgid "Numbers (ints, longs, doubles, decimals)"
msgstr ""

# f26556d776c041f08b8eafc36a85f89f
#: ../source/includes/fact-sort-order.rst:7
msgid "Symbol, String"
msgstr ""

# a9770b7d25464ea7ab5aff80c92369af
#: ../source/includes/fact-sort-order.rst:8
msgid "Object"
msgstr ""

# 0d04b7005ee04a208300586303196920
#: ../source/includes/fact-sort-order.rst:9
msgid "Array"
msgstr ""

# 585dfc0c76914f818f401af79fc49e0e
#: ../source/includes/fact-sort-order.rst:10
msgid "BinData"
msgstr ""

# 24f7e73d5c0f4394a70fd791c1e22427
#: ../source/includes/fact-sort-order.rst:11
msgid "ObjectId"
msgstr ""

# 3b2a26f5a9cb43c09ca2f7274fcde084
#: ../source/includes/fact-sort-order.rst:12
msgid "Boolean"
msgstr ""

# 588a4142173c462884e75a55fcd60621
#: ../source/includes/fact-sort-order.rst:13
msgid "Date"
msgstr ""

# 052d1722855e4dabbdc0a8024e55afbf
#: ../source/includes/fact-sort-order.rst:14
msgid "Timestamp"
msgstr ""

# cf8c12cbe01343a28e17497209adccf6
#: ../source/includes/fact-sort-order.rst:15
msgid "Regular Expression"
msgstr ""

# ba36deb5166849c18ba9b04ea9f4506b
#: ../source/includes/fact-sort-order.rst:16
msgid "MaxKey (internal type)"
msgstr ""

# 36ee51f45ed24030ba9bd7469f68d0b7
#: ../source/reference/method/cursor.sort.txt:65
msgid ""
"For details on the comparison/sort order for specific types, see :ref"
":`bson-types-comparison-order`."
msgstr ""

# 53c001a47cc24dc9b8c166f8ff7ca32b
#: ../source/reference/method/cursor.sort.txt:71
msgid "Metadata Sort"
msgstr ""

# 77f362cb548a42e5a96f5ed437c3de94
#: ../source/reference/method/cursor.sort.txt:73
msgid ""
"Specify in the sort parameter a new field name for the computed metadata "
"and specify the :projection:`$meta` expression as its value."
msgstr ""

# f9e6f7f5480344f3be9421fa03f7cce9
#: ../source/reference/method/cursor.sort.txt:77
msgid ""
"The following sample document specifies a descending sort by the "
"``\"textScore\"`` metadata:"
msgstr ""

# 5f27ee3ff08b4ee79e674a1e423e7637
#: ../source/reference/method/cursor.sort.txt:84
msgid ""
"The specified metadata determines the sort order. For example, the "
"``\"textScore\"`` metadata sorts in descending order. See "
":projection:`$meta` for details."
msgstr ""

# 773615b68c0a4bb1817c731915cf4411
#: ../source/reference/method/cursor.sort.txt:89
msgid "Restrictions"
msgstr ""

# b185b83aa11141718d5e1b817b9658f7
#: ../source/reference/method/cursor.sort.txt:91
msgid ""
"When unable to obtain the sort order from an index, MongoDB will sort the"
" results in memory, which requires that the result set being sorted is "
"less than 32 megabytes."
msgstr ""

# 0668db0b99b744a0ba7c37b4e39cad31
#: ../source/reference/method/cursor.sort.txt:95
msgid ""
"When the sort operation consumes more than 32 megabytes, MongoDB returns "
"an error. To avoid this error, either create an index supporting the sort"
" operation (see :ref:`sort-index-use`) or use :method:`~cursor.sort()` in"
" conjunction with :method:`~cursor.limit()` (see :ref:`sort-limit-"
"results`)."
msgstr ""

# 8c1e36d610f94428af895e8b13a5c997
#: ../source/reference/method/cursor.sort.txt:104
msgid "Sort and Index Use"
msgstr ""

# 028f0c99dc60475bb0c22bb79a94ea0d
#: ../source/reference/method/cursor.sort.txt:106
msgid ""
"The sort can sometimes be satisfied by scanning an index in order. If the"
" query plan uses an index to provide the requested sort order, MongoDB "
"does not perform an in-memory sorting of the result set. For more "
"information, see :doc:`/tutorial/sort-results-with-indexes`."
msgstr ""

# e5904ce1169d44b0b8744f1342d9d8d8
#: ../source/reference/method/cursor.sort.txt:114
msgid "Limit Results"
msgstr ""

# 716e67d999234eeba96e4ae8a247a5c6
#: ../source/reference/method/cursor.sort.txt:116
msgid ""
"You can use :method:`~cursor.sort()` in conjunction with "
":method:`~cursor.limit()` to return the first (in terms of the sort "
"order) ``k`` documents, where ``k`` is the specified limit."
msgstr ""

# 3ccd57fe42484fb1b47b5b4f0807c900
#: ../source/reference/method/cursor.sort.txt:120
msgid ""
"If MongoDB cannot obtain the sort order via an index scan, then MongoDB "
"uses a top-k sort algorithm. This algorithm buffers the first ``k`` "
"results (or last, depending on the sort order) seen so far by the "
"underlying index or collection access. If at any point the memory "
"footprint of these ``k`` results exceeds 32 megabytes, the query will "
"fail."
msgstr ""

# 77c58d1153c8490c99f8e9eacff41877
#: ../source/reference/method/cursor.sort.txt:130
msgid "Interaction with :term:`Projection`"
msgstr ""

# 29062c577a584e93a6b0774e11415792
#: ../source/reference/method/cursor.sort.txt:132
msgid ""
"When a set of results are both sorted and projected, the MongoDB query "
"engine will always apply the sorting **first**."
msgstr ""

# f789c1350d4a457b9c9c8cbf155efd4f
#: ../source/reference/method/cursor.sort.txt:136
msgid "Examples"
msgstr ""

# 8d673004071e457ba959f59b7403fe04
#: ../source/reference/method/cursor.sort.txt:138
msgid "A collection ``orders`` contain the following documents:"
msgstr ""

# c1c70ae310e542d2bf9fa3191507dd20
#: ../source/reference/method/cursor.sort.txt:149
msgid ""
"The following query, which returns all documents from the ``orders`` "
"collection, does not specify a sort order:"
msgstr ""

# 658f458d22804ab8a746b90e95e90d0a
#: ../source/reference/method/cursor.sort.txt:156
msgid "The query returns the documents in indeterminate order:"
msgstr ""

# 348e2a96ff0446da8b6ba102f14a036d
#: ../source/reference/method/cursor.sort.txt:167
msgid ""
"The following query specifies a sort on the ``amount`` field in "
"descending order."
msgstr ""

# 19cbc4a82df24890a1eaa8d89d9532e0
#: ../source/reference/method/cursor.sort.txt:174
msgid ""
"The query returns the following documents, in descending order of "
"``amount``:"
msgstr ""

# b8dfdb2d713748e39c035264307733d3
#: ../source/reference/method/cursor.sort.txt:186
msgid ""
"The following query specifies the sort order using the fields from an "
"embedded document ``item``. The query sorts first by the ``category`` "
"field in ascending order, and then within each ``category``, by the "
"``type`` field in ascending order."
msgstr ""

# 3bcb31f93b8e4a5288672d0277cbbd42
#: ../source/reference/method/cursor.sort.txt:195
msgid ""
"The query returns the following documents, ordered first by the "
"``category`` field, and within each category, by the ``type`` field:"
msgstr ""

# 8d985aa926ca45ecbcee93d3a92b1957
#: ../source/reference/method/cursor.sort.txt:211
msgid "Return in Natural Order"
msgstr ""

# 6eff3a089b314502b9d33fde75058814
#: ../source/reference/method/cursor.sort.txt:213
msgid ""
"The :operator:`$natural` parameter returns items according to their "
":term:`natural order` within the database. This ordering is an internal "
"implementation feature, and you should not rely on any particular "
"structure within it."
msgstr ""

# 942688f3de16461bbe33e7c8b2611e13
#: ../source/reference/method/cursor.sort.txt:219
msgid "Index Use"
msgstr ""

# 46f4e46c463340b8aa406c751ff7d17b
#: ../source/includes/fact-natural-parameter.rst:1
msgid ""
"Queries that include a sort by :operator:`$natural` order do **not** use "
"indexes to fulfill the query predicate with the following exception: If "
"the query predicate is an equality condition on the ``_id`` field ``{ "
"_id: <value> }``, then the query with the sort by :operator:`$natural` "
"order can use the ``_id`` index."
msgstr ""

# 6e6fab00a95d4699a2a72ce79c8cbc21
#: ../source/reference/method/cursor.sort.txt:224
msgid "MMAPv1"
msgstr ""

# e10c60bb806f4c9195f79d6b687e366c
#: ../source/reference/method/cursor.sort.txt:226
msgid ""
"Typically, the natural order reflects insertion order with the following "
"exception for the MMAPv1 storage engine. For the MMAPv1 storage engine, "
"the natural order does not reflect insertion order if the documents "
"relocate because of :ref:`document growth <data-model-document-growth>` "
"or remove operations free up space which are then taken up by newly "
"inserted documents."
msgstr ""

# 4ee0b047c9e04e078edb68a010567d99
#: ../source/reference/method/cursor.sort.txt:233
msgid "Consider to following example which uses the MMAPv1 storage engine."
msgstr ""

# 7d5f17cc76774333b55ac750c798d6cc
#: ../source/reference/method/cursor.sort.txt:235
msgid ""
"The following sequence of operations inserts documents into the ``trees``"
" collection:"
msgstr ""

# 25557774e799485a9e12435485dcabc6
#: ../source/reference/method/cursor.sort.txt:245
msgid "The following query returns the documents in the natural order:"
msgstr ""

# 34e31123e8ec4aba9273f2fada604e82
#: ../source/reference/method/cursor.sort.txt:251
msgid "The documents return in the following order:"
msgstr ""

# 4511544673f7406ca955fae4bd40649f
#: ../source/reference/method/cursor.sort.txt:260
msgid ""
"Update a document such that the document outgrows its current allotted "
"space:"
msgstr ""

# 695342ddc7bf469698cc45580544ba8c
#: ../source/reference/method/cursor.sort.txt:270
msgid "Rerun the query to returns the documents in natural order:"
msgstr ""

# 8ba2d41479c943788bcb7a854845d62e
#: ../source/reference/method/cursor.sort.txt:276
msgid ""
"For MongoDB instances using MMAPv1, the documents return in the following"
" natural order, which no longer reflects the insertion order:"
msgstr ""

# dce663f3f82b4f6e91922ece1b1f4b2b
#: ../source/reference/method/cursor.sort.txt:286
msgid ":operator:`$natural`"
msgstr ""

# bdb3b04f25214a2ab6fc508b3d7c48de
#~ msgid ""
#~ "When comparing values of different "
#~ ":term:`BSON` types, MongoDB uses the "
#~ "following comparison order, from lowest "
#~ "to highest:"
#~ msgstr ""

# 215e37b9260c41ae82c0ebd86a25a591
#~ msgid "Numbers (ints, longs, doubles)"
#~ msgstr ""

# b1ef37da5608486fbed5adaae1e50df5
#~ msgid "Date, Timestamp"
#~ msgstr ""

# 44fe8299b60d40e1aacce0a040e38836
#~ msgid ""
#~ "MongoDB treats some types as equivalent"
#~ " for comparison purposes. For instance, "
#~ "numeric types undergo conversion before "
#~ "comparison."
#~ msgstr ""

# add441dde85f4f01992a0a1940971466
#~ msgid ""
#~ "The comparison treats a non-existent "
#~ "field as it would an empty BSON"
#~ " Object. As such, a sort on the"
#~ " ``a`` field in documents ``{ }`` "
#~ "and ``{ a: null }`` would treat"
#~ " the documents as equivalent in sort"
#~ " order."
#~ msgstr ""

# 57a6b200afd04c80bf77e54b11dff4bd
#~ msgid ""
#~ "With arrays, a less-than comparison "
#~ "or an ascending sort compares the "
#~ "smallest element of arrays, and a "
#~ "greater-than comparison or a descending "
#~ "sort compares the largest element of "
#~ "the arrays. As such, when comparing "
#~ "a field whose value is a "
#~ "single-element array (e.g. ``[ 1 ]``)"
#~ " with non-array fields (e.g. ``2``),"
#~ " the comparison is between ``1`` and"
#~ " ``2``. A comparison of an empty "
#~ "array (e.g. ``[ ]``) treats the "
#~ "empty array as less than ``null`` "
#~ "or a missing field."
#~ msgstr ""

# dacb2e05315c42a4893a1ed51d814c52
#~ msgid ""
#~ "The sort operation requires that the "
#~ "entire sort be able to complete "
#~ "within 32 megabytes."
#~ msgstr ""

# 431fe884213f41b5933cdac52bfef382
#~ msgid ""
#~ "When the sort operation consumes more"
#~ " than 32 megabytes, MongoDB returns "
#~ "an error. To avoid this error, "
#~ "either create an index to support "
#~ "the sort operation or use "
#~ ":method:`~cursor.sort()` in conjunction with "
#~ ":method:`~cursor.limit()`. The specified limit "
#~ "must result in a number of "
#~ "documents that fall within the 32 "
#~ "megabyte limit."
#~ msgstr ""

# 210a07398cda4af5905d03ffdb2d4e7f
#~ msgid ""
#~ "For example, if the following sort "
#~ "operation ``stocks_quotes`` exceeds the 32 "
#~ "megabyte limit:"
#~ msgstr ""

# 7cab56429b7f44e6b2cbfcc3cbfcda4b
#~ msgid "Either create an index to support the sort operation:"
#~ msgstr ""

# 5ac4b1339f414072be08f8fbfb96da04
#~ msgid ""
#~ "Or use :method:`~cursor.sort()` in conjunction"
#~ " with :method:`~cursor.limit()`:"
#~ msgstr ""

# a5caf08819524a129cc8c59edb4efb26
#~ msgid ""
#~ "The following query specifies the sort"
#~ " order using the fields from a "
#~ "sub-document ``item``. The query sorts "
#~ "first by the ``category`` field in "
#~ "ascending order, and then within each"
#~ " ``category``, by the ``type`` field "
#~ "in ascending order."
#~ msgstr ""

# 4ce781f98afd4f3882e47f895ca33234
#~ msgid "Return in Storage Order"
#~ msgstr ""

# 2f8db7ca395048d88046e33d9a63cb11
#~ msgid ""
#~ "The :operator:`$natural` parameter returns "
#~ "items according to their storage order"
#~ " within the collection level extents."
#~ msgstr ""

# 4cfe6ac13ed946459dc26e40663bcf29
#~ msgid ""
#~ "Typically, the storage order reflects "
#~ "insertion order, *except* when documents "
#~ "relocate because of :ref:`document growth "
#~ "due to updates <data-model-document-"
#~ "growth>` or remove operations free up"
#~ " space which are then taken up "
#~ "by newly inserted documents."
#~ msgstr ""

# 1954094ff5424063881b0c6588ad45ba
#~ msgid "Consider the sequence of insert operations to the ``trees`` collection:"
#~ msgstr ""

# 2113b365be18454ca6cc54079f4647be
#~ msgid "The following query returns the documents in the storage order:"
#~ msgstr ""

# 48e87647cf81440c8fdb5fea77f839a0
#~ msgid "Rerun the query to returns the documents in the storage order:"
#~ msgstr ""

# a875a3734f58467ebd7dc2ac7f7eef3e
#~ msgid "The documents return in the following storage order:"
#~ msgstr ""

#~ msgid "MongoDB sorts ``BinData`` in the following order:"
#~ msgstr ""

#~ msgid "First, the length or size of the data."
#~ msgstr ""

#~ msgid "Then, by the BSON one-byte subtype."
#~ msgstr ""

#~ msgid "Finally, by the data, performing a byte-by-byte comparison."
#~ msgstr ""

