==================================================
Configure MongoDB Authentication and Authorization
==================================================

.. default-domain:: mongodb

Overview
--------

Your MongoDB processes can use the access control mechanisms described
here. If a MongoDB process uses access control, you must configure the
Monitoring and Backup Agents to authenticate as users with the proper
access.

Your MongoDB deployments can use the access control mechanisms described
here. You specify the authentication settings when :doc:`adding the
deployment </tutorial/add-hosts-to-monitoring>`. You can also edit
settings after adding a deployment, as described on this page. host.

If a deployment uses access control, the Monitoring and Backup Agents
must authenticate to the deployment as MongoDB users with appropriate
access. If you are using Automation to manage your MongoDB deployments,
you will enable and configure authentication through the |mms| interface.

If you are not using Automation to manage your MongoDB deployments,
you must configure the Monitoring and Backup agents manually

.. only:: onprem

   If a :doc:`backing MongoDB instance
   </tutorial/prepare-backing-mongodb-instances>` runs with access
   control, the |application| must authenticate to the backing instances
   as a MongoDB user with appropriate access. The user must have the
   following roles: :authrole:`readWriteAnyDatabase`,
   :authrole:`clusterAdmin`, and :authrole:`dbAdminAnyDatabase`.

Access Control Mechanisms
-------------------------

.. _mongodb-cr:

``MONGODB-CR``/``SCRAM-SHA-1``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In MongoDB 3.0 and later, MongoDB's default authentication mechanism is
a challenge and response mechanism (``SCRAM-SHA-1``). Previously, MongoDB
used MongoDB Challenge and Response (``MONGODB-CR``) as the default.

``SCRAM-SHA-1`` is an IETF standard, `RFC 5802
<https://tools.ietf.org/html/rfc5802>`_, that defines best practice
methods for implementation of challenge-response mechanisms for
authenticating users with passwords.

``MONGODB-CR`` is a challenge-response mechanism that authenticates
users through passwords.

To enable ``MONGODB-CR`` when using Automation,
see :doc:`/tutorial/enable-mongodbcr-authentication-for-group`.

To configure the agents to authenticate as users with the proper access
without Automation, see:

- :doc:`/tutorial/configure-monitoring-agent-for-cr`

- :doc:`/tutorial/configure-backup-agent-for-cr`

.. only:: onprem

   To configure the |application| to authenticate to the :doc:`backing
   instances </tutorial/prepare-backing-mongodb-instances>` using
   ``MONGODB-CR``/``SCRAM-SHA-1``, see :setting:`mongo.mongoUri`.

LDAP
~~~~

`MongoDB Enterprise
<http://www.mongodb.com/products/mongodb-enterprise?jmp=docs>`_ provides
support for proxy authentication of users. This allows administrators to
configure a MongoDB cluster to authenticate users by proxying
authentication requests to a specified Lightweight Directory Access
Protocol (LDAP) service.

To enable LDAP for your |mms| group when using Automation, see:
:doc:`/tutorial/enable-ldap-authentication-for-group`.

To configure the agents to authenticate as users with the proper access
without Automation, see:

- :doc:`/tutorial/configure-monitoring-agent-for-ldap`

- :doc:`/tutorial/configure-backup-agent-for-ldap`

.. only:: onprem

   To configure the |onprem| to use an LDAP server for authentication, see
   :doc:`/tutorial/configure-for-ldap-authentication`.

Kerberos
~~~~~~~~

`MongoDB Enterprise <http://www.mongodb.com/products/mongodb-enterprise?jmp=docs>`_
supports authentication using a Kerberos service. Kerberos is an industry
standard authentication protocol for large client/server systems.

To use MongoDB with Kerberos, you must have a properly configured
Kerberos deployment, configure *Kerberos service principals* for
MongoDB, and add the *Kerberos user principal*. If you are using
Automation, you can
:doc:`/tutorial/enable-kerberos-authentication-for-group` from within
the |mms| interface.

To create a Kerberos Principal and the associated MongoDB user, and to
configure the Monitoring and Backup Agents to authenticate as users with
the proper access **without** Automation, see:

- :doc:`/tutorial/configure-monitoring-agent-for-kerberos`

- :doc:`/tutorial/configure-backup-agent-for-kerberos`

Specify Kerberos as the MongoDB process's authentication mechanism when
:doc:`adding the deployment </tutorial/add-hosts-to-monitoring>` or when
:ref:`editing the deployment <edit-host-credentials>`.

.. only:: onprem

   To enable Kerberos authentication between the |application| and the
   :ref:`mms-application-database`, configure the
   :ref:`configuration-kerberos-settings` and the
   :setting:`mongo.mongoUri` setting. You must configure all required
   Kerberos settings to enable Kerberos authentication.

x.509
~~~~~

MongoDB supports x.509 certificate authentication for use with a secure
:doc:`TLS/SSL connection </tutorial/enable-ssl-for-a-group>`. 
The x.509 client authentication allows clients to
authenticate to servers with certificates rather than with a username
and password.

.. include:: /includes/extracts/enterprise-availability-x509.rst

To enable x.509 authentication for your |mms| group when using Automation, see:
:doc:`/tutorial/enable-x509-authentication-for-group`.

.. TODO: add links to the manual tutorial once it's written

.. note:: 

   |mms| does **not** currently support :manual:`using x.509
   certificates for membership authentication
   <tutorial/configure-x509-member-authentication/>`.

.. _edit-host-credentials:

Edit Host Credentials
---------------------

If your deployment is managed by |mms|, you will configure the
deployment to use the authentication mechanism from the |mms| interface.
The :doc:`/tutorial/nav/access-control-mongodb` tutorials describe
how to configure an existing deployment to use each authentication
mechanism.

If your deployment is **not** managed by |mms|, manually configure the
Monitoring and Backup agents with the proper credentials **before** you
edit the host's authentication credentials.

.. see:: 
   :doc:`/tutorial/nav/configure-monitoring-agent` and
   :doc:`/tutorial/nav/configure-backup-agent` describe how to
   configure the Monitoring and Backup agents for access control.

Once the Monitoring and Backup agents are correctly configured, you can
edit the deployment's authentication credentials using the following
procedures.

Edit Credentials for Monitoring a Host
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. important:: 
   Before editing these credentials, configure the Monitoring Agent with
   the proper credentials. See
   :doc:`/tutorial/nav/configure-monitoring-agent`.

To edit the credential for Monitoring:

.. include:: /includes/steps/monitoring-agent-edit-host-credentials.rst

Edit Credentials for Backing up a Host
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. important:: 
   Before editing these credentials, configure the Backup Agent with the
   proper credentials. See :doc:`/tutorial/nav/configure-backup-agent`.

To edit the credential for Backup:

.. include:: /includes/steps/backup-agent-edit-host-credentials.rst
