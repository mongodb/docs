========
Glossary
========

.. default-domain:: mongodb

.. glossary::
   :sorted:

   BSON
      A serialization format used to store documents and make remote
      procedure calls in MongoDB. "BSON" is a a portmanteau of the words
      "binary" and "JSON". Think of BSON as a binary representation
      of JSON (JavaScript Object Notation) documents. For a detailed spec,
      see `bsonspec.org <http://bsonspec.org/>`_.

      .. seealso:: The :ref:`bson-json-type-conversion-fidelity`
         section.

   database command
      Any MongoDB operation other than an insert, update, remove,
      or query. MongoDB exposes commands as queries
      query against the special :term:`$cmd` collection. For
      example, the implementation of :dbcommand:`count` for MongoDB is
      a command.

      .. seealso:: :doc:`/reference/commands` for a full list of
         database commands in MongoDB

   operator
      A keyword beginning with a ``$`` used to express a complex
      query, update, or data transformation. For example, ``$gt``
      is the query language's "greater than" operator.
      See the :doc:`/reference/operators` for more
      information about the available operators.

      .. seealso:: :doc:`/reference/operators`.

   MongoDB
      The document-based database server described in this manual.

   document
      A record in a MongoDB collection, and the basic unit of data
      in MongoDB. Documents are analogous to JSON objects, but exist in
      the database in a more type-rich format known as :term:`BSON`.

   field
      A name-value pair in a :term:`document <document>`. Documents have zero
      or more fields. Fields are analogous to columns in relational
      databases.

   database
      A physical container for :term:`collections <collection>`.
      Each database gets its own set of files on the file
      system. A single MongoDB server typically servers multiple
      databases.

   collection
      A namespace within a database for containing :term:`documents <document>`.
      Collections do not enforce a schema, but they are otherwise
      mostly analogous to :term:`RDBMS` tables.

   $cmd
      A virtual :term:`collection` that exposes :term:`MongoDB`'s
      :term:`database commands <database command>`.

   JSON
      JavaScript Object Notation. A human-readable, plain text format
      for expressing structured data with support in many programming
      languages.

   JSON document
      A :term:`JSON` document is a collection of fields and values in a
      structured format. The following is a sample :term:`JSON
      document` with two fields:

      .. code-block:: javascript

         { name: "MongoDB",
           type: "database" }

   admin database
      A privileged database named ``admin``. Users must have access
      to this database to run certain administrative commands.
      See :doc:`commands` for more information on these commands.

   replica set
      A cluster of MongoDB servers that implements master-slave
      replication and automated failover. MongoDB's recommended
      replication strategy.

      .. seealso:: :doc:`/replication` and :doc:`/core/replication`.

   replication
     A feature allowing multiple database servers to share the same
     data, thereby ensuring redundancy and facilitating load balancing.
     MongoDB supports two flavors of replication: master-slave replication
     and replica sets.

      .. seealso:: :term:`replica set`, :term:`sharding`,
         :doc:`/replication`. and :doc:`/core/replication`.

   shard
      A single replica set that stores some portion of a shard cluster's
      total data set. See :term:`sharding`.

      .. seealso:: The :wiki:`Sharding` wiki page.

      .. STUB :doc:`/core/sharding`.

   sharding
      A database architecture that enable horizontal scaling by splitting
      data into key ranges among two or more replica sets. This architecture
      is also known as "range-based partitioning." See :term:`shard`.

      .. seealso:: The :wiki:`Sharding` wiki page.

      .. STUB :doc:`/core/sharding`.

   shard cluster
      The set of nodes comprising a :term:`sharded <sharding>` MongoDB deployment. A shard cluster
      consists of three config processes, one or more replica sets, and one or more
      :program:`mongos` routing processes.

      .. seealso:: The :wiki:`Sharding` wiki page.

      .. STUB :doc:`/core/sharding`.

   partition
      A distributed system architecture that splits data into ranges.
      :term:`Sharding` is a kind of partitioning.

   split
      The division between :term:`chunks <chunk>` in a :term:`shard
      cluster`.

   mongod
      The program implementing the MongoDB database server. This server
      typically runs as a :term:`daemon`.

      .. seealso:: :doc:`/reference/mongod`.

   mongos
      The routing and load balancing process that
      acts an interface between an application and
      a MongoDB :term:`shard cluster`.

      .. seealso:: :doc:`/reference/mongos`.

   mongo
      The MongoDB Shell. ``mongo`` connects to :program:`mongod`
      and :program:`mongos` instances, allowing administration,
      management, and testing. :program:`mongo` has a JavaScript
      interface.

      .. seealso:: :doc:`/reference/mongo` and :doc:`/reference/javascript`.

   cluster
      A set of :program:`mongod` instances running in
      conjunction to increase database availability and
      performance. See :term:`sharding` and :term:`replication` for
      more information on the two different approaches to clustering with
      MongoDB.

   polygon
      MongoDB's :term:`geospatial` indexes and querying system
      allow you to build queries around multi-sided
      polygons on two-dimensional coordinate systems. These queries use
      the :operator:`$within` operator and a sequence of points that define
      the corners of the polygon.

   circle
      MongoDB's :term:`geospatial` indexes and querying system
      allow you to build queries around circles on two-dimensional
      coordinate systems. These queries use the
      :operator:`$circle` operator to define circle using the center
      and the radius of the circle.

   box
      MongoDB's :term:`geospatial` indexes and querying system
      allow you to to build queries around rectangles on two-dimensional
      coordinate systems. These queries use the :operator:`$box`
      operator to define a shape using the lower-left
      and the upper-right coordinates.

   capped collection
      A fixed-sized :term:`collection <collection>`. Once they reach
      their fixed size, capped collections automatically overwrite
      their oldest entries. MongoDB's :term:`oplog` replication mechanism depends on
      capped collections.  Developers may also use capped collections in their
      applications.

      .. seealso:: The :wiki:`Capped Collections <Capped+Collections>` wiki page.

      .. STUB :doc:`/core/capped-collections`.

   BSON types
      The set of types supported by the :term:`BSON` serialization
      format. The following types are available:

      =======================  ==========
      **Type**                 **Number**
      -----------------------  ----------
      Double                       1
      String                       2
      Object                       3
      Array                        4
      Binary data                  5
      Object id                    7
      Boolean                      8
      Date                         9
      Null                        10
      Regular Expression          11
      JavaScript                  13
      Symbol                      14
      JavaScript (with scope)     15
      32-bit integer              16
      Timestamp                   17
      64-bit integer              18
      Min key                    255
      Max key                    127
      =======================  ==========

   master
      In conventional master/:term:`slave` replication, the master
      database receives all writes. The :term:`slave` instances
      replicate from the master instance in real time.

   slave
      In conventional :term:`master`/slave replication, slaves
      are read-only instances that replicate operations from the
      :term:`master` database. Data read from slave instances may
      not be completely consistent with the master. Therefore,
      applications requiring consistent reads must read from the
      master database instance.

   primary
      In a :term:`replica set`, the primary member is the current
      :term:`master` instance, which receives all write operations.

   secondary
      In a :term:`replica set`, the ``secondary`` members are the current
      :term:`slave` instances that replicate the contents of the
      master database. Secondary members may handle read requests, but only the
      :term:`primary` members can handle write operations.

   GridFS
      A convention for storing large files in a MongoDB database. All
      of the official MongoDB drivers support this convention, as
      does the ``mongofiles`` program.

      .. seealso:: :doc:`/reference/mongofiles`.

   md5
      ``md5`` is a hashing algorithm used to efficiently provide
      reproducible unique strings to identify and :term:`checksum`
      data. MongoDB uses md5 to identify chunks of data for
      :term:`GridFS`.

   shell helper
      A number of :doc:`database commands <commands>` have "helper"
      methods in the ``mongo`` shell that provide a more concise
      syntax and improve the general interactive experience.

      .. seealso:: :doc:`/reference/mongo` and
         :doc:`/reference/javascript`.

   write-lock
      A lock on the database for a given writer. When a process
      writes to the database, it takes an exclusive write-lock to
      prevent other processes from writing or reading.

   index
      A data structure that optimizes queries. See
      :doc:`/core/indexes` for more information.

   secondary index
      A database :term:`index` that improves query performance by
      minimizing the amount of work that the query engine must perform
      to fulfill a query.

   compound index
      An :term:`index` consisting of two or more keys. See
      :doc:`/core/indexes` for more information.

   btree
      A data structure used by most database management systems
      for to store indexes. MongoDB uses b-trees for its indexes.

   ISODate
     The international date format used by :program:`mongo`.
     to display dates. E.g. ``YYYY-MM-DD HH:MM.SS.milis``.

   journal
      A sequential, binary transaction used to bring the database into
      a consistent state in the event of a hard shutdown. MongoDB
      enables journaling by default for 64-bit builds of MongoDB
      version 2.0 and newer. Journal files are pre-allocated and will
      exist as three 1GB file in the data directory. To make journal
      files smaller, use :setting:`smallfiles`.

      When enabled,
      MongoDB writes data first to the journal and after to the core
      data files. MongoDB commits to the journal every 100ms and this
      is configurable using the :setting:`journalCommitInterval`
      runtime option.

      .. seealso:: The :wiki:`Journaling` wiki page.

      .. STUB :doc:`/core/journaling`.

   pcap
      A packet capture format used by :program:`mongosniff` to record
      packets captured from network interfaces and display them as
      human-readable MongoDB operations.

   upsert
      A kind of update that either updates the first document matched
      in the provided query selector or, if no document matches,
      inserts a new document having the fields implied by the
      query selector and the update operation.

   CSV
      A text-based data format consisting of comma-separated values.
      This format is commonly used to exchange database between relational
      databases, since the format is well-suited to tabular data. You can
      import CSV files using :program:`mongoimport`.

   TSV
      A text-based data format consisting of tab-separated values.
      This format is commonly used to exchange database between relational
      databases, since the format is well-suited to tabular data. You can
      import TSV files using :program:`mongoimport`.

   MIME
      "Multipurpose Internet Mail Extensions." A standard set of type
      and encoding definitions used to declare the encoding and type
      of data in multiple data storage, transmission, and email
      contexts.

   padding factor
      An automatically-calibrated constant used to determine how much
      extra space MongoDB should allocate per document container on disk.
      A padding factor of 1 means that MongoDB will allocate only the
      amount of space needed for the document. A padding factor of 2
      means that MongoDB will allocate twice the amount of space
      required by the document.

   padding
      The extra space allocated to document on the disk to prevent
      moving a document when it grows as the result of :method:`update`
      operations.

   record size
      The space allocated for a document including the padding.

   read-lock
      In the context of a reader-writer lock, a lock that while
      held allows concurrent readers, but no writers.

   config database
      One of three :program:`mongod` instances that store all of the
      metadata associated with a :term:`shard cluster`.

   balancer
      An internal MongoDB process that runs in the context of a
      :term:`shard cluster` and manages the splitting and
      migration of :term:`chunks <chunk>`. Administrators must disable
      the balancer for all maintenance operations on a shard cluster.

   fsync
      A system call that flushes all dirty, in-memory pages to disk. MongoDB
      calls ``fsync()`` every 60 seconds.

   chunk
      In the context of a :term:`shard cluster`, a chunk is a contiguous
      range of :term:`shard key` values assigned to a particular :term:`shard`.
      By default, chunks are 64 megabytes or less. When they grow beyond the
      configured chunk size, a :program:`mongos` splits the chunk into
      two chunks.

   geospatial
      Data that relates to geographical location. In MongoDB, you may
      index or store geospatial data according to geographical
      parameters and reference specific coordinates in queries.

   checksum
      A calculated value used to ensure data integrity.
      The :term:`md5` algorithm is sometimes used as a checksum.

   haystack index
      In the context of :term:`geospatial` queries, haystack indexes
      enhance searches by creating "bucket" of objects grouped by a second
      criterion. For example, you might want want all geographical searches
      to also include the type of location being searched for. In this case,
      you can create a haystack index that includes a document's position
      and type:

      .. code-block:: javascript

         db.places.ensureIndex( { position: "geoHaystack", type: 1 } )

      You can then query on position and type:

      .. code-block:: javascript

         db.places.find( { position: [34.2, 33.3], type: "restaurant" } )

   oplog
      A :term:`capped collection` that stores an ordered history of
      logical writes to a MongoDB database. The oplog is the
      basic mechanism enabling :term:`replication` in MongoDB.

      .. seealso:: :ref:`Oplog Sizes <replica-set-oplog-sizing>` and
         :doc:`/tutorial/change-oplog-size`.

   control script
      A simple shell script, typically located in the ``/etc/rc.d`` or
      ``/etc/init.d`` directory and used by the system's initialization
      process to start, restart and stop a :term:`daemon` process.

   daemon
      The conventional name for a background, non-interactive
      process.

   PID
      A process identifier. On UNIX-like systems, a unique integer PID is assigned to
      each running process. You can use a PID to inspect
      a running process and send signals to it.

   JSONP
      :term:`JSON` with Padding. Refers to a method of injecting JSON
      into applications. Presents potential security concerns.

   REST
     An API design pattern centered around the idea of
     resources and the :term:`CRUD` operations that apply to them. Typically
     implemented over HTTP. MongoDB provides a simple HTTP REST interface
     that allows HTTP clients to run commands against the server.

   dbpath
      Refers to the location of MongoDB's data file storage. The
      default :setting:`dbpath` is ``/data/db``. Other common data
      paths include ``/srv/mongodb`` and ``/var/lib/mongodb``.

      .. seealso:: :setting:`dbpath` or :option:`--dbpath
         <mongod --dbpath>`.

   set name
      In the context of a :term:`replica set`, the ``set name`` refers to
      an arbitrary name given to a replica set when it's first configured.
      All members of a replica set must have the same name specified
      with the :setting:`replSet` setting (or :option:`--replSet
      <mongod --replSet>` option for :program:`mongod`.)

      .. seealso:: :term:`replication`, :doc:`/replication` and
         :doc:`/core/replication`.

   _id
      A field containing a unique ID, typically a BSON :term:`ObjectId`.
      If not specified, this value is automatically assigned
      upon the creation of a new document. You can think of the
      ``_id`` as the document's :term:`primary key`.

   LVM
      Logical volume manager. LVM is a program that abstracts disk
      images from physical devices, and provides a number of raw disk
      manipulation and snapshot capabilities useful for system
      management.

   natural order
      The order in which a database stores documents on disk.
      Typically this order is the same as the
      insertion order. :term:`Capped collections <capped collection>`,
      among other things, guarantee that insertion order and natural
      order are identical.

   primary key
      A record's unique, immutable identifier. In an :term:`RDBMS`, the primary
      key is typically an integer stored in each row's ``id`` field.
      In MongoDB, the :term:`_id` field holds a document's primary
      key which is usually a BSON :term:`ObjectId`.

   unique index
      An index that enforces uniqueness for a particular field across
      a single collection.

   firewall
      A system level networking filter that restricts access based on,
      among other things, IP address. Firewalls form part of effective
      network security strategy.

   database profiler
      A tool that, when enabled, keeps a record on all long-running
      operations in a database's ``system.profile`` collection. The
      profiler is most often used to diagnose slow queries.

      .. seealso:: :ref:`Monitoring Database Systems <database-profiling>`.

   shard key
      In a sharded collection, a shard key is the field that MongoDB
      uses to  distribute documents among members of the
      :term:`shard cluster`.

   query
      A read request. MongoDB queries use a :term:`JSON`-like query
      language that includes a variety of :term:`query operators <operator>`
      with names that begin with a ``$`` character. In the
      :program:`mongo` shell, you can issue queries using the
      :method:`db.collection.find()` and
      :method:`db.collection.findOne()` methods.

   projection
      A document given to a :term:`query` that specifies which fields
      MongoDB will return from the documents in the result set.

   pre-splitting
      An operation, performed before inserting data that divides the
      range of possible shard key values into chunks to facilitate
      easy insertion and high write throughput.  When deploying a
      :term:`shard cluster`, in some cases pre-splitting will expedite
      the initial distribution of documents among shards by manually
      dividing the collection into chunks rather than waiting for the
      MongoDB :term:`balancer` to create chunks during the course of
      normal operation.

   SSD
      Solid State Disk. A high-performance disk drive that uses solid
      state electronics for persistence, as opposed to the rotating platters
      and movable read/write heads used by traditional mechanical hard drives.

   resident memory
      The subset of an application's memory currently stored in
      physical RAM. Resident memory is a subset of :term:`virtual memory`,
      which includes memory mapped to physical RAM and to disk.

   virtual memory
      An application's working memory, typically residing on both
      disk an in physical RAM.

   pipe
      A communication channel in UNIX-like systems allowing independent processes
      to send and receive data. In the UNIX shell, piped operations
      allow users to direct the output of one command into the input
      of another.

   IPv6
      A revision to the IP (Internet Protocol) standard that
      provides a significantly larger address space to more effectively
      support the number of hosts on the contemporary Internet.

   draining
      The process of removing or "shedding" :term:`chunks <chunk>`
      from one :term:`shard` to another. Administrators must drain
      shards before removing them from the cluster.

      .. seealso:: :dbcommand:`removeshard`, :term:`sharding`.

   single-master replication
      A :term:`replication` topology where only a single database
      instance accepts writes. Single-master replication ensures consistency
      and is the replication topology employed by MongoDB.

   multi-master replication
      A :term:`replication` method where multiple database instances
      can accept write operations to the same data set at any
      time. Multi-master replication exchanges increased concurrency and
      availability for a relaxed consistency semantic. MongoDB ensures
      consistency and, therefore, does not provide multi-master replication.

   rollback
      A process that, in certain replica set situations, reverts
      writes operations to ensure the consistency of all replica set
      members.

   eventual consistency
      A property of a distributed system allowing changes to the
      system to propagate gradually. In a database system, this means
      that readable nodes are not required to reflect the latest
      writes at all times. In MongoDB, reads to a primary have
      :term:`strict consistency`; reads to secondary nodes have
      :term:`eventual consistency`.

   strict consistency
      A property of a distributed system requiring that all nodes
      always reflect the latest changes to the system. In a database
      system, this means that any system that can provide data must
      reflect the latest writes at all times. In MongoDB, reads to a
      primary have :term:`strict consistency`; reads to secondary
      nodes have :term:`eventual consistency`.

   write concern
      A setting on writes to MongoDB that allows the user to specify,
      how the database will handle a write operation before
      returning. This often determines how many :term:`replica set`
      members should propagate a write before returning.

      .. seealso:: :ref:`Write Concern for Replica Sets <replica-set-write-concern>`.

   priority
      In the context of :term:`replica sets <replica set>`, priority
      is a configurable value that helps determine which nodes in
      a replica set are most likely to become :term:`primary`.

      .. seealso:: :ref:`Replica Set Node Priority
         <replica-set-node-priority>`

   election
      In the context of :term:`replica sets <replica set>`, an election
      is the process by which members of a replica set select
      primary nodes on startup and in the event of failures.

      .. seealso:: :ref:`Replica Set Elections
         <replica-set-elections>` and :term:`priority`.

   hidden member
      A member of a :term:`replica set` that cannot become primary and
      is not advertised as part of the set in the :term:`database
      command` :dbcommand:`isMaster`, which prevents it from
      receiving read-only queries depending on :term:`read
      preference`.

      .. seealso:: :ref:`Hidden Member <replica-set-hidden-members>`,
         :dbcommand:`isMaster`, :method:`db.isMaster`, and
         :data:`members[n].hidden`.

   delayed member
      A member of a :term:`replica set` that cannot become primary and
      applies operations at a specified delay. This delay is useful
      for protecting data from human error (i.e. unintentionally
      deleted databases) or updates that have unforeseen effects on
      the production database.

      .. seealso:: :ref:`Delayed Members <replica-set-delayed-members>`

   arbiter
      A member of a :term:`replica set` that exists solely to vote
      in :term:`elections <election>`. Arbiter nodes do not replicate data.

      .. seealso:: :ref:`Delayed Nodes <replica-set-delayed-members>`

   read preference
      A setting on the MongoDB :doc:`drivers </applications/drivers>`
      that determines how the clients direct read
      operations. Read preference affects all replica sets including
      shards. By default, drivers direct all reads to :term:`primary`
      nodes for :term:`strict consistency`. However, you may also
      direct reads to secondary nodes for :term:`eventually consistent
      <eventual consistency>` reads.

      .. seealso:: :ref:`Read Preference <replica-set-read-preference>`

   replication lag
      The length of time between the last operation in the primary's
      :term:`oplog` last operation applied to a particular
      :term:`secondary` or :term:`slave` node. In general, you want
      to keep replication lag as small as possible.

      .. seealso:: :ref:`Replication Lag <replica-set-replication-lag>`

   driver
      A client implementing the communication protocol required for talking
      to a server. The MongoDB drivers provide language-idiomatic
      methods for interfacing with MongoDB.

      .. seealso:: :doc:`/applications/drivers`

   client
      The application layer that uses a database for data persistence
      and storage. :term:`Drivers <driver>` provide the interface
      level between the application layer and the database server.

   failover
      The process that allows one of the :term:`secondary` nodes in a
      :term:`replica set` to become :term:`primary` in the event of
      a failure.

      .. seealso:: :ref:`Replica Set Failover <replica-set-failover>`.

   data-center awareness
      A property that allows clients to address nodes in a system to
      based upon their location.

      :term:`Replica sets <replica set>` implement data-center
      awareness using :term:`tagging <tag>`.

      .. seealso:: :data:`members[n].tags` and :ref:`data center
         awareness <replica-set-data-center-awareness>`.

   tag
     One or more labels applied to a given replica set member that
     clients may use to issue data-center aware operations.

   recovering
      A :term:`replica set` member status indicating that a member
      is synchronizing or re-synchronizing its data
      from the primary node. Recovering nodes are unavailable for reads.

   control script
      A script used by a UNIX-like operating system to start, stop,
      or restart a :term:`daemon` process. On most systems,
      you can find these scripts in the ``/etc/init.d/`` or
      ``/etc/rc.d/`` directories.

   map-reduce
      A data and processing and aggregation paradigm consisting of a
      "map" phase that selects data, and a "reduce" phase that
      transforms the data. In MongoDB, you can run arbitrary aggregations
      over data using map-reduce.

      .. seealso:: The :wiki:`Map Reduce <MapReduce>` wiki page for
         more information regarding MongoDB's map-reduce
         implementation, and :doc:`/applications/aggregation` for
         another approach to data aggregation in MongoDB.

      .. STUB :doc:`/core/map-reduce`

   RDBMS
      Relational Database Management System. A database management
      system based on the relational model, typically using
      :term:`SQL` as the query language.

   SQL

      Structured Query Language (SQL) is a common special-purpose
      programming language used for interaction with a relational
      database including access control as well as inserting,
      updating, querying, and deleting data. There are some similar
      elements in the basic SQL syntax supported by different database
      vendors, but most implementations have their own dialects, data
      types, and interpretations of proposed SQL standards. Complex
      SQL is generally not directly portable between major
      :term:`RDBMS` products. Often, ``SQL`` is often used as a
      metonym for relational databases.

   aggregation
      Any of a variety of operations that reduce and summarize large
      sets of data. SQL's ``GROUP`` and MongoDB's map-reduce are two
      examples of aggregation functions.

   aggregation framework
      The MongoDB aggregation framework provides a means to calculate
      aggregate values without having to use :term:`map-reduce`.

      .. seealso:: :doc:`/applications/aggregation`.

   pipeline
      The series of operations in the :term:`aggregation` process.

      .. seealso:: :doc:`/applications/aggregation`.

   expression
      In the context of the :term:`aggregation framework`, expressions
      are the stateless transformations that operate on the data that
      passes through the :term:`pipeline`.

      .. seealso:: :doc:`/applications/aggregation`.

   accumulator
      An :term:`expression` in the :term:`aggregation framework` that
      maintains state between documents in the :term:`aggregation`
      :term:`pipeline`. See: :agg:pipeline:`$group` for a list of
      accumulator operations.

   CRUD
      Create, read, update, and delete. The fundamental operations
      of any database.

   JavaScript
      A popular scripting language original designed for web browsers.
      The MongoDB shell and certain server-side functions use
      a JavaScript interpreter.

   idempotent
      When calling an idempotent operation on a value or state, the
      operation only affects the value once. Thus, the operation can
      safely run multiple times without unwanted side effects. In the
      context of MongoDB, :term:`oplog` entries must be idempotent to
      support initial synchronization and recovery from certain
      failure situations. Thus, MongoDB can safely apply oplog entries
      more than once without any ill effects.

   syslog
      On UNIX-like systems, a logging process that provides a uniform
      standard for servers and processes to submit logging
      information.

   namespace
      A canonical name for a collection or index in MongoDB.
      Namespaces consist of a concatenation of the database and
      collection or index name, like so:
      ``[database-name].[collection-or-index-name]``. All documents
      belong to a namespace.

   replica pairs
      The precursor to the MongoDB :term:`replica sets <replica set>`.

      .. deprecated:: 1.6

   writeBacks
      The process within the sharding system that ensures that writes
      issued to a :term:`shard` that isn't responsible for the
      relevant chunk, get applied to the proper shard.

   page fault
      The event that occurs when a process requests stored data
      (i.e. a page) from memory that the operating system has moved to
      disk.

      .. seealso:: :ref:`Storage FAQ: What are page faults?
         <faq-storage-page-faults>`

   working set
      The collection of data that MongoDB uses regularly. This data
      is typically (or preferably) held in RAM.

   TTL
      Stands for "time to live," and represents an expiration time or
      period for a given piece of information to remain in a cache or
      other temporary storage system before the system deletes it or
      ages it out.

   ObjectId
      A special 12-byte :term:`BSON` type that has a high probability
      of being unique when generated. The most significant digits in
      an ObjectId represent the time when the Object. MongoDB uses
      ObjectId values as the default values for :term:`_id` fields.

   Geohash
      A value is a binary representation of the location on a
      coordinate grid.

   powerOf2Sizes
      A per-:term:`collection` setting that changes and normalizes the
      way that MongoDB allocates space for each :term:`document` in an
      effort to maximize storage reuse reduce fragmentation. This is
      the default for :doc:`TTL Collections </tutorial/expire-data>`.
      See :dbcommand:`collMod` and :collflag:`usePowerOf2Sizes` for
      more information.

      .. versionadded:: 2.2

   CAP Theorem
      Given three properties of computing systems, consistency,
      availability, and partition tolerance, a distributed computing
      system can provide any two of these features, but never all
      three.

   cursor
      In MongoDB, a cursor is a pointer to the result set of a
      :term:`query`, that can be iterated through to retrieve
      results. By default, cursors will timeout after 10 minutes of
      inactivity.
