======================
db.collection.insert()
======================

.. default-domain:: mongodb

Definition
----------

.. method:: db.collection.insert(document|array)

   Inserts a document or an array of documents into a collection.

   .. versionchanged:: 2.2
      The :method:`~db.collection.insert()` method can accept
      an array of documents to perform a bulk insert of the
      documents into the collection.

   .. include:: /reference/method/db.collection.insert-param.rst

   The :method:`~db.collection.insert()` method has the
   following behaviors:

   - If the collection does not exist, then the :method:`~db.collection.insert()` method will create the collection.

   - If the document does not specify an :term:`_id` field, then MongoDB
     will add the ``_id`` field and assign a unique :term:`ObjectId` for
     the document before inserting. Most drivers create an ObjectId and
     insert the ``_id`` field, but the :program:`mongod` will create and
     populate the ``_id`` if the driver or application does not.

   - If the document specifies a new field, then the :method:`~db.collection.insert()` method inserts the document with the new
     field. This requires no changes to the data model for the
     collection or the existing documents.

Examples
--------

The following are examples of the :method:`~db.collection.insert()` method:

- To insert a single document and have MongoDB generate the unique
  ``_id``, omit the ``_id`` field in the document and pass the document
  to the :method:`~db.collection.insert()` method as in the
  following:

  .. code-block:: javascript

     db.products.insert( { item: "card", qty: 15 } )

  This operation inserts a new document into the ``products`` collection
  with the ``item`` field set to ``card``, the ``qty`` field set to
  ``15``, and the ``_id`` field set to a unique ``ObjectId``:

  .. code-block:: javascript

     { "_id" : ObjectId("5063114bd386d8fadbd6b004"), "item" : "card", "qty" : 15 }

  .. include:: /includes/note-insert-id-field.rst

- To insert a single document, with a custom ``_id`` field, include the
  ``_id`` field set to a unique identifier and pass the document to the
  :method:`~db.collection.insert()` method as follows:

  .. code-block:: javascript

     db.products.insert( { _id: 10, item: "box", qty: 20 } )

  This operation inserts a new document in the ``products`` collection
  with the ``_id`` field set to ``10``, the ``item`` field set to
  ``box``, the ``qty`` field set to ``20``:

  .. code-block:: javascript

     { "_id" : 10, "item" : "box", "qty" : 20 }

  .. include:: /includes/note-insert-id-field.rst

- To insert multiple documents, pass an array of documents to the
  :method:`~db.collection.insert()` method as in the
  following:

  .. code-block:: javascript

     db.products.insert( [ { _id: 11, item: "pencil", qty: 50, type: "no.2" },
                           {          item: "pen", qty: 20 },
                           {          item: "eraser", qty: 25 } ] )

  The operation will insert three documents into the ``products``
  collection:

  - A document with the fields ``_id`` set to ``11``, ``item`` set to
    ``pencil``, ``qty`` set to ``50``, and the ``type`` set to ``no.2``.

  - A document with the fields ``_id`` set to a unique ``objectid``,
    ``item`` set to ``pen``, and ``qty`` set to ``20``.

  - A document with the fields ``_id`` set to a unique ``objectid``,
    ``item`` set to ``eraser``, and ``qty`` set to ``25``.

  .. code-block:: javascript

     { "_id" : 11, "item" : "pencil", "qty" : 50, "type" : "no.2" }
     { "_id" : ObjectId("50631bc0be4617f17bb159ca"), "item" : "pen", "qty" : 20 }
     { "_id" : ObjectId("50631bc0be4617f17bb159cb"), "item" : "eraser", "qty" : 25 }
