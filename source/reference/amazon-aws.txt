.. _amazon-aws:

=========================
Amazon Web Services (AWS)
=========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Synopsis
--------

|service| supports deploying {+clusters+} and {+serverless-instances+} onto
Amazon Web Services (AWS). |service| supports all :abbr:`AWS (Amazon Web
Services)` regions other than some regions in China and US GovCloud.

|service| supports the following :abbr:`AWS (Amazon Web Services)` regions.
While all of the following regions support ``M10+`` {+clusters+}, some regions
don't support ``M0`` {+clusters+}, ``M2/M5`` {+clusters+}, or
{+serverless-instances+}. A check mark indicates support for ``M0`` {+clusters+},
``M2/M5`` {+clusters+}, or {+serverless-instances+}. The :guilabel:`Atlas
Region` is the corresponding region name used by the |service| :doc:`API </api/>`.

.. tabs::

   tabs:
     - id: americas
       name: Americas
       content: |

         .. list-table::
            :header-rows: 1
            :widths: 20 20 20 15 15 15

            * - AWS Region
              - Location
              - Atlas Region
              - ``M0`` Support
              - ``M2/M5`` Support
              - {+Serverless-Instance+} Support

            * - ``us-east-1``
              - Northern Virginia, USA
              - ``US_EAST_1``
              - :icon:`check-square`
              - :icon:`check-square`
              - :icon:`check-square`

            * - ``us-west-2``
              - Oregon, USA
              - ``US_WEST_2``
              - :icon:`check-square`
              - :icon:`check-square`
              - :icon:`check-square`

            * - ``ca-central-1``
              - Montreal, QC, Canada
              - ``CA_CENTRAL_1``
              -
              -
              - 

            * - ``us-east-2``
              - Ohio, USA
              - ``US_EAST_2``
              -
              -
              - 

            * - ``us-west-1``
              - Northern California, USA
              - ``US_WEST_1``
              -
              -
              - 

            * - ``sa-east-1``
              - Sao Paulo, Brazil
              - ``SA_EAST_1``
              -
              -
              - 

     - id: asia-pacific
       name: Asia Pacific
       content: |

         .. list-table::
            :header-rows: 1
            :widths: 20 20 20 15 15 15

            * - AWS Region
              - Location
              - Atlas Region
              - ``M0`` Support
              - ``M2/M5`` Support
              - {+Serverless-Instance+} Support

            * - ``ap-southeast-1``
              - Singapore
              - ``AP_SOUTHEAST_1``
              - :icon:`check-square`
              - :icon:`check-square`
              - :icon:`check-square`

            * - ``ap-south-1``
              - Mumbai, India
              - ``AP_SOUTH_1``
              - :icon:`check-square`
              - :icon:`check-square`
              - :icon:`check-square`

            * - ``ap-east-1``
              - Hong Kong, China
              - ``AP_EAST_1``
              - :icon:`check-square`
              - :icon:`check-square`
              - 

            * - ``ap-southeast-2``
              - Sydney, NSW, Australia
              - ``AP_SOUTHEAST_2``
              -
              - :icon:`check-square`
              - :icon:`check-square`

            * - ``ap-northeast-1``
              - Tokyo, Japan
              - ``AP_NORTHEAST_1``
              -
              -
              -

            * - ``ap-northeast-2``
              - Seoul, South Korea
              - ``AP_NORTHEAST_2``
              -
              -
              -

     - id: europe
       name: Europe
       content: |

         .. list-table::
            :header-rows: 1
            :widths: 20 20 20 15 15 15

            * - AWS Region
              - Location
              - Atlas Region
              - ``M0`` Support
              - ``M2/M5`` Support
              - {+Serverless-Instance+} Support

            * - ``eu-west-1``
              - Ireland
              - ``EU_WEST_1``
              - :icon:`check-square`
              - :icon:`check-square`
              - :icon:`check-square`

            * - ``eu-central-1``
              - Frankfurt, Germany
              - ``EU_CENTRAL_1``
              - :icon:`check-square`
              - :icon:`check-square`
              -

            * - ``eu-north-1``
              - Stockholm, Sweden
              - ``EU_NORTH_1``
              -
              -
              -

            * - ``eu-west-2``
              - London, England, UK
              - ``EU_WEST_2``
              -
              -
              -

            * - ``eu-west-3``
              - Paris, France
              - ``EU_WEST_3``
              -
              -
              -

            * - ``eu-south-1``
              - Milan, Italy
              - ``EU_SOUTH_1``
              -
              -
              -

     - id: middle-east
       name: Middle East and Africa
       content: |

         .. list-table::
            :header-rows: 1
            :widths: 20 20 20 15 15 15

            * - AWS Region
              - Location
              - Atlas Region
              - ``M0`` Support
              - ``M2/M5`` Support
              - {+Serverless-Instance+} Support

            * - ``me-south-1``
              - Bahrain
              - ``ME_SOUTH_1``
              -
              -
              -

            * - ``af-south-1``
              - Cape Town, South Africa
              - ``AF_SOUTH_1``
              -
              -
              -

This page provides reference material related to |service| {+cluster+}
deployments on |aws|. The following options do not apply to {+serverless-instances+}.

.. _amazon-aws-configuration-options:

{+Cluster+} Configuration Options
----------------------------------

Each |service| {+cluster+} tier comes with a default set of resources. |service|
provides the following resource configuration options:

Custom Storage Size
   The size of the server root volume. |service| clusters deployed onto
   |aws| use general purpose |ssd|\s [#amazon-disk-docs]_.

   .. include:: /includes/note-ram-availability.rst

   The following cluster tiers are available:

   .. include:: /includes/list-tables/instance-types/aws.rst

   .. include:: /includes/cluster-settings/cluster-naming-conventions.rst

   .. include:: /includes/fact-multi-cloud-low-cpu.rst

   Workloads typically require less than ``2TB``.

Custom Storage Speed
   The input/output operations per second (IOPS) the system can perform.

   Each {+cluster+} has a default |iops| rate. You can also choose to
   provision your tier's |iops| rate to meet your particular needs.

   The selected {+cluster+} tier and custom storage size dictate the maximum
   |iops| for each storage speed.

Encrypted Storage Volumes
   Encrypts the root volume for data at rest inside the volume and all data
   moving between the volume and the {+cluster+}. |service| uses
   `Amazon EBS encryption
   <http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html>`_.

.. _amazon-aws-availability-zones:

Amazon Availability Zones
-------------------------

Each |aws| region includes a set number of
independent availability zones. Availability Zones consist of one or more
discrete data centers, each with redundant power, networking and connectivity,
housed in separate facilities. For regions that have at least three
availability zones (3AZ), |service| deploys {+clusters+} across three availability
zones. For regions that only have two availability zones (2AZ), |service|
deploys {+clusters+} across two availability zones.

The |service| :doc:`Add New {+Cluster+} </tutorial/create-new-cluster>` form marks regions
that support at least three availability zones as :guilabel:`Recommended`, as
they provide higher availability.

.. include:: /includes/extracts/fact-no-node-restriction-aws.rst

For more information on the number of availability zones in a
given region, see the Amazon documentation on `global infrastructure
<https://aws.amazon.com/about-aws/global-infrastructure/>`_.

For more information on |aws| regions and
availability zones, see the Amazon documentation on `using regions and
availability zones
<http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-
zones.html>`_

Regions with at Least Three Availability Zones
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

|service| {+clusters+} deployed in regions with at least three availability zones
are split across three availability zones. For example, a three node replica
set {+cluster+} would have one node deployed onto each availability zone.

.. include:: /images/amazon-aws-3az.rst

:abbr:`3AZ (Three Availability Zone)` {+clusters+} have higher availability
compared to :abbr:`2AZ (Two Availability Zone)` clusters. However, not all
regions support :abbr:`3AZ (Three Availability Zone)` {+clusters+}.

Regions with Only Two Availability Zones
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

|service| {+clusters+} deployed in regions with two availability zones are split
across the two availability zones. For example, a three node replica set
{+cluster+} would have two nodes deployed to one availability zone and the
remaining node deployed to the other availability zone.

.. include:: /images/amazon-aws-2az.rst

:abbr:`2AZ (Two Availability Zone)` {+clusters+} have a higher chance of loss of
availability in the event of the loss of an availability zone than :abbr:`3AZ
(Three Availability Zone)` {+clusters+}. However, where latency or location are a
priority, a region that supports :abbr:`2AZ (Two Availability Zone)` {+clusters+}
may be preferred.

.. [#amazon-disk-docs]
   
   For detailed documentation on Amazon storage options, see 
   `Amazon EBS Volume Types
   <http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html>`_


.. _aws-integrations:

Integrations
------------

Along with :ref:`global region support <amazon-aws>`, the following
product integrations enable applications running on |aws|, such as
Amazon EC2, AWS Lambda, and Amazon Elastic Container Service (ECS),
to use |service| instances easily and securely.

Networking Services
~~~~~~~~~~~~~~~~~~~

- AWS PrivateLink: :ref:`Set up private endpoints with AWS <private-endpoint>`
- AWS Virtual Private Cloud (VPC): :ref:`Set up network peering connections with AWS <vpc-peering>`

Security and Identity Services
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- AWS Identity Access Management (IAM) :ref:`Configure database users with IAM authentication <mongodb-users>`
- AWS Key Management Service (KMS):

  - :ref:`Configure Atlas disk encryption with KMS <security-kms-encryption>`
  - :manual:`Configure client-side field level encryption with KMS
    </coresecurity-client-side-encryption-key-management/>`

- AWS SSO: `Configure federated authentication to the MongoDB UI
  <https://aws.amazon.com/blogs/apn/how-to-integrate-aws-single-sign-on-with-mongodb-atlas/>`__

Other AWS Services
~~~~~~~~~~~~~~~~~~

- AWS CloudFormation: `Deploy and manage Atlas from CloudFormation
  <https://www.mongodb.com/blog/post/deploy-manage-mongodb-atlas-aws-cloud-formation>`__

- AWS EventBridge: :doc:`Send Atlas trigger events to AWS EventBridge </triggers/eventbridge/>`

- Amazon Kinesis: `Send data to Atlas via Kinesis Data Firehose
  <https://aws.amazon.com/blogs/big-data/integrating-the-mongodb-cloud-with-amazon-kinesis-data-firehose/>`__

- AWS S3: :adl:`Configure Atlas Data Lake to query data from S3 </reference/format/data-lake-configuration/>`

Procurement
~~~~~~~~~~~

- AWS Marketplace: `Pay for Atlas usage via AWS
  <https://aws.amazon.com/marketplace/seller-profile?id=c9032c7b-70dd-459f-834f-c1e23cf3d092>`__

More Information
----------------

For more information on how to use |aws| with |service| most effectively,
review the following best practices, guides, and case studies:

- AWS App Runner: `Build Applications and APIs Faster with MongoDB Atlas and AWS App Runner
  <https://www.mongodb.com/blog/post/build-applications-and-apis-faster-with-mongodb-atlas-and-aws-app-runner>`__
- AWS Lambda: :doc:`Best Practices Connecting from AWS Lambda </best-practices-connecting-from-aws-lambda>`
