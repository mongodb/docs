# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/schema-validation.txt:3
msgid "Schema Validation"
msgstr ""

#: ../source/core/schema-validation.txt:15
msgid "MongoDB provides the capability to perform schema validation during updates and insertions."
msgstr ""

#: ../source/core/schema-validation.txt:19
msgid "Specify Validation Rules"
msgstr ""

#: ../source/core/schema-validation.txt:21
msgid "Validation rules are on a per-collection basis."
msgstr ""

#: ../source/core/schema-validation.txt:23
msgid "To specify validation rules when creating a new collection, use :method:`db.createCollection()` with the ``validator`` option."
msgstr ""

#: ../source/core/schema-validation.txt:26
msgid "To add document validation to an existing collection, use :dbcommand:`collMod` command with the ``validator`` option."
msgstr ""

#: ../source/core/schema-validation.txt:29
msgid "MongoDB also provides the following related options:"
msgstr ""

#: ../source/core/schema-validation.txt:31
msgid "``validationLevel`` option, which determines how strictly MongoDB applies validation rules to existing documents during an update, and"
msgstr ""

#: ../source/core/schema-validation.txt:34
msgid "``validationAction`` option, which determines whether MongoDB should ``error`` and reject documents that violate the validation rules or ``warn`` about the violations in the log but allow invalid documents."
msgstr ""

#: ../source/core/schema-validation.txt:41
msgid "JSON Schema"
msgstr ""

#: ../source/core/schema-validation.txt:45
msgid "Starting in version 3.6, MongoDB supports JSON Schema validation. To specify JSON Schema validation, use the :query:`$jsonSchema` operator in your ``validator`` expression."
msgstr ""

#: ../source/core/schema-validation.txt:51
msgid "JSON Schema is the recommended means of performing schema validation."
msgstr ""

#: ../source/core/schema-validation.txt:53
msgid "For example, the following example specifies validation rules using JSON schema:"
msgstr ""

#: ../source/core/schema-validation.txt:103
msgid "For more information, see :query:`$jsonSchema`."
msgstr ""

#: ../source/core/schema-validation.txt:106
msgid "Query Expressions"
msgstr ""

#: ../source/core/schema-validation.txt:108
msgid "In addition to JSON Schema validation, MongoDB supports validation with query filter expressions using the :ref:`query operators <query-selectors>`, with the exception of :query:`$near`, :query:`$nearSphere`, :query:`$text`, and :query:`$where`."
msgstr ""

#: ../source/core/schema-validation.txt:113
msgid "For example, the following example specifies validator rules using the query expression:"
msgstr ""

#: ../source/core/schema-validation.txt:130
msgid ":ref:`query operators <query-selectors>`"
msgstr ""

#: ../source/core/schema-validation.txt:133
msgid "Behavior"
msgstr ""

#: ../source/core/schema-validation.txt:135
msgid "Validation occurs during updates and inserts. When you add validation to a collection, existing documents do not undergo validation checks until modification."
msgstr ""

#: ../source/core/schema-validation.txt:140
msgid "Existing Documents"
msgstr ""

#: ../source/core/schema-validation.txt:142
msgid "The ``validationLevel`` option determines which operations MongoDB applies the validation rules:"
msgstr ""

#: ../source/core/schema-validation.txt:145
msgid "If the ``validationLevel`` is ``strict`` (the default), MongoDB applies validation rules to all inserts and updates."
msgstr ""

#: ../source/core/schema-validation.txt:148
msgid "If the ``validationLevel`` is ``moderate``, MongoDB applies validation rules to inserts and to updates to existing documents that already fulfill the validation criteria. With the ``moderate`` level, updates to existing documents that do not fulfill the validation criteria are not checked for validity."
msgstr ""

#: ../source/core/schema-validation.txt:154
msgid "For example, create a ``contacts`` collection with the following documents:"
msgstr ""

#: ../source/core/schema-validation.txt:166
msgid "Issue the following command to add a validator to the ``contacts`` collection:"
msgstr ""

#: ../source/core/schema-validation.txt:192
msgid "The ``contacts`` collection now has a validator with the ``moderate`` validationLevel:"
msgstr ""

#: ../source/core/schema-validation.txt:195
msgid "If you attempted to update the document with ``_id`` of ``1``, MongoDB would apply the validation rules since the existing document matches the criteria."
msgstr ""

#: ../source/core/schema-validation.txt:199
msgid "In contrast, MongoDB will not apply validation rules to updates to the document with ``_id`` of ``2`` as it does not meet the validation rules."
msgstr ""

#: ../source/core/schema-validation.txt:203
msgid "To disable validation entirely, you can set ``validationLevel`` to ``off``."
msgstr ""

#: ../source/core/schema-validation.txt:207
msgid "Accept or Reject Invalid Documents"
msgstr ""

#: ../source/core/schema-validation.txt:209
msgid "The ``validationAction`` option determines how MongoDB handles documents that violate the validation rules:"
msgstr ""

#: ../source/core/schema-validation.txt:212
msgid "If the ``validationAction`` is ``error`` (the default), MongoDB rejects any insert or update that violates the validation criteria."
msgstr ""

#: ../source/core/schema-validation.txt:215
msgid "If the ``validationAction`` is ``warn``, MongoDB logs any violations but allows the insertion or update to proceed."
msgstr ""

#: ../source/core/schema-validation.txt:218
msgid "For example, create a ``contacts2`` collection with the following JSON Schema validator:"
msgstr ""

#: ../source/core/schema-validation.txt:248
msgid "With the ``warn`` :collflag:`validationAction`, MongoDB logs any violations but allows the insertion or update to proceed."
msgstr ""

#: ../source/core/schema-validation.txt:251
msgid "For example, the following insert operation violates the validation rule:"
msgstr ""

#: ../source/core/schema-validation.txt:257
msgid "However, since the ``validationAction`` is ``warn`` only, MongoDB only logs the validation violation message and allows the operation to proceed:"
msgstr ""

#: ../source/core/schema-validation.txt:266
msgid "Restrictions"
msgstr ""

#: ../source/core/schema-validation.txt:268
msgid "You cannot specify a validator for collections in the ``admin``, ``local``, and ``config`` databases."
msgstr ""

#: ../source/core/schema-validation.txt:271
msgid "You cannot specify a validator for ``system.*`` collections."
msgstr ""

#: ../source/core/schema-validation.txt:274
msgid "Bypass Document Validation"
msgstr ""

#: ../source/core/schema-validation.txt:276
msgid "Users can bypass document validation using the ``bypassDocumentValidation`` option. For a list of commands that support the ``bypassDocumentValidation`` option, see :ref:`3.2-rel-notes-document-validation`."
msgstr ""

#: ../source/core/schema-validation.txt:281
msgid "For deployments that have enabled access control, to bypass document validation, the authenticated user must have :authaction:`bypassDocumentValidation` action. The built-in roles :authrole:`dbAdmin` and :authrole:`restore` provide this action."
msgstr ""

#: ../source/core/schema-validation.txt:287
msgid "Additional Information"
msgstr ""

#: ../source/core/schema-validation.txt:289
msgid ":dbcommand:`collMod`, :method:`db.createCollection()`, :method:`db.getCollectionInfos()`."
msgstr ""

