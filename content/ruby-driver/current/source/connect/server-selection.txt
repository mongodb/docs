.. _ruby-server-selection:

================
Server Selection
================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: code example, read preference, write

Overview
--------

The {+driver-long+} follows a defined algorithm or the read preference defined 
in the client options when selecting a server to read or write from.

Server Selection Algorithm
---------------------------

When the {+driver-short+} executes a read operation, it performs the following 
steps, in order, to select a MongoDB deployment:

1. From the list of known servers, the {+driver-short+} selects all servers
   that match the active read preference.

#. The {+driver-short+} removes any server from the list that doesn't meet the
   ``localThresholdMS`` connection setting criteria, and returns the updated list.

#. The {+driver-short+} selects a server at random from the servers still on the list and
   executes the operation against this server.

When the {+driver-short+} executes a write operation, it begins by selecting all writeable
servers, not just those that match the active read preference. The remaining steps are
identical.

To learn more about the server-selection algorithm, see the
:manual:`Server Selection Algorithm </core/read-preference-mechanics/>` in the
{+mdb-server+} manual.

Customize Server Selection
--------------------------

For replica sets, you can select a read preference to determine which member the 
{+driver-short+} reads from. For more information about how to configure a read 
preference, see the :ref:`Read Preference <ruby-read-pref>` section of the Configure 
CRUD Operations guide.

API Documentation
-----------------

For more information about the {+driver-short+}'s server-selection algorithm,
see the following API documentation:

- `Mongo::Client <{+api-root+}Mongo/Client.html#server_selector-instance_method>`__
- `Server::Description <{+api-root+}Mongo/Server/Description.html>`__
