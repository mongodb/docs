.. _c-retrieve:

=============
Retrieve Data
=============

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. facet::
   :name: genre
   :values: reference
 
.. meta::
   :keywords: code examples, read, search, cursor

Overview
--------

In this guide, you can learn how to use the {+driver-short+} to retrieve data from a
MongoDB collection by using read operations. You can call the ``mongoc_collection_find_with_opts()``
function to retrieve documents that match a set of criteria specified in a query filter.

Sample Data
~~~~~~~~~~~

The examples in this guide use the ``restaurants`` collection in the ``sample_restaurants``
database from the :atlas:`Atlas sample datasets </sample-data>`. To learn how to create a
free MongoDB Atlas cluster and load the sample datasets, see the
:atlas:`Get Started with Atlas </getting-started>` guide.

.. _c-retrieve-find:

Find Documents
--------------

The ``mongoc_collection_find_with_opts()`` function takes a **query filter** and returns
all matching documents from a collection. A query filter is a document that specifies the
criteria that the driver uses to match documents from the collection.

To learn more about query filters, see the :ref:`c-specify-query` guide.

Find Documents Example
~~~~~~~~~~~~~~~~~~~~~~

The following example uses the ``mongoc_collection_find_with_opts()`` function to find all
documents in which the value of the ``cuisine`` field is ``"Spanish"``:

.. literalinclude:: /includes/read/retrieve.c
   :start-after: start-find
   :end-before: end-find
   :language: c
   :dedent:

The ``mongoc_collection_find_with_opts()`` operation in the preceding example returns a
``mongoc_cursor_t *``, which you can iterate through by using the ``mongoc_cursor_next()``
function and a while loop. The following example iterates through and prints the results returned
in the previous query:

.. io-code-block::
   :copyable:

   .. input:: /includes/read/retrieve.c
      :start-after: start-find-iterate
      :end-before: end-find-iterate
      :language: c
      :dedent:

   .. output::
      :language: console
      :visible: false

      { "_id" : { "$oid" : "..." }, "name" : "Charle'S Corner Restaurant & Deli", "cuisine" : "Spanish", ... }
      { "_id" : { "$oid" : "..." }, "name" : "Real Madrid Restaurant", "cuisine" : "Spanish", ... }
      { "_id" : { "$oid" : "..." }, "name" : "Malaga Restaurant", "cuisine" : "Spanish", ... }
      { "_id" : { "$oid" : "..." }, "name" : "Cafe Espanol", "cuisine" : "Spanish", ... }
      { "_id" : { "$oid" : "..." }, "name" : "Cafe Riazor", "cuisine" : "Spanish", ... }
      ...

.. note:: Find All Documents
 
   To find all documents in a collection, pass an empty filter to the
   ``mongoc_collection_find_with_opts()`` function:

   .. literalinclude:: /includes/read/retrieve.c
      :start-after: start-find-all
      :end-before: end-find-all
      :language: c
      :dedent:

Modify Find Behavior
~~~~~~~~~~~~~~~~~~~~

You can modify the behavior of the ``mongoc_collection_find_with_opts()`` function by by passing
in a ``bson_t`` structure that contains the options you want to configure. The following
table describes options commonly used for modifying queries:

.. list-table::
   :widths: 30 70
   :header-rows: 1

   * - Option
     - Description

   * - ``collation`` 
     - | Sets the collation options for the query. 

   * - ``comment`` 
     - | Specifies a string to attach to the query. This can help you trace and interpret the
         operation in the server logs and in profile data. To learn more about query comments, 
         see the :manual:`cursor.comment() </reference/method/cursor.comment/>` page in the
         {+mdb-server+} manual.
   
   * - ``hint`` 
     - | Specifies the index to use for the query.

   * - ``limit``
     - | Limits the number of documents to be returned from the query.

   * - ``maxTimeMS``
     - | Sets the maximum execution time on the server for this operation.

   * - ``skip``
     - | Sets the number of documents to skip.

   * - ``sort``
     - | Defines the sort criteria to apply to the query.

The following example uses the ``limit`` and ``maxTimeMS`` options to limit the
number of documents returned by the query to ``10`` and set a maximum execution time of
``10000`` milliseconds on the operation:

.. literalinclude:: /includes/read/retrieve.c
   :start-after: start-modified-find
   :end-before: end-modified-find
   :language: c
   :dedent:

For a full list of options that modify the behavior of ``mongoc_collection_find_with_opts()``,
see the :manual:`find method </reference/method/db.collection.find/>` documentation in the
{+mdb-server+} manual.

Additional Information
----------------------

To learn more about query filters, see :ref:`c-specify-query`.

To view runnable code examples that retrieve documents by using the {+driver-short+}, see
:ref:`c-read`.

API Documentation
~~~~~~~~~~~~~~~~~

To learn more about any of the functions discussed in this guide, see the following
API documentation:

- `mongoc_collection_find_with_opts() <{+api-libmongoc+}/mongoc_collection_find_with_opts.html>`__
