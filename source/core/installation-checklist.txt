======================
Installation Checklist
======================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

You must make several decisions based on the content of this page
before you install |onprem|. During the installation process, you will
make choices based on these decisions.

To install |onprem|:

1. Read the :doc:`/application`.

#. Plan your installation according to the questions on this page.

#. Provision servers that meet the :doc:`/core/requirements`.

   .. include:: /includes/admonitions/warning-follow-requirements.rst

#. :doc:`Install the Application Database and optional Backup Database </tutorial/prepare-backing-mongodb-instances>`.

#. :doc:`/tutorial/nav/install-application`.

   .. note::

      To install a simple evaluation deployment on a single server, see
      :doc:`/tutorial/install-simple-test-deployment`.

Topology Decisions
------------------

Do you require redundancy and/or high availability?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The :doc:`topology </core/deployments>` you choose for your deployment
affects the redundancy and availability of both your metadata and
snapshots, and the availability of the |application|.

|onprem| stores application metadata and snapshots in the |application|
Database and Backup Database respectively. To provide data redundancy,
run each database as a three-member :term:`replica set` on multiple
servers.

To provide high availability for write operations to the databases, set
up each replica set so that all three members hold data. This way, if a
member is unreachable the replica set can still write data. |onprem|
uses ``w:2`` :manual:`write concern </reference/write-concern>`, which
requires acknowledgement from the primary and one secondary for each
write operation.

To provide high availability for the |application|, run at least two
instances of the application and use a load balancer. A load balancer
placed in front of the |application| must not return cached content.
For more information, see
:doc:`/tutorial/configure-application-high-availability`.

The following tables describe the pros and cons for different
topologies.

Test Install
````````````

This deployment runs on one server and has no data-redundancy. If you
lose the server, you must start over from scratch.

.. list-table::
   :widths: 15 85
   :stub-columns: 1

   * - Pro

     - Needs only needs one server.

   * - Con

     - If you lose the server, you lose everything: users and projects,
       metadata, backups, automation configurations, stored monitoring
       metrics, etc.

.. _production-install-with-redundancy:

Production Install with Highly Available Metadata and Snapshots
```````````````````````````````````````````````````````````````

This install requires at least three servers. The replica sets for the
|application| Database and the Backup Database each comprise at least
three *data-bearing* members. This requires sufficient storage and
memory.

.. list-table::
   :widths: 15 85
   :stub-columns: 1

   * - Pro

     - You can lose a member of the |application| Database or Backup
       Database and still maintain |onprem| availability. No |onprem|
       functionality is lost while the member is down.

   * - Con

     - Loss of the |onprem| instance requires you to manually start a
       new |onprem| instance. No |onprem| functionality is available
       while the application is down.

Production Install with a Highly Available |onprem| Application
```````````````````````````````````````````````````````````````

This runs multiple |onprem| Applications behind a load balancer and
requires infrastructure outside of what |onprem| offers. For details,
see :doc:`/tutorial/configure-application-high-availability`.

.. list-table::
   :widths: 15 85
   :stub-columns: 1

   * - Pro

     - |onprem| continues to be available even when any individual
       server is lost.

   * - Con

     - Requires a larger number of servers, and requires a load
       balancer capable of routing traffic to available application
       servers.

Will you deploy managed MongoDB instances on servers that have no internet access?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If the servers where you deploy MongoDB don't have internet access and if
you use Automation, then before you create the first managed MongoDB deployment
from |onprem|, you must configure local mode and store the binaries.
MongoDB Agents can then download the binaries directly from |onprem|.
To learn more, see :doc:`/tutorial/configure-local-mode`.

Will you use a proxy for the |onprem| application's outbound network connections?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If |onprem| will use a proxy server to access external services, you
must configure the proxy settings in |onprem|'s ``conf-mms.properties``
configuration file. If you have already started |onprem|, you must
restart after configuring the proxy settings.

.. COMMENT: In the install procedure, add a step to see /tutorial/use-opsmanager-with-http-proxy

Security Decisions
------------------

Will you use authentication, |tls|, or both for the connections to the backing databases?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you will use authentication or |tls| for connections to the
|application| Database and Backup Database, you must configure those
options on each database when
:doc:`deploying the database </tutorial/prepare-backing-mongodb-instances>`
and then you must configure |onprem| with the necessary certificate
information for accessing the databases. For details, see
:doc:`/tutorial/configure-ssl-connection-to-backing-mongodb`

Will you use |ldap| for user authenticate to |onprem|?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you want to use |ldap| for user management, you can configure |ldap|
authentication before or after creating your first project. There are
different prerequisites for implementing a new |ldap| authentication
scheme or for converting an existing authentication scheme to |ldap|. To
learn more about these differences, see :ref:`ldap-new-vs-convert`.

For details on |ldap| authentication, see
:doc:`/tutorial/configure-for-ldap-authentication`.

Will you use |tls| for connections to the |onprem| application?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you will use |tls| for connections to |onprem| from MongoDB Agents,
users, and the |api|, then you must configure |onprem| to use |tls|.
The procedure to install |onprem| includes the option to configure
|tls| access.

.. COMMENT This needs updates: /tutorial/configure-ssl-connection-to-web-interface

Backup Decisions
----------------

Will the servers that run your Backup Daemons have internet access?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If the servers that run your Backup Daemons have no internet access,
you must configure offline binary access for the Backup Daemon before
running the Daemon. The :doc:`/tutorial/configure-local-mode` page
covers the option to configure offline binary access.

Are certain backups required to be in certain data centers?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you need to assign backups of particular MongoDB deployments to
particular data centers, then each data center requires its own
|onprem| instance, Backup Daemon, and MongoDB Agent. The separate
|onprem| instances must share a single dedicated |application|
Database. The MongoDB Agent in each data center must use the |url| for
its local |onprem| instance, which you can configure through either
different hostnames or split-horizon |dns|. For detailed requirements,
see :doc:`/tutorial/assign-snapshot-stores-to-data-center`.
