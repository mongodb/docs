.. _create-cluster-more-configuration-options:

============================
Configure Additional Options
============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

You can configure the following |mongod| runtime options
on ``M10+`` paid tier clusters.

To view these settings, open the :guilabel:`More Configuration Options`
under :guilabel:`Additional Settings` in the cluster form.

.. figure:: /images/create-cluster-more-config-options.png
   :figwidth: 720px
   :alt: Image showing more cluster configuration options.

.. _set-oplog-size:

Set Oplog Size
--------------

Modify the :term:`oplog` size of the cluster.

For sharded cluster deployments, this modifies the oplog size of each
shard in the cluster.

This option corresponds to modifying the
:setting:`replication.oplogSizeMB` configuration file option for each
|mongod| in the cluster.

Specify your desired :guilabel:`Oplog Size` in megabytes in the
input box.

.. warning::

   Reducing the size of the oplog requires removing data from the
   oplog. |service| cannot access or restore any oplog entries removed
   as a result of oplog reduction. Consider the ramifications of this
   data loss before reducing the oplog.

.. important::

   - You can't set the oplog to less than 990 megabytes.
   - |service| places no upper limit in megabytes on the oplog.
     However, |service| returns an error if the oplog size you choose 
     leaves your cluster's disk with less than 25 percent of its 
     capacity free.

To check the oplog size:

1. Connect to your cluster via the |mongo| shell.
2. Authenticate as a user with the :atlasrole:`Atlas admin` role.
3. Run the :method:`rs.printReplicationInfo() <rs.printReplicationInfo>` method.

|service| displays the current oplog size and time.

Disk Space Considerations
~~~~~~~~~~~~~~~~~~~~~~~~~

Do *not* reduce the size of the oplog as a means of increasing available
disk space. Only the oplog collection (``local.oplog.rs``) can reclaim
the space saved by reducing the oplog size. Other collections do not
benefit from reducing oplog storage.

Enforce Index Key Limit
-----------------------

Enable or disable enforcement of the 1024-byte index key limit.
Documents can only be updated or inserted if, for all
indexed fields on the target collection, the corresponding index
entries do not exceed 1024 bytes.

If disabled, |mongod| writes documents that breach the
limit but does *not* index them. This option corresponds to
modifying the
:parameter:`failIndexKeyTooLong <param.failIndexKeyTooLong>`
parameter via the :dbcommand:`setParameter` command for each
|mongod| in the cluster.

.. include:: /includes/admonitions/removed-fail-index-key-too-long.rst

Allow Server-Side JavaScript
----------------------------

.. include:: /includes/fact-javascriptEnabled-description.rst

.. include:: /includes/admonitions/changed-javascript-enabled-mongos.rst

.. _config-tls-cert-root:

Configure TLS Certificate Root
------------------------------

|service| cluster |tls| certificates use IdenTrust's root |certauth|
(`DST Root CA X3 <https://letsencrypt.org/certs/trustid-x3-root.pem.txt>`__)
by default until April 30, 2021. Beginning on May 1, 2021, new |tls|
certificates that MongoDB |service| creates will use ISRG instead of
IdenTrust for their root |certauth| in line with Let's Encrypt's
`announcement <https://letsencrypt.org/2019/04/15/transitioning-to-isrg-root.html>`__
of this transition. All
`DST Root CA X3 <https://letsencrypt.org/certs/trustid-x3-root.pem.txt>`__
expire on September 30, 2021.

If you wish to use ISRG instead of IdenTrust:

1. Select :guilabel:`ISRG Root X1` from the drop-down.
#. Review changes to your cluster and click :guilabel:`Apply Changes`.

   |service| triggers a rolling restart of all the nodes in your
   cluster after 45 minutes when you switch between certificate roots.
   You can verify the change after the cluster restarts.

#. (Optional) Run the following command to verify the change:

   .. code-block:: sh

      echo | openssl s_client -showcerts -connect ${HOSTNAME}:${PORT} \
      2> /dev/null | grep -E "(Certificate|CN\s*=|O\s*=)"

   Set ``$HOSTNAME`` to a node hostname and ``$PORT`` to the port used
   to connect to MongoDB (usually ``27017`` or ``27016``). If you use
   Private Link to connect to your cluster, verify your cluster's port.

You can revert to DST if ISRG Root X1 causes any issues.

.. note::

   If you switch certificate root for a shared-tier cluster, |service|
   applies the change to all shared-tier clusters in the same project.

Set Minimum TLS Protocol Version
--------------------------------

Sets the minimum TLS version the cluster accepts for incoming
connections. This option corresponds to configuring the
:setting:`net.ssl.disabledProtocols` configuration file option
for each |mongod| in the cluster.

.. note:: TLS 1.0 Deprecation

   For users considering this option as a method for enabling the
   deprecated Transport Layer Security (TLS) 1.0 protocol version, please read
   :ref:`faq-tls-1.0-deprecation` before proceeding. |service|
   deprecation of TLS 1.0 improves your security of data-in-transit
   and aligns with industry best practices. Enabling TLS 1.0 for any
   |service| cluster carries security risks. Consider enabling TLS
   1.0 only for as long as required to update your application stack
   to support TLS 1.1 or later.

Require Indexes for All Queries
-------------------------------

Enable or disable the execution of queries that require a collection
scan to return results. This option corresponds to modifying the
:parameter:`notablescan <param.notablescan>` parameter via the
:dbcommand:`setParameter` command for each |mongod| in
the cluster.

Considerations
--------------

|service| dynamically modifies the :guilabel:`Oplog Size` for replica
sets and sharded clusters. However, for the :guilabel:`Minimum TLS
Protocol Version` and :guilabel:`Allow Server-Side JavaScript`
settings, it performs a rolling restart of the shard members
and the config server replica set. To learn more about how |service|
supports high availability during maintenance operations, see
:ref:`high-availability`.
