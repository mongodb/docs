============
db.addUser()
============

.. default-domain:: mongodb

.. method:: db.addUser()

   Use this method to create new database users by specifying a
   username, password, and privileges.

   In MongoDB 2.4 you must pass :method:`db.addUser()` a document that
   contains the user parameters. You cannot pass the parameters
   directly. In MongoDB 2.2 and earlier you can pass the parameters
   directly, or pass a document.

   If you use MongoDB 2.4, the following parameters define users:

   :param string user: Specifies a new username.

   :param string pwd: Specifies the corresponding password.
                      Specify either this parameter or the
                      ``userSource`` parameter. The two fields are
                      mutually exclusive. A single document cannot
                      contain both.

   :param array roles: This specifies one or more
                       roles to the user. Each role provides the user
                       with a set of privileges. For a list of roles,
                       see :data:`system.users.roles <<database>.system.users.roles>`.

   :param string userSource: This specifies
                             the database that contains the user
                             credentials. Specify either this parameter
                             or the ``pwd`` parameter. The two fields
                             are mutually exclusive. A single document
                             cannot contain both.

   :param document otherDBRoles: Optional. This
                                 specifies the roles that an admin user
                                 has on other databases. This field
                                 applies only to a user added to the
                                 ``admin`` database. For a list of
                                 roles, see :data:`system.users.roles
                                 <<database>.system.users.roles>`.

   For MongoDB 2.4, use the syntax described here.

   To specify the password:

   .. code-block:: javascript

      db.addUser( { user: "<user>", pwd: "<password>", roles: [<roles>] } )

   To specify the database that contains the user credentials:

   .. code-block:: javascript

      db.addUser( { user: "<user>", userSource: "<database>", roles: [<roles>] } )

   To give an admin user roles on other databases, include the following
   field in the document passed to the :method:`db.addUser()` method:

   .. code-block:: javascript

      otherDBRoles: { <database1>: [<roles>], <database2>: [<roles>] }

   .. example:: On MongoDB 2.4, the following creates a user named
      "author" with ``readWrite`` and ``readAnyDatabase`` privileges:

      .. code-block:: javascript

         db.addUser( { user: "author", pwd: "pass", roles: [ "readWrite", "readAnyDatabase" ] } )

   .. seealso::

      - :doc:`/reference/user-privileges`

      - :doc:`/reference/privilege-documents`

   If you use MongoDB 2.2 or earlier, the following parameters define
   users:

   :param string user: Specifies a new username.

   :param string password: Specifies the corresponding password.

   :param boolean readOnly: Optional. If you use MongoDB 2.2 or earlier,
                            this restricts a user to
                            read privileges. This defaults to false.

   Use the following syntax. The
   ``readOnly`` field is optional and defaults to ``false``:

   .. code-block:: javascript

      db.addUser( "<username>", "<password>", { readOnly: <boolean> } )

   .. example:: On MongoDB 2.2 and earlier, the following creates a user
      named "guest" with ``readOnly`` privileges:

      .. code-block:: javascript

         db.addUser( "guest", "pass", { readOnly: true } )

   .. note:: The :program:`mongo` shell excludes all
     :method:`db.addUser()` operations from the saved history.

   .. deprecated:: 2.4
      The ``roles`` parameter replaces the ``readOnly`` parameter for
      :method:`db.addUser()`. Version 2.4 also adds the ``otherDBRoles``
      and ``userSource`` parameters to :method:`db.addUser()`.
