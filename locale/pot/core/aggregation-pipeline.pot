# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/aggregation-pipeline.txt:3
# 14d15777a9bf4616ab28eee0b7e9ec5b
msgid "Aggregation Pipeline"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:9
# 9a1d6f7b522546e2890dee8edb4ca943
msgid "The aggregation pipeline is a framework for data aggregation modeled on the concept of data processing pipelines. Documents enter a multi-stage pipeline that transforms the documents into an aggregated results."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:16
# 83d4294368904ed583bdfaf5415ad5fe
msgid "The aggregation pipeline provides an alternative to :term:`map-reduce` and may be the preferred solution for aggregation tasks where the complexity of map-reduce may be unwarranted."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:20
# 5766f5f2d4a344f484cbd58ff72a9fc3
msgid "Aggregation pipeline have some limitations on value types and result size. See :doc:`/core/aggregation-pipeline-limits` for details on limits and restrictions on the aggregation pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:27
# b7ddc8d2a6264fbd80249e0d6d80eb3a
msgid "Pipeline"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:29
# e49ac4d15e8844ba8f8779c8555bcb95
msgid "The MongoDB aggregation pipeline consists of :ref:`stages <aggregation-pipeline-operator-reference>`. Each stage transforms the documents as they pass through the pipeline. Pipeline stages do not need to produce one output document for every input document; e.g., some stages may generate new documents or filter out documents. Pipeline stages can appear multiple times in the pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:36
# 9b4b7a1b6989491abbce76143c4e2200
msgid "MongoDB provides the :method:`db.collection.aggregate()` method in the :program:`mongo` shell and the :dbcommand:`aggregate` command for aggregation pipeline. See :ref:`aggregation-pipeline-operator-reference` for the available stages."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:41
# 10b58db787564a30abfbb489d6a7b845
msgid "For example usage of the aggregation pipeline, consider :doc:`/tutorial/aggregation-with-user-preference-data` and :doc:`/tutorial/aggregation-zip-code-data-set`."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:48
# 2dceb1e1577f43958414e17e46dcff8c
msgid "Pipeline Expressions"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:50
# 010c73c4a1ff4b62bb5dfc333104327d
msgid "Some pipeline stages takes a pipeline expression as its operand. Pipeline expressions specify the transformation to apply to the input documents. Expressions have a :doc:`document </core/document>` structure and can contain other :ref:`expression <aggregation-expressions>`."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:56
# 1573f097bec24a84a48ea06f514c5120
msgid "Pipeline expressions can only operate on the current document in the pipeline and cannot refer to data from other documents: expression operations provide in-memory transformation of documents."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:60
# cf555b28c65e40e48a386c1949f676d5
msgid "Generally, expressions are stateless and are only evaluated when seen by the aggregation process with one exception: :ref:`accumulator <aggregation-accumulator-operators>` expressions."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:64
# 32e076944b1945a6b2e0546051342fa1
msgid "The accumulators, used with the :pipeline:`$group` pipeline operator, maintain their state (e.g. totals, maximums, minimums, and related data) as documents progress through the pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:68
# 962ba876f0594b1bbcdafdffc9a770da
msgid "For more information on expressions, see :ref:`aggregation-expressions`."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:74
# 67b46ead77174b0c9de13717024f5a97
msgid "Aggregation Pipeline Behavior"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:76
# 21ef25516bb8487fab7c44eaceb9c365
msgid "In MongoDB, the :dbcommand:`aggregate` command operates on a single collection, logically passing the *entire* collection into the aggregation pipeline. To optimize the operation, wherever possible, use the following strategies to avoid scanning the entire collection."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:84
# 64cb97ec46c641b69e14ce5eb06a7fe9
msgid "Pipeline Operators and Indexes"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:86
# 244ecbf0c98c4e61a64b66c9a60265fa
msgid "The :pipeline:`$match` and :pipeline:`$sort` pipeline operators can take advantage of an index when they occur at the **beginning** of the pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:90
# 360d0b692da9462f8c6d236f797bcf04
msgid "The :pipeline:`$geoNear` pipeline operator takes advantage of a geospatial index. When using :pipeline:`$geoNear`, the :pipeline:`$geoNear` pipeline operation must appear as the first stage in an aggregation pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:96
# 918f326438cf464a9f2b721de93376ac
msgid "Even when the pipeline uses an index, aggregation still requires access to the actual documents; i.e. indexes cannot fully cover an aggregation pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:100
# bd3a1057e6474a9b8857a5594db6c01d
msgid "In previous versions, for very select use cases, an index could cover a pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:105
# 1f70d5e0b4ff4b818db7274f7f2acaa5
msgid "Early Filtering"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:107
# 2cb509e48321403f90ac9767d44a3408
msgid "If your aggregation operation requires only a subset of the data in a collection, use the :pipeline:`$match`, :pipeline:`$limit`, and :pipeline:`$skip` stages to restrict the documents that enter at the beginning of the pipeline. When placed at the beginning of a pipeline, :pipeline:`$match` operations use suitable indexes to scan only the matching documents in a collection."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:114
# 63c1e9a48d2940718600dfcfa8ce3b6a
msgid "Placing a :pipeline:`$match` pipeline stage followed by a :pipeline:`$sort` stage at the start of the pipeline is logically equivalent to a single query with a sort and can use an index. When possible, place :pipeline:`$match` operators at the beginning of the pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:121
# 67506c2fb9564947b12c7c9f78aab95c
msgid "Additional Features"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:123
# 5d0c14e1e17547b09f1a8b88823951ce
msgid "The aggregation pipeline has an internal optimization phase that provides improved performance for certain sequences of operators. For details, see :doc:`/core/aggregation-pipeline-optimization`."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:127
# ca12324b3e5645239b8ddf405af83215
msgid "The aggregation pipeline supports operations on sharded collections. See :ref:`aggregation-pipeline-sharded-collection`."
msgstr ""

