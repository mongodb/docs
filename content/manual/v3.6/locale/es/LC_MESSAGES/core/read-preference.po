# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: 2014-04-08 19:29+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/core/read-preference.txt:9
msgid "Read Preference"
msgstr ""

#: ../source/includes/introduction-read-preference.rst:1
msgid ""
"Read preference describes how MongoDB clients route read operations to "
"the members of a :term:`replica set`."
msgstr ""

#: ../source/includes/introduction-read-preference.rst:6
msgid ""
"By default, an application directs its read operations to the "
":term:`primary` member in a :term:`replica set`."
msgstr ""

#: ../source/core/read-preference.txt:22
msgid ""
"Exercise care when specifying read preferences: Modes other than "
":readmode:`primary` may return stale data because with :ref:`asynchronous"
" replication <asynchronous-replication>`, data in the secondary may not "
"reflect the most recent write operations. [#edge-cases-2-primaries]_"
msgstr ""

#: ../source/core/read-preference.txt:28
msgid ""
"The read preference does not affect the visibility of data; i.e. clients "
"can see the results of writes before they are acknowledged or have "
"propagated to a majority of replica set members:"
msgstr ""

#: ../source/includes/list-visibility-of-data.rst:1
msgid ""
"Regardless of :doc:`write concern </reference/write-concern>`, other "
"clients using :readconcern:`\"local\"` or :readconcern:`\"available\"` "
"readConcern can see the result of a write operation before the write "
"operation is acknowledged to the issuing client."
msgstr ""

#: ../source/includes/list-visibility-of-data.rst:6
msgid ""
"Clients using :readconcern:`\"local\"` or :readconcern:`\"available\"` "
"readConcern can read data which may be subsequently :doc:`rolled back "
"</core/replica-set-rollbacks>`."
msgstr ""

#: ../source/core/read-preference.txt:35
msgid "Use Cases"
msgstr ""

#: ../source/core/read-preference.txt:38
msgid "Indications"
msgstr ""

#: ../source/core/read-preference.txt:40
msgid ""
"The following are common use cases for using non-:readmode:`primary` read"
" preference modes:"
msgstr ""

#: ../source/core/read-preference.txt:43
msgid "Running systems operations that do not affect the front-end application."
msgstr ""

#: ../source/core/read-preference.txt:48
msgid ""
"Read preferences aren't relevant to direct connections to a single "
":binary:`~bin.mongod` instance. However, in order to perform read "
"operations on a direct connection to a secondary member of a replica set,"
" you must set a read preference, such as :term:`secondary`."
msgstr ""

#: ../source/core/read-preference.txt:54
msgid "Providing local reads for geographically distributed applications."
msgstr ""

#: ../source/core/read-preference.txt:56
msgid ""
"If you have application servers in multiple data centers, you may "
"consider having a :ref:`geographically distributed replica set <replica-"
"set-geographical-distribution>` and using a non primary or "
":readmode:`nearest` read preference. This allows the client to read from "
"the lowest-latency members, rather than always reading from the primary."
msgstr ""

#: ../source/core/read-preference.txt:63
msgid "Maintaining availability during a failover."
msgstr ""

#: ../source/core/read-preference.txt:65
msgid ""
"Use :readmode:`primaryPreferred` if you want an application to read from "
"the primary under normal circumstances, but to allow stale reads from "
"secondaries when the primary is unavailable. This provides a \"read-only "
"mode\" for your application during a failover."
msgstr ""

#: ../source/core/read-preference.txt:71
msgid "Counter-Indications"
msgstr ""

#: ../source/core/read-preference.txt:73
msgid ""
"In general, do *not* use :readmode:`secondary` and "
":readmode:`secondaryPreferred` to provide extra capacity for reads, "
"because:"
msgstr ""

#: ../source/core/read-preference.txt:77
msgid ""
"All members of a replica have roughly equivalent write traffic; as a "
"result, secondaries will service reads at roughly the same rate as the "
"primary."
msgstr ""

#: ../source/core/read-preference.txt:81
msgid ""
"Replication is asynchronous and there is some amount of delay between a "
"successful write operation and its replication to secondaries. Reading "
"from a secondary can return stale data; reading from different "
"secondaries may result in non-monotonic reads."
msgstr ""

#: ../source/core/read-preference.txt:88
msgid ""
"Starting in MongoDB 3.6, clients can use :ref:`sessions` to ensure "
"monotonic reads."
msgstr ""

#: ../source/core/read-preference.txt:91
msgid ""
"Distributing read operations to secondaries can compromise availability "
"if *any* members of the set become unavailable because the remaining "
"members of the set will need to be able to handle all application "
"requests."
msgstr ""

#: ../source/core/read-preference.txt:96
msgid ""
":doc:`Sharding </sharding>` increases read and write capacity by "
"distributing read and write operations across a group of machines, and is"
" often a better strategy for adding capacity."
msgstr ""

#: ../source/core/read-preference.txt:100
msgid ""
"See :doc:`/core/read-preference-mechanics` for more information about the"
" internal application of read preferences."
msgstr ""

#: ../source/core/read-preference.txt:104
msgid "Read Preference Modes"
msgstr ""

#: ../source/core/read-preference.txt:108
msgid ""
"All read preference modes except :readmode:`primary` may return stale "
"data because :term:`secondaries <secondary>` replicate operations from "
"the primary with some delay. [#edge-cases-2-primaries]_ Ensure that your "
"application can tolerate stale data if you choose to use a "
"non-:readmode:`primary` mode."
msgstr ""

#: ../source/core/read-preference.txt:114
msgid ""
"MongoDB :ecosystem:`drivers </drivers>` support five read preference "
"modes."
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:5
msgid "Read Preference Mode"
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:6
msgid "Description"
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:7
msgid ":readmode:`primary`"
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:8
msgid ""
"Default mode. All operations read from the current replica set "
":term:`primary`."
msgstr ""

#: ../source/core/read-preference.txt:160
#: ../source/core/read-preference.txt:207
#: ../source/includes/read-preference-modes-table.rst:10
msgid ":readmode:`primaryPreferred`"
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:11
msgid ""
"In most situations, operations read from the :term:`primary` but if it is"
" unavailable, operations read from :term:`secondary` members."
msgstr ""

#: ../source/core/read-preference.txt:161
#: ../source/core/read-preference.txt:208
#: ../source/includes/read-preference-modes-table.rst:14
msgid ":readmode:`secondary`"
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:15
msgid "All operations read from the :term:`secondary` members of the replica set."
msgstr ""

#: ../source/core/read-preference.txt:162
#: ../source/core/read-preference.txt:209
#: ../source/includes/read-preference-modes-table.rst:17
msgid ":readmode:`secondaryPreferred`"
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:18
msgid ""
"In most situations, operations read from :term:`secondary` members but if"
" no :term:`secondary` members are available, operations read from the "
":term:`primary`."
msgstr ""

#: ../source/core/read-preference.txt:163
#: ../source/core/read-preference.txt:210
#: ../source/includes/read-preference-modes-table.rst:21
msgid ":readmode:`nearest`"
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:22
msgid ""
"Operations read from member of the :term:`replica set` with the least "
"network latency, irrespective of the member's type."
msgstr ""

#: ../source/core/read-preference.txt:119
msgid ""
"The syntax for specifying the read preference mode is :api:`specific to "
"the driver and to the idioms of the host language <>`."
msgstr ""

#: ../source/core/read-preference.txt:123
msgid ""
"Read preference modes are also available to clients connecting to a "
":term:`sharded cluster` through a :binary:`~bin.mongos`. The "
":binary:`~bin.mongos` instance obeys specified read preferences when "
"connecting to the :term:`replica set` that provides each :term:`shard` in"
" the cluster."
msgstr ""

#: ../source/core/read-preference.txt:129
msgid ""
"In the :binary:`~bin.mongo` shell, the :method:`~cursor.readPref()` "
"cursor method provides access to read preferences."
msgstr ""

#: ../source/core/read-preference.txt:132
msgid ""
"For more information, see :ref:`read preference behavior <replica-set-"
"read-preference-behavior>`. See also the :api:`documentation for your "
"driver <>`."
msgstr ""

#: ../source/core/read-preference.txt:139
msgid "``maxStalenessSeconds``"
msgstr ""

#: ../source/core/read-preference.txt:143
msgid ""
"Replica set members can lag behind the :term:`primary` due to network "
"congestion, low disk throughput, long-running operations, etc. The read "
"preference ``maxStalenessSeconds`` option lets you specify a maximum "
"replication lag, or \"staleness\", for reads from :term:`secondaries "
"<secondary>`. When a secondary's estimated staleness exceeds "
"``maxStalenessSeconds``, the client stops using it for read operations."
msgstr ""

#: ../source/includes/fact-important-maxStalenessSeconds-intended-use.rst:2
msgid ""
"The ``maxStalenessSeconds`` read preference option is intended for "
"applications that read from secondaries and want to avoid reading from a "
"secondary that has fallen overly far behind in replicating the primary's "
"writes. For example, a secondary might stop replicating due to a network "
"outage between itself and the primary. In that case, the client should "
"stop reading from the secondary until an administrator resolves the "
"outage and the secondary catches up."
msgstr ""

#: ../source/core/read-preference.txt:152
msgid ""
"To use ``maxStalenessSeconds``, all of the MongoDB instances in your "
"deployment must be using MongoDB 3.4 or later. If any instances are on an"
" earlier version of MongoDB, the driver or :binary:`~bin.mongos` will "
"raise an error."
msgstr ""

#: ../source/core/read-preference.txt:157
msgid ""
"You can specify ``maxStalenessSeconds`` with the following read "
"preference modes:"
msgstr ""

#: ../source/core/read-preference.txt:165
msgid ""
"Max staleness is not compatible with mode :readmode:`primary` and only "
"applies when :ref:`selecting <replica-set-read-preference-behavior-"
"member-selection>` a :term:`secondary` member of a set for a read "
"operation."
msgstr ""

#: ../source/core/read-preference.txt:170
msgid ""
"When selecting a server for a read operation with "
"``maxStalenessSeconds``, clients estimate how stale each secondary is by "
"comparing the secondary's last write to that of the primary. The client "
"will then direct the read operation to a secondary whose estimated lag is"
" less than or equal to ``maxStalenessSeconds``."
msgstr ""

#: ../source/core/read-preference.txt:176
msgid ""
"If there is no primary, the client uses the secondary with the most "
"recent write for the comparison."
msgstr ""

#: ../source/core/read-preference.txt:179
msgid ""
"By default, there is no maximum staleness and clients will not consider a"
" secondary's lag when choosing where to direct a read operation."
msgstr ""

#: ../source/core/read-preference.txt:182
msgid ""
"You must specify a ``maxStalenessSeconds`` value of 90 seconds or longer:"
" specifying a smaller ``maxStalenessSeconds`` value will raise an error. "
"Clients estimate secondaries' staleness by periodically checking the "
"latest write date of each replica set member. Since these checks are "
"infrequent, the staleness estimate is coarse. Thus, clients cannot "
"enforce a ``maxStalenessSeconds`` value of less than 90 seconds."
msgstr ""

#: ../source/core/read-preference.txt:194
msgid "Tag Sets"
msgstr ""

#: ../source/core/read-preference.txt:196
msgid ""
"Tag sets allow you to target read operations to specific members of a "
"replica set."
msgstr ""

#: ../source/core/read-preference.txt:199
msgid ""
"Custom read preferences and write concerns evaluate tag sets in different"
" ways. Read preferences consider the value of a tag when selecting a "
"member to read from. Write concerns ignore the value of a tag when "
"selecting a member, *except* to consider whether or not the value is "
"unique."
msgstr ""

#: ../source/core/read-preference.txt:205
msgid "You can specify tag sets with the following read preference modes:"
msgstr ""

#: ../source/core/read-preference.txt:212
msgid ""
"Tags are not compatible with mode :readmode:`primary` and, in general, "
"only apply when :ref:`selecting <replica-set-read-preference-behavior-"
"member-selection>` a :term:`secondary` member of a set for a read "
"operation. However, the :readmode:`nearest` read mode, when combined with"
" a tag set, selects the matching member with the lowest network latency. "
"This member may be a primary or secondary."
msgstr ""

#: ../source/core/read-preference.txt:219
msgid ""
"All interfaces use the same :ref:`member selection logic <replica-set-"
"read-preference-behavior-member-selection>` to choose the member to which"
" to direct read operations, basing the choice on read preference mode and"
" tag sets."
msgstr ""

#: ../source/core/read-preference.txt:224
msgid ""
"For information on configuring tag sets, see the :doc:`/tutorial"
"/configure-replica-set-tag-sets` tutorial."
msgstr ""

#: ../source/core/read-preference.txt:227
msgid ""
"For more information on how read preference :ref:`modes <replica-set-"
"read-preference-modes>` interact with tag sets, see the "
":doc:`documentation for each read preference mode </reference/read-"
"preference>`."
msgstr ""

#: ../source/includes/footnote-two-primaries-edge-cases.rst:1
msgid ""
"In :ref:`some circumstances <edge-cases>`, two nodes in a replica set may"
" *transiently* believe that they are the primary, but at most, one of "
"them will be able to complete writes with :writeconcern:`{ w: "
"\"majority\" } <\"majority\">` write concern. The node that can complete "
":writeconcern:`{ w: \"majority\" } <\"majority\">` writes is the current "
"primary, and the other node is a former primary that has not yet "
"recognized its demotion, typically due to a :term:`network partition`. "
"When this occurs, clients that connect to the former primary may observe "
"stale data despite having requested read preference :readmode:`primary`, "
"and new writes to the former primary will eventually roll back."
msgstr ""

#~ msgid ""
#~ "Issuing reads to secondaries helps "
#~ "distribute load and prevent operations "
#~ "from affecting the main workload of "
#~ "the primary. This can be a good"
#~ " choice for reporting and analytics "
#~ "workloads, for example."
#~ msgstr ""

#~ msgid ""
#~ "In general, do not use "
#~ ":readmode:`secondary` and :readmode:`secondaryPreferred`"
#~ " to provide extra capacity."
#~ msgstr ""

#~ msgid ""
#~ "Distributing read operations to secondaries"
#~ " can compromise availability if *any* "
#~ "members of the set are unavailable "
#~ "because the other members of the "
#~ "set will need to be able to "
#~ "handle all application requests."
#~ msgstr ""

# ba8fe55974f146638f82ed6af074e350
#~ msgid ""
#~ "Read preference describes how MongoDB "
#~ "clients route read operations to members"
#~ " of a :term:`replica set`."
#~ msgstr ""

# dcd6b1b4953d46b19e8b2fe7981bb33f
#~ msgid ""
#~ "By default, an application directs its"
#~ " read operations to the :term:`primary` "
#~ "member in a :term:`replica set`. Reading"
#~ " from the primary guarantees that "
#~ "read operations reflect the latest "
#~ "version of a document. However, by "
#~ "distributing some or all reads to "
#~ "secondary members of the replica set,"
#~ " you can improve read throughput or"
#~ " reduce latency for an application "
#~ "that does not require fully up-"
#~ "to-date data."
#~ msgstr ""

# d8cc75a3c38b49e7996ec63aae030208
#~ msgid ""
#~ "You must exercise care when specifying"
#~ " read preferences: modes other than "
#~ ":readmode:`primary` can *and will* return "
#~ "stale data because the secondary queries"
#~ " will not include the most recent "
#~ "write operations to the replica set's"
#~ " :term:`primary`."
#~ msgstr ""

# 6405b68d057942aba3c230cbe15a6d90
#~ msgid ""
#~ "Read preferences aren't relevant to "
#~ "direct connections to a single "
#~ ":program:`mongod` instance. However, in order"
#~ " to perform read operations on a "
#~ "direct connection to a secondary member"
#~ " of a replica set, you must set"
#~ " a read preference, such as "
#~ ":term:`secondary`."
#~ msgstr ""

# 9838bcdc2eea40469776d4c5119a1969
#~ msgid ""
#~ "If you have application servers in "
#~ "multiple data centers, you may consider"
#~ " having a :ref:`geographically distributed "
#~ "replica set <replica-set-geographical-"
#~ "distribution>` and using a non primary"
#~ " read preference or the "
#~ ":readmode:`nearest`. This allows the client"
#~ " to read from the lowest-latency "
#~ "members, rather than always reading from"
#~ " the primary."
#~ msgstr ""

# 58136467e4d1428f83f5fda74b85f61c
#~ msgid ""
#~ "Use :readmode:`primaryPreferred` if you want"
#~ " an application to read from the "
#~ "primary under normal circumstances, but "
#~ "to allow stale reads from secondaries"
#~ " in an emergency. This provides a "
#~ "\"read-only mode\" for your application"
#~ " during a failover."
#~ msgstr ""

# b3ae1d3f65f041909ed569494b48546a
#~ msgid ""
#~ "All read preference modes except "
#~ ":readmode:`primary` may return stale data "
#~ "because :term:`secondaries <secondary>` replicate"
#~ " operations from the primary with "
#~ "some delay. Ensure that your application"
#~ " can tolerate stale data if you "
#~ "choose to use a non-:readmode:`primary` "
#~ "mode."
#~ msgstr ""

# 8e331fddafcd41af87763cfcc0bc631b
#~ msgid ""
#~ "MongoDB :doc:`drivers </applications/drivers>` "
#~ "support five read preference modes."
#~ msgstr ""

# 739454c4f91e4f8e97ca26ad411f297d
#~ msgid ""
#~ "Read preference modes are also available"
#~ " to clients connecting to a "
#~ ":term:`sharded cluster` through a "
#~ ":program:`mongos`. The :program:`mongos` instance"
#~ " obeys specified read preferences when "
#~ "connecting to the :term:`replica set` "
#~ "that provides each :term:`shard` in the"
#~ " cluster."
#~ msgstr ""

# ab9e238ee8c74e2e86f1f6a3ef51e720
#~ msgid ""
#~ "In the :program:`mongo` shell, the "
#~ ":method:`~cursor.readPref()` cursor method provides"
#~ " access to read preferences."
#~ msgstr ""

# 897bc40674a243128cbf96c107bfcc6d
#~ msgid ""
#~ "For more information, see :ref:`read "
#~ "preference background <replica-set-read-"
#~ "preference-background>` and :ref:`read preference"
#~ " behavior <replica-set-read-preference-"
#~ "behavior>`. See also the :api:`documentation"
#~ " for your driver <>`."
#~ msgstr ""

# 899f5bcc2fdb46dc8c6bfe79eb62f384
#~ msgid ""
#~ "Custom read preferences and write "
#~ "concerns evaluate tags sets in different"
#~ " ways. Read preferences consider the "
#~ "value of a tag when selecting a"
#~ " member to read from. Write concerns"
#~ " ignore the value of a tag to"
#~ " when selecting a member, *except* to"
#~ " consider whether or not the value"
#~ " is unique."
#~ msgstr ""

# 2d74512687434263ac72f7ec58f6dd2c
# 91a6eda998e149d88fcb572060bf68d6
# 5d764ce50c7c44d4a3e6929f629d9172
#~ msgid "read preference"
#~ msgstr ""

# e979e4314e33417eb5f99e2b4332ccb3
#~ msgid "slaveOk"
#~ msgstr ""

# 91a6eda998e149d88fcb572060bf68d6
#~ msgid "background"
#~ msgstr ""

# 9b15c60a95b64fdba18c1110739560fc
# 5d764ce50c7c44d4a3e6929f629d9172
#~ msgid "tag sets"
#~ msgstr ""

#~ msgid ""
#~ "All members of a replica have "
#~ "roughly equivalent write traffic, as a"
#~ " result secondaries will service reads "
#~ "at roughly the same rate as the"
#~ " primary."
#~ msgstr ""

#~ msgid ""
#~ "Because replication is asynchronous and "
#~ "there is some amount of delay "
#~ "between a successful write operation and"
#~ " its replication to secondaries, reading"
#~ " from a secondary can return out-"
#~ "of-date data."
#~ msgstr ""

#~ msgid ""
#~ "Distributing read operations to secondaries"
#~ " can compromise availability if *any* "
#~ "members of the set are unavailable "
#~ "because the remaining members of the "
#~ "set will need to be able to "
#~ "handle all application requests."
#~ msgstr ""

#~ msgid ""
#~ "For queries of sharded collections that"
#~ " *do not* include the shard key, "
#~ "secondaries may return stale results "
#~ "with missing or duplicated data because"
#~ " of incomplete or terminated migrations."
#~ msgstr ""

