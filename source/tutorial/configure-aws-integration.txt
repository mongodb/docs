=========================
Configure AWS Integration
=========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Overview
--------

You can configure |mms| to integrate with Amazon Web Services (AWS) to
provision EC2 servers directly through |mms|. Servers provisioned through
|mms| come with the Automation Agent pre-installed and are ready for
deployment of MongoDB instances.

.. include:: /includes/extracts/aws-provisioning-cutoff.rst

Prerequisites
-------------

You must have an existing AWS account and meet the following
prerequisites.

.. _aws-access:

AWS Access
~~~~~~~~~~

If you will configure |mms| to authenticate to AWS through AWS access
keys, you must have your AWS accountâ€™s Access Key ID and Secret Access Key
when configuring AWS integration. To locate the keys in AWS, click your
username in the top right corner of AWS and select *Security Credentials*.

If you will configure |mms| to authenticate to AWS through cross-account
access, you do not need the access keys but you do need access to your AWS
account when configuring the AWS integration.

.. _security-group:

AWS Security Group
~~~~~~~~~~~~~~~~~~

The AWS account must have at least one :ref:`security group
<security-group>` configured. At minimum, the security group must have the
following inbound rules:

- A custom TCP rule that allows all members of the security group to
  access the MongoDB processes.

- An SSH rule on the SSH port, usually 22, and that allows traffic from
  all IPs.

  If you do not want to grant SSH access to all IPs, you must instead
  grant SSH access to the following ranges:

  - ``4.71.186.128/25``

  - ``4.35.16.128/25``

Optionally, add additional rules to your security group as needed. For
example, to grant access to MongoDB from hosts in another security group,
add a custom TCP rule that specifies the MongoDB ports and the other
security group. To grant access from a specific IP address, such as the IP
address for a specific office, add a custom TCP rule that specifies the
MongoDB ports and the specific IP address.

In addition, for security groups that are bound to a Virtual Private Cloud
(VPC), set the outbound rules to control access to |mms|.
The outbound CIDRs required for a security group in a VPC are:

- ``54.173.82.137/32``

- ``54.175.147.155/32``

The machine being provisioned must be able to access standard package
repositories to update the machine when provisioning. Ensure
your outbound access allows for this.

AWS Virtual Private Cloud
~~~~~~~~~~~~~~~~~~~~~~~~~

If you are deploying into a Virtual Private Cloud (VPC), the VPC must
exist before provisioning. If you are using a VPC that you created and not
a default AWS VPC, make sure that the VPC property ``DNS hostname`` is
``yes``, which guarantees that each instance provisioned in the VPC
receives a hostname.

Note that |mms| gives a public IP to any instances created on subnets.

.. The following include adds a "Considerations" section:

.. include:: /includes/considerations-aws-integration.rst

Procedures
----------

To configure |mms| integration with AWS, perform the following procedures.

Configure Permissions for an AWS User
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The AWS user associated with the access keys must have an attached IAM
policy with the permissions described in
:doc:`/reference/required-permissions-aws-user`. Without adequate
permissions, the user cannot provision AWS servers from |mms|.

To set the permissions, do the following:

.. include:: /includes/steps/configure-permissions-aws-user.rst

Configure AWS Integration
~~~~~~~~~~~~~~~~~~~~~~~~~

In |mms|, configure integration with AWS by doing the following:

.. include:: /includes/steps/configure-aws-integration.rst
