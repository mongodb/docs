.. meta::
   :robots: noindex, nosnippet


.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol



Class DefaultCompactOnLaunchCallback
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _io_realm_DefaultCompactOnLaunchCallback:



io.realm
========


 | `java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ 
 | 		io.realm.DefaultCompactOnLaunchCallback


**Implemented interfaces:**



- :ref:`io.realm.CompactOnLaunchCallback <io_realm_CompactOnLaunchCallback>` 


The default implementation for determining if a file should be compacted or not. This implementation will only trigger if the file is above 50 MB and more than 50% can be reclaimed.


Constructors
============

.. list-table::
   :header-rows: 1
   
   * - Constructor and Description
   
   * - | :ref:`DefaultCompactOnLaunchCallback <io_realm_DefaultCompactOnLaunchCallback>` ()
       | 
       
       
       
       
       
       
   
   


Method Summary
==============

.. list-table::
   :header-rows: 1
   
   * - Modifier and Type
     - Method and Description
   
   * - public **boolean**
     - | :ref:`shouldCompact <io_realm_DefaultCompactOnLaunchCallback_shouldCompact>` (
       |  **long** totalBytes, 
       |  **long** usedBytes
       | )
       
       
       This method determines if the Realm file should be compacted before opened and returned to the user.
       
       
       
   
   


Inherited Methods
=================



- Methods inherited from class `java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ : ``getClass`` , ``hashCode`` , ``equals`` , ``clone`` , ``toString`` , ``notify`` , ``notifyAll`` , ``wait`` , ``wait`` , ``wait`` , ``finalize`` 




Constructor Detail
==================

.. _DefaultCompactOnLaunchCallback:

.. _DefaultCompactOnLaunchCallback__:

.. _io_realm_DefaultCompactOnLaunchCallback:

.. _io_realm_DefaultCompactOnLaunchCallback__:

.. list-table::
   :header-rows: 1
   
   * - | public :ref:`DefaultCompactOnLaunchCallback <io_realm_DefaultCompactOnLaunchCallback>` ()
       | 
       
       
       
   
   * - 
       
       
       
       
       
       
       
   
   




Method Detail
=============

.. _shouldCompact:

.. _shouldCompact__:

.. _DefaultCompactOnLaunchCallback_shouldCompact:

.. _DefaultCompactOnLaunchCallback_shouldCompact__:

.. _io_realm_DefaultCompactOnLaunchCallback_shouldCompact:

.. _io_realm_DefaultCompactOnLaunchCallback_shouldCompact__:



shouldCompact
-------------

.. _io_realm_DefaultCompactOnLaunchCallback_shouldCompact_long_long_:

.. _io_realm_DefaultCompactOnLaunchCallback_shouldCompact_long__long_:

.. _shouldCompact_long_long_:

.. _shouldCompact_long__long_:

.. _DefaultCompactOnLaunchCallback_shouldCompact_long_long_:

.. _DefaultCompactOnLaunchCallback_shouldCompact_long__long_:

.. list-table::
   :header-rows: 1
   
   * - | public **boolean** :ref:`shouldCompact <io_realm_DefaultCompactOnLaunchCallback_shouldCompact>` (
       |  **long** totalBytes, 
       |  **long** usedBytes
       | )
       
       
       
   
   * - This method determines if the Realm file should be compacted before opened and returned to the user. It is passed the total file size (data + free space) and the bytes used by data in the file.
       
       
       
       
       
       
       **Returns**
       
       {code true} to indicate an attempt to compact the file should be made. Otherwise, the compaction will be skipped.
       
       
       
       
       
       
       
   
   



