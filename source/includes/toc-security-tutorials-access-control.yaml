file: /tutorial/enable-authentication
description: |
  Describes the process for enabling authentication for MongoDB
  deployments.
---
file: /tutorial/add-user-administrator
description: |
  Create users with special permissions to to create, modify, and
  remove other users, as well as administer authentication credentials
  (e.g. passwords).
---
file: /tutorial/add-user-to-database
description: |
  Create non-administrator users using MongoDB's role-based
  authentication system.
---
file: /tutorial/define-roles
description: |
  Create custom role.
---
file: /tutorial/assign-role-to-user
description: |
  Assign a user a role. A role grants the user a defined set of privileges.
  A user can have multiple roles.
---
file: /tutorial/change-user-privileges
description: |
  Modify the actions available to a user on specific database resources.
---
file: /tutorial/view-roles
description: |
  View a role's privileges.
---
file: /tutorial/change-user-password
description: |
  Only user administrators can edit credentials. This tutorial
  describes the process for editing an existing user's password.
---
file: /tutorial/generate-key-file
description: |
  Use key file to allow the components of MongoDB sharded cluster or
  replica set to mutually authenticate.
---
file: /tutorial/control-access-to-mongodb-with-kerberos-authentication
description: |
  For MongoDB Enterprise Linux, describes the process used to enable and
  implement a Kerberos-based authentication system for MongoDB
  deployments.
---
file: /tutorial/configure-x509
description: |
  Use x.509 for client authentication and internal member authentication.
---
file: /tutorial/configure-ldap-sasl-authentication
description: |
  Describes for MongoDB Enterprise the process to authenticate with SASL/LDAP.
---
file: /tutorial/control-access-to-document-content-with-multiple-tag-sets
description: |
  Describes the process to set up and access document content that can
  have different access levels for the same data.
...
