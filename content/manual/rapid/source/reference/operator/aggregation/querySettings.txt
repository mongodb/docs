============================
$querySettings (aggregation)
============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. pipeline:: $querySettings

.. versionadded:: 8.0

Returns query settings previously added with
:dbcommand:`setQuerySettings`. The settings apply to the entire cluster.
The cluster retains the settings after shutdown.

Syntax
------

If you use multiple pipeline stages, put ``$querySettings`` first in the
pipeline.

.. code-block:: javascript
   :emphasize-lines: 2

   db.aggregate( [
      { $querySettings: { showDebugQueryShape: <boolean> } },
      // Add any additional pipeline stages after $querySettings
      ... 
   ] )

Command Fields
--------------

``$querySettings`` takes this field:

.. list-table::
   :header-rows: 1
   :widths: 15 15 15 55

   * - Field
     - Type
     - Necessity
     - Description

   * - ``showDebugQueryShape``
     - boolean
     - Optional
     - If ``true``, ``$querySettings`` returns a debugging version of
       the :term:`query shape` output. You'll see an example in the next
       section. For output details, see :ref:`queryStats-queryShape`.

       Default is ``false``.

Examples
--------

The following examples create a collection, add query settings, and
return the settings:

.. procedure::
   :style: normal

   .. step:: Create the example collection and indexes

      Run:

      .. code-block:: javascript

         // Create pizzaOrders collection
         db.pizzaOrders.insertMany( [
            { _id: 0, type: "pepperoni", totalNumber: 5,
              orderDate: new Date( "2024-01-15T12:00:00Z" ) },
            { _id: 1, type: "cheese", totalNumber: 15,
              orderDate: new Date( "2024-01-23T11:12:32Z" ) },
            { _id: 2, type: "vegan", totalNumber: 20,
              orderDate: new Date( "2024-03-20T10:01:12Z" ) }
         ] )

         // Create ascending index on orderDate field
         db.pizzaOrders.createIndex( { orderDate: 1 } )

         // Create ascending index on totalNumber field
         db.pizzaOrders.createIndex( { totalNumber: 1 } )

      The indexes have the default names ``orderDate_1`` and
      ``totalNumber_1``.

   .. step:: Add the query settings

      The following ``setQuerySettings`` example adds query settings:

      .. code-block:: javascript

         db.adminCommand( {
            setQuerySettings: {
               find: "pizzaOrders",
               filter: {
                  orderDate: { $gt: ISODate( "2024-01-20T00:00:00Z" ) }
               },
               sort: {
                  totalNumber: 1
               },
               $db: "test"
            },
            settings: {
               indexHints: {
                  ns: { db: "test", coll: "pizzaOrders" },
                  allowedIndexes: [ "orderDate_1" ]
               },
               queryFramework: "classic",
               comment: "Index hint for orderDate_1 index to improve query performance"
            }
         } )

      The ``comment`` field is available starting in MongoDB 8.1 (and
      8.0.4).

   .. step:: Return the query settings

      The following example uses a ``$querySettings`` stage in an
      aggregation pipeline to return query settings:

      .. code-block:: javascript
         :emphasize-lines: 2

         db.aggregate( [ {
            $querySettings: { showDebugQueryShape: true }
         } ] )

      Because ``showDebugQueryShape`` is ``true``, the
      ``debugQueryShape`` document is included in the output. You can
      use the ``queryShapeHash`` identifier to locate the query
      settings. ``queryShapeHash`` and ``debugQueryShape`` are
      highlighted in this output:

      .. code-block:: javascript
         :copyable: false
         :emphasize-lines: 3, 19-24

         [
            {
               queryShapeHash: 'AB8ECADEE8F0EB0F447A30744EB4813AE7E0BFEF523B0870CA10FCBC87F5D8F1',
               settings: {
                  indexHints: [
                     {
                        ns: { db: 'test', coll: 'pizzaOrders' },
                        allowedIndexes: [ 'orderDate_1' ]
                     }
                  ],
                  queryFramework: 'classic',
                  comment: 'Index hint for orderDate_1 index to improve query performance'
               },
               representativeQuery: {
                  find: 'pizzaOrders',
                  filter: { orderDate: { '$gt': ISODate('2023-01-20T00:00:00.000Z') } },
                  sort: { totalNumber: 1 },
                  '$db': 'test'
               },
               debugQueryShape: {
                  cmdNs: { db: 'test', coll: 'pizzaOrders' },
                  command: 'find',
                  filter: { orderDate: { '$gt': '?date' } },
                  sort: { totalNumber: 1 }
               }
            }
         ]

Learn More
----------

- :ref:`query-plans-query-optimization`
- :dbcommand:`setQuerySettings`
- :dbcommand:`removeQuerySettings`
- :pipeline:`$queryStats`
- :ref:`query-shapes`
- :ref:`Query statistics for query shapes <queryStats-queryShape>`
- :ref:`operation-rejection-filters`
