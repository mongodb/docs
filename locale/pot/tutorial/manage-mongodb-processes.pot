# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/manage-mongodb-processes.txt:3
# 7534200c95bb4f60a5ed0cfe946a6fda
msgid "Manage ``mongod`` Processes"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:7
# acc31ab2c8cb47c98e270ca834713398
msgid "MongoDB runs as a standard program. You can start MongoDB from a command line by issuing the :program:`mongod` command and specifying options.  For a list of options, see the :program:`mongod` reference. MongoDB can also run as a Windows service. For details, see :ref:`manually-create-windows-service`. To install MongoDB, see :doc:`/installation`."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:14
# edea8f4a66fe4f3fbc988ca31ed2d86c
msgid "The following examples assume the directory containing the :program:`mongod` process is in your system paths. The :program:`mongod` process is the primary database process that runs on an individual server. :program:`mongos` provides a coherent MongoDB interface equivalent to a :program:`mongod` from the perspective of a client. The :program:`mongo` binary provides the administrative shell."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:22
# f7d358feb50141989269f25a30b231ec
msgid "This document  page discusses the :program:`mongod` process; however, some portions of this document may be applicable to :program:`mongos` instances."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:27
# 301e98de63344c91b6c3d616fd5c3e91
msgid "Start ``mongod`` Processes"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:29
# a37c5de9f71045beb57023fe0cb7aa1d
msgid "By default, MongoDB stores data in the ``/data/db`` directory. On Windows, MongoDB stores data in ``C:\\data\\db``. On all platforms, MongoDB listens for connections from clients on port ``27017``."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:33
# 8eb087ed5f364d29b44c3913c73c3ba5
msgid "To start MongoDB using all defaults, issue the following command at the system shell:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:41
# 25729fe376434f20921cc9b61a1501af
msgid "Specify a Data Directory"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:43
# 9e74540ee155464593efac0171188c0f
msgid "If you want :program:`mongod` to store data files at a path *other than* ``/data/db`` you can specify a :setting:`~storage.dbPath`. The :setting:`~storage.dbPath` must exist before you start :program:`mongod`. If it does not exist, create the directory and the permissions so that :program:`mongod` can read and write data to this path. For more information on permissions, see the :doc:`security operations documentation </administration/security-checklist>`."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:51
# f78be9ba7c3147b492cc59173ba21b4f
msgid "To specify a :setting:`~storage.dbPath` for :program:`mongod` to use as a data directory, use the :option:`--dbpath <mongod --dbpath>` option. The following invocation will start a :program:`mongod` instance and store data in the ``/srv/mongodb`` path"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:61
# 1a72f697a9f243bcb03201c139c28294
msgid "Specify a TCP Port"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:63
# cb9a5d70f331490a9d5772eec3934e89
msgid "Only a single process can listen for connections on a network interface at a time. If you run multiple :program:`mongod` processes on a single machine, or have other processes that must use this port, you must assign each a different port to listen on for client connections."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:69
# c9d78507941f4c50a229733775d07f3a
msgid "To specify a port to :program:`mongod`, use the :option:`--port <mongod --port>` option on the command line. The following command starts :program:`mongod` listening on port ``12345``:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:77
# 6ef22153b14140bfb204c5c0aa1a0a7a
msgid "Use the default port number when possible, to avoid confusion."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:80
# e409645124ae435687ac9860019ecd26
msgid "Start ``mongod`` as a Daemon"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:82
# 24bc57f712eb4f358542f9af7491cb7b
msgid "To run a :program:`mongod` process as a daemon (i.e. :setting:`~processManagement.fork`), *and* write its output to a log file, use the :option:`--fork <mongod --fork>` and :option:`--logpath <mongod --logpath>` options. You must create the log directory; however, :program:`mongod` will create the log file if it does not exist."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:88
# 55037af851384116b64240e0dc9ed369
msgid "The following command starts :program:`mongod` as a daemon and records log output to ``/var/log/mongodb.log``."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:96
# 9da2acfe0dac4f06adcdca1aa9564ed7
msgid "Additional Configuration Options"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:98
# cbfced34326c4a97bb395b2e2c4606a2
msgid "For an overview of common configurations and common configuration deployments. configurations for common use cases, see :doc:`/administration/configuration`."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:105
# a047de7b229a40d88b168e4dcff04ee5
msgid "Stop ``mongod`` Processes"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:107
# fd789e067c234985b909bdf2a95f49ee
msgid "In a clean shutdown a :program:`mongod` completes all pending operations, flushes all data to data files, and closes all data files. Other shutdowns are *unclean* and can compromise the validity the data files."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:118
# f11a697530314108b3448db719b1ebd1
msgid "To ensure a clean shutdown, always shutdown :program:`mongod` instances using one of the following methods:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:122
# bbf00e273d4543e19b90befe5e01b1cd
msgid "Use ``shutdownServer()``"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:124
# 69c22013cf3f4c178bc59eaf7a83fcf3
msgid "Shut down the :program:`mongod` from the :program:`mongo` shell using the :method:`db.shutdownServer()` method as follows:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:132
# c131513d680941f6b875a4829d7ef8b7
msgid "Calling the same method from a control script accomplishes the same result."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:134
# e17bc8369c144fa4b40617ffe54c6d5e
msgid "For systems with :setting:`~security.authorization` enabled, users may only issue :method:`db.shutdownServer()` when authenticated to the ``admin`` database or via the localhost interface on systems without authentication enabled."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:140
# 2ce220fadd8f44e9bbf113ff6da567a9
msgid "Use ``--shutdown``"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:142
# 557dcb7272f740458b98ab639cb4bf60
msgid "From the Linux command line, shut down the :program:`mongod` using the :option:`--shutdown <mongod --shutdown>` option in the following command:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:150
# c621dc53af1245e29683e6989d4822db
msgid "Use ``CTRL-C``"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:152
# 61f3e140157d4dc581a23e91f7eaaa8d
msgid "When running the :program:`mongod` instance in interactive mode (i.e. without :option:`--fork <mongod --fork>`), issue ``Control-C`` to perform a clean shutdown."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:157
# 2dd45c6c6658465fa2cb286041f2b69d
msgid "Use ``kill``"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:159
# e496854e7b2e4f668d3e10f42f9cffb3
msgid "From the Linux command line, shut down a specific :program:`mongod` instance using the following command:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:168
# 1f95be4868254c4f9244360f313e27be
msgid "Never use ``kill -9`` (i.e. ``SIGKILL``) to terminate a mongod instance."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:171
# b715beca86df4cdfacbe67b2fff5aeea
msgid "Stop a Replica Set"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:174
# e9c5d0e6fad9467abc866dc35ab3ec14
msgid "Procedure"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:176
# a4307dcc878e457f8f8711b9d8e38aed
msgid "If the :program:`mongod` is the :term:`primary` in a :term:`replica set`, the shutdown process for these :program:`mongod` instances has the following steps:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:180
# 9fc0164d871640909f49cd1ffad65aca
msgid "Check how up-to-date the :term:`secondaries <secondary>` are."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:182
# 5c0c24f47969405fb0459edb6c56130c
msgid "If no secondary is within 10 seconds of the primary, :program:`mongod` will return a message that it will not shut down. You can pass the :dbcommand:`shutdown` command a ``timeoutSecs`` argument to wait for a secondary to catch up."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:187
# 0612e8ce03ae428ba8f574075af77fb5
msgid "If there is a secondary within 10 seconds of the primary, the primary will step down and wait for the secondary to catch up."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:190
# c3b4c068755b40c8b5882af94677d184
msgid "After 60 seconds or once the secondary has caught up, the primary will shut down."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:194
# 679f980c6e9c4c4483d54c9a1acee480
msgid "Force Replica Set Shutdown"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:196
# 23275933b0654ed9a5b4898a3831766e
msgid "If there is no up-to-date secondary and you want the primary to shut down, issue the :dbcommand:`shutdown` command with the ``force`` argument, as in the following :program:`mongo` shell operation:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:204
# 02cc9c410ddd45b7a43f6d0ac6211a85
msgid "To keep checking the secondaries for a specified number of seconds if none are immediately up-to-date, issue :dbcommand:`shutdown` with the ``timeoutSecs`` argument. MongoDB will keep checking the secondaries for the specified number of seconds if none are immediately up-to-date. If any of the secondaries catch up within the allotted time, the primary will shut down. If no secondaries catch up, it will not shut down."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:211
# 5840cf7a0d05480db7a0ed1ec81161b0
msgid "The following command issues :dbcommand:`shutdown` with ``timeoutSecs`` set to ``5``:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:218
# 8466168674494a57b297dd40aaa13312
msgid "Alternately you can use the ``timeoutSecs`` argument with the :method:`db.shutdownServer()` method:"
msgstr ""

