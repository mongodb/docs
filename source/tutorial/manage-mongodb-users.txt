==============================
Manage MongoDB Users and Roles
==============================

.. default-domain:: mongodb

Overview
--------

When :doc:`MongoDB access control is enabled
<enable-mongodb-access-control>`, you provide client access to MongoDB by
creating users and assigning user roles. The users you create apply to all
MongoDB instances in your |mms| group, but each user has a specified
authentication database. Together, the userâ€™s name and database serve as a
unique identifier for that user.

You can specify access using MongoDB's :manual:`built-in roles
</reference/built-in-roles>` and also by :doc:`creating custom roles
</tutorial/manage-mongodb-roles>`. |mms| provides the interface for doing
so.

You can create users before enabling accessing control or after, but the
users are not created until you enable access control. Your MongoDB
instances will not require user credentials if access control is not enabled.

To authenticate, a client must specify the username, password, database,
and authentication mechanism. For example, from the :program:`mongo`
shell, a client would specify the 
:option:`--username <mongo --username>`, :option:`--password <mongo --password>`,
:option:`--authenticationDatabase <mongo --authenticationDatabase>`, 
and :option:`--authenticationMechanism <mongo --authenticationMechanism>` options.

MongoDB users are separate from |mms| :doc:`users </tutorial/manage-users>`.
MongoDB users have access to MongoDB databases, while |mms| users access |mms|
groups.

Considerations
--------------

If you want |mms| to ensure that all deployments in a group have the same
database users, use only the |mms| interface to manage users.

If you want certain deployments in a group to possess users
not set at the group level, you can add them through direct
connection to the MongoDB instances. The :manual:`MongoDB manual
</tutorial/add-user-to-database>` describes how to add users from the
:program:`mongo` shell.

Unlike manually-created users, if you create custom roles through
a direct connection to the MongoDB instances, |mms| will delete these
roles. You must use the |mms| interface to create custom roles for your
managed MongoDB deployments.

Procedures
----------

Add a MongoDB User
~~~~~~~~~~~~~~~~~~

.. include:: /includes/steps/add-mongodb-user.rst

Edit a User's Roles
~~~~~~~~~~~~~~~~~~~

.. include:: /includes/steps/edit-mongodb-user.rst

Remove a MongoDB User
~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/steps/remove-mongodb-user.rst
