#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/tutorial/update-documents.txt:8
msgid "Update Documents"
msgstr ""

#: ../source/tutorial/update-documents.txt:189
msgid "Update Documents in a Collection"
msgstr ""

#: ../source/includes/fact-update-set-create-fields.rst:1
msgid ""
"Some update operators, such as :update:`$set`, will create the field if "
"the field does not exist. See the individual :manual:`update operator "
"</reference/operator/update>` reference for details."
msgstr ""

#: ../source/tutorial/update-documents.txt:429
msgid "Update a Single Document"
msgstr ""

#: ../source/includes/fact-update-many-operation-uses.rst:1
#: ../source/includes/fact-update-operation-uses.rst:1
msgid "The update operation:"
msgstr ""

#: ../source/includes/fact-update-operation-uses.rst:3
msgid ""
"uses the :update:`$set` operator to update the value of the ``size.uom`` "
"field to ``\"cm\"`` and the value of the ``status`` field to ``\"P\"``,"
msgstr ""

#: ../source/includes/fact-update-many-operation-uses.rst:7
#: ../source/includes/fact-update-operation-uses.rst:7
msgid ""
"uses the :update:`$currentDate` operator to update the value of the "
"``lastModified`` field to the current date. If ``lastModified`` field "
"does not exist, :update:`$currentDate` will create the field. See "
":update:`$currentDate` for details."
msgstr ""

#: ../source/includes/fact-update-many-operation-uses.rst:3
msgid ""
"uses the :update:`$set` operator to update the value of the ``size.uom`` "
"field to ``\"in\"`` and the value of the ``status`` field to ``\"P\"``,"
msgstr ""

#: ../source/includes/fact-update-replace-example.rst:1
msgid ""
"When replacing a document, the replacement document must consist of only "
"field/value pairs; i.e. do not include :manual:`update operators "
"</reference/operator/update>` expressions."
msgstr ""

#: ../source/includes/fact-update-replace-example.rst:5
msgid ""
"The replacement document can have different fields from the original "
"document. In the replacement document, you can omit the ``_id`` field "
"since the ``_id`` field is immutable; however, if you do include the "
"``_id`` field, it must have the same value as the current value."
msgstr ""

#: ../source/includes/fact-update-replace-example.rst:10
msgid ""
"The following example replaces the *first* document from the "
"``inventory`` collection where ``item: \"paper\"``:"
msgstr ""

#: ../source/tutorial/update-documents.txt:786
msgid "Behavior"
msgstr ""

#: ../source/tutorial/update-documents.txt:789
msgid "Atomicity"
msgstr ""

#: ../source/tutorial/update-documents.txt:791
msgid ""
"All write operations in MongoDB are atomic on the level of a single "
"document. For more information on MongoDB and atomicity, see :doc:`/core"
"/write-operations-atomicity`."
msgstr ""

#: ../source/tutorial/update-documents.txt:796
msgid "``_id`` Field"
msgstr ""

#: ../source/tutorial/update-documents.txt:798
msgid ""
"Once set, you cannot update the value of the ``_id`` field nor can you "
"replace an existing document with a replacement document that has a "
"different ``_id`` field value."
msgstr ""

#: ../source/tutorial/update-documents.txt:803
msgid "Document Size"
msgstr ""

#: ../source/tutorial/update-documents.txt:805
msgid ""
"For the deprecated MMAPv1, when performing update operations that "
"increase the document size beyond the allocated space for that document, "
"the update operation relocates the document on disk."
msgstr ""

#: ../source/tutorial/update-documents.txt:810
msgid "Field Order"
msgstr ""

#: ../source/includes/fact-update-field-order.rst:3
msgid ""
"MongoDB preserves the order of the document fields following write "
"operations *except* for the following cases:"
msgstr ""

#: ../source/includes/fact-update-field-order.rst:6
msgid "The ``_id`` field is always the first field in the document."
msgstr ""

#: ../source/includes/fact-update-field-order.rst:8
msgid ""
"Updates that include :update:`renaming <$rename>` of field names may "
"result in the reordering of fields in the document."
msgstr ""

#: ../source/includes/fact-update-field-order.rst:13
msgid ""
"Starting in version 2.6, MongoDB actively attempts to preserve the field "
"order in a document. Before version 2.6, MongoDB did not actively "
"preserve the order of the fields in a document."
msgstr ""

#: ../source/tutorial/update-documents.txt:996
msgid "Write Acknowledgement"
msgstr ""

#: ../source/tutorial/update-documents.txt:998
msgid ""
"With write concerns, you can specify the level of acknowledgement "
"requested from MongoDB for write operations. For details, see "
":doc:`/reference/write-concern`."
msgstr ""

#~ msgid ""
#~ "The following example uses the "
#~ ":method:`db.collection.replaceOne()` method on the"
#~ " ``users`` collection to replace the "
#~ "*first* document that matches the filter"
#~ " ``name`` equals ``\"sue\"`` with the "
#~ "new document:"
#~ msgstr ""

#~ msgid "The following methods can also delete documents from a collection:"
#~ msgstr ""

#~ msgid ":method:`db.collection.findOneAndModify()`."
#~ msgstr ""

# 9fadc6358c634c71b6a030cf062cc0c3
#~ msgid "On this page"
#~ msgstr ""

# b792fdbc7b374910bd552a292bcc0737
#~ msgid "Update"
#~ msgstr ""

# 8e24f24fc5a74847abe66a0abb1c6c1d
#~ msgid ""
#~ "MongoDB provides the following methods "
#~ "for updating documents in a collection:"
#~ msgstr ""

# 8ef373f707674dd9a7ca1376ae0eb821
#~ msgid ":method:`db.collection.updateOne()`"
#~ msgstr ""

# ba778e0f3ee84c69b5c890e3518dac68
#~ msgid ""
#~ "Updates at most a single document "
#~ "that match a specified filter even "
#~ "though multiple documents may match the"
#~ " specified filter."
#~ msgstr ""

# 3ba6d97c11ef4bf4af2b3e1cf6d8ee76
#~ msgid ":method:`db.collection.updateMany()`"
#~ msgstr ""

# 5a23b2fa717148009b1cf6f544e439e9
#~ msgid "Update all documents that match a specified filter."
#~ msgstr ""

# c77382176ab6483c94ae8dd958f4af93
#~ msgid ":method:`db.collection.replaceOne()`"
#~ msgstr ""

# 0977cd0d5e0643b2b8b9bc75cf61297d
#~ msgid ""
#~ "Replaces at most a single document "
#~ "that match a specified filter even "
#~ "though multiple documents may match the"
#~ " specified filter."
#~ msgstr ""

# 9dda89d93457478dacd73f608eedbdce
#~ msgid ":method:`db.collection.update()`"
#~ msgstr ""

# c3c637544e7c4749b263e7bede3481ed
#~ msgid ""
#~ "Either updates or replaces a single "
#~ "document that match a specified filter"
#~ " or updates all documents that match"
#~ " a specified filter."
#~ msgstr ""

# b155cfeee31341dfa5087e1cb4fca095
#~ msgid ""
#~ "By default, the :method:`db.collection.update()` "
#~ "method updates a **single** document. To"
#~ " update multiple documents, use the "
#~ ":ref:`multi <multi-parameter>` option."
#~ msgstr ""

# 9064a8ab64184d579722330384612515
#~ msgid "These methods accept as parameters:"
#~ msgstr ""

# 3d2e637c53c74652a4010edb8d331d1a
#~ msgid ""
#~ "a filter document to determine which "
#~ "documents to update. These :ref:`filters "
#~ "<document-query-filter>` use the same"
#~ " syntax as read operations:"
#~ msgstr ""

# 2f40167e06af454abd21c3c9c1afdf0c
#~ msgid ""
#~ "A :ref:`query filter document <document-"
#~ "query-filter>` can specify equality "
#~ "condition with ``<field>:<value>`` expressions "
#~ "to select all documents that contain "
#~ "the ``<field>`` with the specified "
#~ "``<value>``:"
#~ msgstr ""

# a6cd91cbc31c41049ad8b2096df5c64b
#~ msgid ""
#~ "A :ref:`query filter document <document-"
#~ "query-filter>` can use the :ref:`query "
#~ "operators <query-selectors>` to specify "
#~ "conditions in the following form:"
#~ msgstr ""

# 93b862a1c5734768b4aaa06b01238944
#~ msgid ""
#~ "an update document to specify the "
#~ "modification to perform or a replacement"
#~ " document that wholly replaces the "
#~ "matching documents except for the "
#~ "``_id`` field, and"
#~ msgstr ""

# 55a1830773ba4d9bb22e6a8171996316
#~ msgid "an options document."
#~ msgstr ""

# 967524a7d8e6469ba8b8c7e13f1eb33d
#~ msgid ""
#~ "When performing update operations that "
#~ "increase the document size beyond the"
#~ " allocated space for that document, "
#~ "the update operation relocates the "
#~ "document on disk."
#~ msgstr ""

# b45b293b8c684117a9101a6d21a85f54
#~ msgid "``Upsert`` Option"
#~ msgstr ""

# 95bbd8ceafe54a1d90b0598cbf81dedc
#~ msgid ""
#~ "If :method:`db.collection.update()`, "
#~ ":method:`db.collection.updateOne()`, "
#~ ":method:`db.collection.updateMany()`, or "
#~ ":method:`db.collection.replaceOne()` includes ``upsert "
#~ ": true`` **and** no documents match "
#~ "the specified filter, then the operation"
#~ " creates a new document and inserts"
#~ " it. If there are matching documents,"
#~ " then the operation modifies or "
#~ "replaces the matching document or "
#~ "documents."
#~ msgstr ""

# 44da421e1b5d4daba8bd224c1cbfa89f
#~ msgid ""
#~ "For details on the new document "
#~ "created, see the individual reference "
#~ "pages for the methods."
#~ msgstr ""

# a8c6cd5b567c405f98dfab66b7366df2
#~ msgid "Example Collection"
#~ msgstr ""

# e92218dab90448bd86ca5c22700a0d07
#~ msgid ""
#~ "The examples on this page use the"
#~ " :method:`db.collection.find()` method in the "
#~ ":program:`mongo` shell. In the "
#~ ":program:`mongo` shell, if the returned "
#~ "cursor is not assigned to a "
#~ "variable using the ``var`` keyword, then"
#~ " the cursor is automatically iterated "
#~ "up to 20 times [#set-shell-"
#~ "batch-size]_ to print up to the "
#~ "first 20 documents in the results."
#~ msgstr ""

# 49c11370cad142ae8fd3f3f830288e17
#~ msgid ""
#~ "To populate the ``users`` collection "
#~ "referenced in the examples, run the "
#~ "following in :program:`mongo` shell:"
#~ msgstr ""

# 7094d936e17c4e41adae9657cd5d117d
#~ msgid ""
#~ "If the ``users`` collection already "
#~ "contains documents with the same ``_id``"
#~ " values, you need to :method:`drop "
#~ "<db.collection.drop()>` the collection "
#~ "(``db.users.drop()``) before inserting the "
#~ "example documents."
#~ msgstr ""

# 81fc8b63efea4f65b47aed95f8492406
#~ msgid "Update Specific Fields in a Document"
#~ msgstr ""

# 636e964b2ec840febd3a23625e01c947
#~ msgid ""
#~ "To change a field in a document,"
#~ " MongoDB provides :manual:`update operators "
#~ "</reference/operator/update>`, such as "
#~ ":update:`$set` to modify values."
#~ msgstr ""

# a6ca0ec4b04d4e269495c6cc0eebe7f4
#~ msgid ""
#~ "To specify the modification to perform"
#~ " using update operators, use an "
#~ "update document of the form:"
#~ msgstr ""

# dae402f7812f4ad0bd668a7fa53eeb83
#~ msgid ""
#~ "Some update operators, such as "
#~ ":update:`$set`, will create the field if"
#~ " the field does not exist. See "
#~ "the individual :manual:`update operator "
#~ "</reference/operator/update>` reference."
#~ msgstr ""

# c3b6c13c5b324711b83a9dea947c2424
#~ msgid "``db.collection.updateOne()``"
#~ msgstr ""

# 0623a3f78c4242dfa9f86be98e199c2a
#~ msgid ""
#~ "The following example uses the "
#~ ":method:`db.collection.updateOne()` method on the"
#~ " ``users`` collection to update the "
#~ "*first* document that matches the filter"
#~ " ``favorites.artist`` equals ``\"Picasso\"``. The"
#~ " update operation:"
#~ msgstr ""

# fbf6c3c992934387a34f86fdc34e5503
#~ msgid ""
#~ "uses the :update:`$set` operator to "
#~ "update the value of the "
#~ "``favorites.food`` field to ``\"pie\"`` and"
#~ " the value of the ``type`` field "
#~ "to ``3``,"
#~ msgstr ""

# 6a53a6acf63f403c88aa32b99c25bc66
#~ msgid ""
#~ "For more information and examples, see"
#~ " :method:`db.collection.updateOne()`."
#~ msgstr ""

# e3b2cd4870c849a5ab7f9cd1dc9237cf
#~ msgid "``db.collection.updateMany()``"
#~ msgstr ""

# 121bdd92244b4b22b8701936a9c425e8
#~ msgid ""
#~ "The following example uses the "
#~ ":method:`db.collection.updateMany()` method on the"
#~ " ``users`` collection to update all "
#~ "documents that matches the filter "
#~ "``favorites.artist`` equals ``\"Picasso\"``. The "
#~ "update operation:"
#~ msgstr ""

# df90c47138d146fa8660af4b6ba5583f
#~ msgid ""
#~ "uses the :update:`$set` operator to "
#~ "update the value of the "
#~ "``favorites.artist`` field to ``\"Pisanello\"`` "
#~ "and the value of the ``type`` "
#~ "field to ``3``,"
#~ msgstr ""

# ec7f46e4ca034d95ac164e8861805cb6
#~ msgid ""
#~ "For more information and examples, see"
#~ " :method:`db.collection.updateMany()`."
#~ msgstr ""

# 80195c3bfb5546329e54a080f104c18b
# 11c282f677884c809060a11a8f517e6f
#~ msgid "``db.collection.update``"
#~ msgstr ""

# 5d5e6e23fcb24a3f8e193ee06a69570a
#~ msgid ""
#~ "The following example uses the "
#~ ":method:`db.collection.update()` method on the "
#~ "``users`` collection to update the "
#~ "*first* document that matches the filter"
#~ " ``favorites.artist`` equals ``\"Pisanello\"``. "
#~ "The update operation:"
#~ msgstr ""

# 27dc41d350ed4975ad9c38109183c64d
#~ msgid ""
#~ "uses the :update:`$set` operator to "
#~ "update the value of the "
#~ "``favorites.food`` field to ``\"pizza\"`` and"
#~ " the value of the ``type`` field "
#~ "to ``0``,"
#~ msgstr ""

# 39306c910b684223b002fe2a51ede782
#~ msgid ""
#~ "To update multiple documents using the"
#~ " :method:`db.collection.update()`, include the "
#~ ":ref:`multi: true <multi-parameter>` option:"
#~ msgstr ""

# c236cae2392946568160cefedb6fbedb
#~ msgid "Replace the Document"
#~ msgstr ""

# af13bff7763a4e90aa928521646ac026
#~ msgid ""
#~ "To replace the entire content of a"
#~ " document except for the ``_id`` "
#~ "field, pass an entirely new document "
#~ "as the second argument to "
#~ ":method:`db.collection.replaceOne()` or "
#~ ":method:`db.collection.update()`. When replacing a"
#~ " document, the replacement document must"
#~ " consist of only ``<field> : "
#~ "<value>``."
#~ msgstr ""

# fc9d08a61fef426fb22b05d3bc19164b
#~ msgid "``db.collection.replaceOne``"
#~ msgstr ""

# d6a39a37d2f34b729b0743463a41548e
#~ msgid ""
#~ "The following example uses the "
#~ ":method:`db.collection.replaceOne()` method on the"
#~ " ``users`` collection to replace the "
#~ "*first* document that matches the filter"
#~ " ``name`` equals ``\"abc\"`` with the "
#~ "new document:"
#~ msgstr ""

# 8848ce04fcad43d99da26a4382818710
#~ msgid ""
#~ "The following example uses the "
#~ ":method:`db.collection.update()` method on the "
#~ "``users`` collection to replace the "
#~ "*first* document that matches the filter"
#~ " ``name`` equals ``\"xyz\"`` with the "
#~ "new document:"
#~ msgstr ""

# c207a41b5cda4e36906423a6df4c3420
#~ msgid "Additional Methods"
#~ msgstr ""

# cd328df3945d48609ffffcfad9a1fbfe
#~ msgid "The following methods can also update documents from a collection:"
#~ msgstr ""

# d91d933c4436406abd881a0ddd0d7076
#~ msgid ":method:`db.collection.findOneAndReplace()`."
#~ msgstr ""

# 3ffdb168471d44b299831552b999b74c
#~ msgid ":method:`db.collection.findOneAndUpdate()`."
#~ msgstr ""

# 1c92c0194d6c4896bce9cda4b5867feb
#~ msgid ":method:`db.collection.findAndModify()`."
#~ msgstr ""

# 4217ec14f7b34efca6e22cbcf23658c1
#~ msgid ":method:`db.collection.save()`."
#~ msgstr ""

# ff688edbcb5842d190272d24b16f3daa
#~ msgid ":method:`db.collection.bulkWrite()`."
#~ msgstr ""

# b1a7ef9a5bbe4425b27978e444a5b45e
#~ msgid ""
#~ "See the individual reference pages for"
#~ " the methods for more information and"
#~ " examples."
#~ msgstr ""

# 57213845c3234555ae3fa2f19aad617a
#~ msgid ""
#~ "You can use the ``DBQuery.shellBatchSize`` "
#~ "to change the number of iteration "
#~ "from the default value ``20``. See "
#~ ":ref:`mongo-shell-executing-queries` for "
#~ "more information."
#~ msgstr ""

