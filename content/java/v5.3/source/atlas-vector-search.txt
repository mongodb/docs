.. _java-atlas-vector-search:

===================
Atlas Vector Search
===================

.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: full text, text analyzer, meta, pipeline, scoring, Lucene, AI, artificial intelligence, code example, semantic, nearest
   :description: Learn about how to use Atlas Vector Search in the {+driver-long+}.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

In this guide, you can learn how to use the :atlas:`Atlas Vector Search
</atlas-vector-search/vector-search-overview/>` feature
in the {+driver-short+}. The ``Aggregates``  builders class provides the
the ``vectorSearch()`` helper method that you can use to
create a :atlas:`$vectorSearch </atlas-vector-search/vector-search-stage/>`
pipeline stage. This pipeline stage allows you to perform a **semantic
search** on your documents. A semantic search is a type of search which
locates information that is similar in meaning, but not necessarily
identical, to your provided search term or phrase.

.. important:: Feature Compatibility

   To learn what versions of MongoDB Atlas support this feature, see
   :atlas:`Limitations </atlas-vector-search/vector-search-stage/#limitations>`
   in the MongoDB Atlas documentation.

Perform a Vector Search
-----------------------

To use this feature, you must create a vector search index and index your
vector embeddings. To learn about how to programmatically create a
vector search index, see the :ref:`java-search-indexes` section in the
Indexes guide. To learn more about vector embeddings, see
:atlas:`How to Index Vector Embeddings for Vector Search
</atlas-search/field-types/knn-vector/>` in the Atlas documentation.

After you create a vector search index on your vector embeddings, you
can reference this index in your pipeline stage, as shown in the
following section.

Vector Search Example
~~~~~~~~~~~~~~~~~~~~~

The following example shows how to build an aggregation pipeline that uses the
``vectorSearch()`` and ``project()`` methods to compute a vector search score:

.. literalinclude:: /includes/fundamentals/code-snippets/builders/AggBuilders.java
   :start-after: // begin vectorSearch
   :end-before: // end vectorSearch
   :language: java
   :dedent:

.. tip:: Query Vector Type

   The preceding example creates an instance of ``BinaryVector`` to
   serve as the query vector, but you can also create a ``List`` of
   ``Double`` instances. However, we recommend that you use the
   ``BinaryVector`` type to improve storage efficiency.

The following example shows how you can run the aggregation and print
the vector search meta-score from the result of the preceding
aggregation pipeline:

.. literalinclude:: /includes/fundamentals/code-snippets/builders/AggBuilders.java
   :start-after: // begin vectorSearch-output
   :end-before: // end vectorSearch-output
   :language: java
   :dedent:

.. tip:: Java Driver Vector Search Examples
    
   Visit the :atlas:`Atlas documentation </atlas-vector-search/tutorials/>`
   to find more tutorials on using the {+driver-short+} to perform Atlas
   Vector Searches.

API Documentation
-----------------

To learn more about the methods and types mentioned in this
guide, see the following API documentation:

- `Aggregates.vectorSearch()
  <{+api+}/apidocs/mongodb-driver-core/com/mongodb/client/model/Aggregates.html#vectorSearch(com.mongodb.client.model.search.FieldSearchPath,java.lang.Iterable,java.lang.String,long,com.mongodb.client.model.search.VectorSearchOptions)>`__

- `FieldSearchPath
  <{+api+}/apidocs/mongodb-driver-core/com/mongodb/client/model/search/FieldSearchPath.html>`__

- `VectorSearchOptions
  <{+api+}/apidocs/mongodb-driver-core/com/mongodb/client/model/search/VectorSearchOptions.html>`__

- `Projections.metaVectorSearchScore()
  <{+api+}/apidocs/mongodb-driver-core/com/mongodb/client/model/Projections.html#metaVectorSearchScore(java.lang.String)>`__

- `BinaryVector <{+api+}/apidocs/bson/org/bson/BinaryVector.html>`__