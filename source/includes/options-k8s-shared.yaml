---
program: _shared
name: apiVersion
type: string
directive: setting
optional: false
description: |
  *Required.* Version of the |k8s-mdbrsc| schema.

---
program: _shared
name: kind
type: string
directive: setting
optional: false
description: |
  *Required.* Kind of |k8s-mdbrsc| to create. Set this to ``MongoDB``

---
program: _shared
name: metadata.name
type: string
directive: setting
optional: false
description: |
  *Required.* Name of the |k8s-mdbrsc| you are creating.

  .. include:: /includes/fact-resource-name-char-limit.rst

---
program: _shared
name: metadata.namespace
type: string
directive: setting
optional: false
description: |
  *Required.* |k8s| |k8s-ns| where this |k8s-mdbrsc| and other
  |k8s-objs| are created.

---
program: _shared
name: spec.type
type: string
directive: setting
optional: false
description: |
  *Required.* Type of |k8s-mdbrsc| to create. Accepted values
  are:

  - ``Standalone``
  - ``ReplicaSet``
  - ``ShardedCluster``

---
program: _shared
name: spec.version
type: number
directive: setting
optional: false
description: |
  *Required.* Version of MongoDB that is installed on this
  |k8s-mdbrsc|.

  .. note::

     If you update this value to a later version, consider setting
     :setting:`spec.featureCompatibilityVersion` to give yourself the
     option to downgrade if necessary.

---
program: _shared
name: spec.featureCompatibilityVersion
type: number
directive: setting
optional: true
description: |

  *Optional.* Limits changes to data that occur with an upgrade to a
  new major version. This allows you to downgrade to the previous major
  version. To learn more about feature compatibility, see
  :dbcommand:`setFeatureCompatibilityVersion` in the MongoDB Manual.

---
program: _shared
name: spec.service
type: string
directive: setting
optional: true
default: <resource_name>+"-svc" and <resource_name>+"-svc-external"
description: |
  Name of |k8s| service to be created or used for a
  |k8s-statefulset|. If the service with this name already exists, the
  |k8s-op-full| does not delete or recreate it. This setting lets
  users to create their custom services and lets the Operator reuse
  them.

---
program: _shared
name: spec.clusterDomain
type: string
directive: setting
optional: true
default: cluster.local
description: |

  Domain name of the |k8s| cluster where you deploy the Operator. When
  |k8s| creates a |k8s-statefulset|, the |k8s| assigns each |k8s-pod| a
  |fqdn|. To update |com|, the |k8s-op-short| calculates the |fqdn| for
  each |k8s-pod| using a provided cluster name. |k8s| doesn't provide
  an |api| to query these hostnames.

  .. include:: /includes/admonitions/warning-set-cluster-name.rst

---
program: _shared
name: spec.clusterName
type: string
directive: setting
optional: true
default: cluster.local
pre: |

  .. admonition:: ``spec.clusterName`` is Deprecated
     :class: important

     Use :setting:`spec.clusterDomain` instead.
description: |

  Domain name of the |k8s| cluster where you deploy the Operator. When
  |k8s| creates a |k8s-statefulset|, the |k8s| assigns each |k8s-pod| a
  |fqdn|. To update |com|, the |k8s-op-short| calculates the |fqdn| for
  each |k8s-pod| using a provided cluster name. |k8s| doesn't provide
  an |api| to query these hostnames.

  .. include:: /includes/admonitions/warning-set-cluster-name.rst

---
program: _shared
name: spec.opsManager.configMapRef.name
type: string
directive: setting
description: |
  Name of the |k8s-configmap| with the |com| connection
  configuration. The :setting:`spec.cloudManager.configMapRef.name`
  setting is an alias for this setting and can be used in its place.

  .. include:: /includes/admonitions/note-namespace-match-configmap.rst

  .. include:: /includes/admonitions/fact-k8s-operator-manages-configmap.rst

  *(Changed in version 1.3)*:

  In prior versions of the |k8s-op|, this setting was
  ``spec.project``. See the
  :v1.2:`v1.2 documentation
  </reference/k8s-operator-specification/#spec.project>`
  for information on the previous setting name.

---
program: _shared
name: spec.cloudManager.configMapRef.name
type: string
directive: setting
optional: false
description: |
  Alias for :setting:`spec.opsManager.configMapRef.name`.
---
program: _shared
name: spec.credentials
type: string
directive: setting
optional: false
description: |

  *Required.* Name of the |k8s| |k8s-secret| you :ref:`created
  <create-k8s-secret>` as |mms| |api| authentication credentials for
  the |k8s-op-short| to communicate with |com|.

  .. include:: /includes/admonitions/note-namespace-match-secret.rst

  .. include:: /includes/admonitions/fact-k8s-operator-manages-secret.rst

---
program: _shared
name: spec.persistent
type: boolean
directive: setting
optional: true
default: true
description: |
  .. include:: /includes/admonitions/k8s-persistent-volumes.rst

---
program: _shared
name: spec.podSpec.cpu
type: number
directive: setting
optional: true
description: |
  Maximum CPU capacity that must be available on a |k8s|
  |k8s-node| to host this {{component}} |k8s-mdbrsc|.

  This value maps to the
  :k8sdocs:`limits field </reference/generated/kubernetes-api/v1.10/#resourcerequirements-v1-core>`
  for CPU for the created pod.

replacement:
  component: :term:`standalone deployment`

---
program: _shared
name: spec.podSpec.cpuRequests
type: number
directive: setting
optional: true
description: |
  Minimum CPU capacity for the |k8s-node| being created to host
  this {{component}} |k8s-mdbrsc|. If omitted, this value is set to
  {{cpuLimit}}.

  This value maps to the
  :k8sdocs:`requests field </reference/generated/kubernetes-api/v1.11/#resourcerequirements-v1-core>`
  for CPU for the created pod.

  The requested value must be less than or equal to {{cpuLimit}}.

  .. note::

     For production deployments, MongoDB recommends setting this value
     to ``2``. This value is consistent with
     :manual:`considerations stated </administration/production-notes#allocate-sufficient-ram-and-cpu>`
     for MongoDB hosts.
replacement:
  component: standalone database
  cpuLimit: :setting:`spec.podSpec.cpu`

---
program: _shared
name: spec.podSpec.memory
type: string
directive: setting
optional: false
description: |
  Maximum memory capacity that must be available on a
  |k8s| |k8s-node| to host this |k8s-mdbrsc| on |k8s|. This value is
  expressed as an integer followed by a unit of memory in
  |jedec| notation.

  .. example::

     If this |k8s-mdbrsc| requires 4 gigabytes of memory, set
     this value to ``4G``.

  This value maps to the
  :k8sdocs:`limits field </reference/generated/kubernetes-api/v1.10/#resourcerequirements-v1-core>`
  for memory for the created pod.

  {{memoryWarning}}

---
program: _shared
name: spec.podSpec.memoryRequests
type: string
directive: setting
optional: false
description: |
  Minimum memory capacity for the |k8s-node| being created to host
  this {{component}} |k8s-mdbrsc|. If omitted, this value is set to
  {{memoryLimit}}.

  This value maps to the
  :k8sdocs:`requests field </reference/generated/kubernetes-api/v1.10/#resourcerequirements-v1-core>`
  for memory for the created pod.

  The requested value must be less than or equal to {{memoryLimit}}.

  .. note::

     For production deployments, MongoDB recommends setting this value
     to ``16Gi``. This value is consistent with
     :manual:`considerations stated </administration/production-notes#allocate-sufficient-ram-and-cpu>`
     for MongoDB hosts.
replacement:
  memoryLimit: :setting:`spec.podSpec.memory`

---
program: _shared
name: spec.podSpec.storage
type: string
directive: setting
optional: true
default: 16G
description: |
  Minimum storage capacity that must be available on a |k8s|
  |k8s-node| to host this {{component}} on |k8s|. This value is
  expressed as an integer followed by a unit of storage in |jedec|
  notation.

  .. example::

     If this |k8s-mdbrsc| requires 60 gigabytes of storage space, set
     this value to ``60G``.
replacement:
  component: :term:`standalone deployment`

---
program: _shared
name: spec.podSpec.storageClass
type: string
directive: setting
optional: true
description: |
  *Deprecated.* Type of storage needed for this {{component}}. The user
  may create this storage type as a |k8s-sc| object before using it in
  this |k8s-obj| specification.
replacement:
  component: :term:`standalone deployment`

---
program: _shared
name: spec.podSpec.podAffinity
type: sequence
directive: setting
optional: true
description: |
  |k8s| |k8s-rule| to determine if multiple
  |k8s-mdbrsc| |k8s-pods| must be co-located with other |k8s-pods|.

  .. seealso::

     The |k8s| documentation for use cases on
     `affinity and anti-affinity <https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#more-practical-use-cases>`__

---
program: _shared
name: spec.podSpec.podAntiAffinityTopologyKey
type: string
directive: setting
default: kubernetes.io/hostname
optional: true
description: |

  Sets a |k8s-rule| to spread |k8s-mdbrsc| |k8s-pods|
  to different locations. A location can be a single node, rack, or
  region. This key defines which node
  `label <https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/>`__
  is used to `determine equal location <https://kubernetes.io/docs/concepts/configuration/assign-pod-node/>`__
  for nodes. By default, |k8s-op-short| tries to spread pods across
  different hosts.

---
program: _shared
name: spec.podSpec.nodeAffinity
type: collection
directive: setting
optional: true
description: |
  |k8s| |k8s-rule| to place {{component}} |k8s-pods| on a
  specific range of |k8s-nodes|.

  .. example::

     A user can isolate "dev" and "testing" environments to ensure
     |k8s-pods| go to |k8s-nodes| with appropriate labels.

---
program: _shared
name: spec.podSpec.persistence.single
type: collection
directive: setting
optional: true
description: |

  Has |k8s-op-short| create one |k8s-pvc| and mount all
  three directories for data, journal, and logs to the same |k8s-pv|.

  .. note::

     - You must set the values in this collection if
       :setting:`spec.persistent` ``: true``.
     - You may set this collection or the ``persistence.multiple``
       collections but not both.

  .. list-table::
     :widths: 20 20 60
     :header-rows: 1

     * - Scalar
       - Data Type
       - Description

     * - ``labelSelector``
       - string
       - `Tag
         <https://kubernetes.io/docs/concepts/storage/persistent-volumes/#selector>`__
         used to bind mounted volumes to directories.

     * - ``storage``
       - string
       - Minimum size of |k8s-pv| that should be mounted. This value is
         expressed as an integer followed by a unit of storage in
         |jedec| notation.

         Default value is {{defaultStorage}}.

         .. example::

            If this |k8s-mdbrsc| requires 60 gigabytes of storage
            space, set this value to ``60G``.

     * - ``storageClass``
       - string
       - Type of storage specified in a |k8s-pvc|. You may create
         this storage type as a |k8s-sc| object before using it in this
         |k8s-obj| specification.

         .. note::

            .. include:: /includes/admonitions/fact-reclaimpolicy-to-retain.rst

replacement:
  component: :term:`standalone deployment`
  defaultStorage: 16G

---
program: _shared
name: spec.podSpec.persistence.multiple.item
type: collection
directive: setting
optional: true
description: |
  Has |k8s-op-short| create a |k8s-pvc| and mount a
  directory for {{storedItem}} to its own |k8s-pv|.

  .. note::

     - You must set the values in this collection if
       :setting:`spec.persistent` ``: true``.
     - You may set this collection or the ``persistence.single``
       collection but not both.

  .. list-table::
     :widths: 20 20 60
     :header-rows: 1

     * - Scalar
       - Data Type
       - Description

     * - ``labelSelector``
       - string
       - `Tag
         <https://kubernetes.io/docs/concepts/storage/persistent-volumes/#selector>`__
         used to bind mounted volumes to directories.

     * - ``storage``
       - string
       - Minimum storage capacity that must be available on a |k8s|
         |k8s-node| to host this {{component}} on |k8s|. This value is
         expressed as an integer followed by a unit of storage in
         |jedec| notation.

         Default value is {{defaultStorage}}.

         .. example::

            If this |k8s-mdbrsc| requires 60 gigabytes of storage
            space, set this value to ``60G``.

     * - ``storageClass``
       - string
       - Type of storage needed for this {{component}}. You may create
         this storage type as a |k8s-sc| object before using it in this
         |k8s-obj| specification.

         .. note::

            .. include:: /includes/admonitions/fact-reclaimpolicy-to-retain.rst

replacement:
  component: :term:`standalone deployment`
  storedItem: data
  defaultStorage: 16G

---
program: _shared
name: spec.logLevel
type: string
directive: setting
optional: true
default: INFO
description: |

  Configures the level of Automation Agent logging inside the
  |k8s-pod|. Accepted values include:

  - ``DEBUG``
  - ``INFO``
  - ``WARN``
  - ``ERROR``
  - ``FATAL``
---
program: _shared
name: spec.security.tls.enabled
type: boolean
directive: setting
optional: true
default: "``false``"
description: |
  Encrypts communications using TLS certificates between:

  - MongoDB hosts in a replica set or sharded cluster configuration
  - Clients (|mongo| shell, drivers, |compass|, and others)
    and the MongoDB deployment

  By default, :setting:`net.ssl.mode` is set to ``requireSSL``. To change the
  |tls| mode used for client and database connections, see
  :setting:`spec.additionalMongodConfig.net.ssl.mode`.
---
program: _shared
name: spec.security.tls.ca
type: string
directive: setting
optional: true
description: |
  Provide the name of the |k8s-secret| that store the |certauth|.
---
program: _shared
name: spec.security.authentication
type: collection
directive: setting
optional: true
description: |
  Authentication specifications for your MongoDB deployment.
---
program: _shared
name: spec.security.authentication.modes
type: array
directive: setting
optional: true
description: |
  Specifies the authentication mechanism that your MongoDB deployment 
  uses. Valid values are ``SCRAM`` and ``X509``.

  To enable :ref:`X.509 internal cluster authentication
  <x509-internal-authentication>` for the |com| project, set this value
  to ``["X509"]`` and specify the following settings:

  - :setting:`spec.security.authentication.internalCluster` ``: "X509"``
  - :setting:`spec.security.tls.enabled` ``: true``

---
program: _shared
name: spec.security.authentication.enabled
type: boolean
directive: setting
optional: true
default: "``false``"
description: |
  Specifies whether authentication is enabled on the |com|
  project. Requires that you set an authentication mechanism in 
  :setting:`spec.security.authentication.modes`.

  To disable authentication in |com|, explicitly set to ``false``.
---
program: _shared
name: spec.security.authentication.ignoreUnknownUsers
type: boolean
directive: setting
optional: true
default: "``false``"
description: |
  Determines whether you can modify database users that were not
  configured through the |k8s-op-short| or the |com| UI. 
  
  To manage database users directly through the |mongod| or |mongos|, set to ``true``.
---
program: _shared
name: spec.additionalMongodConfig.net.ssl.mode
type: string
directive: setting
optional: true
default: "``requireSSL``"
description: |
  Specifies which :setting:`sslMode` is used for network connections.
  The following are valid options:

  .. include:: /includes/list-tables/requiressl-modes.rst
---
program: _shared
name: spec.security.authentication.internalCluster
type: string
directive: setting
optional: true
description: |
  Specifies whether :ref:`X.509 internal cluster authentication
  <x509-internal-authentication>` is enabled.

  To enable X.509 internal cluster authentication, set to ``"X509"``.
  Requires that the following settings be specified:
  
  - :setting:`spec.security.authentication.modes` ``: ["X509"]``
  - :setting:`spec.security.tls.enabled` ``: true``

  .. important::

     Once internal cluster authentication is enabled, it can not be
     disabled.

  *(Changed in version 1.3)*:

  In prior versions of the |k8s-op|, this setting was
  ``spec.security.clusterAuthenticationMode``. See the
  :v1.2:`v1.2 documentation
  </reference/k8s-operator-specification/#spec.security.clusterAuthenticationMode>`
  for information on the previous setting name.

---
program: _shared
name: spec.exposedExternally
type: boolean
directive: setting
optional: true
default: "false"
description: |

  Determines whether the MongoDB deployment is exposed outside of the
  Kubernetes cluster. This results in |k8s| creating a
  :k8sdocs:`NodePort service </concepts/services-networking/service/#nodeport>`.
---
program: _shared
name: spec.podSpec.podTemplate
type: collection
directive: setting
optional: true
description: |

  :k8sdocs:`Template </concepts/workloads/pods/pod-overview/#pod-templates>`
  for the |k8s| pods that the |k8s-op| creates for the {{component}}.

  Template values take precedence over values specified in {{podSpec}}.

  .. note::

     The |k8s-op-short| doesn't validate the fields you provide
     in {{podTemplate}}.

---
program: _shared
name: spec.podSpec.podTemplate.metadata
type: collection
directive: setting
optional: true
description: |

  Metadata for the |k8s| pods that the |k8s-op| creates for the
  {{component}}.

  To review which fields you can add to {{podTemplate_metadata}}, see
  the :k8sdocs:`Kubernetes documentation </reference/generated/kubernetes-api/v1.11/#objectmeta-v1-meta>`.

---
program: _shared
name: spec.podSpec.podTemplate.spec
type: collection
directive: setting
optional: true
description: |

  Specifications of the |k8s| pods that the |k8s-op| creates for the
  {{component}}.

  To review which fields you can add to {{podTemplate_spec}}, see the
  :k8sdocs:`Kubernetes documentation </reference/generated/kubernetes-api/v1.11/#podspec-v1-core>`.

  .. note::

     When you add containers to {{podTemplate_spec_containers}}, the
     |k8s-op-short| adds them to the |k8s| pod. These containers are
     appended to the {{component}} containers in the pod.

---
program: _shared
name: spec.security.tls.additionalCertificateDomains
type: collection
directive: setting
optional: true
description: |

  List of every domain that should be added to |tls| certificates to
  each pod in this deployment. When you set this parameter, every |csr|
  that the |k8s-op-short| transforms into a |tls| certificate includes
  a |san-dns| in the form ``<pod name>.<additional cert domain>``.

  Replica set resources don't need this parameter. Use
  :setting:`spec.connectivity.replicaSetHorizons` instead.

  .. note::

     If you add this parameter to a |tls|\-enabled resource, |k8s|
     displays an error when the resource reaches the ``Pending`` state.
     This error displays: ``Please manually remove the |csr| in order
     to proceed.`` To remedy this issue:

     1. Remove any existing |csr|\s so that |k8s| can generate new
        |csr|\s. To learn how to delete a resource, see the
        :k8sdocs:`deleting resources
        </reference/kubectl/cheatsheet/#deleting-resources>` in the
        |k8s| documentation.

     2. Approve the |csr|\s after |k8s| generates them.

...
