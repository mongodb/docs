.. _replica-set-three-members:

=========================
Three Member Replica Sets
=========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

The minimum number of replica set members needed to obtain the benefits
of a replica set is three members. A three member replica set can have
either three data-bearing members (Primary-Secondary-Secondary)
(*Recommended*) or if circumstances (such as cost) prohibit adding a
third data bearing member, two data-bearing members and an arbiter
(Primary-Secondary-Arbiter). [#arbiter-considerations]_

.. [#arbiter-considerations]

   For considerations when using an arbiter, see
   :doc:`/core/replica-set-arbiter`.

.. _primary-two-secondary-members:

Primary with Two Secondary Members (P-S-S)
------------------------------------------

A replica set with three members that store data has:

- One :doc:`primary </core/replica-set-primary>`.

- Two :doc:`secondary </core/replica-set-secondary>` members. Both
  secondaries can become the primary in an :doc:`election
  </core/replica-set-elections>`.

.. include:: /images/replica-set-primary-with-two-secondaries.rst

These deployments provide two complete copies of the data set at all
times in addition to the primary. These replica sets provide
additional fault tolerance and :ref:`high availability
<replica-set-failover>`. If the primary is unavailable, the replica
set elects a secondary to be primary and continues normal
operation. The old primary rejoins the set when available.

.. include:: /images/replica-set-trigger-election.rst

.. _rs-architecture-psa:

Primary with a Secondary and an Arbiter (PSA)
---------------------------------------------

.. note::

   For considerations when using an arbiter, see
   :doc:`/core/replica-set-arbiter`.
   

A three member replica set with a two members that store data has:

- One :doc:`primary </core/replica-set-primary>`.

- One :doc:`secondary </core/replica-set-secondary>` member. The
  secondary can become primary in an :doc:`election
  </core/replica-set-elections>`.

- One :doc:`arbiter </core/replica-set-arbiter>`. The arbiter only
  votes in elections.

.. include:: /images/replica-set-primary-with-secondary-and-arbiter.rst

Since the arbiter does not hold a copy of the data, these deployments
provides only one complete copy of the data. Arbiters require fewer
resources, but at the expense of more limited redundancy and fault
tolerance.

However, a deployment with a primary, secondary, and an arbiter
ensures that a replica set remains available if the primary *or* the
secondary is unavailable. If the primary is unavailable, the replica
set will elect the secondary to be primary.

.. include:: /images/replica-set-w-arbiter-trigger-election.rst

.. seealso::

   :doc:`/tutorial/deploy-replica-set`.

