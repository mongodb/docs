.. _getting-started-terraform:

=========================================================
Get Started with Terraform and the MongoDB Atlas Provider
=========================================================

.. default-domain:: mongodb

.. facet::
   :name: genre 
   :values: tutorial

.. meta:: 
   :description: Learn how to deploy MongoDB Atlas with Terraform.
   :keywords: atlas terraform provider, terraform

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: onecol

You can use Terraform to manage your MongoDB |service| infrastructure as
code with the |service| Terraform provider. The |service| Terraform
provider automates infrastructure deployments by simplifying the process
to provision, manage, and control |service| infrastructure as code.

This guide teaches you how to create, modify, and destroy
|service| clusters in an existing MongoDB |service| organization and
project.

Once you have configured a test environment, continue to experiment with
a Terraform-managed infrastructure with 
:ref:`additional resources <additional-resources-atlas-terraform>`
from MongoDB and HashiCorp.

Prerequisites
-------------

Before deploying MongoDB |service| with Terraform, you must:

- Create |a-service| :ref:`account <create-atlas-account>`.
- Obtain your :ref:`Organization ID <create-organization>`
  of which you are the :authrole:`Organization Owner`.
  
  .. tip::
     
     You can find your Organization ID in the {+atlas-ui+}, under your 
     organization's :guilabel:`General Settings`.

- Configure |a-service| organization :ref:`API key <create-org-api-key>`.
- Install `Terraform
  <https://developer.hashicorp.com/terraform/tutorials/aws-get-started/install-cli>`__.

Deploy MongoDB |service| with Terraform
---------------------------------------

.. procedure::
   :style: normal

   .. step:: Create and navgate to an empty directory.
      
      .. code-block:: sh

         mkdir terraform-proj
         cd terraform-proj

   .. step:: Create your terraform files. 
      
      Create the ``main.tf``, ``provider.tf``, ``variables.tf``, and ``versions.tf`` files.

      .. code-block:: sh

         touch main.tf provider.tf variables.tf versions.tf

   .. step:: Populate supporting files.
      
      See the the `atlas-basic module
      <https://registry.terraform.io/modules/terraform-mongodbatlas-modules/atlas-basic/mongodbatlas/latest/examples/tenant_cluster>`__
      and copy the content over to the files you created in the previous step 
      (click the link at the :guilabel:`Source Code` to see the content).
      
      .. note:: 

          Your |service| public key and private key are secrets.
          Consider storing them as `environment variables 
          <https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs#environment-variables>`__.

   .. step:: Configure ``main.tf`` contents.

       Update the following fields in your ``main.tf`` file:
       
       .. list-table::
          :widths: 50 50
          :header-rows: 1

          * - Field
            - New Value

          * - ``instance_size``
            - ``"M0"``

          * - ``backing_provider_name``
            - Your provider. 
              Possible values are: ``"AWS"``, ``"AZURE"``, or ``"GCP"``.

          * - ``region_name``
            - See :ref:`create-cluster-cloud-provider-region` for all
              the regions you can use.

   .. step:: (Optional) Display parameters.

      You can output information from your Terraform configuration to
      your terminal window. This is useful for values you won't know
      until |service| creates the resources, such as your connection string.

      If you want to display your parameters after you deploy your
      project, add some output lines of code to your ``main.tf`` file.
      For an example, see the :website:`MongoDB Terraform Blog Post
      </developer/products/atlas/deploy-mongodb-atlas-terraform-aws/#step-12--create-terraform-outputs>`.

   .. step:: Initialize your project.
      
      To initialize your project, run the following command:

      .. code-block:: sh

         terraform init

      This command also downloads and installs the MongoDB |service|
      Provider, if you haven't already.
      
   .. step:: View your execution plan.
      
      To view your execution plan, run the following command:
      
      .. code-block:: sh

         terraform plan

      Terraform details the changes that it plans to make. If the
      output is not what you expect, then there might be an issue in your
      ``main.tf`` file.

   .. step:: Deploy your infrastructure.
      
      To deploy your infrastructure, run the following command:

      .. code-block:: sh

         terraform apply

      When prompted :guilabel:`Do you want to perform these actions?`,
      enter ``yes``.

      .. note:: 
         
         New |service| resources can take a few minutes to provision. 
         The |service| Terraform provider updates you every ten seconds
         until it's complete.
      
Terminate MongoDB |service| Instance
------------------------------------

To delete all of the resources created in your Terraform directory, run
the following command:

.. code-block::

   terraform destroy

.. warning:: 
   
   If you delete all your resources, you can't recover them.

When prompted :guilabel:`Do you really want to destroy all resources?`,
enter ``yes``.

.. _additional-resources-atlas-terraform:

Next Steps
----------

To explore more advanced configurations, extend the fundamentals covered in this tutorial
with additional |service| resources, |service| Terraform Provider configurations, and
Terraform capabilities, see the following resources: 

- :doc:`Atlas documentation </index>`
- :github:`Atlas Terraform Provider GitHub documentation </mongodb/terraform-provider-mongodbatlas/blob/master/README.md>`
- `Terraform documentation <https://developer.hashicorp.com/terraform/docs>`__
- :website:`How to Deploy MongoDB Atlas with Terraform on AWS </developer/products/atlas/deploy-mongodb-atlas-terraform-aws/#step-14--initializing-terraform>`
