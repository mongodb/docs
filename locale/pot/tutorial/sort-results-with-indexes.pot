# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/sort-results-with-indexes.txt:6
# 7ed432557afa42ccb3766816da2ddde6
msgid "Use Indexes to Sort Query Results"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:10
# afa45b925f21453ab085b8c8270ecaff
msgid "In MongoDB, sort operations can obtain the sort order by retrieving documents based on the ordering in an index. If the query planner cannot obtain the sort order from an index, it will sort the results in memory. Sort operations that use an index often have better performance than those that do not use an index. In addition, sort operations that do *not* use an index will abort when they use 32 megabytes of memory."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:18
# 165273910e4f42aa82bee2b78b0287e0
msgid "Sort with a Single Field Index"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:20
# c9b09dd9cda941bd954d4be5c63cb19c
msgid "If an ascending or a descending index is on a single field, the sort operation on the field can be in either direction."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:23
# af1abe73999e460086b5fd7fe52af98c
msgid "For example, create an ascending index on the field ``a`` for a collection ``records``:"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:30
# 4a527e3d6abb44aa845aca95e70d7120
msgid "This index can support an ascending sort on ``a``:"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:36
# 23772e881b984d9ebe9e9732bfd435da
msgid "The index can also support the following descending sort on ``a`` by traversing the index in reverse order:"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:46
# d554131519044ed6921ffe9ba2540f67
msgid "Sort on Multiple Fields"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:48
# aa11d941d6544755961da997a6cb937f
msgid "Create a :ref:`compound index <index-type-compound>` to support sorting on multiple fields."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:51
# 207858967bf945c19952ac4e9d36f957
msgid "You can specify a sort on all the keys of the index or on a subset; however, the sort keys must be listed in the *same order* as they appear in the index. For example, an index key pattern ``{ a: 1, b: 1 }`` can support a sort on ``{ a: 1, b: 1 }`` but *not* on ``{ b: 1, a: 1 }``."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:57
# f716a0584db14905ba89dcb6fc0edfa5
msgid "The sort must specify the *same sort direction* (i.e.ascending/descending) for all its keys as the index key pattern or specify the *reverse sort direction* for all its keys as the index key pattern. For example, an index key pattern ``{ a: 1, b: 1 }`` can support a sort on ``{ a: 1, b: 1 }`` and ``{ a: -1, b: -1 }`` but *not* on ``{ a: -1, b: 1 }``."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:67
# 54ac942793c64c85bb2046612d3281de
msgid "Sort and Index Prefix"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:69
# 8fa7a4e7dd154ceca6872685bb5c5334
msgid "If the sort keys correspond to the index keys or an index *prefix*, MongoDB can use the index to sort the query results. A *prefix* of a compound index is a subset that consists of one or more keys at the start of the index key pattern."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:74
# a4051218c65b4c8ebaf262cad89f9c6e
msgid "For example, create a compound index on the ``data`` collection:"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:80
# 47580ac8bff740efb380f71abb89ab8a
msgid "Then, the following are prefixes for that index:"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:88
# 1dbdfec737e647cdb8eac1496c6face3
msgid "The following query and sort operations use the index prefixes to sort the results. These operations do not need to sort the result set in memory."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:96
#: ../source/tutorial/sort-results-with-indexes.txt:154
# 449476f2d0e9494997ef035a3dba819a
# 8c9e8a9e4ec04820adee36cce4466337
msgid "Example"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:98
#: ../source/tutorial/sort-results-with-indexes.txt:156
# 3084113d48a94fc8bfc4479bc2f89556
# ec8caa618c6b4788b6c3a301b89f3d92
msgid "Index Prefix"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:100
# 3ca9177bbc9b4d2ca236c211ab3183f2
msgid "``db.data.find().sort( { a: 1 } )``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:102
#: ../source/tutorial/sort-results-with-indexes.txt:106
# 0187873e0013417eb9e34aa612ad9b02
# 3664f91be9d34cbba42f4c97e953ee8b
msgid "``{ a: 1 }``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:104
# 385bcb5326d3465ba30f73602108482f
msgid "``db.data.find().sort( { a: -1 } )``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:108
# 1be4ed99dec941eca98f23c106b6a010
msgid "``db.data.find().sort( { a: 1, b: 1 } )``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:110
#: ../source/tutorial/sort-results-with-indexes.txt:114
#: ../source/tutorial/sort-results-with-indexes.txt:122
#: ../source/tutorial/sort-results-with-indexes.txt:168
# c3e628c932be422f8481559ae229eee1
# 9fc6f82e673d426f85c120d6fb183749
# aae437c8af2e4eab8728cfda42f44672
# 912eba39a657428e87fa72dd2528cb38
msgid "``{ a: 1, b: 1 }``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:112
# 271c307088554a3490993bf17cab142a
msgid "``db.data.find().sort( { a: -1, b: -1 } )``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:116
# 70e597fb347c4c4fbabec217e88aa51c
msgid "``db.data.find().sort( { a: 1, b: 1, c: 1 } )``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:118
#: ../source/tutorial/sort-results-with-indexes.txt:164
# 0c80fcbb12fc40ab9c064e85db7330e8
# ac616a8de77b4788b6d37b005e24f385
msgid "``{ a: 1, b: 1, c: 1 }``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:120
# e93740c4e93e4936bb021bc2a52634ff
msgid "``db.data.find( { a: { $gt: 4 } } ).sort( { a: 1, b: 1 } )``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:124
# 5df4987d5656487d8f5324b8ff2f4178
msgid "Consider the following example in which the prefix keys of the index appear in both the query predicate and the sort:"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:131
# be175eb44aa84d8aafb42671d02d8b89
msgid "In such cases, MongoDB can use the index to retrieve the documents in order specified by the sort. As the example shows, the index prefix in the query predicate can be different from the prefix in the sort."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:136
# 68fb67c22c8f44ecba998b6a5ddb1f2a
msgid "Sort and Non-prefix Subset of an Index"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:138
# a251ec1170b841239c962970d0ac2c19
msgid "An index can support sort operations on a non-prefix subset of the index key pattern. To do so, the query must include **equality** conditions on all the prefix keys that precede the sort keys."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:142
# d97fabde7242483590b60fc374800623
msgid "For example, the collection ``data`` has the following index:"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:148
# d56a64ed4d024cb6bf36437ab87bc97b
msgid "The following operations can use the index to get the sort order:"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:158
# 5f072ae07edf426ab8e22aba68d6f8de
msgid "``db.data.find( { a: 5 } ).sort( { b: 1, c: 1 } )``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:160
# bffbf6aa226b4c5bbd080d98df678bea
msgid "``{ a: 1 , b: 1, c: 1 }``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:162
# cdb6609d0e3e4f178d92ff559ddc50fa
msgid "``db.data.find( { b: 3, a: 4 } ).sort( { c: 1 } )``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:166
# 2fba9f35b3dc4ac6b4a8e7976b2b196a
msgid "``db.data.find( { a: 5, b: { $lt: 3} } ).sort( { b: 1 } )``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:170
# 603275ffca1d42c19aa1bb79b165a1c5
msgid "As the last operation shows, only the index fields *preceding* the sort subset must have the equality conditions in the query document; the other index fields may specify other conditions."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:174
# 58b8e5f3be584dcbb163ceb48afbecf4
msgid "If the query does **not** specify an equality condition on an index prefix that precedes or overlaps with the sort specification, the operation will **not** efficiently use the index. For example, the following operations specify a sort document of ``{ c: 1 }``, but the query documents do not contain equality matches on the preceding index fields ``a`` and ``b``:"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:186
# 581ce5902fb94c5a8d0db3d9aced6ea0
msgid "These operations **will not** efficiently use the index ``{ a: 1, b: 1, c: 1, d: 1 }`` and may not even use the index to retrieve the documents."
msgstr ""

