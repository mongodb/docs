title: Download the Backup Daemon package.
stepnum: 1
ref: backup-package-download
action:
  - pre: |
      On **server 2**, download the latest version of the Backup Daemon
      package by issuing ``curl -OL`` and **specifying the MMS version**. For
      example, the following command downloads version ``1.5.2.160-1``:
    language: sh
    code: |
      curl -OL https://downloads.mongodb.com/on-prem-mms/rpm/mongodb-mms-backup-daemon-1.5.2.160-1.x86_64.rpm
  - pre: |
      If the **server 2** does not have Internet access, download the package
      to another server and ``scp`` it to **server 2**.
---
title: Install the Backup Daemon package.
stepnum: 2
ref: backup-package-install
action:
  pre: |
    Install the package by issuing ``rpm --install`` with root privileges and
    **specifying the MMS version**. For example, the following command
    installs version ``1.5.2.160-1``:
  language: sh
  code: |
    sudo rpm --install mongodb-mms-backup-daemon-1.5.2.160-1.x86_64.rpm
---
title: Configure the Backup Daemon.
stepnum: 3
ref: mms-backup-configure
pre: |
  Open the ``/opt/mongodb/mms-backup-daemon/conf/conf-daemon.properties`` file
  with root privileges and set values for the following options. For detailed
  information on each option, see the :doc:`/reference/configuration` page.
action:
  - pre: |
      To point the Backup Daemon to the |application| database, set the
      :setting:`mongo.mongoUri` option to the servers and ports hosting the
      |application| database. Set the :setting:`mongo.replicaSet` option to
      the name of the |application| database's replica set. For example:
    language: cfg
    code: |
      mongo.mongoUri=mongodb://mongodb1.example.net:27017,mongodb2.example.net:27017,mongodb3.example.net:27017
      mongo.replicaSet=monitoring
  - pre: |
      Set the the :setting:`mongo.backupdb.mongoUri` option to the servers and
      ports hosting the Backup Blockstore database. Set the
      :setting:`mongo.backupdb.replicaSet` option to the name of the Backup
      Blockstore's replica set. For example:
    language: cfg
    code: |
      mongo.backupdb.mongoUri=mongodb://mongodb1.example.net:27018,mongodb2.example.net:27018,mongodb3.example.net:27018
      mongo.backupdb.replicaSet=blockstore
---
title: "Use ``scp`` to copy the ``gen.key`` file from the |application| server, **server 1**."
stepnum: 4
ref: copy-gen-key
pre: |
  Use ``scp`` to copy the ``/etc/mongodb-mms/gen.key`` from the MMS
  Application server to the ``/etc/mongodb-mms`` directory on the Backup
  Daemon server, **server 2**.
action:
  - pre: |
      If it is inconvenient to use ``scp`` to copy ``gen.key``, you may encode
      the file and copy its contents, provided you have a graphical user
      interface with terminals open to both **server 1** and **server 2**. As
      ``gen.key`` is a binary file, you must first encode the file into text
      via ``base64``. On the console connected to **server 1**, type:
    language: sh
    code: |
      sudo base64 /etc/mongodb-mms/gen.key
  - pre: |
      The command encodes the text and prints it to the terminal. For example:
    language: sh
    code: |
      /LETVVl9rA1aFsY7masSLYJmlKValKbu
  - pre: |
      When the text appears on the terminal connected to **server 1**, use
      your mouse and keyboard to select and copy it to your clipboard. On the
      console connected to **server 2**, type:
    language: sh
    code: |
      echo "
  - pre: |
      Then paste the copied text to the terminal, press RETURN, and type:
    language: sh
    code: |
      " > gen.key.txt
  - pre: |
      This saves the string to a temporary file called ``gen.key.txt``. Next,
      issue the following on **server 2** to convert the key back into binary
      and save it as ``/etc/mongodb-mms/gen.key``:
    language: sh
    code: |
      sudo base64 -d gen.key.txt > /etc/mongodb-mms/gen.key
  - pre: |
      Check that the key was converted properly by issuing the following
      ``sum`` command on both **server 1** and **server 2** and ensuring that
      the outputs match:
    language: sh
    code: |
      sum /etc/mongodb-mms/gen.key
  - pre: |
      Once you have verified ``/etc/mongodb-mms/gen.key`` on **server 2**, issue
      the following to remove the temporary file:
    language: sh
    code: |
      rm gen.key.txt
---
title: "Set permissions and ownership of the ``gen.key`` file on the Backup Daemon server, **server 2**."
stepnum: 5
ref: chown-chmod
action:
  pre: |
    Once you have copied ``gen.key`` to **server 2**, ensure that the file's
    permissions are set to ``600`` and that the owner and group are both set
    to ``mongodb-mms``. If they are not, issue the following:
  language: sh
  code: |
    chown mongodb-mms.mongodb-mms /etc/mongodb-mms/gen.key
    chmod 600 /etc/mongodb-mms/gen.key
---
title: Start the Backup Daemon.
stepnum: 6
ref: mms-backup-start
action:
  pre: |
    Issue the following command on **server 2**:
  language: sh
  code: |
    sudo service mongodb-mms-backup-daemon start
...
