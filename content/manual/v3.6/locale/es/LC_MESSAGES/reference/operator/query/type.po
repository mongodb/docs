# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: 2014-04-08 18:55+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/reference/operator/query/type.txt:3
msgid "$type"
msgstr ""

#: ../source/reference/operator/query/type.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/operator/query/type.txt:18
msgid ""
":query:`$type` selects the documents where the *value* of the ``field`` "
"is an instance of the specified :term:`BSON` type(s). Querying by data "
"type is useful when dealing with highly unstructured data where data "
"types are not predictable."
msgstr ""

#: ../source/reference/operator/query/type.txt:23
msgid ""
"A :query:`$type` expression for a single :term:`BSON` type has the "
"following syntax:"
msgstr ""

#: ../source/reference/operator/query/type.txt:32
msgid ""
"You can specify either the number or alias for the :ref:`BSON type"
"<document-type-available-types>`"
msgstr ""

#: ../source/reference/operator/query/type.txt:35
msgid ""
"The :query:`$type` expression can also accept an array of :term:`BSON` "
"types and has the following syntax:"
msgstr ""

#: ../source/reference/operator/query/type.txt:42
msgid ""
"The above query will match documents where the ``field`` value is any of "
"the listed types. The types specified in the array can be either numeric "
"or string aliases."
msgstr ""

#: ../source/reference/operator/query/type.txt:46
msgid "See :ref:`document-querying-by-multiple-data-types` for an example."
msgstr ""

#: ../source/reference/operator/query/type.txt:48
msgid ""
":ref:`document-type-available-types` describes the BSON types and their "
"corresponding numeric and string aliases."
msgstr ""

#: ../source/reference/operator/query/type.txt:53
msgid ""
"If you wish to obtain the :ref:`BSON type <bson-types>` returned by an "
":ref:`operator expression <agg-quick-ref-operator-expressions>` rather "
"than filtering documents by their BSON type, use the :expression:`$type` "
"aggregation operator."
msgstr ""

#: ../source/reference/operator/query/type.txt:59
msgid "Behavior"
msgstr ""

#: ../source/reference/operator/query/type.txt:61
msgid ""
":query:`$type` returns documents where the BSON type of the ``field`` "
"matches the BSON type passed to :query:`$type`."
msgstr ""

#: ../source/reference/operator/query/type.txt:66
msgid ""
":query:`$type` now works with arrays in the same way it works with other "
"BSON types. Previous versions only matched documents where the ``field`` "
"contained a nested array."
msgstr ""

#: ../source/reference/operator/query/type.txt:73
msgid "Available Types"
msgstr ""

#: ../source/reference/operator/query/type.txt:75
msgid ""
":query:`$type` operator accepts string aliases for the BSON types in "
"addition to the numbers corresponding to the BSON types. Previous "
"versions only accepted the numbers corresponding to the BSON type."
msgstr ""

#: ../source/includes/fact-bson-types.rst:4
msgid "Type"
msgstr ""

#: ../source/includes/fact-bson-types.rst:5
msgid "Number"
msgstr ""

#: ../source/includes/fact-bson-types.rst:6
msgid "Alias"
msgstr ""

#: ../source/includes/fact-bson-types.rst:7
msgid "Notes"
msgstr ""

#: ../source/includes/fact-bson-types.rst:9
msgid "Double"
msgstr ""

#: ../source/includes/fact-bson-types.rst:10
msgid "1"
msgstr ""

#: ../source/includes/fact-bson-types.rst:11
msgid "\"double\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:14
msgid "String"
msgstr ""

#: ../source/includes/fact-bson-types.rst:15
msgid "2"
msgstr ""

#: ../source/includes/fact-bson-types.rst:16
msgid "\"string\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:19
msgid "Object"
msgstr ""

#: ../source/includes/fact-bson-types.rst:20
msgid "3"
msgstr ""

#: ../source/includes/fact-bson-types.rst:21
msgid "\"object\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:24
msgid "Array"
msgstr ""

#: ../source/includes/fact-bson-types.rst:25
msgid "4"
msgstr ""

#: ../source/includes/fact-bson-types.rst:26
msgid "\"array\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:29
msgid "Binary data"
msgstr ""

#: ../source/includes/fact-bson-types.rst:30
msgid "5"
msgstr ""

#: ../source/includes/fact-bson-types.rst:31
msgid "\"binData\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:34
msgid "Undefined"
msgstr ""

#: ../source/includes/fact-bson-types.rst:35
msgid "6"
msgstr ""

#: ../source/includes/fact-bson-types.rst:36
msgid "\"undefined\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:37
#: ../source/includes/fact-bson-types.rst:67
#: ../source/includes/fact-bson-types.rst:77
msgid "Deprecated."
msgstr ""

#: ../source/includes/fact-bson-types.rst:39
msgid "ObjectId"
msgstr ""

#: ../source/includes/fact-bson-types.rst:40
msgid "7"
msgstr ""

#: ../source/includes/fact-bson-types.rst:41
msgid "\"objectId\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:44
msgid "Boolean"
msgstr ""

#: ../source/includes/fact-bson-types.rst:45
msgid "8"
msgstr ""

#: ../source/includes/fact-bson-types.rst:46
msgid "\"bool\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:49
msgid "Date"
msgstr ""

#: ../source/includes/fact-bson-types.rst:50
msgid "9"
msgstr ""

#: ../source/includes/fact-bson-types.rst:51
msgid "\"date\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:54
msgid "Null"
msgstr ""

#: ../source/includes/fact-bson-types.rst:55
msgid "10"
msgstr ""

#: ../source/includes/fact-bson-types.rst:56
msgid "\"null\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:59
msgid "Regular Expression"
msgstr ""

#: ../source/includes/fact-bson-types.rst:60
msgid "11"
msgstr ""

#: ../source/includes/fact-bson-types.rst:61
msgid "\"regex\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:64
msgid "DBPointer"
msgstr ""

#: ../source/includes/fact-bson-types.rst:65
msgid "12"
msgstr ""

#: ../source/includes/fact-bson-types.rst:66
msgid "\"dbPointer\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:69
msgid "JavaScript"
msgstr ""

#: ../source/includes/fact-bson-types.rst:70
msgid "13"
msgstr ""

#: ../source/includes/fact-bson-types.rst:71
msgid "\"javascript\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:74
msgid "Symbol"
msgstr ""

#: ../source/includes/fact-bson-types.rst:75
msgid "14"
msgstr ""

#: ../source/includes/fact-bson-types.rst:76
msgid "\"symbol\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:79
msgid "JavaScript (with scope)"
msgstr ""

#: ../source/includes/fact-bson-types.rst:80
msgid "15"
msgstr ""

#: ../source/includes/fact-bson-types.rst:81
msgid "\"javascriptWithScope\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:84
#: ../source/reference/operator/query/type.txt:88
msgid "32-bit integer"
msgstr ""

#: ../source/includes/fact-bson-types.rst:85
msgid "16"
msgstr ""

#: ../source/includes/fact-bson-types.rst:86
msgid "\"int\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:89
msgid "Timestamp"
msgstr ""

#: ../source/includes/fact-bson-types.rst:90
msgid "17"
msgstr ""

#: ../source/includes/fact-bson-types.rst:91
msgid "\"timestamp\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:94
#: ../source/reference/operator/query/type.txt:90
msgid "64-bit integer"
msgstr ""

#: ../source/includes/fact-bson-types.rst:95
msgid "18"
msgstr ""

#: ../source/includes/fact-bson-types.rst:96
msgid "\"long\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:99
msgid "Decimal128"
msgstr ""

#: ../source/includes/fact-bson-types.rst:100
msgid "19"
msgstr ""

#: ../source/includes/fact-bson-types.rst:101
msgid "\"decimal\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:102
msgid "New in version 3.4."
msgstr ""

#: ../source/includes/fact-bson-types.rst:104
msgid "Min key"
msgstr ""

#: ../source/includes/fact-bson-types.rst:105
msgid "-1"
msgstr ""

#: ../source/includes/fact-bson-types.rst:106
msgid "\"minKey\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:109
msgid "Max key"
msgstr ""

#: ../source/includes/fact-bson-types.rst:110
msgid "127"
msgstr ""

#: ../source/includes/fact-bson-types.rst:111
msgid "\"maxKey\""
msgstr ""

#: ../source/reference/operator/query/type.txt:83
msgid ""
":query:`$type` supports the ``number`` alias, which will match against "
"the following :term:`BSON` types:"
msgstr ""

#: ../source/reference/operator/query/type.txt:86
msgid "double"
msgstr ""

#: ../source/reference/operator/query/type.txt:92
msgid "decimal"
msgstr ""

#: ../source/reference/operator/query/type.txt:94
msgid "See :ref:`document-querying-by-data-type`"
msgstr ""

#: ../source/reference/operator/query/type.txt:97
msgid "MinKey and MaxKey"
msgstr ""

#: ../source/reference/operator/query/type.txt:99
msgid ""
":bsontype:`MinKey <data_minkey>` and :bsontype:`MaxKey <data_maxkey>` are"
" used in comparison operations and exist primarily for internal use. For "
"all possible :term:`BSON` element values, ``MinKey`` will always be the "
"smallest value while ``MaxKey`` will always be the greatest value."
msgstr ""

#: ../source/reference/operator/query/type.txt:104
msgid ""
"Querying for  ``minKey`` or ``maxKey`` with :query:`$type` will only "
"return fields that match the special ``MinKey`` or ``MaxKey`` values."
msgstr ""

#: ../source/reference/operator/query/type.txt:108
msgid ""
"Suppose that the ``data`` collection has two documents with ``MinKey`` "
"and ``MaxKey``:"
msgstr ""

#: ../source/reference/operator/query/type.txt:116
msgid "The following query will return the document with ``_id: 1``:"
msgstr ""

#: ../source/reference/operator/query/type.txt:122
msgid "The following query will return the document with ``_id: 2``:"
msgstr ""

#: ../source/reference/operator/query/type.txt:129
msgid "Examples"
msgstr ""

#: ../source/reference/operator/query/type.txt:134
msgid "Querying by Data Type"
msgstr ""

#: ../source/reference/operator/query/type.txt:136
msgid ""
"The ``addressBook`` contains addresses and zipcodes, where ``zipCode`` "
"has ``string``, ``int``, ``double``, and ``long`` values:"
msgstr ""

#: ../source/reference/operator/query/type.txt:151
msgid ""
"The following queries return all documents where ``zipCode`` is the "
":term:`BSON` type ``string``:"
msgstr ""

#: ../source/reference/operator/query/type.txt:160
#: ../source/reference/operator/query/type.txt:174
#: ../source/reference/operator/query/type.txt:187
msgid "These queries return:"
msgstr ""

#: ../source/reference/operator/query/type.txt:166
msgid ""
"The following queries return all documents where ``zipCode`` is the "
":term:`BSON` type ``double``:"
msgstr ""

#: ../source/reference/operator/query/type.txt:180
msgid ""
"The following query uses the ``number`` alias to return documents where "
"``zipCode`` is the :term:`BSON` type ``double``, ``int``, or ``long``:"
msgstr ""

#: ../source/reference/operator/query/type.txt:198
msgid "Querying by Multiple Data Type"
msgstr ""

#: ../source/reference/operator/query/type.txt:200
msgid ""
"The ``grades`` collection contains names and averages, where "
"``classAverage`` has ``string``, ``int``, and ``double`` values:"
msgstr ""

#: ../source/reference/operator/query/type.txt:214
msgid ""
"The following queries return all documents where ``classAverage`` is the "
":term:`BSON` type ``string`` or ``double``. The first query uses numeric "
"aliases while the second query uses string aliases."
msgstr ""

#: ../source/reference/operator/query/type.txt:223
msgid "These queries return the following documents:"
msgstr ""

#: ../source/reference/operator/query/type.txt:234
msgid "Querying by MinKey and MaxKey"
msgstr ""

#: ../source/reference/operator/query/type.txt:236
msgid ""
"The ``restaurants`` collection uses ``minKey`` for any grade that is a "
"failing grade:"
msgstr ""

#: ../source/reference/operator/query/type.txt:261
msgid "And ``maxKey`` for any grade that is the highest passing grade:"
msgstr ""

#: ../source/reference/operator/query/type.txt:285
msgid ""
"The following query returns any restaurant whose ``grades.grade`` field "
"contains ``minKey``:"
msgstr ""

#: ../source/reference/operator/query/type.txt:294
#: ../source/reference/operator/query/type.txt:328
msgid "This returns"
msgstr ""

#: ../source/reference/operator/query/type.txt:318
msgid ""
"The following query returns any restaurant whose ``grades.grade`` field "
"contains ``maxKey``:"
msgstr ""

#: ../source/reference/operator/query/type.txt:355
msgid "Querying by Array Type"
msgstr ""

#: ../source/reference/operator/query/type.txt:357
msgid "A collection named ``SensorReading`` contains the following documents:"
msgstr ""

#: ../source/reference/operator/query/type.txt:396
msgid ""
"The following query returns any document in which the ``readings`` field "
"is an array, empty or non-empty."
msgstr ""

#: ../source/reference/operator/query/type.txt:403
msgid "The above query returns the following documents:"
msgstr ""

#: ../source/reference/operator/query/type.txt:438
msgid ""
"In the documents with ``_id : 1``, ``_id : 2``, ``_id : 3``, and ``_id : "
"4``, the ``readings`` field is an array."
msgstr ""

#: ../source/reference/operator/query/type.txt:442
msgid "Additional Information"
msgstr ""

#: ../source/reference/operator/query/type.txt:444
msgid ""
":method:`~db.collection.find()`, :doc:`BSON Types </reference/bson-"
"types>`."
msgstr ""

# 23e9e551a2ad441ca9e1a50d260c74ec
#~ msgid "*Syntax*: ``{ field: { $type: <BSON type> } }``"
#~ msgstr ""

# fa3d55241c7048cdaaad0fc6609d1399
#~ msgid ""
#~ ":query:`$type` selects the documents where "
#~ "the *value* of the ``field`` is "
#~ "the specified :term:`BSON` type."
#~ msgstr ""

# 52569ba39ff84ad18b57ee178f5007b9
#~ msgid "Consider the following example:"
#~ msgstr ""

# 4e4c63aa9e7748578f331916f45a5446
#~ msgid ""
#~ "This query will select all documents "
#~ "in the ``inventory`` collection where "
#~ "the ``price`` field value is a "
#~ "Double."
#~ msgstr ""

# ff45173dff5946928563e5cce4f346bb
#~ msgid ""
#~ "If the ``field`` holds an array, "
#~ "the :query:`$type` operator performs the "
#~ "type check against the array elements"
#~ " and **not** the ``field``."
#~ msgstr ""

# 18f3fe2242c04653a3c197b9a4e8cfc9
#~ msgid "Consider the following example where the ``tags`` field holds an array:"
#~ msgstr ""

# 69692a695c5445968ecdd0f928a605bc
#~ msgid ""
#~ "This query will select all documents "
#~ "in the ``inventory`` collection where "
#~ "the ``tags`` array contains an element"
#~ " that is itself an array."
#~ msgstr ""

# f4f40b49d0e14394aa5c00f3cf5779ac
#~ msgid ""
#~ "If instead you want to determine "
#~ "whether the ``tags`` field is an "
#~ "array type, use the :query:`$where` "
#~ "operator:"
#~ msgstr ""

# d4bb9a3a13814faea51c81874d9c599d
#~ msgid "See the :issue:`SERVER-1475` for more information about the array type."
#~ msgstr ""

# c062fd7f91c345f8a86711a5cd243b67
#~ msgid ""
#~ "Refer to the following table for "
#~ "the available :term:`BSON` types and "
#~ "their corresponding numbers."
#~ msgstr ""

# 6ba1a306440a4f7e9d2d2b81e121da6d
#~ msgid "**Type**"
#~ msgstr ""

# b3ae2e06af2541939888815932afa5e6
#~ msgid "**Number**"
#~ msgstr ""

# 897f67d9539646118c5dfafa5792684f
#~ msgid "Undefined (deprecated)"
#~ msgstr ""

# ce6fcf68778442aa9f9d2a421a8d6e3e
#~ msgid "Object id"
#~ msgstr ""

# 676c2639fd2c4ae69348b0efa9cd9ab6
#~ msgid "255"
#~ msgstr ""

# 08c41e855d9448108a6d320e819489e1
#~ msgid ""
#~ "``MinKey`` and ``MaxKey`` compare less "
#~ "than and greater than all other "
#~ "possible :term:`BSON` element values, "
#~ "respectively, and exist primarily for "
#~ "internal use."
#~ msgstr ""

# de71905419aa4af99b798d143f24ef2b
#~ msgid ""
#~ "To query if a field value is "
#~ "a ``MinKey``, you must use the "
#~ ":query:`$type` with ``-1`` as in the "
#~ "following example:"
#~ msgstr ""

# 6083273e1aec4e8096988088dbc552a6
#~ msgid "Example"
#~ msgstr ""

# 52562d3d349d49e88be5b501287ab5ea
#~ msgid ""
#~ "Consider the following example operation "
#~ "sequence that demonstrates both type "
#~ "comparison *and* the special ``MinKey`` "
#~ "and ``MaxKey`` values:"
#~ msgstr ""

# 63b729f5015e45a7a07a889e334bc950
#~ msgid ""
#~ "To query for the minimum value of"
#~ " a :term:`shard key` of a "
#~ ":term:`sharded cluster`, use the following "
#~ "operation when connected to the "
#~ ":program:`mongos`:"
#~ msgstr ""

# 6811d8ab85d64507943ac590ef13e00d
#~ msgid ""
#~ "Storing values of the different types"
#~ " in the same field in a "
#~ "collection is *strongly* discouraged."
#~ msgstr ""

# 2c1e59c3232e4d0585ebb4b075413994
#~ msgid ""
#~ ":method:`~db.collection.find()`, "
#~ ":method:`~db.collection.insert()`, :query:`$where`, "
#~ ":term:`BSON`, :term:`shard key`, :term:`sharded "
#~ "cluster` ."
#~ msgstr ""

