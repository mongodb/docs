#  This file borrows content from other files, including
#  /includes/options-shared.yaml,
#  which uses {{program}} to refer to the tool.
#
program: mongodrdl
name: username
inherit:
  name: username
  program: _shared
  file: options-shared.yaml
---
program: mongodrdl
name: password
inherit:
  name: password
  program: _shared
  file: options-shared.yaml
description: |
  Specifies a password with which to authenticate to a MongoDB database
  that uses authentication. Use in conjunction with the ``--username`` and
  ``--authenticationDatabase`` options.
---
program: mongodrdl
name: help
inherit:
  name: help
  program: _shared
  file: options-shared.yaml
---
program: mongodrdl
name: version
inherit:
  name: version
  program: _shared
  file: options-shared.yaml
---
program: mongodrdl
name: host
inherit:
  name: host
  program: _shared
  file: options-shared.yaml
description: |
  Specifies a resolvable hostname for the :program:`mongod` to which to
  connect. By default, the {{program}} attempts to connect to a MongoDB
  instance running on the localhost on port number ``27017``.

  To connect to a replica set, specify the
  :setting:`~replication.replSetName` and a seed list of set members, as in
  the following:

  .. code-block:: none

     <replSetName>/<hostname1><:port>,<hostname2><:port>,<...>

  You can always connect directly to a single MongoDB instance by
  specifying the host and port number directly.
---
program: mongodrdl
name: port
inherit:
  name: port
  program: _shared
  file: options-shared.yaml
---
program: mongodrdl
name: authenticationDatabase
inherit:
  name: authenticationDatabase
  program: _shared
  file: options-shared.yaml
---
program: mongodrdl
name: authenticationMechanism
inherit:
  name: _authenticationMechanism
  program: _shared
  file: options-shared.yaml
---
program: mongodrdl
name: db
aliases: -d
directive: option
args:  <database>
description: |
  Specifies a database from which to generate a ``.drdl`` schema file.
optional: true
---
program: mongodrdl
name: collection
aliases: -c
directive: option
args: <collection>
description: |
  Specifies a collection from which to generate a ``.drdl`` schema file.
  If you do not specify a collection, this option will use all collections in
  the specified database or instance.
optional: true
---
program: mongodrdl
name: customFilterField
aliases: -f
directive: option
args: <name>
description: |
  Specifies the field name to add for a custom MongoDB filter. See
  :ref:`mongodrdl-custom-filters` for more details.
optional: true
---
program: mongodrdl
name: out
aliases: -o
directive: option
args: <path>
default: |
  Standard out.
description: |
  Specifies the path where :program:`mongodrdl` will write the schema file. To
  send the schema to standard output, specify "``-``" instead of
  a path.
optional: true
---
# These SSL options cannot be inherited from the normal _shared because those
# include undesired information, unfortunately.
program: mongodrdl
name: ssl
args: null
directive: option
description: |
  Enables connection to a :program:`mongod` or :program:`mongos` that has
  TLS/SSL support enabled.
optional: true
---
program: mongodrdl
name: sslCAFile
args: <filename>
directive: option
description: |
  Specifies the :file:`.pem` file that contains the root certificate chain
  from the Certificate Authority. Specify the file name of the
  :file:`.pem` file using relative or absolute paths.

  .. warning::

     For SSL connections (``--ssl``) to :program:`mongod` and
     :program:`mongos`, if the {{program}} runs without the
     {{role}}, {{program}} will not attempt
     to validate the server certificates. This creates a vulnerability
     to expired :program:`mongod` and :program:`mongos` certificates as
     well as to foreign processes posing as valid :program:`mongod` or
     :program:`mongos` instances. Ensure that you *always* specify the
     CA file to validate the server certificates in cases where
     intrusion is a possibility.

optional: true
---
program: mongodrdl
name: sslPEMKeyFile
args: <filename>
directive: option
description: |
  Specifies the :file:`.pem` file that contains both the TLS/SSL certificate
  and key. Specify the file name of the :file:`.pem` file using relative
  or absolute paths.

  This option is required when using the :option:`--ssl` option to connect
  to a :program:`mongod` or :program:`mongos` that has
  :setting:`~net.ssl.CAFile` enabled *without*
  :setting:`~net.ssl.allowConnectionsWithoutCertificates`.
optional: true
---
program: mongodrdl
name: sslPEMKeyPassword
args: <value>
directive: option
description: |
  Specifies the password to de-crypt the certificate-key file (i.e.
  :option:`--sslPEMKeyFile`). Use the {{role}} option only if the
  certificate-key file is encrypted. In all cases, the {{program}} will
  redact the password from all logging and reporting output.

  If the private key in the PEM file is encrypted and you do not specify
  the {{role}} option, the {{program}} will prompt for a passphrase. See
  :ref:`ssl-certificate-password`.
optional: true
---
program: mongodrdl
name: sslCRLFile
args: <filename>
directive: option
description: |
  Specifies the :file:`.pem` file that contains the Certificate Revocation
  List. Specify the file name of the :file:`.pem` file using relative or
  absolute paths.
optional: true
---
program: mongodrdl
name: sslAllowInvalidCertificates
args: null
directive: option
description: |
  Bypasses the validation checks for server certificates and allows
  the use of invalid certificates. When using the
  :setting:`~net.ssl.allowInvalidCertificates` setting, MongoDB logs as a
  warning the use of the invalid certificate.
optional: true
---
program: mongodrdl
name: sslAllowInvalidHostnames
args: null
directive: option
description: |
  Disables the validation of the hostnames in TLS/SSL certificates. Allows
  {{program}} to connect to MongoDB instances if the hostname their
  certificates do not match the specified hostname.
optional: true
---
program: mongodrdl
name: sslFIPSMode
args: null
directive: option
description: |
  Directs the {{program}} to use the FIPS mode of the installed OpenSSL
  library. Your system must have a FIPS compliant OpenSSL library to use
  the {{role}} option.
optional: true
---
program: mongodrdl
name: verbose
aliases: -v
args: <level>
directive: option
description: |
  Specifies that {{program}} should provide more detailed log output. Include
  multiple times for more verbosity (e.g. ``-vvvvv``), or specify a numeric
  value (e.g. ``--verbose=5``).
optional: true
---
program: mongodrdl
name: quiet
args: null
directive: option
description: |
  Hides all log output.
optional: true
...
