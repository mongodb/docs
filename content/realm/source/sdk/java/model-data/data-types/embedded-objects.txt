.. meta::
   :robots: noindex, nosnippet

.. _java-embedded-objects:

===========================
Embedded Objects - Java SDK
===========================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

An embedded object is a special type of :ref:`Realm object
<java-realm-objects>` that models complex data about a specific object.
Embedded objects are similar to :ref:`relationships
<java-client-relationships>`, but they provide additional constraints and
map more naturally to the denormalized :manual:`MongoDB document model
</core/data-modeling-introduction/>`.

Realm enforces unique ownership constraints that treat each embedded
object as nested data inside of a single, specific parent object. An
embedded object inherits the lifecycle of its parent object and cannot
exist as an independent Realm object. Realm automatically deletes
embedded objects if their parent object is deleted or when overwritten
by a new embedded object instance.

.. warning:: Realm Uses Cascading Deletes for Embedded Objects

   When you delete a Realm object, Realm automatically deletes any
   embedded objects referenced by that object. Any objects that your
   application must persist after the deletion of their parent object
   should use :ref:`relationships <java-client-relationships>`
   instead.

Embedded Object Data Models
---------------------------

You can define embedded object types using either Realm object models or
a server-side document schema. Embedded object types are reusable and
composable. You can use the same embedded object type in multiple parent
object types and you can embed objects inside of other embedded objects.

.. important::

   Embedded objects cannot have a primary key.

Realm Object Models
~~~~~~~~~~~~~~~~~~~

To define an embedded object, derive a class from :java-sdk:`RealmObject
<io/realm/RealmObject.html>` and set the ``embedded`` property of the
:java-sdk:`RealmClass <io/realm/annotations/RealmClass.html>` annotation
to ``true``. You can reference an embedded object type from parent
object types in the same way as you would define a relationship:


.. tabs-realm-languages::
   
   .. tab::
      :tabid: kotlin

      .. literalinclude:: /examples/EmbeddedObjects/DefineEmbeddedObjects.kt
         :language: kotlin
         :copyable: false

   .. tab::
      :tabid: java

      .. literalinclude:: /examples/EmbeddedObjects/DefineEmbeddedObjects.java
         :language: java
         :copyable: false

JSON Schema
~~~~~~~~~~~

.. include:: /includes/embedded-object-json-schema.rst

Read and Write Embedded Objects
-------------------------------

Create an Embedded Object
~~~~~~~~~~~~~~~~~~~~~~~~~

To create an embedded object, assign an instance of the embedded object
to a parent object's property:

.. tabs-realm-languages::
   
   .. tab::
      :tabid: kotlin

      .. literalinclude:: /examples/EmbeddedObjects/CreateEmbeddedObject.kt
         :language: kotlin
         :copyable: false

   .. tab::
      :tabid: java

      .. literalinclude:: /examples/EmbeddedObjects/CreateEmbeddedObject.java
         :language: java
         :copyable: false

Update an Embedded Object Property
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To update a property in an embedded object, modify the property in a
write transaction:

.. tabs-realm-languages::
   
   .. tab::
      :tabid: kotlin

      .. literalinclude:: /examples/EmbeddedObjects/UpdateEmbeddedObject.kt
         :language: kotlin
         :copyable: false

   .. tab::
      :tabid: java

      .. literalinclude:: /examples/EmbeddedObjects/UpdateEmbeddedObject.java
         :language: java
         :copyable: false

Overwrite an Embedded Object
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To overwrite an embedded object, reassign the embedded object property
of a party to a new instance in a write transaction:

.. tabs-realm-languages::
   
   .. tab::
      :tabid: kotlin

      .. literalinclude:: /examples/EmbeddedObjects/ReplaceEmbeddedObject.kt
         :language: kotlin
         :copyable: false

   .. tab::
      :tabid: java

      .. literalinclude:: /examples/EmbeddedObjects/ReplaceEmbeddedObject.java
         :language: java
         :copyable: false

Query a Collection on Embedded Object Properties
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Use dot notation to filter or sort a :ref:`collection
<java-client-collections>` of objects based on an embedded object
property value:

.. include:: /includes/directly-query-embedded-objects-note.rst

.. tabs-realm-languages::
   
   .. tab::
      :tabid: kotlin

      .. literalinclude:: /examples/EmbeddedObjects/QueryEmbeddedObjects.kt
         :language: kotlin
         :copyable: false

   .. tab::
      :tabid: java

      .. literalinclude:: /examples/EmbeddedObjects/QueryEmbeddedObjects.java
         :language: java
         :copyable: false
