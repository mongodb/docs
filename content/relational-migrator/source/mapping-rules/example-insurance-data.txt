.. _rm-example-insurance-data:

==============================
Example: Insurance Data Models
==============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

This sample tutorial uses the {+rel-mig+} to transform a 21-table insurance data 
schema into a simple five-collection MongoDB model.

About this Task
---------------

In the sample data set, all people, organizations, and groups are represented as 
Parties, which can be related to other major objects with specified roles. The 
Party design also provides a common approach for describing communication 
identifiers, relationships between parties, and legal identifiers. 

In this tutorial, you will use the {+rel-mig+} to port the Object Management 
Group’s `Party Role model <https://www.omg.org/spec/PC/1.0/PDF>`__ from a 
relational structure to MongoDB’s document model. Specifically, you will 
refactor the Party model in the context of the Policy, Claim, and Litigation 
domains.

Before You Begin 
----------------

This example requires the following applications:

- {+mdb-rel-mig+} version 1.4.3 or higher. To download the latest version, see 
  the {+mdb-rel-mig+} `release page <https://www.mongodb.com/try/download/relational-migrator>`__.

- `MongoDB Atlas <https://www.mongodb.com/atlas/database?tck=docs_server>`__: 
  Ensure you have access to an Atlas cluster with write permissions to create 
  the new database to where you will migrate the data. 

- PostgreSQL version 16 or higher: Ensure you have access to a PostgreSQL 
  database server instance with permissions to create a new database and user. 
  The instance can be in the cloud, on-prem, or on your local machine. In 
  addition to PostgreSQL, install the following PostgreSQL Client Applications:
  
  - `psql <https://www.postgresql.org/docs/15/app-psql.html>`__: a command-line 
    application that allows you to interactively type in queries, issue them to 
    PostgreSQL, and see the query results.
    
  - `pg_restore <https://www.postgresql.org/docs/15/app-pgrestore.html>`__: A 
    command-line application that restores the PostgreSQL database from the 
    sample archive file. 

Additionally, download the ``mongodb_insurance_model.tar`` 
`sample archive file <https://github.com/mongodb-industry-solutions/insurance-relational-refactoring>`__. 
This file contains all the tables, relationships, and sample data from the Party 
Role model in a tabular format.

To replicate the Party Role model in PostgreSQL, follow the following steps: 

.. procedure:: 
   :style: normal 

   .. step:: Connect to the PostgreSQL database 

      .. code-block:: 
         
         psql -h <host> -p <port> -U <user> -d <database>

      If you have a newly installed local instance with default 
      parameters, use ``127.0.0.1`` as your host, ``5432`` as your 
      port, ``postgres`` as your database, and type ``whoami`` in your 
      terminal for a default username.

   .. step:: Create a database to load your data 

      .. code-block:: 
         
         CREATE DATABASE mongodb_insurance_model;

   .. step:: Create a user that has access to the new database 

      .. code-block:: 
         
         CREATE USER istadmin WITH PASSWORD '<password>';
         ALTER DATABASE mongodb_insurance_model OWNER TO istadmin;
      
      Ensure that you replace ``<password>`` with a strong password of 
      your choice.

   .. step:: Populate the database with the Party Role model. 

      Navigate to the folder where you downloaded the archive file's 
      backup of the database and run the following command to load the 
      data: 

      .. code-block:: 
         
         pg_restore -h <host> -p <port> -U <user> -d mongodb_insurance_model mongodb_insurance_model.tar

   .. step:: Verify the successful restore of the database 

      .. code-block:: 

         psql -h <host> -p <port> -U <user> -d mongodb_insurance_model -c "SELECT * FROM pg_catalog.pg_tables WHERE schemaname='omg';"

      You should see a list of 21 tables similar to the following image: 

      .. image:: /img/mapping-rules/mapping-rule-insurance-tables.png
         :alt: List of 21 tables in the Party Role model

Steps 
-----

The example tutorial consists of the following steps:

.. procedure:: 
   :style: normal 

   .. step:: Connect to Relational Migrator 

      Connect your PostgreSQL database to {+rel-mig+}. See 
      :ref:`rm-example-connect`.

   .. step:: Refactor the Party domain 

      Refactor the Party domain in the MongoDB view of {+rel-mig+}. See
      :ref:`rm-example-refactor-party-domain`.

   .. step:: Refactor the Policy domain 

      Refactor the Policy domain in the MongoDB view of {+rel-mig+}. See
      :ref:`rm-example-refactor-policy-domain`.

   .. step:: Refactor the Claim domain 

      Refactor the Claim domain in the MongoDB view of 
      {+rel-mig+}. See :ref:`rm-example-refactor-claim-domain`.

   .. step:: Refactor the Litigation domain 

      Refactor the Litigation domain in the MongoDB view of 
      {+rel-mig+}. See :ref:`rm-example-refactor-litigation-domain`.

   .. step:: Migrate your data to MongoDB

      Migrate your data to your MongoDB instance by using the {+rel-mig+}. See 
      :ref:`rm-example-insurance-migrate-data`.

.. toctree::
   :titlesonly:
   :hidden:

   Connect to Relational Migrator </mapping-rules/example-insurance-data/connect>
   Refactor the Party Domain </mapping-rules/example-insurance-data/refactor-party-domain>
   Refactor the Policy Domain </mapping-rules/example-insurance-data/refactor-policy-domain>
   Refactor the Claim Domain </mapping-rules/example-insurance-data/refactor-claim-domain> 
   Refactor the Litigation Domain </mapping-rules/example-insurance-data/refactor-litigation-domain>
   Migrate Your Data </mapping-rules/example-insurance-data/migrate-data>  
