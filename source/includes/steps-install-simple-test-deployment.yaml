title: "Set up a **RHEL 6+** or **Amazon Linux** server that meets the following requirements:"
stepnum: 1
ref: set-up-server
content: |
  - The server must have 15 GB of memory and 50 GB of disk space for the  root partition. You can meet the size requirements by using an Amazon Web Services EC2 ``m3.xlarge`` instance and changing the size of the root partition from 8 GB to 50 GB. When you log into the instance, execute "``df -h``" to verify the root partition has 50 GB of space.

  - You must have root access to the server.
---
title: "Configure the ``yum`` package management system to install the latest stable release of MongoDB."
stepnum: 2
ref: config-yum
pre: |
  Issue the following command to set up a ``yum`` repository definition:
action:
  language: sh
  code: |
    echo "[MongoDB]
    name=MongoDB Repository
    baseurl=http://downloads-distro.mongodb.org/repo/redhat/os/x86_64
    gpgcheck=0
    enabled=1" | sudo tee /etc/yum.repos.d/mongodb.repo
---
title: "Install MongoDB."
stepnum: 3
ref: install-mongodb
pre: |
  Issue the following command to install the latest stable release of MongoDB:
action:
  language: sh
  code: |
    sudo yum install -y mongodb-org mongodb-org-shell
---
title: "Create the data directory for the |application| Database."
stepnum: 4
ref: create-data-dir
action: 
  - pre: |
      Issue the following two commands to create the data directory and
      change its ownership:
    language: sh
    code: |
      sudo mkdir -p /data/appdb
      sudo chown -R mongod:mongod /data
  - pre: |
      **OPTIONAL:** To also install the Backup feature, issue following
      additional commands for the Backup Database:
    language: sh
    code: |
      sudo mkdir -p /data/backup
      sudo chown mongod:mongod /data/backup
---
title: "Start the MongoDB backing instance for the |application| Database."
stepnum: 5
ref: start-mongod-instance
action: 
  - pre: |
      Issue the following command to start MongoDB as the ``mongod`` user.
      Start MongoDB on port ``27017`` and specify the ``/data/appdb`` for
      both data files and logs. Include the ``--fork`` option to run the
      process in the background and maintain control of the terminal.
    language: sh
    code: |
      sudo -u mongod mongod --port 27017 --dbpath /data/appdb --logpath /data/appdb/mongodb.log --fork
  - pre: |
      **OPTIONAL:** To also install the Backup feature, issue following
      command to start a MongoDB instance similar to the other but on port
      ``27018`` and with the data directory and log path of the Backup
      Database:
    language: sh
    code: |
      sudo -u mongod mongod --port 27018 --dbpath /data/backup --logpath /data/backup/mongodb.log --fork
---
title: "Download the |onprem| package."
stepnum: 6
ref: application-package-download
content: |
  a. In a browser, go to `http://www.mongodb.com/download <http://www.mongodb.com/download>`_.

  b. Fill out and submit the subscription form.

  c. On the :guilabel:`MongoDB Enterprise Downloads` page, scroll to the :guilabel:`MongoDB Ops Manager` section and click the :guilabel:`here` link.

  d. On the :guilabel:`Ops Manager Download` page, acknowledge the recommendation to contact MongoDB for production installs.

  e. On the :guilabel:`MongoDB Ops Manager Downloads` page, copy the link address of the :guilabel:`RPM` link for Monitoring, Automation and Core. **OPTIONAL:** If you will install Backup, copy the link address of the :guilabel:`RPM` link for Backup as well.

  f. Open a system prompt.

  g. Download the |onprem| package by issuing  a ``curl`` command that uses the link address copied for the RPM for Monitoring, Automation and Core:

     .. code-block:: none

        curl -OL <link-address-for-ops-manager-rpm>

     **OPTIONAL:** Download the Backup Daemon package by issuing a ``curl`` command that uses the link address copied for the Backup RPM:

     .. code-block:: none

        curl -OL <link-address-for-backup-rpm>

---
title: "Install |onprem|."
stepnum: 7
ref: application-package-install
action: 
  - pre: |
      Install the *Monitoring, Automation and Core* RPM package that you downloaded.
      Issue the ``rpm --install`` command with root
      privileges and specify the package name:
    language: sh
    code: |
      sudo rpm --install <ops-manager-rpm>
  - pre: |
      **OPTIONAL:** To also install Backup, issue the ``rpm --install``
      command with root privileges and specify the *Backup* RPM package:
    language: sh
    code: |
      sudo rpm --install <rpm-package-for-backup>
---
title: "Get your server's public IP address."
stepnum: 8
ref: public-host-name
pre: |
  If you are using an EC2 instance, this is available on the instance's
  ``Description`` tab.
action:
  pre: |
    Alternately, you can get the public IP address by issuing the following:
  language: sh
  code: |
    curl -s http://whatismijnip.nl |cut -d " " -f 5
---
title: "Configure |onprem|."
stepnum: 9
ref: configure-ops-man-app
pre: |
  Edit ``/opt/mongodb/mms/conf/conf-mms.properties`` with root privileges
  and set the following options. For detailed information on each option,
  see :doc:`/reference/configuration`.
action:
  - pre: |
      Set :setting:`mms.centralUrl` as
      follows, where ``<ip_address>`` is the IP address of the server running
      the |application|.
    language: cfg
    code: |
      mms.centralUrl=http://<ip_address>:8080
  - pre: |
      Set the following :ref:`email-address-settings` as appropriate.
      You can use the same email address throughout, or specify a
      different address for each field.
    language: cfg
    code: |
      mms.fromEmailAddr=<email_address>
      mms.replyToEmailAddr=<email_address>
      mms.adminFromEmailAddr=<email_address>
      mms.adminEmailAddr=<email_address>
      mms.bounceEmailAddr=<email_address>
  - pre: |
      Set the :setting:`mongo.mongoUri` option to the  port
      hosting the |application| Database:
    language: cfg
    code: |
      mongo.mongoUri=mongodb://localhost:27017
  - pre: |
      **OPTIONAL:** If you installed the Backup Daemon, edit
      ``/opt/mongodb/mms-backup-daemon/conf/conf-daemon.properties`` with
      root privileges and set the :setting:`mongo.mongoUri` value to the
      port hosting the |application| Database:
    language: cfg
    code: |
      mongo.mongoUri=mongodb://localhost:27017
---
title: "Start the |application|."
stepnum: 10
ref: start-the-application
action:
  - pre: |
      To start the |application|, issue the following:
    language: sh
    code: |
      sudo service mongodb-mms start
  - pre: |
      **OPTIONAL:** To start the Backup Daemon, issue the following:
    language: sh
    code: |
      sudo service mongodb-mms-backup-daemon start
---
title: "Open the |onprem| home page."
stepnum: 11
ref: home-page
pre: |
  In a browser, enter the following URL, where ``<ip_address>`` is the
  IP address of the server:
action:
  language: none
  code: |
    http://<ip_address>:8080
---
title: "To begin testing |onprem|, click :guilabel:`Register` and follow the prompts to create the first user and group."
stepnum: 12
ref: begin-testing
content: |
  The first user receives :ref:`Global Owner <global-owner-role>`
  permissions for the test install.
---
title: "At the Welcome page, follow the prompts to set up your first deployment."
stepnum: 13
ref: set-up-monitoring
content: |
  **OPTIONAL:** If you installed the Backup Daemon, do the following after
  setting up your first deployment:
  click the :guilabel:`Admin` link in at the top right of
  the |onprem| page and click the :guilabel:`Backup` tab. In the
  :guilabel:`<hostname>:<port>` field, enter ``localhost:27018`` and click
  :guilabel:`Save`.
...
