.. meta::
   :robots: noindex, nosnippet


.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol



Annotation Type RealmClass
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _io_realm_annotations_RealmClass:



io.realm.annotations
====================

**Implemented interfaces:**



- `java.lang.annotation.Annotation <https://docs.oracle.com/javase/7/docs/api/java/lang/annotation/Annotation.html>`__ 


Interface used to mark a class that can be persisted by Realm.


Optional Element Summary
========================

.. list-table::
   :header-rows: 1
   
   * - Modifier and Type
     - Optional Element and Description
   
   * - public **boolean**
       
       
     - Define objects of this type as "Embedded".
       
       
       
   
   * - public :ref:`RealmNamingPolicy <io_realm_annotations_RealmNamingPolicy>` 
       
       
     - The naming policy applied to all fields in this class.
       
       
       
   
   * - public `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ 
       
       
     - Manually set the internal name used by Realm for this class.
       
       
       
   
   * - public `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ 
       
       
     - Manually set the internal name used by Realm for this class.
       
       
       
   
   


Element Detail
==============

.. _embedded:

.. _embedded__:

.. _RealmClass_embedded:

.. _RealmClass_embedded__:

.. _io_realm_annotations_RealmClass_embedded:

.. _io_realm_annotations_RealmClass_embedded__:

.. list-table::
   :header-rows: 1
   
   * - embedded
   
   * - ``public boolean embedded`` 
       
       Define objects of this type as "Embedded". Embedded objects have a slightly different behavior than normal objects:
       
       - They must have exactly 1 parent linking to them when the embedded object is added to the Realm. Embedded objects can be the parent of other embedded objects. The parent cannot be changed later, except by copying the object.
          
          
       - They cannot have fields annotated with ``@PrimaryKey`` .
          
          
          
          
       - When a parent object is deleted, all embedded objects are also deleted.
          
          
       - It is possible to define an easy reference to the parent object using the ``@LinkingObjects``  annotation:
          
          
          
                   
          
          .. code-block:: java
          
             
                           @LinkingObjects
                           public Parent parent;
                      
          
          
                   
          
          
       
       
       
       
       
       **Default:**
       ``false`` 
       
       
   
   
.. _fieldNamingPolicy:

.. _fieldNamingPolicy__:

.. _RealmClass_fieldNamingPolicy:

.. _RealmClass_fieldNamingPolicy__:

.. _io_realm_annotations_RealmClass_fieldNamingPolicy:

.. _io_realm_annotations_RealmClass_fieldNamingPolicy__:

.. list-table::
   :header-rows: 1
   
   * - fieldNamingPolicy
   
   * - ``public RealmNamingPolicy fieldNamingPolicy`` 
       
       The naming policy applied to all fields in this class. The default policy is :ref:`RealmNamingPolicy.NO_POLICY <io_realm_annotations_RealmNamingPolicy_NO_POLICY>` .
       
       It is possible to override the naming policy for each field by using the :ref:`RealmField <io_realm_annotations_RealmField>`  annotation.
       
       
       
       
       
       
       **Default:**
       ``io.realm.annotations.RealmNamingPolicy.NO_POLICY`` 
       
       
       
       .. seealso::
       
       
          
          - :ref:`io.realm.annotations.RealmNamingPolicy for more information about what setting this policy means. <io_realm_annotations_RealmNamingPolicy>` 
             
             
             
          
          
          
       
       
   
   
.. _name:

.. _name__:

.. _RealmClass_name:

.. _RealmClass_name__:

.. _io_realm_annotations_RealmClass_name:

.. _io_realm_annotations_RealmClass_name__:

.. list-table::
   :header-rows: 1
   
   * - name
   
   * - ``public String name`` 
       
       Manually set the internal name used by Realm for this class. If this class is part of any modules, this will also override any name policy set using :ref:`RealmModule.classNamingPolicy() <io_realm_annotations_RealmModule_classNamingPolicy__>` .
       
       
       
       
       **Default:**
       ``""`` 
       
       
       
       .. seealso::
       
       
          
          - :ref:`io.realm.annotations.RealmNamingPolicy for more information about what setting the name means. <io_realm_annotations_RealmNamingPolicy>` 
             
             
             
          
          
          
       
       
   
   
.. _value:

.. _value__:

.. _RealmClass_value:

.. _RealmClass_value__:

.. _io_realm_annotations_RealmClass_value:

.. _io_realm_annotations_RealmClass_value__:

.. list-table::
   :header-rows: 1
   
   * - value
   
   * - ``public String value`` 
       
       Manually set the internal name used by Realm for this class. If this class is part of any modules, this will also override any name policy set using :ref:`RealmModule.classNamingPolicy() <io_realm_annotations_RealmModule_classNamingPolicy__>` .
       
       
       
       
       **Default:**
       ``""`` 
       
       
       
       .. seealso::
       
       
          
          - :ref:`io.realm.annotations.RealmNamingPolicy for more information about what setting the name means. <io_realm_annotations_RealmNamingPolicy>` 
             
             
             
          - :ref:`name() <io_realm_annotations_RealmClass_name__>` 
             
             
             
          
          
          
       
       
   
   

