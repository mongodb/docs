.. _scala-run-command:

============
Run Commands
============

.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: code example, database command, server management

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Not all database commands have a specific helper method. However, you can
run any MongoDB command by using the ``MongoDatabase.runCommand()``
method.

To learn more about MongoDB commands, see :manual:`Database Commands </reference/command/>`
in the Server manual.

Prerequisites
-------------

.. include:: /includes/prereq-restaurants.rst

.. code-block:: scala
   
   import org.mongodb.scala._

.. include:: /includes/obs-note.rst

Connect to a MongoDB Deployment
-------------------------------

First, connect to a MongoDB deployment, then declare and define
a ``MongoDatabase`` instance.

The following code connects to a standalone
MongoDB deployment running on ``localhost`` on port ``27017``. Then, it
defines the ``database`` variable to refer to the ``test`` database:

.. code-block:: scala

   val mongoClient: MongoClient = MongoClient()
   val database: MongoDatabase = mongoClient.getDatabase("test")

To learn more about connecting to MongoDB deployments,
see the :ref:`scala-connect` guide.

Run the buildInfo Command
-------------------------

To run the ``buildInfo`` command, construct a ``Document`` object that
specifies the command and pass it as a parameter to the ``runCommand()`` method.

The following sample code runs the ``buildInfo`` command and prints
the results:

.. code-block:: scala

   database.runCommand(Document("buildInfo" -> 1)).printResults()

To view a list of available MongoDB commands, see :manual:`Database
Commands </reference/command/>` in the Server manual.
