.. _create-k8s-credentials:
.. _create-k8s-secret:

=========================================
Create Credentials for the |k8s-op-short|
=========================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

For the |k8s-op-short| to create or update |k8s-objs| in your |com|
Project, you need to store your :ref:`Programmatic API Key 
<create-org-app-api-key>` in your :doc:`secret storage tool </tutorial/secret-storage>`. 

Multiple secrets can exist in the same namespace. Each user should
have their own secret.

You can follow the :ref:`create-k8s-secret-procedure` below to 
manually store the :ref:`Programmatic API Key 
<create-org-app-api-key>` as a |k8s| |k8s-secret|. Alternatively, you can use the |cloud| 
:cloudmgr:`UI </tutorial/nav/k8s-config-for-mdb-resource/>` or the 
|onprem| :opsmgr:`UI </tutorial/nav/k8s-config-for-mdb-resource/>` to 
automatically generate the Kubernetes secret YAML file, which you can 
then apply to your Kubernetes environment.

To use a different |secret-store|, see :doc:`Configure Secret Storage </tutorial/secret-storage>`. You
don't need to complete the following procedure if you use a different |secret-store|.

Prerequisites
-------------

To create credentials for the |k8s-op-short|, you must:

1. Have or create an |onprem|
   :opsmgr:`Organization </tutorial/manage-organizations>`.

   .. note::

      Unlike earlier |k8s-op-short| versions, use the Operator to
      create your |mms| project. The Operator adds additional metadata
      to Projects that it creates to help manage the deployments.

#. Have or generate a
   :ref:`Programmatic API Key <create-org-app-api-key>`.

#. Grant this new |svc-api-key| the :authrole:`Project Owner` role.

#. Add the |ipaddr| or |cidr| block of any hosts that serve the
   |k8s-op-short| to the
   :opsmgr:`API Whitelist </tutorial/configure-public-api-access/>`.

.. _create-k8s-secret-procedure:

Procedure
---------

To create your |k8s| secret:

1. Make sure you have the Public and Private Keys for your desired
   |onprem| |svc-api-key|.

2. Invoke the following |k8s| command to create your secret:

   .. code-block:: sh

      kubectl -n <metadata.namespace> \
        create secret generic <myCredentials> \
        --from-literal="publicKey=<publicKey>" \
        --from-literal="privateKey=<privateKey>"

   .. note::

      The ``-n`` flag limits the |k8s-ns| to which this secret
      applies. All MongoDB |k8s| resources must be in the same
      namespace with the |k8s-secrets| and |k8s-configmaps|. The
      |k8s-op-short| does not use either the secrets or ConfigMaps.

   .. note::

      The deprecated version of this command specifies a ``user`` and ``publicApiKey``
      instead of a ``publicKey`` and ``privateKey``. |k8s-op-short| accepts
      either version for authentication.

3. Invoke the following |k8s| command to verify your secret:

   .. code-block:: sh

      kubectl describe secrets/<myCredentials> -n <metadata.namespace>

   This command returns a secret description in the shell:

   .. code-block:: sh

      Name:         <myCredentials>
      Namespace:    <metadata.namespace>
      Labels:       <none>
      Annotations:  <none>

      Type:  Opaque

      Data
      ====
      privateKey:  31 bytes
      publicKey:          22 bytes

