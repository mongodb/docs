=====================
Bulk.find.updateOne()
=====================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. include:: /includes/fact-bulkwrite.rst

Description
-----------

.. method:: Bulk.find.updateOne(<update>)

   .. versionadded:: 2.6

   Adds a single document update operation to a bulk operations list.

   Use the :method:`Bulk.find()` method to specify the condition that
   determines which document to update. The
   :method:`Bulk.find.updateOne()` method limits the update to a single
   document. To update multiple documents, see
   :method:`Bulk.find.update()`.

   :method:`Bulk.find.updateOne()` accepts the following parameter:

   .. include:: /includes/apiargs/method-Bulk.find.updateOne-param.rst

   To specify an :term:`upsert: true <upsert>` for this operation, see
   :method:`Bulk.find.upsert()`. To replace a document wholesale, see
   :method:`Bulk.find.replaceOne()`.

Behavior
--------


If the ``<update>`` document contains only :ref:`update operator
<update-operators>` expressions, as in:

.. code-block:: javascript

   {
     $set: { status: "D" },
     $inc: { points: 2 }
   }

Then, :method:`Bulk.find.updateOne()` updates only the corresponding
fields, ``status`` and ``points``, in the document.

Example
-------

The following example initializes a :method:`Bulk()` operations builder
for the ``items`` collection, and adds various
:method:`~Bulk.find.updateOne` operations to the list of operations.

.. code-block:: javascript

   var bulk = db.items.initializeUnorderedBulkOp();
   bulk.find( { status: "D" } ).updateOne( { $set: { status: "I", points: "0" } } );
   bulk.execute();

.. seealso::

   - :method:`db.collection.initializeUnorderedBulkOp()`

   - :method:`db.collection.initializeOrderedBulkOp()`

   - :method:`Bulk.find()`

   - :method:`Bulk.find.update()`

   - :method:`Bulk.find.replaceOne()`

   - :method:`Bulk.execute()`

   - :ref:`All Bulk Methods <bulk-methods>`
