=============================================
Deploy a Geographically Redundant Replica Set
=============================================

.. default-domain:: mongodb

Overview
--------

This tutorial outlines the process for deploying a :term:`replica set` with members
in multiple locations. The tutorial addresses three-member sets,
four-member sets, and sets with more than four members.

For appropriate background, see :doc:`/replication` and
:doc:`/core/replica-set-architectures`. For related
tutorials, see :doc:`/tutorial/deploy-replica-set` and
:doc:`/tutorial/expand-replica-set`.

Considerations
--------------

While :term:`replica sets <replica set>` provide basic protection
against single-instance failure, replica sets whose members are all
located in a single facility are susceptible to errors in that
facility. Power outages, network interruptions, and natural disasters
are all issues that can affect replica sets whose members are colocated.
To protect against these classes of failures, deploy a
replica set with one or more members in a geographically distinct
facility or data center to provide redundancy.

Prerequisites
-------------

In general, the requirements for any geographically redundant replica
set are as follows:

- Ensure that a majority of the :ref:`voting members
  <replica-set-non-voting-members>` are within a primary facility,
  "Site A". This includes :doc:`priority 0 members
  </core/replica-set-priority-0-member>` and :doc:`arbiters
  </core/replica-set-arbiter>`. Deploy other members in
  secondary facilities, "Site B", "Site C", etc., to provide additional copies
  of the data. See :ref:`determine-geographic-distribution` for more information 
  on the voting requirements for geographically redundant replica sets.

- If you deploy a replica set with an even number of members, deploy
  an :doc:`arbiter </core/replica-set-arbiter>` on Site A. The arbiter must
  be on site A to keep the majority there.

For instance, for a three-member replica set you need two instances in a
Site A, and one member in a secondary
facility, Site B. Site A should be the same facility or
very close to your primary application infrastructure
(i.e. application servers, caching layer, users, etc.)

A four-member replica set should have at least two members in Site A,
with the remaining members in one or more secondary sites, as well as a
single :term:`arbiter` in Site A.

For all configurations in this tutorial, deploy each replica set member
on a separate system. Although you may deploy more than one replica set member on a
single system, doing so reduces the redundancy and capacity
of the replica set. Such deployments are typically for testing
purposes and beyond the scope of this tutorial.

This tutorial assumes you have installed MongoDB on each system that
will be part of your replica set. If you have not already installed 
MongoDB, see the :ref:`installation tutorials <tutorial-installation>`.

Procedures
----------

General Considerations
~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-prod-rs-deployment-considerations.rst

.. _replica-set-deploy-distributed-three-member:

Deploy a Geographically Redundant Three-Member Replica Set
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /images/replica-set-three-members-geographically-distributed.rst

.. include:: /includes/steps/deploy-geographically-distributed-replica-set-3member.rst

.. _replica-set-deploy-distributed-four-member:

Deploy a Geographically Redundant Four-Member Replica Set
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

A geographically redundant four-member deployment has two additional
considerations:

- One host (e.g. ``mongodb3.example.net``) must be an :term:`arbiter`. 
  This host can run on a system that is also used for an application server
  or on the same machine as another MongoDB process.  

- You must decide how to distribute your systems. There are three
  possible architectures for the four-member replica set:

  - Three members in Site A, one :ref:`priority 0 member <replica-set-secondary-only-members>`
    in Site B, and an arbiter in Site A.

  - Two members in Site A, two :ref:`priority 0 members
    <replica-set-secondary-only-members>` in Site B, and an
    arbiter in Site A.

  - Two members in Site A, one priority 0 member in Site B, one
    priority 0 member in Site C, and an arbiter in site A.

  In most cases, the first architecture is preferable because it is the
  least complex.

To deploy a geographically redundant four-member set:
`````````````````````````````````````````````````````

.. include:: /includes/steps/deploy-geographically-distributed-replica-set-4member.rst

Deploy a Geographically Redundant Set with More than Four Members
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The above procedures detail the steps necessary for deploying a 
geographically redundant replica set. Larger replica set deployments
follow the same steps, but have additional considerations:

- Never deploy more than seven voting members.

- If you have an even number of members, use :ref:`the procedure for a
  four-member set <replica-set-deploy-distributed-four-member>`).
  Ensure that a single facility, "Site A", always has a majority of
  the members by deploying the :term:`arbiter` in that site. For
  example, if a set has six members, deploy at least three voting
  members in addition to the arbiter in Site A, and the remaining
  members in alternate sites.

- If you have an odd number of members, use :ref:`the procedure for a
  three-member set <replica-set-deploy-distributed-three-member>`.
  Ensure that a single facility, "Site A" always has a majority of the
  members of the set. For example, if a set has five members, deploy
  three members within Site A and two members in other facilities.

- If you have a majority of the members of the set *outside* of Site A
  and the network partitions to prevent communication between sites,
  the current primary in Site A will step down, even if none of the
  members outside of Site A are eligible to become primary.
