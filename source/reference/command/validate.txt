========
validate
========

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. dbcommand:: validate

   The :dbcommand:`validate` command checks the structures within a
   namespace for correctness by scanning the collection's data and
   indexes. The command returns information regarding the on-disk
   representation of the collection.

   .. note::

      :dbcommand:`validate` command does not support :doc:`views
      </core/views>` and raises an error when run against a view.


   :dbcommand:`validate` has the following prototype form:

   .. code-block:: javascript

      { validate: <collection> }

   You may also specify one of the following options:

   - ``full: true`` provides a more thorough scan of the data.

     .. versionchanged:: 3.6

        .. include:: /includes/fact-validate-wiredtiger-full-option.rst

   - ``scandata: false`` skips the scan of the collection data
     without skipping scans of any indexes.

   The :binary:`~bin.mongo` shell also provides a wrapper
   :method:`db.collection.validate()`:

   .. code-block:: javascript

      db.collection.validate();

Behavior
--------

The :dbcommand:`validate` command can be slow, particularly on
larger data sets. 

The :dbcommand:`validate` command obtains an exclusive lock ``W`` on
the collection. This will block all reads and writes on the collection
until the operation finishes. When run on a secondary, the
:dbcommand:`validate` operation can block all other operations on that
secondary until it finishes.

Examples
--------

Use one of the following forms to validate a collection:

.. code-block:: javascript

   db.collection.validate()
   db.collection.validate(true)
   db.runCommand( { validate: "collection", full: true } )

Output
------

.. include:: /includes/note-output-may-vary.rst

:dbcommand:`validate` produces different output depending on which
:doc:`storage engine</core/storage-engines>` you are using. Specify
``{ full: true }`` for more detailed output.

.. data:: validate.ns

   The full namespace name of the collection. Namespaces include the
   database name and the collection name in the form
   ``database.collection``.

.. data:: validate.nrecords

   The number of :term:`documents <document>` in the collection.

.. data:: validate.nIndexes

   The number of indexes on the collection.

.. data:: validate.keysPerIndex

   A document containing a field for each index. The value for each
   field is the number of keys (or documents referenced) in the index.

.. data:: validate.valid

   A boolean that is ``true`` if :dbcommand:`validate` determines that
   all aspects of the collection are valid. When ``false``, see the
   :data:`~validate.errors` field for more information.

.. data:: validate.errors

   If the collection is not valid (i.e
   :data:`~validate.valid` is false), this field will contain a message
   describing the validation error.

.. data:: validate.ok

   An integer with the value ``1`` when the command succeeds. If the
   command fails the :data:`~validate.ok` field has a value of ``0``.
