stepnum: 1
source:
  file: steps-generate-key-file.yaml
  ref: generate
---
title: Copy the key file to each member of the replica set.
stepnum: 2
ref: copy-key-file
---
title: Start each member of the replica set with the appropriate options.
stepnum: 3
ref: start-mongod
pre: |
  For each member, start a :program:`mongod` and specify the key file and
  the name of the replica set. Also specify other parameters as needed for
  your deployment. For replication-specific parameters, see
  :ref:`cli-mongod-replica-set` required by your deployment.
action:
  - pre: |
      .. include:: /includes/important-unique-replica-set-names.rst
  - pre: |
      The following example specifies parameters through the :option:`--keyFile`
      and :option:`--replSet` command-line options:
    language: javascript
    code: |
      mongod --keyFile /mysecretdirectory/keyfile --replSet "rs0"
  - pre: |
      The following example specifies parameters through a configuration file:
    language: javascript
    code: |
      mongod --config /etc/mongodb.conf
post: |
  In production deployments, you can configure a :term:`control script` to
  manage this process. Control scripts are beyond the scope of this document.
---
title: Connect to one of the replica set members.
stepnum: 4
pre: |
  Connect through the :ref:`localhost exception <localhost-exception>`.
source:
  file: steps-deploy-replica-set.yaml
  ref: open-shell
---
stepnum: 5
source:
  file: steps-deploy-replica-set.yaml
  ref: initiate-rs
---
stepnum: 6
source:
  file: steps-deploy-replica-set.yaml
  ref: verify-rsconf
---
stepnum: 7
source:
  file: steps-deploy-replica-set.yaml
  ref: add-remaining-members
---
stepnum: 8
source:
  file: steps-deploy-replica-set.yaml
  ref: check-status
...
