.. _write-op-insert:

================
Insert Documents
================

.. default-domain:: mongodb

.. meta::
   :description: Insert documents using MongoDB. Creates collection upon first insert.
   :keywords: insert documents, create documents, insert into collection, create collection, MongoDB 3.4, version 3.4 

This page provides examples of insert operations in the
:program:`mongo` shell.

.. admonition:: Creating a Collection
   :class: note

   If the collection does not currently exist, insert operations will
   create the collection.

.. _write-op-insertOne:

Insert a Document via ``db.collection.insertOne()``
---------------------------------------------------

.. versionadded:: 3.2

:method:`db.collection.insertOne()` inserts a *single* :ref:`document
<bson-document-format>` into a collection.

The following example inserts a new document into the ``inventory``
collection. Since the document does not specify an ``_id`` field,
MongoDB adds the ``_id`` field with an ObjectId value to the new
document. See :ref:`write-op-insert-behavior`.


.. class:: copyable-code

.. code-block:: javascript

   db.inventory.insertOne(
      { item: "canvas", qty: 100, tags: ["cotton"], size: { h: 28, w: 35.5, uom: "cm" } }
   )

.. only:: website

   You can run this method in the web shell below:

   .. include:: /includes/fact-mws.rst

:method:`~db.collection.insertOne()` will return a document that
includes the newly inserted document's ``_id`` field value. For an example of
a return document, see :ref:`db.collection.insertOne() reference
<insertOne-examples>`.

To retrieve the document that you just inserted, :ref:`query the collection
<document-query-filter>`:

.. class:: copyable-code

.. code-block:: javascript

   db.inventory.find( { item: "canvas" } )

For more information and examples, see
:method:`db.collection.insertOne()`.

.. _write-op-insertMany:

Insert Multiple Documents via ``db.collection.insertMany()``
------------------------------------------------------------

.. versionadded:: 3.2

:method:`db.collection.insertMany()` can insert *multiple*
:ref:`documents <bson-document-format>` into a collection. Pass an
array of documents to the method.

The following example inserts three new documents into the ``inventory``
collection. Since the documents do not specify an ``_id`` field,
MongoDB adds the ``_id`` field with an ObjectId value to each document.
See :ref:`write-op-insert-behavior`.

.. class:: copyable-code

.. code-block:: javascript

   db.inventory.insertMany([
      { item: "journal", qty: 25, tags: ["blank", "red"], size: { h: 14, w: 21, uom: "cm" } },
      { item: "mat", qty: 85, tags: ["gray"], size: { h: 27.9, w: 35.5, uom: "cm" } },
      { item: "mousepad", qty: 25, tags: ["gel", "blue"], size: { h: 19, w: 22.85, uom: "cm" } }
   ])

.. only:: website

   You can run this method in the web shell below:

   .. include:: /includes/fact-mws.rst

:method:`~db.collection.insertMany()` will return a document that
includes the newly inserted documents ``_id`` field values. See the
:ref:`reference <insertMany-examples>` for an example.

To retrieve the inserted documents, :ref:`query the collection
<read-operations-query-document>`:

.. code-block:: javascript

   db.inventory.find()

For more information and examples, see
:method:`db.collection.insertMany()`.

.. _write-op-insert-behavior:

Insert Behavior
---------------

Collection Creation
~~~~~~~~~~~~~~~~~~~

If the collection does not currently exist, insert operations will
create the collection.

``_id`` Field
~~~~~~~~~~~~~

.. include:: /includes/fact-id-field.rst

Atomicity
~~~~~~~~~

All write operations in MongoDB are atomic on the level of a single
document. For more information on MongoDB and atomicity, see
:doc:`/core/write-operations-atomicity`

Write Acknowledgement
~~~~~~~~~~~~~~~~~~~~~

With write concerns, you can specify the level of acknowledgement
requested from MongoDB for write operations. For details, see
:doc:`/reference/write-concern`.

.. seealso::

   - :method:`db.collection.insertOne()`

   - :method:`db.collection.insertMany()`

   - :ref:`additional-inserts`

.. class:: hidden

   .. toctree::
      :titlesonly: 

      /reference/insert-methods
