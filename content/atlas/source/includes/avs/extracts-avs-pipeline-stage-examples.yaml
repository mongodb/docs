ref: avs-basic-query-desc
content: |
  The following query uses the :pipeline:`$vectorSearch` stage to search
  the ``plot_embedding`` field using vector embeddings for the string
  *time travel*. It considers up to ``150`` nearest neighbors, and
  returns ``10`` documents in the results. The query also specifies a
  :pipeline:`$project` stage to do the following:  

  - Exclude the ``_id`` field and include only the ``plot`` and
    ``title`` fields in the results.  
  - Add a field named ``score`` that shows the
    :ref:`vector search score <vectorSearch-agg-pipeline-score>` for
    each document in the results.  

---
ref: avs-filter-query-desc
content: |
  The following query filters the documents for movies released between 
  January 01, ``1955`` and January 01, ``1975`` before performing the
  semantic search against the sample vector data. It uses the
  :query:`$and` operator to perform a logical ``AND`` operation of the
  specified dates. It then searches the ``plot_embedding`` field in the
  filtered documents for ``150`` nearest neighbors using the vector
  embeddings for the string *kids adventure*, and returns ``10`` 
  documents in the results. The query also specifies a
  :pipeline:`$project` stage to do the following:  

  - Exclude the ``_id`` field and include only ``plot``, ``title``,
    and ``year`` fields in the results.
  - Add a field named ``score`` that shows the vector search score
    of the documents in the results.

---
ref: avs-filter-query-results
content: |
  {+avs+} filters the documents based on the ``year`` field value that
  ranges between 1955 and 1975. It returns documents that summarize
  children's adventures in the plot for movies released between 1955 and
  1975.  

  .. seealso:: Additional Filter Examples
      
     The :ref:`vector-search-tutorial` tutorial demonstrates other
     pre-filters in semantic search queries against the embedded data in
     the ``sample_mflix.embedded_movies`` collection. 

---
ref: avs-enn-query-description
content: |
  The following query uses the :pipeline:`$vectorSearch` stage to search
  the ``plot_embedding`` field using vector embeddings for the string
  *world war*. It requests exact matches and limits the results to
  ``10`` documents only. The query also specifies a :pipeline:`$project`
  stage to do the following:

  - Exclude the ``_id`` field and include only the ``plot``, ``title``,
    and ``year`` fields in the results.
  - Add a field named ``score`` that shows the vector search score
    of the documents in the results.

...
