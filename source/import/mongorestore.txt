==========================
Seed with ``mongorestore``
==========================

.. default-domain:: mongodb


You can use |mongodump| and |mongorestore| to seed |service-fullname|
{+cluster+} with data from an existing MongoDB standalone or replica set.
For guidance on seeding data from an existing MongoDB sharded {+cluster+},
contact |service| support by clicking :guilabel:`Support` in the
left-hand navigation of the |service| UI.

While you can :doc:`scale </scale-cluster>` an ``M0`` Free Tier {+cluster+} to
an ``M10+`` paid {+cluster+} using the |service| UI, you can also use
:binary:`mongodump` and :binary:`mongorestore` procedures in this section
to copy data from an ``M0`` Free Tier {+cluster+} to an ``M10+`` {+cluster+}.


Considerations
--------------

Recommended ``mongodump`` and ``mongorestore`` Version
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Use the latest stable release version of |mongodump| and |mongorestore|
for this procedure.

Downtime Required
~~~~~~~~~~~~~~~~~

To ensure an up-to-date migration, schedule a maintenance window where you
can stop all writes to your source {+cluster+}. Any write operations issued to
the source {+cluster+} after the |mongodump| portion of the procedure completes
are not migrated to the destination {+cluster+}.

After |mongorestore| completes data restoration, you must cut-over your
applications to the destination |service| {+cluster+} before resuming
write operations. To connect to |a-service| {+cluster+}, see
:doc:`/connect-to-database-deployment`.

The total amount of required downtime depends on factors such as the size
of data being migrated and the network connection between your source {+cluster+}
and |service|. If you have questions or concerns about extended downtime,
contact |service| support by clicking :guilabel:`Support` from the
left-hand navigation of the {+atlas-ui+}.

For a guided minimal-downtime migration procedure, see
:ref:`Replica Set Live Migration <live-import-replica>` or
:ref:`Sharded Cluster Live Migration <live-import-sharded>`.

Cluster Security
~~~~~~~~~~~~~~~~

|service| manages database user creation. If the source {+cluster+} enforces authentication:

- Allow read access to the primary.
- If you want to use :binary:`mongorestore <bin.mongorestore>` with the
  :option:`--oplogReplay <mongorestore.--oplogReplay>` option, you must delete
  the ``admin`` and ``config`` directories from the ``dump`` directory that
  :binary:`mongodump <bin.mongodump>` creates. The ``admin`` and ``config``
  directories contain database user information that you can't add to
  |a-service| {+cluster+} with ``mongorestore``. Use the |mongorestore|
  :option:`--nsExclude <mongorestore.--nsExclude>` to exclude the
  ``admin.system.*`` namespace.

You can't migrate any existing user or role information to |service|.
For the destination |service| {+cluster+}, create the appropriate database
users for supporting your application's usage patterns. Update your applications
as part of the cut-over procedure to use the new database users. To learn
more, see :ref:`mongodb-users`.

Performance
~~~~~~~~~~~

This procedure requires running |mongodump| and |mongorestore| on a host
in the source {+cluster+}. These programs use system resources such as
CPU and memory, and may impact the performance of the host.

Run this procedure during non-peak system usage, or during a scheduled
maintenance window. If the source is a replica set, you can run this
procedure from the host of a :term:`secondary` member. After stopping
writes to the {+cluster+}, allow the secondary to catch up to the primary
before starting this procedure.

Pipe Behavior
~~~~~~~~~~~~~

This procedure uses
`linux pipes <http://man7.org/linux/man-pages/man2/pipe.2.html>`__ to stream
the output of |mongodump| to |mongorestore|. If the |mongorestore| process
can't keep up with the |mongodump| process, you may see broken pipe errors.

For guidance on addressing persistent broken pipe errors, contact |service|
support by clicking :guilabel:`Support` from the left-hand navigation of
the |service| UI.

Procedure
---------

The following tutorial uses |mongodump| and |mongorestore| to upload data
from an existing MongoDB {+cluster+} to an |service| {+cluster+}:

.. include:: /includes/steps/migrate-using-mongorestore.rst

.. seealso::
   
   - :binary:`mongodump reference page <bin.mongodump>`
   - :binary:`mongorestore reference page <bin.mongorestore>`
