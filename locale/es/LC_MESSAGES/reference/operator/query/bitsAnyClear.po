# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# 5d85644cca9e44ac8a7755df59aa2ce5
#: ../source/reference/operator/query/bitsAnyClear.txt:3
msgid "$bitsAnyClear"
msgstr ""

# af0e47e3e508449eb423eab2120f9e13
#: ../source/reference/operator/query/bitsAnyClear.txt
msgid "On this page"
msgstr ""

# 953d832290de48a18b7290c05437020e
#: ../source/reference/operator/query/bitsAnyClear.txt:17
msgid ""
":query:`$bitsAnyClear` matches documents where *any* of the bit positions"
" given by the query are clear (i.e. ``0``) in ``field``."
msgstr ""

# a1bbcabf38014af89445ca98e870024a
#: ../source/includes/extracts/fact-query-bitsanyclear-description.rst:3
msgid "``{ <field>: { $bitsAnyClear: <numeric bitmask> } }``"
msgstr ""

# 384c10c2b4514823b7700835aa7b5a95
#: ../source/includes/extracts/fact-query-bitsanyclear-description.rst:5
msgid ""
"``{ <field>: { $bitsAnyClear: <`` :bsontype:`BinData <data_binary>` "
"``bitmask> } }``"
msgstr ""

# e67d849c05454843a6a0a2ad450053b3
#: ../source/includes/extracts/fact-query-bitsanyclear-description.rst:7
msgid "``{ <field>: { $bitsAnyClear: [ <position1>, <position2>, ... ] } }``"
msgstr ""

# 20b8ca0102c849bd953caf20581ff06a
#: ../source/includes/extracts/fact-query-bitsanyclear-description.rst:9
msgid ""
"The ``field`` value must be either numerical or a :bsontype:`BinData "
"<data_binary>` instance. Otherwise, :query:`$bitsAnyClear` will not match"
" the current document."
msgstr ""

# 52f43822acd44956ac77ec86e1d6dd37
#: ../source/includes/extracts/fact-query-bitsanyclear-description.rst:16
msgid "Numeric Bitmask"
msgstr ""

# ecbf908055da4f94bc4836513b169152
#: ../source/includes/extracts/fact-query-bitsanyclear-description.rst:14
msgid ""
"You can provide a numeric bitmask to be matched against the operand "
"field. It must be representable as a non-negative 32-bit signed integer. "
"Otherwise, :query:`$bitsAnyClear` will return an error."
msgstr ""

# ee698c2d1a134eb9afeed0f23c3e58eb
# 13ad1fec1c2f476a86096e4db441a395
#: ../source/includes/extracts/fact-query-bitsanyclear-description.rst:20
#: ../source/reference/operator/query/bitsAnyClear.txt:80
msgid "BinData Bitmask"
msgstr ""

# 94233eb933b945c39c6911c8eace762d
#: ../source/includes/extracts/fact-query-bitsanyclear-description.rst:19
msgid ""
"You can also use an arbitrarily large :bsontype:`BinData <data_binary>` "
"instance as a bitmask."
msgstr ""

# 0c340395b1674431b190809605962a93
#: ../source/includes/extracts/fact-query-bitsanyclear-description.rst:25
msgid "Position List"
msgstr ""

# c76fe286e93a4beab7a63141f0da058a
#: ../source/includes/extracts/fact-query-bitsanyclear-description.rst:23
msgid ""
"If querying a list of bit positions, each ``<position>`` must be a non-"
"negative integer. Bit positions start at ``0`` from the least significant"
" bit. For example, the decimal number ``254`` would have the following "
"bit positions:"
msgstr ""

# d5362f539dda49008e8d61d8dd25aa96
#: ../source/includes/extracts/fact-query-bitsanyclear-description.rst:29
msgid "**Bit Value**"
msgstr ""

# ff49d166734b41c395c448c7ba59fe72
# 7b8ce478de9a49bbb8a64826be1fd796
# 91dc257850944867a5b0d1c060f46c28
# 4a40fcb329084db4bcef86f5edeff899
# e71f71adc59846cf84abee2eb80bafb1
# 9ed9649400fb467a9fba774f31d96759
# e605beba18354fbc8faad5e28cd4809c
# dbb8f45892134882b4e4599fb7cc8c7f
#: ../source/includes/extracts/fact-query-bitsanyclear-description.rst:31
#: ../source/includes/extracts/fact-query-bitsanyclear-description.rst:33
#: ../source/includes/extracts/fact-query-bitsanyclear-description.rst:35
#: ../source/includes/extracts/fact-query-bitsanyclear-description.rst:37
#: ../source/includes/extracts/fact-query-bitsanyclear-description.rst:39
#: ../source/includes/extracts/fact-query-bitsanyclear-description.rst:41
#: ../source/includes/extracts/fact-query-bitsanyclear-description.rst:43
#: ../source/includes/extracts/fact-query-bitsanyclear-description.rst:61
msgid "1"
msgstr ""

# 14d6309a807d492383d4fb4fa55ebd3d
# 23fce707fdc14dd9a31c3871fc18058c
#: ../source/includes/extracts/fact-query-bitsanyclear-description.rst:45
#: ../source/includes/extracts/fact-query-bitsanyclear-description.rst:63
msgid "0"
msgstr ""

# 79c271b566954f708b47534127fed684
#: ../source/includes/extracts/fact-query-bitsanyclear-description.rst:47
msgid "**Position**"
msgstr ""

# eba990fcc045478eb4877809039c9474
#: ../source/includes/extracts/fact-query-bitsanyclear-description.rst:49
msgid "7"
msgstr ""

# 3e93d22d8b7d4518837a2379464fa727
#: ../source/includes/extracts/fact-query-bitsanyclear-description.rst:51
msgid "6"
msgstr ""

# 2e18ed155d78454c811d5b2220fd5ca5
#: ../source/includes/extracts/fact-query-bitsanyclear-description.rst:53
msgid "5"
msgstr ""

# d98dfa5217b24005bfd23d632440d840
#: ../source/includes/extracts/fact-query-bitsanyclear-description.rst:55
msgid "4"
msgstr ""

# ef8475440cab4faf9fc381f49ebc6a06
#: ../source/includes/extracts/fact-query-bitsanyclear-description.rst:57
msgid "3"
msgstr ""

# 3f64f96b69034f2e99b28da1214c4b03
#: ../source/includes/extracts/fact-query-bitsanyclear-description.rst:59
msgid "2"
msgstr ""

# 7a43462f175d4a32a52b00b737c53658
#: ../source/reference/operator/query/bitsAnyClear.txt:23
msgid "Behavior"
msgstr ""

# c7a7d1f7409a4c20b90f403df44918ff
#: ../source/reference/operator/query/bitsAnyClear.txt:26
msgid "Floating Point Values"
msgstr ""

# af4b6b37b8314cc4aa3fcdb376ea3bbc
#: ../source/includes/extracts/fact-query-bitsanyclear-floating-point.rst:1
msgid ""
":query:`$bitsAnyClear` will not match numerical values that cannot be "
"represented as a signed 64-bit integer. This can be the case if a value "
"is either too large or small to fit in a signed 64-bit integer, or if it "
"has a fractional component."
msgstr ""

# 55470ee813764dc7bed5389b3591824d
#: ../source/reference/operator/query/bitsAnyClear.txt:31
msgid "Sign Extension"
msgstr ""

# 477620f5c9e846cb8ffe2b57606d21b4
#: ../source/includes/extracts/fact-query-bitsallset-sign-extension.rst:1
msgid ""
"Numbers are sign extended. For example, $bitsAllSet considers bit "
"position ``200`` to be set for the negative number ``-5``, but bit "
"position ``200`` to be clear for the positive number ``+5``."
msgstr ""

# a721a5828d124a3fb0722e4981187ecf
#: ../source/includes/extracts/fact-query-bitsallset-sign-extension.rst:5
msgid ""
"In contrast, :bsontype:`BinData <data_binary>` instances are zero-"
"extended. For example, given the following document:"
msgstr ""

# 6fe26394e7524df1bc0bfbfa20cdaad1
#: ../source/includes/extracts/fact-query-bitsallset-sign-extension.rst:12
msgid "$bitsAllSet will consider all bits outside of ``x`` to be clear."
msgstr ""

# 3dea707836b94138924a3ac42536bb63
#: ../source/reference/operator/query/bitsAnyClear.txt:36
msgid "Examples"
msgstr ""

# c12cba80913b49039b2e9d996993f0fa
#: ../source/includes/extracts/fact-query-bitwise-example-collection.rst:1
msgid "The following examples will use a collection with the following documents:"
msgstr ""

# 37bfbe31d9ab4432afd7d72ebf8676f0
#: ../source/reference/operator/query/bitsAnyClear.txt:41
msgid "Bit Position Array"
msgstr ""

# 454da5fcfe784d3691ea000e63dc5861
#: ../source/reference/operator/query/bitsAnyClear.txt:43
msgid ""
"The following query uses the :query:`$bitsAnyClear` operator to test "
"whether field ``a`` has either bit position ``1`` or bit position ``5`` "
"clear, where the least significant bit is position ``0``."
msgstr ""

# 7e2bf94f27af4bc7bc74a23972867744
# aa78377532064c1cbfc9ff8c5dbeb59c
# 55d958f1a506411981383613153c3e1a
#: ../source/reference/operator/query/bitsAnyClear.txt:51
#: ../source/reference/operator/query/bitsAnyClear.txt:69
#: ../source/reference/operator/query/bitsAnyClear.txt:89
msgid "The query matches the following documents:"
msgstr ""

# a4b201e02e1b4b62a7a5838eb61aac63
#: ../source/reference/operator/query/bitsAnyClear.txt:59
msgid "Integer Bitmask"
msgstr ""

# 5b208eb514df48b29106414c062ed784
#: ../source/reference/operator/query/bitsAnyClear.txt:61
msgid ""
"The following query uses the :query:`$bitsAnyClear` operator to test "
"whether field ``a`` has any bits clear at positions ``0``, ``1``, and "
"``5`` (the binary representation of the bitmask ``35`` is ``00100011``)."
msgstr ""

# ed516b2cee4d47debc283639a95916d4
#: ../source/reference/operator/query/bitsAnyClear.txt:81
msgid ""
"The following query uses the :query:`$bitsAnyClear` operator to test "
"whether field ``a`` has any bits clear at positions `4` and `5` (the "
"binary representation of ``BinData(0, \"MC==\")`` is ``00110000``)."
msgstr ""

