title: "Log in to the |application|."
stepnum: 0
ref: login

---
title: "Begin or Manage a Deployment."
stepnum: 0
ref: begin-deployment-manage
content: |

  Your project has no deployments and you see a prompt to get
  started.

  To create a new deployment:

  a. From the :guilabel:`Build New Deployment` menu, select the type of 
     deployment you wish to add:

     - :doc:`New Sharded Cluster </tutorial/deploy-sharded-cluster>`
     - :doc:`New Replica Set </tutorial/deploy-replica-set>`
     - :doc:`New Standalone </tutorial/deploy-standalone>`

  b. If, on the :guilabel:`Create New Deployment`
     page, |mms| cannot detect any hosts with the
     MongoDB Agent installed, you see a banner
     displayed at the top of the
     :guilabel:`Create New Deployment` page.

     Click the :guilabel:`see instructions` link.

  c. From the :guilabel:`Select Your Server's
     Operating System` menu, click {{menuOption}}.

  d. Click :guilabel:`Next`.

  To manage an existing deployment:

  a. Click :doc:`Manage your existing deployment 
     </tutorial/add-existing-mongodb-processes>`.

  b. From the :guilabel:`Install Agent` menu, click {{menuOption}}.

replacement:
  menuOption: ""

---
title: "Navigate to the MongoDB Agent Download page."
stepnum: 0
ref: begin-deployment-monitor
content: |

  If you have a project with existing deployments, you can
  install the MongoDB Agent on your existing deployments:

  a. Select the desired Project from the :guilabel:`Context`
     menu.
  #. Click :guilabel:`Deployment`.
  #. Click :guilabel:`Agents`.
  #. Click :guilabel:`Downloads & Settings`.
  #. From the :guilabel:`Select Your Server's Operating
     System` menu, click {{menuOption}}.

replacement:
  menuOption: ""

---
title: Download the latest version of the {+mdbagent+}.
stepnum: 0
ref: download-mongodb-agent-installer-opsmgr
content: |

  Starting with this step, follow the {+mdbagent+}
  installation modal and copy the commands provided into the 
  {{commandline}}.

  From a system shell on the host that will run the {+mdbagent+},
  issue the following ``curl`` command to download the installer for {{platform}}:

  .. code-block:: shell

     curl -OL https://{+opsmgr-url+}/download/agent/automation/mongodb-mms-automation-agent-manager-latest.{{fileBuild}}

  .. note::

     Replace ``{+opsmgr-url+}`` with the hostname and port of
     your |application|. If present, replace ``<version>`` with the 
     major version of the operating system. For example, replace 
     ``<version>`` with ``7`` for RHEL 7.x.

replacement:
  commandline: ""
  platform: ""
  fileBuild: ""

---
title: Download the latest version of the {+mdbagent+}.
stepnum: 0
ref: download-mongodb-agent-installer-appdb
content: |

  Starting with this step, follow the {+mdbagent+}
  installation modal and copy the commands provided into the
  {{commandline}}.

  From a system shell on the host that will run the {+mdbagent+},
  issue the following ``curl`` command to download the installer for{{platform}}:

  .. code-block:: shell

     curl -OL https://{+opsmgr-url+}/download/agent/automation/mongodb-mms-automation-agent-manager-latest.{{fileBuild}}

  .. note::

     Replace ``{+opsmgr-url+}`` with the hostname and port of
     your |application|. If present, replace ``<version>`` with the 
     major version of the operating system. For example, replace 
     ``<version>`` with ``7`` for RHEL 7.x.

replacement:
  commandline: ""
  platform: ""
  fileBuild: ""

---
title: "Finish the installation of the MongoDB Agent."
stepnum: 0
ref: verify-mongodb-agent
content: |
  In the :guilabel:`Install Agent Instructions` modal:

  a. Click :guilabel:`Verify Agent` to make
     sure the MongoDB Agent can connect to |mms|.

  b. Click :guilabel:`Done`.

---
title: "Finish the installation of the MongoDB Agent."
stepnum: 0
ref: finish-mongodb-agent
content: |
  In the :guilabel:`Install Agent Instructions` modal, click
  :guilabel:`Done`.
---
title: "Configure the MongoDB Agent to use a proxy server."
optional: true
stepnum: 0
ref: set-proxy-server
content: |

  To configure the MongoDB Agent to connect to |mms| via a proxy
  server, you must specify the server in the :setting:`httpProxy`
  environment variable.

  In the directory where you installed the MongoDB Agent, open the {{configFile}} file in your preferred text editor.

  .. code-block:: sh

     {{editCommand}}

  Add the following configuration key:

  .. list-table::
     :header-rows: 1
     :widths: 20 80

     * - Key
       - Value
     * - :setting:`httpProxy`
       - |url| (hostname and port) of to your proxy server.

replacement:
  configFile: ""
  editCommand: ""

---
title: "Edit the MongoDB Agent configuration file."
stepnum: 0
ref: edit-config-file-opsmgr
content: |

  In the directory where you installed the MongoDB Agent, open the {{configFile}} file in your preferred text editor:

  .. code-block:: sh

     {{editCommand}}

  Update the following configuration options:

  .. list-table::
     :header-rows: 1
     :widths: 20 80

     * - Key
       - Value
     * - :setting:`mmsGroupId`
       - ``ProjectID`` of your project.
     * - :setting:`mmsApiKey`
       - :opsmgr:`Agent API key </reference/glossary/#std-term-agent-api-key>` of your project.
     * - :ref:`mmsbaseurl <mmsBaseUrl>`
       - |url| (hostname and port) of the |application|.

  The resulting changes to the {{configFile}} file should
  look like the following:

  .. code-block:: ini

     mmsGroupId=<Project ID>
     mmsApiKey=<agent API key>
     mmsBaseUrl=<application URL>

replacement:
  configFile: ""
  editCommand: ""

---
title: "Edit the MongoDB Agent configuration file."
stepnum: 0
ref: edit-config-file-appdb
content: |

  In the directory where you installed the MongoDB Agent, open the {{configFile}} file in your preferred text editor:

  .. code-block:: sh

     {{editCommand}}

  Update the following configuration options:

  .. list-table::
     :header-rows: 1
     :widths: 20 80

     * - Key
       - Value
     * - :setting:`mmsGroupId`
       - ``ProjectID`` of your project.
     * - :setting:`mmsApiKey`
       - :opsmgr:`Agent API key </reference/glossary/#std-term-agent-api-key>` of your
          project.
     * - :ref:`mmsbaseurl <mmsBaseUrl>`
       - |url| (hostname and port) of the |application|.

  The resulting changes to the {{configFile}} file should
  look like the following:

  .. code-block:: ini

     mmsGroupId=<Project ID>
     mmsApiKey=<agent API key>
     mmsBaseUrl=<application URL>

replacement:
  configFile: ""
  editCommand: ""

---
title: "Edit the MongoDB Agent configuration file to enable Live Migration."
stepnum: 3
level: 4
ref: edit-config-file-live-migration
content: |

  a. If you don't already have the  {{configFile}} file open from the
     previous step, open it in your preferred text editor:
     
     .. code-block:: sh

        {{editCommand}}

  #. Add or update the following live migration configuration options:

     .. list-table::
        :header-rows: 1
        :widths: 20 80

        * - Key
          - Value
        * - :setting:`agentFeatureCloudMigrationEnabled`
          - ``true``
        * - :setting:`cloudMigrationOplogPath`
          - Path to the :manual:`oplog </reference/glossary/#std-term-oplog>` files
            for the :doc:`live migration
            </tutorial/migrate-to-atlas>` process. This key is optional
            and if set, requires provisioning enough storage in the
            specified directory for the oplog buffering.
            :website:`Contact MongoDB Support </contact>` if you need
            assistance determining whether you need to set this key for
            your deployment.


  #. Ensure that the resulting changes to the  {{configFile}} file
     contain the following necessary configuration options for live
     migration:

     .. code-block:: ini

        mmsGroupId=<The ID of your project>
        mmsApiKey=<The Agent API key of your project>
        mmsBaseUrl=<The URL of your Ops Manager application>
        agentFeatureCloudMigrationEnabled=true
        cloudMigrationOplogPath=<The path to the oplog files>

     To learn more, see :ref:`mongodb-agent-settings`.

replacement:
  configFile: ""
  editCommand: ""

---
title: "Repeat the installation procedure for each MongoDB host."
stepnum: 0
ref: repeat-per-host
---
title: "Verify that the {+mdbagent+} is running."
stepnum: 0
ref: verify-mongodb-agent-install
content: |

  In the :guilabel:`Install Agent Instructions` modal,
  wait for each deployment to show :guilabel:`Verified` in the
  :guilabel:`Install the {+mdbagent+}` step.

  .. important::

     All authentication SCRAM, |ldap|, and Kerberos credentials from
     legacy Agents are retained after the update. All ``.pem`` key
     files are retained as well.

  Click :guilabel:`Next`.


...
