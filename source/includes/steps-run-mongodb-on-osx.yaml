title: Create the data directory.
stepnum: 1
ref: create-dbpath
pre: |
  Before you start MongoDB for the first time, you must create the
  directory to which the :binary:`~bin.mongod` process will write data.
action:
  pre: |
    For example, to create the ``/usr/local/var/mongodb`` directory:
  language: sh
  code: |
    sudo mkdir -p /usr/local/var/mongodb
  post: |

    .. important::

       Starting with macOS 10.15 Catalina, Apple restricts access to the
       MongoDB default data directory of ``/data/db``. On macOS 10.15
       Catalina, you must use a different data directory, such as
       ``/usr/local/var/mongodb``.
---
title: Create the log directory.
stepnum: 2
ref: create-logpath
pre: |
  You must also create the directory in which the ``mongod`` process
  will write its log file:
action:
  pre: |
    For example, to create the ``/usr/local/var/log/mongodb`` directory:
  language: sh
  code: |
    sudo mkdir -p /usr/local/var/log/mongodb
---
title: Set permissions for the data and log directories.
stepnum: 3
ref: set-dbpath-logpath-permissions
action:
  pre: |
    Ensure that the user account running :binary:`~bin.mongod` has read
    and write permissions for these two directories. If you are running
    :binary:`~bin.mongod` as your own user account, and you just created
    the two directories above, they should already accessible to your
    user. Otherwise, you can use ``chown`` to set ownership,
    substituting the appropriate user:
  language: sh
  code: |
    sudo chown my_mongodb_user /usr/local/var/mongodb
    sudo chown my_mongodb_user /usr/local/var/log/mongodb
---
title: Run MongoDB.
stepnum: 4
ref: start-mdb
pre: |
  To run MongoDB, run the :binary:`~bin.mongod` process at the system
  prompt, providing the two parameters ``dbpath`` and ``logpath``
  from above, and the ``fork`` parameter to run :binary:`~bin.mongod`
  in the background. Alternatively, you may choose to store the values
  for ``dbpath``, ``logpath``, ``fork``, and many other parameters in a
  :doc:`configuration file </reference/configuration-options>`.
action:
  - heading: Run ``mongod`` with command-line parameters
    pre: |
      Run the :binary:`~bin.mongod` process at the system prompt,
      providing the three necessary parameters directly on the
      command-line:
    language: sh
    code: |
      mongod --dbpath /usr/local/var/mongodb --logpath /usr/local/var/log/mongodb/mongo.log --fork
  - heading: Run ``mongod`` with a configuration file
    pre: |
      Run the :binary:`~bin.mongod` process at the system prompt,
      providing the path to a 
      :doc:`configuration file </reference/configuration-options>`
      with the ``config`` parameter:
    language: sh
    code: |
      mongod --config /usr/local/etc/mongod.conf
post: |
  .. note:: macOS Prevents ``mongod`` From Opening


     macOS may prevent ``mongod`` from running after installation. If
     you receive a security error when starting ``mongod``
     indicating that the developer could not be identified or verified,
     do the following to grant ``mongod`` access to run:

     - Open *System Preferences*
     - Select the *Security and Privacy* pane.
     - Under the *General* tab, click the button to the right of the
       message about ``mongod``, labelled either :guilabel:`Open Anyway`
       or :guilabel:`Allow Anyway` depending on your version of macOS.

# End-for-getting-started-guide
---
title: "Verify that MongoDB has started successfully."
stepnum: 5
ref: verify
pre: |
  Verify that MongoDB has started successfully:
action:
  language: none
  code: |
    ps aux | grep -v grep | grep mongod
post: |
  If you do not see a ``mongod`` process running, check the logfile for
  any error messages.
---
title: Begin using MongoDB.
stepnum: 6
ref: begin-using-mongodb
pre: |
  Start a :binary:`~bin.mongo` shell on the same host machine as the 
  :binary:`~bin.mongod`. You can run the :binary:`~bin.mongo` shell
  without any command-line options to connect to a
  :binary:`~bin.mongod` that is running on your *localhost* with the
  default port of *27017*:
action:
  language: shell
  code: |
     mongo
post: |
  .. note:: macOS Prevents ``mongo`` From Opening


     macOS may prevent ``mongo`` from running after installation. If
     you receive a security error when starting ``mongo``
     indicating that the developer could not be identified or verified,
     do the following to grant ``mongo`` access to run:

     - Open *System Preferences*
     - Select the *Security and Privacy* pane.
     - Under the *General* tab, click the button to the right of the
       message about ``mongo``, labelled either :guilabel:`Open Anyway`
       or :guilabel:`Allow Anyway` depending on your version of macOS.

  For more information on connecting using the :binary:`~bin.mongo`
  shell, such as to connect to a :binary:`~bin.mongod` instance running
  on a different host and/or port, see :doc:`/mongo`.

  To help you start using MongoDB, MongoDB provides :ref:`Getting
  Started Guides <getting-started>` in various driver editions. See
  :ref:`getting-started` for the available editions.

replacement:
  mongod: ":binary:`~bin.mongod`"
  mongo: ":binary:`~bin.mongo`"
...
