.. _golang-find-multiple:

=======================
Find Multiple Documents
=======================

You can find multiple documents in a collection by using the ``Find()``
method.

Example
-------

.. include:: /includes/usage-examples/run-example-tip.rst

This example uses the following ``Restaurant`` struct as a model for documents 
in the ``restaurants`` collection:

.. literalinclude:: /includes/usage-examples/code-snippets/find.go
   :start-after: start-restaurant-struct
   :end-before: end-restaurant-struct
   :language: go 
   :copyable: 
   :dedent:

The following example matches documents in the ``restaurants`` collection
in which the ``cuisine`` is ``"Italian"``, returns a cursor that
references the matched documents, then unpacks the documents into a slice:

.. literalinclude:: /includes/usage-examples/code-snippets/find.go
   :start-after: begin find
   :end-before: end find
   :language: go
   :dedent:
   :emphasize-lines: 8

View a `fully runnable example <{+example+}/find.go>`__

Expected Result
---------------

Running the full example prints the following documents, which are stored in 
the ``results`` variable as ``Restaurant`` structs:

.. code-block:: json
   :copyable: false

   // results truncated
   ...
   { ... , "Name" : "Epistrophy Cafe", "RestaurantId": "41117553", "Cuisine" : "Italian", ... },
   { ... , "Name" : "Remi", "RestaurantId": "41118090", "Cuisine" : "Italian", ... },
   { ... , "Name" : "Sant Ambroeus", "RestaurantId": "41120682", "Cuisine" : "Italian", ... },
   ...

Additional Information
----------------------

To learn more about specifying query filters and
handling potential errors, see 
:ref:`golang-retrieve`.

To learn more about query operators,
see the :manual:`MongoDB query operator reference documentation
</reference/operator/query/>`.

API Documentation
~~~~~~~~~~~~~~~~~

- `Find() <{+api+}/mongo#Collection.Find>`__
- `Cursor <{+api+}/mongo#Cursor>`__
