.. _data-sources-pipeline:

=====================
Data Source Pipelines 
=====================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

If you are the :data:`Owner` of a data source, you can
apply an :manual:`aggregation pipeline </core/aggregation-pipeline/>`
to a data source to pre-process data before it reaches the
chart builder.

Use Cases
---------

Pre-processing a data source with a pipeline is useful when your
collection data is not yet optimized for data visualization. While you
can still pre-process your data by creating a
:manual:`database view </core/views>` or using the |charts-short|
:ref:`query bar <query-bar>`, adding a pipeline to a data source
ensures that any charts using the data source receive the same
data transformations.

Pre-processing your data can help accomplish the following tasks:

- Join data from multiple collections into a single data source using
  :pipeline:`$lookup`. :ref:`See example <join-data>`.

- Hide fields which may contain sensitive data from |charts-short| users
  using :pipeline:`$project`. :ref:`See example <hide-data>`.

- Convert data types, such as a string field to a date.
  :ref:`See example <convert-data-tye>`.

Add a Pipeline to a Data Source
-------------------------------

.. include:: /includes/steps/add-data-source-pipeline.rst

Example Pipelines
-----------------

.. _join-data:

Join Data from Two Collections
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following example adds a pipeline to a data source pointing to
the ``sample_mflix.movies`` collection from the
:atlas:`Sample Mflix Dataset </sample-data/sample-mflix/>` provided by
|service|. The pipeline performs a :pipeline:`$lookup` to join data
from the ``comments`` collection based on ``movie_id``. The result is
a new field in this data source called ``comments`` containing data
from a separate collection.

.. code-block:: js

   [
    {
      $lookup:
        {
          from: 'comments',
          localField: '_id',
          foreignField: 'movie_id',
          as: 'comments'
        }
    }  
   ]

.. _hide-data:

Hide Sensitive Data
~~~~~~~~~~~~~~~~~~~

The following example adds a pipeline to a data source pointing to the
``sample_supplies.sales`` collection from the
:atlas:`Sample Supply Store Dataset </sample-data/sample-supplies/>`
provided by |service|. The pipeline hides the ``customer.email`` field,
making that field unavailable to charts using this data source:

.. code-block:: js

   [
     {
       $project: { "customer.email": 0 }
     }
   ]

To learn more about the ``$project`` aggregation stage,
see :pipeline:`$project`.

.. _convert-data-tye:

Convert the Type of a Data Field
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following example adds a pipeline to a data source containing a
string field that we want to convert to a date. The pipeline adds a new
field to the data source with the string field ``saleDate`` converted to
a date field called ``saleDateAsDate``:

.. code-block:: js

   [
     {
       $addFields: {
         saleDateAsDate: { $toDate: '$saleDate' }
       }
     }
   ]

Modify an Existing Data Source Pipeline
---------------------------------------

.. important:: Considerations

   You can only modify pipelines on data sources of which you are
   an :data:`Owner`.

   |charts-short| displays a warning if the data source's pipeline you
   attempt to modify is in use by at least one chart. Modifying a
   pipeline which is currently in use may result in charts using
   the pipeline rendering incorrectly or breaking entirely.

.. include:: /includes/steps/modify-data-source-pipeline.rst

Delete an Existing Data Source Pipeline
---------------------------------------

.. important:: Considerations

   You can only delete pipelines on data sources of which you are
   an :data:`Owner`.

   |charts-short| displays a warning if the data source's pipeline you
   attempt to delete is in use by at least one chart. Deleting a
   pipeline which is currently in use may result in charts using
   the pipeline rendering incorrectly or breaking entirely.

.. include:: /includes/steps/delete-data-source-pipeline.rst
