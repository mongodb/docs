#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/reference/method/db.collection.insert.txt:3
msgid "db.collection.insert()"
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:18
msgid "Inserts a document or documents into a collection."
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:20
msgid "The :method:`~db.collection.insert()` method has the following syntax:"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.insert-param.rst:7
msgid "Parameter"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.insert-param.rst:9
msgid "Type"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.insert-param.rst:11
msgid "Description"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.insert-param.rst:13
msgid "``document``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.insert-param.rst:15
msgid "document or array"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.insert-param.rst:17
#: ../source/includes/apiargs/method-db.collection.insert-param.rst:56
msgid "A document or array of documents to insert into the collection."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.insert-param.rst:21
msgid "``writeConcern``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.insert-param.rst:23
msgid "document"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.insert-param.rst:25
#: ../source/includes/apiargs/method-db.collection.insert-param.rst:62
msgid ""
"Optional. A document expressing the :doc:`write concern </reference"
"/write-concern>`. Omit to use the default write concern. See :ref"
":`insert-wc`."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.insert-param.rst:33
msgid "``ordered``"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.insert-param.rst:35
msgid "boolean"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.insert-param.rst:37
#: ../source/includes/apiargs/method-db.collection.insert-param.rst:72
msgid ""
"Optional. If ``true``, perform an ordered insert of the documents in the "
"array, and if an error occurs with one of documents, MongoDB will return "
"without processing the remaining documents in the array."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.insert-param.rst:41
#: ../source/includes/apiargs/method-db.collection.insert-param.rst:76
msgid ""
"If ``false``, perform an unordered insert, and if an error occurs with "
"one of documents, continue processing the remaining documents in the "
"array."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.insert-param.rst:45
#: ../source/includes/apiargs/method-db.collection.insert-param.rst:80
msgid "Defaults to ``true``."
msgstr ""

#: ../source/includes/apiargs/method-db.collection.insert-param.rst
msgid "param document, array document"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.insert-param.rst
msgid "param document writeConcern"
msgstr ""

#: ../source/includes/apiargs/method-db.collection.insert-param.rst
msgid "param boolean ordered"
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:37
msgid ""
"The :method:`~db.collection.insert()` returns an object that contains the"
" status of the operation."
msgstr ""

#: ../source/reference/method/db.collection.insert.txt
msgid "Returns"
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:41
msgid ""
"- A :ref:`writeresults-insert` object for single inserts.  - A :ref"
":`bulkwriteresults-insert` object for bulk inserts."
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:42
msgid "A :ref:`writeresults-insert` object for single inserts."
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:44
msgid "A :ref:`bulkwriteresults-insert` object for bulk inserts."
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:47
msgid "Behaviors"
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:52
msgid "Write Concern"
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:56
msgid ""
"The :method:`~db.collection.insert()` method uses the :dbcommand:`insert`"
" command, which uses the default :doc:`write concern </reference/write-"
"concern>`. To specify a different write concern, include the write "
"concern in the options parameter."
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:62
msgid "Create Collection"
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:64
msgid ""
"If the collection does not exist, then the "
":method:`~db.collection.insert()` method will create the collection."
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:68
msgid "``_id`` Field"
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:70
msgid ""
"If the document does not specify an :term:`_id` field, then MongoDB will "
"add the ``_id`` field and assign a unique :method:`ObjectId` for the "
"document before inserting. Most drivers create an ObjectId and insert the"
" ``_id`` field, but the :binary:`~bin.mongod` will create and populate "
"the ``_id`` if the driver or application does not."
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:77
msgid ""
"If the document contains an ``_id`` field, the ``_id`` value must be "
"unique within the collection to avoid duplicate key error."
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:81
msgid "Examples"
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:83
msgid ""
"The following examples insert documents into the ``products`` collection."
" If the collection does not exist, the :method:`~db.collection.insert()` "
"method creates the collection."
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:88
msgid "Insert a Document without Specifying an ``_id`` Field"
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:90
msgid ""
"In the following example, the document passed to the "
":method:`~db.collection.insert()` method does not contain the ``_id`` "
"field:"
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:98
msgid ""
"During the insert, :binary:`~bin.mongod` will create the ``_id`` field "
"and assign it a unique :method:`ObjectId` value, as verified by the "
"inserted document:"
msgstr ""

#: ../source/includes/fact-object-id-may-differ.rst:1
msgid ""
"The ``ObjectId`` values are specific to the machine and time when the "
"operation is run. As such, your values may differ from those in the "
"example."
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:109
msgid "Insert a Document Specifying an ``_id`` Field"
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:111
msgid ""
"In the following example, the document passed to the "
":method:`~db.collection.insert()` method includes the ``_id`` field. The "
"value of ``_id`` must be unique within the collection to avoid duplicate "
"key error."
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:120
msgid ""
"The operation inserts the following document in the ``products`` "
"collection:"
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:128
msgid "Insert Multiple Documents"
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:130
msgid ""
"The following example performs a bulk insert of three documents by "
"passing an array of documents to the :method:`~db.collection.insert()` "
"method. By default, MongoDB performs an *ordered* insert. With *ordered* "
"inserts, if an error occurs during an insert of one of the documents, "
"MongoDB returns on error without processing the remaining documents in "
"the array."
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:137
msgid ""
"The documents in the array do not need to have the same fields. For "
"instance, the first document in the array has an ``_id`` field and a "
"``type`` field. Because the second and third documents do not contain an "
"``_id`` field, :binary:`~bin.mongod` will create the ``_id`` field for "
"the second and third documents during the insert:"
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:153
msgid "The operation inserted the following three documents:"
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:162
msgid "Perform an Unordered Insert"
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:164
msgid ""
"The following example performs an *unordered* insert of three documents. "
"With *unordered* inserts, if an error occurs during an insert of one of "
"the documents, MongoDB continues to insert the remaining documents in the"
" array."
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:181
msgid "Override Default Write Concern"
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:183
msgid ""
"The following operation to a replica set specifies a :doc:`write concern "
"</reference/write-concern>` of ``\"w: majority\"`` with a ``wtimeout`` of"
" 5000 milliseconds such that the method returns after the write "
"propagates to a majority of the voting replica set members or the method "
"times out after 5 seconds."
msgstr ""

#: ../source/includes/fact-majority-write-concern-change.rst:1
msgid ""
"In previous versions, ``majority`` referred to the majority of all "
"members of the replica set instead of the majority of the voting members."
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:201
msgid "WriteResult"
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:205
msgid ""
"When passed a single document, :method:`~db.collection.insert()` returns "
"a ``WriteResult`` object."
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:209
msgid "Successful Results"
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:211
msgid ""
"The :method:`~db.collection.insert()` returns a :method:`WriteResult` "
"object that contains the status of the operation. Upon success, the "
":method:`WriteResult` object contains information on the number of "
"documents inserted:"
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:221
msgid "Write Concern Errors"
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:223
msgid ""
"If the :method:`~db.collection.insert()` method encounters write concern "
"errors, the results include the :data:`WriteResult.writeConcernError` "
"field:"
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:238
msgid "Errors Unrelated to Write Concern"
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:240
msgid ""
"If the :method:`~db.collection.insert()` method encounters a non-write "
"concern error, the results include the :data:`WriteResult.writeError` "
"field:"
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:257
msgid "BulkWriteResult"
msgstr ""

#: ../source/reference/method/db.collection.insert.txt:261
msgid ""
"When passed an array of documents, :method:`~db.collection.insert()` "
"returns a :method:`BulkWriteResult()` object. See "
":method:`BulkWriteResult()` for details."
msgstr ""

#~ msgid "Safe Writes"
#~ msgstr ""

#~ msgid ""
#~ "The :method:`~db.collection.insert()` method uses"
#~ " the :dbcommand:`insert` command, which "
#~ "uses the default write concern. To "
#~ "specify a different write concern, "
#~ "include the write concern in the "
#~ "options parameter."
#~ msgstr ""

#~ msgid ""
#~ "If the document does not specify "
#~ "an :term:`_id` field, then MongoDB will"
#~ " add the ``_id`` field and assign "
#~ "a unique :doc:`/reference/object-id` for "
#~ "the document before inserting. Most "
#~ "drivers create an ObjectId and insert"
#~ " the ``_id`` field, but the "
#~ ":program:`mongod` will create and populate "
#~ "the ``_id`` if the driver or "
#~ "application does not."
#~ msgstr ""

#~ msgid ""
#~ "During the insert, :program:`mongod` will "
#~ "create the ``_id`` field and assign "
#~ "it a unique :doc:`/reference/object-id` "
#~ "value, as verified by the inserted "
#~ "document:"
#~ msgstr ""

#~ msgid ""
#~ "In previous versions, ``majority`` referred"
#~ " to the majority of all members "
#~ "of the replica set."
#~ msgstr ""

#~ msgid ""
#~ "The documents in the array do not"
#~ " need to have the same fields. "
#~ "For instance, the first document in "
#~ "the array has an ``_id`` field and"
#~ " a ``type`` field. Because the second"
#~ " and third documents do not contain"
#~ " an ``_id`` field, :program:`mongod` will"
#~ " create the ``_id`` field for the "
#~ "second and third documents during the"
#~ " insert:"
#~ msgstr ""

#~ msgid "On this page"
#~ msgstr ""

#~ msgid ""
#~ "If the document does not specify "
#~ "an :term:`_id` field, then MongoDB will"
#~ " add the ``_id`` field and assign "
#~ "a unique :method:`ObjectId` for the "
#~ "document before inserting. Most drivers "
#~ "create an ObjectId and insert the "
#~ "``_id`` field, but the :program:`mongod` "
#~ "will create and populate the ``_id`` "
#~ "if the driver or application does "
#~ "not."
#~ msgstr ""

#~ msgid ""
#~ "During the insert, :program:`mongod` will "
#~ "create the ``_id`` field and assign "
#~ "it a unique :method:`ObjectId` value, as"
#~ " verified by the inserted document:"
#~ msgstr ""

