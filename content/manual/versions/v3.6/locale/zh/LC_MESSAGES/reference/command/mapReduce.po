#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/reference/command/mapReduce.txt:3
msgid "mapReduce"
msgstr ""

#: ../source/reference/command/mapReduce.txt:15
msgid ""
"The :dbcommand:`mapReduce` command allows you to run :term:`map-reduce` "
"aggregation operations over a collection. The :dbcommand:`mapReduce` "
"command has the following prototype form:"
msgstr ""

#: ../source/reference/command/mapReduce.txt:41
msgid ""
"Pass the name of the collection to the ``mapReduce`` command (i.e. "
"``<collection>``) to use as the source documents to perform the map-"
"reduce operation."
msgstr ""

#: ../source/includes/extracts/views-unsupported-mapReduce.rst:1
msgid ":doc:`Views </core/views>` do not support map-reduce operations."
msgstr ""

#: ../source/reference/command/mapReduce.txt:49
msgid "The command also accepts the following parameters:"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:7
msgid "Field"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:9
msgid "Type"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:11
msgid "Description"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:13
msgid "``mapReduce``"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:15
msgid "collection"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:17
#: ../source/includes/apiargs/command-mapReduce-field.rst:204
msgid ""
"The name of the collection on which you want to perform map-reduce. This "
"collection will be filtered using ``query`` before being processed by the"
" ``map`` function."
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:23
msgid "``map``"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:25
#: ../source/includes/apiargs/command-mapReduce-field.rst:36
#: ../source/includes/apiargs/command-mapReduce-field.rst:91
msgid "function"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:27
#: ../source/includes/apiargs/command-mapReduce-field.rst:212
msgid ""
"A JavaScript function that associates or \"maps\" a ``value`` with a "
"``key`` and emits the ``key`` and value ``pair``."
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:30
#: ../source/includes/apiargs/command-mapReduce-field.rst:215
msgid "See :ref:`mapReduce-map-cmd` for more information."
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:34
#: ../source/includes/parameters-map-reduce.rst:49
msgid "``reduce``"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:38
#: ../source/includes/apiargs/command-mapReduce-field.rst:221
msgid ""
"A JavaScript function that \"reduces\" to a single object all the "
"``values`` associated with a particular ``key``."
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:41
#: ../source/includes/apiargs/command-mapReduce-field.rst:224
msgid "See :ref:`mapReduce-reduce-cmd` for more information."
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:45
msgid "``out``"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:47
msgid "string or document"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:49
#: ../source/includes/apiargs/command-mapReduce-field.rst:230
msgid ""
"Specifies where to output the result of the map-reduce operation. You can"
" either output to a collection or return the result inline. On a "
":term:`primary` member of a replica set you can output either to a "
"collection or inline, but on a :term:`secondary`, only inline output is "
"possible."
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:55
#: ../source/includes/apiargs/command-mapReduce-field.rst:236
msgid "See :ref:`mapReduce-out-cmd` for more information."
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:59
msgid "``query``"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:61
#: ../source/includes/apiargs/command-mapReduce-field.rst:71
#: ../source/includes/apiargs/command-mapReduce-field.rst:101
#: ../source/includes/apiargs/command-mapReduce-field.rst:181
#: ../source/includes/apiargs/command-mapReduce-field.rst:191
msgid "document"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:63
#: ../source/includes/apiargs/command-mapReduce-field.rst:242
msgid ""
"Optional. Specifies the selection criteria using :doc:`query operators "
"</reference/operator>` for determining the documents input to the ``map``"
" function."
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:69
msgid "``sort``"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:73
#: ../source/includes/apiargs/command-mapReduce-field.rst:250
msgid ""
"Optional. Sorts the *input* documents. This option is useful for "
"optimization. For example, specify the sort key to be the same as the "
"emit key so that there are fewer reduce operations. The sort key must be "
"in an existing index for this collection."
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:80
msgid "``limit``"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:82
msgid "number"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:84
#: ../source/includes/apiargs/command-mapReduce-field.rst:259
msgid ""
"Optional. Specifies a maximum number of documents for the input into the "
"``map`` function."
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:89
msgid "``finalize``"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:93
#: ../source/includes/apiargs/command-mapReduce-field.rst:266
msgid "Optional. Follows the ``reduce`` method and modifies the output."
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:95
#: ../source/includes/apiargs/command-mapReduce-field.rst:268
msgid "See :ref:`mapReduce-finalize-cmd` for more information."
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:99
msgid "``scope``"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:103
#: ../source/includes/apiargs/command-mapReduce-field.rst:274
msgid ""
"Optional. Specifies global variables that are accessible in the ``map``, "
"``reduce`` and ``finalize`` functions."
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:108
msgid "``jsMode``"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:110
#: ../source/includes/apiargs/command-mapReduce-field.rst:145
#: ../source/includes/apiargs/command-mapReduce-field.rst:157
msgid "boolean"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:112
#: ../source/includes/apiargs/command-mapReduce-field.rst:281
msgid ""
"Optional. Specifies whether to convert intermediate data into BSON format"
" between the execution of the ``map`` and ``reduce`` functions."
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:116
#: ../source/includes/apiargs/command-mapReduce-field.rst:151
#: ../source/includes/apiargs/command-mapReduce-field.rst:285
#: ../source/includes/apiargs/command-mapReduce-field.rst:318
msgid "Defaults to ``false``."
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:118
#: ../source/includes/apiargs/command-mapReduce-field.rst:287
msgid "If ``false``:"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:120
#: ../source/includes/apiargs/command-mapReduce-field.rst:289
msgid ""
"Internally, MongoDB converts the JavaScript objects emitted by the "
"``map`` function to BSON objects. These BSON objects are then converted "
"back to JavaScript objects when calling the ``reduce`` function."
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:126
#: ../source/includes/apiargs/command-mapReduce-field.rst:295
msgid ""
"The map-reduce operation places the intermediate BSON objects in "
"temporary, on-disk storage. This allows the map-reduce operation to "
"execute over arbitrarily large data sets."
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:130
#: ../source/includes/apiargs/command-mapReduce-field.rst:299
msgid "If ``true``:"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:132
#: ../source/includes/apiargs/command-mapReduce-field.rst:301
msgid ""
"Internally, the JavaScript objects emitted during ``map`` function remain"
" as JavaScript objects. There is no need to convert the objects for the "
"``reduce`` function, which can result in faster execution."
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:137
#: ../source/includes/apiargs/command-mapReduce-field.rst:306
msgid ""
"You can only use ``jsMode`` for result sets with fewer than 500,000 "
"distinct ``key`` arguments to the mapper's ``emit()`` function."
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:143
msgid "``verbose``"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:147
#: ../source/includes/apiargs/command-mapReduce-field.rst:314
msgid ""
"Optional. Specifies whether to include the ``timing`` information in the "
"result information. Set ``verbose`` to ``true`` to include the ``timing``"
" information."
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:155
msgid "``bypassDocumentValidation``"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:159
#: ../source/includes/apiargs/command-mapReduce-field.rst:324
msgid ""
"Optional. Enables :dbcommand:`mapReduce` to bypass document validation "
"during the operation. This lets you insert documents that do not meet the"
" validation requirements."
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:168
#: ../source/includes/apiargs/command-mapReduce-field.rst:333
msgid ""
"If the :ref:`output option <mapreduce-out-cmd>` is set to ``inline``, no "
":doc:`document validation </core/schema-validation/>` occurs. If the "
"output goes to a collection, :dbcommand:`mapReduce` observes any "
"validation rules which the collection has and does not insert any invalid"
" documents unless the ``bypassDocumentValidation`` parameter is set to "
"true."
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:179
msgid "``collation``"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:183
#: ../source/includes/apiargs/command-mapReduce-field.rst:346
msgid "Optional."
msgstr ""

#: ../source/includes/extracts/collation-option.rst:1
msgid "Specifies the :ref:`collation <collation>`  to use for the operation."
msgstr ""

#: ../source/includes/extracts/collation-description.rst:1
msgid ""
":doc:`Collation </reference/collation>` allows users to specify language-"
"specific rules for string comparison, such as rules for lettercase and "
"accent marks."
msgstr ""

#: ../source/includes/extracts/collation-option-specification.rst:2
msgid "The collation option has the following syntax:"
msgstr ""

#: ../source/includes/extracts/collation-option-specification.rst:17
msgid ""
"When specifying collation, the ``locale`` field is mandatory; all other "
"collation fields are optional. For descriptions of the fields, see :ref"
":`collation-document-fields`."
msgstr ""

#: ../source/includes/extracts/collation-option.rst:7
msgid ""
"If the collation is unspecified but the collection has a default "
"collation (see :method:`db.createCollection()`), the operation uses the "
"collation specified for the collection."
msgstr ""

#: ../source/includes/extracts/collation-unspecified.rst:1
msgid ""
"If no collation is specified for the collection or for the operations, "
"MongoDB uses the simple binary comparison used in prior versions for "
"string comparisons."
msgstr ""

#: ../source/includes/extracts/collation-single-per-operation.rst:2
msgid ""
"You cannot specify multiple collations for an operation. For example, you"
" cannot specify different collations per field, or if performing a find "
"with a sort, you cannot use one collation for the find and another for "
"the sort."
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:189
msgid "``writeConcern``"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst:193
#: ../source/includes/apiargs/command-mapReduce-field.rst:354
msgid ""
"Optional. A document that expresses the :doc:`write concern </reference"
"/write-concern>` to use when outputing to a collection. Omit to use the "
"default write concern."
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst
msgid "field collection mapReduce"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst
msgid "field function map"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst
msgid "field function reduce"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst
msgid "field string or document out"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst
msgid "field document query"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst
msgid "field document sort"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst
msgid "field number limit"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst
msgid "field function finalize"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst
msgid "field document scope"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst
msgid "field boolean jsMode"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst
msgid "field boolean verbose"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst
msgid "field boolean bypassDocumentValidation"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst
msgid "field document collation"
msgstr ""

#: ../source/includes/apiargs/command-mapReduce-field.rst
msgid "field document writeConcern"
msgstr ""

#: ../source/reference/command/mapReduce.txt:53
msgid "The following is a prototype usage of the :dbcommand:`mapReduce` command:"
msgstr ""

#: ../source/includes/extracts/admonition-js-prevalence-mapReduce.rst:3
msgid "JavaScript in MongoDB"
msgstr ""

#: ../source/includes/extracts/admonition-js-prevalence-mapReduce.rst:5
msgid ""
"Although :dbcommand:`mapReduce` uses JavaScript, most interactions with "
"MongoDB do not use JavaScript but use an :ecosystem:`idiomatic driver "
"</drivers>` in the language of the interacting application."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:4
msgid "Requirements for the ``map`` Function"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:6
msgid ""
"The ``map`` function is responsible for transforming each input document "
"into zero or more documents. It can access the variables defined in the "
"``scope`` parameter, and has the following prototype:"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:17
msgid "The ``map`` function has the following requirements:"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:19
msgid ""
"In the ``map`` function, reference the current document as ``this`` "
"within the function."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:22
msgid "The ``map`` function should *not* access the database for any reason."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:24
msgid ""
"The ``map`` function should be pure, or have *no* impact outside of the "
"function (i.e. side effects.)"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:27
msgid ""
"A single emit can only hold half of MongoDB's :ref:`maximum BSON document"
" size <limit-bson-document-size>`."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:30
msgid ""
"The ``map`` function may optionally call ``emit(key,value)`` any number "
"of times to create an output document associating ``key`` with ``value``."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:33
msgid ""
"The following ``map`` function will call ``emit(key,value)`` either 0 or "
"1 times depending on the value of the input document's ``status`` field:"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:44
msgid ""
"The following ``map`` function may call ``emit(key,value)`` multiple "
"times depending on the number of elements in the input document's "
"``items`` field:"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:4
msgid "Requirements for the ``reduce`` Function"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:6
msgid "The ``reduce`` function has the following prototype:"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:15
msgid "The ``reduce`` function exhibits the following behaviors:"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:17
msgid ""
"The ``reduce`` function should *not* access the database, even to perform"
" read operations."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:20
msgid "The ``reduce`` function should *not* affect the outside system."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:23
msgid ""
"MongoDB will **not** call the ``reduce`` function for a key that has only"
" a single value. The ``values`` argument is an array whose elements are "
"the ``value`` objects that are \"mapped\" to the ``key``."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:28
msgid ""
"MongoDB can invoke the ``reduce`` function more than once for the same "
"key. In this case, the previous output from the ``reduce`` function for "
"that key will become one of the input values to the next ``reduce`` "
"function invocation for that key."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:33
msgid ""
"The ``reduce`` function can access the variables defined in the ``scope``"
" parameter."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:36
msgid ""
"The inputs to ``reduce`` must not be larger than half of MongoDB's "
":ref:`maximum BSON document size <limit-bson-document-size>`. This "
"requirement may be violated when large documents are returned and then "
"joined together in subsequent ``reduce`` steps."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:41
msgid ""
"Because it is possible to invoke the ``reduce`` function more than once "
"for the same key, the following properties need to be true:"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:45
msgid ""
"the *type* of the return object must be **identical** to the type of the "
"``value`` emitted by the ``map`` function."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:49
msgid ""
"the ``reduce`` function must be *associative*. The following statement "
"must be true:"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:56
msgid ""
"the ``reduce`` function must be *idempotent*. Ensure that the following "
"statement is true:"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:63
msgid ""
"the ``reduce`` function should be *commutative*: that is, the order of "
"the elements in the ``valuesArray`` should not affect the output of the "
"``reduce`` function, so that the following statement is true:"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:4
msgid "Requirements for the ``finalize`` Function"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:6
msgid "The ``finalize`` function has the following prototype:"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:15
msgid ""
"The ``finalize`` function receives as its arguments a ``key`` value and "
"the ``reducedValue`` from the ``reduce`` function. Be aware that:"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:19
msgid "The ``finalize`` function should *not* access the database for any reason."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:22
msgid ""
"The ``finalize`` function should be pure, or have *no* impact outside of "
"the function (i.e. side effects.)"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:25
msgid ""
"The ``finalize`` function can access the variables defined in the "
"``scope`` parameter."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:4
msgid "``out`` Options"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:6
msgid "You can specify the following options for the ``out`` parameter:"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:9
msgid "Output to a Collection"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:11
msgid ""
"This option outputs to a new collection, and is not available on "
"secondary members of replica sets."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:19
msgid "Output to a Collection with an Action"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:21
msgid ""
"This option is only available when passing a collection that already "
"exists to ``out``. It is not available on secondary members of replica "
"sets."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:32
msgid ""
"When you output to a collection with an action, the ``out`` has the "
"following parameters:"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:35
msgid "``<action>``: Specify one of the following actions:"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:37
msgid "``replace``"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:39
msgid ""
"Replace the contents of the ``<collectionName>`` if the collection with "
"the ``<collectionName>`` exists."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:42
msgid "``merge``"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:44
msgid ""
"Merge the new result with the existing result if the output collection "
"already exists. If an existing document has the same key as the new "
"result, *overwrite* that existing document."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:51
msgid ""
"Merge the new result with the existing result if the output collection "
"already exists. If an existing document has the same key as the new "
"result, apply the ``reduce`` function to both the new and the existing "
"documents and overwrite the existing document with the result."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:57
msgid "``db``:"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:59
msgid ""
"Optional. The name of the database that you want the map-reduce operation"
" to write its output. By default this will be the same database as the "
"input collection."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:63
msgid "``sharded``:"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:65
msgid ""
"Optional. If ``true`` *and* you have enabled sharding on output database,"
" the map-reduce operation will shard the output collection using the "
"``_id`` field as the shard key."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:69
msgid ""
"If ``true`` and ``collectionName`` is an existing unsharded collection, "
"map-reduce fails."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:72
msgid "``nonAtomic``:"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:74
msgid ""
"Optional. Specify output operation as non-atomic. This applies **only** "
"to the ``merge`` and ``reduce`` output modes, which may take minutes to "
"execute."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:78
msgid ""
"By default ``nonAtomic`` is ``false``, and the map-reduce operation locks"
" the database during post-processing."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:81
msgid ""
"If ``nonAtomic`` is ``true``, the post-processing step prevents MongoDB "
"from locking the database: during this time, other clients will be able "
"to read intermediate states of the output collection."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:86
msgid "Output Inline"
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:88
msgid ""
"Perform the map-reduce operation in memory and return the result. This "
"option is the only available option for ``out`` on secondary members of "
"replica sets."
msgstr ""

#: ../source/includes/parameters-map-reduce.rst:96
msgid ""
"The result must fit within the :ref:`maximum size of a BSON document "
"<limit-bson-document-size>`."
msgstr ""

#: ../source/reference/command/mapReduce.txt:98
msgid "Required Access"
msgstr ""

#: ../source/reference/command/mapReduce.txt:100
msgid ""
"If your MongoDB deployment enforces authentication, the user executing "
"the :dbcommand:`mapReduce` command must possess the following privilege "
"actions:"
msgstr ""

#: ../source/reference/command/mapReduce.txt:104
msgid "Map-reduce with ``{out : inline}`` output option: - :authaction:`find`"
msgstr ""

#: ../source/reference/command/mapReduce.txt:107
msgid ""
"Map-reduce with the ``replace`` action when :ref:`outputting to a "
"collection <mapreduce-out-mtd>`: - :authaction:`find`, - "
":authaction:`insert`, - :authaction:`replace`"
msgstr ""

#: ../source/reference/command/mapReduce.txt:113
msgid ""
"Map-reduce with the ``merge`` or ``reduce`` actions when :ref:`outputting"
" to a collection <mapreduce-out-mtd>`: - :authaction:`find`, - "
":authaction:`insert`, - :authaction:`update`"
msgstr ""

#: ../source/reference/command/mapReduce.txt:119
msgid ""
"The :authrole:`readWrite` built-in role provides the necessary "
"permissions to perform map-reduce aggregation."
msgstr ""

#: ../source/reference/command/mapReduce.txt:123
msgid "Map-Reduce Examples"
msgstr ""

#: ../source/reference/command/mapReduce.txt:125
msgid ""
"In the :binary:`~bin.mongo` shell, the "
":method:`db.collection.mapReduce()` method is a wrapper around the "
":dbcommand:`mapReduce` command. The following examples use the "
":method:`db.collection.mapReduce()` method:"
msgstr ""

#: ../source/includes/examples-map-reduce.rst:3
msgid ""
"Consider the following map-reduce operations on a collection ``orders`` "
"that contains documents of the following prototype:"
msgstr ""

#: ../source/includes/examples-map-reduce.rst:21
msgid "Return the Total Price Per Customer"
msgstr ""

#: ../source/includes/examples-map-reduce.rst:25
msgid ""
"Perform the map-reduce operation on the ``orders`` collection to group by"
" the ``cust_id``, and calculate the sum of the ``price`` for each "
"``cust_id``:"
msgstr ""

#: ../source/includes/examples-map-reduce.rst:31
#: ../source/includes/examples-map-reduce.rst:93
msgid "Define the map function to process each input document:"
msgstr ""

#: ../source/includes/examples-map-reduce.rst:33
#: ../source/includes/examples-map-reduce.rst:95
msgid ""
"In the function, ``this`` refers to the document that the map-reduce "
"operation is processing."
msgstr ""

#: ../source/includes/examples-map-reduce.rst:36
msgid ""
"The function maps the ``price`` to the ``cust_id`` for each document and "
"emits the ``cust_id`` and ``price`` pair."
msgstr ""

#: ../source/includes/examples-map-reduce.rst:47
msgid ""
"Define the corresponding reduce function with two arguments ``keyCustId``"
" and ``valuesPrices``:"
msgstr ""

#: ../source/includes/examples-map-reduce.rst:50
msgid ""
"The ``valuesPrices`` is an array whose elements are the ``price`` values "
"emitted by the map function and grouped by ``keyCustId``."
msgstr ""

#: ../source/includes/examples-map-reduce.rst:53
msgid "The function reduces the ``valuesPrice`` array to the sum of its elements."
msgstr ""

#: ../source/includes/examples-map-reduce.rst:62
msgid ""
"Perform the map-reduce on all documents in the ``orders`` collection "
"using the ``mapFunction1`` map function and the ``reduceFunction1`` "
"reduce function."
msgstr ""

#: ../source/includes/examples-map-reduce.rst:74
msgid ""
"This operation outputs the results to a collection named "
"``map_reduce_example``. If the ``map_reduce_example`` collection already "
"exists, the operation will replace the contents with the results of this "
"map-reduce operation:"
msgstr ""

#: ../source/includes/examples-map-reduce.rst:82
msgid "Calculate Order and Total Quantity with Average Quantity Per Item"
msgstr ""

#: ../source/includes/examples-map-reduce.rst:86
msgid ""
"In this example, you will perform a map-reduce operation on the "
"``orders`` collection for all documents that have an ``ord_date`` value "
"greater than ``01/01/2012``. The operation groups by the ``item.sku`` "
"field, and calculates the number of orders and the total quantity ordered"
" for each ``sku``. The operation concludes by calculating the average "
"quantity per order for each ``sku`` value:"
msgstr ""

#: ../source/includes/examples-map-reduce.rst:98
msgid ""
"For each item, the function associates the ``sku`` with a new object "
"``value`` that contains the ``count`` of ``1`` and the item ``qty`` for "
"the order and emits the ``sku`` and ``value`` pair."
msgstr ""

#: ../source/includes/examples-map-reduce.rst:115
msgid ""
"Define the corresponding reduce function with two arguments ``keySKU`` "
"and ``countObjVals``:"
msgstr ""

#: ../source/includes/examples-map-reduce.rst:118
msgid ""
"``countObjVals`` is an array whose elements are the objects mapped to the"
" grouped ``keySKU`` values passed by map function to the reducer "
"function."
msgstr ""

#: ../source/includes/examples-map-reduce.rst:122
msgid ""
"The function reduces the ``countObjVals`` array to a single object "
"``reducedValue`` that contains the ``count`` and the ``qty`` fields."
msgstr ""

#: ../source/includes/examples-map-reduce.rst:126
msgid ""
"In ``reducedVal``, the ``count`` field contains the sum of the ``count`` "
"fields from the individual array elements, and the ``qty`` field contains"
" the sum of the ``qty`` fields from the individual array elements."
msgstr ""

#: ../source/includes/examples-map-reduce.rst:144
msgid ""
"Define a finalize function with two arguments ``key`` and ``reducedVal``."
" The function modifies the ``reducedVal`` object to add a computed field "
"named ``avg`` and returns the modified object:"
msgstr ""

#: ../source/includes/examples-map-reduce.rst:159
msgid ""
"Perform the map-reduce operation on the ``orders`` collection using the "
"``mapFunction2``, ``reduceFunction2``, and ``finalizeFunction2`` "
"functions."
msgstr ""

#: ../source/includes/examples-map-reduce.rst:176
msgid ""
"This operation uses the ``query`` field to select only those documents "
"with ``ord_date`` greater than ``new Date(01/01/2012)``. Then it output "
"the results to a collection ``map_reduce_example``. If the "
"``map_reduce_example`` collection already exists, the operation will "
"merge the existing contents with the results of this map-reduce "
"operation."
msgstr ""

#: ../source/reference/command/mapReduce.txt:132
msgid ""
"For more information and examples, see the :doc:`Map-Reduce </core/map-"
"reduce>` page and :doc:`/tutorial/perform-incremental-map-reduce`."
msgstr ""

#: ../source/reference/command/mapReduce.txt:139
msgid "Output"
msgstr ""

#: ../source/includes/extracts/bypassDocumentValidation-mapReduce.rst:1
msgid ""
"The :dbcommand:`mapReduce` command adds support for the "
"``bypassDocumentValidation`` option, which lets you bypass :doc:`document"
" validation </core/schema-validation>` when inserting or updating "
"documents in a collection with validation rules."
msgstr ""

#: ../source/reference/command/mapReduce.txt:143
msgid ""
"If you set the :ref:`out <mapReduce-out-cmd>` parameter to write the "
"results to a collection, the :dbcommand:`mapReduce` command returns a "
"document in the following form:"
msgstr ""

#: ../source/reference/command/mapReduce.txt:161
msgid ""
"If you set the :ref:`out <mapReduce-out-cmd>` parameter to output the "
"results inline, the :dbcommand:`mapReduce` command returns a document in "
"the following form:"
msgstr ""

#: ../source/reference/command/mapReduce.txt:187
msgid "For output sent to a collection, this value is either:"
msgstr ""

#: ../source/reference/command/mapReduce.txt:189
msgid ""
"a string for the collection name if :ref:`out <mapReduce-out-cmd>` did "
"not specify the database name, or"
msgstr ""

#: ../source/reference/command/mapReduce.txt:192
msgid ""
"a document with both ``db`` and ``collection`` fields if :ref:`out "
"<mapReduce-out-cmd>` specified both a database and collection name."
msgstr ""

#: ../source/reference/command/mapReduce.txt:197
msgid ""
"For output written inline, an array of resulting documents. Each "
"resulting document contains two fields:"
msgstr ""

#: ../source/reference/command/mapReduce.txt:200
msgid "``_id`` field contains the ``key`` value,"
msgstr ""

#: ../source/reference/command/mapReduce.txt:202
msgid ""
"``value`` field contains the reduced or finalized value for the "
"associated ``key``."
msgstr ""

#: ../source/reference/command/mapReduce.txt:207
msgid "The command execution time in milliseconds."
msgstr ""

#: ../source/reference/command/mapReduce.txt:211
msgid "Various count statistics from the :dbcommand:`mapReduce` command."
msgstr ""

#: ../source/reference/command/mapReduce.txt:215
msgid ""
"The number of input documents, which is the number of times the "
":dbcommand:`mapReduce` command called the ``map`` function."
msgstr ""

#: ../source/reference/command/mapReduce.txt:220
msgid ""
"The number of times the :dbcommand:`mapReduce` command called the "
"``emit`` function."
msgstr ""

#: ../source/reference/command/mapReduce.txt:225
msgid ""
"The number of times the :dbcommand:`mapReduce` command called the "
"``reduce`` function."
msgstr ""

#: ../source/reference/command/mapReduce.txt:230
msgid "The number of output values produced."
msgstr ""

#: ../source/reference/command/mapReduce.txt:234
msgid ""
"A value of ``1`` indicates the :dbcommand:`mapReduce` command ran "
"successfully. A value of ``0`` indicates an error."
msgstr ""

#: ../source/reference/command/mapReduce.txt:238
msgid "Additional Information"
msgstr ""

#: ../source/reference/command/mapReduce.txt:240
msgid ":doc:`/tutorial/troubleshoot-map-function`"
msgstr ""

#: ../source/reference/command/mapReduce.txt:242
msgid ":doc:`/tutorial/troubleshoot-reduce-function`"
msgstr ""

#: ../source/reference/command/mapReduce.txt:244
msgid ":method:`db.collection.mapReduce()`"
msgstr ""

#: ../source/reference/command/mapReduce.txt:246
msgid ":doc:`/aggregation`"
msgstr ""

#~ msgid ":doc:`/core/aggregation`"
#~ msgstr ""

#~ msgid ""
#~ "Pass the name of the collection to"
#~ " the ``mapReduce`` command (i.e. "
#~ "``<collection>``) to use as the source"
#~ " documents to perform the map reduce"
#~ " operation. The command also accepts "
#~ "the following parameters:"
#~ msgstr ""

#~ msgid ""
#~ "In MongoDB 2.4, :dbcommand:`map-reduce "
#~ "operations <mapReduce>`, the :dbcommand:`group` "
#~ "command, and :query:`$where` operator "
#~ "expressions **cannot** access certain global"
#~ " functions or properties, such as "
#~ "``db``, that are available in the "
#~ ":program:`mongo` shell."
#~ msgstr ""

#~ msgid ""
#~ "When upgrading to MongoDB 2.4, you "
#~ "will need to refactor your code if"
#~ " your :dbcommand:`map-reduce operations "
#~ "<mapReduce>`, :dbcommand:`group` commands, or "
#~ ":query:`$where` operator expressions include "
#~ "any global shell functions or properties"
#~ " that are no longer available, such"
#~ " as ``db``."
#~ msgstr ""

#~ msgid ""
#~ "The following JavaScript functions and "
#~ "properties **are available** to :dbcommand"
#~ ":`map-reduce operations <mapReduce>`, the "
#~ ":dbcommand:`group` command, and :query:`$where` "
#~ "operator expressions in MongoDB 2.4:"
#~ msgstr ""

#~ msgid "Available Properties"
#~ msgstr ""

#~ msgid "Available Functions"
#~ msgstr ""

#~ msgid "``args``"
#~ msgstr ""

#~ msgid "``MaxKey``"
#~ msgstr ""

#~ msgid "``MinKey``"
#~ msgstr ""

#~ msgid "``assert()``"
#~ msgstr ""

#~ msgid "``BinData()``"
#~ msgstr ""

#~ msgid "``DBPointer()``"
#~ msgstr ""

#~ msgid "``DBRef()``"
#~ msgstr ""

#~ msgid "``doassert()``"
#~ msgstr ""

#~ msgid "``emit()``"
#~ msgstr ""

#~ msgid "``gc()``"
#~ msgstr ""

#~ msgid "``HexData()``"
#~ msgstr ""

#~ msgid "``hex_md5()``"
#~ msgstr ""

#~ msgid "``isNumber()``"
#~ msgstr ""

#~ msgid "``isObject()``"
#~ msgstr ""

#~ msgid "``ISODate()``"
#~ msgstr ""

#~ msgid "``isString()``"
#~ msgstr ""

#~ msgid "``Map()``"
#~ msgstr ""

#~ msgid "``MD5()``"
#~ msgstr ""

#~ msgid "``NumberInt()``"
#~ msgstr ""

#~ msgid "``NumberLong()``"
#~ msgstr ""

#~ msgid "``ObjectId()``"
#~ msgstr ""

#~ msgid "``print()``"
#~ msgstr ""

#~ msgid "``printjson()``"
#~ msgstr ""

#~ msgid "``printjsononeline()``"
#~ msgstr ""

#~ msgid "``sleep()``"
#~ msgstr ""

#~ msgid "``Timestamp()``"
#~ msgstr ""

#~ msgid "``tojson()``"
#~ msgstr ""

#~ msgid "``tojsononeline()``"
#~ msgstr ""

#~ msgid "``tojsonObject()``"
#~ msgstr ""

#~ msgid "``UUID()``"
#~ msgstr ""

#~ msgid "``version()``"
#~ msgstr ""

# 9d22ccb726ef4895b154b23933b5d541
#~ msgid "On this page"
#~ msgstr ""

# 29011fa9aefe4fe8a187dd79a57414fc
#~ msgid ""
#~ "Pass the name of the collection to"
#~ " the ``mapReduce`` command (i.e. "
#~ "``<collection>``) to use as the source"
#~ " documents to perform the map reduce"
#~ " operation."
#~ msgstr ""

# 62b360ab3bc34ce297b2c78fb9ff1986
#~ msgid ""
#~ "Although :dbcommand:`mapReduce` uses JavaScript, "
#~ "most interactions with MongoDB do not"
#~ " use JavaScript but use an "
#~ ":doc:`idiomatic driver </applications/drivers>` in"
#~ " the language of the interacting "
#~ "application."
#~ msgstr ""

# 18a1215671b14fbeb3f5a6a96f00fb83
#~ msgid ""
#~ "In the :program:`mongo` shell, the "
#~ ":method:`db.collection.mapReduce()` method is a "
#~ "wrapper around the :dbcommand:`mapReduce` "
#~ "command. The following examples use the"
#~ " :method:`db.collection.mapReduce()` method:"
#~ msgstr ""

# 58cb4a4327404d39b0f16ed50d6c635f
#~ msgid ""
#~ "The :dbcommand:`mapReduce` command adds "
#~ "support for the ``bypassDocumentValidation`` "
#~ "option, which lets you bypass "
#~ ":ref:`document validation <3.2-rel-notes-"
#~ "document-validation>` when inserting or "
#~ "updating documents in a collection with"
#~ " validation rules."
#~ msgstr ""

# 3d7cfb8bd9fd48528b8655af4cf38fd6
#~ msgid ""
#~ "The number of documents the "
#~ ":dbcommand:`mapReduce` command called the "
#~ "``map`` function."
#~ msgstr ""

