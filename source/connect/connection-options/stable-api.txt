.. _nodejs-stable-api:

==============
{+stable-api+}
==============

.. facet::
   :name: genre
   :values: reference

.. meta:: 
   :keywords: code example, node.js, safe, breaking change

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. note::

   The {+stable-api+} feature requires {+mdb-server+} 5.0 or later.

   Use the {+stable-api+} feature only if all the MongoDB
   servers you are connecting to support this feature.

Overview
--------

In this guide, you can learn how to specify the **{+stable-api+}** when
connecting to a MongoDB instance or replica set. You can use the
{+stable-api+} feature to force the server to run operations with behavior
compatible with the specified **API version**. An API version defines the
expected behavior of the operations it covers and the format of server
responses. If you change to a different API version, the operations are not
guaranteed to be compatible and the server responses are not guaranteed to
be similar.

When you use the {+stable-api+} feature with an official MongoDB driver, you
can update your driver or server without worrying about backward compatibility
issues of the commands covered by the {+stable-api+}.

See the MongoDB reference page on the :manual:`{+stable-api+} </reference/stable-api/>`
for more information including a list of commands it covers.

The following sections describe how you can enable the {+stable-api+} for
your MongoDB client and the options that you can specify.

Enable the {+stable-api+} on a MongoDB Client
---------------------------------------------

To enable the {+stable-api+}, you must specify an API version in the ``MongoClientOptions``
passed to your ``MongoClient``. Once you instantiate a ``MongoClient`` instance with
a specified API version, all commands you run with that client use that
version of the {+stable-api+}.

.. tip::

   You must create a new client for each version of the {+stable-api+} on
	which you want to run a command.

   To run commands that are not covered by the {+stable-api+}, make sure the
   "strict" option is disabled. See the section on
   :ref:`{+stable-api+} Options <nodejs-stable-api-options>` for more
   information.

The example below shows how you can instantiate a ``MongoClient`` that
sets the {+stable-api+} version and connects to a server by performing the
following operations:

- Specify a server URI to connect to.
- Specify a {+stable-api+} version in the ``MongoClientOptions`` object, using a
  constant from the ``ServerApiVersion`` object.
- Instantiate a ``MongoClient``, passing the URI and the ``MongoClientOptions``
  to the constructor.

.. literalinclude:: /code-snippets/stable-api/basic.js
   :start-after: begin serverApiVersion
   :end-before: end serverApiVersion
   :language: javascript
   :dedent:

.. warning::

   If you specify an API version and connect to a {+mdb-server+} that does
   not support the {+stable-api+}, your application may throw an error when
   connecting to your {+mdb-server+} with the following text:

   .. code-block:: none
      :copyable: false

      MongoParseError: Invalid server API version=...

For more information on the methods and classes referenced in this
section, see the following API Documentation:

- `ServerApiVersion <{+api+}/modules.html#ServerApiVersion>`__
- `MongoClientOptions <{+api+}/interfaces/MongoClientOptions.html>`__
- `MongoClient <{+api+}/classes/MongoClient.html>`__

.. _nodejs-stable-api-options:
.. _versioned-api-options:

{+stable-api+} Options
----------------------

You can enable or disable optional behavior related to the {+stable-api+} as
described in the following table.

.. list-table::
   :header-rows: 1
   :stub-columns: 1
   :widths: 25,75

   * - Option Name
     - Description

   * - version
     - | **Required**. Specifies the version of the {+stable-api+}.
       |
       | Default: **null**

   * - strict
     - | **Optional**. When set, if you call a command that is not part of the declared API version, the driver raises an exception.
       |
       | Default: **false**

   * - deprecationErrors
     - | **Optional**. When set, if you call a command that is deprecated in the declared API version, the driver raises an exception.
       |
       | Default: **false**



The following example shows how you can set the options of the ``ServerApi``
interface.

.. literalinclude:: /code-snippets/stable-api/options.js
   :start-after: begin serverApiVersion
   :end-before: end serverApiVersion
   :language: javascript
   :dedent:

For more information on the options in this section, see the following
API Documentation:

- `ServerApi <{+api+}/interfaces/ServerApi.html>`__
