ref: listCollections-auth-required-access
content: |

   The :dbcommand:`listCollections` command requires the
   :authaction:`listCollections` action when access control is enforced.
   Users must have privileges that grant the ``listCollections`` action
   on the database to run ``listCollections``.
   
   For example, the following command grants the privilege to run
   :method:`db.getCollectionInfos()` against the ``test`` database:

   .. code-block:: javascript

      { resource: { db: "test", collection: "" }, actions: [ "listCollections" ] }

   The built-in role :authrole:`read` provides the privilege to run
   ``listCollections`` for a specific database.

   Users without the required ``read`` privilege can run
   ``listCollections`` when ``authorizedCollections`` and ``nameOnly``
   are both set to ``true``. In this case, the command returns the names
   and types for collection(s) where the user has privileges.

   For example, consider a user with a role that grants the following
   ``find`` privilege:

   .. code-block:: javascript

      { resource: { db: "sales", collection: "currentQuarter" }, actions: [ "find" ] }

   The user can run ``listCollections`` if  ``authorizedCollections``
   and ``nameOnly`` are both set to ``true``.

   .. code-block:: javascript

      db.runCommand(
         {
             listCollections: 1.0,
             authorizedCollections: true,
             nameOnly: true
         }
      )

   The operation returns the name and type of the ``currentQuarter``
   collection.

   However, the following operations return an error if the user does
   not have the required access authorization:

   .. code-block:: javascript

      db.runCommand(
         {
             listCollections: 1.0,
             authorizedCollections: true
         }
      )

      db.runCommand(
         {
             listCollections: 1.0,
             nameOnly: true
         }
      )
---
ref: listCollections-auth-show-collections
content: |

   The ``mongosh`` method ``show collections`` is similar to:

   .. code-block:: javascript

      db.runCommand(
         {
             listCollections: 1.0,
             authorizedCollections: true,
             nameOnly: true
         }
      )

   - For users with the required access, ``show collections`` lists the
     non-system collections for the database.

   - For users without the required access, ``show collections`` lists
     only the collections for which the users has privileges.
---
ref: listCollections-auth-showCollectionNames
content: |

   The :method:`db.getCollectionNames()` is equivalent to:

   .. code-block:: javascript

      db.runCommand(
         {
             listCollections: 1.0,
             authorizedCollections: true,
             nameOnly: true
         }
      )

   - For users with the required access (privileges that grant
     :authaction:`listCollections` action on the database), the method
     lists the names of all collections for the database.

   - For users without the required access, the method lists only the
     collections for which the users has privileges. For example, if a
     user has :authaction:`find` on a specific collection in a
     database, the method would return just that collection.

...

