.. _avs-performance-tuning:
.. _avs-benchmark:

===================================
Benchmark for {+avs+}
===================================

.. default-domain:: mongodb

.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: MongoDB vector search, benchmark, performance
   :description: Learn how to test, evaluate, and improve your MongoDB Vector Search performance.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

This section contains the following pages, which provide information about our {+avs+} 
performance benchmark and how you can use it to test, evaluate, and improve 
your own vector search performance:

- :ref:`Benchmark Overview <avs-benchmark-overview>`
- :ref:`Benchmark Results <avs-benchmark-results>`
- :ref:`Additional Recommendations <avs-performance-recommendations>`

.. image:: /images/avs/performance/recall-latency.png
   :alt: Recall and Latency results from our MongoDB Vector Search Benchmark
   :figwidth: 40%

.. cta-banner::
   :url: https://claude.ai/public/artifacts/6459f0c6-e3b1-4e8e-99ca-9dde5439a93d
   :icon: wizard

   To view the full chart, see the `Claude artifact <https://claude.ai/public/artifacts/6459f0c6-e3b1-4e8e-99ca-9dde5439a93d>`__.

.. _avs-how-to-use-benchmark:

How to Use This Benchmark
-------------------------

The primary goal for these pages is to significantly
reduce friction for your first vector test at scale (>10M vectors)
when evaluating performance for {+avs+}.

These pages provide a set of initial configurations (embedding model 
dimensionality, quantization regime, ``numCandidates`` selection, filtering
criteria, Search Node configuration) that you can use to run tests confidently. 
You might need to modify your configuration based on the dataset and query 
patterns relevant to your use case, as this is only meant to be a starting point.
   
Reading Recommendations
-----------------------

When reading these pages, we recommend that you focus on the primary concern 
that is most relevant to your use case. We provide guidance for the following 
primary concerns: **Recall**, **Cost**, and **Latency/Throughput**.

Use the guidance that is most appropriate for your use case:

.. tabs::

   .. tab:: Recall
      :tabid: recall

      Read these sections in the following order:

      1. The following sections in the :ref:`Benchmark Overview <avs-benchmark-overview>`:

         - :ref:`Quantization <avs-benchmark-quantization>`
         - :ref:`Dimensionality <avs-benchmark-dimensionality>`
         - :ref:`Search Node Configuration <avs-benchmark-search-node-config>`

      #. The following sections in the :ref:`Benchmark Results <avs-benchmark-results>`:

         - :ref:`Summary of Results <avs-benchmark-results-summary>`
         - :ref:`Multidimensional Benchmark <avs-multi-dimensional-benchmark>`
         - :ref:`Larger Benchmark <avs-multi-larger-benchmark>`
         - :ref:`Recall and Latency Analysis <avs-recall-latency-analysis>`
         - :ref:`Filtering <avs-benchmark-results-filtering>`
      
      #. :ref:`Additional Performance Recommendations <avs-performance-recommendations>`
      
   .. tab:: Cost
      :tabid: cost

      Read these sections in the following order:

      1. The following sections in the :ref:`Benchmark Overview <avs-benchmark-overview>`:
     
         - :ref:`Quantization <avs-benchmark-quantization>`
         - :ref:`Dimensionality <avs-benchmark-dimensionality>`
         - :ref:`Search Node Configuration <avs-benchmark-search-node-config>`

      #. The following sections in the :ref:`Benchmark Results <avs-benchmark-results>`:

         - :ref:`Summary of Results <avs-benchmark-results-summary>`
         - :ref:`Multidimensional Benchmark <avs-multi-dimensional-benchmark>`
         - :ref:`Larger Benchmark <avs-multi-larger-benchmark>`
         - :ref:`Recall and Latency Analysis <avs-recall-latency-analysis>`
         - :ref:`Concurrency <avs-benchmark-results-concurrency>`

      #. :ref:`Additional Performance Recommendations <avs-performance-recommendations>`

   .. tab:: Latency/Throughput
      :tabid: latency

      Read these sections in the following order:

      1. Complete :ref:`Benchmark Overview <avs-benchmark-overview>`
      #. Complete :ref:`Benchmark Results <avs-benchmark-results>`
      #. :ref:`Additional Performance Recommendations <avs-performance-recommendations>`

Changelog
---------

.. list-table::
   :header-rows: 1
   :widths: 25 75

   * - Date
     - Description

   * - 2025-07-21
     - Release of benchmark guide and results demonstrating how {+avs+} scales 
       on a 5.5M Multidimensional and 15.3M 2048d Amazon Dataset with |voyage|'s 
       ``voyage-3-large`` embeddings under various conditions.

.. toctree::
   :titlesonly:

   Benchmark Overview </atlas-vector-search/benchmark/overview/>
   Benchmark Results </atlas-vector-search/benchmark/results/>
   Additional Recommendations </atlas-vector-search/benchmark/performance-recommendations/>
   