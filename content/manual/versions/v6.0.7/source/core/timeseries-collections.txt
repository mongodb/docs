.. _manual-timeseries-landing:

===========
Time Series
===========

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. meta::
   :description: Time series, IOT, time series analysis, time series data, time series db
   :keywords: Time series, IOT, time series analysis, time series data, time series db

Time series data is a sequence of data points in which insights are
gained by analyzing changes over time.

Time series data is generally composed of these components:

- **Time** when the data point was recorded.

- **Metadata** (sometimes referred to as source), which is a label or tag
  that uniquely identifies a series and rarely changes.

- **Measurements** (sometimes referred to as metrics or values), which
  are the data points tracked at increments in time. Generally these are
  key-value pairs that change over time.

This table shows examples of time series data:

.. list-table::
   :header-rows: 1
   :widths: 30, 30, 40

   * - **Example**
     - **Measurement**
     - **Metadata**

   * - Stock data
     - Stock price
     - Stock ticker, exchange

   * - Weather data
     - Temperature
     - Sensor identifier, location
     
   * - Website visitors
     - View count
     - URL

For efficient time series data storage, MongoDB provides time series
collections.

.. _manual-timeseries-collection:

Time Series Collections
-----------------------

.. versionadded:: 5.0

Time series collections efficiently store time series data. In time
series collections, writes are organized so that data from the same
source is stored alongside other data points from a similar point in
time.

Benefits
~~~~~~~~

Compared to normal collections, storing time series data in time series
collections improves query efficiency and reduces the disk usage for
time series data and :term:`secondary indexes <secondary index>`.

Time series collections use an underlying columnar storage format and
store data in time-order with an automatically created :ref:`clustered
index <clustered-collections>`. The columnar storage format provides the
following benefits:

- Reduced complexity for working with time series data
- Improved query efficiency
- Reduced disk usage
- Reduced I/O for read operations
- Increased WiredTiger cache usage

.. _timeseries-collections-behavior:

Behavior
~~~~~~~~

Time series collections behave like normal collections. You can insert
and query your data as you normally would.

MongoDB treats time series collections as writable non-materialized
:ref:`views <views-landing-page>` backed by an internal collection. When
you insert data, the internal collection automatically organizes time
series data into an optimized storage format.

When you query time series collections, you operate on one document per
measurement. Queries on time series collections take advantage of the
optimized internal storage format and return results faster.

.. important:: Backward-Incompatible Feature

   .. include:: /includes/downgrade-for-timeseries-collections.rst

Internal Index
``````````````

When you create a time series collection, MongoDB automatically creates
an internal :ref:`clustered index <clustered-collections>` on the time
field. The internal index provides several performance benefits
including improved query efficiency and reduced disk usage. To learn
more about the performance benefits of clustered indexes, see
:ref:`Clustered Collections <clustered-collections>`.

The internal index for a time series collection is not displayed by
:dbcommand:`listIndexes`.

.. tip::

   To improve query performance, you can manually :ref:`add secondary
   indexes <timeseries-add-secondary-index>` on measurement fields or
   any field in your time series collection.

Get Started
-----------

To get started with time series collections, see
:ref:`timeseries-create-query-procedures`.

.. toctree::
   :titlesonly:

   /core/timeseries/timeseries-procedures
   /core/timeseries/timeseries-check-type
   /core/timeseries/timeseries-automatic-removal
   /core/timeseries/timeseries-granularity
   /core/timeseries/timeseries-secondary-index
   /core/timeseries/timeseries-migrate-data-into-timeseries-collection
   /core/timeseries/timeseries-build-materialized-views
   /core/timeseries/timeseries-shard-collection
   /core/timeseries/timeseries-best-practices
   Reference </core/timeseries/timeseries-reference>
