.. _keyvault-getkeys-method:

==================
KeyVault.getKeys()
==================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. method:: KeyVault.getKeys()

   :method:`~KeyVault.getKeys()` returns all data encryption keys stored
   in the key vault associated to the database connection.

   :method:`~KeyVault.getKeys()` has the following syntax:

   .. code-block:: none

      keyVault = db.getMongo().getKeyVault()
      
      keyVault.getKeys()

   :returns:

     Returns all data encryption keys associated to the key vault.

     Returns nothing if the key vault is empty.

Behavior
--------

Requires Configuring Client-Side Field Level Encryption on Database Connection
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/extracts/csfle-requires-enabling-encryption.rst

Example
-------

The following example uses a :ref:`locally managed KMS
<qe-fundamentals-kms-providers-local>` for the client-side field level
encryption configuration. 

.. include:: /includes/csfle-connection-boilerplate-example.rst

Retrieve the :method:`KeyVault <getKeyVault()>` object and use the
:method:`KeyVault.getKeys()` method to retrieve all data encryption keys
in the key vault:

.. code-block:: javascript

   keyVault.getKeys()

:method:`~KeyVault.getKeys()` returns all data encryption keys in the
key vault, with output similar to the following:

.. code-block:: json

   {
     "_id" : UUID("b4b41b33-5c97-412e-a02b-743498346079"),
     "keyMaterial" : BinData(0,"PXRsLOAYxhzTS/mFQAI8486da7BwZgqA91UI7NKz/T/AjB0uJZxTvhvmQQsKbCJYsWVS/cp5Rqy/FUX2zZwxJOJmI3rosPhzV0OI5y1cuXhAlLWlj03CnTcOSRzE/YIrsCjMB0/NyiZ7MRWUYzLAEQnE30d947XCiiHIb8a0kt2SD0so8vZvSuP2n0Vtz4NYqnzF0CkhZSWFa2e2yA=="),
     "creationDate" : ISODate("2021-03-15T12:21:13.123Z"),
     "updateDate" : ISODate("2021-03-15T12:21:13.123Z"),
     "status" : 0, "version" : NumberLong(0),
     "masterKey" : {
       "provider" : "local"
     },
     "keyAltNames" : [
        "alpha"
     ]
   }
   {
     "_id" : UUID("f1add015-c7ab-49a2-a071-50b0ca0a8fbc"),
     "keyMaterial" : BinData(0,"E+0jZKzA4YuE1lGmSVIy2mivqH4JxFo0yFATdxYX/s0YtMFsgVXyu7Bbn4IQ2gn7F/9JAPJFOxdQc5lN3AR+oX33ewVZsd63f3DN1zzcukqdR2Y+EeO7ekRxyRjdzMaNNrBNIv9Gn5LEJgWPSYkG8VczF7cNZnc1YmnR0tuDPNYfm0J7dCZuZUNWW3FCGRcdFx6AlXiCtXKNR97hJ216pQ=="),
     "creationDate" : ISODate("2021-03-16T18:22:43.733Z"),
     "updateDate" : ISODate("2021-03-16T18:22:43.733Z"),
     "status" : 0, "version" : NumberLong(0),
     "masterKey" : {
       "provider" : "local"
     },
     "keyAltNames" : [
        "baker"
     ]
   }
