# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/query-optimization.txt:5
# e88297496f6d426cb5fced6acf18927b
msgid "Query Optimization"
msgstr ""

#: ../source/core/query-optimization.txt:9
# e924312e4e2f494fa4c2e8acdbb0c001
msgid "Indexes improve the efficiency of read operations by reducing the amount of data that query operations need to process. This simplifies the work associated with fulfilling queries within MongoDB."
msgstr ""

#: ../source/core/query-optimization.txt:14
# 8acce20a9e034c6fab291f025ae9bc88
msgid "Create an Index to Support Read Operations"
msgstr ""

#: ../source/core/query-optimization.txt:16
# 67b6646787624f55b01131f15c5ded25
msgid "If your application queries a collection on a particular field or set of fields, then an index on the queried field or a :doc:`compound index </core/index-compound>` on the set of fields can prevent the query from scanning the whole collection to find and return the query results. For more information about indexes, see the :doc:`complete documentation of indexes in MongoDB </core/indexes>`."
msgstr ""

#: ../source/core/query-optimization.txt:0
# 9c80030dbd6c4171a19091d75078b97f
msgid "Example"
msgstr ""

#: ../source/core/query-optimization.txt:31
# 34e46ccdb45b42028b212086ff6c89f9
msgid "To improve the performance of this query, add an ascending, or a descending, index to the ``inventory`` collection on the ``type`` field. [#ensureIndexOrder]_ In the :program:`mongo` shell, you can create indexes using the :method:`db.collection.createIndex()` method:"
msgstr ""

#: ../source/core/query-optimization.txt:41
# 57722ba8b2984089ab9205959e70706c
msgid "This index can prevent the above query on ``type`` from scanning the whole collection to return the results."
msgstr ""

#: ../source/core/query-optimization.txt:44
# fa71f17fbe4d466eb8c7123b93ef34e6
msgid "To analyze the performance of the query with an index, see :doc:`/tutorial/analyze-query-plan`."
msgstr ""

#: ../source/core/query-optimization.txt:47
# 047c9b5543fd42ca8a6773f88421aa16
msgid "In addition to optimizing read operations, indexes can support sort operations and allow for a more efficient storage utilization. See :method:`db.collection.createIndex()` and :doc:`/administration/indexes` for more information about index creation."
msgstr ""

#: ../source/core/query-optimization.txt:54
# 18b14bd6538f4ee6b242851dcd0cd95e
msgid "For single-field indexes, the selection between ascending and descending order is immaterial. For compound indexes, the selection is important. See :ref:`indexing order <index-ascending-and-descending>` for more details."
msgstr ""

#: ../source/core/query-optimization.txt:62
# e2d22f72996d4db5b5f93761bf24e9c3
msgid "Query Selectivity"
msgstr ""

#: ../source/core/query-optimization.txt:64
# 18a1de51d7b64ffd917485b085823409
msgid "Query selectivity refers to how well the query predicate excludes or filters out documents in a collection. Query selectivity can determine whether or not queries can use indexes effectively or even use indexes at all."
msgstr ""

#: ../source/core/query-optimization.txt:69
# 3d040fcf10334f3caca5bf56c0ec98d8
msgid "More selective queries match a smaller percentage of documents. For instance, an equality match on the unique ``_id`` field is highly selective as it can match at most one document."
msgstr ""

#: ../source/core/query-optimization.txt:73
# c652a4ebc3a047dcae3470f7340dcc11
msgid "Less selective queries match a larger percentage of documents. Less selective queries cannot use indexes effectively or even at all."
msgstr ""

#: ../source/core/query-optimization.txt:76
# 7f2514fbbd794bf688c5313f3ca01767
msgid "For instance, the inequality operators :query:`$nin` and :query:`$ne` are *not* very selective since they often match a large portion of the index. As a result, in many cases, a :query:`$nin` or :query:`$ne` query with an index may perform no better than a :query:`$nin` or :query:`$ne` query that must scan all documents in a collection."
msgstr ""

#: ../source/core/query-optimization.txt:82
# a91595345587482188dd154b2390bcc2
msgid "The selectivity of :query:`regular expressions <$regex>` depends on the expressions themselves. For details, see :ref:`regular expression and index use <regex-index-use>`."
msgstr ""

#: ../source/core/query-optimization.txt:91
# fb76497bb39c4e288821f789bd863a7a
msgid "Covering a Query"
msgstr ""

#: ../source/core/query-optimization.txt:93
# 2cc23eb9927e419d95b9fce7843a48a7
msgid "An index :ref:`covers <indexes-covered-queries>` a query when both of the following apply:"
msgstr ""

#: ../source/core/query-optimization.txt:96
# 862de7b84c5e45bb83b57b228501d868
msgid "all the fields in the :ref:`query <read-operations-query-document>` are part of an index, **and**"
msgstr ""

#: ../source/core/query-optimization.txt:99
# b9ee9fe40f714325b32a83d356357f8e
msgid "all the fields returned in the results are in the same index."
msgstr ""

#: ../source/core/query-optimization.txt:101
# 9af8e24163e34e24a6af598e12895666
msgid "For example, a collection ``inventory`` has the following index on the ``type`` and ``item`` fields:"
msgstr ""

#: ../source/core/query-optimization.txt:108
# 0a1b4a194ce74befaf5ba6b97a4922c1
msgid "This index will cover the following operation which queries on the ``type`` and ``item`` fields and returns only the ``item`` field:"
msgstr ""

#: ../source/core/query-optimization.txt:118
# f6046c77964442b28cb9245b97218647
msgid "For the specified index to cover the query, the projection document must explicitly specify ``_id: 0`` to exclude the ``_id`` field from the result since the index does not include the ``_id`` field."
msgstr ""

#: ../source/core/query-optimization.txt:123
# 789546c2242d4e58a7b959381634bf30
msgid "Performance"
msgstr ""

#: ../source/core/query-optimization.txt:125
# 36fc9be904ee4483bcc174ec03eb3b2f
msgid "Because the index contains all fields required by the query, MongoDB can both match the :ref:`query conditions <read-operations-query-document>` and return the results using only the index."
msgstr ""

#: ../source/core/query-optimization.txt:129
# 2bed26f08ed24a59aeb03fc1607b4d6c
msgid "Querying *only* the index can be much faster than querying documents outside of the index. Index keys are typically smaller than the documents they catalog, and indexes are typically available in RAM or located sequentially on disk."
msgstr ""

#: ../source/core/query-optimization.txt:135
# 30f464257a504bd09a294ebebcb65051
msgid "Limitations"
msgstr ""

#: ../source/core/query-optimization.txt:138
# 15bf0ad4b06b497b91b49f16b3709a01
msgid "Restrictions on Indexed Fields"
msgstr ""

#: ../source/core/query-optimization.txt:140
# 9f253e69a583445588bea832ad996575
msgid "An index **cannot** cover a query if:"
msgstr ""

#: ../source/core/query-optimization.txt:142
# 2d256edc4fb543a38bfe47a7fcd8c603
msgid "any of the indexed fields in any of the documents in the collection includes an array. If an indexed field is an array, the index becomes a :ref:`multi-key index <index-type-multikey>` index and cannot support a covered query."
msgstr ""

#: ../source/core/query-optimization.txt:147
# bda4ffae42bc44b2a71986e28f3e5d13
msgid "any of the indexed field in the query predicate or returned in the projection are fields in embedded documents. [#index-embedded-document-fields]_ For example, consider a collection ``users`` with documents of the following form:"
msgstr ""

#: ../source/core/query-optimization.txt:156
# f3fdb494d55044a6bc62cdd162059d69
msgid "The collection has the following index:"
msgstr ""

#: ../source/core/query-optimization.txt:162
# 27abb2ff8b5a47bcb1cb847551139821
msgid "The ``{ \"user.login\": 1 }`` index does **not** cover the following query:"
msgstr ""

#: ../source/core/query-optimization.txt:169
# 1f38cdb4d73e43dbbf77490875ca4296
msgid "However, the query can use the ``{ \"user.login\": 1 }`` index to find matching documents."
msgstr ""

#: ../source/core/query-optimization.txt:175
# 45ab11b292454ac59c0d1e6cc4311e2f
msgid "Restrictions on Sharded Collection"
msgstr ""

#: ../source/includes/extracts/fact-covered-query-sharded-collection-cover.rst:1
# 0b29abd8f6e44a6396da1c60497c4a54
msgid "An index cannot cover a query on a :term:`sharded <shard>` collection when run against a :program:`mongos` if the index does not contain the shard key, with the following exception for the ``_id`` index: If a query on a sharded collection only specifies a condition on the ``_id`` field and returns only the ``_id`` field, the ``_id`` index can cover the query when run against a :program:`mongos` even if the ``_id`` field is not the shard key."
msgstr ""

#: ../source/includes/extracts/fact-covered-query-sharded-collection-cover.rst:11
# 496b8f1c7631404eae7d70e334c0267a
msgid "In previous versions, an index cannot :ref:`cover <covered-queries>` a query on a :term:`sharded <shard>` collection when run against a :program:`mongos`."
msgstr ""

#: ../source/core/query-optimization.txt:180
# e6817b3172cc4869a5b20d231e64c3f5
msgid "``explain``"
msgstr ""

#: ../source/core/query-optimization.txt:182
# 4b0906384efc404eb1eeff2ebd891803
msgid "To determine whether a query is a covered query, use the :method:`db.collection.explain()` or the :method:`~cursor.explain()` method and review the :ref:`results <explain-output-covered-queries>`."
msgstr ""

#: ../source/includes/fact-explain-collection-method.rst:1
# 4847bca8ff26466691a679d92e0a4c91
msgid ":method:`db.collection.explain()` provides information on the execution of other operations, such as :method:`db.collection.update()`. See :method:`db.collection.explain()` for details."
msgstr ""

#: ../source/core/query-optimization.txt:188
# 6df34db74db44422a19e29a3286eac24
msgid "For more information see :ref:`indexes-measuring-use`."
msgstr ""

#: ../source/core/query-optimization.txt:190
# 1cabcd5fcc4e40dbb7609c0bd3bb742a
msgid "To index fields in embedded documents, use :term:`dot notation`."
msgstr ""

