.. _inter-process-auth:
.. _replica-set-security:

==================================
Internal/Membership Authentication
==================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

You can require that members of :term:`replica sets <replica set>` and
:term:`sharded clusters <sharded cluster>` authenticate to each other.
For the internal authentication of the members, MongoDB can use either
:ref:`keyfiles <internal-auth-keyfile>` or :ref:`x.509
<internal-auth-x509>` certificates.

The selected method is used for all internal communication. For example, when a
client authenticates to a :binary:`~bin.mongos` using one of the supported
:ref:`authentication mechanisms <security-authentication-mechanisms>`,
the ``mongos`` then uses the configured internal authentication method to
connect to the required :binary:`~bin.mongod` processes.

.. note::

   Enabling internal authentication also enables :doc:`client
   authorization </core/authorization>`.

.. _internal-auth-keyfile:

Keyfiles
--------

Keyfiles use :doc:`/core/security-scram` challenge and response
authentication mechanism where the keyfiles contain the shared password
for the members.

Key Requirements
~~~~~~~~~~~~~~~~

A key's length must be between 6 and 1024 characters and may only
contain characters in the base64 set. MongoDB strips whitespace
characters (e.g. ``x0d``, ``x09``, and ``x20``) for cross-platform
convenience. As a result, the following operations produce identical
keys:

.. code-block:: sh


   echo -e "mysecretkey" > key1
   echo -e "my secret key" > key1
   echo -e "my secret key\n" > key2
   echo -e "my    secret    key" > key3
   echo -e "my\r\nsecret\r\nkey\r\n" > key4

Keyfile Format
~~~~~~~~~~~~~~

.. include:: /includes/extracts/4.2-changes-keyfile-fmt.rst

For example,

.. tabs::

   tabs:
   
      - id: single-key
        name: Single key
        content: |

          If the keyfile contains a single key, you can specify the key
          string with or without quotes

          .. code-block:: yaml

             my old secret key1

      - id: multiple-key-strings
        name: Multiple Key Strings
        content: |

           You can specify multiple key strings
           [#exclude-encryption-keyfile]_ where each key string is
           **enclosed in quotes**:

           .. code-block:: yaml

              'my old secret key1'
              'my new secret key2'

      - id: multiple-key-sequence
        name: Multiple Key Sequence
        content: |

           You can specify multiple key strings
           [#exclude-encryption-keyfile]_ as a sequence of key strings
           (optionally enclosed in quotes):

           .. code-block:: yaml

              - my old secret key1
              - my new secret key2

The ability to specify multiple keys in a file allows for the rolling
upgrade of the keys without downtime. See
:doc:`/tutorial/rotate-key-replica-set` and
:doc:`/tutorial/rotate-key-sharded-cluster`.

All :binary:`~bin.mongod` and :binary:`~bin.mongos` instances of a
deployment must share at least one common key.

.. include:: /includes/extracts/keyfile-file-permission.rst

You must store the keyfile on each server hosting the member of the
replica set or sharded clusters.

.. [#exclude-encryption-keyfile]

   For :doc:`MongoDB's encrypted storage engine
   </core/security-encryption-at-rest>`, the :ref:`keyfile
   <encrypt-local-key-mgmt>` used for local key management can only
   contain a single key .

MongoDB Configuration for Keyfile
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To specify the keyfile, use the :setting:`security.keyFile` setting or
``--keyFile`` command line option.

For an example of keyfile internal authentication, see
:doc:`/tutorial/enforce-keyfile-access-control-in-existing-replica-set`.

.. _internal-auth-x509:

x.509
-----

Members of a replica set or sharded cluster can use x.509 certificates for
internal authentication instead of using keyfiles. MongoDB supports x.509
certificate authentication for use with a secure TLS/SSL connection.

.. note::

   .. include:: /includes/fact-tls-1.0.rst

.. |binary| replace:: MongoDB

Member Certificate Requirements
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/extracts/x509-certificate-member.rst

MongoDB Configuration
~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/extracts/x509-member-auth-configuration.rst

Next Steps
----------

For an example of x.509 internal authentication, see
:doc:`/tutorial/configure-x509-member-authentication`.

To upgrade from keyfile internal authentication to x.509 internal authentication,
see :doc:`/tutorial/upgrade-keyfile-to-x509`.

.. toctree::
   :titlesonly:
   :hidden:

   /tutorial/deploy-replica-set-with-keyfile-access-control
   /tutorial/enforce-keyfile-access-control-in-existing-replica-set
   /tutorial/enforce-keyfile-access-control-in-existing-replica-set-without-downtime
   /tutorial/rotate-key-replica-set
   /tutorial/deploy-sharded-cluster-with-keyfile-access-control
   /tutorial/enforce-keyfile-access-control-in-existing-sharded-cluster
   /tutorial/enforce-keyfile-access-control-in-existing-sharded-cluster-no-downtime
   /tutorial/rotate-key-sharded-cluster
   /tutorial/configure-x509-member-authentication
   /tutorial/upgrade-keyfile-to-x509
   /tutorial/rotate-x509-membership-certificates
