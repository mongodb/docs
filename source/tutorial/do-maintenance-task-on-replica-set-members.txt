==========================================
Perform Maintenance on Replica Set Members
==========================================

.. default-domain:: mongodb

.. contents::
   :backlinks: none
   :local:

Overview
--------

:term:`Replica sets <replica set>` make it possible to continue to
serve client queries while administrators perform maintenance on each
member of the set.

Use this procedure to implement your own replica set maintenance
operations. These steps minimize the number of elections that must
take place during maintenance, and help ensure uptime as you bring
each member down in turn.

This procedure is the basis for common replica set operations
documented in this manual, such as :doc:`upgrading to the latest
version of MongoDB </tutorial/upgrade-revision>` and :doc:`changing
the size of the oplog</tutorial/change-oplog-size>`.

Procedure
---------

For each member of a replica set, perform the following sequence of
operations. Start with a secondary member of the set, proceed through
each secondary in turn, and end with the primary. This ensures that
the set only has to elect a new primary once.

- Restart the :program:`mongod` instance as a standalone.

- Perform the task on the standalone instance.

- Restart the :program:`mongod` instance as a member of the replica
  set.

.. _stop-a-secondary:

Stop a Secondary
~~~~~~~~~~~~~~~~

In the :program:`mongo` shell, shut down the :program:`mongod`
instance:

.. code-block:: javascript

   db.shutdownServer()

Restart the Secondary as a Standalone on a Different Port
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

At the operating system shell prompt, restart :program:`mongod`
as a standalone instance running on a different port and *without*
the :option:`--replSet <mongod --replSet>` parameter:

.. code-block:: sh

   mongod --port 37017 --dbpath /srv/mongodb

Perform Maintenance Operations on the Secondary
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

While the member is a standalone, use the :program:`mongo` shell to
perform maintenance:

.. code-block:: sh

   mongo --port 37017

Restart ``mongod`` as a Member of the Replica Set
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

After performing all maintenance tasks, use the following procedure
to restart the :program:`mongod` as a member of the replica set on
its usual port.

#. From the :program:`mongo` shell, shut down the standalone server:

   .. code-block:: javascript

      db.shutdownServer()

#. Restart the :program:`mongod` instance as a member of
   the replica set using its normal command-line arguments or
   configuration file.

   The secondary takes time to :doc:`catch up to the primary
   </core/replica-set-sync>`. From the :program:`mongo` shell, use the
   following command to verify that the member has caught up from the
   :replstate:`RECOVERING` state to the :replstate:`SECONDARY` state.

   .. code-block:: javascript

      rs.status()

Perform Maintenance on the Primary Last
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To perform maintenance on the primary after completing maintenance
tasks on all secondaries, use :method:`rs.stepDown` in the
:program:`mongo` shell to step down the primary and allow one of
the secondaries to be elected the new primary. Specify a 300 second
waiting period to prevent the member from being elected primary again
for five minutes:

.. code-block:: javascript

   rs.stepDown(300)

Once the primary steps down, the replica set elects a new primary,
as described in :doc:`/core/replica-set-elections`.

Repeat these steps, starting with :ref:`stop-a-secondary`, to perform
maintenance on the new secondary.
