==================
sh.startBalancer()
==================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. method:: sh.startBalancer(timeout, interval)

   .. versionchanged:: 6.1
      
   Starts the balancer in a sharded cluster.
   
   .. include:: /includes/autosplit-no-operation.rst

   In MongoDB versions earlier than 6.1, :method:`sh.startBalancer()`
   also enables auto-splitting for the sharded cluster.

   .. |dbcommand| replace:: :dbcommand:`balancerStart` command
   .. include:: /includes/fact-mongosh-shell-method-alt.rst


   The method can take the following options:

   .. list-table::
      :header-rows: 1
      :widths: 20 20 80
   
      * - Parameter
   
        - Type
   
        - Description
   
      * - ``timeout``
   
        - integer
   
        - Optional. Time limit for enabling the balancer.
          
          Defaults to 60000 milliseconds.
          
   
      * - ``interval``
   
        - integer
   
        - Optional. The frequency (in milliseconds) at which to check if a balancing
          round has started.
          
          
          
   


   You can only run :method:`sh.startBalancer()` on a
   :binary:`~bin.mongos` instance. :method:`sh.startBalancer()` errors
   if run on :binary:`~bin.mongod` instance.

Compatibility
-------------

This method is available in deployments hosted in the following environments: 

.. include:: /includes/fact-environments-atlas-only.rst

.. include:: /includes/fact-environments-atlas-support-no-free.rst

.. include:: /includes/fact-environments-onprem-only.rst

Behavior
--------

The :binary:`~bin.mongosh` shell method :method:`sh.startBalancer()` 
is a wrapper around the :dbcommand:`balancerStart` command. As such, 
the method does not wait for balancing to start.

In earlier versions, the method waited for the balancing to start.

.. seealso::

   - :method:`sh.enableBalancing()`
   - :method:`sh.disableBalancing()`
   - :method:`sh.getBalancerState()`
   - :method:`sh.isBalancerRunning()`
   - :method:`sh.setBalancerState()`
   - :method:`sh.stopBalancer()`
   - :method:`sh.waitForBalancer()`
   - :method:`sh.waitForBalancerOff()`
