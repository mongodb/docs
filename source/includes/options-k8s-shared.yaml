---
program: _shared
name: apiVersion
type: string
directive: setting
optional: false
description: |
  Version of the |k8s-mdbrsc| schema.

---
program: _shared
name: kind
type: string
directive: setting
optional: false
description: |
  Kind of |k8s-mdbrsc| to create. Set this to ``MongoDB``

---
program: _shared
name: metadata.name
type: string
directive: setting
optional: false
description: |
  Name of the |k8s-mdbrsc| that you create.

  .. include:: /includes/fact-resource-name-char-limit.rst

---
program: _shared
name: metadata.namespace
type: string
directive: setting
optional: true
description: |
  |k8s| |k8s-ns| where you create this |k8s-mdbrsc| and other
  |k8s-objs|.

---
program: _shared
name: spec.type
type: string
directive: setting
optional: false
description: |
  Type of |k8s-mdbrsc| to create. Accepted values are:

  - ``Standalone``
  - ``ReplicaSet``
  - ``ShardedCluster``

---
program: _shared
name: spec.version
type: string
directive: setting
optional: false
description: |
  Version of MongoDB that you installed on this |k8s-mdbrsc|.

  .. include:: /includes/admonitions/ubi-8-min-db-versions.rst

  .. note::

     If you update this value to a later version of MongoDB for your 
     database resources, the Feature Compatibility Version (FCV) changes 
     automatically to this version unless you set :setting:`spec.featureCompatibilityVersion` 
     to the original version. Consider setting :setting:`spec.featureCompatibilityVersion` 
     to the original version to give yourself the option to downgrade if necessary.

---
program: _shared
name: spec.featureCompatibilityVersion
type: number
directive: setting
optional: true
description: |

  Limits changes to data that occur with an upgrade to a
  new major version. This allows you to downgrade to the previous major
  version. To learn more about feature compatibility, see
  :dbcommand:`setFeatureCompatibilityVersion` in the MongoDB Manual.

---
program: _shared
name: spec.service
type: string
directive: setting
optional: true
default: <resource_name>+"-svc" and <resource_name>+"-svc-external"
pre: |

  .. admonition:: ``spec.service`` is Deprecated
     :class: important

     Use :setting:`spec.statefulSet.spec.serviceName` instead.
description: |
  Name of the |k8s| service to be created or used for a
  |k8s-statefulset|. If the service with this name already exists, the
  |k8s-op-full| does not delete or recreate it. This setting lets
  you create your own custom services and lets the |k8s-op-short|
  reuse them.

---
program: _shared
name: spec.clusterDomain
type: string
directive: setting
optional: true
default: cluster.local
description: |

  Domain name of the |k8s| cluster where you deploy the |k8s-op-short|. When
  |k8s| creates a |k8s-statefulset|, the |k8s| assigns each |k8s-pod| a
  |fqdn|. To update |com|, the |k8s-op-short| calculates the |fqdn| for
  each |k8s-pod| using a provided cluster name. |k8s| doesn't provide
  an |api| to query these hostnames.

  .. include:: /includes/admonitions/warning-set-cluster-name.rst

---
program: _shared
name: spec.clusterName
type: string
directive: setting
optional: true
default: cluster.local
pre: |

  .. admonition:: ``spec.clusterName`` is Deprecated
     :class: important

     Use :setting:`spec.clusterDomain` instead.
description: |

  Domain name of the |k8s| cluster where you deploy the |k8s-op-short|.
  When |k8s| creates a |k8s-statefulset|, the |k8s| assigns each |k8s-pod|
  a |fqdn|. To update |com|, the |k8s-op-short| calculates the |fqdn| for
  each |k8s-pod| using a provided cluster name. |k8s| doesn't provide
  an |api| to query these hostnames.

  .. include:: /includes/admonitions/warning-set-cluster-name.rst
---
program: _shared
name: spec.backup.mode
type: string
directive: setting
description: |
  
  Enables continuous backups for a MongoDB resource.
  Possible values are ``enabled``, ``disabled``, and
  ``terminated``.
  
  .. note::

      The :setting:`spec.backup.mode`
      setting relies on :ref:`Backup <om-rsrc-backup>` that is
      enabled in the |onprem| and requires that
      :opsmgrkube:`spec.backup.enabled`
      value in the |onprem| :ref:`resource specification
      <k8s-om-specification>` is set to ``true``.

  
  After you enable continuous backups for your MongoDB resource with
  :setting:`spec.backup.mode`, you can :ref:`check the backup status
  <get-resource-status>`.

---
program: _shared
name: spec.backup
type: collection
directive: setting
description: |

  The collection container for :setting:`spec.backup.mode`,
  which enables continuous backups for MongoDB resources in |k8s-op-short|.

---
program: _shared
name: spec.backup.assignmentLabels
type: array
directive: setting
description: |

  A comma-separated list of labels to assign backup daemons, oplog stores,
  blockstores, |s3| snapshot stores, and file system stores to specific
  projects or groups. Use assignment labels to identify that specific
  backup stores are associated with particular projects.

  If you set assignment labels using the |k8s-op-short|, the values that
  you set in the |k8s| configuration file for assignment labels override
  the values defined in the |mms| UI. Assignment labels that you don't set
  using the |k8s-op-short| continue to use the values set in the |mms| UI.

  .. note::
     
     If you set this parameter, the API key linked with the value of 
     :setting:`spec.credentials` must have a :authrole:`Global Owner` role.


---
program: _shared
name: spec.backup.autoTerminateOnDeletion
type: boolean
directive: setting
description: |

  Flag that controls whether the |k8s-op-short| stops and terminates the
  backup when you delete a MongoDB resource. If omitted, the default value is ``false``.
  Setting this flag to ``true`` is useful when you want to delete the
  MongoDB custom resource while the :setting:`spec.backup.mode` setting
  is set to ``enabled``.

---
program: _shared
name: spec.backup.encryption
type: object
directive: setting
description: |

  Object that contains the backup encryption configuration settings.

---
program: _shared
name: spec.backup.encryption.kmip
type: object
directive: setting
description: |

  Object that contains the |kmip| backup encryption configuration 
  settings. To learn more, see :ref:`configure-kmip-backup-encryption`.

---
program: _shared
name: spec.backup.encryption.kmip.client
type: object
directive: setting
description: |

  Object that contains the |kmip| backup encryption client 
  configuration settings.

---
program: _shared
name: spec.backup.encryption.kmip.client.clientCertificatePrefix
type: string
directive: setting
description: |

  Human-readable prefix to construct a |kmip| client certificate and 
  corresponding secret names. The |kmip| client certificate has the 
  ``<clientCertificatePrefix>-<CR-name>`` format. The |kmip| client 
  certificate password has the 
  ``<clientCertificatePrefix>-<CR-Name>-kmip-client-password`` format.

---
program: _shared
name: spec.backup.snapshotSchedule
type: collection
directive: setting
description: |
  
  Collection container for snapshot schedule settings for
  continuous backups for MongoDB resources in |k8s-op-short|.

---
program: _shared
name: spec.backup.snapshotSchedule.snapshotIntervalHours
type: number
directive: setting
description: |
  
  Number of hours between snapshots. You can set a value of ``6``,
  ``8``, ``12``, or ``24``.

---
program: _shared
name: spec.backup.snapshotSchedule.snapshotRetentionDays
type: number
directive: setting
description: |
  
  Number of days to keep recent snapshots. You can set a value 
  between ``2`` and ``5``, inclusive.

---
program: _shared
name: spec.backup.snapshotSchedule.dailySnapshotRetentionDays
type: number
directive: setting
description: |
  
  Number of days to keep daily snapshots. You can set a value 
  between ``1`` and ``365``, inclusive. Setting the value to ``0``
  disables this rule.

---
program: _shared
name: spec.backup.snapshotSchedule.weeklySnapshotRetentionWeeks
type: number
directive: setting
description: |
  
  Number of weeks to keep weekly snapshots. You can set a value 
  between ``1`` and ``52``, inclusive. Setting the value to ``0``
  disables this rule.

---
program: _shared
name: spec.backup.snapshotSchedule.monthlySnapshotRetentionMonths
type: number
directive: setting
description: |
  
  Number of months to keep monthly snapshots. You can set a value 
  between ``1`` and ``36``, inclusive. Setting the value to ``0``
  disables this rule.

---
program: _shared
name: spec.backup.snapshotSchedule.pointInTimeWindowHours
type: number
directive: setting
description: |
  
  Number of hours in the past for which you can create a point-in-time
  snapshot.

---
program: _shared
name: spec.backup.snapshotSchedule.referenceHourOfDay
type: number
directive: setting
description: |
  
  |utc| hour of the day to schedule snapshots using a 24 hour clock.
  You can set a value between ``0`` and ``23``, inclusive.

---
program: _shared
name: spec.backup.snapshotSchedule.referenceMinuteOfHour
type: number
directive: setting
description: |
  
  |utc| minute of the hour to schedule snapshots. You can
  set a value between ``0`` and ``59``, inclusive.

---
program: _shared
name: spec.backup.snapshotSchedule.fullIncrementalDayOfWeek
type: string
directive: setting
description: |
  
  Day of the week when |onprem| takes a full snapshot. This setting
  ensures a recent complete backup. |onprem| sets the default value to
  ``SUNDAY``.

---
program: _shared
name: spec.backup.snapshotSchedule.clusterCheckpointIntervalMin
type: number
directive: setting
description: |
  
  Number of minutes between successive cluster checkpoints. This setting
  applies only to sharded clusters that run MongoDB with FCV of 4.0 or
  earlier. This number determines the granularity of point-in-time
  restores for sharded clusters. You can set a value of ``15``, ``30``,
  or ``60``.

---
program: _shared
name: spec.opsManager.configMapRef.name
type: string
directive: setting
description: |
  Name of the |k8s-configmap| with the |com| connection
  configuration. The :setting:`spec.cloudManager.configMapRef.name`
  setting is an alias for this setting and can be used in its place.

  .. include:: /includes/admonitions/note-namespace-match-configmap.rst

  .. include:: /includes/admonitions/fact-k8s-operator-manages-configmap.rst

---
program: _shared
name: spec.cloudManager.configMapRef.name
type: string
directive: setting
optional: false
description: |
  Alias for :setting:`spec.opsManager.configMapRef.name`.
---
program: _shared
name: spec.credentials
type: string
directive: setting
optional: false
description: |

  *Required.* Name of the |k8s| |k8s-secret| you :ref:`created
  <create-k8s-secret>` as |mms| |api| authentication credentials for
  the |k8s-op-short| to communicate with |com|.

  .. include:: /includes/admonitions/note-namespace-match-secret.rst

  .. include:: /includes/admonitions/fact-k8s-operator-manages-secret.rst

---
program: _shared
name: spec.persistent
type: boolean
directive: setting
optional: true
default: true
description: |
  .. include:: /includes/admonitions/k8s-persistent-volumes.rst

---
program: _shared
name: spec.podSpec.storage
type: string
directive: setting
optional: true
default: 16Gi
description: |
  Minimum storage capacity that must be available on a |k8s|
  |k8s-node| to host {{component}}. This value is
  expressed as an integer followed by a unit of storage in |jedec|
  notation.

  .. example::

     If this |k8s-mdbrsc| requires 60 gigabytes of storage space, set
     this value to ``60Gi``.

---
program: _shared
name: spec.podSpec.storageClass
type: string
directive: setting
optional: true
description: |
  *Deprecated.* Type of storage needed for {{component}}. The user
  may create this storage type as a |k8s-sc| object before using it in
  this |k8s-obj| specification.

---
program: _shared
name: spec.podSpec.podAffinity
type: sequence
directive: setting
optional: true
description: |
  |k8s| |k8s-rule| to determine whether multiple |k8s-mdbrsc| |k8s-pods|
  must be co-located with other |k8s-pods|. To learn more about the use cases,
  see ||k8s-affinity| in the |k8s| documentation.

---
program: _shared
name: spec.podSpec.podAntiAffinityTopologyKey
type: string
directive: setting
default: kubernetes.io/hostname
optional: true
description: |

  Sets a |k8s-rule| to spread |k8s-mdbrsc| |k8s-pods|
  to different locations. A location can be a single node, rack, or
  region. This key defines which node
  `label <https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/>`__
  is used to `determine equal location <https://kubernetes.io/docs/concepts/configuration/assign-pod-node/>`__
  for nodes. By default, |k8s-op-short| tries to spread pods across
  different hosts.

---
program: _shared
name: spec.podSpec.nodeAffinity
type: collection
directive: setting
optional: true
description: |
  |k8s| |k8s-rule| to place |k8s-pods| for {{component}} on a
  specific range of |k8s-nodes|.

  .. example::

     A user can isolate "dev" and "testing" environments to ensure
     |k8s-pods| go to |k8s-nodes| with appropriate labels.

---
program: _shared
name: spec.podSpec.persistence.single
type: collection
directive: setting
optional: true
description: |

  Has |k8s-op-short| create one |k8s-pvc| and mount all
  three directories for data, journal, and logs to the same |k8s-pv|.

  .. note::

     - You must set the values in this collection if
       :setting:`spec.persistent` ``: true``.
     - You may set this collection or the ``persistence.multiple``
       collections but not both.

  .. list-table::
     :widths: 20 20 60
     :header-rows: 1

     * - Scalar
       - Data Type
       - Description

     * - ``labelSelector``
       - string
       - `Tag
         <https://kubernetes.io/docs/concepts/storage/persistent-volumes/#selector>`__
         used to bind mounted volumes to directories.

     * - ``storage``
       - string
       - Minimum size of |k8s-pv| that should be mounted. This value is
         expressed as an integer followed by a unit of storage in
         |jedec| notation.

         Default value is {{defaultStorage}}.

         .. example::

            If {{component}} in requires 60 gigabytes of
            storage space, set this value to ``60Gi``.

     * - ``storageClass``
       - string
       - Type of storage specified in a |k8s-pvc|. You may create
         this storage type as a |k8s-sc| object before using it in this
         |k8s-obj| specification.

         .. note::

            .. include:: /includes/admonitions/fact-reclaimpolicy-to-retain.rst

replacement:
  defaultStorage: 16Gi

---
program: _shared
name: spec.podSpec.persistence.multiple.item
type: collection
directive: setting
optional: true
description: |
  Has |k8s-op-short| create a |k8s-pvc| and mount a
  directory for {{storedItem}} to its own |k8s-pv|.

  .. note::

     - You must set the values in this collection if
       :setting:`spec.persistent` ``: true``.
     - You may set this collection or the ``persistence.single``
       collection but not both.

  .. list-table::
     :widths: 20 20 60
     :header-rows: 1

     * - Scalar
       - Data Type
       - Description

     * - ``labelSelector``
       - string
       - `Tag
         <https://kubernetes.io/docs/concepts/storage/persistent-volumes/#selector>`__
         used to bind mounted volumes to directories.

     * - ``storage``
       - string
       - Minimum storage capacity that must be available on a |k8s|
         |k8s-node| to host {{component}} on |k8s|. This value is
         expressed as an integer followed by a unit of storage in
         |jedec| notation.

         Default value is {{defaultStorage}}.

         .. example::

            If this |k8s-mdbrsc| requires 60 gigabytes of storage
            space, set this value to ``60Gi``.

     * - ``storageClass``
       - string
       - Type of storage needed for {{component}}. You may create
         this storage type as a |k8s-sc| object before using it in this
         |k8s-obj| specification.

         .. note::

            .. include:: /includes/admonitions/fact-reclaimpolicy-to-retain.rst

replacement:
  storedItem: data
  defaultStorage: 16Gi

---
program: _shared
name: spec.logLevel
type: string
directive: setting
optional: true
default: INFO
description: |

  Configures the level of Automation Agent logging inside the
  |k8s-pod|. Accepted values include:

  - ``DEBUG``
  - ``INFO``
  - ``WARN``
  - ``ERROR``
  - ``FATAL``
---
program: _shared
name: spec.security.tls.enabled
type: boolean
directive: setting
optional: true
default: "``false``"
description: |

  .. important::

     :setting:`spec.security.tls.enabled` is deprecated starting in |k8s-op-short| version 1.19. 
     To enable |tls|, provide a value for 
     the :setting:`spec.security.certsSecretPrefix` setting.

  Encrypts communications using TLS certificates between:

  - MongoDB hosts in a replica set or sharded cluster configuration
  - Clients (|mongo| shell, drivers, |compass|, and others)
    and the MongoDB deployment

  By default, :setting:`net.ssl.mode` is set to ``requireSSL``. To change the
  |tls| mode used for client and database connections, see
  :setting:`spec.additionalMongodConfig.net.ssl.mode`.
---
program: _shared
name: spec.security.tls.ca
type: string
directive: setting
optional: true
description: |
  Provide the name of the |k8s-configmap| that stores the |certauth| for the |k8s-mdbrsc|.

  .. important::

     If you use a custom |certauth| to sign your |tls| certificates for the |k8s-mdbrsc|,
     you must specify this parameter.

     The |k8s-op-short| requires that you name the
     |k8s-mdbrsc| certificate ``ca-pem`` in the ConfigMap.

---
program: _shared
name: spec.security.certsSecretPrefix
type: string
directive: setting
optional: true
description: |

  Text to prefix to the |k8s| |k8s-secrets| that you
  created that contain your replica set's or sharded cluster's |tls| 
  keys and certificates.

  .. include:: /includes/fact-req-secret-prefix.rst

  .. include:: /includes/fact-example-secret-prefix-cluster-file.rst

  To learn more about naming the secrets that contain your |tls| 
  certificates, see the topic in :ref:`secure-tls` that applies to your 
  deployment.

---
program: _shared
name: spec.security.authentication
type: collection
directive: setting
optional: true
description: |
  Authentication specifications for your MongoDB deployment.
---
program: _shared
name: spec.security.authentication.modes
type: array
directive: setting
optional: true
description: |
  Specifies the authentication mechanism that your MongoDB deployment 
  uses. Valid values are ``SCRAM``, ``SCRAM-SHA-1``, ``MONGODB-CR``, 
  ``X509``, and ``LDAP``. We recommend ``SCRAM-SHA-256`` (``SCRAM``) 
  over ``SCRAM-SHA-1``. If you specify ``SCRAM-SHA-1``, you must also 
  specify ``MONGODB-CR``.

  .. admonition:: X.509 Internal Cluster Authentication
     :class: note

     To enable :ref:`X.509 internal cluster authentication
     <x509-internal-authentication>` for the |com| project, set this
     value to ``["X509"]`` and specify the following settings:

     - :setting:`spec.security.authentication.internalCluster` ``: "X509"``
     - provide a value for the
       :setting:`spec.security.certsSecretPrefix` setting.`

  If you provide more than one value for
  :setting:`spec.security.authentication.modes`, you must also specify a
  value for :setting:`spec.security.authentication.agents.mode`.

---
program: _shared
name: spec.security.authentication.enabled
type: boolean
directive: setting
optional: true
default: "``false``"
description: |
  Specifies whether authentication is enabled on the |com|
  project. If set to ``true``, you must set an authentication mechanism in 
  :setting:`spec.security.authentication.modes`.

  .. important::

     The |k8s-op-short| manages authentication for this MongoDB
     resource if you include this setting, even if it's set to
     ``false``. You can't configure authentication for this
     resource using the |com| UI  or APIs while this setting
     exists in the resource specification.

     Omit this setting if you want to manage authentication using the
     |com| UI or APIs.

---
program: _shared
name: spec.security.authentication.requireClientTLSAuthentication
type: boolean
directive: setting
optional: true
default: "``false``"
description: |

  Specifies whether the MongoDB host requires clients to connect using a
  |tls| certificate. Defaults to ``true`` if you enable |tls|
  authentication.
  
  To enable |tls| authentication, provide a value for the :setting:`spec.security.certsSecretPrefix` setting.

---
program: _shared
name: spec.security.authentication.ignoreUnknownUsers
type: boolean
directive: setting
optional: true
default: "``false``"
description: |
  Determines whether you can modify database users that were not
  configured through the |k8s-op-short|, or the |com| user interface.
  
  To manage database users directly through the |mongod| or |mongos|, set
  this setting to ``true``.
---
program: _shared
name: spec.security.roles
type: array
optional: true
directive: setting
description: |

  Array that defines :manual:`User-defined roles
  </core/security-user-defined-roles/>` that give you
  fine-grained access control over your MongoDB deployment.

  To enable user-defined roles, the
  :setting:`spec.security.authentication.enabled` must be ``true``.

  .. example::

     In this example, a user-defined role named ``customRole`` allows
     users assigned this role to:

     - Insert documents into the ``cats`` collection in the ``pets``
       database, and
     - Find and insert documents into the ``dogs`` collection in the
       ``pets`` database.

     .. literalinclude:: /includes/code-examples/yaml-files/example-custom-role.yaml
        :language: yaml
        :linenos:
        :emphasize-lines: 15-34

---
program: _shared
name: spec.security.roles.role
type: string
directive: setting
optional: true
description: |

  Name of the user-defined role.

---
program: _shared
name: spec.security.roles.db
type: string
directive: setting
optional: true
description: |

  The database in which you want to store the user-defined role.

  .. example::

     ``admin``

---
program: _shared
name: spec.security.roles.authenticationRestrictions
type: array
directive: setting
optional: true
description: |
  Array that defines the IP address from which and to which users
  assigned this :setting:`spec.security.roles.role` can
  connect.

---
program: _shared
name: spec.security.roles.authenticationRestrictions.clientSource
type: array
directive: setting
optional: true
description: |

  Array of IP addresses or CIDR blocks from which users assigned this
  :setting:`spec.security.roles.role` can connect. 

  MongoDB servers reject connection requests from users with this role
  if the requests come from a client that is not present in this array.

---
program: _shared
name: spec.security.roles.authenticationRestrictions.serverAddress
type: array
directive: setting
optional: true
description: |

  Array of IP addresses or CIDR blocks to which users assigned this
  :setting:`spec.security.roles.role` can connect. 

  MongoDB servers reject connection requests from users with this role
  if the client requests to connect to a server that is not present in
  this array.

---
program: _shared
name: spec.security.roles.privileges
type: array
directive: setting
optional: true
description: |

  Array that describes the privileges that users granted this role
  possess.

---
program: _shared
name: spec.security.roles.privileges.actions
type: array
directive: setting
optional: true
description: |

  List of actions that users granted this role can perform. For a list
  of accepted values, see :manual:`Privilege Actions
  </reference/privilege-actions/#database-management-actions>` in the
  MongoDB Manual for the MongoDB versions you deploy with the
  |k8s-op-short|.

---
program: _shared
name: spec.security.roles.privileges.resource
type: collection
directive: setting
optional: true
description: |

  Resources for which the privilege
  :setting:`~spec.security.roles.privileges.actions`
  apply.

  This collection must include either:

  - The
    :setting:`spec.security.roles.privileges.resource.database`
    and
    :setting:`spec.security.roles.privileges.resource.collection`
    settings, or
  - The
    :setting:`spec.security.roles.privileges.resource.cluster`
    setting with a value of ``true``.

---
program: _shared
name: spec.security.roles.privileges.resource.database
type: string
directive: setting
optional: true
description: |

  Database for which the privilege
  :setting:`~spec.security.roles.privileges.actions`
  apply.

  If you provide a value for this setting, you must also provide a value
  for
  :setting:`spec.security.roles.privileges.resource.collection`.

---
program: _shared
name: spec.security.roles.privileges.resource.collection
type: string
directive: setting
optional: true
description: |

  Collection in the
  :setting:`~spec.security.roles.privileges.resource.database`
  for which the privilege
  :setting:`~spec.security.roles.privileges.actions`
  apply.

  If you provide a value for this setting, you must also provide a value
  for
  :setting:`spec.security.roles.privileges.resource.database`.

---
program: _shared
name: spec.security.roles.privileges.resource.cluster
type: boolean
directive: setting
optional: true
default: false
description: |

  Flag that indicates that the privilege
  :setting:`~spec.security.roles.privileges.actions`
  apply to all databases and collections in the MongoDB deployment. If
  omitted, defaults to ``false``.

  If set to true, do not provide values for
  :setting:`spec.security.roles.privileges.resource.database`
  and 
  :setting:`spec.security.roles.privileges.resource.collection`.

---
program: _shared
name: spec.security.authentication.ldap
type: collection
directive: setting
optional: true
description: |
  *Required for LDAP authentication.* 

  Configures |ldap| authentication for the |com| project. To enable
  |ldap| authentication, set
  :setting:`spec.security.authentication.modes` to ``["LDAP"]``.
---
program: _shared
name: spec.security.authentication.ldap.servers
type: array of strings
directive: setting
description: |
  *Required for LDAP authentication.* 
  
  List of hostnames and ports of the |ldap| servers. Specify
  hostnames with their respective ports in the following format:
  
  .. code-block:: yaml

     spec:
       security:
         authentication:
           ldap:
             servers: 
               - "<hostname1>:<port1>"
               - "<hostname2>:<port2>"

---
program: _shared
name: spec.security.authentication.ldap.timeoutMS
type: integer
directive: setting
optional: true
description: |
  Specifies how many milliseconds an authentication request should 
  wait before timing out.
---
program: _shared
name: spec.security.authentication.ldap.transportSecurity
type: string
directive: setting
description: |
  *Required for LDAP authentication.* 
  
  Specifies whether the |ldap| server accepts |tls|.
  
  If the |ldap| server accepts |tls|, set the value to ``tls``. If 
  the |ldap| server doesn't accept |tls|, leave this value blank or set 
  the value to ``none``.

  .. note::
     
     If you specify a string other than ``none`` or ``tls``, 
     |k8s-op-short| still sets the setting to ``tls``.

---
program: _shared
name: spec.security.authentication.ldap.caConfigMapRef
type: collection
directive: setting
description: |
  *Required for LDAP authentication with TLS.* 
  
  |k8s-configmap| that contains a |certauth| which validates the |ldap| 
  server's |tls| certificate.
---
program: _shared
name: spec.security.authentication.ldap.caConfigMapRef.name
type: string
directive: setting
description: |
  *Required for LDAP authentication with TLS.* 
  
  Name of the |k8s-configmap| that contains a |certauth| which validates
  the |ldap| server's |tls| certificate.
---
program: _shared
name: spec.security.authentication.ldap.caConfigMapRef.key
type: string
directive: setting
description: |
  *Required for LDAP authentication with TLS.* 
  
  Field name that stores the |certauth| which validates the |ldap|
  server's |tls| certificate.
---
program: _shared
name: spec.security.authentication.ldap.bindQueryUser
type: string
directive: setting
description: |
  *Required for LDAP authentication.* 
  
  |ldap| Distinguished Name to which MongoDB binds when connecting to
  the |ldap| server.
---
program: _shared
name: spec.security.authentication.ldap.bindQueryPasswordSecretRef
type: collection
directive: setting
description: |
  *Required for LDAP authentication.* 
  
  Specifies the |k8s-secret| that contains the password with which
  MongoDB binds when connecting to the |ldap| server.
---
program: _shared
name: spec.security.authentication.ldap.bindQueryPasswordSecretRef.name
type: string
directive: setting
description: |
  *Required for LDAP authentication.* 
  
  Name of the |k8s-secret| that contains the password with which MongoDB
  binds when connecting to the |ldap| server.
  
  The |k8s-secret| must contain only one ``password`` field which stores
  the password.
---
program: _shared
name: spec.security.authentication.ldap.authzQueryTemplate
type: string
directive: setting
description: |

  *Required for LDAP authorization.*

  An `RFC4515 <https://tools.ietf.org/html/rfc4515>`_ and `RFC4516
  <https://tools.ietf.org/html/rfc4516>`_ LDAP-formatted query URL
  template executed by MongoDB to obtain the LDAP groups that the user
  belongs to. The query is relative to the host or hosts
  specified in :setting:`spec.security.authentication.ldap.servers`.
  You can use the following tokens in the template:

  - ``{USER}`` 
        Substitutes the authenticated username, or the
        :setting:`transformed <security.ldap.userToDNMapping>`
        username, into the LDAP query.
  - ``{PROVIDED_USER}``
        Substitutes the supplied username, before either
        authentication or LDAP transformation, into the LDAP query.
        (*Available starting in MongoDB version 4.2*)

  .. seealso:: :manual:`LDAP Query Templates </core/security-ldap-external/#ldap-query-template>` in the MongoDB Manual
---
program: _shared
name: spec.security.authentication.ldap.automationLdapGroupDN
type: string
directive: setting
description: |

  The Distinguished Name (DN) of the LDAP group to which the
  {+mdbagent+} user belongs.
  
  This setting is required if:

  - :setting:`spec.security.authentication.ldap.authzQueryTemplate` is
    present, and
  - :setting:`spec.security.authentication.agents.mode` is ``LDAP`` or
    ``X509``.

---
program: _shared
name: spec.security.authentication.ldap.userToDNMapping
type: string
directive: setting
description: |
  Maps the username provided to :binary:`~bin.mongod` or
  :binary:`~bin.mongos` for authentication to a LDAP Distinguished Name
  (DN).

  .. seealso:: :manual:`security.ldap.userToDNMapping </reference/configuration-options/#security.ldap.userToDNMapping>` in the MongoDB Manual
---
program: _shared
name: spec.security.authentication.ldap.userCacheInvalidationInterval
type: integer
directive: setting
description: |
  Specifies how many seconds MongoDB waits to flush the LDAP user 
  cache. Defaults to 30 seconds.
---
program: _shared
name: spec.security.authentication.agents
type: collection
directive: setting
description: |

  {+mdbagent+} authentication configuration for the |com| project.

---
program: _shared
name: spec.security.authentication.agents.mode
type: string
directive: setting
description: |

  The authentication mechanism that the {+mdbagent+}s for
  your MongoDB deployment use. Valid values are ``SCRAM``, 
  ``SCARM-SHA-1``, ``MONGODB-CR``, ``X509``, and
  ``LDAP``. The value you specify must also be present in
  :setting:`spec.security.authentication.modes`. We recommend 
  ``SCRAM-SHA-256`` (``SCRAM``) over ``SCRAM-SHA-1``. If you specify 
  ``SCRAM-SHA-1``, you must also specify ``MONGODB-CR``.

  This setting is required if you specified more than one value for
  :setting:`spec.security.authentication.modes`.
---
program: _shared
name: spec.security.authentication.agents.automationUserName
type: string
directive: setting
description: |

  Name of the user that the {+mdbagent+}s use to interact with your
  MongoDB deployment. The username is mapped to an LDAP Distinguished
  Name (DN) according to
  :setting:`spec.security.authentication.ldap.userToDNMapping`. The
  resulting DN must already exist in your LDAP deployment.

  This setting is required if 
  :setting:`spec.security.authentication.agents.mode` is ``LDAP``.
---
program: _shared
name: spec.security.authentication.agents.automationPasswordSecretRef
type: collection
directive: setting
description: |

  Details of the |k8s-secret| that contains the password for the
  :setting:`spec.security.authentication.agents.automationUserName`
  user.

  This setting is required if 
  :setting:`spec.security.authentication.agents.mode` is ``LDAP``.
---
program: _shared
name: spec.security.authentication.agents.automationPasswordSecretRef.name
type: string
directive: setting
description: |

  Name of the |k8s-secret| that contains the password for the
  :setting:`spec.security.authentication.agents.automationUserName`
  user. You must create this secret in the same namespace to which you
  deploy the |k8s-op-short|:

  .. code-block:: sh

     kubectl create secret generic ldap-agent-user \
     --from-literal="password=<password>" -n <metadata.namespace>

  This secret must contain one key, the value of which matches the
  password of the
  :setting:`spec.security.authentication.agents.automationUserName` user
  in your LDAP deployment.

  This setting is required if 
  :setting:`spec.security.authentication.agents.mode` is ``LDAP``.
---
program: _shared
name: spec.security.authentication.agents.automationPasswordSecretRef.key
type: string
directive: setting
description: |

  Key in the
  :setting:`spec.security.authentication.agents.automationPasswordSecretRef.name`
  |k8s-secret| that contains the password for the user in
  :setting:`spec.security.authentication.agents.automationUserName`.

  This setting is required if 
  :setting:`spec.security.authentication.agents.mode` is
  ``LDAP``.
---
program: _shared
name: spec.security.authentication.agents.clientCertificateSecretRef.name
type: string
directive: setting
optional: true
description: |

  Specifies the |k8s-secret| that contains the {+mdbagent+}'s
  |tls| certificate. If omitted, defaults to ``agent-certs``.

  This secret must contain the following keys, the 
  values of which are |tls| certificates that can be validated by the 
  server:
  
  - ``mms-automation-agent-pem``
  - ``mms-backup-agent-pem``
  - ``mms-monitoring-agent-pem``

  You must create this secret in the same namespace to which you
  deploy the |k8s-op-short|:

  .. code-block:: sh

     kubectl create secret generic agent-certs \
     --from-file=mms-automation-agent-pem=<automation-cert.pem> \
     --from-file=mms-backup-agent-pem=<backup-cert.pem> \
     --from-file=mms-monitoring-agent-pem=<monitoring-cert.pem> \
     --namespace=<metadata.namespace>

---
program: _shared
name: spec.additionalMongodConfig.net.ssl.mode
type: string
directive: setting
optional: true
default: "``requireSSL``"
description: |
  Specifies which :setting:`sslMode` is used for network connections.
  The following are valid options:

  .. include:: /includes/list-tables/requiressl-modes.rst

---
program: _shared
name: spec.additionalMongodConfig.net.tls.disabledProtocols
type: string
directive: setting
optional: true
description: |
  *New in MongoDB version 4.2.*

  Prevents a MongoDB server running with |tls| from accepting incoming connections 
  that use a specific protocol or protocols. To specify multiple protocols, enter 
  a comma separated list of protocols. For example, ``TLS1_0,TLS1_1``.
  
  This setting recognizes the following protocols: ``TLS1_0``, ``TLS1_1``, ``TLS1_2``, 
  and starting in MongoDB 4.0.4 (and 3.6.9), ``TLS1_3``. If you specify an unrecognized protocol, the 
  server won't start.

  On macOS, you can't disable ``TLS1_1`` and enable both ``TLS1_0`` and ``TLS1_2``. 
  You must disable at least ``TLS1_0`` or ``TLS1_2`` also. For example, ``TLS1_0,TLS1_1`` 
  disables ``TLS1_2`` on macOS. 
  
  The list of protocols that you disable replaces the default list of disabled protocols.

  Starting in MongoDB version 4.0, MongoDB disables the use of |tls| 1.0 if |tls| 1.1+ 
  is available on the system. To enable the disabled |tls| 1.0, specify ``none`` as the value for  
  :setting:`spec.additionalMongodConfig.net.tls.disabledProtocols`. 
  To learn more about this setting, see :manual:`Disable TLS 1.0 </release-notes/4.0/#disable-tls-1.0>`.

  Members of replica sets and sharded clusters must speak at least one protocol in common.

---
program: _shared
name: spec.security.authentication.internalCluster
type: string
directive: setting
optional: true
description: |
  Specifies whether :ref:`X.509 internal cluster authentication
  <x509-internal-authentication>` is enabled.

  To enable X.509 internal cluster authentication, set to ``"X509"``.
  Requires that the following settings be specified:
  
  - :setting:`spec.security.authentication.modes` ``: ["X509"]``
  - :setting:`spec.security.certsSecretPrefix`

  The |k8s-op-short| accepts the following values:

  - ``["X509"]``: X.509 internal cluster authentication is enabled.
  - ``""`` or omitted: internal cluster authentication is not enabled.

  .. important::

     After you enable internal cluster authentication, you can't disable
     it.
---
program: _shared
name: spec.podSpec.podTemplate
type: collection
directive: setting
optional: true
description: |

  :k8sdocs:`Template </concepts/workloads/pods/pod-overview/#pod-templates>`
  for the |k8s| Pods that the |k8s-op| creates for {{component}}.

  Template values take precedence over values specified in {{podSpec}}.

  .. note::

     The |k8s-op-short| doesn't validate the fields you provide
     in {{podTemplate}}.

---
program: _shared
name: spec.podSpec.podTemplate.metadata
type: collection
directive: setting
optional: true
description: |

  Metadata for the |k8s| Pods that the |k8s-op| creates for
  {{component}}.

  To review which fields you can add to {{podTemplate_metadata}}, see
  the :k8sdocs:`Kubernetes documentation </reference/generated/kubernetes-api/{+k8s-api-version+}/#objectmeta-v1-meta>`.

---
program: _shared
name: spec.podSpec.podTemplate.spec
type: collection
directive: setting
optional: true
description: |

  Specifications of the |k8s| Pods that the |k8s-op| creates for
  {{component}}.

  To review which fields you can add to {{podTemplate_spec}}, see the
  :k8sdocs:`Kubernetes PodSpec v1 core API </reference/generated/kubernetes-api/{+k8s-api-version+}/#podspec-v1-core>`.

  .. note::

     When you add containers to {{podTemplate_spec_containers}}, the
     |k8s-op-short| adds them to the |k8s| pod. These containers are
     appended to {{component}} containers in the pod.

  Use this setting to specify the CPU and RAM allocations for each pod. For
  examples, see :github:`the samples on GitHub </mongodb/mongodb-enterprise-kubernetes/tree/master/samples/mongodb/podspec>`.

---
program: _shared
name: spec.security.tls.additionalCertificateDomains
type: collection
directive: setting
optional: true
description: |

  List of every domain that should be added to |tls| certificates to
  each pod in this deployment. When you set this parameter, every |csr|
  that the |k8s-op-short| transforms into a |tls| certificate includes
  a |san-dns| in the form ``<pod name>.<additional cert domain>``.

  Replica set resources don't need this parameter. Use
  :setting:`spec.connectivity.replicaSetHorizons` instead.

  .. note::

     If you add this parameter to a |tls|\-enabled resource, |k8s|
     displays an error when the resource reaches the ``Pending`` state.
     This error displays: ``Please manually remove the |csr| in order
     to proceed.`` To remedy this issue:

     1. Remove any existing |csr|\s so that |k8s| can generate new
        |csr|\s. To learn how to delete a resource, see the
        :k8sdocs:`deleting resources
        </reference/kubectl/cheatsheet/#deleting-resources>` in the
        |k8s| documentation.

     2. Approve the |csr|\s after |k8s| generates them.

---

program: _shared
name: spec.additionalMongodConfig
type: collection
directive: setting
optional: true
description: |
  Additional :opsmgr:`configuration options
  </reference/deployment-advanced-options/>` with
  which you want to start {{component}}.

  The |k8s-op-short| supports all configuration options that the MongoDB
  version you deploy through the {+mdbagent+} supports, except that the 
  |k8s-op-short| overrides values that you provide for any of the 
  following options:

  - :setting:`net.port`
  - :setting:`net.tls.certificateKeyFile`
  - :setting:`net.tls.clusterFile`
  - :setting:`net.tls.PEMKeyFile`
  - :setting:`replication.replSetName`
  - :setting:`security.clusterAuthMode`
  - :setting:`sharding.clusterRole`
  - :setting:`storage.dbPath`
  - :setting:`systemLog.destination`
  - :setting:`systemLog.path`

  To learn more about the configuration options that the |k8s-op-short|
  owns, see :ref:`k8s-exclusive-settings`.

  To learn which configuration options you can use, see
  :opsmgr:`Advanced Options for MongoDB Deployments
  </reference/deployment-advanced-options/>` in the |onprem| 
  documentation.

---
program: _shared
name: spec.agent
type: collection
directive: setting
optional: true
description: |

  {+mdbagent+} configuration settings for {{component}}.

---
program: _shared
name: spec.agent.startupOptions
type: collection
directive: setting
optional: true
description: |

  {+mdbagent+} settings with which you want to start {{component}}.

  You must provide MongoDB Agent settings as key-value pairs. The values
  must be strings.

  For a list of supported {+mdbagent+} settings, see:

  - :cloudmgr:`MongoDB Agent Settings </reference/mongodb-agent-settings/>`
    for |cloud-short| projects.
  - :opsmgr:`MongoDB Agent Settings
    </reference/mongodb-agent-settings/>` for the |onprem| version you
    deployed with the |k8s-op-short|. 

  {{example}}
...
