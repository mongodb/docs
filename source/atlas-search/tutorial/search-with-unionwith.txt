.. _search-with-unionwith-tutorial:

=========================================================
How to Run ``$unionWith`` with an |fts| ``$search`` Query 
=========================================================

.. default-domain:: mongodb

.. meta::
   :keywords: atlas search, run a cross-collection search, MongoDB $unionWith stage, run $search in $unionWith pipeline, run an atlas search text search, run a cross-collection text search 
   :description: Run Atlas Search $search queries inside $unionWith pipeline to perform a cross-collection search.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Starting in v6.0, the MongoDB :pipeline:`$unionWith` aggregation stage 
supports :pipeline:`$search` inside the :pipeline:`$unionWith` 
``pipeline`` option. Using :pipeline:`$unionWith`, you can combine 
:pipeline:`$search` results from multiple  collections in the same 
database in the result set.

This tutorial demonstrates how to run a :pipeline:`$unionWith` query 
with :pipeline:`$search` against the ``companies`` and ``inspections`` 
collections in the ``sample_training`` database. It takes you through 
the following steps:

1. Set up an |fts| index with :ref:`dynamic mappings 
   <static-dynamic-mappings>` for the ``companies`` and ``inspections`` 
   collections in the ``sample_training`` database.
#. Run :pipeline:`$unionWith` query with :pipeline:`$search` to perform 
   a union of companies with ``mobile`` in their name from the 
   ``companies`` collection with companies with same or similar 
   business name in the ``inspections`` collection.

Before you begin, ensure that your |service| {+cluster+} meets the 
requirements described in the :ref:`fts-tutorials-prereqs`.

.. note:: 

   To run a :pipeline:`$unionWith` query with :pipeline:`$search`, your 
   {+cluster+} must run MongoDB v6.0 or higher.

Create the |fts| Indexes  
------------------------

In this section, you will create an |fts| index named ``default`` on 
all the fields in the ``companies`` collection in the 
``sample_training`` database. You will create another |fts| index 
named ``default`` on all the fields in the ``inspections`` 
collection in the ``sample_training`` database. You must perform the 
following steps for each collection.

.. include:: /includes/steps-fts-unionwith-tutorial-create-index.txt

Run ``$unionWith`` with ``$search`` to Search the Collections 
-------------------------------------------------------------

In this section, you will connect to your |service| {+cluster+} and run 
the sample query against the indexed collections in the 
``sample_training`` database. 

.. include:: /includes/steps-fts-unionwith-tutorial-run-query.txt
