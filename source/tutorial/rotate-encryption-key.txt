.. _rotate-encryption-keys:

======================
Rotate Encryption Keys
======================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Most regulatory requirements mandate that a managed key used to decrypt
sensitive data must be rotated out and replaced with a new key once a
year.

.. see::  Disambiguation

   To roll over database keys configured with AES256-GCM cipher afer a
   filesystem restore, see :option:`--eseDatabaseKeyRollover <mongod
   --eseDatabaseKeyRollover>` instead.

MongoDB provides two options for key rotation. You can rotate out the
binary with a new instance that uses a new key. Or, if you are using a
KMIP server for key management, you can rotate the master key.

Rotate a Member of Replica Set
------------------------------

For a replica set, to rotate out a member:

#. Start a new :binary:`~bin.mongod` instance, configured to use a new key.
   Include the :option:`--replSet <mongod --replSet>` option with the name of the replica set as
   well as any other options specific to your configuration, such as
   :option:`--dbpath <mongod --dbpath>` and :option:`--bind_ip <mongod --bind_ip>`.

   .. code-block:: sh

      mongod --replSet myReplSet --enableEncryption \
      --kmipServerName <KMIP Server HostName> \ 
      --kmipServerCAFile ca.pem --kmipClientCertificateFile client.pem

#. Connect a :binary:`~bin.mongo` shell to the replica set's primary.

#. Add the instance to the replica set, initially adding the member as
   a :ref:`non-voting <replica-set-non-voting-members>`, :doc:`priority 0
   </core/replica-set-priority-0-member>` member:

   .. code-block:: javascript

      rs.add( { host: <host:port>, priority: 0, votes: 0 } )

   .. tip::

      .. include:: /includes/tip-repl-set-add-members.rst

   During the initial sync process, the re-encryption of the data with
   an entirely new set of database keys as well as a new system key
   occurs.

#. Ensure that the new member has reached :replstate:`SECONDARY` state.
   To check the state of the replica set members, run
   :method:`rs.status()`:

      .. code-block:: javascript

      rs.status()

#. Once the new node completes its initial sync process, use
   :method:`rs.reconfig()` to update the newly added secondary's vote and
   priority settings. See :ref:`rs-add-member-configuration-document` for
   details:


      .. code-block:: javascript

      var cfg = rs.conf();

      cfg.members[n].priority = 1;  // Substitute the correct array index for the new member
      cfg.members[n].votes = 1;     // Substitute the correct array index for the new member

      rs.reconfig(cfg)

   where ``n`` is the array index of the new member in the
   :rsconf:`members` array.

   .. include:: /includes/warning-rs-reconfig.rst

#. Remove the old node from the replica set and delete all its data.
   For instructions, see :doc:`/tutorial/remove-replica-set-member`

.. _kmip-master-key-rotation:

KMIP Master Key Rotation
------------------------

If you are using a KMIP server for key management, you can rotate
the master key, the only externally managed key. With the new
master key, the internal keystore will be re-encrypted but the
database keys will be otherwise left unchanged. This obviates the need
to re-encrypt the entire data set.

#. Rotate the master key for the :ref:`secondary
   <replica-set-secondary-members>` members of the replica set one at a
   time.

   a. Restart the secondary, including the
      :option:`--kmipRotateMasterKey <mongod --kmipRotateMasterKey>` option. Include any other
      options specific to your configuration, such as :option:`--bind_ip <mongod --bind_ip>`. If
      the member already includes the :option:`--kmipKeyIdentifier <mongod --kmipKeyIdentifier>`
      option, either update the :option:`--kmipKeyIdentifier <mongod --kmipKeyIdentifier>` option
      with the new key to use or omit to request a new key from the
      KMIP server:

      .. code-block:: sh

         mongod --enableEncryption --kmipRotateMasterKey \
           --kmipServerName <KMIP Server HostName> \
           --kmipServerCAFile ca.pem --kmipClientCertificateFile client.pem

      If using a configuration file, include the
      :setting:`security.kmip.rotateMasterKey`.

   b. Upon successful completion of the master key rotation and
      re-encryption of the database keystore, the :binary:`~bin.mongod`
      will exit.

   c. Restart the secondary without the :option:`--kmipRotateMasterKey <mongod --kmipRotateMasterKey>`
      parameter. Include any other options specific to your
      configuration, such as ``--bind_ip``.

      .. code-block:: sh

         mongod --enableEncryption --kmipServerName <KMIP Server HostName> \
           --kmipServerCAFile ca.pem --kmipClientCertificateFile client.pem

      If using a configuration file, remove the
      :setting:`security.kmip.rotateMasterKey` setting.

#. Step down the replica set primary.

   Connect a :binary:`~bin.mongo` shell to the primary and use
   :method:`rs.stepDown()` to step down the primary and force an
   election of a new primary:

   .. code-block:: javascript

      rs.stepDown()

#. When :method:`rs.status()`
   shows that the primary has stepped down and another member
   has assumed ``PRIMARY`` state, rotate the master key for the stepped down member:

   a. Restart the stepped-down member, including the
      :option:`--kmipRotateMasterKey <mongod --kmipRotateMasterKey>` option. Include any other
      options specific to your configuration, such as ``--bind_ip``. If the member already
      includes the :option:`--kmipKeyIdentifier <mongod --kmipKeyIdentifier>` option, either update
      the :option:`--kmipKeyIdentifier  <mongod --kmipKeyIdentifier>` option with the new key to use
      or omit.

      .. code-block:: sh

         mongod --enableEncryption --kmipRotateMasterKey \
           --kmipServerName <KMIP Server HostName> \
           --kmipServerCAFile ca.pem --kmipClientCertificateFile client.pem

      If using a configuration file, include the
      :setting:`security.kmip.rotateMasterKey`.

   b. Upon successful completion of the master key rotation and
      re-encryption of the database keystore, the :binary:`~bin.mongod`
      will exit.

   c. Restart the stepped-down member without the
      :option:`--kmipRotateMasterKey <mongod --kmipRotateMasterKey>` option. Include any other options
      specific to your configuration, such as ``--bind_ip``.

      .. code-block:: sh

         mongod --enableEncryption --kmipServerName <KMIP Server HostName> \
           --kmipServerCAFile ca.pem --kmipClientCertificateFile client.pem

      If using a configuration file, remove the
      :setting:`security.kmip.rotateMasterKey` setting.
