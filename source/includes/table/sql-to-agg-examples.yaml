# table structure. all content symbolic.
section: layout
header: [ meta.header1, meta.header2 ]
rows: 
  - 1: [ content.sql1, content.mongo1 ]
  - 2: [ content.sql2, content.mongo2 ]
  - 3: [ content.sql3, content.mongo3 ]
  - 4: [ content.sql4, content.mongo4 ]
  - 5: [ content.sql5, content.mongo5 ]
  - 6: [ content.sql6, content.mongo6 ]
  - 7: [ content.sql7, content.mongo7 ]
  - 8: [ content.sql8, content.mongo8 ]
  - 9: [ content.sql9, content.mongo9 ]
---
# table metadata, as meta.<key>
section: meta
header1: "SQL Example"
header2: "MongoDB Example"
---
# table content, as content.<key>
section: content
sql1: |
      .. code-block:: sql

         SELECT COUNT(*) AS count 
         FROM orders
mongo1: |
        .. code-block:: javascript
           :emphasize-lines: 2

           db.orders.aggregate( [
              { $group: { _id: null, count: { $sum: 1 } } }
           ] )
sql2: |
      .. code-block:: sql

         SELECT SUM(price) AS total 
         FROM orders
mongo2: |
        .. code-block:: javascript
           :emphasize-lines: 2

           db.orders.aggregate( [
              { $group: { _id: null,  total: { $sum: "$price" } } }
           ] )
sql3: |
      .. code-block:: sql

         SELECT cust_id, SUM(price) AS total
         FROM orders 
         GROUP BY cust_id
mongo3: |

        .. code-block:: javascript
           :emphasize-lines: 2

           db.orders.aggregate( [
              { $group: { _id: "$cust_id", total: { $sum: "$price" } } } 
           ] )
sql4: |
      .. code-block:: sql

         SELECT cust_id, ord_date, SUM(price) AS total
         FROM orders 
         GROUP BY cust_id, ord_date
mongo4: |
        .. code-block:: javascript
           :emphasize-lines: 2-3

           db.orders.aggregate( [
              { $group: { _id: { cust_id: "$cust_id", ord_date: "$ord_date" },
                          total: { $sum: "$price" } } } 
           ] )
sql5: |
      .. code-block:: sql

         SELECT cust_id, count(*)
         FROM orders 
         GROUP BY cust_id
         HAVING count(*) > 1
mongo5: |
        .. code-block:: javascript
           :emphasize-lines: 2-3
   
           db.orders.aggregate( [
              { $group: { _id: "$cust_id", count: { $sum: 1 } } }, 
              { $match: { count: { $gt: 1 } } } 
           ] )
sql6: |
      .. code-block:: sql

         SELECT cust_id, ord_date, SUM(price) AS total
         FROM orders 
         GROUP BY cust_id, ord_date
         HAVING total > 250
mongo6: |
        .. code-block:: javascript
           :emphasize-lines: 2-4

           db.orders.aggregate( [
              { $group: { _id: { cust_id: "$cust_id", ord_date: "$ord_date" },
                          total: { $sum: "$price" } } },
              { $match: { total: { $gt: 250 } } } 
           ] )
sql7: |
      .. code-block:: sql

         SELECT cust_id, SUM(price) as total
         FROM orders 
         WHERE status = 'A'
         GROUP BY cust_id
mongo7: |
        .. code-block:: javascript
           :emphasize-lines: 2-3
   
           db.orders.aggregate( [
              { $match: { status: 'A' } },
              { $group: { _id: "$cust_id", total: { $sum: "$price" } } } 
           ] )
sql8: |
      .. code-block:: sql

         SELECT cust_id, SUM(price) as total
         FROM orders 
         WHERE status = 'A'
         GROUP BY cust_id
         HAVING total > 250
mongo8: |
        .. code-block:: javascript
           :emphasize-lines: 2-5
   
           db.orders.aggregate( [
              { $match: { status: 'A' } },
              { $group: { _id: "$cust_id", total: { $sum: "$price" } } } ,
              { $match: { total: { $gt: 250 } } } 
           ] )
sql9: |
      .. code-block:: sql

         SELECT cust_id,sum(li.qty) as qty
         FROM orders o, order_lineitem li 
         WHERE li.order_id=o.id
         GROUP BY cust_id
mongo9: |
        .. code-block:: javascript
           :emphasize-lines: 2-5
   
           db.orders.aggregate( [
              { $unwind: "$items" },
              { $group: { _id: "$cust_id", qty: { $sum: "$items.qty" } } } 
           ] )
...
