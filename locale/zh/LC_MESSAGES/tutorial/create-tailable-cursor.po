#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 2.5-dev\n"

#: ../source/tutorial/create-tailable-cursor.txt:3
msgid "Create Tailable Cursor"
msgstr "创建Tailable游标"

#: ../source/tutorial/create-tailable-cursor.txt:8
msgid "Overview"
msgstr "概述"

#: ../source/tutorial/create-tailable-cursor.txt:10
msgid ""
"By default, MongoDB will automatically close a cursor when the client has "
"exhausted all results in the cursor. However, for :doc:`capped collections </"
"core/capped-collections>` you may use a *Tailable Cursor* that remains open "
"after the client exhausts the results in the initial cursor. Tailable "
"cursors are conceptually equivalent to the ``tail`` Unix command with the ``-"
"f`` option (i.e. with \"follow\" mode). After clients insert new additional "
"documents into a capped collection, the tailable cursor will continue to "
"retrieve documents."
msgstr ""
"默认情况下，当客户端已经耗尽游标中的所有结果的时候，MongoDB将自动关闭这个游"
"标。然而，对于 :doc:`capped collections </core/capped-collections>` ，你可以"
"使用一个 *Tailable 游标* ，在客户端耗尽最初游标内的结果后它保持打开状态。"
"tailable 游标在概念上等同于有 ``-f`` 选项（也就是 ``follow`` 模式）的 "
"``tail`` Unix命令。在客户端插入一个新的额外的文档到一个封顶集合之后，"
"tailable 游标将继续检索文档。"

#: ../source/tutorial/create-tailable-cursor.txt:20
msgid ""
"Use tailable cursors on capped collections that have high write volumes "
"where indexes aren't practical. For instance, MongoDB :doc:`replication </"
"replication>` uses tailable cursors to tail the primary's :term:`oplog`."
msgstr ""
"在有着未使用索引的高写入卷的封顶集合上使用tailable游标。例如， :doc:"
"`replication </replication>` 使用tailable游标来跟踪主节点的 :term:`oplog` 。"

#: ../source/tutorial/create-tailable-cursor.txt:27
msgid ""
"If your query is on an indexed field, do not use tailable cursors, but "
"instead, use a regular cursor. Keep track of the last value of the indexed "
"field returned by the query. To retrieve the newly added documents, query "
"the collection again using the last value of the indexed field in the query "
"criteria, as in the following example:"
msgstr ""
"如果您的查询是在索引的字段上,不要使用tailable游标，取而代之地，使用一个常规游"
"标。跟踪查询所返回的索引字段的最后一个值。若要检索最新添加的文档，请使用查询"
"条件里索引字段的最后一个值来重新查询，如下例所示："

#: ../source/tutorial/create-tailable-cursor.txt:38
msgid "Consider the following behaviors related to tailable cursors:"
msgstr "考虑 tailable 游标相关的以下行为："

#: ../source/tutorial/create-tailable-cursor.txt:40
msgid ""
"Tailable cursors do not use indexes and return documents in :term:`natural "
"order`."
msgstr ""
"tailable 游标不使用索引，并且返回以 :term:`natural order` 顺序排序的文档。"

#: ../source/tutorial/create-tailable-cursor.txt:43
msgid ""
"Because tailable cursors do not use indexes, the initial scan for the query "
"may be expensive; but, after initially exhausting the cursor, subsequent "
"retrievals of the newly added documents are inexpensive."
msgstr ""
"因为 tailable 游标不使用索引，最初的查询扫描可能是昂贵的；但是，在用完最初的"
"游标之后，随后的最新添加的文档的检索是廉价的。"

#: ../source/tutorial/create-tailable-cursor.txt:47
msgid "Tailable cursors may become *dead*, or invalid, if either:"
msgstr "如果发生下面任何一个，tailable 游标可能会变成 *dead* ，或者无效的："

#: ../source/tutorial/create-tailable-cursor.txt:49
msgid "the query returns no match."
msgstr "该查询返回不匹配。"

#: ../source/tutorial/create-tailable-cursor.txt:51
msgid ""
"the cursor returns the document at the \"end\" of the collection and then "
"the application deletes that document."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:54
msgid "A *dead* cursor has an id of ``0``."
msgstr "*dead* 游标有一个 ``0`` id。"

#: ../source/tutorial/create-tailable-cursor.txt:56
msgid ""
"See your :doc:`driver documentation </applications/drivers>` for the driver-"
"specific method to specify the tailable cursor."
msgstr ""
"查看 driver-specific 方法的 :doc:`driver documentation </applications/"
"drivers>` 以指定 tailable 游标。更多关于指定一个 tailable 游标细节的信息，请"
"参见 :meta-driver:`MongoDB wire protocol </legacy/mongodb-wire-protocol>` 文"
"档。"

#: ../source/tutorial/create-tailable-cursor.txt:60
msgid "C++ Example"
msgstr "C++ 例子"

#: ../source/tutorial/create-tailable-cursor.txt:62
msgid ""
"The ``tail`` function uses a tailable cursor to output the results from a "
"query to a capped collection:"
msgstr " ``tail`` 方法使用一个 tailable 游标来输出来自对封顶集合的查询的结果："

#: ../source/tutorial/create-tailable-cursor.txt:65
msgid ""
"The function handles the case of the dead cursor by having the query be "
"inside a loop."
msgstr "该函数通过让查询在一个循环里来处理死了的游标的情况。"

#: ../source/tutorial/create-tailable-cursor.txt:68
msgid ""
"To periodically check for new data, the ``cursor->more()`` statement is also "
"inside a loop."
msgstr "为了周期性地检测新数据， ``cursor->more()`` 声明也在循环里。"

#: ../source/tutorial/create-tailable-cursor.txt:114
msgid "The ``tail`` function performs the following actions:"
msgstr " ``tail`` 功能执行下列操作："

#: ../source/tutorial/create-tailable-cursor.txt:116
msgid ""
"Initialize the ``lastValue`` variable, which tracks the last accessed value. "
"The function will use the ``lastValue`` if the cursor becomes *invalid* and "
"``tail`` needs to restart the query. Use :method:`~cursor.hint()` to ensure "
"that the query uses the :operator:`$natural` order."
msgstr ""
"初始化 ``lastValue`` 变量，这个变量跟踪最后一个访问的值。如果此游标编程 *无效"
"的* 并且 ``tail`` 需要重启查询的时候，这个功能将使用 ``lastValue`` 。使用 :"
"method:`~cursor.hint()` 以保证这个查询使用 :operator:`$natural` 顺序。"

#: ../source/tutorial/create-tailable-cursor.txt:122
msgid "In an outer ``while(1)`` loop,"
msgstr "在外 ``while(1)`` 循环中，"

#: ../source/tutorial/create-tailable-cursor.txt:124
msgid ""
"Query the capped collection and return a tailable cursor that blocks for "
"several seconds waiting for new documents"
msgstr "查询封顶集合并返回一个 tailable 游标，游标阻塞几秒钟以等待新的文档。"

#: ../source/tutorial/create-tailable-cursor.txt:133
msgid ""
"Specify the capped collection using ``ns`` as an argument to the function."
msgstr "使用 ``ns`` 作为该函数的参数来指定封顶的集合。"

#: ../source/tutorial/create-tailable-cursor.txt:136
msgid ""
"Set the ``QueryOption_CursorTailable`` option to create a tailable cursor."
msgstr "设置 ``QueryOption_CursorTailable`` 选项以创建一个 tailable 游标。"

#: ../source/tutorial/create-tailable-cursor.txt:139
msgid ""
"Set the ``QueryOption_AwaitData`` option so that the returned cursor blocks "
"for a few seconds to wait for data."
msgstr "设置 ``QueryOption_AwaitData`` 选项让返回的游标阻塞几秒钟以等待数据。"

#: ../source/tutorial/create-tailable-cursor.txt:142
msgid "In an inner ``while (1)`` loop, read the documents from the cursor:"
msgstr "在内 ``while (1)`` 循环中，从游标中读取文档："

#: ../source/tutorial/create-tailable-cursor.txt:144
msgid ""
"If the cursor has no more documents and is not invalid, loop the inner "
"``while`` loop to recheck for more documents."
msgstr ""
"如果该游标没有更多的文档并且不是无效的，循环内 ``while`` 循环重新检查更多的文"
"档。"

#: ../source/tutorial/create-tailable-cursor.txt:147
msgid ""
"If the cursor has no more documents and is dead, break the inner ``while`` "
"loop."
msgstr "如果游标没有更多的文档，并且是死的，打断内 ``while`` 循环。"

#: ../source/tutorial/create-tailable-cursor.txt:150
msgid "If the cursor has documents:"
msgstr "如果游标有文档："

#: ../source/tutorial/create-tailable-cursor.txt:152
msgid "output the document,"
msgstr "输出文档，"

#: ../source/tutorial/create-tailable-cursor.txt:154
msgid "update the ``lastValue`` value,"
msgstr "更新 ``lastValue`` 的值"

#: ../source/tutorial/create-tailable-cursor.txt:156
msgid "and loop the inner ``while (1)`` loop to recheck for more documents."
msgstr "并且循环内 ``while (1)`` 循环以重新检测更多的文档。"

#: ../source/tutorial/create-tailable-cursor.txt:159
msgid ""
"If the logic breaks out of the inner ``while (1)`` loop and the cursor is "
"invalid:"
msgstr "如果逻辑打破内 ``while (1)`` 循环并且该游标是无效的："

#: ../source/tutorial/create-tailable-cursor.txt:162
msgid ""
"Use the ``lastValue`` value to create a new query condition that matches "
"documents added after the ``lastValue``. Explicitly ensure ``$natural`` "
"order with the ``hint()`` method:"
msgstr ""
"使用 ``lastValue`` 值来创建一个新的匹配在 ``lastValue`` 之后添加的文档的查询"
"条件。使用 ``hint()`` 方法明确地保证 ``$natural`` 顺序："

#: ../source/tutorial/create-tailable-cursor.txt:170
msgid ""
"Loop through the outer ``while (1)`` loop to re-query with the new query "
"condition and repeat."
msgstr "循环外部 ``while (1)`` 循环以使用新的查询条件重新查询，并且重复循环。"

#: ../source/tutorial/create-tailable-cursor.txt:173
msgid ""
"`Detailed blog post on tailable cursor <http://shtylman.com/post/the-tail-of-"
"mongodb>`_"
msgstr ""
