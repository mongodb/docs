================================
Rotate Keys for Sharded Clusters
================================

.. default-domain:: mongodb

Sharded cluster members can use :ref:`keyfiles <internal-auth-keyfile>`
to authenticate each other as memers of the same deployment.

Starting in version 4.2, a :ref:`keyfile <internal-auth-keyfile>` can
contain multiple keys and membership authentication is established if
at least one key is common across members. This allows for rolling
upgrade of the keys without downtime.

The following tutorial steps through the process to update, without any
downtime, the key for a sharded cluster. [#exclude-encryption-keyfile]_

Consider a sharded cluster where each member's keyfile contains the
following key:

.. code-block:: none

   Wre8zPa8KiC6HaQhxpHMktwMhpfeGDtjZKpUQHFQVF+qrKrX6a80Dc1nseigLEVQ
   CSNYEG76zHxMsr9tCiRWcRme5vRSVivUSVXJsKB0pqGZXveh2dZWcitzODGe6yOF
   xTUmKbg64unKT4LHY4MoEH8vHXJ7tokaLLDlohnJEEiz9zO0DHEdt0JpxDpyVHnp
   70kJic1a7FFY0RsVoYMuqAcS+ggumr9rpYhixwVYLH47VzmSD+xTTB4q+QTtXkue
   uOazSrg/QaY=

The following procedure updates the sharded cluster members to use a
new key:

.. code-block:: none

   afT65R2J01Qyxawxmjv+pTYtPGGJRbQ/WebXsSc9Z7MNEEbU8LaHn0skORKAKfIA
   fgNAb4Ujpiyb9PwSOWW6OcSN0jUzqYL5FkzXORhTvoWdj9y4q2dMhgPva3oBW82G
   6Fw5fp0orKNhYMFubYOGnHHduuNWAC/Wl3o79agNHf1dbf3KD4qf033pt45oPjXO
   WGQLi9GLIoURFe3bXOo4wttk1Qxz4P6JIudN3m7dbOcA0kEzMBr4/G0Lv6k8o2gn
   VTvy0pRdSHI=

.. [#exclude-encryption-keyfile]

   This tutorial is not applicable to the :ref:`keyfile
   <encrypt-local-key-mgmt>` used for the :doc:`MongoDB's encrypted
   storage engine </core/security-encryption-at-rest>` local key
   management. That :ref:`keyfile <encrypt-local-key-mgmt>` can only
   contain a single key.

Procedure
---------

1. Modify the Keyfile to Include Old and New Keys
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Modify each member's keyfile to include both the old and new keys. You
can specify multiple keys either as strings enclosed in quotes or as a
sequence of keys.

.. container::

   .. tabs::

      tabs:

         - id: multiple-key-strings
           name: Multiple Key Strings
           content: |

              You can specify multiple key strings where each key
              string is **enclosed in quotes**:

              .. code-block:: yaml

                 'Wre8zPa8KiC6HaQhxpHMktwMhpfeGDtjZKpUQHFQVF+qrKrX6a80Dc1nseigLEVQ
                 CSNYEG76zHxMsr9tCiRWcRme5vRSVivUSVXJsKB0pqGZXveh2dZWcitzODGe6yOF
                 xTUmKbg64unKT4LHY4MoEH8vHXJ7tokaLLDlohnJEEiz9zO0DHEdt0JpxDpyVHnp
                 70kJic1a7FFY0RsVoYMuqAcS+ggumr9rpYhixwVYLH47VzmSD+xTTB4q+QTtXkue
                 uOazSrg/QaY='

                 'afT65R2J01Qyxawxmjv+pTYtPGGJRbQ/WebXsSc9Z7MNEEbU8LaHn0skORKAKfIA
                 fgNAb4Ujpiyb9PwSOWW6OcSN0jUzqYL5FkzXORhTvoWdj9y4q2dMhgPva3oBW82G
                 6Fw5fp0orKNhYMFubYOGnHHduuNWAC/Wl3o79agNHf1dbf3KD4qf033pt45oPjXO
                 WGQLi9GLIoURFe3bXOo4wttk1Qxz4P6JIudN3m7dbOcA0kEzMBr4/G0Lv6k8o2gn
                 VTvy0pRdSHI='

         - id: multiple-key-sequence
           name: Multiple Key Sequence
           content: |

              You can specify multiple key strings as a sequence of key
              strings (optionally enclosed in quotes):

              .. code-block:: yaml

                 - 'Wre8zPa8KiC6HaQhxpHMktwMhpfeGDtjZKpUQHFQVF+qrKrX6a80Dc1nseigLEVQ
                   CSNYEG76zHxMsr9tCiRWcRme5vRSVivUSVXJsKB0pqGZXveh2dZWcitzODGe6yOF
                   xTUmKbg64unKT4LHY4MoEH8vHXJ7tokaLLDlohnJEEiz9zO0DHEdt0JpxDpyVHnp
                   70kJic1a7FFY0RsVoYMuqAcS+ggumr9rpYhixwVYLH47VzmSD+xTTB4q+QTtXkue
                   uOazSrg/QaY='

                 - 'afT65R2J01Qyxawxmjv+pTYtPGGJRbQ/WebXsSc9Z7MNEEbU8LaHn0skORKAKfIA
                   fgNAb4Ujpiyb9PwSOWW6OcSN0jUzqYL5FkzXORhTvoWdj9y4q2dMhgPva3oBW82G
                   6Fw5fp0orKNhYMFubYOGnHHduuNWAC/Wl3o79agNHf1dbf3KD4qf033pt45oPjXO
                   WGQLi9GLIoURFe3bXOo4wttk1Qxz4P6JIudN3m7dbOcA0kEzMBr4/G0Lv6k8o2gn
                   VTvy0pRdSHI='


2. Restart Each Member
~~~~~~~~~~~~~~~~~~~~~~

Once all the keyfiles contain both the old and new keys, restart each
member one at a time.

Config Servers
``````````````

.. container::

   **For each secondary of the config server replica set (CSRS)**,
   connect a :binary:`~bin.mongo` shell to the member and:

   a. Use the :method:`db.shutdownServer()` method to shut down the member:

      .. code-block:: javascript

            use admin
            db.shutdownServer()

   b.   Restart the member.

   **For the primary**, connect a :binary:`~bin.mongo` shell to the member and

   a. Use :method:`rs.stepDown()` to step down the member:

      .. code-block:: javascript

         rs.stepDown()


   #. Use the :method:`db.shutdownServer()` method to shut down the member:

      .. code-block:: javascript

         use admin
         db.shutdownServer()

   #. Restart the member.

Shard Replica Sets
``````````````````

.. container::

   **For each secondary member of the shard replica sets**, connect a
   :binary:`~bin.mongo` shell to the member and:

   a. Use the :method:`db.shutdownServer()` method to shut down the member:

      .. code-block:: javascript

            use admin
            db.shutdownServer()

   b.   Restart the member.

   **For the primary of each shard replica set**, connect a
   :binary:`~bin.mongo` shell to the member and

   a. Use :method:`rs.stepDown()` to step down the member:

      .. code-block:: javascript

         rs.stepDown()


   #. Use the :method:`db.shutdownServer()` method to shut down the member:

      .. code-block:: javascript

         use admin
         db.shutdownServer()

   #. Restart the member.


``mongos`` Routers
``````````````````

.. container::

   **For each mongos/router instance**, connect a
   :binary:`~bin.mongo` shell to the :binary:`~bin.mongos` instance and:

   a. Use the :method:`db.shutdownServer()` method to shut down the member:

      .. code-block:: javascript

         use admin
         db.shutdownServer()

   b.   Restart the member.

Once all members have been restarted, the members now accept either the
old or new key for membership authentication.

3. Update Keyfile Content to the New Key Only
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. container::

   Modify each member's keyfile to include only the new password.

   .. code-block:: none

      'afT65R2J01Qyxawxmjv+pTYtPGGJRbQ/WebXsSc9Z7MNEEbU8LaHn0skORKAKfIA
       fgNAb4Ujpiyb9PwSOWW6OcSN0jUzqYL5FkzXORhTvoWdj9y4q2dMhgPva3oBW82G
       6Fw5fp0orKNhYMFubYOGnHHduuNWAC/Wl3o79agNHf1dbf3KD4qf033pt45oPjXO
       WGQLi9GLIoURFe3bXOo4wttk1Qxz4P6JIudN3m7dbOcA0kEzMBr4/G0Lv6k8o2gn
       VTvy0pRdSHI='

4. Restart Each Member
~~~~~~~~~~~~~~~~~~~~~~

.. container::

   Once all the keyfiles contain the new key only, restart each member one
   at a time.

Config Servers
``````````````

.. container::

   **For each secondary of the config server replica set (CSRS)**,
   connect a :binary:`~bin.mongo` shell to the member and:

   a. Use the :method:`db.shutdownServer()` method to shut down the member:

      .. code-block:: javascript

            use admin
            db.shutdownServer()

   b.   Restart the member.

   **For the primary**, connect a :binary:`~bin.mongo` shell to the member and

   a. Use :method:`rs.stepDown()` to step down the member:

      .. code-block:: javascript

         rs.stepDown()


   #. Use the :method:`db.shutdownServer()` method to shut down the member:

      .. code-block:: javascript

         use admin
         db.shutdownServer()

   #. Restart the member.

Shard Replica Sets
``````````````````

.. container::

   **For each secondary member of the shard replica sets**, connect a
   :binary:`~bin.mongo` shell to the member and:

   a. Use the :method:`db.shutdownServer()` method to shut down the member:

      .. code-block:: javascript

            use admin
            db.shutdownServer()

   b.   Restart the member.

   **For the primary of each shard replica set**, connect a
   :binary:`~bin.mongo` shell to the member and

   a. Use :method:`rs.stepDown()` to step down the member:

      .. code-block:: javascript

         rs.stepDown()


   #. Use the :method:`db.shutdownServer()` method to shut down the member:

      .. code-block:: javascript

         use admin
         db.shutdownServer()

   #. Restart the member.

``mongos`` Routers
``````````````````

.. container::

   **For each mongos/router instance**, connect a
   :binary:`~bin.mongo` shell to the :binary:`~bin.mongos` instance and:

   a. Use the :method:`db.shutdownServer()` method to shut down the member:

      .. code-block:: javascript

         use admin
         db.shutdownServer()

   b.   Restart the member.

Once all members have been restarted, the members now accept only the
new key for membership authentication.
