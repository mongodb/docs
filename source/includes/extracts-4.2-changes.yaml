ref: 4.2-changes-index-names
content: |

     Starting in version 4.2, for :ref:`featureCompatibilityVersion
     <view-fcv>` set to ``"4.2"`` or greater, MongoDB removes the
     :limit:`Index Name Length` limit of 127 byte maximum. In previous
     versions or MongoDB versions with
     :ref:`featureCompatibilityVersion <view-fcv>` (fCV) set to
     ``"4.0"``, index names must fall within the
     :limit:`limit <Index Name Length>`.
---
ref: 4.2-changes-geoNear-limit
content: |

   Starting in version 4.2, MongoDB removes the ``limit`` and ``num``
   options for the :pipeline:`$geoNear` stage as well as the default
   limit of 100 documents. To limit the results of
   :pipeline:`$geoNear`, use the :pipeline:`$geoNear` stage with the
   :pipeline:`$limit` stage.
---
ref: 4.2-changes-passwordPrompt
content: |

   Starting in version 4.2 of the :binary:`~bin.mongo` shell, you can
   use the :method:`passwordPrompt()` method in conjunction with
   various user authentication/management methods/commands to prompt
   for the password instead of specifying the password directly in the
   method/command call. However, you can still specify the password
   directly as you would with earlier versions of the
   :binary:`~bin.mongo` shell.
---
ref: 4.2-changes-opcounters-type
content: |

   Starting in MongoDB 4.2, the returned opcounters.* values are
   type NumberLong. In previous versions, the values are of type NumberInt.
---
ref: 4.2-changes-opcountersRepl-type
content: |

   Starting in MongoDB 4.2, the returned opcountersRepl.* values are 
   type NumberLong. In previous versions, the values are type NumberInt.
---
ref: 4.2-changes-out-linearizable
content: |

   Starting in MongoDB 4.2, the :pipeline:`$out` stage cannot be used
   in conjunction with read concern :readconcern:`"linearizable"`. That
   is, if you specify :readconcern:`"linearizable"` read concern for
   :method:`db.collection.aggregate()`, you cannot include the
   :pipeline:`$out` stage in the pipeline.
---
ref: 4.2-changes-usedDisk
content: |

   Starting in MongoDB 4.2, the :doc:`profiler log messages
   </tutorial/manage-the-database-profiler>` and :doc:`diagnostic log
   messages </reference/log-messages>` includes a ``usedDisk``
   indicator if any aggregation stage wrote data to temporary files due
   to :ref:`memory restrictions <agg-memory-restrictions>`.
---
ref: 4.2-changes-keyfile-fmt
content: |

   Starting in MongoDB 4.2, :ref:`keyfiles for internal membership
   authentication <internal-auth-keyfile>` use YAML format to allow for
   multiple keys in a keyfile. The YAML format accepts content of:

   - a single key string (same as in earlier versions),
   
   - multiple key strings (each string must be enclosed in quotes), or
   
   - sequence of key strings.

   The YAML format is compatible with the existing single-key
   keyfiles that use the text file format.
---
ref: 4.2-changes-slow-oplog-log-message-footnote
content: |

   Starting in version 4.2 (also available starting in 4.0.6), secondary members of a replica set now
   :ref:`log oplog entries <slow-oplog>` that take longer than the slow
   operation threshold to apply. These slow oplog messages are logged
   for the secondaries in the :option:`diagnostic log <mongod
   --logpath>` under the :data:`REPL` component with the text ``applied
   op: <oplog entry> took <num>ms``. These slow oplog entries depend
   only on the slow operation threshold. They do not depend on the log
   levels (either at the system or component level), or the profiling
   level, or the slow operation sample rate. The profiler does not
   capture slow oplog entries.
---
ref: 4.2-changes-type-0
content: |

   Starting in MongoDB 4.2, users can no longer use the query filter
   ``$type: 0`` as a synonym for
   ``$exists:false``. To query for null or missing fields, see
   :doc:`/tutorial/query-for-null-fields`.
   
---
ref: 4.2-changes-log-storage
content: |

   Starting in MongoDB 4.2 (and in 4.0.9), for slow operations, the :doc:`profiler
   entries </tutorial/manage-the-database-profiler>` and
   :doc:`diagnostic log messages </reference/log-messages>` include
   :data:`~system.profile.storage` information.
---
ref: 4.2-changes-log-query-shapes-plan-cache-key
content: |

   Starting in MongoDB 4.2, the :doc:`profiler entries
   </tutorial/manage-the-database-profiler>` and the :ref:`diagnostic
   log messages (i.e. mongod/mongos log
   messages)<log-message-slow-ops>` for read/write operations include:

   - ``queryHash`` to help identify slow queries with the same
     :term:`query shape`. 

   - ``planCacheKey`` to provide more insight into the :doc:`query plan
     cache </core/query-plans>` for slow queries.

---
ref: 4.2-changes-query-shapes
content: |

   To help identify slow queries with the same :term:`query shape`,
   starting in MongoDB 4.2, each :term:`query shape` is associated with
   a :ref:`queryHash <4.2-query-hash>`. The ``queryHash`` is a
   hexadecimal string that represents a hash of the query shape and
   is dependent only on the query shape.

   .. note::

      As with any hash function, two different query shapes may result
      in the same hash value. However, the occurrence of hash
      collisions between different query shapes is unlikely.

---
ref: 4.2-changes-plan-cache-key
content: |

   To provide more insight into the :doc:`query plan cache
   </core/query-plans>`, MongoDB 4.2 introduces the :ref:`planCacheKey
   <4.2-plan-cache-key>`. 
   
   ``planCacheKey`` is a hash of the key for the plan cache entry
   associated with the query.

   .. note::

      Unlike the ``queryHash``, the ``planCacheKey`` is a function of
      both the query shape and the currently available indexes for the
      shape. That is, if indexes that can support the query shape are
      added/dropped, the ``planCacheKey`` value may change whereas the
      ``queryHash`` value would not change.

---
ref: 4.2-changes-planCacheStats
content: |
   
   MongoDB 4.2 adds a new aggregation pipeline stage
   :pipeline:`$planCacheStats` that provides :doc:`plan cache
   </core/query-plans>` information for a collection.

---
ref: 4.2-changes-planCacheStats-pref
content: |
   The :pipeline:`$planCacheStats` aggregation stage is preferred over
   the :method:`PlanCache.getPlansByQuery()`
   method/:dbcommand:`planCacheListPlans` command and
   :method:`PlanCache.listQueryShapes()`
   method/:dbcommand:`planCacheListQueryShapes` command.
---
ref: 4.2-changes-options-tls-ssl
content: |

   MongoDB deprecates the SSL options and insteads adds new
   corresponding TLS options.
---
ref: 4.2-changes-options-tlsClusterCAFile
content: |
   MongoDB adds
   |tlsClusterCAFile|/:setting:`net.tls.clusterCAFile`. (Also availalbe
   in 3.4.18+, 3.6.9+, 4.0.3+)

---
ref: 4.2-changes-options-indexBuildRetry
content: |

   MongoDB removes the ``--noIndexBuildRetry`` command-line option and
   the corresponding ``storage.indexBuildRetry`` option.
---
ref: 4.2-changes-options-tls-ssl-upgrade
content: |
   Starting in MongoDB 4.2, MongoDB deprecates the SSL options for the
   :ref:`mongod <ssl-mongod-options>`, the :ref:`mongos
   <mongos-ssl-options>`, and the :ref:`mongo shell<mongo-shell-ssl>` as
   well as the corresponding :ref:`net-ssl-conf-options` configuration
   file options.

   To avoid deprecation messages, use the new ``TLS`` options for the
   :ref:`mongod <tls-mongod-options>`, the :ref:`mongos
   <mongos-tls-options>`, and the :ref:`mongo shell<mongo-shell-tls>`.

   - For the command-line TLS options, refer to the :ref:`mongod
     <tls-mongod-options>`, :ref:`mongos <mongos-tls-options>`, and
     :ref:`mongo shell <mongo-shell-tls>` pages.

   - For the corresponding ``mongod`` and ``mongos`` configuration file
     options, refer to the :ref:`configuration file
     <net-tls-conf-options>` page.

   - For the connection string ``tls`` options, refer to the
     :ref:`connection string <uri-options-tls>` page.
---
ref: 4.2-changes-options-tls-ssl-downgrade
content: |

   Starting in MongoDB 4.2, MongoDB adds ``"tls"``-prefixed options as
   aliases for the ``"ssl"-prefixed`` options.

   If your deployments or clients use the ``"tls"``-prefixed options,
   replace with the corresponding ``"ssl"-prefixed`` options for the
   :ref:`mongod <ssl-mongod-options>`, the :ref:`mongos
   <mongos-ssl-options>`, and the :ref:`mongo shell<mongo-shell-ssl>`
   and drivers.
---
ref: 4.2-changes-agg-out-explain
content: |

   Starting in MongoDB 4.2, you cannot run the :dbcommand:`explain`
   command/:method:`db.collection.explain()` in ``executionStats`` mode
   or ``allPlansExecution`` mode for an :method:`aggregation pipeline
   <db.collection.aggregate>` that contains the :pipeline:`$out` stage.
   Instead, you can either:

   - run the explain in ``queryPlanner`` mode or 

   - run the explain in ``executionStats`` mode or ``allPlansExecution``
     mode but without the :pipeline:`$out` stage to return information
     for the stages that precede the :pipeline:`$out` stage.
---
ref: 4.2-changes-debug-log-message
content: |

   Starting in version 4.2, MongoDB includes the Debug verbosity level
   (1-5) in the :ref:`log messages <log-severity-levels>`. For example,
   if the verbosity level is 2, MongoDB logs ``D2``. In previous
   versions, MongoDB log messages only specified ``D`` for Debug level.
---
ref: 4.2-changes-downgrade-command-line-options
content: |

   If you use command-line options instead of a configuration file,
   update the command-line options as appropriate during the restart.

   - If your command-line options include :ref:`"tls"-prefixed
     options <tls-mongod-options>`, update to :ref:`"ssl"-prefixed
     <ssl-mongod-options>` options.

   - If the :binary:`~bin.mongod` instance used ``zstd`` data compression, 
   
     - Update :option:`--dbpath <mongod --dbpath>` to the new directory
       (created during the prerequisites).
       
     - Remove :option:`--wiredTigerCollectionBlockCompressor <mongod
       --wiredTigerCollectionBlockCompressor>` to use the default
       ``snappy`` compressor (or, alternatively, explicitly set to a
       4.0 supported compressor).

   - If the :binary:`~bin.mongod` instance used ``zstd`` journal
     compression,

     - Remove :option:`--wiredTigerJournalCompressor <mongod
       --wiredTigerJournalCompressor>` to use the default ``snappy``
       compressor (or, alternatively, explicitly set to a 4.0 supported
       compressor).

   - If the :binary:`~bin.mongod` instance included ``zstd`` network
     message compression,
     
     - Remove :option:`--networkMessageCompressors <mongod
       --networkMessageCompressors>` to enable message compression
       using the default ``snappy,zlib`` compressors. Alternatively,
       explicitly specify the compressor(s).

---
ref: 4.2-changes-downgrade-command-line-options-mongos
content: |
   If you use command-line options instead of a configuration file,
   update the command-line options as appropriate during the restart.

   - If your :binary:`~bin.mongos` command-line options include
     :ref:`"tls"-prefixed options <mongos-tls-options>`, update to
     :ref:`"ssl"-prefixed <mongos-ssl-options>` options.

   - If the :binary:`~bin.mongos` instance included ``zstd`` network
     message compression, remove :option:`--networkMessageCompressors
     <mongos --networkMessageCompressors>` to use the default
     ``snappy,zlib`` compressors. Alternatively, specify the list of
     compressors to use.
---
ref: 4.2-changes-zstd-downgrade-prereq
content: |

   #. Create a new empty :option:`data directory <mongod --dbpath>` for
      the :binary:`~bin.mongod` instance. This directory will be used
      in the downgrade procedure below.

      .. important::

         Ensure that the user account running :binary:`~bin.mongod` has
         read and write permissions for the new directory.

   #. If you use a :doc:`configuration file
      </reference/configuration-options>`, update the file to prepare for
      the downgrade procedure:

      a. Delete
         :setting:`storage.wiredTiger.collectionConfig.blockCompressor`
         to use the default compressor (``snappy``) or
         set to another 4.0 supported compressor.

      #. Update :setting:`storage.dbPath` to the new
         data directory.

      | If you use command-line options instead, you will have to update
        the options in the procedure below.

---
ref: 4.2-changes-zstd-journal-compression-config-only
content: |

   - If using a :doc:`configuration file
     </reference/configuration-options>`, delete
     :setting:`storage.wiredTiger.engineConfig.journalCompressor` to
     use the default compressor (``snappy``) or set to another 4.0
     supported compressor.

   - If using command-line options instead, you will have to update the
     options in the procedure below.
---
ref: 4.2-changes-zstd-network-compression
content: |

   The :term:`zstd` compression library is available for network
   message compression starting in version 4.2.

   To prepare for the downgrade:

   #. For |binary| that uses :term:`zstd` for network message
      compression and uses a :doc:`configuration file
      </reference/configuration-options>`, update the
      :setting:`net.compression.compressors` setting to prepare for the
      restart during the downgrade procedure.

      | If you use command-line options instead, you will have to update
        the options in the procedure below.

   #. For any client that specifies ``zstd`` in its :urioption:`URI
      connection string <compressors>`, update to remove ``zstd`` from the
      list.

   #. For any :binary:`~bin.mongo` shell that specifies ``zstd`` in its
      :option:`--networkMessageCompressors <mongo
      --networkMessageCompressors>`, update to remove ``zstd`` from the
      list.

   .. important::

      Messages are compressed when both parties enable network
      compression. Otherwise, messages between the parties are
      uncompressed.
---
ref: 4.2-changes-fips-program
content: |
   Starting in version 4.2, MongoDB removes the ``--sslFIPSMode``
   option for |tool-binary|. |tool-binary|
   will use FIPS compliant connections to
   :binary:`~bin.mongod`/:binary:`~bin.mongos` if the
   :binary:`~bin.mongod`/:binary:`~bin.mongos` instances are
   :doc:`configured to use FIPS mode </tutorial/configure-fips>`.
---
ref: 4.2-changes-fips-program-mongod
content: |
   Starting in version 4.2, MongoDB removes the ``--sslFIPSMode``
   option for |tool-binary|. |tool-binary|
   will use FIPS compliant connections to the
   :binary:`~bin.mongod` if the
   :binary:`~bin.mongod` instance is
   :doc:`configured to use FIPS mode </tutorial/configure-fips>`.

---
ref: 4.2-changes-fips
content: |

   Starting in version 4.2, MongoDB removes the ``--sslFIPSMode``
   option for the following programs:

   - :binary:`~bin.mongodump`
   - :binary:`~bin.mongoexport`
   - :binary:`~bin.mongofiles`
   - :binary:`~bin.mongoimport`
   - :binary:`~bin.mongorestore`
   - :binary:`~bin.mongostat`
   - :binary:`~bin.mongotop`

   The programs will use FIPS compliant connections to
   :binary:`~bin.mongod`/:binary:`~bin.mongos` if the
   :binary:`~bin.mongod`/:binary:`~bin.mongos` instances are
   :doc:`configured to use FIPS mode </tutorial/configure-fips>`.
...
