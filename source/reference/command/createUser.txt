==========
createUser
==========

.. default-domain:: mongodb

Definition
----------

.. dbcommand:: createUser

   Creates a new user on the database where you run the command. The
   dbcommand:`createUser` command returns a *duplicate user* error if the
   user exists.
   The :dbcommand:`createUser` command uses the following syntax:

   .. code-block:: javascript

      { createUser: "<name>",
        pwd: "<cleartext password>",
        customData: { <any information> },
        roles: [
          { role: "<role>", db: "<database>" } | "<role>",
          ...
        ],
        writeConcern: { <write concern> }
      }

   :dbcommand:`createUser` has the following fields:

   .. |local-cmd-name| replace:: :dbcommand:`createUser`
   .. include:: /reference/command/createUser-field.rst

   :dbcommand:`createUser` sends password to the MongoDB instance as cleartext.
   To encrypt the password in transit use :doc:`SSL </tutorial/configure-ssl>`.

   Users created on the ``$external`` database should have credentials stored
   externally to MongoDB, as, for example, with :doc:`MongoDB Enterprise
   installations that use Kerberos </tutorial/control-access-to-mongodb-with-kerberos-authentication>`.

   .. include:: /includes/fact-roles-array-contents.rst

Required Access
---------------

To run the :dbcommand:`createUser` command, a user must have access
that includes the :authaction:`createUser` on the database.

To grant a role to the new user, the user granting the role must have access
that includes the :authaction:`grantAnyRole` action on the role's database.

Example
-------

The following :dbcommand:`createUser` command creates a user ``Carlos`` on the
database where you run the command. The command gives ``Carlos`` the
``clusterAdmin`` and ``readAnyDatabase`` roles on the ``admin`` database
and the ``readWrite`` role on the current database:

.. code-block:: javascript

   { createUser: "Carlos",
     pwd: "cleartext password",
     customData: { employeeId: 12345 },
     roles: [
       { role: "clusterAdmin", db: "admin" },
       { role: "readAnyDatabase", db: "admin" },
       "readWrite"
     ],
     writeConcern: { w: "majority" , wtimeout: 5000 }
   }
