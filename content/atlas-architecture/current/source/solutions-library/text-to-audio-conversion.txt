.. _arch-center-is-text-to-audio:

================================================
Text-To-Audio News Conversion With Generative AI
================================================

.. facet::
   :name: genre
   :values: tutorial

.. meta::
   :keywords: media, videos, news, gen AI 
   :description: Automate news broadcasting combining generative AI with MongoDB.
   
.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Combine generative AI for podcast creation and MongoDB for data storage
to automate and scale news broadcasting.

**Use cases:** `Gen AI
<https://www.mongodb.com/use-cases/artificial-intelligence>`__

**Industries:** Media

**Products:** `MongoDB Atlas <http://mongodb.com/atlas>`__, 
`MongoDB Aggregation Framework
<https://www.mongodb.com/docs/manual/core/aggregation-pipeline/>`__,
`MongoDB Atlas Vector Search
<https://www.mongodb.com/products/platform/atlas-vector-search>`__

**Partners:** `Google NotebookLM <https://notebooklm.google/>`__

Solution Overview
-----------------

The surge in demand for audio content has prompted news organizations to
seek efficient ways to deliver daily summaries. For example, podcasts
have `9 million listeners per year
<https://advertise.acast.com/news-and-insights/future-of-podcast-advertising-in-2025-industry-leaders-predictions>`__
in the U.S. alone. However, automating this process is challenging
because it involves managing dynamic article data and converting it into
high-quality audio experiences.

With MongoDB and generative AI, you can build a news automation solution
to streamline and scale podcast creation. MongoDB serves as the core
data layer for the system, efficiently managing news articles as
flexible, schema-less documents within a single collection. These
documents capture both static information—such as title, content, and
publication date—and dynamic metrics that monitor article performance
and popularity over time, such as the number of qualified reads. You can
also store derived insights, such as sentiment analysis and key
entities, in your MongoDB collection and enrich them with a generative
AI pipeline.

This adaptable structure provides a robust framework to query and
extract the latest news and metadata. You can then transform this
information into audio podcasts by integrating advanced language models.
With this foundation in place, you can unlock AI-driven business
opportunities, attract new customers and increase revenue streams.

Reference Architectures
-----------------------

To implement this framework, you need MongoDB for data storage and
AI-powered speech synthesis for audio creation. You can use Google’s
NotebookLM model to refine news text with accurate intonation and
pacing. The diagram below outlines the workflow for converting news
summaries into audio:

.. figure:: /includes/images/industry-solutions/text-to-audio-architecture.svg
   :figwidth: 1200px
   :alt: visualization for text-to-audio conversion
   
   Figure 1. AI-based text-to-audio conversion architecture

1. **Retrieve Articles:** Use :ref:`aggregation <aggregation>` and 
   :ref:`Atlas Vector Search <avs-overview>` to fetch relevant news
   articles from the database.

#. **Generate Podcast Script:** Pass the articles through an AI pipeline to
   create a structured, multi-voice podcast script.

#. **Convert to Audio:** Use advanced text-to-speech models to transform the
   script into high-quality audio, stored as a ``.wav`` file.

#. **Optimize Delivery:** Cache the generated podcast to ensure seamless,
   on-demand playback for users.

This framework delivers high-quality, human-like narration in MP3
format, providing users with a professional and engaging listening
experience.

Build the Solution
------------------

Follow these steps to build a text-to-audio solution using the
MongoDB `ist.media <https://github.com/mongodb-industry-solutions/ist.media/tree/main>`__
GitHub repository. You can use this framework as inspiration to 
build your own customized text-to-audio pipeline.

.. procedure::
   :style: normal

   .. step:: Deploy the ist.media demo

      Clone the `ist.media github repository
      <https://github.com/mongodb-industry-solutions/ist.media/tree/main>`__
      and follow the ``README`` instructions to deploy the demo. 

   .. step:: Create a feed for news

      Run the demo and verify that the ``/feed`` endpoint provides the
      news feed for the current day. Alternatively, if you prefer not to
      use the ist.media news collection mechanisms, you can supply your
      own data, which is served statically by the endpoint in the same
      format.

   .. step:: Generate text-to-audio conversion

      Run the `podcast.py
      <https://github.com/mongodb-industry-solutions/ist.media/blob/main/scripts/podcast.py>`__
      script in the ist.media demo. This script uses the `AutoContent API
      <https://autocontentapi.com/>`__ to generate the podcast. It then
      downloads and saves it with the date (day/month/year) in the
      filename.

Key Learnings
-------------

To create a media solution that converts news data into audio content,
you need a system that is flexible, fast, and able to scale easily.
MongoDB makes this possible through these core strengths:

- **The document model handles diverse attributes:** News data combines
  various attributes, including static fields such as ID, title, date and
  body, dynamic metadata such as read count, AI-generated insights such
  as keywords and article sentiment, and embeddings for semantic search.
  The document model supports all these elements, removing database
  limitations and allowing the system to evolve smoothly.

- **Speed ensures operational efficiency:** By processing complete,
  self-contained documents, MongoDB avoids complex operations, enabling
  faster analysis and near real-time transformation of articles into
  audio content.

- **Scalable systems enable growth:** MongoDB Atlas handles both small
  changes and large amounts of data smoothly, ensuring high performance
  and reliability as your media application grows.

- **Flexible systems empower developers:** Without fixed schemas,
  developers can easily add new information, like AI insights, audience
  metrics, or editorial updates. This makes it simple to adapt and
  respond to evolving news consumption.

Authors
-------

- Benjamin Lorenz, MongoDB
- Diego Canales, MongoDB

Learn More
----------

- :ref:`arch-center-is-ai-media-personalization`

- :ref:`arch-center-is-telco-ops`

- :ref:`arch-center-is-Gen-AI-powered-video-summarization-solution`