ref: fts-sort-precision-tutorial-cs
level: 4
stepnum: 1
title: "Set up and initialize the .NET/C# project for the query."
content: |
  a. Create a new directory called ``sort-for-precision-example`` and
     initialize your project with the ``dotnet new`` command.

     .. code-block:: bash

        mkdir sort-for-precision-example
        cd sort-for-precision-example
        dotnet new console

  #. Add the .NET/C# Driver to your project as a dependency.

     .. code-block:: bash

        dotnet add package MongoDB.Driver

---
ref: create-sort-precision-query-cs
level: 4
stepnum: 2
title: "Create the query in the ``Program.cs`` file."
content: |
  a. Replace the contents of the ``Program.cs``  file with the
     following code.
     
     The code example performs the following tasks:

     - Imports ``mongodb`` packages and dependencies.
     - Establishes a connection to your |service| cluster.
     - .. include:: /includes/extracts/fts-sort-by-string-desc.rst
           
       .. include:: /includes/extracts/fts-sort-by-string-stage.rst

     - Iterates over the cursor to print the documents that match the 
       query.
     
     .. literalinclude:: /includes/fts-tutorial/sort/strings-query.cs
        :language: csharp
        :linenos:
        :dedent:
        :emphasize-lines: 10

  #. .. include:: /includes/fact-fts-driver-connection-string.rst

---
ref: run-sort-precision-query-cs
level: 4
stepnum: 3
title: "Compile and run the ``Program.cs`` file."
content: |

  .. io-code-block::
     :copyable: true

     .. input::
        :language: bash

        dotnet run sort-for-precision-example.csproj

     .. output::
        :language: json
        :visible: true

        { "title" : "Prancer", "score" : 99.0 }
        { "title" : "Prancer Returns", "score" : 99.0 }
        { "title" : "Prince of Foxes", "score" : 95.0 }
        { "title" : "Prince of the City", "score" : 95.0 }
        { "title" : "Prince of Darkness", "score" : 95.0 }

  .. include:: /includes/extracts/fts-sort-by-string-results.rst
...
