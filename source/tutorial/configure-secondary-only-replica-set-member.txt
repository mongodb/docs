=======================================
Prevent Secondary from Becoming Primary
=======================================

.. default-domain:: mongodb

To prevent a :term:`secondary` member from ever becoming a
:term:`primary` in a :term:`failover`, assign the secondary a priority
of ``0``, as described here. You can set this "secondary-only mode" for
any member of the :term:`replica set`, except the current primary. For a
detailed description of secondary-only members and their purposes, see
:doc:`/core/replica-set-priority-0-member`.

To configure a member as secondary-only, set its
:data:`~local.system.replset.members[n].priority` value to ``0`` in its member configuration. Any
member with a :data:`~local.system.replset.members[n].priority` equal to
``0`` will never seek :ref:`election <replica-set-elections>` and cannot
become primary in any situation.

.. code-block:: javascript
   :emphasize-lines: 4

   {
      "_id" : <num>,
      "host" : <hostname:port>,
      "priority" : 0
   }

MongoDB does not permit the current :term:`primary` to have a priority
of ``0``. To prevent the current primary from again becoming a primary,
you must first step down the current primary using
:method:`rs.stepDown()`, and then you must :ref:`reconfigure the replica
set <replica-set-reconfiguration-usage>` with :method:`rs.conf()` and
:method:`rs.reconfig()`.

Example
-------

As an example of modifying member priorities, assume a four-member
replica set. Use the following sequence of operations to modify member
priorities in the :program:`mongo` shell connected to the primary.
Identify each member by its array index in the
:data:`~local.system.replset.members` array:

.. code-block:: javascript

   cfg = rs.conf()
   cfg.members[0].priority = 2
   cfg.members[1].priority = 1
   cfg.members[2].priority = 0.5
   cfg.members[3].priority = 0
   rs.reconfig(cfg)

The sequence of operations reconfigures the set with the following
priority settings:

- Member at ``0`` has a priority of ``2`` so that it becomes primary under
  most circumstances.

- Member at ``1`` has a priority of ``1``, which is the default value.
  Member ``1`` becomes primary if no member with a *higher* priority is
  eligible.

- Member at ``2`` has a priority of ``0.5``, which makes it less likely to
  become primary than other members but doesn't prohibit the
  possibility.

- Member at ``3`` has a priority of ``0``.
  Member at ``3`` **cannot** become the :term:`primary` member under any
  circumstances.

.. include:: /includes/fact-rs-conf-array-index.rst

.. include:: /includes/warning-rs-reconfig.rst

Related Documents
-----------------

- :data:`~local.system.replset.members[n].priority`

- :doc:`/tutorial/adjust-replica-set-member-priority`

- :ref:`Replica Set Reconfiguration <replica-set-reconfiguration-usage>`

- :doc:`/core/replica-set-elections`
