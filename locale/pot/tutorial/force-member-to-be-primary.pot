# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-30 14:28-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/force-member-to-be-primary.txt:3
# 582fde821c22479fa76ee80a466f01e2
msgid "Force a Member to Become Primary"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:8
# 261f3030f84f41108a788a21baff27e6
msgid "Overview"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:10
# de8eb898a27a41cabaf9966ccfe094e6
msgid "You can force a :term:`replica set` member to become :term:`primary` by giving it a higher :data:`~replSetGetConfig.members[n].priority` value than any other member in the set."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:15
# 6e7548beb95a4e3cb52121328eb894e0
msgid "Optionally, you also can force a member never to become primary by setting its :data:`~replSetGetConfig.members[n].priority` value to ``0``, which means the member can never seek :ref:`election <replica-set-elections>` as primary. For more information, see :ref:`replica-set-secondary-only-members`."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:22
# 4718e1e9a01b4f849288ddf99a7ae30d
msgid "Consideration"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:24
# 69abdfb38d63479cb494a43c75c785d5
msgid "A majority of the configured members of a replica set *must* be available for a set to reconfigure a set or elect a primary. See :doc:`/core/replica-set-elections` for more information."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:29
# e9f35913581d4b6482ef8141ae2e1fc7
msgid "Procedures"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:34
# ae0b067e28eb42348b92c61d361640b2
msgid "Force a Member to be Primary by Setting its Priority High"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:38
# c72e2699bec44ddc8ecb14be954c3a67
msgid "For more information on priorities, see :data:`~replSetGetConfig.members[n].priority`."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:41
# b3961de13b774056b7365f28e63fd712
msgid "This procedure assumes your current :term:`primary` is ``m1.example.net`` and that you'd like to instead make ``m3.example.net`` primary. The procedure also assumes you have a three-member :term:`replica set` with the configuration below. For more information on configurations, see :ref:`Replica Set Configuration Use <replica-set-reconfiguration-usage>`."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:47
# 1b3b97593e8549c99a6193c765e6fac7
msgid "This procedure assumes this configuration:"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:70
# e49b872dc31446989a129d010d7e931f
msgid "In the :program:`mongo` shell, use the following sequence of operations to make ``m3.example.net`` the primary:"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:81
# b78adca0b9c842fdae63cda7255b9899
msgid "This sets ``m3.example.net`` to have a higher :data:`replSetGetConfig.members[n].priority` value than the other :program:`mongod` instances."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:85
# 532f3f1b837647da830334133dbfe275
msgid "The following sequence of events occur:"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:87
# c5a1e07c175848d5973458baeeeed328
msgid "``m3.example.net`` and ``m2.example.net`` sync with ``m1.example.net`` (typically within 10 seconds)."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:90
# f9e203e95679440fb7f548a53294ac0f
msgid "``m1.example.net`` sees that it no longer has highest priority and, in most cases, steps down. ``m1.example.net`` *does not* step down if ``m3.example.net``'s sync is far behind. In that case, ``m1.example.net`` waits until ``m3.example.net`` is within 10 seconds of its optime and then steps down. This minimizes the amount of time with no primary following failover."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:97
# d781840436ba4209874fa9d60804ea62
msgid "The step down forces on election in which ``m3.example.net`` becomes primary based on its :data:`priority <replSetGetConfig.members[n].priority>` setting."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:101
# 5f9f01dc26814207934107ff1d442501
msgid "Optionally, if ``m3.example.net`` is more than 10 seconds behind ``m1.example.net``'s optime, and if you don't need to have a primary designated within 10 seconds, you can force ``m1.example.net`` to step down by running:"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:110
# 709098da23fc481b8b798caf178b9e91
msgid "This prevents ``m1.example.net`` from being primary for 86,400 seconds (24 hours), even if there is no other member that can become primary. When ``m3.example.net`` catches up with ``m1.example.net`` it will become primary."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:115
# 7fcde019f7ca4edbb630c031f56b9672
msgid "If you later want to make ``m1.example.net`` primary again while it waits for ``m3.example.net`` to catch up, issue the following command to make ``m1.example.net`` seek election again:"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:124
# ea2a653a1add42a897c84d8d6306cb15
msgid "The :method:`rs.freeze()` provides a wrapper around the :dbcommand:`replSetFreeze` database command."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:130
# d1412545cb7447dfa4634871530ee77e
msgid "Force a Member to be Primary Using Database Commands"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:134
# 2eaab82ba37a4da1be22035f214bca8f
msgid "Consider a :term:`replica set` with the following members:"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:136
# ddf8b9e9c698451e8391f130e2c4f806
msgid "``mdb0.example.net`` - the  current :term:`primary`."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:137
# a6af2b5cd4e749b2a5f7c09d1bf82b38
msgid "``mdb1.example.net`` - a :term:`secondary`."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:138
# 438c5468764544d0b1205a7c8b8751f0
msgid "``mdb2.example.net`` - a secondary ."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:140
# 9e8911efe7e4412a921c8ebb37c9982d
msgid "To force a member to become primary use the following procedure:"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:142
# d1dcd4cfdc9c481f81de6649d7148b8b
msgid "In a :program:`mongo` shell, run :method:`rs.status()` to ensure your replica set is running as expected."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:145
# 9f73e61d34a9452f8630af59ba3bb6a1
msgid "In a :program:`mongo` shell connected to the :program:`mongod` instance running on ``mdb2.example.net``, freeze ``mdb2.example.net`` so that it does not attempt to become primary for 120 seconds."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:154
# 9c5b672b4da74c6cb0386b29d2530243
msgid "In a :program:`mongo` shell connected the :program:`mongod` running on ``mdb0.example.net``, step down this instance that the :program:`mongod` is not eligible to become primary for 120 seconds:"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:163
# 5d4ceb5116ab4a948d99ff5bb92ef935
msgid "``mdb1.example.net`` becomes primary."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:165
# 1133f01f8ce142148c401a0dd64b023e
msgid "During the transition, there is a short window where the set does not have a primary."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:168
# 4d52f076c6b44487bc914b2301830372
msgid "For more information, consider the :method:`rs.freeze()` and :method:`rs.stepDown()` methods that wrap the :dbcommand:`replSetFreeze` and :dbcommand:`replSetStepDown` commands."
msgstr ""

