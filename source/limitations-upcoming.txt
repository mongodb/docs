.. _django-limitations:
.. _django-feature-compat:

========================================
Django and MongoDB Feature Compatibility
========================================

.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: upcoming, odm, support

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

On this page, you can find information about supported and unsupported
features in {+django-odm+}. You can also find features
currently planned for the General Availability (GA) and post-GA
releases. We will prioritize these upcoming features
based on user demand, and you can request support
for a feature by :ref:`creating a JIRA issue <django-issues-and-help>`.

MongoDB Features
----------------

This section indicates whether the {+django-odm+} supports various
MongoDB features and which features we plan to support in
the GA release.

.. important::

   Unsupported MongoDB features that have a checkmark (``✓``) symbol in the
   **Planned GA Support** column are planned for the General Availability
   release later in 2025. However, support is not guaranteed.

Index Support
~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1
   :stub-columns: 1
   :widths: 30 30 40

   * - MongoDB Feature
     - Current Support
     - Planned GA Support

   * - Atlas Search and Atlas Vector Search indexes
     - ✓
     - ✓

   * - Compound indexes
     - ✓
     - ✓

   * - Embedded document indexes
     - ✓
     - ✓

   * - Geospatial indexes
     - *Unsupported*. You cannot use the Django
       Indexes API to create these indexes, but you can use
       the PyMongo Driver by :ref:`exposing your MongoClient <django-client-operations>`.
     - ✓

   * - Multikey indexes
     - ✓
     - ✓

   * - Partial indexes
     - ✓
     - ✓

   * - Single field indexes
     - ✓
     - ✓

   * - Unique indexes
     - ✓
     - ✓

   * - Updating ``EmbeddedModelFields`` indexes after model creation
     - *Unsupported*.
     - ✓

Data Type Support
~~~~~~~~~~~~~~~~~

{+django-odm+} currently supports all MongoDB data types not included
in the following table. To view a full list of supported types, see the
:ref:`django-models-mongodb-fields` section of the Create Models guide.

.. list-table::
   :header-rows: 1
   :stub-columns: 1
   :widths: 30 30 40

   * - BSON Data Type
     - Current Support
     - Planned GA Support

   * - ``Array``
     - *Partially Supported*. You can use the ``ArrayField`` field type with the
       following limitations:

       - ``ArrayField`` polymorphism is not supported.
       -  Nested ``EmbeddedModelField`` values within an ``ArrayField`` are not supported.

     - ✓

   * - ``Object``
     - *Partially Supported*. You can use the ``EmbeddedModelField`` field type with the
       following limitations:

       - ``EmbeddedModel`` schema changes do not register after creation.
       - Embedded documents cannot take Django foreign keys.
       - Arbitrary or untyped embedded model fields are not supported. You must
         derive all fields from a ``EmbeddedModel`` class.
       
     - *Partial Support Planned*. We plan to add support for registering 
       ``EmbeddedModel`` schema changes after creation.

   * - ``Regular Expression``
     - *Unsupported*.
     - *Unsupported*. However, we plan to support this type
       in a post-GA release.

Query Support
~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1
   :stub-columns: 1
   :widths: 30 30 40

   * - MongoDB Feature
     - Current Support
     - Planned GA Support

   * - Aggregation operations
     - *Partially Supported*. The {+django-odm+} does not include custom
       Django field lookups for the MongoDB aggregation framework, but you
       can use the :ref:`raw_aggregate() method <django-raw-queries-filter-group>`.
     - *Full Support Not Planned*. However, we plan to add support for MongoDB
       aggregation operators in a post-GA release.

   * - Atlas Search queries
     - *Partially Supported*. You cannot use the Django
       ``QuerySet`` API to run Atlas Search queries, but you can use
       the :ref:`raw_aggregate() method <django-raw-queries-search>`.
     - ✓

   * - Delete operations
     - ✓
     - ✓

   * - Geospatial queries
     - *Partially Supported*. You cannot use the Django
       ``QuerySet`` or ``GeoDjango`` API to run geospatial queries, but you can use
       the :ref:`raw_aggregate() method <django-raw-queries-geospatial>`.
     - ✓

   * - Insert operations
     - ✓
     - ✓

   * - Read operations
     - ✓
     - ✓

   * - Update operations
     - ✓
     - ✓

   * - Vector Search queries
     - *Partially Supported*. You cannot use the Django
       ``QuerySet`` API to run Vector Search queries, but you can use
       the :ref:`raw_aggregate() method <django-raw-queries-search>`.
     - ✓

Database and Collection Support
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1
   :stub-columns: 1
   :widths: 30 30 40

   * - MongoDB Feature
     - Current Support
     - Planned GA Support

   * - Asynchronous support
     - ✓
     - ✓

   * - Authentication
     - ✓
     - ✓

   * - Cached data storage
     - ✓ Use the ``django_mongodb_backend.cache.MongoDBCache`` backend rather
       than {+framework+}'s built-in database cache backend, ``django.core.cache.backends.db.DatabaseCache``.
     - ✓

   * - Change Streams
     - *Unsupported*.
     - *Unsupported*. However, we plan to add support for this feature
       in a post-GA release.

   * - Client-side Field Level Encryption and Queryable Encryption
     - *Unsupported*.
     - ✓

   * - Collection interaction
     - ✓
     - ✓

   * - Database interaction
     - ✓
     - ✓

   * - GridFS
     - *Unsupported*.
     - *Unsupported*. However, we plan to add support for this feature
       in a post-GA release.

   * - Multiple models for one collection
     - *Unsupported*.
     - ✓

   * - Representing documents
     - ✓ Use models to represent MongoDB documents.
     - ✓

   * - Schema validation
     - *Unsupported*.
     - *Unsupported*. However, we plan to add support for this feature
       in a post-GA release.

   * - Timeseries data
     - ✓
     - ✓

   * - Transactions
     - *Unsupported*.
     - ✓

Django Features
---------------

This section indicates whether the {+django-odm+} supports various
{+framework+} features and which features we plan to support in
the GA release.

.. important::

   Unsupported {+framework+} features that have a checkmark (``✓``) symbol in the
   **General Availability Support** column are planned for the GA
   release later in 2025. However, support is not guaranteed.

Field Type Support
~~~~~~~~~~~~~~~~~~

{+django-odm+} currently supports all {+framework+} field types not included in
the following table. To view a full list of supported fields, see the :ref:`django-models-django-fields`
section of the Create Models guide.

.. list-table::
   :header-rows: 1
   :stub-columns: 1
   :widths: 30 30 40

   * - {+framework+} Field Type
     - Current Support
     - Planned GA Support

   * - ``AutoField``
     - *Unsupported*. The ``BigAutoField`` and ``SmallAutoField`` types are also
       not supported. Instead, use ``ObjectIdField``.
     - *Unsupported*.

   * - ``DateTimeField``
     - *Partially Supported*. You can use this field type with the
       following limitations:

       - Microsecond granularity for ``DateTimeField`` values is not supported.
       
     - *Full Support Not Planned*.

   * - ``DurationField``
     - *Partially Supported*. You can use this field type with the
       following limitations:

       - ``DurationField`` stores milliseconds rather than microseconds
       
     - *Full Support Not Planned*.

   * - ``ForeignKey``
     - *Partially Supported*. You can use this field type with the
       following limitations:

       - When possible, you should use an ``EmbeddedModelField`` instead of a
         ``ForeignKey`` field to avoid using ``$lookup`` operations. An
         ``EmbeddedModelField`` emulates a MongoDB embedded document and performs
         better than a ``ForeignKey`` field. To learn more about how to reduce
         ``$lookup`` operations, see the :atlas:`Reduce $lookup Operations
         </schema-suggestions/reduce-lookup-operations/>` guide in the Atlas
         documentation.
       - Performance of `CASCADE deletes <{+django-docs+}/ref/models/fields/#django.db.models.CASCADE>`__
         on a ``ForeignKey`` field is not as performant as using an
         ``EmbeddedModelField``.
       
     - *Full Support Not Planned*.

   * - ``GeneratedField``
     - *Unsupported*.
     - *Unsupported*.

   * - ``JSONField``
     - *Partially Supported*. You can use this field type with the
       following limitations:

       - {+django-odm+} cannot distinguish between a JSON and a SQL ``null`` value.
         Queries that use ``Value(None, JSONField())`` or the ``isnull`` lookup
         return both JSON and SQL ``null`` values.
       - Some queries with ``Q`` objects, such as ``Q(value__foo="bar")``, might
         not work as expected.
       - Filtering for ``None`` values incorrectly returns objects in which a field
         does not exist.

     - *Full Support Not Planned*. However, we plan to address the
       ``Q`` object and ``None`` key filtering limitations in a post-GA release.

Query Support
~~~~~~~~~~~~~

{+django-odm+} currently supports all {+framework+} ``QuerySet`` methods not
included in the following table. To view the supported methods, see `QuerySet API
<{+django-docs+}/ref/models/querysets/#queryset-api>`__ in the {+framework+}
documentation.

.. list-table::
   :header-rows: 1
   :stub-columns: 1
   :widths: 30 30 40

   * - {+framework+} ``QuerySet`` Feature
     - Current Support
     - Planned GA Support

   * - ``delete()``
     - *Partially Supported*. You cannot use this method to perform
       queries that span multiple collections.
     - *Full Support Not Planned*.

   * - ``extra()``
     - *Unsupported*.
     - *Unsupported*.

   * - ``prefetch_related()``
     - *Unsupported*.
     - *Unsupported*.

   * - ``raw()``
     - *Unsupported*. However, you can use the ``raw_aggregate()`` method
       to run queries that use MongoDB's aggregation pipeline syntax.
     - *Full Support Not Planned*.

   * - ``update()``
     - *Partially Supported*. You cannot use this method to perform
       queries that span multiple collections.
     - *Full Support Not Planned*.

Database Function Support
~~~~~~~~~~~~~~~~~~~~~~~~~

{+django-odm+} currently supports all database functions not included in
the following table. To view a full list of functions, see `Database Functions
<{+django-docs+}/ref/models/database-functions/>`__ in the {+framework+}
documentation.

.. list-table::
   :header-rows: 1
   :stub-columns: 1
   :widths: 30 30 40

   * - {+framework+} Function
     - Current Support
     - Planned GA Support

   * - ``Chr``
     - *Unsupported*.
     - *Unsupported*.

   * - ``ExtractQuarter``
     - *Unsupported*.
     - *Unsupported*.

   * - ``MD5``
     - *Unsupported*.
     - *Unsupported*.

   * - ``Now``
     - *Unsupported*.
     - *Unsupported*.

   * - ``Ord``
     - *Unsupported*.
     - *Unsupported*.

   * - ``Pad``
     - *Unsupported*.
     - *Unsupported*.

   * - ``Repeat``
     - *Unsupported*.
     - *Unsupported*.

   * - ``Reverse``
     - *Unsupported*.
     - *Unsupported*.

   * - ``Right``
     - *Unsupported*.
     - *Unsupported*.

   * - ``SHA1``, ``SHA224``, ``SHA256``, ``SHA384``, ``SHA512``
     - *Unsupported*.
     - *Unsupported*.

   * - ``Sign``
     - *Unsupported*.
     - *Unsupported*.

   * - ``Trunc``
     - *Partially Supported*. The ``tzinfo`` parameter of the
       :py:class:`~django.db.models.functions.TruncDate` and
       :py:class:`~django.db.models.functions.TruncTime` database
       functions is not supported.
     - *Full Support Not Planned*.

Management Support
~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1
   :stub-columns: 1
   :widths: 30 30 40

   * - {+framework+} Feature
     - Current Support
     - Planned GA Support

   * - {+framework+} Admin
     - ✓
     - ✓

   * - {+framework+} Forms
     - ✓
     - ✓

   * - {+framework+} Authentication
     - ✓
     - ✓

   * - Management commands
     - *Partially Supported*. To view the unsupported
       commands, see the :ref:`following section <django-management-commands>`.
     - *Full Support Not Planned*.

.. _django-management-commands:

Management Command Support
``````````````````````````

{+django-odm+} currently supports all management commands not included in
the following table. To view a full list of commands, see `Available commands
<{+django-docs+}/ref/django-admin/#available-commands>`__ in the {+framework+}
documentation.

.. list-table::
   :header-rows: 1
   :widths: 30 30 40

   * - {+framework+} Command
     - Current Support
     - Planned GA Support

   * - ``createcachetable``
     - *Unsupported*. Instead, use {+django-odm+}'s ``createcachecollection`` command.
     - *Unsupported*.

   * - ``dumpdata``
     - *Unsupported*.
     - ✓

   * - ``inspectdb``
     - *Unsupported*.
     - *Unsupported*. However, we plan to support this command
       in a post-GA release.

   * - ``loaddata``
     - *Unsupported*.
     - ✓

   * - ``sqlflush``
     - *Unsupported*.
     - *Unsupported*.

   * - ``sqlsequencereset``
     - *Unsupported*.
     - *Unsupported*.

Migration Support
~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1
   :stub-columns: 1
   :widths: 30 30 40

   * - {+framework+} Feature
     - Current Support
     - Planned GA Support

   * - Creating, deleting, and updating indexes through migration
       commands
     - *Partially Supported*. You cannot update indexes on embedded model
       or array fields.
     - *Full Support Not Planned*.

   * - `DDL Transactions <{+django-docs+}/topics/migrations/#transactions>`__
     - *Unsupported*.
     - *Unsupported*.

   * - ``migrate --fake-initial`` option
     - *Unsupported*.
     - *Unsupported*.

Third Party Library Support
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1
   :stub-columns: 1
   :widths: 30 30 40

   * - Library
     - Current Support
     - Planned GA Support

   * - `Django-filter <https://django-filter.readthedocs.io/en/stable/>`__
     - *Partially Supported*. Most use cases are supported.
     - *Partially Supported*. This release will outline use case limitations.

   * - `Django Rest Framework <https://www.django-rest-framework.org/>`__
     - *Partially Supported*. Most use cases are supported.
     - *Partially Supported*. This release will outline use case limitations.

   * - `Django-allauth <https://docs.allauth.org/en/latest/>`__
     - *Partially Supported*. Most use cases are supported.
     - *Partially Supported*. This release will outline use case limitations.

   * - `Wagtail <https://wagtail.org/>`__
     - *Unsupported*.
     - *Partially Supported*. This release will outline use case limitations.

   * - `Django Debug Toolbar <https://django-debug-toolbar.readthedocs.io/en/latest/>`__
     - *Partially Supported*. Most use cases are supported.
     - *Partially Supported*. This release will outline use case limitations.
