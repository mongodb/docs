# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: 2014-04-08 18:37+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# 713d3c6e8270412d9893484815fe572a
#: ../source/tutorial/build-indexes-on-replica-sets.txt:8
msgid "Build Indexes on Replica Sets"
msgstr ""

# a49cce05dc4d4b02bb364bb21e576492
#: ../source/tutorial/build-indexes-on-replica-sets.txt
msgid "On this page"
msgstr ""

# 1077c99a31d1404ebb67e5a40d7b8313
#: ../source/tutorial/build-indexes-on-replica-sets.txt:18
msgid ""
"For replica sets, secondaries will begin building indexes *after* the "
":term:`primary` finishes building the index. In :term:`sharded clusters "
"<sharded cluster>`, the :program:`mongos` will send "
":method:`createIndex() <db.collection.createIndex()>` to the primary "
"members of the replica set for each shard, which then replicate to the "
"secondaries after the primary finishes building the index."
msgstr ""

# 6f3addef43d440fc88d3ee876b20d3d4
#: ../source/tutorial/build-indexes-on-replica-sets.txt:25
msgid ""
"To minimize the impact of building an index on your replica set, use the "
"following procedure to build indexes."
msgstr ""

# b6d094fc951b41e09082b0bf6c834fe6
#: ../source/tutorial/build-indexes-on-replica-sets.txt:29
msgid "Considerations"
msgstr ""

# 9cfa344d9105453faa1f413d6e0e078e
#: ../source/tutorial/build-indexes-on-replica-sets.txt:31
msgid ""
"Ensure that your :term:`oplog` is large enough to permit the indexing or "
"re-indexing operation to complete without falling too far behind to catch"
" up. See the :ref:`oplog sizing <replica-set-oplog-sizing>` documentation"
" for additional information."
msgstr ""

# b7bf031eafb14b67af6dfc4adefb3365
#: ../source/tutorial/build-indexes-on-replica-sets.txt:37
msgid ""
"This procedure *does* take one member out of the replica set at a time. "
"However, this procedure will only affect one member of the set at a time "
"rather than *all* secondaries at the same time."
msgstr ""

# 9ee39154fa2c4d69baad5cafa61059d1
#: ../source/tutorial/build-indexes-on-replica-sets.txt:41
msgid ""
"Before version 2.6 :ref:`Background index creation operations <index-"
"creation-background>` become *foreground* indexing operations on "
":term:`secondary` members of replica sets. After 2.6, background index "
"builds replicate as background index builds on the secondaries."
msgstr ""

# 3e1c29e145964fb88ffcf65f9f77fb03
#: ../source/tutorial/build-indexes-on-replica-sets.txt:49
msgid "Procedure"
msgstr ""

# 720f86df9f814829827aa09f966c5ae0
#: ../source/tutorial/build-indexes-on-replica-sets.txt:53
msgid ""
"If you need to build an index in a :term:`sharded cluster`, repeat the "
"following procedure for each replica set that provides each "
":term:`shard`."
msgstr ""

# 4bd0618ee2684cdba80465996f548df7
#: ../source/tutorial/build-indexes-on-replica-sets.txt:60
msgid "Stop One Secondary"
msgstr ""

# ae8db10735e542c78564670f674a3207
#: ../source/tutorial/build-indexes-on-replica-sets.txt:62
msgid ""
"Stop the :program:`mongod` process on one secondary. Restart the "
":program:`mongod` process *without* the :option:`--replSet <mongod "
"--replSet>` option and running on a different port. [#different-port]_ "
"This instance is now in \"standalone\" mode."
msgstr ""

# c53430282537441dbe9e36d88e41eefa
#: ../source/tutorial/build-indexes-on-replica-sets.txt:67
msgid ""
"For example, if your :program:`mongod` *normally* runs with on the "
"default port of ``27017`` with the :option:`--replSet <mongod --replSet>`"
" option you would use the following invocation:"
msgstr ""

# 82966ba177d647d9a562057a2c99677f
#: ../source/tutorial/build-indexes-on-replica-sets.txt:75
msgid ""
"By running the :program:`mongod` on a different port, you ensure that the"
" other members of the replica set and all clients will not contact the "
"member while you are building the index."
msgstr ""

# 289b6a4aa303469ba8eb3e940efa2ff4
#: ../source/tutorial/build-indexes-on-replica-sets.txt:83
msgid "Build the Index"
msgstr ""

# b5899f611f2747dda910edf3c07be1ce
#: ../source/tutorial/build-indexes-on-replica-sets.txt:85
msgid ""
"Create the new index using the :method:`~db.collection.createIndex()` in "
"the :program:`mongo` shell, or comparable method in your driver. This "
"operation will create or rebuild the index on this :program:`mongod` "
"instance"
msgstr ""

# f505b6c01837413ba0528d0379cfe414
#: ../source/tutorial/build-indexes-on-replica-sets.txt:90
msgid ""
"For example, to create an ascending index on the ``username`` field of "
"the ``records`` collection, use the following :program:`mongo` shell "
"operation:"
msgstr ""

# e0aa3e8aa19b498b969deff37c7f12d9
#: ../source/tutorial/build-indexes-on-replica-sets.txt:101
msgid "Restart the Program ``mongod``"
msgstr ""

# 91e6d666686e4f9b805931d2e115abc2
#: ../source/tutorial/build-indexes-on-replica-sets.txt:103
msgid ""
"When the index build completes, start the :program:`mongod` instance with"
" the :option:`--replSet <mongod --replSet>` option on its usual port:"
msgstr ""

# ed2dcc9b306b4c07b6636a360568344a
#: ../source/tutorial/build-indexes-on-replica-sets.txt:110
msgid ""
"Modify the port number (e.g. ``27017``) or the replica set name (e.g. "
"``rs0``) as needed."
msgstr ""

# 04669af1d663478c87c2acafecece360
#: ../source/tutorial/build-indexes-on-replica-sets.txt:113
msgid "Allow replication to catch up on this member."
msgstr ""

# ad28d42e73204bd5ba34f6758c0a89cf
#: ../source/tutorial/build-indexes-on-replica-sets.txt:116
msgid "Build Indexes on all Secondaries"
msgstr ""

# b9ed962b3f834f8094c54d293937e622
#: ../source/tutorial/build-indexes-on-replica-sets.txt:118
msgid ""
"Secondary members can now :ref:`build indexes in the background <index-"
"creation-background>`. Previously all index builds on secondaries were in"
" the foreground."
msgstr ""

# 34f78a705bd5486cb3d7c7c6610b97e6
#: ../source/tutorial/build-indexes-on-replica-sets.txt:123
msgid ""
"For each secondary in the set, build an index according to the following "
"steps:"
msgstr ""

# ce602ec0e4ab458399cf6947f1b38b1d
# aace9f7a07124e6d9363785af4acc662
#: ../source/tutorial/build-indexes-on-replica-sets.txt:126
#: ../source/tutorial/build-indexes-on-replica-sets.txt:146
msgid ":ref:`tutorial-index-on-replica-sets-stop-one-member`"
msgstr ""

# adc8d53ddc9d434d88385519f04f01bc
# a242abfe72b74ea89a4e9042bed282cc
#: ../source/tutorial/build-indexes-on-replica-sets.txt:127
#: ../source/tutorial/build-indexes-on-replica-sets.txt:148
msgid ":ref:`tutorial-index-on-replica-sets-build-index`"
msgstr ""

# 95a37de2f30d4592bd69049958c4d8c6
# 09466e8a564148169dc39aedb83b6f10
#: ../source/tutorial/build-indexes-on-replica-sets.txt:128
#: ../source/tutorial/build-indexes-on-replica-sets.txt:150
msgid ":ref:`tutorial-index-on-replica-sets-restart-mongod`"
msgstr ""

# e3794f1810f249468025e47b1f0f2d28
#: ../source/tutorial/build-indexes-on-replica-sets.txt:131
msgid "Build the Index on the Primary"
msgstr ""

# 2e1c128480cd4576b6481fca84196508
#: ../source/tutorial/build-indexes-on-replica-sets.txt:133
msgid "To build an index on the primary you can either:"
msgstr ""

# 8e8f951512344c009b445fdd09ade7b8
#: ../source/tutorial/build-indexes-on-replica-sets.txt:135
msgid ""
":ref:`Build the index in the background <index-creation-background>` on "
"the primary."
msgstr ""

# af63630c860043cca8adf677034fc70b
#: ../source/tutorial/build-indexes-on-replica-sets.txt:138
msgid ""
"Step down the primary using the :method:`rs.stepDown()` method in the "
":program:`mongo` shell to cause the current primary to become a secondary"
" graceful and allow the set to elect another member as primary."
msgstr ""

# f1057b80e850431f9859e27719806f64
#: ../source/tutorial/build-indexes-on-replica-sets.txt:143
msgid ""
"Then repeat the index building procedure, listed below, to build the "
"index on the primary:"
msgstr ""

# 57a7029f495f48f98fe01b9472208434
#: ../source/tutorial/build-indexes-on-replica-sets.txt:152
msgid ""
"Building the index on the background, takes longer than the foreground "
"index build and results in a less compact index structure. Additionally, "
"the background index build may impact write performance on the primary. "
"However, building the index in the background allows the set to be "
"continuously up for write operations while MongoDB builds the index."
msgstr ""

# a2dbff2abe4742c3b7f2c39fa80323bc
# 30cfe3ce2dcb429fb8c1491242c0130e
#: ../source/tutorial/build-indexes-on-replica-sets.txt:1
#: ../source/tutorial/build-indexes-on-replica-sets.txt:2
msgid "index"
msgstr ""

# a2dbff2abe4742c3b7f2c39fa80323bc
# 30cfe3ce2dcb429fb8c1491242c0130e
#: ../source/tutorial/build-indexes-on-replica-sets.txt:1
#: ../source/tutorial/build-indexes-on-replica-sets.txt:2
msgid "replica set"
msgstr ""

#~ msgid ""
#~ ":ref:`Background index creation operations "
#~ "<index-creation-background>` become *foreground*"
#~ " indexing operations on :term:`secondary` "
#~ "members of replica sets. The foreground"
#~ " index building process blocks all "
#~ "replication and read operations on the"
#~ " secondaries while they build the "
#~ "index."
#~ msgstr ""

#~ msgid ""
#~ "Secondaries will begin building indexes "
#~ "*after* the :term:`primary` finishes building"
#~ " the index. In :term:`sharded clusters "
#~ "<sharded cluster>`, the :program:`mongos` will"
#~ " send :method:`ensureIndex() "
#~ "<db.collection.ensureIndex()>` to the primary "
#~ "members of the replica set for "
#~ "each shard, which then replicate to "
#~ "the secondaries after the primary "
#~ "finishes building the index."
#~ msgstr ""

#~ msgid ""
#~ "To minimize the impact of building "
#~ "an index on your replica set, use"
#~ " the following procedure to build "
#~ "indexes on secondaries:"
#~ msgstr ""

# 0981c2017e4b4d3b8e8c3af006697bee
#~ msgid "See"
#~ msgstr ""

# 62323178abc348fa8b8e136fe71b37ed
#~ msgid ""
#~ "Do **not** use this procedure when "
#~ "building a :ref:`unique index <index-"
#~ "type-unique>` with the ``dropDups`` option."
#~ msgstr ""

# 83a125f7bb5f4d659f1a66330e171427
#~ msgid ""
#~ "Create the new index using the "
#~ ":method:`~db.collection.ensureIndex()` in the "
#~ ":program:`mongo` shell, or comparable method"
#~ " in your driver. This operation will"
#~ " create or rebuild the index on "
#~ "this :program:`mongod` instance"
#~ msgstr ""

# 5d999f0c617643089256f2bd2d0ba85e
#~ msgid ""
#~ ":doc:`/tutorial/create-an-index` and "
#~ ":doc:`/tutorial/create-a-compound-index` for more"
#~ " information."
#~ msgstr ""

# 581ee2bd93f74280807a7bb0c0ef1a09
#~ msgid ""
#~ ":doc:`Build the index in the background"
#~ " </tutorial/build-indexes-in-the-"
#~ "background>` on the primary."
#~ msgstr ""

# 249cb78440c549ac90f17be90ec03845
#~ msgid ""
#~ "Building the index on the background,"
#~ " takes longer than the foreground "
#~ "index build and results in a less"
#~ " compact index structure. Additionally, the"
#~ " background index build may impact "
#~ "write performance on the primary. "
#~ "However, building the index in the "
#~ "background allows the set to be "
#~ "continuously up for write operations "
#~ "during while MongoDB builds the index."
#~ msgstr ""

#~ msgid ""
#~ "For replica sets, secondaries will begin"
#~ " building indexes *after* the "
#~ ":term:`primary` finishes building the index."
#~ " In :term:`sharded clusters <sharded "
#~ "cluster>`, the :program:`mongos` will send "
#~ ":method:`ensureIndex() <db.collection.ensureIndex()>` to"
#~ " the primary members of the replica"
#~ " set for each shard, which then "
#~ "replicate to the secondaries after the"
#~ " primary finishes building the index."
#~ msgstr ""

#~ msgid ""
#~ "To minimize the impact of building "
#~ "an index on your replica set, use"
#~ " the following procedure to build "
#~ "indexes:"
#~ msgstr ""

#~ msgid ""
#~ "Secondary members can now :doc:`build "
#~ "indexes in the background </tutorial/build-"
#~ "indexes-in-the-background>`. Previously "
#~ "all index builds on secondaries were "
#~ "in the foreground."
#~ msgstr ""

