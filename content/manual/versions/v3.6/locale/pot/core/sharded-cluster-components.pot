# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/sharded-cluster-components.txt:9
msgid "Sharded Cluster Components"
msgstr ""

#: ../source/core/sharded-cluster-components.txt:19
msgid "A MongoDB :term:`sharded cluster` consists of the following components:"
msgstr ""

#: ../source/core/sharded-cluster-components.txt:21
msgid ":doc:`shard </core/sharded-cluster-shards>`: Each shard contains a subset of the sharded data. As of MongoDB 3.6, shards must be deployed as a :term:`replica set`."
msgstr ""

#: ../source/core/sharded-cluster-components.txt:25
msgid ":doc:`/core/sharded-cluster-query-router`: The ``mongos`` acts as a query router, providing an interface between client applications and the sharded cluster."
msgstr ""

#: ../source/core/sharded-cluster-components.txt:29
msgid ":doc:`config servers </core/sharded-cluster-config-servers>`: Config servers store metadata and configuration settings for the cluster. As of MongoDB 3.4, config servers must be deployed as a replica set (CSRS)."
msgstr ""

#: ../source/core/sharded-cluster-components.txt:36
msgid "Production Configuration"
msgstr ""

#: ../source/core/sharded-cluster-components.txt:38
msgid "In a production cluster, ensure that data is redundant and that your systems are highly available. Consider the following for a production sharded cluster deployment:"
msgstr ""

#: ../source/core/sharded-cluster-components.txt:42
msgid "Deploy Config Servers as a 3 member :term:`replica set`"
msgstr ""

#: ../source/core/sharded-cluster-components.txt:43
msgid "Deploy each Shard as a 3 member :term:`replica set`"
msgstr ""

#: ../source/core/sharded-cluster-components.txt:44
msgid "Deploy one or more :binary:`~bin.mongos` routers"
msgstr ""

#: ../source/core/sharded-cluster-components.txt:47
msgid "Replica Set Distribution"
msgstr ""

#: ../source/core/sharded-cluster-components.txt:49
msgid "Where possible, consider deploying one member of each replica set in a site suitable for being a disaster recovery location."
msgstr ""

#: ../source/includes/note-csrs-distribution.rst:3
msgid "Distributing replica set members across two data centers provides benefit over a single data center. In a two data center distribution,"
msgstr ""

#: ../source/includes/note-csrs-distribution.rst:7
msgid "If one of the data centers goes down, the data is still available for reads unlike a single data center distribution."
msgstr ""

#: ../source/includes/note-csrs-distribution.rst:10
msgid "If the data center with a minority of the members goes down, the replica set can still serve write operations as well as read operations."
msgstr ""

#: ../source/includes/note-csrs-distribution.rst:14
msgid "However, if the data center with the majority of the members goes down, the replica set becomes read-only."
msgstr ""

#: ../source/includes/note-csrs-distribution.rst:17
msgid "If possible, distribute members across at least three data centers. For config server replica sets (CSRS), the best practice is to distribute across three (or more depending on the number of members) centers. If the cost of the third data center is prohibitive, one distribution possibility is to evenly distribute the data bearing members across the two data centers and store the remaining member (either a data bearing member or an arbiter to ensure odd number of members) in the cloud if your company policy allows."
msgstr ""

#: ../source/core/sharded-cluster-components.txt:55
msgid "Number of Shards"
msgstr ""

#: ../source/core/sharded-cluster-components.txt:57
msgid "Sharding requires at least two shards to distribute sharded data. Single shard sharded clusters may be useful if you plan on enabling sharding in the  near future, but do not need to at the time of deployment."
msgstr ""

#: ../source/core/sharded-cluster-components.txt:62
msgid "Number of ``mongos`` and Distribution"
msgstr ""

#: ../source/core/sharded-cluster-components.txt:64
msgid "Deploying multiple :binary:`~bin.mongos` routers supports high availability and scalability. A common pattern is to place a :binary:`~bin.mongos` on each application server. Deploying one :binary:`~bin.mongos` router on each application server reduces network latency between the application and the router."
msgstr ""

#: ../source/core/sharded-cluster-components.txt:70
msgid "Alternatively, you can place a :binary:`~bin.mongos` router on dedicated hosts. Large deployments benefit from this approach because it decouples the number of client application servers from the number of :binary:`~bin.mongos` instances. This gives greater control over the number of connections the :binary:`~bin.mongod` instances serve."
msgstr ""

#: ../source/core/sharded-cluster-components.txt:76
msgid "Installing :binary:`~bin.mongos` instances on their own hosts allows these instances to use greater amounts of memory. Memory would not be shared with a :binary:`~bin.mongod` instance. It is possible to use primary shards to host :binary:`~bin.mongos` routers but be aware that memory contention may become an issue on large deployments."
msgstr ""

#: ../source/core/sharded-cluster-components.txt:82
msgid "There is no limit to the number of :binary:`~bin.mongos` routers you can have in a deployment. However, as :binary:`~bin.mongos` routers communicate frequently with your config servers, monitor config server performance closely as you increase the number of routers. If you see performance degradation, it may be beneficial to cap the number of :binary:`~bin.mongos` routers in your deployment."
msgstr ""

#: ../source/core/sharded-cluster-components.txt:92
msgid "Development Configuration"
msgstr ""

#: ../source/core/sharded-cluster-components.txt:94
msgid "For testing and development, you can deploy a sharded cluster with a minimum number of components. These **non-production** clusters have the following components:"
msgstr ""

#: ../source/core/sharded-cluster-components.txt:98
msgid "A replica set :ref:`config server <sharding-config-server>` with one member."
msgstr ""

#: ../source/core/sharded-cluster-components.txt:101
msgid "At least one shard as a single-member :term:`replica set`."
msgstr ""

#: ../source/core/sharded-cluster-components.txt:103
msgid "One :binary:`~bin.mongos` instance."
msgstr ""

#: ../source/core/sharded-cluster-components.txt:107
msgid "Use the test cluster architecture for testing and development only."
msgstr ""

#: ../source/core/sharded-cluster-components.txt:110
msgid ":doc:`/tutorial/deploy-shard-cluster/`"
msgstr ""

