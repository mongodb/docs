=======================
db.collection.reIndex()
=======================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. method:: db.collection.reIndex()

   .. |dbcommand| replace:: :dbcommand:`reIndex` command
   .. include:: /includes/fact-mongo-shell-method-alt.rst

   The :method:`db.collection.reIndex()` drops all indexes on a
   collection and recreates them. This operation may be expensive for
   collections that have a large amount of data and/or a large number
   of indexes.

   .. warning::

      - For most users, the :method:`db.collection.reIndex()` operation
        is unnecessary.

      - Avoid running :method:`db.collection.reIndex()` against a
        collection in a replica set.

      - Do not run :method:`db.collection.reIndex()` against a
        collection in a sharded cluster.

        .. versionchanged:: 4.2

           MongoDB disallows :method:`db.collection.reIndex()` to be
           run on a :binary:`~bin.mongos`, implementing a stronger
           restriction against running
           :method:`db.collection.reIndex()` for a collection in a
           sharded cluster.

Behavior
--------

.. |cmd-name| replace:: :method:`db.collection.reIndex()`

.. include:: /includes/note-reindex-impact-on-replica-sets.rst

Resource Locking
~~~~~~~~~~~~~~~~

.. versionchanged:: 4.2.2

For MongoDB 4.2.2 and later, :method:`db.collection.reIndex()` obtains
an exclusive (W) lock on the collection and blocks other operations on
the collection until it completes.

For more information on locking in MongoDB, see :doc:`/faq/concurrency`.

.. seealso:: :doc:`/indexes`
