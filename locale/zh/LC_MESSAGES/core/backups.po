#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/backups.txt:3
msgid "MongoDB Backup Methods"
msgstr "MongoDB备份方案"

#: ../source/core/backups.txt:13
msgid ""
"When deploying MongoDB in production, you should have a strategy for "
"capturing and restoring backups in the case of data loss events. There are "
"several ways to back up MongoDB clusters:"
msgstr ""

#: ../source/core/backups.txt:17
msgid ":ref:`backup-with-file-copies`"
msgstr ":ref:`backup-with-file-copies`"

#: ../source/core/backups.txt:18
msgid ":ref:`backup-and-restore-tools`"
msgstr ""

#: ../source/core/backups.txt:19
msgid ":ref:`backup-with-mms`"
msgstr ""
"为了从MongoDB管理服务的备份快照中恢复一个MongoDB集群，您可以下载一个MongoDB数据文件的压缩版本，"
"然后再重启 :program:`mongod` 进程之前分发这些文件。"

#: ../source/core/backups.txt:20
msgid ":ref:`backup-with-mms-onprem`"
msgstr ""

#: ../source/core/backups.txt:25
msgid "Backup by Copying Underlying Data Files"
msgstr ""
"通过拷贝基础的数据文件进行备份"


#: ../source/core/backups.txt:27
msgid "You can create a backup by copying MongoDB's underlying data files."

msgstr ""
"您可以通过拷贝MongoDB基础的数据文件创建一个备份。"

#: ../source/core/backups.txt:30
msgid ""
"If the volume where MongoDB stores data files supports point in time "
"snapshots, you can use these snapshots to create backups of a MongoDB system"
" at an exact moment in time."
msgstr ""
"如果MongoDB存储数据文件的容量支持基于时间点的快照，您可以在某一特定"
"时刻及时通过使用这些快照以创建一个MongoDB系统的备份。"

#: ../source/core/backups.txt:34
msgid ""
"File systems snapshots are an operating system volume manager feature, and "
"are not specific to MongoDB. The mechanics of snapshots depend on the "
"underlying storage system. For example, if you use Amazon’s EBS storage "
"system for EC2 supports snapshots. On Linux the LVM manager can create a "
"snapshot."
msgstr ""
"文件系统快照是任何一个操作系统容量管理的特性，并不仅仅针对于MongoDB。"
"快照的机制依赖于基础的存储系统。例如，如果您使用的是亚马逊的EBS存储，EC2的系统将会支持快照。"
"此外，Linux和LVM管理器也可以创建快照。"

#: ../source/core/backups.txt:40
msgid ""
"To get a correct snapshot of a running :program:`mongod` process, you must "
"have journaling enabled and the journal must reside on the same logical "
"volume as the other MongoDB data files. Without journaling enabled, there is"
" no guarantee that the snapshot will be consistent or valid."
msgstr ""
"为了得到一个正在运行的 :program:`mongod` 进程的快照，您必须启用日志记录并且日志必须位于"
"其它MongoDB数据文件的相同逻辑分区上。如果没有启用日志记录，就不能保证快照的一致性和可靠性。"

#: ../source/core/backups.txt:46
msgid ""
"To get a consistent snapshot of a sharded system, you must disable the "
"balancer and capture a snapshot from every shard and a config server at "
"approximately the same moment in time."
msgstr ""
"为了得到一个分片系统一致的快照，您必须禁止均衡器，并且在差不多相同的时间上从每一个分片和配置"
"服务器上获取一个快照。"

#: ../source/core/backups.txt:50
msgid ""
"If your storage system does not support snapshots, you can copy the files "
"directly using ``cp``, ``rsync``, or a similar tool. Since copying multiple "
"files is not an atomic operation, you must stop all writes to the "
":program:`mongod` before copying the files. Otherwise, you will copy the "
"files in an invalid state."
msgstr ""

#: ../source/core/backups.txt:56
msgid ""
"Backups produced by copying the underlying data do not support point in time"
" recovery for replica sets and are difficult to manage for larger sharded "
"clusters. Additionally, these backups are larger because they include the "
"indexes and duplicate underlying storage padding and fragmentation. "
":program:`mongodump`, by contrast, creates smaller backups."
msgstr ""

#: ../source/core/backups.txt:63
msgid ""
"For more information, see the :doc:`/tutorial/backup-with-filesystem-"
"snapshots` and :doc:`/tutorial/backup-sharded-cluster-with-filesystem-"
"snapshots` for complete instructions on using LVM to create snapshots. Also "
"see :ecosystem:`Back up and Restore Processes for MongoDB on Amazon EC2 "
"</tutorial/backup-and-restore-mongodb-on-amazon-ec2>`."
msgstr ""
"为了了解更多的信息，您可以查阅 :doc:`/tutorial/backup-with-filesystem-snapshots` 以及" 
" :doc:`/tutorial/backup-sharded-cluster-with-filesystem-snapshots` 来了解使用LVM创建快照完整的命令。"
"此外，您还可以查阅：:ecosystem:`在Amazon EC2上对MongoDB进行备份和恢复操作</tutorial/backup-and-restore-mongodb-on-amazon-ec2>` 。"

#: ../source/core/backups.txt:73
msgid "Backup with ``mongodump``"
msgstr ""
"通过 ``mongodump`` 进行备份"


#: ../source/core/backups.txt:114

msgid ""
"If applications modify data while :program:`mongodump` is creating a backup,"
" :program:`mongodump` will compete for resources with those applications."
msgstr ""
"如果在 :program:`mongodump` 创建备份的同时，应用对数据进行修改，那么 :program:`mongodump` "
"将会与这些应用竞争资源。"

#: ../source/core/backups.txt:134
msgid ""
"See :doc:`/tutorial/backup-and-restore-tools`, :doc:`/tutorial/backup-small-"
"sharded-cluster-with-mongodump`, and :doc:`/tutorial/backup-sharded-cluster-"
"with-database-dumps` for more information."
msgstr ""

#: ../source/core/backups.txt:142
msgid "|MMS| Backup"
msgstr ""

#: ../source/core/backups.txt:144
msgid ""
"The |mms-home| supports the backing up and restoring of MongoDB deployments."
msgstr ""

#: ../source/core/backups.txt:147
msgid ""
"|MMS| continually backs up MongoDB replica sets and sharded clusters by "
"reading the oplog data from your MongoDB deployment."
msgstr ""

#: ../source/core/backups.txt:150
msgid ""
"|MMS| Backup offers point in time recovery of MongoDB replica sets and a "
"consistent snapshot of sharded clusters."
msgstr ""

#: ../source/core/backups.txt:153
msgid ""
"|MMS| achieves point in time recovery by storing oplog data so that it can "
"create a restore for any moment in time in the last 24 hours for a "
"particular replica set or sharded cluster. Sharded cluster snapshots are "
"difficult to achieve with other MongoDB backup methods."
msgstr ""

#: ../source/core/backups.txt:159
msgid ""
"To restore a MongoDB deployment from an |MMS| Backup snapshot, you download "
"a compressed archive of your MongoDB data files and distribute those files "
"before restarting the :program:`mongod` processes."
msgstr ""

#: ../source/core/backups.txt:163
msgid ""
"To get started with |MMS| Backup, sign up for |mms-home|. For documentation "
"on |MMS|, see the |mms-docs|."
msgstr ""

#: ../source/core/backups.txt:171
msgid "Ops Manager Backup Software"
msgstr ""

#: ../source/core/backups.txt:173
msgid ""
"MongoDB Subscribers can install and run the same core software that powers "
":ref:`backup-with-mms` on their own infrastructure. Ops Manager, an on-"
"premise solution, has similar functionality to the cloud version and is "
"available with Enterprise Advanced subscriptions."
msgstr ""

#: ../source/core/backups.txt:179
msgid ""
"For more information about Ops Manager, see the `MongoDB Enterprise Advanced"
" <https://www.mongodb.com/products/mongodb-enterprise-advanced?jmp=docs>`_ "
"page and the :opsmgr:`Ops Manager Manual </>`."
msgstr ""

#: ../source/core/backups.txt:185
msgid "Further Reading"
msgstr ""
"延伸阅读"

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:6
msgid ":doc:`/tutorial/backup-with-filesystem-snapshots`"
msgstr ""
":doc:`/tutorial/backup-with-filesystem-snapshots`"

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:4
msgid ""
"An outline of procedures for creating MongoDB data set backups using system-"
"level file snapshot tool, such as :term:`LVM` or native storage appliance "
"tools."
msgstr ""
"一个使用系统级文件快照工具（例如： :term:`LVM`  或者本地存储应用工具）"
"创建MongoDB数据集备份的流程概述。"

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:10
msgid ":doc:`/tutorial/restore-replica-set-from-backup`"
msgstr ""
":doc:`/tutorial/restore-replica-set-from-backup`"

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:9
msgid ""
"Describes procedure for restoring a replica set from an archived backup such"
" as a :program:`mongodump` or |mms-home| Backup file."
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:15
msgid ":doc:`/tutorial/backup-and-restore-tools`"
msgstr ""
" :doc:`/tutorial/backup-with-mongodump` "

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:13
msgid ""
"Describes a procedure for exporting the contents of a database to either a "
"binary dump or a textual exchange format, and for importing these files into"
" a database."
msgstr ""
"为备份MongoDB数据库，将一个数据库的内容写入一个BSON（例如，二进制）转储文件流程。"

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:19
msgid ":doc:`/administration/backup-sharded-clusters`"
msgstr ""
" :doc:`/administration/backup-sharded-clusters` "

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:18
msgid ""
"Detailed procedures and considerations for backing up sharded clusters and "
"single shards."
msgstr ""
"备份分片集群以及单一分片的详细过程及考量。"

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:22
msgid ":doc:`/tutorial/recover-data-following-unexpected-shutdown`"
msgstr ""
":doc:`/tutorial/recover-data-following-unexpected-shutdown`"

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:22
msgid ""
"Recover data from MongoDB data files that were not properly closed or have "
"an invalid state."
msgstr ""
"从MongoDB数据文件中恢复那些没有正常关闭或者处在不稳定状态的数据。"

#: ../source/includes/extracts/additional-resources-backup.rst:4
msgid "Additional Resources"
msgstr ""
"在生产中部署MongoDB时，您应该制定一个获取和恢复备份的策略，以防止数据丢失。"
"这里为您提供了一些备份MongoDB集群的方法："

#: ../source/includes/extracts/additional-resources-backup.rst:6
msgid ""
"`Backup and it's Role in Disaster Recovery White Paper "
"<https://www.mongodb.com/lp/white-paper/backup-disaster-recovery?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-backup.rst:7
msgid ""
"`Backup vs. Replication: Why Do You Need Both? "
"<http://www.mongodb.com/blog/post/backup-vs-replication-why-do-you-need-"
"both?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-backup.rst:8
msgid ""
"`MongoDB Production Readiness Consulting Package "
"<https://www.mongodb.com/products/consulting?jmp=docs#s_product_readiness>`_"
msgstr ""

#: ../source/core/backups.txt:0
msgid "On this page"
msgstr ""

#: ../source/core/backups.txt:75
msgid ""
"The :program:`mongodump` tool reads data from a MongoDB database and creates"
" high fidelity BSON files. The :program:`mongorestore` tool can populate a "
"MongoDB database with the data from these BSON files."
msgstr ""

#: ../source/core/backups.txt:80
msgid "Use Cases"
msgstr ""

#: ../source/core/backups.txt:82
msgid ""
":program:`mongodump` and :program:`mongorestore` are simple and efficient "
"for backing up small MongoDB deployments, for partial backup and restores "
"based on a query, syncing from production to staging or development "
"environments, or changing the storage engine of a standalone."
msgstr ""

#: ../source/core/backups.txt:87
msgid ""
"However, these tools can be problematic for capturing backups of larger "
"systems, sharded clusters, or replica sets. For alternatives, see :ref"
":`backup-with-mms` or :ref:`backup-with-mms-onprem`."
msgstr ""

#: ../source/core/backups.txt:92
msgid "Data Exclusion"
msgstr ""

#: ../source/includes/fact-mongodump-local-database.rst:1
msgid ""
":program:`mongodump` excludes the content of the ``local`` database in its "
"output."
msgstr ""

#: ../source/core/backups.txt:96
msgid ""
":program:`mongodump` only captures the documents in the database in its "
"backup data and does not include index data. :program:`mongorestore` or "
":program:`mongod` must then rebuild the indexes after restoring data."
msgstr ""

#: ../source/core/backups.txt:101
msgid "Data Compression Handling"
msgstr ""

#: ../source/core/backups.txt:103
msgid ""
"When run against a :program:`mongod` instance that uses the :doc:`WiredTiger"
" </core/wiredtiger>` storage engine, :program:`mongodump` outputs "
"uncompressed data."
msgstr ""

#: ../source/core/backups.txt:108
msgid "Performance"
msgstr ""

#: ../source/core/backups.txt:110
msgid ""
":program:`mongodump` can adversely affect the performance of the "
":program:`mongod`. If your data is larger than system memory, the "
":program:`mongodump` will push the working set out of memory."
msgstr ""

#: ../source/core/backups.txt:118
msgid ""
"To mitigate the impact of :program:`mongodump` on the performance of the "
"replica set, use :program:`mongodump` to capture backups from a "
":doc:`secondary </core/replica-set-secondary>` member of a replica set."
msgstr ""

#: ../source/core/backups.txt:122
msgid ""
"Applications can continue to modify data while :program:`mongodump` captures"
" the output. For replica sets, :program:`mongodump` provides the "
":option:`--oplog <mongodump --oplog>` option to include in its output "
":term:`oplog` entries that occur during the :program:`mongodump` operation. "
"This allows the corresponding :program:`mongorestore` operation to replay "
"the captured oplog. To restore a backup created with :option:`--oplog "
"<mongodump --oplog>`, use :program:`mongorestore` with the "
":option:`--oplogReplay <mongorestore --oplogReplay>` option."
msgstr ""

#: ../source/core/backups.txt:131
msgid ""
"However, for replica sets, consider :ref:`backup-with-mms` or :ref:`backup-"
"with-mms-onprem`."
msgstr ""

#~ msgid ""
#~ "The :program:`mongodump` tool reads data from a MongoDB database and creates"
#~ " high fidelity BSON files. The :program:`mongorestore` tool can populate a "
#~ "MongoDB database with the data from these BSON files. These tools are simple"
#~ " and efficient for backing up small MongoDB deployments, but are not ideal "
#~ "for capturing backups of larger systems."
#~ msgstr ""

#~ msgid ""
#~ ":program:`mongodump` and :program:`mongorestore` can operate against a "
#~ "running :program:`mongod` process, and can manipulate the underlying data "
#~ "files directly. By default, :program:`mongodump` does not capture the "
#~ "contents of the :doc:`local database </reference/local-database>`."
#~ msgstr ""

#~ msgid ""
#~ ":program:`mongodump` only captures the documents in the database. The "
#~ "resulting backup is space efficient, but :program:`mongorestore` or "
#~ ":program:`mongod` must rebuild the indexes after restoring data."
#~ msgstr ""

#~ msgid ""
#~ "When connected to a MongoDB instance, :program:`mongodump` can adversely "
#~ "affect :program:`mongod` performance. If your data is larger than system "
#~ "memory, the queries will push the working set out of memory."
#~ msgstr ""

#~ msgid ""
#~ "To mitigate the impact of :program:`mongodump` on the performance of the "
#~ "replica set, use :program:`mongodump` to capture backups from a "
#~ ":doc:`secondary </core/replica-set-secondary>` member of a replica set. "
#~ "Alternatively, you can shut down a secondary and use :program:`mongodump` "
#~ "with the data files directly. If you shut down a secondary to capture data "
#~ "with :program:`mongodump` ensure that the operation can complete before its "
#~ "oplog becomes too stale to continue replicating."
#~ msgstr ""

#~ msgid ""
#~ "For replica sets, :program:`mongodump` also supports a point in time feature"
#~ " with the :option:`--oplog <mongodump --oplog>` option. Applications may "
#~ "continue modifying data while :program:`mongodump` captures the output. To "
#~ "restore a point in time backup created with :option:`--oplog <mongodump "
#~ "--oplog>`, use :program:`mongorestore` with the :option:`--oplogReplay "
#~ "<mongorestore --oplogReplay>` option."
#~ msgstr ""
