.. meta::
   :robots: noindex, nosnippet

.. _dotnet-read-and-write-data:
.. _dotnet-realm-database-reads:

====================
Read Data - .NET SDK
====================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. _dotnet-read-from-realm:
.. _dotnet-live-queries:

You can read back the data that you have :ref:`stored
<dotnet-write-transactions>` in Realm by finding,
filtering, and sorting objects.

Read from Realm
---------------

You read from a realm with LINQ queries.

.. note:: About the examples on this page

   The examples on this page use the data model of a project
   management app that has two Realm object types: ``Project``
   and ``Item``. A ``Project`` has zero or more ``Items``:

   .. literalinclude:: /examples/generated/dotnet/QueryEngineExamples.snippet.classes.cs
      :language: csharp

.. _dotnet-query-all-objects-of-a-given-type:

Query All Objects of a Given Type
---------------------------------

To read all objects of a certain type in a realm, call ``realm.All<T>``, where ``T``
is the realm object type. You can then use the returned results collection to further 
:ref:`filter and sort <dotnet-filter-data>` the results.

.. example::

   In order to access all Projects and Items, use
   the following syntax:

   .. literalinclude:: /examples/generated/dotnet/QueryEngineExamples.snippet.read_all.cs
      :language: csharp

.. _dotnet-find-a-specific-object-by-primary-key:
.. _dotnet-find-by-primary-key:

Find a Specific Object by Primary Key
-------------------------------------

You can find a specific item by its primary key using the 
:dotnet-sdk:`Find <reference/Realms.Realm.html#Realms_Realm_Find__1_System_String_>`
method. The following example finds a single Project: 

.. literalinclude:: /examples/generated/dotnet/QueryEngineExamples.snippet.get_by_id.cs
   :language: csharp
