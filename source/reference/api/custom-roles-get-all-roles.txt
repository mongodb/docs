=================================
Get All Custom Roles in a Project
=================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. include:: /includes/fact-projects-groups-synonyms.rst

.. include:: /includes/api-base-url.rst

.. include:: /includes/api-requirements.rst

Syntax
------

.. code-block:: sh

   GET /api/atlas/v1.0/groups/{GROUP-ID}/customDBRoles/roles

Request Path Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1

   * - Parameter
     - Required/Optional
     - Description

   * - ``GROUP-ID``

     - Required.

     - The unique identifier for the :ref:`project <group-id>`.

Request Query Parameters
~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/api/no-query-list-parameters.rst

Request Body Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/no-body-parameters.rst

Response Elements
~~~~~~~~~~~~~~~~~

If you set the query element ``envelope`` to ``true``, the response is
wrapped by the ``content`` object.

The HTTP response returns an array of JSON documents, each
representing a custom role. Each document in the array contains the
following fields:

.. include:: /includes/api/list-tables/custom-roles.rst

Example Request
---------------

Request
~~~~~~~

.. include:: /includes/extracts/fact-api-requirements-modify.rst

.. code-block:: none

   curl --user '{PUBLIC-KEY}:{PRIVATE-KEY}' --digest \
    --header 'Accept: application/json' \
    --include \
    --request GET "https://cloud.mongodb.com/api/atlas/v1.0/groups/{GROUP-ID}/customDBRoles/roles?pretty=true"

Response
~~~~~~~~

.. code-block:: none

   HTTP/1.1 200 OK

   [ {
     "actions" : [ ],
     "inheritedRoles" : [ {
       "db" : "test",
       "role" : "readWrite"
     }, {
       "db" : "test",
       "role" : "dbAdmin"
     } ],
     "roleName" : "test"
   }, {
     "actions" : [ {
       "action" : "LIST_SESSIONS",
       "resources" : [ {
         "cluster" : true
       } ]
     }, {
       "action" : "KILL_ANY_SESSION",
       "resources" : [ {
         "cluster" : true
       } ]
     }, {
       "action" : "USE_UUID",
       "resources" : [ {
         "cluster" : true
       } ]
     }, {
       "action" : "COLL_STATS",
       "resources" : [ {
         "collection" : "",
         "db" : "staging"
       } ]
     } ],
     "inheritedRoles" : [ {
       "db" : "admin",
       "role" : "enableSharding"
     }, {
       "db" : "admin",
       "role" : "backup"
     } ],
     "roleName" : "ShardingAdmin"
   }, {
     "actions" : [ {
       "action" : "CONN_POOL_STATS",
       "resources" : [ {
         "cluster" : true
       } ]
     }, {
       "action" : "CURSOR_INFO",
       "resources" : [ {
         "cluster" : true
       } ]
     }, {
       "action" : "LIST_DATABASES",
       "resources" : [ {
         "cluster" : true
       } ]
     }, {
       "action" : "SERVER_STATUS",
       "resources" : [ {
         "cluster" : true
       } ]
     }, {
       "action" : "TOP",
       "resources" : [ {
         "cluster" : true
       } ]
     }, {
       "action" : "LIST_SESSIONS",
       "resources" : [ {
         "cluster" : true
       } ]
     }, {
       "action" : "KILL_ANY_SESSION",
       "resources" : [ {
         "cluster" : true
       } ]
     } ],
     "inheritedRoles" : [ ],
     "roleName" : "SessionMonitor"
   } ]
