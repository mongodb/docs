ref: create-resource-lock
content: |

  {{operation}} obtains an exclusive lock on the
  specified collection or view for the duration of the operation. All
  subsequent operations on the collection must wait until 
  {{operation}} releases the lock. {{operation}} typically holds
  this lock for a short time. 

  Creating a view requires obtaining an additional exclusive lock
  on the ``system.views`` collection in the database. This lock blocks
  creation or modification of views in the database until the command
  completes.

replacement:
  operation: ":dbcommand:`create`"
---
ref: createCollection-resource-lock
source:
  file: extracts-resource-locking.yaml
  ref: create-resource-lock
replacement:
  operation: ":method:`db.createCollection()`"
---
ref: createView-resource-lock
source:
  file: extracts-resource-locking.yaml
  ref: create-resource-lock
replacement:
  operation: ":method:`db.createView()`"
---
ref: collMod-resource-lock
content: |
  
  The :dbcommand:`collMod` command obtains a collection lock on
  the specified collection for the duration of the operation. 
---
ref: createIndexes-resource-lock
content: |

  For :ref:`featureCompatibilityVersion <view-fcv>` ``"4.2"``, {{operation}}
  uses an optimized build process that obtains and holds an exclusive lock on
  the specified collection at the start and end of the index build. All
  subsequent operations on the collection must wait until {{operation}} releases
  the exclusive lock. {{operation}} allows interleaving read and write
  operations during the majority of the index build.

  For :ref:`featureCompatibilityVersion <view-fcv>` ``"4.0"``, {{operation}}
  uses the pre-4.2 index build process which by default obtains an exclusive
  lock on the parent database for the entire duration of the build process. The
  pre-4.2 build process blocks all operations on the database *and* all its
  collections until the operation completed. ``background`` indexes do not take
  an exclusive lock.

  For more information on the locking behavior of {{operation}}, see
  :ref:`index-operations`.

replacement:
  operation: ":dbcommand:`createIndexes`"
---
ref: createIndexes-method-resource-lock
source:
  file: extracts-resource-locking.yaml
  ref: createIndexes-resource-lock
replacement:
  operation: ":method:`db.collection.createIndexes()`"
---
ref: createIndex-method-resource-lock
source:
  file: extracts-resource-locking.yaml
  ref: createIndexes-resource-lock
replacement:
  operation: ":method:`db.collection.createIndex()`"
---
ref: dropIndexes-resource-lock
content: |

  {{operation}} obtains an exclusive lock on the specified collection
  for the duration of the operation. All subsequent operations on the
  collection must wait until {{operation}} releases the
  lock.

replacement:
  operation: ":dbcommand:`dropIndexes`"
---
ref: dropIndex-method-resource-lock
source:
  file: extracts-resource-locking.yaml
  ref: dropIndexes-resource-lock
replacement:
  operation: ":method:`db.collection.dropIndex()`"
---
ref: dropIndexes-method-resource-lock
source:
  file: extracts-resource-locking.yaml
  ref: dropIndexes-resource-lock
replacement:
  operation: ":method:`db.collection.dropIndexes()`"
---
ref: drop-resource-lock
content: |

  {{operation}} obtains an exclusive lock on the specified collection
  for the duration of the operation. All subsequent operations on the
  collection must wait until {{operation}} releases the
  lock.

replacement:
  operation: ":dbcommand:`drop`"
---
ref: drop-method-resource-lock
source:
  file: extracts-resource-locking.yaml
  ref: drop-resource-lock
replacement:
  operation: ":method:`db.collection.drop()`"
...
