==========
Automation
==========

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. _automation-checklist:

|mms| Automation allows you to deploy, configure, and manage MongoDB
deployments with the |mms| UI. |mms| Automation relies on an
Automation Agent, which must be installed on every server in the
deployment. The Automation Agents periodically poll the |mms| service
to determine the current goal, and continually report their status to
|mms|.

Automation Runs Only on 64-bit Architectures
--------------------------------------------

|mms| provides only 64-bit downloads of the Automation Agent.

Using Own Hardware
------------------

- If you deploy Automation manually, ensure that you have one
  Automation Agent on every server.

- If you deploy the agent manually, you must create MongoDB's
  :setting:`dbpath` and the directory for the MongoDB binaries and
  ensure that the user running the agent owns these
  directories.

  If you install using the ``rpm`` package, the agent runs as the
  ``mongod`` user; if using the ``deb`` package, the agent runs as the
  ``mongodb`` user. If you install using the ``tar.gz`` archive file,
  you can run the agent as any user.


Networking
----------

All hosts must be able to allow communication between MongoDB
ports. The default is ``27017``, but you can configure alternate port
ranges in the |mms| interface.

.. only:: cloud

   The Automation Agent *must* be able to connect to
   ``cloud.mongodb.com`` on port ``443`` (i.e. ``https``).
   For more information on access to ports and IP addresses, see
   :doc:`/core/security`.

.. only:: onprem

   The Automation Agent *must* be able to connect to
   |onprem| on port ``8443`` (i.e. ``https``).
   For more information on access to ports and IP addresses, see
   :doc:`/core/security`.

Automation Configuration
------------------------

After completing the automation configuration, ensure that the
deployment plan satisfies the needs of your deployment. Check
hostnames and ports before confirming the deployment.

Sizing
------

- Ensure that you provision hosts with enough space to run MongoDB
  and support the requirements of your data set.

- Ensure that you provision a sufficient number of hosts to run your
  deployment. Each :binary:`~bin.mongod` should run on its own host.

Frequent Connection Timeouts
----------------------------

The Automation Agent may frequently time out of connections for one or
more of the following reasons:

- Connection timeouts

- High network latency

- High server load

- Large SSL keys

- Insufficient CPU speed

By default, connections time out after 40 seconds. MongoDB recommends
gradually increasing the value of the :setting:`dialTimeoutSeconds`
Automation Agent configuration setting to prevent frequent premature
connection timeouts. However, increasing this value also increases the
time required to deploy future configuration changes. Experiment with
small, incremental increases until you determine the optimum value for
your deployment.

To learn more, see :setting:`dialTimeoutSeconds` in
Connection Settings at
:doc:`Automation Agent Configuration </reference/automation-agent>`.

Deployments
-----------

Deployment Change Unable to Complete / Not Proceeding
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you have added or restarted a deployment and the deployment remains
in the ``In Progress`` state for several minutes, the banner displays
:guilabel:`We have detected a potential problem while deploying...`

At this point, you have four options:

1. Click :guilabel:`View Diagnostics`.

   The :guilabel:`View Diagnostics` modal displays any errors that may
   have happened during deployment.

2. Click :guilabel:`View Status`.

   The :guilabel:`Automation Status` modal displays the deployment
   processes, when they last reported their deployment status, what
   task they are trying to complete, and the deployment status.

   To learn more about the status of any of the individual processes,
   you can click the ellipsis icon and select either
   :guilabel:`View Details` or :guilabel:`View Agent Logs`.

   - :guilabel:`View Details` shows what the deployment plan for the
     process is and which stage of that plan the Automation Agent
     currently is.

   - :guilabel:`View Agent Logs` opens a new browser window with the
     :guilabel:`Deployment` > :guilabel:`Agents` >
     :guilabel:`Agent Logs` screen shown and the contents of the
     Automation Agent log displayed by default. Click the
     :guilabel:`View` menu to select a different agent log.

3. Click :guilabel:`View Agent Logs`.

   A new browser window opens with the :guilabel:`Deployment` >
   :guilabel:`Agents` > :guilabel:`Agent Logs` screen shown and the
   contents of the Automation Agent log displayed by default. Click
   the :guilabel:`View` menu to select a different agent log.

4. Click :guilabel:`Allow Override & Edit Configuration`.

   If you diagnose an error and need to correct the deployment
   configuration, follow the procedure to
   :doc:`edit the deployment </tutorial/edit-deployment>`.

If you shut down the deployment and still cannot find a solution,
:doc:`remove the deployment </tutorial/unmanage-deployment>` from 
|mms|.
