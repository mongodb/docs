.. _vpc-peering:

===================================
Set up a Network Peering Connection
===================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. include:: /includes/fact-atlas-free-tier-limits.rst

.. include:: /includes/cluster-settings/multi-cloud/incompatible-feature.rst

|service| supports :wikipedia:`Network Peering
</Virtual_private_cloud>` connections for |aws|, |gcp|, and
|azure|-backed clusters.

.. important::

   To set up a Network Peering connection, you must have either the
   :authrole:`Project Owner` or :authrole:`Organization Owner` role.


.. _create-network-peer-connection:

Configure an |service| Network Peering Connection
-------------------------------------------------

To configure |service| Network Peering for a cluster, perform the
procedure on the tab corresponding to your cluster's cloud provider.
You also configure the |service| |vpc| |cidr| during this procedure.

To configure the |service| |cidr| without configuring Network Peering,
see :doc:`Create a New Network Peering Container </reference/api/vpc-create-container>`.
You must use the |api| to configure the |service| |cidr| without
Network Peering.

.. tabs-cloud-providers::

     tabs:

     - id: aws
       content: |

         AWS VPC Peering Prerequisites
         `````````````````````````````

         .. include:: /includes/fact-aws-vpc-prereqs.rst

         Configure Network Peering for an AWS-backed Cluster
         ```````````````````````````````````````````````````

         1. In the :guilabel:`Security` section of the left navigation,
            click :guilabel:`Network Access`.

         #. In the :guilabel:`Peering` tab, click :icon-fa5:`plus`
            :guilabel:`Add Peering Connection`.

         #. Enable :guilabel:`DNS hostnames` and :guilabel:`DNS resolution` in |aws|:

            a. Log in to your |aws| account.

            #. Go to the
               `VPC dashboard <https://console.aws.amazon.com/vpc>`_.

            #. Open your list of |vpc| resources.

            #. Select the |vpc| you want to peer with.

            #. Enable :guilabel:`DNS hostnames` and :guilabel:`DNS
               resolution` to ensure that the cluster's hostnames in standard connection strings automatically resolve to private instead of public IP addresses when the |service| cluster is accessed from within the :ref:`VPC <security-vpc>`. 
               
               If :guilabel:`DNS hostnames` and :guilabel:`DNS resolution` are disabled 
               and the :ref:`VPC <security-vpc>` is accessible to the internet, the |dns| 
               resolves the cluster's hostnames to their public |ipaddr| address rather than their internal |ipaddr| address. 
               
               To learn more about how to enable these options, see :aws:`Updating DNS Support for Your VPC </AmazonVPC/latest/UserGuide/vpc-dns.html#vpc-dns-updating>`.

               .. note:: 

                  If the applications deployed within |aws| use custom |dns| services and :ref:`VPC <security-vpc>` peering with |service|, see :ref:`FAQ <atlas-faq-custom-dns>` for more information on how to connect using private connection strings.

         #.  Go to :guilabel:`Network Access` view in |service|.

             In the :guilabel:`Security` section of the left
             navigation, click :guilabel:`Network Access`.

         #. Click the :guilabel:`Peering` tab.

         #. Click :guilabel:`Add Peering Connection`.

         #. In the :guilabel:`Peering Connection` modal, select
            :guilabel:`AWS` and click :guilabel:`Next`.

         #. To create the Network Peering connection in the
            :guilabel:`Peering Connection` modal.

            .. list-table::
               :header-rows: 1
               :widths: 35 65

               * - Field
                 - Notes

               * - :guilabel:`Account ID`

                 - |aws| Account ID of the owner of the peer |vpc|.
                   Refer to the dialog for instructions on finding your
                   :guilabel:`AWS Account ID`.

               * - :guilabel:`VPC ID`

                 - Unique identifier of the peer |vpc|. Refer to the
                   dialog for instructions on finding your
                   :guilabel:`VPC ID`.

               * - :guilabel:`VPC CIDR`

                 - |aws| |vpc| |cidr| block or subset. Must not
                   overlap with your :guilabel:`Atlas CIDR Block` or any
                   other Network Peering connection :guilabel:`VPC CIDR`.

                   The |cidr| block must be in one of the following
                   :rfc:`private networks <1918#section-3>`:

                   - ``10.0.0.0`` - ``10.255.255.255``  (10/8 prefix)

                   - ``172.16.0.0`` - ``172.31.255.255``  (172.16/12 prefix)

                   - ``192.168.0.0`` - ``192.168.255.255`` (192.168/16 prefix)

                   You can choose to add the |vpc| |cidr| block address
                   (or a subset) to the IP access list. For Network Peering
                   connections, you can also add the Security Group
                   associated with the |aws| |vpc| instead of the
                   |cidr| block. See :ref:`add-to-access-list`.

                   To learn more about |cidr| blocks, see
                   :rfc:`RFC 4632 <4632>`.

                   .. include:: /includes/fact-vpc-cidr-block.rst

               * - :guilabel:`Application VPC Region`

                 - |aws| region where the |aws| |vpc| resides.

               * - :guilabel:`VPC CIDR`

                 - |aws| |vpc| |cidr| block. Must not overlap with
                   the |service|
                   :guilabel:`VPC CIDR` block.

               * - :guilabel:`Atlas VPC Region`

                 - |aws| region where the |service| |vpc| resides.
                   |service| creates a |vpc| for the |service| project
                   in this region if no ``M10+`` clusters or |vpc|
                   peering connections exist for the selected
                   :guilabel:`Region`.

                   Uncheck :guilabel:`Same as application VPC region`
                   to select a different region than where the
                   application |vpc| resides.

         #. Click :guilabel:`Initiate Peering`.

         #. Wait for approval of peering connection request.

            The owner of the peer |vpc| must approve the |vpc| peering
            connection request. Ensure that the owner approves the
            request.

            |service| provides instructions for approving the connection request.

            .. important:: Requests expire after 7 days.

         #. Add to route table.

            a. In the :guilabel:`VPC Dashboard`, click
               :guilabel:`Route Tables`.

            #. Select the Route Table for your |vpc|.

            #. Click the :guilabel:`Routes` tab.

            #. Click :guilabel:`Edit Routes`.

            #. Click :guilabel:`Add route`.

            #. Add the |service| |vpc|\'s |cidr| block to the
               :guilabel:`Destination` column.

            #. Add the AWS Peering Connection ID to the
               :guilabel:`Target` column.

               This value is prefixed with ``pcx-``.

            #. Click :guilabel:`Save`.

               .. include:: /includes/fact-vpc-peering-connections-max.rst

               Once set up, you can edit or terminate |vpc| peering
               connection from the :guilabel:`Peering` table.

               You must add your |vpc| |cidr| block address (or subset)
               or the Security Group associated with the peer |vpc| to
               the :ref:`whitelist <access-list>` before your new |vpc|
               peer can connect to your |service| cluster.

               .. seealso::

                  `CIDR Subnet Selection for MongoDB Atlas <https://www.mongodb.com/blog/post/cidr-subnet-selection-for-mongodb-atlas>`_

         .. admonition:: Using Custom DNS
            :class: note

            Effective 31 March 2020, |service| has removed the
            connection limitations for all existing and new
            |aws| clusters using custom |dns|. To learn more about how
            to use these new features, see the
            :ref:`FAQ on changes to AWS network peering <atlas_20200331>`.

     - id: gcp
       content: |

         .. note::

            Effective 31 March 2020, |service| has removed the
            **Peering-Only Mode** limitations for all existing and new
            |gcp| clusters. To learn how to use these new
            features, see the :ref:`FAQ on changes to GCP network peering <atlas-faq-azure-gcp-peering-only>`

         Configure VPC Peering for a GCP-backed Cluster
         ``````````````````````````````````````````````

         To configure |service| |vpc| Peering for a |gcp|\-backed
         cluster:

         1. In the :guilabel:`Security` section of the left navigation,
            click :guilabel:`Network Access`.

         #. In the :guilabel:`Peering` tab, click :icon-fa5:`plus`
            :guilabel:`Add Peering Connection`.

         #. In the :guilabel:`Peering Connection` modal, select
            :guilabel:`Google Cloud Platform` and click
            :guilabel:`Next`.

         #. Enter the required information in the
            :guilabel:`Peering Connection` modal.

            To create the |vpc| Peering connection, fill in the
            requested information:

            .. list-table::
               :header-rows: 1
               :widths: 20 80

               * - Field
                 - Description

               * - :guilabel:`Project ID`

                 - |gcp| Project ID of the peer |vpc|. Refer to the
                   dialog for instructions on finding your
                   :guilabel:`GCP Project ID`.

               * - :guilabel:`VPC Name`

                 - Name of the peer |vpc|. Refer to the dialog for
                   instructions on finding your :guilabel:`VPC Name`.

               * - :guilabel:`Atlas CIDR`
                 - |cidr| block for your Atlas cluster.

                   .. include:: /includes/fact-gcp-peering-atlas-cidr-block.rst

         #. Click :guilabel:`Initiate Peering`.

         #. In the :guilabel:`Google Cloud Console`, click
            :guilabel:`VPC network peering`.

         #. Click :guilabel:`Create Connection`.

         #. Click :guilabel:`Continue`.

         #. In :guilabel:`Name`, enter a name for your peering
            connection.

         #. In :guilabel:`Your VPC Network`, enter the name of your
            |gcp| |vpc| network.

         #. In :guilabel:`Peered VPC network`, select
            :guilabel:`In another project`.

         #. In :guilabel:`Project ID`, enter your |service| Project ID.

            You can find this name in the |vpc| Peering view. In the
            :guilabel:`Security` section of the left navigation, click
            :guilabel:`Network Access` and then click the the
            :guilabel:`Peering` tab.

         #. In :guilabel:`VPC network name`, enter your Atlas |vpc|
            Name.

            You can find this name in the |vpc| Peering view. In the
            :guilabel:`Security` section of the left navigation, click
            :guilabel:`Network Access` and then click the the
            :guilabel:`Peering` tab.

         .. include:: /includes/fact-vpc-peering-connections-max.rst

         You must add your |vpc| |cidr| block address (or subset)
         associated with the peer |vpc| to the
         :ref:`whitelist <access-list>` before your new |vpc| peer can
         connect to your |service| cluster. To learn about for Auto
         mode IP ranges that |gcp| uses, see
         :gcp:`Auto mode IP ranges </vpc/docs/vpc#ip-ranges>`.

     - id: azure
       content: |

         .. note::

            Effective 31 March 2020, |service| has removed the
            **Peering-Only Mode** limitations for all existing and new
            Azure clusters. To learn how to use these new features, see
            the :ref:`FAQ on changes to Azure network peering <atlas-faq-azure-gcp-peering-only>`

         Azure Roles Required to Configure a Network Peering Connection
         ``````````````````````````````````````````````````````````````

         To learn the |azure| roles that you need to create a Network
         Peering connection, see the :azure:`Azure documentation
         </virtual-network/virtual-network-manage-peering#permissions>`.

         Configure Network Peering for an Azure-backed Cluster
         `````````````````````````````````````````````````````

         To configure Network Peering for an Azure-backed cluster:

         1. In the :guilabel:`Security` section of the left navigation,
            click :guilabel:`Network Access`.

         #. In the :guilabel:`Peering` tab, click :icon-fa5:`plus`
            :guilabel:`Add Peering Connection`.

         #. In the :guilabel:`Peering Connection` modal, select
            :guilabel:`Azure` and click :guilabel:`Next`.

         #. To create the Network Peering connection, fill in the
            requested information:

            .. list-table::
               :header-rows: 1
               :widths: 35 65

               * - Field
                 - Description

               * - :guilabel:`Subscription ID`
                 - Unique identifier for your Azure subscription. You
                   can find this information on the :guilabel:`Overview` tab of your
                   Azure :guilabel:`Virtual networks` dashboard.

               * - :guilabel:`Directory ID`
                 - Unique identifier of your Azure directory. You
                   can find this information on the
                   :guilabel:`Properties` tab of your
                   :guilabel:`Azure Active Directory` dashboard.

               * - :guilabel:`Resource Group Name`
                 - Unique identifier of the Azure resource group to
                   which the virtual network belongs. You can find this
                   information on the :guilabel:`Overview` tab of your
                   Azure virtual network.

               * - :guilabel:`VNet Name`
                 - Name of your Azure virtual network. You can find
                   this information on the :guilabel:`Virtual networks`
                   dashboard.

               * - :guilabel:`Atlas CIDR`
                 - |cidr| block for your Atlas cluster.

                   .. include:: /includes/fact-peering-azure-atlas-cidr-block.rst

               * - :guilabel:`Atlas VNet Region`
                 - Azure region in which your |service| cluster
                   resides.

         #. Click :guilabel:`Next`.

         #. To create the peering request, you must grant |service| the
            following permissions on the virtual network. You can revoke
            these permissions after the VNet peering has been
            established.

            - ``Microsoft.Network/virtualNetworks/virtualNetworkPeerings/read``

            - ``Microsoft.Network/virtualNetworks/virtualNetworkPeerings/write``

            - ``Microsoft.Network/virtualNetworks/virtualNetworkPeerings/delete``

            - ``Microsoft.Network/virtualNetworks/peer/action``

            |

            To grant |service| permission to create a peering
            connection with your Azure virtual network:

            a. Launch the Azure console.

            b. Run the commands from the :guilabel:`Peering Connection`
               modal to create a service principal, create a new custom
               role, and assign the custom role to the service
               principal.

               .. note::

                  Run the first command to create a service principal
                  only once for all Azure VNets from the same Azure
                  subscription.

            c. Click :guilabel:`Validate`.

            d. Click :guilabel:`Initiate Peering`.

               .. include:: /includes/fact-vpc-peering-connections-max.rst

               You must add the |cidr| block address (or subset)
               associated with the peer VNet to the
               :ref:`whitelist <access-list>` before your network peer
               can connect to your |service| cluster.

Network Peering Architectures
------------------------------

Multiple cloud-hosted applications might need to connect securely to the
same |service| project.

Network Peering between an |service| VPC and Two Virtual Networks with Identical CIDR Blocks
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Consider a case where two applications use virtual
networks (VPC, VNet) with identical IP |cidr| blocks. You want both applications
to securely connect to the same |service| cluster via VPC peering. To achieve this,
create one network peering connection between each application's virtual network
and your |service| cluster.

Cloud provider virtual networks can’t peer to each other if they have
identical CIDR blocks. However, you can peer each of the applications' virtual networks
with the |service| virtual network if the |service| virtual network includes two 
non-overlapping |cidr| blocks. Configure each of the peering connections to have
non-overlapping route-back |cidr| blocks in the |service| virtual network.

Follow this general process:

1. Before you deploy any clusters, :ref:`create a network peering 
   connection <create-network-peer-connection>`
   for each virtual network that you want to peer with |service|. You
   do this by creating a |cidr| block in the |service| virtual network
   for each application's virtual network. 

#. In the virtual network's configuration for your cloud provider, 
   establish routing between each of your application's virtual networks
   and their respective |service| CIDR blocks. 

#. Deploy your |service| cluster.

.. example::
   
   Consider two applications in the same |aws| account in the same region. 
   Each application has its own |vpc|. The |vpc|\s have identical |cidr| 
   blocks. These VPCs can't peer with each other. You must configure each 
   application's |vpc| as a peer to the |service| |vpc|.
   
   .. list-table:: 
      :header-rows: 1
      :widths: 25 25 25
   
      * - Application's VPC name
        - CIDR block
        - Subnet
      * - ``app-tier-vpc-1``
        - 10.4.0.0/16
        - ``subnet1``: 10.5.0.0./16
      * - ``app-tier-vpc-2``
        - 10.4.0.0/16
        - ``subnet2``: 10.6.0.0/16

   To peer each application's |vpc| to the |service| VPC before you deploy 
   your |service| cluster:

   1. Create a network peering connection to peer |service| with your 
      first application's |vpc|.

      a. Click the :guilabel:`Peering` tab.
   
      #. Select :guilabel:`Peering Connection`.
   
      #. Select :guilabel:`AWS` and click :guilabel:`Next`.
      
      #. Complete the |aws| |vpc| fields and enter details for the first
         application's |vpc|:
         
         - :guilabel:`Account ID`

         - :guilabel:`VPC ID`

         - :guilabel:`VPC CIDR`

         - :guilabel:`Application VPC Region`.
        
      #. Type the first |cidr| block, **10.5.0.0/24**, into the
         :guilabel:`VPC CIDR` field in the :guilabel:`Atlas VPC`
         section.
         
      #. Click :guilabel:`Initiate Peering`.

   #. Create a network peering connection to peer |service| with your 
      second application's |vpc|.

      a. Click the :guilabel:`Peering` tab.
   
      #. Select :guilabel:`Peering Connection`.
   
      #. Select :guilabel:`AWS` and click :guilabel:`Next`.
    
      #. Complete the |aws| |vpc| fields and enter details for the second
         application's |vpc|:

         - :guilabel:`Account ID`

         - :guilabel:`VPC ID`

         - :guilabel:`VPC CIDR`

         - :guilabel:`Application VPC Region`.
      
      #. Type the second |cidr| block, **10.6.0.0/24**, into the
         :guilabel:`VPC CIDR` field in the :guilabel:`Atlas VPC`
         section.
      
      #. Click :guilabel:`Initiate Peering`.
      
   #. In |aws|, configure each of your application's |vpc|\s to route 
      back to their respective |cidr| blocks in |service|. For information,
      see :aws:`Updating your route tables for a VPC peering connection </vpc/latest/peering/vpc-peering-routing.html>`. 

      - ``app-vpc-1`` with CIDR 10.4.0.0/16 routes back to ``subnet1`` 
        in the CIDR **10.5.0.0/24**
      - ``app-vpc-2`` with CIDR 10.4.0.0/16 routes back to ``subnet2``
        in the CIDR **10.6.0.0/24**
     
   When complete, the routes for ``app-vpc-1`` and ``app-vpc-2``
   should match the following table:

   .. list-table:: 
      :header-rows: 1
      :widths: 25 25 50

      * - Network
        - Destination
        - Origin
      * - ``app-vpc-1``
        - 10.4.0.0/16
        - local
      * - 
        - 10.5.0.0/16
        - peer to the |service| |vpc|
      * - ``app-vpc-2``
        - 10.4.0.0/16
        - local
      * - 
        - 10.6.0.0/16
        - peer to the |service| |vpc|   

