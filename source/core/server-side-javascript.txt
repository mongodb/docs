======================
Server-side JavaScript
======================

.. default-domain:: mongodb

.. versionchanged:: 2.4
   The V8 JavaScript engine, which became the default in 2.4, allows
   multiple JavaScript operations to execute at the same time. Prior to
   2.4, MongoDB operations that required the JavaScript interpreter had
   to acquire a lock, and a single :program:`mongod` could only run a
   single JavaScript operation at a time.

.. _server-side-javascript:

Overview
--------

MongoDB supports the execution of JavaScript code for the following
server-side operations:

- :dbcommand:`mapReduce` and the corresponding :program:`mongo` shell
  method :method:`db.collection.mapReduce()`. See
  :doc:`/core/map-reduce` for more information.

- :dbcommand:`eval` command, and the corresponding :program:`mongo`
  shell method :method:`db.eval()`

- :operator:`$where` operator

- :ref:`running-js-scripts-in-mongo-on-mongod-host`

.. |javascript-using-operation| replace:: the above operations use
.. include:: /includes/admonition-javascript-prevalence.rst

.. seealso::

   :doc:`/tutorial/store-javascript-function-on-server`

.. include:: /includes/fact-disable-javascript-with-noscript.rst

.. _running-js-scripts-in-mongo-on-mongod-host:

Running ``.js`` files via a ``mongo`` shell Instance on the Server
------------------------------------------------------------------

You can run a JavaScript (``.js``) file using a :program:`mongo` shell
instance on the server. This is a good technique for performing batch
administrative work. When you run :program:`mongo` shell on the server,
connecting via the localhost interface, the connection is fast with low
latency.

The :ref:`command helpers <command-helpers>` provided in the
:program:`mongo` shell are not available in JavaScript files because
they are not valid JavaScript. The following table maps the most common
:program:`mongo` shell helpers to their JavaScript equivalents.

.. include:: /includes/table-helpers-to-javascript.rst

Concurrency
-----------

Refer to the individual method or operator documentation for any
concurrency information. See also the :ref:`concurrency table
<faq-concurrency-operations-locks>`.
