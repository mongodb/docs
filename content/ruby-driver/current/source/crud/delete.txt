.. _ruby-write-delete:

================
Delete Documents
================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: remove, drop, code example

Overview
--------

In this guide, you can learn how to use the {+driver-short+} to remove
documents from a MongoDB collection by performing **delete operations**.

A delete operation removes one or more documents from a MongoDB collection.
You can perform a delete operation by using the ``delete_one`` or
``delete_many`` methods.

Sample Data
~~~~~~~~~~~

The examples in this guide use the ``restaurants`` collection in the ``sample_restaurants``
database from the :atlas:`Atlas sample datasets </sample-data>`. To access this collection
from your {+language+} application, create a ``Mongo::Client`` object that connects to an Atlas cluster
and assign the following values to your ``database`` and ``collection`` variables:

.. literalinclude:: /includes/write/delete.rb
    :language: ruby
    :dedent:
    :start-after: start-db-coll
    :end-before: end-db-coll

To learn how to create a free MongoDB Atlas cluster and load the sample datasets, see the
:atlas:`Get Started with Atlas </getting-started>` guide.

Delete Operations
-----------------

You can perform delete operations in MongoDB by using the following methods:

- ``delete_one``, which deletes *the first document* that matches the search criteria
- ``delete_many``, which deletes *all documents* that match the search criteria

Each delete method requires a **query filter** parameter, which specifies the
search criteria that determine which documents to select for removal.
To learn more about query filters, see the :ref:`ruby-specify-query` guide.

Delete One Document
~~~~~~~~~~~~~~~~~~~

The following example uses the ``delete_one`` method to remove a
document in which the value of the ``name`` field is ``"Happy Garden"``:

.. io-code-block::
   :copyable: true

   .. input:: /includes/write/delete.rb
      :start-after: start-delete-one
      :end-before: end-delete-one
      :language: ruby
      :dedent:
   
   .. output::
      :language: console
      :visible: false

      Deleted 1 document(s)

Delete Multiple Documents
~~~~~~~~~~~~~~~~~~~~~~~~~

The following example uses the ``delete_many`` method to remove all documents
in which the value of the ``borough`` field is ``"Brooklyn"`` and the
value of the ``name`` field is ``"Starbucks"``:

.. io-code-block::
   :copyable: true

   .. input:: /includes/write/delete.rb
      :start-after: start-delete-many
      :end-before: end-delete-many
      :language: ruby
      :dedent:
   
   .. output::
      :language: console
      :visible: false

      Deleted 3 document(s)

Customize the Delete Operation
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You can pass a ``Hash`` object as a parameter to the ``delete_one`` and ``delete_many`` methods
to set options to configure the delete operation. If you don't specify any
options, the driver performs the delete operation with default settings.

The following table describes the options that you can use to
configure the delete operation:

.. list-table::
   :widths: 30 70
   :header-rows: 1

   * - Option
     - Description

   * - ``collation``
     - | Specifies the kind of language collation to use when sorting
         results. For more information, see :manual:`Collation </reference/collation/#std-label-collation>`
         in the {+mdb-server+} manual.

   * - ``session``
     - | Specifies the session to use for the operation. To learn more about sessions, see
         :manual:`Client Sessions and Causal Consistency Guarantees </core/read-isolation-consistency-recency/#std-label-sessions>`
         in the {+mdb-server+} manual.

   * - ``hint``
     - | Specifies the index to use when matching documents.
         For more information, see the :manual:`hint </reference/command/delete/#std-label-deletes-array-hint>`
         option in the ``delete`` reference page of the {+mdb-server+} manual.

   * - ``let``
     - | Provides a map of parameter names and values to set top-level
         variables for the operation. Values must be constant or closed
         expressions that don't reference document fields. For more information,
         see the :manual:`let
         </reference/command/delete/#std-label-delete-let-syntax>` option in the ``delete``
         reference page of the {+mdb-server+} manual.

Modify Delete Example
`````````````````````

The following code specifies the ``hint`` option to
instruct the delete operation to use the ``"name_index"`` index. Then, the example uses the
``delete_many`` method to delete all documents in the ``restaurants``
collection with a ``name`` field value that includes the string ``"Red"``.

.. io-code-block::
   :copyable: true

   .. input:: /includes/write/delete.rb
      :start-after: start-delete-options
      :end-before: end-delete-options
      :language: ruby
      :dedent:
   
   .. output::
      :language: console
      :visible: false

      Deleted 124 document(s)

.. tip::

   If you use the the ``delete_one`` method in the preceding example
   instead of the ``delete_many`` method, the driver deletes only the
   first document that matches the query filter.

API Documentation
-----------------

To learn more about any of the methods or types discussed in this
guide, see the following API documentation:

- :ruby-api:`delete_one <Collection.html#delete_one-instance_method>`
- :ruby-api:`delete_many <Collection.html#delete_many-instance_method>`
- :ruby-api:`Mongo::Operation::Delete::Result <Operation/Delete/Result.html>`

