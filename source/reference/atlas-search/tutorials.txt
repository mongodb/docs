.. _fts-tutorials:

=========
Tutorials
=========

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

The following tutorials take you through the steps of setting up and 
querying an |fts| index. 

.. _fts-tutorials-prereqs:

Prerequisites 
-------------

To complete these tutorials, you must have the following: 

- An |service| cluster with MongoDB version 4.2 or higher.

- The :doc:`sample datasets </sample-data>` loaded into your |service| 
  cluster. You will use a collection with movie data from the |service| 
  sample dataset.

- {+mongosh+} on your local machine.

About the Tutorials 
-------------------

- The :ref:`autocomplete-tutorial` tutorial describes how to create and 
  query an |fts| index configured with an ``autocomplete`` field using 
  the ``autocomplete`` operator. We will create the |fts| index on the 
  ``sample_mflix.movies`` collection and index ``title`` field text 
  values for autocompletion. We will run |fts| queries using 
  the ``autocomplete`` operator to search the indexed field for a 
  sequence of characters.

- The :ref:`compound-query-custom-score-tutorial` tutorial describes 
  how to create a dynamic index and run compound queries with custom 
  scoring. The queries search the ``sample_mflix.movies`` collection 
  and alter the relevance score of the documents in the result using 
  :ref:`scoring-constant`, :ref:`scoring-boost`, and 
  :ref:`scoring-function` options.

- The :ref:`facet-tutorial` tutorial describes how to create an index 
  with a facet definition for the ``sample_mflix.movies`` collection 
  and run queries against the faceted fields for results grouped by 
  values and ranges in the specified, faceted fields, including a 
  count for each of those groups.

- The :ref:`synonyms-tutorial` tutorial describes how to add a 
  collection that configures words as synonyms, create an index that 
  defines synonym mappings on the ``sample_mflix.movies`` collection, 
  and run |fts| queries against the ``title`` field using words that 
  are configured as synonyms.
  
.. toctree::
   :titlesonly:
   
   /reference/atlas-search/tutorial/autocomplete-tutorial
   /reference/atlas-search/tutorial/compound-query-custom-score
   /reference/atlas-search/tutorial/facet-tutorial
   /reference/atlas-search/tutorial/synonyms-tutorial
   