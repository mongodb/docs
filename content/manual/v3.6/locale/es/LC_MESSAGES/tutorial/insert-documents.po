# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-19 11:30-0400\n"
"PO-Revision-Date: 2013-12-16 22:45+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language: es\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-"
"manual/language/es/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/tutorial/insert-documents.txt:8
msgid "Insert Documents"
msgstr ""

#: ../source/tutorial/insert-documents.txt:16
msgid "This page provides examples of insert operations in MongoDB."
msgstr ""

#: ../source/tutorial/insert-documents.txt:18
msgid "Creating a Collection"
msgstr ""

#: ../source/tutorial/insert-documents.txt:21
#: ../source/tutorial/insert-documents.txt:597
msgid ""
"If the collection does not currently exist, insert operations will create"
" the collection."
msgstr ""

#: ../source/tutorial/insert-documents.txt:27
msgid "Insert a Single Document"
msgstr ""

#: ../source/tutorial/insert-documents.txt:301
msgid ""
"To retrieve the document that you just inserted, :ref:`query the "
"collection <document-query-filter>`:"
msgstr ""

#: ../source/tutorial/insert-documents.txt:309
msgid "Insert Multiple Documents"
msgstr ""

#: ../source/tutorial/insert-documents.txt:592
msgid "Insert Behavior"
msgstr ""

#: ../source/tutorial/insert-documents.txt:595
msgid "Collection Creation"
msgstr ""

#: ../source/tutorial/insert-documents.txt:603
msgid "``_id`` Field"
msgstr ""

#: ../source/includes/fact-id-field.rst:1
msgid ""
"In MongoDB, each document stored in a collection requires a unique "
":term:`_id` field that acts as a :term:`primary key`. If an inserted "
"document omits the ``_id`` field, the MongoDB driver automatically "
"generates an :ref:`objectid` for the ``_id`` field."
msgstr ""

#: ../source/includes/fact-id-field.rst:6
msgid ""
"This also applies to documents inserted through update operations with "
":ref:`upsert: true <upsert-parameter>`."
msgstr ""

#: ../source/tutorial/insert-documents.txt:608
msgid "Atomicity"
msgstr ""

#: ../source/tutorial/insert-documents.txt:610
msgid ""
"All write operations in MongoDB are atomic on the level of a single "
"document. For more information on MongoDB and atomicity, see :doc:`/core"
"/write-operations-atomicity`"
msgstr ""

#: ../source/tutorial/insert-documents.txt:615
msgid "Write Acknowledgement"
msgstr ""

#: ../source/tutorial/insert-documents.txt:617
msgid ""
"With write concerns, you can specify the level of acknowledgement "
"requested from MongoDB for write operations. For details, see "
":doc:`/reference/write-concern`."
msgstr ""

#~ msgid ""
#~ "In MongoDB, the :method:`db.collection.insert()` "
#~ "method adds new documents into a "
#~ "collection. In addition, both the "
#~ ":method:`db.collection.update()` method and the "
#~ ":method:`db.collection.save()` method can also "
#~ "add new documents through an operation"
#~ " called an *upsert*. An *upsert* is"
#~ " an operation that performs either an"
#~ " update of an existing document or"
#~ " an insert of a new document if"
#~ " the document to modify does not "
#~ "exist."
#~ msgstr ""

#~ msgid ""
#~ "This tutorial provides examples of "
#~ "insert operations using each of the "
#~ "three methods in the :program:`mongo` "
#~ "shell."
#~ msgstr ""

#~ msgid "Insert a Document with ``insert()`` Method"
#~ msgstr ""

#~ msgid ""
#~ "The following statement inserts a "
#~ "document with three fields into the "
#~ "collection ``inventory``:"
#~ msgstr ""

#~ msgid ""
#~ "In the example, the document has a"
#~ " user-specified ``_id`` field value "
#~ "of ``10``. The value must be "
#~ "unique within the ``inventory`` collection."
#~ msgstr ""

#~ msgid "For more examples, see :method:`~db.collection.insert()`."
#~ msgstr ""

#~ msgid "Insert a Document with ``update()`` Method"
#~ msgstr ""

#~ msgid ""
#~ "Call the :method:`~db.collection.update()` method"
#~ " with the ``upsert`` flag to create"
#~ " a new document if no document "
#~ "matches the update's query criteria. "
#~ "[#previous-versions-upsert]_"
#~ msgstr ""

#~ msgid ""
#~ "The following example creates a new "
#~ "document if no document in the "
#~ "``inventory`` collection contains ``{ type:"
#~ " \"books\", item : \"journal\" }``:"
#~ msgstr ""

#~ msgid ""
#~ "MongoDB adds the ``_id`` field and "
#~ "assigns as its value a unique "
#~ "ObjectId. The new document includes the"
#~ " ``item`` and ``type`` fields from "
#~ "the ``<query>`` criteria and the ``qty``"
#~ " field from the ``<update>`` parameter."
#~ msgstr ""

#~ msgid "For more examples, see :method:`~db.collection.update()`."
#~ msgstr ""

#~ msgid ""
#~ "Prior to version 2.2, in the "
#~ ":program:`mongo` shell, you would specify "
#~ "the ``upsert`` and the ``multi`` options"
#~ " in the :method:`~db.collection.update()` method"
#~ " as positional boolean options. See "
#~ ":method:`~db.collection.update()` for details."
#~ msgstr ""

#~ msgid "Insert a Document with ``save()`` Method"
#~ msgstr ""

#~ msgid ""
#~ "To insert a document with the "
#~ ":method:`~db.collection.save()` method, pass the "
#~ "method a document that does not "
#~ "contain the ``_id`` field or a "
#~ "document that contains an ``_id`` field"
#~ " that does not exist in the "
#~ "collection."
#~ msgstr ""

#~ msgid ""
#~ "The following example creates a new "
#~ "document in the ``inventory`` collection:"
#~ msgstr ""

#~ msgid ""
#~ "MongoDB adds the ``_id`` field and "
#~ "assigns as its value a unique "
#~ "ObjectId."
#~ msgstr ""

#~ msgid "For more examples, see :method:`~db.collection.save()`."
#~ msgstr ""

#~ msgid ""
#~ "In MongoDB, the :method:`db.collection.insert()` "
#~ "method adds new documents into a "
#~ "collection."
#~ msgstr ""

#~ msgid "Insert a Document"
#~ msgstr ""

#~ msgid "Insert a document into a collection."
#~ msgstr ""

#~ msgid ""
#~ "Insert a document into a collection "
#~ "named ``inventory``. The operation will "
#~ "create the collection if the collection"
#~ " does not currently exist."
#~ msgstr ""

#~ msgid ""
#~ "The operation returns a :method:`WriteResult`"
#~ " object with the status of the "
#~ "operation. A successful insert of the"
#~ " document returns the following object:"
#~ msgstr ""

#~ msgid ""
#~ "The :data:`~WriteResult.nInserted` field specifies"
#~ " the number of documents inserted. If"
#~ " the operation encounters an error, "
#~ "the :method:`WriteResult` object will contain"
#~ " the error information."
#~ msgstr ""

#~ msgid "Review the inserted document."
#~ msgstr ""

#~ msgid ""
#~ "If the insert operation is successful,"
#~ " verify the insertion by querying the"
#~ " collection."
#~ msgstr ""

#~ msgid "The document you inserted should return."
#~ msgstr ""

#~ msgid ""
#~ "The returned document shows that MongoDB"
#~ " added an ``_id`` field to the "
#~ "document. If a client inserts a "
#~ "document that does not contain the "
#~ "``_id`` field, MongoDB adds the field"
#~ " with the value set to a "
#~ "generated :manual:`ObjectId </reference/object-id>`."
#~ " The :manual:`ObjectId </reference/object-id>`"
#~ " values in your documents will differ"
#~ " from the ones shown."
#~ msgstr ""

#~ msgid "Insert an Array of Documents"
#~ msgstr ""

#~ msgid ""
#~ "You can pass an array of documents"
#~ " to the :method:`db.collection.insert()` method"
#~ " to insert multiple documents."
#~ msgstr ""

#~ msgid "Create an array of documents."
#~ msgstr ""

#~ msgid ""
#~ "Define a variable ``mydocuments`` that "
#~ "holds an array of documents to "
#~ "insert."
#~ msgstr ""

#~ msgid "Insert the documents."
#~ msgstr ""

#~ msgid ""
#~ "Pass the ``mydocuments`` array to the"
#~ " :method:`db.collection.insert()` to perform a"
#~ " bulk insert."
#~ msgstr ""

#~ msgid ""
#~ "The method returns a :method:`BulkWriteResult`"
#~ " object with the status of the "
#~ "operation. A successful insert of the"
#~ " documents returns the following object:"
#~ msgstr ""

#~ msgid ""
#~ "The :data:`~BulkWriteResult.nInserted` field "
#~ "specifies the number of documents "
#~ "inserted. If the operation encounters an"
#~ " error, the :method:`BulkWriteResult` object "
#~ "will contain information regarding the "
#~ "error."
#~ msgstr ""

#~ msgid ""
#~ "The inserted documents will each have"
#~ " an ``_id`` field added by MongoDB."
#~ msgstr ""

#~ msgid "Insert Multiple Documents with ``Bulk``"
#~ msgstr ""

#~ msgid ""
#~ "MongoDB provides a :method:`Bulk()` API "
#~ "that you can use to perform "
#~ "multiple write operations in bulk. The"
#~ " following sequence of operations describes"
#~ " how you would use the "
#~ ":method:`Bulk()` API to insert a group"
#~ " of documents into a MongoDB "
#~ "collection."
#~ msgstr ""

#~ msgid "Initialize a ``Bulk`` operations builder."
#~ msgstr ""

#~ msgid ""
#~ "Initialize a :method:`Bulk` operations builder"
#~ " for the collection ``inventory``."
#~ msgstr ""

#~ msgid ""
#~ "The operation returns an unordered "
#~ "operations builder which maintains a "
#~ "list of operations to perform. Unordered"
#~ " operations means that MongoDB can "
#~ "execute in parallel as well as in"
#~ " nondeterministic order. If an error "
#~ "occurs during the processing of one "
#~ "of the write operations, MongoDB will"
#~ " continue to process remaining write "
#~ "operations in the list."
#~ msgstr ""

#~ msgid ""
#~ "You can also initialize an ordered "
#~ "operations builder; see "
#~ ":method:`db.collection.initializeOrderedBulkOp()` for "
#~ "details."
#~ msgstr ""

#~ msgid "Add insert operations to the ``bulk`` object."
#~ msgstr ""

#~ msgid ""
#~ "Add two insert operations to the "
#~ "``bulk`` object using the "
#~ ":method:`Bulk.insert()` method."
#~ msgstr ""

#~ msgid "Execute the bulk operation."
#~ msgstr ""

#~ msgid ""
#~ "Call the :method:`~Bulk.execute()` method on"
#~ " the ``bulk`` object to execute the"
#~ " operations in its list."
#~ msgstr ""

#~ msgid "Additional Examples and Methods"
#~ msgstr ""

#~ msgid "For more examples, see :method:`db.collection.insert()`."
#~ msgstr ""

#~ msgid ""
#~ "The :method:`db.collection.update()` method, the "
#~ ":method:`db.collection.findAndModify()`, and the "
#~ ":method:`db.collection.save()` method can also "
#~ "add new documents. See the individual"
#~ " reference pages for the methods for"
#~ " more information and examples."
#~ msgstr ""

