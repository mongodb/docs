.. _golang-retrieve-distinct:

========================
Retrieve Distinct Values
========================

.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: read operation, code example

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

In this guide, you can learn how to retrieve distinct values for a
specified field across a single collection.

Sample Data
~~~~~~~~~~~

The example in this guide uses the following ``Course`` struct as a model for documents
in the ``courses`` collection:

.. literalinclude:: /includes/fundamentals/code-snippets/CRUD/distinctValues.go
   :start-after: start-course-struct
   :end-before: end-course-struct
   :language: go
   :dedent:

To run the example, load the sample data into the
``db.courses`` collection with the following
snippet:

.. literalinclude:: /includes/fundamentals/code-snippets/CRUD/distinctValues.go
   :language: go
   :dedent:
   :start-after: begin insert docs
   :end-before: end insert docs

.. include:: /includes/fundamentals/automatic-db-coll-creation.rst

Each document contains a description of a university course that
includes the course title, department, and enrollment. These items
correspond to the ``title``, ``department``, and ``enrollment`` fields
in each document.

Distinct
--------

To retrieve distinct values for a specified field across a single
collection, pass the following parameters to the ``Distinct()``
method:

- The field name you want distinct values for 
- A ``non-nil`` query filter specifying which documents to match

.. tip::

   If you specify an empty query filter, the ``Distinct()`` method
   searches for distinct values across all documents in a collection.

Modify Behavior
~~~~~~~~~~~~~~~

You can modify the behavior of the ``Distinct()`` method by
passing in a ``DistinctOptions``. If you don't specify a
``DistinctOptions``, the driver uses the default values for each
option.

The ``DistinctOptions`` type allows you to configure options
with the following methods:

.. list-table::
   :widths: 30 70
   :header-rows: 1

   * - Method
     - Description

   * - ``SetCollation()``
     - | The type of language collation to use when sorting results.  
       | Default: ``nil``

   * - ``SetMaxTime()`` 
     - | The maximum amount of time that the query can run on the server.
       | Default: ``nil``

Example
```````

The following example matches documents with an ``enrollment`` field
value less than ``50`` and prints the distinct values
of the ``department`` field using the ``Distinct()`` method: 

.. io-code-block::
   :copyable: true

   .. input::
      :language: go

      results, err := coll.Distinct(context.TODO(), "department", bson.D{{"enrollment", bson.D{{"$lt", 50}}}})
      if err != nil {
          panic(err)
      }
      
      for _, result := range results {
          fmt.Println(result)
      }

   .. output::
      :language: none
      :visible: false

      Earth Science
      English

Additional Information
----------------------

For a runnable example of retrieving distinct values, see :ref:`golang-distinct-usage-example`.

To learn about constructing a query filter, see :ref:`golang-query-document`.

API Documentation
~~~~~~~~~~~~~~~~~

To learn more about any of the methods or types discussed in this
guide, see the following API Documentation:

- `Distinct() <{+api+}/mongo#Collection.Distinct>`__
- `DistinctOptions <{+api+}/mongo/options#DistinctOptions>`__
