.. _kotlin-usage-findone:

===============
Find a Document
===============

You can retrieve a single document in a collection by chaining together
the ``find()`` and ``first()`` methods on a ``MongoCollection`` object.
You can pass a query filter to the ``find()`` method to query for and
return documents that match the filter in the collection. If you do not
include a filter, MongoDB returns all the documents in the collection.

For more information on querying MongoDB with the Kotlin driver, see our
:doc:`guide on Querying Documents </fundamentals/crud/read-operations/retrieve/>`.

You can also chain other methods to the ``find()`` method
such as ``sort()`` which organizes the matched documents in a specified order, and 
``projection()`` which configures the fields included in the returned documents.

For more information on the ``sort()`` method, see our
:doc:`guide on Sorting </fundamentals/crud/read-operations/sort/>`.
For more information on the ``projection()`` method, see our
:doc:`guide on Projections </fundamentals/crud/read-operations/project/>`

The ``find()`` method returns an instance of ``FindFlow``, a class
that offers several methods to access, organize, and traverse the results.

``FindFlow`` also obtains methods from its delegate interface ``Flow`` from the
Kotlin Coroutines library, such as ``first()`` and ``firstOrNull()``.
The ``firstOrNull()`` method returns the first document from the retrieved results
or ``null`` if there are no results. The ``first()`` method returns 
the first document or throws a ``NoSuchElementException`` exception if no 
documents match the query.

For more information on accessing data from a flow with the Kotlin driver, see our
:doc:`guide on Accessing Data From a Flow </fundamentals/crud/read-operations/flow/>`.

Example
-------

The following snippet finds a single document from the ``movies`` collection.
It uses the following objects and methods:

- A **query filter** that is passed to the ``find()`` method. The ``eq``
  filter matches only movies with the title exactly matching the text
  ``"The Room"``.

- A **sort** that organizes matched documents in descending order by
  rating, so if our query matches multiple documents the returned
  document is the one with the highest rating.

- A **projection** that includes the objects in the ``title`` and ``imdb``
  fields and excludes the ``_id`` field using the helper method
  ``excludeId()``.

.. include:: /includes/connect-guide-note.rst

.. literalinclude:: /examples/generated/FindOne.snippet.find-one-usage-example.kt
   :language: kotlin
  
For additional information on the classes and methods mentioned on this
page, see the following API Documentation:

- `FindFlow <{+api+}/apidocs/mongodb-driver-kotlin-coroutine/mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-find-flow/index.html>`__
- `find() <{+api+}/apidocs/mongodb-driver-kotlin-coroutine/mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/find.html>`__

